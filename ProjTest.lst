

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Tue Oct 29 14:59:19 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,delta=2
    15                           	psect	text823,local,class=CODE,delta=2
    16                           	psect	text825,local,class=CODE,delta=2
    17                           	psect	text826,local,class=CODE,delta=2
    18                           	psect	text827,local,class=CODE,delta=2
    19                           	psect	text832,local,class=CODE,delta=2
    20                           	psect	text833,local,class=CODE,delta=2
    21                           	psect	text834,local,class=CODE,delta=2
    22                           	psect	text835,local,class=CODE,delta=2
    23                           	psect	text836,local,class=CODE,delta=2
    24                           	psect	text837,local,class=CODE,delta=2
    25                           	psect	text838,local,class=CODE,delta=2
    26                           	psect	text839,local,class=CODE,delta=2
    27                           	psect	text840,local,class=CODE,delta=2
    28                           	psect	text841,local,class=CODE,delta=2
    29                           	psect	text842,local,class=CODE,delta=2
    30                           	psect	text845,local,class=CODE,delta=2
    31                           	psect	text846,local,class=CODE,delta=2
    32                           	psect	text847,local,class=CODE,delta=2
    33                           	psect	text848,local,class=CODE,delta=2
    34                           	psect	text849,local,class=CODE,delta=2
    35                           	psect	text850,local,class=CODE,delta=2
    36                           	psect	text851,local,class=CODE,delta=2
    37                           	psect	text852,local,class=CODE,delta=2
    38                           	psect	text860,local,class=CODE,delta=2
    39                           	psect	text861,local,class=CODE,delta=2
    40                           	psect	text862,local,class=CODE,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	text866,local,class=CODE,delta=2
    43                           	psect	pa_nodes,global,class=CODE,delta=2
    44                           	dabs	1,0x7E,2
    45  000A                     	;#
    46                           
    47                           	psect	config
    48  2000  0FFF               	dw	4095	;#
    49  2001  3BBE               	dw	15294	;#
    50  2002  3EF8               	dw	16120	;#
    51                           
    52                           	psect	idataBANK0
    53  0000                     __pidataBANK0:	
    54  001F                     _ADCON0	set	31
    55  001E                     _ADRESH	set	30
    56  0017                     _CCP1CON	set	23
    57  0015                     _CCPR1L	set	21
    58  0010                     _T1CON	set	16
    59  0012                     _T2CON	set	18
    60  000F                     _TMR1H	set	15
    61  000E                     _TMR1L	set	14
    62  006A                     _ADIF	set	106
    63  00F8                     _ADON	set	248
    64  005F                     _GIE	set	95
    65  00F9                     _GO	set	249
    66  0032                     _PB2	set	50
    67  0033                     _PB3	set	51
    68  0034                     _PB4	set	52
    69  0035                     _PB5	set	53
    70  005E                     _PEIE	set	94
    71  0060                     _TMR1IF	set	96
    72  009F                     _ADCON1	set	159
    73  009E                     _ADRESL	set	158
    74  0092                     _PR2	set	146
    75  046A                     _ADIE	set	1130
    76  0460                     _TMR1IE	set	1120
    77  0430                     _TRISB0	set	1072
    78  0431                     _TRISB1	set	1073
    79  0432                     _TRISB2	set	1074
    80  0433                     _TRISB3	set	1075
    81  0434                     _TRISB4	set	1076
    82  0435                     _TRISB5	set	1077
    83  0108                     _CLKPR	set	264
    84  0847                     _CLKPCE	set	2119
    85  0C42                     _PBOD2	set	3138
    86                           
    87                           	psect	cinit
    88  03EC                     start_initialization:	
    89  03EC  3049               	movlw	low __pbssBANK0
    90                           
    91                           ; Clear objects allocated to COMMON
    92  03ED  01FD               	clrf	__pbssCOMMON& (0+127)
    93                           
    94                           ; Clear objects allocated to BANK0
    95  03EE  1383               	bcf	3,7	;select IRP bank0
    96  03EF  0084               	movwf	4
    97  03F0  3069               	movlw	low (__pbssBANK0+32)
    98  03F1  118A  2483  118A   	fcall	clear_ram
    99                           
   100                           ; Clear objects allocated to BANK1
   101  03F4  30A0               	movlw	low __pbssBANK1
   102  03F5  0084               	movwf	4
   103  03F6  30E8               	movlw	low (__pbssBANK1+72)
   104  03F7  118A  2483         	fcall	clear_ram
   105                           
   106                           ;initializer for _sampleChannelSelect
   107  03F9  300C               	movlw	12
   108  03FA  00E9               	movwf	__pdataBANK0& (0+127)
   109  03FB                     end_of_initialization:	
   110                           ;End of C runtime variable initialization code
   111                           
   112  03FB  0183               	clrf	3
   113  03FC  118A  2813         	ljmp	_main	;jump to C main() function
   114                           
   115                           	psect	bssCOMMON
   116  007D                     __pbssCOMMON:	
   117  007D                     vPutSampleDataIntoTable@ucChannelFirstLength:	
   118  007D                     	ds	1
   119                           
   120                           	psect	bssBANK0
   121  0049                     __pbssBANK0:	
   122  0049                     _uiBigTimer:	
   123  0049                     	ds	2
   124  004B                     _uiOneHourTimer:	
   125  004B                     	ds	2
   126  004D                     _uiSmallTimer:	
   127  004D                     	ds	2
   128  004F                     _uiTwentyMinTimer:	
   129  004F                     	ds	2
   130  0051                     _uiTwentySecondsTimer:	
   131  0051                     	ds	2
   132  0053                     main@uiTimerOneP5s:	
   133  0053                     	ds	2
   134  0055                     main@uiTimerP5s:	
   135  0055                     	ds	2
   136  0057                     main@uiTimerTwoP5s:	
   137  0057                     	ds	2
   138  0059                     ISR@ucTimer1sCnt:	
   139  0059                     	ds	1
   140  005A                     _adc_convert_flag:	
   141  005A                     	ds	1
   142  005B                     _bBigTimerStartFlag:	
   143  005B                     	ds	1
   144  005C                     _bOneHourTimerStartFlag:	
   145  005C                     	ds	1
   146  005D                     _bSmallTimerStartFlag:	
   147  005D                     	ds	1
   148  005E                     _bTwentyMinStartFlag:	
   149  005E                     	ds	1
   150  005F                     _sampleTimes:	
   151  005F                     	ds	1
   152  0060                     _timer:	
   153  0060                     	ds	1
   154  0061                     main@cTimerP5s_783:	
   155  0061                     	ds	1
   156  0062                     main@cTimerP5s_787:	
   157  0062                     	ds	1
   158  0063                     main@ucDebug1:	
   159  0063                     	ds	1
   160  0064                     main@ucDebug2:	
   161  0064                     	ds	1
   162  0065                     main@ucStep:	
   163  0065                     	ds	1
   164  0066                     main@ucTimerP5s:	
   165  0066                     	ds	1
   166  0067                     vPutSampleDataIntoTable@ucChannelFourteenthLength:	
   167  0067                     	ds	1
   168  0068                     vPutSampleDataIntoTable@ucChannelFourthLength:	
   169  0068                     	ds	1
   170                           
   171                           	psect	dataBANK0
   172  0069                     __pdataBANK0:	
   173  0069                     _sampleChannelSelect:	
   174  0069                     	ds	1
   175                           
   176                           	psect	bssBANK1
   177  00A0                     __pbssBANK1:	
   178  00A0                     _uiSampleChannelFirst:	
   179  00A0                     	ds	24
   180  00B8                     _uiSampleChannelFourteenth:	
   181  00B8                     	ds	24
   182  00D0                     _uiSampleChannelFourth:	
   183  00D0                     	ds	24
   184                           
   185                           	psect	clrtext
   186  0483                     clear_ram:	
   187                           ;	Called with FSR containing the base address, and
   188                           ;	W with the last address+1
   189                           
   190  0483  0064               	clrwdt	;clear the watchdog before getting into this loop
   191  0484                     clrloop:	
   192  0484  0180               	clrf	0	;clear RAM location pointed to by FSR
   193  0485  0A84               	incf	4,f	;increment pointer
   194  0486  0604               	xorwf	4,w	;XOR with final address
   195  0487  1903               	btfsc	3,2	;have we reached the end yet?
   196  0488  3400               	retlw	0	;all done for this memory range, return
   197  0489  0604               	xorwf	4,w	;XOR again to restore value
   198  048A  2C84               	goto	clrloop	;do the next byte
   199                           
   200                           	psect	cstackCOMMON
   201  0070                     __pcstackCOMMON:	
   202  0070                     ?_clearTwelveHoursTimer:	
   203  0070                     ?_clearThreeHoursTimer:	
   204                           ; 0 bytes @ 0x0
   205                           
   206  0070                     ?_clock_config:	
   207                           ; 0 bytes @ 0x0
   208                           
   209  0070                     ?_timer1_config:	
   210                           ; 0 bytes @ 0x0
   211                           
   212  0070                     ?_timer1_interrupt_config:	
   213                           ; 0 bytes @ 0x0
   214                           
   215  0070                     ?_adc_start:	
   216                           ; 0 bytes @ 0x0
   217                           
   218  0070                     ?_process_AD_Converter_Value:	
   219                           ; 0 bytes @ 0x0
   220                           
   221  0070                     ?_clrSampeTime:	
   222                           ; 0 bytes @ 0x0
   223                           
   224  0070                     ?_clearTwentyMinTimer:	
   225                           ; 0 bytes @ 0x0
   226                           
   227  0070                     ?_AD_Sample:	
   228                           ; 0 bytes @ 0x0
   229                           
   230  0070                     ?_initPB3:	
   231                           ; 0 bytes @ 0x0
   232                           
   233  0070                     ?_setPB3:	
   234                           ; 0 bytes @ 0x0
   235                           
   236  0070                     ?_initPB4:	
   237                           ; 0 bytes @ 0x0
   238                           
   239  0070                     ?_setPB4:	
   240                           ; 0 bytes @ 0x0
   241                           
   242  0070                     ?_initPB5:	
   243                           ; 0 bytes @ 0x0
   244                           
   245  0070                     ?_setPB5:	
   246                           ; 0 bytes @ 0x0
   247                           
   248  0070                     ?_initPB2_AsHighResistence:	
   249                           ; 0 bytes @ 0x0
   250                           
   251  0070                     ?_pwm_start:	
   252                           ; 0 bytes @ 0x0
   253                           
   254  0070                     ?_pwm_config:	
   255                           ; 0 bytes @ 0x0
   256                           
   257  0070                     ?_initPin:	
   258                           ; 0 bytes @ 0x0
   259                           
   260  0070                     ?_setPinInitVaule:	
   261                           ; 0 bytes @ 0x0
   262                           
   263  0070                     ?_selectAdChannel:	
   264                           ; 0 bytes @ 0x0
   265                           
   266  0070                     ?_setPulseWidth:	
   267                           ; 0 bytes @ 0x0
   268                           
   269  0070                     ?_reset:	
   270                           ; 0 bytes @ 0x0
   271                           
   272  0070                     ?_main:	
   273                           ; 0 bytes @ 0x0
   274                           
   275  0070                     ?_setAD_ConvertFlag:	
   276                           ; 0 bytes @ 0x0
   277                           
   278  0070                     ?_ISR:	
   279                           ; 0 bytes @ 0x0
   280                           
   281  0070                     ?i1_setAD_ConvertFlag:	
   282                           ; 0 bytes @ 0x0
   283                           
   284  0070                     ??i1_setAD_ConvertFlag:	
   285                           ; 0 bytes @ 0x0
   286                           
   287  0070                     ?_isPermitSampleTime:	
   288                           ; 0 bytes @ 0x0
   289                           
   290  0070                     ?_isFinishedTwentyMinTimer:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0070                     ?_isFinishedTwelveHoursTimer:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0070                     ?_isFinishedThreeHoursTimer:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0070                     ?_isFinishedOneHoursTimer:	
   300                           ; 1 bytes @ 0x0
   301                           
   302  0070                     ?_getAD_ConvertFlag:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0070                     ?_adc_get:	
   306                           ; 1 bytes @ 0x0
   307                           
   308  0070                     i1setAD_ConvertFlag@flag:	
   309                           ; 2 bytes @ 0x0
   310                           
   311                           
   312                           ; 1 bytes @ 0x0
   313  0070                     	ds	2
   314  0072                     ??_adc_get:	
   315  0072                     adc_get@val:	
   316                           ; 0 bytes @ 0x2
   317                           
   318                           
   319                           ; 2 bytes @ 0x2
   320  0072                     	ds	2
   321  0074                     ?_vPutSampleDataIntoTable:	
   322  0074                     vPutSampleDataIntoTable@uiSampleData:	
   323                           ; 0 bytes @ 0x4
   324                           
   325                           
   326                           ; 2 bytes @ 0x4
   327  0074                     	ds	2
   328  0076                     vPutSampleDataIntoTable@channel:	
   329                           
   330                           ; 1 bytes @ 0x6
   331  0076                     	ds	1
   332  0077                     ??_vPutSampleDataIntoTable:	
   333  0077                     vPutSampleDataIntoTable@i:	
   334                           ; 0 bytes @ 0x7
   335                           
   336                           
   337                           ; 2 bytes @ 0x7
   338  0077                     	ds	2
   339  0079                     ??_ISR:	
   340                           
   341                           ; 0 bytes @ 0x9
   342  0079                     	ds	4
   343                           
   344                           	psect	cstackBANK0
   345  0020                     __pcstackBANK0:	
   346  0020                     ??_clearTwelveHoursTimer:	
   347  0020                     ??_clearThreeHoursTimer:	
   348                           ; 0 bytes @ 0x0
   349                           
   350  0020                     ??_clock_config:	
   351                           ; 0 bytes @ 0x0
   352                           
   353  0020                     ??_timer1_config:	
   354                           ; 0 bytes @ 0x0
   355                           
   356  0020                     ??_timer1_interrupt_config:	
   357                           ; 0 bytes @ 0x0
   358                           
   359  0020                     ?_adc_test_init:	
   360                           ; 0 bytes @ 0x0
   361                           
   362  0020                     ??_adc_start:	
   363                           ; 0 bytes @ 0x0
   364                           
   365  0020                     ?_startTwentyMinTimer:	
   366                           ; 0 bytes @ 0x0
   367                           
   368  0020                     ??_isPermitSampleTime:	
   369                           ; 0 bytes @ 0x0
   370                           
   371  0020                     ??_clrSampeTime:	
   372                           ; 0 bytes @ 0x0
   373                           
   374  0020                     ??_isFinishedTwentyMinTimer:	
   375                           ; 0 bytes @ 0x0
   376                           
   377  0020                     ??_clearTwentyMinTimer:	
   378                           ; 0 bytes @ 0x0
   379                           
   380  0020                     ?_startTwelveHourTimer:	
   381                           ; 0 bytes @ 0x0
   382                           
   383  0020                     ??_isFinishedTwelveHoursTimer:	
   384                           ; 0 bytes @ 0x0
   385                           
   386  0020                     ?_startThreeHoursTimer:	
   387                           ; 0 bytes @ 0x0
   388                           
   389  0020                     ??_isFinishedThreeHoursTimer:	
   390                           ; 0 bytes @ 0x0
   391                           
   392  0020                     ?_startOneHoursTimer:	
   393                           ; 0 bytes @ 0x0
   394                           
   395  0020                     ??_isFinishedOneHoursTimer:	
   396                           ; 0 bytes @ 0x0
   397                           
   398  0020                     ??_AD_Sample:	
   399                           ; 0 bytes @ 0x0
   400                           
   401  0020                     ??_initPB3:	
   402                           ; 0 bytes @ 0x0
   403                           
   404  0020                     ??_setPB3:	
   405                           ; 0 bytes @ 0x0
   406                           
   407  0020                     ??_initPB4:	
   408                           ; 0 bytes @ 0x0
   409                           
   410  0020                     ??_setPB4:	
   411                           ; 0 bytes @ 0x0
   412                           
   413  0020                     ??_initPB5:	
   414                           ; 0 bytes @ 0x0
   415                           
   416  0020                     ??_setPB5:	
   417                           ; 0 bytes @ 0x0
   418                           
   419  0020                     ??_initPB2_AsHighResistence:	
   420                           ; 0 bytes @ 0x0
   421                           
   422  0020                     ??_pwm_start:	
   423                           ; 0 bytes @ 0x0
   424                           
   425  0020                     ??_pwm_config:	
   426                           ; 0 bytes @ 0x0
   427                           
   428  0020                     ??_selectAdChannel:	
   429                           ; 0 bytes @ 0x0
   430                           
   431  0020                     ??_setPulseWidth:	
   432                           ; 0 bytes @ 0x0
   433                           
   434  0020                     ??_reset:	
   435                           ; 0 bytes @ 0x0
   436                           
   437  0020                     ??_getAD_ConvertFlag:	
   438                           ; 0 bytes @ 0x0
   439                           
   440  0020                     ??_setAD_ConvertFlag:	
   441                           ; 0 bytes @ 0x0
   442                           
   443  0020                     ?_Filter:	
   444                           ; 0 bytes @ 0x0
   445                           
   446  0020                     initPB3@bValue:	
   447                           ; 2 bytes @ 0x0
   448                           
   449  0020                     setPB3@bValue:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0020                     initPB4@bValue:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0020                     setPB4@bValue:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0020                     initPB5@bValue:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0020                     setPB5@bValue:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0020                     pwm_start@ucPulseWidth:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  0020                     pwm_config@state:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0020                     setAD_ConvertFlag@flag:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  0020                     adc_test_init@ref:	
   474                           ; 1 bytes @ 0x0
   475                           
   476  0020                     startTwelveHourTimer@uiSetTime:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0020                     startThreeHoursTimer@uiSetTime:	
   480                           ; 2 bytes @ 0x0
   481                           
   482  0020                     startOneHoursTimer@uiSetTime:	
   483                           ; 2 bytes @ 0x0
   484                           
   485  0020                     startTwentyMinTimer@uiSetValue:	
   486                           ; 2 bytes @ 0x0
   487                           
   488                           
   489                           ; 2 bytes @ 0x0
   490  0020                     	ds	1
   491  0021                     ??_adc_test_init:	
   492  0021                     ??_initPin:	
   493                           ; 0 bytes @ 0x1
   494                           
   495  0021                     ??_setPinInitVaule:	
   496                           ; 0 bytes @ 0x1
   497                           
   498                           
   499                           ; 0 bytes @ 0x1
   500  0021                     	ds	1
   501  0022                     ??_startTwentyMinTimer:	
   502  0022                     ??_startTwelveHourTimer:	
   503                           ; 0 bytes @ 0x2
   504                           
   505  0022                     ??_startThreeHoursTimer:	
   506                           ; 0 bytes @ 0x2
   507                           
   508  0022                     ??_startOneHoursTimer:	
   509                           ; 0 bytes @ 0x2
   510                           
   511  0022                     ??_Filter:	
   512                           ; 0 bytes @ 0x2
   513                           
   514  0022                     adc_test_init@channel:	
   515                           ; 0 bytes @ 0x2
   516                           
   517                           
   518                           ; 1 bytes @ 0x2
   519  0022                     	ds	1
   520  0023                     ??_process_AD_Converter_Value:	
   521                           
   522                           ; 0 bytes @ 0x3
   523  0023                     	ds	3
   524  0026                     Filter@filter_buf:	
   525                           
   526                           ; 24 bytes @ 0x6
   527  0026                     	ds	24
   528  003E                     Filter@filter_temp:	
   529                           
   530                           ; 2 bytes @ 0x1E
   531  003E                     	ds	2
   532  0040                     Filter@filter_sum:	
   533                           
   534                           ; 2 bytes @ 0x20
   535  0040                     	ds	2
   536  0042                     Filter@tmpValue:	
   537                           
   538                           ; 1 bytes @ 0x22
   539  0042                     	ds	1
   540  0043                     Filter@cir:	
   541                           
   542                           ; 2 bytes @ 0x23
   543  0043                     	ds	2
   544  0045                     Filter@j:	
   545                           
   546                           ; 1 bytes @ 0x25
   547  0045                     	ds	1
   548  0046                     Filter@i:	
   549                           
   550                           ; 1 bytes @ 0x26
   551  0046                     	ds	1
   552  0047                     ?_getAdOriginalCh13Value:	
   553  0047                     ?_getAdOriginalCh12Value:	
   554                           ; 2 bytes @ 0x27
   555                           
   556                           
   557                           ; 2 bytes @ 0x27
   558  0047                     	ds	2
   559  0049                     ??_getAdOriginalCh13Value:	
   560  0049                     ??_getAdOriginalCh12Value:	
   561                           ; 0 bytes @ 0x29
   562                           
   563  0049                     ??_main:	
   564                           ; 0 bytes @ 0x29
   565                           
   566                           
   567                           	psect	maintext
   568  0013                     __pmaintext:	
   569                           ; 0 bytes @ 0x29
   570 ;;Data sizes: Strings 0, constant 0, data 1, bss 105, persistent 0 stack 0
   571 ;;Auto spaces:   Size  Autos    Used
   572 ;; COMMON          14     13      14
   573 ;; BANK0           80     41      74
   574 ;; BANK1           80      0      72
   575 ;; BANK3           96      0       0
   576 ;; BANK2           96      0       0
   577 ;;
   578 ;; Pointer list with targets:
   579 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   580 ;;
   581 ;; ?_getAdOriginalCh13Value	unsigned int  size(1) Largest target is 0
   582 ;;
   583 ;; ?_getAdOriginalCh12Value	unsigned int  size(1) Largest target is 0
   584 ;;
   585 ;; ?_Filter	unsigned int  size(1) Largest target is 0
   586 ;;
   587 ;; Filter@tmpValue	PTR int  size(1) Largest target is 24
   588 ;;		 -> uiSampleChannelFourteenth(BANK1[24]), uiSampleChannelFourth(BANK1[24]), uiSampleChannelFirst(BANK1[24]), 
   589 ;;
   590 ;;
   591 ;; Critical Paths under _main in COMMON
   592 ;;
   593 ;;   None.
   594 ;;
   595 ;; Critical Paths under _ISR in COMMON
   596 ;;
   597 ;;   _ISR->_vPutSampleDataIntoTable
   598 ;;   _vPutSampleDataIntoTable->_adc_get
   599 ;;
   600 ;; Critical Paths under _main in BANK0
   601 ;;
   602 ;;   _main->_getAdOriginalCh13Value
   603 ;;   _main->_getAdOriginalCh12Value
   604 ;;   _getAdOriginalCh12Value->_Filter
   605 ;;   _getAdOriginalCh13Value->_Filter
   606 ;;   _process_AD_Converter_Value->_adc_test_init
   607 ;;   _setPinInitVaule->_setPB3
   608 ;;   _setPinInitVaule->_setPB4
   609 ;;   _setPinInitVaule->_setPB5
   610 ;;   _initPin->_initPB3
   611 ;;   _initPin->_initPB4
   612 ;;   _initPin->_initPB5
   613 ;;
   614 ;; Critical Paths under _ISR in BANK0
   615 ;;
   616 ;;   None.
   617 ;;
   618 ;; Critical Paths under _main in BANK1
   619 ;;
   620 ;;   None.
   621 ;;
   622 ;; Critical Paths under _ISR in BANK1
   623 ;;
   624 ;;   None.
   625 ;;
   626 ;; Critical Paths under _main in BANK3
   627 ;;
   628 ;;   None.
   629 ;;
   630 ;; Critical Paths under _ISR in BANK3
   631 ;;
   632 ;;   None.
   633 ;;
   634 ;; Critical Paths under _main in BANK2
   635 ;;
   636 ;;   None.
   637 ;;
   638 ;; Critical Paths under _ISR in BANK2
   639 ;;
   640 ;;   None.
   641 ;;
   642 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   643 ;;
   644 ;;
   645 ;;Call Graph Tables:
   646 ;;
   647 ;; ---------------------------------------------------------------------------------
   648 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   649 ;; ---------------------------------------------------------------------------------
   650 ;; (0) _main                                                 0     0      0    1680
   651 ;;                            _initPin
   652 ;;                    _setPinInitVaule
   653 ;;                    _selectAdChannel
   654 ;;                       _clock_config
   655 ;;                      _timer1_config
   656 ;;            _timer1_interrupt_config
   657 ;;                      _adc_test_init
   658 ;;                          _adc_start
   659 ;;                _startTwentyMinTimer
   660 ;;         _process_AD_Converter_Value
   661 ;;                 _isPermitSampleTime
   662 ;;                       _clrSampeTime
   663 ;;           _isFinishedTwentyMinTimer
   664 ;;             _getAdOriginalCh13Value
   665 ;;                             _setPB5
   666 ;;             _getAdOriginalCh12Value
   667 ;;                             _setPB4
   668 ;;                             _setPB3
   669 ;;                          _pwm_start
   670 ;;                         _pwm_config
   671 ;;                _clearTwentyMinTimer
   672 ;;               _startTwelveHourTimer
   673 ;;         _isFinishedTwelveHoursTimer
   674 ;;              _clearTwelveHoursTimer
   675 ;;               _startThreeHoursTimer
   676 ;;          _isFinishedThreeHoursTimer
   677 ;;               _clearThreeHoursTimer
   678 ;;                 _startOneHoursTimer
   679 ;;            _isFinishedOneHoursTimer
   680 ;;                              _reset
   681 ;;                      _setPulseWidth
   682 ;; ---------------------------------------------------------------------------------
   683 ;; (1) _getAdOriginalCh12Value                               2     0      2     620
   684 ;;                                             39 BANK0      2     0      2
   685 ;;                             _Filter
   686 ;; ---------------------------------------------------------------------------------
   687 ;; (1) _getAdOriginalCh13Value                               2     0      2     620
   688 ;;                                             39 BANK0      2     0      2
   689 ;;                             _Filter
   690 ;; ---------------------------------------------------------------------------------
   691 ;; (1) _process_AD_Converter_Value                           0     0      0      66
   692 ;;                  _getAD_ConvertFlag
   693 ;;                  _setAD_ConvertFlag
   694 ;;                          _AD_Sample
   695 ;;                      _adc_test_init
   696 ;;                          _adc_start
   697 ;; ---------------------------------------------------------------------------------
   698 ;; (1) _setPinInitVaule                                      0     0      0      66
   699 ;;                             _setPB3
   700 ;;                             _setPB4
   701 ;;                             _setPB5
   702 ;; ---------------------------------------------------------------------------------
   703 ;; (1) _initPin                                              0     0      0      66
   704 ;;           _initPB2_AsHighResistence
   705 ;;                            _initPB3
   706 ;;                            _initPB4
   707 ;;                            _initPB5
   708 ;; ---------------------------------------------------------------------------------
   709 ;; (2) _AD_Sample                                            0     0      0       0
   710 ;; ---------------------------------------------------------------------------------
   711 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   712 ;;                                              0 BANK0      1     1      0
   713 ;; ---------------------------------------------------------------------------------
   714 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   715 ;; ---------------------------------------------------------------------------------
   716 ;; (2) _Filter                                              39    37      2     620
   717 ;;                                              0 BANK0     39    37      2
   718 ;; ---------------------------------------------------------------------------------
   719 ;; (1) _isFinishedOneHoursTimer                              0     0      0       0
   720 ;; ---------------------------------------------------------------------------------
   721 ;; (1) _startOneHoursTimer                                   2     0      2      22
   722 ;;                                              0 BANK0      2     0      2
   723 ;; ---------------------------------------------------------------------------------
   724 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   725 ;; ---------------------------------------------------------------------------------
   726 ;; (1) _startThreeHoursTimer                                 2     0      2      22
   727 ;;                                              0 BANK0      2     0      2
   728 ;; ---------------------------------------------------------------------------------
   729 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   730 ;; ---------------------------------------------------------------------------------
   731 ;; (1) _startTwelveHourTimer                                 2     0      2      22
   732 ;;                                              0 BANK0      2     0      2
   733 ;; ---------------------------------------------------------------------------------
   734 ;; (1) _clearTwentyMinTimer                                  0     0      0       0
   735 ;; ---------------------------------------------------------------------------------
   736 ;; (1) _isFinishedTwentyMinTimer                             0     0      0       0
   737 ;; ---------------------------------------------------------------------------------
   738 ;; (1) _clrSampeTime                                         0     0      0       0
   739 ;; ---------------------------------------------------------------------------------
   740 ;; (1) _isPermitSampleTime                                   0     0      0       0
   741 ;; ---------------------------------------------------------------------------------
   742 ;; (1) _startTwentyMinTimer                                  2     0      2      22
   743 ;;                                              0 BANK0      2     0      2
   744 ;; ---------------------------------------------------------------------------------
   745 ;; (2) _adc_start                                            0     0      0       0
   746 ;; ---------------------------------------------------------------------------------
   747 ;; (2) _adc_test_init                                        3     2      1      44
   748 ;;                                              0 BANK0      3     2      1
   749 ;; ---------------------------------------------------------------------------------
   750 ;; (1) _timer1_interrupt_config                              0     0      0       0
   751 ;; ---------------------------------------------------------------------------------
   752 ;; (1) _timer1_config                                        0     0      0       0
   753 ;; ---------------------------------------------------------------------------------
   754 ;; (1) _clock_config                                         0     0      0       0
   755 ;; ---------------------------------------------------------------------------------
   756 ;; (1) _reset                                                0     0      0       0
   757 ;; ---------------------------------------------------------------------------------
   758 ;; (1) _setPulseWidth                                        0     0      0       0
   759 ;; ---------------------------------------------------------------------------------
   760 ;; (1) _selectAdChannel                                      0     0      0       0
   761 ;; ---------------------------------------------------------------------------------
   762 ;; (1) _pwm_config                                           1     1      0      22
   763 ;;                                              0 BANK0      1     1      0
   764 ;; ---------------------------------------------------------------------------------
   765 ;; (1) _pwm_start                                            1     1      0      22
   766 ;;                                              0 BANK0      1     1      0
   767 ;; ---------------------------------------------------------------------------------
   768 ;; (2) _initPB2_AsHighResistence                             0     0      0       0
   769 ;; ---------------------------------------------------------------------------------
   770 ;; (1) _setPB5                                               1     1      0      22
   771 ;;                                              0 BANK0      1     1      0
   772 ;; ---------------------------------------------------------------------------------
   773 ;; (2) _initPB5                                              1     1      0      22
   774 ;;                                              0 BANK0      1     1      0
   775 ;; ---------------------------------------------------------------------------------
   776 ;; (1) _setPB4                                               1     1      0      22
   777 ;;                                              0 BANK0      1     1      0
   778 ;; ---------------------------------------------------------------------------------
   779 ;; (2) _initPB4                                              1     1      0      22
   780 ;;                                              0 BANK0      1     1      0
   781 ;; ---------------------------------------------------------------------------------
   782 ;; (1) _setPB3                                               1     1      0      22
   783 ;;                                              0 BANK0      1     1      0
   784 ;; ---------------------------------------------------------------------------------
   785 ;; (2) _initPB3                                              1     1      0      22
   786 ;;                                              0 BANK0      1     1      0
   787 ;; ---------------------------------------------------------------------------------
   788 ;; (1) _clearThreeHoursTimer                                 0     0      0       0
   789 ;; ---------------------------------------------------------------------------------
   790 ;; (1) _clearTwelveHoursTimer                                0     0      0       0
   791 ;; ---------------------------------------------------------------------------------
   792 ;; Estimated maximum stack depth 2
   793 ;; ---------------------------------------------------------------------------------
   794 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   795 ;; ---------------------------------------------------------------------------------
   796 ;; (3) _ISR                                                  4     4      0     407
   797 ;;                                              9 COMMON     4     4      0
   798 ;;                i1_setAD_ConvertFlag
   799 ;;                            _adc_get
   800 ;;            _vPutSampleDataIntoTable
   801 ;; ---------------------------------------------------------------------------------
   802 ;; (4) i1_setAD_ConvertFlag                                  1     1      0      73
   803 ;;                                              0 COMMON     1     1      0
   804 ;; ---------------------------------------------------------------------------------
   805 ;; (4) _adc_get                                              4     2      2      24
   806 ;;                                              0 COMMON     4     2      2
   807 ;; ---------------------------------------------------------------------------------
   808 ;; (4) _vPutSampleDataIntoTable                              5     2      3     310
   809 ;;                                              4 COMMON     5     2      3
   810 ;;                            _adc_get (ARG)
   811 ;; ---------------------------------------------------------------------------------
   812 ;; Estimated maximum stack depth 4
   813 ;; ---------------------------------------------------------------------------------
   814 ;; Call Graph Graphs:
   815 ;; _main (ROOT)
   816 ;;   _initPin
   817 ;;     _initPB2_AsHighResistence
   818 ;;     _initPB3
   819 ;;     _initPB4
   820 ;;     _initPB5
   821 ;;   _setPinInitVaule
   822 ;;     _setPB3
   823 ;;     _setPB4
   824 ;;     _setPB5
   825 ;;   _selectAdChannel
   826 ;;   _clock_config
   827 ;;   _timer1_config
   828 ;;   _timer1_interrupt_config
   829 ;;   _adc_test_init
   830 ;;   _adc_start
   831 ;;   _startTwentyMinTimer
   832 ;;   _process_AD_Converter_Value
   833 ;;     _getAD_ConvertFlag
   834 ;;     _setAD_ConvertFlag
   835 ;;     _AD_Sample
   836 ;;     _adc_test_init
   837 ;;     _adc_start
   838 ;;   _isPermitSampleTime
   839 ;;   _clrSampeTime
   840 ;;   _isFinishedTwentyMinTimer
   841 ;;   _getAdOriginalCh13Value
   842 ;;     _Filter
   843 ;;   _setPB5
   844 ;;   _getAdOriginalCh12Value
   845 ;;     _Filter
   846 ;;   _setPB4
   847 ;;   _setPB3
   848 ;;   _pwm_start
   849 ;;   _pwm_config
   850 ;;   _clearTwentyMinTimer
   851 ;;   _startTwelveHourTimer
   852 ;;   _isFinishedTwelveHoursTimer
   853 ;;   _clearTwelveHoursTimer
   854 ;;   _startThreeHoursTimer
   855 ;;   _isFinishedThreeHoursTimer
   856 ;;   _clearThreeHoursTimer
   857 ;;   _startOneHoursTimer
   858 ;;   _isFinishedOneHoursTimer
   859 ;;   _reset
   860 ;;   _setPulseWidth
   861 ;;
   862 ;; _ISR (ROOT)
   863 ;;   i1_setAD_ConvertFlag
   864 ;;   _adc_get
   865 ;;   _vPutSampleDataIntoTable
   866 ;;     _adc_get (ARG)
   867 ;;
   868 ;; Address spaces:
   869 ;;Name               Size   Autos  Total    Cost      Usage
   870 ;;BANK3               60      0       0      10        0.0%
   871 ;;BITBANK3            60      0       0       9        0.0%
   872 ;;SFR3                 0      0       0       4        0.0%
   873 ;;BITSFR3              0      0       0       4        0.0%
   874 ;;BANK2               60      0       0      12        0.0%
   875 ;;BITBANK2            60      0       0      11        0.0%
   876 ;;SFR2                 0      0       0       5        0.0%
   877 ;;BITSFR2              0      0       0       5        0.0%
   878 ;;SFR1                 0      0       0       2        0.0%
   879 ;;BITSFR1              0      0       0       2        0.0%
   880 ;;BANK1               50      0      48       8       90.0%
   881 ;;BITBANK1            50      0       0       7        0.0%
   882 ;;CODE                 0      0       0       0        0.0%
   883 ;;DATA                 0      0      A6       6        0.0%
   884 ;;ABS                  0      0      A0       3        0.0%
   885 ;;NULL                 0      0       0       0        0.0%
   886 ;;STACK                0      0       6       2        0.0%
   887 ;;BANK0               50     29      4A       5       92.5%
   888 ;;BITBANK0            50      0       0       4        0.0%
   889 ;;SFR0                 0      0       0       1        0.0%
   890 ;;BITSFR0              0      0       0       1        0.0%
   891 ;;COMMON               E      D       E       1      100.0%
   892 ;;BITCOMMON            E      0       0       0        0.0%
   893                           
   894                           
   895 ;; *************** function _main *****************
   896 ;; Defined at:
   897 ;;		line 515 in file "D:\develop\190625\AK7030-OTP\main.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;		None
   900 ;; Auto vars:     Size  Location     Type
   901 ;;		None
   902 ;; Return value:  Size  Location     Type
   903 ;;		None               void
   904 ;; Registers used:
   905 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   906 ;; Tracked objects:
   907 ;;		On entry : 17F/0
   908 ;;		On exit  : 60/0
   909 ;;		Unchanged: FFE00/0
   910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   911 ;;      Params:         0       0       0       0       0
   912 ;;      Locals:         0       0       0       0       0
   913 ;;      Temps:          0       0       0       0       0
   914 ;;      Totals:         0       0       0       0       0
   915 ;;Total ram usage:        0 bytes
   916 ;; Hardware stack levels required when called:    4
   917 ;; This function calls:
   918 ;;		_initPin
   919 ;;		_setPinInitVaule
   920 ;;		_selectAdChannel
   921 ;;		_clock_config
   922 ;;		_timer1_config
   923 ;;		_timer1_interrupt_config
   924 ;;		_adc_test_init
   925 ;;		_adc_start
   926 ;;		_startTwentyMinTimer
   927 ;;		_process_AD_Converter_Value
   928 ;;		_isPermitSampleTime
   929 ;;		_clrSampeTime
   930 ;;		_isFinishedTwentyMinTimer
   931 ;;		_getAdOriginalCh13Value
   932 ;;		_setPB5
   933 ;;		_getAdOriginalCh12Value
   934 ;;		_setPB4
   935 ;;		_setPB3
   936 ;;		_pwm_start
   937 ;;		_pwm_config
   938 ;;		_clearTwentyMinTimer
   939 ;;		_startTwelveHourTimer
   940 ;;		_isFinishedTwelveHoursTimer
   941 ;;		_clearTwelveHoursTimer
   942 ;;		_startThreeHoursTimer
   943 ;;		_isFinishedThreeHoursTimer
   944 ;;		_clearThreeHoursTimer
   945 ;;		_startOneHoursTimer
   946 ;;		_isFinishedOneHoursTimer
   947 ;;		_reset
   948 ;;		_setPulseWidth
   949 ;; This function is called by:
   950 ;;		Startup code after reset
   951 ;; This function uses a non-reentrant model
   952 ;;
   953  0013                     _main:	
   954                           
   955                           ;main.c: 522: static unsigned char ucWaitTime1S = 0;
   956                           ;main.c: 524: static unsigned char ucWaitTimeO3s = 0;
   957                           ;main.c: 526: static unsigned char ucSmallTimerActionFlag = 0;
   958                           ;main.c: 528: static unsigned char ucSetSmallActionFlag = 0;
   959                           ;main.c: 530: static unsigned char bCheckTweHour = 0;
   960                           ;main.c: 532: static unsigned char bCheckTheHour = 0;
   961                           ;main.c: 548: initPin();
   962                           
   963                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   964  0013  118A  239A  118A   	fcall	_initPin
   965                           
   966                           ;main.c: 549: setPinInitVaule();
   967  0016  118A  23CB  118A   	fcall	_setPinInitVaule
   968                           
   969                           ;main.c: 550: selectAdChannel();
   970  0019  118A  249C  118A   	fcall	_selectAdChannel
   971                           
   972                           ;main.c: 560: clock_config();
   973  001C  118A  248B  118A   	fcall	_clock_config
   974                           
   975                           ;main.c: 561: timer1_config();
   976  001F  118A  2479  118A   	fcall	_timer1_config
   977                           
   978                           ;main.c: 562: timer1_interrupt_config();
   979  0022  118A  24A8  118A   	fcall	_timer1_interrupt_config
   980                           
   981                           ;main.c: 564: adc_test_init(12,3);
   982  0025  3003               	movlw	3
   983  0026  1283               	bcf	3,5	;RP0=0, select bank0
   984  0027  00A0               	movwf	?_adc_test_init
   985  0028  300C               	movlw	12
   986  0029  118A  2382  118A   	fcall	_adc_test_init
   987                           
   988                           ;main.c: 571: adc_start();
   989  002C  118A  2397  118A   	fcall	_adc_start
   990                           
   991                           ;main.c: 581: startTwentyMinTimer( 1200 );
   992  002F  30B0               	movlw	176
   993  0030  00A0               	movwf	?_startTwentyMinTimer
   994  0031  3004               	movlw	4
   995  0032  00A1               	movwf	?_startTwentyMinTimer+1
   996  0033  118A  2437  118A   	fcall	_startTwentyMinTimer
   997                           
   998                           ;main.c: 608: static unsigned char ucStep = 0;
   999                           ;main.c: 609: switch(ucStep)
  1000  0036  298D               	goto	l3637
  1001  0037                     l3645:	
  1002                           
  1003                           ;main.c: 612: {
  1004                           ;main.c: 613: static unsigned char ucTimerP3s = 0;
  1005                           ;main.c: 615: if( isFinishedTwentyMinTimer() )
  1006  0037  118A  246F  118A   	fcall	_isFinishedTwentyMinTimer
  1007  003A  3A00               	xorlw	0
  1008  003B  1D03               	btfss	3,2
  1009  003C  298D               	goto	l3637
  1010                           
  1011                           ;main.c: 617: else
  1012                           ;main.c: 618: {
  1013                           ;main.c: 619: if( getAdOriginalCh13Value() > 1000 )
  1014  003D  118A  22A6  118A   	fcall	_getAdOriginalCh13Value
  1015  0040  3003               	movlw	3
  1016  0041  0248               	subwf	?_getAdOriginalCh13Value+1,w
  1017  0042  30E9               	movlw	233
  1018  0043  1903               	skipnz
  1019  0044  0247               	subwf	?_getAdOriginalCh13Value,w
  1020  0045  1C03               	skipc
  1021  0046  2849               	goto	l3653
  1022                           
  1023                           ;main.c: 622: ucTimerP3s++;
  1024  0047  3001               	movlw	1
  1025  0048  284A               	goto	L1
  1026  0049                     l3653:	
  1027                           ;main.c: 623: }
  1028                           
  1029                           
  1030                           ;main.c: 627: setPB5(0);
  1031  0049  3000               	movlw	0
  1032  004A                     L1:	
  1033  004A  118A  23E4  118A   	fcall	_setPB5
  1034                           
  1035                           ;main.c: 628: }
  1036                           ;main.c: 631: if( getAdOriginalCh12Value() > 1000 )
  1037  004D  118A  229F  118A   	fcall	_getAdOriginalCh12Value
  1038  0050  3003               	movlw	3
  1039  0051  0248               	subwf	?_getAdOriginalCh12Value+1,w
  1040  0052  30E9               	movlw	233
  1041  0053  1903               	skipnz
  1042  0054  0247               	subwf	?_getAdOriginalCh12Value,w
  1043  0055  1C03               	skipc
  1044  0056  2859               	goto	l3659
  1045                           
  1046                           ;main.c: 634: ucTimerP3s++;
  1047  0057  3001               	movlw	1
  1048  0058  285A               	goto	L2
  1049  0059                     l3659:	
  1050                           ;main.c: 636: }
  1051                           
  1052                           
  1053                           ;main.c: 640: setPB4(0);
  1054  0059  3000               	movlw	0
  1055  005A                     L2:	
  1056  005A  118A  23DC  118A   	fcall	_setPB4
  1057  005D  300A               	movlw	10
  1058                           
  1059                           ;main.c: 641: }
  1060                           ;main.c: 643: static unsigned char ucDebug1 = 0;
  1061                           ;main.c: 645: static unsigned char ucDebug2 = 0;
  1062                           ;main.c: 647: ucDebug1++;
  1063  005E  0AE3               	incf	main@ucDebug1,f
  1064                           
  1065                           ;main.c: 649: if( ucDebug1 < 10 )
  1066  005F  0263               	subwf	main@ucDebug1,w
  1067  0060  1803               	skipnc
  1068  0061  2867               	goto	l3667
  1069                           
  1070                           ;main.c: 650: setPB3(1);
  1071  0062  3001               	movlw	1
  1072  0063  118A  23D3  118A   	fcall	_setPB3
  1073  0066  2875               	goto	l3675
  1074  0067                     l3667:	
  1075                           
  1076                           ;main.c: 651: else if((ucDebug1 >= 10) && ( ucDebug1 < 20))
  1077  0067  300A               	movlw	10
  1078  0068  0263               	subwf	main@ucDebug1,w
  1079  0069  1C03               	skipc
  1080  006A  2874               	goto	l3673
  1081  006B  3014               	movlw	20
  1082  006C  0263               	subwf	main@ucDebug1,w
  1083  006D  1803               	skipnc
  1084  006E  2874               	goto	l3673
  1085                           
  1086                           ;main.c: 652: {
  1087                           ;main.c: 653: setPB3(0);
  1088  006F  3000               	movlw	0
  1089  0070  118A  23D3  118A   	fcall	_setPB3
  1090                           
  1091                           ;main.c: 654: }
  1092  0073  2875               	goto	l3675
  1093  0074                     l3673:	
  1094                           
  1095                           ;main.c: 655: else
  1096                           ;main.c: 656: {
  1097                           ;main.c: 657: ucDebug1 = 0;
  1098  0074  01E3               	clrf	main@ucDebug1
  1099  0075                     l3675:	
  1100  0075  3097               	movlw	151
  1101                           
  1102                           ;main.c: 658: }
  1103                           ;main.c: 660: ucDebug2++;
  1104  0076  0AE4               	incf	main@ucDebug2,f
  1105                           
  1106                           ;main.c: 661: if(ucDebug2 > 150)
  1107  0077  0264               	subwf	main@ucDebug2,w
  1108  0078  298B               	goto	L4
  1109  0079                     l3681:	
  1110                           
  1111                           ;main.c: 668: {
  1112                           ;main.c: 669: if( getAdOriginalCh12Value() > 1000 )
  1113  0079  118A  229F  118A   	fcall	_getAdOriginalCh12Value
  1114  007C  3003               	movlw	3
  1115  007D  0248               	subwf	?_getAdOriginalCh12Value+1,w
  1116  007E  30E9               	movlw	233
  1117  007F  1903               	skipnz
  1118  0080  0247               	subwf	?_getAdOriginalCh12Value,w
  1119  0081  1C03               	skipc
  1120  0082  2885               	goto	l3685
  1121                           
  1122                           ;main.c: 670: pwm_start(0x19);
  1123  0083  3019               	movlw	25
  1124  0084  2886               	goto	L3
  1125  0085                     l3685:	
  1126                           
  1127                           ;main.c: 671: else
  1128                           ;main.c: 672: pwm_start(0x02);
  1129  0085  3002               	movlw	2
  1130  0086                     L3:	
  1131  0086  118A  23FE  118A   	fcall	_pwm_start
  1132                           
  1133                           ;main.c: 674: pwm_config(1);
  1134  0089  3001               	movlw	1
  1135  008A  118A  2445  118A   	fcall	_pwm_config
  1136                           
  1137                           ;main.c: 675: setPB3(0);
  1138  008D  3000               	movlw	0
  1139  008E  118A  23D3  118A   	fcall	_setPB3
  1140                           
  1141                           ;main.c: 676: setPB4(1);
  1142  0091  3001               	movlw	1
  1143  0092  118A  23DC  118A   	fcall	_setPB4
  1144                           
  1145                           ;main.c: 677: setPB5(0);
  1146  0095  3000               	movlw	0
  1147  0096  118A  23E4  118A   	fcall	_setPB5
  1148                           
  1149                           ;main.c: 678: clearTwentyMinTimer();
  1150  0099  118A  2498  118A   	fcall	_clearTwentyMinTimer
  1151                           
  1152                           ;main.c: 679: startTwelveHourTimer( 36000);
  1153  009C  30A0               	movlw	160
  1154  009D  00A0               	movwf	?_startTwelveHourTimer
  1155  009E  308C               	movlw	140
  1156  009F  00A1               	movwf	?_startTwelveHourTimer+1
  1157  00A0  118A  2429  118A   	fcall	_startTwelveHourTimer
  1158  00A3  298C               	goto	l3679
  1159  00A4                     l3693:	
  1160                           
  1161                           ;main.c: 685: {
  1162                           ;main.c: 686: static unsigned char ucTimerP5s = 0;
  1163                           ;main.c: 688: if( isFinishedTwelveHoursTimer () )
  1164  00A4  118A  2465  118A   	fcall	_isFinishedTwelveHoursTimer
  1165  00A7  3A00               	xorlw	0
  1166  00A8  1903               	skipnz
  1167  00A9  28AD               	goto	l3697
  1168  00AA                     l3695:	
  1169                           
  1170                           ;main.c: 689: ucStep = 99;
  1171  00AA  3063               	movlw	99
  1172  00AB  00E5               	movwf	main@ucStep
  1173  00AC  298D               	goto	l3637
  1174  00AD                     l3697:	
  1175                           
  1176                           ;main.c: 690: else
  1177                           ;main.c: 691: {
  1178                           ;main.c: 692: if( getAdOriginalCh13Value() < 200 )
  1179  00AD  118A  22A6  118A   	fcall	_getAdOriginalCh13Value
  1180  00B0  3000               	movlw	0
  1181  00B1  0248               	subwf	?_getAdOriginalCh13Value+1,w
  1182  00B2  30C8               	movlw	200
  1183  00B3  1903               	skipnz
  1184  00B4  0247               	subwf	?_getAdOriginalCh13Value,w
  1185  00B5  1803               	skipnc
  1186  00B6  28B9               	goto	l3701
  1187                           
  1188                           ;main.c: 693: ucTimerP5s++;
  1189  00B7  0AE6               	incf	main@ucTimerP5s,f
  1190  00B8  28BA               	goto	l3703
  1191  00B9                     l3701:	
  1192                           
  1193                           ;main.c: 694: else
  1194                           ;main.c: 695: ucTimerP5s = 0;
  1195  00B9  01E6               	clrf	main@ucTimerP5s
  1196  00BA                     l3703:	
  1197                           
  1198                           ;main.c: 697: if( ucTimerP5s > 5)
  1199  00BA  3006               	movlw	6
  1200  00BB  0266               	subwf	main@ucTimerP5s,w
  1201  00BC  1C03               	skipc
  1202  00BD  298D               	goto	l3637
  1203                           
  1204                           ;main.c: 698: {
  1205                           ;main.c: 699: ucTimerP5s = 0;
  1206  00BE  01E6               	clrf	main@ucTimerP5s
  1207  00BF  298D               	goto	l3637
  1208  00C0                     l3707:	
  1209                           
  1210                           ;main.c: 707: {
  1211                           ;main.c: 708: clearTwelveHoursTimer();
  1212  00C0  118A  24A4  118A   	fcall	_clearTwelveHoursTimer
  1213                           
  1214                           ;main.c: 709: startThreeHoursTimer(10800);
  1215  00C3  3030               	movlw	48
  1216  00C4  00A0               	movwf	?_startThreeHoursTimer
  1217  00C5  302A               	movlw	42
  1218  00C6  00A1               	movwf	?_startThreeHoursTimer+1
  1219  00C7  118A  241B  118A   	fcall	_startThreeHoursTimer
  1220  00CA  298C               	goto	l3679
  1221  00CB                     l3713:	
  1222                           
  1223                           ;main.c: 715: {
  1224                           ;main.c: 716: static unsigned char ucTimerP5s = 0;
  1225                           ;main.c: 718: if( isFinishedThreeHoursTimer() )
  1226  00CB  118A  245B  118A   	fcall	_isFinishedThreeHoursTimer
  1227  00CE  3A00               	xorlw	0
  1228  00CF  1D03               	btfss	3,2
  1229  00D0  28AA               	goto	l3695
  1230                           
  1231                           ;main.c: 720: else
  1232                           ;main.c: 721: {
  1233                           ;main.c: 722: if( getAdOriginalCh13Value() < 85 )
  1234  00D1  118A  22A6  118A   	fcall	_getAdOriginalCh13Value
  1235  00D4  3000               	movlw	0
  1236  00D5  0248               	subwf	?_getAdOriginalCh13Value+1,w
  1237  00D6  3055               	movlw	85
  1238  00D7  1903               	skipnz
  1239  00D8  0247               	subwf	?_getAdOriginalCh13Value,w
  1240  00D9  1803               	skipnc
  1241  00DA  28DD               	goto	l3721
  1242                           
  1243                           ;main.c: 723: ucTimerP5s++;
  1244  00DB  0AE1               	incf	main@cTimerP5s_783,f
  1245  00DC  28DE               	goto	l3723
  1246  00DD                     l3721:	
  1247                           
  1248                           ;main.c: 724: else
  1249                           ;main.c: 725: ucTimerP5s = 0;
  1250  00DD  01E1               	clrf	main@cTimerP5s_783
  1251  00DE                     l3723:	
  1252                           
  1253                           ;main.c: 727: if( ucTimerP5s > 5)
  1254  00DE  3006               	movlw	6
  1255  00DF  0261               	subwf	main@cTimerP5s_783,w
  1256  00E0  1C03               	skipc
  1257  00E1  298D               	goto	l3637
  1258                           
  1259                           ;main.c: 728: {
  1260                           ;main.c: 729: ucTimerP5s = 0;
  1261  00E2  01E1               	clrf	main@cTimerP5s_783
  1262  00E3  298C               	goto	l3679
  1263  00E4                     l3729:	
  1264                           
  1265                           ;main.c: 737: {
  1266                           ;main.c: 738: clearThreeHoursTimer();
  1267  00E4  118A  24A0  118A   	fcall	_clearThreeHoursTimer
  1268                           
  1269                           ;main.c: 739: startOneHoursTimer( 3600 );
  1270  00E7  3010               	movlw	16
  1271  00E8  00A0               	movwf	?_startOneHoursTimer
  1272  00E9  300E               	movlw	14
  1273  00EA  00A1               	movwf	?_startOneHoursTimer+1
  1274  00EB  118A  240D  118A   	fcall	_startOneHoursTimer
  1275                           
  1276                           ;main.c: 740: setPB3(1);
  1277  00EE  3001               	movlw	1
  1278  00EF  118A  23D3  118A   	fcall	_setPB3
  1279                           
  1280                           ;main.c: 741: setPB4(0);
  1281  00F2  3000               	movlw	0
  1282  00F3  118A  23DC  118A   	fcall	_setPB4
  1283                           
  1284                           ;main.c: 742: setPB5(1);
  1285  00F6  3001               	movlw	1
  1286  00F7  118A  23E4  118A   	fcall	_setPB5
  1287  00FA  298C               	goto	l3679
  1288  00FB                     l3741:	
  1289                           
  1290                           ;main.c: 748: {
  1291                           ;main.c: 749: static unsigned int uiTimerOneP5s = 0;
  1292                           ;main.c: 750: static unsigned int uiTimerTwoP5s = 0;
  1293                           ;main.c: 753: if( isFinishedOneHoursTimer() )
  1294  00FB  118A  2451  118A   	fcall	_isFinishedOneHoursTimer
  1295  00FE  3A00               	xorlw	0
  1296  00FF  1D03               	btfss	3,2
  1297  0100  28AA               	goto	l3695
  1298                           
  1299                           ;main.c: 755: else
  1300                           ;main.c: 756: {
  1301                           ;main.c: 757: if( getAdOriginalCh13Value() > 100 )
  1302  0101  118A  22A6  118A   	fcall	_getAdOriginalCh13Value
  1303  0104  3000               	movlw	0
  1304  0105  0248               	subwf	?_getAdOriginalCh13Value+1,w
  1305  0106  3065               	movlw	101
  1306  0107  1903               	skipnz
  1307  0108  0247               	subwf	?_getAdOriginalCh13Value,w
  1308  0109  1C03               	skipc
  1309  010A  2911               	goto	l3751
  1310                           
  1311                           ;main.c: 758: {
  1312                           ;main.c: 759: uiTimerOneP5s++;
  1313  010B  0AD3               	incf	main@uiTimerOneP5s,f
  1314  010C  1903               	skipnz
  1315  010D  0AD4               	incf	main@uiTimerOneP5s+1,f
  1316                           
  1317                           ;main.c: 760: uiTimerTwoP5s = 0;
  1318  010E  01D7               	clrf	main@uiTimerTwoP5s
  1319  010F  01D8               	clrf	main@uiTimerTwoP5s+1
  1320                           
  1321                           ;main.c: 761: }
  1322  0110  2913               	goto	l3753
  1323  0111                     l3751:	
  1324                           
  1325                           ;main.c: 762: else
  1326                           ;main.c: 763: uiTimerOneP5s = 0;
  1327  0111  01D3               	clrf	main@uiTimerOneP5s
  1328  0112  01D4               	clrf	main@uiTimerOneP5s+1
  1329  0113                     l3753:	
  1330                           
  1331                           ;main.c: 765: if(uiTimerOneP5s > 5)
  1332  0113  3000               	movlw	0
  1333  0114  0254               	subwf	main@uiTimerOneP5s+1,w
  1334  0115  3006               	movlw	6
  1335  0116  1903               	skipnz
  1336  0117  0253               	subwf	main@uiTimerOneP5s,w
  1337  0118  1C03               	skipc
  1338  0119  292B               	goto	l3763
  1339                           
  1340                           ;main.c: 766: {
  1341                           ;main.c: 767: setPB3(0);
  1342  011A  3000               	movlw	0
  1343  011B  118A  23D3  118A   	fcall	_setPB3
  1344                           
  1345                           ;main.c: 768: setPB4(1);
  1346  011E  3001               	movlw	1
  1347  011F  118A  23DC  118A   	fcall	_setPB4
  1348                           
  1349                           ;main.c: 769: setPB5(0);
  1350  0122  3000               	movlw	0
  1351  0123  118A  23E4  118A   	fcall	_setPB5
  1352                           
  1353                           ;main.c: 771: uiTimerOneP5s = 0;
  1354  0126  01D3               	clrf	main@uiTimerOneP5s
  1355  0127  01D4               	clrf	main@uiTimerOneP5s+1
  1356                           
  1357                           ;main.c: 772: uiTimerTwoP5s = 0;
  1358  0128  01D7               	clrf	main@uiTimerTwoP5s
  1359  0129  01D8               	clrf	main@uiTimerTwoP5s+1
  1360  012A  298C               	goto	l3679
  1361  012B                     l3763:	
  1362                           
  1363                           ;main.c: 775: else
  1364                           ;main.c: 776: {
  1365                           ;main.c: 777: if( getAdOriginalCh13Value() < 25 )
  1366  012B  118A  22A6  118A   	fcall	_getAdOriginalCh13Value
  1367  012E  3000               	movlw	0
  1368  012F  0248               	subwf	?_getAdOriginalCh13Value+1,w
  1369  0130  3019               	movlw	25
  1370  0131  1903               	skipnz
  1371  0132  0247               	subwf	?_getAdOriginalCh13Value,w
  1372  0133  1803               	skipnc
  1373  0134  2939               	goto	l3767
  1374                           
  1375                           ;main.c: 778: uiTimerTwoP5s++;
  1376  0135  0AD7               	incf	main@uiTimerTwoP5s,f
  1377  0136  1903               	skipnz
  1378  0137  0AD8               	incf	main@uiTimerTwoP5s+1,f
  1379  0138  293B               	goto	l3769
  1380  0139                     l3767:	
  1381                           
  1382                           ;main.c: 779: else
  1383                           ;main.c: 780: uiTimerTwoP5s = 0;
  1384  0139  01D7               	clrf	main@uiTimerTwoP5s
  1385  013A  01D8               	clrf	main@uiTimerTwoP5s+1
  1386  013B                     l3769:	
  1387                           
  1388                           ;main.c: 782: if(uiTimerTwoP5s > 5)
  1389  013B  3000               	movlw	0
  1390  013C  0258               	subwf	main@uiTimerTwoP5s+1,w
  1391  013D  3006               	movlw	6
  1392  013E  1903               	skipnz
  1393  013F  0257               	subwf	main@uiTimerTwoP5s,w
  1394  0140  1C03               	skipc
  1395  0141  298D               	goto	l3637
  1396  0142                     l3771:	
  1397                           
  1398                           ;main.c: 783: reset();
  1399  0142  118A  24AD  118A   	fcall	_reset
  1400  0145  298D               	goto	l3637
  1401  0146                     l3773:	
  1402                           
  1403                           ;main.c: 790: {
  1404                           ;main.c: 791: static unsigned int uiTimerP5s = 0;
  1405                           ;main.c: 792: if( getAdOriginalCh13Value() < 25 )
  1406  0146  118A  22A6  118A   	fcall	_getAdOriginalCh13Value
  1407  0149  3000               	movlw	0
  1408  014A  0248               	subwf	?_getAdOriginalCh13Value+1,w
  1409  014B  3019               	movlw	25
  1410  014C  1903               	skipnz
  1411  014D  0247               	subwf	?_getAdOriginalCh13Value,w
  1412  014E  1803               	skipnc
  1413  014F  2954               	goto	l3777
  1414                           
  1415                           ;main.c: 793: uiTimerP5s++;
  1416  0150  0AD5               	incf	main@uiTimerP5s,f
  1417  0151  1903               	skipnz
  1418  0152  0AD6               	incf	main@uiTimerP5s+1,f
  1419  0153  2956               	goto	l3779
  1420  0154                     l3777:	
  1421                           
  1422                           ;main.c: 794: else
  1423                           ;main.c: 795: uiTimerP5s = 0;
  1424  0154  01D5               	clrf	main@uiTimerP5s
  1425  0155  01D6               	clrf	main@uiTimerP5s+1
  1426  0156                     l3779:	
  1427                           
  1428                           ;main.c: 797: if(uiTimerP5s > 5)
  1429  0156  3000               	movlw	0
  1430  0157  0256               	subwf	main@uiTimerP5s+1,w
  1431  0158  3006               	movlw	6
  1432  0159  1903               	skipnz
  1433  015A  0255               	subwf	main@uiTimerP5s,w
  1434  015B  1C03               	skipc
  1435  015C  298D               	goto	l3637
  1436  015D  3001               	movlw	1
  1437                           
  1438                           ;main.c: 798: {
  1439                           ;main.c: 799: uiTimerP5s = 0;
  1440  015E  01D5               	clrf	main@uiTimerP5s
  1441  015F  01D6               	clrf	main@uiTimerP5s+1
  1442                           
  1443                           ;main.c: 800: setPB3(1);
  1444  0160  118A  23D3  118A   	fcall	_setPB3
  1445                           
  1446                           ;main.c: 801: setPB4(0);
  1447  0163  3000               	movlw	0
  1448  0164  118A  23DC  118A   	fcall	_setPB4
  1449                           
  1450                           ;main.c: 802: setPB5(1);
  1451  0167  3001               	movlw	1
  1452  0168  118A  23E4  118A   	fcall	_setPB5
  1453  016B  28AA               	goto	l3695
  1454  016C                     l3791:	
  1455                           
  1456                           ;main.c: 812: {
  1457                           ;main.c: 813: setPB3(0);
  1458  016C  3000               	movlw	0
  1459  016D  118A  23D3  118A   	fcall	_setPB3
  1460                           
  1461                           ;main.c: 814: setPB4(0);
  1462  0170  3000               	movlw	0
  1463  0171  118A  23DC  118A   	fcall	_setPB4
  1464                           
  1465                           ;main.c: 815: setPB5(1);
  1466  0174  3001               	movlw	1
  1467  0175  118A  23E4  118A   	fcall	_setPB5
  1468                           
  1469                           ;main.c: 816: setPulseWidth();
  1470  0178  118A  24AE  118A   	fcall	_setPulseWidth
  1471  017B  298C               	goto	l3679
  1472  017C                     l3797:	
  1473                           
  1474                           ;main.c: 822: {
  1475                           ;main.c: 823: static unsigned char ucTimerP5s = 0;
  1476                           ;main.c: 824: if( getAdOriginalCh13Value() >50 )
  1477  017C  118A  22A6  118A   	fcall	_getAdOriginalCh13Value
  1478  017F  3000               	movlw	0
  1479  0180  0248               	subwf	?_getAdOriginalCh13Value+1,w
  1480  0181  3033               	movlw	51
  1481  0182  1903               	skipnz
  1482  0183  0247               	subwf	?_getAdOriginalCh13Value,w
  1483  0184  1C03               	skipc
  1484  0185  2988               	goto	l3801
  1485                           
  1486                           ;main.c: 825: ucTimerP5s++;
  1487  0186  0AE2               	incf	main@cTimerP5s_787,f
  1488  0187  2989               	goto	l3803
  1489  0188                     l3801:	
  1490                           
  1491                           ;main.c: 826: else
  1492                           ;main.c: 827: ucTimerP5s = 0;
  1493  0188  01E2               	clrf	main@cTimerP5s_787
  1494  0189                     l3803:	
  1495                           
  1496                           ;main.c: 829: if(ucTimerP5s > 5)
  1497  0189  3006               	movlw	6
  1498  018A  0262               	subwf	main@cTimerP5s_787,w
  1499  018B                     L4:	
  1500  018B  1803               	btfsc	3,0
  1501  018C                     l3679:	
  1502                           
  1503                           ;main.c: 662: ucStep++;
  1504  018C  0AE5               	incf	main@ucStep,f
  1505  018D                     l3637:	
  1506  018D  0064               	clrwdt	;#
  1507                           
  1508                           ;main.c: 588: process_AD_Converter_Value();
  1509  018E  118A  2351  118A   	fcall	_process_AD_Converter_Value
  1510                           
  1511                           ;main.c: 590: if( isPermitSampleTime() )
  1512  0191  118A  2493  118A   	fcall	_isPermitSampleTime
  1513  0194  3A00               	xorlw	0
  1514  0195  1903               	skipnz
  1515  0196  298D               	goto	l3637
  1516                           
  1517                           ;main.c: 591: {
  1518                           ;main.c: 594: clrSampeTime();
  1519  0197  118A  24AB  118A   	fcall	_clrSampeTime
  1520  019A  0865               	movf	main@ucStep,w
  1521                           
  1522                           ; Switch size 1, requested type "space"
  1523                           ; Number of cases is 11, Range of values is 0 to 101
  1524                           ; switch strategies available:
  1525                           ; Name         Instructions Cycles
  1526                           ; simple_byte           34    18 (average)
  1527                           ; direct_byte          211     7 (fixed)
  1528                           ; jumptable            260     6 (fixed)
  1529                           ; rangetable           106     6 (fixed)
  1530                           ; spacedrange          210     9 (fixed)
  1531                           ; locatedrange         102     3 (fixed)
  1532                           ;	Chosen strategy is simple_byte
  1533  019B  3A00               	xorlw	0	; case 0
  1534  019C  1903               	skipnz
  1535  019D  2837               	goto	l3645
  1536  019E  3A01               	xorlw	1	; case 1
  1537  019F  1903               	skipnz
  1538  01A0  2879               	goto	l3681
  1539  01A1  3A03               	xorlw	3	; case 2
  1540  01A2  1903               	skipnz
  1541  01A3  28A4               	goto	l3693
  1542  01A4  3A01               	xorlw	1	; case 3
  1543  01A5  1903               	skipnz
  1544  01A6  28C0               	goto	l3707
  1545  01A7  3A07               	xorlw	7	; case 4
  1546  01A8  1903               	skipnz
  1547  01A9  28CB               	goto	l3713
  1548  01AA  3A01               	xorlw	1	; case 5
  1549  01AB  1903               	skipnz
  1550  01AC  28E4               	goto	l3729
  1551  01AD  3A03               	xorlw	3	; case 6
  1552  01AE  1903               	skipnz
  1553  01AF  28FB               	goto	l3741
  1554  01B0  3A01               	xorlw	1	; case 7
  1555  01B1  1903               	skipnz
  1556  01B2  2946               	goto	l3773
  1557  01B3  3A64               	xorlw	100	; case 99
  1558  01B4  1903               	skipnz
  1559  01B5  296C               	goto	l3791
  1560  01B6  3A07               	xorlw	7	; case 100
  1561  01B7  1903               	skipnz
  1562  01B8  297C               	goto	l3797
  1563  01B9  3A01               	xorlw	1	; case 101
  1564  01BA  1903               	skipnz
  1565  01BB  2942               	goto	l3771
  1566  01BC  29BD               	goto	l757
  1567  01BD                     l757:	
  1568  01BD  298D               	goto	l3637
  1569  01BE                     __end_of_main:	
  1570                           
  1571                           	psect	text823
  1572  029F                     __ptext823:	
  1573 ;; =============== function _main ends ============
  1574                           
  1575                           
  1576 ;; *************** function _getAdOriginalCh12Value *****************
  1577 ;; Defined at:
  1578 ;;		line 226 in file "D:\develop\190625\AK7030-OTP\common.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;		None
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;		None
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  2   39[BANK0 ] unsigned int 
  1585 ;; Registers used:
  1586 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1587 ;; Tracked objects:
  1588 ;;		On entry : 60/0
  1589 ;;		On exit  : 160/0
  1590 ;;		Unchanged: FFE00/0
  1591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1592 ;;      Params:         0       2       0       0       0
  1593 ;;      Locals:         0       0       0       0       0
  1594 ;;      Temps:          0       0       0       0       0
  1595 ;;      Totals:         0       2       0       0       0
  1596 ;;Total ram usage:        2 bytes
  1597 ;; Hardware stack levels used:    1
  1598 ;; Hardware stack levels required when called:    3
  1599 ;; This function calls:
  1600 ;;		_Filter
  1601 ;; This function is called by:
  1602 ;;		_main
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605  029F                     _getAdOriginalCh12Value:	
  1606                           
  1607                           ;common.c: 229: return Filter(uiSampleChannelFirst);
  1608                           
  1609                           ; Regs used in _getAdOriginalCh12Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  1610  029F  30A0               	movlw	_uiSampleChannelFirst& (0+255)
  1611  02A0  22AD               	fcall	_Filter
  1612  02A1  0821               	movf	?_Filter+1,w
  1613  02A2  00C8               	movwf	?_getAdOriginalCh12Value+1
  1614  02A3  0820               	movf	?_Filter,w
  1615  02A4  00C7               	movwf	?_getAdOriginalCh12Value
  1616  02A5  0008               	return
  1617  02A6                     __end_of_getAdOriginalCh12Value:	
  1618  02A6                     __ptext824:	
  1619 ;; =============== function _getAdOriginalCh12Value ends ============
  1620                           
  1621                           
  1622 ;; *************** function _getAdOriginalCh13Value *****************
  1623 ;; Defined at:
  1624 ;;		line 238 in file "D:\develop\190625\AK7030-OTP\common.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;		None
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;		None
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  2   39[BANK0 ] unsigned int 
  1631 ;; Registers used:
  1632 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1633 ;; Tracked objects:
  1634 ;;		On entry : 60/0
  1635 ;;		On exit  : 160/0
  1636 ;;		Unchanged: FFE00/0
  1637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1638 ;;      Params:         0       2       0       0       0
  1639 ;;      Locals:         0       0       0       0       0
  1640 ;;      Temps:          0       0       0       0       0
  1641 ;;      Totals:         0       2       0       0       0
  1642 ;;Total ram usage:        2 bytes
  1643 ;; Hardware stack levels used:    1
  1644 ;; Hardware stack levels required when called:    3
  1645 ;; This function calls:
  1646 ;;		_Filter
  1647 ;; This function is called by:
  1648 ;;		_main
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651  02A6                     _getAdOriginalCh13Value:	
  1652                           
  1653                           ;common.c: 240: return Filter(uiSampleChannelFourth);
  1654                           
  1655                           ; Regs used in _getAdOriginalCh13Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  1656  02A6  30D0               	movlw	_uiSampleChannelFourth& (0+255)
  1657  02A7  22AD               	fcall	_Filter
  1658  02A8  0821               	movf	?_Filter+1,w
  1659  02A9  00C8               	movwf	?_getAdOriginalCh13Value+1
  1660  02AA  0820               	movf	?_Filter,w
  1661  02AB  00C7               	movwf	?_getAdOriginalCh13Value
  1662  02AC  0008               	return
  1663  02AD                     __end_of_getAdOriginalCh13Value:	
  1664  02AD                     __ptext831:	
  1665 ;; =============== function _getAD_ConvertFlag ends ============
  1666                           
  1667                           
  1668 ;; *************** function _Filter *****************
  1669 ;; Defined at:
  1670 ;;		line 60 in file "D:\develop\190625\AK7030-OTP\common.c"
  1671 ;; Parameters:    Size  Location     Type
  1672 ;;  tmpValue        1    wreg     PTR int 
  1673 ;;		 -> uiSampleChannelFourteenth(24), uiSampleChannelFourth(24), uiSampleChannelFirst(24), 
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;  tmpValue        1   34[BANK0 ] PTR int 
  1676 ;;		 -> uiSampleChannelFourteenth(24), uiSampleChannelFourth(24), uiSampleChannelFirst(24), 
  1677 ;;  cir             2   35[BANK0 ] int 
  1678 ;;  filter_buf     24    6[BANK0 ] unsigned int [12]
  1679 ;;  filter_sum      2   32[BANK0 ] unsigned int 
  1680 ;;  filter_temp     2   30[BANK0 ] unsigned int 
  1681 ;;  i               1   38[BANK0 ] unsigned char 
  1682 ;;  j               1   37[BANK0 ] unsigned char 
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  2    0[BANK0 ] unsigned int 
  1685 ;; Registers used:
  1686 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1687 ;; Tracked objects:
  1688 ;;		On entry : 60/0
  1689 ;;		On exit  : 160/0
  1690 ;;		Unchanged: FFE00/0
  1691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1692 ;;      Params:         0       2       0       0       0
  1693 ;;      Locals:         0      33       0       0       0
  1694 ;;      Temps:          0       4       0       0       0
  1695 ;;      Totals:         0      39       0       0       0
  1696 ;;Total ram usage:       39 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; Hardware stack levels required when called:    2
  1699 ;; This function calls:
  1700 ;;		Nothing
  1701 ;; This function is called by:
  1702 ;;		_getAdOriginalCh12Value
  1703 ;;		_getAdOriginalCh13Value
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706  02AD                     _Filter:	
  1707                           
  1708                           ; Regs used in _Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  1709                           ;Filter@tmpValue stored from wreg
  1710  02AD  00C2               	movwf	Filter@tmpValue
  1711  02AE  01C5               	clrf	Filter@j
  1712                           
  1713                           ;common.c: 64: unsigned int filter_temp = 0, filter_sum = 0;
  1714  02AF  01BE               	clrf	Filter@filter_temp
  1715  02B0  01BF               	clrf	Filter@filter_temp+1
  1716  02B1  01C0               	clrf	Filter@filter_sum
  1717  02B2  01C1               	clrf	Filter@filter_sum+1
  1718                           
  1719                           ;common.c: 66: unsigned int filter_buf[12];
  1720                           ;common.c: 68: for(int cir = 0;cir < 12; cir++)
  1721  02B3  01C3               	clrf	Filter@cir
  1722  02B4  01C4               	clrf	Filter@cir+1
  1723  02B5                     l3441:	
  1724                           
  1725                           ;common.c: 69: filter_buf[cir] = *tmpValue++;
  1726  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  1727  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  1728  02B7  0842               	movf	Filter@tmpValue,w
  1729  02B8  233B  118A         	fcall	PL3	;call to abstracted procedure
  1730  02BA  1003               	clrc
  1731  02BB  0D43               	rlf	Filter@cir,w
  1732  02BC  2343  118A         	fcall	PL5	;call to abstracted procedure
  1733  02BE  0AC2               	incf	Filter@tmpValue,f
  1734  02BF  0AC2               	incf	Filter@tmpValue,f
  1735  02C0  0AC3               	incf	Filter@cir,f
  1736  02C1  1903               	skipnz
  1737  02C2  0AC4               	incf	Filter@cir+1,f
  1738  02C3  0844               	movf	Filter@cir+1,w
  1739  02C4  3A80               	xorlw	128
  1740  02C5  00FF               	movwf	127
  1741  02C6  3080               	movlw	128
  1742  02C7  027F               	subwf	127,w
  1743  02C8  1D03               	skipz
  1744  02C9  2ACC               	goto	u1015
  1745  02CA  300C               	movlw	12
  1746  02CB  0243               	subwf	Filter@cir,w
  1747  02CC                     u1015:	
  1748  02CC  1C03               	skipc
  1749  02CD  2AB5               	goto	l3441
  1750                           
  1751                           ;common.c: 72: for(j = 0; j < 12 - 1; j++)
  1752  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  1753  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  1754  02D0  01C5               	clrf	Filter@j
  1755  02D1                     l3455:	
  1756                           
  1757                           ;common.c: 73: {
  1758                           ;common.c: 74: for(i = 0; i < 12 - 1 - j; i++)
  1759  02D1  01C6               	clrf	Filter@i
  1760  02D2                     l3463:	
  1761  02D2  01A3               	clrf	??_Filter+1
  1762  02D3  0845               	movf	Filter@j,w
  1763  02D4  3C0B               	sublw	11
  1764  02D5  00A2               	movwf	??_Filter
  1765  02D6  1C03               	skipc
  1766  02D7  03A3               	decf	??_Filter+1,f
  1767  02D8  0823               	movf	??_Filter+1,w
  1768  02D9  3A80               	xorlw	128
  1769  02DA  3C80               	sublw	128
  1770  02DB  1D03               	skipz
  1771  02DC  2ADF               	goto	u1035
  1772  02DD  0822               	movf	??_Filter,w
  1773  02DE  0246               	subwf	Filter@i,w
  1774  02DF                     u1035:	
  1775  02DF  1803               	btfsc	3,0
  1776  02E0  2B14               	goto	l3465
  1777                           
  1778                           ;common.c: 75: {
  1779                           ;common.c: 76: if(filter_buf[i] > filter_buf[i + 1])
  1780  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  1781  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  1782  02E3  1003               	clrc
  1783  02E4  0D46               	rlf	Filter@i,w
  1784  02E5  3E26               	addlw	Filter@filter_buf& (0+255)
  1785  02E6  233B  118A         	fcall	PL3	;call to abstracted procedure
  1786  02E8  234B  118A         	fcall	PL6	;call to abstracted procedure
  1787  02EA  0800               	movf	0,w
  1788  02EB  00A4               	movwf	??_Filter+2
  1789  02EC  0A84               	incf	4,f
  1790  02ED  0800               	movf	0,w
  1791  02EE  00A5               	movwf	??_Filter+3
  1792  02EF  0823               	movf	??_Filter+1,w
  1793  02F0  0225               	subwf	??_Filter+3,w
  1794  02F1  1D03               	skipz
  1795  02F2  2AF5               	goto	u1025
  1796  02F3  0822               	movf	??_Filter,w
  1797  02F4  0224               	subwf	??_Filter+2,w
  1798  02F5                     u1025:	
  1799  02F5  1803               	skipnc
  1800  02F6  2B12               	goto	l3461
  1801                           
  1802                           ;common.c: 77: {
  1803                           ;common.c: 79: filter_temp = filter_buf[i];
  1804  02F7  1003               	clrc
  1805  02F8  0D46               	rlf	Filter@i,w
  1806  02F9  3E26               	addlw	Filter@filter_buf& (0+255)
  1807  02FA  0084               	movwf	4
  1808  02FB  0800               	movf	0,w
  1809  02FC  00BE               	movwf	Filter@filter_temp
  1810  02FD  0A84               	incf	4,f
  1811  02FE  0800               	movf	0,w
  1812  02FF  00BF               	movwf	Filter@filter_temp+1
  1813                           
  1814                           ;common.c: 81: filter_buf[i] = filter_buf[i + 1];
  1815  0300  234B  118A         	fcall	PL6	;call to abstracted procedure
  1816  0302  0800               	movf	0,w
  1817  0303  00A2               	movwf	??_Filter
  1818  0304  0A84               	incf	4,f
  1819  0305  0800               	movf	0,w
  1820  0306  00A3               	movwf	??_Filter+1
  1821  0307  1003               	clrc
  1822  0308  0D46               	rlf	Filter@i,w
  1823  0309  2343  118A         	fcall	PL5	;call to abstracted procedure
  1824                           
  1825                           ;common.c: 83: filter_buf[i + 1] = filter_temp;
  1826  030B  234B  118A         	fcall	PL6	;call to abstracted procedure
  1827  030D  083E               	movf	Filter@filter_temp,w
  1828  030E  0080               	movwf	0
  1829  030F  0A84               	incf	4,f
  1830  0310  083F               	movf	Filter@filter_temp+1,w
  1831  0311  0080               	movwf	0
  1832  0312                     l3461:	
  1833  0312  0AC6               	incf	Filter@i,f
  1834  0313  2AD2               	goto	l3463
  1835  0314                     l3465:	
  1836  0314  1283               	bcf	3,5	;RP0=0, select bank0
  1837  0315  300B               	movlw	11
  1838  0316  1303               	bcf	3,6	;RP1=0, select bank0
  1839  0317  0AC5               	incf	Filter@j,f
  1840  0318  0245               	subwf	Filter@j,w
  1841  0319  1C03               	skipc
  1842  031A  2AD1               	goto	l3455
  1843                           
  1844                           ;common.c: 84: }
  1845                           ;common.c: 85: }
  1846                           ;common.c: 86: }
  1847                           ;common.c: 88: for(i = 2; i < 12 - 2; i++)
  1848  031B  3002               	movlw	2
  1849  031C  00C6               	movwf	Filter@i
  1850                           
  1851                           ;common.c: 89: {
  1852                           ;common.c: 90: filter_sum += filter_buf[i];
  1853  031D  1003               	clrc
  1854  031E                     L7:	
  1855  031E  0D46               	rlf	Filter@i,w
  1856  031F  3E26               	addlw	Filter@filter_buf& (0+255)
  1857  0320  233B  118A         	fcall	PL3	;call to abstracted procedure
  1858  0322  0822               	movf	??_Filter,w
  1859  0323  07C0               	addwf	Filter@filter_sum,f
  1860  0324  1803               	skipnc
  1861  0325  0AC1               	incf	Filter@filter_sum+1,f
  1862  0326  0823               	movf	??_Filter+1,w
  1863  0327  07C1               	addwf	Filter@filter_sum+1,f
  1864  0328  300A               	movlw	10
  1865  0329  0AC6               	incf	Filter@i,f
  1866  032A  0246               	subwf	Filter@i,w
  1867  032B  1C03               	skipc
  1868  032C  2B1E               	goto	L7
  1869                           
  1870                           ;common.c: 91: }
  1871                           ;common.c: 93: return (filter_sum >> 3);
  1872  032D  0841               	movf	Filter@filter_sum+1,w
  1873  032E  00A1               	movwf	?_Filter+1
  1874  032F  0840               	movf	Filter@filter_sum,w
  1875  0330  00A0               	movwf	?_Filter
  1876  0331  1003               	clrc
  1877  0332  0CA1               	rrf	?_Filter+1,f
  1878  0333  0CA0               	rrf	?_Filter,f
  1879  0334  1003               	clrc
  1880  0335  0CA1               	rrf	?_Filter+1,f
  1881  0336  0CA0               	rrf	?_Filter,f
  1882  0337  1003               	clrc
  1883  0338  0CA1               	rrf	?_Filter+1,f
  1884  0339  0CA0               	rrf	?_Filter,f
  1885  033A  0008               	return
  1886  033B                     __end_of_Filter:	
  1887  033B                     PL3:	
  1888  033B  0084               	movwf	4
  1889  033C  1383               	bcf	3,7	;select IRP bank0
  1890  033D  0800               	movf	0,w
  1891  033E  00A2               	movwf	??_Filter
  1892  033F  0A84               	incf	4,f
  1893  0340  0800               	movf	0,w
  1894  0341  00A3               	movwf	??_Filter+1
  1895  0342  0008               	return
  1896  0343                     PL5:	
  1897  0343  3E26               	addlw	Filter@filter_buf& (0+255)
  1898  0344  0084               	movwf	4
  1899  0345  0822               	movf	??_Filter,w
  1900  0346  0080               	movwf	0
  1901  0347  0A84               	incf	4,f
  1902  0348  0823               	movf	??_Filter+1,w
  1903  0349  0080               	movwf	0
  1904  034A  0008               	return
  1905  034B                     PL6:	
  1906  034B  1003               	clrc
  1907  034C  0D46               	rlf	Filter@i,w
  1908  034D  3E02               	addlw	2
  1909  034E  3E26               	addlw	Filter@filter_buf& (0+255)
  1910  034F  0084               	movwf	4
  1911  0350  0008               	return
  1912                           
  1913                           	psect	text825
  1914  0351                     __ptext825:	
  1915 ;; =============== function _getAdOriginalCh13Value ends ============
  1916                           
  1917                           
  1918 ;; *************** function _process_AD_Converter_Value *****************
  1919 ;; Defined at:
  1920 ;;		line 260 in file "D:\develop\190625\AK7030-OTP\common.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;		None
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;		None
  1925 ;; Return value:  Size  Location     Type
  1926 ;;		None               void
  1927 ;; Registers used:
  1928 ;;		wreg, status,2, status,0, pclath, cstack
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 60/0
  1932 ;;		Unchanged: FFF9F/0
  1933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1934 ;;      Params:         0       0       0       0       0
  1935 ;;      Locals:         0       0       0       0       0
  1936 ;;      Temps:          0       0       0       0       0
  1937 ;;      Totals:         0       0       0       0       0
  1938 ;;Total ram usage:        0 bytes
  1939 ;; Hardware stack levels used:    1
  1940 ;; Hardware stack levels required when called:    3
  1941 ;; This function calls:
  1942 ;;		_getAD_ConvertFlag
  1943 ;;		_setAD_ConvertFlag
  1944 ;;		_AD_Sample
  1945 ;;		_adc_test_init
  1946 ;;		_adc_start
  1947 ;; This function is called by:
  1948 ;;		_main
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951  0351                     _process_AD_Converter_Value:	
  1952                           
  1953                           ;common.c: 261: if(getAD_ConvertFlag())
  1954                           
  1955                           ; Regs used in _process_AD_Converter_Value: [wreg+status,2+status,0+pclath+cstack]
  1956  0351  2367  118A         	fcall	_getAD_ConvertFlag
  1957  0353  3A00               	xorlw	0
  1958  0354  1903               	skipnz
  1959  0355  0008               	return
  1960                           
  1961                           ;common.c: 262: {
  1962                           ;common.c: 263: setAD_ConvertFlag(0);
  1963  0356  3000               	movlw	0
  1964  0357  236B  118A         	fcall	_setAD_ConvertFlag
  1965                           
  1966                           ;common.c: 264: AD_Sample();
  1967  0359  236E  118A         	fcall	_AD_Sample
  1968                           
  1969                           ;common.c: 265: if(12 == sampleChannelSelect)
  1970  035B  0869               	movf	_sampleChannelSelect,w
  1971  035C  3A0C               	xorlw	12
  1972                           
  1973                           ;common.c: 266: adc_test_init(12,3);
  1974  035D  3003               	movlw	3
  1975  035E  00A0               	movwf	?_adc_test_init
  1976  035F  1D03               	skipz
  1977  0360  2B63               	goto	L6
  1978  0361  300C               	movlw	12
  1979  0362  2B64               	goto	L5
  1980  0363                     L6:	
  1981                           ;common.c: 269: else
  1982                           ;common.c: 270: adc_test_init(13,3);
  1983                           
  1984  0363  300D               	movlw	13
  1985  0364                     L5:	
  1986  0364  2382  118A         	fcall	_adc_test_init
  1987                           
  1988                           ;common.c: 272: adc_start();
  1989  0366  2B97               	ljmp	l3321
  1990  0367                     __end_of_process_AD_Converter_Value:	
  1991  0367                     __ptext830:	
  1992 ;; =============== function _setAD_ConvertFlag ends ============
  1993                           
  1994                           
  1995 ;; *************** function _getAD_ConvertFlag *****************
  1996 ;; Defined at:
  1997 ;;		line 209 in file "D:\develop\190625\AK7030-OTP\common.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;		None
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;		None
  2002 ;; Return value:  Size  Location     Type
  2003 ;;                  1    wreg      unsigned char 
  2004 ;; Registers used:
  2005 ;;		wreg
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : 60/0
  2009 ;;		Unchanged: FFF9F/0
  2010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2011 ;;      Params:         0       0       0       0       0
  2012 ;;      Locals:         0       0       0       0       0
  2013 ;;      Temps:          0       0       0       0       0
  2014 ;;      Totals:         0       0       0       0       0
  2015 ;;Total ram usage:        0 bytes
  2016 ;; Hardware stack levels used:    1
  2017 ;; Hardware stack levels required when called:    2
  2018 ;; This function calls:
  2019 ;;		Nothing
  2020 ;; This function is called by:
  2021 ;;		_process_AD_Converter_Value
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024  0367                     _getAD_ConvertFlag:	
  2025                           
  2026                           ;common.c: 210: return adc_convert_flag;
  2027                           
  2028                           ; Regs used in _getAD_ConvertFlag: [wreg]
  2029  0367  1283               	bcf	3,5	;RP0=0, select bank0
  2030  0368  1303               	bcf	3,6	;RP1=0, select bank0
  2031  0369  085A               	movf	_adc_convert_flag,w
  2032  036A  0008               	return
  2033  036B                     __end_of_getAD_ConvertFlag:	
  2034  036B                     __ptext829:	
  2035 ;; =============== function _AD_Sample ends ============
  2036                           
  2037                           
  2038 ;; *************** function _setAD_ConvertFlag *****************
  2039 ;; Defined at:
  2040 ;;		line 215 in file "D:\develop\190625\AK7030-OTP\common.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;  flag            1    wreg     unsigned char 
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;  flag            1    0[BANK0 ] unsigned char 
  2045 ;; Return value:  Size  Location     Type
  2046 ;;		None               void
  2047 ;; Registers used:
  2048 ;;		wreg
  2049 ;; Tracked objects:
  2050 ;;		On entry : 60/0
  2051 ;;		On exit  : 60/0
  2052 ;;		Unchanged: FFF9F/0
  2053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2054 ;;      Params:         0       0       0       0       0
  2055 ;;      Locals:         0       1       0       0       0
  2056 ;;      Temps:          0       0       0       0       0
  2057 ;;      Totals:         0       1       0       0       0
  2058 ;;Total ram usage:        1 bytes
  2059 ;; Hardware stack levels used:    1
  2060 ;; Hardware stack levels required when called:    2
  2061 ;; This function calls:
  2062 ;;		Nothing
  2063 ;; This function is called by:
  2064 ;;		_process_AD_Converter_Value
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067  036B                     _setAD_ConvertFlag:	
  2068                           
  2069                           ; Regs used in _setAD_ConvertFlag: [wreg]
  2070                           ;setAD_ConvertFlag@flag stored from wreg
  2071  036B  00A0               	movwf	setAD_ConvertFlag@flag
  2072                           
  2073                           ;common.c: 216: adc_convert_flag = flag;
  2074  036C  00DA               	movwf	_adc_convert_flag
  2075  036D  0008               	return
  2076  036E                     __end_of_setAD_ConvertFlag:	
  2077  036E                     __ptext828:	
  2078 ;; =============== function _initPin ends ============
  2079                           
  2080                           
  2081 ;; *************** function _AD_Sample *****************
  2082 ;; Defined at:
  2083 ;;		line 286 in file "D:\develop\190625\AK7030-OTP\common.c"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;		None
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;		None
  2088 ;; Return value:  Size  Location     Type
  2089 ;;		None               void
  2090 ;; Registers used:
  2091 ;;		wreg, status,2, status,0
  2092 ;; Tracked objects:
  2093 ;;		On entry : 60/0
  2094 ;;		On exit  : 60/0
  2095 ;;		Unchanged: FFF9F/0
  2096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2097 ;;      Params:         0       0       0       0       0
  2098 ;;      Locals:         0       0       0       0       0
  2099 ;;      Temps:          0       0       0       0       0
  2100 ;;      Totals:         0       0       0       0       0
  2101 ;;Total ram usage:        0 bytes
  2102 ;; Hardware stack levels used:    1
  2103 ;; Hardware stack levels required when called:    2
  2104 ;; This function calls:
  2105 ;;		Nothing
  2106 ;; This function is called by:
  2107 ;;		_process_AD_Converter_Value
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110  036E                     _AD_Sample:	
  2111                           
  2112                           ;common.c: 287: if(sampleTimes < 12)
  2113                           
  2114                           ; Regs used in _AD_Sample: [wreg+status,2+status,0]
  2115  036E  300C               	movlw	12
  2116  036F  025F               	subwf	_sampleTimes,w
  2117  0370  1803               	skipnc
  2118  0371  0008               	return
  2119  0372  300C               	movlw	12
  2120                           
  2121                           ;common.c: 288: {
  2122                           ;common.c: 309: sampleTimes++;
  2123  0373  0ADF               	incf	_sampleTimes,f
  2124                           
  2125                           ;common.c: 311: if(sampleTimes >= 12)
  2126  0374  025F               	subwf	_sampleTimes,w
  2127  0375  1C03               	skipc
  2128  0376  0008               	return
  2129                           
  2130                           ;common.c: 312: {
  2131                           ;common.c: 313: sampleTimes = 0;
  2132  0377  01DF               	clrf	_sampleTimes
  2133                           
  2134                           ;common.c: 315: if(sampleChannelSelect == 12)
  2135  0378  0869               	movf	_sampleChannelSelect,w
  2136  0379  3A0C               	xorlw	12
  2137  037A  1D03               	skipz
  2138  037B  2B7F               	goto	l3551
  2139                           
  2140                           ;common.c: 316: {
  2141                           ;common.c: 319: sampleChannelSelect = 13;
  2142  037C  300D               	movlw	13
  2143  037D  00E9               	movwf	_sampleChannelSelect
  2144                           
  2145                           ;common.c: 320: }
  2146  037E  0008               	return
  2147  037F                     l3551:	
  2148                           
  2149                           ;common.c: 331: else
  2150                           ;common.c: 332: {
  2151                           ;common.c: 334: sampleChannelSelect = 12;
  2152  037F  300C               	movlw	12
  2153  0380  00E9               	movwf	_sampleChannelSelect
  2154  0381  0008               	return
  2155  0382                     __end_of_AD_Sample:	
  2156  0382                     __ptext844:	
  2157 ;; =============== function _adc_start ends ============
  2158                           
  2159                           
  2160 ;; *************** function _adc_test_init *****************
  2161 ;; Defined at:
  2162 ;;		line 85 in file "D:\develop\190625\AK7030-OTP\periph.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;  channel         1    wreg     unsigned char 
  2165 ;;  ref             1    0[BANK0 ] unsigned char 
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;  channel         1    2[BANK0 ] unsigned char 
  2168 ;; Return value:  Size  Location     Type
  2169 ;;		None               void
  2170 ;; Registers used:
  2171 ;;		wreg, status,2, status,0
  2172 ;; Tracked objects:
  2173 ;;		On entry : 60/0
  2174 ;;		On exit  : 60/20
  2175 ;;		Unchanged: FFF9F/0
  2176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2177 ;;      Params:         0       1       0       0       0
  2178 ;;      Locals:         0       1       0       0       0
  2179 ;;      Temps:          0       1       0       0       0
  2180 ;;      Totals:         0       3       0       0       0
  2181 ;;Total ram usage:        3 bytes
  2182 ;; Hardware stack levels used:    1
  2183 ;; Hardware stack levels required when called:    2
  2184 ;; This function calls:
  2185 ;;		Nothing
  2186 ;; This function is called by:
  2187 ;;		_main
  2188 ;;		_process_AD_Converter_Value
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191  0382                     _adc_test_init:	
  2192                           
  2193                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  2194                           ;adc_test_init@channel stored from wreg
  2195  0382  00A2               	movwf	adc_test_init@channel
  2196                           
  2197                           ;periph.c: 86: ADCON0 = 0x00;
  2198  0383  019F               	clrf	31	;volatile
  2199                           
  2200                           ;periph.c: 87: ADCON0|=channel<<2;
  2201  0384  00A1               	movwf	??_adc_test_init
  2202  0385  1003               	clrc
  2203  0386  0DA1               	rlf	??_adc_test_init,f
  2204  0387  1003               	clrc
  2205  0388  0D21               	rlf	??_adc_test_init,w
  2206  0389  049F               	iorwf	31,f	;volatile
  2207                           
  2208                           ;periph.c: 88: ADCON1|=ref<<6;
  2209  038A  0820               	movf	adc_test_init@ref,w
  2210  038B  00A1               	movwf	??_adc_test_init
  2211  038C  0CA1               	rrf	??_adc_test_init,f
  2212  038D  0CA1               	rrf	??_adc_test_init,f
  2213  038E  0C21               	rrf	??_adc_test_init,w
  2214  038F  39C0               	andlw	192
  2215  0390  1683               	bsf	3,5	;RP0=1, select bank1
  2216  0391  049F               	iorwf	31,f	;volatile
  2217                           
  2218                           ;periph.c: 89: ADON=1;
  2219  0392  1283               	bcf	3,5	;RP0=0, select bank0
  2220  0393  141F               	bsf	31,0
  2221                           
  2222                           ;periph.c: 90: ADIE=1;
  2223  0394  1683               	bsf	3,5	;RP0=1, select bank1
  2224  0395  150D               	bsf	13,2
  2225  0396  0008               	return
  2226  0397                     __end_of_adc_test_init:	
  2227  0397                     __ptext843:	
  2228 ;; =============== function _startTwentyMinTimer ends ============
  2229                           
  2230                           
  2231 ;; *************** function _adc_start *****************
  2232 ;; Defined at:
  2233 ;;		line 100 in file "D:\develop\190625\AK7030-OTP\periph.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;		None
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;		None
  2238 ;; Return value:  Size  Location     Type
  2239 ;;		None               void
  2240 ;; Registers used:
  2241 ;;		None
  2242 ;; Tracked objects:
  2243 ;;		On entry : 60/20
  2244 ;;		On exit  : 60/0
  2245 ;;		Unchanged: FFF9F/0
  2246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2247 ;;      Params:         0       0       0       0       0
  2248 ;;      Locals:         0       0       0       0       0
  2249 ;;      Temps:          0       0       0       0       0
  2250 ;;      Totals:         0       0       0       0       0
  2251 ;;Total ram usage:        0 bytes
  2252 ;; Hardware stack levels used:    1
  2253 ;; Hardware stack levels required when called:    2
  2254 ;; This function calls:
  2255 ;;		Nothing
  2256 ;; This function is called by:
  2257 ;;		_main
  2258 ;;		_process_AD_Converter_Value
  2259 ;; This function uses a non-reentrant model
  2260 ;;
  2261  0397                     _adc_start:	
  2262  0397                     l3321:	
  2263                           ; Regs used in _adc_start: []
  2264                           
  2265                           
  2266                           ;periph.c: 101: GO=1;
  2267  0397  1283               	bcf	3,5	;RP0=0, select bank0
  2268  0398  149F               	bsf	31,1
  2269  0399  0008               	return
  2270  039A                     __end_of_adc_start:	
  2271                           
  2272                           	psect	text826
  2273  03CB                     __ptext826:	
  2274 ;; =============== function _process_AD_Converter_Value ends ============
  2275                           
  2276                           
  2277 ;; *************** function _setPinInitVaule *****************
  2278 ;; Defined at:
  2279 ;;		line 324 in file "D:\develop\190625\AK7030-OTP\main.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;		None
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;		None
  2284 ;; Return value:  Size  Location     Type
  2285 ;;		None               void
  2286 ;; Registers used:
  2287 ;;		wreg, status,2, status,0, pclath, cstack
  2288 ;; Tracked objects:
  2289 ;;		On entry : 17F/20
  2290 ;;		On exit  : 17F/0
  2291 ;;		Unchanged: FFE80/0
  2292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2293 ;;      Params:         0       0       0       0       0
  2294 ;;      Locals:         0       0       0       0       0
  2295 ;;      Temps:          0       0       0       0       0
  2296 ;;      Totals:         0       0       0       0       0
  2297 ;;Total ram usage:        0 bytes
  2298 ;; Hardware stack levels used:    1
  2299 ;; Hardware stack levels required when called:    3
  2300 ;; This function calls:
  2301 ;;		_setPB3
  2302 ;;		_setPB4
  2303 ;;		_setPB5
  2304 ;; This function is called by:
  2305 ;;		_main
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308  03CB                     _setPinInitVaule:	
  2309                           
  2310                           ;main.c: 326: setPB3(1);
  2311                           
  2312                           ; Regs used in _setPinInitVaule: [wreg+status,2+status,0+pclath+cstack]
  2313  03CB  3001               	movlw	1
  2314  03CC  23D3  118A         	fcall	_setPB3
  2315                           
  2316                           ;main.c: 327: setPB4(0);
  2317  03CE  3000               	movlw	0
  2318  03CF  23DC  118A         	fcall	_setPB4
  2319                           
  2320                           ;main.c: 328: setPB5(1);
  2321  03D1  3001               	movlw	1
  2322  03D2  2BE4               	ljmp	_setPB5
  2323  03D3                     __end_of_setPinInitVaule:	
  2324  03D3                     __ptext858:	
  2325 ;; =============== function _initPB4 ends ============
  2326                           
  2327                           
  2328 ;; *************** function _setPB3 *****************
  2329 ;; Defined at:
  2330 ;;		line 143 in file "D:\develop\190625\AK7030-OTP\main.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;  bValue          1    wreg     unsigned char 
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;  bValue          1    0[BANK0 ] unsigned char 
  2335 ;; Return value:  Size  Location     Type
  2336 ;;		None               void
  2337 ;; Registers used:
  2338 ;;		wreg
  2339 ;; Tracked objects:
  2340 ;;		On entry : 40/0
  2341 ;;		On exit  : 60/0
  2342 ;;		Unchanged: FFF9F/0
  2343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2344 ;;      Params:         0       0       0       0       0
  2345 ;;      Locals:         0       1       0       0       0
  2346 ;;      Temps:          0       0       0       0       0
  2347 ;;      Totals:         0       1       0       0       0
  2348 ;;Total ram usage:        1 bytes
  2349 ;; Hardware stack levels used:    1
  2350 ;; Hardware stack levels required when called:    2
  2351 ;; This function calls:
  2352 ;;		Nothing
  2353 ;; This function is called by:
  2354 ;;		_setPinInitVaule
  2355 ;;		_main
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358  03D3                     _setPB3:	
  2359                           
  2360                           ; Regs used in _setPB3: [wreg]
  2361                           ;setPB3@bValue stored from wreg
  2362  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  2363  03D4  00A0               	movwf	setPB3@bValue
  2364                           
  2365                           ;main.c: 144: if( bValue )
  2366  03D5  0820               	movf	setPB3@bValue,w
  2367  03D6  1903               	btfsc	3,2
  2368  03D7  2BDA               	goto	l687
  2369                           
  2370                           ;main.c: 146: PB3 = 1;
  2371  03D8  1586               	bsf	6,3
  2372  03D9  0008               	return
  2373  03DA                     l687:	
  2374                           
  2375                           ;main.c: 150: else
  2376                           ;main.c: 152: PB3= 0;
  2377  03DA  1186               	bcf	6,3
  2378  03DB  0008               	return
  2379  03DC                     __end_of_setPB3:	
  2380  03DC                     __ptext856:	
  2381 ;; =============== function _initPB5 ends ============
  2382                           
  2383                           
  2384 ;; *************** function _setPB4 *****************
  2385 ;; Defined at:
  2386 ;;		line 178 in file "D:\develop\190625\AK7030-OTP\main.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;  bValue          1    wreg     unsigned char 
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;  bValue          1    0[BANK0 ] unsigned char 
  2391 ;; Return value:  Size  Location     Type
  2392 ;;		None               void
  2393 ;; Registers used:
  2394 ;;		wreg
  2395 ;; Tracked objects:
  2396 ;;		On entry : 60/0
  2397 ;;		On exit  : 60/0
  2398 ;;		Unchanged: FFF9F/0
  2399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2400 ;;      Params:         0       0       0       0       0
  2401 ;;      Locals:         0       1       0       0       0
  2402 ;;      Temps:          0       0       0       0       0
  2403 ;;      Totals:         0       1       0       0       0
  2404 ;;Total ram usage:        1 bytes
  2405 ;; Hardware stack levels used:    1
  2406 ;; Hardware stack levels required when called:    2
  2407 ;; This function calls:
  2408 ;;		Nothing
  2409 ;; This function is called by:
  2410 ;;		_setPinInitVaule
  2411 ;;		_main
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414  03DC                     _setPB4:	
  2415                           
  2416                           ; Regs used in _setPB4: [wreg]
  2417                           ;setPB4@bValue stored from wreg
  2418  03DC  00A0               	movwf	setPB4@bValue
  2419                           
  2420                           ;main.c: 179: if( bValue )
  2421  03DD  0820               	movf	setPB4@bValue,w
  2422  03DE  1903               	btfsc	3,2
  2423  03DF  2BE2               	goto	l697
  2424                           
  2425                           ;main.c: 181: PB4 = 1;
  2426  03E0  1606               	bsf	6,4
  2427  03E1  0008               	return
  2428  03E2                     l697:	
  2429                           
  2430                           ;main.c: 185: else
  2431                           ;main.c: 187: PB4= 0;
  2432  03E2  1206               	bcf	6,4
  2433  03E3  0008               	return
  2434  03E4                     __end_of_setPB4:	
  2435  03E4                     __ptext854:	
  2436 ;; =============== function _initPB2_AsHighResistence ends ============
  2437                           
  2438                           
  2439 ;; *************** function _setPB5 *****************
  2440 ;; Defined at:
  2441 ;;		line 212 in file "D:\develop\190625\AK7030-OTP\main.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;  bValue          1    wreg     unsigned char 
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;  bValue          1    0[BANK0 ] unsigned char 
  2446 ;; Return value:  Size  Location     Type
  2447 ;;		None               void
  2448 ;; Registers used:
  2449 ;;		wreg
  2450 ;; Tracked objects:
  2451 ;;		On entry : 60/0
  2452 ;;		On exit  : 60/0
  2453 ;;		Unchanged: FFF9F/0
  2454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2455 ;;      Params:         0       0       0       0       0
  2456 ;;      Locals:         0       1       0       0       0
  2457 ;;      Temps:          0       0       0       0       0
  2458 ;;      Totals:         0       1       0       0       0
  2459 ;;Total ram usage:        1 bytes
  2460 ;; Hardware stack levels used:    1
  2461 ;; Hardware stack levels required when called:    2
  2462 ;; This function calls:
  2463 ;;		Nothing
  2464 ;; This function is called by:
  2465 ;;		_setPinInitVaule
  2466 ;;		_main
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469  03E4                     _setPB5:	
  2470                           
  2471                           ; Regs used in _setPB5: [wreg]
  2472                           ;setPB5@bValue stored from wreg
  2473  03E4  00A0               	movwf	setPB5@bValue
  2474                           
  2475                           ;main.c: 213: if( bValue )
  2476  03E5  0820               	movf	setPB5@bValue,w
  2477  03E6  1903               	btfsc	3,2
  2478  03E7  2BEA               	goto	l707
  2479                           
  2480                           ;main.c: 215: PB5 = 1;
  2481  03E8  1686               	bsf	6,5
  2482  03E9  0008               	return
  2483  03EA                     l707:	
  2484                           
  2485                           ;main.c: 219: else
  2486                           ;main.c: 221: PB5= 0;
  2487  03EA  1286               	bcf	6,5
  2488  03EB  0008               	return
  2489  03EC                     __end_of_setPB5:	
  2490                           
  2491                           	psect	text827
  2492  039A                     __ptext827:	
  2493 ;; =============== function _setPinInitVaule ends ============
  2494                           
  2495                           
  2496 ;; *************** function _initPin *****************
  2497 ;; Defined at:
  2498 ;;		line 308 in file "D:\develop\190625\AK7030-OTP\main.c"
  2499 ;; Parameters:    Size  Location     Type
  2500 ;;		None
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;		None
  2503 ;; Return value:  Size  Location     Type
  2504 ;;		None               void
  2505 ;; Registers used:
  2506 ;;		wreg, status,2, status,0, pclath, cstack
  2507 ;; Tracked objects:
  2508 ;;		On entry : 17F/0
  2509 ;;		On exit  : 17F/20
  2510 ;;		Unchanged: FFE80/0
  2511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2512 ;;      Params:         0       0       0       0       0
  2513 ;;      Locals:         0       0       0       0       0
  2514 ;;      Temps:          0       0       0       0       0
  2515 ;;      Totals:         0       0       0       0       0
  2516 ;;Total ram usage:        0 bytes
  2517 ;; Hardware stack levels used:    1
  2518 ;; Hardware stack levels required when called:    3
  2519 ;; This function calls:
  2520 ;;		_initPB2_AsHighResistence
  2521 ;;		_initPB3
  2522 ;;		_initPB4
  2523 ;;		_initPB5
  2524 ;; This function is called by:
  2525 ;;		_main
  2526 ;; This function uses a non-reentrant model
  2527 ;;
  2528  039A                     _initPin:	
  2529                           
  2530                           ;main.c: 310: initPB2_AsHighResistence();
  2531                           
  2532                           ; Regs used in _initPin: [wreg+status,2+status,0+pclath+cstack]
  2533  039A  23B0  118A         	fcall	_initPB2_AsHighResistence
  2534                           
  2535                           ;main.c: 312: initPB3(0);
  2536  039C  3000               	movlw	0
  2537  039D  23A4  118A         	fcall	_initPB3
  2538                           
  2539                           ;main.c: 314: initPB4(0);
  2540  039F  3000               	movlw	0
  2541  03A0  23B5  118A         	fcall	_initPB4
  2542                           
  2543                           ;main.c: 316: initPB5(0);
  2544  03A2  3000               	movlw	0
  2545  03A3  2BC0               	ljmp	_initPB5
  2546  03A4                     __end_of_initPin:	
  2547  03A4                     __ptext859:	
  2548 ;; =============== function _setPB3 ends ============
  2549                           
  2550                           
  2551 ;; *************** function _initPB3 *****************
  2552 ;; Defined at:
  2553 ;;		line 126 in file "D:\develop\190625\AK7030-OTP\main.c"
  2554 ;; Parameters:    Size  Location     Type
  2555 ;;  bValue          1    wreg     unsigned char 
  2556 ;; Auto vars:     Size  Location     Type
  2557 ;;  bValue          1    0[BANK0 ] unsigned char 
  2558 ;; Return value:  Size  Location     Type
  2559 ;;		None               void
  2560 ;; Registers used:
  2561 ;;		wreg
  2562 ;; Tracked objects:
  2563 ;;		On entry : 17F/60
  2564 ;;		On exit  : 17F/20
  2565 ;;		Unchanged: FFE80/0
  2566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2567 ;;      Params:         0       0       0       0       0
  2568 ;;      Locals:         0       1       0       0       0
  2569 ;;      Temps:          0       0       0       0       0
  2570 ;;      Totals:         0       1       0       0       0
  2571 ;;Total ram usage:        1 bytes
  2572 ;; Hardware stack levels used:    1
  2573 ;; Hardware stack levels required when called:    2
  2574 ;; This function calls:
  2575 ;;		Nothing
  2576 ;; This function is called by:
  2577 ;;		_initPin
  2578 ;; This function uses a non-reentrant model
  2579 ;;
  2580  03A4                     _initPB3:	
  2581                           
  2582                           ; Regs used in _initPB3: [wreg]
  2583                           ;initPB3@bValue stored from wreg
  2584  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  2585  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  2586  03A6  00A0               	movwf	initPB3@bValue
  2587                           
  2588                           ;main.c: 127: if( bValue )
  2589  03A7  0820               	movf	initPB3@bValue,w
  2590  03A8  1903               	btfsc	3,2
  2591  03A9  2BAD               	goto	l682
  2592                           
  2593                           ;main.c: 129: TRISB3 = 1;
  2594  03AA  1683               	bsf	3,5	;RP0=1, select bank1
  2595  03AB  1586               	bsf	6,3
  2596  03AC  0008               	return
  2597  03AD                     l682:	
  2598                           
  2599                           ;main.c: 133: else
  2600                           ;main.c: 135: TRISB3 = 0;
  2601  03AD  1683               	bsf	3,5	;RP0=1, select bank1
  2602  03AE  1186               	bcf	6,3
  2603  03AF  0008               	return
  2604  03B0                     __end_of_initPB3:	
  2605  03B0                     __ptext853:	
  2606 ;; =============== function _pwm_start ends ============
  2607                           
  2608                           
  2609 ;; *************** function _initPB2_AsHighResistence *****************
  2610 ;; Defined at:
  2611 ;;		line 229 in file "D:\develop\190625\AK7030-OTP\main.c"
  2612 ;; Parameters:    Size  Location     Type
  2613 ;;		None
  2614 ;; Auto vars:     Size  Location     Type
  2615 ;;		None
  2616 ;; Return value:  Size  Location     Type
  2617 ;;		None               void
  2618 ;; Registers used:
  2619 ;;		None
  2620 ;; Tracked objects:
  2621 ;;		On entry : 17F/0
  2622 ;;		On exit  : 17F/60
  2623 ;;		Unchanged: FFE80/0
  2624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2625 ;;      Params:         0       0       0       0       0
  2626 ;;      Locals:         0       0       0       0       0
  2627 ;;      Temps:          0       0       0       0       0
  2628 ;;      Totals:         0       0       0       0       0
  2629 ;;Total ram usage:        0 bytes
  2630 ;; Hardware stack levels used:    1
  2631 ;; Hardware stack levels required when called:    2
  2632 ;; This function calls:
  2633 ;;		Nothing
  2634 ;; This function is called by:
  2635 ;;		_initPin
  2636 ;; This function uses a non-reentrant model
  2637 ;;
  2638  03B0                     _initPB2_AsHighResistence:	
  2639                           
  2640                           ;main.c: 231: PB2 = 1;
  2641                           
  2642                           ; Regs used in _initPB2_AsHighResistence: []
  2643  03B0  1506               	bsf	6,2
  2644                           
  2645                           ;main.c: 232: PBOD2 = 1;
  2646  03B1  1683               	bsf	3,5	;RP0=1, select bank3
  2647  03B2  1703               	bsf	3,6	;RP1=1, select bank3
  2648  03B3  1508               	bsf	8,2
  2649  03B4  0008               	return
  2650  03B5                     __end_of_initPB2_AsHighResistence:	
  2651  03B5                     __ptext857:	
  2652 ;; =============== function _setPB4 ends ============
  2653                           
  2654                           
  2655 ;; *************** function _initPB4 *****************
  2656 ;; Defined at:
  2657 ;;		line 161 in file "D:\develop\190625\AK7030-OTP\main.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;  bValue          1    wreg     unsigned char 
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;  bValue          1    0[BANK0 ] unsigned char 
  2662 ;; Return value:  Size  Location     Type
  2663 ;;		None               void
  2664 ;; Registers used:
  2665 ;;		wreg
  2666 ;; Tracked objects:
  2667 ;;		On entry : 17F/20
  2668 ;;		On exit  : 17F/20
  2669 ;;		Unchanged: FFE80/0
  2670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2671 ;;      Params:         0       0       0       0       0
  2672 ;;      Locals:         0       1       0       0       0
  2673 ;;      Temps:          0       0       0       0       0
  2674 ;;      Totals:         0       1       0       0       0
  2675 ;;Total ram usage:        1 bytes
  2676 ;; Hardware stack levels used:    1
  2677 ;; Hardware stack levels required when called:    2
  2678 ;; This function calls:
  2679 ;;		Nothing
  2680 ;; This function is called by:
  2681 ;;		_initPin
  2682 ;; This function uses a non-reentrant model
  2683 ;;
  2684  03B5                     _initPB4:	
  2685                           
  2686                           ; Regs used in _initPB4: [wreg]
  2687                           ;initPB4@bValue stored from wreg
  2688  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  2689  03B6  00A0               	movwf	initPB4@bValue
  2690                           
  2691                           ;main.c: 162: if( bValue )
  2692  03B7  0820               	movf	initPB4@bValue,w
  2693  03B8  1903               	btfsc	3,2
  2694  03B9  2BBD               	goto	l692
  2695                           
  2696                           ;main.c: 164: TRISB4 = 1;
  2697  03BA  1683               	bsf	3,5	;RP0=1, select bank1
  2698  03BB  1606               	bsf	6,4
  2699  03BC  0008               	return
  2700  03BD                     l692:	
  2701                           
  2702                           ;main.c: 168: else
  2703                           ;main.c: 170: TRISB4= 0;
  2704  03BD  1683               	bsf	3,5	;RP0=1, select bank1
  2705  03BE  1206               	bcf	6,4
  2706  03BF  0008               	return
  2707  03C0                     __end_of_initPB4:	
  2708  03C0                     __ptext855:	
  2709 ;; =============== function _setPB5 ends ============
  2710                           
  2711                           
  2712 ;; *************** function _initPB5 *****************
  2713 ;; Defined at:
  2714 ;;		line 195 in file "D:\develop\190625\AK7030-OTP\main.c"
  2715 ;; Parameters:    Size  Location     Type
  2716 ;;  bValue          1    wreg     unsigned char 
  2717 ;; Auto vars:     Size  Location     Type
  2718 ;;  bValue          1    0[BANK0 ] unsigned char 
  2719 ;; Return value:  Size  Location     Type
  2720 ;;		None               void
  2721 ;; Registers used:
  2722 ;;		wreg
  2723 ;; Tracked objects:
  2724 ;;		On entry : 17F/20
  2725 ;;		On exit  : 17F/20
  2726 ;;		Unchanged: FFE80/0
  2727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2728 ;;      Params:         0       0       0       0       0
  2729 ;;      Locals:         0       1       0       0       0
  2730 ;;      Temps:          0       0       0       0       0
  2731 ;;      Totals:         0       1       0       0       0
  2732 ;;Total ram usage:        1 bytes
  2733 ;; Hardware stack levels used:    1
  2734 ;; Hardware stack levels required when called:    2
  2735 ;; This function calls:
  2736 ;;		Nothing
  2737 ;; This function is called by:
  2738 ;;		_initPin
  2739 ;; This function uses a non-reentrant model
  2740 ;;
  2741  03C0                     _initPB5:	
  2742                           
  2743                           ; Regs used in _initPB5: [wreg]
  2744                           ;initPB5@bValue stored from wreg
  2745  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  2746  03C1  00A0               	movwf	initPB5@bValue
  2747                           
  2748                           ;main.c: 196: if( bValue )
  2749  03C2  0820               	movf	initPB5@bValue,w
  2750  03C3  1903               	btfsc	3,2
  2751  03C4  2BC8               	goto	l702
  2752                           
  2753                           ;main.c: 198: TRISB5 = 1;
  2754  03C5  1683               	bsf	3,5	;RP0=1, select bank1
  2755  03C6  1686               	bsf	6,5
  2756  03C7  0008               	return
  2757  03C8                     l702:	
  2758                           
  2759                           ;main.c: 202: else
  2760                           ;main.c: 204: TRISB5= 0;
  2761  03C8  1683               	bsf	3,5	;RP0=1, select bank1
  2762  03C9  1286               	bcf	6,5
  2763  03CA  0008               	return
  2764  03CB                     __end_of_initPB5:	
  2765                           
  2766                           	psect	text832
  2767  0451                     __ptext832:	
  2768 ;; =============== function _Filter ends ============
  2769                           
  2770                           
  2771 ;; *************** function _isFinishedOneHoursTimer *****************
  2772 ;; Defined at:
  2773 ;;		line 507 in file "D:\develop\190625\AK7030-OTP\common.c"
  2774 ;; Parameters:    Size  Location     Type
  2775 ;;		None
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;		None
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  1    wreg      unsigned char 
  2780 ;; Registers used:
  2781 ;;		wreg, status,2, status,0
  2782 ;; Tracked objects:
  2783 ;;		On entry : 60/0
  2784 ;;		On exit  : 60/0
  2785 ;;		Unchanged: FFF9F/0
  2786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2787 ;;      Params:         0       0       0       0       0
  2788 ;;      Locals:         0       0       0       0       0
  2789 ;;      Temps:          0       0       0       0       0
  2790 ;;      Totals:         0       0       0       0       0
  2791 ;;Total ram usage:        0 bytes
  2792 ;; Hardware stack levels used:    1
  2793 ;; Hardware stack levels required when called:    2
  2794 ;; This function calls:
  2795 ;;		Nothing
  2796 ;; This function is called by:
  2797 ;;		_main
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800  0451                     _isFinishedOneHoursTimer:	
  2801                           
  2802                           ;common.c: 508: if((uiOneHourTimer == 0) && bOneHourTimerStartFlag)
  2803                           
  2804                           ; Regs used in _isFinishedOneHoursTimer: [wreg+status,2+status,0]
  2805  0451  084C               	movf	_uiOneHourTimer+1,w
  2806  0452  044B               	iorwf	_uiOneHourTimer,w
  2807  0453  1D03               	skipz
  2808  0454  3400               	retlw	0
  2809  0455  085C               	movf	_bOneHourTimerStartFlag,w
  2810  0456  1903               	btfsc	3,2
  2811  0457  3400               	retlw	0
  2812  0458  3001               	movlw	1
  2813                           
  2814                           ;common.c: 509: {
  2815                           ;common.c: 510: bOneHourTimerStartFlag = 0;
  2816  0459  01DC               	clrf	_bOneHourTimerStartFlag
  2817                           
  2818                           ;common.c: 511: return 1;
  2819  045A  0008               	return
  2820  045B                     __end_of_isFinishedOneHoursTimer:	
  2821                           ;common.c: 513: else
  2822                           ;common.c: 514: return 0;
  2823                           
  2824                           
  2825                           	psect	text833
  2826  040D                     __ptext833:	
  2827 ;; =============== function _isFinishedOneHoursTimer ends ============
  2828                           
  2829                           
  2830 ;; *************** function _startOneHoursTimer *****************
  2831 ;; Defined at:
  2832 ;;		line 424 in file "D:\develop\190625\AK7030-OTP\common.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;		None
  2837 ;; Return value:  Size  Location     Type
  2838 ;;		None               void
  2839 ;; Registers used:
  2840 ;;		wreg, status,2, status,0
  2841 ;; Tracked objects:
  2842 ;;		On entry : 60/0
  2843 ;;		On exit  : 60/0
  2844 ;;		Unchanged: FFF9F/0
  2845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2846 ;;      Params:         0       2       0       0       0
  2847 ;;      Locals:         0       0       0       0       0
  2848 ;;      Temps:          0       0       0       0       0
  2849 ;;      Totals:         0       2       0       0       0
  2850 ;;Total ram usage:        2 bytes
  2851 ;; Hardware stack levels used:    1
  2852 ;; Hardware stack levels required when called:    2
  2853 ;; This function calls:
  2854 ;;		Nothing
  2855 ;; This function is called by:
  2856 ;;		_main
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859  040D                     _startOneHoursTimer:	
  2860                           
  2861                           ;common.c: 425: if(( 0 == uiOneHourTimer ) && ( 0 == bOneHourTimerStartFlag ))
  2862                           
  2863                           ; Regs used in _startOneHoursTimer: [wreg+status,2+status,0]
  2864  040D  084C               	movf	_uiOneHourTimer+1,w
  2865  040E  044B               	iorwf	_uiOneHourTimer,w
  2866  040F  1D03               	skipz
  2867  0410  0008               	return
  2868  0411  08DC               	movf	_bOneHourTimerStartFlag,f
  2869  0412  1D03               	skipz
  2870  0413  0008               	return
  2871                           
  2872                           ;common.c: 426: {
  2873                           ;common.c: 427: uiOneHourTimer = uiSetTime;
  2874  0414  0821               	movf	startOneHoursTimer@uiSetTime+1,w
  2875  0415  00CC               	movwf	_uiOneHourTimer+1
  2876  0416  0820               	movf	startOneHoursTimer@uiSetTime,w
  2877  0417  00CB               	movwf	_uiOneHourTimer
  2878                           
  2879                           ;common.c: 428: bOneHourTimerStartFlag = 1;
  2880  0418  01DC               	clrf	_bOneHourTimerStartFlag
  2881  0419  0ADC               	incf	_bOneHourTimerStartFlag,f
  2882  041A  0008               	return
  2883  041B                     __end_of_startOneHoursTimer:	
  2884                           
  2885                           	psect	text834
  2886  045B                     __ptext834:	
  2887 ;; =============== function _startOneHoursTimer ends ============
  2888                           
  2889                           
  2890 ;; *************** function _isFinishedThreeHoursTimer *****************
  2891 ;; Defined at:
  2892 ;;		line 494 in file "D:\develop\190625\AK7030-OTP\common.c"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;		None
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;		None
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  1    wreg      unsigned char 
  2899 ;; Registers used:
  2900 ;;		wreg, status,2, status,0
  2901 ;; Tracked objects:
  2902 ;;		On entry : 60/0
  2903 ;;		On exit  : 60/0
  2904 ;;		Unchanged: FFF9F/0
  2905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2906 ;;      Params:         0       0       0       0       0
  2907 ;;      Locals:         0       0       0       0       0
  2908 ;;      Temps:          0       0       0       0       0
  2909 ;;      Totals:         0       0       0       0       0
  2910 ;;Total ram usage:        0 bytes
  2911 ;; Hardware stack levels used:    1
  2912 ;; Hardware stack levels required when called:    2
  2913 ;; This function calls:
  2914 ;;		Nothing
  2915 ;; This function is called by:
  2916 ;;		_main
  2917 ;; This function uses a non-reentrant model
  2918 ;;
  2919  045B                     _isFinishedThreeHoursTimer:	
  2920                           
  2921                           ;common.c: 495: if((uiSmallTimer == 0) && bSmallTimerStartFlag)
  2922                           
  2923                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  2924  045B  084E               	movf	_uiSmallTimer+1,w
  2925  045C  044D               	iorwf	_uiSmallTimer,w
  2926  045D  1D03               	skipz
  2927  045E  3400               	retlw	0
  2928  045F  085D               	movf	_bSmallTimerStartFlag,w
  2929  0460  1903               	btfsc	3,2
  2930  0461  3400               	retlw	0
  2931  0462  3001               	movlw	1
  2932                           
  2933                           ;common.c: 496: {
  2934                           ;common.c: 497: bSmallTimerStartFlag = 0;
  2935  0463  01DD               	clrf	_bSmallTimerStartFlag
  2936                           
  2937                           ;common.c: 498: return 1;
  2938  0464  0008               	return
  2939  0465                     __end_of_isFinishedThreeHoursTimer:	
  2940                           ;common.c: 500: else
  2941                           ;common.c: 501: return 0;
  2942                           
  2943                           
  2944                           	psect	text835
  2945  041B                     __ptext835:	
  2946 ;; =============== function _isFinishedThreeHoursTimer ends ============
  2947                           
  2948                           
  2949 ;; *************** function _startThreeHoursTimer *****************
  2950 ;; Defined at:
  2951 ;;		line 411 in file "D:\develop\190625\AK7030-OTP\common.c"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;		None
  2956 ;; Return value:  Size  Location     Type
  2957 ;;		None               void
  2958 ;; Registers used:
  2959 ;;		wreg, status,2, status,0
  2960 ;; Tracked objects:
  2961 ;;		On entry : 60/0
  2962 ;;		On exit  : 60/0
  2963 ;;		Unchanged: FFF9F/0
  2964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2965 ;;      Params:         0       2       0       0       0
  2966 ;;      Locals:         0       0       0       0       0
  2967 ;;      Temps:          0       0       0       0       0
  2968 ;;      Totals:         0       2       0       0       0
  2969 ;;Total ram usage:        2 bytes
  2970 ;; Hardware stack levels used:    1
  2971 ;; Hardware stack levels required when called:    2
  2972 ;; This function calls:
  2973 ;;		Nothing
  2974 ;; This function is called by:
  2975 ;;		_main
  2976 ;; This function uses a non-reentrant model
  2977 ;;
  2978  041B                     _startThreeHoursTimer:	
  2979                           
  2980                           ;common.c: 412: if(( 0 == uiSmallTimer ) && ( 0 == bSmallTimerStartFlag ))
  2981                           
  2982                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  2983  041B  084E               	movf	_uiSmallTimer+1,w
  2984  041C  044D               	iorwf	_uiSmallTimer,w
  2985  041D  1D03               	skipz
  2986  041E  0008               	return
  2987  041F  08DD               	movf	_bSmallTimerStartFlag,f
  2988  0420  1D03               	skipz
  2989  0421  0008               	return
  2990                           
  2991                           ;common.c: 413: {
  2992                           ;common.c: 414: uiSmallTimer = uiSetTime;
  2993  0422  0821               	movf	startThreeHoursTimer@uiSetTime+1,w
  2994  0423  00CE               	movwf	_uiSmallTimer+1
  2995  0424  0820               	movf	startThreeHoursTimer@uiSetTime,w
  2996  0425  00CD               	movwf	_uiSmallTimer
  2997                           
  2998                           ;common.c: 415: bSmallTimerStartFlag = 1;
  2999  0426  01DD               	clrf	_bSmallTimerStartFlag
  3000  0427  0ADD               	incf	_bSmallTimerStartFlag,f
  3001  0428  0008               	return
  3002  0429                     __end_of_startThreeHoursTimer:	
  3003                           
  3004                           	psect	text836
  3005  0465                     __ptext836:	
  3006 ;; =============== function _startThreeHoursTimer ends ============
  3007                           
  3008                           
  3009 ;; *************** function _isFinishedTwelveHoursTimer *****************
  3010 ;; Defined at:
  3011 ;;		line 483 in file "D:\develop\190625\AK7030-OTP\common.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;		None
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;		None
  3016 ;; Return value:  Size  Location     Type
  3017 ;;                  1    wreg      unsigned char 
  3018 ;; Registers used:
  3019 ;;		wreg, status,2, status,0
  3020 ;; Tracked objects:
  3021 ;;		On entry : 60/0
  3022 ;;		On exit  : 60/0
  3023 ;;		Unchanged: FFF9F/0
  3024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3025 ;;      Params:         0       0       0       0       0
  3026 ;;      Locals:         0       0       0       0       0
  3027 ;;      Temps:          0       0       0       0       0
  3028 ;;      Totals:         0       0       0       0       0
  3029 ;;Total ram usage:        0 bytes
  3030 ;; Hardware stack levels used:    1
  3031 ;; Hardware stack levels required when called:    2
  3032 ;; This function calls:
  3033 ;;		Nothing
  3034 ;; This function is called by:
  3035 ;;		_main
  3036 ;; This function uses a non-reentrant model
  3037 ;;
  3038  0465                     _isFinishedTwelveHoursTimer:	
  3039                           
  3040                           ;common.c: 484: if(( uiBigTimer == 0 ) && bBigTimerStartFlag )
  3041                           
  3042                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  3043  0465  084A               	movf	_uiBigTimer+1,w
  3044  0466  0449               	iorwf	_uiBigTimer,w
  3045  0467  1D03               	skipz
  3046  0468  3400               	retlw	0
  3047  0469  085B               	movf	_bBigTimerStartFlag,w
  3048  046A  1903               	btfsc	3,2
  3049  046B  3400               	retlw	0
  3050  046C  3001               	movlw	1
  3051                           
  3052                           ;common.c: 485: {
  3053                           ;common.c: 486: bBigTimerStartFlag = 0;
  3054  046D  01DB               	clrf	_bBigTimerStartFlag
  3055                           
  3056                           ;common.c: 487: return 1;
  3057  046E  0008               	return
  3058  046F                     __end_of_isFinishedTwelveHoursTimer:	
  3059                           ;common.c: 489: else
  3060                           ;common.c: 490: return 0;
  3061                           
  3062                           
  3063                           	psect	text837
  3064  0429                     __ptext837:	
  3065 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  3066                           
  3067                           
  3068 ;; *************** function _startTwelveHourTimer *****************
  3069 ;; Defined at:
  3070 ;;		line 363 in file "D:\develop\190625\AK7030-OTP\common.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;		None
  3075 ;; Return value:  Size  Location     Type
  3076 ;;		None               void
  3077 ;; Registers used:
  3078 ;;		wreg, status,2, status,0
  3079 ;; Tracked objects:
  3080 ;;		On entry : 160/0
  3081 ;;		On exit  : 160/0
  3082 ;;		Unchanged: FFE9F/0
  3083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3084 ;;      Params:         0       2       0       0       0
  3085 ;;      Locals:         0       0       0       0       0
  3086 ;;      Temps:          0       0       0       0       0
  3087 ;;      Totals:         0       2       0       0       0
  3088 ;;Total ram usage:        2 bytes
  3089 ;; Hardware stack levels used:    1
  3090 ;; Hardware stack levels required when called:    2
  3091 ;; This function calls:
  3092 ;;		Nothing
  3093 ;; This function is called by:
  3094 ;;		_main
  3095 ;; This function uses a non-reentrant model
  3096 ;;
  3097  0429                     _startTwelveHourTimer:	
  3098                           
  3099                           ;common.c: 364: if((0 == uiBigTimer) && ( 0 == bBigTimerStartFlag))
  3100                           
  3101                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  3102  0429  084A               	movf	_uiBigTimer+1,w
  3103  042A  0449               	iorwf	_uiBigTimer,w
  3104  042B  1D03               	skipz
  3105  042C  0008               	return
  3106  042D  08DB               	movf	_bBigTimerStartFlag,f
  3107  042E  1D03               	skipz
  3108  042F  0008               	return
  3109                           
  3110                           ;common.c: 365: {
  3111                           ;common.c: 366: uiBigTimer = uiSetTime;
  3112  0430  0821               	movf	startTwelveHourTimer@uiSetTime+1,w
  3113  0431  00CA               	movwf	_uiBigTimer+1
  3114  0432  0820               	movf	startTwelveHourTimer@uiSetTime,w
  3115  0433  00C9               	movwf	_uiBigTimer
  3116                           
  3117                           ;common.c: 367: bBigTimerStartFlag = 1;
  3118  0434  01DB               	clrf	_bBigTimerStartFlag
  3119  0435  0ADB               	incf	_bBigTimerStartFlag,f
  3120  0436  0008               	return
  3121  0437                     __end_of_startTwelveHourTimer:	
  3122                           
  3123                           	psect	text838
  3124  0498                     __ptext838:	
  3125 ;; =============== function _startTwelveHourTimer ends ============
  3126                           
  3127                           
  3128 ;; *************** function _clearTwentyMinTimer *****************
  3129 ;; Defined at:
  3130 ;;		line 404 in file "D:\develop\190625\AK7030-OTP\common.c"
  3131 ;; Parameters:    Size  Location     Type
  3132 ;;		None
  3133 ;; Auto vars:     Size  Location     Type
  3134 ;;		None
  3135 ;; Return value:  Size  Location     Type
  3136 ;;		None               void
  3137 ;; Registers used:
  3138 ;;		status,2
  3139 ;; Tracked objects:
  3140 ;;		On entry : 160/0
  3141 ;;		On exit  : 160/0
  3142 ;;		Unchanged: FFE9F/0
  3143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3144 ;;      Params:         0       0       0       0       0
  3145 ;;      Locals:         0       0       0       0       0
  3146 ;;      Temps:          0       0       0       0       0
  3147 ;;      Totals:         0       0       0       0       0
  3148 ;;Total ram usage:        0 bytes
  3149 ;; Hardware stack levels used:    1
  3150 ;; Hardware stack levels required when called:    2
  3151 ;; This function calls:
  3152 ;;		Nothing
  3153 ;; This function is called by:
  3154 ;;		_main
  3155 ;; This function uses a non-reentrant model
  3156 ;;
  3157  0498                     _clearTwentyMinTimer:	
  3158                           
  3159                           ;common.c: 405: uiTwentyMinTimer = 0;
  3160                           
  3161                           ; Regs used in _clearTwentyMinTimer: [status,2]
  3162  0498  01CF               	clrf	_uiTwentyMinTimer
  3163  0499  01D0               	clrf	_uiTwentyMinTimer+1
  3164                           
  3165                           ;common.c: 406: bTwentyMinStartFlag = 0;
  3166  049A  01DE               	clrf	_bTwentyMinStartFlag
  3167  049B  0008               	return
  3168  049C                     __end_of_clearTwentyMinTimer:	
  3169                           
  3170                           	psect	text839
  3171  046F                     __ptext839:	
  3172 ;; =============== function _clearTwentyMinTimer ends ============
  3173                           
  3174                           
  3175 ;; *************** function _isFinishedTwentyMinTimer *****************
  3176 ;; Defined at:
  3177 ;;		line 459 in file "D:\develop\190625\AK7030-OTP\common.c"
  3178 ;; Parameters:    Size  Location     Type
  3179 ;;		None
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;		None
  3182 ;; Return value:  Size  Location     Type
  3183 ;;                  1    wreg      unsigned char 
  3184 ;; Registers used:
  3185 ;;		wreg, status,2, status,0
  3186 ;; Tracked objects:
  3187 ;;		On entry : 60/0
  3188 ;;		On exit  : 60/0
  3189 ;;		Unchanged: FFF9F/0
  3190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3191 ;;      Params:         0       0       0       0       0
  3192 ;;      Locals:         0       0       0       0       0
  3193 ;;      Temps:          0       0       0       0       0
  3194 ;;      Totals:         0       0       0       0       0
  3195 ;;Total ram usage:        0 bytes
  3196 ;; Hardware stack levels used:    1
  3197 ;; Hardware stack levels required when called:    2
  3198 ;; This function calls:
  3199 ;;		Nothing
  3200 ;; This function is called by:
  3201 ;;		_main
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204  046F                     _isFinishedTwentyMinTimer:	
  3205                           
  3206                           ;common.c: 460: if(( 0 == uiTwentyMinTimer ) && bTwentyMinStartFlag )
  3207                           
  3208                           ; Regs used in _isFinishedTwentyMinTimer: [wreg+status,2+status,0]
  3209  046F  0850               	movf	_uiTwentyMinTimer+1,w
  3210  0470  044F               	iorwf	_uiTwentyMinTimer,w
  3211  0471  1D03               	skipz
  3212  0472  3400               	retlw	0
  3213  0473  085E               	movf	_bTwentyMinStartFlag,w
  3214  0474  1903               	btfsc	3,2
  3215  0475  3400               	retlw	0
  3216  0476  3001               	movlw	1
  3217                           
  3218                           ;common.c: 461: {
  3219                           ;common.c: 462: bTwentyMinStartFlag = 0;
  3220  0477  01DE               	clrf	_bTwentyMinStartFlag
  3221                           
  3222                           ;common.c: 463: return 1;
  3223  0478  0008               	return
  3224  0479                     __end_of_isFinishedTwentyMinTimer:	
  3225                           ;common.c: 465: else
  3226                           ;common.c: 466: return 0;
  3227                           
  3228                           
  3229                           	psect	text840
  3230  04AB                     __ptext840:	
  3231 ;; =============== function _isFinishedTwentyMinTimer ends ============
  3232                           
  3233                           
  3234 ;; *************** function _clrSampeTime *****************
  3235 ;; Defined at:
  3236 ;;		line 529 in file "D:\develop\190625\AK7030-OTP\common.c"
  3237 ;; Parameters:    Size  Location     Type
  3238 ;;		None
  3239 ;; Auto vars:     Size  Location     Type
  3240 ;;		None
  3241 ;; Return value:  Size  Location     Type
  3242 ;;		None               void
  3243 ;; Registers used:
  3244 ;;		status,2
  3245 ;; Tracked objects:
  3246 ;;		On entry : 60/0
  3247 ;;		On exit  : 60/0
  3248 ;;		Unchanged: FFF9F/0
  3249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3250 ;;      Params:         0       0       0       0       0
  3251 ;;      Locals:         0       0       0       0       0
  3252 ;;      Temps:          0       0       0       0       0
  3253 ;;      Totals:         0       0       0       0       0
  3254 ;;Total ram usage:        0 bytes
  3255 ;; Hardware stack levels used:    1
  3256 ;; Hardware stack levels required when called:    2
  3257 ;; This function calls:
  3258 ;;		Nothing
  3259 ;; This function is called by:
  3260 ;;		_main
  3261 ;; This function uses a non-reentrant model
  3262 ;;
  3263  04AB                     _clrSampeTime:	
  3264                           
  3265                           ;common.c: 530: timer.timer10msStopWatch = 0;
  3266                           
  3267                           ; Regs used in _clrSampeTime: [status,2]
  3268  04AB  01E0               	clrf	_timer
  3269  04AC  0008               	return
  3270  04AD                     __end_of_clrSampeTime:	
  3271                           
  3272                           	psect	text841
  3273  0493                     __ptext841:	
  3274 ;; =============== function _clrSampeTime ends ============
  3275                           
  3276                           
  3277 ;; *************** function _isPermitSampleTime *****************
  3278 ;; Defined at:
  3279 ;;		line 519 in file "D:\develop\190625\AK7030-OTP\common.c"
  3280 ;; Parameters:    Size  Location     Type
  3281 ;;		None
  3282 ;; Auto vars:     Size  Location     Type
  3283 ;;		None
  3284 ;; Return value:  Size  Location     Type
  3285 ;;                  1    wreg      unsigned char 
  3286 ;; Registers used:
  3287 ;;		wreg
  3288 ;; Tracked objects:
  3289 ;;		On entry : 60/0
  3290 ;;		On exit  : 60/0
  3291 ;;		Unchanged: FFF9F/0
  3292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3293 ;;      Params:         0       0       0       0       0
  3294 ;;      Locals:         0       0       0       0       0
  3295 ;;      Temps:          0       0       0       0       0
  3296 ;;      Totals:         0       0       0       0       0
  3297 ;;Total ram usage:        0 bytes
  3298 ;; Hardware stack levels used:    1
  3299 ;; Hardware stack levels required when called:    2
  3300 ;; This function calls:
  3301 ;;		Nothing
  3302 ;; This function is called by:
  3303 ;;		_main
  3304 ;; This function uses a non-reentrant model
  3305 ;;
  3306  0493                     _isPermitSampleTime:	
  3307                           
  3308                           ;common.c: 520: if(timer.timer10msStopWatch >= 10)
  3309                           
  3310                           ; Regs used in _isPermitSampleTime: [wreg]
  3311  0493  300A               	movlw	10
  3312  0494  0260               	subwf	_timer,w
  3313  0495  1803               	btfsc	3,0
  3314                           
  3315                           ;common.c: 521: {
  3316                           ;common.c: 522: return 1;
  3317  0496  3401               	retlw	1
  3318                           
  3319                           ;common.c: 524: else
  3320                           ;common.c: 525: return 0;
  3321  0497  3400               	retlw	0
  3322  0498                     __end_of_isPermitSampleTime:	
  3323                           
  3324                           	psect	text842
  3325  0437                     __ptext842:	
  3326 ;; =============== function _isPermitSampleTime ends ============
  3327                           
  3328                           
  3329 ;; *************** function _startTwentyMinTimer *****************
  3330 ;; Defined at:
  3331 ;;		line 449 in file "D:\develop\190625\AK7030-OTP\common.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;  uiSetValue      2    0[BANK0 ] unsigned int 
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;		None
  3336 ;; Return value:  Size  Location     Type
  3337 ;;		None               void
  3338 ;; Registers used:
  3339 ;;		wreg, status,2, status,0
  3340 ;; Tracked objects:
  3341 ;;		On entry : 17F/0
  3342 ;;		On exit  : 17F/0
  3343 ;;		Unchanged: FFE80/0
  3344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3345 ;;      Params:         0       2       0       0       0
  3346 ;;      Locals:         0       0       0       0       0
  3347 ;;      Temps:          0       0       0       0       0
  3348 ;;      Totals:         0       2       0       0       0
  3349 ;;Total ram usage:        2 bytes
  3350 ;; Hardware stack levels used:    1
  3351 ;; Hardware stack levels required when called:    2
  3352 ;; This function calls:
  3353 ;;		Nothing
  3354 ;; This function is called by:
  3355 ;;		_main
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358  0437                     _startTwentyMinTimer:	
  3359                           
  3360                           ;common.c: 450: if(( 0 == uiTwentyMinTimer) && ( 0 == bTwentyMinStartFlag))
  3361                           
  3362                           ; Regs used in _startTwentyMinTimer: [wreg+status,2+status,0]
  3363  0437  0850               	movf	_uiTwentyMinTimer+1,w
  3364  0438  044F               	iorwf	_uiTwentyMinTimer,w
  3365  0439  1D03               	skipz
  3366  043A  0008               	return
  3367  043B  08DE               	movf	_bTwentyMinStartFlag,f
  3368  043C  1D03               	skipz
  3369  043D  0008               	return
  3370                           
  3371                           ;common.c: 451: {
  3372                           ;common.c: 452: uiTwentyMinTimer = uiSetValue;
  3373  043E  0821               	movf	startTwentyMinTimer@uiSetValue+1,w
  3374  043F  00D0               	movwf	_uiTwentyMinTimer+1
  3375  0440  0820               	movf	startTwentyMinTimer@uiSetValue,w
  3376  0441  00CF               	movwf	_uiTwentyMinTimer
  3377                           
  3378                           ;common.c: 453: bTwentyMinStartFlag = 1;
  3379  0442  01DE               	clrf	_bTwentyMinStartFlag
  3380  0443  0ADE               	incf	_bTwentyMinStartFlag,f
  3381  0444  0008               	return
  3382  0445                     __end_of_startTwentyMinTimer:	
  3383                           
  3384                           	psect	text845
  3385  04A8                     __ptext845:	
  3386 ;; =============== function _adc_test_init ends ============
  3387                           
  3388                           
  3389 ;; *************** function _timer1_interrupt_config *****************
  3390 ;; Defined at:
  3391 ;;		line 201 in file "D:\develop\190625\AK7030-OTP\common.c"
  3392 ;; Parameters:    Size  Location     Type
  3393 ;;		None
  3394 ;; Auto vars:     Size  Location     Type
  3395 ;;		None
  3396 ;; Return value:  Size  Location     Type
  3397 ;;		None               void
  3398 ;; Registers used:
  3399 ;;		None
  3400 ;; Tracked objects:
  3401 ;;		On entry : 17F/20
  3402 ;;		On exit  : 17F/20
  3403 ;;		Unchanged: FFE80/0
  3404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3405 ;;      Params:         0       0       0       0       0
  3406 ;;      Locals:         0       0       0       0       0
  3407 ;;      Temps:          0       0       0       0       0
  3408 ;;      Totals:         0       0       0       0       0
  3409 ;;Total ram usage:        0 bytes
  3410 ;; Hardware stack levels used:    1
  3411 ;; Hardware stack levels required when called:    2
  3412 ;; This function calls:
  3413 ;;		Nothing
  3414 ;; This function is called by:
  3415 ;;		_main
  3416 ;; This function uses a non-reentrant model
  3417 ;;
  3418  04A8                     _timer1_interrupt_config:	
  3419                           
  3420                           ;common.c: 202: GIE = 1;
  3421                           
  3422                           ; Regs used in _timer1_interrupt_config: []
  3423  04A8  178B               	bsf	11,7
  3424                           
  3425                           ;common.c: 203: PEIE = 1;
  3426  04A9  170B               	bsf	11,6
  3427  04AA  0008               	return
  3428  04AB                     __end_of_timer1_interrupt_config:	
  3429                           
  3430                           	psect	text846
  3431  0479                     __ptext846:	
  3432 ;; =============== function _timer1_interrupt_config ends ============
  3433                           
  3434                           
  3435 ;; *************** function _timer1_config *****************
  3436 ;; Defined at:
  3437 ;;		line 189 in file "D:\develop\190625\AK7030-OTP\common.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;		None
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;		None
  3442 ;; Return value:  Size  Location     Type
  3443 ;;		None               void
  3444 ;; Registers used:
  3445 ;;		wreg
  3446 ;; Tracked objects:
  3447 ;;		On entry : 17F/40
  3448 ;;		On exit  : 17F/20
  3449 ;;		Unchanged: FFE80/0
  3450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3451 ;;      Params:         0       0       0       0       0
  3452 ;;      Locals:         0       0       0       0       0
  3453 ;;      Temps:          0       0       0       0       0
  3454 ;;      Totals:         0       0       0       0       0
  3455 ;;Total ram usage:        0 bytes
  3456 ;; Hardware stack levels used:    1
  3457 ;; Hardware stack levels required when called:    2
  3458 ;; This function calls:
  3459 ;;		Nothing
  3460 ;; This function is called by:
  3461 ;;		_main
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464  0479                     _timer1_config:	
  3465                           
  3466                           ;common.c: 191: TMR1H=0xCF;
  3467                           
  3468                           ; Regs used in _timer1_config: [wreg]
  3469  0479  30CF               	movlw	207
  3470  047A  1303               	bcf	3,6	;RP1=0, select bank0
  3471  047B  008F               	movwf	15	;volatile
  3472                           
  3473                           ;common.c: 192: TMR1L=0x2C;
  3474  047C  302C               	movlw	44
  3475  047D  008E               	movwf	14	;volatile
  3476                           
  3477                           ;common.c: 193: T1CON=0xE1;
  3478  047E  30E1               	movlw	225
  3479  047F  0090               	movwf	16	;volatile
  3480                           
  3481                           ;common.c: 194: TMR1IE=1;
  3482  0480  1683               	bsf	3,5	;RP0=1, select bank1
  3483  0481  140C               	bsf	12,0
  3484  0482  0008               	return
  3485  0483                     __end_of_timer1_config:	
  3486                           
  3487                           	psect	text847
  3488  048B                     __ptext847:	
  3489 ;; =============== function _timer1_config ends ============
  3490                           
  3491                           
  3492 ;; *************** function _clock_config *****************
  3493 ;; Defined at:
  3494 ;;		line 181 in file "D:\develop\190625\AK7030-OTP\common.c"
  3495 ;; Parameters:    Size  Location     Type
  3496 ;;		None
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;		None
  3499 ;; Return value:  Size  Location     Type
  3500 ;;		None               void
  3501 ;; Registers used:
  3502 ;;		wreg, status,2
  3503 ;; Tracked objects:
  3504 ;;		On entry : 17F/20
  3505 ;;		On exit  : 17F/40
  3506 ;;		Unchanged: FFE80/0
  3507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3508 ;;      Params:         0       0       0       0       0
  3509 ;;      Locals:         0       0       0       0       0
  3510 ;;      Temps:          0       0       0       0       0
  3511 ;;      Totals:         0       0       0       0       0
  3512 ;;Total ram usage:        0 bytes
  3513 ;; Hardware stack levels used:    1
  3514 ;; Hardware stack levels required when called:    2
  3515 ;; This function calls:
  3516 ;;		Nothing
  3517 ;; This function is called by:
  3518 ;;		_main
  3519 ;; This function uses a non-reentrant model
  3520 ;;
  3521  048B                     _clock_config:	
  3522                           
  3523                           ;common.c: 183: CLKPR = 0x80;
  3524                           
  3525                           ; Regs used in _clock_config: [wreg+status,2]
  3526  048B  3080               	movlw	128
  3527  048C  1283               	bcf	3,5	;RP0=0, select bank2
  3528  048D  1703               	bsf	3,6	;RP1=1, select bank2
  3529  048E  0088               	movwf	8	;volatile
  3530                           
  3531                           ;common.c: 184: CLKPR = 0x00;
  3532  048F  0188               	clrf	8	;volatile
  3533  0490                     l1543:	
  3534                           ;common.c: 185: while(CLKPCE);
  3535                           
  3536  0490  1F88               	btfss	8,7
  3537  0491  0008               	return
  3538  0492  2C90               	goto	l1543
  3539  0493                     __end_of_clock_config:	
  3540                           
  3541                           	psect	text848
  3542  04AD                     __ptext848:	
  3543 ;; =============== function _clock_config ends ============
  3544                           
  3545                           
  3546 ;; *************** function _reset *****************
  3547 ;; Defined at:
  3548 ;;		line 354 in file "D:\develop\190625\AK7030-OTP\main.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;		None
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;		None
  3553 ;; Return value:  Size  Location     Type
  3554 ;;		None               void
  3555 ;; Registers used:
  3556 ;;		None
  3557 ;; Tracked objects:
  3558 ;;		On entry : 60/0
  3559 ;;		On exit  : 60/0
  3560 ;;		Unchanged: FFFFFF9F/0
  3561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3562 ;;      Params:         0       0       0       0       0
  3563 ;;      Locals:         0       0       0       0       0
  3564 ;;      Temps:          0       0       0       0       0
  3565 ;;      Totals:         0       0       0       0       0
  3566 ;;Total ram usage:        0 bytes
  3567 ;; Hardware stack levels used:    1
  3568 ;; Hardware stack levels required when called:    2
  3569 ;; This function calls:
  3570 ;;		Nothing
  3571 ;; This function is called by:
  3572 ;;		_main
  3573 ;; This function uses a non-reentrant model
  3574 ;;
  3575  04AD                     _reset:	
  3576  04AD                     l738:	
  3577                           ; Regs used in _reset: []
  3578                           ;main.c: 356: while(1);
  3579                           
  3580  04AD  2CAD               	goto	l738
  3581                           
  3582                           	psect	text849
  3583  04AE                     __ptext849:	
  3584  04AE                     __end_of_reset:	
  3585                           
  3586 ;; =============== function _reset ends ============
  3587 ;; *************** function _setPulseWidth *****************
  3588 ;; Defined at:
  3589 ;;		line 345 in file "D:\develop\190625\AK7030-OTP\main.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;		None
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;		None
  3594 ;; Return value:  Size  Location     Type
  3595 ;;		None               void
  3596 ;; Registers used:
  3597 ;;		None
  3598 ;; Tracked objects:
  3599 ;;		On entry : 60/0
  3600 ;;		On exit  : 60/0
  3601 ;;		Unchanged: FFFFFF9F/0
  3602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3603 ;;      Params:         0       0       0       0       0
  3604 ;;      Locals:         0       0       0       0       0
  3605 ;;      Temps:          0       0       0       0       0
  3606 ;;      Totals:         0       0       0       0       0
  3607 ;;Total ram usage:        0 bytes
  3608 ;; Hardware stack levels used:    1
  3609 ;; Hardware stack levels required when called:    2
  3610 ;; This function calls:
  3611 ;;		Nothing
  3612 ;; This function is called by:
  3613 ;;		_main
  3614 ;; This function uses a non-reentrant model
  3615 ;;
  3616  04AE                     _setPulseWidth:	
  3617                           
  3618                           ; Regs used in _setPulseWidth: []
  3619  04AE  0008               	return
  3620  04AF                     __end_of_setPulseWidth:	
  3621                           
  3622                           	psect	text850
  3623  049C                     __ptext850:	
  3624 ;; =============== function _setPulseWidth ends ============
  3625                           
  3626                           
  3627 ;; *************** function _selectAdChannel *****************
  3628 ;; Defined at:
  3629 ;;		line 335 in file "D:\develop\190625\AK7030-OTP\main.c"
  3630 ;; Parameters:    Size  Location     Type
  3631 ;;		None
  3632 ;; Auto vars:     Size  Location     Type
  3633 ;;		None
  3634 ;; Return value:  Size  Location     Type
  3635 ;;		None               void
  3636 ;; Registers used:
  3637 ;;		None
  3638 ;; Tracked objects:
  3639 ;;		On entry : 17F/0
  3640 ;;		On exit  : 17F/20
  3641 ;;		Unchanged: FFE80/0
  3642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3643 ;;      Params:         0       0       0       0       0
  3644 ;;      Locals:         0       0       0       0       0
  3645 ;;      Temps:          0       0       0       0       0
  3646 ;;      Totals:         0       0       0       0       0
  3647 ;;Total ram usage:        0 bytes
  3648 ;; Hardware stack levels used:    1
  3649 ;; Hardware stack levels required when called:    2
  3650 ;; This function calls:
  3651 ;;		Nothing
  3652 ;; This function is called by:
  3653 ;;		_main
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656  049C                     _selectAdChannel:	
  3657                           
  3658                           ;main.c: 337: TRISB0 = 1;
  3659                           
  3660                           ; Regs used in _selectAdChannel: []
  3661  049C  1683               	bsf	3,5	;RP0=1, select bank1
  3662  049D  1406               	bsf	6,0
  3663                           
  3664                           ;main.c: 338: TRISB1 = 1;
  3665  049E  1486               	bsf	6,1
  3666  049F  0008               	return
  3667  04A0                     __end_of_selectAdChannel:	
  3668                           
  3669                           	psect	text851
  3670  0445                     __ptext851:	
  3671 ;; =============== function _selectAdChannel ends ============
  3672                           
  3673                           
  3674 ;; *************** function _pwm_config *****************
  3675 ;; Defined at:
  3676 ;;		line 300 in file "D:\develop\190625\AK7030-OTP\main.c"
  3677 ;; Parameters:    Size  Location     Type
  3678 ;;  state           1    wreg     unsigned char 
  3679 ;; Auto vars:     Size  Location     Type
  3680 ;;  state           1    0[BANK0 ] unsigned char 
  3681 ;; Return value:  Size  Location     Type
  3682 ;;		None               void
  3683 ;; Registers used:
  3684 ;;		wreg, status,2, status,0
  3685 ;; Tracked objects:
  3686 ;;		On entry : 160/60
  3687 ;;		On exit  : 160/0
  3688 ;;		Unchanged: FFE9F/0
  3689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3690 ;;      Params:         0       0       0       0       0
  3691 ;;      Locals:         0       1       0       0       0
  3692 ;;      Temps:          0       0       0       0       0
  3693 ;;      Totals:         0       1       0       0       0
  3694 ;;Total ram usage:        1 bytes
  3695 ;; Hardware stack levels used:    1
  3696 ;; Hardware stack levels required when called:    2
  3697 ;; This function calls:
  3698 ;;		Nothing
  3699 ;; This function is called by:
  3700 ;;		_main
  3701 ;; This function uses a non-reentrant model
  3702 ;;
  3703  0445                     _pwm_config:	
  3704                           
  3705                           ; Regs used in _pwm_config: [wreg+status,2+status,0]
  3706                           ;pwm_config@state stored from wreg
  3707  0445  1283               	bcf	3,5	;RP0=0, select bank0
  3708  0446  1303               	bcf	3,6	;RP1=0, select bank0
  3709  0447  00A0               	movwf	pwm_config@state
  3710                           
  3711                           ;main.c: 301: if( state )
  3712  0448  0820               	movf	pwm_config@state,w
  3713  0449  1903               	btfsc	3,2
  3714  044A  2C4E               	goto	l3297
  3715                           
  3716                           ;main.c: 302: CCP1CON|= 0x0c;
  3717  044B  300C               	movlw	12
  3718  044C  0497               	iorwf	23,f	;volatile
  3719  044D  0008               	return
  3720  044E                     l3297:	
  3721                           
  3722                           ;main.c: 303: else
  3723                           ;main.c: 304: CCP1CON&= 0xf0;
  3724  044E  30F0               	movlw	240
  3725  044F  0597               	andwf	23,f	;volatile
  3726  0450  0008               	return
  3727  0451                     __end_of_pwm_config:	
  3728                           
  3729                           	psect	text852
  3730  03FE                     __ptext852:	
  3731 ;; =============== function _pwm_config ends ============
  3732                           
  3733                           
  3734 ;; *************** function _pwm_start *****************
  3735 ;; Defined at:
  3736 ;;		line 272 in file "D:\develop\190625\AK7030-OTP\main.c"
  3737 ;; Parameters:    Size  Location     Type
  3738 ;;  ucPulseWidth    1    wreg     unsigned char 
  3739 ;; Auto vars:     Size  Location     Type
  3740 ;;  ucPulseWidth    1    0[BANK0 ] unsigned char 
  3741 ;; Return value:  Size  Location     Type
  3742 ;;		None               void
  3743 ;; Registers used:
  3744 ;;		wreg, status,2
  3745 ;; Tracked objects:
  3746 ;;		On entry : 160/0
  3747 ;;		On exit  : 160/60
  3748 ;;		Unchanged: FFE9F/0
  3749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3750 ;;      Params:         0       0       0       0       0
  3751 ;;      Locals:         0       1       0       0       0
  3752 ;;      Temps:          0       0       0       0       0
  3753 ;;      Totals:         0       1       0       0       0
  3754 ;;Total ram usage:        1 bytes
  3755 ;; Hardware stack levels used:    1
  3756 ;; Hardware stack levels required when called:    2
  3757 ;; This function calls:
  3758 ;;		Nothing
  3759 ;; This function is called by:
  3760 ;;		_main
  3761 ;; This function uses a non-reentrant model
  3762 ;;
  3763  03FE                     _pwm_start:	
  3764                           
  3765                           ; Regs used in _pwm_start: [wreg+status,2]
  3766                           ;pwm_start@ucPulseWidth stored from wreg
  3767  03FE  00A0               	movwf	pwm_start@ucPulseWidth
  3768                           
  3769                           ;main.c: 286: T2CON=0x04;
  3770  03FF  3004               	movlw	4
  3771  0400  0092               	movwf	18	;volatile
  3772                           
  3773                           ;main.c: 287: PR2 = 49;
  3774  0401  3031               	movlw	49
  3775  0402  1683               	bsf	3,5	;RP0=1, select bank1
  3776  0403  0092               	movwf	18	;volatile
  3777                           
  3778                           ;main.c: 288: CCPR1L = ucPulseWidth;
  3779  0404  1283               	bcf	3,5	;RP0=0, select bank0
  3780  0405  0820               	movf	pwm_start@ucPulseWidth,w
  3781  0406  0095               	movwf	21	;volatile
  3782                           
  3783                           ;main.c: 289: CCP1CON=0x00;
  3784  0407  0197               	clrf	23	;volatile
  3785                           
  3786                           ;main.c: 291: TRISB2=0;
  3787  0408  1683               	bsf	3,5	;RP0=1, select bank1
  3788  0409  1106               	bcf	6,2
  3789                           
  3790                           ;main.c: 292: PBOD2 = 0;
  3791  040A  1703               	bsf	3,6	;RP1=1, select bank3
  3792  040B  1108               	bcf	8,2
  3793  040C  0008               	return
  3794  040D                     __end_of_pwm_start:	
  3795                           
  3796                           	psect	text860
  3797  04A0                     __ptext860:	
  3798 ;; =============== function _initPB3 ends ============
  3799                           
  3800                           
  3801 ;; *************** function _clearThreeHoursTimer *****************
  3802 ;; Defined at:
  3803 ;;		line 384 in file "D:\develop\190625\AK7030-OTP\common.c"
  3804 ;; Parameters:    Size  Location     Type
  3805 ;;		None
  3806 ;; Auto vars:     Size  Location     Type
  3807 ;;		None
  3808 ;; Return value:  Size  Location     Type
  3809 ;;		None               void
  3810 ;; Registers used:
  3811 ;;		status,2
  3812 ;; Tracked objects:
  3813 ;;		On entry : 60/0
  3814 ;;		On exit  : 60/0
  3815 ;;		Unchanged: FFF9F/0
  3816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3817 ;;      Params:         0       0       0       0       0
  3818 ;;      Locals:         0       0       0       0       0
  3819 ;;      Temps:          0       0       0       0       0
  3820 ;;      Totals:         0       0       0       0       0
  3821 ;;Total ram usage:        0 bytes
  3822 ;; Hardware stack levels used:    1
  3823 ;; Hardware stack levels required when called:    2
  3824 ;; This function calls:
  3825 ;;		Nothing
  3826 ;; This function is called by:
  3827 ;;		_main
  3828 ;; This function uses a non-reentrant model
  3829 ;;
  3830  04A0                     _clearThreeHoursTimer:	
  3831                           
  3832                           ;common.c: 385: uiSmallTimer = 0;
  3833                           
  3834                           ; Regs used in _clearThreeHoursTimer: [status,2]
  3835  04A0  01CD               	clrf	_uiSmallTimer
  3836  04A1  01CE               	clrf	_uiSmallTimer+1
  3837                           
  3838                           ;common.c: 386: bSmallTimerStartFlag = 0;
  3839  04A2  01DD               	clrf	_bSmallTimerStartFlag
  3840  04A3  0008               	return
  3841  04A4                     __end_of_clearThreeHoursTimer:	
  3842                           
  3843                           	psect	text861
  3844  04A4                     __ptext861:	
  3845 ;; =============== function _clearThreeHoursTimer ends ============
  3846                           
  3847                           
  3848 ;; *************** function _clearTwelveHoursTimer *****************
  3849 ;; Defined at:
  3850 ;;		line 377 in file "D:\develop\190625\AK7030-OTP\common.c"
  3851 ;; Parameters:    Size  Location     Type
  3852 ;;		None
  3853 ;; Auto vars:     Size  Location     Type
  3854 ;;		None
  3855 ;; Return value:  Size  Location     Type
  3856 ;;		None               void
  3857 ;; Registers used:
  3858 ;;		status,2
  3859 ;; Tracked objects:
  3860 ;;		On entry : 60/0
  3861 ;;		On exit  : 60/0
  3862 ;;		Unchanged: FFF9F/0
  3863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3864 ;;      Params:         0       0       0       0       0
  3865 ;;      Locals:         0       0       0       0       0
  3866 ;;      Temps:          0       0       0       0       0
  3867 ;;      Totals:         0       0       0       0       0
  3868 ;;Total ram usage:        0 bytes
  3869 ;; Hardware stack levels used:    1
  3870 ;; Hardware stack levels required when called:    2
  3871 ;; This function calls:
  3872 ;;		Nothing
  3873 ;; This function is called by:
  3874 ;;		_main
  3875 ;; This function uses a non-reentrant model
  3876 ;;
  3877  04A4                     _clearTwelveHoursTimer:	
  3878                           
  3879                           ;common.c: 378: uiBigTimer = 0;
  3880                           
  3881                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  3882  04A4  01C9               	clrf	_uiBigTimer
  3883  04A5  01CA               	clrf	_uiBigTimer+1
  3884                           
  3885                           ;common.c: 379: bBigTimerStartFlag = 0;
  3886  04A6  01DB               	clrf	_bBigTimerStartFlag
  3887  04A7  0008               	return
  3888  04A8                     __end_of_clearTwelveHoursTimer:	
  3889                           
  3890                           	psect	text862
  3891  01BE                     __ptext862:	
  3892 ;; =============== function _clearTwelveHoursTimer ends ============
  3893                           
  3894                           
  3895 ;; *************** function _ISR *****************
  3896 ;; Defined at:
  3897 ;;		line 534 in file "D:\develop\190625\AK7030-OTP\common.c"
  3898 ;; Parameters:    Size  Location     Type
  3899 ;;		None
  3900 ;; Auto vars:     Size  Location     Type
  3901 ;;		None
  3902 ;; Return value:  Size  Location     Type
  3903 ;;		None               void
  3904 ;; Registers used:
  3905 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3906 ;; Tracked objects:
  3907 ;;		On entry : 0/0
  3908 ;;		On exit  : 60/0
  3909 ;;		Unchanged: FFE00/0
  3910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3911 ;;      Params:         0       0       0       0       0
  3912 ;;      Locals:         0       0       0       0       0
  3913 ;;      Temps:          4       0       0       0       0
  3914 ;;      Totals:         4       0       0       0       0
  3915 ;;Total ram usage:        4 bytes
  3916 ;; Hardware stack levels used:    1
  3917 ;; Hardware stack levels required when called:    1
  3918 ;; This function calls:
  3919 ;;		i1_setAD_ConvertFlag
  3920 ;;		_adc_get
  3921 ;;		_vPutSampleDataIntoTable
  3922 ;; This function is called by:
  3923 ;;		Interrupt level 1
  3924 ;; This function uses a non-reentrant model
  3925 ;;
  3926  01BE                     _ISR:	
  3927                           
  3928                           ;common.c: 535: static unsigned char ucTimer1sCnt = 0;
  3929                           ;common.c: 537: if(TMR1IF == 1)
  3930  01BE  1C0C               	btfss	12,0
  3931  01BF  29FA               	goto	i1l3575
  3932  01C0  3064               	movlw	100
  3933                           
  3934                           ;common.c: 538: {
  3935                           ;common.c: 539: TMR1IF = 0 ;
  3936  01C1  100C               	bcf	12,0
  3937                           
  3938                           ;common.c: 540: timer.timer10msStopWatch++;
  3939  01C2  0AE0               	incf	_timer,f
  3940                           
  3941                           ;common.c: 541: ucTimer1sCnt++;
  3942  01C3  0AD9               	incf	ISR@ucTimer1sCnt,f
  3943                           
  3944                           ;common.c: 543: if(ucTimer1sCnt >= 100)
  3945  01C4  0259               	subwf	ISR@ucTimer1sCnt,w
  3946  01C5  1C03               	skipc
  3947  01C6  29FA               	goto	i1l3575
  3948                           
  3949                           ;common.c: 544: {
  3950                           ;common.c: 545: ucTimer1sCnt = 0;
  3951  01C7  01D9               	clrf	ISR@ucTimer1sCnt
  3952                           
  3953                           ;common.c: 546: if(uiBigTimer > 0)
  3954  01C8  084A               	movf	_uiBigTimer+1,w
  3955  01C9  0449               	iorwf	_uiBigTimer,w
  3956  01CA  1903               	skipnz
  3957  01CB  29D2               	goto	i1l1658
  3958                           
  3959                           ;common.c: 547: uiBigTimer--;
  3960  01CC  3001               	movlw	1
  3961  01CD  02C9               	subwf	_uiBigTimer,f
  3962  01CE  3000               	movlw	0
  3963  01CF  1C03               	skipc
  3964  01D0  03CA               	decf	_uiBigTimer+1,f
  3965  01D1  02CA               	subwf	_uiBigTimer+1,f
  3966  01D2                     i1l1658:	
  3967                           
  3968                           ;common.c: 549: if(uiSmallTimer)
  3969  01D2  084E               	movf	_uiSmallTimer+1,w
  3970  01D3  044D               	iorwf	_uiSmallTimer,w
  3971  01D4  1903               	skipnz
  3972  01D5  29DC               	goto	i1l1659
  3973                           
  3974                           ;common.c: 550: uiSmallTimer--;
  3975  01D6  3001               	movlw	1
  3976  01D7  02CD               	subwf	_uiSmallTimer,f
  3977  01D8  3000               	movlw	0
  3978  01D9  1C03               	skipc
  3979  01DA  03CE               	decf	_uiSmallTimer+1,f
  3980  01DB  02CE               	subwf	_uiSmallTimer+1,f
  3981  01DC                     i1l1659:	
  3982                           
  3983                           ;common.c: 552: if(uiTwentySecondsTimer)
  3984  01DC  0852               	movf	_uiTwentySecondsTimer+1,w
  3985  01DD  0451               	iorwf	_uiTwentySecondsTimer,w
  3986  01DE  1903               	skipnz
  3987  01DF  29E6               	goto	i1l1660
  3988                           
  3989                           ;common.c: 553: uiTwentySecondsTimer--;
  3990  01E0  3001               	movlw	1
  3991  01E1  02D1               	subwf	_uiTwentySecondsTimer,f
  3992  01E2  3000               	movlw	0
  3993  01E3  1C03               	skipc
  3994  01E4  03D2               	decf	_uiTwentySecondsTimer+1,f
  3995  01E5  02D2               	subwf	_uiTwentySecondsTimer+1,f
  3996  01E6                     i1l1660:	
  3997                           
  3998                           ;common.c: 555: if(uiTwentyMinTimer)
  3999  01E6  0850               	movf	_uiTwentyMinTimer+1,w
  4000  01E7  044F               	iorwf	_uiTwentyMinTimer,w
  4001  01E8  1903               	skipnz
  4002  01E9  29F0               	goto	i1l1661
  4003                           
  4004                           ;common.c: 556: uiTwentyMinTimer--;
  4005  01EA  3001               	movlw	1
  4006  01EB  02CF               	subwf	_uiTwentyMinTimer,f
  4007  01EC  3000               	movlw	0
  4008  01ED  1C03               	skipc
  4009  01EE  03D0               	decf	_uiTwentyMinTimer+1,f
  4010  01EF  02D0               	subwf	_uiTwentyMinTimer+1,f
  4011  01F0                     i1l1661:	
  4012                           
  4013                           ;common.c: 558: if( uiOneHourTimer )
  4014  01F0  084C               	movf	_uiOneHourTimer+1,w
  4015  01F1  044B               	iorwf	_uiOneHourTimer,w
  4016  01F2  1903               	skipnz
  4017  01F3  29FA               	goto	i1l3575
  4018                           
  4019                           ;common.c: 559: uiOneHourTimer--;
  4020  01F4  3001               	movlw	1
  4021  01F5  02CB               	subwf	_uiOneHourTimer,f
  4022  01F6  3000               	movlw	0
  4023  01F7  1C03               	skipc
  4024  01F8  03CC               	decf	_uiOneHourTimer+1,f
  4025  01F9  02CC               	subwf	_uiOneHourTimer+1,f
  4026  01FA                     i1l3575:	
  4027                           
  4028                           ;common.c: 560: }
  4029                           ;common.c: 561: }
  4030                           ;common.c: 563: if(ADIF)
  4031  01FA  1D0D               	btfss	13,2
  4032  01FB  2A15               	goto	i1l1666
  4033  01FC  3001               	movlw	1
  4034                           
  4035                           ;common.c: 564: {
  4036                           ;common.c: 566: ADIF=0;
  4037  01FD  110D               	bcf	13,2
  4038                           
  4039                           ;common.c: 567: setAD_ConvertFlag(1);
  4040  01FE  228C  118A         	fcall	i1_setAD_ConvertFlag
  4041                           
  4042                           ;common.c: 569: if(sampleChannelSelect == 12)
  4043  0200  0869               	movf	_sampleChannelSelect,w
  4044  0201  3A0C               	xorlw	12
  4045  0202  1D03               	skipz
  4046  0203  2A0C               	goto	i1l3585
  4047                           
  4048                           ;common.c: 570: {
  4049                           ;common.c: 573: vPutSampleDataIntoTable(adc_get(),12);
  4050  0204  2222  118A         	fcall	_adc_get
  4051  0206  0871               	movf	?_adc_get+1,w
  4052  0207  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4053  0208  0870               	movf	?_adc_get,w
  4054  0209  00F4               	movwf	?_vPutSampleDataIntoTable
  4055  020A  300C               	movlw	12
  4056  020B  2A13               	goto	L8
  4057  020C                     i1l3585:	
  4058                           ;common.c: 577: }
  4059                           
  4060                           
  4061                           ;common.c: 578: else
  4062                           ;common.c: 579: {
  4063                           ;common.c: 583: vPutSampleDataIntoTable(adc_get(),13);
  4064  020C  2222  118A         	fcall	_adc_get
  4065  020E  0871               	movf	?_adc_get+1,w
  4066  020F  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4067  0210  0870               	movf	?_adc_get,w
  4068  0211  00F4               	movwf	?_vPutSampleDataIntoTable
  4069  0212  300D               	movlw	13
  4070  0213                     L8:	
  4071  0213  00F6               	movwf	?_vPutSampleDataIntoTable+2
  4072  0214  222D               	fcall	_vPutSampleDataIntoTable
  4073  0215                     i1l1666:	
  4074  0215  087C               	movf	??_ISR+3,w
  4075  0216  1283               	bcf	3,5	;RP0=0, select bank0
  4076  0217  1303               	bcf	3,6	;RP1=0, select bank0
  4077  0218  00FF               	movwf	127
  4078  0219  087B               	movf	??_ISR+2,w
  4079  021A  008A               	movwf	10
  4080  021B  087A               	movf	??_ISR+1,w
  4081  021C  0084               	movwf	4
  4082  021D  0E79               	swapf	??_ISR^(0+-128),w
  4083  021E  0083               	movwf	3
  4084  021F  0EFE               	swapf	126,f
  4085  0220  0E7E               	swapf	126,w
  4086  0221  0009               	retfie
  4087  0222                     __end_of_ISR:	
  4088  0222                     __ptext864:	
  4089 ;; =============== function i1_setAD_ConvertFlag ends ============
  4090                           
  4091                           
  4092 ;; *************** function _adc_get *****************
  4093 ;; Defined at:
  4094 ;;		line 105 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4095 ;; Parameters:    Size  Location     Type
  4096 ;;		None
  4097 ;; Auto vars:     Size  Location     Type
  4098 ;;  val             2    2[COMMON] unsigned int 
  4099 ;; Return value:  Size  Location     Type
  4100 ;;                  2    0[COMMON] unsigned int 
  4101 ;; Registers used:
  4102 ;;		wreg
  4103 ;; Tracked objects:
  4104 ;;		On entry : 60/0
  4105 ;;		On exit  : 60/20
  4106 ;;		Unchanged: FFF9F/0
  4107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4108 ;;      Params:         2       0       0       0       0
  4109 ;;      Locals:         2       0       0       0       0
  4110 ;;      Temps:          0       0       0       0       0
  4111 ;;      Totals:         4       0       0       0       0
  4112 ;;Total ram usage:        4 bytes
  4113 ;; Hardware stack levels used:    1
  4114 ;; This function calls:
  4115 ;;		Nothing
  4116 ;; This function is called by:
  4117 ;;		_ISR
  4118 ;; This function uses a non-reentrant model
  4119 ;;
  4120  0222                     _adc_get:	
  4121                           
  4122                           ;periph.c: 106: unsigned int val;
  4123                           ;periph.c: 107: val = (ADRESH<<8) | ADRESL;
  4124                           
  4125                           ; Regs used in _adc_get: [wreg]
  4126  0222  081E               	movf	30,w	;volatile
  4127  0223  00F3               	movwf	adc_get@val+1
  4128  0224  01F2               	clrf	adc_get@val
  4129  0225  1683               	bsf	3,5	;RP0=1, select bank1
  4130  0226  081E               	movf	30,w	;volatile
  4131  0227  04F2               	iorwf	adc_get@val,f
  4132                           
  4133                           ;periph.c: 108: return val;
  4134  0228  0873               	movf	adc_get@val+1,w
  4135  0229  00F1               	movwf	?_adc_get+1
  4136  022A  0872               	movf	adc_get@val,w
  4137  022B  00F0               	movwf	?_adc_get
  4138  022C  0008               	return
  4139  022D                     __end_of_adc_get:	
  4140  022D                     __ptext865:	
  4141 ;; =============== function _adc_get ends ============
  4142                           
  4143                           
  4144 ;; *************** function _vPutSampleDataIntoTable *****************
  4145 ;; Defined at:
  4146 ;;		line 106 in file "D:\develop\190625\AK7030-OTP\common.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;  uiSampleData    2    4[COMMON] unsigned int 
  4149 ;;  channel         1    6[COMMON] unsigned char 
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;  i               2    7[COMMON] int 
  4152 ;; Return value:  Size  Location     Type
  4153 ;;		None               void
  4154 ;; Registers used:
  4155 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4156 ;; Tracked objects:
  4157 ;;		On entry : 60/20
  4158 ;;		On exit  : 0/0
  4159 ;;		Unchanged: FFE00/0
  4160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4161 ;;      Params:         3       0       0       0       0
  4162 ;;      Locals:         2       0       0       0       0
  4163 ;;      Temps:          0       0       0       0       0
  4164 ;;      Totals:         5       0       0       0       0
  4165 ;;Total ram usage:        5 bytes
  4166 ;; Hardware stack levels used:    1
  4167 ;; This function calls:
  4168 ;;		Nothing
  4169 ;; This function is called by:
  4170 ;;		_ISR
  4171 ;; This function uses a non-reentrant model
  4172 ;;
  4173  022D                     _vPutSampleDataIntoTable:	
  4174                           
  4175                           ;common.c: 108: static unsigned char ucChannelFirstLength = 0;
  4176                           ;common.c: 110: static unsigned char ucChannelFourthLength = 0;
  4177                           ;common.c: 112: static unsigned char ucChannelFourteenthLength = 0;
  4178                           ;common.c: 114: if(channel == 12)
  4179                           
  4180                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1]
  4181  022D  0876               	movf	vPutSampleDataIntoTable@channel,w
  4182  022E  3A0C               	xorlw	12
  4183  022F  1D03               	skipz
  4184  0230  2A41               	goto	i1l3497
  4185                           
  4186                           ;common.c: 115: {
  4187                           ;common.c: 116: if(ucChannelFirstLength < 12)
  4188  0231  300C               	movlw	12
  4189  0232  027D               	subwf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4190  0233  1803               	skipnc
  4191  0234  2A3B               	goto	i1l3493
  4192                           
  4193                           ;common.c: 117: {
  4194                           ;common.c: 118: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  4195  0235  1003               	clrc
  4196  0236  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4197  0237  3EA0               	addlw	_uiSampleChannelFirst& (0+255)
  4198  0238  228F               	fcall	PL2	;call to abstracted procedure
  4199                           
  4200                           ;common.c: 120: ucChannelFirstLength++;
  4201  0239  0AFD               	incf	vPutSampleDataIntoTable@ucChannelFirstLength,f
  4202                           
  4203                           ;common.c: 121: }
  4204  023A  0008               	return
  4205  023B                     i1l3493:	
  4206                           
  4207                           ;common.c: 122: else
  4208                           ;common.c: 123: {
  4209                           ;common.c: 124: ucChannelFirstLength = 0;
  4210  023B  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  4211                           
  4212                           ;common.c: 126: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  4213  023C  1003               	clrc
  4214  023D  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4215  023E  3EA0               	addlw	_uiSampleChannelFirst& (0+255)
  4216  023F  228F               	fcall	PL2	;call to abstracted procedure
  4217  0240  0008               	return
  4218  0241                     i1l3497:	
  4219                           
  4220                           ;common.c: 129: else if(channel == 13)
  4221  0241  0876               	movf	vPutSampleDataIntoTable@channel,w
  4222  0242  3A0D               	xorlw	13
  4223  0243  1D03               	skipz
  4224  0244  2A56               	goto	i1l3509
  4225                           
  4226                           ;common.c: 130: {
  4227                           ;common.c: 131: if(ucChannelFourthLength < 12)
  4228  0245  300C               	movlw	12
  4229  0246  1283               	bcf	3,5	;RP0=0, select bank0
  4230  0247  0268               	subwf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4231  0248  1803               	skipnc
  4232  0249  2A50               	goto	i1l3505
  4233                           
  4234                           ;common.c: 132: {
  4235                           ;common.c: 133: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  4236  024A  1003               	clrc
  4237  024B  0D68               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4238  024C  3ED0               	addlw	_uiSampleChannelFourth& (0+255)
  4239  024D  228F               	fcall	PL2	;call to abstracted procedure
  4240                           
  4241                           ;common.c: 135: ucChannelFourthLength++;
  4242  024E  0AE8               	incf	vPutSampleDataIntoTable@ucChannelFourthLength,f
  4243                           
  4244                           ;common.c: 136: }
  4245  024F  0008               	return
  4246  0250                     i1l3505:	
  4247                           
  4248                           ;common.c: 137: else
  4249                           ;common.c: 138: {
  4250                           ;common.c: 139: ucChannelFourthLength = 0;
  4251  0250  01E8               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  4252                           
  4253                           ;common.c: 141: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  4254  0251  1003               	clrc
  4255  0252  0D68               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4256  0253  3ED0               	addlw	_uiSampleChannelFourth& (0+255)
  4257  0254  228F               	fcall	PL2	;call to abstracted procedure
  4258  0255  0008               	return
  4259  0256                     i1l3509:	
  4260                           
  4261                           ;common.c: 144: else if(channel == 14)
  4262  0256  0876               	movf	vPutSampleDataIntoTable@channel,w
  4263  0257  3A0E               	xorlw	14
  4264  0258  1D03               	skipz
  4265  0259  2A6B               	goto	i1l3521
  4266                           
  4267                           ;common.c: 145: {
  4268                           ;common.c: 146: if(ucChannelFourteenthLength < 12)
  4269  025A  300C               	movlw	12
  4270  025B  1283               	bcf	3,5	;RP0=0, select bank0
  4271  025C  0267               	subwf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4272  025D  1803               	skipnc
  4273  025E  2A65               	goto	i1l3517
  4274                           
  4275                           ;common.c: 147: {
  4276                           ;common.c: 148: uiSampleChannelFourteenth[ucChannelFourteenthLength] = uiSampleData;
  4277  025F  1003               	clrc
  4278  0260  0D67               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4279  0261  3EB8               	addlw	_uiSampleChannelFourteenth& (0+255)
  4280  0262  228F               	fcall	PL2	;call to abstracted procedure
  4281                           
  4282                           ;common.c: 150: ucChannelFourteenthLength++;
  4283  0263  0AE7               	incf	vPutSampleDataIntoTable@ucChannelFourteenthLength,f
  4284                           
  4285                           ;common.c: 151: }
  4286  0264  0008               	return
  4287  0265                     i1l3517:	
  4288                           
  4289                           ;common.c: 152: else
  4290                           ;common.c: 153: {
  4291                           ;common.c: 154: ucChannelFourteenthLength = 0;
  4292  0265  01E7               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4293                           
  4294                           ;common.c: 156: uiSampleChannelFourth[ucChannelFourteenthLength] = uiSampleData;
  4295  0266  1003               	clrc
  4296  0267  0D67               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4297  0268  3ED0               	addlw	_uiSampleChannelFourth& (0+255)
  4298  0269  228F               	fcall	PL2	;call to abstracted procedure
  4299  026A  0008               	return
  4300  026B                     i1l3521:	
  4301                           
  4302                           ;common.c: 159: else
  4303                           ;common.c: 160: {
  4304                           ;common.c: 161: ucChannelFirstLength = 0;
  4305  026B  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  4306                           
  4307                           ;common.c: 163: ucChannelFourthLength = 0;
  4308  026C  1283               	bcf	3,5	;RP0=0, select bank0
  4309  026D  01E8               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  4310                           
  4311                           ;common.c: 165: ucChannelFourteenthLength = 0;
  4312  026E  01E7               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4313                           
  4314                           ;common.c: 167: for(int i = 0;i < 12; i++)
  4315  026F  01F7               	clrf	vPutSampleDataIntoTable@i
  4316  0270  01F8               	clrf	vPutSampleDataIntoTable@i+1
  4317  0271                     i1l3527:	
  4318                           
  4319                           ;common.c: 168: {
  4320                           ;common.c: 169: uiSampleChannelFirst[i] = 0;
  4321  0271  1003               	clrc
  4322  0272  0D77               	rlf	vPutSampleDataIntoTable@i,w
  4323  0273  3EA0               	addlw	_uiSampleChannelFirst& (0+255)
  4324  0274  0084               	movwf	4
  4325  0275  1383               	bcf	3,7	;select IRP bank1
  4326                           
  4327                           ;common.c: 171: uiSampleChannelFourth[i] = 0;
  4328  0276  2297  118A         	fcall	PL4	;call to abstracted procedure
  4329                           
  4330                           ;common.c: 173: uiSampleChannelFourth[i] = 0;
  4331  0278  2297  118A         	fcall	PL4	;call to abstracted procedure
  4332  027A  0180               	clrf	0
  4333  027B  0A84               	incf	4,f
  4334  027C  0180               	clrf	0
  4335  027D  0AF7               	incf	vPutSampleDataIntoTable@i,f
  4336  027E  1903               	skipnz
  4337  027F  0AF8               	incf	vPutSampleDataIntoTable@i+1,f
  4338  0280  0878               	movf	vPutSampleDataIntoTable@i+1,w
  4339  0281  3A80               	xorlw	128
  4340  0282  00FF               	movwf	127
  4341  0283  3080               	movlw	128
  4342  0284  027F               	subwf	127,w
  4343  0285  1D03               	skipz
  4344  0286  2A89               	goto	u112_25
  4345  0287  300C               	movlw	12
  4346  0288  0277               	subwf	vPutSampleDataIntoTable@i,w
  4347  0289                     u112_25:	
  4348  0289  1803               	btfsc	3,0
  4349  028A  0008               	return
  4350  028B  2A71               	goto	i1l3527
  4351  028C                     __end_of_vPutSampleDataIntoTable:	
  4352  028C                     __ptext863:	
  4353 ;; =============== function _ISR ends ============
  4354                           
  4355                           
  4356 ;; *************** function i1_setAD_ConvertFlag *****************
  4357 ;; Defined at:
  4358 ;;		line 215 in file "D:\develop\190625\AK7030-OTP\common.c"
  4359 ;; Parameters:    Size  Location     Type
  4360 ;;  setAD_Conver    1    wreg     unsigned char 
  4361 ;; Auto vars:     Size  Location     Type
  4362 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  4363 ;; Return value:  Size  Location     Type
  4364 ;;		None               void
  4365 ;; Registers used:
  4366 ;;		wreg
  4367 ;; Tracked objects:
  4368 ;;		On entry : 60/0
  4369 ;;		On exit  : 60/0
  4370 ;;		Unchanged: FFF9F/0
  4371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4372 ;;      Params:         0       0       0       0       0
  4373 ;;      Locals:         1       0       0       0       0
  4374 ;;      Temps:          0       0       0       0       0
  4375 ;;      Totals:         1       0       0       0       0
  4376 ;;Total ram usage:        1 bytes
  4377 ;; Hardware stack levels used:    1
  4378 ;; This function calls:
  4379 ;;		Nothing
  4380 ;; This function is called by:
  4381 ;;		_ISR
  4382 ;; This function uses a non-reentrant model
  4383 ;;
  4384  028C                     i1_setAD_ConvertFlag:	
  4385                           
  4386                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  4387                           ;i1setAD_ConvertFlag@flag stored from wreg
  4388  028C  00F0               	movwf	i1setAD_ConvertFlag@flag
  4389                           
  4390                           ;common.c: 216: adc_convert_flag = flag;
  4391  028D  00DA               	movwf	_adc_convert_flag
  4392  028E  0008               	return
  4393  028F                     __end_ofi1_setAD_ConvertFlag:	
  4394  028F                     PL2:	
  4395  028F  0084               	movwf	4
  4396  0290  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  4397  0291  1383               	bcf	3,7	;select IRP bank1
  4398  0292  0080               	movwf	0
  4399  0293  0A84               	incf	4,f
  4400  0294  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  4401  0295  0080               	movwf	0
  4402  0296  0008               	return
  4403  0297                     PL4:	
  4404  0297  0180               	clrf	0
  4405  0298  0A84               	incf	4,f
  4406  0299  0180               	clrf	0
  4407  029A  1003               	clrc
  4408  029B  0D77               	rlf	vPutSampleDataIntoTable@i,w
  4409  029C  3ED0               	addlw	_uiSampleChannelFourth& (0+255)
  4410  029D  0084               	movwf	4
  4411  029E  0008               	return
  4412                           
  4413                           	psect	intentry
  4414  0004                     __pintentry:	
  4415                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4416                           
  4417  0004                     interrupt_function:	
  4418  007E                     saved_w	set	btemp
  4419  0004  00FE               	movwf	btemp
  4420  0005  0E03               	swapf	3,w
  4421  0006  00F9               	movwf	??_ISR
  4422  0007  0804               	movf	4,w
  4423  0008  00FA               	movwf	??_ISR+1
  4424  0009  080A               	movf	10,w
  4425  000A  00FB               	movwf	??_ISR+2
  4426  000B  1283               	bcf	3,5	;RP0=0, select bank0
  4427  000C  1303               	bcf	3,6	;RP1=0, select bank0
  4428  000D  087F               	movf	btemp+1,w
  4429  000E  00FC               	movwf	??_ISR+3
  4430  000F  118A  29BE         	ljmp	_ISR
  4431                           
  4432                           	psect	text866
  4433  0000                     __ptext866:	
  4434 ;; =============== function _vPutSampleDataIntoTable ends ============
  4435                           
  4436  007E                     btemp	set	126	;btemp
  4437  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Tue Oct 29 14:59:19 2019

                                  ??_clock_config 0020                               ?_startOneHoursTimer 0020  
                                              _GO 00F9                                                fsr 0004  
                        ?_timer1_interrupt_config 0070                                               l702 03C8  
                                             l712 0000                                               l707 03EA  
                                             l732 0000                                               l718 0000  
                                             l726 0000                                               l735 0000  
                                             l729 0000                                               l682 03AD  
                                             l738 04AD                                               l692 03BD  
                                             l757 01BD                                               l687 03DA  
                                             l697 03E2                                               _GIE 005F  
                                             _PB2 0032                                               _PB3 0033  
                                             _PB4 0034                                               _PB5 0035  
                                             _PR2 0092                                               _ISR 01BE  
                                             fsr0 0004                                               indf 0000  
                          ??_startThreeHoursTimer 0022                                              ?_ISR 0070  
                            ??_startOneHoursTimer 0022                                __size_of_AD_Sample 0014  
                                            l2313 0000                                              l1602 0000  
                                            l3301 0000                                              l1517 0000  
                                            l1543 0490                                              l3303 0000  
                                            l3311 0000                                              l2319 0000  
                                            l1552 0000                                              l3305 0000  
                                            l3313 0000                                              l3321 0397  
                                            l3401 0000                                              l1561 0000  
                                            l1546 0000                                              l3307 0000  
                                            l3315 0000                                              l3323 0000  
                                            l3331 0000                                              l1651 0000  
                                            l3411 0000                                              l1555 0000  
                                            l1564 0000                                              l3261 0000  
                                            l1549 0000                                              l3309 0000  
                                            l3317 0000                                              l1590 0000  
                                            l1558 0000                                              l3255 0000  
                                            l3263 0000                                              l3271 0000  
                                            l3319 0000                                              l3343 0000  
                                            l3351 0000                                              l3423 0000  
                                            l1593 0000                                              l3257 0000  
                                            l3265 0000                                              l3273 0000  
                                            l3281 0000                                              l3329 0000  
                                            l3345 0000                                              l3361 0000  
                                            l3417 0000                                              l3425 0000  
                                            l3441 02B5                                              l3601 0000  
                                            l3259 0000                                              l3267 0000  
                                            l3275 0000                                              l3283 0000  
                                            l3291 0000                                              l3363 0000  
                                            l3371 0000                                              l3419 0000  
                                            l3443 0000                                              l3435 0000  
                                            l3603 0000                                              l3269 0000  
                                            l3277 0000                                              l3285 0000  
                                            l3293 0000                                              l3349 0000  
                                            l3461 0312                                              l3445 0000  
                                            l3533 0000                                              l3701 00B9  
                                            l3279 0000                                              l3287 0000  
                                            l3295 0000                                              l3375 0000  
                                            l3463 02D2                                              l3455 02D1  
                                            l3447 0000                                              l3551 037F  
                                            l3543 0000                                              l3607 0000  
                                            l3615 0000                                              l3703 00BA  
                                            l3631 0000                                              l3623 0000  
                                            l3289 0000                                              l3297 044E  
                                            l3369 0000                                              l3377 0000  
                                            l3393 0000                                              l3481 0000  
                                            l3465 0314                                              l3537 0000  
                                            l3801 0188                                              l3721 00DD  
                                            l3713 00CB                                              l3641 0000  
                                            l3633 0000                                              l3625 0000  
                                            l3299 0000                                              l3387 0000  
                                            l3395 0000                                              l3475 0000  
                                            l3467 0000                                              l3547 0000  
                                            l3539 0000                                              l3619 0000  
                                            l3803 0189                                              l3731 0000  
                                            l3723 00DE                                              l3707 00C0  
                                            l3635 0000                                              l3627 0000  
                                            l3477 0000                                              l3741 00FB  
                                            l3733 0000                                              l3709 0000  
                                            l3653 0049                                              l3645 0037  
                                            l3637 018D                                              l3629 0000  
                                            l3399 0000                                              l3751 0111  
                                            l3735 0000                                              l3663 0000  
                                            l3639 0000                                              l3593 0000  
                                            l3753 0113                                              l3737 0000  
                                            l3729 00E4                                              l3681 0079  
                                            l3673 0074                                              l3595 0000  
                                            l3771 0142                                              l3763 012B  
                                            l3675 0075                                              l3667 0067  
                                            l3659 0059                                              l3597 0000  
                                            l3773 0146                                              l3757 0000  
                                            l3749 0000                                              l3693 00A4  
                                            l3685 0085                                              l3677 0000  
                                            l3599 0000                                              l3791 016C  
                                            l3783 0000                                              l3767 0139  
                                            l3759 0000                                              l3695 00AA  
                                            l3687 0000                                              l3679 018C  
                                            l3793 0000                                              l3785 0000  
                                            l3777 0154                                              l3769 013B  
                                            l3697 00AD                                              l3689 0000  
                                            l3787 0000                                              l3779 0156  
                                            l3797 017C                                              _ADIE 046A  
                                            _ADIF 006A                                              _ADON 00F8  
                   startTwelveHourTimer@uiSetTime 0020                                              u1015 02CC  
                                            u1025 02F5                                              u1035 02DF  
                                            _PEIE 005E                                              _main 0013  
                                            btemp 007E                                              start 0011  
                         ?_getAdOriginalCh12Value 0047                           ?_getAdOriginalCh13Value 0047  
                      ??_isFinishedTwentyMinTimer 0020                                             ??_ISR 0079  
                               ??_setPinInitVaule 0021                        __end_of_isPermitSampleTime 0498  
                             _sampleChannelSelect 0069                                      main@ucDebug1 0063  
                                    main@ucDebug2 0064                                             ?_main 0070  
                                           _CLKPR 0108                                             _T1CON 0010  
                                           _T2CON 0012                                   __end_of_adc_get 022D  
                                           _PBOD2 0C42                                             _TMR1H 000F  
                                           _TMR1L 000E                             setAD_ConvertFlag@flag 0020  
                               ??_selectAdChannel 0020                                   __end_of_initPB3 03B0  
                                 __end_of_initPB4 03C0                                   __end_of_initPB5 03CB  
                         _vPutSampleDataIntoTable 022D                                   __end_of_initPin 03A4  
                                           _reset 04AD                                             _timer 0060  
                                 pwm_config@state 0020                                             pclath 000A  
                                           status 0003                    __end_of_getAdOriginalCh12Value 02A6  
                                           wtemp0 007E                    __end_of_getAdOriginalCh13Value 02AD  
                   __size_of_startTwelveHourTimer 000E                              __end_of_clrSampeTime 04AD  
                                    __end_of_main 01BE                            __size_of_adc_test_init 0015  
                               __end_of_AD_Sample 0382                                            ??_main 0049  
                                          _ADCON0 001F                                            _ADCON1 009F  
                            __end_of_clock_config 0493                                            _ADRESH 001E  
                                          _ADRESL 009E                                            _CCPR1L 0015  
                                          ?_reset 0070                                            _CLKPCE 0847  
                                          i1l2322 0000                                            u112_25 0289  
                                          i1l1660 01E6                                            i1l1661 01F0  
                                          i1l1558 0000                                            i1l3503 0000  
                                          i1l3521 026B                                            i1l3505 0250  
                                          i1l1666 0215                                            i1l1658 01D2  
                                          i1l3531 0000                                            i1l3515 0000  
                                          i1l3507 0000                                            i1l1659 01DC  
                                          i1l3517 0265                                            i1l3509 0256  
                                          i1l3527 0271                                            i1l3519 0000  
                                          i1l3529 0000                                            i1l3553 0000  
                                          i1l3491 0000                                            i1l3563 0000  
                                          i1l3493 023B                                            i1l3485 0000  
                                          i1l3581 0000                                            i1l3557 0000  
                                          i1l3495 0000                                            i1l3591 0000  
                                          i1l3559 0000                                            i1l3575 01FA  
                                          i1l3497 0241                                            i1l3585 020C  
                                          i1l3587 0000                                            i1l3579 0000  
                                          _TMR1IE 0460                                            _TMR1IF 0060  
                               _getAD_ConvertFlag 0367                                 _setAD_ConvertFlag 036B  
                                          _TRISB0 0430                                            _TRISB1 0431  
                                          _TRISB2 0432                                            _TRISB3 0433  
                                          _TRISB4 0434                                            _TRISB5 0435  
                           __end_of_setPulseWidth 04AF                                ?_getAD_ConvertFlag 0070  
                                          _Filter 02AD                                ?_setAD_ConvertFlag 0070  
                     ??_isFinishedThreeHoursTimer 0020                     __size_of_clearThreeHoursTimer 0004  
                                       ??_adc_get 0072                               ??_getAD_ConvertFlag 0020  
                             ??_setAD_ConvertFlag 0020                                            _setPB3 03D3  
                                          _setPB4 03DC                                            _setPB5 03E4  
                     __end_of_clearTwentyMinTimer 049C                                            clrloop 0484  
                                Filter@filter_buf 0026                                         ??_initPB3 0020  
                                       ??_initPB4 0020                                         ??_initPB5 0020  
                                Filter@filter_sum 0040                                         ??_initPin 0021  
                       ??_vPutSampleDataIntoTable 0077                                            saved_w 007E  
                         ??_clearTwelveHoursTimer 0020                       ?_process_AD_Converter_Value 0070  
                                   _adc_test_init 0382                         __end_of_getAD_ConvertFlag 036B  
                       __end_of_setAD_ConvertFlag 036E                                __size_of_adc_start 0003  
                        _initPB2_AsHighResistence 03B0                  __size_of_isFinishedOneHoursTimer 000A  
                __end_of_isFinishedTwentyMinTimer 0479                                    __pcstackCOMMON 0070  
                                    __pidataBANK0 0000                                 main@uiTimerOneP5s 0053  
                                   __end_of_reset 04AE                                 main@uiTimerTwoP5s 0057  
                            _uiSampleChannelFirst 00A0                    vPutSampleDataIntoTable@channel 0076  
                       _isFinishedThreeHoursTimer 045B                             __end_of_timer1_config 0483  
                                  ?_adc_test_init 0020                       __end_of_startTwentyMinTimer 0445  
     vPutSampleDataIntoTable@ucChannelFirstLength 007D                                           ??_reset 0020  
                __size_of_timer1_interrupt_config 0003                             __size_of_clrSampeTime 0002  
                                      __pbssBANK0 0049                                        __pbssBANK1 00A0  
                    __size_ofi1_setAD_ConvertFlag 0003                                   _setPinInitVaule 03CB  
                                      adc_get@val 0072                                  _uiTwentyMinTimer 004F  
                 __end_of_vPutSampleDataIntoTable 028C                                           ?_Filter 0020  
                                      __pmaintext 0013                                   _selectAdChannel 049C  
                                      __pintentry 0004                                           _CCP1CON 0017  
                                         ?_setPB3 0070                                           ?_setPB4 0070  
                                         ?_setPB5 0070                             __size_of_clock_config 0008  
                                    _clrSampeTime 04AB                                 __end_of_adc_start 039A  
                            _uiTwentySecondsTimer 0051                                _isPermitSampleTime 0493  
                                         Filter@i 0046                                           Filter@j 0045  
                              __size_of_pwm_start 000F                       __size_of_startOneHoursTimer 000E  
                   __size_of_startThreeHoursTimer 000E                        __size_of_getAD_ConvertFlag 0004  
                      __size_of_setAD_ConvertFlag 0003                                    main@ucTimerP5s 0066  
                             ?_isPermitSampleTime 0070                                   __size_of_Filter 008E  
                                      _uiBigTimer 0049                                      setPB3@bValue 0020  
                                    setPB4@bValue 0020                                      _clock_config 048B  
                                    setPB5@bValue 0020                                    main@uiTimerP5s 0055  
                                         _adc_get 0222                                   __size_of_setPB3 0009  
                                 __size_of_setPB4 0008                                   __size_of_setPB5 0008  
                            ??_isPermitSampleTime 0020                      __end_of_startTwelveHourTimer 0437  
                                   initPB3@bValue 0020                                     initPB4@bValue 0020  
                                       _AD_Sample 036E                                           _initPB3 03A4  
                                         _initPB4 03B5                                           _initPB5 03C0  
                                    __size_of_ISR 0064                                     initPB5@bValue 0020  
                                         _initPin 039A                              _bSmallTimerStartFlag 005D  
                                 ??_adc_test_init 0021                 __size_of_isFinishedTwentyMinTimer 000A  
                       ?_isFinishedTwentyMinTimer 0070                           __end_of_setPinInitVaule 03D3  
                            end_of_initialization 03FB                                 Filter@filter_temp 003E  
                           pwm_start@ucPulseWidth 0020                           __end_of_selectAdChannel 04A0  
                         _isFinishedOneHoursTimer 0451                                 __end_of_pwm_start 040D  
                                      ?_AD_Sample 0070                      ??_isFinishedTwelveHoursTimer 0020  
                                       Filter@cir 0043                               _bTwentyMinStartFlag 005E  
                                _adc_convert_flag 005A                                        _pwm_config 0445  
                    __end_of_clearThreeHoursTimer 04A4                    __size_of_clearTwelveHoursTimer 0004  
                         _timer1_interrupt_config 04A8                     __end_of_clearTwelveHoursTimer 04A8  
                      ??_initPB2_AsHighResistence 0020                __size_of_isFinishedThreeHoursTimer 000A  
                                      main@ucStep 0065                                    __end_of_Filter 033B  
                   startTwentyMinTimer@uiSetValue 0020               __size_of_isFinishedTwelveHoursTimer 000A  
                        vPutSampleDataIntoTable@i 0077                               i1_setAD_ConvertFlag 028C  
                                  __end_of_setPB3 03DC                                    __end_of_setPB4 03E4  
                                  __end_of_setPB5 03EC                            __size_of_setPulseWidth 0001  
                             start_initialization 03EC                                       __end_of_ISR 0222  
                           _uiSampleChannelFourth 00D0                          ??_getAdOriginalCh12Value 0049  
                                ?_setPinInitVaule 0070                          ??_getAdOriginalCh13Value 0049  
                    __size_of_clearTwentyMinTimer 0004                         ??_isFinishedOneHoursTimer 0020  
                            ?i1_setAD_ConvertFlag 0070                              _startTwelveHourTimer 0429  
               __end_of_isFinishedThreeHoursTimer 0465                                  ?_selectAdChannel 0070  
                                        ??_Filter 0022                                       __pdataBANK0 0069  
                                        ??_setPB3 0020                                          ??_setPB4 0020  
                                        ??_setPB5 0020                          ?_vPutSampleDataIntoTable 0074  
                                     ??_AD_Sample 0020                         ??_timer1_interrupt_config 0020  
                                     __pbssCOMMON 007D                                     __pcstackBANK0 0020  
                                     ?_pwm_config 0070                                         _adc_start 0397  
                           ??i1_setAD_ConvertFlag 0070                             ?_startTwelveHourTimer 0020  
                    __size_of_startTwentyMinTimer 000E                                     _setPulseWidth 04AE  
                          __size_of_timer1_config 000A                              _clearThreeHoursTimer 04A0  
                    __end_of_startThreeHoursTimer 0429                                         __ptext830 0367  
                                       __ptext831 02AD                                         __ptext823 029F  
                                       __ptext840 04AB                                         __ptext832 0451  
                                       __ptext824 02A6                                         __ptext841 0493  
                                       __ptext833 040D                                         __ptext825 0351  
                                       __ptext850 049C                                         __ptext842 0437  
                                       __ptext834 045B                                         __ptext826 03CB  
                                       __ptext851 0445                                         __ptext843 0397  
                                       __ptext835 041B                                         __ptext827 039A  
                                       __ptext860 04A0                                         __ptext852 03FE  
                                       __ptext844 0382                                         __ptext836 0465  
                                       __ptext828 036E                                         __ptext861 04A4  
                                       __ptext853 03B0                                         __ptext845 04A8  
                                       __ptext837 0429                                         __ptext829 036B  
                                       __ptext862 01BE                                         __ptext854 03E4  
                                       __ptext846 0479                                         __ptext838 0498  
                                       __ptext863 028C                                         __ptext855 03C0  
                                       __ptext847 048B                                         __ptext839 046F  
                                       __ptext864 0222                                         __ptext856 03DC  
                                       __ptext848 04AD                                         __ptext865 022D  
                                       __ptext857 03B5                                         __ptext849 04AE  
                                       __ptext866 0000                                         __ptext858 03D3  
                                       __ptext859 03A4                                 main@cTimerP5s_783 0061  
                               main@cTimerP5s_787 0062                                          ?_adc_get 0070  
                 __end_of_isFinishedOneHoursTimer 045B                __end_of_isFinishedTwelveHoursTimer 046F  
                      _isFinishedTwelveHoursTimer 0465                                          ?_initPB3 0070  
                                        ?_initPB4 0070                                          ?_initPB5 0070  
                                 ISR@ucTimer1sCnt 0059                                          ?_initPin 0070  
                      __end_of_startOneHoursTimer 041B                  __end_of_initPB2_AsHighResistence 03B5  
                       _uiSampleChannelFourteenth 00B8                                        ?_adc_start 0070  
                 __size_of_getAdOriginalCh12Value 0007                   __size_of_getAdOriginalCh13Value 0007  
                                  __size_of_reset 0001                                 interrupt_function 0004  
                                  ?_setPulseWidth 0070                   __end_of_timer1_interrupt_config 04AB  
                           ?_clearThreeHoursTimer 0070                               __size_of_pwm_config 000C  
                            adc_test_init@channel 0022               vPutSampleDataIntoTable@uiSampleData 0074  
    vPutSampleDataIntoTable@ucChannelFourthLength 0068                       __size_of_isPermitSampleTime 0005  
                                       _pwm_start 03FE                                      _uiSmallTimer 004D  
                           __end_of_adc_test_init 0397                                     _timer1_config 0479  
                    ??_process_AD_Converter_Value 0023                            ??_startTwelveHourTimer 0022  
                          _getAdOriginalCh12Value 029F                            _getAdOriginalCh13Value 02A6  
                             _clearTwentyMinTimer 0498                       startOneHoursTimer@uiSetTime 0020  
                                __size_of_adc_get 000B               __size_of_process_AD_Converter_Value 0016  
                                      ?_pwm_start 0070                          _isFinishedTwentyMinTimer 046F  
vPutSampleDataIntoTable@ucChannelFourteenthLength 0067                                  __size_of_initPB3 000C  
                                __size_of_initPB4 000B                                  __size_of_initPB5 000B  
                                __size_of_initPin 000A                                    Filter@tmpValue 0042  
                                  ?_timer1_config 0070                              ?_clearTwentyMinTimer 0070  
                                     ??_adc_start 0020                              _startThreeHoursTimer 041B  
                           _clearTwelveHoursTimer 04A4                                    _uiOneHourTimer 004B  
                                 ??_setPulseWidth 0020                                     __size_of_main 01AB  
                                        clear_ram 0483                            ??_clearThreeHoursTimer 0020  
               __size_of_initPB2_AsHighResistence 0005                         ?_initPB2_AsHighResistence 0070  
                          _bOneHourTimerStartFlag 005C                                     ?_clrSampeTime 0070  
                             _startTwentyMinTimer 0437                                      ??_pwm_config 0020  
                                     _sampleTimes 005F                             ??_clearTwentyMinTimer 0020  
                           ?_startThreeHoursTimer 0020                  __size_of_vPutSampleDataIntoTable 005F  
                                        intlevel1 0000                              ?_startTwentyMinTimer 0020  
                        __size_of_setPinInitVaule 0008                        ?_isFinishedThreeHoursTimer 0070  
                                   ?_clock_config 0070                                __end_of_pwm_config 0451  
                        __size_of_selectAdChannel 0004                     startThreeHoursTimer@uiSetTime 0020  
                         i1setAD_ConvertFlag@flag 0070                                       ??_pwm_start 0020  
                                  ??_clrSampeTime 0020                       ?_isFinishedTwelveHoursTimer 0070  
                              _bBigTimerStartFlag 005B                                   ??_timer1_config 0020  
                     __end_ofi1_setAD_ConvertFlag 028F                __end_of_process_AD_Converter_Value 0367  
                      _process_AD_Converter_Value 0351                          ?_isFinishedOneHoursTimer 0070  
                          ?_clearTwelveHoursTimer 0070                                  adc_test_init@ref 0020  
                           ??_startTwentyMinTimer 0022                                _startOneHoursTimer 040D  
