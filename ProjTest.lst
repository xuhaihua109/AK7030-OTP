

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Mon Jun 17 13:15:23 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,delta=2
    14                           	psect	swtext1,local,class=CONST,delta=2
    15                           	psect	swtext2,local,class=CONST,delta=2
    16                           	psect	swtext3,local,class=CONST,delta=2
    17                           	psect	text583,local,class=CODE,delta=2
    18                           	psect	text584,local,class=CODE,delta=2
    19                           	psect	text590,local,class=CODE,delta=2
    20                           	psect	text591,local,class=CODE,delta=2
    21                           	psect	text592,local,class=CODE,delta=2
    22                           	psect	text593,local,class=CODE,delta=2
    23                           	psect	text594,local,class=CODE,delta=2
    24                           	psect	text595,local,class=CODE,delta=2
    25                           	psect	text596,local,class=CODE,delta=2
    26                           	psect	text597,local,class=CODE,delta=2
    27                           	psect	text598,local,class=CODE,delta=2
    28                           	psect	text599,local,class=CODE,delta=2
    29                           	psect	text600,local,class=CODE,delta=2
    30                           	psect	text602,local,class=CODE,delta=2
    31                           	psect	text603,local,class=CODE,delta=2
    32                           	psect	text604,local,class=CODE,delta=2
    33                           	psect	text606,local,class=CODE,delta=2
    34                           	psect	text607,local,class=CODE,delta=2
    35                           	psect	text608,local,class=CODE,delta=2
    36                           	psect	text612,local,class=CODE,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text615,local,class=CODE,delta=2
    39                           	psect	pa_nodes,global,class=CODE,delta=2
    40                           	dabs	1,0x7E,2
    41  000A                     	;#
    42                           
    43                           	psect	config
    44  2000  2FFF               	dw	12287	;#
    45  2001  3FDE               	dw	16350	;#
    46  2002  3FF8               	dw	16376	;#
    47                           
    48                           	psect	idataBANK0
    49  0000                     __pidataBANK0:	
    50  001F                     _ADCON0	set	31
    51  001E                     _ADRESH	set	30
    52  001B                     _OP1CON0	set	27
    53  001C                     _OP1CON1	set	28
    54  001D                     _OP1CON2	set	29
    55  0010                     _T1CON	set	16
    56  000F                     _TMR1H	set	15
    57  000E                     _TMR1L	set	14
    58  006A                     _ADIF	set	106
    59  00F8                     _ADON	set	248
    60  005F                     _GIE	set	95
    61  00F9                     _GO	set	249
    62  0028                     _PA0	set	40
    63  0029                     _PA1	set	41
    64  002A                     _PA2	set	42
    65  002B                     _PA3	set	43
    66  002E                     _PA6	set	46
    67  002F                     _PA7	set	47
    68  0030                     _PB0	set	48
    69  0031                     _PB1	set	49
    70  0032                     _PB2	set	50
    71  0036                     _PB6	set	54
    72  005E                     _PEIE	set	94
    73  0060                     _TMR1IF	set	96
    74  009F                     _ADCON1	set	159
    75  009E                     _ADRESL	set	158
    76  0087                     _DACCON	set	135
    77  0088                     _DACR0	set	136
    78  009B                     _OP2CON0	set	155
    79  009C                     _OP2CON1	set	156
    80  009D                     _OP2CON2	set	157
    81  046A                     _ADIE	set	1130
    82  0460                     _TMR1IE	set	1120
    83  0428                     _TRISA0	set	1064
    84  0429                     _TRISA1	set	1065
    85  042A                     _TRISA2	set	1066
    86  042B                     _TRISA3	set	1067
    87  042E                     _TRISA6	set	1070
    88  042F                     _TRISA7	set	1071
    89  0430                     _TRISB0	set	1072
    90  0431                     _TRISB1	set	1073
    91  0432                     _TRISB2	set	1074
    92  0433                     _TRISB3	set	1075
    93  0434                     _TRISB4	set	1076
    94  0435                     _TRISB5	set	1077
    95  0437                     _TRISB7	set	1079
    96  0108                     _CLKPR	set	264
    97  0847                     _CLKPCE	set	2119
    98  0C3F                     _PAOD7	set	3135
    99  0C46                     _PBOD6	set	3142
   100                           
   101                           	psect	cinit
   102  0435                     start_initialization:	
   103  0435  3020               	movlw	low __pbssBANK0
   104                           
   105                           ; Clear objects allocated to COMMON
   106  0436  01F6               	clrf	__pbssCOMMON& (0+127)
   107  0437  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   108  0438  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   109  0439  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   110  043A  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   111                           
   112                           ; Clear objects allocated to BANK0
   113  043B  1383               	bcf	3,7	;select IRP bank0
   114  043C  0084               	movwf	4
   115  043D  3056               	movlw	low (__pbssBANK0+54)
   116  043E  118A  2482         	fcall	clear_ram
   117                           
   118                           ;initializer for _sampleChannelSelect
   119  0440  300E               	movlw	14
   120  0441  00DB               	movwf	__pdataBANK0& (0+127)
   121  0442                     end_of_initialization:	
   122                           ;End of C runtime variable initialization code
   123                           
   124  0442  0183               	clrf	3
   125  0443  118A  280D         	ljmp	_main	;jump to C main() function
   126                           
   127                           	psect	bssCOMMON
   128  0076                     __pbssCOMMON:	
   129  0076                     _uiBigTimer:	
   130  0076                     	ds	2
   131  0078                     ISR@ucTimer1sCnt:	
   132  0078                     	ds	1
   133  0079                     _adc_convert_flag:	
   134  0079                     	ds	1
   135  007A                     _timer:	
   136  007A                     	ds	1
   137                           
   138                           	psect	bssBANK0
   139  0020                     __pbssBANK0:	
   140  0020                     _buffer_Sample_AD_Value:	
   141  0020                     	ds	12
   142  002C                     _adc_original_CH14_value:	
   143  002C                     	ds	2
   144  002E                     _adc_original_CH1_value:	
   145  002E                     	ds	2
   146  0030                     _adc_original_CH4_value:	
   147  0030                     	ds	2
   148  0032                     _adc_original_value:	
   149  0032                     	ds	2
   150  0034                     _multiFilterMaxValue:	
   151  0034                     	ds	2
   152  0036                     _multiFilterMinValue:	
   153  0036                     	ds	2
   154  0038                     _uiSmallTimer:	
   155  0038                     	ds	2
   156  003A                     _uiTwentySecondsTimer:	
   157  003A                     	ds	2
   158  003C                     _sampleTimes:	
   159  003C                     	ds	1
   160  003D                     main@cTimer1s_806:	
   161  003D                     	ds	1
   162  003E                     main@enumBranchStep:	
   163  003E                     	ds	1
   164  003F                     main@enumInteralStep:	
   165  003F                     	ds	1
   166  0040                     main@enumMainLoopStep:	
   167  0040                     	ds	1
   168  0041                     main@ucADC4_Step:	
   169  0041                     	ds	1
   170  0042                     main@ucChannel4Type:	
   171  0042                     	ds	1
   172  0043                     main@ucLoaderStep:	
   173  0043                     	ds	1
   174  0044                     main@ucLoaderStep1:	
   175  0044                     	ds	1
   176  0045                     main@ucLoaderStep2:	
   177  0045                     	ds	1
   178  0046                     main@ucLoaderStep3:	
   179  0046                     	ds	1
   180  0047                     main@ucLoaderStep4:	
   181  0047                     	ds	1
   182  0048                     main@ucTimer1s:	
   183  0048                     	ds	1
   184  0049                     main@ucTimer20s:	
   185  0049                     	ds	1
   186  004A                     main@ucTimerADC1ZeroP5s:	
   187  004A                     	ds	1
   188  004B                     main@ucTimerDelay:	
   189  004B                     	ds	1
   190  004C                     main@ucTimerDelay1:	
   191  004C                     	ds	1
   192  004D                     main@ucTimerDelay2:	
   193  004D                     	ds	1
   194  004E                     main@ucTimerDelay3:	
   195  004E                     	ds	1
   196  004F                     main@ucTimerDelay4:	
   197  004F                     	ds	1
   198  0050                     main@ucTimerP3s:	
   199  0050                     	ds	1
   200  0051                     main@ucTimerRightP5s:	
   201  0051                     	ds	1
   202  0052                     main@ucTimerX1P5s:	
   203  0052                     	ds	1
   204  0053                     main@ucTimerX2P5s:	
   205  0053                     	ds	1
   206  0054                     main@ucTimerZeroPoint3s:	
   207  0054                     	ds	1
   208  0055                     main@ucTimerZeroPoint5s:	
   209  0055                     	ds	1
   210                           
   211                           	psect	dataBANK0
   212  005B                     __pdataBANK0:	
   213  005B                     _sampleChannelSelect:	
   214  005B                     	ds	1
   215                           
   216                           	psect	clrtext
   217  0482                     clear_ram:	
   218                           ;	Called with FSR containing the base address, and
   219                           ;	W with the last address+1
   220                           
   221  0482  0064               	clrwdt	;clear the watchdog before getting into this loop
   222  0483                     clrloop:	
   223  0483  0180               	clrf	0	;clear RAM location pointed to by FSR
   224  0484  0A84               	incf	4,f	;increment pointer
   225  0485  0604               	xorwf	4,w	;XOR with final address
   226  0486  1903               	btfsc	3,2	;have we reached the end yet?
   227  0487  3400               	retlw	0	;all done for this memory range, return
   228  0488  0604               	xorwf	4,w	;XOR again to restore value
   229  0489  2C83               	goto	clrloop	;do the next byte
   230                           
   231                           	psect	cstackCOMMON
   232  0070                     __pcstackCOMMON:	
   233  0070                     ?_clearTwelveHoursTimer:	
   234  0070                     ?_clearThreeHoursTimer:	
   235                           ; 0 bytes @ 0x0
   236                           
   237  0070                     ?_clearTwentySecondsTimer:	
   238                           ; 0 bytes @ 0x0
   239                           
   240  0070                     ?_clock_config:	
   241                           ; 0 bytes @ 0x0
   242                           
   243  0070                     ?_timer1_config:	
   244                           ; 0 bytes @ 0x0
   245                           
   246  0070                     ?_timer1_interrupt_config:	
   247                           ; 0 bytes @ 0x0
   248                           
   249  0070                     ?_dac_init:	
   250                           ; 0 bytes @ 0x0
   251                           
   252  0070                     ?_op1_init:	
   253                           ; 0 bytes @ 0x0
   254                           
   255  0070                     ?_op2_init:	
   256                           ; 0 bytes @ 0x0
   257                           
   258  0070                     ?_adc_start:	
   259                           ; 0 bytes @ 0x0
   260                           
   261  0070                     ?_clrSampeTime:	
   262                           ; 0 bytes @ 0x0
   263                           
   264  0070                     ?_process_AD_Converter_Value:	
   265                           ; 0 bytes @ 0x0
   266                           
   267  0070                     ?_startTwelveHourTimer:	
   268                           ; 0 bytes @ 0x0
   269                           
   270  0070                     ?_startTwentySecondsTimer:	
   271                           ; 0 bytes @ 0x0
   272                           
   273  0070                     ?_startThreeHoursTimer:	
   274                           ; 0 bytes @ 0x0
   275                           
   276  0070                     ?_AD_Sample:	
   277                           ; 0 bytes @ 0x0
   278                           
   279  0070                     ?_clearAllTimer:	
   280                           ; 0 bytes @ 0x0
   281                           
   282  0070                     ?_clearPinPortAndTimer:	
   283                           ; 0 bytes @ 0x0
   284                           
   285  0070                     ?_main:	
   286                           ; 0 bytes @ 0x0
   287                           
   288  0070                     ?_setAD_ConvertFlag:	
   289                           ; 0 bytes @ 0x0
   290                           
   291  0070                     ?_ISR:	
   292                           ; 0 bytes @ 0x0
   293                           
   294  0070                     ?i1_setAD_ConvertFlag:	
   295                           ; 0 bytes @ 0x0
   296                           
   297  0070                     ??i1_setAD_ConvertFlag:	
   298                           ; 0 bytes @ 0x0
   299                           
   300  0070                     ?_isPermitSampleTime:	
   301                           ; 0 bytes @ 0x0
   302                           
   303  0070                     ?_isFinishedTwelveHoursTimer:	
   304                           ; 1 bytes @ 0x0
   305                           
   306  0070                     ?_isFinishedTwentySecondsTimer:	
   307                           ; 1 bytes @ 0x0
   308                           
   309  0070                     ?_isFinishedThreeHoursTimer:	
   310                           ; 1 bytes @ 0x0
   311                           
   312  0070                     ?_getAD_ConvertFlag:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0070                     ?_adc_get:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0070                     i1setAD_ConvertFlag@flag:	
   319                           ; 2 bytes @ 0x0
   320                           
   321                           
   322                           ; 1 bytes @ 0x0
   323  0070                     	ds	2
   324  0072                     ??_adc_get:	
   325  0072                     adc_get@val:	
   326                           ; 0 bytes @ 0x2
   327                           
   328                           
   329                           ; 2 bytes @ 0x2
   330  0072                     	ds	2
   331  0074                     ??_ISR:	
   332                           
   333                           ; 0 bytes @ 0x4
   334  0074                     	ds	2
   335                           
   336                           	psect	cstackBANK0
   337  0056                     __pcstackBANK0:	
   338  0056                     ??_clearTwelveHoursTimer:	
   339  0056                     ??_clearThreeHoursTimer:	
   340                           ; 0 bytes @ 0x0
   341                           
   342  0056                     ??_clearTwentySecondsTimer:	
   343                           ; 0 bytes @ 0x0
   344                           
   345  0056                     ??_clock_config:	
   346                           ; 0 bytes @ 0x0
   347                           
   348  0056                     ??_timer1_config:	
   349                           ; 0 bytes @ 0x0
   350                           
   351  0056                     ??_timer1_interrupt_config:	
   352                           ; 0 bytes @ 0x0
   353                           
   354  0056                     ?_adc_test_init:	
   355                           ; 0 bytes @ 0x0
   356                           
   357  0056                     ??_dac_init:	
   358                           ; 0 bytes @ 0x0
   359                           
   360  0056                     ??_op1_init:	
   361                           ; 0 bytes @ 0x0
   362                           
   363  0056                     ??_op2_init:	
   364                           ; 0 bytes @ 0x0
   365                           
   366  0056                     ??_adc_start:	
   367                           ; 0 bytes @ 0x0
   368                           
   369  0056                     ??_isPermitSampleTime:	
   370                           ; 0 bytes @ 0x0
   371                           
   372  0056                     ??_clrSampeTime:	
   373                           ; 0 bytes @ 0x0
   374                           
   375  0056                     ??_startTwelveHourTimer:	
   376                           ; 0 bytes @ 0x0
   377                           
   378  0056                     ??_isFinishedTwelveHoursTimer:	
   379                           ; 0 bytes @ 0x0
   380                           
   381  0056                     ??_startTwentySecondsTimer:	
   382                           ; 0 bytes @ 0x0
   383                           
   384  0056                     ??_isFinishedTwentySecondsTimer:	
   385                           ; 0 bytes @ 0x0
   386                           
   387  0056                     ??_startThreeHoursTimer:	
   388                           ; 0 bytes @ 0x0
   389                           
   390  0056                     ??_isFinishedThreeHoursTimer:	
   391                           ; 0 bytes @ 0x0
   392                           
   393  0056                     ??_clearAllTimer:	
   394                           ; 0 bytes @ 0x0
   395                           
   396  0056                     ??_clearPinPortAndTimer:	
   397                           ; 0 bytes @ 0x0
   398                           
   399  0056                     ??_getAD_ConvertFlag:	
   400                           ; 0 bytes @ 0x0
   401                           
   402  0056                     ??_setAD_ConvertFlag:	
   403                           ; 0 bytes @ 0x0
   404                           
   405  0056                     ?_getAdOriginalCh14Value:	
   406                           ; 0 bytes @ 0x0
   407                           
   408  0056                     ?_getAdOriginalCh1Value:	
   409                           ; 2 bytes @ 0x0
   410                           
   411  0056                     ?_getAdOriginaCh4Value:	
   412                           ; 2 bytes @ 0x0
   413                           
   414  0056                     ?_getAdOriginalValue:	
   415                           ; 2 bytes @ 0x0
   416                           
   417  0056                     setAD_ConvertFlag@flag:	
   418                           ; 2 bytes @ 0x0
   419                           
   420  0056                     adc_test_init@ref:	
   421                           ; 1 bytes @ 0x0
   422                           
   423                           
   424                           ; 1 bytes @ 0x0
   425  0056                     	ds	1
   426  0057                     ??_adc_test_init:	
   427                           
   428                           ; 0 bytes @ 0x1
   429  0057                     	ds	1
   430  0058                     ??_getAdOriginalCh14Value:	
   431  0058                     ??_getAdOriginalCh1Value:	
   432                           ; 0 bytes @ 0x2
   433                           
   434  0058                     ??_getAdOriginaCh4Value:	
   435                           ; 0 bytes @ 0x2
   436                           
   437  0058                     ??_AD_Sample:	
   438                           ; 0 bytes @ 0x2
   439                           
   440  0058                     ??_getAdOriginalValue:	
   441                           ; 0 bytes @ 0x2
   442                           
   443  0058                     adc_test_init@channel:	
   444                           ; 0 bytes @ 0x2
   445                           
   446                           
   447                           ; 1 bytes @ 0x2
   448  0058                     	ds	2
   449  005A                     AD_Sample@index:	
   450                           
   451                           ; 1 bytes @ 0x4
   452  005A                     	ds	1
   453  005B                     ??_process_AD_Converter_Value:	
   454  005B                     ??_main:	
   455                           ; 0 bytes @ 0x5
   456                           
   457                           
   458                           	psect	maintext
   459  000D                     __pmaintext:	
   460                           ; 0 bytes @ 0x5
   461 ;;Data sizes: Strings 0, constant 0, data 1, bss 59, persistent 0 stack 0
   462 ;;Auto spaces:   Size  Autos    Used
   463 ;; COMMON          14      6      11
   464 ;; BANK0           80      5      60
   465 ;; BANK1           80      0       0
   466 ;; BANK3           96      0       0
   467 ;; BANK2           96      0       0
   468 ;;
   469 ;; Pointer list with targets:
   470 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   471 ;;
   472 ;; ?_getAdOriginalCh14Value	unsigned int  size(1) Largest target is 0
   473 ;;
   474 ;; ?_getAdOriginaCh4Value	unsigned int  size(1) Largest target is 0
   475 ;;
   476 ;; ?_getAdOriginalCh1Value	unsigned int  size(1) Largest target is 0
   477 ;;
   478 ;; ?_getAdOriginalValue	unsigned int  size(1) Largest target is 0
   479 ;;
   480 ;;
   481 ;; Critical Paths under _main in COMMON
   482 ;;
   483 ;;   None.
   484 ;;
   485 ;; Critical Paths under _ISR in COMMON
   486 ;;
   487 ;;   _ISR->_adc_get
   488 ;;
   489 ;; Critical Paths under _main in BANK0
   490 ;;
   491 ;;   _process_AD_Converter_Value->_AD_Sample
   492 ;;   _AD_Sample->_getAdOriginalValue
   493 ;;
   494 ;; Critical Paths under _ISR in BANK0
   495 ;;
   496 ;;   None.
   497 ;;
   498 ;; Critical Paths under _main in BANK1
   499 ;;
   500 ;;   None.
   501 ;;
   502 ;; Critical Paths under _ISR in BANK1
   503 ;;
   504 ;;   None.
   505 ;;
   506 ;; Critical Paths under _main in BANK3
   507 ;;
   508 ;;   None.
   509 ;;
   510 ;; Critical Paths under _ISR in BANK3
   511 ;;
   512 ;;   None.
   513 ;;
   514 ;; Critical Paths under _main in BANK2
   515 ;;
   516 ;;   None.
   517 ;;
   518 ;; Critical Paths under _ISR in BANK2
   519 ;;
   520 ;;   None.
   521 ;;
   522 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   523 ;;
   524 ;;
   525 ;;Call Graph Tables:
   526 ;;
   527 ;; ---------------------------------------------------------------------------------
   528 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   529 ;; ---------------------------------------------------------------------------------
   530 ;; (0) _main                                                 0     0      0     178
   531 ;;                       _clock_config
   532 ;;                      _timer1_config
   533 ;;            _timer1_interrupt_config
   534 ;;                      _adc_test_init
   535 ;;                           _dac_init
   536 ;;                           _op1_init
   537 ;;                           _op2_init
   538 ;;                          _adc_start
   539 ;;                 _isPermitSampleTime
   540 ;;                       _clrSampeTime
   541 ;;         _process_AD_Converter_Value
   542 ;;             _getAdOriginalCh14Value
   543 ;;               _clearPinPortAndTimer
   544 ;;              _getAdOriginalCh1Value
   545 ;;               _startTwelveHourTimer
   546 ;;         _isFinishedTwelveHoursTimer
   547 ;;            _startTwentySecondsTimer
   548 ;;               _getAdOriginaCh4Value
   549 ;;       _isFinishedTwentySecondsTimer
   550 ;;               _startThreeHoursTimer
   551 ;;          _isFinishedThreeHoursTimer
   552 ;;               _clearThreeHoursTimer
   553 ;;                      _clearAllTimer
   554 ;; ---------------------------------------------------------------------------------
   555 ;; (1) _process_AD_Converter_Value                           0     0      0     134
   556 ;;                  _getAD_ConvertFlag
   557 ;;                  _setAD_ConvertFlag
   558 ;;                          _AD_Sample
   559 ;;                      _adc_test_init
   560 ;;                          _adc_start
   561 ;; ---------------------------------------------------------------------------------
   562 ;; (1) _clearPinPortAndTimer                                 0     0      0       0
   563 ;;                      _clearAllTimer
   564 ;; ---------------------------------------------------------------------------------
   565 ;; (2) _AD_Sample                                            3     3      0      68
   566 ;;                                              2 BANK0      3     3      0
   567 ;;                 _getAdOriginalValue
   568 ;; ---------------------------------------------------------------------------------
   569 ;; (1) _clearAllTimer                                        0     0      0       0
   570 ;;              _clearTwelveHoursTimer
   571 ;;               _clearThreeHoursTimer
   572 ;;            _clearTwentySecondsTimer
   573 ;; ---------------------------------------------------------------------------------
   574 ;; (3) _getAdOriginalValue                                   2     0      2       0
   575 ;;                                              0 BANK0      2     0      2
   576 ;; ---------------------------------------------------------------------------------
   577 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   578 ;;                                              0 BANK0      1     1      0
   579 ;; ---------------------------------------------------------------------------------
   580 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   581 ;; ---------------------------------------------------------------------------------
   582 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   583 ;; ---------------------------------------------------------------------------------
   584 ;; (1) _startThreeHoursTimer                                 0     0      0       0
   585 ;; ---------------------------------------------------------------------------------
   586 ;; (1) _isFinishedTwentySecondsTimer                         0     0      0       0
   587 ;; ---------------------------------------------------------------------------------
   588 ;; (1) _getAdOriginaCh4Value                                 2     0      2       0
   589 ;;                                              0 BANK0      2     0      2
   590 ;; ---------------------------------------------------------------------------------
   591 ;; (1) _startTwentySecondsTimer                              0     0      0       0
   592 ;; ---------------------------------------------------------------------------------
   593 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   594 ;; ---------------------------------------------------------------------------------
   595 ;; (1) _startTwelveHourTimer                                 0     0      0       0
   596 ;; ---------------------------------------------------------------------------------
   597 ;; (1) _getAdOriginalCh1Value                                2     0      2       0
   598 ;;                                              0 BANK0      2     0      2
   599 ;; ---------------------------------------------------------------------------------
   600 ;; (1) _getAdOriginalCh14Value                               2     0      2       0
   601 ;;                                              0 BANK0      2     0      2
   602 ;; ---------------------------------------------------------------------------------
   603 ;; (1) _clrSampeTime                                         0     0      0       0
   604 ;; ---------------------------------------------------------------------------------
   605 ;; (1) _isPermitSampleTime                                   0     0      0       0
   606 ;; ---------------------------------------------------------------------------------
   607 ;; (2) _adc_start                                            0     0      0       0
   608 ;; ---------------------------------------------------------------------------------
   609 ;; (1) _op2_init                                             0     0      0       0
   610 ;; ---------------------------------------------------------------------------------
   611 ;; (1) _op1_init                                             0     0      0       0
   612 ;; ---------------------------------------------------------------------------------
   613 ;; (1) _dac_init                                             0     0      0       0
   614 ;; ---------------------------------------------------------------------------------
   615 ;; (2) _adc_test_init                                        3     2      1      44
   616 ;;                                              0 BANK0      3     2      1
   617 ;; ---------------------------------------------------------------------------------
   618 ;; (1) _timer1_interrupt_config                              0     0      0       0
   619 ;; ---------------------------------------------------------------------------------
   620 ;; (1) _timer1_config                                        0     0      0       0
   621 ;; ---------------------------------------------------------------------------------
   622 ;; (1) _clock_config                                         0     0      0       0
   623 ;; ---------------------------------------------------------------------------------
   624 ;; (2) _clearTwentySecondsTimer                              0     0      0       0
   625 ;; ---------------------------------------------------------------------------------
   626 ;; (2) _clearThreeHoursTimer                                 0     0      0       0
   627 ;; ---------------------------------------------------------------------------------
   628 ;; (2) _clearTwelveHoursTimer                                0     0      0       0
   629 ;; ---------------------------------------------------------------------------------
   630 ;; Estimated maximum stack depth 3
   631 ;; ---------------------------------------------------------------------------------
   632 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   633 ;; ---------------------------------------------------------------------------------
   634 ;; (4) _ISR                                                  2     2      0      97
   635 ;;                                              4 COMMON     2     2      0
   636 ;;                i1_setAD_ConvertFlag
   637 ;;                            _adc_get
   638 ;; ---------------------------------------------------------------------------------
   639 ;; (5) i1_setAD_ConvertFlag                                  1     1      0      73
   640 ;;                                              0 COMMON     1     1      0
   641 ;; ---------------------------------------------------------------------------------
   642 ;; (5) _adc_get                                              4     2      2      24
   643 ;;                                              0 COMMON     4     2      2
   644 ;; ---------------------------------------------------------------------------------
   645 ;; Estimated maximum stack depth 5
   646 ;; ---------------------------------------------------------------------------------
   647 ;; Call Graph Graphs:
   648 ;; _main (ROOT)
   649 ;;   _clock_config
   650 ;;   _timer1_config
   651 ;;   _timer1_interrupt_config
   652 ;;   _adc_test_init
   653 ;;   _dac_init
   654 ;;   _op1_init
   655 ;;   _op2_init
   656 ;;   _adc_start
   657 ;;   _isPermitSampleTime
   658 ;;   _clrSampeTime
   659 ;;   _process_AD_Converter_Value
   660 ;;     _getAD_ConvertFlag
   661 ;;     _setAD_ConvertFlag
   662 ;;     _AD_Sample
   663 ;;       _getAdOriginalValue
   664 ;;     _adc_test_init
   665 ;;     _adc_start
   666 ;;   _getAdOriginalCh14Value
   667 ;;   _clearPinPortAndTimer
   668 ;;     _clearAllTimer
   669 ;;       _clearTwelveHoursTimer
   670 ;;       _clearThreeHoursTimer
   671 ;;       _clearTwentySecondsTimer
   672 ;;   _getAdOriginalCh1Value
   673 ;;   _startTwelveHourTimer
   674 ;;   _isFinishedTwelveHoursTimer
   675 ;;   _startTwentySecondsTimer
   676 ;;   _getAdOriginaCh4Value
   677 ;;   _isFinishedTwentySecondsTimer
   678 ;;   _startThreeHoursTimer
   679 ;;   _isFinishedThreeHoursTimer
   680 ;;   _clearThreeHoursTimer
   681 ;;   _clearAllTimer
   682 ;;     _clearTwelveHoursTimer
   683 ;;     _clearThreeHoursTimer
   684 ;;     _clearTwentySecondsTimer
   685 ;;
   686 ;; _ISR (ROOT)
   687 ;;   i1_setAD_ConvertFlag
   688 ;;   _adc_get
   689 ;;
   690 ;; Address spaces:
   691 ;;Name               Size   Autos  Total    Cost      Usage
   692 ;;BANK3               60      0       0      10        0.0%
   693 ;;BITBANK3            60      0       0       9        0.0%
   694 ;;SFR3                 0      0       0       4        0.0%
   695 ;;BITSFR3              0      0       0       4        0.0%
   696 ;;BANK2               60      0       0      12        0.0%
   697 ;;BITBANK2            60      0       0      11        0.0%
   698 ;;SFR2                 0      0       0       5        0.0%
   699 ;;BITSFR2              0      0       0       5        0.0%
   700 ;;SFR1                 0      0       0       2        0.0%
   701 ;;BITSFR1              0      0       0       2        0.0%
   702 ;;BANK1               50      0       0       8        0.0%
   703 ;;BITBANK1            50      0       0       7        0.0%
   704 ;;CODE                 0      0       0       0        0.0%
   705 ;;DATA                 0      0      4E       6        0.0%
   706 ;;ABS                  0      0      47       3        0.0%
   707 ;;NULL                 0      0       0       0        0.0%
   708 ;;STACK                0      0       7       2        0.0%
   709 ;;BANK0               50      5      3C       5       75.0%
   710 ;;BITBANK0            50      0       0       4        0.0%
   711 ;;SFR0                 0      0       0       1        0.0%
   712 ;;BITSFR0              0      0       0       1        0.0%
   713 ;;COMMON               E      6       B       1       78.6%
   714 ;;BITCOMMON            E      0       0       0        0.0%
   715                           
   716                           
   717 ;; *************** function _main *****************
   718 ;; Defined at:
   719 ;;		line 105 in file "C:\190604\AK7030-OTP\main.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;		None
   722 ;; Auto vars:     Size  Location     Type
   723 ;;		None
   724 ;; Return value:  Size  Location     Type
   725 ;;		None               void
   726 ;; Registers used:
   727 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   728 ;; Tracked objects:
   729 ;;		On entry : 17F/0
   730 ;;		On exit  : 60/0
   731 ;;		Unchanged: FFE00/0
   732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   733 ;;      Params:         0       0       0       0       0
   734 ;;      Locals:         0       0       0       0       0
   735 ;;      Temps:          0       0       0       0       0
   736 ;;      Totals:         0       0       0       0       0
   737 ;;Total ram usage:        0 bytes
   738 ;; Hardware stack levels required when called:    5
   739 ;; This function calls:
   740 ;;		_clock_config
   741 ;;		_timer1_config
   742 ;;		_timer1_interrupt_config
   743 ;;		_adc_test_init
   744 ;;		_dac_init
   745 ;;		_op1_init
   746 ;;		_op2_init
   747 ;;		_adc_start
   748 ;;		_isPermitSampleTime
   749 ;;		_clrSampeTime
   750 ;;		_process_AD_Converter_Value
   751 ;;		_getAdOriginalCh14Value
   752 ;;		_clearPinPortAndTimer
   753 ;;		_getAdOriginalCh1Value
   754 ;;		_startTwelveHourTimer
   755 ;;		_isFinishedTwelveHoursTimer
   756 ;;		_startTwentySecondsTimer
   757 ;;		_getAdOriginaCh4Value
   758 ;;		_isFinishedTwentySecondsTimer
   759 ;;		_startThreeHoursTimer
   760 ;;		_isFinishedThreeHoursTimer
   761 ;;		_clearThreeHoursTimer
   762 ;;		_clearAllTimer
   763 ;; This function is called by:
   764 ;;		Startup code after reset
   765 ;; This function uses a non-reentrant model
   766 ;;
   767  000D                     _main:	
   768                           
   769                           ;main.c: 106: enum setp_Adc4
   770                           ;main.c: 107: {
   771                           ;main.c: 108: ADC4_STEP_INIT = 0,
   772                           ;main.c: 109: ADC4_STEP_FIRST,
   773                           ;main.c: 110: ADC4_STEP_SECOND,
   774                           ;main.c: 111: ADC4_STEP_THIRD,
   775                           ;main.c: 112: ADC4_STEP_FOURTH,
   776                           ;main.c: 113: ADC4_STEP_FIFTH,
   777                           ;main.c: 114: ADC4_STEP_SIXTH,
   778                           ;main.c: 115: };
   779                           ;main.c: 118: static unsigned char ucWaitTime1S = 0;
   780                           ;main.c: 120: static unsigned char ucWaitTimeO3s = 0;
   781                           ;main.c: 122: static unsigned char ucSmallTimerActionFlag = 0;
   782                           ;main.c: 124: static unsigned char ucSetSmallActionFlag = 0;
   783                           
   784                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   785  000D  1683               	bsf	3,5	;RP0=1, select bank1
   786  000E  1005               	bcf	5,0
   787                           
   788                           ;main.c: 127: TRISA1 = 0;
   789  000F  1085               	bcf	5,1
   790                           
   791                           ;main.c: 128: TRISA2 = 0;
   792  0010  1105               	bcf	5,2
   793                           
   794                           ;main.c: 129: TRISA3 = 0;
   795  0011  1185               	bcf	5,3
   796                           
   797                           ;main.c: 130: TRISB0 = 0;
   798  0012  1006               	bcf	6,0
   799                           
   800                           ;main.c: 131: TRISB1 = 0;
   801  0013  1086               	bcf	6,1
   802                           
   803                           ;main.c: 132: TRISA6 = 0;
   804  0014  1305               	bcf	5,6
   805                           
   806                           ;main.c: 133: TRISA7 = 0;
   807  0015  1385               	bcf	5,7
   808                           
   809                           ;main.c: 135: PBOD6 = 1;
   810  0016  1703               	bsf	3,6	;RP1=1, select bank3
   811  0017  1708               	bsf	8,6
   812                           
   813                           ;main.c: 137: PA0 = 0;
   814  0018  1283               	bcf	3,5	;RP0=0, select bank0
   815  0019  1303               	bcf	3,6	;RP1=0, select bank0
   816  001A  1005               	bcf	5,0
   817                           
   818                           ;main.c: 138: PA1 = 0;
   819  001B  1085               	bcf	5,1
   820                           
   821                           ;main.c: 139: PA2 = 0;
   822  001C  1105               	bcf	5,2
   823                           
   824                           ;main.c: 140: PA3 = 0;
   825  001D  1185               	bcf	5,3
   826                           
   827                           ;main.c: 141: PB0 = 0;
   828  001E  1006               	bcf	6,0
   829                           
   830                           ;main.c: 142: PB1 = 1;
   831  001F  1486               	bsf	6,1
   832                           
   833                           ;main.c: 143: PA6 = 0;
   834  0020  1305               	bcf	5,6
   835                           
   836                           ;main.c: 144: PA7 = 0;
   837  0021  1385               	bcf	5,7
   838                           
   839                           ;main.c: 146: TRISB2 = 1;
   840  0022  1683               	bsf	3,5	;RP0=1, select bank1
   841  0023  1506               	bsf	6,2
   842                           
   843                           ;main.c: 148: TRISB7 = 1;
   844  0024  1786               	bsf	6,7
   845                           
   846                           ;main.c: 149: TRISB4 = 1;
   847  0025  1606               	bsf	6,4
   848                           
   849                           ;main.c: 151: clock_config();
   850  0026  118A  2492  118A   	fcall	_clock_config
   851                           
   852                           ;main.c: 152: timer1_config();
   853  0029  118A  2478  118A   	fcall	_timer1_config
   854                           
   855                           ;main.c: 153: timer1_interrupt_config();
   856  002C  118A  24D2  118A   	fcall	_timer1_interrupt_config
   857                           
   858                           ;main.c: 155: adc_test_init(14,3);
   859  002F  3003               	movlw	3
   860  0030  1283               	bcf	3,5	;RP0=0, select bank0
   861  0031  00D6               	movwf	?_adc_test_init
   862  0032  300E               	movlw	14
   863  0033  118A  2396  118A   	fcall	_adc_test_init
   864                           
   865                           ;main.c: 157: dac_init();
   866  0036  118A  24C9  118A   	fcall	_dac_init
   867                           
   868                           ;main.c: 158: op1_init();
   869  0039  118A  246D  118A   	fcall	_op1_init
   870                           
   871                           ;main.c: 159: op2_init();
   872  003C  118A  248A  118A   	fcall	_op2_init
   873                           
   874                           ;main.c: 162: adc_start();
   875  003F  118A  23AB  118A   	fcall	_adc_start
   876  0042                     l3945:	
   877  0042  0064               	clrwdt	;#
   878                           
   879                           ;main.c: 197: if(isPermitSampleTime())
   880  0043  118A  24C4  118A   	fcall	_isPermitSampleTime
   881  0046  3A00               	xorlw	0
   882  0047  1903               	skipnz
   883  0048  2842               	goto	l3945
   884                           
   885                           ;main.c: 198: {
   886                           ;main.c: 199: clrSampeTime();
   887  0049  118A  24D5  118A   	fcall	_clrSampeTime
   888                           
   889                           ;main.c: 200: process_AD_Converter_Value();
   890  004C  118A  230A  118A   	fcall	_process_AD_Converter_Value
   891                           
   892                           ;main.c: 202: switch(enumMainLoopStep)
   893  004F  2AEC               	goto	l4439
   894  0050                     l3953:	
   895                           
   896                           ;main.c: 205: {
   897                           ;main.c: 206: static unsigned char ucTimerZeroPoint5s = 0;
   898                           ;main.c: 207: if(getAdOriginalCh14Value() > 1950)
   899  0050  118A  24BF  118A   	fcall	_getAdOriginalCh14Value
   900  0053  3007               	movlw	7
   901  0054  0257               	subwf	?_getAdOriginalCh14Value+1,w
   902  0055  309F               	movlw	159
   903  0056  1903               	skipnz
   904  0057  0256               	subwf	?_getAdOriginalCh14Value,w
   905  0058  1C03               	skipc
   906  0059  285C               	goto	l3957
   907                           
   908                           ;main.c: 208: {
   909                           ;main.c: 209: ucTimerZeroPoint5s++;
   910  005A  0AD5               	incf	main@ucTimerZeroPoint5s,f
   911                           
   912                           ;main.c: 210: }
   913  005B  285D               	goto	l3959
   914  005C                     l3957:	
   915                           
   916                           ;main.c: 211: else
   917                           ;main.c: 212: ucTimerZeroPoint5s = 0;
   918  005C  01D5               	clrf	main@ucTimerZeroPoint5s
   919  005D                     l3959:	
   920                           
   921                           ;main.c: 214: if(ucTimerZeroPoint5s >= 5)
   922  005D  3005               	movlw	5
   923  005E  0255               	subwf	main@ucTimerZeroPoint5s,w
   924  005F  1C03               	skipc
   925  0060  2842               	goto	l3945
   926                           
   927                           ;main.c: 215: {
   928                           ;main.c: 216: ucTimerZeroPoint5s = 0;
   929  0061  01D5               	clrf	main@ucTimerZeroPoint5s
   930  0062                     l3963:	
   931                           
   932                           ;main.c: 217: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
   933  0062  01C0               	clrf	main@enumMainLoopStep
   934  0063  0AC0               	incf	main@enumMainLoopStep,f
   935  0064                     l703:	
   936                           
   937                           ;main.c: 218: }
   938                           ;main.c: 219: break;
   939  0064  2842               	goto	l3945
   940  0065                     l3965:	
   941                           
   942                           ;main.c: 223: {
   943                           ;main.c: 224: static unsigned char ucTimerZeroPoint3s = 0;
   944                           ;main.c: 226: if(ucTimerZeroPoint3s < 3)
   945  0065  3003               	movlw	3
   946  0066  0254               	subwf	main@ucTimerZeroPoint3s,w
   947  0067  1803               	skipnc
   948  0068  286B               	goto	l3969
   949                           
   950                           ;main.c: 227: {
   951                           ;main.c: 228: ucTimerZeroPoint3s++;
   952  0069  0AD4               	incf	main@ucTimerZeroPoint3s,f
   953                           
   954                           ;main.c: 229: }
   955  006A  2842               	goto	l3945
   956  006B                     l3969:	
   957                           
   958                           ;main.c: 230: else
   959                           ;main.c: 231: {
   960                           ;main.c: 232: ucTimerZeroPoint3s = 0;
   961  006B  01D4               	clrf	main@ucTimerZeroPoint3s
   962                           
   963                           ;main.c: 234: if(getAdOriginalCh14Value() > 1950)
   964  006C  118A  24BF  118A   	fcall	_getAdOriginalCh14Value
   965  006F  3007               	movlw	7
   966  0070  0257               	subwf	?_getAdOriginalCh14Value+1,w
   967  0071  309F               	movlw	159
   968  0072  1903               	skipnz
   969  0073  0256               	subwf	?_getAdOriginalCh14Value,w
   970  0074  1C03               	skipc
   971  0075  2878               	goto	l3975
   972  0076                     l3973:	
   973                           
   974                           ;main.c: 235: {
   975                           ;main.c: 237: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
   976  0076  3002               	movlw	2
   977  0077  28B1               	goto	L5
   978  0078                     l3975:	
   979                           ;main.c: 238: }
   980                           
   981                           
   982                           ;main.c: 239: else
   983                           ;main.c: 240: {
   984                           ;main.c: 241: clearPinPortAndTimer();
   985  0078  118A  2420  118A   	fcall	_clearPinPortAndTimer
   986  007B  2842               	goto	l3945
   987  007C                     l712:	
   988                           ;main.c: 245: }
   989                           ;main.c: 247: case MAIN_LOOP_STEP_SECOND:
   990                           
   991  007C  3003               	movlw	3
   992                           
   993                           ;main.c: 248: {
   994                           ;main.c: 250: PA6 = 1;
   995  007D  1705               	bsf	5,6
   996                           
   997                           ;main.c: 251: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
   998  007E  28B1               	goto	L5
   999  007F                     l3979:	
  1000                           ;main.c: 253: break;
  1001                           
  1002                           
  1003                           ;main.c: 257: {
  1004                           ;main.c: 258: static unsigned char ucTimerADC1ZeroP5s = 0;
  1005                           ;main.c: 260: if(getAdOriginalCh1Value() < 130)
  1006  007F  118A  24BA  118A   	fcall	_getAdOriginalCh1Value
  1007  0082  3000               	movlw	0
  1008  0083  0257               	subwf	?_getAdOriginalCh1Value+1,w
  1009  0084  3082               	movlw	130
  1010  0085  1903               	skipnz
  1011  0086  0256               	subwf	?_getAdOriginalCh1Value,w
  1012  0087  1803               	skipnc
  1013  0088  288B               	goto	l3983
  1014                           
  1015                           ;main.c: 261: {
  1016                           ;main.c: 262: ucTimerADC1ZeroP5s = 0;
  1017  0089  01CA               	clrf	main@ucTimerADC1ZeroP5s
  1018                           
  1019                           ;main.c: 264: }
  1020  008A  288C               	goto	l3985
  1021  008B                     l3983:	
  1022                           
  1023                           ;main.c: 265: else
  1024                           ;main.c: 266: {
  1025                           ;main.c: 267: ucTimerADC1ZeroP5s++;
  1026  008B  0ACA               	incf	main@ucTimerADC1ZeroP5s,f
  1027  008C                     l3985:	
  1028                           
  1029                           ;main.c: 268: }
  1030                           ;main.c: 270: if(ucTimerADC1ZeroP5s >= 1)
  1031  008C  084A               	movf	main@ucTimerADC1ZeroP5s,w
  1032  008D  1903               	btfsc	3,2
  1033  008E  2892               	goto	l3991
  1034  008F  3004               	movlw	4
  1035                           
  1036                           ;main.c: 271: {
  1037                           ;main.c: 272: ucTimerADC1ZeroP5s = 0;
  1038  0090  01CA               	clrf	main@ucTimerADC1ZeroP5s
  1039                           
  1040                           ;main.c: 273: enumMainLoopStep = MAIN_LOOP_STEP_FOURTH;
  1041  0091  28B1               	goto	L5
  1042  0092                     l3991:	
  1043                           ;main.c: 274: }
  1044                           
  1045                           
  1046                           ;main.c: 275: else
  1047                           ;main.c: 276: {
  1048                           ;main.c: 277: static unsigned char ucTimerRightP5s = 0;
  1049                           ;main.c: 279: if(getAdOriginalCh1Value() < 117)
  1050  0092  118A  24BA  118A   	fcall	_getAdOriginalCh1Value
  1051  0095  3000               	movlw	0
  1052  0096  0257               	subwf	?_getAdOriginalCh1Value+1,w
  1053  0097  3075               	movlw	117
  1054  0098  1903               	skipnz
  1055  0099  0256               	subwf	?_getAdOriginalCh1Value,w
  1056  009A  1803               	skipnc
  1057  009B  289E               	goto	l3995
  1058                           
  1059                           ;main.c: 280: {
  1060                           ;main.c: 281: ucTimerRightP5s++;
  1061  009C  0AD1               	incf	main@ucTimerRightP5s,f
  1062                           
  1063                           ;main.c: 282: }
  1064  009D  289F               	goto	l3997
  1065  009E                     l3995:	
  1066                           
  1067                           ;main.c: 283: else
  1068                           ;main.c: 284: {
  1069                           ;main.c: 285: ucTimerRightP5s = 0;
  1070  009E  01D1               	clrf	main@ucTimerRightP5s
  1071  009F                     l3997:	
  1072                           
  1073                           ;main.c: 286: }
  1074                           ;main.c: 288: if(ucTimerRightP5s >= 1)
  1075  009F  0851               	movf	main@ucTimerRightP5s,w
  1076  00A0  1903               	btfsc	3,2
  1077  00A1  2842               	goto	l3945
  1078  00A2  3008               	movlw	8
  1079                           
  1080                           ;main.c: 289: {
  1081                           ;main.c: 290: ucTimerRightP5s = 0;
  1082  00A3  01D1               	clrf	main@ucTimerRightP5s
  1083                           
  1084                           ;main.c: 291: enumMainLoopStep = MAIN_LOOP_STEP_3_HOUR_BRANCH;
  1085  00A4  28B1               	goto	L5
  1086  00A5                     l4003:	
  1087                           ;main.c: 292: }
  1088                           
  1089                           
  1090                           ;main.c: 303: {
  1091                           ;main.c: 305: startTwelveHourTimer();
  1092  00A5  118A  24B5  118A   	fcall	_startTwelveHourTimer
  1093                           
  1094                           ;main.c: 306: enumMainLoopStep = MAIN_LOOP_STEP_FIFTH;
  1095  00A8  3005               	movlw	5
  1096  00A9  28B1               	goto	L5
  1097  00AA                     l4007:	
  1098                           ;main.c: 308: break;
  1099                           
  1100                           
  1101                           ;main.c: 312: {
  1102                           ;main.c: 314: if(isFinishedTwelveHoursTimer())
  1103  00AA  118A  24B0  118A   	fcall	_isFinishedTwelveHoursTimer
  1104  00AD  3A00               	xorlw	0
  1105  00AE  1903               	skipnz
  1106  00AF  2A31               	goto	l4319
  1107  00B0                     l4009:	
  1108                           
  1109                           ;main.c: 315: {
  1110                           ;main.c: 316: enumMainLoopStep = MAIN_LOOP_STEP_12_HOUR_END;
  1111  00B0  3009               	movlw	9
  1112  00B1                     L5:	
  1113  00B1  00C0               	movwf	main@enumMainLoopStep
  1114                           
  1115                           ;main.c: 317: }
  1116  00B2  2842               	goto	l3945
  1117  00B3                     l4011:	
  1118                           
  1119                           ;main.c: 325: {
  1120                           ;main.c: 326: startTwentySecondsTimer();
  1121  00B3  118A  24CE  118A   	fcall	_startTwentySecondsTimer
  1122  00B6                     l4013:	
  1123                           
  1124                           ;main.c: 327: ucADC4_Step = ADC4_STEP_FIRST;
  1125  00B6  01C1               	clrf	main@ucADC4_Step
  1126  00B7  0AC1               	incf	main@ucADC4_Step,f
  1127                           
  1128                           ;main.c: 328: break;
  1129  00B8  2842               	goto	l3945
  1130  00B9                     l4015:	
  1131                           
  1132                           ;main.c: 332: {
  1133                           ;main.c: 333: if(getAdOriginaCh4Value() < 1911)
  1134  00B9  118A  24AB  118A   	fcall	_getAdOriginaCh4Value
  1135  00BC  3007               	movlw	7
  1136  00BD  0257               	subwf	?_getAdOriginaCh4Value+1,w
  1137  00BE  3077               	movlw	119
  1138  00BF  1903               	skipnz
  1139  00C0  0256               	subwf	?_getAdOriginaCh4Value,w
  1140  00C1  1803               	skipnc
  1141  00C2  28C5               	goto	l4019
  1142                           
  1143                           ;main.c: 334: ucChannel4Type = LESS_THAN_1911;
  1144  00C3  01C2               	clrf	main@ucChannel4Type
  1145  00C4  28EC               	goto	l737
  1146  00C5                     l4019:	
  1147                           
  1148                           ;main.c: 335: else if(getAdOriginaCh4Value() < 2067)
  1149  00C5  118A  24AB  118A   	fcall	_getAdOriginaCh4Value
  1150  00C8  3008               	movlw	8
  1151  00C9  0257               	subwf	?_getAdOriginaCh4Value+1,w
  1152  00CA  3013               	movlw	19
  1153  00CB  1903               	skipnz
  1154  00CC  0256               	subwf	?_getAdOriginaCh4Value,w
  1155  00CD  1803               	skipnc
  1156  00CE  28D2               	goto	l4023
  1157                           
  1158                           ;main.c: 336: ucChannel4Type = BETWEEN_1911_AND_2067;
  1159  00CF  01C2               	clrf	main@ucChannel4Type
  1160  00D0  0AC2               	incf	main@ucChannel4Type,f
  1161  00D1  28EC               	goto	l737
  1162  00D2                     l4023:	
  1163                           
  1164                           ;main.c: 337: else if(getAdOriginaCh4Value() < 2204)
  1165  00D2  118A  24AB  118A   	fcall	_getAdOriginaCh4Value
  1166  00D5  3008               	movlw	8
  1167  00D6  0257               	subwf	?_getAdOriginaCh4Value+1,w
  1168  00D7  309C               	movlw	156
  1169  00D8  1903               	skipnz
  1170  00D9  0256               	subwf	?_getAdOriginaCh4Value,w
  1171  00DA  1803               	skipnc
  1172  00DB  28DE               	goto	l4027
  1173                           
  1174                           ;main.c: 338: ucChannel4Type = BETWEEN_2067_AND_2204;
  1175  00DC  3002               	movlw	2
  1176  00DD  28EB               	goto	L6
  1177  00DE                     l4027:	
  1178                           
  1179                           ;main.c: 339: else if(getAdOriginaCh4Value() < 2340)
  1180  00DE  118A  24AB  118A   	fcall	_getAdOriginaCh4Value
  1181  00E1  3009               	movlw	9
  1182  00E2  0257               	subwf	?_getAdOriginaCh4Value+1,w
  1183  00E3  3024               	movlw	36
  1184  00E4  1903               	skipnz
  1185  00E5  0256               	subwf	?_getAdOriginaCh4Value,w
  1186  00E6  1803               	skipnc
  1187  00E7  28EA               	goto	l4031
  1188                           
  1189                           ;main.c: 340: ucChannel4Type = BETWEEN_2204_AND_2340;
  1190  00E8  3003               	movlw	3
  1191  00E9  28EB               	goto	L6
  1192  00EA                     l4031:	
  1193                           
  1194                           ;main.c: 341: else
  1195                           ;main.c: 342: ucChannel4Type = MORE_THAN_2340;
  1196  00EA  3004               	movlw	4
  1197  00EB                     L6:	
  1198  00EB  00C2               	movwf	main@ucChannel4Type
  1199  00EC                     l737:	
  1200                           
  1201                           ;main.c: 344: ucADC4_Step = ADC4_STEP_SECOND;
  1202  00EC  3002               	movlw	2
  1203  00ED  2A1F               	goto	L8
  1204  00EE                     l752:	
  1205                           ;main.c: 359: {
  1206                           ;main.c: 360: case 0:
  1207                           
  1208                           ;main.c: 345: break;
  1209                           
  1210                           
  1211                           ;main.c: 361: {
  1212                           ;main.c: 362: PB0 = 1;
  1213  00EE  1406               	bsf	6,0
  1214  00EF                     l4033:	
  1215                           
  1216                           ;main.c: 363: ucLoaderStep++;
  1217  00EF  0AC3               	incf	main@ucLoaderStep,f
  1218                           
  1219                           ;main.c: 364: break;
  1220  00F0  2842               	goto	l3945
  1221  00F1                     l4035:	
  1222                           
  1223                           ;main.c: 368: {
  1224                           ;main.c: 369: if(ucTimerDelay >= 5)
  1225  00F1  3005               	movlw	5
  1226  00F2  024B               	subwf	main@ucTimerDelay,w
  1227  00F3  1C03               	skipc
  1228  00F4  28F8               	goto	l4043
  1229                           
  1230                           ;main.c: 370: {
  1231                           ;main.c: 371: PA0 = 1;
  1232  00F5  1405               	bsf	5,0
  1233  00F6                     l4039:	
  1234                           
  1235                           ;main.c: 372: ucTimerDelay = 0;
  1236  00F6  01CB               	clrf	main@ucTimerDelay
  1237  00F7  28EF               	goto	l4033
  1238  00F8                     l4043:	
  1239                           
  1240                           ;main.c: 375: else
  1241                           ;main.c: 376: ucTimerDelay++;
  1242  00F8  0ACB               	incf	main@ucTimerDelay,f
  1243  00F9  2842               	goto	l3945
  1244  00FA                     l4045:	
  1245                           
  1246                           ;main.c: 381: {
  1247                           ;main.c: 382: if(ucTimerDelay >= 5)
  1248  00FA  3005               	movlw	5
  1249  00FB  024B               	subwf	main@ucTimerDelay,w
  1250  00FC  1C03               	skipc
  1251  00FD  28F8               	goto	l4043
  1252                           
  1253                           ;main.c: 383: {
  1254                           ;main.c: 384: PA1= 1;
  1255  00FE  1485               	bsf	5,1
  1256  00FF  28F6               	goto	l4039
  1257  0100                     l4055:	
  1258                           
  1259                           ;main.c: 395: {
  1260                           ;main.c: 396: if(ucTimerDelay >= 5)
  1261  0100  3005               	movlw	5
  1262  0101  024B               	subwf	main@ucTimerDelay,w
  1263  0102  1C03               	skipc
  1264  0103  28F8               	goto	l4043
  1265                           
  1266                           ;main.c: 397: {
  1267                           ;main.c: 398: PA2= 1;
  1268  0104  1505               	bsf	5,2
  1269  0105  28F6               	goto	l4039
  1270  0106                     l4065:	
  1271                           
  1272                           ;main.c: 408: {
  1273                           ;main.c: 409: if(ucTimerDelay >= 5)
  1274  0106  3005               	movlw	5
  1275  0107  024B               	subwf	main@ucTimerDelay,w
  1276  0108  1C03               	skipc
  1277  0109  28F8               	goto	l4043
  1278                           
  1279                           ;main.c: 410: {
  1280                           ;main.c: 411: PA3 = 1;
  1281  010A  1585               	bsf	5,3
  1282  010B  28F6               	goto	l4039
  1283  010C                     l4075:	
  1284                           
  1285                           ;main.c: 421: {
  1286                           ;main.c: 422: if(ucTimerDelay >= 5)
  1287  010C  3005               	movlw	5
  1288  010D  024B               	subwf	main@ucTimerDelay,w
  1289  010E  1C03               	skipc
  1290  010F  28F8               	goto	l4043
  1291                           
  1292                           ;main.c: 423: {
  1293                           ;main.c: 424: PB2 = 0;
  1294  0110  1106               	bcf	6,2
  1295                           
  1296                           ;main.c: 425: PA0 = 0;
  1297  0111  1005               	bcf	5,0
  1298                           
  1299                           ;main.c: 426: PA1 = 0;
  1300  0112  1085               	bcf	5,1
  1301                           
  1302                           ;main.c: 427: PA2 = 0;
  1303  0113  1105               	bcf	5,2
  1304                           
  1305                           ;main.c: 428: PA3 = 0;
  1306  0114  1185               	bcf	5,3
  1307  0115  28F6               	goto	l4039
  1308  0116                     l4085:	
  1309                           
  1310                           ;main.c: 438: {
  1311                           ;main.c: 439: if(ucTimerDelay >= 2)
  1312  0116  3002               	movlw	2
  1313  0117  024B               	subwf	main@ucTimerDelay,w
  1314  0118  1C03               	skipc
  1315  0119  28F8               	goto	l4043
  1316                           
  1317                           ;main.c: 440: {
  1318                           ;main.c: 441: ucTimerDelay = 0;
  1319  011A  01CB               	clrf	main@ucTimerDelay
  1320                           
  1321                           ;main.c: 443: ucLoaderStep = 0;
  1322  011B  01C3               	clrf	main@ucLoaderStep
  1323  011C                     l4089:	
  1324                           
  1325                           ;main.c: 444: ucADC4_Step = ADC4_STEP_THIRD;
  1326  011C  3003               	movlw	3
  1327  011D  2A1F               	goto	L8
  1328  011E                     l4095:	
  1329                           ;main.c: 445: }
  1330                           
  1331  011E  0843               	movf	main@ucLoaderStep,w
  1332                           
  1333                           ; Switch size 1, requested type "space"
  1334                           ; Number of cases is 7, Range of values is 0 to 6
  1335                           ; switch strategies available:
  1336                           ; Name         Instructions Cycles
  1337                           ; direct_byte           21     7 (fixed)
  1338                           ; simple_byte           22    12 (average)
  1339                           ; jumptable            260     6 (fixed)
  1340                           ; rangetable            11     6 (fixed)
  1341                           ; spacedrange           20     9 (fixed)
  1342                           ; locatedrange           7     3 (fixed)
  1343                           ;	Chosen strategy is direct_byte
  1344  011F  0084               	movwf	4
  1345  0120  3007               	movlw	7
  1346  0121  0204               	subwf	4,w
  1347  0122  1803               	skipnc
  1348  0123  2842               	goto	l3945
  1349  0124  3004               	movlw	high S4657
  1350  0125  008A               	movwf	10
  1351  0126  1003               	clrc
  1352  0127  0D04               	rlf	4,w
  1353  0128  3E45               	addlw	low S4657
  1354  0129  0082               	movwf	2
  1355  012A                     l780:	
  1356                           ;main.c: 464: {
  1357                           ;main.c: 465: case 0:
  1358                           
  1359                           
  1360                           ;main.c: 466: {
  1361                           ;main.c: 467: PB0 = 1;
  1362  012A  1406               	bsf	6,0
  1363  012B                     l4097:	
  1364                           
  1365                           ;main.c: 468: ucLoaderStep1++;
  1366  012B  0AC4               	incf	main@ucLoaderStep1,f
  1367                           
  1368                           ;main.c: 469: break;
  1369  012C  2842               	goto	l3945
  1370  012D                     l4099:	
  1371                           
  1372                           ;main.c: 473: {
  1373                           ;main.c: 474: if(ucTimerDelay1 >= 5)
  1374  012D  3005               	movlw	5
  1375  012E  024C               	subwf	main@ucTimerDelay1,w
  1376  012F  1C03               	skipc
  1377  0130  2934               	goto	l4107
  1378                           
  1379                           ;main.c: 475: {
  1380                           ;main.c: 476: PA0 = 1;
  1381  0131  1405               	bsf	5,0
  1382  0132                     l4103:	
  1383                           
  1384                           ;main.c: 477: ucTimerDelay1 = 0;
  1385  0132  01CC               	clrf	main@ucTimerDelay1
  1386  0133  292B               	goto	l4097
  1387  0134                     l4107:	
  1388                           
  1389                           ;main.c: 480: else
  1390                           ;main.c: 481: ucTimerDelay1++;
  1391  0134  0ACC               	incf	main@ucTimerDelay1,f
  1392  0135  2842               	goto	l3945
  1393  0136                     l4109:	
  1394                           
  1395                           ;main.c: 486: {
  1396                           ;main.c: 487: if(ucTimerDelay1 >= 5)
  1397  0136  3005               	movlw	5
  1398  0137  024C               	subwf	main@ucTimerDelay1,w
  1399  0138  1C03               	skipc
  1400  0139  2934               	goto	l4107
  1401                           
  1402                           ;main.c: 488: {
  1403                           ;main.c: 489: PA1= 1;
  1404  013A  1485               	bsf	5,1
  1405  013B  2932               	goto	l4103
  1406  013C                     l4119:	
  1407                           
  1408                           ;main.c: 499: {
  1409                           ;main.c: 500: if(ucTimerDelay1 >= 5)
  1410  013C  3005               	movlw	5
  1411  013D  024C               	subwf	main@ucTimerDelay1,w
  1412  013E  1C03               	skipc
  1413  013F  2934               	goto	l4107
  1414                           
  1415                           ;main.c: 501: {
  1416                           ;main.c: 502: PA2 = 1;
  1417  0140  1505               	bsf	5,2
  1418  0141  2932               	goto	l4103
  1419  0142                     l4129:	
  1420                           
  1421                           ;main.c: 512: {
  1422                           ;main.c: 513: if(ucTimerDelay1 >= 5)
  1423  0142  3005               	movlw	5
  1424  0143  024C               	subwf	main@ucTimerDelay1,w
  1425  0144  1C03               	skipc
  1426  0145  2934               	goto	l4107
  1427                           
  1428                           ;main.c: 514: {
  1429                           ;main.c: 515: PA3 = 1;
  1430  0146  1585               	bsf	5,3
  1431  0147  2932               	goto	l4103
  1432  0148                     l4139:	
  1433                           
  1434                           ;main.c: 525: {
  1435                           ;main.c: 526: if(ucTimerDelay1 >= 5)
  1436  0148  3005               	movlw	5
  1437  0149  024C               	subwf	main@ucTimerDelay1,w
  1438  014A  1C03               	skipc
  1439  014B  2934               	goto	l4107
  1440                           
  1441                           ;main.c: 527: {
  1442                           ;main.c: 528: PA0 = 0;
  1443  014C  1005               	bcf	5,0
  1444                           
  1445                           ;main.c: 529: PA1 = 0;
  1446  014D  1085               	bcf	5,1
  1447                           
  1448                           ;main.c: 530: PA2 = 0;
  1449  014E  1105               	bcf	5,2
  1450                           
  1451                           ;main.c: 531: PA3 = 0;
  1452  014F  1185               	bcf	5,3
  1453  0150  2932               	goto	l4103
  1454  0151                     l4149:	
  1455                           
  1456                           ;main.c: 541: {
  1457                           ;main.c: 542: if(ucTimerDelay1 >= 2)
  1458  0151  3002               	movlw	2
  1459  0152  024C               	subwf	main@ucTimerDelay1,w
  1460  0153  1C03               	skipc
  1461  0154  2934               	goto	l4107
  1462                           
  1463                           ;main.c: 543: {
  1464                           ;main.c: 544: ucTimerDelay1 = 0;
  1465  0155  01CC               	clrf	main@ucTimerDelay1
  1466                           
  1467                           ;main.c: 546: ucLoaderStep1 = 0;
  1468  0156  01C4               	clrf	main@ucLoaderStep1
  1469  0157  291C               	goto	l4089
  1470  0158                     l4159:	
  1471  0158  0844               	movf	main@ucLoaderStep1,w
  1472                           
  1473                           ; Switch size 1, requested type "space"
  1474                           ; Number of cases is 7, Range of values is 0 to 6
  1475                           ; switch strategies available:
  1476                           ; Name         Instructions Cycles
  1477                           ; direct_byte           21     7 (fixed)
  1478                           ; simple_byte           22    12 (average)
  1479                           ; jumptable            260     6 (fixed)
  1480                           ; rangetable            11     6 (fixed)
  1481                           ; spacedrange           20     9 (fixed)
  1482                           ; locatedrange           7     3 (fixed)
  1483                           ;	Chosen strategy is direct_byte
  1484  0159  0084               	movwf	4
  1485  015A  3007               	movlw	7
  1486  015B  0204               	subwf	4,w
  1487  015C  1803               	skipnc
  1488  015D  2842               	goto	l3945
  1489  015E  3004               	movlw	high S4659
  1490  015F  008A               	movwf	10
  1491  0160  1003               	clrc
  1492  0161  0D04               	rlf	4,w
  1493  0162  3E53               	addlw	low S4659
  1494  0163  0082               	movwf	2
  1495  0164                     l807:	
  1496                           ;main.c: 568: {
  1497                           ;main.c: 569: case 0:
  1498                           
  1499                           
  1500                           ;main.c: 570: {
  1501                           ;main.c: 571: PB0 = 1;
  1502  0164  1406               	bsf	6,0
  1503                           
  1504                           ;main.c: 572: PA0 = 1;
  1505  0165  1405               	bsf	5,0
  1506  0166                     l4161:	
  1507                           
  1508                           ;main.c: 573: ucLoaderStep2++;
  1509  0166  0AC5               	incf	main@ucLoaderStep2,f
  1510                           
  1511                           ;main.c: 574: break;
  1512  0167  2842               	goto	l3945
  1513  0168                     l4163:	
  1514                           
  1515                           ;main.c: 578: {
  1516                           ;main.c: 579: if(ucTimerDelay2 >= 5)
  1517  0168  3005               	movlw	5
  1518  0169  024D               	subwf	main@ucTimerDelay2,w
  1519  016A  1C03               	skipc
  1520  016B  296F               	goto	l4171
  1521                           
  1522                           ;main.c: 580: {
  1523                           ;main.c: 581: PA1 = 1;
  1524  016C  1485               	bsf	5,1
  1525  016D                     l4167:	
  1526                           
  1527                           ;main.c: 582: ucTimerDelay2 = 0;
  1528  016D  01CD               	clrf	main@ucTimerDelay2
  1529  016E  2966               	goto	l4161
  1530  016F                     l4171:	
  1531                           
  1532                           ;main.c: 585: else
  1533                           ;main.c: 586: ucTimerDelay2++;
  1534  016F  0ACD               	incf	main@ucTimerDelay2,f
  1535  0170  2842               	goto	l3945
  1536  0171                     l4173:	
  1537                           
  1538                           ;main.c: 591: {
  1539                           ;main.c: 592: if(ucTimerDelay2 >= 5)
  1540  0171  3005               	movlw	5
  1541  0172  024D               	subwf	main@ucTimerDelay2,w
  1542  0173  1C03               	skipc
  1543  0174  296F               	goto	l4171
  1544                           
  1545                           ;main.c: 593: {
  1546                           ;main.c: 594: PA2 = 1;
  1547  0175  1505               	bsf	5,2
  1548  0176  296D               	goto	l4167
  1549  0177                     l4183:	
  1550                           
  1551                           ;main.c: 604: {
  1552                           ;main.c: 605: if(ucTimerDelay2 >= 5)
  1553  0177  3005               	movlw	5
  1554  0178  024D               	subwf	main@ucTimerDelay2,w
  1555  0179  1C03               	skipc
  1556  017A  296F               	goto	l4171
  1557                           
  1558                           ;main.c: 606: {
  1559                           ;main.c: 607: PA3 = 1;
  1560  017B  1585               	bsf	5,3
  1561  017C  296D               	goto	l4167
  1562  017D                     l4193:	
  1563                           
  1564                           ;main.c: 617: {
  1565                           ;main.c: 618: if(ucTimerDelay2 >= 5)
  1566  017D  3005               	movlw	5
  1567  017E  024D               	subwf	main@ucTimerDelay2,w
  1568  017F  1C03               	skipc
  1569  0180  296F               	goto	l4171
  1570                           
  1571                           ;main.c: 619: {
  1572                           ;main.c: 621: PA1 = 0;
  1573  0181  1085               	bcf	5,1
  1574                           
  1575                           ;main.c: 622: PA2 = 0;
  1576  0182  1105               	bcf	5,2
  1577                           
  1578                           ;main.c: 623: PA3 = 0;
  1579  0183  1185               	bcf	5,3
  1580  0184  296D               	goto	l4167
  1581  0185                     l4203:	
  1582                           
  1583                           ;main.c: 633: {
  1584                           ;main.c: 634: if(ucTimerDelay2 >= 2)
  1585  0185  3002               	movlw	2
  1586  0186  024D               	subwf	main@ucTimerDelay2,w
  1587  0187  1C03               	skipc
  1588  0188  296F               	goto	l4171
  1589                           
  1590                           ;main.c: 635: {
  1591                           ;main.c: 636: ucTimerDelay2 = 0;
  1592  0189  01CD               	clrf	main@ucTimerDelay2
  1593                           
  1594                           ;main.c: 638: ucLoaderStep2 = 0;
  1595  018A  01C5               	clrf	main@ucLoaderStep2
  1596  018B  291C               	goto	l4089
  1597  018C                     l4213:	
  1598  018C  0845               	movf	main@ucLoaderStep2,w
  1599                           
  1600                           ; Switch size 1, requested type "space"
  1601                           ; Number of cases is 6, Range of values is 0 to 5
  1602                           ; switch strategies available:
  1603                           ; Name         Instructions Cycles
  1604                           ; direct_byte           19     7 (fixed)
  1605                           ; simple_byte           19    10 (average)
  1606                           ; jumptable            260     6 (fixed)
  1607                           ; rangetable            10     6 (fixed)
  1608                           ; spacedrange           18     9 (fixed)
  1609                           ; locatedrange           6     3 (fixed)
  1610                           ;	Chosen strategy is direct_byte
  1611  018D  0084               	movwf	4
  1612  018E  3006               	movlw	6
  1613  018F  0204               	subwf	4,w
  1614  0190  1803               	skipnc
  1615  0191  2842               	goto	l3945
  1616  0192  3004               	movlw	high S4661
  1617  0193  008A               	movwf	10
  1618  0194  1003               	clrc
  1619  0195  0D04               	rlf	4,w
  1620  0196  3E61               	addlw	low S4661
  1621  0197  0082               	movwf	2
  1622  0198                     l831:	
  1623                           ;main.c: 660: {
  1624                           ;main.c: 661: case 0:
  1625                           
  1626                           
  1627                           ;main.c: 662: {
  1628                           ;main.c: 663: PB0 = 1;
  1629  0198  1406               	bsf	6,0
  1630                           
  1631                           ;main.c: 664: PA0 = 1;
  1632  0199  1405               	bsf	5,0
  1633                           
  1634                           ;main.c: 665: PA1 = 1;
  1635  019A  1485               	bsf	5,1
  1636  019B                     l4215:	
  1637                           
  1638                           ;main.c: 666: ucLoaderStep3++;
  1639  019B  0AC6               	incf	main@ucLoaderStep3,f
  1640                           
  1641                           ;main.c: 667: break;
  1642  019C  2842               	goto	l3945
  1643  019D                     l4217:	
  1644                           
  1645                           ;main.c: 671: {
  1646                           ;main.c: 672: if(ucTimerDelay3 >= 5)
  1647  019D  3005               	movlw	5
  1648  019E  024E               	subwf	main@ucTimerDelay3,w
  1649  019F  1C03               	skipc
  1650  01A0  29A4               	goto	l4225
  1651                           
  1652                           ;main.c: 673: {
  1653                           ;main.c: 674: PA2 = 1;
  1654  01A1  1505               	bsf	5,2
  1655  01A2                     l4221:	
  1656                           
  1657                           ;main.c: 675: ucTimerDelay3 = 0;
  1658  01A2  01CE               	clrf	main@ucTimerDelay3
  1659  01A3  299B               	goto	l4215
  1660  01A4                     l4225:	
  1661                           
  1662                           ;main.c: 678: else
  1663                           ;main.c: 679: ucTimerDelay3++;
  1664  01A4  0ACE               	incf	main@ucTimerDelay3,f
  1665  01A5  2842               	goto	l3945
  1666  01A6                     l4227:	
  1667                           
  1668                           ;main.c: 684: {
  1669                           ;main.c: 685: if(ucTimerDelay3 >= 5)
  1670  01A6  3005               	movlw	5
  1671  01A7  024E               	subwf	main@ucTimerDelay3,w
  1672  01A8  1C03               	skipc
  1673  01A9  29A4               	goto	l4225
  1674                           
  1675                           ;main.c: 686: {
  1676                           ;main.c: 687: PA3 = 1;
  1677  01AA  1585               	bsf	5,3
  1678  01AB  29A2               	goto	l4221
  1679  01AC                     l4237:	
  1680                           
  1681                           ;main.c: 698: {
  1682                           ;main.c: 699: if(ucTimerDelay3 >= 5)
  1683  01AC  3005               	movlw	5
  1684  01AD  024E               	subwf	main@ucTimerDelay3,w
  1685  01AE  1C03               	skipc
  1686  01AF  29A4               	goto	l4225
  1687                           
  1688                           ;main.c: 700: {
  1689                           ;main.c: 702: PA2 = 0;
  1690  01B0  1105               	bcf	5,2
  1691                           
  1692                           ;main.c: 703: PA3 = 0;
  1693  01B1  1185               	bcf	5,3
  1694  01B2  29A2               	goto	l4221
  1695  01B3                     l4247:	
  1696                           
  1697                           ;main.c: 713: {
  1698                           ;main.c: 714: if(ucTimerDelay3 >= 2)
  1699  01B3  3002               	movlw	2
  1700  01B4  024E               	subwf	main@ucTimerDelay3,w
  1701  01B5  1C03               	skipc
  1702  01B6  29A4               	goto	l4225
  1703                           
  1704                           ;main.c: 715: {
  1705                           ;main.c: 716: ucTimerDelay3 = 0;
  1706  01B7  01CE               	clrf	main@ucTimerDelay3
  1707                           
  1708                           ;main.c: 718: ucLoaderStep3 = 0;
  1709  01B8  01C6               	clrf	main@ucLoaderStep3
  1710  01B9  291C               	goto	l4089
  1711  01BA                     l4257:	
  1712  01BA  0846               	movf	main@ucLoaderStep3,w
  1713                           
  1714                           ; Switch size 1, requested type "space"
  1715                           ; Number of cases is 5, Range of values is 0 to 4
  1716                           ; switch strategies available:
  1717                           ; Name         Instructions Cycles
  1718                           ; simple_byte           16     9 (average)
  1719                           ; direct_byte           17     7 (fixed)
  1720                           ; jumptable            260     6 (fixed)
  1721                           ; rangetable             9     6 (fixed)
  1722                           ; spacedrange           16     9 (fixed)
  1723                           ; locatedrange           5     3 (fixed)
  1724                           ;	Chosen strategy is simple_byte
  1725  01BB  3A00               	xorlw	0	; case 0
  1726  01BC  1903               	skipnz
  1727  01BD  2998               	goto	l831
  1728  01BE  3A01               	xorlw	1	; case 1
  1729  01BF  1903               	skipnz
  1730  01C0  299D               	goto	l4217
  1731  01C1  3A03               	xorlw	3	; case 2
  1732  01C2  1903               	skipnz
  1733  01C3  29A6               	goto	l4227
  1734  01C4  3A01               	xorlw	1	; case 3
  1735  01C5  1903               	skipnz
  1736  01C6  29AC               	goto	l4237
  1737  01C7  3A07               	xorlw	7	; case 4
  1738  01C8  1903               	skipnz
  1739  01C9  29B3               	goto	l4247
  1740  01CA  2864               	goto	l703
  1741  01CB                     l852:	
  1742                           ;main.c: 740: {
  1743                           ;main.c: 741: case 0:
  1744                           
  1745                           
  1746                           ;main.c: 742: {
  1747                           ;main.c: 743: PB0 = 1;
  1748  01CB  1406               	bsf	6,0
  1749                           
  1750                           ;main.c: 744: PA0 = 1;
  1751  01CC  1405               	bsf	5,0
  1752                           
  1753                           ;main.c: 745: PA1 = 1;
  1754  01CD  1485               	bsf	5,1
  1755                           
  1756                           ;main.c: 746: PA2 = 1;
  1757  01CE  1505               	bsf	5,2
  1758  01CF                     l4259:	
  1759                           
  1760                           ;main.c: 747: ucLoaderStep4++;
  1761  01CF  0AC7               	incf	main@ucLoaderStep4,f
  1762                           
  1763                           ;main.c: 748: break;
  1764  01D0  2842               	goto	l3945
  1765  01D1                     l4261:	
  1766                           
  1767                           ;main.c: 752: {
  1768                           ;main.c: 753: if(ucTimerDelay4 >= 5)
  1769  01D1  3005               	movlw	5
  1770  01D2  024F               	subwf	main@ucTimerDelay4,w
  1771  01D3  1C03               	skipc
  1772  01D4  29D8               	goto	l4269
  1773                           
  1774                           ;main.c: 754: {
  1775                           ;main.c: 755: PA3 = 1;
  1776  01D5  1585               	bsf	5,3
  1777  01D6                     l4265:	
  1778                           
  1779                           ;main.c: 756: ucTimerDelay4 = 0;
  1780  01D6  01CF               	clrf	main@ucTimerDelay4
  1781  01D7  29CF               	goto	l4259
  1782  01D8                     l4269:	
  1783                           
  1784                           ;main.c: 759: else
  1785                           ;main.c: 760: ucTimerDelay4++;
  1786  01D8  0ACF               	incf	main@ucTimerDelay4,f
  1787  01D9  2842               	goto	l3945
  1788  01DA                     l4271:	
  1789                           
  1790                           ;main.c: 765: {
  1791                           ;main.c: 766: if(ucTimerDelay4 >= 5)
  1792  01DA  3005               	movlw	5
  1793  01DB  024F               	subwf	main@ucTimerDelay4,w
  1794  01DC  1C03               	skipc
  1795  01DD  29D8               	goto	l4269
  1796                           
  1797                           ;main.c: 767: {
  1798                           ;main.c: 768: PA3 = 0;
  1799  01DE  1185               	bcf	5,3
  1800  01DF  29D6               	goto	l4265
  1801  01E0                     l4281:	
  1802                           
  1803                           ;main.c: 778: {
  1804                           ;main.c: 779: if(ucTimerDelay4 >= 2)
  1805  01E0  3002               	movlw	2
  1806  01E1  024F               	subwf	main@ucTimerDelay4,w
  1807  01E2  1C03               	skipc
  1808  01E3  29D8               	goto	l4269
  1809                           
  1810                           ;main.c: 780: {
  1811                           ;main.c: 781: ucTimerDelay4 = 0;
  1812  01E4  01CF               	clrf	main@ucTimerDelay4
  1813                           
  1814                           ;main.c: 783: ucLoaderStep4 = 0;
  1815  01E5  01C7               	clrf	main@ucLoaderStep4
  1816  01E6  291C               	goto	l4089
  1817  01E7                     l4291:	
  1818  01E7  0847               	movf	main@ucLoaderStep4,w
  1819                           
  1820                           ; Switch size 1, requested type "space"
  1821                           ; Number of cases is 4, Range of values is 0 to 3
  1822                           ; switch strategies available:
  1823                           ; Name         Instructions Cycles
  1824                           ; simple_byte           13     7 (average)
  1825                           ; direct_byte           15     7 (fixed)
  1826                           ; jumptable            260     6 (fixed)
  1827                           ; rangetable             8     6 (fixed)
  1828                           ; spacedrange           14     9 (fixed)
  1829                           ; locatedrange           4     3 (fixed)
  1830                           ;	Chosen strategy is simple_byte
  1831  01E8  3A00               	xorlw	0	; case 0
  1832  01E9  1903               	skipnz
  1833  01EA  29CB               	goto	l852
  1834  01EB  3A01               	xorlw	1	; case 1
  1835  01EC  1903               	skipnz
  1836  01ED  29D1               	goto	l4261
  1837  01EE  3A03               	xorlw	3	; case 2
  1838  01EF  1903               	skipnz
  1839  01F0  29DA               	goto	l4271
  1840  01F1  3A01               	xorlw	1	; case 3
  1841  01F2  1903               	skipnz
  1842  01F3  29E0               	goto	l4281
  1843  01F4  2864               	goto	l703
  1844  01F5                     l4295:	
  1845  01F5  0842               	movf	main@ucChannel4Type,w
  1846                           
  1847                           ; Switch size 1, requested type "space"
  1848                           ; Number of cases is 5, Range of values is 0 to 4
  1849                           ; switch strategies available:
  1850                           ; Name         Instructions Cycles
  1851                           ; simple_byte           16     9 (average)
  1852                           ; direct_byte           17     7 (fixed)
  1853                           ; jumptable            260     6 (fixed)
  1854                           ; rangetable             9     6 (fixed)
  1855                           ; spacedrange           16     9 (fixed)
  1856                           ; locatedrange           5     3 (fixed)
  1857                           ;	Chosen strategy is simple_byte
  1858  01F6  3A00               	xorlw	0	; case 0
  1859  01F7  1903               	skipnz
  1860  01F8  291E               	goto	l4095
  1861  01F9  3A01               	xorlw	1	; case 1
  1862  01FA  1903               	skipnz
  1863  01FB  2958               	goto	l4159
  1864  01FC  3A03               	xorlw	3	; case 2
  1865  01FD  1903               	skipnz
  1866  01FE  298C               	goto	l4213
  1867  01FF  3A01               	xorlw	1	; case 3
  1868  0200  1903               	skipnz
  1869  0201  29BA               	goto	l4257
  1870  0202  3A07               	xorlw	7	; case 4
  1871  0203  1903               	skipnz
  1872  0204  29E7               	goto	l4291
  1873  0205  2864               	goto	l703
  1874  0206                     l4297:	
  1875                           
  1876                           ;main.c: 807: {
  1877                           ;main.c: 808: if(isFinishedTwentySecondsTimer())
  1878  0206  118A  24A6  118A   	fcall	_isFinishedTwentySecondsTimer
  1879  0209  3A00               	xorlw	0
  1880  020A  1903               	skipnz
  1881  020B  28B6               	goto	l4013
  1882                           
  1883                           ;main.c: 809: {
  1884                           ;main.c: 810: PB6 = 1;
  1885  020C  1706               	bsf	6,6
  1886                           
  1887                           ;main.c: 811: PA6 = 0;
  1888  020D  1305               	bcf	5,6
  1889                           
  1890                           ;main.c: 818: if((getAdOriginalCh14Value() > 3900))
  1891  020E  118A  24BF  118A   	fcall	_getAdOriginalCh14Value
  1892  0211  300F               	movlw	15
  1893  0212  0257               	subwf	?_getAdOriginalCh14Value+1,w
  1894  0213  303D               	movlw	61
  1895  0214  1903               	skipnz
  1896  0215  0256               	subwf	?_getAdOriginalCh14Value,w
  1897  0216  1C03               	skipc
  1898  0217  2A1A               	goto	l4305
  1899                           
  1900                           ;main.c: 819: DACR0=0x0F;
  1901  0218  300F               	movlw	15
  1902  0219  2A1B               	goto	L9
  1903  021A                     l4305:	
  1904                           
  1905                           ;main.c: 820: else
  1906                           ;main.c: 821: DACR0=0x07;
  1907  021A  3007               	movlw	7
  1908  021B                     L9:	
  1909  021B  1683               	bsf	3,5	;RP0=1, select bank1
  1910  021C  0088               	movwf	8	;volatile
  1911                           
  1912                           ;main.c: 823: ucADC4_Step = ADC4_STEP_FOURTH;
  1913  021D  3004               	movlw	4
  1914  021E  1283               	bcf	3,5	;RP0=0, select bank0
  1915  021F                     L8:	
  1916  021F  00C1               	movwf	main@ucADC4_Step
  1917                           
  1918                           ;main.c: 824: }
  1919  0220  2842               	goto	l3945
  1920  0221                     l4307:	
  1921                           
  1922                           ;main.c: 832: {
  1923                           ;main.c: 833: static unsigned char ucTimer1s = 0;
  1924                           ;main.c: 834: if(ucTimer1s < 10)
  1925  0221  300A               	movlw	10
  1926  0222  0248               	subwf	main@ucTimer1s,w
  1927  0223  1803               	skipnc
  1928  0224  2A27               	goto	l4311
  1929                           
  1930                           ;main.c: 835: ucTimer1s++;
  1931  0225  0AC8               	incf	main@ucTimer1s,f
  1932  0226  2842               	goto	l3945
  1933  0227                     l4311:	
  1934                           
  1935                           ;main.c: 836: else
  1936                           ;main.c: 837: {
  1937                           ;main.c: 838: ucTimer1s = 0;
  1938  0227  01C8               	clrf	main@ucTimer1s
  1939                           
  1940                           ;main.c: 839: PBOD6 = 1;
  1941  0228  1683               	bsf	3,5	;RP0=1, select bank3
  1942  0229  1703               	bsf	3,6	;RP1=1, select bank3
  1943  022A  1708               	bsf	8,6
  1944                           
  1945                           ;main.c: 840: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  1946  022B  1283               	bcf	3,5	;RP0=0, select bank0
  1947  022C  1303               	bcf	3,6	;RP1=0, select bank0
  1948  022D  01C0               	clrf	main@enumMainLoopStep
  1949  022E  0AC0               	incf	main@enumMainLoopStep,f
  1950                           
  1951                           ;main.c: 841: ucADC4_Step = ADC4_STEP_INIT;
  1952  022F  01C1               	clrf	main@ucADC4_Step
  1953  0230  2842               	goto	l3945
  1954  0231                     l4319:	
  1955  0231  0841               	movf	main@ucADC4_Step,w
  1956                           
  1957                           ; Switch size 1, requested type "space"
  1958                           ; Number of cases is 5, Range of values is 0 to 4
  1959                           ; switch strategies available:
  1960                           ; Name         Instructions Cycles
  1961                           ; simple_byte           16     9 (average)
  1962                           ; direct_byte           17     7 (fixed)
  1963                           ; jumptable            260     6 (fixed)
  1964                           ; rangetable             9     6 (fixed)
  1965                           ; spacedrange           16     9 (fixed)
  1966                           ; locatedrange           5     3 (fixed)
  1967                           ;	Chosen strategy is simple_byte
  1968  0232  3A00               	xorlw	0	; case 0
  1969  0233  1903               	skipnz
  1970  0234  28B3               	goto	l4011
  1971  0235  3A01               	xorlw	1	; case 1
  1972  0236  1903               	skipnz
  1973  0237  28B9               	goto	l4015
  1974  0238  3A03               	xorlw	3	; case 2
  1975  0239  1903               	skipnz
  1976  023A  29F5               	goto	l4295
  1977  023B  3A01               	xorlw	1	; case 3
  1978  023C  1903               	skipnz
  1979  023D  2A06               	goto	l4297
  1980  023E  3A07               	xorlw	7	; case 4
  1981  023F  1903               	skipnz
  1982  0240  2A21               	goto	l4307
  1983  0241  2864               	goto	l703
  1984  0242                     l880:	
  1985                           ;main.c: 867: {
  1986                           ;main.c: 868: case HOUR_3_BRANCH_STEP_FIRST:
  1987                           
  1988                           
  1989                           ;main.c: 869: {
  1990                           ;main.c: 870: PAOD7 = 1;
  1991  0242  1683               	bsf	3,5	;RP0=1, select bank3
  1992  0243  1703               	bsf	3,6	;RP1=1, select bank3
  1993  0244  1787               	bsf	7,7
  1994                           
  1995                           ;main.c: 871: startThreeHoursTimer();
  1996  0245  118A  249A  118A   	fcall	_startThreeHoursTimer
  1997                           
  1998                           ;main.c: 873: enumBranchStep = HOUR_3_BRANCH_STEP_SECOND;
  1999  0248  01BE               	clrf	main@enumBranchStep
  2000  0249  0ABE               	incf	main@enumBranchStep,f
  2001                           
  2002                           ;main.c: 874: break;
  2003  024A  2842               	goto	l3945
  2004  024B                     l4325:	
  2005                           
  2006                           ;main.c: 878: {
  2007                           ;main.c: 879: static unsigned char ucTimer20s = 0;
  2008                           ;main.c: 881: if(ucTimer20s < 20)
  2009  024B  3014               	movlw	20
  2010  024C  0249               	subwf	main@ucTimer20s,w
  2011  024D  1803               	skipnc
  2012  024E  2A51               	goto	l4329
  2013                           
  2014                           ;main.c: 882: ucTimer20s++;
  2015  024F  0AC9               	incf	main@ucTimer20s,f
  2016  0250  2A5A               	goto	l4345
  2017  0251                     l4329:	
  2018  0251  3002               	movlw	2
  2019                           
  2020                           ;main.c: 883: else
  2021                           ;main.c: 884: {
  2022                           ;main.c: 885: ucTimer20s = 0;
  2023  0252  01C9               	clrf	main@ucTimer20s
  2024                           
  2025                           ;main.c: 886: PB0 = 1;
  2026  0253  1406               	bsf	6,0
  2027                           
  2028                           ;main.c: 887: PA0 = 1;
  2029  0254  1405               	bsf	5,0
  2030                           
  2031                           ;main.c: 888: PA1 = 1;
  2032  0255  1485               	bsf	5,1
  2033                           
  2034                           ;main.c: 889: PA2 = 1;
  2035  0256  1505               	bsf	5,2
  2036                           
  2037                           ;main.c: 890: PA3 = 1;
  2038  0257  1585               	bsf	5,3
  2039                           
  2040                           ;main.c: 891: PA6 = 0;
  2041  0258  1305               	bcf	5,6
  2042                           
  2043                           ;main.c: 893: enumBranchStep = HOUR_3_BRANCH_STEP_THIRD;
  2044  0259  00BE               	movwf	main@enumBranchStep
  2045  025A                     l4345:	
  2046                           
  2047                           ;main.c: 898: {
  2048                           ;main.c: 899: if(isFinishedThreeHoursTimer())
  2049  025A  118A  24A1  118A   	fcall	_isFinishedThreeHoursTimer
  2050  025D  3A00               	xorlw	0
  2051  025E  1903               	skipnz
  2052  025F  2A62               	goto	l4351
  2053                           
  2054                           ;main.c: 900: {
  2055                           ;main.c: 901: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2056  0260  01BE               	clrf	main@enumBranchStep
  2057  0261  28B0               	goto	l4009
  2058  0262                     l4351:	
  2059                           
  2060                           ;main.c: 904: else
  2061                           ;main.c: 905: {
  2062                           ;main.c: 906: static unsigned char ucTimerX1P5s = 0;
  2063                           ;main.c: 908: if(getAdOriginalCh1Value() < 0x0082)
  2064  0262  118A  24BA  118A   	fcall	_getAdOriginalCh1Value
  2065  0265  3000               	movlw	0
  2066  0266  0257               	subwf	?_getAdOriginalCh1Value+1,w
  2067  0267  3082               	movlw	130
  2068  0268  1903               	skipnz
  2069  0269  0256               	subwf	?_getAdOriginalCh1Value,w
  2070  026A  1803               	skipnc
  2071  026B  2A6E               	goto	l4355
  2072                           
  2073                           ;main.c: 909: {
  2074                           ;main.c: 910: ucTimerX1P5s = 0;
  2075  026C  01D2               	clrf	main@ucTimerX1P5s
  2076                           
  2077                           ;main.c: 911: }
  2078  026D  2A6F               	goto	l4357
  2079  026E                     l4355:	
  2080                           
  2081                           ;main.c: 912: else
  2082                           ;main.c: 913: {
  2083                           ;main.c: 914: ucTimerX1P5s++;
  2084  026E  0AD2               	incf	main@ucTimerX1P5s,f
  2085  026F                     l4357:	
  2086                           
  2087                           ;main.c: 915: }
  2088                           ;main.c: 917: if(ucTimerX1P5s >= 1)
  2089  026F  0852               	movf	main@ucTimerX1P5s,w
  2090  0270  1903               	btfsc	3,2
  2091  0271  2A79               	goto	l4369
  2092                           
  2093                           ;main.c: 918: {
  2094                           ;main.c: 919: ucTimerX1P5s = 0;
  2095  0272  01D2               	clrf	main@ucTimerX1P5s
  2096                           
  2097                           ;main.c: 920: PA7 = 0;
  2098  0273  1385               	bcf	5,7
  2099                           
  2100                           ;main.c: 921: clearThreeHoursTimer();
  2101  0274  118A  242F  118A   	fcall	_clearThreeHoursTimer
  2102                           
  2103                           ;main.c: 923: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2104  0277  01BE               	clrf	main@enumBranchStep
  2105  0278  2876               	goto	l3973
  2106  0279                     l4369:	
  2107                           
  2108                           ;main.c: 927: else
  2109                           ;main.c: 928: {
  2110                           ;main.c: 929: static unsigned char ucTimerX2P5s = 0;
  2111                           ;main.c: 931: if(getAdOriginalCh14Value() >= 1950)
  2112  0279  118A  24BF  118A   	fcall	_getAdOriginalCh14Value
  2113  027C  3007               	movlw	7
  2114  027D  0257               	subwf	?_getAdOriginalCh14Value+1,w
  2115  027E  309E               	movlw	158
  2116  027F  1903               	skipnz
  2117  0280  0256               	subwf	?_getAdOriginalCh14Value,w
  2118  0281  1C03               	skipc
  2119  0282  2A85               	goto	l4373
  2120                           
  2121                           ;main.c: 932: {
  2122                           ;main.c: 933: ucTimerX2P5s++;
  2123  0283  0AD3               	incf	main@ucTimerX2P5s,f
  2124                           
  2125                           ;main.c: 934: }
  2126  0284  2A86               	goto	l4375
  2127  0285                     l4373:	
  2128                           
  2129                           ;main.c: 935: else
  2130                           ;main.c: 936: {
  2131                           ;main.c: 937: ucTimerX2P5s = 0;
  2132  0285  01D3               	clrf	main@ucTimerX2P5s
  2133  0286                     l4375:	
  2134                           
  2135                           ;main.c: 938: }
  2136                           ;main.c: 940: if(ucTimerX2P5s >= 1)
  2137  0286  0853               	movf	main@ucTimerX2P5s,w
  2138  0287  1903               	btfsc	3,2
  2139  0288  2A8B               	goto	l4379
  2140                           
  2141                           ;main.c: 941: {
  2142                           ;main.c: 942: ucTimerX2P5s = 0;
  2143  0289  01D3               	clrf	main@ucTimerX2P5s
  2144                           
  2145                           ;main.c: 943: }
  2146  028A  2842               	goto	l3945
  2147  028B                     l4379:	
  2148                           
  2149                           ;main.c: 944: else
  2150                           ;main.c: 945: {
  2151                           ;main.c: 946: clearPinPortAndTimer();
  2152  028B  118A  2420  118A   	fcall	_clearPinPortAndTimer
  2153  028E  2862               	goto	l3963
  2154  028F                     l4385:	
  2155  028F  083E               	movf	main@enumBranchStep,w
  2156                           
  2157                           ; Switch size 1, requested type "space"
  2158                           ; Number of cases is 3, Range of values is 0 to 2
  2159                           ; switch strategies available:
  2160                           ; Name         Instructions Cycles
  2161                           ; simple_byte           10     6 (average)
  2162                           ; direct_byte           13     7 (fixed)
  2163                           ; jumptable            260     6 (fixed)
  2164                           ; rangetable             7     6 (fixed)
  2165                           ; spacedrange           12     9 (fixed)
  2166                           ; locatedrange           3     3 (fixed)
  2167                           ;	Chosen strategy is simple_byte
  2168  0290  3A00               	xorlw	0	; case 0
  2169  0291  1903               	skipnz
  2170  0292  2A42               	goto	l880
  2171  0293  3A01               	xorlw	1	; case 1
  2172  0294  1903               	skipnz
  2173  0295  2A4B               	goto	l4325
  2174  0296  3A03               	xorlw	3	; case 2
  2175  0297  1903               	skipnz
  2176  0298  2A5A               	goto	l4345
  2177  0299  2864               	goto	l703
  2178  029A                     l907:	
  2179                           ;main.c: 976: {
  2180                           ;main.c: 977: case INTERNAL_FIRST_STEP:
  2181                           
  2182                           
  2183                           ;main.c: 978: {
  2184                           ;main.c: 979: PB0 = 0;
  2185  029A  1006               	bcf	6,0
  2186                           
  2187                           ;main.c: 980: PB1 = 0;
  2188  029B  1086               	bcf	6,1
  2189                           
  2190                           ;main.c: 981: PA0 = 0;
  2191  029C  1005               	bcf	5,0
  2192                           
  2193                           ;main.c: 982: PA1 = 0;
  2194  029D  1085               	bcf	5,1
  2195                           
  2196                           ;main.c: 983: PA2 = 0;
  2197  029E  1105               	bcf	5,2
  2198                           
  2199                           ;main.c: 984: PA3 = 0;
  2200  029F  1185               	bcf	5,3
  2201                           
  2202                           ;main.c: 985: PB6 = 1;
  2203  02A0  1706               	bsf	6,6
  2204                           
  2205                           ;main.c: 986: PA6 =0;
  2206  02A1  1305               	bcf	5,6
  2207                           
  2208                           ;main.c: 988: enumInteralStep = INTERNAL_SECOND_STEP;
  2209  02A2  01BF               	clrf	main@enumInteralStep
  2210  02A3  0ABF               	incf	main@enumInteralStep,f
  2211                           
  2212                           ;main.c: 989: break;
  2213  02A4  2842               	goto	l3945
  2214  02A5                     l4387:	
  2215                           
  2216                           ;main.c: 993: {
  2217                           ;main.c: 994: static unsigned char ucTimer1s = 0;
  2218                           ;main.c: 996: if(getAdOriginalCh14Value() <= 1000)
  2219  02A5  118A  24BF  118A   	fcall	_getAdOriginalCh14Value
  2220  02A8  3003               	movlw	3
  2221  02A9  0257               	subwf	?_getAdOriginalCh14Value+1,w
  2222  02AA  30E9               	movlw	233
  2223  02AB  1903               	skipnz
  2224  02AC  0256               	subwf	?_getAdOriginalCh14Value,w
  2225  02AD  1803               	skipnc
  2226  02AE  2AB1               	goto	l4391
  2227                           
  2228                           ;main.c: 997: {
  2229                           ;main.c: 998: ucTimer1s++;
  2230  02AF  0ABD               	incf	main@cTimer1s_806,f
  2231                           
  2232                           ;main.c: 999: }
  2233  02B0  2AB2               	goto	l4393
  2234  02B1                     l4391:	
  2235                           
  2236                           ;main.c: 1000: else
  2237                           ;main.c: 1001: ucTimer1s = 0;
  2238  02B1  01BD               	clrf	main@cTimer1s_806
  2239  02B2                     l4393:	
  2240                           
  2241                           ;main.c: 1003: if(ucTimer1s >= 10)
  2242  02B2  300A               	movlw	10
  2243  02B3  023D               	subwf	main@cTimer1s_806,w
  2244  02B4  1C03               	skipc
  2245  02B5  2842               	goto	l3945
  2246                           
  2247                           ;main.c: 1004: {
  2248                           ;main.c: 1005: enumInteralStep = INTERNAL_THIRD_STEP;
  2249  02B6  3002               	movlw	2
  2250  02B7  00BF               	movwf	main@enumInteralStep
  2251                           
  2252                           ;main.c: 1006: ucTimer1s = 0;
  2253  02B8  01BD               	clrf	main@cTimer1s_806
  2254  02B9  2842               	goto	l3945
  2255  02BA                     l4399:	
  2256                           
  2257                           ;main.c: 1012: {
  2258                           ;main.c: 1013: static unsigned char ucTimerP3s = 0;
  2259                           ;main.c: 1015: if(getAdOriginalCh14Value() >= 1950)
  2260  02BA  118A  24BF  118A   	fcall	_getAdOriginalCh14Value
  2261  02BD  3007               	movlw	7
  2262  02BE  0257               	subwf	?_getAdOriginalCh14Value+1,w
  2263  02BF  309E               	movlw	158
  2264  02C0  1903               	skipnz
  2265  02C1  0256               	subwf	?_getAdOriginalCh14Value,w
  2266  02C2  1C03               	skipc
  2267  02C3  2AC6               	goto	l4403
  2268                           
  2269                           ;main.c: 1016: {
  2270                           ;main.c: 1017: ucTimerP3s++;
  2271  02C4  0AD0               	incf	main@ucTimerP3s,f
  2272                           
  2273                           ;main.c: 1018: }
  2274  02C5  2AC7               	goto	l4405
  2275  02C6                     l4403:	
  2276                           
  2277                           ;main.c: 1019: else
  2278                           ;main.c: 1020: ucTimerP3s = 0;
  2279  02C6  01D0               	clrf	main@ucTimerP3s
  2280  02C7                     l4405:	
  2281                           
  2282                           ;main.c: 1022: if(ucTimerP3s >= 3)
  2283  02C7  3003               	movlw	3
  2284  02C8  0250               	subwf	main@ucTimerP3s,w
  2285  02C9  1C03               	skipc
  2286  02CA  2842               	goto	l3945
  2287                           
  2288                           ;main.c: 1023: {
  2289                           ;main.c: 1024: enumInteralStep = INTERNAL_FIRST_STEP;
  2290  02CB  01BF               	clrf	main@enumInteralStep
  2291                           
  2292                           ;main.c: 1025: ucTimerP3s = 0;
  2293  02CC  01D0               	clrf	main@ucTimerP3s
  2294                           
  2295                           ;main.c: 1026: clearAllTimer();
  2296  02CD  118A  2427  118A   	fcall	_clearAllTimer
  2297                           
  2298                           ;main.c: 1028: DACR0=0x0F;
  2299  02D0  300F               	movlw	15
  2300  02D1  1683               	bsf	3,5	;RP0=1, select bank1
  2301  02D2  0088               	movwf	8	;volatile
  2302                           
  2303                           ;main.c: 1029: PBOD6 = 1;
  2304  02D3  1703               	bsf	3,6	;RP1=1, select bank3
  2305  02D4  1708               	bsf	8,6
  2306                           
  2307                           ;main.c: 1031: PA0 = 0;
  2308  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  2309  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  2310  02D7  1005               	bcf	5,0
  2311                           
  2312                           ;main.c: 1032: PA1 = 0;
  2313  02D8  1085               	bcf	5,1
  2314                           
  2315                           ;main.c: 1033: PA2 = 0;
  2316  02D9  1105               	bcf	5,2
  2317                           
  2318                           ;main.c: 1034: PA3 = 1;
  2319  02DA  1585               	bsf	5,3
  2320                           
  2321                           ;main.c: 1035: PB0 = 0;
  2322  02DB  1006               	bcf	6,0
  2323                           
  2324                           ;main.c: 1036: PB1 = 0;
  2325  02DC  1086               	bcf	6,1
  2326                           
  2327                           ;main.c: 1037: PA6 = 0;
  2328  02DD  1305               	bcf	5,6
  2329                           
  2330                           ;main.c: 1038: PA7 = 0;
  2331  02DE  1385               	bcf	5,7
  2332                           
  2333                           ;main.c: 1041: enumMainLoopStep = MAIN_LOOP_STEP_INIT;
  2334  02DF  01C0               	clrf	main@enumMainLoopStep
  2335  02E0  2842               	goto	l3945
  2336  02E1                     l4435:	
  2337  02E1  083F               	movf	main@enumInteralStep,w
  2338                           
  2339                           ; Switch size 1, requested type "space"
  2340                           ; Number of cases is 3, Range of values is 0 to 2
  2341                           ; switch strategies available:
  2342                           ; Name         Instructions Cycles
  2343                           ; simple_byte           10     6 (average)
  2344                           ; direct_byte           13     7 (fixed)
  2345                           ; jumptable            260     6 (fixed)
  2346                           ; rangetable             7     6 (fixed)
  2347                           ; spacedrange           12     9 (fixed)
  2348                           ; locatedrange           3     3 (fixed)
  2349                           ;	Chosen strategy is simple_byte
  2350  02E2  3A00               	xorlw	0	; case 0
  2351  02E3  1903               	skipnz
  2352  02E4  2A9A               	goto	l907
  2353  02E5  3A01               	xorlw	1	; case 1
  2354  02E6  1903               	skipnz
  2355  02E7  2AA5               	goto	l4387
  2356  02E8  3A03               	xorlw	3	; case 2
  2357  02E9  1903               	skipnz
  2358  02EA  2ABA               	goto	l4399
  2359  02EB  2864               	goto	l703
  2360  02EC                     l4439:	
  2361  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  2362  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  2363  02EE  0840               	movf	main@enumMainLoopStep,w
  2364                           
  2365                           ; Switch size 1, requested type "space"
  2366                           ; Number of cases is 8, Range of values is 0 to 9
  2367                           ; switch strategies available:
  2368                           ; Name         Instructions Cycles
  2369                           ; simple_byte           25    13 (average)
  2370                           ; direct_byte           27     7 (fixed)
  2371                           ; jumptable            260     6 (fixed)
  2372                           ; rangetable            14     6 (fixed)
  2373                           ; spacedrange           26     9 (fixed)
  2374                           ; locatedrange          10     3 (fixed)
  2375                           ;	Chosen strategy is simple_byte
  2376  02EF  3A00               	xorlw	0	; case 0
  2377  02F0  1903               	skipnz
  2378  02F1  2850               	goto	l3953
  2379  02F2  3A01               	xorlw	1	; case 1
  2380  02F3  1903               	skipnz
  2381  02F4  2865               	goto	l3965
  2382  02F5  3A03               	xorlw	3	; case 2
  2383  02F6  1903               	skipnz
  2384  02F7  287C               	goto	l712
  2385  02F8  3A01               	xorlw	1	; case 3
  2386  02F9  1903               	skipnz
  2387  02FA  287F               	goto	l3979
  2388  02FB  3A07               	xorlw	7	; case 4
  2389  02FC  1903               	skipnz
  2390  02FD  28A5               	goto	l4003
  2391  02FE  3A01               	xorlw	1	; case 5
  2392  02FF  1903               	skipnz
  2393  0300  28AA               	goto	l4007
  2394  0301  3A0D               	xorlw	13	; case 8
  2395  0302  1903               	skipnz
  2396  0303  2A8F               	goto	l4385
  2397  0304  3A01               	xorlw	1	; case 9
  2398  0305  1903               	skipnz
  2399  0306  2AE1               	goto	l4435
  2400  0307  2864               	goto	l703
  2401  0308  118A  280B         	ljmp	start
  2402  030A                     __end_of_main:	
  2403                           
  2404                           	psect	swtext1
  2405  0445                     __pswtext1:	
  2406  0445                     S4657:	
  2407  0445  118A  28EE         	ljmp	l752
  2408  0447  118A  28F1         	ljmp	l4035
  2409  0449  118A  28FA         	ljmp	l4045
  2410  044B  118A  2900         	ljmp	l4055
  2411  044D  118A  2906         	ljmp	l4065
  2412  044F  118A  290C         	ljmp	l4075
  2413  0451  118A  2916         	ljmp	l4085
  2414                           
  2415                           	psect	swtext2
  2416  0453                     __pswtext2:	
  2417  0453                     S4659:	
  2418  0453  118A  292A         	ljmp	l780
  2419  0455  118A  292D         	ljmp	l4099
  2420  0457  118A  2936         	ljmp	l4109
  2421  0459  118A  293C         	ljmp	l4119
  2422  045B  118A  2942         	ljmp	l4129
  2423  045D  118A  2948         	ljmp	l4139
  2424  045F  118A  2951         	ljmp	l4149
  2425                           
  2426                           	psect	swtext3
  2427  0461                     __pswtext3:	
  2428  0461                     S4661:	
  2429  0461  118A  2964         	ljmp	l807
  2430  0463  118A  2968         	ljmp	l4163
  2431  0465  118A  2971         	ljmp	l4173
  2432  0467  118A  2977         	ljmp	l4183
  2433  0469  118A  297D         	ljmp	l4193
  2434  046B  118A  2985         	ljmp	l4203
  2435                           
  2436                           	psect	text583
  2437  030A                     __ptext583:	
  2438 ;; =============== function _main ends ============
  2439                           
  2440                           
  2441 ;; *************** function _process_AD_Converter_Value *****************
  2442 ;; Defined at:
  2443 ;;		line 102 in file "C:\190604\AK7030-OTP\common.c"
  2444 ;; Parameters:    Size  Location     Type
  2445 ;;		None
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;		None
  2448 ;; Return value:  Size  Location     Type
  2449 ;;		None               void
  2450 ;; Registers used:
  2451 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2452 ;; Tracked objects:
  2453 ;;		On entry : 0/0
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: FFE9F/0
  2456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2457 ;;      Params:         0       0       0       0       0
  2458 ;;      Locals:         0       0       0       0       0
  2459 ;;      Temps:          0       0       0       0       0
  2460 ;;      Totals:         0       0       0       0       0
  2461 ;;Total ram usage:        0 bytes
  2462 ;; Hardware stack levels used:    1
  2463 ;; Hardware stack levels required when called:    4
  2464 ;; This function calls:
  2465 ;;		_getAD_ConvertFlag
  2466 ;;		_setAD_ConvertFlag
  2467 ;;		_AD_Sample
  2468 ;;		_adc_test_init
  2469 ;;		_adc_start
  2470 ;; This function is called by:
  2471 ;;		_main
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474  030A                     _process_AD_Converter_Value:	
  2475                           
  2476                           ;common.c: 67: return adc_convert_flag;
  2477                           
  2478                           ; Regs used in _getAD_ConvertFlag: [wreg]
  2479                           
  2480                           ;common.c: 103: if(getAD_ConvertFlag())
  2481                           
  2482                           ; Regs used in _process_AD_Converter_Value: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2483  030A  0879               	movf	_adc_convert_flag,w
  2484  030B  3A00               	xorlw	0
  2485  030C  1903               	skipnz
  2486  030D  0008               	return
  2487                           
  2488                           ;common.c: 104: {
  2489                           ;common.c: 105: setAD_ConvertFlag(0);
  2490  030E  3000               	movlw	0
  2491  030F  2329  118A         	fcall	_setAD_ConvertFlag
  2492                           
  2493                           ;common.c: 106: AD_Sample();
  2494  0311  232E  118A         	fcall	_AD_Sample
  2495                           
  2496                           ;common.c: 107: if(4 == sampleChannelSelect)
  2497  0313  085B               	movf	_sampleChannelSelect,w
  2498  0314  3A04               	xorlw	4
  2499  0315  1D03               	skipz
  2500  0316  2B1B               	goto	l3921
  2501                           
  2502                           ;common.c: 108: adc_test_init(4,3);
  2503  0317  3003               	movlw	3
  2504  0318  00D6               	movwf	?_adc_test_init
  2505  0319  3004               	movlw	4
  2506  031A  2B24               	goto	L10
  2507  031B                     l3921:	
  2508                           
  2509                           ;common.c: 109: else if(1 == sampleChannelSelect)
  2510  031B  0B5B               	decfsz	_sampleChannelSelect,w
  2511  031C  2B21               	goto	l3925
  2512                           
  2513                           ;common.c: 110: adc_test_init(1,3);
  2514  031D  3003               	movlw	3
  2515  031E  00D6               	movwf	?_adc_test_init
  2516  031F  3001               	movlw	1
  2517  0320  2B24               	goto	L10
  2518  0321                     l3925:	
  2519                           
  2520                           ;common.c: 111: else
  2521                           ;common.c: 112: adc_test_init(14,3);
  2522  0321  3003               	movlw	3
  2523  0322  00D6               	movwf	?_adc_test_init
  2524  0323  300E               	movlw	14
  2525  0324                     L10:	
  2526  0324  2396  118A         	fcall	_adc_test_init
  2527                           
  2528                           ;common.c: 114: adc_start();
  2529  0326  2BAB               	ljmp	l3737
  2530  0327                     __end_of_process_AD_Converter_Value:	
  2531  0327                     __ptext589:	
  2532 ;; =============== function _setAD_ConvertFlag ends ============
  2533                           
  2534                           
  2535 ;; *************** function _getAD_ConvertFlag *****************
  2536 ;; Defined at:
  2537 ;;		line 66 in file "C:\190604\AK7030-OTP\common.c"
  2538 ;; Parameters:    Size  Location     Type
  2539 ;;		None
  2540 ;; Auto vars:     Size  Location     Type
  2541 ;;		None
  2542 ;; Return value:  Size  Location     Type
  2543 ;;                  1    wreg      unsigned char 
  2544 ;; Registers used:
  2545 ;;		wreg
  2546 ;; Tracked objects:
  2547 ;;		On entry : 0/0
  2548 ;;		On exit  : 0/0
  2549 ;;		Unchanged: FFFFF/0
  2550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2551 ;;      Params:         0       0       0       0       0
  2552 ;;      Locals:         0       0       0       0       0
  2553 ;;      Temps:          0       0       0       0       0
  2554 ;;      Totals:         0       0       0       0       0
  2555 ;;Total ram usage:        0 bytes
  2556 ;; Hardware stack levels used:    1
  2557 ;; Hardware stack levels required when called:    2
  2558 ;; This function calls:
  2559 ;;		Nothing
  2560 ;; This function is called by:
  2561 ;;		_process_AD_Converter_Value
  2562 ;; This function uses a non-reentrant model
  2563 ;;
  2564  0327                     _getAD_ConvertFlag:	
  2565                           
  2566                           ;common.c: 67: return adc_convert_flag;
  2567                           
  2568                           ; Regs used in _getAD_ConvertFlag: [wreg]
  2569  0327  0879               	movf	_adc_convert_flag,w
  2570  0328  0008               	return
  2571  0329                     __end_of_getAD_ConvertFlag:	
  2572  0329                     __ptext588:	
  2573 ;; =============== function _getAdOriginalValue ends ============
  2574                           
  2575                           
  2576 ;; *************** function _setAD_ConvertFlag *****************
  2577 ;; Defined at:
  2578 ;;		line 72 in file "C:\190604\AK7030-OTP\common.c"
  2579 ;; Parameters:    Size  Location     Type
  2580 ;;  flag            1    wreg     unsigned char 
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;  flag            1    0[BANK0 ] unsigned char 
  2583 ;; Return value:  Size  Location     Type
  2584 ;;		None               void
  2585 ;; Registers used:
  2586 ;;		wreg
  2587 ;; Tracked objects:
  2588 ;;		On entry : 0/0
  2589 ;;		On exit  : 60/0
  2590 ;;		Unchanged: FFF9F/0
  2591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2592 ;;      Params:         0       0       0       0       0
  2593 ;;      Locals:         0       1       0       0       0
  2594 ;;      Temps:          0       0       0       0       0
  2595 ;;      Totals:         0       1       0       0       0
  2596 ;;Total ram usage:        1 bytes
  2597 ;; Hardware stack levels used:    1
  2598 ;; Hardware stack levels required when called:    2
  2599 ;; This function calls:
  2600 ;;		Nothing
  2601 ;; This function is called by:
  2602 ;;		_process_AD_Converter_Value
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605  0329                     _setAD_ConvertFlag:	
  2606                           
  2607                           ; Regs used in _setAD_ConvertFlag: [wreg]
  2608                           ;setAD_ConvertFlag@flag stored from wreg
  2609  0329  1283               	bcf	3,5	;RP0=0, select bank0
  2610  032A  1303               	bcf	3,6	;RP1=0, select bank0
  2611  032B  00D6               	movwf	setAD_ConvertFlag@flag
  2612                           
  2613                           ;common.c: 73: adc_convert_flag = flag;
  2614  032C  00F9               	movwf	_adc_convert_flag
  2615  032D  0008               	return
  2616  032E                     __end_of_setAD_ConvertFlag:	
  2617  032E                     __ptext585:	
  2618 ;; =============== function _clearPinPortAndTimer ends ============
  2619                           
  2620                           
  2621 ;; *************** function _AD_Sample *****************
  2622 ;; Defined at:
  2623 ;;		line 128 in file "C:\190604\AK7030-OTP\common.c"
  2624 ;; Parameters:    Size  Location     Type
  2625 ;;		None
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;  index           1    4[BANK0 ] unsigned char 
  2628 ;; Return value:  Size  Location     Type
  2629 ;;		None               void
  2630 ;; Registers used:
  2631 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2632 ;; Tracked objects:
  2633 ;;		On entry : 60/0
  2634 ;;		On exit  : 60/0
  2635 ;;		Unchanged: FFE9F/0
  2636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2637 ;;      Params:         0       0       0       0       0
  2638 ;;      Locals:         0       1       0       0       0
  2639 ;;      Temps:          0       2       0       0       0
  2640 ;;      Totals:         0       3       0       0       0
  2641 ;;Total ram usage:        3 bytes
  2642 ;; Hardware stack levels used:    1
  2643 ;; Hardware stack levels required when called:    3
  2644 ;; This function calls:
  2645 ;;		_getAdOriginalValue
  2646 ;; This function is called by:
  2647 ;;		_process_AD_Converter_Value
  2648 ;; This function uses a non-reentrant model
  2649 ;;
  2650  032E                     _AD_Sample:	
  2651                           
  2652                           ;common.c: 129: if(sampleTimes < 6)
  2653                           
  2654                           ; Regs used in _AD_Sample: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2655  032E  3006               	movlw	6
  2656  032F  023C               	subwf	_sampleTimes,w
  2657  0330  1803               	skipnc
  2658  0331  0008               	return
  2659                           
  2660                           ;common.c: 130: {
  2661                           ;common.c: 132: buffer_Sample_AD_Value[sampleTimes] = getAdOriginalValue();
  2662  0332  2391  118A         	fcall	_getAdOriginalValue
  2663  0334  1003               	clrc
  2664  0335  0D3C               	rlf	_sampleTimes,w
  2665  0336  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  2666  0337  0084               	movwf	4
  2667  0338  0856               	movf	?_getAdOriginalValue,w
  2668  0339  1383               	bcf	3,7	;select IRP bank0
  2669  033A  0080               	movwf	0
  2670  033B  0A84               	incf	4,f
  2671  033C  0857               	movf	?_getAdOriginalValue+1,w
  2672  033D  0080               	movwf	0
  2673                           
  2674                           ;common.c: 134: if(sampleTimes == 0)
  2675  033E  08BC               	movf	_sampleTimes,f
  2676  033F  1D03               	skipz
  2677  0340  2B49               	goto	l3869
  2678                           
  2679                           ;common.c: 135: {
  2680                           ;common.c: 136: multiFilterMaxValue = buffer_Sample_AD_Value[0];
  2681  0341  0821               	movf	_buffer_Sample_AD_Value+1,w
  2682  0342  00B5               	movwf	_multiFilterMaxValue+1
  2683  0343  0820               	movf	_buffer_Sample_AD_Value,w
  2684  0344  00B4               	movwf	_multiFilterMaxValue
  2685                           
  2686                           ;common.c: 137: multiFilterMinValue = buffer_Sample_AD_Value[0];
  2687  0345  0821               	movf	_buffer_Sample_AD_Value+1,w
  2688  0346  00B7               	movwf	_multiFilterMinValue+1
  2689  0347  0820               	movf	_buffer_Sample_AD_Value,w
  2690  0348  00B6               	movwf	_multiFilterMinValue
  2691  0349                     l3869:	
  2692                           
  2693                           ;common.c: 138: }
  2694                           ;common.c: 140: if(multiFilterMaxValue < buffer_Sample_AD_Value[sampleTimes])
  2695  0349  23AE  118A         	fcall	PL2	;call to abstracted procedure
  2696  034B  0235               	subwf	_multiFilterMaxValue+1,w
  2697  034C  1D03               	skipz
  2698  034D  2B50               	goto	u915
  2699  034E  0858               	movf	??_AD_Sample,w
  2700  034F  0234               	subwf	_multiFilterMaxValue,w
  2701  0350                     u915:	
  2702  0350  1803               	skipnc
  2703  0351  2B5B               	goto	l1640
  2704                           
  2705                           ;common.c: 141: {
  2706                           ;common.c: 142: multiFilterMaxValue = buffer_Sample_AD_Value[sampleTimes];
  2707  0352  1003               	clrc
  2708  0353  0D3C               	rlf	_sampleTimes,w
  2709  0354  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  2710  0355  0084               	movwf	4
  2711  0356  0800               	movf	0,w
  2712  0357  00B4               	movwf	_multiFilterMaxValue
  2713  0358  0A84               	incf	4,f
  2714  0359  0800               	movf	0,w
  2715  035A  00B5               	movwf	_multiFilterMaxValue+1
  2716  035B                     l1640:	
  2717                           
  2718                           ;common.c: 143: }
  2719                           ;common.c: 144: if(multiFilterMinValue > buffer_Sample_AD_Value[sampleTimes])
  2720  035B  23AE  118A         	fcall	PL2	;call to abstracted procedure
  2721  035D  0837               	movf	_multiFilterMinValue+1,w
  2722  035E  0259               	subwf	??_AD_Sample+1,w
  2723  035F  1D03               	skipz
  2724  0360  2B63               	goto	u925
  2725  0361  0836               	movf	_multiFilterMinValue,w
  2726  0362  0258               	subwf	??_AD_Sample,w
  2727  0363                     u925:	
  2728  0363  1803               	skipnc
  2729  0364  2B6E               	goto	l3875
  2730                           
  2731                           ;common.c: 145: {
  2732                           ;common.c: 146: multiFilterMinValue = buffer_Sample_AD_Value[sampleTimes];
  2733  0365  1003               	clrc
  2734  0366  0D3C               	rlf	_sampleTimes,w
  2735  0367  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  2736  0368  0084               	movwf	4
  2737  0369  0800               	movf	0,w
  2738  036A  00B6               	movwf	_multiFilterMinValue
  2739  036B  0A84               	incf	4,f
  2740  036C  0800               	movf	0,w
  2741  036D  00B7               	movwf	_multiFilterMinValue+1
  2742  036E                     l3875:	
  2743  036E  3006               	movlw	6
  2744                           
  2745                           ;common.c: 151: sampleTimes++;
  2746  036F  0ABC               	incf	_sampleTimes,f
  2747                           
  2748                           ;common.c: 153: if(sampleTimes >= 6)
  2749  0370  023C               	subwf	_sampleTimes,w
  2750  0371  1C03               	skipc
  2751  0372  0008               	return
  2752                           
  2753                           ;common.c: 154: {
  2754                           ;common.c: 155: sampleTimes = 0;
  2755  0373  01BC               	clrf	_sampleTimes
  2756                           
  2757                           ;common.c: 158: {
  2758                           ;common.c: 160: sampleCH14Value = ((multiFilterSumValue - multiFilterMaxValue - multiFil
      +                          terMinValue))>> 2;
  2759  0374  085B               	movf	_sampleChannelSelect,w
  2760  0375  3A0E               	xorlw	14
  2761  0376  1D03               	skipz
  2762  0377  2B7A               	goto	l3885
  2763                           
  2764                           ;common.c: 161: sampleChannelSelect = 4;
  2765  0378  3004               	movlw	4
  2766  0379  2B82               	goto	L11
  2767  037A                     l3885:	
  2768                           ;common.c: 162: }
  2769                           
  2770                           
  2771                           ;common.c: 164: {
  2772                           ;common.c: 165: sampleCH4Value = ((multiFilterSumValue - multiFilterMaxValue - multiFilt
      +                          erMinValue))>> 2;
  2773  037A  085B               	movf	_sampleChannelSelect,w
  2774  037B  3A04               	xorlw	4
  2775  037C  1D03               	skipz
  2776  037D  2B81               	goto	l3891
  2777                           
  2778                           ;common.c: 166: sampleChannelSelect = 1;
  2779  037E  01DB               	clrf	_sampleChannelSelect
  2780  037F  0ADB               	incf	_sampleChannelSelect,f
  2781                           
  2782                           ;common.c: 167: }
  2783  0380  2B83               	goto	l3895
  2784  0381                     l3891:	
  2785                           
  2786                           ;common.c: 171: sampleChannelSelect = 14;
  2787  0381  300E               	movlw	14
  2788  0382                     L11:	
  2789  0382  00DB               	movwf	_sampleChannelSelect
  2790  0383                     l3895:	
  2791                           ;common.c: 172: }
  2792                           
  2793                           
  2794                           ;common.c: 177: }
  2795                           ;common.c: 179: for(unsigned char index = 0; index < 6;index++)
  2796  0383  01DA               	clrf	AD_Sample@index
  2797  0384                     l3901:	
  2798                           
  2799                           ;common.c: 180: buffer_Sample_AD_Value[index] = 0;
  2800  0384  1003               	clrc
  2801  0385  0D5A               	rlf	AD_Sample@index,w
  2802  0386  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  2803  0387  0084               	movwf	4
  2804  0388  3006               	movlw	6
  2805  0389  0180               	clrf	0
  2806  038A  0A84               	incf	4,f
  2807  038B  0180               	clrf	0
  2808  038C  0ADA               	incf	AD_Sample@index,f
  2809  038D  025A               	subwf	AD_Sample@index,w
  2810  038E  1803               	btfsc	3,0
  2811  038F  0008               	return
  2812  0390  2B84               	goto	l3901
  2813  0391                     __end_of_AD_Sample:	
  2814  0391                     __ptext587:	
  2815 ;; =============== function _clearAllTimer ends ============
  2816                           
  2817                           
  2818 ;; *************** function _getAdOriginalValue *****************
  2819 ;; Defined at:
  2820 ;;		line 78 in file "C:\190604\AK7030-OTP\common.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;		None
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;		None
  2825 ;; Return value:  Size  Location     Type
  2826 ;;                  2    0[BANK0 ] unsigned int 
  2827 ;; Registers used:
  2828 ;;		wreg
  2829 ;; Tracked objects:
  2830 ;;		On entry : 60/0
  2831 ;;		On exit  : 60/0
  2832 ;;		Unchanged: FFF9F/0
  2833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2834 ;;      Params:         0       2       0       0       0
  2835 ;;      Locals:         0       0       0       0       0
  2836 ;;      Temps:          0       0       0       0       0
  2837 ;;      Totals:         0       2       0       0       0
  2838 ;;Total ram usage:        2 bytes
  2839 ;; Hardware stack levels used:    1
  2840 ;; Hardware stack levels required when called:    2
  2841 ;; This function calls:
  2842 ;;		Nothing
  2843 ;; This function is called by:
  2844 ;;		_AD_Sample
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847  0391                     _getAdOriginalValue:	
  2848                           
  2849                           ;common.c: 79: return adc_original_value;
  2850                           
  2851                           ; Regs used in _getAdOriginalValue: [wreg]
  2852  0391  0833               	movf	_adc_original_value+1,w
  2853  0392  00D7               	movwf	?_getAdOriginalValue+1
  2854  0393  0832               	movf	_adc_original_value,w
  2855  0394  00D6               	movwf	?_getAdOriginalValue
  2856  0395  0008               	return
  2857  0396                     __end_of_getAdOriginalValue:	
  2858  0396                     __ptext605:	
  2859 ;; =============== function _dac_init ends ============
  2860                           
  2861                           
  2862 ;; *************** function _adc_test_init *****************
  2863 ;; Defined at:
  2864 ;;		line 85 in file "C:\190604\AK7030-OTP\periph.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;  channel         1    wreg     unsigned char 
  2867 ;;  ref             1    0[BANK0 ] unsigned char 
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;  channel         1    2[BANK0 ] unsigned char 
  2870 ;; Return value:  Size  Location     Type
  2871 ;;		None               void
  2872 ;; Registers used:
  2873 ;;		wreg, status,2, status,0
  2874 ;; Tracked objects:
  2875 ;;		On entry : 60/0
  2876 ;;		On exit  : 60/20
  2877 ;;		Unchanged: FFF9F/0
  2878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2879 ;;      Params:         0       1       0       0       0
  2880 ;;      Locals:         0       1       0       0       0
  2881 ;;      Temps:          0       1       0       0       0
  2882 ;;      Totals:         0       3       0       0       0
  2883 ;;Total ram usage:        3 bytes
  2884 ;; Hardware stack levels used:    1
  2885 ;; Hardware stack levels required when called:    2
  2886 ;; This function calls:
  2887 ;;		Nothing
  2888 ;; This function is called by:
  2889 ;;		_main
  2890 ;;		_process_AD_Converter_Value
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893  0396                     _adc_test_init:	
  2894                           
  2895                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  2896                           ;adc_test_init@channel stored from wreg
  2897  0396  00D8               	movwf	adc_test_init@channel
  2898                           
  2899                           ;periph.c: 86: ADCON0 = 0x00;
  2900  0397  019F               	clrf	31	;volatile
  2901                           
  2902                           ;periph.c: 87: ADCON0|=channel<<2;
  2903  0398  00D7               	movwf	??_adc_test_init
  2904  0399  1003               	clrc
  2905  039A  0DD7               	rlf	??_adc_test_init,f
  2906  039B  1003               	clrc
  2907  039C  0D57               	rlf	??_adc_test_init,w
  2908  039D  049F               	iorwf	31,f	;volatile
  2909                           
  2910                           ;periph.c: 88: ADCON1|=ref<<6;
  2911  039E  0856               	movf	adc_test_init@ref,w
  2912  039F  00D7               	movwf	??_adc_test_init
  2913  03A0  0CD7               	rrf	??_adc_test_init,f
  2914  03A1  0CD7               	rrf	??_adc_test_init,f
  2915  03A2  0C57               	rrf	??_adc_test_init,w
  2916  03A3  39C0               	andlw	192
  2917  03A4  1683               	bsf	3,5	;RP0=1, select bank1
  2918  03A5  049F               	iorwf	31,f	;volatile
  2919                           
  2920                           ;periph.c: 89: ADON=1;
  2921  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  2922  03A7  141F               	bsf	31,0
  2923                           
  2924                           ;periph.c: 90: ADIE=1;
  2925  03A8  1683               	bsf	3,5	;RP0=1, select bank1
  2926  03A9  150D               	bsf	13,2
  2927  03AA  0008               	return
  2928  03AB                     __end_of_adc_test_init:	
  2929  03AB                     __ptext601:	
  2930 ;; =============== function _isPermitSampleTime ends ============
  2931                           
  2932                           
  2933 ;; *************** function _adc_start *****************
  2934 ;; Defined at:
  2935 ;;		line 100 in file "C:\190604\AK7030-OTP\periph.c"
  2936 ;; Parameters:    Size  Location     Type
  2937 ;;		None
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;		None
  2940 ;; Return value:  Size  Location     Type
  2941 ;;		None               void
  2942 ;; Registers used:
  2943 ;;		None
  2944 ;; Tracked objects:
  2945 ;;		On entry : 60/20
  2946 ;;		On exit  : 60/0
  2947 ;;		Unchanged: FFF9F/0
  2948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2949 ;;      Params:         0       0       0       0       0
  2950 ;;      Locals:         0       0       0       0       0
  2951 ;;      Temps:          0       0       0       0       0
  2952 ;;      Totals:         0       0       0       0       0
  2953 ;;Total ram usage:        0 bytes
  2954 ;; Hardware stack levels used:    1
  2955 ;; Hardware stack levels required when called:    2
  2956 ;; This function calls:
  2957 ;;		Nothing
  2958 ;; This function is called by:
  2959 ;;		_main
  2960 ;;		_process_AD_Converter_Value
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963  03AB                     _adc_start:	
  2964  03AB                     l3737:	
  2965                           ; Regs used in _adc_start: []
  2966                           
  2967                           
  2968                           ;periph.c: 101: GO=1;
  2969  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  2970  03AC  149F               	bsf	31,1
  2971  03AD  0008               	return
  2972  03AE                     __end_of_adc_start:	
  2973  03AE                     PL2:	
  2974  03AE  1003               	clrc
  2975  03AF  0D3C               	rlf	_sampleTimes,w
  2976  03B0  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  2977  03B1  0084               	movwf	4
  2978  03B2  0800               	movf	0,w
  2979  03B3  00D8               	movwf	??_AD_Sample
  2980  03B4  0A84               	incf	4,f
  2981  03B5  0800               	movf	0,w
  2982  03B6  00D9               	movwf	??_AD_Sample+1
  2983  03B7  0008               	return
  2984                           
  2985                           	psect	text584
  2986  0420                     __ptext584:	
  2987 ;; =============== function _process_AD_Converter_Value ends ============
  2988                           
  2989                           
  2990 ;; *************** function _clearPinPortAndTimer *****************
  2991 ;; Defined at:
  2992 ;;		line 92 in file "C:\190604\AK7030-OTP\main.c"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;		None
  2995 ;; Auto vars:     Size  Location     Type
  2996 ;;		None
  2997 ;; Return value:  Size  Location     Type
  2998 ;;		None               void
  2999 ;; Registers used:
  3000 ;;		status,2, status,0, pclath, cstack
  3001 ;; Tracked objects:
  3002 ;;		On entry : 60/0
  3003 ;;		On exit  : 60/0
  3004 ;;		Unchanged: FFF9F/0
  3005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3006 ;;      Params:         0       0       0       0       0
  3007 ;;      Locals:         0       0       0       0       0
  3008 ;;      Temps:          0       0       0       0       0
  3009 ;;      Totals:         0       0       0       0       0
  3010 ;;Total ram usage:        0 bytes
  3011 ;; Hardware stack levels used:    1
  3012 ;; Hardware stack levels required when called:    4
  3013 ;; This function calls:
  3014 ;;		_clearAllTimer
  3015 ;; This function is called by:
  3016 ;;		_main
  3017 ;; This function uses a non-reentrant model
  3018 ;;
  3019  0420                     _clearPinPortAndTimer:	
  3020                           
  3021                           ;main.c: 93: PB0 = 0;
  3022                           
  3023                           ; Regs used in _clearPinPortAndTimer: [status,2+status,0+pclath+cstack]
  3024  0420  1006               	bcf	6,0
  3025                           
  3026                           ;main.c: 94: PA0 = 0;
  3027  0421  1005               	bcf	5,0
  3028                           
  3029                           ;main.c: 95: PA1 = 0;
  3030  0422  1085               	bcf	5,1
  3031                           
  3032                           ;main.c: 96: PA2 = 0;
  3033  0423  1105               	bcf	5,2
  3034                           
  3035                           ;main.c: 97: PA3 = 0;
  3036  0424  1185               	bcf	5,3
  3037                           
  3038                           ;main.c: 98: PA7 = 0;
  3039  0425  1385               	bcf	5,7
  3040                           
  3041                           ;main.c: 99: clearAllTimer();
  3042  0426  2C27               	ljmp	l3859
  3043  0427                     __end_of_clearPinPortAndTimer:	
  3044  0427                     __ptext586:	
  3045 ;; =============== function _AD_Sample ends ============
  3046                           
  3047                           
  3048 ;; *************** function _clearAllTimer *****************
  3049 ;; Defined at:
  3050 ;;		line 83 in file "C:\190604\AK7030-OTP\main.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;		None
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;		None
  3055 ;; Return value:  Size  Location     Type
  3056 ;;		None               void
  3057 ;; Registers used:
  3058 ;;		status,2, status,0, pclath, cstack
  3059 ;; Tracked objects:
  3060 ;;		On entry : 60/0
  3061 ;;		On exit  : 60/0
  3062 ;;		Unchanged: FFF9F/0
  3063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3064 ;;      Params:         0       0       0       0       0
  3065 ;;      Locals:         0       0       0       0       0
  3066 ;;      Temps:          0       0       0       0       0
  3067 ;;      Totals:         0       0       0       0       0
  3068 ;;Total ram usage:        0 bytes
  3069 ;; Hardware stack levels used:    1
  3070 ;; Hardware stack levels required when called:    3
  3071 ;; This function calls:
  3072 ;;		_clearTwelveHoursTimer
  3073 ;;		_clearThreeHoursTimer
  3074 ;;		_clearTwentySecondsTimer
  3075 ;; This function is called by:
  3076 ;;		_clearPinPortAndTimer
  3077 ;;		_main
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080  0427                     _clearAllTimer:	
  3081  0427                     l3859:	
  3082                           ; Regs used in _clearAllTimer: [status,2+status,0+pclath+cstack]
  3083                           
  3084                           
  3085                           ;main.c: 84: clearTwelveHoursTimer();
  3086  0427  242C  118A         	fcall	_clearTwelveHoursTimer
  3087                           
  3088                           ;main.c: 85: clearThreeHoursTimer();
  3089  0429  242F  118A         	fcall	_clearThreeHoursTimer
  3090                           
  3091                           ;main.c: 86: clearTwentySecondsTimer();
  3092  042B  2C32               	ljmp	l3697
  3093  042C                     __end_of_clearAllTimer:	
  3094  042C                     __ptext611:	
  3095 ;; =============== function _clearThreeHoursTimer ends ============
  3096                           
  3097                           
  3098 ;; *************** function _clearTwelveHoursTimer *****************
  3099 ;; Defined at:
  3100 ;;		line 215 in file "C:\190604\AK7030-OTP\common.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;		None
  3103 ;; Auto vars:     Size  Location     Type
  3104 ;;		None
  3105 ;; Return value:  Size  Location     Type
  3106 ;;		None               void
  3107 ;; Registers used:
  3108 ;;		status,2
  3109 ;; Tracked objects:
  3110 ;;		On entry : 60/0
  3111 ;;		On exit  : 60/0
  3112 ;;		Unchanged: FFF9F/0
  3113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3114 ;;      Params:         0       0       0       0       0
  3115 ;;      Locals:         0       0       0       0       0
  3116 ;;      Temps:          0       0       0       0       0
  3117 ;;      Totals:         0       0       0       0       0
  3118 ;;Total ram usage:        0 bytes
  3119 ;; Hardware stack levels used:    1
  3120 ;; Hardware stack levels required when called:    2
  3121 ;; This function calls:
  3122 ;;		Nothing
  3123 ;; This function is called by:
  3124 ;;		_clearAllTimer
  3125 ;; This function uses a non-reentrant model
  3126 ;;
  3127  042C                     _clearTwelveHoursTimer:	
  3128                           
  3129                           ;common.c: 216: uiBigTimer = 0;
  3130                           
  3131                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  3132  042C  01F6               	clrf	_uiBigTimer
  3133  042D  01F7               	clrf	_uiBigTimer+1
  3134  042E  0008               	return
  3135  042F                     __end_of_clearTwelveHoursTimer:	
  3136  042F                     __ptext610:	
  3137 ;; =============== function _clearTwentySecondsTimer ends ============
  3138                           
  3139                           
  3140 ;; *************** function _clearThreeHoursTimer *****************
  3141 ;; Defined at:
  3142 ;;		line 221 in file "C:\190604\AK7030-OTP\common.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;		None
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;		None
  3147 ;; Return value:  Size  Location     Type
  3148 ;;		None               void
  3149 ;; Registers used:
  3150 ;;		status,2
  3151 ;; Tracked objects:
  3152 ;;		On entry : 60/0
  3153 ;;		On exit  : 60/0
  3154 ;;		Unchanged: FFF9F/0
  3155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3156 ;;      Params:         0       0       0       0       0
  3157 ;;      Locals:         0       0       0       0       0
  3158 ;;      Temps:          0       0       0       0       0
  3159 ;;      Totals:         0       0       0       0       0
  3160 ;;Total ram usage:        0 bytes
  3161 ;; Hardware stack levels used:    1
  3162 ;; Hardware stack levels required when called:    2
  3163 ;; This function calls:
  3164 ;;		Nothing
  3165 ;; This function is called by:
  3166 ;;		_clearAllTimer
  3167 ;;		_main
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170  042F                     _clearThreeHoursTimer:	
  3171                           
  3172                           ;common.c: 222: uiSmallTimer = 0;
  3173                           
  3174                           ; Regs used in _clearThreeHoursTimer: [status,2]
  3175  042F  01B8               	clrf	_uiSmallTimer
  3176  0430  01B9               	clrf	_uiSmallTimer+1
  3177  0431  0008               	return
  3178  0432                     __end_of_clearThreeHoursTimer:	
  3179  0432                     __ptext609:	
  3180 ;; =============== function _clock_config ends ============
  3181                           
  3182                           
  3183 ;; *************** function _clearTwentySecondsTimer *****************
  3184 ;; Defined at:
  3185 ;;		line 226 in file "C:\190604\AK7030-OTP\common.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;		None
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;		None
  3190 ;; Return value:  Size  Location     Type
  3191 ;;		None               void
  3192 ;; Registers used:
  3193 ;;		status,2
  3194 ;; Tracked objects:
  3195 ;;		On entry : 60/0
  3196 ;;		On exit  : 60/0
  3197 ;;		Unchanged: FFF9F/0
  3198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3199 ;;      Params:         0       0       0       0       0
  3200 ;;      Locals:         0       0       0       0       0
  3201 ;;      Temps:          0       0       0       0       0
  3202 ;;      Totals:         0       0       0       0       0
  3203 ;;Total ram usage:        0 bytes
  3204 ;; Hardware stack levels used:    1
  3205 ;; Hardware stack levels required when called:    2
  3206 ;; This function calls:
  3207 ;;		Nothing
  3208 ;; This function is called by:
  3209 ;;		_clearAllTimer
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212  0432                     _clearTwentySecondsTimer:	
  3213  0432                     l3697:	
  3214                           ; Regs used in _clearTwentySecondsTimer: [status,2]
  3215                           
  3216                           
  3217                           ;common.c: 227: uiTwentySecondsTimer = 0;
  3218  0432  01BA               	clrf	_uiTwentySecondsTimer
  3219  0433  01BB               	clrf	_uiTwentySecondsTimer+1
  3220  0434  0008               	return
  3221  0435                     __end_of_clearTwentySecondsTimer:	
  3222                           
  3223                           	psect	text590
  3224  04A1                     __ptext590:	
  3225 ;; =============== function _getAD_ConvertFlag ends ============
  3226                           
  3227                           
  3228 ;; *************** function _isFinishedThreeHoursTimer *****************
  3229 ;; Defined at:
  3230 ;;		line 265 in file "C:\190604\AK7030-OTP\common.c"
  3231 ;; Parameters:    Size  Location     Type
  3232 ;;		None
  3233 ;; Auto vars:     Size  Location     Type
  3234 ;;		None
  3235 ;; Return value:  Size  Location     Type
  3236 ;;                  1    wreg      unsigned char 
  3237 ;; Registers used:
  3238 ;;		wreg, status,2, status,0
  3239 ;; Tracked objects:
  3240 ;;		On entry : 60/0
  3241 ;;		On exit  : 60/0
  3242 ;;		Unchanged: FFF9F/0
  3243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3244 ;;      Params:         0       0       0       0       0
  3245 ;;      Locals:         0       0       0       0       0
  3246 ;;      Temps:          0       0       0       0       0
  3247 ;;      Totals:         0       0       0       0       0
  3248 ;;Total ram usage:        0 bytes
  3249 ;; Hardware stack levels used:    1
  3250 ;; Hardware stack levels required when called:    2
  3251 ;; This function calls:
  3252 ;;		Nothing
  3253 ;; This function is called by:
  3254 ;;		_main
  3255 ;; This function uses a non-reentrant model
  3256 ;;
  3257  04A1                     _isFinishedThreeHoursTimer:	
  3258                           
  3259                           ;common.c: 266: if(uiSmallTimer == 0)
  3260                           
  3261                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  3262  04A1  0839               	movf	_uiSmallTimer+1,w
  3263  04A2  0438               	iorwf	_uiSmallTimer,w
  3264  04A3  1903               	btfsc	3,2
  3265                           
  3266                           ;common.c: 267: return 1;
  3267  04A4  3401               	retlw	1
  3268                           
  3269                           ;common.c: 268: else
  3270                           ;common.c: 269: return 0;
  3271  04A5  3400               	retlw	0
  3272  04A6                     __end_of_isFinishedThreeHoursTimer:	
  3273                           
  3274                           	psect	text591
  3275  049A                     __ptext591:	
  3276 ;; =============== function _isFinishedThreeHoursTimer ends ============
  3277                           
  3278                           
  3279 ;; *************** function _startThreeHoursTimer *****************
  3280 ;; Defined at:
  3281 ;;		line 232 in file "C:\190604\AK7030-OTP\common.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;		None
  3284 ;; Auto vars:     Size  Location     Type
  3285 ;;		None
  3286 ;; Return value:  Size  Location     Type
  3287 ;;		None               void
  3288 ;; Registers used:
  3289 ;;		wreg
  3290 ;; Tracked objects:
  3291 ;;		On entry : 60/60
  3292 ;;		On exit  : 60/0
  3293 ;;		Unchanged: FFF9F/0
  3294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3295 ;;      Params:         0       0       0       0       0
  3296 ;;      Locals:         0       0       0       0       0
  3297 ;;      Temps:          0       0       0       0       0
  3298 ;;      Totals:         0       0       0       0       0
  3299 ;;Total ram usage:        0 bytes
  3300 ;; Hardware stack levels used:    1
  3301 ;; Hardware stack levels required when called:    2
  3302 ;; This function calls:
  3303 ;;		Nothing
  3304 ;; This function is called by:
  3305 ;;		_main
  3306 ;; This function uses a non-reentrant model
  3307 ;;
  3308  049A                     _startThreeHoursTimer:	
  3309                           
  3310                           ;common.c: 233: uiSmallTimer = 10800;
  3311                           
  3312                           ; Regs used in _startThreeHoursTimer: [wreg]
  3313  049A  3030               	movlw	48
  3314  049B  1283               	bcf	3,5	;RP0=0, select bank0
  3315  049C  1303               	bcf	3,6	;RP1=0, select bank0
  3316  049D  00B8               	movwf	_uiSmallTimer
  3317  049E  302A               	movlw	42
  3318  049F  00B9               	movwf	_uiSmallTimer+1
  3319  04A0  0008               	return
  3320  04A1                     __end_of_startThreeHoursTimer:	
  3321                           
  3322                           	psect	text592
  3323  04A6                     __ptext592:	
  3324 ;; =============== function _startThreeHoursTimer ends ============
  3325                           
  3326                           
  3327 ;; *************** function _isFinishedTwentySecondsTimer *****************
  3328 ;; Defined at:
  3329 ;;		line 248 in file "C:\190604\AK7030-OTP\common.c"
  3330 ;; Parameters:    Size  Location     Type
  3331 ;;		None
  3332 ;; Auto vars:     Size  Location     Type
  3333 ;;		None
  3334 ;; Return value:  Size  Location     Type
  3335 ;;                  1    wreg      unsigned char 
  3336 ;; Registers used:
  3337 ;;		wreg, status,2, status,0
  3338 ;; Tracked objects:
  3339 ;;		On entry : 60/0
  3340 ;;		On exit  : 60/0
  3341 ;;		Unchanged: FFF9F/0
  3342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3343 ;;      Params:         0       0       0       0       0
  3344 ;;      Locals:         0       0       0       0       0
  3345 ;;      Temps:          0       0       0       0       0
  3346 ;;      Totals:         0       0       0       0       0
  3347 ;;Total ram usage:        0 bytes
  3348 ;; Hardware stack levels used:    1
  3349 ;; Hardware stack levels required when called:    2
  3350 ;; This function calls:
  3351 ;;		Nothing
  3352 ;; This function is called by:
  3353 ;;		_main
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356  04A6                     _isFinishedTwentySecondsTimer:	
  3357                           
  3358                           ;common.c: 249: if(0 == uiTwentySecondsTimer)
  3359                           
  3360                           ; Regs used in _isFinishedTwentySecondsTimer: [wreg+status,2+status,0]
  3361  04A6  083B               	movf	_uiTwentySecondsTimer+1,w
  3362  04A7  043A               	iorwf	_uiTwentySecondsTimer,w
  3363  04A8  1903               	btfsc	3,2
  3364                           
  3365                           ;common.c: 250: return 1;
  3366  04A9  3401               	retlw	1
  3367                           
  3368                           ;common.c: 251: else
  3369                           ;common.c: 252: return 0;
  3370  04AA  3400               	retlw	0
  3371  04AB                     __end_of_isFinishedTwentySecondsTimer:	
  3372                           
  3373                           	psect	text593
  3374  04AB                     __ptext593:	
  3375 ;; =============== function _isFinishedTwentySecondsTimer ends ============
  3376                           
  3377                           
  3378 ;; *************** function _getAdOriginaCh4Value *****************
  3379 ;; Defined at:
  3380 ;;		line 89 in file "C:\190604\AK7030-OTP\common.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;		None
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;		None
  3385 ;; Return value:  Size  Location     Type
  3386 ;;                  2    0[BANK0 ] unsigned int 
  3387 ;; Registers used:
  3388 ;;		wreg
  3389 ;; Tracked objects:
  3390 ;;		On entry : 60/0
  3391 ;;		On exit  : 60/0
  3392 ;;		Unchanged: FFF9F/0
  3393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3394 ;;      Params:         0       2       0       0       0
  3395 ;;      Locals:         0       0       0       0       0
  3396 ;;      Temps:          0       0       0       0       0
  3397 ;;      Totals:         0       2       0       0       0
  3398 ;;Total ram usage:        2 bytes
  3399 ;; Hardware stack levels used:    1
  3400 ;; Hardware stack levels required when called:    2
  3401 ;; This function calls:
  3402 ;;		Nothing
  3403 ;; This function is called by:
  3404 ;;		_main
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407  04AB                     _getAdOriginaCh4Value:	
  3408                           
  3409                           ;common.c: 90: return adc_original_CH4_value;
  3410                           
  3411                           ; Regs used in _getAdOriginaCh4Value: [wreg]
  3412  04AB  0831               	movf	_adc_original_CH4_value+1,w
  3413  04AC  00D7               	movwf	?_getAdOriginaCh4Value+1
  3414  04AD  0830               	movf	_adc_original_CH4_value,w
  3415  04AE  00D6               	movwf	?_getAdOriginaCh4Value
  3416  04AF  0008               	return
  3417  04B0                     __end_of_getAdOriginaCh4Value:	
  3418                           
  3419                           	psect	text594
  3420  04CE                     __ptext594:	
  3421 ;; =============== function _getAdOriginaCh4Value ends ============
  3422                           
  3423                           
  3424 ;; *************** function _startTwentySecondsTimer *****************
  3425 ;; Defined at:
  3426 ;;		line 242 in file "C:\190604\AK7030-OTP\common.c"
  3427 ;; Parameters:    Size  Location     Type
  3428 ;;		None
  3429 ;; Auto vars:     Size  Location     Type
  3430 ;;		None
  3431 ;; Return value:  Size  Location     Type
  3432 ;;		None               void
  3433 ;; Registers used:
  3434 ;;		wreg
  3435 ;; Tracked objects:
  3436 ;;		On entry : 60/0
  3437 ;;		On exit  : 60/0
  3438 ;;		Unchanged: FFF9F/0
  3439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3440 ;;      Params:         0       0       0       0       0
  3441 ;;      Locals:         0       0       0       0       0
  3442 ;;      Temps:          0       0       0       0       0
  3443 ;;      Totals:         0       0       0       0       0
  3444 ;;Total ram usage:        0 bytes
  3445 ;; Hardware stack levels used:    1
  3446 ;; Hardware stack levels required when called:    2
  3447 ;; This function calls:
  3448 ;;		Nothing
  3449 ;; This function is called by:
  3450 ;;		_main
  3451 ;; This function uses a non-reentrant model
  3452 ;;
  3453  04CE                     _startTwentySecondsTimer:	
  3454                           
  3455                           ;common.c: 243: uiTwentySecondsTimer = 20;
  3456                           
  3457                           ; Regs used in _startTwentySecondsTimer: [wreg]
  3458  04CE  3014               	movlw	20
  3459  04CF  00BA               	movwf	_uiTwentySecondsTimer
  3460  04D0  01BB               	clrf	_uiTwentySecondsTimer+1
  3461  04D1  0008               	return
  3462  04D2                     __end_of_startTwentySecondsTimer:	
  3463                           
  3464                           	psect	text595
  3465  04B0                     __ptext595:	
  3466 ;; =============== function _startTwentySecondsTimer ends ============
  3467                           
  3468                           
  3469 ;; *************** function _isFinishedTwelveHoursTimer *****************
  3470 ;; Defined at:
  3471 ;;		line 257 in file "C:\190604\AK7030-OTP\common.c"
  3472 ;; Parameters:    Size  Location     Type
  3473 ;;		None
  3474 ;; Auto vars:     Size  Location     Type
  3475 ;;		None
  3476 ;; Return value:  Size  Location     Type
  3477 ;;                  1    wreg      unsigned char 
  3478 ;; Registers used:
  3479 ;;		wreg, status,2, status,0
  3480 ;; Tracked objects:
  3481 ;;		On entry : 60/0
  3482 ;;		On exit  : 60/0
  3483 ;;		Unchanged: FFF9F/0
  3484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3485 ;;      Params:         0       0       0       0       0
  3486 ;;      Locals:         0       0       0       0       0
  3487 ;;      Temps:          0       0       0       0       0
  3488 ;;      Totals:         0       0       0       0       0
  3489 ;;Total ram usage:        0 bytes
  3490 ;; Hardware stack levels used:    1
  3491 ;; Hardware stack levels required when called:    2
  3492 ;; This function calls:
  3493 ;;		Nothing
  3494 ;; This function is called by:
  3495 ;;		_main
  3496 ;; This function uses a non-reentrant model
  3497 ;;
  3498  04B0                     _isFinishedTwelveHoursTimer:	
  3499                           
  3500                           ;common.c: 258: if(uiBigTimer == 0)
  3501                           
  3502                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  3503  04B0  0877               	movf	_uiBigTimer+1,w
  3504  04B1  0476               	iorwf	_uiBigTimer,w
  3505  04B2  1903               	btfsc	3,2
  3506                           
  3507                           ;common.c: 259: return 1;
  3508  04B3  3401               	retlw	1
  3509                           
  3510                           ;common.c: 260: else
  3511                           ;common.c: 261: return 0;
  3512  04B4  3400               	retlw	0
  3513  04B5                     __end_of_isFinishedTwelveHoursTimer:	
  3514                           
  3515                           	psect	text596
  3516  04B5                     __ptext596:	
  3517 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  3518                           
  3519                           
  3520 ;; *************** function _startTwelveHourTimer *****************
  3521 ;; Defined at:
  3522 ;;		line 205 in file "C:\190604\AK7030-OTP\common.c"
  3523 ;; Parameters:    Size  Location     Type
  3524 ;;		None
  3525 ;; Auto vars:     Size  Location     Type
  3526 ;;		None
  3527 ;; Return value:  Size  Location     Type
  3528 ;;		None               void
  3529 ;; Registers used:
  3530 ;;		wreg
  3531 ;; Tracked objects:
  3532 ;;		On entry : 60/0
  3533 ;;		On exit  : 60/0
  3534 ;;		Unchanged: FFF9F/0
  3535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3536 ;;      Params:         0       0       0       0       0
  3537 ;;      Locals:         0       0       0       0       0
  3538 ;;      Temps:          0       0       0       0       0
  3539 ;;      Totals:         0       0       0       0       0
  3540 ;;Total ram usage:        0 bytes
  3541 ;; Hardware stack levels used:    1
  3542 ;; Hardware stack levels required when called:    2
  3543 ;; This function calls:
  3544 ;;		Nothing
  3545 ;; This function is called by:
  3546 ;;		_main
  3547 ;; This function uses a non-reentrant model
  3548 ;;
  3549  04B5                     _startTwelveHourTimer:	
  3550                           
  3551                           ;common.c: 206: uiBigTimer = 43200;
  3552                           
  3553                           ; Regs used in _startTwelveHourTimer: [wreg]
  3554  04B5  30C0               	movlw	192
  3555  04B6  00F6               	movwf	_uiBigTimer
  3556  04B7  30A8               	movlw	168
  3557  04B8  00F7               	movwf	_uiBigTimer+1
  3558  04B9  0008               	return
  3559  04BA                     __end_of_startTwelveHourTimer:	
  3560                           
  3561                           	psect	text597
  3562  04BA                     __ptext597:	
  3563 ;; =============== function _startTwelveHourTimer ends ============
  3564                           
  3565                           
  3566 ;; *************** function _getAdOriginalCh1Value *****************
  3567 ;; Defined at:
  3568 ;;		line 83 in file "C:\190604\AK7030-OTP\common.c"
  3569 ;; Parameters:    Size  Location     Type
  3570 ;;		None
  3571 ;; Auto vars:     Size  Location     Type
  3572 ;;		None
  3573 ;; Return value:  Size  Location     Type
  3574 ;;                  2    0[BANK0 ] unsigned int 
  3575 ;; Registers used:
  3576 ;;		wreg
  3577 ;; Tracked objects:
  3578 ;;		On entry : 60/0
  3579 ;;		On exit  : 60/0
  3580 ;;		Unchanged: FFF9F/0
  3581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3582 ;;      Params:         0       2       0       0       0
  3583 ;;      Locals:         0       0       0       0       0
  3584 ;;      Temps:          0       0       0       0       0
  3585 ;;      Totals:         0       2       0       0       0
  3586 ;;Total ram usage:        2 bytes
  3587 ;; Hardware stack levels used:    1
  3588 ;; Hardware stack levels required when called:    2
  3589 ;; This function calls:
  3590 ;;		Nothing
  3591 ;; This function is called by:
  3592 ;;		_main
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595  04BA                     _getAdOriginalCh1Value:	
  3596                           
  3597                           ;common.c: 84: return adc_original_CH1_value;
  3598                           
  3599                           ; Regs used in _getAdOriginalCh1Value: [wreg]
  3600  04BA  082F               	movf	_adc_original_CH1_value+1,w
  3601  04BB  00D7               	movwf	?_getAdOriginalCh1Value+1
  3602  04BC  082E               	movf	_adc_original_CH1_value,w
  3603  04BD  00D6               	movwf	?_getAdOriginalCh1Value
  3604  04BE  0008               	return
  3605  04BF                     __end_of_getAdOriginalCh1Value:	
  3606                           
  3607                           	psect	text598
  3608  04BF                     __ptext598:	
  3609 ;; =============== function _getAdOriginalCh1Value ends ============
  3610                           
  3611                           
  3612 ;; *************** function _getAdOriginalCh14Value *****************
  3613 ;; Defined at:
  3614 ;;		line 95 in file "C:\190604\AK7030-OTP\common.c"
  3615 ;; Parameters:    Size  Location     Type
  3616 ;;		None
  3617 ;; Auto vars:     Size  Location     Type
  3618 ;;		None
  3619 ;; Return value:  Size  Location     Type
  3620 ;;                  2    0[BANK0 ] unsigned int 
  3621 ;; Registers used:
  3622 ;;		wreg
  3623 ;; Tracked objects:
  3624 ;;		On entry : 60/0
  3625 ;;		On exit  : 60/0
  3626 ;;		Unchanged: FFF9F/0
  3627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3628 ;;      Params:         0       2       0       0       0
  3629 ;;      Locals:         0       0       0       0       0
  3630 ;;      Temps:          0       0       0       0       0
  3631 ;;      Totals:         0       2       0       0       0
  3632 ;;Total ram usage:        2 bytes
  3633 ;; Hardware stack levels used:    1
  3634 ;; Hardware stack levels required when called:    2
  3635 ;; This function calls:
  3636 ;;		Nothing
  3637 ;; This function is called by:
  3638 ;;		_main
  3639 ;; This function uses a non-reentrant model
  3640 ;;
  3641  04BF                     _getAdOriginalCh14Value:	
  3642                           
  3643                           ;common.c: 96: return adc_original_CH14_value;
  3644                           
  3645                           ; Regs used in _getAdOriginalCh14Value: [wreg]
  3646  04BF  082D               	movf	_adc_original_CH14_value+1,w
  3647  04C0  00D7               	movwf	?_getAdOriginalCh14Value+1
  3648  04C1  082C               	movf	_adc_original_CH14_value,w
  3649  04C2  00D6               	movwf	?_getAdOriginalCh14Value
  3650  04C3  0008               	return
  3651  04C4                     __end_of_getAdOriginalCh14Value:	
  3652                           
  3653                           	psect	text599
  3654  04D5                     __ptext599:	
  3655 ;; =============== function _getAdOriginalCh14Value ends ============
  3656                           
  3657                           
  3658 ;; *************** function _clrSampeTime *****************
  3659 ;; Defined at:
  3660 ;;		line 283 in file "C:\190604\AK7030-OTP\common.c"
  3661 ;; Parameters:    Size  Location     Type
  3662 ;;		None
  3663 ;; Auto vars:     Size  Location     Type
  3664 ;;		None
  3665 ;; Return value:  Size  Location     Type
  3666 ;;		None               void
  3667 ;; Registers used:
  3668 ;;		status,2
  3669 ;; Tracked objects:
  3670 ;;		On entry : 0/0
  3671 ;;		On exit  : 0/0
  3672 ;;		Unchanged: FFFFF/0
  3673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3674 ;;      Params:         0       0       0       0       0
  3675 ;;      Locals:         0       0       0       0       0
  3676 ;;      Temps:          0       0       0       0       0
  3677 ;;      Totals:         0       0       0       0       0
  3678 ;;Total ram usage:        0 bytes
  3679 ;; Hardware stack levels used:    1
  3680 ;; Hardware stack levels required when called:    2
  3681 ;; This function calls:
  3682 ;;		Nothing
  3683 ;; This function is called by:
  3684 ;;		_main
  3685 ;; This function uses a non-reentrant model
  3686 ;;
  3687  04D5                     _clrSampeTime:	
  3688                           
  3689                           ;common.c: 284: timer.timer10msStopWatch = 0;
  3690                           
  3691                           ; Regs used in _clrSampeTime: [status,2]
  3692  04D5  01FA               	clrf	_timer
  3693  04D6  0008               	return
  3694  04D7                     __end_of_clrSampeTime:	
  3695                           
  3696                           	psect	text600
  3697  04C4                     __ptext600:	
  3698 ;; =============== function _clrSampeTime ends ============
  3699                           
  3700                           
  3701 ;; *************** function _isPermitSampleTime *****************
  3702 ;; Defined at:
  3703 ;;		line 273 in file "C:\190604\AK7030-OTP\common.c"
  3704 ;; Parameters:    Size  Location     Type
  3705 ;;		None
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;		None
  3708 ;; Return value:  Size  Location     Type
  3709 ;;                  1    wreg      unsigned char 
  3710 ;; Registers used:
  3711 ;;		wreg
  3712 ;; Tracked objects:
  3713 ;;		On entry : 0/0
  3714 ;;		On exit  : 0/0
  3715 ;;		Unchanged: FFFFF/0
  3716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3717 ;;      Params:         0       0       0       0       0
  3718 ;;      Locals:         0       0       0       0       0
  3719 ;;      Temps:          0       0       0       0       0
  3720 ;;      Totals:         0       0       0       0       0
  3721 ;;Total ram usage:        0 bytes
  3722 ;; Hardware stack levels used:    1
  3723 ;; Hardware stack levels required when called:    2
  3724 ;; This function calls:
  3725 ;;		Nothing
  3726 ;; This function is called by:
  3727 ;;		_main
  3728 ;; This function uses a non-reentrant model
  3729 ;;
  3730  04C4                     _isPermitSampleTime:	
  3731                           
  3732                           ;common.c: 274: if(timer.timer10msStopWatch >= 10)
  3733                           
  3734                           ; Regs used in _isPermitSampleTime: [wreg]
  3735  04C4  300A               	movlw	10
  3736  04C5  027A               	subwf	_timer,w
  3737  04C6  1803               	btfsc	3,0
  3738                           
  3739                           ;common.c: 275: {
  3740                           ;common.c: 276: return 1;
  3741  04C7  3401               	retlw	1
  3742                           
  3743                           ;common.c: 278: else
  3744                           ;common.c: 279: return 0;
  3745  04C8  3400               	retlw	0
  3746  04C9                     __end_of_isPermitSampleTime:	
  3747                           
  3748                           	psect	text602
  3749  048A                     __ptext602:	
  3750 ;; =============== function _adc_start ends ============
  3751                           
  3752                           
  3753 ;; *************** function _op2_init *****************
  3754 ;; Defined at:
  3755 ;;		line 45 in file "C:\190604\AK7030-OTP\periph.c"
  3756 ;; Parameters:    Size  Location     Type
  3757 ;;		None
  3758 ;; Auto vars:     Size  Location     Type
  3759 ;;		None
  3760 ;; Return value:  Size  Location     Type
  3761 ;;		None               void
  3762 ;; Registers used:
  3763 ;;		wreg
  3764 ;; Tracked objects:
  3765 ;;		On entry : 17F/20
  3766 ;;		On exit  : 17F/20
  3767 ;;		Unchanged: FFE80/0
  3768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3769 ;;      Params:         0       0       0       0       0
  3770 ;;      Locals:         0       0       0       0       0
  3771 ;;      Temps:          0       0       0       0       0
  3772 ;;      Totals:         0       0       0       0       0
  3773 ;;Total ram usage:        0 bytes
  3774 ;; Hardware stack levels used:    1
  3775 ;; Hardware stack levels required when called:    2
  3776 ;; This function calls:
  3777 ;;		Nothing
  3778 ;; This function is called by:
  3779 ;;		_main
  3780 ;; This function uses a non-reentrant model
  3781 ;;
  3782  048A                     _op2_init:	
  3783                           
  3784                           ;periph.c: 52: OP2CON1=0x10;
  3785                           
  3786                           ; Regs used in _op2_init: [wreg]
  3787  048A  3010               	movlw	16
  3788  048B  009C               	movwf	28	;volatile
  3789                           
  3790                           ;periph.c: 54: OP2CON2=0x10;
  3791  048C  009D               	movwf	29	;volatile
  3792                           
  3793                           ;periph.c: 55: OP2CON0=0x80;
  3794  048D  3080               	movlw	128
  3795  048E  009B               	movwf	27	;volatile
  3796                           
  3797                           ;periph.c: 58: TRISA7=0;
  3798  048F  1385               	bcf	5,7
  3799                           
  3800                           ;periph.c: 60: TRISB7 = 1;
  3801  0490  1786               	bsf	6,7
  3802  0491  0008               	return
  3803  0492                     __end_of_op2_init:	
  3804                           
  3805                           	psect	text603
  3806  046D                     __ptext603:	
  3807 ;; =============== function _op2_init ends ============
  3808                           
  3809                           
  3810 ;; *************** function _op1_init *****************
  3811 ;; Defined at:
  3812 ;;		line 26 in file "C:\190604\AK7030-OTP\periph.c"
  3813 ;; Parameters:    Size  Location     Type
  3814 ;;		None
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;		None
  3817 ;; Return value:  Size  Location     Type
  3818 ;;		None               void
  3819 ;; Registers used:
  3820 ;;		wreg
  3821 ;; Tracked objects:
  3822 ;;		On entry : 17F/20
  3823 ;;		On exit  : 17F/20
  3824 ;;		Unchanged: FFE80/0
  3825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3826 ;;      Params:         0       0       0       0       0
  3827 ;;      Locals:         0       0       0       0       0
  3828 ;;      Temps:          0       0       0       0       0
  3829 ;;      Totals:         0       0       0       0       0
  3830 ;;Total ram usage:        0 bytes
  3831 ;; Hardware stack levels used:    1
  3832 ;; Hardware stack levels required when called:    2
  3833 ;; This function calls:
  3834 ;;		Nothing
  3835 ;; This function is called by:
  3836 ;;		_main
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839  046D                     _op1_init:	
  3840                           
  3841                           ;periph.c: 33: OP1CON1=0x02;
  3842                           
  3843                           ; Regs used in _op1_init: [wreg]
  3844  046D  3002               	movlw	2
  3845  046E  1283               	bcf	3,5	;RP0=0, select bank0
  3846  046F  009C               	movwf	28	;volatile
  3847                           
  3848                           ;periph.c: 34: OP1CON2=0xA0;
  3849  0470  30A0               	movlw	160
  3850  0471  009D               	movwf	29	;volatile
  3851                           
  3852                           ;periph.c: 35: OP1CON0=0x80;
  3853  0472  3080               	movlw	128
  3854  0473  009B               	movwf	27	;volatile
  3855                           
  3856                           ;periph.c: 38: TRISB3=1;
  3857  0474  1683               	bsf	3,5	;RP0=1, select bank1
  3858  0475  1586               	bsf	6,3
  3859                           
  3860                           ;periph.c: 40: TRISB5=0;
  3861  0476  1286               	bcf	6,5
  3862  0477  0008               	return
  3863  0478                     __end_of_op1_init:	
  3864                           
  3865                           	psect	text604
  3866  04C9                     __ptext604:	
  3867 ;; =============== function _op1_init ends ============
  3868                           
  3869                           
  3870 ;; *************** function _dac_init *****************
  3871 ;; Defined at:
  3872 ;;		line 14 in file "C:\190604\AK7030-OTP\periph.c"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;		None
  3875 ;; Auto vars:     Size  Location     Type
  3876 ;;		None
  3877 ;; Return value:  Size  Location     Type
  3878 ;;		None               void
  3879 ;; Registers used:
  3880 ;;		wreg
  3881 ;; Tracked objects:
  3882 ;;		On entry : 17F/20
  3883 ;;		On exit  : 17F/20
  3884 ;;		Unchanged: FFE80/0
  3885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3886 ;;      Params:         0       0       0       0       0
  3887 ;;      Locals:         0       0       0       0       0
  3888 ;;      Temps:          0       0       0       0       0
  3889 ;;      Totals:         0       0       0       0       0
  3890 ;;Total ram usage:        0 bytes
  3891 ;; Hardware stack levels used:    1
  3892 ;; Hardware stack levels required when called:    2
  3893 ;; This function calls:
  3894 ;;		Nothing
  3895 ;; This function is called by:
  3896 ;;		_main
  3897 ;; This function uses a non-reentrant model
  3898 ;;
  3899  04C9                     _dac_init:	
  3900                           
  3901                           ;periph.c: 15: DACCON|=1;
  3902                           
  3903                           ; Regs used in _dac_init: [wreg]
  3904  04C9  1407               	bsf	7,0	;volatile
  3905                           
  3906                           ;periph.c: 17: DACR0=0x0F;
  3907  04CA  300F               	movlw	15
  3908  04CB  0088               	movwf	8	;volatile
  3909                           
  3910                           ;periph.c: 18: DACCON|=(1)<<2;
  3911  04CC  1507               	bsf	7,2	;volatile
  3912  04CD  0008               	return
  3913  04CE                     __end_of_dac_init:	
  3914                           
  3915                           	psect	text606
  3916  04D2                     __ptext606:	
  3917 ;; =============== function _adc_test_init ends ============
  3918                           
  3919                           
  3920 ;; *************** function _timer1_interrupt_config *****************
  3921 ;; Defined at:
  3922 ;;		line 58 in file "C:\190604\AK7030-OTP\common.c"
  3923 ;; Parameters:    Size  Location     Type
  3924 ;;		None
  3925 ;; Auto vars:     Size  Location     Type
  3926 ;;		None
  3927 ;; Return value:  Size  Location     Type
  3928 ;;		None               void
  3929 ;; Registers used:
  3930 ;;		None
  3931 ;; Tracked objects:
  3932 ;;		On entry : 17F/20
  3933 ;;		On exit  : 17F/20
  3934 ;;		Unchanged: FFE80/0
  3935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3936 ;;      Params:         0       0       0       0       0
  3937 ;;      Locals:         0       0       0       0       0
  3938 ;;      Temps:          0       0       0       0       0
  3939 ;;      Totals:         0       0       0       0       0
  3940 ;;Total ram usage:        0 bytes
  3941 ;; Hardware stack levels used:    1
  3942 ;; Hardware stack levels required when called:    2
  3943 ;; This function calls:
  3944 ;;		Nothing
  3945 ;; This function is called by:
  3946 ;;		_main
  3947 ;; This function uses a non-reentrant model
  3948 ;;
  3949  04D2                     _timer1_interrupt_config:	
  3950                           
  3951                           ;common.c: 59: GIE = 1;
  3952                           
  3953                           ; Regs used in _timer1_interrupt_config: []
  3954  04D2  178B               	bsf	11,7
  3955                           
  3956                           ;common.c: 60: PEIE = 1;
  3957  04D3  170B               	bsf	11,6
  3958  04D4  0008               	return
  3959  04D5                     __end_of_timer1_interrupt_config:	
  3960                           
  3961                           	psect	text607
  3962  0478                     __ptext607:	
  3963 ;; =============== function _timer1_interrupt_config ends ============
  3964                           
  3965                           
  3966 ;; *************** function _timer1_config *****************
  3967 ;; Defined at:
  3968 ;;		line 46 in file "C:\190604\AK7030-OTP\common.c"
  3969 ;; Parameters:    Size  Location     Type
  3970 ;;		None
  3971 ;; Auto vars:     Size  Location     Type
  3972 ;;		None
  3973 ;; Return value:  Size  Location     Type
  3974 ;;		None               void
  3975 ;; Registers used:
  3976 ;;		wreg
  3977 ;; Tracked objects:
  3978 ;;		On entry : 17F/40
  3979 ;;		On exit  : 17F/20
  3980 ;;		Unchanged: FFE80/0
  3981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3982 ;;      Params:         0       0       0       0       0
  3983 ;;      Locals:         0       0       0       0       0
  3984 ;;      Temps:          0       0       0       0       0
  3985 ;;      Totals:         0       0       0       0       0
  3986 ;;Total ram usage:        0 bytes
  3987 ;; Hardware stack levels used:    1
  3988 ;; Hardware stack levels required when called:    2
  3989 ;; This function calls:
  3990 ;;		Nothing
  3991 ;; This function is called by:
  3992 ;;		_main
  3993 ;; This function uses a non-reentrant model
  3994 ;;
  3995  0478                     _timer1_config:	
  3996                           
  3997                           ;common.c: 48: TMR1H=0xCF;
  3998                           
  3999                           ; Regs used in _timer1_config: [wreg]
  4000  0478  30CF               	movlw	207
  4001  0479  1303               	bcf	3,6	;RP1=0, select bank0
  4002  047A  008F               	movwf	15	;volatile
  4003                           
  4004                           ;common.c: 49: TMR1L=0x2C;
  4005  047B  302C               	movlw	44
  4006  047C  008E               	movwf	14	;volatile
  4007                           
  4008                           ;common.c: 50: T1CON=0xE1;
  4009  047D  30E1               	movlw	225
  4010  047E  0090               	movwf	16	;volatile
  4011                           
  4012                           ;common.c: 51: TMR1IE=1;
  4013  047F  1683               	bsf	3,5	;RP0=1, select bank1
  4014  0480  140C               	bsf	12,0
  4015  0481  0008               	return
  4016  0482                     __end_of_timer1_config:	
  4017                           
  4018                           	psect	text608
  4019  0492                     __ptext608:	
  4020 ;; =============== function _timer1_config ends ============
  4021                           
  4022                           
  4023 ;; *************** function _clock_config *****************
  4024 ;; Defined at:
  4025 ;;		line 38 in file "C:\190604\AK7030-OTP\common.c"
  4026 ;; Parameters:    Size  Location     Type
  4027 ;;		None
  4028 ;; Auto vars:     Size  Location     Type
  4029 ;;		None
  4030 ;; Return value:  Size  Location     Type
  4031 ;;		None               void
  4032 ;; Registers used:
  4033 ;;		wreg, status,2
  4034 ;; Tracked objects:
  4035 ;;		On entry : 17F/20
  4036 ;;		On exit  : 17F/40
  4037 ;;		Unchanged: FFE80/0
  4038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4039 ;;      Params:         0       0       0       0       0
  4040 ;;      Locals:         0       0       0       0       0
  4041 ;;      Temps:          0       0       0       0       0
  4042 ;;      Totals:         0       0       0       0       0
  4043 ;;Total ram usage:        0 bytes
  4044 ;; Hardware stack levels used:    1
  4045 ;; Hardware stack levels required when called:    2
  4046 ;; This function calls:
  4047 ;;		Nothing
  4048 ;; This function is called by:
  4049 ;;		_main
  4050 ;; This function uses a non-reentrant model
  4051 ;;
  4052  0492                     _clock_config:	
  4053                           
  4054                           ;common.c: 40: CLKPR = 0x80;
  4055                           
  4056                           ; Regs used in _clock_config: [wreg+status,2]
  4057  0492  3080               	movlw	128
  4058  0493  1283               	bcf	3,5	;RP0=0, select bank2
  4059  0494  1703               	bsf	3,6	;RP1=1, select bank2
  4060  0495  0088               	movwf	8	;volatile
  4061                           
  4062                           ;common.c: 41: CLKPR = 0x00;
  4063  0496  0188               	clrf	8	;volatile
  4064  0497                     l1600:	
  4065                           ;common.c: 42: while(CLKPCE);
  4066                           
  4067  0497  1F88               	btfss	8,7
  4068  0498  0008               	return
  4069  0499  2C97               	goto	l1600
  4070  049A                     __end_of_clock_config:	
  4071                           
  4072                           	psect	text612
  4073  03B8                     __ptext612:	
  4074 ;; =============== function _clearTwelveHoursTimer ends ============
  4075                           
  4076                           
  4077 ;; *************** function _ISR *****************
  4078 ;; Defined at:
  4079 ;;		line 288 in file "C:\190604\AK7030-OTP\common.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;		None
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;		None
  4084 ;; Return value:  Size  Location     Type
  4085 ;;		None               void
  4086 ;; Registers used:
  4087 ;;		wreg, status,2, status,0, pclath, cstack
  4088 ;; Tracked objects:
  4089 ;;		On entry : 0/0
  4090 ;;		On exit  : 60/0
  4091 ;;		Unchanged: FFF9F/0
  4092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4093 ;;      Params:         0       0       0       0       0
  4094 ;;      Locals:         0       0       0       0       0
  4095 ;;      Temps:          2       0       0       0       0
  4096 ;;      Totals:         2       0       0       0       0
  4097 ;;Total ram usage:        2 bytes
  4098 ;; Hardware stack levels used:    1
  4099 ;; Hardware stack levels required when called:    1
  4100 ;; This function calls:
  4101 ;;		i1_setAD_ConvertFlag
  4102 ;;		_adc_get
  4103 ;; This function is called by:
  4104 ;;		Interrupt level 1
  4105 ;; This function uses a non-reentrant model
  4106 ;;
  4107  03B8                     _ISR:	
  4108                           
  4109                           ;common.c: 289: static unsigned char ucTimer1sCnt = 0;
  4110                           ;common.c: 291: if(TMR1IF == 1)
  4111  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  4112  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  4113  03BA  1C0C               	btfss	12,0
  4114  03BB  2BE2               	goto	i1l3835
  4115  03BC  3064               	movlw	100
  4116                           
  4117                           ;common.c: 292: {
  4118                           ;common.c: 293: TMR1IF = 0 ;
  4119  03BD  100C               	bcf	12,0
  4120                           
  4121                           ;common.c: 294: timer.timer10msStopWatch++;
  4122  03BE  0AFA               	incf	_timer,f
  4123                           
  4124                           ;common.c: 295: ucTimer1sCnt++;
  4125  03BF  0AF8               	incf	ISR@ucTimer1sCnt,f
  4126                           
  4127                           ;common.c: 297: if(ucTimer1sCnt >= 100)
  4128  03C0  0278               	subwf	ISR@ucTimer1sCnt,w
  4129  03C1  1C03               	skipc
  4130  03C2  2BE2               	goto	i1l3835
  4131                           
  4132                           ;common.c: 298: {
  4133                           ;common.c: 299: ucTimer1sCnt = 0;
  4134  03C3  01F8               	clrf	ISR@ucTimer1sCnt
  4135                           
  4136                           ;common.c: 300: if(uiBigTimer > 0)
  4137  03C4  0877               	movf	_uiBigTimer+1,w
  4138  03C5  0476               	iorwf	_uiBigTimer,w
  4139  03C6  1903               	skipnz
  4140  03C7  2BCE               	goto	i1l1708
  4141                           
  4142                           ;common.c: 301: uiBigTimer--;
  4143  03C8  3001               	movlw	1
  4144  03C9  02F6               	subwf	_uiBigTimer,f
  4145  03CA  3000               	movlw	0
  4146  03CB  1C03               	skipc
  4147  03CC  03F7               	decf	_uiBigTimer+1,f
  4148  03CD  02F7               	subwf	_uiBigTimer+1,f
  4149  03CE                     i1l1708:	
  4150                           
  4151                           ;common.c: 303: if(uiSmallTimer)
  4152  03CE  0839               	movf	_uiSmallTimer+1,w
  4153  03CF  0438               	iorwf	_uiSmallTimer,w
  4154  03D0  1903               	skipnz
  4155  03D1  2BD8               	goto	i1l1709
  4156                           
  4157                           ;common.c: 304: uiSmallTimer--;
  4158  03D2  3001               	movlw	1
  4159  03D3  02B8               	subwf	_uiSmallTimer,f
  4160  03D4  3000               	movlw	0
  4161  03D5  1C03               	skipc
  4162  03D6  03B9               	decf	_uiSmallTimer+1,f
  4163  03D7  02B9               	subwf	_uiSmallTimer+1,f
  4164  03D8                     i1l1709:	
  4165                           
  4166                           ;common.c: 306: if(uiTwentySecondsTimer)
  4167  03D8  083B               	movf	_uiTwentySecondsTimer+1,w
  4168  03D9  043A               	iorwf	_uiTwentySecondsTimer,w
  4169  03DA  1903               	skipnz
  4170  03DB  2BE2               	goto	i1l3835
  4171                           
  4172                           ;common.c: 307: uiTwentySecondsTimer--;
  4173  03DC  3001               	movlw	1
  4174  03DD  02BA               	subwf	_uiTwentySecondsTimer,f
  4175  03DE  3000               	movlw	0
  4176  03DF  1C03               	skipc
  4177  03E0  03BB               	decf	_uiTwentySecondsTimer+1,f
  4178  03E1  02BB               	subwf	_uiTwentySecondsTimer+1,f
  4179  03E2                     i1l3835:	
  4180                           
  4181                           ;common.c: 308: }
  4182                           ;common.c: 309: }
  4183                           ;common.c: 311: if(ADIF)
  4184  03E2  1D0D               	btfss	13,2
  4185  03E3  2C0B               	goto	i1l1716
  4186  03E4  3001               	movlw	1
  4187                           
  4188                           ;common.c: 312: {
  4189                           ;common.c: 313: ADIF=0;
  4190  03E5  110D               	bcf	13,2
  4191                           
  4192                           ;common.c: 314: setAD_ConvertFlag(1);
  4193  03E6  241D  118A         	fcall	i1_setAD_ConvertFlag
  4194                           
  4195                           ;common.c: 315: adc_original_value = adc_get();
  4196  03E8  2412  118A         	fcall	_adc_get
  4197  03EA  0871               	movf	?_adc_get+1,w
  4198  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  4199  03EC  00B3               	movwf	_adc_original_value+1
  4200  03ED  0870               	movf	?_adc_get,w
  4201  03EE  00B2               	movwf	_adc_original_value
  4202                           
  4203                           ;common.c: 316: if(sampleChannelSelect == 4)
  4204  03EF  085B               	movf	_sampleChannelSelect,w
  4205  03F0  3A04               	xorlw	4
  4206  03F1  1D03               	skipz
  4207  03F2  2BFB               	goto	i1l3847
  4208                           
  4209                           ;common.c: 317: adc_original_CH4_value = adc_get();
  4210  03F3  2412  118A         	fcall	_adc_get
  4211  03F5  0871               	movf	?_adc_get+1,w
  4212  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  4213  03F7  00B1               	movwf	_adc_original_CH4_value+1
  4214  03F8  0870               	movf	?_adc_get,w
  4215  03F9  00B0               	movwf	_adc_original_CH4_value
  4216  03FA  2C0B               	goto	i1l1716
  4217  03FB                     i1l3847:	
  4218                           
  4219                           ;common.c: 318: else if(sampleChannelSelect == 1)
  4220  03FB  0B5B               	decfsz	_sampleChannelSelect,w
  4221  03FC  2C05               	goto	i1l3851
  4222                           
  4223                           ;common.c: 319: adc_original_CH1_value = adc_get();
  4224  03FD  2412  118A         	fcall	_adc_get
  4225  03FF  0871               	movf	?_adc_get+1,w
  4226  0400  1283               	bcf	3,5	;RP0=0, select bank0
  4227  0401  00AF               	movwf	_adc_original_CH1_value+1
  4228  0402  0870               	movf	?_adc_get,w
  4229  0403  00AE               	movwf	_adc_original_CH1_value
  4230  0404  2C0B               	goto	i1l1716
  4231  0405                     i1l3851:	
  4232                           
  4233                           ;common.c: 320: else
  4234                           ;common.c: 321: adc_original_CH14_value = adc_get();
  4235  0405  2412               	fcall	_adc_get
  4236  0406  0871               	movf	?_adc_get+1,w
  4237  0407  1283               	bcf	3,5	;RP0=0, select bank0
  4238  0408  00AD               	movwf	_adc_original_CH14_value+1
  4239  0409  0870               	movf	?_adc_get,w
  4240  040A  00AC               	movwf	_adc_original_CH14_value
  4241  040B                     i1l1716:	
  4242  040B  0875               	movf	??_ISR+1,w
  4243  040C  008A               	movwf	10
  4244  040D  0E74               	swapf	??_ISR^(0+-128),w
  4245  040E  0083               	movwf	3
  4246  040F  0EFE               	swapf	126,f
  4247  0410  0E7E               	swapf	126,w
  4248  0411  0009               	retfie
  4249  0412                     __end_of_ISR:	
  4250  0412                     __ptext614:	
  4251 ;; =============== function i1_setAD_ConvertFlag ends ============
  4252                           
  4253                           
  4254 ;; *************** function _adc_get *****************
  4255 ;; Defined at:
  4256 ;;		line 105 in file "C:\190604\AK7030-OTP\periph.c"
  4257 ;; Parameters:    Size  Location     Type
  4258 ;;		None
  4259 ;; Auto vars:     Size  Location     Type
  4260 ;;  val             2    2[COMMON] unsigned int 
  4261 ;; Return value:  Size  Location     Type
  4262 ;;                  2    0[COMMON] unsigned int 
  4263 ;; Registers used:
  4264 ;;		wreg
  4265 ;; Tracked objects:
  4266 ;;		On entry : 60/0
  4267 ;;		On exit  : 60/20
  4268 ;;		Unchanged: FFF9F/0
  4269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4270 ;;      Params:         2       0       0       0       0
  4271 ;;      Locals:         2       0       0       0       0
  4272 ;;      Temps:          0       0       0       0       0
  4273 ;;      Totals:         4       0       0       0       0
  4274 ;;Total ram usage:        4 bytes
  4275 ;; Hardware stack levels used:    1
  4276 ;; This function calls:
  4277 ;;		Nothing
  4278 ;; This function is called by:
  4279 ;;		_ISR
  4280 ;; This function uses a non-reentrant model
  4281 ;;
  4282  0412                     _adc_get:	
  4283                           
  4284                           ;periph.c: 106: unsigned int val;
  4285                           ;periph.c: 107: val = (ADRESH<<8) | ADRESL;
  4286                           
  4287                           ; Regs used in _adc_get: [wreg]
  4288  0412  081E               	movf	30,w	;volatile
  4289  0413  00F3               	movwf	adc_get@val+1
  4290  0414  01F2               	clrf	adc_get@val
  4291  0415  1683               	bsf	3,5	;RP0=1, select bank1
  4292  0416  081E               	movf	30,w	;volatile
  4293  0417  04F2               	iorwf	adc_get@val,f
  4294                           
  4295                           ;periph.c: 108: return val;
  4296  0418  0873               	movf	adc_get@val+1,w
  4297  0419  00F1               	movwf	?_adc_get+1
  4298  041A  0872               	movf	adc_get@val,w
  4299  041B  00F0               	movwf	?_adc_get
  4300  041C  0008               	return
  4301  041D                     __end_of_adc_get:	
  4302  041D                     __ptext613:	
  4303 ;; =============== function _ISR ends ============
  4304                           
  4305                           
  4306 ;; *************** function i1_setAD_ConvertFlag *****************
  4307 ;; Defined at:
  4308 ;;		line 72 in file "C:\190604\AK7030-OTP\common.c"
  4309 ;; Parameters:    Size  Location     Type
  4310 ;;  setAD_Conver    1    wreg     unsigned char 
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  4313 ;; Return value:  Size  Location     Type
  4314 ;;		None               void
  4315 ;; Registers used:
  4316 ;;		wreg
  4317 ;; Tracked objects:
  4318 ;;		On entry : 60/0
  4319 ;;		On exit  : 60/0
  4320 ;;		Unchanged: FFF9F/0
  4321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4322 ;;      Params:         0       0       0       0       0
  4323 ;;      Locals:         1       0       0       0       0
  4324 ;;      Temps:          0       0       0       0       0
  4325 ;;      Totals:         1       0       0       0       0
  4326 ;;Total ram usage:        1 bytes
  4327 ;; Hardware stack levels used:    1
  4328 ;; This function calls:
  4329 ;;		Nothing
  4330 ;; This function is called by:
  4331 ;;		_ISR
  4332 ;; This function uses a non-reentrant model
  4333 ;;
  4334  041D                     i1_setAD_ConvertFlag:	
  4335                           
  4336                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  4337                           ;i1setAD_ConvertFlag@flag stored from wreg
  4338  041D  00F0               	movwf	i1setAD_ConvertFlag@flag
  4339                           
  4340                           ;common.c: 73: adc_convert_flag = flag;
  4341  041E  00F9               	movwf	_adc_convert_flag
  4342  041F  0008               	return
  4343  0420                     __end_ofi1_setAD_ConvertFlag:	
  4344                           
  4345                           	psect	intentry
  4346  0004                     __pintentry:	
  4347                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  4348                           
  4349  0004                     interrupt_function:	
  4350  007E                     saved_w	set	btemp
  4351  0004  00FE               	movwf	btemp
  4352  0005  0E03               	swapf	3,w
  4353  0006  00F4               	movwf	??_ISR
  4354  0007  080A               	movf	10,w
  4355  0008  00F5               	movwf	??_ISR+1
  4356  0009  118A  2BB8         	ljmp	_ISR
  4357                           
  4358                           	psect	text615
  4359  0000                     __ptext615:	
  4360 ;; =============== function _adc_get ends ============
  4361                           
  4362  007E                     btemp	set	126	;btemp
  4363  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon Jun 17 13:15:23 2019

                       ??_clock_config 0056                                      pc 0002  
                                   _GO 00F9                                     fsr 0004  
                  ?_getAdOriginalValue 0056               ?_timer1_interrupt_config 0070  
                                  l703 0064                                    l712 007C  
                                  l831 0198                                    l807 0164  
                                  l680 0000                                    l752 00EE  
                                  l737 00EC                                    l907 029A  
                                  l852 01CB                                    l780 012A  
                                  l677 0000                                    l880 0242  
                                  _PA0 0028                                    _PA1 0029  
                                  _GIE 005F                                    _PB0 0030  
                                  _PA2 002A                                    _PB1 0031  
                                  _PA3 002B                                    _PB2 0032  
                                  _PA6 002E                                    _PA7 002F  
                                  _PB6 0036                                    _ISR 03B8  
                                  u915 0350                                    u925 0363  
                                  fsr0 0004                                    indf 0000  
               ??_startThreeHoursTimer 0056                                   S4661 0461  
                                 S4657 0445                                   S4659 0453  
                                 ?_ISR 0070                     __size_of_AD_Sample 0063  
               ?_getAdOriginalCh1Value 0056                                   l1600 0497  
                                 l4001 0000                                   l1603 0000  
                                 l4011 00B3                                   l4003 00A5  
                                 l1612 0000                                   l1701 0000  
                                 l1621 0000                                   l4013 00B6  
                                 l4005 0000                                   l1606 0000  
                                 l2350 0000                                   l1615 0000  
                                 l4103 0132                                   l4031 00EA  
                                 l4023 00D2                                   l4015 00B9  
                                 l4007 00AA                                   l1624 0000  
                                 l1640 035B                                   l1609 0000  
                                 l2361 0000                                   l2353 0000  
                                 l4033 00EF                                   l4009 00B0  
                                 l1618 0000                                   l2347 0000  
                                 l1627 0000                                   l4203 0185  
                                 l4107 0134                                   l4043 00F8  
                                 l4035 00F1                                   l4027 00DE  
                                 l4019 00C5                                   l4301 0000  
                                 l4221 01A2                                   l4213 018C  
                                 l4109 0136                                   l4045 00FA  
                                 l2367 0000                                   l1663 0000  
                                 l4311 0227                                   l4215 019B  
                                 l4119 013C                                   l4055 0100  
                                 l4039 00F6                                   l1672 0000  
                                 l4321 0000                                   l4313 0000  
                                 l4305 021A                                   l4225 01A4  
                                 l4217 019D                                   l4161 0166  
                                 l4129 0142                                   l4065 0106  
                                 l1666 0000                                   l1675 0000  
                                 l4411 0000                                   l4403 02C6  
                                 l4331 0000                                   l4323 0000  
                                 l4315 0000                                   l4307 0221  
                                 l4227 01A6                                   l4171 016F  
                                 l4163 0168                                   l4139 0148  
                                 l4075 010C                                   l1669 0000  
                                 l3701 0000                                   l4421 0000  
                                 l4413 0000                                   l4405 02C7  
                                 l4341 0000                                   l4333 0000  
                                 l4325 024B                                   l4261 01D1  
                                 l4237 01AC                                   l4173 0171  
                                 l4149 0151                                   l4085 0116  
                                 l1678 0000                                   l3703 0000  
                                 l3711 0000                                   l4431 0000  
                                 l4423 0000                                   l4415 0000  
                                 l4351 0262                                   l4343 0000  
                                 l4335 0000                                   l4271 01DA  
                                 l4247 01B3                                   l4183 0177  
                                 l4167 016D                                   l4159 0158  
                                 l4095 011E                                   l4319 0231  
                                 l3705 0000                                   l3713 0000  
                                 l3721 0000                                   l4425 0000  
                                 l4417 0000                                   l4409 0000  
                                 l4361 0000                                   l4337 0000  
                                 l4345 025A                                   l4329 0251  
                                 l4281 01E0                                   l4265 01D6  
                                 l4257 01BA                                   l4193 017D  
                                 l4097 012B                                   l4089 011C  
                                 l3707 0000                                   l3715 0000  
                                 l3723 0000                                   l3731 0000  
                                 l3811 0000                                   l4435 02E1  
                                 l4427 0000                                   l4419 0000  
                                 l4363 0000                                   l4355 026E  
                                 l4339 0000                                   l4291 01E7  
                                 l4259 01CF                                   l4099 012D  
                                 l3717 0000                                   l3709 0000  
                                 l3725 0000                                   l3733 0000  
                                 l3813 0000                                   l3901 0384  
                                 l4429 0000                                   l4373 0285  
                                 l4365 0000                                   l4357 026F  
                                 l4269 01D8                                   l3719 0000  
                                 l3727 0000                                   l3735 0000  
                                 l3751 0000                                   l3807 0000  
                                 l3903 0000                                   l3911 0000  
                                 l4391 02B1                                   l4375 0286  
                                 l4359 0000                                   l4295 01F5  
                                 l4439 02EC                                   l3729 0000  
                                 l3737 03AB                                   l3753 0000  
                                 l3761 0000                                   l3905 0000  
                                 l3921 031B                                   l4393 02B2  
                                 l4385 028F                                   l4377 0000  
                                 l4369 0279                                   l4297 0206  
                                 l3739 0000                                   l3763 0000  
                                 l3907 0000                                   l3923 0000  
                                 l3915 0000                                   l4387 02A5  
                                 l4379 028B                                   l3931 0000  
                                 l3693 0000                                   l3757 0000  
                                 l3781 0000                                   l3861 0000  
                                 l3909 0000                                   l3925 0321  
                                 l3917 0000                                   l4397 0000  
                                 l3941 0000                                   l3933 0000  
                                 l3695 0000                                   l3775 0000  
                                 l4399 02BA                                   l3951 0000  
                                 l3943 0000                                   l3935 0000  
                                 l3697 0432                                   l3777 0000  
                                 l3793 0000                                   l3881 0000  
                                 l3865 0000                                   l3953 0050  
                                 l3945 0042                                   l3937 0000  
                                 l3929 0000                                   l3699 0000  
                                 l3795 0000                                   l3859 0427  
                                 l3891 0381                                   l3875 036E  
                                 l3971 0000                                   l3963 0062  
                                 l3947 0000                                   l3939 0000  
                                 l3885 037A                                   l3877 0000  
                                 l3869 0349                                   l3973 0076  
                                 l3965 0065                                   l3957 005C  
                                 l3895 0383                                   l3991 0092  
                                 l3983 008B                                   l3975 0078  
                                 l3959 005D                                   _ADIE 046A  
                                 _ADIF 006A                                   l3985 008C  
                                 l3977 0000                                   l3969 006B  
                                 l3995 009E                                   l3987 0000  
                                 l3979 007F                                   l3997 009F  
                                 l3989 0000                                   l3999 0000  
                                 _ADON 00F8                                   _PEIE 005E  
                 ??_getAdOriginalValue 0058                                   _main 000D  
                                 btemp 007E                _clearTwentySecondsTimer 0432  
                                 start 000B                ?_getAdOriginalCh14Value 0056  
                    main@ucTimerDelay1 004C                      main@ucTimerDelay2 004D  
                    main@ucTimerDelay3 004E                      main@ucTimerDelay4 004F  
                                ??_ISR 0074             __end_of_isPermitSampleTime 04C9  
                  _sampleChannelSelect 005B                 ??_getAdOriginaCh4Value 0058  
                                ?_main 0070                                  _DACR0 0088  
                                _CLKPR 0108                                  _T1CON 0010  
                      __end_of_adc_get 041D                                  _PAOD7 0C3F  
                                _PBOD6 0C46                                  _TMR1H 000F  
                                _TMR1L 000E                  setAD_ConvertFlag@flag 0056  
                                _timer 007A                                  pclath 000A  
                                status 0003                                  wtemp0 007E  
       __end_of_getAdOriginalCh14Value 04C4          __size_of_startTwelveHourTimer 0005  
                 __end_of_clrSampeTime 04D7                  __end_of_clearAllTimer 042C  
                         __end_of_main 030A                 __size_of_adc_test_init 0015  
                    __end_of_AD_Sample 0391                                 ??_main 005B  
                 _clearPinPortAndTimer 0420                                 _ADCON0 001F  
                               _ADCON1 009F                   __end_of_clock_config 049A  
                               _DACCON 0087                                 _ADRESH 001E  
                               _ADRESL 009E                                 _CLKPCE 0847  
                               i1l1615 0000                                 i1l2370 0000  
                               i1l1716 040B                                 i1l1708 03CE  
                               i1l1709 03D8                                 i1l3821 0000  
                               i1l3823 0000                                 i1l3841 0000  
                               i1l3817 0000                                 i1l3851 0405  
                               i1l3843 0000                                 i1l3827 0000  
                               i1l3835 03E2                                 i1l3853 0000  
                               i1l3847 03FB                                 i1l3839 0000  
                               i1l3857 0000                                 i1l3849 0000  
                     __end_of_dac_init 04CE              ??_clearTwentySecondsTimer 0056  
                               _TMR1IE 0460                                 _TMR1IF 0060  
                    _getAD_ConvertFlag 0327                      _setAD_ConvertFlag 0329  
                               _TRISA0 0428                                 _TRISA1 0429  
                               _TRISB0 0430                                 _TRISA2 042A  
                               _TRISB1 0431                                 _TRISA3 042B  
                               _TRISB2 0432                                 _TRISB3 0433  
                               _TRISB4 0434                                 _TRISA6 042E  
                               _TRISB5 0435                                 _TRISA7 042F  
                               _TRISB7 0437                          main@ucTimer1s 0048  
                   ?_getAD_ConvertFlag 0070                     ?_setAD_ConvertFlag 0070  
                     __end_of_op1_init 0478                       __end_of_op2_init 0492  
          ??_isFinishedThreeHoursTimer 0056          __size_of_clearThreeHoursTimer 0003  
                            ??_adc_get 0072                    ??_getAD_ConvertFlag 0056  
                  ??_setAD_ConvertFlag 0056                                 clrloop 0483  
                ?_clearPinPortAndTimer 0070                                 saved_w 007E  
              ??_clearTwelveHoursTimer 0056            ?_process_AD_Converter_Value 0070  
                        _adc_test_init 0396       __size_of_startTwentySecondsTimer 0004  
            __end_of_getAD_ConvertFlag 0329              __end_of_setAD_ConvertFlag 032E  
                   __size_of_adc_start 0003                         __pcstackCOMMON 0070  
                         __pidataBANK0 0000        __end_of_clearTwentySecondsTimer 0435  
                  main@ucTimerRightP5s 0051              _isFinishedThreeHoursTimer 04A1  
              ??_getAdOriginalCh1Value 0058                _adc_original_CH14_value 002C  
                __end_of_timer1_config 0482                         ?_adc_test_init 0056  
     __size_of_timer1_interrupt_config 0003                  __size_of_clrSampeTime 0002  
                           __pbssBANK0 0020           __size_ofi1_setAD_ConvertFlag 0003  
                           adc_get@val 0072                             __pmaintext 000D  
                           __pintentry 0004                    main@enumInteralStep 003F  
                            ?_dac_init 0070                 ??_clearPinPortAndTimer 0056  
                __size_of_clock_config 0008                                _OP1CON0 001B  
                              _OP1CON1 001C                                _OP1CON2 001D  
                              _OP2CON0 009B                                _OP2CON1 009C  
                              _OP2CON2 009D                           _clrSampeTime 04D5  
                    __end_of_adc_start 03AE                   _uiTwentySecondsTimer 003A  
                            ?_op1_init 0070                              ?_op2_init 0070  
                   _isPermitSampleTime 04C4                 _buffer_Sample_AD_Value 0020  
                   _adc_original_value 0032          __size_of_startThreeHoursTimer 0007  
           __size_of_getAD_ConvertFlag 0002             __size_of_setAD_ConvertFlag 0005  
                       main@ucTimer20s 0049            __size_of_getAdOriginalValue 0005  
                       main@ucTimerP3s 0050                    ?_isPermitSampleTime 0070  
                           _uiBigTimer 0076                           _clock_config 0492  
                              _adc_get 0412                    _multiFilterMaxValue 0034  
 __end_of_isFinishedTwentySecondsTimer 04AB  __size_of_isFinishedTwentySecondsTimer 0005  
         _isFinishedTwentySecondsTimer 04A6                    _multiFilterMinValue 0036  
                 ??_isPermitSampleTime 0056           __end_of_startTwelveHourTimer 04BA  
                           ??_dac_init 0056                              _AD_Sample 032E  
                         __size_of_ISR 005A          __size_of_getAdOriginaCh4Value 0005  
                      ??_adc_test_init 0057                             ??_op1_init 0056  
                           ??_op2_init 0056                _startTwentySecondsTimer 04CE  
                 end_of_initialization 0442                       main@ucLoaderStep 0043  
                           ?_AD_Sample 0070          ?_isFinishedTwentySecondsTimer 0070  
                 main@enumMainLoopStep 0040                     main@ucChannel4Type 0042  
         ??_isFinishedTwelveHoursTimer 0056                       _adc_convert_flag 0079  
               __size_of_clearAllTimer 0005           __end_of_clearThreeHoursTimer 0432  
               main@ucTimerADC1ZeroP5s 004A         __size_of_clearTwelveHoursTimer 0003  
              _timer1_interrupt_config 04D2          __end_of_clearTwelveHoursTimer 042F  
   __size_of_isFinishedThreeHoursTimer 0005                         AD_Sample@index 005A  
                     main@ucTimerX1P5s 0052                       main@ucTimerX2P5s 0053  
               main@ucTimerZeroPoint3s 0054                 main@ucTimerZeroPoint5s 0055  
                     main@ucTimerDelay 004B                        main@ucADC4_Step 0041  
  __size_of_isFinishedTwelveHoursTimer 0005                    i1_setAD_ConvertFlag 041D  
            ??_startTwentySecondsTimer 0056                    start_initialization 0435  
                          __end_of_ISR 0412               ?_clearTwentySecondsTimer 0070  
       __size_of_getAdOriginalCh1Value 0005          __end_of_getAdOriginalCh1Value 04BF  
             ??_getAdOriginalCh14Value 0058                   ?i1_setAD_ConvertFlag 0070  
                 _startTwelveHourTimer 04B5      __end_of_isFinishedThreeHoursTimer 04A6  
                   main@enumBranchStep 003E                          _clearAllTimer 0427  
                          __pdataBANK0 005B                            ??_AD_Sample 0058  
            ??_timer1_interrupt_config 0056                            __pbssCOMMON 0076  
                    __size_of_dac_init 0005                          __pcstackBANK0 0056  
       ??_isFinishedTwentySecondsTimer 0056                              _adc_start 03AB  
                    __size_of_op1_init 000B                      __size_of_op2_init 0008  
                ??i1_setAD_ConvertFlag 0070                  ?_startTwelveHourTimer 0070  
      __end_of_startTwentySecondsTimer 04D2                         ?_clearAllTimer 0070  
               __size_of_timer1_config 000A                   _clearThreeHoursTimer 042F  
         __end_of_startThreeHoursTimer 04A1                              __ptext600 04C4  
                            __ptext601 03AB                              __ptext610 042F  
                            __ptext602 048A                              __ptext611 042C  
                            __ptext603 046D                              __ptext612 03B8  
                            __ptext604 04C9                              __ptext613 041D  
                            __ptext605 0396                              __ptext614 0412  
                            __ptext606 04D2                              __ptext615 0000  
                            __ptext607 0478                              __ptext608 0492  
                            __ptext609 0432                              __ptext590 04A1  
                            __ptext591 049A                              __ptext583 030A  
                            __ptext592 04A6                              __ptext584 0420  
                            __ptext593 04AB                              __ptext585 032E  
                            __ptext594 04CE                              __ptext586 0427  
                            __ptext595 04B0                              __ptext587 0391  
                            __ptext596 04B5                              __ptext588 0329  
                            __ptext597 04BA                              __ptext589 0327  
                            __ptext598 04BF                              __ptext599 04D5  
                             ?_adc_get 0070                 _adc_original_CH1_value 002E  
               _adc_original_CH4_value 0030                              __pswtext1 0445  
                            __pswtext2 0453                              __pswtext3 0461  
   __end_of_isFinishedTwelveHoursTimer 04B5             _isFinishedTwelveHoursTimer 04B0  
                      ISR@ucTimer1sCnt 0078          __size_of_clearPinPortAndTimer 0007  
           __end_of_getAdOriginalValue 0396                             ?_adc_start 0070  
      __size_of_getAdOriginalCh14Value 0005                      interrupt_function 0004  
         __end_of_getAdOriginaCh4Value 04B0        __end_of_timer1_interrupt_config 04D5  
                ?_clearThreeHoursTimer 0070                   adc_test_init@channel 0058  
          __size_of_isPermitSampleTime 0005                           _uiSmallTimer 0038  
                __end_of_adc_test_init 03AB                          _timer1_config 0478  
         ??_process_AD_Converter_Value 005B                 ??_startTwelveHourTimer 0056  
                      ??_clearAllTimer 0056                 _getAdOriginalCh14Value 04BF  
                     __size_of_adc_get 000B    __size_of_process_AD_Converter_Value 001D  
                             _dac_init 04C9                       main@cTimer1s_806 003D  
                       ?_timer1_config 0070                               _op1_init 046D  
                             _op2_init 048A                            ??_adc_start 0056  
                 _startThreeHoursTimer 049A                  _clearTwelveHoursTimer 042C  
                        __size_of_main 02FD                               clear_ram 0482  
               ??_clearThreeHoursTimer 0056       __size_of_clearTwentySecondsTimer 0003  
                        ?_clrSampeTime 0070                   _getAdOriginaCh4Value 04AB  
                          _sampleTimes 003C                  ?_startThreeHoursTimer 0070  
                             intlevel1 0000                  _getAdOriginalCh1Value 04BA  
           ?_isFinishedThreeHoursTimer 0070                      main@ucLoaderStep1 0044  
                    main@ucLoaderStep2 0045                      main@ucLoaderStep3 0046  
                    main@ucLoaderStep4 0047                          ?_clock_config 0070  
             ?_startTwentySecondsTimer 0070                i1setAD_ConvertFlag@flag 0070  
                       ??_clrSampeTime 0056            ?_isFinishedTwelveHoursTimer 0070  
                ?_getAdOriginaCh4Value 0056                        ??_timer1_config 0056  
          __end_ofi1_setAD_ConvertFlag 0420     __end_of_process_AD_Converter_Value 0327  
           _process_AD_Converter_Value 030A                 ?_clearTwelveHoursTimer 0070  
                     adc_test_init@ref 0056           __end_of_clearPinPortAndTimer 0427  
                   _getAdOriginalValue 0391  
