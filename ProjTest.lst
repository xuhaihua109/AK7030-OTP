

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Tue Aug 20 22:44:04 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,delta=2
    16                           	psect	swtext1,local,class=CONST,delta=2
    17                           	psect	swtext2,local,class=CONST,delta=2
    18                           	psect	swtext3,local,class=CONST,delta=2
    19                           	psect	swtext4,local,class=CONST,delta=2
    20                           	psect	text885,local,class=CODE,delta=2
    21                           	psect	text886,local,class=CODE,delta=2
    22                           	psect	text889,local,class=CODE,delta=2
    23                           	psect	text896,local,class=CODE,delta=2
    24                           	psect	text897,local,class=CODE,delta=2
    25                           	psect	text898,local,class=CODE,delta=2
    26                           	psect	text899,local,class=CODE,delta=2
    27                           	psect	text900,local,class=CODE,delta=2
    28                           	psect	text901,local,class=CODE,delta=2
    29                           	psect	text902,local,class=CODE,delta=2
    30                           	psect	text903,local,class=CODE,delta=2
    31                           	psect	text904,local,class=CODE,delta=2
    32                           	psect	text905,local,class=CODE,delta=2
    33                           	psect	text906,local,class=CODE,delta=2
    34                           	psect	text908,local,class=CODE,delta=2
    35                           	psect	text909,local,class=CODE,delta=2
    36                           	psect	text910,local,class=CODE,delta=2
    37                           	psect	text912,local,class=CODE,delta=2
    38                           	psect	text913,local,class=CODE,delta=2
    39                           	psect	text914,local,class=CODE,delta=2
    40                           	psect	text925,local,class=CODE,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	text929,local,class=CODE,delta=2
    43                           	psect	pa_nodes,global,class=CODE,delta=2
    44                           	dabs	1,0x7E,2
    45  000A                     	;#
    46                           
    47                           	psect	config
    48  2000  2FFF               	dw	12287	;#
    49  2001  3FDE               	dw	16350	;#
    50  2002  3FF8               	dw	16376	;#
    51                           
    52                           	psect	idataBANK0
    53  0000                     __pidataBANK0:	
    54  001F                     _ADCON0	set	31
    55  001E                     _ADRESH	set	30
    56  001B                     _OP1CON0	set	27
    57  001C                     _OP1CON1	set	28
    58  001D                     _OP1CON2	set	29
    59  0010                     _T1CON	set	16
    60  000F                     _TMR1H	set	15
    61  000E                     _TMR1L	set	14
    62  006A                     _ADIF	set	106
    63  00F8                     _ADON	set	248
    64  005F                     _GIE	set	95
    65  00F9                     _GO	set	249
    66  0028                     _PA0	set	40
    67  0029                     _PA1	set	41
    68  002A                     _PA2	set	42
    69  002B                     _PA3	set	43
    70  002E                     _PA6	set	46
    71  0030                     _PB0	set	48
    72  0031                     _PB1	set	49
    73  0036                     _PB6	set	54
    74  0037                     _PB7	set	55
    75  005E                     _PEIE	set	94
    76  0060                     _TMR1IF	set	96
    77  009F                     _ADCON1	set	159
    78  009E                     _ADRESL	set	158
    79  0087                     _DACCON	set	135
    80  0088                     _DACR0	set	136
    81  009B                     _OP2CON0	set	155
    82  009C                     _OP2CON1	set	156
    83  009D                     _OP2CON2	set	157
    84  046A                     _ADIE	set	1130
    85  0460                     _TMR1IE	set	1120
    86  0428                     _TRISA0	set	1064
    87  0429                     _TRISA1	set	1065
    88  042A                     _TRISA2	set	1066
    89  042B                     _TRISA3	set	1067
    90  042E                     _TRISA6	set	1070
    91  042F                     _TRISA7	set	1071
    92  0430                     _TRISB0	set	1072
    93  0431                     _TRISB1	set	1073
    94  0432                     _TRISB2	set	1074
    95  0433                     _TRISB3	set	1075
    96  0434                     _TRISB4	set	1076
    97  0435                     _TRISB5	set	1077
    98  0436                     _TRISB6	set	1078
    99  0437                     _TRISB7	set	1079
   100  0108                     _CLKPR	set	264
   101  0847                     _CLKPCE	set	2119
   102  0C46                     _PBOD6	set	3142
   103  0C47                     _PBOD7	set	3143
   104                           
   105                           	psect	cinit
   106  07A9                     start_initialization:	
   107  07A9  3048               	movlw	low __pbssBANK0
   108                           
   109                           ; Clear objects allocated to COMMON
   110  07AA  01FD               	clrf	__pbssCOMMON& (0+127)
   111                           
   112                           ; Clear objects allocated to BANK0
   113  07AB  1383               	bcf	3,7	;select IRP bank0
   114  07AC  0084               	movwf	4
   115  07AD  306E               	movlw	low (__pbssBANK0+38)
   116  07AE  158A  27A2  118A   	fcall	clear_ram
   117                           
   118                           ; Clear objects allocated to BANK1
   119  07B1  30A0               	movlw	low __pbssBANK1
   120  07B2  0084               	movwf	4
   121  07B3  30EC               	movlw	low (__pbssBANK1+76)
   122  07B4  158A  27A2  118A   	fcall	clear_ram
   123  07B7  3090               	movlw	low __pbssBANK3
   124                           
   125                           ; Clear objects allocated to BANK3
   126  07B8  1783               	bsf	3,7	;select IRP bank2
   127  07B9  0084               	movwf	4
   128  07BA  30A8               	movlw	low (__pbssBANK3+24)
   129  07BB  158A  27A2         	fcall	clear_ram
   130                           
   131                           ;initializer for _sampleChannelSelect
   132  07BD  300E               	movlw	14
   133  07BE  00EE               	movwf	__pdataBANK0& (0+127)
   134  07BF                     end_of_initialization:	
   135                           ;End of C runtime variable initialization code
   136                           
   137  07BF  0183               	clrf	3
   138  07C0  118A  2813         	ljmp	_main	;jump to C main() function
   139                           
   140                           	psect	bssCOMMON
   141  007D                     __pbssCOMMON:	
   142  007D                     vPutSampleDataIntoTable@ucChannelFirstLength:	
   143  007D                     	ds	1
   144                           
   145                           	psect	bssBANK0
   146  0048                     __pbssBANK0:	
   147  0048                     main@uiOldValue:	
   148  0048                     	ds	2
   149  004A                     _bBigTimerStartFlag:	
   150  004A                     	ds	1
   151  004B                     _bSmallTimerStartFlag:	
   152  004B                     	ds	1
   153  004C                     _bTwentyMinStartFlag:	
   154  004C                     	ds	1
   155  004D                     _bTwentySecStartFlag:	
   156  004D                     	ds	1
   157  004E                     _sampleTimes:	
   158  004E                     	ds	1
   159  004F                     main@bCheckTweHour:	
   160  004F                     	ds	1
   161  0050                     main@bInit20Min:	
   162  0050                     	ds	1
   163  0051                     main@bInitFlag:	
   164  0051                     	ds	1
   165  0052                     main@enumMainLoopStep:	
   166  0052                     	ds	1
   167  0053                     main@ucADC4_Step:	
   168  0053                     	ds	1
   169  0054                     main@ucChannel4Type:	
   170  0054                     	ds	1
   171  0055                     main@ucDelayPrefix4TimerP5s:	
   172  0055                     	ds	1
   173  0056                     main@ucLoaderStep:	
   174  0056                     	ds	1
   175  0057                     main@ucLoaderStep1:	
   176  0057                     	ds	1
   177  0058                     main@ucLoaderStep2:	
   178  0058                     	ds	1
   179  0059                     main@ucLoaderStep3:	
   180  0059                     	ds	1
   181  005A                     main@ucLoaderStep4:	
   182  005A                     	ds	1
   183  005B                     main@ucTimerADC1ZeroP5s:	
   184  005B                     	ds	1
   185  005C                     main@ucTimerDelay:	
   186  005C                     	ds	1
   187  005D                     main@ucTimerDelay1:	
   188  005D                     	ds	1
   189  005E                     main@ucTimerDelay2:	
   190  005E                     	ds	1
   191  005F                     main@ucTimerDelay3:	
   192  005F                     	ds	1
   193  0060                     main@ucTimerDelay4:	
   194  0060                     	ds	1
   195  0061                     main@ucTimerDelayP2sLess:	
   196  0061                     	ds	1
   197  0062                     main@ucTimerDelayP2sMore:	
   198  0062                     	ds	1
   199  0063                     main@ucTimerForDACR0_CNT1:	
   200  0063                     	ds	1
   201  0064                     main@ucTimerForDACR0_CNT1_f:	
   202  0064                     	ds	1
   203  0065                     main@ucTimerForDACR0_CNT2:	
   204  0065                     	ds	1
   205  0066                     main@ucTimerForDACR0_CNT2_f:	
   206  0066                     	ds	1
   207  0067                     main@ucTimerLessADC1ZeroP5s:	
   208  0067                     	ds	1
   209  0068                     main@ucTimerP5s:	
   210  0068                     	ds	1
   211  0069                     main@ucTimerRightP5s:	
   212  0069                     	ds	1
   213  006A                     main@ucTimerZeroPoint3s:	
   214  006A                     	ds	1
   215  006B                     main@ucTimerZeroPoint5s:	
   216  006B                     	ds	1
   217  006C                     vPutSampleDataIntoTable@ucChannelFourteenthLength:	
   218  006C                     	ds	1
   219  006D                     vPutSampleDataIntoTable@ucChannelFourthLength:	
   220  006D                     	ds	1
   221                           
   222                           	psect	dataBANK0
   223  006E                     __pdataBANK0:	
   224  006E                     _sampleChannelSelect:	
   225  006E                     	ds	1
   226                           
   227                           	psect	bssBANK1
   228  00A0                     __pbssBANK1:	
   229  00A0                     _uiBigTimer:	
   230  00A0                     	ds	2
   231  00A2                     _uiSmallTimer:	
   232  00A2                     	ds	2
   233  00A4                     _uiTwentyMinTimer:	
   234  00A4                     	ds	2
   235  00A6                     _uiTwentySecondsTimer:	
   236  00A6                     	ds	2
   237  00A8                     main@uiMaxValue:	
   238  00A8                     	ds	2
   239  00AA                     main@uiMinValue:	
   240  00AA                     	ds	2
   241  00AC                     ISR@ucTimer1sCnt:	
   242  00AC                     	ds	1
   243  00AD                     _adc_convert_flag:	
   244  00AD                     	ds	1
   245  00AE                     _timer:	
   246  00AE                     	ds	1
   247  00AF                     main@enumBranchStep:	
   248  00AF                     	ds	1
   249  00B0                     main@enumInteralStep:	
   250  00B0                     	ds	1
   251  00B1                     main@ucCheckTimerP2sLess:	
   252  00B1                     	ds	1
   253  00B2                     main@ucCheckTimerP2sMore:	
   254  00B2                     	ds	1
   255  00B3                     main@ucDelayPrefix6TimerP2s:	
   256  00B3                     	ds	1
   257  00B4                     main@ucFourthSuffix1TimerP3s:	
   258  00B4                     	ds	1
   259  00B5                     main@ucTimer1s:	
   260  00B5                     	ds	1
   261  00B6                     main@ucTimer20s:	
   262  00B6                     	ds	1
   263  00B7                     main@ucTimerLessX1P5s:	
   264  00B7                     	ds	1
   265  00B8                     main@ucTimerLessX2P5s:	
   266  00B8                     	ds	1
   267  00B9                     main@ucTimerP3s:	
   268  00B9                     	ds	1
   269  00BA                     main@ucTimerX1P5s:	
   270  00BA                     	ds	1
   271  00BB                     main@ucTimerX2P5s:	
   272  00BB                     	ds	1
   273  00BC                     _uiSampleChannelFirst:	
   274  00BC                     	ds	24
   275  00D4                     _uiSampleChannelFourth:	
   276  00D4                     	ds	24
   277                           
   278                           	psect	bssBANK3
   279  0190                     __pbssBANK3:	
   280  0190                     _uiSampleChannelFourteenth:	
   281  0190                     	ds	24
   282                           
   283                           	psect	clrtext
   284  0FA2                     clear_ram:	
   285                           ;	Called with FSR containing the base address, and
   286                           ;	W with the last address+1
   287                           
   288  0FA2  0064               	clrwdt	;clear the watchdog before getting into this loop
   289  0FA3                     clrloop:	
   290  0FA3  0180               	clrf	0	;clear RAM location pointed to by FSR
   291  0FA4  0A84               	incf	4,f	;increment pointer
   292  0FA5  0604               	xorwf	4,w	;XOR with final address
   293  0FA6  1903               	btfsc	3,2	;have we reached the end yet?
   294  0FA7  3400               	retlw	0	;all done for this memory range, return
   295  0FA8  0604               	xorwf	4,w	;XOR again to restore value
   296  0FA9  2FA3               	goto	clrloop	;do the next byte
   297                           
   298                           	psect	cstackCOMMON
   299  0070                     __pcstackCOMMON:	
   300  0070                     ?_clearTwelveHoursTimer:	
   301  0070                     ?_clearThreeHoursTimer:	
   302                           ; 0 bytes @ 0x0
   303                           
   304  0070                     ?_clearTwentySecondsTimer:	
   305                           ; 0 bytes @ 0x0
   306                           
   307  0070                     ?_clock_config:	
   308                           ; 0 bytes @ 0x0
   309                           
   310  0070                     ?_timer1_config:	
   311                           ; 0 bytes @ 0x0
   312                           
   313  0070                     ?_timer1_interrupt_config:	
   314                           ; 0 bytes @ 0x0
   315                           
   316  0070                     ?_dac_init:	
   317                           ; 0 bytes @ 0x0
   318                           
   319  0070                     ?_op1_init:	
   320                           ; 0 bytes @ 0x0
   321                           
   322  0070                     ?_op2_init:	
   323                           ; 0 bytes @ 0x0
   324                           
   325  0070                     ?_adc_start:	
   326                           ; 0 bytes @ 0x0
   327                           
   328  0070                     ?_process_AD_Converter_Value:	
   329                           ; 0 bytes @ 0x0
   330                           
   331  0070                     ?_clrSampeTime:	
   332                           ; 0 bytes @ 0x0
   333                           
   334  0070                     ?_clearTwentyMinTimer:	
   335                           ; 0 bytes @ 0x0
   336                           
   337  0070                     ?_startTwentySecondsTimer:	
   338                           ; 0 bytes @ 0x0
   339                           
   340  0070                     ?_AD_Sample:	
   341                           ; 0 bytes @ 0x0
   342                           
   343  0070                     ?_clearAllTimer:	
   344                           ; 0 bytes @ 0x0
   345                           
   346  0070                     ?_setPB0:	
   347                           ; 0 bytes @ 0x0
   348                           
   349  0070                     ?_setPB1:	
   350                           ; 0 bytes @ 0x0
   351                           
   352  0070                     ?_setPA0:	
   353                           ; 0 bytes @ 0x0
   354                           
   355  0070                     ?_setPA1:	
   356                           ; 0 bytes @ 0x0
   357                           
   358  0070                     ?_setPA2:	
   359                           ; 0 bytes @ 0x0
   360                           
   361  0070                     ?_setPA3:	
   362                           ; 0 bytes @ 0x0
   363                           
   364  0070                     ?_setPA6:	
   365                           ; 0 bytes @ 0x0
   366                           
   367  0070                     ?_clearPinPortAndTimer:	
   368                           ; 0 bytes @ 0x0
   369                           
   370  0070                     ?_initPin:	
   371                           ; 0 bytes @ 0x0
   372                           
   373  0070                     ?_main:	
   374                           ; 0 bytes @ 0x0
   375                           
   376  0070                     ?_setAD_ConvertFlag:	
   377                           ; 0 bytes @ 0x0
   378                           
   379  0070                     ?_ISR:	
   380                           ; 0 bytes @ 0x0
   381                           
   382  0070                     ?i1_setAD_ConvertFlag:	
   383                           ; 0 bytes @ 0x0
   384                           
   385  0070                     ??i1_setAD_ConvertFlag:	
   386                           ; 0 bytes @ 0x0
   387                           
   388  0070                     ?_isPermitSampleTime:	
   389                           ; 0 bytes @ 0x0
   390                           
   391  0070                     ?_isFinishedTwentyMinTimer:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0070                     ?_isFinishedTwelveHoursTimer:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0070                     ?_isFinishedTwentySecondsTimer:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     ?_isFinishedThreeHoursTimer:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ?_getAD_ConvertFlag:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ?_adc_get:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     i1setAD_ConvertFlag@flag:	
   410                           ; 2 bytes @ 0x0
   411                           
   412                           
   413                           ; 1 bytes @ 0x0
   414  0070                     	ds	2
   415  0072                     ??_adc_get:	
   416  0072                     adc_get@val:	
   417                           ; 0 bytes @ 0x2
   418                           
   419                           
   420                           ; 2 bytes @ 0x2
   421  0072                     	ds	2
   422  0074                     ?_vPutSampleDataIntoTable:	
   423  0074                     vPutSampleDataIntoTable@uiSampleData:	
   424                           ; 0 bytes @ 0x4
   425                           
   426                           
   427                           ; 2 bytes @ 0x4
   428  0074                     	ds	2
   429  0076                     vPutSampleDataIntoTable@channel:	
   430                           
   431                           ; 1 bytes @ 0x6
   432  0076                     	ds	1
   433  0077                     ??_vPutSampleDataIntoTable:	
   434  0077                     vPutSampleDataIntoTable@i:	
   435                           ; 0 bytes @ 0x7
   436                           
   437                           
   438                           ; 2 bytes @ 0x7
   439  0077                     	ds	2
   440  0079                     ??_ISR:	
   441                           
   442                           ; 0 bytes @ 0x9
   443  0079                     	ds	4
   444                           
   445                           	psect	cstackBANK0
   446  0020                     __pcstackBANK0:	
   447  0020                     ??_clearTwelveHoursTimer:	
   448  0020                     ??_clearThreeHoursTimer:	
   449                           ; 0 bytes @ 0x0
   450                           
   451  0020                     ??_clearTwentySecondsTimer:	
   452                           ; 0 bytes @ 0x0
   453                           
   454  0020                     ??_clock_config:	
   455                           ; 0 bytes @ 0x0
   456                           
   457  0020                     ??_timer1_config:	
   458                           ; 0 bytes @ 0x0
   459                           
   460  0020                     ??_timer1_interrupt_config:	
   461                           ; 0 bytes @ 0x0
   462                           
   463  0020                     ?_adc_test_init:	
   464                           ; 0 bytes @ 0x0
   465                           
   466  0020                     ??_dac_init:	
   467                           ; 0 bytes @ 0x0
   468                           
   469  0020                     ??_op1_init:	
   470                           ; 0 bytes @ 0x0
   471                           
   472  0020                     ??_op2_init:	
   473                           ; 0 bytes @ 0x0
   474                           
   475  0020                     ??_adc_start:	
   476                           ; 0 bytes @ 0x0
   477                           
   478  0020                     ??_isPermitSampleTime:	
   479                           ; 0 bytes @ 0x0
   480                           
   481  0020                     ??_clrSampeTime:	
   482                           ; 0 bytes @ 0x0
   483                           
   484  0020                     ?_startTwentyMinTimer:	
   485                           ; 0 bytes @ 0x0
   486                           
   487  0020                     ??_clearTwentyMinTimer:	
   488                           ; 0 bytes @ 0x0
   489                           
   490  0020                     ??_isFinishedTwentyMinTimer:	
   491                           ; 0 bytes @ 0x0
   492                           
   493  0020                     ?_startTwelveHourTimer:	
   494                           ; 0 bytes @ 0x0
   495                           
   496  0020                     ??_isFinishedTwelveHoursTimer:	
   497                           ; 0 bytes @ 0x0
   498                           
   499  0020                     ??_startTwentySecondsTimer:	
   500                           ; 0 bytes @ 0x0
   501                           
   502  0020                     ??_isFinishedTwentySecondsTimer:	
   503                           ; 0 bytes @ 0x0
   504                           
   505  0020                     ?_startThreeHoursTimer:	
   506                           ; 0 bytes @ 0x0
   507                           
   508  0020                     ??_isFinishedThreeHoursTimer:	
   509                           ; 0 bytes @ 0x0
   510                           
   511  0020                     ??_AD_Sample:	
   512                           ; 0 bytes @ 0x0
   513                           
   514  0020                     ??_clearAllTimer:	
   515                           ; 0 bytes @ 0x0
   516                           
   517  0020                     ??_setPB0:	
   518                           ; 0 bytes @ 0x0
   519                           
   520  0020                     ??_setPB1:	
   521                           ; 0 bytes @ 0x0
   522                           
   523  0020                     ??_setPA0:	
   524                           ; 0 bytes @ 0x0
   525                           
   526  0020                     ??_setPA1:	
   527                           ; 0 bytes @ 0x0
   528                           
   529  0020                     ??_setPA2:	
   530                           ; 0 bytes @ 0x0
   531                           
   532  0020                     ??_setPA3:	
   533                           ; 0 bytes @ 0x0
   534                           
   535  0020                     ??_setPA6:	
   536                           ; 0 bytes @ 0x0
   537                           
   538  0020                     ??_getAD_ConvertFlag:	
   539                           ; 0 bytes @ 0x0
   540                           
   541  0020                     ??_setAD_ConvertFlag:	
   542                           ; 0 bytes @ 0x0
   543                           
   544  0020                     ?_Filter:	
   545                           ; 0 bytes @ 0x0
   546                           
   547  0020                     setPB0@bValue:	
   548                           ; 2 bytes @ 0x0
   549                           
   550  0020                     setPB1@bValue:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0020                     setPA0@bValue:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0020                     setPA1@bValue:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0020                     setPA2@bValue:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0020                     setPA3@bValue:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0020                     setPA6@bValue:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0020                     setAD_ConvertFlag@flag:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0020                     adc_test_init@ref:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0020                     Filter@tmpValue:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0020                     startTwelveHourTimer@uiSetTime:	
   578                           ; 2 bytes @ 0x0
   579                           
   580  0020                     startThreeHoursTimer@uiSetTime:	
   581                           ; 2 bytes @ 0x0
   582                           
   583  0020                     startTwentyMinTimer@uiSetValue:	
   584                           ; 2 bytes @ 0x0
   585                           
   586                           
   587                           ; 2 bytes @ 0x0
   588  0020                     	ds	1
   589  0021                     ??_adc_test_init:	
   590  0021                     ??_clearPinPortAndTimer:	
   591                           ; 0 bytes @ 0x1
   592                           
   593  0021                     ??_initPin:	
   594                           ; 0 bytes @ 0x1
   595                           
   596                           
   597                           ; 0 bytes @ 0x1
   598  0021                     	ds	1
   599  0022                     ??_startTwentyMinTimer:	
   600  0022                     ??_startTwelveHourTimer:	
   601                           ; 0 bytes @ 0x2
   602                           
   603  0022                     ??_startThreeHoursTimer:	
   604                           ; 0 bytes @ 0x2
   605                           
   606  0022                     ??_Filter:	
   607                           ; 0 bytes @ 0x2
   608                           
   609  0022                     adc_test_init@channel:	
   610                           ; 0 bytes @ 0x2
   611                           
   612                           
   613                           ; 1 bytes @ 0x2
   614  0022                     	ds	1
   615  0023                     ??_process_AD_Converter_Value:	
   616                           
   617                           ; 0 bytes @ 0x3
   618  0023                     	ds	3
   619  0026                     Filter@filter_buf:	
   620                           
   621                           ; 24 bytes @ 0x6
   622  0026                     	ds	24
   623  003E                     Filter@filter_temp:	
   624                           
   625                           ; 2 bytes @ 0x1E
   626  003E                     	ds	2
   627  0040                     Filter@filter_sum:	
   628                           
   629                           ; 2 bytes @ 0x20
   630  0040                     	ds	2
   631  0042                     Filter@cir:	
   632                           
   633                           ; 2 bytes @ 0x22
   634  0042                     	ds	2
   635  0044                     Filter@j:	
   636                           
   637                           ; 1 bytes @ 0x24
   638  0044                     	ds	1
   639  0045                     Filter@i:	
   640                           
   641                           ; 1 bytes @ 0x25
   642  0045                     	ds	1
   643  0046                     ?_getAdOriginalCh14Value:	
   644  0046                     ?_getAdOriginalCh1Value:	
   645                           ; 2 bytes @ 0x26
   646                           
   647  0046                     ?_getAdOriginaCh4Value:	
   648                           ; 2 bytes @ 0x26
   649                           
   650                           
   651                           ; 2 bytes @ 0x26
   652  0046                     	ds	2
   653  0048                     ??_getAdOriginalCh14Value:	
   654  0048                     ??_getAdOriginalCh1Value:	
   655                           ; 0 bytes @ 0x28
   656                           
   657  0048                     ??_getAdOriginaCh4Value:	
   658                           ; 0 bytes @ 0x28
   659                           
   660  0048                     ??_main:	
   661                           ; 0 bytes @ 0x28
   662                           
   663                           
   664                           	psect	maintext
   665  0013                     __pmaintext:	
   666                           ; 0 bytes @ 0x28
   667 ;;Data sizes: Strings 0, constant 0, data 1, bss 139, persistent 0 stack 0
   668 ;;Auto spaces:   Size  Autos    Used
   669 ;; COMMON          14     13      14
   670 ;; BANK0           80     40      79
   671 ;; BANK1           80      0      76
   672 ;; BANK3           96      0      24
   673 ;; BANK2           96      0       0
   674 ;;
   675 ;; Pointer list with targets:
   676 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   677 ;;
   678 ;; ?_getAdOriginalCh14Value	unsigned int  size(1) Largest target is 0
   679 ;;
   680 ;; ?_getAdOriginaCh4Value	unsigned int  size(1) Largest target is 0
   681 ;;
   682 ;; ?_getAdOriginalCh1Value	unsigned int  size(1) Largest target is 0
   683 ;;
   684 ;; ?_Filter	unsigned int  size(1) Largest target is 0
   685 ;;
   686 ;; Filter@tmpValue	PTR int  size(2) Largest target is 24
   687 ;;		 -> uiSampleChannelFourteenth(BANK3[24]), uiSampleChannelFourth(BANK1[24]), uiSampleChannelFirst(BANK1[24]), 
   688 ;;
   689 ;;
   690 ;; Critical Paths under _main in COMMON
   691 ;;
   692 ;;   None.
   693 ;;
   694 ;; Critical Paths under _ISR in COMMON
   695 ;;
   696 ;;   _ISR->_vPutSampleDataIntoTable
   697 ;;   _vPutSampleDataIntoTable->_adc_get
   698 ;;
   699 ;; Critical Paths under _main in BANK0
   700 ;;
   701 ;;   _main->_getAdOriginalCh14Value
   702 ;;   _main->_getAdOriginalCh1Value
   703 ;;   _main->_getAdOriginaCh4Value
   704 ;;   _clearPinPortAndTimer->_setPB0
   705 ;;   _clearPinPortAndTimer->_setPA0
   706 ;;   _clearPinPortAndTimer->_setPA1
   707 ;;   _clearPinPortAndTimer->_setPA2
   708 ;;   _clearPinPortAndTimer->_setPA3
   709 ;;   _getAdOriginaCh4Value->_Filter
   710 ;;   _getAdOriginalCh1Value->_Filter
   711 ;;   _getAdOriginalCh14Value->_Filter
   712 ;;   _process_AD_Converter_Value->_adc_test_init
   713 ;;   _initPin->_setPA0
   714 ;;   _initPin->_setPA1
   715 ;;   _initPin->_setPA2
   716 ;;   _initPin->_setPA3
   717 ;;   _initPin->_setPB0
   718 ;;   _initPin->_setPB1
   719 ;;   _initPin->_setPA6
   720 ;;
   721 ;; Critical Paths under _ISR in BANK0
   722 ;;
   723 ;;   None.
   724 ;;
   725 ;; Critical Paths under _main in BANK1
   726 ;;
   727 ;;   None.
   728 ;;
   729 ;; Critical Paths under _ISR in BANK1
   730 ;;
   731 ;;   None.
   732 ;;
   733 ;; Critical Paths under _main in BANK3
   734 ;;
   735 ;;   None.
   736 ;;
   737 ;; Critical Paths under _ISR in BANK3
   738 ;;
   739 ;;   None.
   740 ;;
   741 ;; Critical Paths under _main in BANK2
   742 ;;
   743 ;;   None.
   744 ;;
   745 ;; Critical Paths under _ISR in BANK2
   746 ;;
   747 ;;   None.
   748 ;;
   749 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   750 ;;
   751 ;;
   752 ;;Call Graph Tables:
   753 ;;
   754 ;; ---------------------------------------------------------------------------------
   755 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   756 ;; ---------------------------------------------------------------------------------
   757 ;; (0) _main                                                 0     0      0    2454
   758 ;;                            _initPin
   759 ;;                       _clock_config
   760 ;;                      _timer1_config
   761 ;;            _timer1_interrupt_config
   762 ;;                      _adc_test_init
   763 ;;                           _dac_init
   764 ;;                           _op1_init
   765 ;;                           _op2_init
   766 ;;                          _adc_start
   767 ;;         _process_AD_Converter_Value
   768 ;;                 _isPermitSampleTime
   769 ;;                       _clrSampeTime
   770 ;;             _getAdOriginalCh14Value
   771 ;;                _startTwentyMinTimer
   772 ;;                _clearTwentyMinTimer
   773 ;;           _isFinishedTwentyMinTimer
   774 ;;               _clearPinPortAndTimer
   775 ;;                             _setPA6
   776 ;;              _getAdOriginalCh1Value
   777 ;;               _startTwelveHourTimer
   778 ;;         _isFinishedTwelveHoursTimer
   779 ;;               _getAdOriginaCh4Value
   780 ;;                             _setPB0
   781 ;;                             _setPA0
   782 ;;                             _setPA1
   783 ;;                             _setPA2
   784 ;;                             _setPA3
   785 ;;            _startTwentySecondsTimer
   786 ;;       _isFinishedTwentySecondsTimer
   787 ;;            _clearTwentySecondsTimer
   788 ;;               _startThreeHoursTimer
   789 ;;          _isFinishedThreeHoursTimer
   790 ;;               _clearThreeHoursTimer
   791 ;;                             _setPB1
   792 ;;                      _clearAllTimer
   793 ;; ---------------------------------------------------------------------------------
   794 ;; (1) _clearPinPortAndTimer                                 0     0      0     110
   795 ;;                             _setPB0
   796 ;;                             _setPA0
   797 ;;                             _setPA1
   798 ;;                             _setPA2
   799 ;;                             _setPA3
   800 ;;                      _clearAllTimer
   801 ;; ---------------------------------------------------------------------------------
   802 ;; (1) _getAdOriginaCh4Value                                 2     0      2     620
   803 ;;                                             38 BANK0      2     0      2
   804 ;;                             _Filter
   805 ;; ---------------------------------------------------------------------------------
   806 ;; (1) _getAdOriginalCh1Value                                2     0      2     620
   807 ;;                                             38 BANK0      2     0      2
   808 ;;                             _Filter
   809 ;; ---------------------------------------------------------------------------------
   810 ;; (1) _getAdOriginalCh14Value                               2     0      2     620
   811 ;;                                             38 BANK0      2     0      2
   812 ;;                             _Filter
   813 ;; ---------------------------------------------------------------------------------
   814 ;; (1) _process_AD_Converter_Value                           0     0      0      66
   815 ;;                  _getAD_ConvertFlag
   816 ;;                  _setAD_ConvertFlag
   817 ;;                          _AD_Sample
   818 ;;                      _adc_test_init
   819 ;;                          _adc_start
   820 ;; ---------------------------------------------------------------------------------
   821 ;; (1) _initPin                                              0     0      0     154
   822 ;;                             _setPA0
   823 ;;                             _setPA1
   824 ;;                             _setPA2
   825 ;;                             _setPA3
   826 ;;                             _setPB0
   827 ;;                             _setPB1
   828 ;;                             _setPA6
   829 ;; ---------------------------------------------------------------------------------
   830 ;; (1) _clearAllTimer                                        0     0      0       0
   831 ;;              _clearTwelveHoursTimer
   832 ;;               _clearThreeHoursTimer
   833 ;;            _clearTwentySecondsTimer
   834 ;; ---------------------------------------------------------------------------------
   835 ;; (2) _AD_Sample                                            0     0      0       0
   836 ;; ---------------------------------------------------------------------------------
   837 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   838 ;;                                              0 BANK0      1     1      0
   839 ;; ---------------------------------------------------------------------------------
   840 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   841 ;; ---------------------------------------------------------------------------------
   842 ;; (2) _Filter                                              38    36      2     620
   843 ;;                                              0 BANK0     38    36      2
   844 ;; ---------------------------------------------------------------------------------
   845 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   846 ;; ---------------------------------------------------------------------------------
   847 ;; (1) _startThreeHoursTimer                                 2     0      2      22
   848 ;;                                              0 BANK0      2     0      2
   849 ;; ---------------------------------------------------------------------------------
   850 ;; (1) _isFinishedTwentySecondsTimer                         0     0      0       0
   851 ;; ---------------------------------------------------------------------------------
   852 ;; (1) _startTwentySecondsTimer                              0     0      0       0
   853 ;; ---------------------------------------------------------------------------------
   854 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   855 ;; ---------------------------------------------------------------------------------
   856 ;; (1) _startTwelveHourTimer                                 2     0      2      22
   857 ;;                                              0 BANK0      2     0      2
   858 ;; ---------------------------------------------------------------------------------
   859 ;; (1) _isFinishedTwentyMinTimer                             0     0      0       0
   860 ;; ---------------------------------------------------------------------------------
   861 ;; (1) _clearTwentyMinTimer                                  0     0      0       0
   862 ;; ---------------------------------------------------------------------------------
   863 ;; (1) _startTwentyMinTimer                                  2     0      2      22
   864 ;;                                              0 BANK0      2     0      2
   865 ;; ---------------------------------------------------------------------------------
   866 ;; (1) _clrSampeTime                                         0     0      0       0
   867 ;; ---------------------------------------------------------------------------------
   868 ;; (1) _isPermitSampleTime                                   0     0      0       0
   869 ;; ---------------------------------------------------------------------------------
   870 ;; (2) _adc_start                                            0     0      0       0
   871 ;; ---------------------------------------------------------------------------------
   872 ;; (1) _op2_init                                             0     0      0       0
   873 ;; ---------------------------------------------------------------------------------
   874 ;; (1) _op1_init                                             0     0      0       0
   875 ;; ---------------------------------------------------------------------------------
   876 ;; (1) _dac_init                                             0     0      0       0
   877 ;; ---------------------------------------------------------------------------------
   878 ;; (2) _adc_test_init                                        3     2      1      44
   879 ;;                                              0 BANK0      3     2      1
   880 ;; ---------------------------------------------------------------------------------
   881 ;; (1) _timer1_interrupt_config                              0     0      0       0
   882 ;; ---------------------------------------------------------------------------------
   883 ;; (1) _timer1_config                                        0     0      0       0
   884 ;; ---------------------------------------------------------------------------------
   885 ;; (1) _clock_config                                         0     0      0       0
   886 ;; ---------------------------------------------------------------------------------
   887 ;; (1) _setPA6                                               1     1      0      22
   888 ;;                                              0 BANK0      1     1      0
   889 ;; ---------------------------------------------------------------------------------
   890 ;; (1) _setPA3                                               1     1      0      22
   891 ;;                                              0 BANK0      1     1      0
   892 ;; ---------------------------------------------------------------------------------
   893 ;; (1) _setPA2                                               1     1      0      22
   894 ;;                                              0 BANK0      1     1      0
   895 ;; ---------------------------------------------------------------------------------
   896 ;; (1) _setPA1                                               1     1      0      22
   897 ;;                                              0 BANK0      1     1      0
   898 ;; ---------------------------------------------------------------------------------
   899 ;; (1) _setPA0                                               1     1      0      22
   900 ;;                                              0 BANK0      1     1      0
   901 ;; ---------------------------------------------------------------------------------
   902 ;; (1) _setPB1                                               1     1      0      22
   903 ;;                                              0 BANK0      1     1      0
   904 ;; ---------------------------------------------------------------------------------
   905 ;; (1) _setPB0                                               1     1      0      22
   906 ;;                                              0 BANK0      1     1      0
   907 ;; ---------------------------------------------------------------------------------
   908 ;; (2) _clearTwentySecondsTimer                              0     0      0       0
   909 ;; ---------------------------------------------------------------------------------
   910 ;; (2) _clearThreeHoursTimer                                 0     0      0       0
   911 ;; ---------------------------------------------------------------------------------
   912 ;; (2) _clearTwelveHoursTimer                                0     0      0       0
   913 ;; ---------------------------------------------------------------------------------
   914 ;; Estimated maximum stack depth 2
   915 ;; ---------------------------------------------------------------------------------
   916 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   917 ;; ---------------------------------------------------------------------------------
   918 ;; (4) _ISR                                                  4     4      0     407
   919 ;;                                              9 COMMON     4     4      0
   920 ;;                i1_setAD_ConvertFlag
   921 ;;                            _adc_get
   922 ;;            _vPutSampleDataIntoTable
   923 ;; ---------------------------------------------------------------------------------
   924 ;; (5) i1_setAD_ConvertFlag                                  1     1      0      73
   925 ;;                                              0 COMMON     1     1      0
   926 ;; ---------------------------------------------------------------------------------
   927 ;; (5) _adc_get                                              4     2      2      24
   928 ;;                                              0 COMMON     4     2      2
   929 ;; ---------------------------------------------------------------------------------
   930 ;; (5) _vPutSampleDataIntoTable                              5     2      3     310
   931 ;;                                              4 COMMON     5     2      3
   932 ;;                            _adc_get (ARG)
   933 ;; ---------------------------------------------------------------------------------
   934 ;; Estimated maximum stack depth 5
   935 ;; ---------------------------------------------------------------------------------
   936 ;; Call Graph Graphs:
   937 ;; _main (ROOT)
   938 ;;   _initPin
   939 ;;     _setPA0
   940 ;;     _setPA1
   941 ;;     _setPA2
   942 ;;     _setPA3
   943 ;;     _setPB0
   944 ;;     _setPB1
   945 ;;     _setPA6
   946 ;;   _clock_config
   947 ;;   _timer1_config
   948 ;;   _timer1_interrupt_config
   949 ;;   _adc_test_init
   950 ;;   _dac_init
   951 ;;   _op1_init
   952 ;;   _op2_init
   953 ;;   _adc_start
   954 ;;   _process_AD_Converter_Value
   955 ;;     _getAD_ConvertFlag
   956 ;;     _setAD_ConvertFlag
   957 ;;     _AD_Sample
   958 ;;     _adc_test_init
   959 ;;     _adc_start
   960 ;;   _isPermitSampleTime
   961 ;;   _clrSampeTime
   962 ;;   _getAdOriginalCh14Value
   963 ;;     _Filter
   964 ;;   _startTwentyMinTimer
   965 ;;   _clearTwentyMinTimer
   966 ;;   _isFinishedTwentyMinTimer
   967 ;;   _clearPinPortAndTimer
   968 ;;     _setPB0
   969 ;;     _setPA0
   970 ;;     _setPA1
   971 ;;     _setPA2
   972 ;;     _setPA3
   973 ;;     _clearAllTimer
   974 ;;       _clearTwelveHoursTimer
   975 ;;       _clearThreeHoursTimer
   976 ;;       _clearTwentySecondsTimer
   977 ;;   _setPA6
   978 ;;   _getAdOriginalCh1Value
   979 ;;     _Filter
   980 ;;   _startTwelveHourTimer
   981 ;;   _isFinishedTwelveHoursTimer
   982 ;;   _getAdOriginaCh4Value
   983 ;;     _Filter
   984 ;;   _setPB0
   985 ;;   _setPA0
   986 ;;   _setPA1
   987 ;;   _setPA2
   988 ;;   _setPA3
   989 ;;   _startTwentySecondsTimer
   990 ;;   _isFinishedTwentySecondsTimer
   991 ;;   _clearTwentySecondsTimer
   992 ;;   _startThreeHoursTimer
   993 ;;   _isFinishedThreeHoursTimer
   994 ;;   _clearThreeHoursTimer
   995 ;;   _setPB1
   996 ;;   _clearAllTimer
   997 ;;     _clearTwelveHoursTimer
   998 ;;     _clearThreeHoursTimer
   999 ;;     _clearTwentySecondsTimer
  1000 ;;
  1001 ;; _ISR (ROOT)
  1002 ;;   i1_setAD_ConvertFlag
  1003 ;;   _adc_get
  1004 ;;   _vPutSampleDataIntoTable
  1005 ;;     _adc_get (ARG)
  1006 ;;
  1007 ;; Address spaces:
  1008 ;;Name               Size   Autos  Total    Cost      Usage
  1009 ;;BANK3               60      0      18      10       25.0%
  1010 ;;BITBANK3            60      0       0       9        0.0%
  1011 ;;SFR3                 0      0       0       4        0.0%
  1012 ;;BITSFR3              0      0       0       4        0.0%
  1013 ;;BANK2               60      0       0      12        0.0%
  1014 ;;BITBANK2            60      0       0      11        0.0%
  1015 ;;SFR2                 0      0       0       5        0.0%
  1016 ;;BITSFR2              0      0       0       5        0.0%
  1017 ;;SFR1                 0      0       0       2        0.0%
  1018 ;;BITSFR1              0      0       0       2        0.0%
  1019 ;;BANK1               50      0      4C       8       95.0%
  1020 ;;BITBANK1            50      0       0       7        0.0%
  1021 ;;CODE                 0      0       0       0        0.0%
  1022 ;;DATA                 0      0      C8       6        0.0%
  1023 ;;ABS                  0      0      C1       3        0.0%
  1024 ;;NULL                 0      0       0       0        0.0%
  1025 ;;STACK                0      0       7       2        0.0%
  1026 ;;BANK0               50     28      4F       5       98.8%
  1027 ;;BITBANK0            50      0       0       4        0.0%
  1028 ;;SFR0                 0      0       0       1        0.0%
  1029 ;;BITSFR0              0      0       0       1        0.0%
  1030 ;;COMMON               E      D       E       1      100.0%
  1031 ;;BITCOMMON            E      0       0       0        0.0%
  1032                           
  1033                           
  1034 ;; *************** function _main *****************
  1035 ;; Defined at:
  1036 ;;		line 484 in file "D:\develop\190625\AK7030-OTP\main.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;		None
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;		None
  1041 ;; Return value:  Size  Location     Type
  1042 ;;		None               void
  1043 ;; Registers used:
  1044 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1045 ;; Tracked objects:
  1046 ;;		On entry : 17F/0
  1047 ;;		On exit  : 60/0
  1048 ;;		Unchanged: FFE00/0
  1049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1050 ;;      Params:         0       0       0       0       0
  1051 ;;      Locals:         0       0       0       0       0
  1052 ;;      Temps:          0       0       0       0       0
  1053 ;;      Totals:         0       0       0       0       0
  1054 ;;Total ram usage:        0 bytes
  1055 ;; Hardware stack levels required when called:    5
  1056 ;; This function calls:
  1057 ;;		_initPin
  1058 ;;		_clock_config
  1059 ;;		_timer1_config
  1060 ;;		_timer1_interrupt_config
  1061 ;;		_adc_test_init
  1062 ;;		_dac_init
  1063 ;;		_op1_init
  1064 ;;		_op2_init
  1065 ;;		_adc_start
  1066 ;;		_process_AD_Converter_Value
  1067 ;;		_isPermitSampleTime
  1068 ;;		_clrSampeTime
  1069 ;;		_getAdOriginalCh14Value
  1070 ;;		_startTwentyMinTimer
  1071 ;;		_clearTwentyMinTimer
  1072 ;;		_isFinishedTwentyMinTimer
  1073 ;;		_clearPinPortAndTimer
  1074 ;;		_setPA6
  1075 ;;		_getAdOriginalCh1Value
  1076 ;;		_startTwelveHourTimer
  1077 ;;		_isFinishedTwelveHoursTimer
  1078 ;;		_getAdOriginaCh4Value
  1079 ;;		_setPB0
  1080 ;;		_setPA0
  1081 ;;		_setPA1
  1082 ;;		_setPA2
  1083 ;;		_setPA3
  1084 ;;		_startTwentySecondsTimer
  1085 ;;		_isFinishedTwentySecondsTimer
  1086 ;;		_clearTwentySecondsTimer
  1087 ;;		_startThreeHoursTimer
  1088 ;;		_isFinishedThreeHoursTimer
  1089 ;;		_clearThreeHoursTimer
  1090 ;;		_setPB1
  1091 ;;		_clearAllTimer
  1092 ;; This function is called by:
  1093 ;;		Startup code after reset
  1094 ;; This function uses a non-reentrant model
  1095 ;;
  1096  0013                     _main:	
  1097                           
  1098                           ;main.c: 490: enum setp_Adc4
  1099                           ;main.c: 491: {
  1100                           ;main.c: 492: ADC4_STEP_INIT = 0,
  1101                           ;main.c: 493: ADC4_STEP_FIRST,
  1102                           ;main.c: 494: ADC4_STEP_SECOND,
  1103                           ;main.c: 495: ADC4_STEP_THIRD,
  1104                           ;main.c: 496: ADC4_STEP_FOURTH_PREFIX1,
  1105                           ;main.c: 497: ADC4_STEP_FOURTH_PREFIX2,
  1106                           ;main.c: 498: ADC4_STEP_FOURTH_PREFIX3,
  1107                           ;main.c: 499: ADC4_STEP_FOURTH_PREFIX4,
  1108                           ;main.c: 500: ADC4_STEP_FOURTH_PREFIX5,
  1109                           ;main.c: 501: ADC4_STEP_FOURTH_PREFIX6,
  1110                           ;main.c: 502: ADC4_STEP_FOURTH,
  1111                           ;main.c: 503: ADC4_STEP_FOURTH_SUFFIX1,
  1112                           ;main.c: 504: ADC4_STEP_FOURTH_SUFFIX2,
  1113                           
  1114                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1115  0013  1683               	bsf	3,5	;RP0=1, select bank1
  1116  0014  1005               	bcf	5,0
  1117                           
  1118                           ;main.c: 525: TRISA1 = 0;
  1119  0015  1085               	bcf	5,1
  1120                           
  1121                           ;main.c: 526: TRISA2 = 0;
  1122  0016  1105               	bcf	5,2
  1123                           
  1124                           ;main.c: 527: TRISA3 = 0;
  1125  0017  1185               	bcf	5,3
  1126                           
  1127                           ;main.c: 528: TRISB0 = 0;
  1128  0018  1006               	bcf	6,0
  1129                           
  1130                           ;main.c: 529: TRISB1 = 0;
  1131  0019  1086               	bcf	6,1
  1132                           
  1133                           ;main.c: 530: TRISA6 = 0;
  1134  001A  1305               	bcf	5,6
  1135                           
  1136                           ;main.c: 532: TRISB7 = 0;
  1137  001B  1386               	bcf	6,7
  1138                           
  1139                           ;main.c: 533: TRISB6 = 0;
  1140  001C  1306               	bcf	6,6
  1141                           
  1142                           ;main.c: 536: initPin();
  1143  001D  118A  26C1  118A   	fcall	_initPin
  1144                           
  1145                           ;main.c: 539: TRISB2 = 1;
  1146  0020  1303               	bcf	3,6	;RP1=0, select bank1
  1147  0021  1506               	bsf	6,2
  1148                           
  1149                           ;main.c: 542: TRISA7 = 1;
  1150  0022  1785               	bsf	5,7
  1151                           
  1152                           ;main.c: 544: TRISB4 = 1;
  1153  0023  1606               	bsf	6,4
  1154                           
  1155                           ;main.c: 546: clock_config();
  1156  0024  158A  279A  118A   	fcall	_clock_config
  1157                           
  1158                           ;main.c: 547: timer1_config();
  1159  0027  158A  27AA  118A   	fcall	_timer1_config
  1160                           
  1161                           ;main.c: 548: timer1_interrupt_config();
  1162  002A  158A  277F  118A   	fcall	_timer1_interrupt_config
  1163                           
  1164                           ;main.c: 550: adc_test_init(14,3);
  1165  002D  3003               	movlw	3
  1166  002E  1283               	bcf	3,5	;RP0=0, select bank0
  1167  002F  00A0               	movwf	?_adc_test_init
  1168  0030  300E               	movlw	14
  1169  0031  118A  2777  118A   	fcall	_adc_test_init
  1170                           
  1171                           ;main.c: 552: dac_init();
  1172  0034  158A  2782  118A   	fcall	_dac_init
  1173                           
  1174                           ;main.c: 553: op1_init();
  1175  0037  158A  27B4  118A   	fcall	_op1_init
  1176                           
  1177                           ;main.c: 554: op2_init();
  1178  003A  158A  2793  118A   	fcall	_op2_init
  1179                           
  1180                           ;main.c: 557: adc_start();
  1181  003D  118A  278C  118A   	fcall	_adc_start
  1182  0040                     l4711:	
  1183  0040  0064               	clrwdt	;#
  1184                           
  1185                           ;main.c: 600: process_AD_Converter_Value();
  1186  0041  118A  2732  118A   	fcall	_process_AD_Converter_Value
  1187                           
  1188                           ;main.c: 602: if( isPermitSampleTime() )
  1189  0044  158A  2787  118A   	fcall	_isPermitSampleTime
  1190  0047  3A00               	xorlw	0
  1191  0048  1903               	skipnz
  1192  0049  2840               	goto	l4711
  1193                           
  1194                           ;main.c: 603: {
  1195                           ;main.c: 606: clrSampeTime();
  1196  004A  118A  27FE  118A   	fcall	_clrSampeTime
  1197                           
  1198                           ;main.c: 621: switch(enumMainLoopStep)
  1199  004D  2CD8               	goto	l5383
  1200  004E                     l4717:	
  1201                           
  1202                           ;main.c: 624: {
  1203                           ;main.c: 629: static unsigned char ucTimerZeroPoint5s = 0;
  1204                           ;main.c: 630: if(getAdOriginalCh14Value() > 1950)
  1205  004E  118A  25F3  118A   	fcall	_getAdOriginalCh14Value
  1206  0051  3007               	movlw	7
  1207  0052  0247               	subwf	?_getAdOriginalCh14Value+1,w
  1208  0053  309F               	movlw	159
  1209  0054  1903               	skipnz
  1210  0055  0246               	subwf	?_getAdOriginalCh14Value,w
  1211  0056  1C03               	skipc
  1212  0057  285A               	goto	l4721
  1213                           
  1214                           ;main.c: 631: {
  1215                           ;main.c: 632: ucTimerZeroPoint5s++;
  1216  0058  0AEB               	incf	main@ucTimerZeroPoint5s,f
  1217                           
  1218                           ;main.c: 633: }
  1219  0059  2867               	goto	l4729
  1220  005A                     l4721:	
  1221                           
  1222                           ;main.c: 634: else
  1223                           ;main.c: 635: {
  1224                           ;main.c: 636: static unsigned char bInit20Min = 0;
  1225                           ;main.c: 637: if(!bInit20Min)
  1226  005A  08D0               	movf	main@bInit20Min,f
  1227  005B  1D03               	skipz
  1228  005C  2865               	goto	l4727
  1229  005D  3078               	movlw	120
  1230                           
  1231                           ;main.c: 638: {
  1232                           ;main.c: 639: bInit20Min = 1;
  1233  005E  01D0               	clrf	main@bInit20Min
  1234  005F  0AD0               	incf	main@bInit20Min,f
  1235                           
  1236                           ;main.c: 640: startTwentyMinTimer(120);
  1237  0060  00A0               	movwf	?_startTwentyMinTimer
  1238  0061  01A1               	clrf	?_startTwentyMinTimer+1
  1239  0062  118A  27EA  118A   	fcall	_startTwentyMinTimer
  1240  0065                     l4727:	
  1241                           
  1242                           ;main.c: 641: }
  1243                           ;main.c: 642: ucTimerZeroPoint5s = 0;
  1244  0065  1283               	bcf	3,5	;RP0=0, select bank0
  1245  0066  01EB               	clrf	main@ucTimerZeroPoint5s
  1246  0067                     l4729:	
  1247                           
  1248                           ;main.c: 643: }
  1249                           ;main.c: 645: if( ucTimerZeroPoint5s >= 5 )
  1250  0067  3005               	movlw	5
  1251  0068  026B               	subwf	main@ucTimerZeroPoint5s,w
  1252  0069  1C03               	skipc
  1253  006A  2871               	goto	l4737
  1254                           
  1255                           ;main.c: 646: {
  1256                           ;main.c: 647: ucTimerZeroPoint5s = 0;
  1257  006B  01EB               	clrf	main@ucTimerZeroPoint5s
  1258                           
  1259                           ;main.c: 648: clearTwentyMinTimer();
  1260  006C  158A  278D  118A   	fcall	_clearTwentyMinTimer
  1261                           
  1262                           ;main.c: 649: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  1263  006F  01D2               	clrf	main@enumMainLoopStep
  1264  0070  0AD2               	incf	main@enumMainLoopStep,f
  1265  0071                     l4737:	
  1266                           
  1267                           ;main.c: 650: }
  1268                           ;main.c: 652: if( isFinishedTwentyMinTimer() )
  1269  0071  158A  27BF  118A   	fcall	_isFinishedTwentyMinTimer
  1270  0074  3A00               	xorlw	0
  1271  0075  1903               	skipnz
  1272  0076  2840               	goto	l4711
  1273                           
  1274                           ;main.c: 653: {
  1275                           ;main.c: 654: enumMainLoopStep = MAIN_LOOP_STEP_12_HOUR_END;
  1276  0077  3009               	movlw	9
  1277  0078  1283               	bcf	3,5	;RP0=0, select bank0
  1278  0079  00D2               	movwf	main@enumMainLoopStep
  1279                           
  1280                           ;main.c: 655: ucTimerZeroPoint5s = 0;
  1281  007A  01EB               	clrf	main@ucTimerZeroPoint5s
  1282  007B                     l762:	
  1283                           
  1284                           ;main.c: 656: }
  1285                           ;main.c: 657: break;
  1286  007B  2840               	goto	l4711
  1287  007C                     l4743:	
  1288                           
  1289                           ;main.c: 661: {
  1290                           ;main.c: 666: static unsigned char ucTimerZeroPoint3s = 0;
  1291                           ;main.c: 669: if(getAdOriginalCh14Value() > 1950)
  1292  007C  118A  25F3  118A   	fcall	_getAdOriginalCh14Value
  1293  007F  3007               	movlw	7
  1294  0080  0247               	subwf	?_getAdOriginalCh14Value+1,w
  1295  0081  309F               	movlw	159
  1296  0082  1903               	skipnz
  1297  0083  0246               	subwf	?_getAdOriginalCh14Value,w
  1298  0084  1C03               	skipc
  1299  0085  288A               	goto	l4749
  1300                           
  1301                           ;main.c: 670: {
  1302                           ;main.c: 672: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
  1303  0086  3002               	movlw	2
  1304  0087  00D2               	movwf	main@enumMainLoopStep
  1305                           
  1306                           ;main.c: 674: ucTimerZeroPoint3s = 0;
  1307  0088  01EA               	clrf	main@ucTimerZeroPoint3s
  1308                           
  1309                           ;main.c: 676: }
  1310  0089  2840               	goto	l4711
  1311  008A                     l4749:	
  1312  008A  3003               	movlw	3
  1313                           
  1314                           ;main.c: 677: else
  1315                           ;main.c: 678: {
  1316                           ;main.c: 679: ucTimerZeroPoint3s++;
  1317  008B  0AEA               	incf	main@ucTimerZeroPoint3s,f
  1318                           
  1319                           ;main.c: 681: if(ucTimerZeroPoint3s >= 3)
  1320  008C  026A               	subwf	main@ucTimerZeroPoint3s,w
  1321  008D  1C03               	skipc
  1322  008E  2840               	goto	l4711
  1323                           
  1324                           ;main.c: 682: {
  1325                           ;main.c: 683: ucTimerZeroPoint3s = 0;
  1326  008F  01EA               	clrf	main@ucTimerZeroPoint3s
  1327                           
  1328                           ;main.c: 685: clearPinPortAndTimer();
  1329  0090  118A  26AB  118A   	fcall	_clearPinPortAndTimer
  1330  0093  2840               	goto	l4711
  1331  0094                     l4757:	
  1332                           
  1333                           ;main.c: 693: {
  1334                           ;main.c: 698: static unsigned char ucTimerP5s = 0;
  1335                           ;main.c: 701: setPA6(1);
  1336  0094  3001               	movlw	1
  1337  0095  118A  2712  118A   	fcall	_setPA6
  1338                           
  1339                           ;main.c: 703: if(ucTimerP5s < 5)
  1340  0098  3005               	movlw	5
  1341  0099  0268               	subwf	main@ucTimerP5s,w
  1342  009A  1803               	skipnc
  1343  009B  289E               	goto	l4763
  1344                           
  1345                           ;main.c: 704: ucTimerP5s++;
  1346  009C  0AE8               	incf	main@ucTimerP5s,f
  1347  009D  2840               	goto	l4711
  1348  009E                     l4763:	
  1349  009E  3003               	movlw	3
  1350                           
  1351                           ;main.c: 705: else
  1352                           ;main.c: 706: {
  1353                           ;main.c: 707: ucTimerP5s = 0;
  1354  009F  01E8               	clrf	main@ucTimerP5s
  1355                           
  1356                           ;main.c: 709: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  1357  00A0  2C38               	goto	L16
  1358  00A1                     l4767:	
  1359                           
  1360                           ;main.c: 716: {
  1361                           ;main.c: 721: static unsigned char ucTimerADC1ZeroP5s = 0;
  1362                           ;main.c: 723: static unsigned char ucTimerLessADC1ZeroP5s = 0;
  1363                           ;main.c: 725: static unsigned char ucTimerLessADC1ZeroP5sFlag = 0;
  1364                           ;main.c: 727: static unsigned char ucTimerRightP5s = 0;
  1365                           ;main.c: 729: if(getAdOriginalCh1Value() < 115)
  1366  00A1  118A  25E9  118A   	fcall	_getAdOriginalCh1Value
  1367  00A4  3000               	movlw	0
  1368  00A5  0247               	subwf	?_getAdOriginalCh1Value+1,w
  1369  00A6  3073               	movlw	115
  1370  00A7  1903               	skipnz
  1371  00A8  0246               	subwf	?_getAdOriginalCh1Value,w
  1372  00A9  1803               	skipnc
  1373  00AA  28AE               	goto	l4773
  1374                           
  1375                           ;main.c: 730: {
  1376                           ;main.c: 731: ucTimerADC1ZeroP5s = 0;
  1377  00AB  01DB               	clrf	main@ucTimerADC1ZeroP5s
  1378                           
  1379                           ;main.c: 733: ucTimerLessADC1ZeroP5s++;
  1380  00AC  0AE7               	incf	main@ucTimerLessADC1ZeroP5s,f
  1381                           
  1382                           ;main.c: 734: }
  1383  00AD  28B0               	goto	l4777
  1384  00AE                     l4773:	
  1385                           
  1386                           ;main.c: 735: else
  1387                           ;main.c: 736: {
  1388                           ;main.c: 737: ucTimerADC1ZeroP5s++;
  1389  00AE  0ADB               	incf	main@ucTimerADC1ZeroP5s,f
  1390                           
  1391                           ;main.c: 739: ucTimerLessADC1ZeroP5s = 0;
  1392  00AF  01E7               	clrf	main@ucTimerLessADC1ZeroP5s
  1393  00B0                     l4777:	
  1394                           
  1395                           ;main.c: 740: }
  1396                           ;main.c: 742: if(ucTimerADC1ZeroP5s >= 3)
  1397  00B0  3003               	movlw	3
  1398  00B1  025B               	subwf	main@ucTimerADC1ZeroP5s,w
  1399  00B2  1C03               	skipc
  1400  00B3  28B7               	goto	l4783
  1401  00B4  3004               	movlw	4
  1402                           
  1403                           ;main.c: 743: {
  1404                           ;main.c: 744: ucTimerADC1ZeroP5s = 0;
  1405  00B5  01DB               	clrf	main@ucTimerADC1ZeroP5s
  1406                           
  1407                           ;main.c: 745: enumMainLoopStep = MAIN_LOOP_STEP_FOURTH;
  1408  00B6  28CF               	goto	L2
  1409  00B7                     l4783:	
  1410                           ;main.c: 746: }
  1411                           
  1412                           
  1413                           ;main.c: 747: else if( ucTimerLessADC1ZeroP5s >= 3)
  1414  00B7  3003               	movlw	3
  1415  00B8  0267               	subwf	main@ucTimerLessADC1ZeroP5s,w
  1416  00B9  1C03               	skipc
  1417  00BA  28D0               	goto	l4797
  1418                           
  1419                           ;main.c: 748: {
  1420                           ;main.c: 750: if(getAdOriginalCh1Value() < 105)
  1421  00BB  118A  25E9  118A   	fcall	_getAdOriginalCh1Value
  1422  00BE  3000               	movlw	0
  1423  00BF  0247               	subwf	?_getAdOriginalCh1Value+1,w
  1424  00C0  3069               	movlw	105
  1425  00C1  1903               	skipnz
  1426  00C2  0246               	subwf	?_getAdOriginalCh1Value,w
  1427  00C3  1803               	skipnc
  1428  00C4  28C7               	goto	l4789
  1429                           
  1430                           ;main.c: 751: {
  1431                           ;main.c: 752: ucTimerRightP5s++;
  1432  00C5  0AE9               	incf	main@ucTimerRightP5s,f
  1433                           
  1434                           ;main.c: 753: }
  1435  00C6  28C8               	goto	l4791
  1436  00C7                     l4789:	
  1437                           
  1438                           ;main.c: 754: else
  1439                           ;main.c: 755: {
  1440                           ;main.c: 756: ucTimerRightP5s = 0;
  1441  00C7  01E9               	clrf	main@ucTimerRightP5s
  1442  00C8                     l4791:	
  1443                           
  1444                           ;main.c: 757: }
  1445                           ;main.c: 759: if(ucTimerRightP5s >= 3)
  1446  00C8  3003               	movlw	3
  1447  00C9  0269               	subwf	main@ucTimerRightP5s,w
  1448  00CA  1C03               	skipc
  1449  00CB  28D0               	goto	l4797
  1450  00CC  3008               	movlw	8
  1451                           
  1452                           ;main.c: 760: {
  1453                           ;main.c: 761: ucTimerLessADC1ZeroP5s = 0;
  1454  00CD  01E7               	clrf	main@ucTimerLessADC1ZeroP5s
  1455                           
  1456                           ;main.c: 762: ucTimerRightP5s = 0;
  1457  00CE  01E9               	clrf	main@ucTimerRightP5s
  1458  00CF                     L2:	
  1459                           ;main.c: 763: enumMainLoopStep = MAIN_LOOP_STEP_3_HOUR_BRANCH;
  1460                           
  1461  00CF  00D2               	movwf	main@enumMainLoopStep
  1462  00D0                     l4797:	
  1463                           ;main.c: 770: else
  1464                           ;main.c: 771: {
  1465                           ;main.c: 772: ;
  1466                           
  1467                           ;main.c: 764: }
  1468                           
  1469                           
  1470                           ;main.c: 773: }
  1471                           ;main.c: 775: if((MAIN_LOOP_STEP_3_HOUR_BRANCH == enumMainLoopStep) || (MAIN_LOOP_STEP_F
      +                          OURTH == enumMainLoopStep))
  1472  00D0  0852               	movf	main@enumMainLoopStep,w
  1473  00D1  3A08               	xorlw	8
  1474  00D2  1903               	skipnz
  1475  00D3  28D8               	goto	l4801
  1476  00D4  0852               	movf	main@enumMainLoopStep,w
  1477  00D5  3A04               	xorlw	4
  1478  00D6  1D03               	skipz
  1479  00D7  2840               	goto	l4711
  1480  00D8                     l4801:	
  1481                           
  1482                           ;main.c: 776: {
  1483                           ;main.c: 777: ucTimerRightP5s = 0;
  1484  00D8  01E9               	clrf	main@ucTimerRightP5s
  1485                           
  1486                           ;main.c: 778: ucTimerADC1ZeroP5s = 0;
  1487  00D9  01DB               	clrf	main@ucTimerADC1ZeroP5s
  1488                           
  1489                           ;main.c: 779: ucTimerLessADC1ZeroP5s = 0;
  1490  00DA  01E7               	clrf	main@ucTimerLessADC1ZeroP5s
  1491  00DB  2840               	goto	l4711
  1492  00DC                     l4803:	
  1493                           
  1494                           ;main.c: 787: {
  1495                           ;main.c: 793: startTwelveHourTimer(600);
  1496  00DC  3058               	movlw	88
  1497  00DD  00A0               	movwf	?_startTwelveHourTimer
  1498  00DE  3002               	movlw	2
  1499  00DF  00A1               	movwf	?_startTwelveHourTimer+1
  1500  00E0  118A  27D6  118A   	fcall	_startTwelveHourTimer
  1501                           
  1502                           ;main.c: 794: enumMainLoopStep = MAIN_LOOP_STEP_FIFTH;
  1503  00E3  3005               	movlw	5
  1504  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1505  00E5  00D2               	movwf	main@enumMainLoopStep
  1506                           
  1507                           ;main.c: 796: bCheckTweHour = 0;
  1508  00E6  01CF               	clrf	main@bCheckTweHour
  1509                           
  1510                           ;main.c: 798: break;
  1511  00E7  2840               	goto	l4711
  1512  00E8                     l4809:	
  1513                           
  1514                           ;main.c: 802: {
  1515                           ;main.c: 806: if(( isFinishedTwelveHoursTimer() && (! bCheckTweHour)))
  1516  00E8  158A  27CB  118A   	fcall	_isFinishedTwelveHoursTimer
  1517  00EB  3A00               	xorlw	0
  1518  00EC  1903               	skipnz
  1519  00ED  2BC6               	goto	l5265
  1520  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  1521  00EF  08CF               	movf	main@bCheckTweHour,f
  1522  00F0  1D03               	skipz
  1523  00F1  2BC6               	goto	l5265
  1524                           
  1525                           ;main.c: 807: {
  1526                           ;main.c: 808: enumMainLoopStep = MAIN_LOOP_STEP_12_HOUR_END;
  1527  00F2  3009               	movlw	9
  1528  00F3  00D2               	movwf	main@enumMainLoopStep
  1529                           
  1530                           ;main.c: 809: bCheckTweHour = 1;
  1531  00F4  01CF               	clrf	main@bCheckTweHour
  1532  00F5  0ACF               	incf	main@bCheckTweHour,f
  1533                           
  1534                           ;main.c: 810: }
  1535  00F6  2840               	goto	l4711
  1536  00F7                     l804:	
  1537                           ;main.c: 816: {
  1538                           ;main.c: 817: case ADC4_STEP_INIT:
  1539                           
  1540                           
  1541                           ;main.c: 818: {
  1542                           ;main.c: 823: ucADC4_Step = ADC4_STEP_FIRST;
  1543  00F7  01D3               	clrf	main@ucADC4_Step
  1544  00F8  0AD3               	incf	main@ucADC4_Step,f
  1545                           
  1546                           ;main.c: 824: break;
  1547  00F9  2840               	goto	l4711
  1548  00FA                     l4817:	
  1549                           
  1550                           ;main.c: 828: {
  1551                           ;main.c: 832: static unsigned int uiOldValue = 0, uiMinValue = 0, uiMaxValue = 0;
  1552                           ;main.c: 834: static unsigned char bInitFlag = 0;
  1553                           ;main.c: 836: if( 0 == bInitFlag)
  1554  00FA  08D1               	movf	main@bInitFlag,f
  1555  00FB  1D03               	skipz
  1556  00FC  2906               	goto	l4823
  1557                           
  1558                           ;main.c: 837: {
  1559                           ;main.c: 838: bInitFlag = 1;
  1560  00FD  01D1               	clrf	main@bInitFlag
  1561  00FE  0AD1               	incf	main@bInitFlag,f
  1562                           
  1563                           ;main.c: 839: uiOldValue = getAdOriginaCh4Value();
  1564  00FF  118A  25DF  118A   	fcall	_getAdOriginaCh4Value
  1565  0102  0847               	movf	?_getAdOriginaCh4Value+1,w
  1566  0103  00C9               	movwf	main@uiOldValue+1
  1567  0104  0846               	movf	?_getAdOriginaCh4Value,w
  1568  0105  00C8               	movwf	main@uiOldValue
  1569  0106                     l4823:	
  1570                           
  1571                           ;main.c: 840: }
  1572                           ;main.c: 849: if(LESS_THAN_1911 == ucChannel4Type)
  1573  0106  08D4               	movf	main@ucChannel4Type,f
  1574  0107  1D03               	skipz
  1575  0108  290E               	goto	l4829
  1576                           
  1577                           ;main.c: 850: {
  1578                           ;main.c: 851: uiMinValue = 0;
  1579  0109  1683               	bsf	3,5	;RP0=1, select bank1
  1580  010A  308B               	movlw	139
  1581  010B  01AA               	clrf	main@uiMinValue^(0+128)
  1582  010C  01AB               	clrf	(main@uiMinValue+1)^(0+128)
  1583                           
  1584                           ;main.c: 852: uiMaxValue = 1931;
  1585  010D  2916               	goto	L17
  1586  010E                     l4829:	
  1587                           ;main.c: 853: }
  1588                           
  1589                           
  1590                           ;main.c: 854: else if(BETWEEN_1911_AND_2067 == ucChannel4Type)
  1591  010E  0B54               	decfsz	main@ucChannel4Type,w
  1592  010F  2919               	goto	l4833
  1593                           
  1594                           ;main.c: 855: {
  1595                           ;main.c: 856: uiMinValue = 1931 - 40;
  1596  0110  3063               	movlw	99
  1597  0111  1683               	bsf	3,5	;RP0=1, select bank1
  1598  0112  00AA               	movwf	main@uiMinValue^(0+128)
  1599  0113  3007               	movlw	7
  1600  0114  00AB               	movwf	(main@uiMinValue^(0+128)+1)
  1601                           
  1602                           ;main.c: 857: uiMaxValue = 2047;
  1603  0115  30FF               	movlw	255
  1604  0116                     L17:	
  1605  0116  00A8               	movwf	main@uiMaxValue^(0+128)
  1606  0117  3007               	movlw	7
  1607  0118  2932               	goto	L3
  1608  0119                     l4833:	
  1609                           ;main.c: 858: }
  1610                           
  1611                           
  1612                           ;main.c: 859: else if(BETWEEN_2067_AND_2204 == ucChannel4Type)
  1613  0119  0854               	movf	main@ucChannel4Type,w
  1614  011A  3A02               	xorlw	2
  1615  011B  1D03               	skipz
  1616  011C  2924               	goto	l4837
  1617                           
  1618                           ;main.c: 860: {
  1619                           ;main.c: 861: uiMinValue = 2047 - 40;
  1620  011D  30D7               	movlw	215
  1621  011E  1683               	bsf	3,5	;RP0=1, select bank1
  1622  011F  00AA               	movwf	main@uiMinValue^(0+128)
  1623  0120  3007               	movlw	7
  1624  0121  00AB               	movwf	(main@uiMinValue^(0+128)+1)
  1625                           
  1626                           ;main.c: 862: uiMaxValue = 2164;
  1627  0122  3074               	movlw	116
  1628  0123  2930               	goto	L18
  1629  0124                     l4837:	
  1630                           ;main.c: 863: }
  1631                           
  1632                           
  1633                           ;main.c: 864: else if(BETWEEN_2204_AND_2340 == ucChannel4Type)
  1634  0124  0854               	movf	main@ucChannel4Type,w
  1635  0125  3A03               	xorlw	3
  1636  0126  1D03               	skipz
  1637  0127  292A               	goto	l4841
  1638                           
  1639                           ;main.c: 865: {
  1640                           ;main.c: 866: uiMinValue = 2164 - 40;
  1641  0128  304C               	movlw	76
  1642  0129  292B               	goto	L20
  1643  012A                     l4841:	
  1644                           ;main.c: 868: }
  1645                           
  1646                           ;main.c: 867: uiMaxValue = 2281;
  1647                           
  1648                           
  1649                           ;main.c: 869: else
  1650                           ;main.c: 870: {
  1651                           ;main.c: 871: uiMinValue = 2281 - 40;
  1652  012A  30C1               	movlw	193
  1653  012B                     L20:	
  1654  012B  1683               	bsf	3,5	;RP0=1, select bank1
  1655  012C  00AA               	movwf	main@uiMinValue^(0+128)
  1656  012D  3008               	movlw	8
  1657  012E  00AB               	movwf	(main@uiMinValue^(0+128)+1)
  1658                           
  1659                           ;main.c: 872: uiMaxValue = 2281;
  1660  012F  30E9               	movlw	233
  1661  0130                     L18:	
  1662  0130  00A8               	movwf	main@uiMaxValue^(0+128)
  1663  0131  3008               	movlw	8
  1664  0132                     L3:	
  1665  0132  00A9               	movwf	(main@uiMaxValue^(0+128)+1)
  1666                           
  1667                           ;main.c: 873: }
  1668                           ;main.c: 876: if(( getAdOriginaCh4Value() < uiMinValue )
  1669                           ;main.c: 877: || (getAdOriginaCh4Value() > uiMaxValue ))
  1670  0133  118A  25DF  118A   	fcall	_getAdOriginaCh4Value
  1671  0136  1683               	bsf	3,5	;RP0=1, select bank1
  1672  0137  082B               	movf	(main@uiMinValue+1)^(0+128),w
  1673  0138  1283               	bcf	3,5	;RP0=0, select bank0
  1674  0139  0247               	subwf	?_getAdOriginaCh4Value+1,w
  1675  013A  1D03               	skipz
  1676  013B  2940               	goto	u2125
  1677  013C  1683               	bsf	3,5	;RP0=1, select bank1
  1678  013D  082A               	movf	main@uiMinValue^(0+128),w
  1679  013E  1283               	bcf	3,5	;RP0=0, select bank0
  1680  013F  0246               	subwf	?_getAdOriginaCh4Value,w
  1681  0140                     u2125:	
  1682  0140  1C03               	skipc
  1683  0141  2950               	goto	l4847
  1684  0142  118A  25DF  118A   	fcall	_getAdOriginaCh4Value
  1685  0145  0847               	movf	?_getAdOriginaCh4Value+1,w
  1686  0146  1683               	bsf	3,5	;RP0=1, select bank1
  1687  0147  0229               	subwf	(main@uiMaxValue+1)^(0+128),w
  1688  0148  1D03               	skipz
  1689  0149  294E               	goto	u2135
  1690  014A  1283               	bcf	3,5	;RP0=0, select bank0
  1691  014B  0846               	movf	?_getAdOriginaCh4Value,w
  1692  014C  1683               	bsf	3,5	;RP0=1, select bank1
  1693  014D  0228               	subwf	main@uiMaxValue^(0+128),w
  1694  014E                     u2135:	
  1695  014E  1803               	skipnc
  1696  014F  2957               	goto	l4849
  1697  0150                     l4847:	
  1698                           
  1699                           ;main.c: 878: {
  1700                           ;main.c: 879: uiOldValue = getAdOriginaCh4Value();
  1701  0150  118A  25DF  118A   	fcall	_getAdOriginaCh4Value
  1702  0153  0847               	movf	?_getAdOriginaCh4Value+1,w
  1703  0154  00C9               	movwf	main@uiOldValue+1
  1704  0155  0846               	movf	?_getAdOriginaCh4Value,w
  1705  0156  00C8               	movwf	main@uiOldValue
  1706  0157                     l4849:	
  1707                           
  1708                           ;main.c: 880: }
  1709                           ;main.c: 882: if( uiOldValue < 1931 )
  1710  0157  3007               	movlw	7
  1711  0158  1283               	bcf	3,5	;RP0=0, select bank0
  1712  0159  0249               	subwf	main@uiOldValue+1,w
  1713  015A  308B               	movlw	139
  1714  015B  1903               	skipnz
  1715  015C  0248               	subwf	main@uiOldValue,w
  1716  015D  1803               	skipnc
  1717  015E  2961               	goto	l4853
  1718                           
  1719                           ;main.c: 883: ucChannel4Type = LESS_THAN_1911;
  1720  015F  01D4               	clrf	main@ucChannel4Type
  1721  0160  297F               	goto	l828
  1722  0161                     l4853:	
  1723                           
  1724                           ;main.c: 884: else if( uiOldValue < 2047 )
  1725  0161  3007               	movlw	7
  1726  0162  0249               	subwf	main@uiOldValue+1,w
  1727  0163  30FF               	movlw	255
  1728  0164  1903               	skipnz
  1729  0165  0248               	subwf	main@uiOldValue,w
  1730  0166  1803               	skipnc
  1731  0167  296B               	goto	l4857
  1732                           
  1733                           ;main.c: 885: ucChannel4Type = BETWEEN_1911_AND_2067;
  1734  0168  01D4               	clrf	main@ucChannel4Type
  1735  0169  0AD4               	incf	main@ucChannel4Type,f
  1736  016A  297F               	goto	l828
  1737  016B                     l4857:	
  1738                           
  1739                           ;main.c: 886: else if( uiOldValue < 2164 )
  1740  016B  3008               	movlw	8
  1741  016C  0249               	subwf	main@uiOldValue+1,w
  1742  016D  3074               	movlw	116
  1743  016E  1903               	skipnz
  1744  016F  0248               	subwf	main@uiOldValue,w
  1745  0170  1803               	skipnc
  1746  0171  2974               	goto	l4861
  1747                           
  1748                           ;main.c: 887: ucChannel4Type = BETWEEN_2067_AND_2204;
  1749  0172  3002               	movlw	2
  1750  0173  297E               	goto	L4
  1751  0174                     l4861:	
  1752                           
  1753                           ;main.c: 888: else if( uiOldValue < 2281 )
  1754  0174  3008               	movlw	8
  1755  0175  0249               	subwf	main@uiOldValue+1,w
  1756  0176  30E9               	movlw	233
  1757  0177  1903               	skipnz
  1758  0178  0248               	subwf	main@uiOldValue,w
  1759  0179  1803               	skipnc
  1760  017A  297D               	goto	l4865
  1761                           
  1762                           ;main.c: 889: ucChannel4Type = BETWEEN_2204_AND_2340;
  1763  017B  3003               	movlw	3
  1764  017C  297E               	goto	L4
  1765  017D                     l4865:	
  1766                           
  1767                           ;main.c: 890: else
  1768                           ;main.c: 891: ucChannel4Type = MORE_THAN_2340;
  1769  017D  3004               	movlw	4
  1770  017E                     L4:	
  1771  017E  00D4               	movwf	main@ucChannel4Type
  1772  017F                     l828:	
  1773                           
  1774                           ;main.c: 893: ucADC4_Step = ADC4_STEP_SECOND;
  1775  017F  3002               	movlw	2
  1776  0180  2BBC               	goto	L14
  1777  0181                     l4867:	
  1778                           ;main.c: 894: break;
  1779                           
  1780                           
  1781                           ;main.c: 913: {
  1782                           ;main.c: 917: setPB0(1);
  1783  0181  3001               	movlw	1
  1784  0182  118A  26DF  118A   	fcall	_setPB0
  1785  0185                     l4869:	
  1786                           
  1787                           ;main.c: 921: ucLoaderStep++;
  1788  0185  0AD6               	incf	main@ucLoaderStep,f
  1789                           
  1790                           ;main.c: 922: break;
  1791  0186  2840               	goto	l4711
  1792  0187                     l4871:	
  1793                           
  1794                           ;main.c: 926: {
  1795                           ;main.c: 927: if(ucTimerDelay >= 5)
  1796  0187  3005               	movlw	5
  1797  0188  025C               	subwf	main@ucTimerDelay,w
  1798  0189  1C03               	skipc
  1799  018A  2991               	goto	l4879
  1800                           
  1801                           ;main.c: 928: {
  1802                           ;main.c: 931: setPA0(1);
  1803  018B  3001               	movlw	1
  1804  018C  118A  26F0  118A   	fcall	_setPA0
  1805  018F                     l4875:	
  1806                           
  1807                           ;main.c: 935: ucTimerDelay = 0;
  1808  018F  01DC               	clrf	main@ucTimerDelay
  1809  0190  2985               	goto	l4869
  1810  0191                     l4879:	
  1811                           
  1812                           ;main.c: 938: else
  1813                           ;main.c: 939: ucTimerDelay++;
  1814  0191  0ADC               	incf	main@ucTimerDelay,f
  1815  0192  2840               	goto	l4711
  1816  0193                     l4881:	
  1817                           
  1818                           ;main.c: 944: {
  1819                           ;main.c: 945: if(ucTimerDelay >= 5)
  1820  0193  3005               	movlw	5
  1821  0194  025C               	subwf	main@ucTimerDelay,w
  1822  0195  1C03               	skipc
  1823  0196  2991               	goto	l4879
  1824                           
  1825                           ;main.c: 946: {
  1826                           ;main.c: 949: setPA1(1);
  1827  0197  3001               	movlw	1
  1828  0198  118A  26FA  118A   	fcall	_setPA1
  1829  019B  298F               	goto	l4875
  1830  019C                     l4891:	
  1831                           
  1832                           ;main.c: 963: {
  1833                           ;main.c: 964: if(ucTimerDelay >= 5)
  1834  019C  3005               	movlw	5
  1835  019D  025C               	subwf	main@ucTimerDelay,w
  1836  019E  1C03               	skipc
  1837  019F  2991               	goto	l4879
  1838                           
  1839                           ;main.c: 965: {
  1840                           ;main.c: 968: setPA2(1);
  1841  01A0  3001               	movlw	1
  1842  01A1  118A  2702  118A   	fcall	_setPA2
  1843  01A4  298F               	goto	l4875
  1844  01A5                     l4901:	
  1845                           
  1846                           ;main.c: 982: {
  1847                           ;main.c: 983: if(ucTimerDelay >= 5)
  1848  01A5  3005               	movlw	5
  1849  01A6  025C               	subwf	main@ucTimerDelay,w
  1850  01A7  1C03               	skipc
  1851  01A8  2991               	goto	l4879
  1852                           
  1853                           ;main.c: 984: {
  1854                           ;main.c: 987: setPA3(1);
  1855  01A9  3001               	movlw	1
  1856  01AA  118A  270A  118A   	fcall	_setPA3
  1857  01AD  298F               	goto	l4875
  1858  01AE                     l4911:	
  1859                           
  1860                           ;main.c: 1000: {
  1861                           ;main.c: 1001: if(ucTimerDelay >= 5)
  1862  01AE  3005               	movlw	5
  1863  01AF  025C               	subwf	main@ucTimerDelay,w
  1864  01B0  1C03               	skipc
  1865  01B1  2991               	goto	l4879
  1866                           
  1867                           ;main.c: 1002: {
  1868                           ;main.c: 1005: setPB0(0);
  1869  01B2  3000               	movlw	0
  1870  01B3  118A  26DF  118A   	fcall	_setPB0
  1871                           
  1872                           ;main.c: 1007: setPA0(0);
  1873  01B6  3000               	movlw	0
  1874  01B7  118A  26F0  118A   	fcall	_setPA0
  1875                           
  1876                           ;main.c: 1009: setPA1(0);
  1877  01BA  3000               	movlw	0
  1878  01BB  118A  26FA  118A   	fcall	_setPA1
  1879                           
  1880                           ;main.c: 1011: setPA2(0);
  1881  01BE  3000               	movlw	0
  1882  01BF  118A  2702  118A   	fcall	_setPA2
  1883                           
  1884                           ;main.c: 1013: setPA3(0);
  1885  01C2  3000               	movlw	0
  1886  01C3  118A  270A  118A   	fcall	_setPA3
  1887  01C6  298F               	goto	l4875
  1888  01C7                     l4921:	
  1889                           
  1890                           ;main.c: 1030: {
  1891                           ;main.c: 1031: if(ucTimerDelay >= 1)
  1892  01C7  085C               	movf	main@ucTimerDelay,w
  1893  01C8  1903               	btfsc	3,2
  1894  01C9  2991               	goto	l4879
  1895                           
  1896                           ;main.c: 1032: {
  1897                           ;main.c: 1033: ucTimerDelay = 0;
  1898  01CA  01DC               	clrf	main@ucTimerDelay
  1899                           
  1900                           ;main.c: 1035: ucLoaderStep = 0;
  1901  01CB  01D6               	clrf	main@ucLoaderStep
  1902  01CC                     l4925:	
  1903                           
  1904                           ;main.c: 1036: ucADC4_Step = ADC4_STEP_THIRD;
  1905  01CC  3003               	movlw	3
  1906  01CD  2BBC               	goto	L14
  1907  01CE                     l4931:	
  1908                           ;main.c: 1037: }
  1909                           
  1910  01CE  0856               	movf	main@ucLoaderStep,w
  1911                           
  1912                           ; Switch size 1, requested type "space"
  1913                           ; Number of cases is 7, Range of values is 0 to 6
  1914                           ; switch strategies available:
  1915                           ; Name         Instructions Cycles
  1916                           ; direct_byte           21     7 (fixed)
  1917                           ; simple_byte           22    12 (average)
  1918                           ; jumptable            260     6 (fixed)
  1919                           ; rangetable            11     6 (fixed)
  1920                           ; spacedrange           20     9 (fixed)
  1921                           ; locatedrange           7     3 (fixed)
  1922                           ;	Chosen strategy is direct_byte
  1923  01CF  0084               	movwf	4
  1924  01D0  3007               	movlw	7
  1925  01D1  0204               	subwf	4,w
  1926  01D2  1803               	skipnc
  1927  01D3  2840               	goto	l4711
  1928  01D4  3008               	movlw	high S5673
  1929  01D5  008A               	movwf	10
  1930  01D6  1003               	clrc
  1931  01D7  0D04               	rlf	4,w
  1932  01D8  3E00               	addlw	low S5673
  1933  01D9  0082               	movwf	2
  1934  01DA                     l4933:	
  1935                           
  1936                           ;main.c: 1058: {
  1937                           ;main.c: 1061: setPB0(1);
  1938  01DA  3001               	movlw	1
  1939  01DB  118A  26DF  118A   	fcall	_setPB0
  1940  01DE                     l4935:	
  1941                           
  1942                           ;main.c: 1065: ucLoaderStep1++;
  1943  01DE  0AD7               	incf	main@ucLoaderStep1,f
  1944                           
  1945                           ;main.c: 1066: break;
  1946  01DF  2840               	goto	l4711
  1947  01E0                     l4937:	
  1948                           
  1949                           ;main.c: 1070: {
  1950                           ;main.c: 1071: if(ucTimerDelay1 >= 5)
  1951  01E0  3005               	movlw	5
  1952  01E1  025D               	subwf	main@ucTimerDelay1,w
  1953  01E2  1C03               	skipc
  1954  01E3  29EA               	goto	l4945
  1955                           
  1956                           ;main.c: 1072: {
  1957                           ;main.c: 1075: setPA0(1);
  1958  01E4  3001               	movlw	1
  1959  01E5  118A  26F0  118A   	fcall	_setPA0
  1960  01E8                     l4941:	
  1961                           
  1962                           ;main.c: 1079: ucTimerDelay1 = 0;
  1963  01E8  01DD               	clrf	main@ucTimerDelay1
  1964  01E9  29DE               	goto	l4935
  1965  01EA                     l4945:	
  1966                           
  1967                           ;main.c: 1082: else
  1968                           ;main.c: 1083: ucTimerDelay1++;
  1969  01EA  0ADD               	incf	main@ucTimerDelay1,f
  1970  01EB  2840               	goto	l4711
  1971  01EC                     l4947:	
  1972                           
  1973                           ;main.c: 1088: {
  1974                           ;main.c: 1089: if(ucTimerDelay1 >= 5)
  1975  01EC  3005               	movlw	5
  1976  01ED  025D               	subwf	main@ucTimerDelay1,w
  1977  01EE  1C03               	skipc
  1978  01EF  29EA               	goto	l4945
  1979                           
  1980                           ;main.c: 1090: {
  1981                           ;main.c: 1093: setPA1(1);
  1982  01F0  3001               	movlw	1
  1983  01F1  118A  26FA  118A   	fcall	_setPA1
  1984  01F4  29E8               	goto	l4941
  1985  01F5                     l4957:	
  1986                           
  1987                           ;main.c: 1106: {
  1988                           ;main.c: 1107: if(ucTimerDelay1 >= 5)
  1989  01F5  3005               	movlw	5
  1990  01F6  025D               	subwf	main@ucTimerDelay1,w
  1991  01F7  1C03               	skipc
  1992  01F8  29EA               	goto	l4945
  1993                           
  1994                           ;main.c: 1108: {
  1995                           ;main.c: 1110: setPA2(1);
  1996  01F9  3001               	movlw	1
  1997  01FA  118A  2702  118A   	fcall	_setPA2
  1998  01FD  29E8               	goto	l4941
  1999  01FE                     l4967:	
  2000                           
  2001                           ;main.c: 1120: {
  2002                           ;main.c: 1121: if(ucTimerDelay1 >= 5)
  2003  01FE  3005               	movlw	5
  2004  01FF  025D               	subwf	main@ucTimerDelay1,w
  2005  0200  1C03               	skipc
  2006  0201  29EA               	goto	l4945
  2007                           
  2008                           ;main.c: 1122: {
  2009                           ;main.c: 1124: setPA3(1);
  2010  0202  3001               	movlw	1
  2011  0203  118A  270A  118A   	fcall	_setPA3
  2012  0206  29E8               	goto	l4941
  2013  0207                     l4977:	
  2014                           
  2015                           ;main.c: 1134: {
  2016                           ;main.c: 1135: if(ucTimerDelay1 >= 5)
  2017  0207  3005               	movlw	5
  2018  0208  025D               	subwf	main@ucTimerDelay1,w
  2019  0209  1C03               	skipc
  2020  020A  29EA               	goto	l4945
  2021                           
  2022                           ;main.c: 1136: {
  2023                           ;main.c: 1138: setPA0(0);
  2024  020B  3000               	movlw	0
  2025  020C  118A  26F0  118A   	fcall	_setPA0
  2026                           
  2027                           ;main.c: 1140: setPA1(0);
  2028  020F  3000               	movlw	0
  2029  0210  118A  26FA  118A   	fcall	_setPA1
  2030                           
  2031                           ;main.c: 1142: setPA2(0);
  2032  0213  3000               	movlw	0
  2033  0214  118A  2702  118A   	fcall	_setPA2
  2034                           
  2035                           ;main.c: 1144: setPA3(0);
  2036  0217  3000               	movlw	0
  2037  0218  118A  270A  118A   	fcall	_setPA3
  2038  021B  29E8               	goto	l4941
  2039  021C                     l4987:	
  2040                           
  2041                           ;main.c: 1154: {
  2042                           ;main.c: 1155: if(ucTimerDelay1 >= 1)
  2043  021C  085D               	movf	main@ucTimerDelay1,w
  2044  021D  1903               	btfsc	3,2
  2045  021E  29EA               	goto	l4945
  2046                           
  2047                           ;main.c: 1156: {
  2048                           ;main.c: 1157: ucTimerDelay1 = 0;
  2049  021F  01DD               	clrf	main@ucTimerDelay1
  2050                           
  2051                           ;main.c: 1159: ucLoaderStep1 = 0;
  2052  0220  01D7               	clrf	main@ucLoaderStep1
  2053  0221  29CC               	goto	l4925
  2054  0222                     l4997:	
  2055  0222  0857               	movf	main@ucLoaderStep1,w
  2056                           
  2057                           ; Switch size 1, requested type "space"
  2058                           ; Number of cases is 7, Range of values is 0 to 6
  2059                           ; switch strategies available:
  2060                           ; Name         Instructions Cycles
  2061                           ; direct_byte           21     7 (fixed)
  2062                           ; simple_byte           22    12 (average)
  2063                           ; jumptable            260     6 (fixed)
  2064                           ; rangetable            11     6 (fixed)
  2065                           ; spacedrange           20     9 (fixed)
  2066                           ; locatedrange           7     3 (fixed)
  2067                           ;	Chosen strategy is direct_byte
  2068  0223  0084               	movwf	4
  2069  0224  3007               	movlw	7
  2070  0225  0204               	subwf	4,w
  2071  0226  1803               	skipnc
  2072  0227  2840               	goto	l4711
  2073  0228  3008               	movlw	high S5675
  2074  0229  008A               	movwf	10
  2075  022A  1003               	clrc
  2076  022B  0D04               	rlf	4,w
  2077  022C  3E0E               	addlw	low S5675
  2078  022D  0082               	movwf	2
  2079  022E                     l4999:	
  2080                           
  2081                           ;main.c: 1183: {
  2082                           ;main.c: 1185: setPB0(1);
  2083  022E  3001               	movlw	1
  2084  022F  118A  26DF  118A   	fcall	_setPB0
  2085                           
  2086                           ;main.c: 1187: setPA0(1);
  2087  0232  3001               	movlw	1
  2088  0233  118A  26F0  118A   	fcall	_setPA0
  2089  0236                     l5001:	
  2090                           
  2091                           ;main.c: 1188: ucLoaderStep2++;
  2092  0236  0AD8               	incf	main@ucLoaderStep2,f
  2093                           
  2094                           ;main.c: 1189: break;
  2095  0237  2840               	goto	l4711
  2096  0238                     l5003:	
  2097                           
  2098                           ;main.c: 1193: {
  2099                           ;main.c: 1194: if(ucTimerDelay2 >= 5)
  2100  0238  3005               	movlw	5
  2101  0239  025E               	subwf	main@ucTimerDelay2,w
  2102  023A  1C03               	skipc
  2103  023B  2A42               	goto	l5011
  2104                           
  2105                           ;main.c: 1195: {
  2106                           ;main.c: 1197: setPA1(1);
  2107  023C  3001               	movlw	1
  2108  023D  118A  26FA  118A   	fcall	_setPA1
  2109  0240                     l5007:	
  2110                           
  2111                           ;main.c: 1198: ucTimerDelay2 = 0;
  2112  0240  01DE               	clrf	main@ucTimerDelay2
  2113  0241  2A36               	goto	l5001
  2114  0242                     l5011:	
  2115                           
  2116                           ;main.c: 1201: else
  2117                           ;main.c: 1202: ucTimerDelay2++;
  2118  0242  0ADE               	incf	main@ucTimerDelay2,f
  2119  0243  2840               	goto	l4711
  2120  0244                     l5013:	
  2121                           
  2122                           ;main.c: 1207: {
  2123                           ;main.c: 1208: if(ucTimerDelay2 >= 5)
  2124  0244  3005               	movlw	5
  2125  0245  025E               	subwf	main@ucTimerDelay2,w
  2126  0246  1C03               	skipc
  2127  0247  2A42               	goto	l5011
  2128                           
  2129                           ;main.c: 1209: {
  2130                           ;main.c: 1211: setPA2(1);
  2131  0248  3001               	movlw	1
  2132  0249  118A  2702  118A   	fcall	_setPA2
  2133  024C  2A40               	goto	l5007
  2134  024D                     l5023:	
  2135                           
  2136                           ;main.c: 1221: {
  2137                           ;main.c: 1222: if(ucTimerDelay2 >= 5)
  2138  024D  3005               	movlw	5
  2139  024E  025E               	subwf	main@ucTimerDelay2,w
  2140  024F  1C03               	skipc
  2141  0250  2A42               	goto	l5011
  2142                           
  2143                           ;main.c: 1223: {
  2144                           ;main.c: 1225: setPA3(1);
  2145  0251  3001               	movlw	1
  2146  0252  118A  270A  118A   	fcall	_setPA3
  2147  0255  2A40               	goto	l5007
  2148  0256                     l5033:	
  2149                           
  2150                           ;main.c: 1235: {
  2151                           ;main.c: 1236: if(ucTimerDelay2 >= 5)
  2152  0256  3005               	movlw	5
  2153  0257  025E               	subwf	main@ucTimerDelay2,w
  2154  0258  1C03               	skipc
  2155  0259  2A42               	goto	l5011
  2156                           
  2157                           ;main.c: 1237: {
  2158                           ;main.c: 1240: setPA1(0);
  2159  025A  3000               	movlw	0
  2160  025B  118A  26FA  118A   	fcall	_setPA1
  2161                           
  2162                           ;main.c: 1242: setPA2(0);
  2163  025E  3000               	movlw	0
  2164  025F  118A  2702  118A   	fcall	_setPA2
  2165                           
  2166                           ;main.c: 1244: setPA3(0);
  2167  0262  3000               	movlw	0
  2168  0263  118A  270A  118A   	fcall	_setPA3
  2169  0266  2A40               	goto	l5007
  2170  0267                     l5043:	
  2171                           
  2172                           ;main.c: 1254: {
  2173                           ;main.c: 1255: if(ucTimerDelay2 >= 1)
  2174  0267  085E               	movf	main@ucTimerDelay2,w
  2175  0268  1903               	btfsc	3,2
  2176  0269  2A42               	goto	l5011
  2177                           
  2178                           ;main.c: 1256: {
  2179                           ;main.c: 1257: ucTimerDelay2 = 0;
  2180  026A  01DE               	clrf	main@ucTimerDelay2
  2181                           
  2182                           ;main.c: 1259: ucLoaderStep2 = 0;
  2183  026B  01D8               	clrf	main@ucLoaderStep2
  2184  026C  29CC               	goto	l4925
  2185  026D                     l5053:	
  2186  026D  0858               	movf	main@ucLoaderStep2,w
  2187                           
  2188                           ; Switch size 1, requested type "space"
  2189                           ; Number of cases is 6, Range of values is 0 to 5
  2190                           ; switch strategies available:
  2191                           ; Name         Instructions Cycles
  2192                           ; direct_byte           19     7 (fixed)
  2193                           ; simple_byte           19    10 (average)
  2194                           ; jumptable            260     6 (fixed)
  2195                           ; rangetable            10     6 (fixed)
  2196                           ; spacedrange           18     9 (fixed)
  2197                           ; locatedrange           6     3 (fixed)
  2198                           ;	Chosen strategy is direct_byte
  2199  026E  0084               	movwf	4
  2200  026F  3006               	movlw	6
  2201  0270  0204               	subwf	4,w
  2202  0271  1803               	skipnc
  2203  0272  2840               	goto	l4711
  2204  0273  3008               	movlw	high S5677
  2205  0274  008A               	movwf	10
  2206  0275  1003               	clrc
  2207  0276  0D04               	rlf	4,w
  2208  0277  3E1C               	addlw	low S5677
  2209  0278  0082               	movwf	2
  2210  0279                     l5055:	
  2211                           
  2212                           ;main.c: 1283: {
  2213                           ;main.c: 1285: setPB0(1);
  2214  0279  3001               	movlw	1
  2215  027A  118A  26DF  118A   	fcall	_setPB0
  2216                           
  2217                           ;main.c: 1287: setPA0(1);
  2218  027D  3001               	movlw	1
  2219  027E  118A  26F0  118A   	fcall	_setPA0
  2220                           
  2221                           ;main.c: 1289: setPA1(1);
  2222  0281  3001               	movlw	1
  2223  0282  118A  26FA  118A   	fcall	_setPA1
  2224  0285                     l5057:	
  2225                           
  2226                           ;main.c: 1290: ucLoaderStep3++;
  2227  0285  0AD9               	incf	main@ucLoaderStep3,f
  2228                           
  2229                           ;main.c: 1291: break;
  2230  0286  2840               	goto	l4711
  2231  0287                     l5059:	
  2232                           
  2233                           ;main.c: 1295: {
  2234                           ;main.c: 1296: if(ucTimerDelay3 >= 5)
  2235  0287  3005               	movlw	5
  2236  0288  025F               	subwf	main@ucTimerDelay3,w
  2237  0289  1C03               	skipc
  2238  028A  2A91               	goto	l5067
  2239                           
  2240                           ;main.c: 1297: {
  2241                           ;main.c: 1299: setPA2(1);
  2242  028B  3001               	movlw	1
  2243  028C  118A  2702  118A   	fcall	_setPA2
  2244  028F                     l5063:	
  2245                           
  2246                           ;main.c: 1300: ucTimerDelay3 = 0;
  2247  028F  01DF               	clrf	main@ucTimerDelay3
  2248  0290  2A85               	goto	l5057
  2249  0291                     l5067:	
  2250                           
  2251                           ;main.c: 1303: else
  2252                           ;main.c: 1304: ucTimerDelay3++;
  2253  0291  0ADF               	incf	main@ucTimerDelay3,f
  2254  0292  2840               	goto	l4711
  2255  0293                     l5069:	
  2256                           
  2257                           ;main.c: 1309: {
  2258                           ;main.c: 1310: if(ucTimerDelay3 >= 5)
  2259  0293  3005               	movlw	5
  2260  0294  025F               	subwf	main@ucTimerDelay3,w
  2261  0295  1C03               	skipc
  2262  0296  2A91               	goto	l5067
  2263                           
  2264                           ;main.c: 1311: {
  2265                           ;main.c: 1313: setPA3(1);
  2266  0297  3001               	movlw	1
  2267  0298  118A  270A  118A   	fcall	_setPA3
  2268  029B  2A8F               	goto	l5063
  2269  029C                     l5079:	
  2270                           
  2271                           ;main.c: 1324: {
  2272                           ;main.c: 1325: if(ucTimerDelay3 >= 5)
  2273  029C  3005               	movlw	5
  2274  029D  025F               	subwf	main@ucTimerDelay3,w
  2275  029E  1C03               	skipc
  2276  029F  2A91               	goto	l5067
  2277                           
  2278                           ;main.c: 1326: {
  2279                           ;main.c: 1329: setPA2(0);
  2280  02A0  3000               	movlw	0
  2281  02A1  118A  2702  118A   	fcall	_setPA2
  2282                           
  2283                           ;main.c: 1331: setPA3(0);
  2284  02A4  3000               	movlw	0
  2285  02A5  118A  270A  118A   	fcall	_setPA3
  2286  02A8  2A8F               	goto	l5063
  2287  02A9                     l5089:	
  2288                           
  2289                           ;main.c: 1341: {
  2290                           ;main.c: 1342: if(ucTimerDelay3 >= 1)
  2291  02A9  085F               	movf	main@ucTimerDelay3,w
  2292  02AA  1903               	btfsc	3,2
  2293  02AB  2A91               	goto	l5067
  2294                           
  2295                           ;main.c: 1343: {
  2296                           ;main.c: 1344: ucTimerDelay3 = 0;
  2297  02AC  01DF               	clrf	main@ucTimerDelay3
  2298                           
  2299                           ;main.c: 1346: ucLoaderStep3 = 0;
  2300  02AD  01D9               	clrf	main@ucLoaderStep3
  2301  02AE  29CC               	goto	l4925
  2302  02AF                     l5099:	
  2303  02AF  0859               	movf	main@ucLoaderStep3,w
  2304                           
  2305                           ; Switch size 1, requested type "space"
  2306                           ; Number of cases is 5, Range of values is 0 to 4
  2307                           ; switch strategies available:
  2308                           ; Name         Instructions Cycles
  2309                           ; simple_byte           16     9 (average)
  2310                           ; direct_byte           17     7 (fixed)
  2311                           ; jumptable            260     6 (fixed)
  2312                           ; rangetable             9     6 (fixed)
  2313                           ; spacedrange           16     9 (fixed)
  2314                           ; locatedrange           5     3 (fixed)
  2315                           ;	Chosen strategy is simple_byte
  2316  02B0  3A00               	xorlw	0	; case 0
  2317  02B1  1903               	skipnz
  2318  02B2  2A79               	goto	l5055
  2319  02B3  3A01               	xorlw	1	; case 1
  2320  02B4  1903               	skipnz
  2321  02B5  2A87               	goto	l5059
  2322  02B6  3A03               	xorlw	3	; case 2
  2323  02B7  1903               	skipnz
  2324  02B8  2A93               	goto	l5069
  2325  02B9  3A01               	xorlw	1	; case 3
  2326  02BA  1903               	skipnz
  2327  02BB  2A9C               	goto	l5079
  2328  02BC  3A07               	xorlw	7	; case 4
  2329  02BD  1903               	skipnz
  2330  02BE  2AA9               	goto	l5089
  2331  02BF  287B               	goto	l762
  2332  02C0                     l5101:	
  2333                           
  2334                           ;main.c: 1370: {
  2335                           ;main.c: 1372: setPB0(1);
  2336  02C0  3001               	movlw	1
  2337  02C1  118A  26DF  118A   	fcall	_setPB0
  2338                           
  2339                           ;main.c: 1374: setPA0(1);
  2340  02C4  3001               	movlw	1
  2341  02C5  118A  26F0  118A   	fcall	_setPA0
  2342                           
  2343                           ;main.c: 1376: setPA1(1);
  2344  02C8  3001               	movlw	1
  2345  02C9  118A  26FA  118A   	fcall	_setPA1
  2346                           
  2347                           ;main.c: 1378: setPA2(1);
  2348  02CC  3001               	movlw	1
  2349  02CD  118A  2702  118A   	fcall	_setPA2
  2350  02D0                     l5103:	
  2351                           
  2352                           ;main.c: 1379: ucLoaderStep4++;
  2353  02D0  0ADA               	incf	main@ucLoaderStep4,f
  2354                           
  2355                           ;main.c: 1380: break;
  2356  02D1  2840               	goto	l4711
  2357  02D2                     l5105:	
  2358                           
  2359                           ;main.c: 1384: {
  2360                           ;main.c: 1385: if(ucTimerDelay4 >= 5)
  2361  02D2  3005               	movlw	5
  2362  02D3  0260               	subwf	main@ucTimerDelay4,w
  2363  02D4  1C03               	skipc
  2364  02D5  2ADC               	goto	l5113
  2365                           
  2366                           ;main.c: 1386: {
  2367                           ;main.c: 1388: setPA3(1);
  2368  02D6  3001               	movlw	1
  2369  02D7                     L7:	
  2370  02D7  118A  270A  118A   	fcall	_setPA3
  2371                           
  2372                           ;main.c: 1389: ucTimerDelay4 = 0;
  2373  02DA  01E0               	clrf	main@ucTimerDelay4
  2374  02DB  2AD0               	goto	l5103
  2375  02DC                     l5113:	
  2376                           
  2377                           ;main.c: 1392: else
  2378                           ;main.c: 1393: ucTimerDelay4++;
  2379  02DC  0AE0               	incf	main@ucTimerDelay4,f
  2380  02DD  2840               	goto	l4711
  2381  02DE                     l5115:	
  2382                           
  2383                           ;main.c: 1398: {
  2384                           ;main.c: 1399: if(ucTimerDelay4 >= 5)
  2385  02DE  3005               	movlw	5
  2386  02DF  0260               	subwf	main@ucTimerDelay4,w
  2387  02E0  1C03               	skipc
  2388  02E1  2ADC               	goto	l5113
  2389                           
  2390                           ;main.c: 1400: {
  2391                           ;main.c: 1402: setPA3(0);
  2392  02E2  3000               	movlw	0
  2393  02E3  2AD7               	goto	L7
  2394  02E4                     l5125:	
  2395                           
  2396                           ;main.c: 1412: {
  2397                           ;main.c: 1413: if(ucTimerDelay4 >= 1)
  2398  02E4  0860               	movf	main@ucTimerDelay4,w
  2399  02E5  1903               	btfsc	3,2
  2400  02E6  2ADC               	goto	l5113
  2401                           
  2402                           ;main.c: 1414: {
  2403                           ;main.c: 1415: ucTimerDelay4 = 0;
  2404  02E7  01E0               	clrf	main@ucTimerDelay4
  2405                           
  2406                           ;main.c: 1417: ucLoaderStep4 = 0;
  2407  02E8  01DA               	clrf	main@ucLoaderStep4
  2408  02E9  29CC               	goto	l4925
  2409  02EA                     l5135:	
  2410  02EA  085A               	movf	main@ucLoaderStep4,w
  2411                           
  2412                           ; Switch size 1, requested type "space"
  2413                           ; Number of cases is 4, Range of values is 0 to 3
  2414                           ; switch strategies available:
  2415                           ; Name         Instructions Cycles
  2416                           ; simple_byte           13     7 (average)
  2417                           ; direct_byte           15     7 (fixed)
  2418                           ; jumptable            260     6 (fixed)
  2419                           ; rangetable             8     6 (fixed)
  2420                           ; spacedrange           14     9 (fixed)
  2421                           ; locatedrange           4     3 (fixed)
  2422                           ;	Chosen strategy is simple_byte
  2423  02EB  3A00               	xorlw	0	; case 0
  2424  02EC  1903               	skipnz
  2425  02ED  2AC0               	goto	l5101
  2426  02EE  3A01               	xorlw	1	; case 1
  2427  02EF  1903               	skipnz
  2428  02F0  2AD2               	goto	l5105
  2429  02F1  3A03               	xorlw	3	; case 2
  2430  02F2  1903               	skipnz
  2431  02F3  2ADE               	goto	l5115
  2432  02F4  3A01               	xorlw	1	; case 3
  2433  02F5  1903               	skipnz
  2434  02F6  2AE4               	goto	l5125
  2435  02F7  287B               	goto	l762
  2436  02F8                     l5139:	
  2437  02F8  0854               	movf	main@ucChannel4Type,w
  2438                           
  2439                           ; Switch size 1, requested type "space"
  2440                           ; Number of cases is 5, Range of values is 0 to 4
  2441                           ; switch strategies available:
  2442                           ; Name         Instructions Cycles
  2443                           ; simple_byte           16     9 (average)
  2444                           ; direct_byte           17     7 (fixed)
  2445                           ; jumptable            260     6 (fixed)
  2446                           ; rangetable             9     6 (fixed)
  2447                           ; spacedrange           16     9 (fixed)
  2448                           ; locatedrange           5     3 (fixed)
  2449                           ;	Chosen strategy is simple_byte
  2450  02F9  3A00               	xorlw	0	; case 0
  2451  02FA  1903               	skipnz
  2452  02FB  29CE               	goto	l4931
  2453  02FC  3A01               	xorlw	1	; case 1
  2454  02FD  1903               	skipnz
  2455  02FE  2A22               	goto	l4997
  2456  02FF  3A03               	xorlw	3	; case 2
  2457  0300  1903               	skipnz
  2458  0301  2A6D               	goto	l5053
  2459  0302  3A01               	xorlw	1	; case 3
  2460  0303  1903               	skipnz
  2461  0304  2AAF               	goto	l5099
  2462  0305  3A07               	xorlw	7	; case 4
  2463  0306  1903               	skipnz
  2464  0307  2AEA               	goto	l5135
  2465  0308  287B               	goto	l762
  2466  0309                     l5141:	
  2467                           
  2468                           ;main.c: 1441: {
  2469                           ;main.c: 1445: static unsigned char ucTimerDelayP2sLess = 0;
  2470                           ;main.c: 1447: static unsigned char ucTimerDelayP2sMore = 0;
  2471                           ;main.c: 1449: if( getAdOriginalCh1Value() <= 220 )
  2472  0309  118A  25E9  118A   	fcall	_getAdOriginalCh1Value
  2473  030C  3000               	movlw	0
  2474  030D  0247               	subwf	?_getAdOriginalCh1Value+1,w
  2475  030E  30DD               	movlw	221
  2476  030F  1903               	skipnz
  2477  0310  0246               	subwf	?_getAdOriginalCh1Value,w
  2478  0311  1803               	skipnc
  2479  0312  2B16               	goto	l5147
  2480                           
  2481                           ;main.c: 1450: {
  2482                           ;main.c: 1451: ucTimerDelayP2sLess++;
  2483  0313  0AE1               	incf	main@ucTimerDelayP2sLess,f
  2484                           
  2485                           ;main.c: 1452: ucTimerDelayP2sMore = 0;
  2486  0314  01E2               	clrf	main@ucTimerDelayP2sMore
  2487                           
  2488                           ;main.c: 1453: }
  2489  0315  2B18               	goto	l5151
  2490  0316                     l5147:	
  2491                           
  2492                           ;main.c: 1454: else
  2493                           ;main.c: 1455: {
  2494                           ;main.c: 1456: ucTimerDelayP2sMore++;
  2495  0316  0AE2               	incf	main@ucTimerDelayP2sMore,f
  2496                           
  2497                           ;main.c: 1457: ucTimerDelayP2sLess = 0;
  2498  0317  01E1               	clrf	main@ucTimerDelayP2sLess
  2499  0318                     l5151:	
  2500                           
  2501                           ;main.c: 1458: }
  2502                           ;main.c: 1460: if( ucTimerDelayP2sLess >= 2)
  2503  0318  3002               	movlw	2
  2504  0319  0261               	subwf	main@ucTimerDelayP2sLess,w
  2505  031A  1C03               	skipc
  2506  031B  2B24               	goto	l5159
  2507                           
  2508                           ;main.c: 1461: {
  2509                           ;main.c: 1462: ucTimerDelayP2sLess = 0;
  2510  031C  01E1               	clrf	main@ucTimerDelayP2sLess
  2511                           
  2512                           ;main.c: 1463: ucTimerDelayP2sMore = 0;
  2513  031D  01E2               	clrf	main@ucTimerDelayP2sMore
  2514                           
  2515                           ;main.c: 1465: startTwentySecondsTimer();
  2516  031E  158A  27EF  118A   	fcall	_startTwentySecondsTimer
  2517                           
  2518                           ;main.c: 1467: ucADC4_Step = ADC4_STEP_FOURTH_PREFIX1;
  2519  0321  3004               	movlw	4
  2520  0322  1283               	bcf	3,5	;RP0=0, select bank0
  2521  0323  00D3               	movwf	main@ucADC4_Step
  2522  0324                     l5159:	
  2523                           
  2524                           ;main.c: 1468: }
  2525                           ;main.c: 1470: if(ucTimerDelayP2sMore >= 2)
  2526  0324  3002               	movlw	2
  2527  0325  0262               	subwf	main@ucTimerDelayP2sMore,w
  2528  0326  1C03               	skipc
  2529  0327  2840               	goto	l4711
  2530                           
  2531                           ;main.c: 1471: {
  2532                           ;main.c: 1472: ucTimerDelayP2sMore = 0;
  2533  0328  01E2               	clrf	main@ucTimerDelayP2sMore
  2534                           
  2535                           ;main.c: 1473: ucTimerDelayP2sLess = 0;
  2536  0329  01E1               	clrf	main@ucTimerDelayP2sLess
  2537  032A                     l5163:	
  2538                           
  2539                           ;main.c: 1474: ucADC4_Step = ADC4_STEP_FOURTH_PREFIX2;
  2540  032A  3005               	movlw	5
  2541  032B  2BBB               	goto	L21
  2542  032C                     l5165:	
  2543                           
  2544                           ;main.c: 1482: {
  2545                           ;main.c: 1486: if( !isFinishedTwentySecondsTimer() )
  2546  032C  158A  27D7  118A   	fcall	_isFinishedTwentySecondsTimer
  2547  032F  3800               	iorlw	0
  2548  0330  1903               	btfsc	3,2
  2549  0331  2B2A               	goto	l5163
  2550                           
  2551                           ;main.c: 1488: else
  2552                           ;main.c: 1489: ucADC4_Step = ADC4_STEP_FOURTH_PREFIX3;
  2553  0332  3006               	movlw	6
  2554  0333  2BBB               	goto	L21
  2555  0334                     l5171:	
  2556                           
  2557                           ;main.c: 1496: {
  2558                           ;main.c: 1500: static unsigned char ucTimerForDACR0_CNT1 = 0, ucTimerForDACR0_CNT2 = 0;
  2559                           ;main.c: 1502: static unsigned char ucTimerForDACR0_CNT1_f = 0, ucTimerForDACR0_CNT2_f =
      +                           0;
  2560                           ;main.c: 1504: if((getAdOriginalCh14Value() > 2800))
  2561  0334  118A  25F3  118A   	fcall	_getAdOriginalCh14Value
  2562  0337  300A               	movlw	10
  2563  0338  0247               	subwf	?_getAdOriginalCh14Value+1,w
  2564  0339  30F1               	movlw	241
  2565  033A  1903               	skipnz
  2566  033B  0246               	subwf	?_getAdOriginalCh14Value,w
  2567  033C  1C03               	skipc
  2568  033D  2B41               	goto	l5177
  2569                           
  2570                           ;main.c: 1505: {
  2571                           ;main.c: 1506: ucTimerForDACR0_CNT1++;
  2572  033E  0AE3               	incf	main@ucTimerForDACR0_CNT1,f
  2573                           
  2574                           ;main.c: 1507: ucTimerForDACR0_CNT2 = 0;
  2575  033F  01E5               	clrf	main@ucTimerForDACR0_CNT2
  2576                           
  2577                           ;main.c: 1508: }
  2578  0340  2B43               	goto	l5181
  2579  0341                     l5177:	
  2580                           
  2581                           ;main.c: 1509: else
  2582                           ;main.c: 1510: {
  2583                           ;main.c: 1511: ucTimerForDACR0_CNT2++;
  2584  0341  0AE5               	incf	main@ucTimerForDACR0_CNT2,f
  2585                           
  2586                           ;main.c: 1512: ucTimerForDACR0_CNT1 = 0;
  2587  0342  01E3               	clrf	main@ucTimerForDACR0_CNT1
  2588  0343                     l5181:	
  2589                           
  2590                           ;main.c: 1513: }
  2591                           ;main.c: 1515: if(ucTimerForDACR0_CNT1 >= 2)
  2592  0343  3002               	movlw	2
  2593  0344  0263               	subwf	main@ucTimerForDACR0_CNT1,w
  2594  0345  1C03               	skipc
  2595  0346  2B49               	goto	l5185
  2596                           
  2597                           ;main.c: 1516: ucTimerForDACR0_CNT1_f = 1;
  2598  0347  01E4               	clrf	main@ucTimerForDACR0_CNT1_f
  2599  0348  0AE4               	incf	main@ucTimerForDACR0_CNT1_f,f
  2600  0349                     l5185:	
  2601                           
  2602                           ;main.c: 1518: if(ucTimerForDACR0_CNT2 >= 2)
  2603  0349  3002               	movlw	2
  2604  034A  0265               	subwf	main@ucTimerForDACR0_CNT2,w
  2605  034B  1C03               	skipc
  2606  034C  2B4F               	goto	l5189
  2607                           
  2608                           ;main.c: 1519: ucTimerForDACR0_CNT2_f = 1;
  2609  034D  01E6               	clrf	main@ucTimerForDACR0_CNT2_f
  2610  034E  0AE6               	incf	main@ucTimerForDACR0_CNT2_f,f
  2611  034F                     l5189:	
  2612                           
  2613                           ;main.c: 1521: if(ucTimerForDACR0_CNT1_f)
  2614  034F  0864               	movf	main@ucTimerForDACR0_CNT1_f,w
  2615  0350  1903               	btfsc	3,2
  2616  0351  2B54               	goto	l5193
  2617                           
  2618                           ;main.c: 1522: {
  2619                           ;main.c: 1524: DACR0=0x0F;
  2620  0352  300F               	movlw	15
  2621  0353  2B58               	goto	L10
  2622  0354                     l5193:	
  2623                           ;main.c: 1529: }
  2624                           
  2625                           ;main.c: 1528: ucADC4_Step = ADC4_STEP_FOURTH;
  2626                           
  2627                           
  2628                           ;main.c: 1530: else if(ucTimerForDACR0_CNT2_f)
  2629  0354  0866               	movf	main@ucTimerForDACR0_CNT2_f,w
  2630  0355  1903               	btfsc	3,2
  2631  0356  2B5D               	goto	l5197
  2632                           
  2633                           ;main.c: 1531: {
  2634                           ;main.c: 1533: DACR0=0x09;
  2635  0357  3009               	movlw	9
  2636  0358                     L10:	
  2637  0358  1683               	bsf	3,5	;RP0=1, select bank1
  2638  0359  0088               	movwf	8	;volatile
  2639                           
  2640                           ;main.c: 1537: ucADC4_Step = ADC4_STEP_FOURTH;
  2641  035A  300A               	movlw	10
  2642  035B  1283               	bcf	3,5	;RP0=0, select bank0
  2643  035C  00D3               	movwf	main@ucADC4_Step
  2644  035D                     l5197:	
  2645                           ;main.c: 1538: }
  2646                           
  2647                           
  2648                           ;main.c: 1542: }
  2649                           ;main.c: 1544: if(ADC4_STEP_FOURTH == ucADC4_Step)
  2650  035D  0853               	movf	main@ucADC4_Step,w
  2651  035E  3A0A               	xorlw	10
  2652  035F  1D03               	skipz
  2653  0360  2840               	goto	l4711
  2654                           
  2655                           ;main.c: 1545: {
  2656                           ;main.c: 1546: ucTimerForDACR0_CNT1 = 0;
  2657  0361  01E3               	clrf	main@ucTimerForDACR0_CNT1
  2658                           
  2659                           ;main.c: 1547: ucTimerForDACR0_CNT2 = 0;
  2660  0362  01E5               	clrf	main@ucTimerForDACR0_CNT2
  2661                           
  2662                           ;main.c: 1548: ucTimerForDACR0_CNT1_f = 0;
  2663  0363  01E4               	clrf	main@ucTimerForDACR0_CNT1_f
  2664                           
  2665                           ;main.c: 1549: ucTimerForDACR0_CNT2_f = 0;
  2666  0364  01E6               	clrf	main@ucTimerForDACR0_CNT2_f
  2667  0365  2840               	goto	l4711
  2668  0366                     l5201:	
  2669                           
  2670                           ;main.c: 1557: {
  2671                           ;main.c: 1561: clearTwentySecondsTimer();
  2672  0366  118A  272C  118A   	fcall	_clearTwentySecondsTimer
  2673                           
  2674                           ;main.c: 1563: setPA6(0);
  2675  0369  3000               	movlw	0
  2676  036A  118A  2712  118A   	fcall	_setPA6
  2677                           
  2678                           ;main.c: 1565: PBOD6 = 0;
  2679  036D  1683               	bsf	3,5	;RP0=1, select bank3
  2680  036E  1703               	bsf	3,6	;RP1=1, select bank3
  2681  036F  1308               	bcf	8,6
  2682                           
  2683                           ;main.c: 1566: PB6 = 1;
  2684  0370  1283               	bcf	3,5	;RP0=0, select bank0
  2685  0371  3007               	movlw	7
  2686  0372  2B80               	goto	L22
  2687  0373                     l5209:	
  2688                           ;main.c: 1572: break;
  2689                           
  2690                           ;main.c: 1571: ucADC4_Step = ADC4_STEP_FOURTH_PREFIX4;
  2691                           
  2692  0373  3005               	movlw	5
  2693                           
  2694                           ;main.c: 1578: {
  2695                           ;main.c: 1583: static unsigned char ucDelayPrefix4TimerP5s;
  2696                           ;main.c: 1585: ucDelayPrefix4TimerP5s++;
  2697  0374  0AD5               	incf	main@ucDelayPrefix4TimerP5s,f
  2698                           
  2699                           ;main.c: 1587: if( ucDelayPrefix4TimerP5s >= 5)
  2700  0375  0255               	subwf	main@ucDelayPrefix4TimerP5s,w
  2701  0376  1C03               	skipc
  2702  0377  2840               	goto	l4711
  2703  0378  3008               	movlw	8
  2704                           
  2705                           ;main.c: 1588: {
  2706                           ;main.c: 1589: ucDelayPrefix4TimerP5s = 0;
  2707  0379  01D5               	clrf	main@ucDelayPrefix4TimerP5s
  2708                           
  2709                           ;main.c: 1591: ucADC4_Step = ADC4_STEP_FOURTH_PREFIX5;
  2710  037A  2BBC               	goto	L14
  2711  037B                     l991:	
  2712                           ;main.c: 1594: }
  2713                           ;main.c: 1596: case ADC4_STEP_FOURTH_PREFIX5:
  2714                           
  2715                           
  2716                           ;main.c: 1597: {
  2717                           ;main.c: 1603: PBOD6 = 1;
  2718  037B  1683               	bsf	3,5	;RP0=1, select bank3
  2719  037C  1703               	bsf	3,6	;RP1=1, select bank3
  2720  037D  1708               	bsf	8,6
  2721                           
  2722                           ;main.c: 1604: PB6 = 1;
  2723  037E  1283               	bcf	3,5	;RP0=0, select bank0
  2724  037F  3009               	movlw	9
  2725  0380                     L22:	
  2726  0380  1303               	bcf	3,6	;RP1=0, select bank0
  2727  0381  1706               	bsf	6,6
  2728                           
  2729                           ;main.c: 1609: ucADC4_Step = ADC4_STEP_FOURTH_PREFIX6;
  2730  0382  2BBC               	goto	L14
  2731  0383                     l5219:	
  2732                           ;main.c: 1611: break;
  2733                           
  2734                           
  2735                           ;main.c: 1616: {
  2736                           ;main.c: 1617: static unsigned char ucDelayPrefix6TimerP2s;
  2737                           ;main.c: 1619: ucDelayPrefix6TimerP2s++;
  2738  0383  1683               	bsf	3,5	;RP0=1, select bank1
  2739  0384  3002               	movlw	2
  2740  0385  0AB3               	incf	main@ucDelayPrefix6TimerP2s^(0+128),f
  2741                           
  2742                           ;main.c: 1621: if( ucDelayPrefix6TimerP2s >= 2)
  2743  0386  0233               	subwf	main@ucDelayPrefix6TimerP2s^(0+128),w
  2744  0387  1C03               	skipc
  2745  0388  2840               	goto	l4711
  2746                           
  2747                           ;main.c: 1622: {
  2748                           ;main.c: 1623: ucDelayPrefix6TimerP2s = 0;
  2749  0389  01B3               	clrf	main@ucDelayPrefix6TimerP2s^(0+128)
  2750                           
  2751                           ;main.c: 1625: ucADC4_Step = ADC4_STEP_INIT;
  2752  038A  1283               	bcf	3,5	;RP0=0, select bank0
  2753  038B                     L15:	
  2754  038B  01D3               	clrf	main@ucADC4_Step
  2755                           
  2756                           ;main.c: 1627: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  2757  038C  01D2               	clrf	main@enumMainLoopStep
  2758  038D  0AD2               	incf	main@enumMainLoopStep,f
  2759  038E  2840               	goto	l4711
  2760  038F                     l5227:	
  2761                           
  2762                           ;main.c: 1634: {
  2763                           ;main.c: 1638: static unsigned char ucCheckTimerP2sLess = 0;
  2764                           ;main.c: 1640: static unsigned char ucCheckTimerP2sMore = 0;
  2765                           ;main.c: 1642: if( getAdOriginalCh1Value() < 85)
  2766  038F  118A  25E9  118A   	fcall	_getAdOriginalCh1Value
  2767  0392  3000               	movlw	0
  2768  0393  0247               	subwf	?_getAdOriginalCh1Value+1,w
  2769  0394  3055               	movlw	85
  2770  0395  1903               	skipnz
  2771  0396  0246               	subwf	?_getAdOriginalCh1Value,w
  2772  0397  1803               	skipnc
  2773  0398  2B9D               	goto	l5233
  2774                           
  2775                           ;main.c: 1643: {
  2776                           ;main.c: 1644: ucCheckTimerP2sLess++;
  2777  0399  1683               	bsf	3,5	;RP0=1, select bank1
  2778  039A  0AB1               	incf	main@ucCheckTimerP2sLess^(0+128),f
  2779                           
  2780                           ;main.c: 1645: ucCheckTimerP2sMore = 0;
  2781  039B  01B2               	clrf	main@ucCheckTimerP2sMore^(0+128)
  2782                           
  2783                           ;main.c: 1646: }
  2784  039C  2BA0               	goto	l5237
  2785  039D                     l5233:	
  2786                           
  2787                           ;main.c: 1647: else
  2788                           ;main.c: 1648: {
  2789                           ;main.c: 1649: ucCheckTimerP2sMore++;
  2790  039D  1683               	bsf	3,5	;RP0=1, select bank1
  2791  039E  0AB2               	incf	main@ucCheckTimerP2sMore^(0+128),f
  2792                           
  2793                           ;main.c: 1650: ucCheckTimerP2sLess = 0;
  2794  039F  01B1               	clrf	main@ucCheckTimerP2sLess^(0+128)
  2795  03A0                     l5237:	
  2796                           
  2797                           ;main.c: 1651: }
  2798                           ;main.c: 1653: if( ucCheckTimerP2sMore > 2)
  2799  03A0  3003               	movlw	3
  2800  03A1  0232               	subwf	main@ucCheckTimerP2sMore^(0+128),w
  2801  03A2  1C03               	skipc
  2802  03A3  2BAA               	goto	l5243
  2803                           
  2804                           ;main.c: 1654: {
  2805                           ;main.c: 1655: ucCheckTimerP2sMore = 0;
  2806  03A4  01B2               	clrf	main@ucCheckTimerP2sMore^(0+128)
  2807                           
  2808                           ;main.c: 1656: ucCheckTimerP2sLess = 0;
  2809  03A5  01B1               	clrf	main@ucCheckTimerP2sLess^(0+128)
  2810                           
  2811                           ;main.c: 1658: ucADC4_Step = ADC4_STEP_INIT;
  2812  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  2813  03A7  3003               	movlw	3
  2814  03A8  01D3               	clrf	main@ucADC4_Step
  2815                           
  2816                           ;main.c: 1660: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  2817  03A9  00D2               	movwf	main@enumMainLoopStep
  2818  03AA                     l5243:	
  2819                           
  2820                           ;main.c: 1661: }
  2821                           ;main.c: 1663: if( ucCheckTimerP2sLess > 2)
  2822  03AA  3003               	movlw	3
  2823  03AB  1683               	bsf	3,5	;RP0=1, select bank1
  2824  03AC  0231               	subwf	main@ucCheckTimerP2sLess^(0+128),w
  2825  03AD  1C03               	skipc
  2826  03AE  2840               	goto	l4711
  2827  03AF  300B               	movlw	11
  2828                           
  2829                           ;main.c: 1664: {
  2830                           ;main.c: 1665: ucCheckTimerP2sMore = 0;
  2831  03B0  01B2               	clrf	main@ucCheckTimerP2sMore^(0+128)
  2832                           
  2833                           ;main.c: 1666: ucCheckTimerP2sLess = 0;
  2834  03B1  01B1               	clrf	main@ucCheckTimerP2sLess^(0+128)
  2835                           
  2836                           ;main.c: 1668: ucADC4_Step = ADC4_STEP_FOURTH_SUFFIX1;
  2837  03B2  2BBB               	goto	L21
  2838  03B3                     l5249:	
  2839                           
  2840                           ;main.c: 1677: {
  2841                           ;main.c: 1681: static unsigned char ucFourthSuffix1TimerP3s = 0;
  2842                           ;main.c: 1683: ucFourthSuffix1TimerP3s++;
  2843  03B3  1683               	bsf	3,5	;RP0=1, select bank1
  2844  03B4  3004               	movlw	4
  2845  03B5  0AB4               	incf	main@ucFourthSuffix1TimerP3s^(0+128),f
  2846                           
  2847                           ;main.c: 1685: if( ucFourthSuffix1TimerP3s > 3)
  2848  03B6  0234               	subwf	main@ucFourthSuffix1TimerP3s^(0+128),w
  2849  03B7  1C03               	skipc
  2850  03B8  2840               	goto	l4711
  2851  03B9  300C               	movlw	12
  2852                           
  2853                           ;main.c: 1686: {
  2854                           ;main.c: 1687: ucFourthSuffix1TimerP3s = 0;
  2855  03BA  01B4               	clrf	main@ucFourthSuffix1TimerP3s^(0+128)
  2856  03BB                     L21:	
  2857                           ;main.c: 1688: ucADC4_Step = ADC4_STEP_FOURTH_SUFFIX2;
  2858                           
  2859  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  2860  03BC                     L14:	
  2861  03BC  00D3               	movwf	main@ucADC4_Step
  2862  03BD  2840               	goto	l4711
  2863  03BE                     l5257:	
  2864                           
  2865                           ;main.c: 1695: {
  2866                           ;main.c: 1700: setPA6(0);
  2867  03BE  3000               	movlw	0
  2868  03BF  118A  2712  118A   	fcall	_setPA6
  2869                           
  2870                           ;main.c: 1702: clearPinPortAndTimer();
  2871  03C2  118A  26AB  118A   	fcall	_clearPinPortAndTimer
  2872  03C5  2B8B               	goto	L15
  2873  03C6                     l5265:	
  2874                           ;main.c: 1703: ucADC4_Step = ADC4_STEP_INIT;
  2875                           
  2876  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  2877  03C7  0853               	movf	main@ucADC4_Step,w
  2878                           
  2879                           ; Switch size 1, requested type "space"
  2880                           ; Number of cases is 13, Range of values is 0 to 12
  2881                           ; switch strategies available:
  2882                           ; Name         Instructions Cycles
  2883                           ; direct_byte           33     7 (fixed)
  2884                           ; simple_byte           40    21 (average)
  2885                           ; jumptable            260     6 (fixed)
  2886                           ; rangetable            17     6 (fixed)
  2887                           ; spacedrange           32     9 (fixed)
  2888                           ; locatedrange          13     3 (fixed)
  2889                           ;	Chosen strategy is direct_byte
  2890  03C8  0084               	movwf	4
  2891  03C9  300D               	movlw	13
  2892  03CA  0204               	subwf	4,w
  2893  03CB  1803               	skipnc
  2894  03CC  2840               	goto	l4711
  2895  03CD  3007               	movlw	high S5679
  2896  03CE  008A               	movwf	10
  2897  03CF  1003               	clrc
  2898  03D0  0D04               	rlf	4,w
  2899  03D1  3E8F               	addlw	low S5679
  2900  03D2  0082               	movwf	2
  2901  03D3                     l1015:	
  2902                           ;main.c: 1732: {
  2903                           ;main.c: 1733: case HOUR_3_BRANCH_STEP_FIRST:
  2904                           
  2905                           
  2906                           ;main.c: 1734: {
  2907                           ;main.c: 1736: PB7 = 1;
  2908  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  2909  03D4  1786               	bsf	6,7
  2910                           
  2911                           ;main.c: 1737: PBOD7 = 1;
  2912  03D5  1683               	bsf	3,5	;RP0=1, select bank3
  2913  03D6  302C               	movlw	44
  2914  03D7  1703               	bsf	3,6	;RP1=1, select bank3
  2915  03D8  1788               	bsf	8,7
  2916                           
  2917                           ;main.c: 1742: startThreeHoursTimer(300);
  2918  03D9  1283               	bcf	3,5	;RP0=0, select bank0
  2919  03DA  1303               	bcf	3,6	;RP1=0, select bank0
  2920  03DB  00A0               	movwf	?_startThreeHoursTimer
  2921  03DC  3001               	movlw	1
  2922  03DD  00A1               	movwf	?_startThreeHoursTimer+1
  2923  03DE  118A  27C2  118A   	fcall	_startThreeHoursTimer
  2924                           
  2925                           ;main.c: 1745: setPB0(1);
  2926  03E1  3001               	movlw	1
  2927  03E2  118A  26DF  118A   	fcall	_setPB0
  2928                           
  2929                           ;main.c: 1747: setPA0(1);
  2930  03E5  3001               	movlw	1
  2931  03E6  118A  26F0  118A   	fcall	_setPA0
  2932                           
  2933                           ;main.c: 1749: setPA1(1);
  2934  03E9  3001               	movlw	1
  2935  03EA  118A  26FA  118A   	fcall	_setPA1
  2936                           
  2937                           ;main.c: 1751: setPA2(1);
  2938  03ED  3001               	movlw	1
  2939  03EE  118A  2702  118A   	fcall	_setPA2
  2940                           
  2941                           ;main.c: 1753: setPA3(1);
  2942  03F1  3001               	movlw	1
  2943  03F2  118A  270A  118A   	fcall	_setPA3
  2944                           
  2945                           ;main.c: 1755: enumBranchStep = HOUR_3_BRANCH_STEP_SECOND;
  2946  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  2947  03F6  01AF               	clrf	main@enumBranchStep^(0+128)
  2948  03F7  0AAF               	incf	main@enumBranchStep^(0+128),f
  2949                           
  2950                           ;main.c: 1756: break;
  2951  03F8  2840               	goto	l4711
  2952  03F9                     l5271:	
  2953                           
  2954                           ;main.c: 1760: {
  2955                           ;main.c: 1764: static unsigned char ucTimer20s = 0;
  2956                           ;main.c: 1766: if(ucTimer20s < 200)
  2957  03F9  30C8               	movlw	200
  2958  03FA  0236               	subwf	main@ucTimer20s^(0+128),w
  2959  03FB  1803               	skipnc
  2960  03FC  2BFF               	goto	l5275
  2961                           
  2962                           ;main.c: 1767: {
  2963                           ;main.c: 1768: ucTimer20s++;
  2964  03FD  0AB6               	incf	main@ucTimer20s^(0+128),f
  2965                           
  2966                           ;main.c: 1770: }
  2967  03FE  2840               	goto	l4711
  2968  03FF                     l5275:	
  2969  03FF  3002               	movlw	2
  2970                           
  2971                           ;main.c: 1771: else
  2972                           ;main.c: 1772: {
  2973                           ;main.c: 1774: ucTimer20s = 0;
  2974  0400  01B6               	clrf	main@ucTimer20s^(0+128)
  2975                           
  2976                           ;main.c: 1776: enumBranchStep = HOUR_3_BRANCH_STEP_THIRD;
  2977  0401  00AF               	movwf	main@enumBranchStep^(0+128)
  2978                           
  2979                           ;main.c: 1779: setPA6(0);
  2980  0402  3000               	movlw	0
  2981  0403  118A  2712  118A   	fcall	_setPA6
  2982  0406  2840               	goto	l4711
  2983  0407                     l5281:	
  2984                           
  2985                           ;main.c: 1785: {
  2986                           ;main.c: 1789: if( (isFinishedTwelveHoursTimer()) || (isFinishedThreeHoursTimer()))
  2987  0407  158A  27CB  118A   	fcall	_isFinishedTwelveHoursTimer
  2988  040A  3800               	iorlw	0
  2989  040B  1D03               	skipz
  2990  040C  2C13               	goto	l5285
  2991  040D  158A  27E3  118A   	fcall	_isFinishedThreeHoursTimer
  2992  0410  3A00               	xorlw	0
  2993  0411  1903               	skipnz
  2994  0412  2C16               	goto	l5289
  2995  0413                     l5285:	
  2996                           
  2997                           ;main.c: 1790: {
  2998                           ;main.c: 1791: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2999  0413  1683               	bsf	3,5	;RP0=1, select bank1
  3000  0414  3009               	movlw	9
  3001  0415  2C36               	goto	L23
  3002  0416                     l5289:	
  3003                           ;main.c: 1793: }
  3004                           
  3005                           ;main.c: 1792: enumMainLoopStep = MAIN_LOOP_STEP_12_HOUR_END;
  3006                           
  3007                           
  3008                           ;main.c: 1794: else
  3009                           ;main.c: 1795: {
  3010                           ;main.c: 1796: static unsigned char ucTimerX1P5s = 0;
  3011                           ;main.c: 1798: static unsigned char ucTimerLessX1P5s = 0;
  3012                           ;main.c: 1800: if(getAdOriginalCh1Value() < 115)
  3013  0416  118A  25E9  118A   	fcall	_getAdOriginalCh1Value
  3014  0419  3000               	movlw	0
  3015  041A  0247               	subwf	?_getAdOriginalCh1Value+1,w
  3016  041B  3073               	movlw	115
  3017  041C  1903               	skipnz
  3018  041D  0246               	subwf	?_getAdOriginalCh1Value,w
  3019  041E  1803               	skipnc
  3020  041F  2C24               	goto	l5295
  3021                           
  3022                           ;main.c: 1801: {
  3023                           ;main.c: 1802: ucTimerX1P5s = 0;
  3024  0420  1683               	bsf	3,5	;RP0=1, select bank1
  3025  0421  01BA               	clrf	main@ucTimerX1P5s^(0+128)
  3026                           
  3027                           ;main.c: 1803: ucTimerLessX1P5s++;
  3028  0422  0AB7               	incf	main@ucTimerLessX1P5s^(0+128),f
  3029                           
  3030                           ;main.c: 1804: }
  3031  0423  2C27               	goto	l5299
  3032  0424                     l5295:	
  3033                           
  3034                           ;main.c: 1805: else
  3035                           ;main.c: 1806: {
  3036                           ;main.c: 1807: ucTimerX1P5s++;
  3037  0424  1683               	bsf	3,5	;RP0=1, select bank1
  3038  0425  0ABA               	incf	main@ucTimerX1P5s^(0+128),f
  3039                           
  3040                           ;main.c: 1808: ucTimerLessX1P5s = 0;
  3041  0426  01B7               	clrf	main@ucTimerLessX1P5s^(0+128)
  3042  0427                     l5299:	
  3043                           
  3044                           ;main.c: 1809: }
  3045                           ;main.c: 1811: if(ucTimerX1P5s >= 5)
  3046  0427  3005               	movlw	5
  3047  0428  023A               	subwf	main@ucTimerX1P5s^(0+128),w
  3048  0429  1C03               	skipc
  3049  042A  2C3A               	goto	l5313
  3050                           
  3051                           ;main.c: 1812: {
  3052                           ;main.c: 1813: ucTimerX1P5s = 0;
  3053  042B  01BA               	clrf	main@ucTimerX1P5s^(0+128)
  3054                           
  3055                           ;main.c: 1817: PBOD7 = 0;
  3056  042C  1703               	bsf	3,6	;RP1=1, select bank3
  3057  042D  1388               	bcf	8,7
  3058                           
  3059                           ;main.c: 1818: PB7 = 0;
  3060  042E  1283               	bcf	3,5	;RP0=0, select bank0
  3061  042F  1303               	bcf	3,6	;RP1=0, select bank0
  3062  0430  1386               	bcf	6,7
  3063                           
  3064                           ;main.c: 1823: clearThreeHoursTimer();
  3065  0431  118A  2726  118A   	fcall	_clearThreeHoursTimer
  3066                           
  3067                           ;main.c: 1825: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  3068  0434  1683               	bsf	3,5	;RP0=1, select bank1
  3069  0435  3002               	movlw	2
  3070  0436                     L23:	
  3071  0436  01AF               	clrf	main@enumBranchStep^(0+128)
  3072                           
  3073                           ;main.c: 1827: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
  3074  0437  1283               	bcf	3,5	;RP0=0, select bank0
  3075  0438                     L16:	
  3076  0438  00D2               	movwf	main@enumMainLoopStep
  3077                           
  3078                           ;main.c: 1828: }
  3079  0439  2840               	goto	l4711
  3080  043A                     l5313:	
  3081                           
  3082                           ;main.c: 1829: else if(ucTimerLessX1P5s >= 5)
  3083  043A  3005               	movlw	5
  3084  043B  0237               	subwf	main@ucTimerLessX1P5s^(0+128),w
  3085  043C  1C03               	skipc
  3086  043D  2840               	goto	l4711
  3087                           
  3088                           ;main.c: 1830: {
  3089                           ;main.c: 1831: static unsigned char ucTimerX2P5s = 0;
  3090                           ;main.c: 1833: static unsigned char ucTimerLessX2P5s = 0;
  3091                           ;main.c: 1835: if(getAdOriginalCh14Value() >= 1950)
  3092  043E  118A  25F3  118A   	fcall	_getAdOriginalCh14Value
  3093  0441  3007               	movlw	7
  3094  0442  0247               	subwf	?_getAdOriginalCh14Value+1,w
  3095  0443  309E               	movlw	158
  3096  0444  1903               	skipnz
  3097  0445  0246               	subwf	?_getAdOriginalCh14Value,w
  3098  0446  1C03               	skipc
  3099  0447  2C4C               	goto	l5321
  3100                           
  3101                           ;main.c: 1836: {
  3102                           ;main.c: 1837: ucTimerX2P5s++;
  3103  0448  1683               	bsf	3,5	;RP0=1, select bank1
  3104  0449  0ABB               	incf	main@ucTimerX2P5s^(0+128),f
  3105                           
  3106                           ;main.c: 1838: ucTimerLessX2P5s = 0;
  3107  044A  01B8               	clrf	main@ucTimerLessX2P5s^(0+128)
  3108                           
  3109                           ;main.c: 1839: }
  3110  044B  2C4F               	goto	l5325
  3111  044C                     l5321:	
  3112                           
  3113                           ;main.c: 1840: else
  3114                           ;main.c: 1841: {
  3115                           ;main.c: 1842: ucTimerX2P5s = 0;
  3116  044C  1683               	bsf	3,5	;RP0=1, select bank1
  3117  044D  01BB               	clrf	main@ucTimerX2P5s^(0+128)
  3118                           
  3119                           ;main.c: 1843: ucTimerLessX2P5s++;
  3120  044E  0AB8               	incf	main@ucTimerLessX2P5s^(0+128),f
  3121  044F                     l5325:	
  3122                           
  3123                           ;main.c: 1844: }
  3124                           ;main.c: 1846: if(ucTimerX2P5s >= 5)
  3125  044F  3005               	movlw	5
  3126  0450  023B               	subwf	main@ucTimerX2P5s^(0+128),w
  3127  0451  1C03               	skipc
  3128  0452  2C55               	goto	l5329
  3129                           
  3130                           ;main.c: 1847: {
  3131                           ;main.c: 1848: ucTimerX2P5s = 0;
  3132  0453  01BB               	clrf	main@ucTimerX2P5s^(0+128)
  3133                           
  3134                           ;main.c: 1849: }
  3135  0454  2840               	goto	l4711
  3136  0455                     l5329:	
  3137                           
  3138                           ;main.c: 1850: else if(ucTimerLessX2P5s >= 5)
  3139  0455  3005               	movlw	5
  3140  0456  0238               	subwf	main@ucTimerLessX2P5s^(0+128),w
  3141  0457  1C03               	skipc
  3142  0458  2840               	goto	l4711
  3143                           
  3144                           ;main.c: 1851: {
  3145                           ;main.c: 1852: clearPinPortAndTimer();
  3146  0459  118A  26AB  118A   	fcall	_clearPinPortAndTimer
  3147                           
  3148                           ;main.c: 1853: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  3149  045C  01D2               	clrf	main@enumMainLoopStep
  3150  045D  0AD2               	incf	main@enumMainLoopStep,f
  3151                           
  3152                           ;main.c: 1854: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  3153  045E  1683               	bsf	3,5	;RP0=1, select bank1
  3154  045F  01AF               	clrf	main@enumBranchStep^(0+128)
  3155                           
  3156                           ;main.c: 1855: }
  3157  0460  2840               	goto	l4711
  3158  0461                     l5339:	
  3159  0461  1683               	bsf	3,5	;RP0=1, select bank1
  3160  0462  082F               	movf	main@enumBranchStep^(0+128),w
  3161                           
  3162                           ; Switch size 1, requested type "space"
  3163                           ; Number of cases is 3, Range of values is 0 to 2
  3164                           ; switch strategies available:
  3165                           ; Name         Instructions Cycles
  3166                           ; simple_byte           10     6 (average)
  3167                           ; direct_byte           13     7 (fixed)
  3168                           ; jumptable            260     6 (fixed)
  3169                           ; rangetable             7     6 (fixed)
  3170                           ; spacedrange           12     9 (fixed)
  3171                           ; locatedrange           3     3 (fixed)
  3172                           ;	Chosen strategy is simple_byte
  3173  0463  3A00               	xorlw	0	; case 0
  3174  0464  1903               	skipnz
  3175  0465  2BD3               	goto	l1015
  3176  0466  3A01               	xorlw	1	; case 1
  3177  0467  1903               	skipnz
  3178  0468  2BF9               	goto	l5271
  3179  0469  3A03               	xorlw	3	; case 2
  3180  046A  1903               	skipnz
  3181  046B  2C07               	goto	l5281
  3182  046C  287B               	goto	l762
  3183  046D                     l5341:	
  3184                           
  3185                           ;main.c: 1896: {
  3186                           ;main.c: 1901: setPB0(0);
  3187  046D  3000               	movlw	0
  3188  046E  118A  26DF  118A   	fcall	_setPB0
  3189                           
  3190                           ;main.c: 1903: setPB1(0);
  3191  0471  3000               	movlw	0
  3192  0472  118A  26E8  118A   	fcall	_setPB1
  3193                           
  3194                           ;main.c: 1905: setPA0(0);
  3195  0475  3000               	movlw	0
  3196  0476  118A  26F0  118A   	fcall	_setPA0
  3197                           
  3198                           ;main.c: 1907: setPA1(0);
  3199  0479  3000               	movlw	0
  3200  047A  118A  26FA  118A   	fcall	_setPA1
  3201                           
  3202                           ;main.c: 1909: setPA2(0);
  3203  047D  3000               	movlw	0
  3204  047E  118A  2702  118A   	fcall	_setPA2
  3205                           
  3206                           ;main.c: 1911: setPA3(0);
  3207  0481  3000               	movlw	0
  3208  0482  118A  270A  118A   	fcall	_setPA3
  3209                           
  3210                           ;main.c: 1914: PBOD6 = 0;
  3211  0485  1683               	bsf	3,5	;RP0=1, select bank3
  3212  0486  1703               	bsf	3,6	;RP1=1, select bank3
  3213  0487  1308               	bcf	8,6
  3214                           
  3215                           ;main.c: 1915: PB6 = 1;
  3216  0488  1283               	bcf	3,5	;RP0=0, select bank0
  3217  0489  3000               	movlw	0
  3218  048A  1303               	bcf	3,6	;RP1=0, select bank0
  3219  048B  1706               	bsf	6,6
  3220                           
  3221                           ;main.c: 1921: setPA6(0);
  3222  048C  118A  2712  118A   	fcall	_setPA6
  3223                           
  3224                           ;main.c: 1923: enumInteralStep = INTERNAL_SECOND_STEP;
  3225  048F  1683               	bsf	3,5	;RP0=1, select bank1
  3226  0490  01B0               	clrf	main@enumInteralStep^(0+128)
  3227  0491  0AB0               	incf	main@enumInteralStep^(0+128),f
  3228                           
  3229                           ;main.c: 1924: break;
  3230  0492  2840               	goto	l4711
  3231  0493                     l5349:	
  3232                           
  3233                           ;main.c: 1928: {
  3234                           ;main.c: 1932: static unsigned char ucTimer1s = 0;
  3235                           ;main.c: 1934: if(getAdOriginalCh14Value() <= 1000)
  3236  0493  118A  25F3  118A   	fcall	_getAdOriginalCh14Value
  3237  0496  3003               	movlw	3
  3238  0497  0247               	subwf	?_getAdOriginalCh14Value+1,w
  3239  0498  30E9               	movlw	233
  3240  0499  1903               	skipnz
  3241  049A  0246               	subwf	?_getAdOriginalCh14Value,w
  3242  049B  1803               	skipnc
  3243  049C  2CA0               	goto	l5353
  3244                           
  3245                           ;main.c: 1935: {
  3246                           ;main.c: 1936: ucTimer1s++;
  3247  049D  1683               	bsf	3,5	;RP0=1, select bank1
  3248  049E  0AB5               	incf	main@ucTimer1s^(0+128),f
  3249                           
  3250                           ;main.c: 1937: }
  3251  049F  2CA2               	goto	l5355
  3252  04A0                     l5353:	
  3253                           
  3254                           ;main.c: 1938: else
  3255                           ;main.c: 1939: ucTimer1s = 0;
  3256  04A0  1683               	bsf	3,5	;RP0=1, select bank1
  3257  04A1  01B5               	clrf	main@ucTimer1s^(0+128)
  3258  04A2                     l5355:	
  3259                           
  3260                           ;main.c: 1941: if(ucTimer1s >= 10)
  3261  04A2  300A               	movlw	10
  3262  04A3  0235               	subwf	main@ucTimer1s^(0+128),w
  3263  04A4  1C03               	skipc
  3264  04A5  2840               	goto	l4711
  3265                           
  3266                           ;main.c: 1942: {
  3267                           ;main.c: 1943: enumInteralStep = INTERNAL_THIRD_STEP;
  3268  04A6  3002               	movlw	2
  3269  04A7  00B0               	movwf	main@enumInteralStep^(0+128)
  3270                           
  3271                           ;main.c: 1944: ucTimer1s = 0;
  3272  04A8  01B5               	clrf	main@ucTimer1s^(0+128)
  3273  04A9  2840               	goto	l4711
  3274  04AA                     l5361:	
  3275                           
  3276                           ;main.c: 1950: {
  3277                           ;main.c: 1954: static unsigned char ucTimerP3s = 0;
  3278                           ;main.c: 1956: if(getAdOriginalCh14Value() >= 1950)
  3279  04AA  118A  25F3  118A   	fcall	_getAdOriginalCh14Value
  3280  04AD  3007               	movlw	7
  3281  04AE  0247               	subwf	?_getAdOriginalCh14Value+1,w
  3282  04AF  309E               	movlw	158
  3283  04B0  1903               	skipnz
  3284  04B1  0246               	subwf	?_getAdOriginalCh14Value,w
  3285  04B2  1C03               	skipc
  3286  04B3  2CB7               	goto	l5365
  3287                           
  3288                           ;main.c: 1957: {
  3289                           ;main.c: 1958: ucTimerP3s++;
  3290  04B4  1683               	bsf	3,5	;RP0=1, select bank1
  3291  04B5  0AB9               	incf	main@ucTimerP3s^(0+128),f
  3292                           
  3293                           ;main.c: 1959: }
  3294  04B6  2CB9               	goto	l5367
  3295  04B7                     l5365:	
  3296                           
  3297                           ;main.c: 1960: else
  3298                           ;main.c: 1961: ucTimerP3s = 0;
  3299  04B7  1683               	bsf	3,5	;RP0=1, select bank1
  3300  04B8  01B9               	clrf	main@ucTimerP3s^(0+128)
  3301  04B9                     l5367:	
  3302                           
  3303                           ;main.c: 1963: if(ucTimerP3s >= 3)
  3304  04B9  3003               	movlw	3
  3305  04BA  0239               	subwf	main@ucTimerP3s^(0+128),w
  3306  04BB  1C03               	skipc
  3307  04BC  2840               	goto	l4711
  3308                           
  3309                           ;main.c: 1964: {
  3310                           ;main.c: 1965: enumInteralStep = INTERNAL_FIRST_STEP;
  3311  04BD  01B0               	clrf	main@enumInteralStep^(0+128)
  3312                           
  3313                           ;main.c: 1966: ucTimerP3s = 0;
  3314  04BE  01B9               	clrf	main@ucTimerP3s^(0+128)
  3315                           
  3316                           ;main.c: 1968: clearAllTimer();
  3317  04BF  118A  271B  118A   	fcall	_clearAllTimer
  3318                           
  3319                           ;main.c: 1970: DACR0=0x0F;
  3320  04C2  300F               	movlw	15
  3321  04C3  1683               	bsf	3,5	;RP0=1, select bank1
  3322  04C4  0088               	movwf	8	;volatile
  3323                           
  3324                           ;main.c: 1974: initPin();
  3325  04C5  118A  26C1  118A   	fcall	_initPin
  3326                           
  3327                           ;main.c: 1977: enumMainLoopStep = MAIN_LOOP_STEP_INIT;
  3328  04C8  1283               	bcf	3,5	;RP0=0, select bank0
  3329  04C9  1303               	bcf	3,6	;RP1=0, select bank0
  3330  04CA  01D2               	clrf	main@enumMainLoopStep
  3331  04CB                     l1067:	
  3332  04CB  2CCB               	goto	l1067
  3333  04CC                     l5379:	
  3334  04CC  1683               	bsf	3,5	;RP0=1, select bank1
  3335  04CD  0830               	movf	main@enumInteralStep^(0+128),w
  3336                           
  3337                           ; Switch size 1, requested type "space"
  3338                           ; Number of cases is 3, Range of values is 0 to 2
  3339                           ; switch strategies available:
  3340                           ; Name         Instructions Cycles
  3341                           ; simple_byte           10     6 (average)
  3342                           ; direct_byte           13     7 (fixed)
  3343                           ; jumptable            260     6 (fixed)
  3344                           ; rangetable             7     6 (fixed)
  3345                           ; spacedrange           12     9 (fixed)
  3346                           ; locatedrange           3     3 (fixed)
  3347                           ;	Chosen strategy is simple_byte
  3348  04CE  3A00               	xorlw	0	; case 0
  3349  04CF  1903               	skipnz
  3350  04D0  2C6D               	goto	l5341
  3351  04D1  3A01               	xorlw	1	; case 1
  3352  04D2  1903               	skipnz
  3353  04D3  2C93               	goto	l5349
  3354  04D4  3A03               	xorlw	3	; case 2
  3355  04D5  1903               	skipnz
  3356  04D6  2CAA               	goto	l5361
  3357  04D7  287B               	goto	l762
  3358  04D8                     l5383:	
  3359  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  3360  04D9  0852               	movf	main@enumMainLoopStep,w
  3361                           
  3362                           ; Switch size 1, requested type "space"
  3363                           ; Number of cases is 8, Range of values is 0 to 9
  3364                           ; switch strategies available:
  3365                           ; Name         Instructions Cycles
  3366                           ; simple_byte           25    13 (average)
  3367                           ; direct_byte           27     7 (fixed)
  3368                           ; jumptable            260     6 (fixed)
  3369                           ; rangetable            14     6 (fixed)
  3370                           ; spacedrange           26     9 (fixed)
  3371                           ; locatedrange          10     3 (fixed)
  3372                           ;	Chosen strategy is simple_byte
  3373  04DA  3A00               	xorlw	0	; case 0
  3374  04DB  1903               	skipnz
  3375  04DC  284E               	goto	l4717
  3376  04DD  3A01               	xorlw	1	; case 1
  3377  04DE  1903               	skipnz
  3378  04DF  287C               	goto	l4743
  3379  04E0  3A03               	xorlw	3	; case 2
  3380  04E1  1903               	skipnz
  3381  04E2  2894               	goto	l4757
  3382  04E3  3A01               	xorlw	1	; case 3
  3383  04E4  1903               	skipnz
  3384  04E5  28A1               	goto	l4767
  3385  04E6  3A07               	xorlw	7	; case 4
  3386  04E7  1903               	skipnz
  3387  04E8  28DC               	goto	l4803
  3388  04E9  3A01               	xorlw	1	; case 5
  3389  04EA  1903               	skipnz
  3390  04EB  28E8               	goto	l4809
  3391  04EC  3A0D               	xorlw	13	; case 8
  3392  04ED  1903               	skipnz
  3393  04EE  2C61               	goto	l5339
  3394  04EF  3A01               	xorlw	1	; case 9
  3395  04F0  1903               	skipnz
  3396  04F1  2CCC               	goto	l5379
  3397  04F2  287B               	goto	l762
  3398  04F3  118A  2811         	ljmp	start
  3399  04F5                     __end_of_main:	
  3400                           
  3401                           	psect	swtext1
  3402  0800                     __pswtext1:	
  3403  0800                     S5673:	
  3404  0800  118A  2981         	ljmp	l4867
  3405  0802  118A  2987         	ljmp	l4871
  3406  0804  118A  2993         	ljmp	l4881
  3407  0806  118A  299C         	ljmp	l4891
  3408  0808  118A  29A5         	ljmp	l4901
  3409  080A  118A  29AE         	ljmp	l4911
  3410  080C  118A  29C7         	ljmp	l4921
  3411                           
  3412                           	psect	swtext2
  3413  080E                     __pswtext2:	
  3414  080E                     S5675:	
  3415  080E  118A  29DA         	ljmp	l4933
  3416  0810  118A  29E0         	ljmp	l4937
  3417  0812  118A  29EC         	ljmp	l4947
  3418  0814  118A  29F5         	ljmp	l4957
  3419  0816  118A  29FE         	ljmp	l4967
  3420  0818  118A  2A07         	ljmp	l4977
  3421  081A  118A  2A1C         	ljmp	l4987
  3422                           
  3423                           	psect	swtext3
  3424  081C                     __pswtext3:	
  3425  081C                     S5677:	
  3426  081C  118A  2A2E         	ljmp	l4999
  3427  081E  118A  2A38         	ljmp	l5003
  3428  0820  118A  2A44         	ljmp	l5013
  3429  0822  118A  2A4D         	ljmp	l5023
  3430  0824  118A  2A56         	ljmp	l5033
  3431  0826  118A  2A67         	ljmp	l5043
  3432                           
  3433                           	psect	swtext4
  3434  078F                     __pswtext4:	
  3435  078F                     S5679:	
  3436  078F  118A  28F7         	ljmp	l804
  3437  0791  118A  28FA         	ljmp	l4817
  3438  0793  118A  2AF8         	ljmp	l5139
  3439  0795  118A  2B09         	ljmp	l5141
  3440  0797  118A  2B2C         	ljmp	l5165
  3441  0799  118A  2B34         	ljmp	l5171
  3442  079B  118A  2B66         	ljmp	l5201
  3443  079D  118A  2B73         	ljmp	l5209
  3444  079F  118A  2B7B         	ljmp	l991
  3445  07A1  118A  2B83         	ljmp	l5219
  3446  07A3  118A  2B8F         	ljmp	l5227
  3447  07A5  118A  2BB3         	ljmp	l5249
  3448  07A7  118A  2BBE         	ljmp	l5257
  3449                           
  3450                           	psect	text885
  3451  06AB                     __ptext885:	
  3452 ;; =============== function _main ends ============
  3453                           
  3454                           
  3455 ;; *************** function _clearPinPortAndTimer *****************
  3456 ;; Defined at:
  3457 ;;		line 265 in file "D:\develop\190625\AK7030-OTP\main.c"
  3458 ;; Parameters:    Size  Location     Type
  3459 ;;		None
  3460 ;; Auto vars:     Size  Location     Type
  3461 ;;		None
  3462 ;; Return value:  Size  Location     Type
  3463 ;;		None               void
  3464 ;; Registers used:
  3465 ;;		wreg, status,2, status,0, pclath, cstack
  3466 ;; Tracked objects:
  3467 ;;		On entry : 40/0
  3468 ;;		On exit  : 60/0
  3469 ;;		Unchanged: FFF9F/0
  3470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3471 ;;      Params:         0       0       0       0       0
  3472 ;;      Locals:         0       0       0       0       0
  3473 ;;      Temps:          0       0       0       0       0
  3474 ;;      Totals:         0       0       0       0       0
  3475 ;;Total ram usage:        0 bytes
  3476 ;; Hardware stack levels used:    1
  3477 ;; Hardware stack levels required when called:    4
  3478 ;; This function calls:
  3479 ;;		_setPB0
  3480 ;;		_setPA0
  3481 ;;		_setPA1
  3482 ;;		_setPA2
  3483 ;;		_setPA3
  3484 ;;		_clearAllTimer
  3485 ;; This function is called by:
  3486 ;;		_main
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489  06AB                     _clearPinPortAndTimer:	
  3490                           
  3491                           ;main.c: 268: setPB0(0);
  3492                           
  3493                           ; Regs used in _clearPinPortAndTimer: [wreg+status,2+status,0+pclath+cstack]
  3494  06AB  3000               	movlw	0
  3495  06AC  26DF  118A         	fcall	_setPB0
  3496                           
  3497                           ;main.c: 270: setPA0(0);
  3498  06AE  3000               	movlw	0
  3499  06AF  26F0  118A         	fcall	_setPA0
  3500                           
  3501                           ;main.c: 272: setPA1(0);
  3502  06B1  3000               	movlw	0
  3503  06B2  26FA  118A         	fcall	_setPA1
  3504                           
  3505                           ;main.c: 274: setPA2(0);
  3506  06B4  3000               	movlw	0
  3507  06B5  2702  118A         	fcall	_setPA2
  3508                           
  3509                           ;main.c: 276: setPA3(0);
  3510  06B7  3000               	movlw	0
  3511  06B8  270A  118A         	fcall	_setPA3
  3512                           
  3513                           ;main.c: 279: PBOD7 = 0;
  3514  06BA  1683               	bsf	3,5	;RP0=1, select bank3
  3515  06BB  1703               	bsf	3,6	;RP1=1, select bank3
  3516  06BC  1388               	bcf	8,7
  3517                           
  3518                           ;main.c: 280: PB7 = 0;
  3519  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  3520  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  3521  06BF  1386               	bcf	6,7
  3522                           
  3523                           ;main.c: 281: clearAllTimer();
  3524  06C0  2F1B               	ljmp	l4643
  3525  06C1                     __end_of_clearPinPortAndTimer:	
  3526  06C1                     __ptext890:	
  3527 ;; =============== function _process_AD_Converter_Value ends ============
  3528                           
  3529                           
  3530 ;; *************** function _initPin *****************
  3531 ;; Defined at:
  3532 ;;		line 289 in file "D:\develop\190625\AK7030-OTP\main.c"
  3533 ;; Parameters:    Size  Location     Type
  3534 ;;		None
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;		None
  3537 ;; Return value:  Size  Location     Type
  3538 ;;		None               void
  3539 ;; Registers used:
  3540 ;;		wreg, status,2, status,0, pclath, cstack
  3541 ;; Tracked objects:
  3542 ;;		On entry : 160/20
  3543 ;;		On exit  : 160/60
  3544 ;;		Unchanged: FFE9F/0
  3545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3546 ;;      Params:         0       0       0       0       0
  3547 ;;      Locals:         0       0       0       0       0
  3548 ;;      Temps:          0       0       0       0       0
  3549 ;;      Totals:         0       0       0       0       0
  3550 ;;Total ram usage:        0 bytes
  3551 ;; Hardware stack levels used:    1
  3552 ;; Hardware stack levels required when called:    3
  3553 ;; This function calls:
  3554 ;;		_setPA0
  3555 ;;		_setPA1
  3556 ;;		_setPA2
  3557 ;;		_setPA3
  3558 ;;		_setPB0
  3559 ;;		_setPB1
  3560 ;;		_setPA6
  3561 ;; This function is called by:
  3562 ;;		_main
  3563 ;; This function uses a non-reentrant model
  3564 ;;
  3565  06C1                     _initPin:	
  3566                           
  3567                           ;main.c: 291: PB6 = 1;
  3568                           
  3569                           ; Regs used in _initPin: [wreg+status,2+status,0+pclath+cstack]
  3570  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  3571  06C2  1706               	bsf	6,6
  3572                           
  3573                           ;main.c: 292: PBOD6 = 1;
  3574  06C3  1683               	bsf	3,5	;RP0=1, select bank3
  3575  06C4  3000               	movlw	0
  3576  06C5  1703               	bsf	3,6	;RP1=1, select bank3
  3577  06C6  1708               	bsf	8,6
  3578                           
  3579                           ;main.c: 297: setPA0(0);
  3580  06C7  26F0  118A         	fcall	_setPA0
  3581                           
  3582                           ;main.c: 299: setPA1(0);
  3583  06C9  3000               	movlw	0
  3584  06CA  26FA  118A         	fcall	_setPA1
  3585                           
  3586                           ;main.c: 301: setPA2(0);
  3587  06CC  3000               	movlw	0
  3588  06CD  2702  118A         	fcall	_setPA2
  3589                           
  3590                           ;main.c: 303: setPA3(0);
  3591  06CF  3000               	movlw	0
  3592  06D0  270A  118A         	fcall	_setPA3
  3593                           
  3594                           ;main.c: 305: setPB0(0);
  3595  06D2  3000               	movlw	0
  3596  06D3  26DF  118A         	fcall	_setPB0
  3597                           
  3598                           ;main.c: 307: setPB1(1);
  3599  06D5  3001               	movlw	1
  3600  06D6  26E8  118A         	fcall	_setPB1
  3601                           
  3602                           ;main.c: 309: setPA6(0);
  3603  06D8  3000               	movlw	0
  3604  06D9  2712               	fcall	_setPA6
  3605                           
  3606                           ;main.c: 311: PB7 = 0;
  3607  06DA  1386               	bcf	6,7
  3608                           
  3609                           ;main.c: 312: PBOD7 = 0;
  3610  06DB  1683               	bsf	3,5	;RP0=1, select bank3
  3611  06DC  1703               	bsf	3,6	;RP1=1, select bank3
  3612  06DD  1388               	bcf	8,7
  3613  06DE  0008               	return
  3614  06DF                     __end_of_initPin:	
  3615  06DF                     __ptext921:	
  3616 ;; =============== function _setPB1 ends ============
  3617                           
  3618                           
  3619 ;; *************** function _setPB0 *****************
  3620 ;; Defined at:
  3621 ;;		line 108 in file "D:\develop\190625\AK7030-OTP\main.c"
  3622 ;; Parameters:    Size  Location     Type
  3623 ;;  bValue          1    wreg     unsigned char 
  3624 ;; Auto vars:     Size  Location     Type
  3625 ;;  bValue          1    0[BANK0 ] unsigned char 
  3626 ;; Return value:  Size  Location     Type
  3627 ;;		None               void
  3628 ;; Registers used:
  3629 ;;		wreg
  3630 ;; Tracked objects:
  3631 ;;		On entry : 40/0
  3632 ;;		On exit  : 60/0
  3633 ;;		Unchanged: FFF9F/0
  3634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3635 ;;      Params:         0       0       0       0       0
  3636 ;;      Locals:         0       1       0       0       0
  3637 ;;      Temps:          0       0       0       0       0
  3638 ;;      Totals:         0       1       0       0       0
  3639 ;;Total ram usage:        1 bytes
  3640 ;; Hardware stack levels used:    1
  3641 ;; Hardware stack levels required when called:    2
  3642 ;; This function calls:
  3643 ;;		Nothing
  3644 ;; This function is called by:
  3645 ;;		_clearPinPortAndTimer
  3646 ;;		_initPin
  3647 ;;		_main
  3648 ;; This function uses a non-reentrant model
  3649 ;;
  3650  06DF                     _setPB0:	
  3651                           
  3652                           ; Regs used in _setPB0: [wreg]
  3653                           ;setPB0@bValue stored from wreg
  3654  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  3655  06E0  00A0               	movwf	setPB0@bValue
  3656                           
  3657                           ;main.c: 109: if( bValue )
  3658  06E1  0820               	movf	setPB0@bValue,w
  3659  06E2  1903               	btfsc	3,2
  3660  06E3  2EE6               	goto	l688
  3661                           
  3662                           ;main.c: 112: PA2 = 1;
  3663  06E4  1505               	bsf	5,2
  3664  06E5  0008               	return
  3665  06E6                     l688:	
  3666                           
  3667                           ;main.c: 116: else
  3668                           ;main.c: 118: PA2 = 0;
  3669  06E6  1105               	bcf	5,2
  3670  06E7  0008               	return
  3671  06E8                     __end_of_setPB0:	
  3672  06E8                     __ptext920:	
  3673 ;; =============== function _setPA0 ends ============
  3674                           
  3675                           
  3676 ;; *************** function _setPB1 *****************
  3677 ;; Defined at:
  3678 ;;		line 126 in file "D:\develop\190625\AK7030-OTP\main.c"
  3679 ;; Parameters:    Size  Location     Type
  3680 ;;  bValue          1    wreg     unsigned char 
  3681 ;; Auto vars:     Size  Location     Type
  3682 ;;  bValue          1    0[BANK0 ] unsigned char 
  3683 ;; Return value:  Size  Location     Type
  3684 ;;		None               void
  3685 ;; Registers used:
  3686 ;;		wreg
  3687 ;; Tracked objects:
  3688 ;;		On entry : 60/0
  3689 ;;		On exit  : 60/0
  3690 ;;		Unchanged: FFF9F/0
  3691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3692 ;;      Params:         0       0       0       0       0
  3693 ;;      Locals:         0       1       0       0       0
  3694 ;;      Temps:          0       0       0       0       0
  3695 ;;      Totals:         0       1       0       0       0
  3696 ;;Total ram usage:        1 bytes
  3697 ;; Hardware stack levels used:    1
  3698 ;; Hardware stack levels required when called:    2
  3699 ;; This function calls:
  3700 ;;		Nothing
  3701 ;; This function is called by:
  3702 ;;		_initPin
  3703 ;;		_main
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706  06E8                     _setPB1:	
  3707                           
  3708                           ; Regs used in _setPB1: [wreg]
  3709                           ;setPB1@bValue stored from wreg
  3710  06E8  00A0               	movwf	setPB1@bValue
  3711                           
  3712                           ;main.c: 127: if( bValue )
  3713  06E9  0820               	movf	setPB1@bValue,w
  3714  06EA  1903               	btfsc	3,2
  3715  06EB  2EEE               	goto	l693
  3716                           
  3717                           ;main.c: 130: PA3 = 1;
  3718  06EC  1585               	bsf	5,3
  3719  06ED  0008               	return
  3720  06EE                     l693:	
  3721                           
  3722                           ;main.c: 134: else
  3723                           ;main.c: 136: PA3 = 0;
  3724  06EE  1185               	bcf	5,3
  3725  06EF  0008               	return
  3726  06F0                     __end_of_setPB1:	
  3727  06F0                     __ptext919:	
  3728 ;; =============== function _setPA1 ends ============
  3729                           
  3730                           
  3731 ;; *************** function _setPA0 *****************
  3732 ;; Defined at:
  3733 ;;		line 144 in file "D:\develop\190625\AK7030-OTP\main.c"
  3734 ;; Parameters:    Size  Location     Type
  3735 ;;  bValue          1    wreg     unsigned char 
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;  bValue          1    0[BANK0 ] unsigned char 
  3738 ;; Return value:  Size  Location     Type
  3739 ;;		None               void
  3740 ;; Registers used:
  3741 ;;		wreg
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/0
  3744 ;;		On exit  : 60/0
  3745 ;;		Unchanged: FFF9F/0
  3746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3747 ;;      Params:         0       0       0       0       0
  3748 ;;      Locals:         0       1       0       0       0
  3749 ;;      Temps:          0       0       0       0       0
  3750 ;;      Totals:         0       1       0       0       0
  3751 ;;Total ram usage:        1 bytes
  3752 ;; Hardware stack levels used:    1
  3753 ;; Hardware stack levels required when called:    2
  3754 ;; This function calls:
  3755 ;;		Nothing
  3756 ;; This function is called by:
  3757 ;;		_clearPinPortAndTimer
  3758 ;;		_initPin
  3759 ;;		_main
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762  06F0                     _setPA0:	
  3763                           
  3764                           ; Regs used in _setPA0: [wreg]
  3765                           ;setPA0@bValue stored from wreg
  3766  06F0  1283               	bcf	3,5	;RP0=0, select bank0
  3767  06F1  1303               	bcf	3,6	;RP1=0, select bank0
  3768  06F2  00A0               	movwf	setPA0@bValue
  3769                           
  3770                           ;main.c: 145: if( bValue )
  3771  06F3  0820               	movf	setPA0@bValue,w
  3772  06F4  1903               	btfsc	3,2
  3773  06F5  2EF8               	goto	l698
  3774                           
  3775                           ;main.c: 148: PA1 = 1;
  3776  06F6  1485               	bsf	5,1
  3777  06F7  0008               	return
  3778  06F8                     l698:	
  3779                           
  3780                           ;main.c: 152: else
  3781                           ;main.c: 154: PA1 = 0;
  3782  06F8  1085               	bcf	5,1
  3783  06F9  0008               	return
  3784  06FA                     __end_of_setPA0:	
  3785  06FA                     __ptext918:	
  3786 ;; =============== function _setPA2 ends ============
  3787                           
  3788                           
  3789 ;; *************** function _setPA1 *****************
  3790 ;; Defined at:
  3791 ;;		line 162 in file "D:\develop\190625\AK7030-OTP\main.c"
  3792 ;; Parameters:    Size  Location     Type
  3793 ;;  bValue          1    wreg     unsigned char 
  3794 ;; Auto vars:     Size  Location     Type
  3795 ;;  bValue          1    0[BANK0 ] unsigned char 
  3796 ;; Return value:  Size  Location     Type
  3797 ;;		None               void
  3798 ;; Registers used:
  3799 ;;		wreg
  3800 ;; Tracked objects:
  3801 ;;		On entry : 60/0
  3802 ;;		On exit  : 60/0
  3803 ;;		Unchanged: FFF9F/0
  3804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3805 ;;      Params:         0       0       0       0       0
  3806 ;;      Locals:         0       1       0       0       0
  3807 ;;      Temps:          0       0       0       0       0
  3808 ;;      Totals:         0       1       0       0       0
  3809 ;;Total ram usage:        1 bytes
  3810 ;; Hardware stack levels used:    1
  3811 ;; Hardware stack levels required when called:    2
  3812 ;; This function calls:
  3813 ;;		Nothing
  3814 ;; This function is called by:
  3815 ;;		_clearPinPortAndTimer
  3816 ;;		_initPin
  3817 ;;		_main
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820  06FA                     _setPA1:	
  3821                           
  3822                           ; Regs used in _setPA1: [wreg]
  3823                           ;setPA1@bValue stored from wreg
  3824  06FA  00A0               	movwf	setPA1@bValue
  3825                           
  3826                           ;main.c: 163: if( bValue )
  3827  06FB  0820               	movf	setPA1@bValue,w
  3828  06FC  1903               	btfsc	3,2
  3829  06FD  2F00               	goto	l703
  3830                           
  3831                           ;main.c: 166: PA0 = 1;
  3832  06FE  1405               	bsf	5,0
  3833  06FF  0008               	return
  3834  0700                     l703:	
  3835                           
  3836                           ;main.c: 170: else
  3837                           ;main.c: 172: PA0 = 0;
  3838  0700  1005               	bcf	5,0
  3839  0701  0008               	return
  3840  0702                     __end_of_setPA1:	
  3841  0702                     __ptext917:	
  3842 ;; =============== function _setPA3 ends ============
  3843                           
  3844                           
  3845 ;; *************** function _setPA2 *****************
  3846 ;; Defined at:
  3847 ;;		line 181 in file "D:\develop\190625\AK7030-OTP\main.c"
  3848 ;; Parameters:    Size  Location     Type
  3849 ;;  bValue          1    wreg     unsigned char 
  3850 ;; Auto vars:     Size  Location     Type
  3851 ;;  bValue          1    0[BANK0 ] unsigned char 
  3852 ;; Return value:  Size  Location     Type
  3853 ;;		None               void
  3854 ;; Registers used:
  3855 ;;		wreg
  3856 ;; Tracked objects:
  3857 ;;		On entry : 60/0
  3858 ;;		On exit  : 60/0
  3859 ;;		Unchanged: FFF9F/0
  3860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3861 ;;      Params:         0       0       0       0       0
  3862 ;;      Locals:         0       1       0       0       0
  3863 ;;      Temps:          0       0       0       0       0
  3864 ;;      Totals:         0       1       0       0       0
  3865 ;;Total ram usage:        1 bytes
  3866 ;; Hardware stack levels used:    1
  3867 ;; Hardware stack levels required when called:    2
  3868 ;; This function calls:
  3869 ;;		Nothing
  3870 ;; This function is called by:
  3871 ;;		_clearPinPortAndTimer
  3872 ;;		_initPin
  3873 ;;		_main
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876  0702                     _setPA2:	
  3877                           
  3878                           ; Regs used in _setPA2: [wreg]
  3879                           ;setPA2@bValue stored from wreg
  3880  0702  00A0               	movwf	setPA2@bValue
  3881                           
  3882                           ;main.c: 182: if( bValue )
  3883  0703  0820               	movf	setPA2@bValue,w
  3884  0704  1903               	btfsc	3,2
  3885  0705  2F08               	goto	l708
  3886                           
  3887                           ;main.c: 185: PB0 = 1;
  3888  0706  1406               	bsf	6,0
  3889  0707  0008               	return
  3890  0708                     l708:	
  3891                           
  3892                           ;main.c: 190: else
  3893                           ;main.c: 193: PB0 = 0;
  3894  0708  1006               	bcf	6,0
  3895  0709  0008               	return
  3896  070A                     __end_of_setPA2:	
  3897  070A                     __ptext916:	
  3898 ;; =============== function _setPA6 ends ============
  3899                           
  3900                           
  3901 ;; *************** function _setPA3 *****************
  3902 ;; Defined at:
  3903 ;;		line 201 in file "D:\develop\190625\AK7030-OTP\main.c"
  3904 ;; Parameters:    Size  Location     Type
  3905 ;;  bValue          1    wreg     unsigned char 
  3906 ;; Auto vars:     Size  Location     Type
  3907 ;;  bValue          1    0[BANK0 ] unsigned char 
  3908 ;; Return value:  Size  Location     Type
  3909 ;;		None               void
  3910 ;; Registers used:
  3911 ;;		wreg
  3912 ;; Tracked objects:
  3913 ;;		On entry : 60/0
  3914 ;;		On exit  : 60/0
  3915 ;;		Unchanged: FFF9F/0
  3916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3917 ;;      Params:         0       0       0       0       0
  3918 ;;      Locals:         0       1       0       0       0
  3919 ;;      Temps:          0       0       0       0       0
  3920 ;;      Totals:         0       1       0       0       0
  3921 ;;Total ram usage:        1 bytes
  3922 ;; Hardware stack levels used:    1
  3923 ;; Hardware stack levels required when called:    2
  3924 ;; This function calls:
  3925 ;;		Nothing
  3926 ;; This function is called by:
  3927 ;;		_clearPinPortAndTimer
  3928 ;;		_initPin
  3929 ;;		_main
  3930 ;; This function uses a non-reentrant model
  3931 ;;
  3932  070A                     _setPA3:	
  3933                           
  3934                           ; Regs used in _setPA3: [wreg]
  3935                           ;setPA3@bValue stored from wreg
  3936  070A  00A0               	movwf	setPA3@bValue
  3937                           
  3938                           ;main.c: 202: if( bValue )
  3939  070B  0820               	movf	setPA3@bValue,w
  3940  070C  1903               	btfsc	3,2
  3941  070D  2F10               	goto	l713
  3942                           
  3943                           ;main.c: 205: PB1 = 1;
  3944  070E  1486               	bsf	6,1
  3945  070F  0008               	return
  3946  0710                     l713:	
  3947                           
  3948                           ;main.c: 209: else
  3949                           ;main.c: 211: PB1 = 0;
  3950  0710  1086               	bcf	6,1
  3951  0711  0008               	return
  3952  0712                     __end_of_setPA3:	
  3953  0712                     __ptext915:	
  3954 ;; =============== function _clock_config ends ============
  3955                           
  3956                           
  3957 ;; *************** function _setPA6 *****************
  3958 ;; Defined at:
  3959 ;;		line 248 in file "D:\develop\190625\AK7030-OTP\main.c"
  3960 ;; Parameters:    Size  Location     Type
  3961 ;;  bValue          1    wreg     unsigned char 
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;  bValue          1    0[BANK0 ] unsigned char 
  3964 ;; Return value:  Size  Location     Type
  3965 ;;		None               void
  3966 ;; Registers used:
  3967 ;;		wreg
  3968 ;; Tracked objects:
  3969 ;;		On entry : 40/0
  3970 ;;		On exit  : 60/0
  3971 ;;		Unchanged: FFF9F/0
  3972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3973 ;;      Params:         0       0       0       0       0
  3974 ;;      Locals:         0       1       0       0       0
  3975 ;;      Temps:          0       0       0       0       0
  3976 ;;      Totals:         0       1       0       0       0
  3977 ;;Total ram usage:        1 bytes
  3978 ;; Hardware stack levels used:    1
  3979 ;; Hardware stack levels required when called:    2
  3980 ;; This function calls:
  3981 ;;		Nothing
  3982 ;; This function is called by:
  3983 ;;		_initPin
  3984 ;;		_main
  3985 ;; This function uses a non-reentrant model
  3986 ;;
  3987  0712                     _setPA6:	
  3988                           
  3989                           ; Regs used in _setPA6: [wreg]
  3990                           ;setPA6@bValue stored from wreg
  3991  0712  1283               	bcf	3,5	;RP0=0, select bank0
  3992  0713  00A0               	movwf	setPA6@bValue
  3993                           
  3994                           ;main.c: 249: if( bValue )
  3995  0714  0820               	movf	setPA6@bValue,w
  3996  0715  1903               	btfsc	3,2
  3997  0716  2F19               	goto	l723
  3998                           
  3999                           ;main.c: 251: PA6 = 1;
  4000  0717  1705               	bsf	5,6
  4001  0718  0008               	return
  4002  0719                     l723:	
  4003                           
  4004                           ;main.c: 255: else
  4005                           ;main.c: 257: PA6= 0;
  4006  0719  1305               	bcf	5,6
  4007  071A  0008               	return
  4008  071B                     __end_of_setPA6:	
  4009  071B                     __ptext891:	
  4010 ;; =============== function _initPin ends ============
  4011                           
  4012                           
  4013 ;; *************** function _clearAllTimer *****************
  4014 ;; Defined at:
  4015 ;;		line 99 in file "D:\develop\190625\AK7030-OTP\main.c"
  4016 ;; Parameters:    Size  Location     Type
  4017 ;;		None
  4018 ;; Auto vars:     Size  Location     Type
  4019 ;;		None
  4020 ;; Return value:  Size  Location     Type
  4021 ;;		None               void
  4022 ;; Registers used:
  4023 ;;		status,2, status,0, pclath, cstack
  4024 ;; Tracked objects:
  4025 ;;		On entry : 40/20
  4026 ;;		On exit  : 60/0
  4027 ;;		Unchanged: FFF9F/0
  4028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4029 ;;      Params:         0       0       0       0       0
  4030 ;;      Locals:         0       0       0       0       0
  4031 ;;      Temps:          0       0       0       0       0
  4032 ;;      Totals:         0       0       0       0       0
  4033 ;;Total ram usage:        0 bytes
  4034 ;; Hardware stack levels used:    1
  4035 ;; Hardware stack levels required when called:    3
  4036 ;; This function calls:
  4037 ;;		_clearTwelveHoursTimer
  4038 ;;		_clearThreeHoursTimer
  4039 ;;		_clearTwentySecondsTimer
  4040 ;; This function is called by:
  4041 ;;		_clearPinPortAndTimer
  4042 ;;		_main
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045  071B                     _clearAllTimer:	
  4046  071B                     l4643:	
  4047                           ; Regs used in _clearAllTimer: [status,2+status,0+pclath+cstack]
  4048                           
  4049                           
  4050                           ;main.c: 100: clearTwelveHoursTimer();
  4051  071B  2720  118A         	fcall	_clearTwelveHoursTimer
  4052                           
  4053                           ;main.c: 101: clearThreeHoursTimer();
  4054  071D  2726  118A         	fcall	_clearThreeHoursTimer
  4055                           
  4056                           ;main.c: 102: clearTwentySecondsTimer();
  4057  071F  2F2C               	ljmp	l4297
  4058  0720                     __end_of_clearAllTimer:	
  4059  0720                     __ptext924:	
  4060 ;; =============== function _clearThreeHoursTimer ends ============
  4061                           
  4062                           
  4063 ;; *************** function _clearTwelveHoursTimer *****************
  4064 ;; Defined at:
  4065 ;;		line 374 in file "D:\develop\190625\AK7030-OTP\common.c"
  4066 ;; Parameters:    Size  Location     Type
  4067 ;;		None
  4068 ;; Auto vars:     Size  Location     Type
  4069 ;;		None
  4070 ;; Return value:  Size  Location     Type
  4071 ;;		None               void
  4072 ;; Registers used:
  4073 ;;		status,2
  4074 ;; Tracked objects:
  4075 ;;		On entry : 40/20
  4076 ;;		On exit  : 60/0
  4077 ;;		Unchanged: FFF9F/0
  4078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4079 ;;      Params:         0       0       0       0       0
  4080 ;;      Locals:         0       0       0       0       0
  4081 ;;      Temps:          0       0       0       0       0
  4082 ;;      Totals:         0       0       0       0       0
  4083 ;;Total ram usage:        0 bytes
  4084 ;; Hardware stack levels used:    1
  4085 ;; Hardware stack levels required when called:    2
  4086 ;; This function calls:
  4087 ;;		Nothing
  4088 ;; This function is called by:
  4089 ;;		_clearAllTimer
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092  0720                     _clearTwelveHoursTimer:	
  4093                           
  4094                           ;common.c: 375: uiBigTimer = 0;
  4095                           
  4096                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  4097  0720  1683               	bsf	3,5	;RP0=1, select bank1
  4098  0721  01A0               	clrf	_uiBigTimer^(0+128)
  4099  0722  01A1               	clrf	(_uiBigTimer+1)^(0+128)
  4100                           
  4101                           ;common.c: 376: bBigTimerStartFlag = 0;
  4102  0723  1283               	bcf	3,5	;RP0=0, select bank0
  4103  0724  01CA               	clrf	_bBigTimerStartFlag
  4104  0725  0008               	return
  4105  0726                     __end_of_clearTwelveHoursTimer:	
  4106  0726                     __ptext923:	
  4107 ;; =============== function _clearTwentySecondsTimer ends ============
  4108                           
  4109                           
  4110 ;; *************** function _clearThreeHoursTimer *****************
  4111 ;; Defined at:
  4112 ;;		line 381 in file "D:\develop\190625\AK7030-OTP\common.c"
  4113 ;; Parameters:    Size  Location     Type
  4114 ;;		None
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;		None
  4117 ;; Return value:  Size  Location     Type
  4118 ;;		None               void
  4119 ;; Registers used:
  4120 ;;		status,2
  4121 ;; Tracked objects:
  4122 ;;		On entry : 60/0
  4123 ;;		On exit  : 60/0
  4124 ;;		Unchanged: FFF9F/0
  4125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4126 ;;      Params:         0       0       0       0       0
  4127 ;;      Locals:         0       0       0       0       0
  4128 ;;      Temps:          0       0       0       0       0
  4129 ;;      Totals:         0       0       0       0       0
  4130 ;;Total ram usage:        0 bytes
  4131 ;; Hardware stack levels used:    1
  4132 ;; Hardware stack levels required when called:    2
  4133 ;; This function calls:
  4134 ;;		Nothing
  4135 ;; This function is called by:
  4136 ;;		_clearAllTimer
  4137 ;;		_main
  4138 ;; This function uses a non-reentrant model
  4139 ;;
  4140  0726                     _clearThreeHoursTimer:	
  4141                           
  4142                           ;common.c: 382: uiSmallTimer = 0;
  4143                           
  4144                           ; Regs used in _clearThreeHoursTimer: [status,2]
  4145  0726  1683               	bsf	3,5	;RP0=1, select bank1
  4146  0727  01A2               	clrf	_uiSmallTimer^(0+128)
  4147  0728  01A3               	clrf	(_uiSmallTimer+1)^(0+128)
  4148                           
  4149                           ;common.c: 383: bSmallTimerStartFlag = 0;
  4150  0729  1283               	bcf	3,5	;RP0=0, select bank0
  4151  072A  01CB               	clrf	_bSmallTimerStartFlag
  4152  072B  0008               	return
  4153  072C                     __end_of_clearThreeHoursTimer:	
  4154  072C                     __ptext922:	
  4155 ;; =============== function _setPB0 ends ============
  4156                           
  4157                           
  4158 ;; *************** function _clearTwentySecondsTimer *****************
  4159 ;; Defined at:
  4160 ;;		line 387 in file "D:\develop\190625\AK7030-OTP\common.c"
  4161 ;; Parameters:    Size  Location     Type
  4162 ;;		None
  4163 ;; Auto vars:     Size  Location     Type
  4164 ;;		None
  4165 ;; Return value:  Size  Location     Type
  4166 ;;		None               void
  4167 ;; Registers used:
  4168 ;;		status,2
  4169 ;; Tracked objects:
  4170 ;;		On entry : 60/0
  4171 ;;		On exit  : 60/0
  4172 ;;		Unchanged: FFF9F/0
  4173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4174 ;;      Params:         0       0       0       0       0
  4175 ;;      Locals:         0       0       0       0       0
  4176 ;;      Temps:          0       0       0       0       0
  4177 ;;      Totals:         0       0       0       0       0
  4178 ;;Total ram usage:        0 bytes
  4179 ;; Hardware stack levels used:    1
  4180 ;; Hardware stack levels required when called:    2
  4181 ;; This function calls:
  4182 ;;		Nothing
  4183 ;; This function is called by:
  4184 ;;		_clearAllTimer
  4185 ;;		_main
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188  072C                     _clearTwentySecondsTimer:	
  4189  072C                     l4297:	
  4190                           ; Regs used in _clearTwentySecondsTimer: [status,2]
  4191                           
  4192                           
  4193                           ;common.c: 388: uiTwentySecondsTimer = 0;
  4194  072C  1683               	bsf	3,5	;RP0=1, select bank1
  4195  072D  01A6               	clrf	_uiTwentySecondsTimer^(0+128)
  4196  072E  01A7               	clrf	(_uiTwentySecondsTimer+1)^(0+128)
  4197                           
  4198                           ;common.c: 389: bTwentySecStartFlag = 0;
  4199  072F  1283               	bcf	3,5	;RP0=0, select bank0
  4200  0730  01CD               	clrf	_bTwentySecStartFlag
  4201  0731  0008               	return
  4202  0732                     __end_of_clearTwentySecondsTimer:	
  4203                           
  4204                           	psect	text886
  4205  05DF                     __ptext886:	
  4206 ;; =============== function _clearPinPortAndTimer ends ============
  4207                           
  4208                           
  4209 ;; *************** function _getAdOriginaCh4Value *****************
  4210 ;; Defined at:
  4211 ;;		line 235 in file "D:\develop\190625\AK7030-OTP\common.c"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;		None
  4214 ;; Auto vars:     Size  Location     Type
  4215 ;;		None
  4216 ;; Return value:  Size  Location     Type
  4217 ;;                  2   38[BANK0 ] unsigned int 
  4218 ;; Registers used:
  4219 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4220 ;; Tracked objects:
  4221 ;;		On entry : 40/0
  4222 ;;		On exit  : 160/0
  4223 ;;		Unchanged: FFE00/0
  4224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4225 ;;      Params:         0       2       0       0       0
  4226 ;;      Locals:         0       0       0       0       0
  4227 ;;      Temps:          0       0       0       0       0
  4228 ;;      Totals:         0       2       0       0       0
  4229 ;;Total ram usage:        2 bytes
  4230 ;; Hardware stack levels used:    1
  4231 ;; Hardware stack levels required when called:    3
  4232 ;; This function calls:
  4233 ;;		_Filter
  4234 ;; This function is called by:
  4235 ;;		_main
  4236 ;; This function uses a non-reentrant model
  4237 ;;
  4238  05DF                     _getAdOriginaCh4Value:	
  4239                           
  4240                           ;common.c: 237: return Filter(uiSampleChannelFourth);
  4241                           
  4242                           ; Regs used in _getAdOriginaCh4Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  4243  05DF  30D4               	movlw	_uiSampleChannelFourth& (0+255)
  4244  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  4245  05E1  00A0               	movwf	?_Filter
  4246  05E2  01A1               	clrf	?_Filter+1
  4247  05E3  25FE               	fcall	_Filter
  4248  05E4  0821               	movf	?_Filter+1,w
  4249  05E5  00C7               	movwf	?_getAdOriginaCh4Value+1
  4250  05E6  0820               	movf	?_Filter,w
  4251  05E7  00C6               	movwf	?_getAdOriginaCh4Value
  4252  05E8  0008               	return
  4253  05E9                     __end_of_getAdOriginaCh4Value:	
  4254  05E9                     __ptext887:	
  4255 ;; =============== function _getAdOriginaCh4Value ends ============
  4256                           
  4257                           
  4258 ;; *************** function _getAdOriginalCh1Value *****************
  4259 ;; Defined at:
  4260 ;;		line 223 in file "D:\develop\190625\AK7030-OTP\common.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;		None
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;		None
  4265 ;; Return value:  Size  Location     Type
  4266 ;;                  2   38[BANK0 ] unsigned int 
  4267 ;; Registers used:
  4268 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4269 ;; Tracked objects:
  4270 ;;		On entry : 40/0
  4271 ;;		On exit  : 160/0
  4272 ;;		Unchanged: FFE00/0
  4273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4274 ;;      Params:         0       2       0       0       0
  4275 ;;      Locals:         0       0       0       0       0
  4276 ;;      Temps:          0       0       0       0       0
  4277 ;;      Totals:         0       2       0       0       0
  4278 ;;Total ram usage:        2 bytes
  4279 ;; Hardware stack levels used:    1
  4280 ;; Hardware stack levels required when called:    3
  4281 ;; This function calls:
  4282 ;;		_Filter
  4283 ;; This function is called by:
  4284 ;;		_main
  4285 ;; This function uses a non-reentrant model
  4286 ;;
  4287  05E9                     _getAdOriginalCh1Value:	
  4288                           
  4289                           ;common.c: 226: return Filter(uiSampleChannelFirst);
  4290                           
  4291                           ; Regs used in _getAdOriginalCh1Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  4292  05E9  30BC               	movlw	_uiSampleChannelFirst& (0+255)
  4293  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  4294  05EB  00A0               	movwf	?_Filter
  4295  05EC  01A1               	clrf	?_Filter+1
  4296  05ED  25FE               	fcall	_Filter
  4297  05EE  0821               	movf	?_Filter+1,w
  4298  05EF  00C7               	movwf	?_getAdOriginalCh1Value+1
  4299  05F0  0820               	movf	?_Filter,w
  4300  05F1  00C6               	movwf	?_getAdOriginalCh1Value
  4301  05F2  0008               	return
  4302  05F3                     __end_of_getAdOriginalCh1Value:	
  4303  05F3                     __ptext888:	
  4304 ;; =============== function _getAdOriginalCh1Value ends ============
  4305                           
  4306                           
  4307 ;; *************** function _getAdOriginalCh14Value *****************
  4308 ;; Defined at:
  4309 ;;		line 246 in file "D:\develop\190625\AK7030-OTP\common.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;		None
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;		None
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  2   38[BANK0 ] unsigned int 
  4316 ;; Registers used:
  4317 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4318 ;; Tracked objects:
  4319 ;;		On entry : 40/0
  4320 ;;		On exit  : 160/0
  4321 ;;		Unchanged: FFE00/0
  4322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4323 ;;      Params:         0       2       0       0       0
  4324 ;;      Locals:         0       0       0       0       0
  4325 ;;      Temps:          0       0       0       0       0
  4326 ;;      Totals:         0       2       0       0       0
  4327 ;;Total ram usage:        2 bytes
  4328 ;; Hardware stack levels used:    1
  4329 ;; Hardware stack levels required when called:    3
  4330 ;; This function calls:
  4331 ;;		_Filter
  4332 ;; This function is called by:
  4333 ;;		_main
  4334 ;; This function uses a non-reentrant model
  4335 ;;
  4336  05F3                     _getAdOriginalCh14Value:	
  4337                           
  4338                           ;common.c: 248: return Filter(uiSampleChannelFourteenth);
  4339                           
  4340                           ; Regs used in _getAdOriginalCh14Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  4341  05F3  3090               	movlw	_uiSampleChannelFourteenth& (0+255)
  4342  05F4  1283               	bcf	3,5	;RP0=0, select bank0
  4343  05F5  00A0               	movwf	?_Filter
  4344  05F6  3001               	movlw	1
  4345  05F7  00A1               	movwf	?_Filter+1
  4346  05F8  25FE               	fcall	_Filter
  4347  05F9  0821               	movf	?_Filter+1,w
  4348  05FA  00C7               	movwf	?_getAdOriginalCh14Value+1
  4349  05FB  0820               	movf	?_Filter,w
  4350  05FC  00C6               	movwf	?_getAdOriginalCh14Value
  4351  05FD  0008               	return
  4352  05FE                     __end_of_getAdOriginalCh14Value:	
  4353  05FE                     __ptext895:	
  4354 ;; =============== function _getAD_ConvertFlag ends ============
  4355                           
  4356                           
  4357 ;; *************** function _Filter *****************
  4358 ;; Defined at:
  4359 ;;		line 57 in file "D:\develop\190625\AK7030-OTP\common.c"
  4360 ;; Parameters:    Size  Location     Type
  4361 ;;  tmpValue        2    0[BANK0 ] PTR int 
  4362 ;;		 -> uiSampleChannelFourteenth(24), uiSampleChannelFourth(24), uiSampleChannelFirst(24), 
  4363 ;; Auto vars:     Size  Location     Type
  4364 ;;  cir             2   34[BANK0 ] int 
  4365 ;;  filter_buf     24    6[BANK0 ] unsigned int [12]
  4366 ;;  filter_sum      2   32[BANK0 ] unsigned int 
  4367 ;;  filter_temp     2   30[BANK0 ] unsigned int 
  4368 ;;  i               1   37[BANK0 ] unsigned char 
  4369 ;;  j               1   36[BANK0 ] unsigned char 
  4370 ;; Return value:  Size  Location     Type
  4371 ;;                  2    0[BANK0 ] unsigned int 
  4372 ;; Registers used:
  4373 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4374 ;; Tracked objects:
  4375 ;;		On entry : 60/0
  4376 ;;		On exit  : 160/0
  4377 ;;		Unchanged: FFE00/0
  4378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4379 ;;      Params:         0       2       0       0       0
  4380 ;;      Locals:         0      32       0       0       0
  4381 ;;      Temps:          0       4       0       0       0
  4382 ;;      Totals:         0      38       0       0       0
  4383 ;;Total ram usage:       38 bytes
  4384 ;; Hardware stack levels used:    1
  4385 ;; Hardware stack levels required when called:    2
  4386 ;; This function calls:
  4387 ;;		Nothing
  4388 ;; This function is called by:
  4389 ;;		_getAdOriginalCh1Value
  4390 ;;		_getAdOriginaCh4Value
  4391 ;;		_getAdOriginalCh14Value
  4392 ;; This function uses a non-reentrant model
  4393 ;;
  4394  05FE                     _Filter:	
  4395                           
  4396                           ; Regs used in _Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  4397  05FE  01C4               	clrf	Filter@j
  4398                           
  4399                           ;common.c: 61: unsigned int filter_temp = 0, filter_sum = 0;
  4400  05FF  01BE               	clrf	Filter@filter_temp
  4401  0600  01BF               	clrf	Filter@filter_temp+1
  4402  0601  01C0               	clrf	Filter@filter_sum
  4403  0602  01C1               	clrf	Filter@filter_sum+1
  4404                           
  4405                           ;common.c: 63: unsigned int filter_buf[12];
  4406                           ;common.c: 65: for(int cir = 0;cir < 12; cir++)
  4407  0603  01C2               	clrf	Filter@cir
  4408  0604  01C3               	clrf	Filter@cir+1
  4409  0605                     l4481:	
  4410                           
  4411                           ;common.c: 66: filter_buf[cir] = *tmpValue++;
  4412  0605  1283               	bcf	3,5	;RP0=0, select bank0
  4413  0606  1303               	bcf	3,6	;RP1=0, select bank0
  4414  0607  0820               	movf	Filter@tmpValue,w
  4415  0608  0084               	movwf	4
  4416  0609  1783               	bsf	3,7
  4417  060A  1C21               	btfss	Filter@tmpValue+1,0
  4418  060B  1383               	bcf	3,7
  4419  060C  0800               	movf	0,w
  4420  060D  269F  118A         	fcall	PL5	;call to abstracted procedure
  4421  060F  0D42               	rlf	Filter@cir,w
  4422  0610  3E26               	addlw	Filter@filter_buf& (0+255)
  4423  0611  0084               	movwf	4
  4424  0612  0822               	movf	??_Filter,w
  4425  0613  1383               	bcf	3,7	;select IRP bank0
  4426  0614  0080               	movwf	0
  4427  0615  0A84               	incf	4,f
  4428  0616  0823               	movf	??_Filter+1,w
  4429  0617  0080               	movwf	0
  4430  0618  3002               	movlw	2
  4431  0619  07A0               	addwf	Filter@tmpValue,f
  4432  061A  1803               	skipnc
  4433  061B  0AA1               	incf	Filter@tmpValue+1,f
  4434  061C  0AC2               	incf	Filter@cir,f
  4435  061D  1903               	skipnz
  4436  061E  0AC3               	incf	Filter@cir+1,f
  4437  061F  0843               	movf	Filter@cir+1,w
  4438  0620  3A80               	xorlw	128
  4439  0621  00FF               	movwf	127
  4440  0622  3080               	movlw	128
  4441  0623  027F               	subwf	127,w
  4442  0624  1D03               	skipz
  4443  0625  2E28               	goto	u1615
  4444  0626  300C               	movlw	12
  4445  0627  0242               	subwf	Filter@cir,w
  4446  0628                     u1615:	
  4447  0628  1C03               	skipc
  4448  0629  2E05               	goto	l4481
  4449                           
  4450                           ;common.c: 69: for(j = 0; j < 12 - 1; j++)
  4451  062A  1283               	bcf	3,5	;RP0=0, select bank0
  4452  062B  1303               	bcf	3,6	;RP1=0, select bank0
  4453  062C  01C4               	clrf	Filter@j
  4454  062D                     l4495:	
  4455                           
  4456                           ;common.c: 70: {
  4457                           ;common.c: 71: for(i = 0; i < 12 - 1 - j; i++)
  4458  062D  01C5               	clrf	Filter@i
  4459  062E                     l4503:	
  4460  062E  01A3               	clrf	??_Filter+1
  4461  062F  0844               	movf	Filter@j,w
  4462  0630  3C0B               	sublw	11
  4463  0631  00A2               	movwf	??_Filter
  4464  0632  1C03               	skipc
  4465  0633  03A3               	decf	??_Filter+1,f
  4466  0634  0823               	movf	??_Filter+1,w
  4467  0635  3A80               	xorlw	128
  4468  0636  3C80               	sublw	128
  4469  0637  1D03               	skipz
  4470  0638  2E3B               	goto	u1635
  4471  0639  0822               	movf	??_Filter,w
  4472  063A  0245               	subwf	Filter@i,w
  4473  063B                     u1635:	
  4474  063B  1803               	btfsc	3,0
  4475  063C  2E70               	goto	l4505
  4476                           
  4477                           ;common.c: 72: {
  4478                           ;common.c: 73: if(filter_buf[i] > filter_buf[i + 1])
  4479  063D  1283               	bcf	3,5	;RP0=0, select bank0
  4480  063E  1303               	bcf	3,6	;RP1=0, select bank0
  4481  063F  1003               	clrc
  4482  0640  2695  118A         	fcall	PL3	;call to abstracted procedure
  4483  0642  26A5  118A         	fcall	PL6	;call to abstracted procedure
  4484  0644  0800               	movf	0,w
  4485  0645  00A4               	movwf	??_Filter+2
  4486  0646  0A84               	incf	4,f
  4487  0647  0800               	movf	0,w
  4488  0648  00A5               	movwf	??_Filter+3
  4489  0649  0823               	movf	??_Filter+1,w
  4490  064A  0225               	subwf	??_Filter+3,w
  4491  064B  1D03               	skipz
  4492  064C  2E4F               	goto	u1625
  4493  064D  0822               	movf	??_Filter,w
  4494  064E  0224               	subwf	??_Filter+2,w
  4495  064F                     u1625:	
  4496  064F  1803               	skipnc
  4497  0650  2E6E               	goto	l4501
  4498                           
  4499                           ;common.c: 74: {
  4500                           ;common.c: 76: filter_temp = filter_buf[i];
  4501  0651  1003               	clrc
  4502  0652  0D45               	rlf	Filter@i,w
  4503  0653  3E26               	addlw	Filter@filter_buf& (0+255)
  4504  0654  0084               	movwf	4
  4505  0655  0800               	movf	0,w
  4506  0656  00BE               	movwf	Filter@filter_temp
  4507  0657  0A84               	incf	4,f
  4508  0658  0800               	movf	0,w
  4509  0659  00BF               	movwf	Filter@filter_temp+1
  4510                           
  4511                           ;common.c: 78: filter_buf[i] = filter_buf[i + 1];
  4512  065A  26A5  118A         	fcall	PL6	;call to abstracted procedure
  4513  065C  0800               	movf	0,w
  4514  065D  269F  118A         	fcall	PL5	;call to abstracted procedure
  4515  065F  0D45               	rlf	Filter@i,w
  4516  0660  3E26               	addlw	Filter@filter_buf& (0+255)
  4517  0661  0084               	movwf	4
  4518  0662  0822               	movf	??_Filter,w
  4519  0663  0080               	movwf	0
  4520  0664  0A84               	incf	4,f
  4521  0665  0823               	movf	??_Filter+1,w
  4522  0666  0080               	movwf	0
  4523                           
  4524                           ;common.c: 80: filter_buf[i + 1] = filter_temp;
  4525  0667  26A5  118A         	fcall	PL6	;call to abstracted procedure
  4526  0669  083E               	movf	Filter@filter_temp,w
  4527  066A  0080               	movwf	0
  4528  066B  0A84               	incf	4,f
  4529  066C  083F               	movf	Filter@filter_temp+1,w
  4530  066D  0080               	movwf	0
  4531  066E                     l4501:	
  4532  066E  0AC5               	incf	Filter@i,f
  4533  066F  2E2E               	goto	l4503
  4534  0670                     l4505:	
  4535  0670  1283               	bcf	3,5	;RP0=0, select bank0
  4536  0671  300B               	movlw	11
  4537  0672  1303               	bcf	3,6	;RP1=0, select bank0
  4538  0673  0AC4               	incf	Filter@j,f
  4539  0674  0244               	subwf	Filter@j,w
  4540  0675  1C03               	skipc
  4541  0676  2E2D               	goto	l4495
  4542                           
  4543                           ;common.c: 81: }
  4544                           ;common.c: 82: }
  4545                           ;common.c: 83: }
  4546                           ;common.c: 85: for(i = 2; i < 12 - 2; i++)
  4547  0677  3002               	movlw	2
  4548  0678  00C5               	movwf	Filter@i
  4549                           
  4550                           ;common.c: 86: {
  4551                           ;common.c: 87: filter_sum += filter_buf[i];
  4552  0679  1003               	clrc
  4553  067A                     L25:	
  4554  067A  2695  118A         	fcall	PL3	;call to abstracted procedure
  4555  067C  0822               	movf	??_Filter,w
  4556  067D  07C0               	addwf	Filter@filter_sum,f
  4557  067E  1803               	skipnc
  4558  067F  0AC1               	incf	Filter@filter_sum+1,f
  4559  0680  0823               	movf	??_Filter+1,w
  4560  0681  07C1               	addwf	Filter@filter_sum+1,f
  4561  0682  300A               	movlw	10
  4562  0683  0AC5               	incf	Filter@i,f
  4563  0684  0245               	subwf	Filter@i,w
  4564  0685  1C03               	skipc
  4565  0686  2E7A               	goto	L25
  4566                           
  4567                           ;common.c: 88: }
  4568                           ;common.c: 90: return (filter_sum >> 3);
  4569  0687  0841               	movf	Filter@filter_sum+1,w
  4570  0688  00A1               	movwf	?_Filter+1
  4571  0689  0840               	movf	Filter@filter_sum,w
  4572  068A  00A0               	movwf	?_Filter
  4573  068B  1003               	clrc
  4574  068C  0CA1               	rrf	?_Filter+1,f
  4575  068D  0CA0               	rrf	?_Filter,f
  4576  068E  1003               	clrc
  4577  068F  0CA1               	rrf	?_Filter+1,f
  4578  0690  0CA0               	rrf	?_Filter,f
  4579  0691  1003               	clrc
  4580  0692  0CA1               	rrf	?_Filter+1,f
  4581  0693  0CA0               	rrf	?_Filter,f
  4582  0694  0008               	return
  4583  0695                     __end_of_Filter:	
  4584  0695                     PL3:	
  4585  0695  0D45               	rlf	Filter@i,w
  4586  0696  3E26               	addlw	Filter@filter_buf& (0+255)
  4587  0697  0084               	movwf	4
  4588  0698  1383               	bcf	3,7	;select IRP bank0
  4589  0699  0800               	movf	0,w
  4590  069A  00A2               	movwf	??_Filter
  4591  069B  0A84               	incf	4,f
  4592  069C  0800               	movf	0,w
  4593  069D  00A3               	movwf	??_Filter+1
  4594  069E  0008               	return
  4595  069F                     PL5:	
  4596  069F  00A2               	movwf	??_Filter
  4597  06A0  0A84               	incf	4,f
  4598  06A1  0800               	movf	0,w
  4599  06A2  00A3               	movwf	??_Filter+1
  4600  06A3  1003               	clrc
  4601  06A4  0008               	return
  4602  06A5                     PL6:	
  4603  06A5  1003               	clrc
  4604  06A6  0D45               	rlf	Filter@i,w
  4605  06A7  3E02               	addlw	2
  4606  06A8  3E26               	addlw	Filter@filter_buf& (0+255)
  4607  06A9  0084               	movwf	4
  4608  06AA  0008               	return
  4609                           
  4610                           	psect	text889
  4611  0732                     __ptext889:	
  4612 ;; =============== function _getAdOriginalCh14Value ends ============
  4613                           
  4614                           
  4615 ;; *************** function _process_AD_Converter_Value *****************
  4616 ;; Defined at:
  4617 ;;		line 257 in file "D:\develop\190625\AK7030-OTP\common.c"
  4618 ;; Parameters:    Size  Location     Type
  4619 ;;		None
  4620 ;; Auto vars:     Size  Location     Type
  4621 ;;		None
  4622 ;; Return value:  Size  Location     Type
  4623 ;;		None               void
  4624 ;; Registers used:
  4625 ;;		wreg, status,2, status,0, pclath, cstack
  4626 ;; Tracked objects:
  4627 ;;		On entry : 0/0
  4628 ;;		On exit  : 40/0
  4629 ;;		Unchanged: FFF9F/0
  4630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4631 ;;      Params:         0       0       0       0       0
  4632 ;;      Locals:         0       0       0       0       0
  4633 ;;      Temps:          0       0       0       0       0
  4634 ;;      Totals:         0       0       0       0       0
  4635 ;;Total ram usage:        0 bytes
  4636 ;; Hardware stack levels used:    1
  4637 ;; Hardware stack levels required when called:    3
  4638 ;; This function calls:
  4639 ;;		_getAD_ConvertFlag
  4640 ;;		_setAD_ConvertFlag
  4641 ;;		_AD_Sample
  4642 ;;		_adc_test_init
  4643 ;;		_adc_start
  4644 ;; This function is called by:
  4645 ;;		_main
  4646 ;; This function uses a non-reentrant model
  4647 ;;
  4648  0732                     _process_AD_Converter_Value:	
  4649                           
  4650                           ;common.c: 258: if(getAD_ConvertFlag())
  4651                           
  4652                           ; Regs used in _process_AD_Converter_Value: [wreg+status,2+status,0+pclath+cstack]
  4653  0732  2750  118A         	fcall	_getAD_ConvertFlag
  4654  0734  3A00               	xorlw	0
  4655  0735  1903               	skipnz
  4656  0736  0008               	return
  4657                           
  4658                           ;common.c: 259: {
  4659                           ;common.c: 260: setAD_ConvertFlag(0);
  4660  0737  3000               	movlw	0
  4661  0738  2754  118A         	fcall	_setAD_ConvertFlag
  4662                           
  4663                           ;common.c: 261: AD_Sample();
  4664  073A  2759  118A         	fcall	_AD_Sample
  4665                           
  4666                           ;common.c: 262: if(5 == sampleChannelSelect)
  4667  073C  086E               	movf	_sampleChannelSelect,w
  4668  073D  3A05               	xorlw	5
  4669  073E  1D03               	skipz
  4670  073F  2F44               	goto	l4661
  4671                           
  4672                           ;common.c: 263: adc_test_init(5,3);
  4673  0740  3003               	movlw	3
  4674  0741  00A0               	movwf	?_adc_test_init
  4675  0742  3005               	movlw	5
  4676  0743  2F4D               	goto	L24
  4677  0744                     l4661:	
  4678                           
  4679                           ;common.c: 264: else if(1 == sampleChannelSelect)
  4680  0744  0B6E               	decfsz	_sampleChannelSelect,w
  4681  0745  2F4A               	goto	l4665
  4682                           
  4683                           ;common.c: 265: adc_test_init(1,3);
  4684  0746  3003               	movlw	3
  4685  0747  00A0               	movwf	?_adc_test_init
  4686  0748  3001               	movlw	1
  4687  0749  2F4D               	goto	L24
  4688  074A                     l4665:	
  4689                           
  4690                           ;common.c: 266: else
  4691                           ;common.c: 267: adc_test_init(14,3);
  4692  074A  3003               	movlw	3
  4693  074B  00A0               	movwf	?_adc_test_init
  4694  074C  300E               	movlw	14
  4695  074D                     L24:	
  4696  074D  2777  118A         	fcall	_adc_test_init
  4697                           
  4698                           ;common.c: 269: adc_start();
  4699  074F  2F8C               	ljmp	l4361
  4700  0750                     __end_of_process_AD_Converter_Value:	
  4701  0750                     __ptext894:	
  4702 ;; =============== function _setAD_ConvertFlag ends ============
  4703                           
  4704                           
  4705 ;; *************** function _getAD_ConvertFlag *****************
  4706 ;; Defined at:
  4707 ;;		line 206 in file "D:\develop\190625\AK7030-OTP\common.c"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;		None
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;		None
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  1    wreg      unsigned char 
  4714 ;; Registers used:
  4715 ;;		wreg
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 60/20
  4719 ;;		Unchanged: FFF9F/0
  4720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4721 ;;      Params:         0       0       0       0       0
  4722 ;;      Locals:         0       0       0       0       0
  4723 ;;      Temps:          0       0       0       0       0
  4724 ;;      Totals:         0       0       0       0       0
  4725 ;;Total ram usage:        0 bytes
  4726 ;; Hardware stack levels used:    1
  4727 ;; Hardware stack levels required when called:    2
  4728 ;; This function calls:
  4729 ;;		Nothing
  4730 ;; This function is called by:
  4731 ;;		_process_AD_Converter_Value
  4732 ;; This function uses a non-reentrant model
  4733 ;;
  4734  0750                     _getAD_ConvertFlag:	
  4735                           
  4736                           ;common.c: 207: return adc_convert_flag;
  4737                           
  4738                           ; Regs used in _getAD_ConvertFlag: [wreg]
  4739  0750  1683               	bsf	3,5	;RP0=1, select bank1
  4740  0751  1303               	bcf	3,6	;RP1=0, select bank1
  4741  0752  082D               	movf	_adc_convert_flag^(0+128),w
  4742  0753  0008               	return
  4743  0754                     __end_of_getAD_ConvertFlag:	
  4744  0754                     __ptext893:	
  4745 ;; =============== function _AD_Sample ends ============
  4746                           
  4747                           
  4748 ;; *************** function _setAD_ConvertFlag *****************
  4749 ;; Defined at:
  4750 ;;		line 212 in file "D:\develop\190625\AK7030-OTP\common.c"
  4751 ;; Parameters:    Size  Location     Type
  4752 ;;  flag            1    wreg     unsigned char 
  4753 ;; Auto vars:     Size  Location     Type
  4754 ;;  flag            1    0[BANK0 ] unsigned char 
  4755 ;; Return value:  Size  Location     Type
  4756 ;;		None               void
  4757 ;; Registers used:
  4758 ;;		wreg
  4759 ;; Tracked objects:
  4760 ;;		On entry : 60/20
  4761 ;;		On exit  : 60/20
  4762 ;;		Unchanged: FFF9F/0
  4763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4764 ;;      Params:         0       0       0       0       0
  4765 ;;      Locals:         0       1       0       0       0
  4766 ;;      Temps:          0       0       0       0       0
  4767 ;;      Totals:         0       1       0       0       0
  4768 ;;Total ram usage:        1 bytes
  4769 ;; Hardware stack levels used:    1
  4770 ;; Hardware stack levels required when called:    2
  4771 ;; This function calls:
  4772 ;;		Nothing
  4773 ;; This function is called by:
  4774 ;;		_process_AD_Converter_Value
  4775 ;; This function uses a non-reentrant model
  4776 ;;
  4777  0754                     _setAD_ConvertFlag:	
  4778                           
  4779                           ; Regs used in _setAD_ConvertFlag: [wreg]
  4780                           ;setAD_ConvertFlag@flag stored from wreg
  4781  0754  1283               	bcf	3,5	;RP0=0, select bank0
  4782  0755  00A0               	movwf	setAD_ConvertFlag@flag
  4783                           
  4784                           ;common.c: 213: adc_convert_flag = flag;
  4785  0756  1683               	bsf	3,5	;RP0=1, select bank1
  4786  0757  00AD               	movwf	_adc_convert_flag^(0+128)
  4787  0758  0008               	return
  4788  0759                     __end_of_setAD_ConvertFlag:	
  4789  0759                     __ptext892:	
  4790 ;; =============== function _clearAllTimer ends ============
  4791                           
  4792                           
  4793 ;; *************** function _AD_Sample *****************
  4794 ;; Defined at:
  4795 ;;		line 283 in file "D:\develop\190625\AK7030-OTP\common.c"
  4796 ;; Parameters:    Size  Location     Type
  4797 ;;		None
  4798 ;; Auto vars:     Size  Location     Type
  4799 ;;		None
  4800 ;; Return value:  Size  Location     Type
  4801 ;;		None               void
  4802 ;; Registers used:
  4803 ;;		wreg, status,2, status,0
  4804 ;; Tracked objects:
  4805 ;;		On entry : 60/20
  4806 ;;		On exit  : 60/0
  4807 ;;		Unchanged: FFF9F/0
  4808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4809 ;;      Params:         0       0       0       0       0
  4810 ;;      Locals:         0       0       0       0       0
  4811 ;;      Temps:          0       0       0       0       0
  4812 ;;      Totals:         0       0       0       0       0
  4813 ;;Total ram usage:        0 bytes
  4814 ;; Hardware stack levels used:    1
  4815 ;; Hardware stack levels required when called:    2
  4816 ;; This function calls:
  4817 ;;		Nothing
  4818 ;; This function is called by:
  4819 ;;		_process_AD_Converter_Value
  4820 ;; This function uses a non-reentrant model
  4821 ;;
  4822  0759                     _AD_Sample:	
  4823                           
  4824                           ;common.c: 284: if(sampleTimes < 12)
  4825                           
  4826                           ; Regs used in _AD_Sample: [wreg+status,2+status,0]
  4827  0759  300C               	movlw	12
  4828  075A  1283               	bcf	3,5	;RP0=0, select bank0
  4829  075B  024E               	subwf	_sampleTimes,w
  4830  075C  1803               	skipnc
  4831  075D  0008               	return
  4832  075E  300C               	movlw	12
  4833                           
  4834                           ;common.c: 285: {
  4835                           ;common.c: 306: sampleTimes++;
  4836  075F  0ACE               	incf	_sampleTimes,f
  4837                           
  4838                           ;common.c: 308: if(sampleTimes >= 12)
  4839  0760  024E               	subwf	_sampleTimes,w
  4840  0761  1C03               	skipc
  4841  0762  0008               	return
  4842                           
  4843                           ;common.c: 309: {
  4844                           ;common.c: 310: sampleTimes = 0;
  4845  0763  01CE               	clrf	_sampleTimes
  4846                           
  4847                           ;common.c: 312: if(sampleChannelSelect == 14)
  4848  0764  086E               	movf	_sampleChannelSelect,w
  4849  0765  3A0E               	xorlw	14
  4850  0766  1D03               	skipz
  4851  0767  2F6B               	goto	l4591
  4852                           
  4853                           ;common.c: 313: {
  4854                           ;common.c: 316: sampleChannelSelect = 1;
  4855  0768  01EE               	clrf	_sampleChannelSelect
  4856  0769  0AEE               	incf	_sampleChannelSelect,f
  4857                           
  4858                           ;common.c: 317: }
  4859  076A  0008               	return
  4860  076B                     l4591:	
  4861                           
  4862                           ;common.c: 318: else if(sampleChannelSelect == 5)
  4863  076B  086E               	movf	_sampleChannelSelect,w
  4864  076C  3A05               	xorlw	5
  4865  076D  1D03               	skipz
  4866  076E  2F72               	goto	l4595
  4867  076F                     l4593:	
  4868                           
  4869                           ;common.c: 319: {
  4870                           ;common.c: 321: sampleChannelSelect = 14;
  4871  076F  300E               	movlw	14
  4872  0770  00EE               	movwf	_sampleChannelSelect
  4873                           
  4874                           ;common.c: 322: }
  4875  0771  0008               	return
  4876  0772                     l4595:	
  4877                           
  4878                           ;common.c: 323: else if(sampleChannelSelect == 1)
  4879  0772  0B6E               	decfsz	_sampleChannelSelect,w
  4880  0773  2F6F               	goto	l4593
  4881                           
  4882                           ;common.c: 324: {
  4883                           ;common.c: 326: sampleChannelSelect = 5;
  4884  0774  3005               	movlw	5
  4885  0775  00EE               	movwf	_sampleChannelSelect
  4886                           
  4887                           ;common.c: 327: }
  4888  0776  0008               	return
  4889  0777                     __end_of_AD_Sample:	
  4890  0777                     __ptext911:	
  4891 ;; =============== function _dac_init ends ============
  4892                           
  4893                           
  4894 ;; *************** function _adc_test_init *****************
  4895 ;; Defined at:
  4896 ;;		line 85 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4897 ;; Parameters:    Size  Location     Type
  4898 ;;  channel         1    wreg     unsigned char 
  4899 ;;  ref             1    0[BANK0 ] unsigned char 
  4900 ;; Auto vars:     Size  Location     Type
  4901 ;;  channel         1    2[BANK0 ] unsigned char 
  4902 ;; Return value:  Size  Location     Type
  4903 ;;		None               void
  4904 ;; Registers used:
  4905 ;;		wreg, status,2, status,0
  4906 ;; Tracked objects:
  4907 ;;		On entry : 60/0
  4908 ;;		On exit  : 60/20
  4909 ;;		Unchanged: FFF9F/0
  4910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4911 ;;      Params:         0       1       0       0       0
  4912 ;;      Locals:         0       1       0       0       0
  4913 ;;      Temps:          0       1       0       0       0
  4914 ;;      Totals:         0       3       0       0       0
  4915 ;;Total ram usage:        3 bytes
  4916 ;; Hardware stack levels used:    1
  4917 ;; Hardware stack levels required when called:    2
  4918 ;; This function calls:
  4919 ;;		Nothing
  4920 ;; This function is called by:
  4921 ;;		_main
  4922 ;;		_process_AD_Converter_Value
  4923 ;; This function uses a non-reentrant model
  4924 ;;
  4925  0777                     _adc_test_init:	
  4926                           
  4927                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  4928                           ;adc_test_init@channel stored from wreg
  4929  0777  00A2               	movwf	adc_test_init@channel
  4930                           
  4931                           ;periph.c: 86: ADCON0 = 0x00;
  4932  0778  019F               	clrf	31	;volatile
  4933                           
  4934                           ;periph.c: 87: ADCON0|=channel<<2;
  4935  0779  00A1               	movwf	??_adc_test_init
  4936  077A  1003               	clrc
  4937  077B  0DA1               	rlf	??_adc_test_init,f
  4938  077C  1003               	clrc
  4939  077D  0D21               	rlf	??_adc_test_init,w
  4940  077E  049F               	iorwf	31,f	;volatile
  4941                           
  4942                           ;periph.c: 88: ADCON1|=ref<<6;
  4943  077F  0820               	movf	adc_test_init@ref,w
  4944  0780  00A1               	movwf	??_adc_test_init
  4945  0781  0CA1               	rrf	??_adc_test_init,f
  4946  0782  0CA1               	rrf	??_adc_test_init,f
  4947  0783  0C21               	rrf	??_adc_test_init,w
  4948  0784  39C0               	andlw	192
  4949  0785  1683               	bsf	3,5	;RP0=1, select bank1
  4950  0786  049F               	iorwf	31,f	;volatile
  4951                           
  4952                           ;periph.c: 89: ADON=1;
  4953  0787  1283               	bcf	3,5	;RP0=0, select bank0
  4954  0788  141F               	bsf	31,0
  4955                           
  4956                           ;periph.c: 90: ADIE=1;
  4957  0789  1683               	bsf	3,5	;RP0=1, select bank1
  4958  078A  150D               	bsf	13,2
  4959  078B  0008               	return
  4960  078C                     __end_of_adc_test_init:	
  4961  078C                     __ptext907:	
  4962 ;; =============== function _isPermitSampleTime ends ============
  4963                           
  4964                           
  4965 ;; *************** function _adc_start *****************
  4966 ;; Defined at:
  4967 ;;		line 100 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4968 ;; Parameters:    Size  Location     Type
  4969 ;;		None
  4970 ;; Auto vars:     Size  Location     Type
  4971 ;;		None
  4972 ;; Return value:  Size  Location     Type
  4973 ;;		None               void
  4974 ;; Registers used:
  4975 ;;		None
  4976 ;; Tracked objects:
  4977 ;;		On entry : 60/20
  4978 ;;		On exit  : 60/0
  4979 ;;		Unchanged: FFF9F/0
  4980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4981 ;;      Params:         0       0       0       0       0
  4982 ;;      Locals:         0       0       0       0       0
  4983 ;;      Temps:          0       0       0       0       0
  4984 ;;      Totals:         0       0       0       0       0
  4985 ;;Total ram usage:        0 bytes
  4986 ;; Hardware stack levels used:    1
  4987 ;; Hardware stack levels required when called:    2
  4988 ;; This function calls:
  4989 ;;		Nothing
  4990 ;; This function is called by:
  4991 ;;		_main
  4992 ;;		_process_AD_Converter_Value
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995  078C                     _adc_start:	
  4996  078C                     l4361:	
  4997                           ; Regs used in _adc_start: []
  4998                           
  4999                           
  5000                           ;periph.c: 101: GO=1;
  5001  078C  1283               	bcf	3,5	;RP0=0, select bank0
  5002  078D  149F               	bsf	31,1
  5003  078E  0008               	return
  5004  078F                     __end_of_adc_start:	
  5005                           
  5006                           	psect	text896
  5007  0FE3                     __ptext896:	
  5008 ;; =============== function _Filter ends ============
  5009                           
  5010                           
  5011 ;; *************** function _isFinishedThreeHoursTimer *****************
  5012 ;; Defined at:
  5013 ;;		line 471 in file "D:\develop\190625\AK7030-OTP\common.c"
  5014 ;; Parameters:    Size  Location     Type
  5015 ;;		None
  5016 ;; Auto vars:     Size  Location     Type
  5017 ;;		None
  5018 ;; Return value:  Size  Location     Type
  5019 ;;                  1    wreg      unsigned char 
  5020 ;; Registers used:
  5021 ;;		wreg, status,2, status,0
  5022 ;; Tracked objects:
  5023 ;;		On entry : 40/20
  5024 ;;		On exit  : 40/0
  5025 ;;		Unchanged: FFF9F/0
  5026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5027 ;;      Params:         0       0       0       0       0
  5028 ;;      Locals:         0       0       0       0       0
  5029 ;;      Temps:          0       0       0       0       0
  5030 ;;      Totals:         0       0       0       0       0
  5031 ;;Total ram usage:        0 bytes
  5032 ;; Hardware stack levels used:    1
  5033 ;; Hardware stack levels required when called:    2
  5034 ;; This function calls:
  5035 ;;		Nothing
  5036 ;; This function is called by:
  5037 ;;		_main
  5038 ;; This function uses a non-reentrant model
  5039 ;;
  5040  0FE3                     _isFinishedThreeHoursTimer:	
  5041                           
  5042                           ;common.c: 472: if((uiSmallTimer == 0) && bSmallTimerStartFlag)
  5043                           
  5044                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  5045  0FE3  1683               	bsf	3,5	;RP0=1, select bank1
  5046  0FE4  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  5047  0FE5  0422               	iorwf	_uiSmallTimer^(0+128),w
  5048  0FE6  1D03               	skipz
  5049  0FE7  3400               	retlw	0
  5050  0FE8  1283               	bcf	3,5	;RP0=0, select bank0
  5051  0FE9  084B               	movf	_bSmallTimerStartFlag,w
  5052  0FEA  1903               	btfsc	3,2
  5053  0FEB  3400               	retlw	0
  5054  0FEC  3001               	movlw	1
  5055                           
  5056                           ;common.c: 473: {
  5057                           ;common.c: 474: bSmallTimerStartFlag = 0;
  5058  0FED  01CB               	clrf	_bSmallTimerStartFlag
  5059                           
  5060                           ;common.c: 475: return 1;
  5061  0FEE  0008               	return
  5062  0FEF                     __end_of_isFinishedThreeHoursTimer:	
  5063                           ;common.c: 477: else
  5064                           ;common.c: 478: return 0;
  5065                           
  5066                           
  5067                           	psect	text897
  5068  07C2                     __ptext897:	
  5069 ;; =============== function _isFinishedThreeHoursTimer ends ============
  5070                           
  5071                           
  5072 ;; *************** function _startThreeHoursTimer *****************
  5073 ;; Defined at:
  5074 ;;		line 401 in file "D:\develop\190625\AK7030-OTP\common.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;		None
  5079 ;; Return value:  Size  Location     Type
  5080 ;;		None               void
  5081 ;; Registers used:
  5082 ;;		wreg, status,2, status,0
  5083 ;; Tracked objects:
  5084 ;;		On entry : 60/0
  5085 ;;		On exit  : 40/0
  5086 ;;		Unchanged: FFF9F/0
  5087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5088 ;;      Params:         0       2       0       0       0
  5089 ;;      Locals:         0       0       0       0       0
  5090 ;;      Temps:          0       0       0       0       0
  5091 ;;      Totals:         0       2       0       0       0
  5092 ;;Total ram usage:        2 bytes
  5093 ;; Hardware stack levels used:    1
  5094 ;; Hardware stack levels required when called:    2
  5095 ;; This function calls:
  5096 ;;		Nothing
  5097 ;; This function is called by:
  5098 ;;		_main
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101  07C2                     _startThreeHoursTimer:	
  5102                           
  5103                           ;common.c: 402: if(( 0 == uiSmallTimer ) && ( 0 == bSmallTimerStartFlag ))
  5104                           
  5105                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  5106  07C2  1683               	bsf	3,5	;RP0=1, select bank1
  5107  07C3  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  5108  07C4  0422               	iorwf	_uiSmallTimer^(0+128),w
  5109  07C5  1D03               	skipz
  5110  07C6  0008               	return
  5111  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  5112  07C8  08CB               	movf	_bSmallTimerStartFlag,f
  5113  07C9  1D03               	skipz
  5114  07CA  0008               	return
  5115                           
  5116                           ;common.c: 403: {
  5117                           ;common.c: 404: uiSmallTimer = uiSetTime;
  5118  07CB  0821               	movf	startThreeHoursTimer@uiSetTime+1,w
  5119  07CC  1683               	bsf	3,5	;RP0=1, select bank1
  5120  07CD  00A3               	movwf	(_uiSmallTimer+1)^(0+128)
  5121  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  5122  07CF  0820               	movf	startThreeHoursTimer@uiSetTime,w
  5123  07D0  1683               	bsf	3,5	;RP0=1, select bank1
  5124  07D1  00A2               	movwf	_uiSmallTimer^(0+128)
  5125                           
  5126                           ;common.c: 405: bSmallTimerStartFlag = 1;
  5127  07D2  1283               	bcf	3,5	;RP0=0, select bank0
  5128  07D3  01CB               	clrf	_bSmallTimerStartFlag
  5129  07D4  0ACB               	incf	_bSmallTimerStartFlag,f
  5130  07D5  0008               	return
  5131  07D6                     __end_of_startThreeHoursTimer:	
  5132                           
  5133                           	psect	text898
  5134  0FD7                     __ptext898:	
  5135 ;; =============== function _startThreeHoursTimer ends ============
  5136                           
  5137                           
  5138 ;; *************** function _isFinishedTwentySecondsTimer *****************
  5139 ;; Defined at:
  5140 ;;		line 448 in file "D:\develop\190625\AK7030-OTP\common.c"
  5141 ;; Parameters:    Size  Location     Type
  5142 ;;		None
  5143 ;; Auto vars:     Size  Location     Type
  5144 ;;		None
  5145 ;; Return value:  Size  Location     Type
  5146 ;;                  1    wreg      unsigned char 
  5147 ;; Registers used:
  5148 ;;		wreg, status,2, status,0
  5149 ;; Tracked objects:
  5150 ;;		On entry : 60/0
  5151 ;;		On exit  : 40/0
  5152 ;;		Unchanged: FFF9F/0
  5153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5154 ;;      Params:         0       0       0       0       0
  5155 ;;      Locals:         0       0       0       0       0
  5156 ;;      Temps:          0       0       0       0       0
  5157 ;;      Totals:         0       0       0       0       0
  5158 ;;Total ram usage:        0 bytes
  5159 ;; Hardware stack levels used:    1
  5160 ;; Hardware stack levels required when called:    2
  5161 ;; This function calls:
  5162 ;;		Nothing
  5163 ;; This function is called by:
  5164 ;;		_main
  5165 ;; This function uses a non-reentrant model
  5166 ;;
  5167  0FD7                     _isFinishedTwentySecondsTimer:	
  5168                           
  5169                           ;common.c: 449: if(( 0 == uiTwentySecondsTimer ) && bTwentySecStartFlag )
  5170                           
  5171                           ; Regs used in _isFinishedTwentySecondsTimer: [wreg+status,2+status,0]
  5172  0FD7  1683               	bsf	3,5	;RP0=1, select bank1
  5173  0FD8  0827               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  5174  0FD9  0426               	iorwf	_uiTwentySecondsTimer^(0+128),w
  5175  0FDA  1D03               	skipz
  5176  0FDB  3400               	retlw	0
  5177  0FDC  1283               	bcf	3,5	;RP0=0, select bank0
  5178  0FDD  084D               	movf	_bTwentySecStartFlag,w
  5179  0FDE  1903               	btfsc	3,2
  5180  0FDF  3400               	retlw	0
  5181  0FE0  3001               	movlw	1
  5182                           
  5183                           ;common.c: 450: {
  5184                           ;common.c: 451: bTwentySecStartFlag = 0;
  5185  0FE1  01CD               	clrf	_bTwentySecStartFlag
  5186                           
  5187                           ;common.c: 452: return 1;
  5188  0FE2  0008               	return
  5189  0FE3                     __end_of_isFinishedTwentySecondsTimer:	
  5190                           ;common.c: 454: else
  5191                           ;common.c: 455: return 0;
  5192                           
  5193                           
  5194                           	psect	text899
  5195  0FEF                     __ptext899:	
  5196 ;; =============== function _isFinishedTwentySecondsTimer ends ============
  5197                           
  5198                           
  5199 ;; *************** function _startTwentySecondsTimer *****************
  5200 ;; Defined at:
  5201 ;;		line 415 in file "D:\develop\190625\AK7030-OTP\common.c"
  5202 ;; Parameters:    Size  Location     Type
  5203 ;;		None
  5204 ;; Auto vars:     Size  Location     Type
  5205 ;;		None
  5206 ;; Return value:  Size  Location     Type
  5207 ;;		None               void
  5208 ;; Registers used:
  5209 ;;		wreg, status,2, status,0
  5210 ;; Tracked objects:
  5211 ;;		On entry : 160/0
  5212 ;;		On exit  : 140/0
  5213 ;;		Unchanged: FFE9F/0
  5214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5215 ;;      Params:         0       0       0       0       0
  5216 ;;      Locals:         0       0       0       0       0
  5217 ;;      Temps:          0       0       0       0       0
  5218 ;;      Totals:         0       0       0       0       0
  5219 ;;Total ram usage:        0 bytes
  5220 ;; Hardware stack levels used:    1
  5221 ;; Hardware stack levels required when called:    2
  5222 ;; This function calls:
  5223 ;;		Nothing
  5224 ;; This function is called by:
  5225 ;;		_main
  5226 ;; This function uses a non-reentrant model
  5227 ;;
  5228  0FEF                     _startTwentySecondsTimer:	
  5229                           
  5230                           ;common.c: 416: if(( 0 == uiTwentySecondsTimer) && ( 0 == bTwentySecStartFlag))
  5231                           
  5232                           ; Regs used in _startTwentySecondsTimer: [wreg+status,2+status,0]
  5233  0FEF  1683               	bsf	3,5	;RP0=1, select bank1
  5234  0FF0  0827               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  5235  0FF1  0426               	iorwf	_uiTwentySecondsTimer^(0+128),w
  5236  0FF2  1D03               	skipz
  5237  0FF3  0008               	return
  5238  0FF4  1283               	bcf	3,5	;RP0=0, select bank0
  5239  0FF5  08CD               	movf	_bTwentySecStartFlag,f
  5240  0FF6  1D03               	skipz
  5241  0FF7  0008               	return
  5242                           
  5243                           ;common.c: 417: {
  5244                           ;common.c: 418: uiTwentySecondsTimer = 20;
  5245  0FF8  3014               	movlw	20
  5246  0FF9  1683               	bsf	3,5	;RP0=1, select bank1
  5247  0FFA  00A6               	movwf	_uiTwentySecondsTimer^(0+128)
  5248  0FFB  01A7               	clrf	(_uiTwentySecondsTimer+1)^(0+128)
  5249                           
  5250                           ;common.c: 419: bTwentySecStartFlag = 1;
  5251  0FFC  1283               	bcf	3,5	;RP0=0, select bank0
  5252  0FFD  01CD               	clrf	_bTwentySecStartFlag
  5253  0FFE  0ACD               	incf	_bTwentySecStartFlag,f
  5254  0FFF  0008               	return
  5255  1000                     __end_of_startTwentySecondsTimer:	
  5256                           
  5257                           	psect	text900
  5258  0FCB                     __ptext900:	
  5259 ;; =============== function _startTwentySecondsTimer ends ============
  5260                           
  5261                           
  5262 ;; *************** function _isFinishedTwelveHoursTimer *****************
  5263 ;; Defined at:
  5264 ;;		line 460 in file "D:\develop\190625\AK7030-OTP\common.c"
  5265 ;; Parameters:    Size  Location     Type
  5266 ;;		None
  5267 ;; Auto vars:     Size  Location     Type
  5268 ;;		None
  5269 ;; Return value:  Size  Location     Type
  5270 ;;                  1    wreg      unsigned char 
  5271 ;; Registers used:
  5272 ;;		wreg, status,2, status,0
  5273 ;; Tracked objects:
  5274 ;;		On entry : 40/0
  5275 ;;		On exit  : 40/0
  5276 ;;		Unchanged: FFF9F/0
  5277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5278 ;;      Params:         0       0       0       0       0
  5279 ;;      Locals:         0       0       0       0       0
  5280 ;;      Temps:          0       0       0       0       0
  5281 ;;      Totals:         0       0       0       0       0
  5282 ;;Total ram usage:        0 bytes
  5283 ;; Hardware stack levels used:    1
  5284 ;; Hardware stack levels required when called:    2
  5285 ;; This function calls:
  5286 ;;		Nothing
  5287 ;; This function is called by:
  5288 ;;		_main
  5289 ;; This function uses a non-reentrant model
  5290 ;;
  5291  0FCB                     _isFinishedTwelveHoursTimer:	
  5292                           
  5293                           ;common.c: 461: if(( uiBigTimer == 0 ) && bBigTimerStartFlag )
  5294                           
  5295                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  5296  0FCB  1683               	bsf	3,5	;RP0=1, select bank1
  5297  0FCC  0821               	movf	(_uiBigTimer+1)^(0+128),w
  5298  0FCD  0420               	iorwf	_uiBigTimer^(0+128),w
  5299  0FCE  1D03               	skipz
  5300  0FCF  3400               	retlw	0
  5301  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  5302  0FD1  084A               	movf	_bBigTimerStartFlag,w
  5303  0FD2  1903               	btfsc	3,2
  5304  0FD3  3400               	retlw	0
  5305  0FD4  3001               	movlw	1
  5306                           
  5307                           ;common.c: 462: {
  5308                           ;common.c: 463: bBigTimerStartFlag = 0;
  5309  0FD5  01CA               	clrf	_bBigTimerStartFlag
  5310                           
  5311                           ;common.c: 464: return 1;
  5312  0FD6  0008               	return
  5313  0FD7                     __end_of_isFinishedTwelveHoursTimer:	
  5314                           ;common.c: 466: else
  5315                           ;common.c: 467: return 0;
  5316                           
  5317                           
  5318                           	psect	text901
  5319  07D6                     __ptext901:	
  5320 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  5321                           
  5322                           
  5323 ;; *************** function _startTwelveHourTimer *****************
  5324 ;; Defined at:
  5325 ;;		line 360 in file "D:\develop\190625\AK7030-OTP\common.c"
  5326 ;; Parameters:    Size  Location     Type
  5327 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  5328 ;; Auto vars:     Size  Location     Type
  5329 ;;		None
  5330 ;; Return value:  Size  Location     Type
  5331 ;;		None               void
  5332 ;; Registers used:
  5333 ;;		wreg, status,2, status,0
  5334 ;; Tracked objects:
  5335 ;;		On entry : 60/0
  5336 ;;		On exit  : 40/0
  5337 ;;		Unchanged: FFF9F/0
  5338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5339 ;;      Params:         0       2       0       0       0
  5340 ;;      Locals:         0       0       0       0       0
  5341 ;;      Temps:          0       0       0       0       0
  5342 ;;      Totals:         0       2       0       0       0
  5343 ;;Total ram usage:        2 bytes
  5344 ;; Hardware stack levels used:    1
  5345 ;; Hardware stack levels required when called:    2
  5346 ;; This function calls:
  5347 ;;		Nothing
  5348 ;; This function is called by:
  5349 ;;		_main
  5350 ;; This function uses a non-reentrant model
  5351 ;;
  5352  07D6                     _startTwelveHourTimer:	
  5353                           
  5354                           ;common.c: 361: if((0 == uiBigTimer) && ( 0 == bBigTimerStartFlag))
  5355                           
  5356                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  5357  07D6  1683               	bsf	3,5	;RP0=1, select bank1
  5358  07D7  0821               	movf	(_uiBigTimer+1)^(0+128),w
  5359  07D8  0420               	iorwf	_uiBigTimer^(0+128),w
  5360  07D9  1D03               	skipz
  5361  07DA  0008               	return
  5362  07DB  1283               	bcf	3,5	;RP0=0, select bank0
  5363  07DC  08CA               	movf	_bBigTimerStartFlag,f
  5364  07DD  1D03               	skipz
  5365  07DE  0008               	return
  5366                           
  5367                           ;common.c: 362: {
  5368                           ;common.c: 363: uiBigTimer = uiSetTime;
  5369  07DF  0821               	movf	startTwelveHourTimer@uiSetTime+1,w
  5370  07E0  1683               	bsf	3,5	;RP0=1, select bank1
  5371  07E1  00A1               	movwf	(_uiBigTimer+1)^(0+128)
  5372  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  5373  07E3  0820               	movf	startTwelveHourTimer@uiSetTime,w
  5374  07E4  1683               	bsf	3,5	;RP0=1, select bank1
  5375  07E5  00A0               	movwf	_uiBigTimer^(0+128)
  5376                           
  5377                           ;common.c: 364: bBigTimerStartFlag = 1;
  5378  07E6  1283               	bcf	3,5	;RP0=0, select bank0
  5379  07E7  01CA               	clrf	_bBigTimerStartFlag
  5380  07E8  0ACA               	incf	_bBigTimerStartFlag,f
  5381  07E9  0008               	return
  5382  07EA                     __end_of_startTwelveHourTimer:	
  5383                           
  5384                           	psect	text902
  5385  0FBF                     __ptext902:	
  5386 ;; =============== function _startTwelveHourTimer ends ============
  5387                           
  5388                           
  5389 ;; *************** function _isFinishedTwentyMinTimer *****************
  5390 ;; Defined at:
  5391 ;;		line 436 in file "D:\develop\190625\AK7030-OTP\common.c"
  5392 ;; Parameters:    Size  Location     Type
  5393 ;;		None
  5394 ;; Auto vars:     Size  Location     Type
  5395 ;;		None
  5396 ;; Return value:  Size  Location     Type
  5397 ;;                  1    wreg      unsigned char 
  5398 ;; Registers used:
  5399 ;;		wreg, status,2, status,0
  5400 ;; Tracked objects:
  5401 ;;		On entry : 160/0
  5402 ;;		On exit  : 140/0
  5403 ;;		Unchanged: FFE9F/0
  5404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5405 ;;      Params:         0       0       0       0       0
  5406 ;;      Locals:         0       0       0       0       0
  5407 ;;      Temps:          0       0       0       0       0
  5408 ;;      Totals:         0       0       0       0       0
  5409 ;;Total ram usage:        0 bytes
  5410 ;; Hardware stack levels used:    1
  5411 ;; Hardware stack levels required when called:    2
  5412 ;; This function calls:
  5413 ;;		Nothing
  5414 ;; This function is called by:
  5415 ;;		_main
  5416 ;; This function uses a non-reentrant model
  5417 ;;
  5418  0FBF                     _isFinishedTwentyMinTimer:	
  5419                           
  5420                           ;common.c: 437: if(( 0 == uiTwentyMinTimer ) && bTwentyMinStartFlag )
  5421                           
  5422                           ; Regs used in _isFinishedTwentyMinTimer: [wreg+status,2+status,0]
  5423  0FBF  1683               	bsf	3,5	;RP0=1, select bank1
  5424  0FC0  0825               	movf	(_uiTwentyMinTimer+1)^(0+128),w
  5425  0FC1  0424               	iorwf	_uiTwentyMinTimer^(0+128),w
  5426  0FC2  1D03               	skipz
  5427  0FC3  3400               	retlw	0
  5428  0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  5429  0FC5  084C               	movf	_bTwentyMinStartFlag,w
  5430  0FC6  1903               	btfsc	3,2
  5431  0FC7  3400               	retlw	0
  5432  0FC8  3001               	movlw	1
  5433                           
  5434                           ;common.c: 438: {
  5435                           ;common.c: 439: bTwentyMinStartFlag = 0;
  5436  0FC9  01CC               	clrf	_bTwentyMinStartFlag
  5437                           
  5438                           ;common.c: 440: return 1;
  5439  0FCA  0008               	return
  5440  0FCB                     __end_of_isFinishedTwentyMinTimer:	
  5441                           ;common.c: 442: else
  5442                           ;common.c: 443: return 0;
  5443                           
  5444                           
  5445                           	psect	text903
  5446  0F8D                     __ptext903:	
  5447 ;; =============== function _isFinishedTwentyMinTimer ends ============
  5448                           
  5449                           
  5450 ;; *************** function _clearTwentyMinTimer *****************
  5451 ;; Defined at:
  5452 ;;		line 394 in file "D:\develop\190625\AK7030-OTP\common.c"
  5453 ;; Parameters:    Size  Location     Type
  5454 ;;		None
  5455 ;; Auto vars:     Size  Location     Type
  5456 ;;		None
  5457 ;; Return value:  Size  Location     Type
  5458 ;;		None               void
  5459 ;; Registers used:
  5460 ;;		status,2
  5461 ;; Tracked objects:
  5462 ;;		On entry : 160/0
  5463 ;;		On exit  : 160/0
  5464 ;;		Unchanged: FFE9F/0
  5465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5466 ;;      Params:         0       0       0       0       0
  5467 ;;      Locals:         0       0       0       0       0
  5468 ;;      Temps:          0       0       0       0       0
  5469 ;;      Totals:         0       0       0       0       0
  5470 ;;Total ram usage:        0 bytes
  5471 ;; Hardware stack levels used:    1
  5472 ;; Hardware stack levels required when called:    2
  5473 ;; This function calls:
  5474 ;;		Nothing
  5475 ;; This function is called by:
  5476 ;;		_main
  5477 ;; This function uses a non-reentrant model
  5478 ;;
  5479  0F8D                     _clearTwentyMinTimer:	
  5480                           
  5481                           ;common.c: 395: uiTwentyMinTimer = 0;
  5482                           
  5483                           ; Regs used in _clearTwentyMinTimer: [status,2]
  5484  0F8D  1683               	bsf	3,5	;RP0=1, select bank1
  5485  0F8E  01A4               	clrf	_uiTwentyMinTimer^(0+128)
  5486  0F8F  01A5               	clrf	(_uiTwentyMinTimer+1)^(0+128)
  5487                           
  5488                           ;common.c: 396: bTwentyMinStartFlag = 0;
  5489  0F90  1283               	bcf	3,5	;RP0=0, select bank0
  5490  0F91  01CC               	clrf	_bTwentyMinStartFlag
  5491  0F92  0008               	return
  5492  0F93                     __end_of_clearTwentyMinTimer:	
  5493                           
  5494                           	psect	text904
  5495  07EA                     __ptext904:	
  5496 ;; =============== function _clearTwentyMinTimer ends ============
  5497                           
  5498                           
  5499 ;; *************** function _startTwentyMinTimer *****************
  5500 ;; Defined at:
  5501 ;;		line 426 in file "D:\develop\190625\AK7030-OTP\common.c"
  5502 ;; Parameters:    Size  Location     Type
  5503 ;;  uiSetValue      2    0[BANK0 ] unsigned int 
  5504 ;; Auto vars:     Size  Location     Type
  5505 ;;		None
  5506 ;; Return value:  Size  Location     Type
  5507 ;;		None               void
  5508 ;; Registers used:
  5509 ;;		wreg, status,2, status,0
  5510 ;; Tracked objects:
  5511 ;;		On entry : 160/0
  5512 ;;		On exit  : 140/0
  5513 ;;		Unchanged: FFE9F/0
  5514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5515 ;;      Params:         0       2       0       0       0
  5516 ;;      Locals:         0       0       0       0       0
  5517 ;;      Temps:          0       0       0       0       0
  5518 ;;      Totals:         0       2       0       0       0
  5519 ;;Total ram usage:        2 bytes
  5520 ;; Hardware stack levels used:    1
  5521 ;; Hardware stack levels required when called:    2
  5522 ;; This function calls:
  5523 ;;		Nothing
  5524 ;; This function is called by:
  5525 ;;		_main
  5526 ;; This function uses a non-reentrant model
  5527 ;;
  5528  07EA                     _startTwentyMinTimer:	
  5529                           
  5530                           ;common.c: 427: if(( 0 == uiTwentyMinTimer) && ( 0 == bTwentyMinStartFlag))
  5531                           
  5532                           ; Regs used in _startTwentyMinTimer: [wreg+status,2+status,0]
  5533  07EA  1683               	bsf	3,5	;RP0=1, select bank1
  5534  07EB  0825               	movf	(_uiTwentyMinTimer+1)^(0+128),w
  5535  07EC  0424               	iorwf	_uiTwentyMinTimer^(0+128),w
  5536  07ED  1D03               	skipz
  5537  07EE  0008               	return
  5538  07EF  1283               	bcf	3,5	;RP0=0, select bank0
  5539  07F0  08CC               	movf	_bTwentyMinStartFlag,f
  5540  07F1  1D03               	skipz
  5541  07F2  0008               	return
  5542                           
  5543                           ;common.c: 428: {
  5544                           ;common.c: 429: uiTwentyMinTimer = uiSetValue;
  5545  07F3  0821               	movf	startTwentyMinTimer@uiSetValue+1,w
  5546  07F4  1683               	bsf	3,5	;RP0=1, select bank1
  5547  07F5  00A5               	movwf	(_uiTwentyMinTimer+1)^(0+128)
  5548  07F6  1283               	bcf	3,5	;RP0=0, select bank0
  5549  07F7  0820               	movf	startTwentyMinTimer@uiSetValue,w
  5550  07F8  1683               	bsf	3,5	;RP0=1, select bank1
  5551  07F9  00A4               	movwf	_uiTwentyMinTimer^(0+128)
  5552                           
  5553                           ;common.c: 430: bTwentyMinStartFlag = 1;
  5554  07FA  1283               	bcf	3,5	;RP0=0, select bank0
  5555  07FB  01CC               	clrf	_bTwentyMinStartFlag
  5556  07FC  0ACC               	incf	_bTwentyMinStartFlag,f
  5557  07FD  0008               	return
  5558  07FE                     __end_of_startTwentyMinTimer:	
  5559                           
  5560                           	psect	text905
  5561  07FE                     __ptext905:	
  5562 ;; =============== function _startTwentyMinTimer ends ============
  5563                           
  5564                           
  5565 ;; *************** function _clrSampeTime *****************
  5566 ;; Defined at:
  5567 ;;		line 492 in file "D:\develop\190625\AK7030-OTP\common.c"
  5568 ;; Parameters:    Size  Location     Type
  5569 ;;		None
  5570 ;; Auto vars:     Size  Location     Type
  5571 ;;		None
  5572 ;; Return value:  Size  Location     Type
  5573 ;;		None               void
  5574 ;; Registers used:
  5575 ;;		status,2
  5576 ;; Tracked objects:
  5577 ;;		On entry : 60/20
  5578 ;;		On exit  : 60/20
  5579 ;;		Unchanged: FFF9F/0
  5580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5581 ;;      Params:         0       0       0       0       0
  5582 ;;      Locals:         0       0       0       0       0
  5583 ;;      Temps:          0       0       0       0       0
  5584 ;;      Totals:         0       0       0       0       0
  5585 ;;Total ram usage:        0 bytes
  5586 ;; Hardware stack levels used:    1
  5587 ;; Hardware stack levels required when called:    2
  5588 ;; This function calls:
  5589 ;;		Nothing
  5590 ;; This function is called by:
  5591 ;;		_main
  5592 ;; This function uses a non-reentrant model
  5593 ;;
  5594  07FE                     _clrSampeTime:	
  5595                           
  5596                           ;common.c: 493: timer.timer10msStopWatch = 0;
  5597                           
  5598                           ; Regs used in _clrSampeTime: [status,2]
  5599  07FE  01AE               	clrf	_timer^(0+128)
  5600  07FF  0008               	return
  5601  0800                     __end_of_clrSampeTime:	
  5602                           
  5603                           	psect	text906
  5604  0F87                     __ptext906:	
  5605 ;; =============== function _clrSampeTime ends ============
  5606                           
  5607                           
  5608 ;; *************** function _isPermitSampleTime *****************
  5609 ;; Defined at:
  5610 ;;		line 482 in file "D:\develop\190625\AK7030-OTP\common.c"
  5611 ;; Parameters:    Size  Location     Type
  5612 ;;		None
  5613 ;; Auto vars:     Size  Location     Type
  5614 ;;		None
  5615 ;; Return value:  Size  Location     Type
  5616 ;;                  1    wreg      unsigned char 
  5617 ;; Registers used:
  5618 ;;		wreg
  5619 ;; Tracked objects:
  5620 ;;		On entry : 40/0
  5621 ;;		On exit  : 60/20
  5622 ;;		Unchanged: FFF9F/0
  5623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5624 ;;      Params:         0       0       0       0       0
  5625 ;;      Locals:         0       0       0       0       0
  5626 ;;      Temps:          0       0       0       0       0
  5627 ;;      Totals:         0       0       0       0       0
  5628 ;;Total ram usage:        0 bytes
  5629 ;; Hardware stack levels used:    1
  5630 ;; Hardware stack levels required when called:    2
  5631 ;; This function calls:
  5632 ;;		Nothing
  5633 ;; This function is called by:
  5634 ;;		_main
  5635 ;; This function uses a non-reentrant model
  5636 ;;
  5637  0F87                     _isPermitSampleTime:	
  5638                           
  5639                           ;common.c: 483: if(timer.timer10msStopWatch >= 10)
  5640                           
  5641                           ; Regs used in _isPermitSampleTime: [wreg]
  5642  0F87  300A               	movlw	10
  5643  0F88  1683               	bsf	3,5	;RP0=1, select bank1
  5644  0F89  022E               	subwf	_timer^(0+128),w
  5645  0F8A  1803               	btfsc	3,0
  5646                           
  5647                           ;common.c: 484: {
  5648                           ;common.c: 485: return 1;
  5649  0F8B  3401               	retlw	1
  5650                           
  5651                           ;common.c: 487: else
  5652                           ;common.c: 488: return 0;
  5653  0F8C  3400               	retlw	0
  5654  0F8D                     __end_of_isPermitSampleTime:	
  5655                           
  5656                           	psect	text908
  5657  0F93                     __ptext908:	
  5658 ;; =============== function _adc_start ends ============
  5659                           
  5660                           
  5661 ;; *************** function _op2_init *****************
  5662 ;; Defined at:
  5663 ;;		line 45 in file "D:\develop\190625\AK7030-OTP\periph.c"
  5664 ;; Parameters:    Size  Location     Type
  5665 ;;		None
  5666 ;; Auto vars:     Size  Location     Type
  5667 ;;		None
  5668 ;; Return value:  Size  Location     Type
  5669 ;;		None               void
  5670 ;; Registers used:
  5671 ;;		wreg
  5672 ;; Tracked objects:
  5673 ;;		On entry : 17F/20
  5674 ;;		On exit  : 17F/20
  5675 ;;		Unchanged: FFE80/0
  5676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5677 ;;      Params:         0       0       0       0       0
  5678 ;;      Locals:         0       0       0       0       0
  5679 ;;      Temps:          0       0       0       0       0
  5680 ;;      Totals:         0       0       0       0       0
  5681 ;;Total ram usage:        0 bytes
  5682 ;; Hardware stack levels used:    1
  5683 ;; Hardware stack levels required when called:    2
  5684 ;; This function calls:
  5685 ;;		Nothing
  5686 ;; This function is called by:
  5687 ;;		_main
  5688 ;; This function uses a non-reentrant model
  5689 ;;
  5690  0F93                     _op2_init:	
  5691                           
  5692                           ;periph.c: 52: OP2CON1=0x14;
  5693                           
  5694                           ; Regs used in _op2_init: [wreg]
  5695  0F93  3014               	movlw	20
  5696  0F94  009C               	movwf	28	;volatile
  5697                           
  5698                           ;periph.c: 54: OP2CON2=0x10;
  5699  0F95  3010               	movlw	16
  5700  0F96  009D               	movwf	29	;volatile
  5701                           
  5702                           ;periph.c: 55: OP2CON0=0x80;
  5703  0F97  3080               	movlw	128
  5704  0F98  009B               	movwf	27	;volatile
  5705  0F99  0008               	return
  5706  0F9A                     __end_of_op2_init:	
  5707                           
  5708                           	psect	text909
  5709  0FB4                     __ptext909:	
  5710 ;; =============== function _op2_init ends ============
  5711                           
  5712                           
  5713 ;; *************** function _op1_init *****************
  5714 ;; Defined at:
  5715 ;;		line 26 in file "D:\develop\190625\AK7030-OTP\periph.c"
  5716 ;; Parameters:    Size  Location     Type
  5717 ;;		None
  5718 ;; Auto vars:     Size  Location     Type
  5719 ;;		None
  5720 ;; Return value:  Size  Location     Type
  5721 ;;		None               void
  5722 ;; Registers used:
  5723 ;;		wreg
  5724 ;; Tracked objects:
  5725 ;;		On entry : 17F/20
  5726 ;;		On exit  : 17F/20
  5727 ;;		Unchanged: FFE80/0
  5728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5729 ;;      Params:         0       0       0       0       0
  5730 ;;      Locals:         0       0       0       0       0
  5731 ;;      Temps:          0       0       0       0       0
  5732 ;;      Totals:         0       0       0       0       0
  5733 ;;Total ram usage:        0 bytes
  5734 ;; Hardware stack levels used:    1
  5735 ;; Hardware stack levels required when called:    2
  5736 ;; This function calls:
  5737 ;;		Nothing
  5738 ;; This function is called by:
  5739 ;;		_main
  5740 ;; This function uses a non-reentrant model
  5741 ;;
  5742  0FB4                     _op1_init:	
  5743                           
  5744                           ;periph.c: 33: OP1CON1=0x02;
  5745                           
  5746                           ; Regs used in _op1_init: [wreg]
  5747  0FB4  3002               	movlw	2
  5748  0FB5  1283               	bcf	3,5	;RP0=0, select bank0
  5749  0FB6  009C               	movwf	28	;volatile
  5750                           
  5751                           ;periph.c: 34: OP1CON2=0xA0;
  5752  0FB7  30A0               	movlw	160
  5753  0FB8  009D               	movwf	29	;volatile
  5754                           
  5755                           ;periph.c: 35: OP1CON0=0x80;
  5756  0FB9  3080               	movlw	128
  5757  0FBA  009B               	movwf	27	;volatile
  5758                           
  5759                           ;periph.c: 38: TRISB3=1;
  5760  0FBB  1683               	bsf	3,5	;RP0=1, select bank1
  5761  0FBC  1586               	bsf	6,3
  5762                           
  5763                           ;periph.c: 40: TRISB5=0;
  5764  0FBD  1286               	bcf	6,5
  5765  0FBE  0008               	return
  5766  0FBF                     __end_of_op1_init:	
  5767                           
  5768                           	psect	text910
  5769  0F82                     __ptext910:	
  5770 ;; =============== function _op1_init ends ============
  5771                           
  5772                           
  5773 ;; *************** function _dac_init *****************
  5774 ;; Defined at:
  5775 ;;		line 14 in file "D:\develop\190625\AK7030-OTP\periph.c"
  5776 ;; Parameters:    Size  Location     Type
  5777 ;;		None
  5778 ;; Auto vars:     Size  Location     Type
  5779 ;;		None
  5780 ;; Return value:  Size  Location     Type
  5781 ;;		None               void
  5782 ;; Registers used:
  5783 ;;		wreg
  5784 ;; Tracked objects:
  5785 ;;		On entry : 17F/20
  5786 ;;		On exit  : 17F/20
  5787 ;;		Unchanged: FFE80/0
  5788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5789 ;;      Params:         0       0       0       0       0
  5790 ;;      Locals:         0       0       0       0       0
  5791 ;;      Temps:          0       0       0       0       0
  5792 ;;      Totals:         0       0       0       0       0
  5793 ;;Total ram usage:        0 bytes
  5794 ;; Hardware stack levels used:    1
  5795 ;; Hardware stack levels required when called:    2
  5796 ;; This function calls:
  5797 ;;		Nothing
  5798 ;; This function is called by:
  5799 ;;		_main
  5800 ;; This function uses a non-reentrant model
  5801 ;;
  5802  0F82                     _dac_init:	
  5803                           
  5804                           ;periph.c: 15: DACCON|=1;
  5805                           
  5806                           ; Regs used in _dac_init: [wreg]
  5807  0F82  1407               	bsf	7,0	;volatile
  5808                           
  5809                           ;periph.c: 17: DACR0=0x0F;
  5810  0F83  300F               	movlw	15
  5811  0F84  0088               	movwf	8	;volatile
  5812                           
  5813                           ;periph.c: 18: DACCON|=(1)<<2;
  5814  0F85  1507               	bsf	7,2	;volatile
  5815  0F86  0008               	return
  5816  0F87                     __end_of_dac_init:	
  5817                           
  5818                           	psect	text912
  5819  0F7F                     __ptext912:	
  5820 ;; =============== function _adc_test_init ends ============
  5821                           
  5822                           
  5823 ;; *************** function _timer1_interrupt_config *****************
  5824 ;; Defined at:
  5825 ;;		line 198 in file "D:\develop\190625\AK7030-OTP\common.c"
  5826 ;; Parameters:    Size  Location     Type
  5827 ;;		None
  5828 ;; Auto vars:     Size  Location     Type
  5829 ;;		None
  5830 ;; Return value:  Size  Location     Type
  5831 ;;		None               void
  5832 ;; Registers used:
  5833 ;;		None
  5834 ;; Tracked objects:
  5835 ;;		On entry : 17F/20
  5836 ;;		On exit  : 17F/20
  5837 ;;		Unchanged: FFE80/0
  5838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5839 ;;      Params:         0       0       0       0       0
  5840 ;;      Locals:         0       0       0       0       0
  5841 ;;      Temps:          0       0       0       0       0
  5842 ;;      Totals:         0       0       0       0       0
  5843 ;;Total ram usage:        0 bytes
  5844 ;; Hardware stack levels used:    1
  5845 ;; Hardware stack levels required when called:    2
  5846 ;; This function calls:
  5847 ;;		Nothing
  5848 ;; This function is called by:
  5849 ;;		_main
  5850 ;; This function uses a non-reentrant model
  5851 ;;
  5852  0F7F                     _timer1_interrupt_config:	
  5853                           
  5854                           ;common.c: 199: GIE = 1;
  5855                           
  5856                           ; Regs used in _timer1_interrupt_config: []
  5857  0F7F  178B               	bsf	11,7
  5858                           
  5859                           ;common.c: 200: PEIE = 1;
  5860  0F80  170B               	bsf	11,6
  5861  0F81  0008               	return
  5862  0F82                     __end_of_timer1_interrupt_config:	
  5863                           
  5864                           	psect	text913
  5865  0FAA                     __ptext913:	
  5866 ;; =============== function _timer1_interrupt_config ends ============
  5867                           
  5868                           
  5869 ;; *************** function _timer1_config *****************
  5870 ;; Defined at:
  5871 ;;		line 186 in file "D:\develop\190625\AK7030-OTP\common.c"
  5872 ;; Parameters:    Size  Location     Type
  5873 ;;		None
  5874 ;; Auto vars:     Size  Location     Type
  5875 ;;		None
  5876 ;; Return value:  Size  Location     Type
  5877 ;;		None               void
  5878 ;; Registers used:
  5879 ;;		wreg
  5880 ;; Tracked objects:
  5881 ;;		On entry : 17F/40
  5882 ;;		On exit  : 17F/20
  5883 ;;		Unchanged: FFE80/0
  5884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5885 ;;      Params:         0       0       0       0       0
  5886 ;;      Locals:         0       0       0       0       0
  5887 ;;      Temps:          0       0       0       0       0
  5888 ;;      Totals:         0       0       0       0       0
  5889 ;;Total ram usage:        0 bytes
  5890 ;; Hardware stack levels used:    1
  5891 ;; Hardware stack levels required when called:    2
  5892 ;; This function calls:
  5893 ;;		Nothing
  5894 ;; This function is called by:
  5895 ;;		_main
  5896 ;; This function uses a non-reentrant model
  5897 ;;
  5898  0FAA                     _timer1_config:	
  5899                           
  5900                           ;common.c: 188: TMR1H=0xCF;
  5901                           
  5902                           ; Regs used in _timer1_config: [wreg]
  5903  0FAA  30CF               	movlw	207
  5904  0FAB  1303               	bcf	3,6	;RP1=0, select bank0
  5905  0FAC  008F               	movwf	15	;volatile
  5906                           
  5907                           ;common.c: 189: TMR1L=0x2C;
  5908  0FAD  302C               	movlw	44
  5909  0FAE  008E               	movwf	14	;volatile
  5910                           
  5911                           ;common.c: 190: T1CON=0xE1;
  5912  0FAF  30E1               	movlw	225
  5913  0FB0  0090               	movwf	16	;volatile
  5914                           
  5915                           ;common.c: 191: TMR1IE=1;
  5916  0FB1  1683               	bsf	3,5	;RP0=1, select bank1
  5917  0FB2  140C               	bsf	12,0
  5918  0FB3  0008               	return
  5919  0FB4                     __end_of_timer1_config:	
  5920                           
  5921                           	psect	text914
  5922  0F9A                     __ptext914:	
  5923 ;; =============== function _timer1_config ends ============
  5924                           
  5925                           
  5926 ;; *************** function _clock_config *****************
  5927 ;; Defined at:
  5928 ;;		line 178 in file "D:\develop\190625\AK7030-OTP\common.c"
  5929 ;; Parameters:    Size  Location     Type
  5930 ;;		None
  5931 ;; Auto vars:     Size  Location     Type
  5932 ;;		None
  5933 ;; Return value:  Size  Location     Type
  5934 ;;		None               void
  5935 ;; Registers used:
  5936 ;;		wreg, status,2
  5937 ;; Tracked objects:
  5938 ;;		On entry : 17F/20
  5939 ;;		On exit  : 17F/40
  5940 ;;		Unchanged: FFE80/0
  5941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5942 ;;      Params:         0       0       0       0       0
  5943 ;;      Locals:         0       0       0       0       0
  5944 ;;      Temps:          0       0       0       0       0
  5945 ;;      Totals:         0       0       0       0       0
  5946 ;;Total ram usage:        0 bytes
  5947 ;; Hardware stack levels used:    1
  5948 ;; Hardware stack levels required when called:    2
  5949 ;; This function calls:
  5950 ;;		Nothing
  5951 ;; This function is called by:
  5952 ;;		_main
  5953 ;; This function uses a non-reentrant model
  5954 ;;
  5955  0F9A                     _clock_config:	
  5956                           
  5957                           ;common.c: 180: CLKPR = 0x80;
  5958                           
  5959                           ; Regs used in _clock_config: [wreg+status,2]
  5960  0F9A  3080               	movlw	128
  5961  0F9B  1283               	bcf	3,5	;RP0=0, select bank2
  5962  0F9C  1703               	bsf	3,6	;RP1=1, select bank2
  5963  0F9D  0088               	movwf	8	;volatile
  5964                           
  5965                           ;common.c: 181: CLKPR = 0x00;
  5966  0F9E  0188               	clrf	8	;volatile
  5967  0F9F                     l1780:	
  5968                           ;common.c: 182: while(CLKPCE);
  5969                           
  5970  0F9F  1F88               	btfss	8,7
  5971  0FA0  0008               	return
  5972  0FA1  2F9F               	goto	l1780
  5973  0FA2                     __end_of_clock_config:	
  5974                           
  5975                           	psect	text925
  5976  04F5                     __ptext925:	
  5977 ;; =============== function _clearTwelveHoursTimer ends ============
  5978                           
  5979                           
  5980 ;; *************** function _ISR *****************
  5981 ;; Defined at:
  5982 ;;		line 497 in file "D:\develop\190625\AK7030-OTP\common.c"
  5983 ;; Parameters:    Size  Location     Type
  5984 ;;		None
  5985 ;; Auto vars:     Size  Location     Type
  5986 ;;		None
  5987 ;; Return value:  Size  Location     Type
  5988 ;;		None               void
  5989 ;; Registers used:
  5990 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5991 ;; Tracked objects:
  5992 ;;		On entry : 0/0
  5993 ;;		On exit  : 60/0
  5994 ;;		Unchanged: FFE00/0
  5995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5996 ;;      Params:         0       0       0       0       0
  5997 ;;      Locals:         0       0       0       0       0
  5998 ;;      Temps:          4       0       0       0       0
  5999 ;;      Totals:         4       0       0       0       0
  6000 ;;Total ram usage:        4 bytes
  6001 ;; Hardware stack levels used:    1
  6002 ;; Hardware stack levels required when called:    1
  6003 ;; This function calls:
  6004 ;;		i1_setAD_ConvertFlag
  6005 ;;		_adc_get
  6006 ;;		_vPutSampleDataIntoTable
  6007 ;; This function is called by:
  6008 ;;		Interrupt level 1
  6009 ;; This function uses a non-reentrant model
  6010 ;;
  6011  04F5                     _ISR:	
  6012                           
  6013                           ;common.c: 498: static unsigned char ucTimer1sCnt = 0;
  6014                           ;common.c: 500: if(TMR1IF == 1)
  6015  04F5  1C0C               	btfss	12,0
  6016  04F6  2D28               	goto	i1l4621
  6017                           
  6018                           ;common.c: 501: {
  6019                           ;common.c: 502: TMR1IF = 0 ;
  6020  04F7  100C               	bcf	12,0
  6021                           
  6022                           ;common.c: 503: timer.timer10msStopWatch++;
  6023  04F8  1683               	bsf	3,5	;RP0=1, select bank1
  6024  04F9  3064               	movlw	100
  6025  04FA  0AAE               	incf	_timer^(0+128),f
  6026                           
  6027                           ;common.c: 504: ucTimer1sCnt++;
  6028  04FB  0AAC               	incf	ISR@ucTimer1sCnt^(0+128),f
  6029                           
  6030                           ;common.c: 506: if(ucTimer1sCnt >= 100)
  6031  04FC  022C               	subwf	ISR@ucTimer1sCnt^(0+128),w
  6032  04FD  1C03               	skipc
  6033  04FE  2D28               	goto	i1l4621
  6034                           
  6035                           ;common.c: 507: {
  6036                           ;common.c: 508: ucTimer1sCnt = 0;
  6037  04FF  01AC               	clrf	ISR@ucTimer1sCnt^(0+128)
  6038                           
  6039                           ;common.c: 509: if(uiBigTimer > 0)
  6040  0500  0821               	movf	(_uiBigTimer+1)^(0+128),w
  6041  0501  0420               	iorwf	_uiBigTimer^(0+128),w
  6042  0502  1903               	skipnz
  6043  0503  2D0A               	goto	i1l1889
  6044                           
  6045                           ;common.c: 510: uiBigTimer--;
  6046  0504  3001               	movlw	1
  6047  0505  02A0               	subwf	_uiBigTimer^(0+128),f
  6048  0506  3000               	movlw	0
  6049  0507  1C03               	skipc
  6050  0508  03A1               	decf	(_uiBigTimer+1)^(0+128),f
  6051  0509  02A1               	subwf	(_uiBigTimer+1)^(0+128),f
  6052  050A                     i1l1889:	
  6053                           
  6054                           ;common.c: 512: if(uiSmallTimer)
  6055  050A  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  6056  050B  0422               	iorwf	_uiSmallTimer^(0+128),w
  6057  050C  1903               	skipnz
  6058  050D  2D14               	goto	i1l1890
  6059                           
  6060                           ;common.c: 513: uiSmallTimer--;
  6061  050E  3001               	movlw	1
  6062  050F  02A2               	subwf	_uiSmallTimer^(0+128),f
  6063  0510  3000               	movlw	0
  6064  0511  1C03               	skipc
  6065  0512  03A3               	decf	(_uiSmallTimer+1)^(0+128),f
  6066  0513  02A3               	subwf	(_uiSmallTimer+1)^(0+128),f
  6067  0514                     i1l1890:	
  6068                           
  6069                           ;common.c: 515: if(uiTwentySecondsTimer)
  6070  0514  0827               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  6071  0515  0426               	iorwf	_uiTwentySecondsTimer^(0+128),w
  6072  0516  1903               	skipnz
  6073  0517  2D1E               	goto	i1l1891
  6074                           
  6075                           ;common.c: 516: uiTwentySecondsTimer--;
  6076  0518  3001               	movlw	1
  6077  0519  02A6               	subwf	_uiTwentySecondsTimer^(0+128),f
  6078  051A  3000               	movlw	0
  6079  051B  1C03               	skipc
  6080  051C  03A7               	decf	(_uiTwentySecondsTimer+1)^(0+128),f
  6081  051D  02A7               	subwf	(_uiTwentySecondsTimer+1)^(0+128),f
  6082  051E                     i1l1891:	
  6083                           
  6084                           ;common.c: 518: if(uiTwentyMinTimer)
  6085  051E  0825               	movf	(_uiTwentyMinTimer+1)^(0+128),w
  6086  051F  0424               	iorwf	_uiTwentyMinTimer^(0+128),w
  6087  0520  1903               	skipnz
  6088  0521  2D28               	goto	i1l4621
  6089                           
  6090                           ;common.c: 519: uiTwentyMinTimer--;
  6091  0522  3001               	movlw	1
  6092  0523  02A4               	subwf	_uiTwentyMinTimer^(0+128),f
  6093  0524  3000               	movlw	0
  6094  0525  1C03               	skipc
  6095  0526  03A5               	decf	(_uiTwentyMinTimer+1)^(0+128),f
  6096  0527  02A5               	subwf	(_uiTwentyMinTimer+1)^(0+128),f
  6097  0528                     i1l4621:	
  6098                           
  6099                           ;common.c: 520: }
  6100                           ;common.c: 521: }
  6101                           ;common.c: 523: if(ADIF)
  6102  0528  1283               	bcf	3,5	;RP0=0, select bank0
  6103  0529  1D0D               	btfss	13,2
  6104  052A  2D50               	goto	i1l1898
  6105  052B  3001               	movlw	1
  6106                           
  6107                           ;common.c: 524: {
  6108                           ;common.c: 525: ADIF=0;
  6109  052C  110D               	bcf	13,2
  6110                           
  6111                           ;common.c: 526: setAD_ConvertFlag(1);
  6112  052D  25CB  118A         	fcall	i1_setAD_ConvertFlag
  6113                           
  6114                           ;common.c: 528: if(sampleChannelSelect == 5)
  6115  052F  1283               	bcf	3,5	;RP0=0, select bank0
  6116  0530  086E               	movf	_sampleChannelSelect,w
  6117  0531  3A05               	xorlw	5
  6118  0532  1D03               	skipz
  6119  0533  2D3C               	goto	i1l4631
  6120                           
  6121                           ;common.c: 529: {
  6122                           ;common.c: 532: vPutSampleDataIntoTable(adc_get(),5);
  6123  0534  255D  118A         	fcall	_adc_get
  6124  0536  0871               	movf	?_adc_get+1,w
  6125  0537  00F5               	movwf	?_vPutSampleDataIntoTable+1
  6126  0538  0870               	movf	?_adc_get,w
  6127  0539  00F4               	movwf	?_vPutSampleDataIntoTable
  6128  053A  3005               	movlw	5
  6129  053B  2D4E               	goto	L26
  6130  053C                     i1l4631:	
  6131                           ;common.c: 536: }
  6132                           
  6133                           
  6134                           ;common.c: 537: else if(sampleChannelSelect == 1)
  6135  053C  0B6E               	decfsz	_sampleChannelSelect,w
  6136  053D  2D47               	goto	i1l4635
  6137                           
  6138                           ;common.c: 538: {
  6139                           ;common.c: 540: vPutSampleDataIntoTable(adc_get(),1);
  6140  053E  255D  118A         	fcall	_adc_get
  6141  0540  0871               	movf	?_adc_get+1,w
  6142  0541  00F5               	movwf	?_vPutSampleDataIntoTable+1
  6143  0542  0870               	movf	?_adc_get,w
  6144  0543  00F4               	movwf	?_vPutSampleDataIntoTable
  6145  0544  01F6               	clrf	?_vPutSampleDataIntoTable+2
  6146  0545  0AF6               	incf	?_vPutSampleDataIntoTable+2,f
  6147  0546  2D4F               	goto	L27
  6148  0547                     i1l4635:	
  6149                           ;common.c: 545: }
  6150                           
  6151                           
  6152                           ;common.c: 546: else
  6153                           ;common.c: 547: {
  6154                           ;common.c: 551: vPutSampleDataIntoTable(adc_get(),14);
  6155  0547  255D  118A         	fcall	_adc_get
  6156  0549  0871               	movf	?_adc_get+1,w
  6157  054A  00F5               	movwf	?_vPutSampleDataIntoTable+1
  6158  054B  0870               	movf	?_adc_get,w
  6159  054C  00F4               	movwf	?_vPutSampleDataIntoTable
  6160  054D  300E               	movlw	14
  6161  054E                     L26:	
  6162  054E  00F6               	movwf	?_vPutSampleDataIntoTable+2
  6163  054F                     L27:	
  6164  054F  2568               	fcall	_vPutSampleDataIntoTable
  6165  0550                     i1l1898:	
  6166  0550  087C               	movf	??_ISR+3,w
  6167  0551  1283               	bcf	3,5	;RP0=0, select bank0
  6168  0552  1303               	bcf	3,6	;RP1=0, select bank0
  6169  0553  00FF               	movwf	127
  6170  0554  087B               	movf	??_ISR+2,w
  6171  0555  008A               	movwf	10
  6172  0556  087A               	movf	??_ISR+1,w
  6173  0557  0084               	movwf	4
  6174  0558  0E79               	swapf	??_ISR^(0+-128),w
  6175  0559  0083               	movwf	3
  6176  055A  0EFE               	swapf	126,f
  6177  055B  0E7E               	swapf	126,w
  6178  055C  0009               	retfie
  6179  055D                     __end_of_ISR:	
  6180  055D                     __ptext927:	
  6181 ;; =============== function i1_setAD_ConvertFlag ends ============
  6182                           
  6183                           
  6184 ;; *************** function _adc_get *****************
  6185 ;; Defined at:
  6186 ;;		line 105 in file "D:\develop\190625\AK7030-OTP\periph.c"
  6187 ;; Parameters:    Size  Location     Type
  6188 ;;		None
  6189 ;; Auto vars:     Size  Location     Type
  6190 ;;  val             2    2[COMMON] unsigned int 
  6191 ;; Return value:  Size  Location     Type
  6192 ;;                  2    0[COMMON] unsigned int 
  6193 ;; Registers used:
  6194 ;;		wreg
  6195 ;; Tracked objects:
  6196 ;;		On entry : 60/0
  6197 ;;		On exit  : 60/20
  6198 ;;		Unchanged: FFF9F/0
  6199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6200 ;;      Params:         2       0       0       0       0
  6201 ;;      Locals:         2       0       0       0       0
  6202 ;;      Temps:          0       0       0       0       0
  6203 ;;      Totals:         4       0       0       0       0
  6204 ;;Total ram usage:        4 bytes
  6205 ;; Hardware stack levels used:    1
  6206 ;; This function calls:
  6207 ;;		Nothing
  6208 ;; This function is called by:
  6209 ;;		_ISR
  6210 ;; This function uses a non-reentrant model
  6211 ;;
  6212  055D                     _adc_get:	
  6213                           
  6214                           ;periph.c: 106: unsigned int val;
  6215                           ;periph.c: 107: val = (ADRESH<<8) | ADRESL;
  6216                           
  6217                           ; Regs used in _adc_get: [wreg]
  6218  055D  081E               	movf	30,w	;volatile
  6219  055E  00F3               	movwf	adc_get@val+1
  6220  055F  01F2               	clrf	adc_get@val
  6221  0560  1683               	bsf	3,5	;RP0=1, select bank1
  6222  0561  081E               	movf	30,w	;volatile
  6223  0562  04F2               	iorwf	adc_get@val,f
  6224                           
  6225                           ;periph.c: 108: return val;
  6226  0563  0873               	movf	adc_get@val+1,w
  6227  0564  00F1               	movwf	?_adc_get+1
  6228  0565  0872               	movf	adc_get@val,w
  6229  0566  00F0               	movwf	?_adc_get
  6230  0567  0008               	return
  6231  0568                     __end_of_adc_get:	
  6232  0568                     __ptext928:	
  6233 ;; =============== function _adc_get ends ============
  6234                           
  6235                           
  6236 ;; *************** function _vPutSampleDataIntoTable *****************
  6237 ;; Defined at:
  6238 ;;		line 103 in file "D:\develop\190625\AK7030-OTP\common.c"
  6239 ;; Parameters:    Size  Location     Type
  6240 ;;  uiSampleData    2    4[COMMON] unsigned int 
  6241 ;;  channel         1    6[COMMON] unsigned char 
  6242 ;; Auto vars:     Size  Location     Type
  6243 ;;  i               2    7[COMMON] int 
  6244 ;; Return value:  Size  Location     Type
  6245 ;;		None               void
  6246 ;; Registers used:
  6247 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  6248 ;; Tracked objects:
  6249 ;;		On entry : 60/20
  6250 ;;		On exit  : 0/0
  6251 ;;		Unchanged: FFE00/0
  6252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6253 ;;      Params:         3       0       0       0       0
  6254 ;;      Locals:         2       0       0       0       0
  6255 ;;      Temps:          0       0       0       0       0
  6256 ;;      Totals:         5       0       0       0       0
  6257 ;;Total ram usage:        5 bytes
  6258 ;; Hardware stack levels used:    1
  6259 ;; This function calls:
  6260 ;;		Nothing
  6261 ;; This function is called by:
  6262 ;;		_ISR
  6263 ;; This function uses a non-reentrant model
  6264 ;;
  6265  0568                     _vPutSampleDataIntoTable:	
  6266                           
  6267                           ;common.c: 105: static unsigned char ucChannelFirstLength = 0;
  6268                           ;common.c: 107: static unsigned char ucChannelFourthLength = 0;
  6269                           ;common.c: 109: static unsigned char ucChannelFourteenthLength = 0;
  6270                           ;common.c: 111: if(channel == 1)
  6271                           
  6272                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1]
  6273  0568  0B76               	decfsz	vPutSampleDataIntoTable@channel,w
  6274  0569  2D7A               	goto	i1l4537
  6275                           
  6276                           ;common.c: 112: {
  6277                           ;common.c: 113: if(ucChannelFirstLength < 12)
  6278  056A  300C               	movlw	12
  6279  056B  027D               	subwf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  6280  056C  1803               	skipnc
  6281  056D  2D74               	goto	i1l4533
  6282                           
  6283                           ;common.c: 114: {
  6284                           ;common.c: 115: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  6285  056E  1003               	clrc
  6286  056F  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  6287  0570  3EBC               	addlw	_uiSampleChannelFirst& (0+255)
  6288  0571  25CF               	fcall	PL2	;call to abstracted procedure
  6289                           
  6290                           ;common.c: 117: ucChannelFirstLength++;
  6291  0572  0AFD               	incf	vPutSampleDataIntoTable@ucChannelFirstLength,f
  6292                           
  6293                           ;common.c: 118: }
  6294  0573  0008               	return
  6295  0574                     i1l4533:	
  6296                           
  6297                           ;common.c: 119: else
  6298                           ;common.c: 120: {
  6299                           ;common.c: 121: ucChannelFirstLength = 0;
  6300  0574  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  6301                           
  6302                           ;common.c: 123: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  6303  0575  1003               	clrc
  6304  0576  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  6305  0577  3EBC               	addlw	_uiSampleChannelFirst& (0+255)
  6306  0578  25CF               	fcall	PL2	;call to abstracted procedure
  6307  0579  0008               	return
  6308  057A                     i1l4537:	
  6309                           
  6310                           ;common.c: 126: else if(channel == 5)
  6311  057A  0876               	movf	vPutSampleDataIntoTable@channel,w
  6312  057B  3A05               	xorlw	5
  6313  057C  1D03               	skipz
  6314  057D  2D8F               	goto	i1l4549
  6315                           
  6316                           ;common.c: 127: {
  6317                           ;common.c: 128: if(ucChannelFourthLength < 12)
  6318  057E  300C               	movlw	12
  6319  057F  1283               	bcf	3,5	;RP0=0, select bank0
  6320  0580  026D               	subwf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  6321  0581  1803               	skipnc
  6322  0582  2D89               	goto	i1l4545
  6323                           
  6324                           ;common.c: 129: {
  6325                           ;common.c: 130: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  6326  0583  1003               	clrc
  6327  0584  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  6328  0585  3ED4               	addlw	_uiSampleChannelFourth& (0+255)
  6329  0586  25CF               	fcall	PL2	;call to abstracted procedure
  6330                           
  6331                           ;common.c: 132: ucChannelFourthLength++;
  6332  0587  0AED               	incf	vPutSampleDataIntoTable@ucChannelFourthLength,f
  6333                           
  6334                           ;common.c: 133: }
  6335  0588  0008               	return
  6336  0589                     i1l4545:	
  6337                           
  6338                           ;common.c: 134: else
  6339                           ;common.c: 135: {
  6340                           ;common.c: 136: ucChannelFourthLength = 0;
  6341  0589  01ED               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  6342                           
  6343                           ;common.c: 138: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  6344  058A  1003               	clrc
  6345  058B  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  6346  058C  3ED4               	addlw	_uiSampleChannelFourth& (0+255)
  6347  058D  25CF               	fcall	PL2	;call to abstracted procedure
  6348  058E  0008               	return
  6349  058F                     i1l4549:	
  6350                           
  6351                           ;common.c: 141: else if(channel == 14)
  6352  058F  0876               	movf	vPutSampleDataIntoTable@channel,w
  6353  0590  3A0E               	xorlw	14
  6354  0591  1D03               	skipz
  6355  0592  2DAA               	goto	i1l4561
  6356                           
  6357                           ;common.c: 142: {
  6358                           ;common.c: 143: if(ucChannelFourteenthLength < 12)
  6359  0593  300C               	movlw	12
  6360  0594  1283               	bcf	3,5	;RP0=0, select bank0
  6361  0595  026C               	subwf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  6362  0596  1803               	skipnc
  6363  0597  2DA4               	goto	i1l4557
  6364                           
  6365                           ;common.c: 144: {
  6366                           ;common.c: 145: uiSampleChannelFourteenth[ucChannelFourteenthLength] = uiSampleData;
  6367  0598  1003               	clrc
  6368  0599  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  6369  059A  3E90               	addlw	_uiSampleChannelFourteenth& (0+255)
  6370  059B  0084               	movwf	4
  6371  059C  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  6372  059D  1783               	bsf	3,7	;select IRP bank3
  6373  059E  0080               	movwf	0
  6374  059F  0A84               	incf	4,f
  6375  05A0  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  6376  05A1  0080               	movwf	0
  6377                           
  6378                           ;common.c: 147: ucChannelFourteenthLength++;
  6379  05A2  0AEC               	incf	vPutSampleDataIntoTable@ucChannelFourteenthLength,f
  6380                           
  6381                           ;common.c: 148: }
  6382  05A3  0008               	return
  6383  05A4                     i1l4557:	
  6384                           
  6385                           ;common.c: 149: else
  6386                           ;common.c: 150: {
  6387                           ;common.c: 151: ucChannelFourteenthLength = 0;
  6388  05A4  01EC               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  6389                           
  6390                           ;common.c: 153: uiSampleChannelFourth[ucChannelFourteenthLength] = uiSampleData;
  6391  05A5  1003               	clrc
  6392  05A6  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  6393  05A7  3ED4               	addlw	_uiSampleChannelFourth& (0+255)
  6394  05A8  25CF               	fcall	PL2	;call to abstracted procedure
  6395  05A9  0008               	return
  6396  05AA                     i1l4561:	
  6397                           
  6398                           ;common.c: 156: else
  6399                           ;common.c: 157: {
  6400                           ;common.c: 158: ucChannelFirstLength = 0;
  6401  05AA  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  6402                           
  6403                           ;common.c: 160: ucChannelFourthLength = 0;
  6404  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  6405  05AC  01ED               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  6406                           
  6407                           ;common.c: 162: ucChannelFourteenthLength = 0;
  6408  05AD  01EC               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  6409                           
  6410                           ;common.c: 164: for(int i = 0;i < 12; i++)
  6411  05AE  01F7               	clrf	vPutSampleDataIntoTable@i
  6412  05AF  01F8               	clrf	vPutSampleDataIntoTable@i+1
  6413  05B0                     i1l4567:	
  6414                           
  6415                           ;common.c: 165: {
  6416                           ;common.c: 166: uiSampleChannelFirst[i] = 0;
  6417  05B0  1003               	clrc
  6418  05B1  0D77               	rlf	vPutSampleDataIntoTable@i,w
  6419  05B2  3EBC               	addlw	_uiSampleChannelFirst& (0+255)
  6420  05B3  0084               	movwf	4
  6421  05B4  1383               	bcf	3,7	;select IRP bank1
  6422  05B5  0180               	clrf	0
  6423                           
  6424                           ;common.c: 168: uiSampleChannelFourth[i] = 0;
  6425  05B6  25D7  118A         	fcall	PL4	;call to abstracted procedure
  6426                           
  6427                           ;common.c: 170: uiSampleChannelFourth[i] = 0;
  6428  05B8  25D7  118A         	fcall	PL4	;call to abstracted procedure
  6429  05BA  0A84               	incf	4,f
  6430  05BB  0180               	clrf	0
  6431  05BC  0AF7               	incf	vPutSampleDataIntoTable@i,f
  6432  05BD  1903               	skipnz
  6433  05BE  0AF8               	incf	vPutSampleDataIntoTable@i+1,f
  6434  05BF  0878               	movf	vPutSampleDataIntoTable@i+1,w
  6435  05C0  3A80               	xorlw	128
  6436  05C1  00FF               	movwf	127
  6437  05C2  3080               	movlw	128
  6438  05C3  027F               	subwf	127,w
  6439  05C4  1D03               	skipz
  6440  05C5  2DC8               	goto	u172_25
  6441  05C6  300C               	movlw	12
  6442  05C7  0277               	subwf	vPutSampleDataIntoTable@i,w
  6443  05C8                     u172_25:	
  6444  05C8  1803               	btfsc	3,0
  6445  05C9  0008               	return
  6446  05CA  2DB0               	goto	i1l4567
  6447  05CB                     __end_of_vPutSampleDataIntoTable:	
  6448  05CB                     __ptext926:	
  6449 ;; =============== function _ISR ends ============
  6450                           
  6451                           
  6452 ;; *************** function i1_setAD_ConvertFlag *****************
  6453 ;; Defined at:
  6454 ;;		line 212 in file "D:\develop\190625\AK7030-OTP\common.c"
  6455 ;; Parameters:    Size  Location     Type
  6456 ;;  setAD_Conver    1    wreg     unsigned char 
  6457 ;; Auto vars:     Size  Location     Type
  6458 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  6459 ;; Return value:  Size  Location     Type
  6460 ;;		None               void
  6461 ;; Registers used:
  6462 ;;		wreg
  6463 ;; Tracked objects:
  6464 ;;		On entry : 60/0
  6465 ;;		On exit  : 60/20
  6466 ;;		Unchanged: FFF9F/0
  6467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6468 ;;      Params:         0       0       0       0       0
  6469 ;;      Locals:         1       0       0       0       0
  6470 ;;      Temps:          0       0       0       0       0
  6471 ;;      Totals:         1       0       0       0       0
  6472 ;;Total ram usage:        1 bytes
  6473 ;; Hardware stack levels used:    1
  6474 ;; This function calls:
  6475 ;;		Nothing
  6476 ;; This function is called by:
  6477 ;;		_ISR
  6478 ;; This function uses a non-reentrant model
  6479 ;;
  6480  05CB                     i1_setAD_ConvertFlag:	
  6481                           
  6482                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  6483                           ;i1setAD_ConvertFlag@flag stored from wreg
  6484  05CB  00F0               	movwf	i1setAD_ConvertFlag@flag
  6485                           
  6486                           ;common.c: 213: adc_convert_flag = flag;
  6487  05CC  1683               	bsf	3,5	;RP0=1, select bank1
  6488  05CD  00AD               	movwf	_adc_convert_flag^(0+128)
  6489  05CE  0008               	return
  6490  05CF                     __end_ofi1_setAD_ConvertFlag:	
  6491  05CF                     PL2:	
  6492  05CF  0084               	movwf	4
  6493  05D0  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  6494  05D1  1383               	bcf	3,7	;select IRP bank1
  6495  05D2  0080               	movwf	0
  6496  05D3  0A84               	incf	4,f
  6497  05D4  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  6498  05D5  0080               	movwf	0
  6499  05D6  0008               	return
  6500  05D7                     PL4:	
  6501  05D7  0A84               	incf	4,f
  6502  05D8  0180               	clrf	0
  6503  05D9  1003               	clrc
  6504  05DA  0D77               	rlf	vPutSampleDataIntoTable@i,w
  6505  05DB  3ED4               	addlw	_uiSampleChannelFourth& (0+255)
  6506  05DC  0084               	movwf	4
  6507  05DD  0180               	clrf	0
  6508  05DE  0008               	return
  6509                           
  6510                           	psect	intentry
  6511  0004                     __pintentry:	
  6512                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6513                           
  6514  0004                     interrupt_function:	
  6515  007E                     saved_w	set	btemp
  6516  0004  00FE               	movwf	btemp
  6517  0005  0E03               	swapf	3,w
  6518  0006  00F9               	movwf	??_ISR
  6519  0007  0804               	movf	4,w
  6520  0008  00FA               	movwf	??_ISR+1
  6521  0009  080A               	movf	10,w
  6522  000A  00FB               	movwf	??_ISR+2
  6523  000B  1283               	bcf	3,5	;RP0=0, select bank0
  6524  000C  1303               	bcf	3,6	;RP1=0, select bank0
  6525  000D  087F               	movf	btemp+1,w
  6526  000E  00FC               	movwf	??_ISR+3
  6527  000F  118A  2CF5         	ljmp	_ISR
  6528                           
  6529                           	psect	text929
  6530  0000                     __ptext929:	
  6531 ;; =============== function _vPutSampleDataIntoTable ends ============
  6532                           
  6533  007E                     btemp	set	126	;btemp
  6534  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Tue Aug 20 22:44:04 2019

                                  ??_clock_config 0020                                                 pc 0002  
                                              _GO 00F9                                                fsr 0004  
                        ?_timer1_interrupt_config 0070                                               l703 0700  
                                             l713 0710                                               l723 0719  
                                             l731 0000                                               l708 0708  
                                             l804 00F7                                               l728 0000  
                                             l762 007B                                               l828 017F  
                                             l693 06EE                                               l685 0000  
                                             l688 06E6                                               l698 06F8  
                                             l991 037B                                               _PA0 0028  
                                             _PA1 0029                                               _GIE 005F  
                                             _PB0 0030                                               _PA2 002A  
                                             _PB1 0031                                               _PA3 002B  
                                             _PA6 002E                                               _PB6 0036  
                                             _PB7 0037                                               _ISR 04F5  
                                             fsr0 0004                                               indf 0000  
                          ??_startThreeHoursTimer 0022                                              S5673 0800  
                                            S5675 080E                                              S5677 081C  
                                            S5679 078F                                              ?_ISR 0070  
                              __size_of_AD_Sample 001E                            ?_getAdOriginalCh1Value 0046  
                                            l1015 03D3                                              l1067 04CB  
                                            l1801 0000                                              l5001 0236  
                                            l2531 0000                                              l5011 0242  
                                            l5003 0238                                              l1804 0000  
                                            l4301 0000                                              l5101 02C0  
                                            l5013 0244                                              l2534 0000  
                                            l4303 0000                                              l4311 0000  
                                            l2551 0000                                              l5103 02D0  
                                            l5023 024D                                              l5007 0240  
                                            l1833 0000                                              l4305 0000  
                                            l4313 0000                                              l4321 0000  
                                            l2545 0000                                              l2537 0000  
                                            l5201 0366                                              l5113 02DC  
                                            l5105 02D2                                              l5033 0256  
                                            l1842 0000                                              l1754 0000  
                                            l4307 0000                                              l4315 0000  
                                            l4323 0000                                              l4331 0000  
                                            l4403 0000                                              l4411 0000  
                                            l5211 0000                                              l5203 0000  
                                            l5115 02DE                                              l5043 0267  
                                            l1836 0000                                              l1780 0F9F  
                                            l4309 0000                                              l4317 0000  
                                            l4325 0000                                              l4333 0000  
                                            l4341 0000                                              l4501 066E  
                                            l5221 0000                                              l5205 0000  
                                            l5141 0309                                              l5125 02E4  
                                            l5053 026D                                              l5045 0000  
                                            l1839 0000                                              l4319 0000  
                                            l1783 0000                                              l4327 0000  
                                            l4335 0000                                              l4343 0000  
                                            l4351 0000                                              l4415 0000  
                                            l4503 062E                                              l5311 0000  
                                            l5303 0000                                              l5231 0000  
                                            l5215 0000                                              l5207 0000  
                                            l5151 0318                                              l5135 02EA  
                                            l5127 0000                                              l5063 028F  
                                            l5055 0279                                              l1792 0000  
                                            l4329 0000                                              l4345 0000  
                                            l4337 0000                                              l4353 0000  
                                            l4361 078C                                              l4409 0000  
                                            l4417 0000                                              l4433 0000  
                                            l4441 0000                                              l4521 0000  
                                            l4505 0670                                              l5321 044C  
                                            l5305 0000                                              l5313 043A  
                                            l5241 0000                                              l5233 039D  
                                            l5217 0000                                              l5209 0373  
                                            l5145 0000                                              l5057 0285  
                                            l1786 0000                                              l1882 0000  
                                            l4339 0000                                              l4347 0000  
                                            l4355 0000                                              l4363 0000  
                                            l4427 0000                                              l4435 0000  
                                            l4451 0000                                              l4515 0000  
                                            l4507 0000                                              l1795 0000  
                                            l5323 0000                                              l5307 0000  
                                            l5251 0000                                              l5243 03AA  
                                            l5235 0000                                              l5227 038F  
                                            l5219 0383                                              l5171 0334  
                                            l5163 032A                                              l5155 0000  
                                            l5147 0316                                              l5139 02F8  
                                            l5091 0000                                              l5067 0291  
                                            l5059 0287                                              l4293 0000  
                                            l1789 0000                                              l4349 0000  
                                            l4357 0000                                              l4517 0000  
                                            l5341 046D                                              l5333 0000  
                                            l5325 044F                                              l5309 0000  
                                            l5237 03A0                                              l5181 0343  
                                            l5165 032C                                              l5157 0000  
                                            l5149 0000                                              l5069 0293  
                                            l4701 0000                                              l1798 0000  
                                            l4295 0000                                              l4359 0000  
                                            l4375 0000                                              l4383 0000  
                                            l4391 0000                                              l4439 0000  
                                            l4463 0000                                              l5343 0000  
                                            l5335 0000                                              l5319 0000  
                                            l5271 03F9                                              l5255 0000  
                                            l5247 0000                                              l5191 0000  
                                            l5175 0000                                              l5159 0324  
                                            l5079 029C                                              l4711 0040  
                                            l4703 0000                                              l4297 072C  
                                            l4377 0000                                              l4385 0000  
                                            l4393 0000                                              l4457 0000  
                                            l4465 0000                                              l4481 0605  
                                            l5361 04AA                                              l5353 04A0  
                                            l5345 0000                                              l5329 0455  
                                            l5281 0407                                              l5257 03BE  
                                            l5249 03B3                                              l5193 0354  
                                            l5185 0349                                              l5177 0341  
                                            l5089 02A9                                              l5265 03C6  
                                            l4801 00D8                                              l4721 005A  
                                            l4713 0000                                              l4705 0000  
                                            l4299 0000                                              l4387 0000  
                                            l4459 0000                                              l4483 0000  
                                            l4475 0000                                              l4643 071B  
                                            l4651 0000                                              l5371 0000  
                                            l5355 04A2                                              l5347 0000  
                                            l5339 0461                                              l5275 03FF  
                                            l5267 0000                                              l5259 0000  
                                            l5195 0000                                              l5179 0000  
                                            l5099 02AF                                              l4803 00DC  
                                            l4707 0000                                              l4485 0000  
                                            l4573 0000                                              l4645 0000  
                                            l4661 0744                                              l4653 0000  
                                            l5373 0000                                              l5365 04B7  
                                            l5349 0493                                              l5293 0000  
                                            l5285 0413                                              l5277 0000  
                                            l5269 0000                                              l5197 035D  
                                            l5189 034F                                              l4901 01A5  
                                            l4821 0000                                              l4805 0000  
                                            l4741 0000                                              l4733 0000  
                                            l4725 0000                                              l4717 004E  
                                            l4709 0000                                              l4495 062D  
                                            l4487 0000                                              l4591 076B  
                                            l4583 0000                                              l4647 0000  
                                            l4663 0000                                              l5375 0000  
                                            l5367 04B9                                              l5359 0000  
                                            l5295 0424                                              l5287 0000  
                                            l5279 0000                                              l4911 01AE  
                                            l4831 0000                                              l4823 0106  
                                            l4815 0000                                              l4807 0000  
                                            l4751 0000                                              l4743 007C  
                                            l4735 0000                                              l4727 0065  
                                            l5383 04D8                                              l4577 0000  
                                            l4593 076F                                              l4649 0000  
                                            l4665 074A                                              l4657 0000  
                                            l4673 0000                                              l4681 0000  
                                            l5297 0000                                              l5289 0416  
                                            l4921 01C7                                              l4841 012A  
                                            l4833 0119                                              l4817 00FA  
                                            l4809 00E8                                              l4737 0071  
                                            l4729 0067                                              l4595 0772  
                                            l4587 0000                                              l4579 0000  
                                            l4683 0000                                              l5379 04CC  
                                            l5299 0427                                              l4931 01CE  
                                            l4923 0000                                              l4827 0000  
                                            l4771 0000                                              l4763 009E  
                                            l4755 0000                                              l4747 0000  
                                            l4691 0000                                              l4597 0000  
                                            l4669 0000                                              l4677 0000  
                                            l4685 0000                                              l4941 01E8  
                                            l4933 01DA                                              l4925 01CC  
                                            l4861 0174                                              l4853 0161  
                                            l4837 0124                                              l4829 010E  
                                            l4781 0000                                              l4773 00AE  
                                            l4765 0000                                              l4757 0094  
                                            l4749 008A                                              l4693 0000  
                                            l4687 0000                                              l4935 01DE  
                                            l4871 0187                                              l4847 0150  
                                            l4791 00C8                                              l4783 00B7  
                                            l4775 0000                                              l4767 00A1  
                                            l4759 0000                                              l4695 0000  
                                            _ADIE 046A                                              _ADIF 006A  
                                            l4945 01EA                                              l4937 01E0  
                                            l4881 0193                                              l4865 017D  
                                            l4857 016B                                              l4849 0157  
                                            l4777 00B0                                              l4697 0000  
                                            l4689 0000                                              l4947 01EC  
                                            l4891 019C                                              l4875 018F  
                                            l4867 0181                                              l4795 0000  
                                            l4699 0000                                              l4957 01F5  
                                            l4869 0185                                              l4789 00C7  
                                            l4797 00D0                                              l4967 01FE  
                                            l4879 0191                                              l4977 0207  
                                            l4987 021C                                              l4997 0222  
                                            l4989 0000                                              l4999 022E  
                                            _ADON 00F8                     startTwelveHourTimer@uiSetTime 0020  
                                            u2125 0140                                              u2135 014E  
                                            u1615 0628                                              u1625 064F  
                                            u1635 063B                                              _PEIE 005E  
                                            _main 0013                                              btemp 007E  
                         _clearTwentySecondsTimer 072C                                              start 0011  
                         ?_getAdOriginalCh14Value 0046                                 main@ucTimerDelay1 005D  
                               main@ucTimerDelay2 005E                                 main@ucTimerDelay3 005F  
                               main@ucTimerDelay4 0060                        ??_isFinishedTwentyMinTimer 0020  
                                           ??_ISR 0079                        __end_of_isPermitSampleTime 0F8D  
                                   main@bInitFlag 0051                               _sampleChannelSelect 006E  
                          ??_getAdOriginaCh4Value 0048                                             ?_main 0070  
                                           _DACR0 0088                                             _CLKPR 0108  
                                           _T1CON 0010                                   __end_of_adc_get 0568  
                                           _PBOD6 0C46                                             _PBOD7 0C47  
                                           _TMR1H 000F                                             _TMR1L 000E  
                           setAD_ConvertFlag@flag 0020                           _vPutSampleDataIntoTable 0568  
                                 __end_of_initPin 06DF                                             _timer 00AE  
                                           pclath 000A                                             status 0003  
                                           wtemp0 007E                    __end_of_getAdOriginalCh14Value 05FE  
                   __size_of_startTwelveHourTimer 0014                              __end_of_clrSampeTime 0800  
                           __end_of_clearAllTimer 0720                                      __end_of_main 04F5  
                          __size_of_adc_test_init 0015                                 __end_of_AD_Sample 0777  
                                  main@bInit20Min 0050                                            ??_main 0048  
                            _clearPinPortAndTimer 06AB                                            _ADCON0 001F  
                                          _ADCON1 009F                              __end_of_clock_config 0FA2  
                                          _DACCON 0087                                            _ADRESH 001E  
                                          _ADRESL 009E                                            _CLKPCE 0847  
                                          i1l2554 0000                                            i1l4601 0000  
                                          i1l1890 0514                                            i1l4531 0000  
                                          i1l1795 0000                                            i1l1891 051E  
                                          i1l4611 0000                                            i1l4533 0574  
                                          i1l4525 0000                                            i1l4605 0000  
                                          i1l4621 0528                                            i1l4543 0000  
                                          i1l4535 0000                                            i1l4527 0000  
                                          i1l4631 053C                                            i1l4607 0000  
                                          i1l4561 05AA                                            i1l4545 0589  
                                          i1l4537 057A                                            i1l4641 0000  
                                          i1l4633 0000                                            i1l4625 0000  
                                          i1l1889 050A                                            i1l1898 0550  
                                          i1l4571 0000                                            i1l4555 0000  
                                          i1l4547 0000                                            i1l4635 0547  
                                          i1l4627 0000                                            i1l4557 05A4  
                                          i1l4549 058F                                            i1l4637 0000  
                                          i1l4567 05B0                                            i1l4559 0000  
                                          i1l4569 0000                                            u172_25 05C8  
                                __end_of_dac_init 0F87                         ??_clearTwentySecondsTimer 0020  
                                          _TMR1IE 0460                                            _TMR1IF 0060  
                               _getAD_ConvertFlag 0750                                 _setAD_ConvertFlag 0754  
                                          _TRISA0 0428                                            _TRISA1 0429  
                                          _TRISB0 0430                                            _TRISA2 042A  
                                          _TRISB1 0431                                            _TRISA3 042B  
                                          _TRISB2 0432                                            _TRISB3 0433  
                                          _TRISB4 0434                                            _TRISA6 042E  
                                          _TRISB5 0435                                            _TRISA7 042F  
                                          _TRISB6 0436                                            _TRISB7 0437  
                                   main@ucTimer1s 00B5                                ?_getAD_ConvertFlag 0070  
                                          _Filter 05FE                                ?_setAD_ConvertFlag 0070  
                                __end_of_op1_init 0FBF                                  __end_of_op2_init 0F9A  
                     ??_isFinishedThreeHoursTimer 0020                     __size_of_clearThreeHoursTimer 0006  
                                       ??_adc_get 0072                               ??_getAD_ConvertFlag 0020  
                             ??_setAD_ConvertFlag 0020                                            _setPA0 06F0  
                                          _setPA1 06FA                                            _setPA2 0702  
                                          _setPB0 06DF                                            _setPB1 06E8  
                                          _setPA3 070A                                            _setPA6 0712  
                     __end_of_clearTwentyMinTimer 0F93                                            clrloop 0FA3  
                                Filter@filter_buf 0026                                  Filter@filter_sum 0040  
                                       ??_initPin 0021                           main@ucTimerDelayP2sLess 0061  
                         main@ucTimerDelayP2sMore 0062                         ??_vPutSampleDataIntoTable 0077  
                           ?_clearPinPortAndTimer 0070                                            saved_w 007E  
                         ??_clearTwelveHoursTimer 0020                       ?_process_AD_Converter_Value 0070  
                                   _adc_test_init 0777                  __size_of_startTwentySecondsTimer 0011  
                       __end_of_getAD_ConvertFlag 0754                         __end_of_setAD_ConvertFlag 0759  
                              __size_of_adc_start 0003                  __end_of_isFinishedTwentyMinTimer 0FCB  
                                  __pcstackCOMMON 0070                                      __pidataBANK0 0000  
                 __end_of_clearTwentySecondsTimer 0732                              _uiSampleChannelFirst 00BC  
                  vPutSampleDataIntoTable@channel 0076                               main@ucTimerRightP5s 0069  
                       _isFinishedThreeHoursTimer 0FE3                           ??_getAdOriginalCh1Value 0048  
                           __end_of_timer1_config 0FB4                                    ?_adc_test_init 0020  
                     __end_of_startTwentyMinTimer 07FE       vPutSampleDataIntoTable@ucChannelFirstLength 007D  
                __size_of_timer1_interrupt_config 0003                             __size_of_clrSampeTime 0002  
                                      __pbssBANK0 0048                                        __pbssBANK1 00A0  
                                      __pbssBANK3 0190                      __size_ofi1_setAD_ConvertFlag 0004  
                                      adc_get@val 0072                                  _uiTwentyMinTimer 00A4  
                 __end_of_vPutSampleDataIntoTable 05CB                                           ?_Filter 0020  
                                      __pmaintext 0013                                        __pintentry 0004  
                             main@enumInteralStep 00B0                                           ?_setPA0 0070  
                                         ?_setPA1 0070                                           ?_setPA2 0070  
                                         ?_setPB0 0070                                           ?_setPA3 0070  
                                         ?_setPB1 0070                                           ?_setPA6 0070  
                                       ?_dac_init 0070                            ??_clearPinPortAndTimer 0021  
                           __size_of_clock_config 0008                                           _OP1CON0 001B  
                                         _OP1CON1 001C                                           _OP1CON2 001D  
                                         _OP2CON0 009B                                           _OP2CON1 009C  
                                         _OP2CON2 009D                                      _clrSampeTime 07FE  
                               __end_of_adc_start 078F                              _uiTwentySecondsTimer 00A6  
                                       ?_op1_init 0070                                         ?_op2_init 0070  
                              _isPermitSampleTime 0F87                                           Filter@i 0045  
                                         Filter@j 0044                     __size_of_startThreeHoursTimer 0014  
                      __size_of_getAD_ConvertFlag 0004                        __size_of_setAD_ConvertFlag 0005  
                                  main@ucTimer20s 00B6                                    main@ucTimerP3s 00B9  
                                  main@ucTimerP5s 0068                               ?_isPermitSampleTime 0070  
                                  main@uiMaxValue 00A8                                    main@uiMinValue 00AA  
                                    setPA0@bValue 0020                                    main@uiOldValue 0048  
                                    setPA1@bValue 0020                                   __size_of_Filter 0097  
                                    setPA2@bValue 0020                                      setPB0@bValue 0020  
                                      _uiBigTimer 00A0                                      setPA3@bValue 0020  
                                    setPB1@bValue 0020                                      setPA6@bValue 0020  
                                    _clock_config 0F9A                                           _adc_get 055D  
                                 __size_of_setPA0 000A                                   __size_of_setPA1 0008  
                                 __size_of_setPB0 0009                                   __size_of_setPA2 0008  
                                 __size_of_setPB1 0008                                   __size_of_setPA3 0008  
                                 __size_of_setPA6 0009              __end_of_isFinishedTwentySecondsTimer 0FE3  
           __size_of_isFinishedTwentySecondsTimer 000C                      _isFinishedTwentySecondsTimer 0FD7  
                            ??_isPermitSampleTime 0020                      __end_of_startTwelveHourTimer 07EA  
                                      ??_dac_init 0020                                         _AD_Sample 0759  
                                    __size_of_ISR 0068                                           _initPin 06C1  
                            _bSmallTimerStartFlag 004B                     __size_of_getAdOriginaCh4Value 000A  
                                 ??_adc_test_init 0021                 __size_of_isFinishedTwentyMinTimer 000C  
                                      ??_op1_init 0020                                        ??_op2_init 0020  
                       ?_isFinishedTwentyMinTimer 0070                           _startTwentySecondsTimer 0FEF  
                            end_of_initialization 07BF                                 Filter@filter_temp 003E  
                                main@ucLoaderStep 0056                                        ?_AD_Sample 0070  
                   ?_isFinishedTwentySecondsTimer 0070                              main@enumMainLoopStep 0052  
                              main@ucChannel4Type 0054                      ??_isFinishedTwelveHoursTimer 0020  
                                       Filter@cir 0042                               _bTwentyMinStartFlag 004C  
                                _adc_convert_flag 00AD                            __size_of_clearAllTimer 0005  
                    __end_of_clearThreeHoursTimer 072C                            main@ucTimerADC1ZeroP5s 005B  
                  __size_of_clearTwelveHoursTimer 0006                           _timer1_interrupt_config 0F7F  
                   __end_of_clearTwelveHoursTimer 0726                          main@ucTimerForDACR0_CNT1 0063  
                        main@ucTimerForDACR0_CNT2 0065                __size_of_isFinishedThreeHoursTimer 000C  
                                main@ucTimerX1P5s 00BA                                  main@ucTimerX2P5s 00BB  
                          main@ucTimerZeroPoint3s 006A                            main@ucTimerZeroPoint5s 006B  
                                main@ucTimerDelay 005C                                    __end_of_Filter 0695  
                                 main@ucADC4_Step 0053                               _bTwentySecStartFlag 004D  
                   startTwentyMinTimer@uiSetValue 0020               __size_of_isFinishedTwelveHoursTimer 000C  
                        vPutSampleDataIntoTable@i 0077                               i1_setAD_ConvertFlag 05CB  
                                  __end_of_setPA0 06FA                                    __end_of_setPA1 0702  
                                  __end_of_setPB0 06E8                                    __end_of_setPA2 070A  
                                  __end_of_setPB1 06F0                                    __end_of_setPA3 0712  
                                  __end_of_setPA6 071B                         ??_startTwentySecondsTimer 0020  
                             start_initialization 07A9                                       __end_of_ISR 055D  
                            main@ucTimerLessX1P5s 00B7                              main@ucTimerLessX2P5s 00B8  
                           _uiSampleChannelFourth 00D4                          ?_clearTwentySecondsTimer 0070  
                  __size_of_getAdOriginalCh1Value 000A                     __end_of_getAdOriginalCh1Value 05F3  
                        ??_getAdOriginalCh14Value 0048                      __size_of_clearTwentyMinTimer 0006  
                            ?i1_setAD_ConvertFlag 0070                              _startTwelveHourTimer 07D6  
               __end_of_isFinishedThreeHoursTimer 0FEF                                main@enumBranchStep 00AF  
                                        ??_Filter 0022                                     _clearAllTimer 071B  
                                     __pdataBANK0 006E                                          ??_setPA0 0020  
                                        ??_setPA1 0020                                          ??_setPA2 0020  
                                        ??_setPB0 0020                                          ??_setPA3 0020  
                                        ??_setPB1 0020                                          ??_setPA6 0020  
                        ?_vPutSampleDataIntoTable 0074                        main@ucDelayPrefix4TimerP5s 0055  
                                     ??_AD_Sample 0020                         ??_timer1_interrupt_config 0020  
                      main@ucDelayPrefix6TimerP2s 00B3                                       __pbssCOMMON 007D  
                               __size_of_dac_init 0005                                     __pcstackBANK0 0020  
                  ??_isFinishedTwentySecondsTimer 0020                                         _adc_start 078C  
                               __size_of_op1_init 000B                                 __size_of_op2_init 0007  
                           ??i1_setAD_ConvertFlag 0070                             ?_startTwelveHourTimer 0020  
                 __end_of_startTwentySecondsTimer 1000                      __size_of_startTwentyMinTimer 0014  
                                  ?_clearAllTimer 0070                            __size_of_timer1_config 000A  
                            _clearThreeHoursTimer 0726                      __end_of_startThreeHoursTimer 07D6  
                                       __ptext900 0FCB                                         __ptext901 07D6  
                                       __ptext910 0F82                                         __ptext902 0FBF  
                                       __ptext911 0777                                         __ptext903 0F8D  
                                       __ptext920 06E8                                         __ptext912 0F7F  
                                       __ptext904 07EA                                         __ptext921 06DF  
                                       __ptext913 0FAA                                         __ptext905 07FE  
                                       __ptext922 072C                                         __ptext914 0F9A  
                                       __ptext906 0F87                                         __ptext923 0726  
                                       __ptext915 0712                                         __ptext907 078C  
                                       __ptext924 0720                                         __ptext916 070A  
                                       __ptext908 0F93                                         __ptext925 04F5  
                                       __ptext917 0702                                         __ptext909 0FB4  
                                       __ptext926 05CB                                         __ptext918 06FA  
                                       __ptext927 055D                                         __ptext919 06F0  
                                       __ptext928 0568                                         __ptext929 0000  
                                       __ptext890 06C1                                         __ptext891 071B  
                                       __ptext892 0759                                         __ptext893 0754  
                                       __ptext885 06AB                                         __ptext894 0750  
                                       __ptext886 05DF                                         __ptext895 05FE  
                                       __ptext887 05E9                                         __ptext896 0FE3  
                                       __ptext888 05F3                                         __ptext897 07C2  
                                       __ptext889 0732                                         __ptext898 0FD7  
                                       __ptext899 0FEF                                          ?_adc_get 0070  
                                       __pswtext1 0800                                         __pswtext2 080E  
                                       __pswtext3 081C                                         __pswtext4 078F  
              __end_of_isFinishedTwelveHoursTimer 0FD7                        _isFinishedTwelveHoursTimer 0FCB  
                                 ISR@ucTimer1sCnt 00AC                                          ?_initPin 0070  
                   __size_of_clearPinPortAndTimer 0016                         _uiSampleChannelFourteenth 0190  
                                      ?_adc_start 0070                   __size_of_getAdOriginalCh14Value 000B  
                               interrupt_function 0004                      __end_of_getAdOriginaCh4Value 05E9  
                 __end_of_timer1_interrupt_config 0F82                        main@ucTimerLessADC1ZeroP5s 0067  
                           ?_clearThreeHoursTimer 0070                              adc_test_init@channel 0022  
             vPutSampleDataIntoTable@uiSampleData 0074      vPutSampleDataIntoTable@ucChannelFourthLength 006D  
                     __size_of_isPermitSampleTime 0006                                      _uiSmallTimer 00A2  
                           __end_of_adc_test_init 078C                                     _timer1_config 0FAA  
                    ??_process_AD_Converter_Value 0023                            ??_startTwelveHourTimer 0022  
                                 ??_clearAllTimer 0020                       main@ucFourthSuffix1TimerP3s 00B4  
                          _getAdOriginalCh14Value 05F3                               _clearTwentyMinTimer 0F8D  
                                __size_of_adc_get 000B               __size_of_process_AD_Converter_Value 001E  
                                        _dac_init 0F82                          _isFinishedTwentyMinTimer 0FBF  
vPutSampleDataIntoTable@ucChannelFourteenthLength 006C                        main@ucTimerForDACR0_CNT1_f 0064  
                      main@ucTimerForDACR0_CNT2_f 0066                                  __size_of_initPin 001E  
                                  Filter@tmpValue 0020                                    ?_timer1_config 0070  
                                        _op1_init 0FB4                                          _op2_init 0F93  
                            ?_clearTwentyMinTimer 0070                                       ??_adc_start 0020  
                            _startThreeHoursTimer 07C2                             _clearTwelveHoursTimer 0720  
                                   __size_of_main 04E2                                          clear_ram 0FA2  
                          ??_clearThreeHoursTimer 0020                  __size_of_clearTwentySecondsTimer 0006  
                                   ?_clrSampeTime 0070                               _startTwentyMinTimer 07EA  
                            _getAdOriginaCh4Value 05DF                                       _sampleTimes 004E  
                           ??_clearTwentyMinTimer 0020                             ?_startThreeHoursTimer 0020  
                __size_of_vPutSampleDataIntoTable 0063                                          intlevel1 0000  
                           _getAdOriginalCh1Value 05E9                              ?_startTwentyMinTimer 0020  
                      ?_isFinishedThreeHoursTimer 0070                                 main@ucLoaderStep1 0057  
                               main@ucLoaderStep2 0058                                 main@ucLoaderStep3 0059  
                               main@ucLoaderStep4 005A                                     ?_clock_config 0070  
                        ?_startTwentySecondsTimer 0070                     startThreeHoursTimer@uiSetTime 0020  
                         i1setAD_ConvertFlag@flag 0070                                    ??_clrSampeTime 0020  
                     ?_isFinishedTwelveHoursTimer 0070                                _bBigTimerStartFlag 004A  
                           ?_getAdOriginaCh4Value 0046                                   ??_timer1_config 0020  
                               main@bCheckTweHour 004F                       __end_ofi1_setAD_ConvertFlag 05CF  
              __end_of_process_AD_Converter_Value 0750                        _process_AD_Converter_Value 0732  
                          ?_clearTwelveHoursTimer 0070                           main@ucCheckTimerP2sLess 00B1  
                         main@ucCheckTimerP2sMore 00B2                                  adc_test_init@ref 0020  
                           ??_startTwentyMinTimer 0022                      __end_of_clearPinPortAndTimer 06C1  
