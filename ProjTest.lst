

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Tue Mar 03 11:13:22 2020

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	text1008,local,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,delta=2
    15                           	psect	swtext1,local,class=CONST,delta=2
    16                           	psect	swtext2,local,class=CONST,delta=2
    17                           	psect	swtext3,local,class=CONST,delta=2
    18                           	psect	text1010,local,class=CODE,delta=2
    19                           	psect	text1016,local,class=CODE,delta=2
    20                           	psect	text1024,local,class=CODE,delta=2
    21                           	psect	text1025,local,class=CODE,delta=2
    22                           	psect	text1026,local,class=CODE,delta=2
    23                           	psect	text1027,local,class=CODE,delta=2
    24                           	psect	text1028,local,class=CODE,delta=2
    25                           	psect	text1029,local,class=CODE,delta=2
    26                           	psect	text1030,local,class=CODE,delta=2
    27                           	psect	text1031,local,class=CODE,delta=2
    28                           	psect	text1032,local,class=CODE,delta=2
    29                           	psect	text1033,local,class=CODE,delta=2
    30                           	psect	text1036,local,class=CODE,delta=2
    31                           	psect	text1037,local,class=CODE,delta=2
    32                           	psect	text1038,local,class=CODE,delta=2
    33                           	psect	text1040,local,class=CODE,delta=2
    34                           	psect	text1044,local,class=CODE,delta=2
    35                           	psect	text1050,local,class=CODE,delta=2
    36                           	psect	text1055,local,class=CODE,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text1059,local,class=CODE,delta=2
    39                           	psect	pa_nodes,global,class=CODE,delta=2
    40                           	dabs	1,0x7E,2
    41  000A                     	;#
    42                           
    43                           	psect	config
    44  2000  2FFF               	dw	12287	;#
    45  2001  3FDE               	dw	16350	;#
    46  2002  3FF8               	dw	16376	;#
    47                           
    48                           	psect	text1008
    49  0000                     __ptext1008:	
    50  001F                     _ADCON0	set	31
    51  001E                     _ADRESH	set	30
    52  0010                     _T1CON	set	16
    53  000F                     _TMR1H	set	15
    54  000E                     _TMR1L	set	14
    55  006A                     _ADIF	set	106
    56  00F8                     _ADON	set	248
    57  005F                     _GIE	set	95
    58  00F9                     _GO	set	249
    59  0028                     _PA0	set	40
    60  0029                     _PA1	set	41
    61  002A                     _PA2	set	42
    62  002B                     _PA3	set	43
    63  002E                     _PA6	set	46
    64  0030                     _PB0	set	48
    65  0031                     _PB1	set	49
    66  0032                     _PB2	set	50
    67  0034                     _PB4	set	52
    68  0036                     _PB6	set	54
    69  0037                     _PB7	set	55
    70  005E                     _PEIE	set	94
    71  0060                     _TMR1IF	set	96
    72  009F                     _ADCON1	set	159
    73  009E                     _ADRESL	set	158
    74  046A                     _ADIE	set	1130
    75  0460                     _TMR1IE	set	1120
    76  0428                     _TRISA0	set	1064
    77  0429                     _TRISA1	set	1065
    78  042A                     _TRISA2	set	1066
    79  042B                     _TRISA3	set	1067
    80  042E                     _TRISA6	set	1070
    81  042F                     _TRISA7	set	1071
    82  0430                     _TRISB0	set	1072
    83  0431                     _TRISB1	set	1073
    84  0432                     _TRISB2	set	1074
    85  0433                     _TRISB3	set	1075
    86  0434                     _TRISB4	set	1076
    87  0435                     _TRISB5	set	1077
    88  0436                     _TRISB6	set	1078
    89  0437                     _TRISB7	set	1079
    90  0108                     _CLKPR	set	264
    91  0847                     _CLKPCE	set	2119
    92  0C47                     _PBOD7	set	3143
    93                           
    94                           	psect	cinit
    95  0786                     start_initialization:	
    96  0786  304A               	movlw	low __pbssBANK0
    97                           
    98                           ; Clear objects allocated to COMMON
    99  0787  01FD               	clrf	__pbssCOMMON& (0+127)
   100                           
   101                           ; Clear objects allocated to BANK0
   102  0788  1383               	bcf	3,7	;select IRP bank0
   103  0789  0084               	movwf	4
   104  078A  306F               	movlw	low (__pbssBANK0+37)
   105  078B  118A  27F8  118A   	fcall	clear_ram
   106                           
   107                           ; Clear objects allocated to BANK1
   108  078E  30A0               	movlw	low __pbssBANK1
   109  078F  0084               	movwf	4
   110  0790  30DC               	movlw	low (__pbssBANK1+60)
   111  0791  118A  27F8  118A   	fcall	clear_ram
   112  0794  3090               	movlw	low __pbssBANK3
   113                           
   114                           ; Clear objects allocated to BANK3
   115  0795  1783               	bsf	3,7	;select IRP bank2
   116  0796  0084               	movwf	4
   117  0797  30D8               	movlw	low (__pbssBANK3+72)
   118  0798  118A  27F8         	fcall	clear_ram
   119  079A                     end_of_initialization:	
   120                           ;End of C runtime variable initialization code
   121                           
   122  079A  0183               	clrf	3
   123  079B  118A  2813         	ljmp	_main	;jump to C main() function
   124                           
   125                           	psect	bssCOMMON
   126  007D                     __pbssCOMMON:	
   127  007D                     vHandle20sTimerOut@ucTimeCnt:	
   128  007D                     	ds	1
   129                           
   130                           	psect	bssBANK0
   131  004A                     __pbssBANK0:	
   132  004A                     main@uiOldValue:	
   133  004A                     	ds	2
   134  004C                     _bBigTimerStartFlag:	
   135  004C                     	ds	1
   136  004D                     _bSmallTimerStartFlag:	
   137  004D                     	ds	1
   138  004E                     _bTwentyMinStartFlag:	
   139  004E                     	ds	1
   140  004F                     _bTwentySecStartFlag:	
   141  004F                     	ds	1
   142  0050                     _enumMainLoopStep:	
   143  0050                     	ds	1
   144  0051                     _sampleChannelSelect:	
   145  0051                     	ds	1
   146  0052                     _sampleTimes:	
   147  0052                     	ds	1
   148  0053                     _ucADC4_Step:	
   149  0053                     	ds	1
   150  0054                     _ucChannel5Type:	
   151  0054                     	ds	1
   152  0055                     main@bCheckTweHour:	
   153  0055                     	ds	1
   154  0056                     main@bInitFlag:	
   155  0056                     	ds	1
   156  0057                     main@ucFourthSuffix1TimerP3s:	
   157  0057                     	ds	1
   158  0058                     main@ucLoaderStep:	
   159  0058                     	ds	1
   160  0059                     main@ucLoaderStep1:	
   161  0059                     	ds	1
   162  005A                     main@ucLoaderStep2:	
   163  005A                     	ds	1
   164  005B                     main@ucLoaderStep3:	
   165  005B                     	ds	1
   166  005C                     main@ucLoaderStep4:	
   167  005C                     	ds	1
   168  005D                     main@ucTimerCntP3s:	
   169  005D                     	ds	1
   170  005E                     main@ucTimerDelay:	
   171  005E                     	ds	1
   172  005F                     main@ucTimerDelay1:	
   173  005F                     	ds	1
   174  0060                     main@ucTimerDelay2:	
   175  0060                     	ds	1
   176  0061                     main@ucTimerDelay3:	
   177  0061                     	ds	1
   178  0062                     main@ucTimerDelay4:	
   179  0062                     	ds	1
   180  0063                     main@ucTimerDelayP2sLess:	
   181  0063                     	ds	1
   182  0064                     main@ucTimerDelayP2sMore:	
   183  0064                     	ds	1
   184  0065                     main@ucTimerLargeZeroP5s:	
   185  0065                     	ds	1
   186  0066                     main@ucTimerLessZeroP5s:	
   187  0066                     	ds	1
   188  0067                     main@ucTimerP5s:	
   189  0067                     	ds	1
   190  0068                     main@ucTimerRightP5s:	
   191  0068                     	ds	1
   192  0069                     main@ucTimerZeroPoint3s:	
   193  0069                     	ds	1
   194  006A                     main@ucTimerZeroPoint5s:	
   195  006A                     	ds	1
   196  006B                     vPutSampleDataIntoTable@ucChannelFifthLength:	
   197  006B                     	ds	1
   198  006C                     vPutSampleDataIntoTable@ucChannelSecondLength:	
   199  006C                     	ds	1
   200  006D                     vPutSampleDataIntoTable@ucChannelSixthLength:	
   201  006D                     	ds	1
   202  006E                     vPutSampleDataIntoTable@ucChannelZeroLength:	
   203  006E                     	ds	1
   204                           
   205                           	psect	bssBANK1
   206  00A0                     __pbssBANK1:	
   207  00A0                     _uiBigTimer:	
   208  00A0                     	ds	2
   209  00A2                     _uiSmallTimer:	
   210  00A2                     	ds	2
   211  00A4                     _uiTwentyMinuteTimer:	
   212  00A4                     	ds	2
   213  00A6                     _uiTwentySecondsTimer:	
   214  00A6                     	ds	2
   215  00A8                     main@uiMaxValue:	
   216  00A8                     	ds	2
   217  00AA                     main@uiMinValue:	
   218  00AA                     	ds	2
   219  00AC                     ISR@ucTimer1sCnt:	
   220  00AC                     	ds	1
   221  00AD                     _adc_convert_flag:	
   222  00AD                     	ds	1
   223  00AE                     _bPause20secTimer:	
   224  00AE                     	ds	1
   225  00AF                     _timer:	
   226  00AF                     	ds	1
   227  00B0                     main@enumBranchStep:	
   228  00B0                     	ds	1
   229  00B1                     main@enumInteralStep:	
   230  00B1                     	ds	1
   231  00B2                     main@ucTimer1s:	
   232  00B2                     	ds	1
   233  00B3                     main@ucTimerLessX1P5s:	
   234  00B3                     	ds	1
   235  00B4                     main@ucTimerLessX2P5s:	
   236  00B4                     	ds	1
   237  00B5                     main@ucTimerP3s:	
   238  00B5                     	ds	1
   239  00B6                     main@ucTimerX1P5s:	
   240  00B6                     	ds	1
   241  00B7                     main@ucTimerX2P5s:	
   242  00B7                     	ds	1
   243  00B8                     vHandle20sTimerOut@ucTimerOnBehaviorStep:	
   244  00B8                     	ds	1
   245  00B9                     vHandle20sTimeron@ucCompareStep:	
   246  00B9                     	ds	1
   247  00BA                     vHandle20sTimeron@ucLessThanP3sCnt:	
   248  00BA                     	ds	1
   249  00BB                     vHandle20sTimeron@ucLessThanP8sCnt:	
   250  00BB                     	ds	1
   251  00BC                     vHandle20sTimeron@ucMoreThanP3sCnt:	
   252  00BC                     	ds	1
   253  00BD                     vHandle20sTimeron@ucMoreThanP8sCnt:	
   254  00BD                     	ds	1
   255  00BE                     vHandle20sTimeron@ucTimeCntP2s:	
   256  00BE                     	ds	1
   257  00BF                     vHandle20sTimeron@ucTimerCntLess:	
   258  00BF                     	ds	1
   259  00C0                     vHandle20sTimeron@ucTimerCntMore:	
   260  00C0                     	ds	1
   261  00C1                     vHandle20sTimeron@ucTimerCntN1:	
   262  00C1                     	ds	1
   263  00C2                     vHandle20sTimeron@ucTimerCntP5s:	
   264  00C2                     	ds	1
   265  00C3                     vHandle20sTimeron@waitLoopStep:	
   266  00C3                     	ds	1
   267  00C4                     _uiSampleChannelZero:	
   268  00C4                     	ds	24
   269                           
   270                           	psect	bssBANK3
   271  0190                     __pbssBANK3:	
   272  0190                     _uiSampleChannelFifth:	
   273  0190                     	ds	24
   274  01A8                     _uiSampleChannelSecond:	
   275  01A8                     	ds	24
   276  01C0                     _uiSampleChannelSixth:	
   277  01C0                     	ds	24
   278                           
   279                           	psect	clrtext
   280  07F8                     clear_ram:	
   281                           ;	Called with FSR containing the base address, and
   282                           ;	W with the last address+1
   283                           
   284  07F8  0064               	clrwdt	;clear the watchdog before getting into this loop
   285  07F9                     clrloop:	
   286  07F9  0180               	clrf	0	;clear RAM location pointed to by FSR
   287  07FA  0A84               	incf	4,f	;increment pointer
   288  07FB  0604               	xorwf	4,w	;XOR with final address
   289  07FC  1903               	btfsc	3,2	;have we reached the end yet?
   290  07FD  3400               	retlw	0	;all done for this memory range, return
   291  07FE  0604               	xorwf	4,w	;XOR again to restore value
   292  07FF  2FF9               	goto	clrloop	;do the next byte
   293                           
   294                           	psect	cstackCOMMON
   295  0070                     __pcstackCOMMON:	
   296  0070                     ?_clearTwelveHoursTimer:	
   297  0070                     ?_clearThreeHoursTimer:	
   298                           ; 0 bytes @ 0x0
   299                           
   300  0070                     ?_clearTwentySecondsTimer:	
   301                           ; 0 bytes @ 0x0
   302                           
   303  0070                     ?_clearTwentyMinuteTimer:	
   304                           ; 0 bytes @ 0x0
   305                           
   306  0070                     ?_clock_config:	
   307                           ; 0 bytes @ 0x0
   308                           
   309  0070                     ?_timer1_config:	
   310                           ; 0 bytes @ 0x0
   311                           
   312  0070                     ?_timer1_interrupt_config:	
   313                           ; 0 bytes @ 0x0
   314                           
   315  0070                     ?_adc_start:	
   316                           ; 0 bytes @ 0x0
   317                           
   318  0070                     ?_process_AD_Converter_Value:	
   319                           ; 0 bytes @ 0x0
   320                           
   321  0070                     ?_clrSampeTime:	
   322                           ; 0 bytes @ 0x0
   323                           
   324  0070                     ?_startTwentySecondsTimer:	
   325                           ; 0 bytes @ 0x0
   326                           
   327  0070                     ?_vHandle20sTimeron:	
   328                           ; 0 bytes @ 0x0
   329                           
   330  0070                     ?_vHandle20sTimerOut:	
   331                           ; 0 bytes @ 0x0
   332                           
   333  0070                     ?_vPause20sTimer:	
   334                           ; 0 bytes @ 0x0
   335                           
   336  0070                     ?_AD_Sample:	
   337                           ; 0 bytes @ 0x0
   338                           
   339  0070                     ?_clearAllTimer:	
   340                           ; 0 bytes @ 0x0
   341                           
   342  0070                     ?_clearPinPortAndTimer:	
   343                           ; 0 bytes @ 0x0
   344                           
   345  0070                     ?_initPin:	
   346                           ; 0 bytes @ 0x0
   347                           
   348  0070                     ?_setPB0:	
   349                           ; 0 bytes @ 0x0
   350                           
   351  0070                     ?_setPB1:	
   352                           ; 0 bytes @ 0x0
   353                           
   354  0070                     ?_setPB2:	
   355                           ; 0 bytes @ 0x0
   356                           
   357  0070                     ?_setPA0:	
   358                           ; 0 bytes @ 0x0
   359                           
   360  0070                     ?_setPA1:	
   361                           ; 0 bytes @ 0x0
   362                           
   363  0070                     ?_setPA2:	
   364                           ; 0 bytes @ 0x0
   365                           
   366  0070                     ?_setPA3:	
   367                           ; 0 bytes @ 0x0
   368                           
   369  0070                     ?_setPB6:	
   370                           ; 0 bytes @ 0x0
   371                           
   372  0070                     ?_setPB4:	
   373                           ; 0 bytes @ 0x0
   374                           
   375  0070                     ?_setPA6:	
   376                           ; 0 bytes @ 0x0
   377                           
   378  0070                     ?_setPB6AsInput:	
   379                           ; 0 bytes @ 0x0
   380                           
   381  0070                     ?_clearParaFunction1:	
   382                           ; 0 bytes @ 0x0
   383                           
   384  0070                     ?_main:	
   385                           ; 0 bytes @ 0x0
   386                           
   387  0070                     ?_setAD_ConvertFlag:	
   388                           ; 0 bytes @ 0x0
   389                           
   390  0070                     ?_ISR:	
   391                           ; 0 bytes @ 0x0
   392                           
   393  0070                     ?i1_setAD_ConvertFlag:	
   394                           ; 0 bytes @ 0x0
   395                           
   396  0070                     ??i1_setAD_ConvertFlag:	
   397                           ; 0 bytes @ 0x0
   398                           
   399  0070                     ?_isPermitSampleTime:	
   400                           ; 0 bytes @ 0x0
   401                           
   402  0070                     ?_isFinishedTwentyMinuteTimer:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0070                     ?_isFinishedTwelveHoursTimer:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0070                     ?_isFinishedTwentySecondsTimer:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ?_isFinishedThreeHoursTimer:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ?_getAD_ConvertFlag:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ?_adc_get:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     i1setAD_ConvertFlag@flag:	
   421                           ; 2 bytes @ 0x0
   422                           
   423                           
   424                           ; 1 bytes @ 0x0
   425  0070                     	ds	2
   426  0072                     ??_adc_get:	
   427  0072                     adc_get@val:	
   428                           ; 0 bytes @ 0x2
   429                           
   430                           
   431                           ; 2 bytes @ 0x2
   432  0072                     	ds	2
   433  0074                     ?_vPutSampleDataIntoTable:	
   434  0074                     vPutSampleDataIntoTable@uiSampleData:	
   435                           ; 0 bytes @ 0x4
   436                           
   437                           
   438                           ; 2 bytes @ 0x4
   439  0074                     	ds	2
   440  0076                     vPutSampleDataIntoTable@channel:	
   441                           
   442                           ; 1 bytes @ 0x6
   443  0076                     	ds	1
   444  0077                     ??_vPutSampleDataIntoTable:	
   445  0077                     vPutSampleDataIntoTable@i:	
   446                           ; 0 bytes @ 0x7
   447                           
   448                           
   449                           ; 2 bytes @ 0x7
   450  0077                     	ds	2
   451  0079                     ??_ISR:	
   452                           
   453                           ; 0 bytes @ 0x9
   454  0079                     	ds	4
   455                           
   456                           	psect	cstackBANK0
   457  0020                     __pcstackBANK0:	
   458  0020                     ??_clearTwelveHoursTimer:	
   459  0020                     ??_clearThreeHoursTimer:	
   460                           ; 0 bytes @ 0x0
   461                           
   462  0020                     ??_clearTwentySecondsTimer:	
   463                           ; 0 bytes @ 0x0
   464                           
   465  0020                     ??_clearTwentyMinuteTimer:	
   466                           ; 0 bytes @ 0x0
   467                           
   468  0020                     ??_clock_config:	
   469                           ; 0 bytes @ 0x0
   470                           
   471  0020                     ??_timer1_config:	
   472                           ; 0 bytes @ 0x0
   473                           
   474  0020                     ??_timer1_interrupt_config:	
   475                           ; 0 bytes @ 0x0
   476                           
   477  0020                     ?_adc_test_init:	
   478                           ; 0 bytes @ 0x0
   479                           
   480  0020                     ??_adc_start:	
   481                           ; 0 bytes @ 0x0
   482                           
   483  0020                     ?_startTwentyMinuteTimer:	
   484                           ; 0 bytes @ 0x0
   485                           
   486  0020                     ??_isPermitSampleTime:	
   487                           ; 0 bytes @ 0x0
   488                           
   489  0020                     ??_clrSampeTime:	
   490                           ; 0 bytes @ 0x0
   491                           
   492  0020                     ??_isFinishedTwentyMinuteTimer:	
   493                           ; 0 bytes @ 0x0
   494                           
   495  0020                     ?_startTwelveHourTimer:	
   496                           ; 0 bytes @ 0x0
   497                           
   498  0020                     ??_isFinishedTwelveHoursTimer:	
   499                           ; 0 bytes @ 0x0
   500                           
   501  0020                     ??_startTwentySecondsTimer:	
   502                           ; 0 bytes @ 0x0
   503                           
   504  0020                     ??_isFinishedTwentySecondsTimer:	
   505                           ; 0 bytes @ 0x0
   506                           
   507  0020                     ?_startThreeHoursTimer:	
   508                           ; 0 bytes @ 0x0
   509                           
   510  0020                     ??_isFinishedThreeHoursTimer:	
   511                           ; 0 bytes @ 0x0
   512                           
   513  0020                     ??_vPause20sTimer:	
   514                           ; 0 bytes @ 0x0
   515                           
   516  0020                     ??_clearAllTimer:	
   517                           ; 0 bytes @ 0x0
   518                           
   519  0020                     ??_clearPinPortAndTimer:	
   520                           ; 0 bytes @ 0x0
   521                           
   522  0020                     ??_initPin:	
   523                           ; 0 bytes @ 0x0
   524                           
   525  0020                     ??_setPB0:	
   526                           ; 0 bytes @ 0x0
   527                           
   528  0020                     ??_setPB1:	
   529                           ; 0 bytes @ 0x0
   530                           
   531  0020                     ??_setPB2:	
   532                           ; 0 bytes @ 0x0
   533                           
   534  0020                     ??_setPA0:	
   535                           ; 0 bytes @ 0x0
   536                           
   537  0020                     ??_setPA1:	
   538                           ; 0 bytes @ 0x0
   539                           
   540  0020                     ??_setPA2:	
   541                           ; 0 bytes @ 0x0
   542                           
   543  0020                     ??_setPA3:	
   544                           ; 0 bytes @ 0x0
   545                           
   546  0020                     ??_setPB6:	
   547                           ; 0 bytes @ 0x0
   548                           
   549  0020                     ??_setPB4:	
   550                           ; 0 bytes @ 0x0
   551                           
   552  0020                     ??_setPA6:	
   553                           ; 0 bytes @ 0x0
   554                           
   555  0020                     ??_setPB6AsInput:	
   556                           ; 0 bytes @ 0x0
   557                           
   558  0020                     ??_getAD_ConvertFlag:	
   559                           ; 0 bytes @ 0x0
   560                           
   561  0020                     ??_setAD_ConvertFlag:	
   562                           ; 0 bytes @ 0x0
   563                           
   564  0020                     ?_Filter:	
   565                           ; 0 bytes @ 0x0
   566                           
   567  0020                     setPB0@bValue:	
   568                           ; 2 bytes @ 0x0
   569                           
   570  0020                     setPB1@bValue:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0020                     setPB2@bValue:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0020                     setPA0@bValue:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0020                     setPA1@bValue:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0020                     setPA2@bValue:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0020                     setPA3@bValue:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0020                     setPB6@bValue:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0020                     setPB4@bValue:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0020                     setPA6@bValue:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0020                     vPause20sTimer@bValue:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0020                     setAD_ConvertFlag@flag:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0020                     adc_test_init@ref:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0020                     Filter@tmpValue:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0020                     startTwelveHourTimer@uiSetTime:	
   610                           ; 2 bytes @ 0x0
   611                           
   612  0020                     startThreeHoursTimer@uiSetTime:	
   613                           ; 2 bytes @ 0x0
   614                           
   615  0020                     startTwentyMinuteTimer@uiValue:	
   616                           ; 2 bytes @ 0x0
   617                           
   618                           
   619                           ; 2 bytes @ 0x0
   620  0020                     	ds	1
   621  0021                     ??_adc_test_init:	
   622  0021                     ??_vHandle20sTimerOut:	
   623                           ; 0 bytes @ 0x1
   624                           
   625  0021                     ??_clearParaFunction1:	
   626                           ; 0 bytes @ 0x1
   627                           
   628  0021                     vHandle20sTimerOut@bClearStep:	
   629                           ; 0 bytes @ 0x1
   630                           
   631                           
   632                           ; 1 bytes @ 0x1
   633  0021                     	ds	1
   634  0022                     ??_startTwentyMinuteTimer:	
   635  0022                     ??_startTwelveHourTimer:	
   636                           ; 0 bytes @ 0x2
   637                           
   638  0022                     ??_startThreeHoursTimer:	
   639                           ; 0 bytes @ 0x2
   640                           
   641  0022                     ??_Filter:	
   642                           ; 0 bytes @ 0x2
   643                           
   644  0022                     adc_test_init@channel:	
   645                           ; 0 bytes @ 0x2
   646                           
   647                           
   648                           ; 1 bytes @ 0x2
   649  0022                     	ds	1
   650  0023                     ??_process_AD_Converter_Value:	
   651  0023                     ??_AD_Sample:	
   652                           ; 0 bytes @ 0x3
   653                           
   654                           
   655                           ; 0 bytes @ 0x3
   656  0023                     	ds	3
   657  0026                     Filter@filter_buf:	
   658                           
   659                           ; 24 bytes @ 0x6
   660  0026                     	ds	24
   661  003E                     Filter@filter_temp:	
   662                           
   663                           ; 2 bytes @ 0x1E
   664  003E                     	ds	2
   665  0040                     Filter@filter_sum:	
   666                           
   667                           ; 2 bytes @ 0x20
   668  0040                     	ds	2
   669  0042                     Filter@cir:	
   670                           
   671                           ; 2 bytes @ 0x22
   672  0042                     	ds	2
   673  0044                     Filter@j:	
   674                           
   675                           ; 1 bytes @ 0x24
   676  0044                     	ds	1
   677  0045                     Filter@i:	
   678                           
   679                           ; 1 bytes @ 0x25
   680  0045                     	ds	1
   681  0046                     ?_getAdOriginalCh0Value:	
   682  0046                     ?_getAdOriginalCh6Value:	
   683                           ; 2 bytes @ 0x26
   684                           
   685  0046                     ?_getAdOriginalCh5Value:	
   686                           ; 2 bytes @ 0x26
   687                           
   688  0046                     ?_getAdOriginalCh2Value:	
   689                           ; 2 bytes @ 0x26
   690                           
   691                           
   692                           ; 2 bytes @ 0x26
   693  0046                     	ds	2
   694  0048                     ??_getAdOriginalCh0Value:	
   695  0048                     ??_getAdOriginalCh6Value:	
   696                           ; 0 bytes @ 0x28
   697                           
   698  0048                     ??_getAdOriginalCh5Value:	
   699                           ; 0 bytes @ 0x28
   700                           
   701  0048                     ??_vHandle20sTimeron:	
   702                           ; 0 bytes @ 0x28
   703                           
   704  0048                     ??_getAdOriginalCh2Value:	
   705                           ; 0 bytes @ 0x28
   706                           
   707  0048                     ??_main:	
   708                           ; 0 bytes @ 0x28
   709                           
   710  0048                     main@uiCh5Value:	
   711                           ; 0 bytes @ 0x28
   712                           
   713                           
   714                           ; 2 bytes @ 0x28
   715  0048                     	ds	2
   716                           
   717                           	psect	maintext
   718  0013                     __pmaintext:	
   719 ;;Data sizes: Strings 0, constant 0, data 0, bss 170, persistent 0 stack 0
   720 ;;Auto spaces:   Size  Autos    Used
   721 ;; COMMON          14     13      14
   722 ;; BANK0           80     42      79
   723 ;; BANK1           80      0      60
   724 ;; BANK3           96      0      72
   725 ;; BANK2           96      0       0
   726 ;;
   727 ;; Pointer list with targets:
   728 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   729 ;;
   730 ;; ?_getAdOriginalCh2Value	unsigned int  size(1) Largest target is 0
   731 ;;
   732 ;; ?_getAdOriginalCh6Value	unsigned int  size(1) Largest target is 0
   733 ;;
   734 ;; ?_getAdOriginalCh5Value	unsigned int  size(1) Largest target is 0
   735 ;;
   736 ;; ?_getAdOriginalCh0Value	unsigned int  size(1) Largest target is 0
   737 ;;
   738 ;; ?_Filter	unsigned int  size(1) Largest target is 0
   739 ;;
   740 ;; Filter@tmpValue	PTR int  size(2) Largest target is 24
   741 ;;		 -> uiSampleChannelSixth(BANK3[24]), uiSampleChannelFifth(BANK3[24]), uiSampleChannelSecond(BANK3[24]), uiSampleChan
      +nelZero(BANK1[24]), 
   742 ;;
   743 ;;
   744 ;; Critical Paths under _main in COMMON
   745 ;;
   746 ;;   None.
   747 ;;
   748 ;; Critical Paths under _ISR in COMMON
   749 ;;
   750 ;;   _ISR->_vPutSampleDataIntoTable
   751 ;;   _vPutSampleDataIntoTable->_adc_get
   752 ;;
   753 ;; Critical Paths under _main in BANK0
   754 ;;
   755 ;;   _main->_getAdOriginalCh0Value
   756 ;;   _main->_getAdOriginalCh6Value
   757 ;;   _main->_getAdOriginalCh5Value
   758 ;;   _vHandle20sTimeron->_getAdOriginalCh2Value
   759 ;;   _vHandle20sTimeron->_getAdOriginalCh6Value
   760 ;;   _clearParaFunction1->_setPA1
   761 ;;   _clearParaFunction1->_setPA0
   762 ;;   _clearParaFunction1->_setPB0
   763 ;;   _clearParaFunction1->_setPB1
   764 ;;   _clearParaFunction1->_setPB2
   765 ;;   _clearParaFunction1->_setPA3
   766 ;;   _clearParaFunction1->_setPB4
   767 ;;   _AD_Sample->_adc_test_init
   768 ;;   _getAdOriginalCh2Value->_Filter
   769 ;;   _vHandle20sTimerOut->_setPA3
   770 ;;   _vHandle20sTimerOut->_setPB4
   771 ;;   _vHandle20sTimerOut->_setPB6
   772 ;;   _getAdOriginalCh5Value->_Filter
   773 ;;   _getAdOriginalCh6Value->_Filter
   774 ;;   _getAdOriginalCh0Value->_Filter
   775 ;;
   776 ;; Critical Paths under _ISR in BANK0
   777 ;;
   778 ;;   None.
   779 ;;
   780 ;; Critical Paths under _main in BANK1
   781 ;;
   782 ;;   None.
   783 ;;
   784 ;; Critical Paths under _ISR in BANK1
   785 ;;
   786 ;;   None.
   787 ;;
   788 ;; Critical Paths under _main in BANK3
   789 ;;
   790 ;;   None.
   791 ;;
   792 ;; Critical Paths under _ISR in BANK3
   793 ;;
   794 ;;   None.
   795 ;;
   796 ;; Critical Paths under _main in BANK2
   797 ;;
   798 ;;   None.
   799 ;;
   800 ;; Critical Paths under _ISR in BANK2
   801 ;;
   802 ;;   None.
   803 ;;
   804 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   805 ;;
   806 ;;
   807 ;;Call Graph Tables:
   808 ;;
   809 ;; ---------------------------------------------------------------------------------
   810 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   811 ;; ---------------------------------------------------------------------------------
   812 ;; (0) _main                                                 2     2      0    3873
   813 ;;                                             40 BANK0      2     2      0
   814 ;;                            _initPin
   815 ;;                       _clock_config
   816 ;;                      _timer1_config
   817 ;;            _timer1_interrupt_config
   818 ;;                      _adc_test_init
   819 ;;                          _adc_start
   820 ;;             _startTwentyMinuteTimer
   821 ;;         _process_AD_Converter_Value
   822 ;;                 _isPermitSampleTime
   823 ;;                       _clrSampeTime
   824 ;;              _getAdOriginalCh0Value
   825 ;;        _isFinishedTwentyMinuteTimer
   826 ;;                 _clearParaFunction1
   827 ;;                             _setPA3
   828 ;;                             _setPB4
   829 ;;              _getAdOriginalCh6Value
   830 ;;               _startTwelveHourTimer
   831 ;;         _isFinishedTwelveHoursTimer
   832 ;;              _getAdOriginalCh5Value
   833 ;;                             _setPA1
   834 ;;                             _setPA0
   835 ;;                             _setPB0
   836 ;;                             _setPB1
   837 ;;                             _setPB2
   838 ;;            _startTwentySecondsTimer
   839 ;;       _isFinishedTwentySecondsTimer
   840 ;;                  _vHandle20sTimeron
   841 ;;                 _vHandle20sTimerOut
   842 ;;                             _setPA6
   843 ;;               _clearPinPortAndTimer
   844 ;;               _startThreeHoursTimer
   845 ;;          _isFinishedThreeHoursTimer
   846 ;;               _clearThreeHoursTimer
   847 ;;                             _setPA2
   848 ;;                      _clearAllTimer
   849 ;; ---------------------------------------------------------------------------------
   850 ;; (1) _vHandle20sTimeron                                    0     0      0    1306
   851 ;;              _getAdOriginalCh2Value
   852 ;;              _getAdOriginalCh6Value
   853 ;;                     _vPause20sTimer
   854 ;;                             _setPA3
   855 ;;                             _setPB6
   856 ;;                      _setPB6AsInput
   857 ;; ---------------------------------------------------------------------------------
   858 ;; (1) _process_AD_Converter_Value                           0     0      0      66
   859 ;;                  _getAD_ConvertFlag
   860 ;;                  _setAD_ConvertFlag
   861 ;;                          _AD_Sample
   862 ;;                          _adc_start
   863 ;; ---------------------------------------------------------------------------------
   864 ;; (1) _clearParaFunction1                                   0     0      0     154
   865 ;;                             _setPA1
   866 ;;                             _setPA0
   867 ;;                             _setPB0
   868 ;;                             _setPB1
   869 ;;                             _setPB2
   870 ;;                      _clearAllTimer
   871 ;;                             _setPA3
   872 ;;                             _setPB4
   873 ;; ---------------------------------------------------------------------------------
   874 ;; (1) _clearPinPortAndTimer                                 0     0      0       0
   875 ;;                      _clearAllTimer
   876 ;; ---------------------------------------------------------------------------------
   877 ;; (2) _AD_Sample                                            0     0      0      44
   878 ;;                      _adc_test_init
   879 ;; ---------------------------------------------------------------------------------
   880 ;; (2) _getAdOriginalCh2Value                                2     0      2     620
   881 ;;                                             38 BANK0      2     0      2
   882 ;;                             _Filter
   883 ;; ---------------------------------------------------------------------------------
   884 ;; (1) _vHandle20sTimerOut                                   1     1      0      89
   885 ;;                                              1 BANK0      1     1      0
   886 ;;                             _setPA3
   887 ;;                             _setPB4
   888 ;;                             _setPB6
   889 ;;                      _setPB6AsInput
   890 ;;            _clearTwentySecondsTimer
   891 ;; ---------------------------------------------------------------------------------
   892 ;; (1) _getAdOriginalCh5Value                                2     0      2     620
   893 ;;                                             38 BANK0      2     0      2
   894 ;;                             _Filter
   895 ;; ---------------------------------------------------------------------------------
   896 ;; (2) _getAdOriginalCh6Value                                2     0      2     620
   897 ;;                                             38 BANK0      2     0      2
   898 ;;                             _Filter
   899 ;; ---------------------------------------------------------------------------------
   900 ;; (1) _getAdOriginalCh0Value                                2     0      2     620
   901 ;;                                             38 BANK0      2     0      2
   902 ;;                             _Filter
   903 ;; ---------------------------------------------------------------------------------
   904 ;; (1) _clearAllTimer                                        0     0      0       0
   905 ;;              _clearTwelveHoursTimer
   906 ;;               _clearThreeHoursTimer
   907 ;;            _clearTwentySecondsTimer
   908 ;;             _clearTwentyMinuteTimer
   909 ;; ---------------------------------------------------------------------------------
   910 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   911 ;;                                              0 BANK0      1     1      0
   912 ;; ---------------------------------------------------------------------------------
   913 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   914 ;; ---------------------------------------------------------------------------------
   915 ;; (3) _Filter                                              38    36      2     620
   916 ;;                                              0 BANK0     38    36      2
   917 ;; ---------------------------------------------------------------------------------
   918 ;; (2) _vPause20sTimer                                       1     1      0      22
   919 ;;                                              0 BANK0      1     1      0
   920 ;; ---------------------------------------------------------------------------------
   921 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   922 ;; ---------------------------------------------------------------------------------
   923 ;; (1) _startThreeHoursTimer                                 2     0      2      22
   924 ;;                                              0 BANK0      2     0      2
   925 ;; ---------------------------------------------------------------------------------
   926 ;; (1) _isFinishedTwentySecondsTimer                         0     0      0       0
   927 ;; ---------------------------------------------------------------------------------
   928 ;; (1) _startTwentySecondsTimer                              0     0      0       0
   929 ;; ---------------------------------------------------------------------------------
   930 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   931 ;; ---------------------------------------------------------------------------------
   932 ;; (1) _startTwelveHourTimer                                 2     0      2      22
   933 ;;                                              0 BANK0      2     0      2
   934 ;; ---------------------------------------------------------------------------------
   935 ;; (1) _isFinishedTwentyMinuteTimer                          0     0      0       0
   936 ;; ---------------------------------------------------------------------------------
   937 ;; (1) _clrSampeTime                                         0     0      0       0
   938 ;; ---------------------------------------------------------------------------------
   939 ;; (1) _isPermitSampleTime                                   0     0      0       0
   940 ;; ---------------------------------------------------------------------------------
   941 ;; (1) _startTwentyMinuteTimer                               2     0      2      22
   942 ;;                                              0 BANK0      2     0      2
   943 ;; ---------------------------------------------------------------------------------
   944 ;; (2) _adc_start                                            0     0      0       0
   945 ;; ---------------------------------------------------------------------------------
   946 ;; (3) _adc_test_init                                        3     2      1      44
   947 ;;                                              0 BANK0      3     2      1
   948 ;; ---------------------------------------------------------------------------------
   949 ;; (1) _timer1_interrupt_config                              0     0      0       0
   950 ;; ---------------------------------------------------------------------------------
   951 ;; (1) _timer1_config                                        0     0      0       0
   952 ;; ---------------------------------------------------------------------------------
   953 ;; (1) _clock_config                                         0     0      0       0
   954 ;; ---------------------------------------------------------------------------------
   955 ;; (2) _setPB6AsInput                                        0     0      0       0
   956 ;; ---------------------------------------------------------------------------------
   957 ;; (1) _setPA6                                               1     1      0      22
   958 ;;                                              0 BANK0      1     1      0
   959 ;; ---------------------------------------------------------------------------------
   960 ;; (2) _setPB4                                               1     1      0      22
   961 ;;                                              0 BANK0      1     1      0
   962 ;; ---------------------------------------------------------------------------------
   963 ;; (2) _setPB6                                               1     1      0      22
   964 ;;                                              0 BANK0      1     1      0
   965 ;; ---------------------------------------------------------------------------------
   966 ;; (2) _setPA3                                               1     1      0      22
   967 ;;                                              0 BANK0      1     1      0
   968 ;; ---------------------------------------------------------------------------------
   969 ;; (1) _setPA2                                               1     1      0      22
   970 ;;                                              0 BANK0      1     1      0
   971 ;; ---------------------------------------------------------------------------------
   972 ;; (1) _setPA1                                               1     1      0      22
   973 ;;                                              0 BANK0      1     1      0
   974 ;; ---------------------------------------------------------------------------------
   975 ;; (1) _setPA0                                               1     1      0      22
   976 ;;                                              0 BANK0      1     1      0
   977 ;; ---------------------------------------------------------------------------------
   978 ;; (1) _setPB2                                               1     1      0      22
   979 ;;                                              0 BANK0      1     1      0
   980 ;; ---------------------------------------------------------------------------------
   981 ;; (1) _setPB1                                               1     1      0      22
   982 ;;                                              0 BANK0      1     1      0
   983 ;; ---------------------------------------------------------------------------------
   984 ;; (1) _setPB0                                               1     1      0      22
   985 ;;                                              0 BANK0      1     1      0
   986 ;; ---------------------------------------------------------------------------------
   987 ;; (1) _initPin                                              0     0      0       0
   988 ;; ---------------------------------------------------------------------------------
   989 ;; (2) _clearTwentyMinuteTimer                               0     0      0       0
   990 ;; ---------------------------------------------------------------------------------
   991 ;; (2) _clearTwentySecondsTimer                              0     0      0       0
   992 ;; ---------------------------------------------------------------------------------
   993 ;; (2) _clearThreeHoursTimer                                 0     0      0       0
   994 ;; ---------------------------------------------------------------------------------
   995 ;; (2) _clearTwelveHoursTimer                                0     0      0       0
   996 ;; ---------------------------------------------------------------------------------
   997 ;; Estimated maximum stack depth 3
   998 ;; ---------------------------------------------------------------------------------
   999 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1000 ;; ---------------------------------------------------------------------------------
  1001 ;; (4) _ISR                                                  4     4      0     495
  1002 ;;                                              9 COMMON     4     4      0
  1003 ;;                i1_setAD_ConvertFlag
  1004 ;;                            _adc_get
  1005 ;;            _vPutSampleDataIntoTable
  1006 ;; ---------------------------------------------------------------------------------
  1007 ;; (5) i1_setAD_ConvertFlag                                  1     1      0      73
  1008 ;;                                              0 COMMON     1     1      0
  1009 ;; ---------------------------------------------------------------------------------
  1010 ;; (5) _adc_get                                              4     2      2      24
  1011 ;;                                              0 COMMON     4     2      2
  1012 ;; ---------------------------------------------------------------------------------
  1013 ;; (5) _vPutSampleDataIntoTable                              5     2      3     398
  1014 ;;                                              4 COMMON     5     2      3
  1015 ;;                            _adc_get (ARG)
  1016 ;; ---------------------------------------------------------------------------------
  1017 ;; Estimated maximum stack depth 5
  1018 ;; ---------------------------------------------------------------------------------
  1019 ;; Call Graph Graphs:
  1020 ;; _main (ROOT)
  1021 ;;   _initPin
  1022 ;;   _clock_config
  1023 ;;   _timer1_config
  1024 ;;   _timer1_interrupt_config
  1025 ;;   _adc_test_init
  1026 ;;   _adc_start
  1027 ;;   _startTwentyMinuteTimer
  1028 ;;   _process_AD_Converter_Value
  1029 ;;     _getAD_ConvertFlag
  1030 ;;     _setAD_ConvertFlag
  1031 ;;     _AD_Sample
  1032 ;;       _adc_test_init
  1033 ;;     _adc_start
  1034 ;;   _isPermitSampleTime
  1035 ;;   _clrSampeTime
  1036 ;;   _getAdOriginalCh0Value
  1037 ;;     _Filter
  1038 ;;   _isFinishedTwentyMinuteTimer
  1039 ;;   _clearParaFunction1
  1040 ;;     _setPA1
  1041 ;;     _setPA0
  1042 ;;     _setPB0
  1043 ;;     _setPB1
  1044 ;;     _setPB2
  1045 ;;     _clearAllTimer
  1046 ;;       _clearTwelveHoursTimer
  1047 ;;       _clearThreeHoursTimer
  1048 ;;       _clearTwentySecondsTimer
  1049 ;;       _clearTwentyMinuteTimer
  1050 ;;     _setPA3
  1051 ;;     _setPB4
  1052 ;;   _setPA3
  1053 ;;   _setPB4
  1054 ;;   _getAdOriginalCh6Value
  1055 ;;     _Filter
  1056 ;;   _startTwelveHourTimer
  1057 ;;   _isFinishedTwelveHoursTimer
  1058 ;;   _getAdOriginalCh5Value
  1059 ;;     _Filter
  1060 ;;   _setPA1
  1061 ;;   _setPA0
  1062 ;;   _setPB0
  1063 ;;   _setPB1
  1064 ;;   _setPB2
  1065 ;;   _startTwentySecondsTimer
  1066 ;;   _isFinishedTwentySecondsTimer
  1067 ;;   _vHandle20sTimeron
  1068 ;;     _getAdOriginalCh2Value
  1069 ;;       _Filter
  1070 ;;     _getAdOriginalCh6Value
  1071 ;;       _Filter
  1072 ;;     _vPause20sTimer
  1073 ;;     _setPA3
  1074 ;;     _setPB6
  1075 ;;     _setPB6AsInput
  1076 ;;   _vHandle20sTimerOut
  1077 ;;     _setPA3
  1078 ;;     _setPB4
  1079 ;;     _setPB6
  1080 ;;     _setPB6AsInput
  1081 ;;     _clearTwentySecondsTimer
  1082 ;;   _setPA6
  1083 ;;   _clearPinPortAndTimer
  1084 ;;     _clearAllTimer
  1085 ;;       _clearTwelveHoursTimer
  1086 ;;       _clearThreeHoursTimer
  1087 ;;       _clearTwentySecondsTimer
  1088 ;;       _clearTwentyMinuteTimer
  1089 ;;   _startThreeHoursTimer
  1090 ;;   _isFinishedThreeHoursTimer
  1091 ;;   _clearThreeHoursTimer
  1092 ;;   _setPA2
  1093 ;;   _clearAllTimer
  1094 ;;     _clearTwelveHoursTimer
  1095 ;;     _clearThreeHoursTimer
  1096 ;;     _clearTwentySecondsTimer
  1097 ;;     _clearTwentyMinuteTimer
  1098 ;;
  1099 ;; _ISR (ROOT)
  1100 ;;   i1_setAD_ConvertFlag
  1101 ;;   _adc_get
  1102 ;;   _vPutSampleDataIntoTable
  1103 ;;     _adc_get (ARG)
  1104 ;;
  1105 ;; Address spaces:
  1106 ;;Name               Size   Autos  Total    Cost      Usage
  1107 ;;BITCOMMON            E      0       0       0        0.0%
  1108 ;;NULL                 0      0       0       0        0.0%
  1109 ;;CODE                 0      0       0       0        0.0%
  1110 ;;COMMON               E      D       E       1      100.0%
  1111 ;;BITSFR0              0      0       0       1        0.0%
  1112 ;;SFR0                 0      0       0       1        0.0%
  1113 ;;BITSFR1              0      0       0       2        0.0%
  1114 ;;SFR1                 0      0       0       2        0.0%
  1115 ;;STACK                0      0       7       2        0.0%
  1116 ;;ABS                  0      0      E1       3        0.0%
  1117 ;;BITBANK0            50      0       0       4        0.0%
  1118 ;;BITSFR3              0      0       0       4        0.0%
  1119 ;;SFR3                 0      0       0       4        0.0%
  1120 ;;BANK0               50     2A      4F       5       98.8%
  1121 ;;BITSFR2              0      0       0       5        0.0%
  1122 ;;SFR2                 0      0       0       5        0.0%
  1123 ;;DATA                 0      0      E8       6        0.0%
  1124 ;;BITBANK1            50      0       0       7        0.0%
  1125 ;;BANK1               50      0      3C       8       75.0%
  1126 ;;BITBANK3            60      0       0       9        0.0%
  1127 ;;BANK3               60      0      48      10       75.0%
  1128 ;;BITBANK2            60      0       0      11        0.0%
  1129 ;;BANK2               60      0       0      12        0.0%
  1130                           
  1131                           
  1132 ;; *************** function _main *****************
  1133 ;; Defined at:
  1134 ;;		line 672 in file "C:\temp\dev\AK7030-OTP\main.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;		None
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;  uiCh5Value      2   40[BANK0 ] unsigned int 
  1139 ;; Return value:  Size  Location     Type
  1140 ;;		None               void
  1141 ;; Registers used:
  1142 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1143 ;; Tracked objects:
  1144 ;;		On entry : 17F/0
  1145 ;;		On exit  : 60/0
  1146 ;;		Unchanged: FFE00/0
  1147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1148 ;;      Params:         0       0       0       0       0
  1149 ;;      Locals:         0       2       0       0       0
  1150 ;;      Temps:          0       0       0       0       0
  1151 ;;      Totals:         0       2       0       0       0
  1152 ;;Total ram usage:        2 bytes
  1153 ;; Hardware stack levels required when called:    5
  1154 ;; This function calls:
  1155 ;;		_initPin
  1156 ;;		_clock_config
  1157 ;;		_timer1_config
  1158 ;;		_timer1_interrupt_config
  1159 ;;		_adc_test_init
  1160 ;;		_adc_start
  1161 ;;		_startTwentyMinuteTimer
  1162 ;;		_process_AD_Converter_Value
  1163 ;;		_isPermitSampleTime
  1164 ;;		_clrSampeTime
  1165 ;;		_getAdOriginalCh0Value
  1166 ;;		_isFinishedTwentyMinuteTimer
  1167 ;;		_clearParaFunction1
  1168 ;;		_setPA3
  1169 ;;		_setPB4
  1170 ;;		_getAdOriginalCh6Value
  1171 ;;		_startTwelveHourTimer
  1172 ;;		_isFinishedTwelveHoursTimer
  1173 ;;		_getAdOriginalCh5Value
  1174 ;;		_setPA1
  1175 ;;		_setPA0
  1176 ;;		_setPB0
  1177 ;;		_setPB1
  1178 ;;		_setPB2
  1179 ;;		_startTwentySecondsTimer
  1180 ;;		_isFinishedTwentySecondsTimer
  1181 ;;		_vHandle20sTimeron
  1182 ;;		_vHandle20sTimerOut
  1183 ;;		_setPA6
  1184 ;;		_clearPinPortAndTimer
  1185 ;;		_startThreeHoursTimer
  1186 ;;		_isFinishedThreeHoursTimer
  1187 ;;		_clearThreeHoursTimer
  1188 ;;		_setPA2
  1189 ;;		_clearAllTimer
  1190 ;; This function is called by:
  1191 ;;		Startup code after reset
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194  0013                     _main:	
  1195                           
  1196                           ;main.c: 682: static unsigned char bCheckTweHour = 0;
  1197                           ;main.c: 688: initPin();
  1198                           
  1199                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1200  0013  118A  275F  118A   	fcall	_initPin
  1201                           
  1202                           ;main.c: 691: TRISB3 = 1;
  1203  0016  1586               	bsf	6,3
  1204                           
  1205                           ;main.c: 693: TRISB5 = 1;
  1206  0017  1686               	bsf	6,5
  1207                           
  1208                           ;main.c: 695: TRISA7 = 1;
  1209  0018  1785               	bsf	5,7
  1210                           
  1211                           ;main.c: 697: TRISA6 = 1;
  1212  0019  1705               	bsf	5,6
  1213                           
  1214                           ;main.c: 699: clock_config();
  1215  001A  158A  26C6  118A   	fcall	_clock_config
  1216                           
  1217                           ;main.c: 700: timer1_config();
  1218  001D  158A  26D7  118A   	fcall	_timer1_config
  1219                           
  1220                           ;main.c: 701: timer1_interrupt_config();
  1221  0020  158A  26B5  118A   	fcall	_timer1_interrupt_config
  1222                           
  1223                           ;main.c: 703: adc_test_init(0,3);
  1224  0023  3003               	movlw	3
  1225  0024  1283               	bcf	3,5	;RP0=0, select bank0
  1226  0025  00A0               	movwf	?_adc_test_init
  1227  0026  3000               	movlw	0
  1228  0027  118A  274A  118A   	fcall	_adc_test_init
  1229                           
  1230                           ;main.c: 710: adc_start();
  1231  002A  118A  2725  118A   	fcall	_adc_start
  1232                           
  1233                           ;main.c: 723: startTwentyMinuteTimer(60);
  1234  002D  303C               	movlw	60
  1235  002E  00A0               	movwf	?_startTwentyMinuteTimer
  1236  002F  01A1               	clrf	?_startTwentyMinuteTimer+1
  1237  0030  118A  27C5  118A   	fcall	_startTwentyMinuteTimer
  1238  0033                     l5021:	
  1239  0033  0064               	clrwdt	;#
  1240                           
  1241                           ;main.c: 730: process_AD_Converter_Value();
  1242  0034  118A  2711  118A   	fcall	_process_AD_Converter_Value
  1243                           
  1244                           ;main.c: 732: if( isPermitSampleTime() )
  1245  0037  158A  26B8  118A   	fcall	_isPermitSampleTime
  1246  003A  3A00               	xorlw	0
  1247  003B  1903               	skipnz
  1248  003C  2833               	goto	l5021
  1249                           
  1250                           ;main.c: 733: {
  1251                           ;main.c: 736: clrSampeTime();
  1252  003D  118A  2002  118A   	fcall	_clrSampeTime
  1253                           
  1254                           ;main.c: 751: switch(enumMainLoopStep)
  1255  0040  2C54               	goto	l5609
  1256  0041                     l5027:	
  1257                           
  1258                           ;main.c: 754: {
  1259                           ;main.c: 759: static unsigned char ucTimerZeroPoint5s = 0;
  1260                           ;main.c: 761: if(getAdOriginalCh0Value() <= 1950)
  1261  0041  118A  247B  118A   	fcall	_getAdOriginalCh0Value
  1262  0044  3007               	movlw	7
  1263  0045  0247               	subwf	?_getAdOriginalCh0Value+1,w
  1264  0046  309F               	movlw	159
  1265  0047  1903               	skipnz
  1266  0048  0246               	subwf	?_getAdOriginalCh0Value,w
  1267  0049  1803               	skipnc
  1268  004A  284D               	goto	l5031
  1269                           
  1270                           ;main.c: 762: {
  1271                           ;main.c: 763: ucTimerZeroPoint5s++;
  1272  004B  0AEA               	incf	main@ucTimerZeroPoint5s,f
  1273                           
  1274                           ;main.c: 764: }
  1275  004C  284E               	goto	l5033
  1276  004D                     l5031:	
  1277                           
  1278                           ;main.c: 765: else
  1279                           ;main.c: 766: ucTimerZeroPoint5s = 0;
  1280  004D  01EA               	clrf	main@ucTimerZeroPoint5s
  1281  004E                     l5033:	
  1282                           
  1283                           ;main.c: 768: if(ucTimerZeroPoint5s >= 5)
  1284  004E  3005               	movlw	5
  1285  004F  026A               	subwf	main@ucTimerZeroPoint5s,w
  1286  0050  1C03               	skipc
  1287  0051  2855               	goto	l5039
  1288                           
  1289                           ;main.c: 769: {
  1290                           ;main.c: 770: ucTimerZeroPoint5s = 0;
  1291  0052  01EA               	clrf	main@ucTimerZeroPoint5s
  1292                           
  1293                           ;main.c: 771: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  1294  0053  01D0               	clrf	_enumMainLoopStep
  1295  0054  0AD0               	incf	_enumMainLoopStep,f
  1296  0055                     l5039:	
  1297                           
  1298                           ;main.c: 772: }
  1299                           ;main.c: 774: if(isFinishedTwentyMinuteTimer())
  1300  0055  158A  26EB  118A   	fcall	_isFinishedTwentyMinuteTimer
  1301  0058  3A00               	xorlw	0
  1302  0059  1903               	skipnz
  1303  005A  2833               	goto	l5021
  1304  005B                     l5041:	
  1305                           
  1306                           ;main.c: 775: enumMainLoopStep = MAIN_LOOP_STEP_10_HOUR_END;
  1307  005B  3009               	movlw	9
  1308  005C  1283               	bcf	3,5	;RP0=0, select bank0
  1309  005D  00D0               	movwf	_enumMainLoopStep
  1310  005E                     l774:	
  1311                           
  1312                           ;main.c: 776: break;
  1313  005E  2833               	goto	l5021
  1314  005F                     l5043:	
  1315                           
  1316                           ;main.c: 780: {
  1317                           ;main.c: 785: static unsigned char ucTimerZeroPoint3s = 0;
  1318                           ;main.c: 787: static unsigned char ucTimerCntP3s = 0;
  1319                           ;main.c: 790: if(getAdOriginalCh0Value() <= 1950)
  1320  005F  118A  247B  118A   	fcall	_getAdOriginalCh0Value
  1321  0062  3007               	movlw	7
  1322  0063  0247               	subwf	?_getAdOriginalCh0Value+1,w
  1323  0064  309F               	movlw	159
  1324  0065  1903               	skipnz
  1325  0066  0246               	subwf	?_getAdOriginalCh0Value,w
  1326  0067  3003               	movlw	3
  1327  0068  1803               	skipnc
  1328  0069  2873               	goto	L12
  1329                           
  1330                           ;main.c: 791: {
  1331                           ;main.c: 792: ucTimerCntP3s++;
  1332  006A  0ADD               	incf	main@ucTimerCntP3s,f
  1333                           
  1334                           ;main.c: 793: if(ucTimerCntP3s >= 3)
  1335  006B  025D               	subwf	main@ucTimerCntP3s,w
  1336  006C  1C03               	skipc
  1337  006D  2833               	goto	l5021
  1338  006E  3002               	movlw	2
  1339                           
  1340                           ;main.c: 794: {
  1341                           ;main.c: 795: ucTimerCntP3s = 0;
  1342  006F  01DD               	clrf	main@ucTimerCntP3s
  1343                           
  1344                           ;main.c: 797: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
  1345  0070  00D0               	movwf	_enumMainLoopStep
  1346                           
  1347                           ;main.c: 799: ucTimerZeroPoint3s = 0;
  1348  0071  01E9               	clrf	main@ucTimerZeroPoint3s
  1349  0072  2833               	goto	l5021
  1350  0073                     L12:	
  1351                           
  1352                           ;main.c: 803: else
  1353                           ;main.c: 804: {
  1354                           ;main.c: 805: ucTimerZeroPoint3s++;
  1355  0073  0AE9               	incf	main@ucTimerZeroPoint3s,f
  1356                           
  1357                           ;main.c: 807: if(ucTimerZeroPoint3s >= 3)
  1358  0074  0269               	subwf	main@ucTimerZeroPoint3s,w
  1359  0075  1C03               	skipc
  1360  0076  2833               	goto	l5021
  1361                           
  1362                           ;main.c: 808: {
  1363                           ;main.c: 809: ucTimerZeroPoint3s = 0;
  1364  0077  01E9               	clrf	main@ucTimerZeroPoint3s
  1365                           
  1366                           ;main.c: 811: clearParaFunction1();
  1367  0078  118A  2491  118A   	fcall	_clearParaFunction1
  1368  007B  2833               	goto	l5021
  1369  007C                     l5063:	
  1370                           
  1371                           ;main.c: 819: {
  1372                           ;main.c: 824: static unsigned char ucTimerP5s = 0;
  1373                           ;main.c: 826: setPA3(1);
  1374  007C  3001               	movlw	1
  1375  007D  118A  262A  118A   	fcall	_setPA3
  1376                           
  1377                           ;main.c: 827: setPB4(1);
  1378  0080  3001               	movlw	1
  1379  0081  118A  2536  118A   	fcall	_setPB4
  1380                           
  1381                           ;main.c: 829: if(ucTimerP5s < 5)
  1382  0084  3005               	movlw	5
  1383  0085  0267               	subwf	main@ucTimerP5s,w
  1384  0086  1803               	skipnc
  1385  0087  288A               	goto	l5069
  1386                           
  1387                           ;main.c: 830: ucTimerP5s++;
  1388  0088  0AE7               	incf	main@ucTimerP5s,f
  1389  0089  2833               	goto	l5021
  1390  008A                     l5069:	
  1391  008A  303C               	movlw	60
  1392                           
  1393                           ;main.c: 831: else
  1394                           ;main.c: 832: {
  1395                           ;main.c: 833: ucTimerP5s = 0;
  1396  008B  01E7               	clrf	main@ucTimerP5s
  1397                           
  1398                           ;main.c: 835: startTwentyMinuteTimer(60);
  1399  008C  00A0               	movwf	?_startTwentyMinuteTimer
  1400  008D  01A1               	clrf	?_startTwentyMinuteTimer+1
  1401  008E  118A  27C5  118A   	fcall	_startTwentyMinuteTimer
  1402                           
  1403                           ;main.c: 837: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  1404  0091  3003               	movlw	3
  1405  0092  2BB8               	goto	L1
  1406  0093                     l5075:	
  1407                           
  1408                           ;main.c: 844: {
  1409                           ;main.c: 849: static unsigned char ucTimerLessZeroP5s = 0;
  1410                           ;main.c: 851: static unsigned char ucTimerLargeZeroP5s = 0;
  1411                           ;main.c: 854: static unsigned char ucTimerRightP5s = 0;
  1412                           ;main.c: 856: if(getAdOriginalCh6Value() <= 85)
  1413  0093  118A  2633  118A   	fcall	_getAdOriginalCh6Value
  1414  0096  3000               	movlw	0
  1415  0097  0247               	subwf	?_getAdOriginalCh6Value+1,w
  1416  0098  3056               	movlw	86
  1417  0099  1903               	skipnz
  1418  009A  0246               	subwf	?_getAdOriginalCh6Value,w
  1419  009B  1803               	skipnc
  1420  009C  28A0               	goto	l5081
  1421                           
  1422                           ;main.c: 857: {
  1423                           ;main.c: 858: ucTimerLargeZeroP5s = 0;
  1424  009D  01E5               	clrf	main@ucTimerLargeZeroP5s
  1425                           
  1426                           ;main.c: 860: ucTimerLessZeroP5s++;
  1427  009E  0AE6               	incf	main@ucTimerLessZeroP5s,f
  1428                           
  1429                           ;main.c: 861: }
  1430  009F  28A3               	goto	l5087
  1431  00A0                     l5081:	
  1432                           
  1433                           ;main.c: 862: else
  1434                           ;main.c: 863: {
  1435                           ;main.c: 864: ucTimerLargeZeroP5s++;
  1436  00A0  0AE5               	incf	main@ucTimerLargeZeroP5s,f
  1437                           
  1438                           ;main.c: 866: ucTimerLessZeroP5s = 0;
  1439  00A1  01E6               	clrf	main@ucTimerLessZeroP5s
  1440                           
  1441                           ;main.c: 868: ucTimerRightP5s = 0;
  1442  00A2  01E8               	clrf	main@ucTimerRightP5s
  1443  00A3                     l5087:	
  1444                           
  1445                           ;main.c: 869: }
  1446                           ;main.c: 871: if(ucTimerLargeZeroP5s >= 3)
  1447  00A3  3003               	movlw	3
  1448  00A4  0265               	subwf	main@ucTimerLargeZeroP5s,w
  1449  00A5  1C03               	skipc
  1450  00A6  28AA               	goto	l5093
  1451  00A7  3004               	movlw	4
  1452                           
  1453                           ;main.c: 872: {
  1454                           ;main.c: 873: ucTimerLargeZeroP5s = 0;
  1455  00A8  01E5               	clrf	main@ucTimerLargeZeroP5s
  1456                           
  1457                           ;main.c: 874: enumMainLoopStep = MAIN_LOOP_STEP_FOURTH;
  1458  00A9  28C2               	goto	L2
  1459  00AA                     l5093:	
  1460                           ;main.c: 875: }
  1461                           
  1462                           
  1463                           ;main.c: 876: else if( ucTimerLessZeroP5s >= 3)
  1464  00AA  3003               	movlw	3
  1465  00AB  0266               	subwf	main@ucTimerLessZeroP5s,w
  1466  00AC  1C03               	skipc
  1467  00AD  28C3               	goto	l5107
  1468                           
  1469                           ;main.c: 877: {
  1470                           ;main.c: 879: if(getAdOriginalCh6Value() < 65)
  1471  00AE  118A  2633  118A   	fcall	_getAdOriginalCh6Value
  1472  00B1  3000               	movlw	0
  1473  00B2  0247               	subwf	?_getAdOriginalCh6Value+1,w
  1474  00B3  3041               	movlw	65
  1475  00B4  1903               	skipnz
  1476  00B5  0246               	subwf	?_getAdOriginalCh6Value,w
  1477  00B6  1803               	skipnc
  1478  00B7  28BA               	goto	l5099
  1479                           
  1480                           ;main.c: 880: {
  1481                           ;main.c: 881: ucTimerRightP5s++;
  1482  00B8  0AE8               	incf	main@ucTimerRightP5s,f
  1483                           
  1484                           ;main.c: 882: }
  1485  00B9  28BB               	goto	l5101
  1486  00BA                     l5099:	
  1487                           
  1488                           ;main.c: 883: else
  1489                           ;main.c: 884: {
  1490                           ;main.c: 885: ucTimerRightP5s = 0;
  1491  00BA  01E8               	clrf	main@ucTimerRightP5s
  1492  00BB                     l5101:	
  1493                           
  1494                           ;main.c: 886: }
  1495                           ;main.c: 888: if(ucTimerRightP5s >= 3)
  1496  00BB  3003               	movlw	3
  1497  00BC  0268               	subwf	main@ucTimerRightP5s,w
  1498  00BD  1C03               	skipc
  1499  00BE  28C3               	goto	l5107
  1500  00BF  3008               	movlw	8
  1501                           
  1502                           ;main.c: 889: {
  1503                           ;main.c: 890: ucTimerLargeZeroP5s = 0;
  1504  00C0  01E5               	clrf	main@ucTimerLargeZeroP5s
  1505                           
  1506                           ;main.c: 891: ucTimerRightP5s = 0;
  1507  00C1  01E8               	clrf	main@ucTimerRightP5s
  1508  00C2                     L2:	
  1509                           ;main.c: 892: enumMainLoopStep = MAIN_LOOP_STEP_3_HOUR_BRANCH;
  1510                           
  1511  00C2  00D0               	movwf	_enumMainLoopStep
  1512  00C3                     l5107:	
  1513                           ;main.c: 899: else
  1514                           ;main.c: 900: {
  1515                           ;main.c: 901: ;
  1516                           
  1517                           ;main.c: 893: }
  1518                           
  1519                           
  1520                           ;main.c: 902: }
  1521                           ;main.c: 904: if((MAIN_LOOP_STEP_3_HOUR_BRANCH == enumMainLoopStep) || (MAIN_LOOP_STEP_F
      +                          OURTH == enumMainLoopStep))
  1522  00C3  0850               	movf	_enumMainLoopStep,w
  1523  00C4  3A08               	xorlw	8
  1524  00C5  1903               	skipnz
  1525  00C6  28CB               	goto	l5111
  1526  00C7  0850               	movf	_enumMainLoopStep,w
  1527  00C8  3A04               	xorlw	4
  1528  00C9  1D03               	skipz
  1529  00CA  2833               	goto	l5021
  1530  00CB                     l5111:	
  1531                           
  1532                           ;main.c: 905: {
  1533                           ;main.c: 906: ucTimerRightP5s = 0;
  1534  00CB  01E8               	clrf	main@ucTimerRightP5s
  1535                           
  1536                           ;main.c: 907: ucTimerLargeZeroP5s = 0;
  1537  00CC  01E5               	clrf	main@ucTimerLargeZeroP5s
  1538                           
  1539                           ;main.c: 908: ucTimerLessZeroP5s = 0;
  1540  00CD  01E6               	clrf	main@ucTimerLessZeroP5s
  1541  00CE  2833               	goto	l5021
  1542  00CF                     l5113:	
  1543                           
  1544                           ;main.c: 916: {
  1545                           ;main.c: 922: startTwelveHourTimer(300);
  1546  00CF  302C               	movlw	44
  1547  00D0  00A0               	movwf	?_startTwelveHourTimer
  1548  00D1  3001               	movlw	1
  1549  00D2  00A1               	movwf	?_startTwelveHourTimer+1
  1550  00D3  118A  27B1  118A   	fcall	_startTwelveHourTimer
  1551                           
  1552                           ;main.c: 923: enumMainLoopStep = MAIN_LOOP_STEP_FIFTH;
  1553  00D6  3005               	movlw	5
  1554  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  1555  00D8  00D0               	movwf	_enumMainLoopStep
  1556                           
  1557                           ;main.c: 925: bCheckTweHour = 0;
  1558  00D9  01D5               	clrf	main@bCheckTweHour
  1559                           
  1560                           ;main.c: 927: break;
  1561  00DA  2833               	goto	l5021
  1562  00DB                     l5119:	
  1563                           
  1564                           ;main.c: 931: {
  1565                           ;main.c: 935: if(( isFinishedTwelveHoursTimer() && (! bCheckTweHour)))
  1566  00DB  158A  26F7  118A   	fcall	_isFinishedTwelveHoursTimer
  1567  00DE  3A00               	xorlw	0
  1568  00DF  1903               	skipnz
  1569  00E0  2B43               	goto	l5501
  1570  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  1571  00E2  08D5               	movf	main@bCheckTweHour,f
  1572  00E3  1D03               	skipz
  1573  00E4  2B43               	goto	l5501
  1574                           
  1575                           ;main.c: 936: {
  1576                           ;main.c: 937: enumMainLoopStep = MAIN_LOOP_STEP_10_HOUR_END;
  1577  00E5  3009               	movlw	9
  1578  00E6  00D0               	movwf	_enumMainLoopStep
  1579                           
  1580                           ;main.c: 938: bCheckTweHour = 1;
  1581  00E7  01D5               	clrf	main@bCheckTweHour
  1582  00E8  0AD5               	incf	main@bCheckTweHour,f
  1583                           
  1584                           ;main.c: 939: }
  1585  00E9  2833               	goto	l5021
  1586  00EA                     l815:	
  1587                           ;main.c: 944: {
  1588                           ;main.c: 945: case ADC4_STEP_INIT:
  1589                           
  1590                           
  1591                           ;main.c: 946: {
  1592                           ;main.c: 951: ucADC4_Step = ADC4_STEP_FIRST;
  1593  00EA  01D3               	clrf	_ucADC4_Step
  1594  00EB  0AD3               	incf	_ucADC4_Step,f
  1595                           
  1596                           ;main.c: 952: break;
  1597  00EC  2833               	goto	l5021
  1598  00ED                     l5127:	
  1599                           
  1600                           ;main.c: 966: uiCh5Value = getAdOriginalCh5Value();
  1601  00ED  118A  2471  118A   	fcall	_getAdOriginalCh5Value
  1602  00F0  0847               	movf	?_getAdOriginalCh5Value+1,w
  1603  00F1  00C9               	movwf	main@uiCh5Value+1
  1604  00F2  0846               	movf	?_getAdOriginalCh5Value,w
  1605  00F3  00C8               	movwf	main@uiCh5Value
  1606                           
  1607                           ;main.c: 968: if( 0 == bInitFlag)
  1608  00F4  08D6               	movf	main@bInitFlag,f
  1609  00F5  1D03               	skipz
  1610  00F6  28FD               	goto	l5137
  1611                           
  1612                           ;main.c: 969: {
  1613                           ;main.c: 970: bInitFlag = 1;
  1614  00F7  01D6               	clrf	main@bInitFlag
  1615  00F8  0AD6               	incf	main@bInitFlag,f
  1616                           
  1617                           ;main.c: 971: uiOldValue = uiCh5Value;
  1618  00F9  0849               	movf	main@uiCh5Value+1,w
  1619  00FA  00CB               	movwf	main@uiOldValue+1
  1620  00FB  0848               	movf	main@uiCh5Value,w
  1621  00FC  00CA               	movwf	main@uiOldValue
  1622  00FD                     l5137:	
  1623                           
  1624                           ;main.c: 972: }
  1625                           ;main.c: 981: if(LESS_THAN_1911 == ucChannel5Type)
  1626  00FD  08D4               	movf	_ucChannel5Type,f
  1627  00FE  1D03               	skipz
  1628  00FF  2905               	goto	l5143
  1629                           
  1630                           ;main.c: 982: {
  1631                           ;main.c: 983: uiMinValue = 0;
  1632  0100  1683               	bsf	3,5	;RP0=1, select bank1
  1633  0101  308B               	movlw	139
  1634  0102  01AA               	clrf	main@uiMinValue^(0+128)
  1635  0103  01AB               	clrf	(main@uiMinValue+1)^(0+128)
  1636                           
  1637                           ;main.c: 984: uiMaxValue = 1931;
  1638  0104  290D               	goto	L8
  1639  0105                     l5143:	
  1640                           ;main.c: 985: }
  1641                           
  1642                           
  1643                           ;main.c: 986: else if(BETWEEN_1911_AND_2067 == ucChannel5Type)
  1644  0105  0B54               	decfsz	_ucChannel5Type,w
  1645  0106  2910               	goto	l5147
  1646                           
  1647                           ;main.c: 987: {
  1648                           ;main.c: 988: uiMinValue = 1931 - 40;
  1649  0107  3063               	movlw	99
  1650  0108  1683               	bsf	3,5	;RP0=1, select bank1
  1651  0109  00AA               	movwf	main@uiMinValue^(0+128)
  1652  010A  3007               	movlw	7
  1653  010B  00AB               	movwf	(main@uiMinValue^(0+128)+1)
  1654                           
  1655                           ;main.c: 989: uiMaxValue = 2047;
  1656  010C  30FF               	movlw	255
  1657  010D                     L8:	
  1658  010D  00A8               	movwf	main@uiMaxValue^(0+128)
  1659  010E  3007               	movlw	7
  1660  010F  2929               	goto	L3
  1661  0110                     l5147:	
  1662                           ;main.c: 990: }
  1663                           
  1664                           
  1665                           ;main.c: 991: else if(BETWEEN_2067_AND_2204 == ucChannel5Type)
  1666  0110  0854               	movf	_ucChannel5Type,w
  1667  0111  3A02               	xorlw	2
  1668  0112  1D03               	skipz
  1669  0113  291B               	goto	l5151
  1670                           
  1671                           ;main.c: 992: {
  1672                           ;main.c: 993: uiMinValue = 2047 - 40;
  1673  0114  30D7               	movlw	215
  1674  0115  1683               	bsf	3,5	;RP0=1, select bank1
  1675  0116  00AA               	movwf	main@uiMinValue^(0+128)
  1676  0117  3007               	movlw	7
  1677  0118  00AB               	movwf	(main@uiMinValue^(0+128)+1)
  1678                           
  1679                           ;main.c: 994: uiMaxValue = 2164;
  1680  0119  3074               	movlw	116
  1681  011A  2927               	goto	L9
  1682  011B                     l5151:	
  1683                           ;main.c: 995: }
  1684                           
  1685                           
  1686                           ;main.c: 996: else if(BETWEEN_2204_AND_2340 == ucChannel5Type)
  1687  011B  0854               	movf	_ucChannel5Type,w
  1688  011C  3A03               	xorlw	3
  1689  011D  1D03               	skipz
  1690  011E  2921               	goto	l5155
  1691                           
  1692                           ;main.c: 997: {
  1693                           ;main.c: 998: uiMinValue = 2164 - 40;
  1694  011F  304C               	movlw	76
  1695  0120  2922               	goto	L10
  1696  0121                     l5155:	
  1697                           ;main.c: 1000: }
  1698                           
  1699                           ;main.c: 999: uiMaxValue = 2281;
  1700                           
  1701                           
  1702                           ;main.c: 1001: else
  1703                           ;main.c: 1002: {
  1704                           ;main.c: 1003: uiMinValue = 2281 - 40;
  1705  0121  30C1               	movlw	193
  1706  0122                     L10:	
  1707  0122  1683               	bsf	3,5	;RP0=1, select bank1
  1708  0123  00AA               	movwf	main@uiMinValue^(0+128)
  1709  0124  3008               	movlw	8
  1710  0125  00AB               	movwf	(main@uiMinValue^(0+128)+1)
  1711                           
  1712                           ;main.c: 1004: uiMaxValue = 2281;
  1713  0126  30E9               	movlw	233
  1714  0127                     L9:	
  1715  0127  00A8               	movwf	main@uiMaxValue^(0+128)
  1716  0128  3008               	movlw	8
  1717  0129                     L3:	
  1718  0129  00A9               	movwf	(main@uiMaxValue^(0+128)+1)
  1719                           
  1720                           ;main.c: 1005: }
  1721                           ;main.c: 1008: if(( uiCh5Value < uiMinValue )
  1722                           ;main.c: 1009: || ( uiCh5Value > uiMaxValue ))
  1723  012A  082B               	movf	(main@uiMinValue+1)^(0+128),w
  1724  012B  1283               	bcf	3,5	;RP0=0, select bank0
  1725  012C  0249               	subwf	main@uiCh5Value+1,w
  1726  012D  1D03               	skipz
  1727  012E  2933               	goto	u2445
  1728  012F  1683               	bsf	3,5	;RP0=1, select bank1
  1729  0130  082A               	movf	main@uiMinValue^(0+128),w
  1730  0131  1283               	bcf	3,5	;RP0=0, select bank0
  1731  0132  0248               	subwf	main@uiCh5Value,w
  1732  0133                     u2445:	
  1733  0133  1C03               	skipc
  1734  0134  2940               	goto	l5159
  1735  0135  0849               	movf	main@uiCh5Value+1,w
  1736  0136  1683               	bsf	3,5	;RP0=1, select bank1
  1737  0137  0229               	subwf	(main@uiMaxValue+1)^(0+128),w
  1738  0138  1D03               	skipz
  1739  0139  293E               	goto	u2455
  1740  013A  1283               	bcf	3,5	;RP0=0, select bank0
  1741  013B  0848               	movf	main@uiCh5Value,w
  1742  013C  1683               	bsf	3,5	;RP0=1, select bank1
  1743  013D  0228               	subwf	main@uiMaxValue^(0+128),w
  1744  013E                     u2455:	
  1745  013E  1803               	skipnc
  1746  013F  2945               	goto	l835
  1747  0140                     l5159:	
  1748                           
  1749                           ;main.c: 1010: {
  1750                           ;main.c: 1011: uiOldValue = uiCh5Value;
  1751  0140  1283               	bcf	3,5	;RP0=0, select bank0
  1752  0141  0849               	movf	main@uiCh5Value+1,w
  1753  0142  00CB               	movwf	main@uiOldValue+1
  1754  0143  0848               	movf	main@uiCh5Value,w
  1755  0144  00CA               	movwf	main@uiOldValue
  1756  0145                     l835:	
  1757                           
  1758                           ;main.c: 1012: }
  1759                           ;main.c: 1014: if( uiOldValue < 1931 )
  1760  0145  3007               	movlw	7
  1761  0146  1283               	bcf	3,5	;RP0=0, select bank0
  1762  0147  024B               	subwf	main@uiOldValue+1,w
  1763  0148  308B               	movlw	139
  1764  0149  1903               	skipnz
  1765  014A  024A               	subwf	main@uiOldValue,w
  1766  014B  1803               	skipnc
  1767  014C  294F               	goto	l5163
  1768                           
  1769                           ;main.c: 1015: ucChannel5Type = LESS_THAN_1911;
  1770  014D  01D4               	clrf	_ucChannel5Type
  1771  014E  296D               	goto	l839
  1772  014F                     l5163:	
  1773                           
  1774                           ;main.c: 1016: else if( uiOldValue < 2047 )
  1775  014F  3007               	movlw	7
  1776  0150  024B               	subwf	main@uiOldValue+1,w
  1777  0151  30FF               	movlw	255
  1778  0152  1903               	skipnz
  1779  0153  024A               	subwf	main@uiOldValue,w
  1780  0154  1803               	skipnc
  1781  0155  2959               	goto	l5167
  1782                           
  1783                           ;main.c: 1017: ucChannel5Type = BETWEEN_1911_AND_2067;
  1784  0156  01D4               	clrf	_ucChannel5Type
  1785  0157  0AD4               	incf	_ucChannel5Type,f
  1786  0158  296D               	goto	l839
  1787  0159                     l5167:	
  1788                           
  1789                           ;main.c: 1018: else if( uiOldValue < 2164 )
  1790  0159  3008               	movlw	8
  1791  015A  024B               	subwf	main@uiOldValue+1,w
  1792  015B  3074               	movlw	116
  1793  015C  1903               	skipnz
  1794  015D  024A               	subwf	main@uiOldValue,w
  1795  015E  1803               	skipnc
  1796  015F  2962               	goto	l5171
  1797                           
  1798                           ;main.c: 1019: ucChannel5Type = BETWEEN_2067_AND_2204;
  1799  0160  3002               	movlw	2
  1800  0161  296C               	goto	L4
  1801  0162                     l5171:	
  1802                           
  1803                           ;main.c: 1020: else if( uiOldValue < 2281 )
  1804  0162  3008               	movlw	8
  1805  0163  024B               	subwf	main@uiOldValue+1,w
  1806  0164  30E9               	movlw	233
  1807  0165  1903               	skipnz
  1808  0166  024A               	subwf	main@uiOldValue,w
  1809  0167  1803               	skipnc
  1810  0168  296B               	goto	l5175
  1811                           
  1812                           ;main.c: 1021: ucChannel5Type = BETWEEN_2204_AND_2340;
  1813  0169  3003               	movlw	3
  1814  016A  296C               	goto	L4
  1815  016B                     l5175:	
  1816                           
  1817                           ;main.c: 1022: else
  1818                           ;main.c: 1023: ucChannel5Type = MORE_THAN_2340;
  1819  016B  3004               	movlw	4
  1820  016C                     L4:	
  1821  016C  00D4               	movwf	_ucChannel5Type
  1822  016D                     l839:	
  1823                           
  1824                           ;main.c: 1025: ucADC4_Step = ADC4_STEP_SECOND;
  1825  016D  3002               	movlw	2
  1826  016E  2B36               	goto	L6
  1827  016F                     l5177:	
  1828                           ;main.c: 1026: break;
  1829                           
  1830                           
  1831                           ;main.c: 1045: {
  1832                           ;main.c: 1046: setPA1(1);
  1833  016F  3001               	movlw	1
  1834  0170  118A  24C8  118A   	fcall	_setPA1
  1835  0173                     l5179:	
  1836                           
  1837                           ;main.c: 1047: ucLoaderStep++;
  1838  0173  0AD8               	incf	main@ucLoaderStep,f
  1839                           
  1840                           ;main.c: 1048: break;
  1841  0174  2833               	goto	l5021
  1842  0175                     l5181:	
  1843                           
  1844                           ;main.c: 1052: {
  1845                           ;main.c: 1053: if(ucTimerDelay >= 5)
  1846  0175  3005               	movlw	5
  1847  0176  025E               	subwf	main@ucTimerDelay,w
  1848  0177  1C03               	skipc
  1849  0178  297F               	goto	l5189
  1850                           
  1851                           ;main.c: 1054: {
  1852                           ;main.c: 1055: setPA0(1);
  1853  0179  3001               	movlw	1
  1854  017A  118A  24BF  118A   	fcall	_setPA0
  1855  017D                     l5185:	
  1856                           
  1857                           ;main.c: 1056: ucTimerDelay = 0;
  1858  017D  01DE               	clrf	main@ucTimerDelay
  1859  017E  2973               	goto	l5179
  1860  017F                     l5189:	
  1861                           
  1862                           ;main.c: 1059: else
  1863                           ;main.c: 1060: ucTimerDelay++;
  1864  017F  0ADE               	incf	main@ucTimerDelay,f
  1865  0180  2833               	goto	l5021
  1866  0181                     l5191:	
  1867                           
  1868                           ;main.c: 1065: {
  1869                           ;main.c: 1066: if(ucTimerDelay >= 5)
  1870  0181  3005               	movlw	5
  1871  0182  025E               	subwf	main@ucTimerDelay,w
  1872  0183  1C03               	skipc
  1873  0184  297F               	goto	l5189
  1874                           
  1875                           ;main.c: 1067: {
  1876                           ;main.c: 1068: setPB0(1);
  1877  0185  3001               	movlw	1
  1878  0186  118A  24A7  118A   	fcall	_setPB0
  1879  0189  297D               	goto	l5185
  1880  018A                     l5201:	
  1881                           
  1882                           ;main.c: 1079: {
  1883                           ;main.c: 1080: if(ucTimerDelay >= 5)
  1884  018A  3005               	movlw	5
  1885  018B  025E               	subwf	main@ucTimerDelay,w
  1886  018C  1C03               	skipc
  1887  018D  297F               	goto	l5189
  1888                           
  1889                           ;main.c: 1081: {
  1890                           ;main.c: 1082: setPB1(1);
  1891  018E  3001               	movlw	1
  1892  018F  118A  24AF  118A   	fcall	_setPB1
  1893  0192  297D               	goto	l5185
  1894  0193                     l5211:	
  1895                           
  1896                           ;main.c: 1092: {
  1897                           ;main.c: 1093: if(ucTimerDelay >= 5)
  1898  0193  3005               	movlw	5
  1899  0194  025E               	subwf	main@ucTimerDelay,w
  1900  0195  1C03               	skipc
  1901  0196  297F               	goto	l5189
  1902                           
  1903                           ;main.c: 1094: {
  1904                           ;main.c: 1095: setPB2(1);
  1905  0197  3001               	movlw	1
  1906  0198  118A  24B7  118A   	fcall	_setPB2
  1907  019B  297D               	goto	l5185
  1908  019C                     l5221:	
  1909                           
  1910                           ;main.c: 1105: {
  1911                           ;main.c: 1106: if(ucTimerDelay >= 5)
  1912  019C  3005               	movlw	5
  1913  019D  025E               	subwf	main@ucTimerDelay,w
  1914  019E  1C03               	skipc
  1915  019F  297F               	goto	l5189
  1916                           
  1917                           ;main.c: 1107: {
  1918                           ;main.c: 1108: setPA1(0);
  1919  01A0  3000               	movlw	0
  1920  01A1  118A  24C8  118A   	fcall	_setPA1
  1921                           
  1922                           ;main.c: 1109: setPA0(0);
  1923  01A4  3000               	movlw	0
  1924  01A5  118A  24BF  118A   	fcall	_setPA0
  1925                           
  1926                           ;main.c: 1110: setPB0(0);
  1927  01A8  3000               	movlw	0
  1928  01A9  118A  24A7  118A   	fcall	_setPB0
  1929                           
  1930                           ;main.c: 1111: setPB1(0);
  1931  01AC  3000               	movlw	0
  1932  01AD  118A  24AF  118A   	fcall	_setPB1
  1933                           
  1934                           ;main.c: 1112: setPB2(0);
  1935  01B0  3000               	movlw	0
  1936  01B1  118A  24B7  118A   	fcall	_setPB2
  1937  01B4  297D               	goto	l5185
  1938  01B5                     l5231:	
  1939                           
  1940                           ;main.c: 1122: {
  1941                           ;main.c: 1123: if(ucTimerDelay >= 1)
  1942  01B5  085E               	movf	main@ucTimerDelay,w
  1943  01B6  1903               	btfsc	3,2
  1944  01B7  297F               	goto	l5189
  1945                           
  1946                           ;main.c: 1124: {
  1947                           ;main.c: 1125: ucTimerDelay = 0;
  1948  01B8  01DE               	clrf	main@ucTimerDelay
  1949                           
  1950                           ;main.c: 1127: ucLoaderStep = 0;
  1951  01B9  01D8               	clrf	main@ucLoaderStep
  1952  01BA                     l5235:	
  1953                           
  1954                           ;main.c: 1128: ucADC4_Step = ADC4_STEP_THIRD;
  1955  01BA  3003               	movlw	3
  1956  01BB  2B36               	goto	L6
  1957  01BC                     l5241:	
  1958                           ;main.c: 1129: }
  1959                           
  1960  01BC  0858               	movf	main@ucLoaderStep,w
  1961                           
  1962                           ; Switch size 1, requested type "space"
  1963                           ; Number of cases is 7, Range of values is 0 to 6
  1964                           ; switch strategies available:
  1965                           ; Name         Instructions Cycles
  1966                           ; direct_byte           21     7 (fixed)
  1967                           ; simple_byte           22    12 (average)
  1968                           ; jumptable            260     6 (fixed)
  1969                           ; rangetable            11     6 (fixed)
  1970                           ; spacedrange           20     9 (fixed)
  1971                           ; locatedrange           7     3 (fixed)
  1972                           ;	Chosen strategy is direct_byte
  1973  01BD  0084               	movwf	4
  1974  01BE  3007               	movlw	7
  1975  01BF  0204               	subwf	4,w
  1976  01C0  1803               	skipnc
  1977  01C1  2833               	goto	l5021
  1978  01C2  3007               	movlw	high S5827
  1979  01C3  008A               	movwf	10
  1980  01C4  1003               	clrc
  1981  01C5  0D04               	rlf	4,w
  1982  01C6  3EEA               	addlw	low S5827
  1983  01C7  0082               	movwf	2
  1984  01C8                     l5243:	
  1985                           
  1986                           ;main.c: 1150: {
  1987                           ;main.c: 1151: setPA1(1);
  1988  01C8  3001               	movlw	1
  1989  01C9  118A  24C8  118A   	fcall	_setPA1
  1990  01CC                     l5245:	
  1991                           
  1992                           ;main.c: 1152: ucLoaderStep1++;
  1993  01CC  0AD9               	incf	main@ucLoaderStep1,f
  1994                           
  1995                           ;main.c: 1153: break;
  1996  01CD  2833               	goto	l5021
  1997  01CE                     l5247:	
  1998                           
  1999                           ;main.c: 1157: {
  2000                           ;main.c: 1158: if(ucTimerDelay1 >= 5)
  2001  01CE  3005               	movlw	5
  2002  01CF  025F               	subwf	main@ucTimerDelay1,w
  2003  01D0  1C03               	skipc
  2004  01D1  29D8               	goto	l5255
  2005                           
  2006                           ;main.c: 1159: {
  2007                           ;main.c: 1160: setPA0(1);
  2008  01D2  3001               	movlw	1
  2009  01D3  118A  24BF  118A   	fcall	_setPA0
  2010  01D6                     l5251:	
  2011                           
  2012                           ;main.c: 1161: ucTimerDelay1 = 0;
  2013  01D6  01DF               	clrf	main@ucTimerDelay1
  2014  01D7  29CC               	goto	l5245
  2015  01D8                     l5255:	
  2016                           
  2017                           ;main.c: 1164: else
  2018                           ;main.c: 1165: ucTimerDelay1++;
  2019  01D8  0ADF               	incf	main@ucTimerDelay1,f
  2020  01D9  2833               	goto	l5021
  2021  01DA                     l5257:	
  2022                           
  2023                           ;main.c: 1170: {
  2024                           ;main.c: 1171: if(ucTimerDelay1 >= 5)
  2025  01DA  3005               	movlw	5
  2026  01DB  025F               	subwf	main@ucTimerDelay1,w
  2027  01DC  1C03               	skipc
  2028  01DD  29D8               	goto	l5255
  2029                           
  2030                           ;main.c: 1172: {
  2031                           ;main.c: 1173: setPB0(1);
  2032  01DE  3001               	movlw	1
  2033  01DF  118A  24A7  118A   	fcall	_setPB0
  2034  01E2  29D6               	goto	l5251
  2035  01E3                     l5267:	
  2036                           
  2037                           ;main.c: 1183: {
  2038                           ;main.c: 1184: if(ucTimerDelay1 >= 5)
  2039  01E3  3005               	movlw	5
  2040  01E4  025F               	subwf	main@ucTimerDelay1,w
  2041  01E5  1C03               	skipc
  2042  01E6  29D8               	goto	l5255
  2043                           
  2044                           ;main.c: 1185: {
  2045                           ;main.c: 1187: setPB1(1);
  2046  01E7  3001               	movlw	1
  2047  01E8  118A  24AF  118A   	fcall	_setPB1
  2048  01EB  29D6               	goto	l5251
  2049  01EC                     l5277:	
  2050                           
  2051                           ;main.c: 1197: {
  2052                           ;main.c: 1198: if(ucTimerDelay1 >= 5)
  2053  01EC  3005               	movlw	5
  2054  01ED  025F               	subwf	main@ucTimerDelay1,w
  2055  01EE  1C03               	skipc
  2056  01EF  29D8               	goto	l5255
  2057                           
  2058                           ;main.c: 1199: {
  2059                           ;main.c: 1201: setPB2(1);
  2060  01F0  3001               	movlw	1
  2061  01F1  118A  24B7  118A   	fcall	_setPB2
  2062  01F4  29D6               	goto	l5251
  2063  01F5                     l5287:	
  2064                           
  2065                           ;main.c: 1211: {
  2066                           ;main.c: 1212: if(ucTimerDelay1 >= 5)
  2067  01F5  3005               	movlw	5
  2068  01F6  025F               	subwf	main@ucTimerDelay1,w
  2069  01F7  1C03               	skipc
  2070  01F8  29D8               	goto	l5255
  2071                           
  2072                           ;main.c: 1213: {
  2073                           ;main.c: 1214: setPA0(0);
  2074  01F9  3000               	movlw	0
  2075  01FA  118A  24BF  118A   	fcall	_setPA0
  2076                           
  2077                           ;main.c: 1216: setPB0(0);
  2078  01FD  3000               	movlw	0
  2079  01FE  118A  24A7  118A   	fcall	_setPB0
  2080                           
  2081                           ;main.c: 1218: setPB1(0);
  2082  0201  3000               	movlw	0
  2083  0202  118A  24AF  118A   	fcall	_setPB1
  2084                           
  2085                           ;main.c: 1220: setPB2(0);
  2086  0205  3000               	movlw	0
  2087  0206  118A  24B7  118A   	fcall	_setPB2
  2088  0209  29D6               	goto	l5251
  2089  020A                     l5297:	
  2090                           
  2091                           ;main.c: 1230: {
  2092                           ;main.c: 1231: if(ucTimerDelay1 >= 1)
  2093  020A  085F               	movf	main@ucTimerDelay1,w
  2094  020B  1903               	btfsc	3,2
  2095  020C  29D8               	goto	l5255
  2096                           
  2097                           ;main.c: 1232: {
  2098                           ;main.c: 1233: ucTimerDelay1 = 0;
  2099  020D  01DF               	clrf	main@ucTimerDelay1
  2100                           
  2101                           ;main.c: 1235: ucLoaderStep1 = 0;
  2102  020E  01D9               	clrf	main@ucLoaderStep1
  2103  020F  29BA               	goto	l5235
  2104  0210                     l5307:	
  2105  0210  0859               	movf	main@ucLoaderStep1,w
  2106                           
  2107                           ; Switch size 1, requested type "space"
  2108                           ; Number of cases is 7, Range of values is 0 to 6
  2109                           ; switch strategies available:
  2110                           ; Name         Instructions Cycles
  2111                           ; direct_byte           21     7 (fixed)
  2112                           ; simple_byte           22    12 (average)
  2113                           ; jumptable            260     6 (fixed)
  2114                           ; rangetable            11     6 (fixed)
  2115                           ; spacedrange           20     9 (fixed)
  2116                           ; locatedrange           7     3 (fixed)
  2117                           ;	Chosen strategy is direct_byte
  2118  0211  0084               	movwf	4
  2119  0212  3007               	movlw	7
  2120  0213  0204               	subwf	4,w
  2121  0214  1803               	skipnc
  2122  0215  2833               	goto	l5021
  2123  0216  3008               	movlw	high S5829
  2124  0217  008A               	movwf	10
  2125  0218  1003               	clrc
  2126  0219  0D04               	rlf	4,w
  2127  021A  3E00               	addlw	low S5829
  2128  021B  0082               	movwf	2
  2129  021C                     l5309:	
  2130                           
  2131                           ;main.c: 1259: {
  2132                           ;main.c: 1261: setPA1(1);
  2133  021C  3001               	movlw	1
  2134  021D  118A  24C8  118A   	fcall	_setPA1
  2135                           
  2136                           ;main.c: 1263: setPA0(1);
  2137  0220  3001               	movlw	1
  2138  0221  118A  24BF  118A   	fcall	_setPA0
  2139  0224                     l5311:	
  2140                           
  2141                           ;main.c: 1264: ucLoaderStep2++;
  2142  0224  0ADA               	incf	main@ucLoaderStep2,f
  2143                           
  2144                           ;main.c: 1265: break;
  2145  0225  2833               	goto	l5021
  2146  0226                     l5313:	
  2147                           
  2148                           ;main.c: 1269: {
  2149                           ;main.c: 1270: if(ucTimerDelay2 >= 5)
  2150  0226  3005               	movlw	5
  2151  0227  0260               	subwf	main@ucTimerDelay2,w
  2152  0228  1C03               	skipc
  2153  0229  2A30               	goto	l5321
  2154                           
  2155                           ;main.c: 1271: {
  2156                           ;main.c: 1273: setPB0(1);
  2157  022A  3001               	movlw	1
  2158  022B  118A  24A7  118A   	fcall	_setPB0
  2159  022E                     l5317:	
  2160                           
  2161                           ;main.c: 1274: ucTimerDelay2 = 0;
  2162  022E  01E0               	clrf	main@ucTimerDelay2
  2163  022F  2A24               	goto	l5311
  2164  0230                     l5321:	
  2165                           
  2166                           ;main.c: 1277: else
  2167                           ;main.c: 1278: ucTimerDelay2++;
  2168  0230  0AE0               	incf	main@ucTimerDelay2,f
  2169  0231  2833               	goto	l5021
  2170  0232                     l5323:	
  2171                           
  2172                           ;main.c: 1283: {
  2173                           ;main.c: 1284: if(ucTimerDelay2 >= 5)
  2174  0232  3005               	movlw	5
  2175  0233  0260               	subwf	main@ucTimerDelay2,w
  2176  0234  1C03               	skipc
  2177  0235  2A30               	goto	l5321
  2178                           
  2179                           ;main.c: 1285: {
  2180                           ;main.c: 1287: setPB1(1);
  2181  0236  3001               	movlw	1
  2182  0237  118A  24AF  118A   	fcall	_setPB1
  2183  023A  2A2E               	goto	l5317
  2184  023B                     l5333:	
  2185                           
  2186                           ;main.c: 1297: {
  2187                           ;main.c: 1298: if(ucTimerDelay2 >= 5)
  2188  023B  3005               	movlw	5
  2189  023C  0260               	subwf	main@ucTimerDelay2,w
  2190  023D  1C03               	skipc
  2191  023E  2A30               	goto	l5321
  2192                           
  2193                           ;main.c: 1299: {
  2194                           ;main.c: 1301: setPB2(1);
  2195  023F  3001               	movlw	1
  2196  0240  118A  24B7  118A   	fcall	_setPB2
  2197  0243  2A2E               	goto	l5317
  2198  0244                     l5343:	
  2199                           
  2200                           ;main.c: 1311: {
  2201                           ;main.c: 1312: if(ucTimerDelay2 >= 5)
  2202  0244  3005               	movlw	5
  2203  0245  0260               	subwf	main@ucTimerDelay2,w
  2204  0246  1C03               	skipc
  2205  0247  2A30               	goto	l5321
  2206                           
  2207                           ;main.c: 1313: {
  2208                           ;main.c: 1316: setPB0(0);
  2209  0248  3000               	movlw	0
  2210  0249  118A  24A7  118A   	fcall	_setPB0
  2211                           
  2212                           ;main.c: 1318: setPB1(0);
  2213  024C  3000               	movlw	0
  2214  024D  118A  24AF  118A   	fcall	_setPB1
  2215                           
  2216                           ;main.c: 1320: setPB2(0);
  2217  0250  3000               	movlw	0
  2218  0251  118A  24B7  118A   	fcall	_setPB2
  2219  0254  2A2E               	goto	l5317
  2220  0255                     l5353:	
  2221                           
  2222                           ;main.c: 1330: {
  2223                           ;main.c: 1331: if(ucTimerDelay2 >= 1)
  2224  0255  0860               	movf	main@ucTimerDelay2,w
  2225  0256  1903               	btfsc	3,2
  2226  0257  2A30               	goto	l5321
  2227                           
  2228                           ;main.c: 1332: {
  2229                           ;main.c: 1333: ucTimerDelay2 = 0;
  2230  0258  01E0               	clrf	main@ucTimerDelay2
  2231                           
  2232                           ;main.c: 1335: ucLoaderStep2 = 0;
  2233  0259  01DA               	clrf	main@ucLoaderStep2
  2234  025A  29BA               	goto	l5235
  2235  025B                     l5363:	
  2236  025B  085A               	movf	main@ucLoaderStep2,w
  2237                           
  2238                           ; Switch size 1, requested type "space"
  2239                           ; Number of cases is 6, Range of values is 0 to 5
  2240                           ; switch strategies available:
  2241                           ; Name         Instructions Cycles
  2242                           ; direct_byte           19     7 (fixed)
  2243                           ; simple_byte           19    10 (average)
  2244                           ; jumptable            260     6 (fixed)
  2245                           ; rangetable            10     6 (fixed)
  2246                           ; spacedrange           18     9 (fixed)
  2247                           ; locatedrange           6     3 (fixed)
  2248                           ;	Chosen strategy is direct_byte
  2249  025C  0084               	movwf	4
  2250  025D  3006               	movlw	6
  2251  025E  0204               	subwf	4,w
  2252  025F  1803               	skipnc
  2253  0260  2833               	goto	l5021
  2254  0261  3008               	movlw	high S5831
  2255  0262  008A               	movwf	10
  2256  0263  1003               	clrc
  2257  0264  0D04               	rlf	4,w
  2258  0265  3E0E               	addlw	low S5831
  2259  0266  0082               	movwf	2
  2260  0267                     l5365:	
  2261                           
  2262                           ;main.c: 1359: {
  2263                           ;main.c: 1361: setPB0(1);
  2264  0267  3001               	movlw	1
  2265  0268  118A  24A7  118A   	fcall	_setPB0
  2266                           
  2267                           ;main.c: 1363: setPA0(1);
  2268  026B  3001               	movlw	1
  2269  026C  118A  24BF  118A   	fcall	_setPA0
  2270                           
  2271                           ;main.c: 1365: setPA1(1);
  2272  026F  3001               	movlw	1
  2273  0270  118A  24C8  118A   	fcall	_setPA1
  2274  0273                     l5367:	
  2275                           
  2276                           ;main.c: 1366: ucLoaderStep3++;
  2277  0273  0ADB               	incf	main@ucLoaderStep3,f
  2278                           
  2279                           ;main.c: 1367: break;
  2280  0274  2833               	goto	l5021
  2281  0275                     l5369:	
  2282                           
  2283                           ;main.c: 1371: {
  2284                           ;main.c: 1372: if(ucTimerDelay3 >= 5)
  2285  0275  3005               	movlw	5
  2286  0276  0261               	subwf	main@ucTimerDelay3,w
  2287  0277  1C03               	skipc
  2288  0278  2A7F               	goto	l5377
  2289                           
  2290                           ;main.c: 1373: {
  2291                           ;main.c: 1375: setPB1(1);
  2292  0279  3001               	movlw	1
  2293  027A  118A  24AF  118A   	fcall	_setPB1
  2294  027D                     l5373:	
  2295                           
  2296                           ;main.c: 1376: ucTimerDelay3 = 0;
  2297  027D  01E1               	clrf	main@ucTimerDelay3
  2298  027E  2A73               	goto	l5367
  2299  027F                     l5377:	
  2300                           
  2301                           ;main.c: 1379: else
  2302                           ;main.c: 1380: ucTimerDelay3++;
  2303  027F  0AE1               	incf	main@ucTimerDelay3,f
  2304  0280  2833               	goto	l5021
  2305  0281                     l5379:	
  2306                           
  2307                           ;main.c: 1385: {
  2308                           ;main.c: 1386: if(ucTimerDelay3 >= 5)
  2309  0281  3005               	movlw	5
  2310  0282  0261               	subwf	main@ucTimerDelay3,w
  2311  0283  1C03               	skipc
  2312  0284  2A7F               	goto	l5377
  2313                           
  2314                           ;main.c: 1387: {
  2315                           ;main.c: 1389: setPB2(1);
  2316  0285  3001               	movlw	1
  2317  0286  118A  24B7  118A   	fcall	_setPB2
  2318  0289  2A7D               	goto	l5373
  2319  028A                     l5389:	
  2320                           
  2321                           ;main.c: 1400: {
  2322                           ;main.c: 1401: if(ucTimerDelay3 >= 5)
  2323  028A  3005               	movlw	5
  2324  028B  0261               	subwf	main@ucTimerDelay3,w
  2325  028C  1C03               	skipc
  2326  028D  2A7F               	goto	l5377
  2327                           
  2328                           ;main.c: 1402: {
  2329                           ;main.c: 1405: setPB1(0);
  2330  028E  3000               	movlw	0
  2331  028F  118A  24AF  118A   	fcall	_setPB1
  2332                           
  2333                           ;main.c: 1407: setPB2(0);
  2334  0292  3000               	movlw	0
  2335  0293  118A  24B7  118A   	fcall	_setPB2
  2336  0296  2A7D               	goto	l5373
  2337  0297                     l5399:	
  2338                           
  2339                           ;main.c: 1417: {
  2340                           ;main.c: 1418: if(ucTimerDelay3 >= 1)
  2341  0297  0861               	movf	main@ucTimerDelay3,w
  2342  0298  1903               	btfsc	3,2
  2343  0299  2A7F               	goto	l5377
  2344                           
  2345                           ;main.c: 1419: {
  2346                           ;main.c: 1420: ucTimerDelay3 = 0;
  2347  029A  01E1               	clrf	main@ucTimerDelay3
  2348                           
  2349                           ;main.c: 1422: ucLoaderStep3 = 0;
  2350  029B  01DB               	clrf	main@ucLoaderStep3
  2351  029C  29BA               	goto	l5235
  2352  029D                     l5409:	
  2353  029D  085B               	movf	main@ucLoaderStep3,w
  2354                           
  2355                           ; Switch size 1, requested type "space"
  2356                           ; Number of cases is 5, Range of values is 0 to 4
  2357                           ; switch strategies available:
  2358                           ; Name         Instructions Cycles
  2359                           ; simple_byte           16     9 (average)
  2360                           ; direct_byte           17     7 (fixed)
  2361                           ; jumptable            260     6 (fixed)
  2362                           ; rangetable             9     6 (fixed)
  2363                           ; spacedrange           16     9 (fixed)
  2364                           ; locatedrange           5     3 (fixed)
  2365                           ;	Chosen strategy is simple_byte
  2366  029E  3A00               	xorlw	0	; case 0
  2367  029F  1903               	skipnz
  2368  02A0  2A67               	goto	l5365
  2369  02A1  3A01               	xorlw	1	; case 1
  2370  02A2  1903               	skipnz
  2371  02A3  2A75               	goto	l5369
  2372  02A4  3A03               	xorlw	3	; case 2
  2373  02A5  1903               	skipnz
  2374  02A6  2A81               	goto	l5379
  2375  02A7  3A01               	xorlw	1	; case 3
  2376  02A8  1903               	skipnz
  2377  02A9  2A8A               	goto	l5389
  2378  02AA  3A07               	xorlw	7	; case 4
  2379  02AB  1903               	skipnz
  2380  02AC  2A97               	goto	l5399
  2381  02AD  285E               	goto	l774
  2382  02AE                     l5411:	
  2383                           
  2384                           ;main.c: 1446: {
  2385                           ;main.c: 1448: setPB0(1);
  2386  02AE  3001               	movlw	1
  2387  02AF  118A  24A7  118A   	fcall	_setPB0
  2388                           
  2389                           ;main.c: 1450: setPA0(1);
  2390  02B2  3001               	movlw	1
  2391  02B3  118A  24BF  118A   	fcall	_setPA0
  2392                           
  2393                           ;main.c: 1452: setPA1(1);
  2394  02B6  3001               	movlw	1
  2395  02B7  118A  24C8  118A   	fcall	_setPA1
  2396                           
  2397                           ;main.c: 1454: setPB1(1);
  2398  02BA  3001               	movlw	1
  2399  02BB  118A  24AF  118A   	fcall	_setPB1
  2400  02BE                     l5413:	
  2401                           
  2402                           ;main.c: 1455: ucLoaderStep4++;
  2403  02BE  0ADC               	incf	main@ucLoaderStep4,f
  2404                           
  2405                           ;main.c: 1456: break;
  2406  02BF  2833               	goto	l5021
  2407  02C0                     l5415:	
  2408                           
  2409                           ;main.c: 1460: {
  2410                           ;main.c: 1461: if(ucTimerDelay4 >= 5)
  2411  02C0  3005               	movlw	5
  2412  02C1  0262               	subwf	main@ucTimerDelay4,w
  2413  02C2  1C03               	skipc
  2414  02C3  2ACA               	goto	l5423
  2415                           
  2416                           ;main.c: 1462: {
  2417                           ;main.c: 1464: setPB2(1);
  2418  02C4  3001               	movlw	1
  2419  02C5                     L7:	
  2420  02C5  118A  24B7  118A   	fcall	_setPB2
  2421                           
  2422                           ;main.c: 1465: ucTimerDelay4 = 0;
  2423  02C8  01E2               	clrf	main@ucTimerDelay4
  2424  02C9  2ABE               	goto	l5413
  2425  02CA                     l5423:	
  2426                           
  2427                           ;main.c: 1468: else
  2428                           ;main.c: 1469: ucTimerDelay4++;
  2429  02CA  0AE2               	incf	main@ucTimerDelay4,f
  2430  02CB  2833               	goto	l5021
  2431  02CC                     l5425:	
  2432                           
  2433                           ;main.c: 1474: {
  2434                           ;main.c: 1475: if(ucTimerDelay4 >= 5)
  2435  02CC  3005               	movlw	5
  2436  02CD  0262               	subwf	main@ucTimerDelay4,w
  2437  02CE  1C03               	skipc
  2438  02CF  2ACA               	goto	l5423
  2439                           
  2440                           ;main.c: 1476: {
  2441                           ;main.c: 1478: setPB2(0);
  2442  02D0  3000               	movlw	0
  2443  02D1  2AC5               	goto	L7
  2444  02D2                     l5435:	
  2445                           
  2446                           ;main.c: 1488: {
  2447                           ;main.c: 1489: if(ucTimerDelay4 >= 1)
  2448  02D2  0862               	movf	main@ucTimerDelay4,w
  2449  02D3  1903               	btfsc	3,2
  2450  02D4  2ACA               	goto	l5423
  2451                           
  2452                           ;main.c: 1490: {
  2453                           ;main.c: 1491: ucTimerDelay4 = 0;
  2454  02D5  01E2               	clrf	main@ucTimerDelay4
  2455                           
  2456                           ;main.c: 1493: ucLoaderStep4 = 0;
  2457  02D6  01DC               	clrf	main@ucLoaderStep4
  2458  02D7  29BA               	goto	l5235
  2459  02D8                     l5445:	
  2460  02D8  085C               	movf	main@ucLoaderStep4,w
  2461                           
  2462                           ; Switch size 1, requested type "space"
  2463                           ; Number of cases is 4, Range of values is 0 to 3
  2464                           ; switch strategies available:
  2465                           ; Name         Instructions Cycles
  2466                           ; simple_byte           13     7 (average)
  2467                           ; direct_byte           15     7 (fixed)
  2468                           ; jumptable            260     6 (fixed)
  2469                           ; rangetable             8     6 (fixed)
  2470                           ; spacedrange           14     9 (fixed)
  2471                           ; locatedrange           4     3 (fixed)
  2472                           ;	Chosen strategy is simple_byte
  2473  02D9  3A00               	xorlw	0	; case 0
  2474  02DA  1903               	skipnz
  2475  02DB  2AAE               	goto	l5411
  2476  02DC  3A01               	xorlw	1	; case 1
  2477  02DD  1903               	skipnz
  2478  02DE  2AC0               	goto	l5415
  2479  02DF  3A03               	xorlw	3	; case 2
  2480  02E0  1903               	skipnz
  2481  02E1  2ACC               	goto	l5425
  2482  02E2  3A01               	xorlw	1	; case 3
  2483  02E3  1903               	skipnz
  2484  02E4  2AD2               	goto	l5435
  2485  02E5  285E               	goto	l774
  2486  02E6                     l5449:	
  2487  02E6  0854               	movf	_ucChannel5Type,w
  2488                           
  2489                           ; Switch size 1, requested type "space"
  2490                           ; Number of cases is 5, Range of values is 0 to 4
  2491                           ; switch strategies available:
  2492                           ; Name         Instructions Cycles
  2493                           ; simple_byte           16     9 (average)
  2494                           ; direct_byte           17     7 (fixed)
  2495                           ; jumptable            260     6 (fixed)
  2496                           ; rangetable             9     6 (fixed)
  2497                           ; spacedrange           16     9 (fixed)
  2498                           ; locatedrange           5     3 (fixed)
  2499                           ;	Chosen strategy is simple_byte
  2500  02E7  3A00               	xorlw	0	; case 0
  2501  02E8  1903               	skipnz
  2502  02E9  29BC               	goto	l5241
  2503  02EA  3A01               	xorlw	1	; case 1
  2504  02EB  1903               	skipnz
  2505  02EC  2A10               	goto	l5307
  2506  02ED  3A03               	xorlw	3	; case 2
  2507  02EE  1903               	skipnz
  2508  02EF  2A5B               	goto	l5363
  2509  02F0  3A01               	xorlw	1	; case 3
  2510  02F1  1903               	skipnz
  2511  02F2  2A9D               	goto	l5409
  2512  02F3  3A07               	xorlw	7	; case 4
  2513  02F4  1903               	skipnz
  2514  02F5  2AD8               	goto	l5445
  2515  02F6  285E               	goto	l774
  2516  02F7                     l5451:	
  2517                           
  2518                           ;main.c: 1517: {
  2519                           ;main.c: 1521: static unsigned char ucTimerDelayP2sLess = 0;
  2520                           ;main.c: 1523: static unsigned char ucTimerDelayP2sMore = 0;
  2521                           ;main.c: 1525: if( getAdOriginalCh6Value() <= 150 )
  2522  02F7  118A  2633  118A   	fcall	_getAdOriginalCh6Value
  2523  02FA  3000               	movlw	0
  2524  02FB  0247               	subwf	?_getAdOriginalCh6Value+1,w
  2525  02FC  3097               	movlw	151
  2526  02FD  1903               	skipnz
  2527  02FE  0246               	subwf	?_getAdOriginalCh6Value,w
  2528  02FF  1803               	skipnc
  2529  0300  2B04               	goto	l5457
  2530                           
  2531                           ;main.c: 1526: {
  2532                           ;main.c: 1527: ucTimerDelayP2sLess++;
  2533  0301  0AE3               	incf	main@ucTimerDelayP2sLess,f
  2534                           
  2535                           ;main.c: 1528: ucTimerDelayP2sMore = 0;
  2536  0302  01E4               	clrf	main@ucTimerDelayP2sMore
  2537                           
  2538                           ;main.c: 1529: }
  2539  0303  2B06               	goto	l5461
  2540  0304                     l5457:	
  2541                           
  2542                           ;main.c: 1530: else
  2543                           ;main.c: 1531: {
  2544                           ;main.c: 1532: ucTimerDelayP2sMore++;
  2545  0304  0AE4               	incf	main@ucTimerDelayP2sMore,f
  2546                           
  2547                           ;main.c: 1533: ucTimerDelayP2sLess = 0;
  2548  0305  01E3               	clrf	main@ucTimerDelayP2sLess
  2549  0306                     l5461:	
  2550                           
  2551                           ;main.c: 1534: }
  2552                           ;main.c: 1536: if(ucTimerDelayP2sLess > 200)
  2553  0306  30C9               	movlw	201
  2554  0307  0263               	subwf	main@ucTimerDelayP2sLess,w
  2555  0308  1C03               	skipc
  2556  0309  2B0C               	goto	l974
  2557                           
  2558                           ;main.c: 1537: ucTimerDelayP2sLess = 2;
  2559  030A  3002               	movlw	2
  2560  030B  00E3               	movwf	main@ucTimerDelayP2sLess
  2561  030C                     l974:	
  2562                           
  2563                           ;main.c: 1540: if(ucTimerDelayP2sMore > 200)
  2564  030C  30C9               	movlw	201
  2565  030D  0264               	subwf	main@ucTimerDelayP2sMore,w
  2566                           
  2567                           ;main.c: 1541: ucTimerDelayP2sMore = 2;
  2568  030E  3002               	movlw	2
  2569  030F  1803               	btfsc	3,0
  2570  0310  00E4               	movwf	main@ucTimerDelayP2sMore
  2571                           
  2572                           ;main.c: 1543: if( ucTimerDelayP2sLess >= 2)
  2573  0311  0263               	subwf	main@ucTimerDelayP2sLess,w
  2574  0312  1C03               	skipc
  2575  0313  2B28               	goto	l5477
  2576                           
  2577                           ;main.c: 1544: {
  2578                           ;main.c: 1545: ucTimerDelayP2sLess = 0;
  2579  0314  01E3               	clrf	main@ucTimerDelayP2sLess
  2580                           
  2581                           ;main.c: 1546: ucTimerDelayP2sMore = 0;
  2582  0315  01E4               	clrf	main@ucTimerDelayP2sMore
  2583                           
  2584                           ;main.c: 1548: startTwentySecondsTimer();
  2585  0316  118A  27D9  118A   	fcall	_startTwentySecondsTimer
  2586                           
  2587                           ;main.c: 1550: if( !isFinishedTwentySecondsTimer() )
  2588  0319  158A  26E1  118A   	fcall	_isFinishedTwentySecondsTimer
  2589  031C  3800               	iorlw	0
  2590  031D  1D03               	skipz
  2591  031E  2B23               	goto	l5475
  2592  031F                     l5473:	
  2593                           
  2594                           ;main.c: 1551: {
  2595                           ;main.c: 1556: vHandle20sTimeron();
  2596  031F  118A  253E  118A   	fcall	_vHandle20sTimeron
  2597                           
  2598                           ;main.c: 1557: }
  2599  0322  2833               	goto	l5021
  2600  0323                     l5475:	
  2601                           
  2602                           ;main.c: 1558: else
  2603                           ;main.c: 1560: {
  2604                           ;main.c: 1564: vHandle20sTimerOut(0);
  2605  0323  3000               	movlw	0
  2606  0324  118A  24E4  118A   	fcall	_vHandle20sTimerOut
  2607  0327  2833               	goto	l5021
  2608  0328                     l5477:	
  2609                           
  2610                           ;main.c: 1567: else if(ucTimerDelayP2sMore >= 2)
  2611  0328  3002               	movlw	2
  2612  0329  0264               	subwf	main@ucTimerDelayP2sMore,w
  2613  032A  1C03               	skipc
  2614  032B  2833               	goto	l5021
  2615                           
  2616                           ;main.c: 1568: {
  2617                           ;main.c: 1569: ucTimerDelayP2sMore = 0;
  2618  032C  01E4               	clrf	main@ucTimerDelayP2sMore
  2619                           
  2620                           ;main.c: 1570: ucTimerDelayP2sLess = 0;
  2621  032D  01E3               	clrf	main@ucTimerDelayP2sLess
  2622  032E  2B1F               	goto	l5473
  2623  032F                     l5483:	
  2624  032F  3004               	movlw	4
  2625                           
  2626                           ;main.c: 1899: {
  2627                           ;main.c: 1903: static unsigned char ucFourthSuffix1TimerP3s = 0;
  2628                           ;main.c: 1905: ucFourthSuffix1TimerP3s++;
  2629  0330  0AD7               	incf	main@ucFourthSuffix1TimerP3s,f
  2630                           
  2631                           ;main.c: 1907: if( ucFourthSuffix1TimerP3s > 3)
  2632  0331  0257               	subwf	main@ucFourthSuffix1TimerP3s,w
  2633  0332  1C03               	skipc
  2634  0333  2833               	goto	l5021
  2635  0334  300C               	movlw	12
  2636                           
  2637                           ;main.c: 1908: {
  2638                           ;main.c: 1909: ucFourthSuffix1TimerP3s = 0;
  2639  0335  01D7               	clrf	main@ucFourthSuffix1TimerP3s
  2640  0336                     L6:	
  2641                           ;main.c: 1910: ucADC4_Step = ADC4_STEP_FOURTH_SUFFIX2;
  2642                           
  2643  0336  00D3               	movwf	_ucADC4_Step
  2644  0337  2833               	goto	l5021
  2645  0338                     l5491:	
  2646                           
  2647                           ;main.c: 1917: {
  2648                           ;main.c: 1922: setPA6(0);
  2649  0338  3000               	movlw	0
  2650  0339  158A  26BE  118A   	fcall	_setPA6
  2651                           
  2652                           ;main.c: 1924: clearPinPortAndTimer();
  2653  033C  118A  2485  118A   	fcall	_clearPinPortAndTimer
  2654                           
  2655                           ;main.c: 1925: ucADC4_Step = ADC4_STEP_INIT;
  2656  033F  01D3               	clrf	_ucADC4_Step
  2657                           
  2658                           ;main.c: 1927: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  2659  0340  01D0               	clrf	_enumMainLoopStep
  2660  0341  0AD0               	incf	_enumMainLoopStep,f
  2661                           
  2662                           ;main.c: 1928: break;
  2663  0342  2833               	goto	l5021
  2664  0343                     l5501:	
  2665  0343  1283               	bcf	3,5	;RP0=0, select bank0
  2666  0344  0853               	movf	_ucADC4_Step,w
  2667                           
  2668                           ; Switch size 1, requested type "space"
  2669                           ; Number of cases is 7, Range of values is 0 to 12
  2670                           ; switch strategies available:
  2671                           ; Name         Instructions Cycles
  2672                           ; simple_byte           22    12 (average)
  2673                           ; direct_byte           33     7 (fixed)
  2674                           ; jumptable            260     6 (fixed)
  2675                           ; rangetable            17     6 (fixed)
  2676                           ; spacedrange           32     9 (fixed)
  2677                           ; locatedrange          13     3 (fixed)
  2678                           ;	Chosen strategy is simple_byte
  2679  0345  3A00               	xorlw	0	; case 0
  2680  0346  1903               	skipnz
  2681  0347  28EA               	goto	l815
  2682  0348  3A01               	xorlw	1	; case 1
  2683  0349  1903               	skipnz
  2684  034A  28ED               	goto	l5127
  2685  034B  3A03               	xorlw	3	; case 2
  2686  034C  1903               	skipnz
  2687  034D  2AE6               	goto	l5449
  2688  034E  3A01               	xorlw	1	; case 3
  2689  034F  1903               	skipnz
  2690  0350  2AF7               	goto	l5451
  2691  0351  3A09               	xorlw	9	; case 10
  2692  0352  1903               	skipnz
  2693  0353  285E               	goto	l774
  2694  0354  3A01               	xorlw	1	; case 11
  2695  0355  1903               	skipnz
  2696  0356  2B2F               	goto	l5483
  2697  0357  3A07               	xorlw	7	; case 12
  2698  0358  1903               	skipnz
  2699  0359  2B38               	goto	l5491
  2700  035A  285E               	goto	l774
  2701  035B                     l993:	
  2702                           ;main.c: 1954: {
  2703                           ;main.c: 1955: case HOUR_3_BRANCH_STEP_FIRST:
  2704                           
  2705                           
  2706                           ;main.c: 1956: {
  2707                           ;main.c: 1958: PB7 = 1;
  2708  035B  1283               	bcf	3,5	;RP0=0, select bank0
  2709  035C  1786               	bsf	6,7
  2710                           
  2711                           ;main.c: 1959: PBOD7 = 1;
  2712  035D  1683               	bsf	3,5	;RP0=1, select bank3
  2713  035E  30B4               	movlw	180
  2714  035F  1703               	bsf	3,6	;RP1=1, select bank3
  2715  0360  1788               	bsf	8,7
  2716                           
  2717                           ;main.c: 1964: startThreeHoursTimer(180);
  2718  0361  1283               	bcf	3,5	;RP0=0, select bank0
  2719  0362  1303               	bcf	3,6	;RP1=0, select bank0
  2720  0363  00A0               	movwf	?_startThreeHoursTimer
  2721  0364  01A1               	clrf	?_startThreeHoursTimer+1
  2722  0365  118A  279D  118A   	fcall	_startThreeHoursTimer
  2723                           
  2724                           ;main.c: 1968: setPA0(1);
  2725  0368  3001               	movlw	1
  2726  0369  118A  24BF  118A   	fcall	_setPA0
  2727                           
  2728                           ;main.c: 1970: setPA1(1);
  2729  036C  3001               	movlw	1
  2730  036D  118A  24C8  118A   	fcall	_setPA1
  2731                           
  2732                           ;main.c: 1972: setPB0(1);
  2733  0370  3001               	movlw	1
  2734  0371  118A  24A7  118A   	fcall	_setPB0
  2735                           
  2736                           ;main.c: 1974: setPB1(1);
  2737  0374  3001               	movlw	1
  2738  0375  118A  24AF  118A   	fcall	_setPB1
  2739                           
  2740                           ;main.c: 1976: setPB2(1);
  2741  0378  3001               	movlw	1
  2742  0379  118A  24B7  118A   	fcall	_setPB2
  2743                           
  2744                           ;main.c: 1978: setPB4(0);
  2745  037C  3000               	movlw	0
  2746  037D  118A  2536  118A   	fcall	_setPB4
  2747                           
  2748                           ;main.c: 1980: enumBranchStep = HOUR_3_BRANCH_STEP_SECOND;
  2749  0380  1683               	bsf	3,5	;RP0=1, select bank1
  2750  0381  01B0               	clrf	main@enumBranchStep^(0+128)
  2751  0382  0AB0               	incf	main@enumBranchStep^(0+128),f
  2752                           
  2753                           ;main.c: 1981: break;
  2754  0383  2833               	goto	l5021
  2755  0384                     l5507:	
  2756                           
  2757                           ;main.c: 1985: {
  2758                           ;main.c: 1990: enumBranchStep = HOUR_3_BRANCH_STEP_THIRD;
  2759  0384  3002               	movlw	2
  2760  0385  00B0               	movwf	main@enumBranchStep^(0+128)
  2761                           
  2762                           ;main.c: 1991: break;
  2763  0386  2833               	goto	l5021
  2764  0387                     l5509:	
  2765                           
  2766                           ;main.c: 1995: {
  2767                           ;main.c: 1999: if( (isFinishedTwelveHoursTimer()) || (isFinishedThreeHoursTimer()))
  2768  0387  158A  26F7  118A   	fcall	_isFinishedTwelveHoursTimer
  2769  038A  3800               	iorlw	0
  2770  038B  1D03               	skipz
  2771  038C  2B93               	goto	l5513
  2772  038D  158A  2703  118A   	fcall	_isFinishedThreeHoursTimer
  2773  0390  3A00               	xorlw	0
  2774  0391  1903               	skipnz
  2775  0392  2B96               	goto	l5517
  2776  0393                     l5513:	
  2777                           
  2778                           ;main.c: 2000: {
  2779                           ;main.c: 2001: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2780  0393  1683               	bsf	3,5	;RP0=1, select bank1
  2781  0394  01B0               	clrf	main@enumBranchStep^(0+128)
  2782  0395  285B               	goto	l5041
  2783  0396                     l5517:	
  2784                           
  2785                           ;main.c: 2004: else
  2786                           ;main.c: 2005: {
  2787                           ;main.c: 2006: static unsigned char ucTimerX1P5s = 0;
  2788                           ;main.c: 2008: static unsigned char ucTimerLessX1P5s = 0;
  2789                           ;main.c: 2010: if(getAdOriginalCh6Value() <= 85)
  2790  0396  118A  2633  118A   	fcall	_getAdOriginalCh6Value
  2791  0399  3000               	movlw	0
  2792  039A  0247               	subwf	?_getAdOriginalCh6Value+1,w
  2793  039B  3056               	movlw	86
  2794  039C  1903               	skipnz
  2795  039D  0246               	subwf	?_getAdOriginalCh6Value,w
  2796  039E  1803               	skipnc
  2797  039F  2BA4               	goto	l5523
  2798                           
  2799                           ;main.c: 2011: {
  2800                           ;main.c: 2012: ucTimerX1P5s = 0;
  2801  03A0  1683               	bsf	3,5	;RP0=1, select bank1
  2802  03A1  01B6               	clrf	main@ucTimerX1P5s^(0+128)
  2803                           
  2804                           ;main.c: 2013: ucTimerLessX1P5s++;
  2805  03A2  0AB3               	incf	main@ucTimerLessX1P5s^(0+128),f
  2806                           
  2807                           ;main.c: 2014: }
  2808  03A3  2BA7               	goto	l5527
  2809  03A4                     l5523:	
  2810                           
  2811                           ;main.c: 2015: else
  2812                           ;main.c: 2016: {
  2813                           ;main.c: 2017: ucTimerX1P5s++;
  2814  03A4  1683               	bsf	3,5	;RP0=1, select bank1
  2815  03A5  0AB6               	incf	main@ucTimerX1P5s^(0+128),f
  2816                           
  2817                           ;main.c: 2018: ucTimerLessX1P5s = 0;
  2818  03A6  01B3               	clrf	main@ucTimerLessX1P5s^(0+128)
  2819  03A7                     l5527:	
  2820                           
  2821                           ;main.c: 2019: }
  2822                           ;main.c: 2021: if(ucTimerX1P5s >= 5)
  2823  03A7  3005               	movlw	5
  2824  03A8  0236               	subwf	main@ucTimerX1P5s^(0+128),w
  2825  03A9  1C03               	skipc
  2826  03AA  2BBB               	goto	l5541
  2827                           
  2828                           ;main.c: 2022: {
  2829                           ;main.c: 2023: ucTimerX1P5s = 0;
  2830  03AB  01B6               	clrf	main@ucTimerX1P5s^(0+128)
  2831                           
  2832                           ;main.c: 2025: ucTimerLessX1P5s = 0;
  2833  03AC  01B3               	clrf	main@ucTimerLessX1P5s^(0+128)
  2834                           
  2835                           ;main.c: 2029: PBOD7 = 0;
  2836  03AD  1703               	bsf	3,6	;RP1=1, select bank3
  2837  03AE  1388               	bcf	8,7
  2838                           
  2839                           ;main.c: 2030: PB7 = 0;
  2840  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  2841  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  2842  03B1  1386               	bcf	6,7
  2843                           
  2844                           ;main.c: 2035: clearThreeHoursTimer();
  2845  03B2  118A  24DE  118A   	fcall	_clearThreeHoursTimer
  2846                           
  2847                           ;main.c: 2037: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2848  03B5  1683               	bsf	3,5	;RP0=1, select bank1
  2849  03B6  3002               	movlw	2
  2850  03B7  01B0               	clrf	main@enumBranchStep^(0+128)
  2851  03B8                     L1:	
  2852                           ;main.c: 2039: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
  2853                           
  2854  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  2855  03B9  00D0               	movwf	_enumMainLoopStep
  2856                           
  2857                           ;main.c: 2040: }
  2858  03BA  2833               	goto	l5021
  2859  03BB                     l5541:	
  2860                           
  2861                           ;main.c: 2041: else if(ucTimerLessX1P5s >= 5)
  2862  03BB  3005               	movlw	5
  2863  03BC  0233               	subwf	main@ucTimerLessX1P5s^(0+128),w
  2864  03BD  1C03               	skipc
  2865  03BE  2833               	goto	l5021
  2866                           
  2867                           ;main.c: 2042: {
  2868                           ;main.c: 2043: static unsigned char ucTimerX2P5s = 0;
  2869                           ;main.c: 2045: static unsigned char ucTimerLessX2P5s = 0;
  2870                           ;main.c: 2047: if(getAdOriginalCh6Value() > 20)
  2871  03BF  118A  2633  118A   	fcall	_getAdOriginalCh6Value
  2872  03C2  3000               	movlw	0
  2873  03C3  0247               	subwf	?_getAdOriginalCh6Value+1,w
  2874  03C4  3015               	movlw	21
  2875  03C5  1903               	skipnz
  2876  03C6  0246               	subwf	?_getAdOriginalCh6Value,w
  2877  03C7  1C03               	skipc
  2878  03C8  2BCD               	goto	l5549
  2879                           
  2880                           ;main.c: 2048: {
  2881                           ;main.c: 2049: ucTimerX2P5s++;
  2882  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  2883  03CA  0AB7               	incf	main@ucTimerX2P5s^(0+128),f
  2884                           
  2885                           ;main.c: 2050: ucTimerLessX2P5s = 0;
  2886  03CB  01B4               	clrf	main@ucTimerLessX2P5s^(0+128)
  2887                           
  2888                           ;main.c: 2051: }
  2889  03CC  2BD0               	goto	l5553
  2890  03CD                     l5549:	
  2891                           
  2892                           ;main.c: 2052: else
  2893                           ;main.c: 2053: {
  2894                           ;main.c: 2054: ucTimerX2P5s = 0;
  2895  03CD  1683               	bsf	3,5	;RP0=1, select bank1
  2896  03CE  01B7               	clrf	main@ucTimerX2P5s^(0+128)
  2897                           
  2898                           ;main.c: 2055: ucTimerLessX2P5s++;
  2899  03CF  0AB4               	incf	main@ucTimerLessX2P5s^(0+128),f
  2900  03D0                     l5553:	
  2901                           
  2902                           ;main.c: 2056: }
  2903                           ;main.c: 2058: if(ucTimerX2P5s >= 5)
  2904  03D0  3005               	movlw	5
  2905  03D1  0237               	subwf	main@ucTimerX2P5s^(0+128),w
  2906  03D2  1C03               	skipc
  2907  03D3  2BD6               	goto	l5557
  2908  03D4                     l5555:	
  2909                           
  2910                           ;main.c: 2059: {
  2911                           ;main.c: 2060: ucTimerX2P5s = 0;
  2912  03D4  01B7               	clrf	main@ucTimerX2P5s^(0+128)
  2913                           
  2914                           ;main.c: 2061: }
  2915  03D5  2833               	goto	l5021
  2916  03D6                     l5557:	
  2917                           
  2918                           ;main.c: 2062: else if(ucTimerLessX2P5s >= 5)
  2919  03D6  3005               	movlw	5
  2920  03D7  0234               	subwf	main@ucTimerLessX2P5s^(0+128),w
  2921  03D8  1C03               	skipc
  2922  03D9  2833               	goto	l5021
  2923                           
  2924                           ;main.c: 2063: {
  2925                           ;main.c: 2064: clearParaFunction1();
  2926  03DA  118A  2491  118A   	fcall	_clearParaFunction1
  2927                           
  2928                           ;main.c: 2065: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  2929  03DD  01D0               	clrf	_enumMainLoopStep
  2930  03DE  0AD0               	incf	_enumMainLoopStep,f
  2931                           
  2932                           ;main.c: 2066: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2933  03DF  1683               	bsf	3,5	;RP0=1, select bank1
  2934  03E0  01B0               	clrf	main@enumBranchStep^(0+128)
  2935                           
  2936                           ;main.c: 2068: ucTimerLessX2P5s = 0;
  2937  03E1  01B4               	clrf	main@ucTimerLessX2P5s^(0+128)
  2938  03E2  2BD4               	goto	l5555
  2939  03E3                     l5571:	
  2940  03E3  1683               	bsf	3,5	;RP0=1, select bank1
  2941  03E4  0830               	movf	main@enumBranchStep^(0+128),w
  2942                           
  2943                           ; Switch size 1, requested type "space"
  2944                           ; Number of cases is 3, Range of values is 0 to 2
  2945                           ; switch strategies available:
  2946                           ; Name         Instructions Cycles
  2947                           ; simple_byte           10     6 (average)
  2948                           ; direct_byte           13     7 (fixed)
  2949                           ; jumptable            260     6 (fixed)
  2950                           ; rangetable             7     6 (fixed)
  2951                           ; spacedrange           12     9 (fixed)
  2952                           ; locatedrange           3     3 (fixed)
  2953                           ;	Chosen strategy is simple_byte
  2954  03E5  3A00               	xorlw	0	; case 0
  2955  03E6  1903               	skipnz
  2956  03E7  2B5B               	goto	l993
  2957  03E8  3A01               	xorlw	1	; case 1
  2958  03E9  1903               	skipnz
  2959  03EA  2B84               	goto	l5507
  2960  03EB  3A03               	xorlw	3	; case 2
  2961  03EC  1903               	skipnz
  2962  03ED  2B87               	goto	l5509
  2963  03EE  285E               	goto	l774
  2964  03EF                     l5573:	
  2965                           
  2966                           ;main.c: 2112: {
  2967                           ;main.c: 2117: setPA2(0);
  2968  03EF  3000               	movlw	0
  2969  03F0  158A  26CE  118A   	fcall	_setPA2
  2970                           
  2971                           ;main.c: 2118: setPA1(0);
  2972  03F3  3000               	movlw	0
  2973  03F4  118A  24C8  118A   	fcall	_setPA1
  2974                           
  2975                           ;main.c: 2119: setPA0(0);
  2976  03F7  3000               	movlw	0
  2977  03F8  118A  24BF  118A   	fcall	_setPA0
  2978                           
  2979                           ;main.c: 2120: setPB0(0);
  2980  03FB  3000               	movlw	0
  2981  03FC  118A  24A7  118A   	fcall	_setPB0
  2982                           
  2983                           ;main.c: 2121: setPB1(0);
  2984  03FF  3000               	movlw	0
  2985  0400  118A  24AF  118A   	fcall	_setPB1
  2986                           
  2987                           ;main.c: 2122: setPB2(0);
  2988  0403  3000               	movlw	0
  2989  0404  118A  24B7  118A   	fcall	_setPB2
  2990                           
  2991                           ;main.c: 2123: setPA3(0);
  2992  0407  3000               	movlw	0
  2993  0408  118A  262A  118A   	fcall	_setPA3
  2994                           
  2995                           ;main.c: 2124: setPB4(0);
  2996  040B  3000               	movlw	0
  2997  040C  118A  2536  118A   	fcall	_setPB4
  2998                           
  2999                           ;main.c: 2126: enumInteralStep = INTERNAL_SECOND_STEP;
  3000  040F  1683               	bsf	3,5	;RP0=1, select bank1
  3001  0410  01B1               	clrf	main@enumInteralStep^(0+128)
  3002  0411  0AB1               	incf	main@enumInteralStep^(0+128),f
  3003                           
  3004                           ;main.c: 2127: break;
  3005  0412  2833               	goto	l5021
  3006  0413                     l5577:	
  3007                           
  3008                           ;main.c: 2131: {
  3009                           ;main.c: 2135: static unsigned char ucTimer1s = 0;
  3010                           ;main.c: 2137: if(getAdOriginalCh0Value() >= 2500)
  3011  0413  118A  247B  118A   	fcall	_getAdOriginalCh0Value
  3012  0416  3009               	movlw	9
  3013  0417  0247               	subwf	?_getAdOriginalCh0Value+1,w
  3014  0418  30C4               	movlw	196
  3015  0419  1903               	skipnz
  3016  041A  0246               	subwf	?_getAdOriginalCh0Value,w
  3017  041B  1C03               	skipc
  3018  041C  2C20               	goto	l5581
  3019                           
  3020                           ;main.c: 2138: {
  3021                           ;main.c: 2139: ucTimer1s++;
  3022  041D  1683               	bsf	3,5	;RP0=1, select bank1
  3023  041E  0AB2               	incf	main@ucTimer1s^(0+128),f
  3024                           
  3025                           ;main.c: 2140: }
  3026  041F  2C22               	goto	l5583
  3027  0420                     l5581:	
  3028                           
  3029                           ;main.c: 2141: else
  3030                           ;main.c: 2142: ucTimer1s = 0;
  3031  0420  1683               	bsf	3,5	;RP0=1, select bank1
  3032  0421  01B2               	clrf	main@ucTimer1s^(0+128)
  3033  0422                     l5583:	
  3034                           
  3035                           ;main.c: 2144: if(ucTimer1s >= 10)
  3036  0422  300A               	movlw	10
  3037  0423  0232               	subwf	main@ucTimer1s^(0+128),w
  3038  0424  1C03               	skipc
  3039  0425  2833               	goto	l5021
  3040                           
  3041                           ;main.c: 2145: {
  3042                           ;main.c: 2146: enumInteralStep = INTERNAL_THIRD_STEP;
  3043  0426  3002               	movlw	2
  3044  0427  00B1               	movwf	main@enumInteralStep^(0+128)
  3045                           
  3046                           ;main.c: 2147: ucTimer1s = 0;
  3047  0428  01B2               	clrf	main@ucTimer1s^(0+128)
  3048  0429  2833               	goto	l5021
  3049  042A                     l5589:	
  3050                           
  3051                           ;main.c: 2153: {
  3052                           ;main.c: 2157: static unsigned char ucTimerP3s = 0;
  3053                           ;main.c: 2159: if(getAdOriginalCh0Value() <= 1950)
  3054  042A  118A  247B  118A   	fcall	_getAdOriginalCh0Value
  3055  042D  3007               	movlw	7
  3056  042E  0247               	subwf	?_getAdOriginalCh0Value+1,w
  3057  042F  309F               	movlw	159
  3058  0430  1903               	skipnz
  3059  0431  0246               	subwf	?_getAdOriginalCh0Value,w
  3060  0432  1803               	skipnc
  3061  0433  2C37               	goto	l5593
  3062                           
  3063                           ;main.c: 2160: {
  3064                           ;main.c: 2161: ucTimerP3s++;
  3065  0434  1683               	bsf	3,5	;RP0=1, select bank1
  3066  0435  0AB5               	incf	main@ucTimerP3s^(0+128),f
  3067                           
  3068                           ;main.c: 2162: }
  3069  0436  2C39               	goto	l5595
  3070  0437                     l5593:	
  3071                           
  3072                           ;main.c: 2163: else
  3073                           ;main.c: 2164: ucTimerP3s = 0;
  3074  0437  1683               	bsf	3,5	;RP0=1, select bank1
  3075  0438  01B5               	clrf	main@ucTimerP3s^(0+128)
  3076  0439                     l5595:	
  3077                           
  3078                           ;main.c: 2166: if(ucTimerP3s >= 3)
  3079  0439  3003               	movlw	3
  3080  043A  0235               	subwf	main@ucTimerP3s^(0+128),w
  3081  043B  1C03               	skipc
  3082  043C  2833               	goto	l5021
  3083                           
  3084                           ;main.c: 2167: {
  3085                           ;main.c: 2168: enumInteralStep = INTERNAL_FIRST_STEP;
  3086  043D  01B1               	clrf	main@enumInteralStep^(0+128)
  3087                           
  3088                           ;main.c: 2169: ucTimerP3s = 0;
  3089  043E  01B5               	clrf	main@ucTimerP3s^(0+128)
  3090                           
  3091                           ;main.c: 2171: clearAllTimer();
  3092  043F  118A  24D1  118A   	fcall	_clearAllTimer
  3093                           
  3094                           ;main.c: 2173: initPin();
  3095  0442  118A  275F  118A   	fcall	_initPin
  3096                           
  3097                           ;main.c: 2176: enumMainLoopStep = MAIN_LOOP_STEP_INIT;
  3098  0445  1283               	bcf	3,5	;RP0=0, select bank0
  3099  0446  01D0               	clrf	_enumMainLoopStep
  3100  0447                     l1041:	
  3101  0447  2C47               	goto	l1041
  3102  0448                     l5605:	
  3103  0448  1683               	bsf	3,5	;RP0=1, select bank1
  3104  0449  0831               	movf	main@enumInteralStep^(0+128),w
  3105                           
  3106                           ; Switch size 1, requested type "space"
  3107                           ; Number of cases is 3, Range of values is 0 to 2
  3108                           ; switch strategies available:
  3109                           ; Name         Instructions Cycles
  3110                           ; simple_byte           10     6 (average)
  3111                           ; direct_byte           13     7 (fixed)
  3112                           ; jumptable            260     6 (fixed)
  3113                           ; rangetable             7     6 (fixed)
  3114                           ; spacedrange           12     9 (fixed)
  3115                           ; locatedrange           3     3 (fixed)
  3116                           ;	Chosen strategy is simple_byte
  3117  044A  3A00               	xorlw	0	; case 0
  3118  044B  1903               	skipnz
  3119  044C  2BEF               	goto	l5573
  3120  044D  3A01               	xorlw	1	; case 1
  3121  044E  1903               	skipnz
  3122  044F  2C13               	goto	l5577
  3123  0450  3A03               	xorlw	3	; case 2
  3124  0451  1903               	skipnz
  3125  0452  2C2A               	goto	l5589
  3126  0453  285E               	goto	l774
  3127  0454                     l5609:	
  3128  0454  1283               	bcf	3,5	;RP0=0, select bank0
  3129  0455  0850               	movf	_enumMainLoopStep,w
  3130                           
  3131                           ; Switch size 1, requested type "space"
  3132                           ; Number of cases is 8, Range of values is 0 to 9
  3133                           ; switch strategies available:
  3134                           ; Name         Instructions Cycles
  3135                           ; simple_byte           25    13 (average)
  3136                           ; direct_byte           27     7 (fixed)
  3137                           ; jumptable            260     6 (fixed)
  3138                           ; rangetable            14     6 (fixed)
  3139                           ; spacedrange           26     9 (fixed)
  3140                           ; locatedrange          10     3 (fixed)
  3141                           ;	Chosen strategy is simple_byte
  3142  0456  3A00               	xorlw	0	; case 0
  3143  0457  1903               	skipnz
  3144  0458  2841               	goto	l5027
  3145  0459  3A01               	xorlw	1	; case 1
  3146  045A  1903               	skipnz
  3147  045B  285F               	goto	l5043
  3148  045C  3A03               	xorlw	3	; case 2
  3149  045D  1903               	skipnz
  3150  045E  287C               	goto	l5063
  3151  045F  3A01               	xorlw	1	; case 3
  3152  0460  1903               	skipnz
  3153  0461  2893               	goto	l5075
  3154  0462  3A07               	xorlw	7	; case 4
  3155  0463  1903               	skipnz
  3156  0464  28CF               	goto	l5113
  3157  0465  3A01               	xorlw	1	; case 5
  3158  0466  1903               	skipnz
  3159  0467  28DB               	goto	l5119
  3160  0468  3A0D               	xorlw	13	; case 8
  3161  0469  1903               	skipnz
  3162  046A  2BE3               	goto	l5571
  3163  046B  3A01               	xorlw	1	; case 9
  3164  046C  1903               	skipnz
  3165  046D  2C48               	goto	l5605
  3166  046E  285E               	goto	l774
  3167  046F  118A  2811         	ljmp	start
  3168  0471                     __end_of_main:	
  3169                           
  3170                           	psect	swtext1
  3171  07EA                     __pswtext1:	
  3172  07EA                     S5827:	
  3173  07EA  118A  296F         	ljmp	l5177
  3174  07EC  118A  2975         	ljmp	l5181
  3175  07EE  118A  2981         	ljmp	l5191
  3176  07F0  118A  298A         	ljmp	l5201
  3177  07F2  118A  2993         	ljmp	l5211
  3178  07F4  118A  299C         	ljmp	l5221
  3179  07F6  118A  29B5         	ljmp	l5231
  3180                           
  3181                           	psect	swtext2
  3182  0800                     __pswtext2:	
  3183  0800                     S5829:	
  3184  0800  118A  29C8         	ljmp	l5243
  3185  0802  118A  29CE         	ljmp	l5247
  3186  0804  118A  29DA         	ljmp	l5257
  3187  0806  118A  29E3         	ljmp	l5267
  3188  0808  118A  29EC         	ljmp	l5277
  3189  080A  118A  29F5         	ljmp	l5287
  3190  080C  118A  2A0A         	ljmp	l5297
  3191                           
  3192                           	psect	swtext3
  3193  080E                     __pswtext3:	
  3194  080E                     S5831:	
  3195  080E  118A  2A1C         	ljmp	l5309
  3196  0810  118A  2A26         	ljmp	l5313
  3197  0812  118A  2A32         	ljmp	l5323
  3198  0814  118A  2A3B         	ljmp	l5333
  3199  0816  118A  2A44         	ljmp	l5343
  3200  0818  118A  2A55         	ljmp	l5353
  3201                           
  3202                           	psect	text1010
  3203  0711                     __ptext1010:	
  3204 ;; =============== function _vHandle20sTimeron ends ============
  3205                           
  3206                           
  3207 ;; *************** function _process_AD_Converter_Value *****************
  3208 ;; Defined at:
  3209 ;;		line 302 in file "C:\temp\dev\AK7030-OTP\common.c"
  3210 ;; Parameters:    Size  Location     Type
  3211 ;;		None
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;		None
  3214 ;; Return value:  Size  Location     Type
  3215 ;;		None               void
  3216 ;; Registers used:
  3217 ;;		wreg, status,2, status,0, pclath, cstack
  3218 ;; Tracked objects:
  3219 ;;		On entry : 0/20
  3220 ;;		On exit  : 40/0
  3221 ;;		Unchanged: FFF9F/0
  3222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3223 ;;      Params:         0       0       0       0       0
  3224 ;;      Locals:         0       0       0       0       0
  3225 ;;      Temps:          0       0       0       0       0
  3226 ;;      Totals:         0       0       0       0       0
  3227 ;;Total ram usage:        0 bytes
  3228 ;; Hardware stack levels used:    1
  3229 ;; Hardware stack levels required when called:    4
  3230 ;; This function calls:
  3231 ;;		_getAD_ConvertFlag
  3232 ;;		_setAD_ConvertFlag
  3233 ;;		_AD_Sample
  3234 ;;		_adc_start
  3235 ;; This function is called by:
  3236 ;;		_main
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239  0711                     _process_AD_Converter_Value:	
  3240                           
  3241                           ;common.c: 303: if(getAD_ConvertFlag())
  3242                           
  3243                           ; Regs used in _process_AD_Converter_Value: [wreg+status,2+status,0+pclath+cstack]
  3244  0711  271C  118A         	fcall	_getAD_ConvertFlag
  3245  0713  3A00               	xorlw	0
  3246  0714  1903               	skipnz
  3247  0715  0008               	return
  3248                           
  3249                           ;common.c: 304: {
  3250                           ;common.c: 305: setAD_ConvertFlag(0);
  3251  0716  3000               	movlw	0
  3252  0717  2720  118A         	fcall	_setAD_ConvertFlag
  3253                           
  3254                           ;common.c: 306: AD_Sample();
  3255  0719  2728  118A         	fcall	_AD_Sample
  3256                           
  3257                           ;common.c: 318: adc_start();
  3258  071B  2F25               	ljmp	l4483
  3259  071C                     __end_of_process_AD_Converter_Value:	
  3260  071C                     __ptext1021:	
  3261 ;; =============== function _setAD_ConvertFlag ends ============
  3262                           
  3263                           
  3264 ;; *************** function _getAD_ConvertFlag *****************
  3265 ;; Defined at:
  3266 ;;		line 233 in file "C:\temp\dev\AK7030-OTP\common.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;		None
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;		None
  3271 ;; Return value:  Size  Location     Type
  3272 ;;                  1    wreg      unsigned char 
  3273 ;; Registers used:
  3274 ;;		wreg
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/20
  3277 ;;		On exit  : 60/20
  3278 ;;		Unchanged: FFF9F/0
  3279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3280 ;;      Params:         0       0       0       0       0
  3281 ;;      Locals:         0       0       0       0       0
  3282 ;;      Temps:          0       0       0       0       0
  3283 ;;      Totals:         0       0       0       0       0
  3284 ;;Total ram usage:        0 bytes
  3285 ;; Hardware stack levels used:    1
  3286 ;; Hardware stack levels required when called:    2
  3287 ;; This function calls:
  3288 ;;		Nothing
  3289 ;; This function is called by:
  3290 ;;		_process_AD_Converter_Value
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293  071C                     _getAD_ConvertFlag:	
  3294                           
  3295                           ;common.c: 234: return adc_convert_flag;
  3296                           
  3297                           ; Regs used in _getAD_ConvertFlag: [wreg]
  3298  071C  1683               	bsf	3,5	;RP0=1, select bank1
  3299  071D  1303               	bcf	3,6	;RP1=0, select bank1
  3300  071E  082D               	movf	_adc_convert_flag^(0+128),w
  3301  071F  0008               	return
  3302  0720                     __end_of_getAD_ConvertFlag:	
  3303  0720                     __ptext1020:	
  3304 ;; =============== function _clearAllTimer ends ============
  3305                           
  3306                           
  3307 ;; *************** function _setAD_ConvertFlag *****************
  3308 ;; Defined at:
  3309 ;;		line 239 in file "C:\temp\dev\AK7030-OTP\common.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;  flag            1    wreg     unsigned char 
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;  flag            1    0[BANK0 ] unsigned char 
  3314 ;; Return value:  Size  Location     Type
  3315 ;;		None               void
  3316 ;; Registers used:
  3317 ;;		wreg
  3318 ;; Tracked objects:
  3319 ;;		On entry : 60/20
  3320 ;;		On exit  : 60/20
  3321 ;;		Unchanged: FFF9F/0
  3322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3323 ;;      Params:         0       0       0       0       0
  3324 ;;      Locals:         0       1       0       0       0
  3325 ;;      Temps:          0       0       0       0       0
  3326 ;;      Totals:         0       1       0       0       0
  3327 ;;Total ram usage:        1 bytes
  3328 ;; Hardware stack levels used:    1
  3329 ;; Hardware stack levels required when called:    2
  3330 ;; This function calls:
  3331 ;;		Nothing
  3332 ;; This function is called by:
  3333 ;;		_process_AD_Converter_Value
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336  0720                     _setAD_ConvertFlag:	
  3337                           
  3338                           ; Regs used in _setAD_ConvertFlag: [wreg]
  3339                           ;setAD_ConvertFlag@flag stored from wreg
  3340  0720  1283               	bcf	3,5	;RP0=0, select bank0
  3341  0721  00A0               	movwf	setAD_ConvertFlag@flag
  3342                           
  3343                           ;common.c: 240: adc_convert_flag = flag;
  3344  0722  1683               	bsf	3,5	;RP0=1, select bank1
  3345  0723  00AD               	movwf	_adc_convert_flag^(0+128)
  3346  0724  0008               	return
  3347  0725                     __end_of_setAD_ConvertFlag:	
  3348  0725                     __ptext1034:	
  3349 ;; =============== function _startTwentyMinuteTimer ends ============
  3350                           
  3351                           
  3352 ;; *************** function _adc_start *****************
  3353 ;; Defined at:
  3354 ;;		line 100 in file "C:\temp\dev\AK7030-OTP\periph.c"
  3355 ;; Parameters:    Size  Location     Type
  3356 ;;		None
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;		None
  3359 ;; Return value:  Size  Location     Type
  3360 ;;		None               void
  3361 ;; Registers used:
  3362 ;;		None
  3363 ;; Tracked objects:
  3364 ;;		On entry : 40/20
  3365 ;;		On exit  : 60/0
  3366 ;;		Unchanged: FFF9F/0
  3367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3368 ;;      Params:         0       0       0       0       0
  3369 ;;      Locals:         0       0       0       0       0
  3370 ;;      Temps:          0       0       0       0       0
  3371 ;;      Totals:         0       0       0       0       0
  3372 ;;Total ram usage:        0 bytes
  3373 ;; Hardware stack levels used:    1
  3374 ;; Hardware stack levels required when called:    2
  3375 ;; This function calls:
  3376 ;;		Nothing
  3377 ;; This function is called by:
  3378 ;;		_main
  3379 ;;		_process_AD_Converter_Value
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382  0725                     _adc_start:	
  3383  0725                     l4483:	
  3384                           ; Regs used in _adc_start: []
  3385                           
  3386                           
  3387                           ;periph.c: 101: GO=1;
  3388  0725  1283               	bcf	3,5	;RP0=0, select bank0
  3389  0726  149F               	bsf	31,1
  3390  0727  0008               	return
  3391  0728                     __end_of_adc_start:	
  3392  0728                     __ptext1013:	
  3393 ;; =============== function _clearPinPortAndTimer ends ============
  3394                           
  3395                           
  3396 ;; *************** function _AD_Sample *****************
  3397 ;; Defined at:
  3398 ;;		line 332 in file "C:\temp\dev\AK7030-OTP\common.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;		None
  3401 ;; Auto vars:     Size  Location     Type
  3402 ;;		None
  3403 ;; Return value:  Size  Location     Type
  3404 ;;		None               void
  3405 ;; Registers used:
  3406 ;;		wreg, status,2, status,0, pclath, cstack
  3407 ;; Tracked objects:
  3408 ;;		On entry : 60/20
  3409 ;;		On exit  : 40/0
  3410 ;;		Unchanged: FFF9F/0
  3411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3412 ;;      Params:         0       0       0       0       0
  3413 ;;      Locals:         0       0       0       0       0
  3414 ;;      Temps:          0       0       0       0       0
  3415 ;;      Totals:         0       0       0       0       0
  3416 ;;Total ram usage:        0 bytes
  3417 ;; Hardware stack levels used:    1
  3418 ;; Hardware stack levels required when called:    3
  3419 ;; This function calls:
  3420 ;;		_adc_test_init
  3421 ;; This function is called by:
  3422 ;;		_process_AD_Converter_Value
  3423 ;; This function uses a non-reentrant model
  3424 ;;
  3425  0728                     _AD_Sample:	
  3426                           
  3427                           ;common.c: 333: if(sampleTimes < 12)
  3428                           
  3429                           ; Regs used in _AD_Sample: [wreg+status,2+status,0+pclath+cstack]
  3430  0728  300C               	movlw	12
  3431  0729  1283               	bcf	3,5	;RP0=0, select bank0
  3432  072A  0252               	subwf	_sampleTimes,w
  3433  072B  1803               	skipnc
  3434  072C  0008               	return
  3435  072D  300C               	movlw	12
  3436                           
  3437                           ;common.c: 334: {
  3438                           ;common.c: 336: sampleTimes++;
  3439  072E  0AD2               	incf	_sampleTimes,f
  3440                           
  3441                           ;common.c: 338: if(sampleTimes >= 12)
  3442  072F  0252               	subwf	_sampleTimes,w
  3443  0730  1C03               	skipc
  3444  0731  0008               	return
  3445                           
  3446                           ;common.c: 339: {
  3447                           ;common.c: 340: sampleTimes = 0;
  3448  0732  01D2               	clrf	_sampleTimes
  3449                           
  3450                           ;common.c: 342: if(sampleChannelSelect == 0)
  3451  0733  08D1               	movf	_sampleChannelSelect,f
  3452  0734  1D03               	skipz
  3453  0735  2F38               	goto	l4829
  3454                           
  3455                           ;common.c: 343: {
  3456                           ;common.c: 346: sampleChannelSelect = 2;
  3457  0736  3002               	movlw	2
  3458  0737  2F43               	goto	L17
  3459  0738                     l4829:	
  3460                           ;common.c: 347: }
  3461                           
  3462                           
  3463                           ;common.c: 348: else if(sampleChannelSelect == 2)
  3464  0738  0851               	movf	_sampleChannelSelect,w
  3465  0739  3A02               	xorlw	2
  3466  073A  1D03               	skipz
  3467  073B  2F3E               	goto	l4833
  3468                           
  3469                           ;common.c: 349: {
  3470                           ;common.c: 351: sampleChannelSelect = 5;
  3471  073C  3005               	movlw	5
  3472  073D  2F43               	goto	L17
  3473  073E                     l4833:	
  3474                           ;common.c: 352: }
  3475                           
  3476                           
  3477                           ;common.c: 353: else if(sampleChannelSelect == 5)
  3478  073E  0851               	movf	_sampleChannelSelect,w
  3479  073F  3A05               	xorlw	5
  3480  0740  1D03               	skipz
  3481  0741  2F45               	goto	l4837
  3482                           
  3483                           ;common.c: 354: {
  3484                           ;common.c: 356: sampleChannelSelect = 6;
  3485  0742  3006               	movlw	6
  3486  0743                     L17:	
  3487  0743  00D1               	movwf	_sampleChannelSelect
  3488                           
  3489                           ;common.c: 357: }
  3490  0744  2F46               	goto	l4839
  3491  0745                     l4837:	
  3492                           
  3493                           ;common.c: 358: else
  3494                           ;common.c: 359: {
  3495                           ;common.c: 361: sampleChannelSelect = 0;
  3496  0745  01D1               	clrf	_sampleChannelSelect
  3497  0746                     l4839:	
  3498                           
  3499                           ;common.c: 362: }
  3500                           ;common.c: 367: adc_test_init(sampleChannelSelect,3);
  3501  0746  3003               	movlw	3
  3502  0747  00A0               	movwf	?_adc_test_init
  3503  0748  0851               	movf	_sampleChannelSelect,w
  3504  0749  2F4A               	ljmp	_adc_test_init
  3505  074A                     __end_of_AD_Sample:	
  3506  074A                     __ptext1035:	
  3507 ;; =============== function _adc_start ends ============
  3508                           
  3509                           
  3510 ;; *************** function _adc_test_init *****************
  3511 ;; Defined at:
  3512 ;;		line 85 in file "C:\temp\dev\AK7030-OTP\periph.c"
  3513 ;; Parameters:    Size  Location     Type
  3514 ;;  channel         1    wreg     unsigned char 
  3515 ;;  ref             1    0[BANK0 ] unsigned char 
  3516 ;; Auto vars:     Size  Location     Type
  3517 ;;  channel         1    2[BANK0 ] unsigned char 
  3518 ;; Return value:  Size  Location     Type
  3519 ;;		None               void
  3520 ;; Registers used:
  3521 ;;		wreg, status,2, status,0
  3522 ;; Tracked objects:
  3523 ;;		On entry : 60/0
  3524 ;;		On exit  : 60/20
  3525 ;;		Unchanged: FFF9F/0
  3526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3527 ;;      Params:         0       1       0       0       0
  3528 ;;      Locals:         0       1       0       0       0
  3529 ;;      Temps:          0       1       0       0       0
  3530 ;;      Totals:         0       3       0       0       0
  3531 ;;Total ram usage:        3 bytes
  3532 ;; Hardware stack levels used:    1
  3533 ;; Hardware stack levels required when called:    2
  3534 ;; This function calls:
  3535 ;;		Nothing
  3536 ;; This function is called by:
  3537 ;;		_main
  3538 ;;		_AD_Sample
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541  074A                     _adc_test_init:	
  3542                           
  3543                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  3544                           ;adc_test_init@channel stored from wreg
  3545  074A  00A2               	movwf	adc_test_init@channel
  3546                           
  3547                           ;periph.c: 86: ADCON0 = 0x00;
  3548  074B  019F               	clrf	31	;volatile
  3549                           
  3550                           ;periph.c: 87: ADCON0|=channel<<2;
  3551  074C  00A1               	movwf	??_adc_test_init
  3552  074D  1003               	clrc
  3553  074E  0DA1               	rlf	??_adc_test_init,f
  3554  074F  1003               	clrc
  3555  0750  0D21               	rlf	??_adc_test_init,w
  3556  0751  049F               	iorwf	31,f	;volatile
  3557                           
  3558                           ;periph.c: 88: ADCON1|=ref<<6;
  3559  0752  0820               	movf	adc_test_init@ref,w
  3560  0753  00A1               	movwf	??_adc_test_init
  3561  0754  0CA1               	rrf	??_adc_test_init,f
  3562  0755  0CA1               	rrf	??_adc_test_init,f
  3563  0756  0C21               	rrf	??_adc_test_init,w
  3564  0757  39C0               	andlw	192
  3565  0758  1683               	bsf	3,5	;RP0=1, select bank1
  3566  0759  049F               	iorwf	31,f	;volatile
  3567                           
  3568                           ;periph.c: 89: ADON=1;
  3569  075A  1283               	bcf	3,5	;RP0=0, select bank0
  3570  075B  141F               	bsf	31,0
  3571                           
  3572                           ;periph.c: 90: ADIE=1;
  3573  075C  1683               	bsf	3,5	;RP0=1, select bank1
  3574  075D  150D               	bsf	13,2
  3575  075E  0008               	return
  3576  075F                     __end_of_adc_test_init:	
  3577                           
  3578                           	psect	text1016
  3579  0471                     __ptext1016:	
  3580 ;; =============== function _vHandle20sTimerOut ends ============
  3581                           
  3582                           
  3583 ;; *************** function _getAdOriginalCh5Value *****************
  3584 ;; Defined at:
  3585 ;;		line 272 in file "C:\temp\dev\AK7030-OTP\common.c"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;		None
  3588 ;; Auto vars:     Size  Location     Type
  3589 ;;		None
  3590 ;; Return value:  Size  Location     Type
  3591 ;;                  2   38[BANK0 ] unsigned int 
  3592 ;; Registers used:
  3593 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3594 ;; Tracked objects:
  3595 ;;		On entry : 60/0
  3596 ;;		On exit  : 160/0
  3597 ;;		Unchanged: FFE00/0
  3598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3599 ;;      Params:         0       2       0       0       0
  3600 ;;      Locals:         0       0       0       0       0
  3601 ;;      Temps:          0       0       0       0       0
  3602 ;;      Totals:         0       2       0       0       0
  3603 ;;Total ram usage:        2 bytes
  3604 ;; Hardware stack levels used:    1
  3605 ;; Hardware stack levels required when called:    3
  3606 ;; This function calls:
  3607 ;;		_Filter
  3608 ;; This function is called by:
  3609 ;;		_main
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612  0471                     _getAdOriginalCh5Value:	
  3613                           
  3614                           ;common.c: 274: return Filter(uiSampleChannelFifth);
  3615                           
  3616                           ; Regs used in _getAdOriginalCh5Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  3617  0471  3090               	movlw	_uiSampleChannelFifth& (0+255)
  3618  0472  00A0               	movwf	?_Filter
  3619  0473  3001               	movlw	1
  3620  0474  00A1               	movwf	?_Filter+1
  3621  0475  2652               	fcall	_Filter
  3622  0476  0821               	movf	?_Filter+1,w
  3623  0477  00C7               	movwf	?_getAdOriginalCh5Value+1
  3624  0478  0820               	movf	?_Filter,w
  3625  0479  00C6               	movwf	?_getAdOriginalCh5Value
  3626  047A  0008               	return
  3627  047B                     __end_of_getAdOriginalCh5Value:	
  3628  047B                     __ptext1018:	
  3629 ;; =============== function _getAdOriginalCh6Value ends ============
  3630                           
  3631                           
  3632 ;; *************** function _getAdOriginalCh0Value *****************
  3633 ;; Defined at:
  3634 ;;		line 263 in file "C:\temp\dev\AK7030-OTP\common.c"
  3635 ;; Parameters:    Size  Location     Type
  3636 ;;		None
  3637 ;; Auto vars:     Size  Location     Type
  3638 ;;		None
  3639 ;; Return value:  Size  Location     Type
  3640 ;;                  2   38[BANK0 ] unsigned int 
  3641 ;; Registers used:
  3642 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3643 ;; Tracked objects:
  3644 ;;		On entry : 40/0
  3645 ;;		On exit  : 160/0
  3646 ;;		Unchanged: FFE00/0
  3647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3648 ;;      Params:         0       2       0       0       0
  3649 ;;      Locals:         0       0       0       0       0
  3650 ;;      Temps:          0       0       0       0       0
  3651 ;;      Totals:         0       2       0       0       0
  3652 ;;Total ram usage:        2 bytes
  3653 ;; Hardware stack levels used:    1
  3654 ;; Hardware stack levels required when called:    3
  3655 ;; This function calls:
  3656 ;;		_Filter
  3657 ;; This function is called by:
  3658 ;;		_main
  3659 ;; This function uses a non-reentrant model
  3660 ;;
  3661  047B                     _getAdOriginalCh0Value:	
  3662                           
  3663                           ;common.c: 265: return Filter(uiSampleChannelZero);
  3664                           
  3665                           ; Regs used in _getAdOriginalCh0Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  3666  047B  30C4               	movlw	_uiSampleChannelZero& (0+255)
  3667  047C  1283               	bcf	3,5	;RP0=0, select bank0
  3668  047D  00A0               	movwf	?_Filter
  3669  047E  01A1               	clrf	?_Filter+1
  3670  047F  2652               	fcall	_Filter
  3671  0480  0821               	movf	?_Filter+1,w
  3672  0481  00C7               	movwf	?_getAdOriginalCh0Value+1
  3673  0482  0820               	movf	?_Filter,w
  3674  0483  00C6               	movwf	?_getAdOriginalCh0Value
  3675  0484  0008               	return
  3676  0485                     __end_of_getAdOriginalCh0Value:	
  3677  0485                     __ptext1012:	
  3678 ;; =============== function _clearParaFunction1 ends ============
  3679                           
  3680                           
  3681 ;; *************** function _clearPinPortAndTimer *****************
  3682 ;; Defined at:
  3683 ;;		line 110 in file "C:\temp\dev\AK7030-OTP\main.c"
  3684 ;; Parameters:    Size  Location     Type
  3685 ;;		None
  3686 ;; Auto vars:     Size  Location     Type
  3687 ;;		None
  3688 ;; Return value:  Size  Location     Type
  3689 ;;		None               void
  3690 ;; Registers used:
  3691 ;;		status,2, status,0, pclath, cstack
  3692 ;; Tracked objects:
  3693 ;;		On entry : 60/0
  3694 ;;		On exit  : 60/0
  3695 ;;		Unchanged: FFF9F/0
  3696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3697 ;;      Params:         0       0       0       0       0
  3698 ;;      Locals:         0       0       0       0       0
  3699 ;;      Temps:          0       0       0       0       0
  3700 ;;      Totals:         0       0       0       0       0
  3701 ;;Total ram usage:        0 bytes
  3702 ;; Hardware stack levels used:    1
  3703 ;; Hardware stack levels required when called:    4
  3704 ;; This function calls:
  3705 ;;		_clearAllTimer
  3706 ;; This function is called by:
  3707 ;;		_main
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710  0485                     _clearPinPortAndTimer:	
  3711                           
  3712                           ;main.c: 112: PB0 = 0;
  3713                           
  3714                           ; Regs used in _clearPinPortAndTimer: [status,2+status,0+pclath+cstack]
  3715  0485  1006               	bcf	6,0
  3716                           
  3717                           ;main.c: 113: PA0 = 0;
  3718  0486  1005               	bcf	5,0
  3719                           
  3720                           ;main.c: 114: PA1 = 0;
  3721  0487  1085               	bcf	5,1
  3722                           
  3723                           ;main.c: 115: PA2 = 0;
  3724  0488  1105               	bcf	5,2
  3725                           
  3726                           ;main.c: 116: PA3 = 0;
  3727  0489  1185               	bcf	5,3
  3728                           
  3729                           ;main.c: 119: PBOD7 = 0;
  3730  048A  1683               	bsf	3,5	;RP0=1, select bank3
  3731  048B  1703               	bsf	3,6	;RP1=1, select bank3
  3732  048C  1388               	bcf	8,7
  3733                           
  3734                           ;main.c: 120: PB7 = 0;
  3735  048D  1283               	bcf	3,5	;RP0=0, select bank0
  3736  048E  1303               	bcf	3,6	;RP1=0, select bank0
  3737  048F  1386               	bcf	6,7
  3738                           
  3739                           ;main.c: 121: clearAllTimer();
  3740  0490  2CD1               	ljmp	l4747
  3741  0491                     __end_of_clearPinPortAndTimer:	
  3742  0491                     __ptext1011:	
  3743 ;; =============== function _process_AD_Converter_Value ends ============
  3744                           
  3745                           
  3746 ;; *************** function _clearParaFunction1 *****************
  3747 ;; Defined at:
  3748 ;;		line 581 in file "C:\temp\dev\AK7030-OTP\main.c"
  3749 ;; Parameters:    Size  Location     Type
  3750 ;;		None
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;		None
  3753 ;; Return value:  Size  Location     Type
  3754 ;;		None               void
  3755 ;; Registers used:
  3756 ;;		wreg, status,2, status,0, pclath, cstack
  3757 ;; Tracked objects:
  3758 ;;		On entry : 140/0
  3759 ;;		On exit  : 160/0
  3760 ;;		Unchanged: FFE9F/0
  3761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3762 ;;      Params:         0       0       0       0       0
  3763 ;;      Locals:         0       0       0       0       0
  3764 ;;      Temps:          0       0       0       0       0
  3765 ;;      Totals:         0       0       0       0       0
  3766 ;;Total ram usage:        0 bytes
  3767 ;; Hardware stack levels used:    1
  3768 ;; Hardware stack levels required when called:    4
  3769 ;; This function calls:
  3770 ;;		_setPA1
  3771 ;;		_setPA0
  3772 ;;		_setPB0
  3773 ;;		_setPB1
  3774 ;;		_setPB2
  3775 ;;		_clearAllTimer
  3776 ;;		_setPA3
  3777 ;;		_setPB4
  3778 ;; This function is called by:
  3779 ;;		_main
  3780 ;; This function uses a non-reentrant model
  3781 ;;
  3782  0491                     _clearParaFunction1:	
  3783                           
  3784                           ;main.c: 582: setPA1(0);
  3785                           
  3786                           ; Regs used in _clearParaFunction1: [wreg+status,2+status,0+pclath+cstack]
  3787  0491  3000               	movlw	0
  3788  0492  24C8  118A         	fcall	_setPA1
  3789                           
  3790                           ;main.c: 583: setPA0(0);
  3791  0494  3000               	movlw	0
  3792  0495  24BF  118A         	fcall	_setPA0
  3793                           
  3794                           ;main.c: 585: setPB0(0);
  3795  0497  3000               	movlw	0
  3796  0498  24A7  118A         	fcall	_setPB0
  3797                           
  3798                           ;main.c: 586: setPB1(0);
  3799  049A  3000               	movlw	0
  3800  049B  24AF  118A         	fcall	_setPB1
  3801                           
  3802                           ;main.c: 587: setPB2(0);
  3803  049D  3000               	movlw	0
  3804  049E  24B7  118A         	fcall	_setPB2
  3805                           
  3806                           ;main.c: 589: clearAllTimer();
  3807  04A0  24D1  118A         	fcall	_clearAllTimer
  3808                           
  3809                           ;main.c: 591: setPA3(0);
  3810  04A2  3000               	movlw	0
  3811  04A3  262A  118A         	fcall	_setPA3
  3812                           
  3813                           ;main.c: 592: setPB4(0);
  3814  04A5  3000               	movlw	0
  3815  04A6  2D36               	ljmp	_setPB4
  3816  04A7                     __end_of_clearParaFunction1:	
  3817  04A7                     __ptext1049:	
  3818 ;; =============== function _setPB1 ends ============
  3819                           
  3820                           
  3821 ;; *************** function _setPB0 *****************
  3822 ;; Defined at:
  3823 ;;		line 166 in file "C:\temp\dev\AK7030-OTP\main.c"
  3824 ;; Parameters:    Size  Location     Type
  3825 ;;  bValue          1    wreg     unsigned char 
  3826 ;; Auto vars:     Size  Location     Type
  3827 ;;  bValue          1    0[BANK0 ] unsigned char 
  3828 ;; Return value:  Size  Location     Type
  3829 ;;		None               void
  3830 ;; Registers used:
  3831 ;;		wreg
  3832 ;; Tracked objects:
  3833 ;;		On entry : 60/0
  3834 ;;		On exit  : 60/0
  3835 ;;		Unchanged: FFF9F/0
  3836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3837 ;;      Params:         0       0       0       0       0
  3838 ;;      Locals:         0       1       0       0       0
  3839 ;;      Temps:          0       0       0       0       0
  3840 ;;      Totals:         0       1       0       0       0
  3841 ;;Total ram usage:        1 bytes
  3842 ;; Hardware stack levels used:    1
  3843 ;; Hardware stack levels required when called:    2
  3844 ;; This function calls:
  3845 ;;		Nothing
  3846 ;; This function is called by:
  3847 ;;		_clearParaFunction1
  3848 ;;		_main
  3849 ;; This function uses a non-reentrant model
  3850 ;;
  3851  04A7                     _setPB0:	
  3852                           
  3853                           ; Regs used in _setPB0: [wreg]
  3854                           ;setPB0@bValue stored from wreg
  3855  04A7  00A0               	movwf	setPB0@bValue
  3856                           
  3857                           ;main.c: 167: if( bValue )
  3858  04A8  0820               	movf	setPB0@bValue,w
  3859  04A9  1903               	btfsc	3,2
  3860  04AA  2CAD               	goto	l702
  3861                           
  3862                           ;main.c: 169: PB0 = 1;
  3863  04AB  1406               	bsf	6,0
  3864  04AC  0008               	return
  3865  04AD                     l702:	
  3866                           
  3867                           ;main.c: 173: else
  3868                           ;main.c: 175: PB0 = 0;
  3869  04AD  1006               	bcf	6,0
  3870  04AE  0008               	return
  3871  04AF                     __end_of_setPB0:	
  3872  04AF                     __ptext1048:	
  3873 ;; =============== function _setPB2 ends ============
  3874                           
  3875                           
  3876 ;; *************** function _setPB1 *****************
  3877 ;; Defined at:
  3878 ;;		line 183 in file "C:\temp\dev\AK7030-OTP\main.c"
  3879 ;; Parameters:    Size  Location     Type
  3880 ;;  bValue          1    wreg     unsigned char 
  3881 ;; Auto vars:     Size  Location     Type
  3882 ;;  bValue          1    0[BANK0 ] unsigned char 
  3883 ;; Return value:  Size  Location     Type
  3884 ;;		None               void
  3885 ;; Registers used:
  3886 ;;		wreg
  3887 ;; Tracked objects:
  3888 ;;		On entry : 60/0
  3889 ;;		On exit  : 60/0
  3890 ;;		Unchanged: FFF9F/0
  3891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3892 ;;      Params:         0       0       0       0       0
  3893 ;;      Locals:         0       1       0       0       0
  3894 ;;      Temps:          0       0       0       0       0
  3895 ;;      Totals:         0       1       0       0       0
  3896 ;;Total ram usage:        1 bytes
  3897 ;; Hardware stack levels used:    1
  3898 ;; Hardware stack levels required when called:    2
  3899 ;; This function calls:
  3900 ;;		Nothing
  3901 ;; This function is called by:
  3902 ;;		_clearParaFunction1
  3903 ;;		_main
  3904 ;; This function uses a non-reentrant model
  3905 ;;
  3906  04AF                     _setPB1:	
  3907                           
  3908                           ; Regs used in _setPB1: [wreg]
  3909                           ;setPB1@bValue stored from wreg
  3910  04AF  00A0               	movwf	setPB1@bValue
  3911                           
  3912                           ;main.c: 184: if( bValue )
  3913  04B0  0820               	movf	setPB1@bValue,w
  3914  04B1  1903               	btfsc	3,2
  3915  04B2  2CB5               	goto	l707
  3916                           
  3917                           ;main.c: 186: PB1 = 1;
  3918  04B3  1486               	bsf	6,1
  3919  04B4  0008               	return
  3920  04B5                     l707:	
  3921                           
  3922                           ;main.c: 190: else
  3923                           ;main.c: 192: PB1 = 0;
  3924  04B5  1086               	bcf	6,1
  3925  04B6  0008               	return
  3926  04B7                     __end_of_setPB1:	
  3927  04B7                     __ptext1047:	
  3928 ;; =============== function _setPA0 ends ============
  3929                           
  3930                           
  3931 ;; *************** function _setPB2 *****************
  3932 ;; Defined at:
  3933 ;;		line 200 in file "C:\temp\dev\AK7030-OTP\main.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;  bValue          1    wreg     unsigned char 
  3936 ;; Auto vars:     Size  Location     Type
  3937 ;;  bValue          1    0[BANK0 ] unsigned char 
  3938 ;; Return value:  Size  Location     Type
  3939 ;;		None               void
  3940 ;; Registers used:
  3941 ;;		wreg
  3942 ;; Tracked objects:
  3943 ;;		On entry : 60/0
  3944 ;;		On exit  : 60/0
  3945 ;;		Unchanged: FFF9F/0
  3946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3947 ;;      Params:         0       0       0       0       0
  3948 ;;      Locals:         0       1       0       0       0
  3949 ;;      Temps:          0       0       0       0       0
  3950 ;;      Totals:         0       1       0       0       0
  3951 ;;Total ram usage:        1 bytes
  3952 ;; Hardware stack levels used:    1
  3953 ;; Hardware stack levels required when called:    2
  3954 ;; This function calls:
  3955 ;;		Nothing
  3956 ;; This function is called by:
  3957 ;;		_clearParaFunction1
  3958 ;;		_main
  3959 ;; This function uses a non-reentrant model
  3960 ;;
  3961  04B7                     _setPB2:	
  3962                           
  3963                           ; Regs used in _setPB2: [wreg]
  3964                           ;setPB2@bValue stored from wreg
  3965  04B7  00A0               	movwf	setPB2@bValue
  3966                           
  3967                           ;main.c: 201: if( bValue )
  3968  04B8  0820               	movf	setPB2@bValue,w
  3969  04B9  1903               	btfsc	3,2
  3970  04BA  2CBD               	goto	l712
  3971                           
  3972                           ;main.c: 203: PB2 = 1;
  3973  04BB  1506               	bsf	6,2
  3974  04BC  0008               	return
  3975  04BD                     l712:	
  3976                           
  3977                           ;main.c: 207: else
  3978                           ;main.c: 209: PB2 = 0;
  3979  04BD  1106               	bcf	6,2
  3980  04BE  0008               	return
  3981  04BF                     __end_of_setPB2:	
  3982  04BF                     __ptext1046:	
  3983 ;; =============== function _setPA1 ends ============
  3984                           
  3985                           
  3986 ;; *************** function _setPA0 *****************
  3987 ;; Defined at:
  3988 ;;		line 217 in file "C:\temp\dev\AK7030-OTP\main.c"
  3989 ;; Parameters:    Size  Location     Type
  3990 ;;  bValue          1    wreg     unsigned char 
  3991 ;; Auto vars:     Size  Location     Type
  3992 ;;  bValue          1    0[BANK0 ] unsigned char 
  3993 ;; Return value:  Size  Location     Type
  3994 ;;		None               void
  3995 ;; Registers used:
  3996 ;;		wreg
  3997 ;; Tracked objects:
  3998 ;;		On entry : 40/0
  3999 ;;		On exit  : 60/0
  4000 ;;		Unchanged: FFF9F/0
  4001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4002 ;;      Params:         0       0       0       0       0
  4003 ;;      Locals:         0       1       0       0       0
  4004 ;;      Temps:          0       0       0       0       0
  4005 ;;      Totals:         0       1       0       0       0
  4006 ;;Total ram usage:        1 bytes
  4007 ;; Hardware stack levels used:    1
  4008 ;; Hardware stack levels required when called:    2
  4009 ;; This function calls:
  4010 ;;		Nothing
  4011 ;; This function is called by:
  4012 ;;		_clearParaFunction1
  4013 ;;		_main
  4014 ;; This function uses a non-reentrant model
  4015 ;;
  4016  04BF                     _setPA0:	
  4017                           
  4018                           ; Regs used in _setPA0: [wreg]
  4019                           ;setPA0@bValue stored from wreg
  4020  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  4021  04C0  00A0               	movwf	setPA0@bValue
  4022                           
  4023                           ;main.c: 218: if( bValue )
  4024  04C1  0820               	movf	setPA0@bValue,w
  4025  04C2  1903               	btfsc	3,2
  4026  04C3  2CC6               	goto	l717
  4027                           
  4028                           ;main.c: 220: PA0 = 1;
  4029  04C4  1405               	bsf	5,0
  4030  04C5  0008               	return
  4031  04C6                     l717:	
  4032                           
  4033                           ;main.c: 224: else
  4034                           ;main.c: 226: PA0 = 0;
  4035  04C6  1005               	bcf	5,0
  4036  04C7  0008               	return
  4037  04C8                     __end_of_setPA0:	
  4038  04C8                     __ptext1045:	
  4039 ;; =============== function _setPA2 ends ============
  4040                           
  4041                           
  4042 ;; *************** function _setPA1 *****************
  4043 ;; Defined at:
  4044 ;;		line 234 in file "C:\temp\dev\AK7030-OTP\main.c"
  4045 ;; Parameters:    Size  Location     Type
  4046 ;;  bValue          1    wreg     unsigned char 
  4047 ;; Auto vars:     Size  Location     Type
  4048 ;;  bValue          1    0[BANK0 ] unsigned char 
  4049 ;; Return value:  Size  Location     Type
  4050 ;;		None               void
  4051 ;; Registers used:
  4052 ;;		wreg
  4053 ;; Tracked objects:
  4054 ;;		On entry : 40/0
  4055 ;;		On exit  : 60/0
  4056 ;;		Unchanged: FFF9F/0
  4057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4058 ;;      Params:         0       0       0       0       0
  4059 ;;      Locals:         0       1       0       0       0
  4060 ;;      Temps:          0       0       0       0       0
  4061 ;;      Totals:         0       1       0       0       0
  4062 ;;Total ram usage:        1 bytes
  4063 ;; Hardware stack levels used:    1
  4064 ;; Hardware stack levels required when called:    2
  4065 ;; This function calls:
  4066 ;;		Nothing
  4067 ;; This function is called by:
  4068 ;;		_clearParaFunction1
  4069 ;;		_main
  4070 ;; This function uses a non-reentrant model
  4071 ;;
  4072  04C8                     _setPA1:	
  4073                           
  4074                           ; Regs used in _setPA1: [wreg]
  4075                           ;setPA1@bValue stored from wreg
  4076  04C8  1283               	bcf	3,5	;RP0=0, select bank0
  4077  04C9  00A0               	movwf	setPA1@bValue
  4078                           
  4079                           ;main.c: 235: if( bValue )
  4080  04CA  0820               	movf	setPA1@bValue,w
  4081  04CB  1903               	btfsc	3,2
  4082  04CC  2CCF               	goto	l722
  4083                           
  4084                           ;main.c: 237: PA1 = 1;
  4085  04CD  1485               	bsf	5,1
  4086  04CE  0008               	return
  4087  04CF                     l722:	
  4088                           
  4089                           ;main.c: 241: else
  4090                           ;main.c: 243: PA1 = 0;
  4091  04CF  1085               	bcf	5,1
  4092  04D0  0008               	return
  4093  04D1                     __end_of_setPA1:	
  4094  04D1                     __ptext1019:	
  4095 ;; =============== function _getAdOriginalCh0Value ends ============
  4096                           
  4097                           
  4098 ;; *************** function _clearAllTimer *****************
  4099 ;; Defined at:
  4100 ;;		line 100 in file "C:\temp\dev\AK7030-OTP\main.c"
  4101 ;; Parameters:    Size  Location     Type
  4102 ;;		None
  4103 ;; Auto vars:     Size  Location     Type
  4104 ;;		None
  4105 ;; Return value:  Size  Location     Type
  4106 ;;		None               void
  4107 ;; Registers used:
  4108 ;;		status,2, status,0, pclath, cstack
  4109 ;; Tracked objects:
  4110 ;;		On entry : 40/20
  4111 ;;		On exit  : 60/0
  4112 ;;		Unchanged: FFF9F/0
  4113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4114 ;;      Params:         0       0       0       0       0
  4115 ;;      Locals:         0       0       0       0       0
  4116 ;;      Temps:          0       0       0       0       0
  4117 ;;      Totals:         0       0       0       0       0
  4118 ;;Total ram usage:        0 bytes
  4119 ;; Hardware stack levels used:    1
  4120 ;; Hardware stack levels required when called:    3
  4121 ;; This function calls:
  4122 ;;		_clearTwelveHoursTimer
  4123 ;;		_clearThreeHoursTimer
  4124 ;;		_clearTwentySecondsTimer
  4125 ;;		_clearTwentyMinuteTimer
  4126 ;; This function is called by:
  4127 ;;		_clearPinPortAndTimer
  4128 ;;		_clearParaFunction1
  4129 ;;		_main
  4130 ;; This function uses a non-reentrant model
  4131 ;;
  4132  04D1                     _clearAllTimer:	
  4133  04D1                     l4747:	
  4134                           ; Regs used in _clearAllTimer: [status,2+status,0+pclath+cstack]
  4135                           
  4136                           
  4137                           ;main.c: 101: clearTwelveHoursTimer();
  4138  04D1  24D8  118A         	fcall	_clearTwelveHoursTimer
  4139                           
  4140                           ;main.c: 102: clearThreeHoursTimer();
  4141  04D3  24DE  118A         	fcall	_clearThreeHoursTimer
  4142                           
  4143                           ;main.c: 103: clearTwentySecondsTimer();
  4144  04D5  26E9  118A         	fcall	_clearTwentySecondsTimer
  4145                           
  4146                           ;main.c: 104: clearTwentyMinuteTimer();
  4147  04D7  2EF1               	ljmp	l4417
  4148  04D8                     __end_of_clearAllTimer:	
  4149  04D8                     __ptext1054:	
  4150 ;; =============== function _clearThreeHoursTimer ends ============
  4151                           
  4152                           
  4153 ;; *************** function _clearTwelveHoursTimer *****************
  4154 ;; Defined at:
  4155 ;;		line 406 in file "C:\temp\dev\AK7030-OTP\common.c"
  4156 ;; Parameters:    Size  Location     Type
  4157 ;;		None
  4158 ;; Auto vars:     Size  Location     Type
  4159 ;;		None
  4160 ;; Return value:  Size  Location     Type
  4161 ;;		None               void
  4162 ;; Registers used:
  4163 ;;		status,2
  4164 ;; Tracked objects:
  4165 ;;		On entry : 40/20
  4166 ;;		On exit  : 60/0
  4167 ;;		Unchanged: FFF9F/0
  4168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4169 ;;      Params:         0       0       0       0       0
  4170 ;;      Locals:         0       0       0       0       0
  4171 ;;      Temps:          0       0       0       0       0
  4172 ;;      Totals:         0       0       0       0       0
  4173 ;;Total ram usage:        0 bytes
  4174 ;; Hardware stack levels used:    1
  4175 ;; Hardware stack levels required when called:    2
  4176 ;; This function calls:
  4177 ;;		Nothing
  4178 ;; This function is called by:
  4179 ;;		_clearAllTimer
  4180 ;; This function uses a non-reentrant model
  4181 ;;
  4182  04D8                     _clearTwelveHoursTimer:	
  4183                           
  4184                           ;common.c: 407: uiBigTimer = 0;
  4185                           
  4186                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  4187  04D8  1683               	bsf	3,5	;RP0=1, select bank1
  4188  04D9  01A0               	clrf	_uiBigTimer^(0+128)
  4189  04DA  01A1               	clrf	(_uiBigTimer+1)^(0+128)
  4190                           
  4191                           ;common.c: 408: bBigTimerStartFlag = 0;
  4192  04DB  1283               	bcf	3,5	;RP0=0, select bank0
  4193  04DC  01CC               	clrf	_bBigTimerStartFlag
  4194  04DD  0008               	return
  4195  04DE                     __end_of_clearTwelveHoursTimer:	
  4196  04DE                     __ptext1053:	
  4197 ;; =============== function _clearTwentySecondsTimer ends ============
  4198                           
  4199                           
  4200 ;; *************** function _clearThreeHoursTimer *****************
  4201 ;; Defined at:
  4202 ;;		line 413 in file "C:\temp\dev\AK7030-OTP\common.c"
  4203 ;; Parameters:    Size  Location     Type
  4204 ;;		None
  4205 ;; Auto vars:     Size  Location     Type
  4206 ;;		None
  4207 ;; Return value:  Size  Location     Type
  4208 ;;		None               void
  4209 ;; Registers used:
  4210 ;;		status,2
  4211 ;; Tracked objects:
  4212 ;;		On entry : 60/0
  4213 ;;		On exit  : 60/0
  4214 ;;		Unchanged: FFF9F/0
  4215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4216 ;;      Params:         0       0       0       0       0
  4217 ;;      Locals:         0       0       0       0       0
  4218 ;;      Temps:          0       0       0       0       0
  4219 ;;      Totals:         0       0       0       0       0
  4220 ;;Total ram usage:        0 bytes
  4221 ;; Hardware stack levels used:    1
  4222 ;; Hardware stack levels required when called:    2
  4223 ;; This function calls:
  4224 ;;		Nothing
  4225 ;; This function is called by:
  4226 ;;		_clearAllTimer
  4227 ;;		_main
  4228 ;; This function uses a non-reentrant model
  4229 ;;
  4230  04DE                     _clearThreeHoursTimer:	
  4231                           
  4232                           ;common.c: 414: uiSmallTimer = 0;
  4233                           
  4234                           ; Regs used in _clearThreeHoursTimer: [status,2]
  4235  04DE  1683               	bsf	3,5	;RP0=1, select bank1
  4236  04DF  01A2               	clrf	_uiSmallTimer^(0+128)
  4237  04E0  01A3               	clrf	(_uiSmallTimer+1)^(0+128)
  4238                           
  4239                           ;common.c: 415: bSmallTimerStartFlag = 0;
  4240  04E1  1283               	bcf	3,5	;RP0=0, select bank0
  4241  04E2  01CD               	clrf	_bSmallTimerStartFlag
  4242  04E3  0008               	return
  4243  04E4                     __end_of_clearThreeHoursTimer:	
  4244  04E4                     __ptext1015:	
  4245 ;; =============== function _getAdOriginalCh2Value ends ============
  4246                           
  4247                           
  4248 ;; *************** function _vHandle20sTimerOut *****************
  4249 ;; Defined at:
  4250 ;;		line 2484 in file "C:\temp\dev\AK7030-OTP\main.c"
  4251 ;; Parameters:    Size  Location     Type
  4252 ;;  bClearStep      1    wreg     unsigned char 
  4253 ;; Auto vars:     Size  Location     Type
  4254 ;;  bClearStep      1    1[BANK0 ] unsigned char 
  4255 ;; Return value:  Size  Location     Type
  4256 ;;		None               void
  4257 ;; Registers used:
  4258 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4259 ;; Tracked objects:
  4260 ;;		On entry : 140/0
  4261 ;;		On exit  : 160/20
  4262 ;;		Unchanged: FFE9F/0
  4263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4264 ;;      Params:         0       0       0       0       0
  4265 ;;      Locals:         0       1       0       0       0
  4266 ;;      Temps:          0       0       0       0       0
  4267 ;;      Totals:         0       1       0       0       0
  4268 ;;Total ram usage:        1 bytes
  4269 ;; Hardware stack levels used:    1
  4270 ;; Hardware stack levels required when called:    3
  4271 ;; This function calls:
  4272 ;;		_setPA3
  4273 ;;		_setPB4
  4274 ;;		_setPB6
  4275 ;;		_setPB6AsInput
  4276 ;;		_clearTwentySecondsTimer
  4277 ;; This function is called by:
  4278 ;;		_main
  4279 ;; This function uses a non-reentrant model
  4280 ;;
  4281  04E4                     _vHandle20sTimerOut:	
  4282                           
  4283                           ; Regs used in _vHandle20sTimerOut: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4284                           ;vHandle20sTimerOut@bClearStep stored from wreg
  4285  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  4286  04E5  00A1               	movwf	vHandle20sTimerOut@bClearStep
  4287                           
  4288                           ;main.c: 2485: static unsigned char ucTimerOnBehaviorStep = 0;
  4289                           ;main.c: 2487: static unsigned char ucTimeCnt = 0;
  4290                           ;main.c: 2489: if( 1 == bClearStep)
  4291  04E6  0B21               	decfsz	vHandle20sTimerOut@bClearStep,w
  4292  04E7  2D23               	goto	l4811
  4293                           
  4294                           ;main.c: 2492: ucTimerOnBehaviorStep = 0;
  4295  04E8  1683               	bsf	3,5	;RP0=1, select bank1
  4296  04E9  01B8               	clrf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128)
  4297                           
  4298                           ;main.c: 2493: ucTimeCnt = 0;
  4299  04EA  01FD               	clrf	vHandle20sTimerOut@ucTimeCnt
  4300  04EB  2D23               	goto	l4811
  4301  04EC                     l4765:	
  4302                           
  4303                           ;main.c: 2499: {
  4304                           ;main.c: 2504: setPA3(0);
  4305  04EC  3000               	movlw	0
  4306  04ED  262A  118A         	fcall	_setPA3
  4307                           
  4308                           ;main.c: 2505: setPB4(0);
  4309  04EF  3000               	movlw	0
  4310  04F0  2536  118A         	fcall	_setPB4
  4311                           
  4312                           ;main.c: 2506: setPB6(1);
  4313  04F2  3001               	movlw	1
  4314  04F3  263C               	fcall	_setPB6
  4315                           
  4316                           ;main.c: 2507: ucTimeCnt = 0;
  4317  04F4  01FD               	clrf	vHandle20sTimerOut@ucTimeCnt
  4318                           
  4319                           ;main.c: 2508: ucTimerOnBehaviorStep = 1;
  4320  04F5  1683               	bsf	3,5	;RP0=1, select bank1
  4321  04F6  01B8               	clrf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128)
  4322  04F7  0AB8               	incf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128),f
  4323                           
  4324                           ;main.c: 2509: break;
  4325  04F8  0008               	return
  4326  04F9                     l4771:	
  4327  04F9  300A               	movlw	10
  4328                           
  4329                           ;main.c: 2513: {
  4330                           ;main.c: 2517: ucTimeCnt++;
  4331  04FA  0AFD               	incf	vHandle20sTimerOut@ucTimeCnt,f
  4332                           
  4333                           ;main.c: 2519: if( ucTimeCnt >= 10)
  4334  04FB  027D               	subwf	vHandle20sTimerOut@ucTimeCnt,w
  4335  04FC  1C03               	skipc
  4336  04FD  0008               	return
  4337  04FE  3002               	movlw	2
  4338                           
  4339                           ;main.c: 2520: {
  4340                           ;main.c: 2521: ucTimeCnt = 0;
  4341  04FF  01FD               	clrf	vHandle20sTimerOut@ucTimeCnt
  4342                           
  4343                           ;main.c: 2522: ucTimerOnBehaviorStep = 2;
  4344  0500  00B8               	movwf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128)
  4345  0501  0008               	return
  4346  0502                     l4779:	
  4347                           
  4348                           ;main.c: 2528: {
  4349                           ;main.c: 2532: ucTimeCnt++;
  4350  0502  0AFD               	incf	vHandle20sTimerOut@ucTimeCnt,f
  4351                           
  4352                           ;main.c: 2534: if( ucTimeCnt >= 1)
  4353  0503  087D               	movf	vHandle20sTimerOut@ucTimeCnt,w
  4354  0504  1903               	btfsc	3,2
  4355  0505  0008               	return
  4356  0506  3003               	movlw	3
  4357                           
  4358                           ;main.c: 2535: {
  4359                           ;main.c: 2536: ucTimeCnt = 0;
  4360  0507  01FD               	clrf	vHandle20sTimerOut@ucTimeCnt
  4361                           
  4362                           ;main.c: 2538: ucTimerOnBehaviorStep = 3;
  4363  0508  00B8               	movwf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128)
  4364  0509  0008               	return
  4365  050A                     l4787:	
  4366                           
  4367                           ;main.c: 2544: {
  4368                           ;main.c: 2548: setPA3(1);
  4369  050A  3001               	movlw	1
  4370  050B  262A  118A         	fcall	_setPA3
  4371                           
  4372                           ;main.c: 2549: setPB4(1);
  4373  050D  3001               	movlw	1
  4374  050E  2536  118A         	fcall	_setPB4
  4375                           
  4376                           ;main.c: 2551: setPB6AsInput();
  4377  0510  264A               	fcall	_setPB6AsInput
  4378  0511  3004               	movlw	4
  4379                           
  4380                           ;main.c: 2552: ucTimeCnt = 0;
  4381  0512  01FD               	clrf	vHandle20sTimerOut@ucTimeCnt
  4382                           
  4383                           ;main.c: 2554: ucTimerOnBehaviorStep = 4;
  4384  0513  00B8               	movwf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128)
  4385                           
  4386                           ;main.c: 2555: break;
  4387  0514  0008               	return
  4388  0515                     l4795:	
  4389  0515  3002               	movlw	2
  4390                           
  4391                           ;main.c: 2558: {
  4392                           ;main.c: 2562: ucTimeCnt++;
  4393  0516  0AFD               	incf	vHandle20sTimerOut@ucTimeCnt,f
  4394                           
  4395                           ;main.c: 2564: if( ucTimeCnt >= 2)
  4396  0517  027D               	subwf	vHandle20sTimerOut@ucTimeCnt,w
  4397  0518  1C03               	skipc
  4398  0519  0008               	return
  4399                           
  4400                           ;main.c: 2565: {
  4401                           ;main.c: 2566: clearTwentySecondsTimer();
  4402  051A  26E9               	fcall	_clearTwentySecondsTimer
  4403                           
  4404                           ;main.c: 2568: ucTimeCnt = 0;
  4405  051B  01FD               	clrf	vHandle20sTimerOut@ucTimeCnt
  4406                           
  4407                           ;main.c: 2570: ucADC4_Step = ADC4_STEP_INIT;
  4408  051C  1283               	bcf	3,5	;RP0=0, select bank0
  4409  051D  3003               	movlw	3
  4410  051E  01D3               	clrf	_ucADC4_Step
  4411                           
  4412                           ;main.c: 2572: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  4413  051F  00D0               	movwf	_enumMainLoopStep
  4414                           
  4415                           ;main.c: 2574: ucTimerOnBehaviorStep = 0;
  4416  0520  1683               	bsf	3,5	;RP0=1, select bank1
  4417  0521  01B8               	clrf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128)
  4418  0522  0008               	return
  4419  0523                     l4811:	
  4420  0523  1683               	bsf	3,5	;RP0=1, select bank1
  4421  0524  0838               	movf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128),w
  4422                           
  4423                           ; Switch size 1, requested type "space"
  4424                           ; Number of cases is 5, Range of values is 0 to 4
  4425                           ; switch strategies available:
  4426                           ; Name         Instructions Cycles
  4427                           ; simple_byte           16     9 (average)
  4428                           ; direct_byte           17     7 (fixed)
  4429                           ; jumptable            260     6 (fixed)
  4430                           ; rangetable             9     6 (fixed)
  4431                           ; spacedrange           16     9 (fixed)
  4432                           ; locatedrange           5     3 (fixed)
  4433                           ;	Chosen strategy is simple_byte
  4434  0525  3A00               	xorlw	0	; case 0
  4435  0526  1903               	skipnz
  4436  0527  2CEC               	goto	l4765
  4437  0528  3A01               	xorlw	1	; case 1
  4438  0529  1903               	skipnz
  4439  052A  2CF9               	goto	l4771
  4440  052B  3A03               	xorlw	3	; case 2
  4441  052C  1903               	skipnz
  4442  052D  2D02               	goto	l4779
  4443  052E  3A01               	xorlw	1	; case 3
  4444  052F  1903               	skipnz
  4445  0530  2D0A               	goto	l4787
  4446  0531  3A07               	xorlw	7	; case 4
  4447  0532  1903               	skipnz
  4448  0533  2D15               	goto	l4795
  4449  0534  2D35               	goto	l1128
  4450  0535                     l1128:	
  4451  0535  0008               	return
  4452  0536                     __end_of_vHandle20sTimerOut:	
  4453  0536                     __ptext1041:	
  4454 ;; =============== function _setPA6 ends ============
  4455                           
  4456                           
  4457 ;; *************** function _setPB4 *****************
  4458 ;; Defined at:
  4459 ;;		line 310 in file "C:\temp\dev\AK7030-OTP\main.c"
  4460 ;; Parameters:    Size  Location     Type
  4461 ;;  bValue          1    wreg     unsigned char 
  4462 ;; Auto vars:     Size  Location     Type
  4463 ;;  bValue          1    0[BANK0 ] unsigned char 
  4464 ;; Return value:  Size  Location     Type
  4465 ;;		None               void
  4466 ;; Registers used:
  4467 ;;		wreg
  4468 ;; Tracked objects:
  4469 ;;		On entry : 60/0
  4470 ;;		On exit  : 60/0
  4471 ;;		Unchanged: FFF9F/0
  4472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4473 ;;      Params:         0       0       0       0       0
  4474 ;;      Locals:         0       1       0       0       0
  4475 ;;      Temps:          0       0       0       0       0
  4476 ;;      Totals:         0       1       0       0       0
  4477 ;;Total ram usage:        1 bytes
  4478 ;; Hardware stack levels used:    1
  4479 ;; Hardware stack levels required when called:    2
  4480 ;; This function calls:
  4481 ;;		Nothing
  4482 ;; This function is called by:
  4483 ;;		_clearParaFunction1
  4484 ;;		_main
  4485 ;;		_vHandle20sTimerOut
  4486 ;; This function uses a non-reentrant model
  4487 ;;
  4488  0536                     _setPB4:	
  4489                           
  4490                           ; Regs used in _setPB4: [wreg]
  4491                           ;setPB4@bValue stored from wreg
  4492  0536  00A0               	movwf	setPB4@bValue
  4493                           
  4494                           ;main.c: 311: if( bValue )
  4495  0537  0820               	movf	setPB4@bValue,w
  4496  0538  1903               	btfsc	3,2
  4497  0539  2D3C               	goto	l742
  4498                           
  4499                           ;main.c: 313: PB4 = 1;
  4500  053A  1606               	bsf	6,4
  4501  053B  0008               	return
  4502  053C                     l742:	
  4503                           
  4504                           ;main.c: 317: else
  4505                           ;main.c: 319: PB4 = 0;
  4506  053C  1206               	bcf	6,4
  4507  053D  0008               	return
  4508  053E                     __end_of_setPB4:	
  4509  053E                     __ptext1009:	
  4510 ;; =============== function _main ends ============
  4511                           
  4512                           
  4513 ;; *************** function _vHandle20sTimeron *****************
  4514 ;; Defined at:
  4515 ;;		line 2207 in file "C:\temp\dev\AK7030-OTP\main.c"
  4516 ;; Parameters:    Size  Location     Type
  4517 ;;		None
  4518 ;; Auto vars:     Size  Location     Type
  4519 ;;		None
  4520 ;; Return value:  Size  Location     Type
  4521 ;;		None               void
  4522 ;; Registers used:
  4523 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4524 ;; Tracked objects:
  4525 ;;		On entry : 140/0
  4526 ;;		On exit  : 140/0
  4527 ;;		Unchanged: FFE00/0
  4528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4529 ;;      Params:         0       0       0       0       0
  4530 ;;      Locals:         0       0       0       0       0
  4531 ;;      Temps:          0       0       0       0       0
  4532 ;;      Totals:         0       0       0       0       0
  4533 ;;Total ram usage:        0 bytes
  4534 ;; Hardware stack levels used:    1
  4535 ;; Hardware stack levels required when called:    4
  4536 ;; This function calls:
  4537 ;;		_getAdOriginalCh2Value
  4538 ;;		_getAdOriginalCh6Value
  4539 ;;		_vPause20sTimer
  4540 ;;		_setPA3
  4541 ;;		_setPB6
  4542 ;;		_setPB6AsInput
  4543 ;; This function is called by:
  4544 ;;		_main
  4545 ;; This function uses a non-reentrant model
  4546 ;;
  4547  053E                     _vHandle20sTimeron:	
  4548                           
  4549                           ;main.c: 2208: enum enum_waiting_loop_step
  4550                           ;main.c: 2209: {
  4551                           ;main.c: 2210: WAITING_LOOP_STEP1 = 0,
  4552                           ;main.c: 2211: WAITING_LOOP_STEP2,
  4553                           ;main.c: 2212: WAITING_LOOP_STEP3,
  4554                           ;main.c: 2213: WAITING_LOOP_STEP4,
  4555                           ;main.c: 2214: WAITING_LOOP_STEP5,
  4556                           ;main.c: 2215: WAITING_LOOP_STEP6,
  4557                           ;main.c: 2216: WAITING_LOOP_STEP7,
  4558                           ;main.c: 2217: WAITING_LOOP_STEP8,
  4559                           ;main.c: 2218: WAITING_LOOP_STEP9,
  4560                           ;main.c: 2219: };
  4561                           ;main.c: 2221: enum enumCmpStep
  4562                           ;main.c: 2222: {
  4563                           ;main.c: 2223: COMPARE_STEP0 = 0,
  4564                           ;main.c: 2224: COMPARE_STEP1,
  4565                           ;main.c: 2225: COMPARE_STEP2,
  4566                           
  4567                           ; Regs used in _vHandle20sTimeron: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4568  053E  2E0B               	goto	l4995
  4569  053F                     l4861:	
  4570                           
  4571                           ;main.c: 2242: {
  4572                           ;main.c: 2243: if((getAdOriginalCh2Value() > 1950))
  4573  053F  2621  118A         	fcall	_getAdOriginalCh2Value
  4574  0541  3007               	movlw	7
  4575  0542  0247               	subwf	?_getAdOriginalCh2Value+1,w
  4576  0543  309F               	movlw	159
  4577  0544  1903               	skipnz
  4578  0545  0246               	subwf	?_getAdOriginalCh2Value,w
  4579  0546  1C03               	skipc
  4580  0547  2D4C               	goto	l4867
  4581                           
  4582                           ;main.c: 2244: {
  4583                           ;main.c: 2245: ucTimerCntMore++;
  4584  0548  1683               	bsf	3,5	;RP0=1, select bank1
  4585  0549  0AC0               	incf	vHandle20sTimeron@ucTimerCntMore^(0+128),f
  4586                           
  4587                           ;main.c: 2246: ucTimerCntLess = 0;
  4588  054A  01BF               	clrf	vHandle20sTimeron@ucTimerCntLess^(0+128)
  4589                           
  4590                           ;main.c: 2247: }
  4591  054B  2D4F               	goto	l4871
  4592  054C                     l4867:	
  4593                           
  4594                           ;main.c: 2248: else
  4595                           ;main.c: 2249: {
  4596                           ;main.c: 2250: ucTimerCntLess++;
  4597  054C  1683               	bsf	3,5	;RP0=1, select bank1
  4598  054D  0ABF               	incf	vHandle20sTimeron@ucTimerCntLess^(0+128),f
  4599                           
  4600                           ;main.c: 2251: ucTimerCntMore = 0;
  4601  054E  01C0               	clrf	vHandle20sTimeron@ucTimerCntMore^(0+128)
  4602  054F                     l4871:	
  4603                           
  4604                           ;main.c: 2252: }
  4605                           ;main.c: 2254: if(ucTimerCntMore >= 2)
  4606  054F  3002               	movlw	2
  4607  0550  0240               	subwf	vHandle20sTimeron@ucTimerCntMore^(0+128),w
  4608  0551  1C03               	skipc
  4609  0552  2D56               	goto	l4877
  4610                           
  4611                           ;main.c: 2255: {
  4612                           ;main.c: 2256: ucCompareStep = COMPARE_STEP1;
  4613  0553  01B9               	clrf	vHandle20sTimeron@ucCompareStep^(0+128)
  4614  0554  0AB9               	incf	vHandle20sTimeron@ucCompareStep^(0+128),f
  4615                           
  4616                           ;main.c: 2257: ucTimerCntMore = 0;
  4617  0555  01C0               	clrf	vHandle20sTimeron@ucTimerCntMore^(0+128)
  4618  0556                     l4877:	
  4619                           
  4620                           ;main.c: 2258: }
  4621                           ;main.c: 2260: if(ucTimerCntLess >= 2)
  4622  0556  3002               	movlw	2
  4623  0557  023F               	subwf	vHandle20sTimeron@ucTimerCntLess^(0+128),w
  4624  0558  1C03               	skipc
  4625  0559  2E17               	goto	l4997
  4626                           
  4627                           ;main.c: 2261: {
  4628                           ;main.c: 2262: ucCompareStep = COMPARE_STEP2;
  4629  055A  3002               	movlw	2
  4630  055B  00B9               	movwf	vHandle20sTimeron@ucCompareStep^(0+128)
  4631                           
  4632                           ;main.c: 2263: ucTimerCntLess = 0;
  4633  055C  01BF               	clrf	vHandle20sTimeron@ucTimerCntLess^(0+128)
  4634  055D  2E17               	goto	l4997
  4635  055E                     l4883:	
  4636                           
  4637                           ;main.c: 2272: {
  4638                           ;main.c: 2273: static unsigned char ucMoreThanP8sCnt = 0;
  4639                           ;main.c: 2275: static unsigned char ucLessThanP8sCnt = 0;
  4640                           ;main.c: 2277: static unsigned char ucTimerCntN1 = 0;
  4641                           ;main.c: 2279: if((getAdOriginalCh2Value() < 1950))
  4642  055E  2621  118A         	fcall	_getAdOriginalCh2Value
  4643  0560  3007               	movlw	7
  4644  0561  0247               	subwf	?_getAdOriginalCh2Value+1,w
  4645  0562  309E               	movlw	158
  4646  0563  1903               	skipnz
  4647  0564  0246               	subwf	?_getAdOriginalCh2Value,w
  4648  0565  1803               	skipnc
  4649  0566  2D73               	goto	l4899
  4650                           
  4651                           ;main.c: 2280: {
  4652                           ;main.c: 2281: ucTimerCntN1++;
  4653  0567  1683               	bsf	3,5	;RP0=1, select bank1
  4654  0568  3002               	movlw	2
  4655  0569  0AC1               	incf	vHandle20sTimeron@ucTimerCntN1^(0+128),f
  4656                           
  4657                           ;main.c: 2282: if(ucTimerCntN1 >= 2)
  4658  056A  0241               	subwf	vHandle20sTimeron@ucTimerCntN1^(0+128),w
  4659  056B  1C03               	skipc
  4660  056C  2E17               	goto	l4997
  4661  056D  3002               	movlw	2
  4662                           
  4663                           ;main.c: 2283: {
  4664                           ;main.c: 2284: ucTimerCntN1 = 0;
  4665  056E  01C1               	clrf	vHandle20sTimeron@ucTimerCntN1^(0+128)
  4666                           
  4667                           ;main.c: 2285: ucCompareStep = COMPARE_STEP2;
  4668  056F  00B9               	movwf	vHandle20sTimeron@ucCompareStep^(0+128)
  4669                           
  4670                           ;main.c: 2287: ucLessThanP8sCnt = 0;
  4671  0570  01BB               	clrf	vHandle20sTimeron@ucLessThanP8sCnt^(0+128)
  4672                           
  4673                           ;main.c: 2289: ucMoreThanP8sCnt = 0;
  4674  0571  01BD               	clrf	vHandle20sTimeron@ucMoreThanP8sCnt^(0+128)
  4675  0572  2E17               	goto	l4997
  4676  0573                     l4899:	
  4677                           
  4678                           ;main.c: 2293: else
  4679                           ;main.c: 2294: ucTimerCntN1 = 0;
  4680  0573  1683               	bsf	3,5	;RP0=1, select bank1
  4681  0574  01C1               	clrf	vHandle20sTimeron@ucTimerCntN1^(0+128)
  4682                           
  4683                           ;main.c: 2300: if((getAdOriginalCh6Value() < 50))
  4684  0575  2633  118A         	fcall	_getAdOriginalCh6Value
  4685  0577  3000               	movlw	0
  4686  0578  0247               	subwf	?_getAdOriginalCh6Value+1,w
  4687  0579  3032               	movlw	50
  4688  057A  1903               	skipnz
  4689  057B  0246               	subwf	?_getAdOriginalCh6Value,w
  4690  057C  1803               	skipnc
  4691  057D  2D82               	goto	l4907
  4692                           
  4693                           ;main.c: 2301: {
  4694                           ;main.c: 2302: ucLessThanP8sCnt++;
  4695  057E  1683               	bsf	3,5	;RP0=1, select bank1
  4696  057F  0ABB               	incf	vHandle20sTimeron@ucLessThanP8sCnt^(0+128),f
  4697                           
  4698                           ;main.c: 2303: ucMoreThanP8sCnt = 0;
  4699  0580  01BD               	clrf	vHandle20sTimeron@ucMoreThanP8sCnt^(0+128)
  4700                           
  4701                           ;main.c: 2304: }
  4702  0581  2D85               	goto	l4911
  4703  0582                     l4907:	
  4704                           
  4705                           ;main.c: 2305: else
  4706                           ;main.c: 2306: {
  4707                           ;main.c: 2307: ucMoreThanP8sCnt++;
  4708  0582  1683               	bsf	3,5	;RP0=1, select bank1
  4709  0583  0ABD               	incf	vHandle20sTimeron@ucMoreThanP8sCnt^(0+128),f
  4710                           
  4711                           ;main.c: 2308: ucLessThanP8sCnt = 0;
  4712  0584  01BB               	clrf	vHandle20sTimeron@ucLessThanP8sCnt^(0+128)
  4713  0585                     l4911:	
  4714                           
  4715                           ;main.c: 2309: }
  4716                           ;main.c: 2311: if( ucLessThanP8sCnt >= 8)
  4717  0585  3008               	movlw	8
  4718  0586  023B               	subwf	vHandle20sTimeron@ucLessThanP8sCnt^(0+128),w
  4719  0587  1C03               	skipc
  4720  0588  2D8F               	goto	l4917
  4721                           
  4722                           ;main.c: 2312: {
  4723                           ;main.c: 2313: ucLessThanP8sCnt = 0;
  4724  0589  01BB               	clrf	vHandle20sTimeron@ucLessThanP8sCnt^(0+128)
  4725                           
  4726                           ;main.c: 2314: ucMoreThanP8sCnt = 0;
  4727  058A  01BD               	clrf	vHandle20sTimeron@ucMoreThanP8sCnt^(0+128)
  4728                           
  4729                           ;main.c: 2316: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  4730  058B  1283               	bcf	3,5	;RP0=0, select bank0
  4731  058C  01D0               	clrf	_enumMainLoopStep
  4732  058D  0AD0               	incf	_enumMainLoopStep,f
  4733  058E  2D98               	goto	L15
  4734  058F                     l4917:	
  4735                           ;main.c: 2320: ;
  4736                           ;main.c: 2321: }
  4737                           
  4738                           ;main.c: 2319: ucCompareStep = COMPARE_STEP0;
  4739                           
  4740                           ;main.c: 2317: ucADC4_Step = ADC4_STEP_INIT;
  4741                           
  4742                           
  4743                           ;main.c: 2322: else if( ucMoreThanP8sCnt >= 8 )
  4744  058F  3008               	movlw	8
  4745  0590  023D               	subwf	vHandle20sTimeron@ucMoreThanP8sCnt^(0+128),w
  4746  0591  1C03               	skipc
  4747  0592  2E17               	goto	l4997
  4748  0593  3003               	movlw	3
  4749                           
  4750                           ;main.c: 2323: {
  4751                           ;main.c: 2324: ucLessThanP8sCnt = 0;
  4752  0594  01BB               	clrf	vHandle20sTimeron@ucLessThanP8sCnt^(0+128)
  4753                           
  4754                           ;main.c: 2325: ucMoreThanP8sCnt = 0;
  4755  0595  01BD               	clrf	vHandle20sTimeron@ucMoreThanP8sCnt^(0+128)
  4756                           
  4757                           ;main.c: 2327: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  4758  0596  1283               	bcf	3,5	;RP0=0, select bank0
  4759  0597  00D0               	movwf	_enumMainLoopStep
  4760  0598                     L15:	
  4761                           
  4762                           ;main.c: 2328: ucADC4_Step = ADC4_STEP_INIT;
  4763  0598  01D3               	clrf	_ucADC4_Step
  4764  0599                     l4925:	
  4765                           
  4766                           ;main.c: 2330: ucCompareStep = COMPARE_STEP0;
  4767  0599  1683               	bsf	3,5	;RP0=1, select bank1
  4768  059A  01B9               	clrf	vHandle20sTimeron@ucCompareStep^(0+128)
  4769                           
  4770                           ;main.c: 2331: ;
  4771                           ;main.c: 2332: }
  4772  059B  2E17               	goto	l4997
  4773  059C                     l4927:	
  4774                           
  4775                           ;main.c: 2355: {
  4776                           ;main.c: 2359: vPause20sTimer(1);
  4777  059C  3001               	movlw	1
  4778  059D  264D  118A         	fcall	_vPause20sTimer
  4779  059F  3000               	movlw	0
  4780                           
  4781                           ;main.c: 2360: ucTimeCntP2s = 0;
  4782  05A0  01BE               	clrf	vHandle20sTimeron@ucTimeCntP2s^(0+128)
  4783                           
  4784                           ;main.c: 2361: setPA3(0);
  4785  05A1  262A  118A         	fcall	_setPA3
  4786                           
  4787                           ;main.c: 2362: setPB6(1);
  4788  05A3  3001               	movlw	1
  4789  05A4  263C  118A         	fcall	_setPB6
  4790                           
  4791                           ;main.c: 2363: waitLoopStep = WAITING_LOOP_STEP2;
  4792  05A6  1683               	bsf	3,5	;RP0=1, select bank1
  4793  05A7  01C3               	clrf	vHandle20sTimeron@waitLoopStep^(0+128)
  4794  05A8  0AC3               	incf	vHandle20sTimeron@waitLoopStep^(0+128),f
  4795                           
  4796                           ;main.c: 2364: break;
  4797  05A9  2E17               	goto	l4997
  4798  05AA                     l4937:	
  4799                           
  4800                           ;main.c: 2368: {
  4801                           ;main.c: 2372: if((getAdOriginalCh2Value() > 2300))
  4802  05AA  2621  118A         	fcall	_getAdOriginalCh2Value
  4803  05AC  3008               	movlw	8
  4804  05AD  0247               	subwf	?_getAdOriginalCh2Value+1,w
  4805  05AE  30FD               	movlw	253
  4806  05AF  1903               	skipnz
  4807  05B0  0246               	subwf	?_getAdOriginalCh2Value,w
  4808  05B1  1C03               	skipc
  4809  05B2  2DB6               	goto	l4941
  4810                           
  4811                           ;main.c: 2373: {
  4812                           ;main.c: 2374: ucTimeCntP2s++;
  4813  05B3  1683               	bsf	3,5	;RP0=1, select bank1
  4814  05B4  0ABE               	incf	vHandle20sTimeron@ucTimeCntP2s^(0+128),f
  4815                           
  4816                           ;main.c: 2375: }
  4817  05B5  2DB8               	goto	l4943
  4818  05B6                     l4941:	
  4819                           
  4820                           ;main.c: 2376: else
  4821                           ;main.c: 2377: ucTimeCntP2s = 0;
  4822  05B6  1683               	bsf	3,5	;RP0=1, select bank1
  4823  05B7  01BE               	clrf	vHandle20sTimeron@ucTimeCntP2s^(0+128)
  4824  05B8                     l4943:	
  4825                           
  4826                           ;main.c: 2379: if( ucTimeCntP2s >= 2)
  4827  05B8  3002               	movlw	2
  4828  05B9  023E               	subwf	vHandle20sTimeron@ucTimeCntP2s^(0+128),w
  4829  05BA  1C03               	skipc
  4830  05BB  2E17               	goto	l4997
  4831  05BC  3002               	movlw	2
  4832                           
  4833                           ;main.c: 2380: {
  4834                           ;main.c: 2381: ucTimeCntP2s = 0;
  4835  05BD  01BE               	clrf	vHandle20sTimeron@ucTimeCntP2s^(0+128)
  4836                           
  4837                           ;main.c: 2382: waitLoopStep = WAITING_LOOP_STEP3;
  4838  05BE  2DCE               	goto	L14
  4839  05BF                     l4949:	
  4840                           
  4841                           ;main.c: 2388: {
  4842                           ;main.c: 2392: setPA3(1);
  4843  05BF  3001               	movlw	1
  4844  05C0  262A  118A         	fcall	_setPA3
  4845                           
  4846                           ;main.c: 2394: setPB6AsInput();
  4847  05C2  264A  118A         	fcall	_setPB6AsInput
  4848                           
  4849                           ;main.c: 2395: waitLoopStep = WAITING_LOOP_STEP4;
  4850  05C4  3003               	movlw	3
  4851  05C5  2DCE               	goto	L14
  4852  05C6                     l4953:	
  4853                           ;main.c: 2396: break;
  4854                           
  4855                           
  4856                           ;main.c: 2400: {
  4857                           ;main.c: 2404: static unsigned char ucTimerCntP5s = 0;
  4858                           ;main.c: 2405: if( ucTimerCntP5s < 5)
  4859  05C6  3005               	movlw	5
  4860  05C7  0242               	subwf	vHandle20sTimeron@ucTimerCntP5s^(0+128),w
  4861  05C8  1803               	skipnc
  4862  05C9  2DCC               	goto	l4957
  4863                           
  4864                           ;main.c: 2406: ucTimerCntP5s++;
  4865  05CA  0AC2               	incf	vHandle20sTimeron@ucTimerCntP5s^(0+128),f
  4866  05CB  2E17               	goto	l4997
  4867  05CC                     l4957:	
  4868  05CC  3004               	movlw	4
  4869                           
  4870                           ;main.c: 2407: else
  4871                           ;main.c: 2408: {
  4872                           ;main.c: 2409: ucTimerCntP5s = 0;
  4873  05CD  01C2               	clrf	vHandle20sTimeron@ucTimerCntP5s^(0+128)
  4874  05CE                     L14:	
  4875                           ;main.c: 2410: waitLoopStep = WAITING_LOOP_STEP5;
  4876                           
  4877  05CE  00C3               	movwf	vHandle20sTimeron@waitLoopStep^(0+128)
  4878  05CF  2E17               	goto	l4997
  4879  05D0                     l4961:	
  4880                           
  4881                           ;main.c: 2417: {
  4882                           ;main.c: 2421: static unsigned char ucMoreThanP3sCnt = 0;
  4883                           ;main.c: 2423: static unsigned char ucLessThanP3sCnt = 0;
  4884                           ;main.c: 2424: if((getAdOriginalCh6Value() < 50))
  4885  05D0  2633  118A         	fcall	_getAdOriginalCh6Value
  4886  05D2  3000               	movlw	0
  4887  05D3  0247               	subwf	?_getAdOriginalCh6Value+1,w
  4888  05D4  3032               	movlw	50
  4889  05D5  1903               	skipnz
  4890  05D6  0246               	subwf	?_getAdOriginalCh6Value,w
  4891  05D7  1803               	skipnc
  4892  05D8  2DDD               	goto	l4967
  4893                           
  4894                           ;main.c: 2425: {
  4895                           ;main.c: 2426: ucLessThanP3sCnt++;
  4896  05D9  1683               	bsf	3,5	;RP0=1, select bank1
  4897  05DA  0ABA               	incf	vHandle20sTimeron@ucLessThanP3sCnt^(0+128),f
  4898                           
  4899                           ;main.c: 2427: ucMoreThanP3sCnt = 0;
  4900  05DB  01BC               	clrf	vHandle20sTimeron@ucMoreThanP3sCnt^(0+128)
  4901                           
  4902                           ;main.c: 2428: }
  4903  05DC  2DE0               	goto	l4971
  4904  05DD                     l4967:	
  4905                           
  4906                           ;main.c: 2429: else
  4907                           ;main.c: 2430: {
  4908                           ;main.c: 2431: ucMoreThanP3sCnt++;
  4909  05DD  1683               	bsf	3,5	;RP0=1, select bank1
  4910  05DE  0ABC               	incf	vHandle20sTimeron@ucMoreThanP3sCnt^(0+128),f
  4911                           
  4912                           ;main.c: 2432: ucLessThanP3sCnt = 0;
  4913  05DF  01BA               	clrf	vHandle20sTimeron@ucLessThanP3sCnt^(0+128)
  4914  05E0                     l4971:	
  4915                           
  4916                           ;main.c: 2433: }
  4917                           ;main.c: 2435: if( ucLessThanP3sCnt >= 3)
  4918  05E0  3003               	movlw	3
  4919  05E1  023A               	subwf	vHandle20sTimeron@ucLessThanP3sCnt^(0+128),w
  4920  05E2  1C03               	skipc
  4921  05E3  2DED               	goto	l4977
  4922                           
  4923                           ;main.c: 2436: {
  4924                           ;main.c: 2437: ucLessThanP3sCnt = 0;
  4925  05E4  01BA               	clrf	vHandle20sTimeron@ucLessThanP3sCnt^(0+128)
  4926                           
  4927                           ;main.c: 2438: ucMoreThanP3sCnt = 0;
  4928  05E5  01BC               	clrf	vHandle20sTimeron@ucMoreThanP3sCnt^(0+128)
  4929                           
  4930                           ;main.c: 2440: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  4931  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  4932  05E7  01D0               	clrf	_enumMainLoopStep
  4933  05E8  0AD0               	incf	_enumMainLoopStep,f
  4934                           
  4935                           ;main.c: 2441: ucADC4_Step = ADC4_STEP_INIT;
  4936  05E9  01D3               	clrf	_ucADC4_Step
  4937                           
  4938                           ;main.c: 2443: waitLoopStep = WAITING_LOOP_STEP1;
  4939  05EA  1683               	bsf	3,5	;RP0=1, select bank1
  4940  05EB  01C3               	clrf	vHandle20sTimeron@waitLoopStep^(0+128)
  4941                           
  4942                           ;main.c: 2445: ucCompareStep = COMPARE_STEP0;
  4943  05EC  01B9               	clrf	vHandle20sTimeron@ucCompareStep^(0+128)
  4944  05ED                     l4977:	
  4945                           
  4946                           ;main.c: 2446: }
  4947                           ;main.c: 2448: if(ucMoreThanP3sCnt >= 3)
  4948  05ED  3003               	movlw	3
  4949  05EE  023C               	subwf	vHandle20sTimeron@ucMoreThanP3sCnt^(0+128),w
  4950  05EF  1C03               	skipc
  4951  05F0  2E17               	goto	l4997
  4952  05F1  3003               	movlw	3
  4953                           
  4954                           ;main.c: 2449: {
  4955                           ;main.c: 2450: ucLessThanP3sCnt = 0;
  4956  05F2  01BA               	clrf	vHandle20sTimeron@ucLessThanP3sCnt^(0+128)
  4957                           
  4958                           ;main.c: 2451: ucMoreThanP3sCnt = 0;
  4959  05F3  01BC               	clrf	vHandle20sTimeron@ucMoreThanP3sCnt^(0+128)
  4960                           
  4961                           ;main.c: 2453: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  4962  05F4  1283               	bcf	3,5	;RP0=0, select bank0
  4963  05F5  00D0               	movwf	_enumMainLoopStep
  4964                           
  4965                           ;main.c: 2454: ucADC4_Step = ADC4_STEP_INIT;
  4966  05F6  01D3               	clrf	_ucADC4_Step
  4967                           
  4968                           ;main.c: 2456: waitLoopStep = WAITING_LOOP_STEP1;
  4969  05F7  1683               	bsf	3,5	;RP0=1, select bank1
  4970  05F8  01C3               	clrf	vHandle20sTimeron@waitLoopStep^(0+128)
  4971  05F9  2D99               	goto	l4925
  4972  05FA                     l4991:	
  4973  05FA  0843               	movf	vHandle20sTimeron@waitLoopStep^(0+128),w
  4974                           
  4975                           ; Switch size 1, requested type "space"
  4976                           ; Number of cases is 5, Range of values is 0 to 4
  4977                           ; switch strategies available:
  4978                           ; Name         Instructions Cycles
  4979                           ; simple_byte           16     9 (average)
  4980                           ; direct_byte           17     7 (fixed)
  4981                           ; jumptable            260     6 (fixed)
  4982                           ; rangetable             9     6 (fixed)
  4983                           ; spacedrange           16     9 (fixed)
  4984                           ; locatedrange           5     3 (fixed)
  4985                           ;	Chosen strategy is simple_byte
  4986  05FB  3A00               	xorlw	0	; case 0
  4987  05FC  1903               	skipnz
  4988  05FD  2D9C               	goto	l4927
  4989  05FE  3A01               	xorlw	1	; case 1
  4990  05FF  1903               	skipnz
  4991  0600  2DAA               	goto	l4937
  4992  0601  3A03               	xorlw	3	; case 2
  4993  0602  1903               	skipnz
  4994  0603  2DBF               	goto	l4949
  4995  0604  3A01               	xorlw	1	; case 3
  4996  0605  1903               	skipnz
  4997  0606  2DC6               	goto	l4953
  4998  0607  3A07               	xorlw	7	; case 4
  4999  0608  1903               	skipnz
  5000  0609  2DD0               	goto	l4961
  5001  060A  2E17               	goto	l4997
  5002  060B                     l4995:	
  5003  060B  1683               	bsf	3,5	;RP0=1, select bank1
  5004  060C  0839               	movf	vHandle20sTimeron@ucCompareStep^(0+128),w
  5005                           
  5006                           ; Switch size 1, requested type "space"
  5007                           ; Number of cases is 3, Range of values is 0 to 2
  5008                           ; switch strategies available:
  5009                           ; Name         Instructions Cycles
  5010                           ; simple_byte           10     6 (average)
  5011                           ; direct_byte           13     7 (fixed)
  5012                           ; jumptable            260     6 (fixed)
  5013                           ; rangetable             7     6 (fixed)
  5014                           ; spacedrange           12     9 (fixed)
  5015                           ; locatedrange           3     3 (fixed)
  5016                           ;	Chosen strategy is simple_byte
  5017  060D  3A00               	xorlw	0	; case 0
  5018  060E  1903               	skipnz
  5019  060F  2D3F               	goto	l4861
  5020  0610  3A01               	xorlw	1	; case 1
  5021  0611  1903               	skipnz
  5022  0612  2D5E               	goto	l4883
  5023  0613  3A03               	xorlw	3	; case 2
  5024  0614  1903               	skipnz
  5025  0615  2DFA               	goto	l4991
  5026  0616  2E17               	goto	l4997
  5027  0617                     l4997:	
  5028                           
  5029                           ;main.c: 2473: if(ADC4_STEP_INIT == ucADC4_Step)
  5030  0617  1283               	bcf	3,5	;RP0=0, select bank0
  5031  0618  08D3               	movf	_ucADC4_Step,f
  5032  0619  1D03               	skipz
  5033  061A  0008               	return
  5034                           
  5035                           ;main.c: 2474: {
  5036                           ;main.c: 2475: ucTimerCntMore = 0;
  5037  061B  1683               	bsf	3,5	;RP0=1, select bank1
  5038  061C  3000               	movlw	0
  5039  061D  01C0               	clrf	vHandle20sTimeron@ucTimerCntMore^(0+128)
  5040                           
  5041                           ;main.c: 2476: ucTimerCntLess = 0;
  5042  061E  01BF               	clrf	vHandle20sTimeron@ucTimerCntLess^(0+128)
  5043                           
  5044                           ;main.c: 2477: ucCompareStep = COMPARE_STEP0;
  5045  061F  01B9               	clrf	vHandle20sTimeron@ucCompareStep^(0+128)
  5046                           
  5047                           ;main.c: 2479: vPause20sTimer(0);
  5048  0620  2E4D               	ljmp	_vPause20sTimer
  5049  0621                     __end_of_vHandle20sTimeron:	
  5050  0621                     __ptext1014:	
  5051 ;; =============== function _AD_Sample ends ============
  5052                           
  5053                           
  5054 ;; *************** function _getAdOriginalCh2Value *****************
  5055 ;; Defined at:
  5056 ;;		line 291 in file "C:\temp\dev\AK7030-OTP\common.c"
  5057 ;; Parameters:    Size  Location     Type
  5058 ;;		None
  5059 ;; Auto vars:     Size  Location     Type
  5060 ;;		None
  5061 ;; Return value:  Size  Location     Type
  5062 ;;                  2   38[BANK0 ] unsigned int 
  5063 ;; Registers used:
  5064 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5065 ;; Tracked objects:
  5066 ;;		On entry : 140/20
  5067 ;;		On exit  : 160/0
  5068 ;;		Unchanged: FFE00/0
  5069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5070 ;;      Params:         0       2       0       0       0
  5071 ;;      Locals:         0       0       0       0       0
  5072 ;;      Temps:          0       0       0       0       0
  5073 ;;      Totals:         0       2       0       0       0
  5074 ;;Total ram usage:        2 bytes
  5075 ;; Hardware stack levels used:    1
  5076 ;; Hardware stack levels required when called:    3
  5077 ;; This function calls:
  5078 ;;		_Filter
  5079 ;; This function is called by:
  5080 ;;		_vHandle20sTimeron
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083  0621                     _getAdOriginalCh2Value:	
  5084                           
  5085                           ;common.c: 293: return Filter(uiSampleChannelSecond);
  5086                           
  5087                           ; Regs used in _getAdOriginalCh2Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  5088  0621  30A8               	movlw	_uiSampleChannelSecond& (0+255)
  5089  0622  270C  118A         	fcall	PL8	;call to abstracted procedure
  5090  0624  2652               	fcall	_Filter
  5091  0625  0821               	movf	?_Filter+1,w
  5092  0626  00C7               	movwf	?_getAdOriginalCh2Value+1
  5093  0627  0820               	movf	?_Filter,w
  5094  0628  00C6               	movwf	?_getAdOriginalCh2Value
  5095  0629  0008               	return
  5096  062A                     __end_of_getAdOriginalCh2Value:	
  5097  062A                     __ptext1043:	
  5098 ;; =============== function _setPB6 ends ============
  5099                           
  5100                           
  5101 ;; *************** function _setPA3 *****************
  5102 ;; Defined at:
  5103 ;;		line 269 in file "C:\temp\dev\AK7030-OTP\main.c"
  5104 ;; Parameters:    Size  Location     Type
  5105 ;;  bValue          1    wreg     unsigned char 
  5106 ;; Auto vars:     Size  Location     Type
  5107 ;;  bValue          1    0[BANK0 ] unsigned char 
  5108 ;; Return value:  Size  Location     Type
  5109 ;;		None               void
  5110 ;; Registers used:
  5111 ;;		wreg
  5112 ;; Tracked objects:
  5113 ;;		On entry : 40/0
  5114 ;;		On exit  : 60/0
  5115 ;;		Unchanged: FFF9F/0
  5116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5117 ;;      Params:         0       0       0       0       0
  5118 ;;      Locals:         0       1       0       0       0
  5119 ;;      Temps:          0       0       0       0       0
  5120 ;;      Totals:         0       1       0       0       0
  5121 ;;Total ram usage:        1 bytes
  5122 ;; Hardware stack levels used:    1
  5123 ;; Hardware stack levels required when called:    2
  5124 ;; This function calls:
  5125 ;;		Nothing
  5126 ;; This function is called by:
  5127 ;;		_clearParaFunction1
  5128 ;;		_main
  5129 ;;		_vHandle20sTimeron
  5130 ;;		_vHandle20sTimerOut
  5131 ;; This function uses a non-reentrant model
  5132 ;;
  5133  062A                     _setPA3:	
  5134                           
  5135                           ; Regs used in _setPA3: [wreg]
  5136                           ;setPA3@bValue stored from wreg
  5137  062A  1283               	bcf	3,5	;RP0=0, select bank0
  5138  062B  00A0               	movwf	setPA3@bValue
  5139                           
  5140                           ;main.c: 270: if( bValue )
  5141  062C  0820               	movf	setPA3@bValue,w
  5142  062D  1903               	btfsc	3,2
  5143  062E  2E31               	goto	l732
  5144                           
  5145                           ;main.c: 272: PA3 = 1;
  5146  062F  1585               	bsf	5,3
  5147  0630  0008               	return
  5148  0631                     l732:	
  5149                           
  5150                           ;main.c: 276: else
  5151                           ;main.c: 278: PA3 = 0;
  5152  0631  1185               	bcf	5,3
  5153  0632  0008               	return
  5154  0633                     __end_of_setPA3:	
  5155  0633                     __ptext1017:	
  5156 ;; =============== function _getAdOriginalCh5Value ends ============
  5157                           
  5158                           
  5159 ;; *************** function _getAdOriginalCh6Value *****************
  5160 ;; Defined at:
  5161 ;;		line 282 in file "C:\temp\dev\AK7030-OTP\common.c"
  5162 ;; Parameters:    Size  Location     Type
  5163 ;;		None
  5164 ;; Auto vars:     Size  Location     Type
  5165 ;;		None
  5166 ;; Return value:  Size  Location     Type
  5167 ;;                  2   38[BANK0 ] unsigned int 
  5168 ;; Registers used:
  5169 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5170 ;; Tracked objects:
  5171 ;;		On entry : 40/0
  5172 ;;		On exit  : 160/0
  5173 ;;		Unchanged: FFE00/0
  5174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5175 ;;      Params:         0       2       0       0       0
  5176 ;;      Locals:         0       0       0       0       0
  5177 ;;      Temps:          0       0       0       0       0
  5178 ;;      Totals:         0       2       0       0       0
  5179 ;;Total ram usage:        2 bytes
  5180 ;; Hardware stack levels used:    1
  5181 ;; Hardware stack levels required when called:    3
  5182 ;; This function calls:
  5183 ;;		_Filter
  5184 ;; This function is called by:
  5185 ;;		_main
  5186 ;;		_vHandle20sTimeron
  5187 ;; This function uses a non-reentrant model
  5188 ;;
  5189  0633                     _getAdOriginalCh6Value:	
  5190                           
  5191                           ;common.c: 284: return Filter(uiSampleChannelSixth);
  5192                           
  5193                           ; Regs used in _getAdOriginalCh6Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  5194  0633  30C0               	movlw	_uiSampleChannelSixth& (0+255)
  5195  0634  270C  118A         	fcall	PL8	;call to abstracted procedure
  5196  0636  2652               	fcall	_Filter
  5197  0637  0821               	movf	?_Filter+1,w
  5198  0638  00C7               	movwf	?_getAdOriginalCh6Value+1
  5199  0639  0820               	movf	?_Filter,w
  5200  063A  00C6               	movwf	?_getAdOriginalCh6Value
  5201  063B  0008               	return
  5202  063C                     __end_of_getAdOriginalCh6Value:	
  5203  063C                     __ptext1042:	
  5204 ;; =============== function _setPB4 ends ============
  5205                           
  5206                           
  5207 ;; *************** function _setPB6 *****************
  5208 ;; Defined at:
  5209 ;;		line 286 in file "C:\temp\dev\AK7030-OTP\main.c"
  5210 ;; Parameters:    Size  Location     Type
  5211 ;;  bValue          1    wreg     unsigned char 
  5212 ;; Auto vars:     Size  Location     Type
  5213 ;;  bValue          1    0[BANK0 ] unsigned char 
  5214 ;; Return value:  Size  Location     Type
  5215 ;;		None               void
  5216 ;; Registers used:
  5217 ;;		wreg
  5218 ;; Tracked objects:
  5219 ;;		On entry : 160/0
  5220 ;;		On exit  : 160/0
  5221 ;;		Unchanged: FFE9F/0
  5222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5223 ;;      Params:         0       0       0       0       0
  5224 ;;      Locals:         0       1       0       0       0
  5225 ;;      Temps:          0       0       0       0       0
  5226 ;;      Totals:         0       1       0       0       0
  5227 ;;Total ram usage:        1 bytes
  5228 ;; Hardware stack levels used:    1
  5229 ;; Hardware stack levels required when called:    2
  5230 ;; This function calls:
  5231 ;;		Nothing
  5232 ;; This function is called by:
  5233 ;;		_vHandle20sTimeron
  5234 ;;		_vHandle20sTimerOut
  5235 ;; This function uses a non-reentrant model
  5236 ;;
  5237  063C                     _setPB6:	
  5238                           
  5239                           ; Regs used in _setPB6: [wreg]
  5240                           ;setPB6@bValue stored from wreg
  5241  063C  00A0               	movwf	setPB6@bValue
  5242                           
  5243                           ;main.c: 287: if( bValue )
  5244  063D  0820               	movf	setPB6@bValue,w
  5245  063E  1903               	btfsc	3,2
  5246  063F  2E45               	goto	l737
  5247                           
  5248                           ;main.c: 289: {
  5249                           ;main.c: 290: TRISB6 = 0;
  5250  0640  1683               	bsf	3,5	;RP0=1, select bank1
  5251  0641  1306               	bcf	6,6
  5252                           
  5253                           ;main.c: 291: PB6 = 1;
  5254  0642  1283               	bcf	3,5	;RP0=0, select bank0
  5255  0643  1706               	bsf	6,6
  5256                           
  5257                           ;main.c: 292: }
  5258  0644  0008               	return
  5259  0645                     l737:	
  5260                           
  5261                           ;main.c: 296: else
  5262                           ;main.c: 298: {
  5263                           ;main.c: 299: TRISB6 = 0;
  5264  0645  1683               	bsf	3,5	;RP0=1, select bank1
  5265  0646  1306               	bcf	6,6
  5266                           
  5267                           ;main.c: 300: PB6 = 0;
  5268  0647  1283               	bcf	3,5	;RP0=0, select bank0
  5269  0648  1306               	bcf	6,6
  5270  0649  0008               	return
  5271  064A                     __end_of_setPB6:	
  5272  064A                     __ptext1039:	
  5273 ;; =============== function _clock_config ends ============
  5274                           
  5275                           
  5276 ;; *************** function _setPB6AsInput *****************
  5277 ;; Defined at:
  5278 ;;		line 372 in file "C:\temp\dev\AK7030-OTP\main.c"
  5279 ;; Parameters:    Size  Location     Type
  5280 ;;		None
  5281 ;; Auto vars:     Size  Location     Type
  5282 ;;		None
  5283 ;; Return value:  Size  Location     Type
  5284 ;;		None               void
  5285 ;; Registers used:
  5286 ;;		None
  5287 ;; Tracked objects:
  5288 ;;		On entry : 160/0
  5289 ;;		On exit  : 160/20
  5290 ;;		Unchanged: FFE9F/0
  5291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5292 ;;      Params:         0       0       0       0       0
  5293 ;;      Locals:         0       0       0       0       0
  5294 ;;      Temps:          0       0       0       0       0
  5295 ;;      Totals:         0       0       0       0       0
  5296 ;;Total ram usage:        0 bytes
  5297 ;; Hardware stack levels used:    1
  5298 ;; Hardware stack levels required when called:    2
  5299 ;; This function calls:
  5300 ;;		Nothing
  5301 ;; This function is called by:
  5302 ;;		_vHandle20sTimeron
  5303 ;;		_vHandle20sTimerOut
  5304 ;; This function uses a non-reentrant model
  5305 ;;
  5306  064A                     _setPB6AsInput:	
  5307                           
  5308                           ;main.c: 374: TRISB6 = 1;
  5309                           
  5310                           ; Regs used in _setPB6AsInput: []
  5311  064A  1683               	bsf	3,5	;RP0=1, select bank1
  5312  064B  1706               	bsf	6,6
  5313  064C  0008               	return
  5314  064D                     __end_of_setPB6AsInput:	
  5315  064D                     __ptext1023:	
  5316 ;; =============== function _Filter ends ============
  5317                           
  5318                           
  5319 ;; *************** function _vPause20sTimer *****************
  5320 ;; Defined at:
  5321 ;;		line 59 in file "C:\temp\dev\AK7030-OTP\common.c"
  5322 ;; Parameters:    Size  Location     Type
  5323 ;;  bValue          1    wreg     unsigned char 
  5324 ;; Auto vars:     Size  Location     Type
  5325 ;;  bValue          1    0[BANK0 ] unsigned char 
  5326 ;; Return value:  Size  Location     Type
  5327 ;;		None               void
  5328 ;; Registers used:
  5329 ;;		wreg
  5330 ;; Tracked objects:
  5331 ;;		On entry : 140/20
  5332 ;;		On exit  : 160/20
  5333 ;;		Unchanged: FFE9F/0
  5334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5335 ;;      Params:         0       0       0       0       0
  5336 ;;      Locals:         0       1       0       0       0
  5337 ;;      Temps:          0       0       0       0       0
  5338 ;;      Totals:         0       1       0       0       0
  5339 ;;Total ram usage:        1 bytes
  5340 ;; Hardware stack levels used:    1
  5341 ;; Hardware stack levels required when called:    2
  5342 ;; This function calls:
  5343 ;;		Nothing
  5344 ;; This function is called by:
  5345 ;;		_vHandle20sTimeron
  5346 ;; This function uses a non-reentrant model
  5347 ;;
  5348  064D                     _vPause20sTimer:	
  5349                           
  5350                           ; Regs used in _vPause20sTimer: [wreg]
  5351                           ;vPause20sTimer@bValue stored from wreg
  5352  064D  1283               	bcf	3,5	;RP0=0, select bank0
  5353  064E  00A0               	movwf	vPause20sTimer@bValue
  5354                           
  5355                           ;common.c: 60: bPause20secTimer = bValue;
  5356  064F  1683               	bsf	3,5	;RP0=1, select bank1
  5357  0650  00AE               	movwf	_bPause20secTimer^(0+128)
  5358  0651  0008               	return
  5359  0652                     __end_of_vPause20sTimer:	
  5360  0652                     __ptext1022:	
  5361 ;; =============== function _getAD_ConvertFlag ends ============
  5362                           
  5363                           
  5364 ;; *************** function _Filter *****************
  5365 ;; Defined at:
  5366 ;;		line 67 in file "C:\temp\dev\AK7030-OTP\common.c"
  5367 ;; Parameters:    Size  Location     Type
  5368 ;;  tmpValue        2    0[BANK0 ] PTR int 
  5369 ;;		 -> uiSampleChannelSixth(24), uiSampleChannelFifth(24), uiSampleChannelSecond(24), uiSampleChannelZero(24), 
  5370 ;; Auto vars:     Size  Location     Type
  5371 ;;  cir             2   34[BANK0 ] int 
  5372 ;;  filter_buf     24    6[BANK0 ] unsigned int [12]
  5373 ;;  filter_sum      2   32[BANK0 ] unsigned int 
  5374 ;;  filter_temp     2   30[BANK0 ] unsigned int 
  5375 ;;  i               1   37[BANK0 ] unsigned char 
  5376 ;;  j               1   36[BANK0 ] unsigned char 
  5377 ;; Return value:  Size  Location     Type
  5378 ;;                  2    0[BANK0 ] unsigned int 
  5379 ;; Registers used:
  5380 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5381 ;; Tracked objects:
  5382 ;;		On entry : 60/0
  5383 ;;		On exit  : 160/0
  5384 ;;		Unchanged: FFE00/0
  5385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5386 ;;      Params:         0       2       0       0       0
  5387 ;;      Locals:         0      32       0       0       0
  5388 ;;      Temps:          0       4       0       0       0
  5389 ;;      Totals:         0      38       0       0       0
  5390 ;;Total ram usage:       38 bytes
  5391 ;; Hardware stack levels used:    1
  5392 ;; Hardware stack levels required when called:    2
  5393 ;; This function calls:
  5394 ;;		Nothing
  5395 ;; This function is called by:
  5396 ;;		_getAdOriginalCh0Value
  5397 ;;		_getAdOriginalCh5Value
  5398 ;;		_getAdOriginalCh6Value
  5399 ;;		_getAdOriginalCh2Value
  5400 ;; This function uses a non-reentrant model
  5401 ;;
  5402  0652                     _Filter:	
  5403                           
  5404                           ; Regs used in _Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  5405  0652  01C4               	clrf	Filter@j
  5406                           
  5407                           ;common.c: 71: unsigned int filter_temp = 0, filter_sum = 0;
  5408  0653  01BE               	clrf	Filter@filter_temp
  5409  0654  01BF               	clrf	Filter@filter_temp+1
  5410  0655  01C0               	clrf	Filter@filter_sum
  5411  0656  01C1               	clrf	Filter@filter_sum+1
  5412                           
  5413                           ;common.c: 73: unsigned int filter_buf[12];
  5414                           ;common.c: 75: for(int cir = 0;cir < 12; cir++)
  5415  0657  01C2               	clrf	Filter@cir
  5416  0658  01C3               	clrf	Filter@cir+1
  5417  0659                     l4601:	
  5418                           
  5419                           ;common.c: 76: filter_buf[cir] = *tmpValue++;
  5420  0659  1283               	bcf	3,5	;RP0=0, select bank0
  5421  065A  1303               	bcf	3,6	;RP1=0, select bank0
  5422  065B  0820               	movf	Filter@tmpValue,w
  5423  065C  0084               	movwf	4
  5424  065D  1783               	bsf	3,7
  5425  065E  1C21               	btfss	Filter@tmpValue+1,0
  5426  065F  1383               	bcf	3,7
  5427  0660  0800               	movf	0,w
  5428  0661  2700  118A         	fcall	PL5	;call to abstracted procedure
  5429  0663  0D42               	rlf	Filter@cir,w
  5430  0664  3E26               	addlw	Filter@filter_buf& (0+255)
  5431  0665  0084               	movwf	4
  5432  0666  0822               	movf	??_Filter,w
  5433  0667  1383               	bcf	3,7	;select IRP bank0
  5434  0668  0080               	movwf	0
  5435  0669  0A84               	incf	4,f
  5436  066A  0823               	movf	??_Filter+1,w
  5437  066B  0080               	movwf	0
  5438  066C  3002               	movlw	2
  5439  066D  07A0               	addwf	Filter@tmpValue,f
  5440  066E  1803               	skipnc
  5441  066F  0AA1               	incf	Filter@tmpValue+1,f
  5442  0670  0AC2               	incf	Filter@cir,f
  5443  0671  1903               	skipnz
  5444  0672  0AC3               	incf	Filter@cir+1,f
  5445  0673  0843               	movf	Filter@cir+1,w
  5446  0674  3A80               	xorlw	128
  5447  0675  00FF               	movwf	127
  5448  0676  3080               	movlw	128
  5449  0677  027F               	subwf	127,w
  5450  0678  1D03               	skipz
  5451  0679  2E7C               	goto	u1755
  5452  067A  300C               	movlw	12
  5453  067B  0242               	subwf	Filter@cir,w
  5454  067C                     u1755:	
  5455  067C  1C03               	skipc
  5456  067D  2E59               	goto	l4601
  5457                           
  5458                           ;common.c: 79: for(j = 0; j < 12 - 1; j++)
  5459  067E  1283               	bcf	3,5	;RP0=0, select bank0
  5460  067F  1303               	bcf	3,6	;RP1=0, select bank0
  5461  0680  01C4               	clrf	Filter@j
  5462  0681                     l4615:	
  5463                           
  5464                           ;common.c: 80: {
  5465                           ;common.c: 81: for(i = 0; i < 12 - 1 - j; i++)
  5466  0681  01C5               	clrf	Filter@i
  5467  0682                     l4623:	
  5468  0682  01A3               	clrf	??_Filter+1
  5469  0683  0844               	movf	Filter@j,w
  5470  0684  3C0B               	sublw	11
  5471  0685  00A2               	movwf	??_Filter
  5472  0686  1C03               	skipc
  5473  0687  03A3               	decf	??_Filter+1,f
  5474  0688  0823               	movf	??_Filter+1,w
  5475  0689  3A80               	xorlw	128
  5476  068A  3C80               	sublw	128
  5477  068B  1D03               	skipz
  5478  068C  2E8F               	goto	u1775
  5479  068D  0822               	movf	??_Filter,w
  5480  068E  0245               	subwf	Filter@i,w
  5481  068F                     u1775:	
  5482  068F  1803               	btfsc	3,0
  5483  0690  2EC4               	goto	l4625
  5484                           
  5485                           ;common.c: 82: {
  5486                           ;common.c: 83: if(filter_buf[i] > filter_buf[i + 1])
  5487  0691  1283               	bcf	3,5	;RP0=0, select bank0
  5488  0692  1303               	bcf	3,6	;RP1=0, select bank0
  5489  0693  1003               	clrc
  5490  0694  26F6  118A         	fcall	PL4	;call to abstracted procedure
  5491  0696  2706  118A         	fcall	PL6	;call to abstracted procedure
  5492  0698  0800               	movf	0,w
  5493  0699  00A4               	movwf	??_Filter+2
  5494  069A  0A84               	incf	4,f
  5495  069B  0800               	movf	0,w
  5496  069C  00A5               	movwf	??_Filter+3
  5497  069D  0823               	movf	??_Filter+1,w
  5498  069E  0225               	subwf	??_Filter+3,w
  5499  069F  1D03               	skipz
  5500  06A0  2EA3               	goto	u1765
  5501  06A1  0822               	movf	??_Filter,w
  5502  06A2  0224               	subwf	??_Filter+2,w
  5503  06A3                     u1765:	
  5504  06A3  1803               	skipnc
  5505  06A4  2EC2               	goto	l4621
  5506                           
  5507                           ;common.c: 84: {
  5508                           ;common.c: 86: filter_temp = filter_buf[i];
  5509  06A5  1003               	clrc
  5510  06A6  0D45               	rlf	Filter@i,w
  5511  06A7  3E26               	addlw	Filter@filter_buf& (0+255)
  5512  06A8  0084               	movwf	4
  5513  06A9  0800               	movf	0,w
  5514  06AA  00BE               	movwf	Filter@filter_temp
  5515  06AB  0A84               	incf	4,f
  5516  06AC  0800               	movf	0,w
  5517  06AD  00BF               	movwf	Filter@filter_temp+1
  5518                           
  5519                           ;common.c: 88: filter_buf[i] = filter_buf[i + 1];
  5520  06AE  2706  118A         	fcall	PL6	;call to abstracted procedure
  5521  06B0  0800               	movf	0,w
  5522  06B1  2700  118A         	fcall	PL5	;call to abstracted procedure
  5523  06B3  0D45               	rlf	Filter@i,w
  5524  06B4  3E26               	addlw	Filter@filter_buf& (0+255)
  5525  06B5  0084               	movwf	4
  5526  06B6  0822               	movf	??_Filter,w
  5527  06B7  0080               	movwf	0
  5528  06B8  0A84               	incf	4,f
  5529  06B9  0823               	movf	??_Filter+1,w
  5530  06BA  0080               	movwf	0
  5531                           
  5532                           ;common.c: 90: filter_buf[i + 1] = filter_temp;
  5533  06BB  2706  118A         	fcall	PL6	;call to abstracted procedure
  5534  06BD  083E               	movf	Filter@filter_temp,w
  5535  06BE  0080               	movwf	0
  5536  06BF  0A84               	incf	4,f
  5537  06C0  083F               	movf	Filter@filter_temp+1,w
  5538  06C1  0080               	movwf	0
  5539  06C2                     l4621:	
  5540  06C2  0AC5               	incf	Filter@i,f
  5541  06C3  2E82               	goto	l4623
  5542  06C4                     l4625:	
  5543  06C4  1283               	bcf	3,5	;RP0=0, select bank0
  5544  06C5  300B               	movlw	11
  5545  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  5546  06C7  0AC4               	incf	Filter@j,f
  5547  06C8  0244               	subwf	Filter@j,w
  5548  06C9  1C03               	skipc
  5549  06CA  2E81               	goto	l4615
  5550                           
  5551                           ;common.c: 91: }
  5552                           ;common.c: 92: }
  5553                           ;common.c: 93: }
  5554                           ;common.c: 95: for(i = 2; i < 12 - 2; i++)
  5555  06CB  3002               	movlw	2
  5556  06CC  00C5               	movwf	Filter@i
  5557                           
  5558                           ;common.c: 96: {
  5559                           ;common.c: 97: filter_sum += filter_buf[i];
  5560  06CD  1003               	clrc
  5561  06CE                     L18:	
  5562  06CE  26F6  118A         	fcall	PL4	;call to abstracted procedure
  5563  06D0  0822               	movf	??_Filter,w
  5564  06D1  07C0               	addwf	Filter@filter_sum,f
  5565  06D2  1803               	skipnc
  5566  06D3  0AC1               	incf	Filter@filter_sum+1,f
  5567  06D4  0823               	movf	??_Filter+1,w
  5568  06D5  07C1               	addwf	Filter@filter_sum+1,f
  5569  06D6  300A               	movlw	10
  5570  06D7  0AC5               	incf	Filter@i,f
  5571  06D8  0245               	subwf	Filter@i,w
  5572  06D9  1C03               	skipc
  5573  06DA  2ECE               	goto	L18
  5574                           
  5575                           ;common.c: 98: }
  5576                           ;common.c: 100: return (filter_sum >> 3);
  5577  06DB  0841               	movf	Filter@filter_sum+1,w
  5578  06DC  00A1               	movwf	?_Filter+1
  5579  06DD  0840               	movf	Filter@filter_sum,w
  5580  06DE  00A0               	movwf	?_Filter
  5581  06DF  1003               	clrc
  5582  06E0  0CA1               	rrf	?_Filter+1,f
  5583  06E1  0CA0               	rrf	?_Filter,f
  5584  06E2  1003               	clrc
  5585  06E3  0CA1               	rrf	?_Filter+1,f
  5586  06E4  0CA0               	rrf	?_Filter,f
  5587  06E5  1003               	clrc
  5588  06E6  0CA1               	rrf	?_Filter+1,f
  5589  06E7  0CA0               	rrf	?_Filter,f
  5590  06E8  0008               	return
  5591  06E9                     __end_of_Filter:	
  5592  06E9                     __ptext1052:	
  5593 ;; =============== function _clearTwentyMinuteTimer ends ============
  5594                           
  5595                           
  5596 ;; *************** function _clearTwentySecondsTimer *****************
  5597 ;; Defined at:
  5598 ;;		line 419 in file "C:\temp\dev\AK7030-OTP\common.c"
  5599 ;; Parameters:    Size  Location     Type
  5600 ;;		None
  5601 ;; Auto vars:     Size  Location     Type
  5602 ;;		None
  5603 ;; Return value:  Size  Location     Type
  5604 ;;		None               void
  5605 ;; Registers used:
  5606 ;;		status,2
  5607 ;; Tracked objects:
  5608 ;;		On entry : 40/20
  5609 ;;		On exit  : 60/20
  5610 ;;		Unchanged: FFF9F/0
  5611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5612 ;;      Params:         0       0       0       0       0
  5613 ;;      Locals:         0       0       0       0       0
  5614 ;;      Temps:          0       0       0       0       0
  5615 ;;      Totals:         0       0       0       0       0
  5616 ;;Total ram usage:        0 bytes
  5617 ;; Hardware stack levels used:    1
  5618 ;; Hardware stack levels required when called:    2
  5619 ;; This function calls:
  5620 ;;		Nothing
  5621 ;; This function is called by:
  5622 ;;		_clearAllTimer
  5623 ;;		_vHandle20sTimerOut
  5624 ;; This function uses a non-reentrant model
  5625 ;;
  5626  06E9                     _clearTwentySecondsTimer:	
  5627                           
  5628                           ;common.c: 420: uiTwentySecondsTimer = 0;
  5629                           
  5630                           ; Regs used in _clearTwentySecondsTimer: [status,2]
  5631  06E9  1683               	bsf	3,5	;RP0=1, select bank1
  5632  06EA  01A6               	clrf	_uiTwentySecondsTimer^(0+128)
  5633  06EB  01A7               	clrf	(_uiTwentySecondsTimer+1)^(0+128)
  5634                           
  5635                           ;common.c: 421: bTwentySecStartFlag = 0;
  5636  06EC  1283               	bcf	3,5	;RP0=0, select bank0
  5637  06ED  01CF               	clrf	_bTwentySecStartFlag
  5638                           
  5639                           ;common.c: 422: bPause20secTimer = 0;
  5640  06EE  1683               	bsf	3,5	;RP0=1, select bank1
  5641  06EF  01AE               	clrf	_bPause20secTimer^(0+128)
  5642  06F0  0008               	return
  5643  06F1                     __end_of_clearTwentySecondsTimer:	
  5644  06F1                     __ptext1051:	
  5645 ;; =============== function _initPin ends ============
  5646                           
  5647                           
  5648 ;; *************** function _clearTwentyMinuteTimer *****************
  5649 ;; Defined at:
  5650 ;;		line 427 in file "C:\temp\dev\AK7030-OTP\common.c"
  5651 ;; Parameters:    Size  Location     Type
  5652 ;;		None
  5653 ;; Auto vars:     Size  Location     Type
  5654 ;;		None
  5655 ;; Return value:  Size  Location     Type
  5656 ;;		None               void
  5657 ;; Registers used:
  5658 ;;		status,2
  5659 ;; Tracked objects:
  5660 ;;		On entry : 60/20
  5661 ;;		On exit  : 60/0
  5662 ;;		Unchanged: FFF9F/0
  5663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5664 ;;      Params:         0       0       0       0       0
  5665 ;;      Locals:         0       0       0       0       0
  5666 ;;      Temps:          0       0       0       0       0
  5667 ;;      Totals:         0       0       0       0       0
  5668 ;;Total ram usage:        0 bytes
  5669 ;; Hardware stack levels used:    1
  5670 ;; Hardware stack levels required when called:    2
  5671 ;; This function calls:
  5672 ;;		Nothing
  5673 ;; This function is called by:
  5674 ;;		_clearAllTimer
  5675 ;; This function uses a non-reentrant model
  5676 ;;
  5677  06F1                     _clearTwentyMinuteTimer:	
  5678  06F1                     l4417:	
  5679                           ; Regs used in _clearTwentyMinuteTimer: [status,2]
  5680                           
  5681                           
  5682                           ;common.c: 428: uiTwentyMinuteTimer = 0;
  5683  06F1  01A4               	clrf	_uiTwentyMinuteTimer^(0+128)
  5684  06F2  01A5               	clrf	(_uiTwentyMinuteTimer+1)^(0+128)
  5685                           
  5686                           ;common.c: 429: bTwentyMinStartFlag = 0;
  5687  06F3  1283               	bcf	3,5	;RP0=0, select bank0
  5688  06F4  01CE               	clrf	_bTwentyMinStartFlag
  5689  06F5  0008               	return
  5690  06F6                     __end_of_clearTwentyMinuteTimer:	
  5691  06F6                     PL4:	
  5692  06F6  0D45               	rlf	Filter@i,w
  5693  06F7  3E26               	addlw	Filter@filter_buf& (0+255)
  5694  06F8  0084               	movwf	4
  5695  06F9  1383               	bcf	3,7	;select IRP bank0
  5696  06FA  0800               	movf	0,w
  5697  06FB  00A2               	movwf	??_Filter
  5698  06FC  0A84               	incf	4,f
  5699  06FD  0800               	movf	0,w
  5700  06FE  00A3               	movwf	??_Filter+1
  5701  06FF  0008               	return
  5702  0700                     PL5:	
  5703  0700  00A2               	movwf	??_Filter
  5704  0701  0A84               	incf	4,f
  5705  0702  0800               	movf	0,w
  5706  0703  00A3               	movwf	??_Filter+1
  5707  0704  1003               	clrc
  5708  0705  0008               	return
  5709  0706                     PL6:	
  5710  0706  1003               	clrc
  5711  0707  0D45               	rlf	Filter@i,w
  5712  0708  3E02               	addlw	2
  5713  0709  3E26               	addlw	Filter@filter_buf& (0+255)
  5714  070A  0084               	movwf	4
  5715  070B  0008               	return
  5716  070C                     PL8:	
  5717  070C  1283               	bcf	3,5	;RP0=0, select bank0
  5718  070D  00A0               	movwf	?_Filter
  5719  070E  3001               	movlw	1
  5720  070F  00A1               	movwf	?_Filter+1
  5721  0710  0008               	return
  5722                           
  5723                           	psect	text1024
  5724  0F03                     __ptext1024:	
  5725 ;; =============== function _vPause20sTimer ends ============
  5726                           
  5727                           
  5728 ;; *************** function _isFinishedThreeHoursTimer *****************
  5729 ;; Defined at:
  5730 ;;		line 503 in file "C:\temp\dev\AK7030-OTP\common.c"
  5731 ;; Parameters:    Size  Location     Type
  5732 ;;		None
  5733 ;; Auto vars:     Size  Location     Type
  5734 ;;		None
  5735 ;; Return value:  Size  Location     Type
  5736 ;;                  1    wreg      unsigned char 
  5737 ;; Registers used:
  5738 ;;		wreg, status,2, status,0
  5739 ;; Tracked objects:
  5740 ;;		On entry : 40/20
  5741 ;;		On exit  : 40/0
  5742 ;;		Unchanged: FFF9F/0
  5743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5744 ;;      Params:         0       0       0       0       0
  5745 ;;      Locals:         0       0       0       0       0
  5746 ;;      Temps:          0       0       0       0       0
  5747 ;;      Totals:         0       0       0       0       0
  5748 ;;Total ram usage:        0 bytes
  5749 ;; Hardware stack levels used:    1
  5750 ;; Hardware stack levels required when called:    2
  5751 ;; This function calls:
  5752 ;;		Nothing
  5753 ;; This function is called by:
  5754 ;;		_main
  5755 ;; This function uses a non-reentrant model
  5756 ;;
  5757  0F03                     _isFinishedThreeHoursTimer:	
  5758                           
  5759                           ;common.c: 504: if((uiSmallTimer == 0) && bSmallTimerStartFlag)
  5760                           
  5761                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  5762  0F03  1683               	bsf	3,5	;RP0=1, select bank1
  5763  0F04  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  5764  0F05  0422               	iorwf	_uiSmallTimer^(0+128),w
  5765  0F06  1D03               	skipz
  5766  0F07  3400               	retlw	0
  5767  0F08  1283               	bcf	3,5	;RP0=0, select bank0
  5768  0F09  084D               	movf	_bSmallTimerStartFlag,w
  5769  0F0A  1903               	btfsc	3,2
  5770  0F0B  3400               	retlw	0
  5771  0F0C  3001               	movlw	1
  5772                           
  5773                           ;common.c: 505: {
  5774                           ;common.c: 506: bSmallTimerStartFlag = 0;
  5775  0F0D  01CD               	clrf	_bSmallTimerStartFlag
  5776                           
  5777                           ;common.c: 507: return 1;
  5778  0F0E  0008               	return
  5779  0F0F                     __end_of_isFinishedThreeHoursTimer:	
  5780                           ;common.c: 509: else
  5781                           ;common.c: 510: return 0;
  5782                           
  5783                           
  5784                           	psect	text1025
  5785  079D                     __ptext1025:	
  5786 ;; =============== function _isFinishedThreeHoursTimer ends ============
  5787                           
  5788                           
  5789 ;; *************** function _startThreeHoursTimer *****************
  5790 ;; Defined at:
  5791 ;;		line 434 in file "C:\temp\dev\AK7030-OTP\common.c"
  5792 ;; Parameters:    Size  Location     Type
  5793 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  5794 ;; Auto vars:     Size  Location     Type
  5795 ;;		None
  5796 ;; Return value:  Size  Location     Type
  5797 ;;		None               void
  5798 ;; Registers used:
  5799 ;;		wreg, status,2, status,0
  5800 ;; Tracked objects:
  5801 ;;		On entry : 60/0
  5802 ;;		On exit  : 40/0
  5803 ;;		Unchanged: FFF9F/0
  5804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5805 ;;      Params:         0       2       0       0       0
  5806 ;;      Locals:         0       0       0       0       0
  5807 ;;      Temps:          0       0       0       0       0
  5808 ;;      Totals:         0       2       0       0       0
  5809 ;;Total ram usage:        2 bytes
  5810 ;; Hardware stack levels used:    1
  5811 ;; Hardware stack levels required when called:    2
  5812 ;; This function calls:
  5813 ;;		Nothing
  5814 ;; This function is called by:
  5815 ;;		_main
  5816 ;; This function uses a non-reentrant model
  5817 ;;
  5818  079D                     _startThreeHoursTimer:	
  5819                           
  5820                           ;common.c: 435: if(( 0 == uiSmallTimer ) && ( 0 == bSmallTimerStartFlag ))
  5821                           
  5822                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  5823  079D  1683               	bsf	3,5	;RP0=1, select bank1
  5824  079E  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  5825  079F  0422               	iorwf	_uiSmallTimer^(0+128),w
  5826  07A0  1D03               	skipz
  5827  07A1  0008               	return
  5828  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  5829  07A3  08CD               	movf	_bSmallTimerStartFlag,f
  5830  07A4  1D03               	skipz
  5831  07A5  0008               	return
  5832                           
  5833                           ;common.c: 436: {
  5834                           ;common.c: 437: uiSmallTimer = uiSetTime;
  5835  07A6  0821               	movf	startThreeHoursTimer@uiSetTime+1,w
  5836  07A7  1683               	bsf	3,5	;RP0=1, select bank1
  5837  07A8  00A3               	movwf	(_uiSmallTimer+1)^(0+128)
  5838  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  5839  07AA  0820               	movf	startThreeHoursTimer@uiSetTime,w
  5840  07AB  1683               	bsf	3,5	;RP0=1, select bank1
  5841  07AC  00A2               	movwf	_uiSmallTimer^(0+128)
  5842                           
  5843                           ;common.c: 438: bSmallTimerStartFlag = 1;
  5844  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  5845  07AE  01CD               	clrf	_bSmallTimerStartFlag
  5846  07AF  0ACD               	incf	_bSmallTimerStartFlag,f
  5847  07B0  0008               	return
  5848  07B1                     __end_of_startThreeHoursTimer:	
  5849                           
  5850                           	psect	text1026
  5851  0EE1                     __ptext1026:	
  5852 ;; =============== function _startThreeHoursTimer ends ============
  5853                           
  5854                           
  5855 ;; *************** function _isFinishedTwentySecondsTimer *****************
  5856 ;; Defined at:
  5857 ;;		line 468 in file "C:\temp\dev\AK7030-OTP\common.c"
  5858 ;; Parameters:    Size  Location     Type
  5859 ;;		None
  5860 ;; Auto vars:     Size  Location     Type
  5861 ;;		None
  5862 ;; Return value:  Size  Location     Type
  5863 ;;                  1    wreg      unsigned char 
  5864 ;; Registers used:
  5865 ;;		wreg, status,2, status,0
  5866 ;; Tracked objects:
  5867 ;;		On entry : 140/0
  5868 ;;		On exit  : 140/0
  5869 ;;		Unchanged: FFE9F/0
  5870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5871 ;;      Params:         0       0       0       0       0
  5872 ;;      Locals:         0       0       0       0       0
  5873 ;;      Temps:          0       0       0       0       0
  5874 ;;      Totals:         0       0       0       0       0
  5875 ;;Total ram usage:        0 bytes
  5876 ;; Hardware stack levels used:    1
  5877 ;; Hardware stack levels required when called:    2
  5878 ;; This function calls:
  5879 ;;		Nothing
  5880 ;; This function is called by:
  5881 ;;		_main
  5882 ;; This function uses a non-reentrant model
  5883 ;;
  5884  0EE1                     _isFinishedTwentySecondsTimer:	
  5885                           
  5886                           ;common.c: 469: if(( 0 == uiTwentySecondsTimer ) && bTwentySecStartFlag )
  5887                           
  5888                           ; Regs used in _isFinishedTwentySecondsTimer: [wreg+status,2+status,0]
  5889  0EE1  1683               	bsf	3,5	;RP0=1, select bank1
  5890  0EE2  0827               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  5891  0EE3  0426               	iorwf	_uiTwentySecondsTimer^(0+128),w
  5892  0EE4  1D03               	skipz
  5893  0EE5  3400               	retlw	0
  5894  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  5895  0EE7  084F               	movf	_bTwentySecStartFlag,w
  5896  0EE8  1D03               	skipz
  5897                           
  5898                           ;common.c: 470: {
  5899                           ;common.c: 472: return 1;
  5900  0EE9  3401               	retlw	1
  5901                           
  5902                           ;common.c: 474: else
  5903                           ;common.c: 475: return 0;
  5904  0EEA  3400               	retlw	0
  5905  0EEB                     __end_of_isFinishedTwentySecondsTimer:	
  5906                           
  5907                           	psect	text1027
  5908  07D9                     __ptext1027:	
  5909 ;; =============== function _isFinishedTwentySecondsTimer ends ============
  5910                           
  5911                           
  5912 ;; *************** function _startTwentySecondsTimer *****************
  5913 ;; Defined at:
  5914 ;;		line 448 in file "C:\temp\dev\AK7030-OTP\common.c"
  5915 ;; Parameters:    Size  Location     Type
  5916 ;;		None
  5917 ;; Auto vars:     Size  Location     Type
  5918 ;;		None
  5919 ;; Return value:  Size  Location     Type
  5920 ;;		None               void
  5921 ;; Registers used:
  5922 ;;		wreg, status,2, status,0
  5923 ;; Tracked objects:
  5924 ;;		On entry : 160/0
  5925 ;;		On exit  : 140/0
  5926 ;;		Unchanged: FFE9F/0
  5927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5928 ;;      Params:         0       0       0       0       0
  5929 ;;      Locals:         0       0       0       0       0
  5930 ;;      Temps:          0       0       0       0       0
  5931 ;;      Totals:         0       0       0       0       0
  5932 ;;Total ram usage:        0 bytes
  5933 ;; Hardware stack levels used:    1
  5934 ;; Hardware stack levels required when called:    2
  5935 ;; This function calls:
  5936 ;;		Nothing
  5937 ;; This function is called by:
  5938 ;;		_main
  5939 ;; This function uses a non-reentrant model
  5940 ;;
  5941  07D9                     _startTwentySecondsTimer:	
  5942                           
  5943                           ;common.c: 449: if(( 0 == uiTwentySecondsTimer) && ( 0 == bTwentySecStartFlag))
  5944                           
  5945                           ; Regs used in _startTwentySecondsTimer: [wreg+status,2+status,0]
  5946  07D9  1683               	bsf	3,5	;RP0=1, select bank1
  5947  07DA  0827               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  5948  07DB  0426               	iorwf	_uiTwentySecondsTimer^(0+128),w
  5949  07DC  1D03               	skipz
  5950  07DD  0008               	return
  5951  07DE  1283               	bcf	3,5	;RP0=0, select bank0
  5952  07DF  08CF               	movf	_bTwentySecStartFlag,f
  5953  07E0  1D03               	skipz
  5954  07E1  0008               	return
  5955                           
  5956                           ;common.c: 450: {
  5957                           ;common.c: 451: uiTwentySecondsTimer = 20;
  5958  07E2  3014               	movlw	20
  5959  07E3  1683               	bsf	3,5	;RP0=1, select bank1
  5960  07E4  00A6               	movwf	_uiTwentySecondsTimer^(0+128)
  5961  07E5  01A7               	clrf	(_uiTwentySecondsTimer+1)^(0+128)
  5962                           
  5963                           ;common.c: 452: bTwentySecStartFlag = 1;
  5964  07E6  1283               	bcf	3,5	;RP0=0, select bank0
  5965  07E7  01CF               	clrf	_bTwentySecStartFlag
  5966  07E8  0ACF               	incf	_bTwentySecStartFlag,f
  5967  07E9  0008               	return
  5968  07EA                     __end_of_startTwentySecondsTimer:	
  5969                           
  5970                           	psect	text1028
  5971  0EF7                     __ptext1028:	
  5972 ;; =============== function _startTwentySecondsTimer ends ============
  5973                           
  5974                           
  5975 ;; *************** function _isFinishedTwelveHoursTimer *****************
  5976 ;; Defined at:
  5977 ;;		line 492 in file "C:\temp\dev\AK7030-OTP\common.c"
  5978 ;; Parameters:    Size  Location     Type
  5979 ;;		None
  5980 ;; Auto vars:     Size  Location     Type
  5981 ;;		None
  5982 ;; Return value:  Size  Location     Type
  5983 ;;                  1    wreg      unsigned char 
  5984 ;; Registers used:
  5985 ;;		wreg, status,2, status,0
  5986 ;; Tracked objects:
  5987 ;;		On entry : 40/0
  5988 ;;		On exit  : 40/0
  5989 ;;		Unchanged: FFF9F/0
  5990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5991 ;;      Params:         0       0       0       0       0
  5992 ;;      Locals:         0       0       0       0       0
  5993 ;;      Temps:          0       0       0       0       0
  5994 ;;      Totals:         0       0       0       0       0
  5995 ;;Total ram usage:        0 bytes
  5996 ;; Hardware stack levels used:    1
  5997 ;; Hardware stack levels required when called:    2
  5998 ;; This function calls:
  5999 ;;		Nothing
  6000 ;; This function is called by:
  6001 ;;		_main
  6002 ;; This function uses a non-reentrant model
  6003 ;;
  6004  0EF7                     _isFinishedTwelveHoursTimer:	
  6005                           
  6006                           ;common.c: 493: if(( uiBigTimer == 0 ) && bBigTimerStartFlag )
  6007                           
  6008                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  6009  0EF7  1683               	bsf	3,5	;RP0=1, select bank1
  6010  0EF8  0821               	movf	(_uiBigTimer+1)^(0+128),w
  6011  0EF9  0420               	iorwf	_uiBigTimer^(0+128),w
  6012  0EFA  1D03               	skipz
  6013  0EFB  3400               	retlw	0
  6014  0EFC  1283               	bcf	3,5	;RP0=0, select bank0
  6015  0EFD  084C               	movf	_bBigTimerStartFlag,w
  6016  0EFE  1903               	btfsc	3,2
  6017  0EFF  3400               	retlw	0
  6018  0F00  3001               	movlw	1
  6019                           
  6020                           ;common.c: 494: {
  6021                           ;common.c: 495: bBigTimerStartFlag = 0;
  6022  0F01  01CC               	clrf	_bBigTimerStartFlag
  6023                           
  6024                           ;common.c: 496: return 1;
  6025  0F02  0008               	return
  6026  0F03                     __end_of_isFinishedTwelveHoursTimer:	
  6027                           ;common.c: 498: else
  6028                           ;common.c: 499: return 0;
  6029                           
  6030                           
  6031                           	psect	text1029
  6032  07B1                     __ptext1029:	
  6033 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  6034                           
  6035                           
  6036 ;; *************** function _startTwelveHourTimer *****************
  6037 ;; Defined at:
  6038 ;;		line 392 in file "C:\temp\dev\AK7030-OTP\common.c"
  6039 ;; Parameters:    Size  Location     Type
  6040 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  6041 ;; Auto vars:     Size  Location     Type
  6042 ;;		None
  6043 ;; Return value:  Size  Location     Type
  6044 ;;		None               void
  6045 ;; Registers used:
  6046 ;;		wreg, status,2, status,0
  6047 ;; Tracked objects:
  6048 ;;		On entry : 60/0
  6049 ;;		On exit  : 40/0
  6050 ;;		Unchanged: FFF9F/0
  6051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6052 ;;      Params:         0       2       0       0       0
  6053 ;;      Locals:         0       0       0       0       0
  6054 ;;      Temps:          0       0       0       0       0
  6055 ;;      Totals:         0       2       0       0       0
  6056 ;;Total ram usage:        2 bytes
  6057 ;; Hardware stack levels used:    1
  6058 ;; Hardware stack levels required when called:    2
  6059 ;; This function calls:
  6060 ;;		Nothing
  6061 ;; This function is called by:
  6062 ;;		_main
  6063 ;; This function uses a non-reentrant model
  6064 ;;
  6065  07B1                     _startTwelveHourTimer:	
  6066                           
  6067                           ;common.c: 393: if((0 == uiBigTimer) && ( 0 == bBigTimerStartFlag))
  6068                           
  6069                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  6070  07B1  1683               	bsf	3,5	;RP0=1, select bank1
  6071  07B2  0821               	movf	(_uiBigTimer+1)^(0+128),w
  6072  07B3  0420               	iorwf	_uiBigTimer^(0+128),w
  6073  07B4  1D03               	skipz
  6074  07B5  0008               	return
  6075  07B6  1283               	bcf	3,5	;RP0=0, select bank0
  6076  07B7  08CC               	movf	_bBigTimerStartFlag,f
  6077  07B8  1D03               	skipz
  6078  07B9  0008               	return
  6079                           
  6080                           ;common.c: 394: {
  6081                           ;common.c: 395: uiBigTimer = uiSetTime;
  6082  07BA  0821               	movf	startTwelveHourTimer@uiSetTime+1,w
  6083  07BB  1683               	bsf	3,5	;RP0=1, select bank1
  6084  07BC  00A1               	movwf	(_uiBigTimer+1)^(0+128)
  6085  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  6086  07BE  0820               	movf	startTwelveHourTimer@uiSetTime,w
  6087  07BF  1683               	bsf	3,5	;RP0=1, select bank1
  6088  07C0  00A0               	movwf	_uiBigTimer^(0+128)
  6089                           
  6090                           ;common.c: 396: bBigTimerStartFlag = 1;
  6091  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  6092  07C2  01CC               	clrf	_bBigTimerStartFlag
  6093  07C3  0ACC               	incf	_bBigTimerStartFlag,f
  6094  07C4  0008               	return
  6095  07C5                     __end_of_startTwelveHourTimer:	
  6096                           
  6097                           	psect	text1030
  6098  0EEB                     __ptext1030:	
  6099 ;; =============== function _startTwelveHourTimer ends ============
  6100                           
  6101                           
  6102 ;; *************** function _isFinishedTwentyMinuteTimer *****************
  6103 ;; Defined at:
  6104 ;;		line 480 in file "C:\temp\dev\AK7030-OTP\common.c"
  6105 ;; Parameters:    Size  Location     Type
  6106 ;;		None
  6107 ;; Auto vars:     Size  Location     Type
  6108 ;;		None
  6109 ;; Return value:  Size  Location     Type
  6110 ;;                  1    wreg      unsigned char 
  6111 ;; Registers used:
  6112 ;;		wreg, status,2, status,0
  6113 ;; Tracked objects:
  6114 ;;		On entry : 160/0
  6115 ;;		On exit  : 140/0
  6116 ;;		Unchanged: FFE9F/0
  6117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6118 ;;      Params:         0       0       0       0       0
  6119 ;;      Locals:         0       0       0       0       0
  6120 ;;      Temps:          0       0       0       0       0
  6121 ;;      Totals:         0       0       0       0       0
  6122 ;;Total ram usage:        0 bytes
  6123 ;; Hardware stack levels used:    1
  6124 ;; Hardware stack levels required when called:    2
  6125 ;; This function calls:
  6126 ;;		Nothing
  6127 ;; This function is called by:
  6128 ;;		_main
  6129 ;; This function uses a non-reentrant model
  6130 ;;
  6131  0EEB                     _isFinishedTwentyMinuteTimer:	
  6132                           
  6133                           ;common.c: 481: if(( 0 == uiTwentyMinuteTimer ) && bTwentyMinStartFlag )
  6134                           
  6135                           ; Regs used in _isFinishedTwentyMinuteTimer: [wreg+status,2+status,0]
  6136  0EEB  1683               	bsf	3,5	;RP0=1, select bank1
  6137  0EEC  0825               	movf	(_uiTwentyMinuteTimer+1)^(0+128),w
  6138  0EED  0424               	iorwf	_uiTwentyMinuteTimer^(0+128),w
  6139  0EEE  1D03               	skipz
  6140  0EEF  3400               	retlw	0
  6141  0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  6142  0EF1  084E               	movf	_bTwentyMinStartFlag,w
  6143  0EF2  1903               	btfsc	3,2
  6144  0EF3  3400               	retlw	0
  6145  0EF4  3001               	movlw	1
  6146                           
  6147                           ;common.c: 482: {
  6148                           ;common.c: 483: bTwentyMinStartFlag = 0;
  6149  0EF5  01CE               	clrf	_bTwentyMinStartFlag
  6150                           
  6151                           ;common.c: 484: return 1;
  6152  0EF6  0008               	return
  6153  0EF7                     __end_of_isFinishedTwentyMinuteTimer:	
  6154                           ;common.c: 486: else
  6155                           ;common.c: 487: return 0;
  6156                           
  6157                           
  6158                           	psect	text1031
  6159  0002                     __ptext1031:	
  6160 ;; =============== function _isFinishedTwentyMinuteTimer ends ============
  6161                           
  6162                           
  6163 ;; *************** function _clrSampeTime *****************
  6164 ;; Defined at:
  6165 ;;		line 524 in file "C:\temp\dev\AK7030-OTP\common.c"
  6166 ;; Parameters:    Size  Location     Type
  6167 ;;		None
  6168 ;; Auto vars:     Size  Location     Type
  6169 ;;		None
  6170 ;; Return value:  Size  Location     Type
  6171 ;;		None               void
  6172 ;; Registers used:
  6173 ;;		status,2
  6174 ;; Tracked objects:
  6175 ;;		On entry : 60/20
  6176 ;;		On exit  : 60/20
  6177 ;;		Unchanged: FFF9F/0
  6178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6179 ;;      Params:         0       0       0       0       0
  6180 ;;      Locals:         0       0       0       0       0
  6181 ;;      Temps:          0       0       0       0       0
  6182 ;;      Totals:         0       0       0       0       0
  6183 ;;Total ram usage:        0 bytes
  6184 ;; Hardware stack levels used:    1
  6185 ;; Hardware stack levels required when called:    2
  6186 ;; This function calls:
  6187 ;;		Nothing
  6188 ;; This function is called by:
  6189 ;;		_main
  6190 ;; This function uses a non-reentrant model
  6191 ;;
  6192  0002                     _clrSampeTime:	
  6193                           
  6194                           ;common.c: 525: timer.timer10msStopWatch = 0;
  6195                           
  6196                           ; Regs used in _clrSampeTime: [status,2]
  6197  0002  01AF               	clrf	_timer^(0+128)
  6198  0003  0008               	return
  6199  0004                     __end_of_clrSampeTime:	
  6200                           
  6201                           	psect	text1032
  6202  0EB8                     __ptext1032:	
  6203 ;; =============== function _clrSampeTime ends ============
  6204                           
  6205                           
  6206 ;; *************** function _isPermitSampleTime *****************
  6207 ;; Defined at:
  6208 ;;		line 514 in file "C:\temp\dev\AK7030-OTP\common.c"
  6209 ;; Parameters:    Size  Location     Type
  6210 ;;		None
  6211 ;; Auto vars:     Size  Location     Type
  6212 ;;		None
  6213 ;; Return value:  Size  Location     Type
  6214 ;;                  1    wreg      unsigned char 
  6215 ;; Registers used:
  6216 ;;		wreg
  6217 ;; Tracked objects:
  6218 ;;		On entry : 40/20
  6219 ;;		On exit  : 60/20
  6220 ;;		Unchanged: FFF9F/0
  6221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6222 ;;      Params:         0       0       0       0       0
  6223 ;;      Locals:         0       0       0       0       0
  6224 ;;      Temps:          0       0       0       0       0
  6225 ;;      Totals:         0       0       0       0       0
  6226 ;;Total ram usage:        0 bytes
  6227 ;; Hardware stack levels used:    1
  6228 ;; Hardware stack levels required when called:    2
  6229 ;; This function calls:
  6230 ;;		Nothing
  6231 ;; This function is called by:
  6232 ;;		_main
  6233 ;; This function uses a non-reentrant model
  6234 ;;
  6235  0EB8                     _isPermitSampleTime:	
  6236                           
  6237                           ;common.c: 515: if(timer.timer10msStopWatch >= 10)
  6238                           
  6239                           ; Regs used in _isPermitSampleTime: [wreg]
  6240  0EB8  300A               	movlw	10
  6241  0EB9  1683               	bsf	3,5	;RP0=1, select bank1
  6242  0EBA  022F               	subwf	_timer^(0+128),w
  6243  0EBB  1803               	btfsc	3,0
  6244                           
  6245                           ;common.c: 516: {
  6246                           ;common.c: 517: return 1;
  6247  0EBC  3401               	retlw	1
  6248                           
  6249                           ;common.c: 519: else
  6250                           ;common.c: 520: return 0;
  6251  0EBD  3400               	retlw	0
  6252  0EBE                     __end_of_isPermitSampleTime:	
  6253                           
  6254                           	psect	text1033
  6255  07C5                     __ptext1033:	
  6256 ;; =============== function _isPermitSampleTime ends ============
  6257                           
  6258                           
  6259 ;; *************** function _startTwentyMinuteTimer *****************
  6260 ;; Defined at:
  6261 ;;		line 458 in file "C:\temp\dev\AK7030-OTP\common.c"
  6262 ;; Parameters:    Size  Location     Type
  6263 ;;  uiValue         2    0[BANK0 ] unsigned int 
  6264 ;; Auto vars:     Size  Location     Type
  6265 ;;		None
  6266 ;; Return value:  Size  Location     Type
  6267 ;;		None               void
  6268 ;; Registers used:
  6269 ;;		wreg, status,2, status,0
  6270 ;; Tracked objects:
  6271 ;;		On entry : 60/0
  6272 ;;		On exit  : 40/0
  6273 ;;		Unchanged: FFF9F/0
  6274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6275 ;;      Params:         0       2       0       0       0
  6276 ;;      Locals:         0       0       0       0       0
  6277 ;;      Temps:          0       0       0       0       0
  6278 ;;      Totals:         0       2       0       0       0
  6279 ;;Total ram usage:        2 bytes
  6280 ;; Hardware stack levels used:    1
  6281 ;; Hardware stack levels required when called:    2
  6282 ;; This function calls:
  6283 ;;		Nothing
  6284 ;; This function is called by:
  6285 ;;		_main
  6286 ;; This function uses a non-reentrant model
  6287 ;;
  6288  07C5                     _startTwentyMinuteTimer:	
  6289                           
  6290                           ;common.c: 459: if(( 0 == uiTwentyMinuteTimer) && ( 0 == bTwentyMinStartFlag))
  6291                           
  6292                           ; Regs used in _startTwentyMinuteTimer: [wreg+status,2+status,0]
  6293  07C5  1683               	bsf	3,5	;RP0=1, select bank1
  6294  07C6  0825               	movf	(_uiTwentyMinuteTimer+1)^(0+128),w
  6295  07C7  0424               	iorwf	_uiTwentyMinuteTimer^(0+128),w
  6296  07C8  1D03               	skipz
  6297  07C9  0008               	return
  6298  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  6299  07CB  08CE               	movf	_bTwentyMinStartFlag,f
  6300  07CC  1D03               	skipz
  6301  07CD  0008               	return
  6302                           
  6303                           ;common.c: 460: {
  6304                           ;common.c: 461: uiTwentyMinuteTimer = uiValue;
  6305  07CE  0821               	movf	startTwentyMinuteTimer@uiValue+1,w
  6306  07CF  1683               	bsf	3,5	;RP0=1, select bank1
  6307  07D0  00A5               	movwf	(_uiTwentyMinuteTimer+1)^(0+128)
  6308  07D1  1283               	bcf	3,5	;RP0=0, select bank0
  6309  07D2  0820               	movf	startTwentyMinuteTimer@uiValue,w
  6310  07D3  1683               	bsf	3,5	;RP0=1, select bank1
  6311  07D4  00A4               	movwf	_uiTwentyMinuteTimer^(0+128)
  6312                           
  6313                           ;common.c: 462: bTwentyMinStartFlag = 1;
  6314  07D5  1283               	bcf	3,5	;RP0=0, select bank0
  6315  07D6  01CE               	clrf	_bTwentyMinStartFlag
  6316  07D7  0ACE               	incf	_bTwentyMinStartFlag,f
  6317  07D8  0008               	return
  6318  07D9                     __end_of_startTwentyMinuteTimer:	
  6319                           
  6320                           	psect	text1036
  6321  0EB5                     __ptext1036:	
  6322 ;; =============== function _adc_test_init ends ============
  6323                           
  6324                           
  6325 ;; *************** function _timer1_interrupt_config *****************
  6326 ;; Defined at:
  6327 ;;		line 225 in file "C:\temp\dev\AK7030-OTP\common.c"
  6328 ;; Parameters:    Size  Location     Type
  6329 ;;		None
  6330 ;; Auto vars:     Size  Location     Type
  6331 ;;		None
  6332 ;; Return value:  Size  Location     Type
  6333 ;;		None               void
  6334 ;; Registers used:
  6335 ;;		None
  6336 ;; Tracked objects:
  6337 ;;		On entry : 17F/20
  6338 ;;		On exit  : 17F/20
  6339 ;;		Unchanged: FFE80/0
  6340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6341 ;;      Params:         0       0       0       0       0
  6342 ;;      Locals:         0       0       0       0       0
  6343 ;;      Temps:          0       0       0       0       0
  6344 ;;      Totals:         0       0       0       0       0
  6345 ;;Total ram usage:        0 bytes
  6346 ;; Hardware stack levels used:    1
  6347 ;; Hardware stack levels required when called:    2
  6348 ;; This function calls:
  6349 ;;		Nothing
  6350 ;; This function is called by:
  6351 ;;		_main
  6352 ;; This function uses a non-reentrant model
  6353 ;;
  6354  0EB5                     _timer1_interrupt_config:	
  6355                           
  6356                           ;common.c: 226: GIE = 1;
  6357                           
  6358                           ; Regs used in _timer1_interrupt_config: []
  6359  0EB5  178B               	bsf	11,7
  6360                           
  6361                           ;common.c: 227: PEIE = 1;
  6362  0EB6  170B               	bsf	11,6
  6363  0EB7  0008               	return
  6364  0EB8                     __end_of_timer1_interrupt_config:	
  6365                           
  6366                           	psect	text1037
  6367  0ED7                     __ptext1037:	
  6368 ;; =============== function _timer1_interrupt_config ends ============
  6369                           
  6370                           
  6371 ;; *************** function _timer1_config *****************
  6372 ;; Defined at:
  6373 ;;		line 213 in file "C:\temp\dev\AK7030-OTP\common.c"
  6374 ;; Parameters:    Size  Location     Type
  6375 ;;		None
  6376 ;; Auto vars:     Size  Location     Type
  6377 ;;		None
  6378 ;; Return value:  Size  Location     Type
  6379 ;;		None               void
  6380 ;; Registers used:
  6381 ;;		wreg
  6382 ;; Tracked objects:
  6383 ;;		On entry : 17F/40
  6384 ;;		On exit  : 17F/20
  6385 ;;		Unchanged: FFE80/0
  6386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6387 ;;      Params:         0       0       0       0       0
  6388 ;;      Locals:         0       0       0       0       0
  6389 ;;      Temps:          0       0       0       0       0
  6390 ;;      Totals:         0       0       0       0       0
  6391 ;;Total ram usage:        0 bytes
  6392 ;; Hardware stack levels used:    1
  6393 ;; Hardware stack levels required when called:    2
  6394 ;; This function calls:
  6395 ;;		Nothing
  6396 ;; This function is called by:
  6397 ;;		_main
  6398 ;; This function uses a non-reentrant model
  6399 ;;
  6400  0ED7                     _timer1_config:	
  6401                           
  6402                           ;common.c: 215: TMR1H=0xCF;
  6403                           
  6404                           ; Regs used in _timer1_config: [wreg]
  6405  0ED7  30CF               	movlw	207
  6406  0ED8  1303               	bcf	3,6	;RP1=0, select bank0
  6407  0ED9  008F               	movwf	15	;volatile
  6408                           
  6409                           ;common.c: 216: TMR1L=0x2C;
  6410  0EDA  302C               	movlw	44
  6411  0EDB  008E               	movwf	14	;volatile
  6412                           
  6413                           ;common.c: 217: T1CON=0xE1;
  6414  0EDC  30E1               	movlw	225
  6415  0EDD  0090               	movwf	16	;volatile
  6416                           
  6417                           ;common.c: 218: TMR1IE=1;
  6418  0EDE  1683               	bsf	3,5	;RP0=1, select bank1
  6419  0EDF  140C               	bsf	12,0
  6420  0EE0  0008               	return
  6421  0EE1                     __end_of_timer1_config:	
  6422                           
  6423                           	psect	text1038
  6424  0EC6                     __ptext1038:	
  6425 ;; =============== function _timer1_config ends ============
  6426                           
  6427                           
  6428 ;; *************** function _clock_config *****************
  6429 ;; Defined at:
  6430 ;;		line 205 in file "C:\temp\dev\AK7030-OTP\common.c"
  6431 ;; Parameters:    Size  Location     Type
  6432 ;;		None
  6433 ;; Auto vars:     Size  Location     Type
  6434 ;;		None
  6435 ;; Return value:  Size  Location     Type
  6436 ;;		None               void
  6437 ;; Registers used:
  6438 ;;		wreg, status,2
  6439 ;; Tracked objects:
  6440 ;;		On entry : 17F/20
  6441 ;;		On exit  : 17F/40
  6442 ;;		Unchanged: FFE80/0
  6443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6444 ;;      Params:         0       0       0       0       0
  6445 ;;      Locals:         0       0       0       0       0
  6446 ;;      Temps:          0       0       0       0       0
  6447 ;;      Totals:         0       0       0       0       0
  6448 ;;Total ram usage:        0 bytes
  6449 ;; Hardware stack levels used:    1
  6450 ;; Hardware stack levels required when called:    2
  6451 ;; This function calls:
  6452 ;;		Nothing
  6453 ;; This function is called by:
  6454 ;;		_main
  6455 ;; This function uses a non-reentrant model
  6456 ;;
  6457  0EC6                     _clock_config:	
  6458                           
  6459                           ;common.c: 207: CLKPR = 0x80;
  6460                           
  6461                           ; Regs used in _clock_config: [wreg+status,2]
  6462  0EC6  3080               	movlw	128
  6463  0EC7  1283               	bcf	3,5	;RP0=0, select bank2
  6464  0EC8  1703               	bsf	3,6	;RP1=1, select bank2
  6465  0EC9  0088               	movwf	8	;volatile
  6466                           
  6467                           ;common.c: 208: CLKPR = 0x00;
  6468  0ECA  0188               	clrf	8	;volatile
  6469  0ECB                     l1848:	
  6470                           ;common.c: 209: while(CLKPCE);
  6471                           
  6472  0ECB  1F88               	btfss	8,7
  6473  0ECC  0008               	return
  6474  0ECD  2ECB               	goto	l1848
  6475  0ECE                     __end_of_clock_config:	
  6476                           
  6477                           	psect	text1040
  6478  0EBE                     __ptext1040:	
  6479 ;; =============== function _setPB6AsInput ends ============
  6480                           
  6481                           
  6482 ;; *************** function _setPA6 *****************
  6483 ;; Defined at:
  6484 ;;		line 356 in file "C:\temp\dev\AK7030-OTP\main.c"
  6485 ;; Parameters:    Size  Location     Type
  6486 ;;  bValue          1    wreg     unsigned char 
  6487 ;; Auto vars:     Size  Location     Type
  6488 ;;  bValue          1    0[BANK0 ] unsigned char 
  6489 ;; Return value:  Size  Location     Type
  6490 ;;		None               void
  6491 ;; Registers used:
  6492 ;;		wreg
  6493 ;; Tracked objects:
  6494 ;;		On entry : 60/0
  6495 ;;		On exit  : 60/0
  6496 ;;		Unchanged: FFF9F/0
  6497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6498 ;;      Params:         0       0       0       0       0
  6499 ;;      Locals:         0       1       0       0       0
  6500 ;;      Temps:          0       0       0       0       0
  6501 ;;      Totals:         0       1       0       0       0
  6502 ;;Total ram usage:        1 bytes
  6503 ;; Hardware stack levels used:    1
  6504 ;; Hardware stack levels required when called:    2
  6505 ;; This function calls:
  6506 ;;		Nothing
  6507 ;; This function is called by:
  6508 ;;		_main
  6509 ;; This function uses a non-reentrant model
  6510 ;;
  6511  0EBE                     _setPA6:	
  6512                           
  6513                           ; Regs used in _setPA6: [wreg]
  6514                           ;setPA6@bValue stored from wreg
  6515  0EBE  00A0               	movwf	setPA6@bValue
  6516                           
  6517                           ;main.c: 357: if( bValue )
  6518  0EBF  0820               	movf	setPA6@bValue,w
  6519  0EC0  1903               	btfsc	3,2
  6520  0EC1  2EC4               	goto	l752
  6521                           
  6522                           ;main.c: 359: PA6 = 1;
  6523  0EC2  1705               	bsf	5,6
  6524  0EC3  0008               	return
  6525  0EC4                     l752:	
  6526                           
  6527                           ;main.c: 363: else
  6528                           ;main.c: 365: PA6= 0;
  6529  0EC4  1305               	bcf	5,6
  6530  0EC5  0008               	return
  6531  0EC6                     __end_of_setPA6:	
  6532                           
  6533                           	psect	text1044
  6534  0ECE                     __ptext1044:	
  6535 ;; =============== function _setPA3 ends ============
  6536                           
  6537                           
  6538 ;; *************** function _setPA2 *****************
  6539 ;; Defined at:
  6540 ;;		line 252 in file "C:\temp\dev\AK7030-OTP\main.c"
  6541 ;; Parameters:    Size  Location     Type
  6542 ;;  bValue          1    wreg     unsigned char 
  6543 ;; Auto vars:     Size  Location     Type
  6544 ;;  bValue          1    0[BANK0 ] unsigned char 
  6545 ;; Return value:  Size  Location     Type
  6546 ;;		None               void
  6547 ;; Registers used:
  6548 ;;		wreg
  6549 ;; Tracked objects:
  6550 ;;		On entry : 40/20
  6551 ;;		On exit  : 60/0
  6552 ;;		Unchanged: FFF9F/0
  6553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6554 ;;      Params:         0       0       0       0       0
  6555 ;;      Locals:         0       1       0       0       0
  6556 ;;      Temps:          0       0       0       0       0
  6557 ;;      Totals:         0       1       0       0       0
  6558 ;;Total ram usage:        1 bytes
  6559 ;; Hardware stack levels used:    1
  6560 ;; Hardware stack levels required when called:    2
  6561 ;; This function calls:
  6562 ;;		Nothing
  6563 ;; This function is called by:
  6564 ;;		_main
  6565 ;; This function uses a non-reentrant model
  6566 ;;
  6567  0ECE                     _setPA2:	
  6568                           
  6569                           ; Regs used in _setPA2: [wreg]
  6570                           ;setPA2@bValue stored from wreg
  6571  0ECE  1283               	bcf	3,5	;RP0=0, select bank0
  6572  0ECF  00A0               	movwf	setPA2@bValue
  6573                           
  6574                           ;main.c: 253: if( bValue )
  6575  0ED0  0820               	movf	setPA2@bValue,w
  6576  0ED1  1903               	btfsc	3,2
  6577  0ED2  2ED5               	goto	l727
  6578                           
  6579                           ;main.c: 255: PA2 = 1;
  6580  0ED3  1505               	bsf	5,2
  6581  0ED4  0008               	return
  6582  0ED5                     l727:	
  6583                           
  6584                           ;main.c: 259: else
  6585                           ;main.c: 261: PA2 = 0;
  6586  0ED5  1105               	bcf	5,2
  6587  0ED6  0008               	return
  6588  0ED7                     __end_of_setPA2:	
  6589                           
  6590                           	psect	text1050
  6591  075F                     __ptext1050:	
  6592 ;; =============== function _setPB0 ends ============
  6593                           
  6594                           
  6595 ;; *************** function _initPin *****************
  6596 ;; Defined at:
  6597 ;;		line 129 in file "C:\temp\dev\AK7030-OTP\main.c"
  6598 ;; Parameters:    Size  Location     Type
  6599 ;;		None
  6600 ;; Auto vars:     Size  Location     Type
  6601 ;;		None
  6602 ;; Return value:  Size  Location     Type
  6603 ;;		None               void
  6604 ;; Registers used:
  6605 ;;		None
  6606 ;; Tracked objects:
  6607 ;;		On entry : 160/0
  6608 ;;		On exit  : 160/20
  6609 ;;		Unchanged: FFE9F/0
  6610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6611 ;;      Params:         0       0       0       0       0
  6612 ;;      Locals:         0       0       0       0       0
  6613 ;;      Temps:          0       0       0       0       0
  6614 ;;      Totals:         0       0       0       0       0
  6615 ;;Total ram usage:        0 bytes
  6616 ;; Hardware stack levels used:    1
  6617 ;; Hardware stack levels required when called:    2
  6618 ;; This function calls:
  6619 ;;		Nothing
  6620 ;; This function is called by:
  6621 ;;		_main
  6622 ;; This function uses a non-reentrant model
  6623 ;;
  6624  075F                     _initPin:	
  6625                           
  6626                           ;main.c: 132: TRISB0 = 0;
  6627                           
  6628                           ; Regs used in _initPin: []
  6629  075F  1683               	bsf	3,5	;RP0=1, select bank1
  6630  0760  1006               	bcf	6,0
  6631                           
  6632                           ;main.c: 133: PB0 = 0;
  6633  0761  1283               	bcf	3,5	;RP0=0, select bank0
  6634  0762  1006               	bcf	6,0
  6635                           
  6636                           ;main.c: 134: TRISB1 = 0;
  6637  0763  1683               	bsf	3,5	;RP0=1, select bank1
  6638  0764  1086               	bcf	6,1
  6639                           
  6640                           ;main.c: 135: PB1 = 0;
  6641  0765  1283               	bcf	3,5	;RP0=0, select bank0
  6642  0766  1086               	bcf	6,1
  6643                           
  6644                           ;main.c: 136: TRISB2 = 0;
  6645  0767  1683               	bsf	3,5	;RP0=1, select bank1
  6646  0768  1106               	bcf	6,2
  6647                           
  6648                           ;main.c: 137: PB2 = 0;
  6649  0769  1283               	bcf	3,5	;RP0=0, select bank0
  6650  076A  1106               	bcf	6,2
  6651                           
  6652                           ;main.c: 138: TRISA0 = 0;
  6653  076B  1683               	bsf	3,5	;RP0=1, select bank1
  6654  076C  1005               	bcf	5,0
  6655                           
  6656                           ;main.c: 139: PA0 = 0;
  6657  076D  1283               	bcf	3,5	;RP0=0, select bank0
  6658  076E  1005               	bcf	5,0
  6659                           
  6660                           ;main.c: 140: TRISA1 = 0;
  6661  076F  1683               	bsf	3,5	;RP0=1, select bank1
  6662  0770  1085               	bcf	5,1
  6663                           
  6664                           ;main.c: 141: PA1 = 0;
  6665  0771  1283               	bcf	3,5	;RP0=0, select bank0
  6666  0772  1085               	bcf	5,1
  6667                           
  6668                           ;main.c: 142: TRISA2 = 0;
  6669  0773  1683               	bsf	3,5	;RP0=1, select bank1
  6670  0774  1105               	bcf	5,2
  6671                           
  6672                           ;main.c: 143: PA2 = 1;
  6673  0775  1283               	bcf	3,5	;RP0=0, select bank0
  6674  0776  1505               	bsf	5,2
  6675                           
  6676                           ;main.c: 145: TRISA3 = 0;
  6677  0777  1683               	bsf	3,5	;RP0=1, select bank1
  6678  0778  1185               	bcf	5,3
  6679                           
  6680                           ;main.c: 146: PA3 = 0;
  6681  0779  1283               	bcf	3,5	;RP0=0, select bank0
  6682  077A  1185               	bcf	5,3
  6683                           
  6684                           ;main.c: 147: TRISB4 = 0;
  6685  077B  1683               	bsf	3,5	;RP0=1, select bank1
  6686  077C  1206               	bcf	6,4
  6687                           
  6688                           ;main.c: 148: PB4 = 0;
  6689  077D  1283               	bcf	3,5	;RP0=0, select bank0
  6690  077E  1206               	bcf	6,4
  6691                           
  6692                           ;main.c: 149: TRISB7 = 0;
  6693  077F  1683               	bsf	3,5	;RP0=1, select bank1
  6694  0780  1386               	bcf	6,7
  6695                           
  6696                           ;main.c: 150: PB7 = 0;
  6697  0781  1283               	bcf	3,5	;RP0=0, select bank0
  6698  0782  1386               	bcf	6,7
  6699                           
  6700                           ;main.c: 152: TRISB6 = 1;
  6701  0783  1683               	bsf	3,5	;RP0=1, select bank1
  6702  0784  1706               	bsf	6,6
  6703  0785  0008               	return
  6704  0786                     __end_of_initPin:	
  6705                           
  6706                           	psect	text1055
  6707  0F0F                     __ptext1055:	
  6708 ;; =============== function _clearTwelveHoursTimer ends ============
  6709                           
  6710                           
  6711 ;; *************** function _ISR *****************
  6712 ;; Defined at:
  6713 ;;		line 529 in file "C:\temp\dev\AK7030-OTP\common.c"
  6714 ;; Parameters:    Size  Location     Type
  6715 ;;		None
  6716 ;; Auto vars:     Size  Location     Type
  6717 ;;		None
  6718 ;; Return value:  Size  Location     Type
  6719 ;;		None               void
  6720 ;; Registers used:
  6721 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6722 ;; Tracked objects:
  6723 ;;		On entry : 0/0
  6724 ;;		On exit  : 60/0
  6725 ;;		Unchanged: FFE00/0
  6726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6727 ;;      Params:         0       0       0       0       0
  6728 ;;      Locals:         0       0       0       0       0
  6729 ;;      Temps:          4       0       0       0       0
  6730 ;;      Totals:         4       0       0       0       0
  6731 ;;Total ram usage:        4 bytes
  6732 ;; Hardware stack levels used:    1
  6733 ;; Hardware stack levels required when called:    1
  6734 ;; This function calls:
  6735 ;;		i1_setAD_ConvertFlag
  6736 ;;		_adc_get
  6737 ;;		_vPutSampleDataIntoTable
  6738 ;; This function is called by:
  6739 ;;		Interrupt level 1
  6740 ;; This function uses a non-reentrant model
  6741 ;;
  6742  0F0F                     _ISR:	
  6743                           
  6744                           ;common.c: 530: static unsigned char ucTimer1sCnt = 0;
  6745                           ;common.c: 532: if(TMR1IF == 1)
  6746  0F0F  1C0C               	btfss	12,0
  6747  0F10  2F45               	goto	i1l4733
  6748                           
  6749                           ;common.c: 533: {
  6750                           ;common.c: 534: TMR1IF = 0 ;
  6751  0F11  100C               	bcf	12,0
  6752                           
  6753                           ;common.c: 535: timer.timer10msStopWatch++;
  6754  0F12  1683               	bsf	3,5	;RP0=1, select bank1
  6755  0F13  3064               	movlw	100
  6756  0F14  0AAF               	incf	_timer^(0+128),f
  6757                           
  6758                           ;common.c: 536: ucTimer1sCnt++;
  6759  0F15  0AAC               	incf	ISR@ucTimer1sCnt^(0+128),f
  6760                           
  6761                           ;common.c: 538: if(ucTimer1sCnt >= 100)
  6762  0F16  022C               	subwf	ISR@ucTimer1sCnt^(0+128),w
  6763  0F17  1C03               	skipc
  6764  0F18  2F45               	goto	i1l4733
  6765                           
  6766                           ;common.c: 539: {
  6767                           ;common.c: 540: ucTimer1sCnt = 0;
  6768  0F19  01AC               	clrf	ISR@ucTimer1sCnt^(0+128)
  6769                           
  6770                           ;common.c: 541: if(uiBigTimer > 0)
  6771  0F1A  0821               	movf	(_uiBigTimer+1)^(0+128),w
  6772  0F1B  0420               	iorwf	_uiBigTimer^(0+128),w
  6773  0F1C  1903               	skipnz
  6774  0F1D  2F24               	goto	i1l1959
  6775                           
  6776                           ;common.c: 542: uiBigTimer--;
  6777  0F1E  3001               	movlw	1
  6778  0F1F  02A0               	subwf	_uiBigTimer^(0+128),f
  6779  0F20  3000               	movlw	0
  6780  0F21  1C03               	skipc
  6781  0F22  03A1               	decf	(_uiBigTimer+1)^(0+128),f
  6782  0F23  02A1               	subwf	(_uiBigTimer+1)^(0+128),f
  6783  0F24                     i1l1959:	
  6784                           
  6785                           ;common.c: 544: if(uiSmallTimer)
  6786  0F24  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  6787  0F25  0422               	iorwf	_uiSmallTimer^(0+128),w
  6788  0F26  1903               	skipnz
  6789  0F27  2F2E               	goto	i1l1960
  6790                           
  6791                           ;common.c: 545: uiSmallTimer--;
  6792  0F28  3001               	movlw	1
  6793  0F29  02A2               	subwf	_uiSmallTimer^(0+128),f
  6794  0F2A  3000               	movlw	0
  6795  0F2B  1C03               	skipc
  6796  0F2C  03A3               	decf	(_uiSmallTimer+1)^(0+128),f
  6797  0F2D  02A3               	subwf	(_uiSmallTimer+1)^(0+128),f
  6798  0F2E                     i1l1960:	
  6799                           
  6800                           ;common.c: 547: if((uiTwentySecondsTimer)&& (0 == bPause20secTimer))
  6801  0F2E  0827               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  6802  0F2F  0426               	iorwf	_uiTwentySecondsTimer^(0+128),w
  6803  0F30  1903               	skipnz
  6804  0F31  2F3B               	goto	i1l1961
  6805  0F32  08AE               	movf	_bPause20secTimer^(0+128),f
  6806  0F33  1D03               	skipz
  6807  0F34  2F3B               	goto	i1l1961
  6808                           
  6809                           ;common.c: 548: uiTwentySecondsTimer--;
  6810  0F35  3001               	movlw	1
  6811  0F36  02A6               	subwf	_uiTwentySecondsTimer^(0+128),f
  6812  0F37  3000               	movlw	0
  6813  0F38  1C03               	skipc
  6814  0F39  03A7               	decf	(_uiTwentySecondsTimer+1)^(0+128),f
  6815  0F3A  02A7               	subwf	(_uiTwentySecondsTimer+1)^(0+128),f
  6816  0F3B                     i1l1961:	
  6817                           
  6818                           ;common.c: 550: if((uiTwentyMinuteTimer))
  6819  0F3B  0825               	movf	(_uiTwentyMinuteTimer+1)^(0+128),w
  6820  0F3C  0424               	iorwf	_uiTwentyMinuteTimer^(0+128),w
  6821  0F3D  1903               	skipnz
  6822  0F3E  2F45               	goto	i1l4733
  6823                           
  6824                           ;common.c: 551: uiTwentyMinuteTimer--;
  6825  0F3F  3001               	movlw	1
  6826  0F40  02A4               	subwf	_uiTwentyMinuteTimer^(0+128),f
  6827  0F41  3000               	movlw	0
  6828  0F42  1C03               	skipc
  6829  0F43  03A5               	decf	(_uiTwentyMinuteTimer+1)^(0+128),f
  6830  0F44  02A5               	subwf	(_uiTwentyMinuteTimer+1)^(0+128),f
  6831  0F45                     i1l4733:	
  6832                           
  6833                           ;common.c: 552: }
  6834                           ;common.c: 553: }
  6835                           ;common.c: 555: if(ADIF)
  6836  0F45  1283               	bcf	3,5	;RP0=0, select bank0
  6837  0F46  1D0D               	btfss	13,2
  6838  0F47  2F56               	goto	i1l1964
  6839  0F48  3001               	movlw	1
  6840                           
  6841                           ;common.c: 556: {
  6842                           ;common.c: 557: ADIF=0;
  6843  0F49  110D               	bcf	13,2
  6844                           
  6845                           ;common.c: 558: setAD_ConvertFlag(1);
  6846  0F4A  27E4  158A         	fcall	i1_setAD_ConvertFlag
  6847                           
  6848                           ;common.c: 559: vPutSampleDataIntoTable(adc_get(),sampleChannelSelect);
  6849  0F4C  27D8  158A         	fcall	_adc_get
  6850  0F4E  0871               	movf	?_adc_get+1,w
  6851  0F4F  00F5               	movwf	?_vPutSampleDataIntoTable+1
  6852  0F50  0870               	movf	?_adc_get,w
  6853  0F51  00F4               	movwf	?_vPutSampleDataIntoTable
  6854  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  6855  0F53  0851               	movf	_sampleChannelSelect,w
  6856  0F54  00F6               	movwf	?_vPutSampleDataIntoTable+2
  6857  0F55  2763               	fcall	_vPutSampleDataIntoTable
  6858  0F56                     i1l1964:	
  6859  0F56  087C               	movf	??_ISR+3,w
  6860  0F57  1283               	bcf	3,5	;RP0=0, select bank0
  6861  0F58  1303               	bcf	3,6	;RP1=0, select bank0
  6862  0F59  00FF               	movwf	127
  6863  0F5A  087B               	movf	??_ISR+2,w
  6864  0F5B  008A               	movwf	10
  6865  0F5C  087A               	movf	??_ISR+1,w
  6866  0F5D  0084               	movwf	4
  6867  0F5E  0E79               	swapf	??_ISR^(0+-128),w
  6868  0F5F  0083               	movwf	3
  6869  0F60  0EFE               	swapf	126,f
  6870  0F61  0E7E               	swapf	126,w
  6871  0F62  0009               	retfie
  6872  0F63                     __end_of_ISR:	
  6873  0F63                     __ptext1058:	
  6874 ;; =============== function _adc_get ends ============
  6875                           
  6876                           
  6877 ;; *************** function _vPutSampleDataIntoTable *****************
  6878 ;; Defined at:
  6879 ;;		line 109 in file "C:\temp\dev\AK7030-OTP\common.c"
  6880 ;; Parameters:    Size  Location     Type
  6881 ;;  uiSampleData    2    4[COMMON] unsigned int 
  6882 ;;  channel         1    6[COMMON] unsigned char 
  6883 ;; Auto vars:     Size  Location     Type
  6884 ;;  i               2    7[COMMON] int 
  6885 ;; Return value:  Size  Location     Type
  6886 ;;		None               void
  6887 ;; Registers used:
  6888 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  6889 ;; Tracked objects:
  6890 ;;		On entry : 60/0
  6891 ;;		On exit  : 0/0
  6892 ;;		Unchanged: FFE00/0
  6893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6894 ;;      Params:         3       0       0       0       0
  6895 ;;      Locals:         2       0       0       0       0
  6896 ;;      Temps:          0       0       0       0       0
  6897 ;;      Totals:         5       0       0       0       0
  6898 ;;Total ram usage:        5 bytes
  6899 ;; Hardware stack levels used:    1
  6900 ;; This function calls:
  6901 ;;		Nothing
  6902 ;; This function is called by:
  6903 ;;		_ISR
  6904 ;; This function uses a non-reentrant model
  6905 ;;
  6906  0F63                     _vPutSampleDataIntoTable:	
  6907                           
  6908                           ;common.c: 111: static unsigned char ucChannelZeroLength = 0;
  6909                           ;common.c: 113: static unsigned char ucChannelSecondLength = 0;
  6910                           ;common.c: 115: static unsigned char ucChannelFifthLength = 0;
  6911                           ;common.c: 117: static unsigned char ucChannelSixthLength = 0;
  6912                           ;common.c: 119: if(channel == 0)
  6913                           
  6914                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1]
  6915  0F63  08F6               	movf	vPutSampleDataIntoTable@channel,f
  6916  0F64  1D03               	skipz
  6917  0F65  2F72               	goto	i1l4657
  6918                           
  6919                           ;common.c: 120: {
  6920                           ;common.c: 121: if(ucChannelZeroLength < 12)
  6921  0F66  300C               	movlw	12
  6922  0F67  026E               	subwf	vPutSampleDataIntoTable@ucChannelZeroLength,w
  6923  0F68  1803               	skipnc
  6924  0F69  2F6E               	goto	i1l4653
  6925                           
  6926                           ;common.c: 122: {
  6927                           ;common.c: 123: uiSampleChannelZero[ucChannelZeroLength] = uiSampleData;
  6928  0F6A  1003               	clrc
  6929  0F6B  27F0               	fcall	PL3	;call to abstracted procedure
  6930                           
  6931                           ;common.c: 125: ucChannelZeroLength++;
  6932  0F6C  0AEE               	incf	vPutSampleDataIntoTable@ucChannelZeroLength,f
  6933                           
  6934                           ;common.c: 126: }
  6935  0F6D  0008               	return
  6936  0F6E                     i1l4653:	
  6937                           
  6938                           ;common.c: 127: else
  6939                           ;common.c: 128: {
  6940                           ;common.c: 129: ucChannelZeroLength = 0;
  6941  0F6E  01EE               	clrf	vPutSampleDataIntoTable@ucChannelZeroLength
  6942                           
  6943                           ;common.c: 131: uiSampleChannelZero[ucChannelZeroLength] = uiSampleData;
  6944  0F6F  1003               	clrc
  6945  0F70  27F0               	fcall	PL3	;call to abstracted procedure
  6946  0F71  0008               	return
  6947  0F72                     i1l4657:	
  6948                           
  6949                           ;common.c: 134: else if(channel == 2)
  6950  0F72  0876               	movf	vPutSampleDataIntoTable@channel,w
  6951  0F73  3A02               	xorlw	2
  6952  0F74  1D03               	skipz
  6953  0F75  2F86               	goto	i1l4669
  6954                           
  6955                           ;common.c: 135: {
  6956                           ;common.c: 136: if(ucChannelSecondLength < 12)
  6957  0F76  300C               	movlw	12
  6958  0F77  026C               	subwf	vPutSampleDataIntoTable@ucChannelSecondLength,w
  6959  0F78  1803               	skipnc
  6960  0F79  2F80               	goto	i1l4665
  6961                           
  6962                           ;common.c: 137: {
  6963                           ;common.c: 138: uiSampleChannelSecond[ucChannelSecondLength] = uiSampleData;
  6964  0F7A  1003               	clrc
  6965  0F7B  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelSecondLength,w
  6966  0F7C  3EA8               	addlw	_uiSampleChannelSecond& (0+255)
  6967  0F7D  27E8               	fcall	PL2	;call to abstracted procedure
  6968                           
  6969                           ;common.c: 140: ucChannelSecondLength++;
  6970  0F7E  0AEC               	incf	vPutSampleDataIntoTable@ucChannelSecondLength,f
  6971                           
  6972                           ;common.c: 141: }
  6973  0F7F  0008               	return
  6974  0F80                     i1l4665:	
  6975                           
  6976                           ;common.c: 142: else
  6977                           ;common.c: 143: {
  6978                           ;common.c: 144: ucChannelSecondLength = 0;
  6979  0F80  01EC               	clrf	vPutSampleDataIntoTable@ucChannelSecondLength
  6980                           
  6981                           ;common.c: 146: uiSampleChannelSecond[ucChannelSecondLength] = uiSampleData;
  6982  0F81  1003               	clrc
  6983  0F82  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelSecondLength,w
  6984  0F83  3EA8               	addlw	_uiSampleChannelSecond& (0+255)
  6985  0F84  27E8               	fcall	PL2	;call to abstracted procedure
  6986  0F85  0008               	return
  6987  0F86                     i1l4669:	
  6988                           
  6989                           ;common.c: 149: else if(channel == 5)
  6990  0F86  0876               	movf	vPutSampleDataIntoTable@channel,w
  6991  0F87  3A05               	xorlw	5
  6992  0F88  1D03               	skipz
  6993  0F89  2F9A               	goto	i1l4681
  6994                           
  6995                           ;common.c: 150: {
  6996                           ;common.c: 151: if(ucChannelFifthLength < 12)
  6997  0F8A  300C               	movlw	12
  6998  0F8B  026B               	subwf	vPutSampleDataIntoTable@ucChannelFifthLength,w
  6999  0F8C  1803               	skipnc
  7000  0F8D  2F94               	goto	i1l4677
  7001                           
  7002                           ;common.c: 152: {
  7003                           ;common.c: 153: uiSampleChannelFifth[ucChannelFifthLength] = uiSampleData;
  7004  0F8E  1003               	clrc
  7005  0F8F  0D6B               	rlf	vPutSampleDataIntoTable@ucChannelFifthLength,w
  7006  0F90  3E90               	addlw	_uiSampleChannelFifth& (0+255)
  7007  0F91  27E8               	fcall	PL2	;call to abstracted procedure
  7008                           
  7009                           ;common.c: 155: ucChannelFifthLength++;
  7010  0F92  0AEB               	incf	vPutSampleDataIntoTable@ucChannelFifthLength,f
  7011                           
  7012                           ;common.c: 156: }
  7013  0F93  0008               	return
  7014  0F94                     i1l4677:	
  7015                           
  7016                           ;common.c: 157: else
  7017                           ;common.c: 158: {
  7018                           ;common.c: 159: ucChannelFifthLength = 0;
  7019  0F94  01EB               	clrf	vPutSampleDataIntoTable@ucChannelFifthLength
  7020                           
  7021                           ;common.c: 161: uiSampleChannelFifth[ucChannelFifthLength] = uiSampleData;
  7022  0F95  1003               	clrc
  7023  0F96  0D6B               	rlf	vPutSampleDataIntoTable@ucChannelFifthLength,w
  7024  0F97  3E90               	addlw	_uiSampleChannelFifth& (0+255)
  7025  0F98  27E8               	fcall	PL2	;call to abstracted procedure
  7026  0F99  0008               	return
  7027  0F9A                     i1l4681:	
  7028                           
  7029                           ;common.c: 164: else if(channel == 6)
  7030  0F9A  0876               	movf	vPutSampleDataIntoTable@channel,w
  7031  0F9B  3A06               	xorlw	6
  7032  0F9C  1D03               	skipz
  7033  0F9D  2FAE               	goto	i1l4693
  7034                           
  7035                           ;common.c: 165: {
  7036                           ;common.c: 166: if(ucChannelSixthLength < 12)
  7037  0F9E  300C               	movlw	12
  7038  0F9F  026D               	subwf	vPutSampleDataIntoTable@ucChannelSixthLength,w
  7039  0FA0  1803               	skipnc
  7040  0FA1  2FA8               	goto	i1l4689
  7041                           
  7042                           ;common.c: 167: {
  7043                           ;common.c: 168: uiSampleChannelSixth[ucChannelSixthLength] = uiSampleData;
  7044  0FA2  1003               	clrc
  7045  0FA3  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelSixthLength,w
  7046  0FA4  3EC0               	addlw	_uiSampleChannelSixth& (0+255)
  7047  0FA5  27E8               	fcall	PL2	;call to abstracted procedure
  7048                           
  7049                           ;common.c: 170: ucChannelSixthLength++;
  7050  0FA6  0AED               	incf	vPutSampleDataIntoTable@ucChannelSixthLength,f
  7051                           
  7052                           ;common.c: 171: }
  7053  0FA7  0008               	return
  7054  0FA8                     i1l4689:	
  7055                           
  7056                           ;common.c: 172: else
  7057                           ;common.c: 173: {
  7058                           ;common.c: 174: ucChannelSixthLength = 0;
  7059  0FA8  01ED               	clrf	vPutSampleDataIntoTable@ucChannelSixthLength
  7060                           
  7061                           ;common.c: 176: uiSampleChannelSixth[ucChannelSixthLength] = uiSampleData;
  7062  0FA9  1003               	clrc
  7063  0FAA  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelSixthLength,w
  7064  0FAB  3EC0               	addlw	_uiSampleChannelSixth& (0+255)
  7065  0FAC  27E8               	fcall	PL2	;call to abstracted procedure
  7066  0FAD  0008               	return
  7067  0FAE                     i1l4693:	
  7068                           
  7069                           ;common.c: 179: else
  7070                           ;common.c: 180: {
  7071                           ;common.c: 181: ucChannelZeroLength = 0;
  7072  0FAE  01EE               	clrf	vPutSampleDataIntoTable@ucChannelZeroLength
  7073                           
  7074                           ;common.c: 183: ucChannelSecondLength = 0;
  7075  0FAF  01EC               	clrf	vPutSampleDataIntoTable@ucChannelSecondLength
  7076                           
  7077                           ;common.c: 185: ucChannelFifthLength = 0;
  7078  0FB0  01EB               	clrf	vPutSampleDataIntoTable@ucChannelFifthLength
  7079                           
  7080                           ;common.c: 187: ucChannelSixthLength = 0;
  7081  0FB1  01ED               	clrf	vPutSampleDataIntoTable@ucChannelSixthLength
  7082                           
  7083                           ;common.c: 189: for(int i = 0;i < 12; i++)
  7084  0FB2  01F7               	clrf	vPutSampleDataIntoTable@i
  7085  0FB3  01F8               	clrf	vPutSampleDataIntoTable@i+1
  7086  0FB4                     i1l4699:	
  7087                           
  7088                           ;common.c: 190: {
  7089                           ;common.c: 191: uiSampleChannelZero[i] = 0;
  7090  0FB4  1003               	clrc
  7091  0FB5  0D77               	rlf	vPutSampleDataIntoTable@i,w
  7092  0FB6  3EC4               	addlw	_uiSampleChannelZero& (0+255)
  7093  0FB7  0084               	movwf	4
  7094  0FB8  1383               	bcf	3,7	;select IRP bank1
  7095                           
  7096                           ;common.c: 193: uiSampleChannelSecond[i] = 0;
  7097  0FB9  27FA  158A         	fcall	PL7	;call to abstracted procedure
  7098  0FBB  3EA8               	addlw	_uiSampleChannelSecond& (0+255)
  7099  0FBC  0084               	movwf	4
  7100  0FBD  1783               	bsf	3,7	;select IRP bank3
  7101                           
  7102                           ;common.c: 195: uiSampleChannelFifth[i] = 0;
  7103  0FBE  27FA  158A         	fcall	PL7	;call to abstracted procedure
  7104  0FC0  3E90               	addlw	_uiSampleChannelFifth& (0+255)
  7105  0FC1  0084               	movwf	4
  7106                           
  7107                           ;common.c: 197: uiSampleChannelSixth[i] = 0;
  7108  0FC2  27FA  158A         	fcall	PL7	;call to abstracted procedure
  7109  0FC4  3EC0               	addlw	_uiSampleChannelSixth& (0+255)
  7110  0FC5  0084               	movwf	4
  7111  0FC6  0180               	clrf	0
  7112  0FC7  0A84               	incf	4,f
  7113  0FC8  0180               	clrf	0
  7114  0FC9  0AF7               	incf	vPutSampleDataIntoTable@i,f
  7115  0FCA  1903               	skipnz
  7116  0FCB  0AF8               	incf	vPutSampleDataIntoTable@i+1,f
  7117  0FCC  0878               	movf	vPutSampleDataIntoTable@i+1,w
  7118  0FCD  3A80               	xorlw	128
  7119  0FCE  00FF               	movwf	127
  7120  0FCF  3080               	movlw	128
  7121  0FD0  027F               	subwf	127,w
  7122  0FD1  1D03               	skipz
  7123  0FD2  2FD5               	goto	u188_25
  7124  0FD3  300C               	movlw	12
  7125  0FD4  0277               	subwf	vPutSampleDataIntoTable@i,w
  7126  0FD5                     u188_25:	
  7127  0FD5  1803               	btfsc	3,0
  7128  0FD6  0008               	return
  7129  0FD7  2FB4               	goto	i1l4699
  7130  0FD8                     __end_of_vPutSampleDataIntoTable:	
  7131  0FD8                     __ptext1057:	
  7132 ;; =============== function i1_setAD_ConvertFlag ends ============
  7133                           
  7134                           
  7135 ;; *************** function _adc_get *****************
  7136 ;; Defined at:
  7137 ;;		line 105 in file "C:\temp\dev\AK7030-OTP\periph.c"
  7138 ;; Parameters:    Size  Location     Type
  7139 ;;		None
  7140 ;; Auto vars:     Size  Location     Type
  7141 ;;  val             2    2[COMMON] unsigned int 
  7142 ;; Return value:  Size  Location     Type
  7143 ;;                  2    0[COMMON] unsigned int 
  7144 ;; Registers used:
  7145 ;;		wreg
  7146 ;; Tracked objects:
  7147 ;;		On entry : 60/20
  7148 ;;		On exit  : 60/20
  7149 ;;		Unchanged: FFF9F/0
  7150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7151 ;;      Params:         2       0       0       0       0
  7152 ;;      Locals:         2       0       0       0       0
  7153 ;;      Temps:          0       0       0       0       0
  7154 ;;      Totals:         4       0       0       0       0
  7155 ;;Total ram usage:        4 bytes
  7156 ;; Hardware stack levels used:    1
  7157 ;; This function calls:
  7158 ;;		Nothing
  7159 ;; This function is called by:
  7160 ;;		_ISR
  7161 ;; This function uses a non-reentrant model
  7162 ;;
  7163  0FD8                     _adc_get:	
  7164                           
  7165                           ;periph.c: 106: unsigned int val;
  7166                           ;periph.c: 107: val = (ADRESH<<8) | ADRESL;
  7167                           
  7168                           ; Regs used in _adc_get: [wreg]
  7169  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  7170  0FD9  081E               	movf	30,w	;volatile
  7171  0FDA  00F3               	movwf	adc_get@val+1
  7172  0FDB  01F2               	clrf	adc_get@val
  7173  0FDC  1683               	bsf	3,5	;RP0=1, select bank1
  7174  0FDD  081E               	movf	30,w	;volatile
  7175  0FDE  04F2               	iorwf	adc_get@val,f
  7176                           
  7177                           ;periph.c: 108: return val;
  7178  0FDF  0873               	movf	adc_get@val+1,w
  7179  0FE0  00F1               	movwf	?_adc_get+1
  7180  0FE1  0872               	movf	adc_get@val,w
  7181  0FE2  00F0               	movwf	?_adc_get
  7182  0FE3  0008               	return
  7183  0FE4                     __end_of_adc_get:	
  7184  0FE4                     __ptext1056:	
  7185 ;; =============== function _ISR ends ============
  7186                           
  7187                           
  7188 ;; *************** function i1_setAD_ConvertFlag *****************
  7189 ;; Defined at:
  7190 ;;		line 239 in file "C:\temp\dev\AK7030-OTP\common.c"
  7191 ;; Parameters:    Size  Location     Type
  7192 ;;  setAD_Conver    1    wreg     unsigned char 
  7193 ;; Auto vars:     Size  Location     Type
  7194 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  7195 ;; Return value:  Size  Location     Type
  7196 ;;		None               void
  7197 ;; Registers used:
  7198 ;;		wreg
  7199 ;; Tracked objects:
  7200 ;;		On entry : 60/0
  7201 ;;		On exit  : 60/20
  7202 ;;		Unchanged: FFF9F/0
  7203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7204 ;;      Params:         0       0       0       0       0
  7205 ;;      Locals:         1       0       0       0       0
  7206 ;;      Temps:          0       0       0       0       0
  7207 ;;      Totals:         1       0       0       0       0
  7208 ;;Total ram usage:        1 bytes
  7209 ;; Hardware stack levels used:    1
  7210 ;; This function calls:
  7211 ;;		Nothing
  7212 ;; This function is called by:
  7213 ;;		_ISR
  7214 ;; This function uses a non-reentrant model
  7215 ;;
  7216  0FE4                     i1_setAD_ConvertFlag:	
  7217                           
  7218                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  7219                           ;i1setAD_ConvertFlag@flag stored from wreg
  7220  0FE4  00F0               	movwf	i1setAD_ConvertFlag@flag
  7221                           
  7222                           ;common.c: 240: adc_convert_flag = flag;
  7223  0FE5  1683               	bsf	3,5	;RP0=1, select bank1
  7224  0FE6  00AD               	movwf	_adc_convert_flag^(0+128)
  7225  0FE7  0008               	return
  7226  0FE8                     __end_ofi1_setAD_ConvertFlag:	
  7227  0FE8                     PL2:	
  7228  0FE8  0084               	movwf	4
  7229  0FE9  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  7230  0FEA  1783               	bsf	3,7	;select IRP bank3
  7231  0FEB  0080               	movwf	0
  7232  0FEC  0A84               	incf	4,f
  7233  0FED  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  7234  0FEE  0080               	movwf	0
  7235  0FEF  0008               	return
  7236  0FF0                     PL3:	
  7237  0FF0  0D6E               	rlf	vPutSampleDataIntoTable@ucChannelZeroLength,w
  7238  0FF1  3EC4               	addlw	_uiSampleChannelZero& (0+255)
  7239  0FF2  0084               	movwf	4
  7240  0FF3  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  7241  0FF4  1383               	bcf	3,7	;select IRP bank1
  7242  0FF5  0080               	movwf	0
  7243  0FF6  0A84               	incf	4,f
  7244  0FF7  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  7245  0FF8  0080               	movwf	0
  7246  0FF9  0008               	return
  7247  0FFA                     PL7:	
  7248  0FFA  0180               	clrf	0
  7249  0FFB  0A84               	incf	4,f
  7250  0FFC  0180               	clrf	0
  7251  0FFD  1003               	clrc
  7252  0FFE  0D77               	rlf	vPutSampleDataIntoTable@i,w
  7253  0FFF  0008               	return
  7254                           
  7255                           	psect	intentry
  7256  0004                     __pintentry:	
  7257                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7258                           
  7259  0004                     interrupt_function:	
  7260  007E                     saved_w	set	btemp
  7261  0004  00FE               	movwf	btemp
  7262  0005  0E03               	swapf	3,w
  7263  0006  00F9               	movwf	??_ISR
  7264  0007  0804               	movf	4,w
  7265  0008  00FA               	movwf	??_ISR+1
  7266  0009  080A               	movf	10,w
  7267  000A  00FB               	movwf	??_ISR+2
  7268  000B  1283               	bcf	3,5	;RP0=0, select bank0
  7269  000C  1303               	bcf	3,6	;RP1=0, select bank0
  7270  000D  087F               	movf	btemp+1,w
  7271  000E  00FC               	movwf	??_ISR+3
  7272  000F  158A  2F0F         	ljmp	_ISR
  7273                           
  7274                           	psect	text1059
  7275  0000                     __ptext1059:	
  7276 ;; =============== function _vPutSampleDataIntoTable ends ============
  7277                           
  7278  007E                     btemp	set	126	;btemp
  7279  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Tue Mar 03 11:13:22 2020

                              ??_clock_config 0020                                             pc 0002  
                                          _GO 00F9                                            fsr 0004  
                    ?_timer1_interrupt_config 0070                                           l702 04AD  
                                         l712 04BD                                           l722 04CF  
                                         l707 04B5                                           l732 0631  
                                         l717 04C6                                           l742 053C  
                                         l727 0ED5                                           l815 00EA  
                                         l752 0EC4                                           l760 0000  
                                         l737 0645                                           l835 0145  
                                         l757 0000                                           l693 0000  
                                         l774 005E                                           l839 016D  
                                         l696 0000                                           l699 0000  
                                         l974 030C                                           l993 035B  
                                         _PA0 0028                                           _PA1 0029  
                                         _GIE 005F                                           _PB0 0030  
                                         _PA2 002A                                           _PB1 0031  
                                         _PA3 002B                                           _PB2 0032  
                                         _PB4 0034                                           _PA6 002E  
                                         _PB6 0036                                           _PB7 0037  
                                         _ISR 0F0F                                           fsr0 0004  
                                         indf 0000                                _ucChannel5Type 0054  
                      ??_startThreeHoursTimer 0022                                          S5831 080E  
                                        S5827 07EA                                          S5829 0800  
                                        ?_ISR 0070                            __size_of_AD_Sample 0022  
                      ?_getAdOriginalCh0Value 0046                        ?_getAdOriginalCh2Value 0046  
                                        l1041 0447                                          l1128 0535  
                                        l5001 0000                                          l2611 0000  
                                        l1803 0000                                          l5011 0000  
                                        l5003 0000                                          l5101 00BB  
                                        l5021 0033                                          l5013 0000  
                                        l5005 0000                                          l1903 0000  
                                        l5111 00CB                                          l5031 004D  
                                        l5023 0000                                          l5015 0000  
                                        l5007 0000                                          l1912 0000  
                                        l1816 0000                                          l2617 0000  
                                        l5201 018A                                          l5113 00CF  
                                        l5105 0000                                          l5041 005B  
                                        l5033 004E                                          l5017 0000  
                                        l5009 0000                                          l1906 0000  
                                        l4411 0000                                          l1851 0000  
                                        l5211 0193                                          l5131 0000  
                                        l5115 0000                                          l5107 00C3  
                                        l5051 0000                                          l5043 005F  
                                        l5027 0041                                          l5019 0000  
                                        l1860 0000                                          l4413 0000  
                                        l1909 0000                                          l4421 0000  
                                        l5221 019C                                          l5141 0000  
                                        l5125 0000                                          l5117 0000  
                                        l5061 0000                                          l5053 0000  
                                        l5037 0000                                          l1854 0000  
                                        l4415 0000                                          l4423 0000  
                                        l4431 0000                                          l4511 0000  
                                        l1863 0000                                          l5311 0224  
                                        l5231 01B5                                          l5151 011B  
                                        l5143 0105                                          l5135 0000  
                                        l5127 00ED                                          l5119 00DB  
                                        l5071 0000                                          l5063 007C  
                                        l5047 0000                                          l5039 0055  
                                        l1848 0ECB                                          l1952 0000  
                                        l1872 0000                                          l4417 06F1  
                                        l4425 0000                                          l4433 0000  
                                        l4441 0000                                          l1857 0000  
                                        l4505 0000                                          l4513 0000  
                                        l4601 0659                                          l5401 0000  
                                        l5321 0230                                          l5313 0226  
                                        l5241 01BC                                          l5233 0000  
                                        l5145 0000                                          l5137 00FD  
                                        l5129 0000                                          l5081 00A0  
                                        l5073 0000                                          l5065 0000  
                                        l5057 0000                                          l4419 0000  
                                        l4427 0000                                          l4435 0000  
                                        l4443 0000                                          l4451 0000  
                                        l4507 0000                                          l4523 0000  
                                        l4531 0000                                          l4603 0000  
                                        l1875 0000                                          l5411 02AE  
                                        l5323 0232                                          l5307 0210  
                                        l5251 01D6                                          l5243 01C8  
                                        l5235 01BA                                          l5171 0162  
                                        l5163 014F                                          l5155 0121  
                                        l5147 0110                                          l5091 0000  
                                        l5083 0000                                          l5075 0093  
                                        l4429 0000                                          l4437 0000  
                                        l4445 0000                                          l4453 0000  
                                        l4461 0000                                          l4621 06C2  
                                        l4605 0000                                          l1869 0000  
                                        l5413 02BE                                          l5333 023B  
                                        l5317 022E                                          l5309 021C  
                                        l5245 01CC                                          l5181 0175  
                                        l5501 0343                                          l5093 00AA  
                                        l5085 0000                                          l5069 008A  
                                        l1878 0000                                          l4439 0000  
                                        l4447 0000                                          l4455 0000  
                                        l4463 0000                                          l4471 0000  
                                        l4535 0000                                          l4623 0682  
                                        l4615 0681                                          l4607 0000  
                                        l5503 0000                                          l5423 02CA  
                                        l5415 02C0                                          l5343 0244  
                                        l5255 01D8                                          l5247 01CE  
                                        l5191 0181                                          l5175 016B  
                                        l5167 0159                                          l5159 0140  
                                        l5087 00A3                                          l5079 0000  
                                        l4449 0000                                          l4457 0000  
                                        l4465 0000                                          l4481 0000  
                                        l4473 0000                                          l4529 0000  
                                        l4537 0000                                          l4553 0000  
                                        l4641 0000                                          l4625 06C4  
                                        l4705 0000                                          l4801 0000  
                                        l5601 0000                                          l5521 0000  
                                        l5513 0393                                          l5505 0000  
                                        l5425 02CC                                          l5409 029D  
                                        l5353 0255                                          l5257 01DA  
                                        l5185 017D                                          l5177 016F  
                                        l4459 0000                                          l4467 0000  
                                        l4475 0000                                          l4483 0725  
                                        l4491 0000                                          l4547 0000  
                                        l4555 0000                                          l4635 0000  
                                        l4627 0000                                          l4803 0000  
                                        l4811 0523                                          l5531 0000  
                                        l5523 03A4                                          l5507 0384  
                                        l5451 02F7                                          l5435 02D2  
                                        l5363 025B                                          l5355 0000  
                                        l5267 01E3                                          l5179 0173  
                                        l5099 00BA                                          l4469 0000  
                                        l4477 0000                                          l4485 0000  
                                        l4493 0000                                          l4581 0000  
                                        l4637 0000                                          l4709 0000  
                                        l4805 0000                                          l4813 0000  
                                        l4821 0000                                          l4901 0000  
                                        l5605 0448                                          l5533 0000  
                                        l5541 03BB                                          l5525 0000  
                                        l5517 0396                                          l5509 0387  
                                        l5461 0306                                          l5445 02D8  
                                        l5437 0000                                          l5373 027D  
                                        l5365 0267                                          l5277 01EC  
                                        l5189 017F                                          l4479 0000  
                                        l4559 0000                                          l4575 0000  
                                        l4583 0000                                          l4807 0000  
                                        l4911 0585                                          l5551 0000  
                                        l5535 0000                                          l5527 03A7  
                                        l5471 0000                                          l5455 0000  
                                        l5367 0273                                          l5287 01F5  
                                        l4569 0000                                          l4577 0000  
                                        l4593 0000                                          l4753 0000  
                                        l4761 0000                                          l4833 073E  
                                        l4825 0000                                          l4817 0000  
                                        l4841 0000                                          l4921 0000  
                                        l4905 0000                                          l5561 0000  
                                        l5553 03D0                                          l5537 0000  
                                        l5473 031F                                          l5457 0304  
                                        l5449 02E6                                          l5377 027F  
                                        l5369 0275                                          l5297 020A  
                                        l5609 0454                                          l4595 0000  
                                        l4747 04D1                                          l4771 04F9  
                                        l4763 0000                                          l4843 0000  
                                        l4851 0000                                          l4931 0000  
                                        l4923 0000                                          l4915 0000  
                                        l4907 0582                                          l5571 03E3  
                                        l5563 0000                                          l5555 03D4  
                                        l5547 0000                                          l5539 0000  
                                        l5491 0338                                          l5483 032F  
                                        l5475 0323                                          l5459 0000  
                                        l5379 0281                                          l5299 0000  
                                        l4749 0000                                          l4757 0000  
                                        l4781 0000                                          l4773 0000  
                                        l4765 04EC                                          l4837 0745  
                                        l4829 0738                                          l4845 0000  
                                        l4853 0000                                          l4941 05B6  
                                        l4933 0000                                          l4925 0599  
                                        l4917 058F                                          l4909 0000  
                                        l4861 053F                                          l5581 0420  
                                        l5573 03EF                                          l5565 0000  
                                        l5557 03D6                                          l5549 03CD  
                                        l5493 0000                                          l5485 0000  
                                        l5469 0000                                          l5477 0328  
                                        l5389 028A                                          l4791 0000  
                                        l4783 0000                                          l4767 0000  
                                        l4839 0746                                          l4847 0000  
                                        l4951 0000                                          l4943 05B8  
                                        l4935 0000                                          l4927 059C  
                                        l4871 054F                                          l5583 0422  
                                        l5575 0000                                          l5495 0000  
                                        l5399 0297                                          _ADIE 046A  
                                        _ADIF 006A                                          l4793 0000  
                                        l4785 0000                                          l4777 0000  
                                        l4769 0000                                          l4849 0000  
                                        l4857 0000                                          l4961 05D0  
                                        l4953 05C6                                          l4937 05AA  
                                        l4929 0000                                          l4881 0000  
                                        l4865 0000                                          l5593 0437  
                                        l5577 0413                                          l5497 0000  
                                        l5489 0000                                          l4795 0515  
                                        l4787 050A                                          l4779 0502  
                                        l4971 05E0                                          l4947 0000  
                                        l4891 0000                                          l4883 055E  
                                        l4875 0000                                          l4867 054C  
                                        l4859 0000                                          l5595 0439  
                                        l5587 0000                                          l4797 0000  
                                        l4789 0000                                          l4981 0000  
                                        l4965 0000                                          l4957 05CC  
                                        l4949 05BF                                          l4893 0000  
                                        l4877 0556                                          l4869 0000  
                                        l5589 042A                                          l4991 05FA  
                                        l4983 0000                                          l4975 0000  
                                        l4967 05DD                                          l4959 0000  
                                        l4895 0000                                          l4887 0000  
                                        l5599 0000                                          l4985 0000  
                                        l4977 05ED                                          l4969 0000  
                                        l4899 0573                                          l4995 060B  
                                        l4997 0617                                          _ADON 00F8  
                      ?_getAdOriginalCh5Value 0046                        ?_getAdOriginalCh6Value 0046  
               startTwelveHourTimer@uiSetTime 0020                                          u2445 0133  
                                        u2455 013E                                          u1755 067C  
                                        u1765 06A3                                          u1775 068F  
                                        _PEIE 005E             vHandle20sTimeron@ucMoreThanP3sCnt 00BC  
           vHandle20sTimeron@ucMoreThanP8sCnt 00BD                                          _main 0013  
                           _vHandle20sTimeron 053E                                          btemp 007E  
                              _vPause20sTimer 064D                       _clearTwentySecondsTimer 06E9  
                                        start 0011                            ?_vHandle20sTimeron 0070  
                           main@ucTimerDelay1 005F                             main@ucTimerDelay2 0060  
                           main@ucTimerDelay3 0061                             main@ucTimerDelay4 0062  
                           main@ucTimerCntP3s 005D                                         ??_ISR 0079  
                  __end_of_isPermitSampleTime 0EBE                           ??_vHandle20sTimeron 0048  
                               main@bInitFlag 0056                           _sampleChannelSelect 0051  
                                       ?_main 0070                                         _CLKPR 0108  
                                       _T1CON 0010                               __end_of_adc_get 0FE4  
                                       _PBOD7 0C47                   vHandle20sTimerOut@ucTimeCnt 007D  
                                       _TMR1H 000F                                         _TMR1L 000E  
                       setAD_ConvertFlag@flag 0020                            _vHandle20sTimerOut 04E4  
                     _vPutSampleDataIntoTable 0F63                               __end_of_initPin 0786  
                        vPause20sTimer@bValue 0020                                         _timer 00AF  
                   __end_of_vHandle20sTimeron 0621                                         pclath 000A  
             __size_of_startTwentyMinuteTimer 0014                        __end_of_vPause20sTimer 0652  
                                       status 0003                                         wtemp0 007E  
                         ?_vHandle20sTimerOut 0070                 __size_of_startTwelveHourTimer 0014  
                        __end_of_clrSampeTime 0004                         __end_of_clearAllTimer 04D8  
                                __end_of_main 0471                        __size_of_adc_test_init 0015  
                           __end_of_AD_Sample 074A                                        ??_main 0048  
                        ??_vHandle20sTimerOut 0021                          _clearPinPortAndTimer 0485  
                                      _ADCON0 001F                                        _ADCON1 009F  
                        __end_of_clock_config 0ECE                                        _ADRESH 001E  
                                      _ADRESL 009E                                        _CLKPCE 0847  
                                      i1l2620 0000                                        i1l1863 0000  
                                      i1l1960 0F2E                                        i1l1961 0F3B  
                                      i1l1964 0F56                                        i1l4701 0000  
                                      i1l4703 0000                                        i1l1959 0F24  
                                      i1l4711 0000                                        i1l4721 0000  
                                      i1l4651 0000                                        i1l4715 0000  
                                      i1l4653 0F6E                                        i1l4645 0000  
                                      i1l4741 0000                                        i1l4717 0000  
                                      i1l4733 0F45                                        i1l4663 0000  
                                      i1l4655 0000                                        i1l4681 0F9A  
                                      i1l4665 0F80                                        i1l4657 0F72  
                                      i1l4745 0000                                        i1l4737 0000  
                                      i1l4691 0000                                        i1l4675 0000  
                                      i1l4667 0000                                        i1l4739 0000  
                                      i1l4693 0FAE                                        i1l4677 0F94  
                                      i1l4669 0F86                                        i1l4687 0000  
                                      i1l4679 0000                                        i1l4689 0FA8  
                                      i1l4699 0FB4                                        u188_25 0FD5  
                   ??_clearTwentySecondsTimer 0020                                        _TMR1IE 0460  
                                      _TMR1IF 0060                        __size_of_setPB6AsInput 0003  
                             ?_vPause20sTimer 0070                             _getAD_ConvertFlag 071C  
                           _setAD_ConvertFlag 0720                                        _TRISA0 0428  
                                      _TRISA1 0429                                        _TRISB0 0430  
                                      _TRISA2 042A                                        _TRISB1 0431  
                                      _TRISA3 042B                                        _TRISB2 0432  
                                      _TRISB3 0433                                        _TRISB4 0434  
                                      _TRISA6 042E                                        _TRISB5 0435  
                                      _TRISA7 042F                                        _TRISB6 0436  
                                      _TRISB7 0437                                 main@ucTimer1s 00B2  
                          ?_getAD_ConvertFlag 0070                                        _Filter 0652  
                          ?_setAD_ConvertFlag 0070                   ??_isFinishedThreeHoursTimer 0020  
         __end_of_isFinishedTwentyMinuteTimer 0EF7                   _isFinishedTwentyMinuteTimer 0EEB  
               __size_of_clearThreeHoursTimer 0006                                     ??_adc_get 0072  
                         ??_getAD_ConvertFlag 0020                           ??_setAD_ConvertFlag 0020  
                      _startTwentyMinuteTimer 07C5                   __size_of_clearParaFunction1 0016  
                                      _setPA0 04BF                                        _setPA1 04C8  
                                      _setPA2 0ECE                                        _setPB0 04A7  
                                      _setPB1 04AF                                        _setPA3 062A  
                                      _setPB2 04B7                                        _setPA6 0EBE  
                                      _setPB4 0536                                        _setPB6 063C  
                                      clrloop 07F9                              Filter@filter_buf 0026  
                            Filter@filter_sum 0040                                     ??_initPin 0020  
                     main@ucTimerDelayP2sLess 0063                       main@ucTimerDelayP2sMore 0064  
                   ??_vPutSampleDataIntoTable 0077                         ?_clearPinPortAndTimer 0070  
                                      saved_w 007E                       ??_clearTwelveHoursTimer 0020  
                 ?_process_AD_Converter_Value 0070                                 _adc_test_init 074A  
            __size_of_startTwentySecondsTimer 0011                     __end_of_getAD_ConvertFlag 0720  
                   __end_of_setAD_ConvertFlag 0725                    __size_of_vHandle20sTimeron 00E3  
 vPutSampleDataIntoTable@ucChannelFifthLength 006B                            __size_of_adc_start 0003  
                              __pcstackCOMMON 0070               __end_of_clearTwentySecondsTimer 06F1  
                        _uiSampleChannelFifth 0190                                 _setPB6AsInput 064A  
                        _uiSampleChannelSixth 01C0    vPutSampleDataIntoTable@ucChannelZeroLength 006E  
                    ??_clearTwentyMinuteTimer 0020                vPutSampleDataIntoTable@channel 0076  
                     ??_getAdOriginalCh0Value 0048                           main@ucTimerRightP5s 0068  
                   _isFinishedThreeHoursTimer 0F03                       ??_getAdOriginalCh2Value 0048  
                     ??_getAdOriginalCh5Value 0048                         __end_of_timer1_config 0EE1  
                     ??_getAdOriginalCh6Value 0048                                ?_adc_test_init 0020  
            __size_of_timer1_interrupt_config 0003                        main@ucTimerLessZeroP5s 0066  
                       __size_of_clrSampeTime 0002                                    __pbssBANK0 004A  
                                  __pbssBANK1 00A0                                    __pbssBANK3 0190  
                __size_ofi1_setAD_ConvertFlag 0004                                    adc_get@val 0072  
             __end_of_vPutSampleDataIntoTable 0FD8                                       ?_Filter 0020  
                                  __pmaintext 0013                                main@uiCh5Value 0048  
                                  __pintentry 0004                           main@enumInteralStep 00B1  
                                  __ptext1010 0711                                    __ptext1011 0491  
                                  __ptext1020 0720                                    __ptext1012 0485  
                                  __ptext1021 071C                                    __ptext1013 0728  
                                  __ptext1030 0EEB                                    __ptext1022 0652  
                                  __ptext1014 0621                                    __ptext1031 0002  
                                  __ptext1023 064D                                    __ptext1015 04E4  
                                  __ptext1040 0EBE                                    __ptext1032 0EB8  
                                  __ptext1024 0F03                                    __ptext1016 0471  
                                  __ptext1008 0000                                    __ptext1041 0536  
                                  __ptext1033 07C5                                    __ptext1025 079D  
                                  __ptext1017 0633                                    __ptext1009 053E  
                                  __ptext1050 075F                                    __ptext1042 063C  
                                  __ptext1034 0725                                    __ptext1026 0EE1  
                                  __ptext1018 047B                                    __ptext1051 06F1  
                                  __ptext1043 062A                                    __ptext1035 074A  
                                  __ptext1027 07D9                                    __ptext1019 04D1  
                                  __ptext1052 06E9                                    __ptext1044 0ECE  
                                  __ptext1036 0EB5                                    __ptext1028 0EF7  
                                  __ptext1053 04DE                                    __ptext1045 04C8  
                                  __ptext1037 0ED7                                    __ptext1029 07B1  
                                  __ptext1054 04D8                                    __ptext1046 04BF  
                                  __ptext1038 0EC6                                    __ptext1055 0F0F  
                                  __ptext1047 04B7                                    __ptext1039 064A  
                                  __ptext1056 0FE4                                    __ptext1048 04AF  
                                  __ptext1057 0FD8                                    __ptext1049 04A7  
                              ?_setPB6AsInput 0070                                       ?_setPA0 0070  
                                  __ptext1058 0F63                                       ?_setPA1 0070  
                                  __ptext1059 0000                                       ?_setPA2 0070  
                                     ?_setPB0 0070                                       ?_setPA3 0070  
                                     ?_setPB1 0070                                       ?_setPB2 0070  
                                     ?_setPA6 0070                                       ?_setPB4 0070  
                                     ?_setPB6 0070                        ??_clearPinPortAndTimer 0020  
                       __size_of_clock_config 0008                                  _clrSampeTime 0002  
                           __end_of_adc_start 0728                          _uiTwentySecondsTimer 00A6  
                          _isPermitSampleTime 0EB8                                       Filter@i 0045  
                                     Filter@j 0044                 __size_of_startThreeHoursTimer 0014  
                  __size_of_getAD_ConvertFlag 0004                    __size_of_setAD_ConvertFlag 0005  
                              main@ucTimerP3s 00B5                                main@ucTimerP5s 0067  
                         ?_isPermitSampleTime 0070                                main@uiMaxValue 00A8  
                              main@uiMinValue 00AA                                  setPA0@bValue 0020  
                              main@uiOldValue 004A                                  setPA1@bValue 0020  
                             __size_of_Filter 0097                                  setPA2@bValue 0020  
                                setPB0@bValue 0020                                    _uiBigTimer 00A0  
                                setPA3@bValue 0020                                  setPB1@bValue 0020  
                                setPB2@bValue 0020                                  setPA6@bValue 0020  
                                setPB4@bValue 0020                                  _clock_config 0EC6  
                                     _adc_get 0FD8                                  setPB6@bValue 0020  
                            _bPause20secTimer 00AE                               __size_of_setPA0 0009  
                             __size_of_setPA1 0009                               __size_of_setPB0 0008  
                             __size_of_setPA2 0009                               __size_of_setPB1 0008  
                             __size_of_setPA3 0009                               __size_of_setPB2 0008  
                             __size_of_setPB4 0008                               __size_of_setPA6 0008  
                             __size_of_setPB6 000E          __end_of_isFinishedTwentySecondsTimer 0EEB  
       __size_of_isFinishedTwentySecondsTimer 000A                  _isFinishedTwentySecondsTimer 0EE1  
                        ??_isPermitSampleTime 0020                  __end_of_startTwelveHourTimer 07C5  
                                   _AD_Sample 0728                                  __size_of_ISR 0054  
             __size_of_clearTwentyMinuteTimer 0005                                       _initPin 075F  
                        _bSmallTimerStartFlag 004D                               ??_adc_test_init 0021  
                     _startTwentySecondsTimer 07D9                              ??_vPause20sTimer 0020  
                        end_of_initialization 079A                             Filter@filter_temp 003E  
                     ?_startTwentyMinuteTimer 0020                              main@ucLoaderStep 0058  
                             ??_setPB6AsInput 0020                                    ?_AD_Sample 0070  
               startTwentyMinuteTimer@uiValue 0020                   __size_of_vHandle20sTimerOut 0052  
               ?_isFinishedTwentySecondsTimer 0070                  ??_isFinishedTwelveHoursTimer 0020  
                                   Filter@cir 0042                           _bTwentyMinStartFlag 004E  
                            _adc_convert_flag 00AD                        __size_of_clearAllTimer 0007  
                __end_of_clearThreeHoursTimer 04E4                       main@ucTimerLargeZeroP5s 0065  
              __size_of_clearTwelveHoursTimer 0006                       _timer1_interrupt_config 0EB5  
               __end_of_clearTwelveHoursTimer 04DE             vHandle20sTimeron@ucLessThanP3sCnt 00BA  
           vHandle20sTimeron@ucLessThanP8sCnt 00BB            __size_of_isFinishedThreeHoursTimer 000C  
                      _clearTwentyMinuteTimer 06F1                __end_of_startTwentyMinuteTimer 07D9  
                            main@ucTimerX1P5s 00B6                              main@ucTimerX2P5s 00B7  
                      main@ucTimerZeroPoint3s 0069                        main@ucTimerZeroPoint5s 006A  
                            main@ucTimerDelay 005E                                __end_of_Filter 06E9  
                  __end_of_clearParaFunction1 04A7                           _bTwentySecStartFlag 004F  
         __size_of_isFinishedTwelveHoursTimer 000C   vPutSampleDataIntoTable@ucChannelSixthLength 006D  
                    vPutSampleDataIntoTable@i 0077                           i1_setAD_ConvertFlag 0FE4  
                              __end_of_setPA0 04C8                                __end_of_setPA1 04D1  
                              __end_of_setPB0 04AF                                __end_of_setPA2 0ED7  
                              __end_of_setPB1 04B7                                __end_of_setPA3 0633  
                              __end_of_setPB2 04BF                                __end_of_setPB4 053E  
                              __end_of_setPA6 0EC6                                __end_of_setPB6 064A  
                   ??_startTwentySecondsTimer 0020                           start_initialization 0786  
                                 __end_of_ISR 0F63                          main@ucTimerLessX1P5s 00B3  
                        main@ucTimerLessX2P5s 00B4                __size_of_getAdOriginalCh0Value 000A  
                    ?_clearTwentySecondsTimer 0070                __size_of_getAdOriginalCh2Value 0009  
                       _uiSampleChannelSecond 01A8                 __end_of_getAdOriginalCh0Value 0485  
               __end_of_getAdOriginalCh2Value 062A                __size_of_getAdOriginalCh5Value 000A  
              __size_of_getAdOriginalCh6Value 0009                 __end_of_getAdOriginalCh5Value 047B  
               __end_of_getAdOriginalCh6Value 063C                          ?i1_setAD_ConvertFlag 0070  
                        _startTwelveHourTimer 07B1             __end_of_isFinishedThreeHoursTimer 0F0F  
                          main@enumBranchStep 00B0                                      ??_Filter 0022  
                               _clearAllTimer 04D1                 vHandle20sTimeron@ucTimeCntP2s 00BE  
                                 _ucADC4_Step 0053                vHandle20sTimeron@ucCompareStep 00B9  
                                    ??_setPA0 0020                                      ??_setPA1 0020  
                                    ??_setPA2 0020                                      ??_setPB0 0020  
                                    ??_setPA3 0020                                      ??_setPB1 0020  
                                    ??_setPB2 0020                                      ??_setPA6 0020  
                                    ??_setPB4 0020                                      ??_setPB6 0020  
               vHandle20sTimeron@ucTimerCntN1 00C1                      ?_vPutSampleDataIntoTable 0074  
                                 ??_AD_Sample 0023                     ??_timer1_interrupt_config 0020  
                                 __pbssCOMMON 007D                                 __pcstackBANK0 0020  
              ??_isFinishedTwentySecondsTimer 0020                                     _adc_start 0725  
             vHandle20sTimeron@ucTimerCntLess 00BF                              _enumMainLoopStep 0050  
             vHandle20sTimeron@ucTimerCntMore 00C0                           _uiSampleChannelZero 00C4  
                       ??i1_setAD_ConvertFlag 0070                         ?_startTwelveHourTimer 0020  
             __end_of_startTwentySecondsTimer 07EA                                ?_clearAllTimer 0070  
                      __size_of_timer1_config 000A                          _clearThreeHoursTimer 04DE  
                __end_of_startThreeHoursTimer 07B1                           _uiTwentyMinuteTimer 00A4  
                                    ?_adc_get 0070                                     __pswtext1 07EA  
                                   __pswtext2 0800                                     __pswtext3 080E  
          __end_of_isFinishedTwelveHoursTimer 0F03                    _isFinishedTwelveHoursTimer 0EF7  
                             ISR@ucTimer1sCnt 00AC                                      ?_initPin 0070  
               __size_of_clearPinPortAndTimer 000C                                    ?_adc_start 0070  
                           interrupt_function 0004               __end_of_timer1_interrupt_config 0EB8  
                       ?_clearThreeHoursTimer 0070                  ?_isFinishedTwentyMinuteTimer 0070  
                        adc_test_init@channel 0022           vPutSampleDataIntoTable@uiSampleData 0074  
                 __size_of_isPermitSampleTime 0006                                  _uiSmallTimer 00A2  
                       __end_of_adc_test_init 075F                                 _timer1_config 0ED7  
                ??_process_AD_Converter_Value 0023                       ?_clearTwentyMinuteTimer 0070  
                      ??_startTwelveHourTimer 0022                               ??_clearAllTimer 0020  
                 main@ucFourthSuffix1TimerP3s 0057                 ??_isFinishedTwentyMinuteTimer 0020  
                  __end_of_vHandle20sTimerOut 0536                         __end_of_setPB6AsInput 064D  
                            __size_of_adc_get 000C                vHandle20sTimeron@ucTimerCntP5s 00C2  
         __size_of_process_AD_Converter_Value 000B                 vHandle20sTimeron@waitLoopStep 00C3  
                          _clearParaFunction1 0491                              __size_of_initPin 0027  
                              Filter@tmpValue 0020                                ?_timer1_config 0070  
              __end_of_clearTwentyMinuteTimer 06F6                                   ??_adc_start 0020  
vPutSampleDataIntoTable@ucChannelSecondLength 006C                          _startThreeHoursTimer 079D  
                         ?_clearParaFunction1 0070                         _clearTwelveHoursTimer 04D8  
                               __size_of_main 045E                       __size_of_vPause20sTimer 0005  
                                    clear_ram 07F8                        ??_clearThreeHoursTimer 0020  
            __size_of_clearTwentySecondsTimer 0008                          ??_clearParaFunction1 0021  
                               ?_clrSampeTime 0070       vHandle20sTimerOut@ucTimerOnBehaviorStep 00B8  
                                 _sampleTimes 0052          __size_of_isFinishedTwentyMinuteTimer 000C  
                       ?_startThreeHoursTimer 0020              __size_of_vPutSampleDataIntoTable 0075  
                                    intlevel1 0000                         _getAdOriginalCh0Value 047B  
                       _getAdOriginalCh2Value 0621                         _getAdOriginalCh5Value 0471  
                       _getAdOriginalCh6Value 0633                    ?_isFinishedThreeHoursTimer 0070  
                vHandle20sTimerOut@bClearStep 0021                             main@ucLoaderStep1 0059  
                           main@ucLoaderStep2 005A                             main@ucLoaderStep3 005B  
                           main@ucLoaderStep4 005C                                 ?_clock_config 0070  
                    ?_startTwentySecondsTimer 0070                 startThreeHoursTimer@uiSetTime 0020  
                     i1setAD_ConvertFlag@flag 0070                                ??_clrSampeTime 0020  
                 ?_isFinishedTwelveHoursTimer 0070                            _bBigTimerStartFlag 004C  
                             ??_timer1_config 0020                             main@bCheckTweHour 0055  
                 __end_ofi1_setAD_ConvertFlag 0FE8            __end_of_process_AD_Converter_Value 071C  
                  _process_AD_Converter_Value 0711                        ?_clearTwelveHoursTimer 0070  
                    ??_startTwentyMinuteTimer 0022                              adc_test_init@ref 0020  
                __end_of_clearPinPortAndTimer 0491  
