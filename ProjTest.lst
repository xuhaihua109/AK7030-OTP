

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Sat Feb 29 15:50:58 2020

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	text984,local,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,delta=2
    15                           	psect	swtext1,local,class=CONST,delta=2
    16                           	psect	swtext2,local,class=CONST,delta=2
    17                           	psect	swtext3,local,class=CONST,delta=2
    18                           	psect	text986,local,class=CODE,delta=2
    19                           	psect	text992,local,class=CODE,delta=2
    20                           	psect	text999,local,class=CODE,delta=2
    21                           	psect	text1000,local,class=CODE,delta=2
    22                           	psect	text1001,local,class=CODE,delta=2
    23                           	psect	text1002,local,class=CODE,delta=2
    24                           	psect	text1003,local,class=CODE,delta=2
    25                           	psect	text1004,local,class=CODE,delta=2
    26                           	psect	text1005,local,class=CODE,delta=2
    27                           	psect	text1006,local,class=CODE,delta=2
    28                           	psect	text1007,local,class=CODE,delta=2
    29                           	psect	text1008,local,class=CODE,delta=2
    30                           	psect	text1011,local,class=CODE,delta=2
    31                           	psect	text1012,local,class=CODE,delta=2
    32                           	psect	text1013,local,class=CODE,delta=2
    33                           	psect	text1015,local,class=CODE,delta=2
    34                           	psect	text1019,local,class=CODE,delta=2
    35                           	psect	text1025,local,class=CODE,delta=2
    36                           	psect	text1030,local,class=CODE,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text1034,local,class=CODE,delta=2
    39                           	psect	pa_nodes,global,class=CODE,delta=2
    40                           	dabs	1,0x7E,2
    41  000A                     	;#
    42                           
    43                           	psect	config
    44  2000  2FFF               	dw	12287	;#
    45  2001  3FDE               	dw	16350	;#
    46  2002  3FF8               	dw	16376	;#
    47                           
    48                           	psect	text984
    49  0000                     __ptext984:	
    50  001F                     _ADCON0	set	31
    51  001E                     _ADRESH	set	30
    52  0010                     _T1CON	set	16
    53  000F                     _TMR1H	set	15
    54  000E                     _TMR1L	set	14
    55  006A                     _ADIF	set	106
    56  00F8                     _ADON	set	248
    57  005F                     _GIE	set	95
    58  00F9                     _GO	set	249
    59  0028                     _PA0	set	40
    60  0029                     _PA1	set	41
    61  002A                     _PA2	set	42
    62  002B                     _PA3	set	43
    63  002E                     _PA6	set	46
    64  0030                     _PB0	set	48
    65  0031                     _PB1	set	49
    66  0032                     _PB2	set	50
    67  0034                     _PB4	set	52
    68  0036                     _PB6	set	54
    69  0037                     _PB7	set	55
    70  005E                     _PEIE	set	94
    71  0060                     _TMR1IF	set	96
    72  009F                     _ADCON1	set	159
    73  009E                     _ADRESL	set	158
    74  046A                     _ADIE	set	1130
    75  0460                     _TMR1IE	set	1120
    76  0428                     _TRISA0	set	1064
    77  0429                     _TRISA1	set	1065
    78  042A                     _TRISA2	set	1066
    79  042B                     _TRISA3	set	1067
    80  042E                     _TRISA6	set	1070
    81  042F                     _TRISA7	set	1071
    82  0430                     _TRISB0	set	1072
    83  0431                     _TRISB1	set	1073
    84  0432                     _TRISB2	set	1074
    85  0433                     _TRISB3	set	1075
    86  0434                     _TRISB4	set	1076
    87  0435                     _TRISB5	set	1077
    88  0436                     _TRISB6	set	1078
    89  0437                     _TRISB7	set	1079
    90  0108                     _CLKPR	set	264
    91  0847                     _CLKPCE	set	2119
    92  0C47                     _PBOD7	set	3143
    93                           
    94                           	psect	cinit
    95  0F74                     start_initialization:	
    96  0F74  304A               	movlw	low __pbssBANK0
    97                           
    98                           ; Clear objects allocated to COMMON
    99  0F75  01FD               	clrf	__pbssCOMMON& (0+127)
   100                           
   101                           ; Clear objects allocated to BANK0
   102  0F76  1383               	bcf	3,7	;select IRP bank0
   103  0F77  0084               	movwf	4
   104  0F78  306F               	movlw	low (__pbssBANK0+37)
   105  0F79  158A  26DE  158A   	fcall	clear_ram
   106                           
   107                           ; Clear objects allocated to BANK1
   108  0F7C  30A0               	movlw	low __pbssBANK1
   109  0F7D  0084               	movwf	4
   110  0F7E  30DB               	movlw	low (__pbssBANK1+59)
   111  0F7F  158A  26DE  158A   	fcall	clear_ram
   112  0F82  3090               	movlw	low __pbssBANK3
   113                           
   114                           ; Clear objects allocated to BANK3
   115  0F83  1783               	bsf	3,7	;select IRP bank2
   116  0F84  0084               	movwf	4
   117  0F85  30D8               	movlw	low (__pbssBANK3+72)
   118  0F86  158A  26DE         	fcall	clear_ram
   119  0F88                     end_of_initialization:	
   120                           ;End of C runtime variable initialization code
   121                           
   122  0F88  0183               	clrf	3
   123  0F89  118A  2813         	ljmp	_main	;jump to C main() function
   124                           
   125                           	psect	bssCOMMON
   126  007D                     __pbssCOMMON:	
   127  007D                     vHandle20sTimerOut@ucTimeCnt:	
   128  007D                     	ds	1
   129                           
   130                           	psect	bssBANK0
   131  004A                     __pbssBANK0:	
   132  004A                     main@uiOldValue:	
   133  004A                     	ds	2
   134  004C                     _bBigTimerStartFlag:	
   135  004C                     	ds	1
   136  004D                     _bSmallTimerStartFlag:	
   137  004D                     	ds	1
   138  004E                     _bTwentyMinStartFlag:	
   139  004E                     	ds	1
   140  004F                     _bTwentySecStartFlag:	
   141  004F                     	ds	1
   142  0050                     _enumMainLoopStep:	
   143  0050                     	ds	1
   144  0051                     _sampleChannelSelect:	
   145  0051                     	ds	1
   146  0052                     _sampleTimes:	
   147  0052                     	ds	1
   148  0053                     _ucADC4_Step:	
   149  0053                     	ds	1
   150  0054                     _ucChannel5Type:	
   151  0054                     	ds	1
   152  0055                     main@bCheckTweHour:	
   153  0055                     	ds	1
   154  0056                     main@bInitFlag:	
   155  0056                     	ds	1
   156  0057                     main@ucFourthSuffix1TimerP3s:	
   157  0057                     	ds	1
   158  0058                     main@ucLoaderStep:	
   159  0058                     	ds	1
   160  0059                     main@ucLoaderStep1:	
   161  0059                     	ds	1
   162  005A                     main@ucLoaderStep2:	
   163  005A                     	ds	1
   164  005B                     main@ucLoaderStep3:	
   165  005B                     	ds	1
   166  005C                     main@ucLoaderStep4:	
   167  005C                     	ds	1
   168  005D                     main@ucTimerCntP3s:	
   169  005D                     	ds	1
   170  005E                     main@ucTimerDelay:	
   171  005E                     	ds	1
   172  005F                     main@ucTimerDelay1:	
   173  005F                     	ds	1
   174  0060                     main@ucTimerDelay2:	
   175  0060                     	ds	1
   176  0061                     main@ucTimerDelay3:	
   177  0061                     	ds	1
   178  0062                     main@ucTimerDelay4:	
   179  0062                     	ds	1
   180  0063                     main@ucTimerDelayP2sLess:	
   181  0063                     	ds	1
   182  0064                     main@ucTimerDelayP2sMore:	
   183  0064                     	ds	1
   184  0065                     main@ucTimerLargeZeroP5s:	
   185  0065                     	ds	1
   186  0066                     main@ucTimerLessZeroP5s:	
   187  0066                     	ds	1
   188  0067                     main@ucTimerP5s:	
   189  0067                     	ds	1
   190  0068                     main@ucTimerRightP5s:	
   191  0068                     	ds	1
   192  0069                     main@ucTimerZeroPoint3s:	
   193  0069                     	ds	1
   194  006A                     main@ucTimerZeroPoint5s:	
   195  006A                     	ds	1
   196  006B                     vPutSampleDataIntoTable@ucChannelFifthLength:	
   197  006B                     	ds	1
   198  006C                     vPutSampleDataIntoTable@ucChannelSecondLength:	
   199  006C                     	ds	1
   200  006D                     vPutSampleDataIntoTable@ucChannelSixthLength:	
   201  006D                     	ds	1
   202  006E                     vPutSampleDataIntoTable@ucChannelZeroLength:	
   203  006E                     	ds	1
   204                           
   205                           	psect	bssBANK1
   206  00A0                     __pbssBANK1:	
   207  00A0                     _uiBigTimer:	
   208  00A0                     	ds	2
   209  00A2                     _uiSmallTimer:	
   210  00A2                     	ds	2
   211  00A4                     _uiTwentyMinuteTimer:	
   212  00A4                     	ds	2
   213  00A6                     _uiTwentySecondsTimer:	
   214  00A6                     	ds	2
   215  00A8                     main@uiMaxValue:	
   216  00A8                     	ds	2
   217  00AA                     main@uiMinValue:	
   218  00AA                     	ds	2
   219  00AC                     ISR@ucTimer1sCnt:	
   220  00AC                     	ds	1
   221  00AD                     _adc_convert_flag:	
   222  00AD                     	ds	1
   223  00AE                     _timer:	
   224  00AE                     	ds	1
   225  00AF                     main@enumBranchStep:	
   226  00AF                     	ds	1
   227  00B0                     main@enumInteralStep:	
   228  00B0                     	ds	1
   229  00B1                     main@ucTimer1s:	
   230  00B1                     	ds	1
   231  00B2                     main@ucTimerLessX1P5s:	
   232  00B2                     	ds	1
   233  00B3                     main@ucTimerLessX2P5s:	
   234  00B3                     	ds	1
   235  00B4                     main@ucTimerP3s:	
   236  00B4                     	ds	1
   237  00B5                     main@ucTimerX1P5s:	
   238  00B5                     	ds	1
   239  00B6                     main@ucTimerX2P5s:	
   240  00B6                     	ds	1
   241  00B7                     vHandle20sTimerOut@ucTimerOnBehaviorStep:	
   242  00B7                     	ds	1
   243  00B8                     vHandle20sTimeron@ucCompareStep:	
   244  00B8                     	ds	1
   245  00B9                     vHandle20sTimeron@ucLessThanP3sCnt:	
   246  00B9                     	ds	1
   247  00BA                     vHandle20sTimeron@ucLessThanP8sCnt:	
   248  00BA                     	ds	1
   249  00BB                     vHandle20sTimeron@ucMoreThanP3sCnt:	
   250  00BB                     	ds	1
   251  00BC                     vHandle20sTimeron@ucMoreThanP8sCnt:	
   252  00BC                     	ds	1
   253  00BD                     vHandle20sTimeron@ucTimeCntP2s:	
   254  00BD                     	ds	1
   255  00BE                     vHandle20sTimeron@ucTimerCntLess:	
   256  00BE                     	ds	1
   257  00BF                     vHandle20sTimeron@ucTimerCntMore:	
   258  00BF                     	ds	1
   259  00C0                     vHandle20sTimeron@ucTimerCntN1:	
   260  00C0                     	ds	1
   261  00C1                     vHandle20sTimeron@ucTimerCntP5s:	
   262  00C1                     	ds	1
   263  00C2                     vHandle20sTimeron@waitLoopStep:	
   264  00C2                     	ds	1
   265  00C3                     _uiSampleChannelZero:	
   266  00C3                     	ds	24
   267                           
   268                           	psect	bssBANK3
   269  0190                     __pbssBANK3:	
   270  0190                     _uiSampleChannelFifth:	
   271  0190                     	ds	24
   272  01A8                     _uiSampleChannelSecond:	
   273  01A8                     	ds	24
   274  01C0                     _uiSampleChannelSixth:	
   275  01C0                     	ds	24
   276                           
   277                           	psect	clrtext
   278  0EDE                     clear_ram:	
   279                           ;	Called with FSR containing the base address, and
   280                           ;	W with the last address+1
   281                           
   282  0EDE  0064               	clrwdt	;clear the watchdog before getting into this loop
   283  0EDF                     clrloop:	
   284  0EDF  0180               	clrf	0	;clear RAM location pointed to by FSR
   285  0EE0  0A84               	incf	4,f	;increment pointer
   286  0EE1  0604               	xorwf	4,w	;XOR with final address
   287  0EE2  1903               	btfsc	3,2	;have we reached the end yet?
   288  0EE3  3400               	retlw	0	;all done for this memory range, return
   289  0EE4  0604               	xorwf	4,w	;XOR again to restore value
   290  0EE5  2EDF               	goto	clrloop	;do the next byte
   291                           
   292                           	psect	cstackCOMMON
   293  0070                     __pcstackCOMMON:	
   294  0070                     ?_clearTwelveHoursTimer:	
   295  0070                     ?_clearThreeHoursTimer:	
   296                           ; 0 bytes @ 0x0
   297                           
   298  0070                     ?_clearTwentySecondsTimer:	
   299                           ; 0 bytes @ 0x0
   300                           
   301  0070                     ?_clearTwentyMinuteTimer:	
   302                           ; 0 bytes @ 0x0
   303                           
   304  0070                     ?_clock_config:	
   305                           ; 0 bytes @ 0x0
   306                           
   307  0070                     ?_timer1_config:	
   308                           ; 0 bytes @ 0x0
   309                           
   310  0070                     ?_timer1_interrupt_config:	
   311                           ; 0 bytes @ 0x0
   312                           
   313  0070                     ?_adc_start:	
   314                           ; 0 bytes @ 0x0
   315                           
   316  0070                     ?_process_AD_Converter_Value:	
   317                           ; 0 bytes @ 0x0
   318                           
   319  0070                     ?_clrSampeTime:	
   320                           ; 0 bytes @ 0x0
   321                           
   322  0070                     ?_startTwentySecondsTimer:	
   323                           ; 0 bytes @ 0x0
   324                           
   325  0070                     ?_vHandle20sTimeron:	
   326                           ; 0 bytes @ 0x0
   327                           
   328  0070                     ?_vHandle20sTimerOut:	
   329                           ; 0 bytes @ 0x0
   330                           
   331  0070                     ?_AD_Sample:	
   332                           ; 0 bytes @ 0x0
   333                           
   334  0070                     ?_clearAllTimer:	
   335                           ; 0 bytes @ 0x0
   336                           
   337  0070                     ?_clearPinPortAndTimer:	
   338                           ; 0 bytes @ 0x0
   339                           
   340  0070                     ?_initPin:	
   341                           ; 0 bytes @ 0x0
   342                           
   343  0070                     ?_setPB0:	
   344                           ; 0 bytes @ 0x0
   345                           
   346  0070                     ?_setPB1:	
   347                           ; 0 bytes @ 0x0
   348                           
   349  0070                     ?_setPB2:	
   350                           ; 0 bytes @ 0x0
   351                           
   352  0070                     ?_setPA0:	
   353                           ; 0 bytes @ 0x0
   354                           
   355  0070                     ?_setPA1:	
   356                           ; 0 bytes @ 0x0
   357                           
   358  0070                     ?_setPA2:	
   359                           ; 0 bytes @ 0x0
   360                           
   361  0070                     ?_setPA3:	
   362                           ; 0 bytes @ 0x0
   363                           
   364  0070                     ?_setPB6:	
   365                           ; 0 bytes @ 0x0
   366                           
   367  0070                     ?_setPB4:	
   368                           ; 0 bytes @ 0x0
   369                           
   370  0070                     ?_setPA6:	
   371                           ; 0 bytes @ 0x0
   372                           
   373  0070                     ?_setPB6AsInput:	
   374                           ; 0 bytes @ 0x0
   375                           
   376  0070                     ?_clearParaFunction1:	
   377                           ; 0 bytes @ 0x0
   378                           
   379  0070                     ?_main:	
   380                           ; 0 bytes @ 0x0
   381                           
   382  0070                     ?_setAD_ConvertFlag:	
   383                           ; 0 bytes @ 0x0
   384                           
   385  0070                     ?_ISR:	
   386                           ; 0 bytes @ 0x0
   387                           
   388  0070                     ?i1_setAD_ConvertFlag:	
   389                           ; 0 bytes @ 0x0
   390                           
   391  0070                     ??i1_setAD_ConvertFlag:	
   392                           ; 0 bytes @ 0x0
   393                           
   394  0070                     ?_isPermitSampleTime:	
   395                           ; 0 bytes @ 0x0
   396                           
   397  0070                     ?_isFinishedTwentyMinuteTimer:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     ?_isFinishedTwelveHoursTimer:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ?_isFinishedTwentySecondsTimer:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ?_isFinishedThreeHoursTimer:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ?_getAD_ConvertFlag:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0070                     ?_adc_get:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     i1setAD_ConvertFlag@flag:	
   416                           ; 2 bytes @ 0x0
   417                           
   418                           
   419                           ; 1 bytes @ 0x0
   420  0070                     	ds	2
   421  0072                     ??_adc_get:	
   422  0072                     adc_get@val:	
   423                           ; 0 bytes @ 0x2
   424                           
   425                           
   426                           ; 2 bytes @ 0x2
   427  0072                     	ds	2
   428  0074                     ?_vPutSampleDataIntoTable:	
   429  0074                     vPutSampleDataIntoTable@uiSampleData:	
   430                           ; 0 bytes @ 0x4
   431                           
   432                           
   433                           ; 2 bytes @ 0x4
   434  0074                     	ds	2
   435  0076                     vPutSampleDataIntoTable@channel:	
   436                           
   437                           ; 1 bytes @ 0x6
   438  0076                     	ds	1
   439  0077                     ??_vPutSampleDataIntoTable:	
   440  0077                     vPutSampleDataIntoTable@i:	
   441                           ; 0 bytes @ 0x7
   442                           
   443                           
   444                           ; 2 bytes @ 0x7
   445  0077                     	ds	2
   446  0079                     ??_ISR:	
   447                           
   448                           ; 0 bytes @ 0x9
   449  0079                     	ds	4
   450                           
   451                           	psect	cstackBANK0
   452  0020                     __pcstackBANK0:	
   453  0020                     ??_clearTwelveHoursTimer:	
   454  0020                     ??_clearThreeHoursTimer:	
   455                           ; 0 bytes @ 0x0
   456                           
   457  0020                     ??_clearTwentySecondsTimer:	
   458                           ; 0 bytes @ 0x0
   459                           
   460  0020                     ??_clearTwentyMinuteTimer:	
   461                           ; 0 bytes @ 0x0
   462                           
   463  0020                     ??_clock_config:	
   464                           ; 0 bytes @ 0x0
   465                           
   466  0020                     ??_timer1_config:	
   467                           ; 0 bytes @ 0x0
   468                           
   469  0020                     ??_timer1_interrupt_config:	
   470                           ; 0 bytes @ 0x0
   471                           
   472  0020                     ?_adc_test_init:	
   473                           ; 0 bytes @ 0x0
   474                           
   475  0020                     ??_adc_start:	
   476                           ; 0 bytes @ 0x0
   477                           
   478  0020                     ?_startTwentyMinuteTimer:	
   479                           ; 0 bytes @ 0x0
   480                           
   481  0020                     ??_isPermitSampleTime:	
   482                           ; 0 bytes @ 0x0
   483                           
   484  0020                     ??_clrSampeTime:	
   485                           ; 0 bytes @ 0x0
   486                           
   487  0020                     ??_isFinishedTwentyMinuteTimer:	
   488                           ; 0 bytes @ 0x0
   489                           
   490  0020                     ?_startTwelveHourTimer:	
   491                           ; 0 bytes @ 0x0
   492                           
   493  0020                     ??_isFinishedTwelveHoursTimer:	
   494                           ; 0 bytes @ 0x0
   495                           
   496  0020                     ??_startTwentySecondsTimer:	
   497                           ; 0 bytes @ 0x0
   498                           
   499  0020                     ??_isFinishedTwentySecondsTimer:	
   500                           ; 0 bytes @ 0x0
   501                           
   502  0020                     ?_startThreeHoursTimer:	
   503                           ; 0 bytes @ 0x0
   504                           
   505  0020                     ??_isFinishedThreeHoursTimer:	
   506                           ; 0 bytes @ 0x0
   507                           
   508  0020                     ??_clearAllTimer:	
   509                           ; 0 bytes @ 0x0
   510                           
   511  0020                     ??_clearPinPortAndTimer:	
   512                           ; 0 bytes @ 0x0
   513                           
   514  0020                     ??_initPin:	
   515                           ; 0 bytes @ 0x0
   516                           
   517  0020                     ??_setPB0:	
   518                           ; 0 bytes @ 0x0
   519                           
   520  0020                     ??_setPB1:	
   521                           ; 0 bytes @ 0x0
   522                           
   523  0020                     ??_setPB2:	
   524                           ; 0 bytes @ 0x0
   525                           
   526  0020                     ??_setPA0:	
   527                           ; 0 bytes @ 0x0
   528                           
   529  0020                     ??_setPA1:	
   530                           ; 0 bytes @ 0x0
   531                           
   532  0020                     ??_setPA2:	
   533                           ; 0 bytes @ 0x0
   534                           
   535  0020                     ??_setPA3:	
   536                           ; 0 bytes @ 0x0
   537                           
   538  0020                     ??_setPB6:	
   539                           ; 0 bytes @ 0x0
   540                           
   541  0020                     ??_setPB4:	
   542                           ; 0 bytes @ 0x0
   543                           
   544  0020                     ??_setPA6:	
   545                           ; 0 bytes @ 0x0
   546                           
   547  0020                     ??_setPB6AsInput:	
   548                           ; 0 bytes @ 0x0
   549                           
   550  0020                     ??_getAD_ConvertFlag:	
   551                           ; 0 bytes @ 0x0
   552                           
   553  0020                     ??_setAD_ConvertFlag:	
   554                           ; 0 bytes @ 0x0
   555                           
   556  0020                     ?_Filter:	
   557                           ; 0 bytes @ 0x0
   558                           
   559  0020                     setPB0@bValue:	
   560                           ; 2 bytes @ 0x0
   561                           
   562  0020                     setPB1@bValue:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0020                     setPB2@bValue:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0020                     setPA0@bValue:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0020                     setPA1@bValue:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0020                     setPA2@bValue:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0020                     setPA3@bValue:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0020                     setPB6@bValue:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0020                     setPB4@bValue:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0020                     setPA6@bValue:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0020                     setAD_ConvertFlag@flag:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0020                     adc_test_init@ref:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0020                     Filter@tmpValue:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0020                     startTwelveHourTimer@uiSetTime:	
   599                           ; 2 bytes @ 0x0
   600                           
   601  0020                     startThreeHoursTimer@uiSetTime:	
   602                           ; 2 bytes @ 0x0
   603                           
   604  0020                     startTwentyMinuteTimer@uiValue:	
   605                           ; 2 bytes @ 0x0
   606                           
   607                           
   608                           ; 2 bytes @ 0x0
   609  0020                     	ds	1
   610  0021                     ??_adc_test_init:	
   611  0021                     ??_vHandle20sTimerOut:	
   612                           ; 0 bytes @ 0x1
   613                           
   614  0021                     ??_clearParaFunction1:	
   615                           ; 0 bytes @ 0x1
   616                           
   617  0021                     vHandle20sTimerOut@bClearStep:	
   618                           ; 0 bytes @ 0x1
   619                           
   620                           
   621                           ; 1 bytes @ 0x1
   622  0021                     	ds	1
   623  0022                     ??_startTwentyMinuteTimer:	
   624  0022                     ??_startTwelveHourTimer:	
   625                           ; 0 bytes @ 0x2
   626                           
   627  0022                     ??_startThreeHoursTimer:	
   628                           ; 0 bytes @ 0x2
   629                           
   630  0022                     ??_Filter:	
   631                           ; 0 bytes @ 0x2
   632                           
   633  0022                     adc_test_init@channel:	
   634                           ; 0 bytes @ 0x2
   635                           
   636                           
   637                           ; 1 bytes @ 0x2
   638  0022                     	ds	1
   639  0023                     ??_process_AD_Converter_Value:	
   640  0023                     ??_AD_Sample:	
   641                           ; 0 bytes @ 0x3
   642                           
   643                           
   644                           ; 0 bytes @ 0x3
   645  0023                     	ds	3
   646  0026                     Filter@filter_buf:	
   647                           
   648                           ; 24 bytes @ 0x6
   649  0026                     	ds	24
   650  003E                     Filter@filter_temp:	
   651                           
   652                           ; 2 bytes @ 0x1E
   653  003E                     	ds	2
   654  0040                     Filter@filter_sum:	
   655                           
   656                           ; 2 bytes @ 0x20
   657  0040                     	ds	2
   658  0042                     Filter@cir:	
   659                           
   660                           ; 2 bytes @ 0x22
   661  0042                     	ds	2
   662  0044                     Filter@j:	
   663                           
   664                           ; 1 bytes @ 0x24
   665  0044                     	ds	1
   666  0045                     Filter@i:	
   667                           
   668                           ; 1 bytes @ 0x25
   669  0045                     	ds	1
   670  0046                     ?_getAdOriginalCh0Value:	
   671  0046                     ?_getAdOriginalCh6Value:	
   672                           ; 2 bytes @ 0x26
   673                           
   674  0046                     ?_getAdOriginalCh5Value:	
   675                           ; 2 bytes @ 0x26
   676                           
   677  0046                     ?_getAdOriginalCh2Value:	
   678                           ; 2 bytes @ 0x26
   679                           
   680                           
   681                           ; 2 bytes @ 0x26
   682  0046                     	ds	2
   683  0048                     ??_getAdOriginalCh0Value:	
   684  0048                     ??_getAdOriginalCh6Value:	
   685                           ; 0 bytes @ 0x28
   686                           
   687  0048                     ??_getAdOriginalCh5Value:	
   688                           ; 0 bytes @ 0x28
   689                           
   690  0048                     ??_vHandle20sTimeron:	
   691                           ; 0 bytes @ 0x28
   692                           
   693  0048                     ??_getAdOriginalCh2Value:	
   694                           ; 0 bytes @ 0x28
   695                           
   696  0048                     ??_main:	
   697                           ; 0 bytes @ 0x28
   698                           
   699  0048                     main@uiCh5Value:	
   700                           ; 0 bytes @ 0x28
   701                           
   702                           
   703                           ; 2 bytes @ 0x28
   704  0048                     	ds	2
   705                           
   706                           	psect	maintext
   707  0013                     __pmaintext:	
   708 ;;Data sizes: Strings 0, constant 0, data 0, bss 169, persistent 0 stack 0
   709 ;;Auto spaces:   Size  Autos    Used
   710 ;; COMMON          14     13      14
   711 ;; BANK0           80     42      79
   712 ;; BANK1           80      0      59
   713 ;; BANK3           96      0      72
   714 ;; BANK2           96      0       0
   715 ;;
   716 ;; Pointer list with targets:
   717 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   718 ;;
   719 ;; ?_getAdOriginalCh2Value	unsigned int  size(1) Largest target is 0
   720 ;;
   721 ;; ?_getAdOriginalCh6Value	unsigned int  size(1) Largest target is 0
   722 ;;
   723 ;; ?_getAdOriginalCh5Value	unsigned int  size(1) Largest target is 0
   724 ;;
   725 ;; ?_getAdOriginalCh0Value	unsigned int  size(1) Largest target is 0
   726 ;;
   727 ;; ?_Filter	unsigned int  size(1) Largest target is 0
   728 ;;
   729 ;; Filter@tmpValue	PTR int  size(2) Largest target is 24
   730 ;;		 -> uiSampleChannelSixth(BANK3[24]), uiSampleChannelFifth(BANK3[24]), uiSampleChannelSecond(BANK3[24]), uiSampleChan
      +nelZero(BANK1[24]), 
   731 ;;
   732 ;;
   733 ;; Critical Paths under _main in COMMON
   734 ;;
   735 ;;   None.
   736 ;;
   737 ;; Critical Paths under _ISR in COMMON
   738 ;;
   739 ;;   _ISR->_vPutSampleDataIntoTable
   740 ;;   _vPutSampleDataIntoTable->_adc_get
   741 ;;
   742 ;; Critical Paths under _main in BANK0
   743 ;;
   744 ;;   _main->_getAdOriginalCh0Value
   745 ;;   _main->_getAdOriginalCh6Value
   746 ;;   _main->_getAdOriginalCh5Value
   747 ;;   _vHandle20sTimeron->_getAdOriginalCh2Value
   748 ;;   _vHandle20sTimeron->_getAdOriginalCh6Value
   749 ;;   _clearParaFunction1->_setPA1
   750 ;;   _clearParaFunction1->_setPA0
   751 ;;   _clearParaFunction1->_setPB0
   752 ;;   _clearParaFunction1->_setPB1
   753 ;;   _clearParaFunction1->_setPB2
   754 ;;   _clearParaFunction1->_setPA3
   755 ;;   _clearParaFunction1->_setPB4
   756 ;;   _AD_Sample->_adc_test_init
   757 ;;   _getAdOriginalCh2Value->_Filter
   758 ;;   _vHandle20sTimerOut->_setPA3
   759 ;;   _vHandle20sTimerOut->_setPB4
   760 ;;   _vHandle20sTimerOut->_setPB6
   761 ;;   _getAdOriginalCh5Value->_Filter
   762 ;;   _getAdOriginalCh6Value->_Filter
   763 ;;   _getAdOriginalCh0Value->_Filter
   764 ;;
   765 ;; Critical Paths under _ISR in BANK0
   766 ;;
   767 ;;   None.
   768 ;;
   769 ;; Critical Paths under _main in BANK1
   770 ;;
   771 ;;   None.
   772 ;;
   773 ;; Critical Paths under _ISR in BANK1
   774 ;;
   775 ;;   None.
   776 ;;
   777 ;; Critical Paths under _main in BANK3
   778 ;;
   779 ;;   None.
   780 ;;
   781 ;; Critical Paths under _ISR in BANK3
   782 ;;
   783 ;;   None.
   784 ;;
   785 ;; Critical Paths under _main in BANK2
   786 ;;
   787 ;;   None.
   788 ;;
   789 ;; Critical Paths under _ISR in BANK2
   790 ;;
   791 ;;   None.
   792 ;;
   793 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   794 ;;
   795 ;;
   796 ;;Call Graph Tables:
   797 ;;
   798 ;; ---------------------------------------------------------------------------------
   799 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   800 ;; ---------------------------------------------------------------------------------
   801 ;; (0) _main                                                 2     2      0    3851
   802 ;;                                             40 BANK0      2     2      0
   803 ;;                            _initPin
   804 ;;                       _clock_config
   805 ;;                      _timer1_config
   806 ;;            _timer1_interrupt_config
   807 ;;                      _adc_test_init
   808 ;;                          _adc_start
   809 ;;             _startTwentyMinuteTimer
   810 ;;         _process_AD_Converter_Value
   811 ;;                 _isPermitSampleTime
   812 ;;                       _clrSampeTime
   813 ;;              _getAdOriginalCh0Value
   814 ;;        _isFinishedTwentyMinuteTimer
   815 ;;                 _clearParaFunction1
   816 ;;                             _setPA3
   817 ;;                             _setPB4
   818 ;;              _getAdOriginalCh6Value
   819 ;;               _startTwelveHourTimer
   820 ;;         _isFinishedTwelveHoursTimer
   821 ;;              _getAdOriginalCh5Value
   822 ;;                             _setPA1
   823 ;;                             _setPA0
   824 ;;                             _setPB0
   825 ;;                             _setPB1
   826 ;;                             _setPB2
   827 ;;            _startTwentySecondsTimer
   828 ;;       _isFinishedTwentySecondsTimer
   829 ;;                  _vHandle20sTimeron
   830 ;;                 _vHandle20sTimerOut
   831 ;;                             _setPA6
   832 ;;               _clearPinPortAndTimer
   833 ;;               _startThreeHoursTimer
   834 ;;          _isFinishedThreeHoursTimer
   835 ;;               _clearThreeHoursTimer
   836 ;;                             _setPA2
   837 ;;                      _clearAllTimer
   838 ;; ---------------------------------------------------------------------------------
   839 ;; (1) _vHandle20sTimeron                                    0     0      0    1284
   840 ;;              _getAdOriginalCh2Value
   841 ;;              _getAdOriginalCh6Value
   842 ;;                             _setPA3
   843 ;;                             _setPB6
   844 ;;                      _setPB6AsInput
   845 ;; ---------------------------------------------------------------------------------
   846 ;; (1) _process_AD_Converter_Value                           0     0      0      66
   847 ;;                  _getAD_ConvertFlag
   848 ;;                  _setAD_ConvertFlag
   849 ;;                          _AD_Sample
   850 ;;                          _adc_start
   851 ;; ---------------------------------------------------------------------------------
   852 ;; (1) _clearParaFunction1                                   0     0      0     154
   853 ;;                             _setPA1
   854 ;;                             _setPA0
   855 ;;                             _setPB0
   856 ;;                             _setPB1
   857 ;;                             _setPB2
   858 ;;                      _clearAllTimer
   859 ;;                             _setPA3
   860 ;;                             _setPB4
   861 ;; ---------------------------------------------------------------------------------
   862 ;; (1) _clearPinPortAndTimer                                 0     0      0       0
   863 ;;                      _clearAllTimer
   864 ;; ---------------------------------------------------------------------------------
   865 ;; (2) _AD_Sample                                            0     0      0      44
   866 ;;                      _adc_test_init
   867 ;; ---------------------------------------------------------------------------------
   868 ;; (2) _getAdOriginalCh2Value                                2     0      2     620
   869 ;;                                             38 BANK0      2     0      2
   870 ;;                             _Filter
   871 ;; ---------------------------------------------------------------------------------
   872 ;; (1) _vHandle20sTimerOut                                   1     1      0      89
   873 ;;                                              1 BANK0      1     1      0
   874 ;;                             _setPA3
   875 ;;                             _setPB4
   876 ;;                             _setPB6
   877 ;;                      _setPB6AsInput
   878 ;;            _clearTwentySecondsTimer
   879 ;; ---------------------------------------------------------------------------------
   880 ;; (1) _getAdOriginalCh5Value                                2     0      2     620
   881 ;;                                             38 BANK0      2     0      2
   882 ;;                             _Filter
   883 ;; ---------------------------------------------------------------------------------
   884 ;; (2) _getAdOriginalCh6Value                                2     0      2     620
   885 ;;                                             38 BANK0      2     0      2
   886 ;;                             _Filter
   887 ;; ---------------------------------------------------------------------------------
   888 ;; (1) _getAdOriginalCh0Value                                2     0      2     620
   889 ;;                                             38 BANK0      2     0      2
   890 ;;                             _Filter
   891 ;; ---------------------------------------------------------------------------------
   892 ;; (1) _clearAllTimer                                        0     0      0       0
   893 ;;              _clearTwelveHoursTimer
   894 ;;               _clearThreeHoursTimer
   895 ;;            _clearTwentySecondsTimer
   896 ;;             _clearTwentyMinuteTimer
   897 ;; ---------------------------------------------------------------------------------
   898 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   899 ;;                                              0 BANK0      1     1      0
   900 ;; ---------------------------------------------------------------------------------
   901 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   902 ;; ---------------------------------------------------------------------------------
   903 ;; (3) _Filter                                              38    36      2     620
   904 ;;                                              0 BANK0     38    36      2
   905 ;; ---------------------------------------------------------------------------------
   906 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   907 ;; ---------------------------------------------------------------------------------
   908 ;; (1) _startThreeHoursTimer                                 2     0      2      22
   909 ;;                                              0 BANK0      2     0      2
   910 ;; ---------------------------------------------------------------------------------
   911 ;; (1) _isFinishedTwentySecondsTimer                         0     0      0       0
   912 ;; ---------------------------------------------------------------------------------
   913 ;; (1) _startTwentySecondsTimer                              0     0      0       0
   914 ;; ---------------------------------------------------------------------------------
   915 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   916 ;; ---------------------------------------------------------------------------------
   917 ;; (1) _startTwelveHourTimer                                 2     0      2      22
   918 ;;                                              0 BANK0      2     0      2
   919 ;; ---------------------------------------------------------------------------------
   920 ;; (1) _isFinishedTwentyMinuteTimer                          0     0      0       0
   921 ;; ---------------------------------------------------------------------------------
   922 ;; (1) _clrSampeTime                                         0     0      0       0
   923 ;; ---------------------------------------------------------------------------------
   924 ;; (1) _isPermitSampleTime                                   0     0      0       0
   925 ;; ---------------------------------------------------------------------------------
   926 ;; (1) _startTwentyMinuteTimer                               2     0      2      22
   927 ;;                                              0 BANK0      2     0      2
   928 ;; ---------------------------------------------------------------------------------
   929 ;; (2) _adc_start                                            0     0      0       0
   930 ;; ---------------------------------------------------------------------------------
   931 ;; (3) _adc_test_init                                        3     2      1      44
   932 ;;                                              0 BANK0      3     2      1
   933 ;; ---------------------------------------------------------------------------------
   934 ;; (1) _timer1_interrupt_config                              0     0      0       0
   935 ;; ---------------------------------------------------------------------------------
   936 ;; (1) _timer1_config                                        0     0      0       0
   937 ;; ---------------------------------------------------------------------------------
   938 ;; (1) _clock_config                                         0     0      0       0
   939 ;; ---------------------------------------------------------------------------------
   940 ;; (2) _setPB6AsInput                                        0     0      0       0
   941 ;; ---------------------------------------------------------------------------------
   942 ;; (1) _setPA6                                               1     1      0      22
   943 ;;                                              0 BANK0      1     1      0
   944 ;; ---------------------------------------------------------------------------------
   945 ;; (2) _setPB4                                               1     1      0      22
   946 ;;                                              0 BANK0      1     1      0
   947 ;; ---------------------------------------------------------------------------------
   948 ;; (2) _setPB6                                               1     1      0      22
   949 ;;                                              0 BANK0      1     1      0
   950 ;; ---------------------------------------------------------------------------------
   951 ;; (2) _setPA3                                               1     1      0      22
   952 ;;                                              0 BANK0      1     1      0
   953 ;; ---------------------------------------------------------------------------------
   954 ;; (1) _setPA2                                               1     1      0      22
   955 ;;                                              0 BANK0      1     1      0
   956 ;; ---------------------------------------------------------------------------------
   957 ;; (1) _setPA1                                               1     1      0      22
   958 ;;                                              0 BANK0      1     1      0
   959 ;; ---------------------------------------------------------------------------------
   960 ;; (1) _setPA0                                               1     1      0      22
   961 ;;                                              0 BANK0      1     1      0
   962 ;; ---------------------------------------------------------------------------------
   963 ;; (1) _setPB2                                               1     1      0      22
   964 ;;                                              0 BANK0      1     1      0
   965 ;; ---------------------------------------------------------------------------------
   966 ;; (1) _setPB1                                               1     1      0      22
   967 ;;                                              0 BANK0      1     1      0
   968 ;; ---------------------------------------------------------------------------------
   969 ;; (1) _setPB0                                               1     1      0      22
   970 ;;                                              0 BANK0      1     1      0
   971 ;; ---------------------------------------------------------------------------------
   972 ;; (1) _initPin                                              0     0      0       0
   973 ;; ---------------------------------------------------------------------------------
   974 ;; (2) _clearTwentyMinuteTimer                               0     0      0       0
   975 ;; ---------------------------------------------------------------------------------
   976 ;; (2) _clearTwentySecondsTimer                              0     0      0       0
   977 ;; ---------------------------------------------------------------------------------
   978 ;; (2) _clearThreeHoursTimer                                 0     0      0       0
   979 ;; ---------------------------------------------------------------------------------
   980 ;; (2) _clearTwelveHoursTimer                                0     0      0       0
   981 ;; ---------------------------------------------------------------------------------
   982 ;; Estimated maximum stack depth 3
   983 ;; ---------------------------------------------------------------------------------
   984 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   985 ;; ---------------------------------------------------------------------------------
   986 ;; (4) _ISR                                                  4     4      0     495
   987 ;;                                              9 COMMON     4     4      0
   988 ;;                i1_setAD_ConvertFlag
   989 ;;                            _adc_get
   990 ;;            _vPutSampleDataIntoTable
   991 ;; ---------------------------------------------------------------------------------
   992 ;; (5) i1_setAD_ConvertFlag                                  1     1      0      73
   993 ;;                                              0 COMMON     1     1      0
   994 ;; ---------------------------------------------------------------------------------
   995 ;; (5) _adc_get                                              4     2      2      24
   996 ;;                                              0 COMMON     4     2      2
   997 ;; ---------------------------------------------------------------------------------
   998 ;; (5) _vPutSampleDataIntoTable                              5     2      3     398
   999 ;;                                              4 COMMON     5     2      3
  1000 ;;                            _adc_get (ARG)
  1001 ;; ---------------------------------------------------------------------------------
  1002 ;; Estimated maximum stack depth 5
  1003 ;; ---------------------------------------------------------------------------------
  1004 ;; Call Graph Graphs:
  1005 ;; _main (ROOT)
  1006 ;;   _initPin
  1007 ;;   _clock_config
  1008 ;;   _timer1_config
  1009 ;;   _timer1_interrupt_config
  1010 ;;   _adc_test_init
  1011 ;;   _adc_start
  1012 ;;   _startTwentyMinuteTimer
  1013 ;;   _process_AD_Converter_Value
  1014 ;;     _getAD_ConvertFlag
  1015 ;;     _setAD_ConvertFlag
  1016 ;;     _AD_Sample
  1017 ;;       _adc_test_init
  1018 ;;     _adc_start
  1019 ;;   _isPermitSampleTime
  1020 ;;   _clrSampeTime
  1021 ;;   _getAdOriginalCh0Value
  1022 ;;     _Filter
  1023 ;;   _isFinishedTwentyMinuteTimer
  1024 ;;   _clearParaFunction1
  1025 ;;     _setPA1
  1026 ;;     _setPA0
  1027 ;;     _setPB0
  1028 ;;     _setPB1
  1029 ;;     _setPB2
  1030 ;;     _clearAllTimer
  1031 ;;       _clearTwelveHoursTimer
  1032 ;;       _clearThreeHoursTimer
  1033 ;;       _clearTwentySecondsTimer
  1034 ;;       _clearTwentyMinuteTimer
  1035 ;;     _setPA3
  1036 ;;     _setPB4
  1037 ;;   _setPA3
  1038 ;;   _setPB4
  1039 ;;   _getAdOriginalCh6Value
  1040 ;;     _Filter
  1041 ;;   _startTwelveHourTimer
  1042 ;;   _isFinishedTwelveHoursTimer
  1043 ;;   _getAdOriginalCh5Value
  1044 ;;     _Filter
  1045 ;;   _setPA1
  1046 ;;   _setPA0
  1047 ;;   _setPB0
  1048 ;;   _setPB1
  1049 ;;   _setPB2
  1050 ;;   _startTwentySecondsTimer
  1051 ;;   _isFinishedTwentySecondsTimer
  1052 ;;   _vHandle20sTimeron
  1053 ;;     _getAdOriginalCh2Value
  1054 ;;       _Filter
  1055 ;;     _getAdOriginalCh6Value
  1056 ;;       _Filter
  1057 ;;     _setPA3
  1058 ;;     _setPB6
  1059 ;;     _setPB6AsInput
  1060 ;;   _vHandle20sTimerOut
  1061 ;;     _setPA3
  1062 ;;     _setPB4
  1063 ;;     _setPB6
  1064 ;;     _setPB6AsInput
  1065 ;;     _clearTwentySecondsTimer
  1066 ;;   _setPA6
  1067 ;;   _clearPinPortAndTimer
  1068 ;;     _clearAllTimer
  1069 ;;       _clearTwelveHoursTimer
  1070 ;;       _clearThreeHoursTimer
  1071 ;;       _clearTwentySecondsTimer
  1072 ;;       _clearTwentyMinuteTimer
  1073 ;;   _startThreeHoursTimer
  1074 ;;   _isFinishedThreeHoursTimer
  1075 ;;   _clearThreeHoursTimer
  1076 ;;   _setPA2
  1077 ;;   _clearAllTimer
  1078 ;;     _clearTwelveHoursTimer
  1079 ;;     _clearThreeHoursTimer
  1080 ;;     _clearTwentySecondsTimer
  1081 ;;     _clearTwentyMinuteTimer
  1082 ;;
  1083 ;; _ISR (ROOT)
  1084 ;;   i1_setAD_ConvertFlag
  1085 ;;   _adc_get
  1086 ;;   _vPutSampleDataIntoTable
  1087 ;;     _adc_get (ARG)
  1088 ;;
  1089 ;; Address spaces:
  1090 ;;Name               Size   Autos  Total    Cost      Usage
  1091 ;;BITCOMMON            E      0       0       0        0.0%
  1092 ;;NULL                 0      0       0       0        0.0%
  1093 ;;CODE                 0      0       0       0        0.0%
  1094 ;;COMMON               E      D       E       1      100.0%
  1095 ;;BITSFR0              0      0       0       1        0.0%
  1096 ;;SFR0                 0      0       0       1        0.0%
  1097 ;;BITSFR1              0      0       0       2        0.0%
  1098 ;;SFR1                 0      0       0       2        0.0%
  1099 ;;STACK                0      0       7       2        0.0%
  1100 ;;ABS                  0      0      E0       3        0.0%
  1101 ;;BITBANK0            50      0       0       4        0.0%
  1102 ;;BITSFR3              0      0       0       4        0.0%
  1103 ;;SFR3                 0      0       0       4        0.0%
  1104 ;;BANK0               50     2A      4F       5       98.8%
  1105 ;;BITSFR2              0      0       0       5        0.0%
  1106 ;;SFR2                 0      0       0       5        0.0%
  1107 ;;DATA                 0      0      E7       6        0.0%
  1108 ;;BITBANK1            50      0       0       7        0.0%
  1109 ;;BANK1               50      0      3B       8       73.8%
  1110 ;;BITBANK3            60      0       0       9        0.0%
  1111 ;;BANK3               60      0      48      10       75.0%
  1112 ;;BITBANK2            60      0       0      11        0.0%
  1113 ;;BANK2               60      0       0      12        0.0%
  1114                           
  1115                           
  1116 ;; *************** function _main *****************
  1117 ;; Defined at:
  1118 ;;		line 672 in file "C:\temp\dev\AK7030-OTP\main.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;		None
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;  uiCh5Value      2   40[BANK0 ] unsigned int 
  1123 ;; Return value:  Size  Location     Type
  1124 ;;		None               void
  1125 ;; Registers used:
  1126 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1127 ;; Tracked objects:
  1128 ;;		On entry : 17F/0
  1129 ;;		On exit  : 60/0
  1130 ;;		Unchanged: FFE00/0
  1131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1132 ;;      Params:         0       0       0       0       0
  1133 ;;      Locals:         0       2       0       0       0
  1134 ;;      Temps:          0       0       0       0       0
  1135 ;;      Totals:         0       2       0       0       0
  1136 ;;Total ram usage:        2 bytes
  1137 ;; Hardware stack levels required when called:    5
  1138 ;; This function calls:
  1139 ;;		_initPin
  1140 ;;		_clock_config
  1141 ;;		_timer1_config
  1142 ;;		_timer1_interrupt_config
  1143 ;;		_adc_test_init
  1144 ;;		_adc_start
  1145 ;;		_startTwentyMinuteTimer
  1146 ;;		_process_AD_Converter_Value
  1147 ;;		_isPermitSampleTime
  1148 ;;		_clrSampeTime
  1149 ;;		_getAdOriginalCh0Value
  1150 ;;		_isFinishedTwentyMinuteTimer
  1151 ;;		_clearParaFunction1
  1152 ;;		_setPA3
  1153 ;;		_setPB4
  1154 ;;		_getAdOriginalCh6Value
  1155 ;;		_startTwelveHourTimer
  1156 ;;		_isFinishedTwelveHoursTimer
  1157 ;;		_getAdOriginalCh5Value
  1158 ;;		_setPA1
  1159 ;;		_setPA0
  1160 ;;		_setPB0
  1161 ;;		_setPB1
  1162 ;;		_setPB2
  1163 ;;		_startTwentySecondsTimer
  1164 ;;		_isFinishedTwentySecondsTimer
  1165 ;;		_vHandle20sTimeron
  1166 ;;		_vHandle20sTimerOut
  1167 ;;		_setPA6
  1168 ;;		_clearPinPortAndTimer
  1169 ;;		_startThreeHoursTimer
  1170 ;;		_isFinishedThreeHoursTimer
  1171 ;;		_clearThreeHoursTimer
  1172 ;;		_setPA2
  1173 ;;		_clearAllTimer
  1174 ;; This function is called by:
  1175 ;;		Startup code after reset
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178  0013                     _main:	
  1179                           
  1180                           ;main.c: 682: static unsigned char bCheckTweHour = 0;
  1181                           ;main.c: 688: initPin();
  1182                           
  1183                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1184  0013  158A  278B  118A   	fcall	_initPin
  1185                           
  1186                           ;main.c: 691: TRISB3 = 1;
  1187  0016  1586               	bsf	6,3
  1188                           
  1189                           ;main.c: 693: TRISB5 = 1;
  1190  0017  1686               	bsf	6,5
  1191                           
  1192                           ;main.c: 695: TRISA7 = 1;
  1193  0018  1785               	bsf	5,7
  1194                           
  1195                           ;main.c: 697: TRISA6 = 1;
  1196  0019  1705               	bsf	5,6
  1197                           
  1198                           ;main.c: 699: clock_config();
  1199  001A  158A  26D6  118A   	fcall	_clock_config
  1200                           
  1201                           ;main.c: 700: timer1_config();
  1202  001D  158A  26EF  118A   	fcall	_timer1_config
  1203                           
  1204                           ;main.c: 701: timer1_interrupt_config();
  1205  0020  158A  26C5  118A   	fcall	_timer1_interrupt_config
  1206                           
  1207                           ;main.c: 703: adc_test_init(0,3);
  1208  0023  3003               	movlw	3
  1209  0024  1283               	bcf	3,5	;RP0=0, select bank0
  1210  0025  00A0               	movwf	?_adc_test_init
  1211  0026  3000               	movlw	0
  1212  0027  158A  27EB  118A   	fcall	_adc_test_init
  1213                           
  1214                           ;main.c: 710: adc_start();
  1215  002A  158A  27C6  118A   	fcall	_adc_start
  1216                           
  1217                           ;main.c: 723: startTwentyMinuteTimer(60);
  1218  002D  303C               	movlw	60
  1219  002E  00A0               	movwf	?_startTwentyMinuteTimer
  1220  002F  01A1               	clrf	?_startTwentyMinuteTimer+1
  1221  0030  158A  2738  118A   	fcall	_startTwentyMinuteTimer
  1222  0033                     l4998:	
  1223  0033  0064               	clrwdt	;#
  1224                           
  1225                           ;main.c: 730: process_AD_Converter_Value();
  1226  0034  158A  27B2  118A   	fcall	_process_AD_Converter_Value
  1227                           
  1228                           ;main.c: 732: if( isPermitSampleTime() )
  1229  0037  158A  26C8  118A   	fcall	_isPermitSampleTime
  1230  003A  3A00               	xorlw	0
  1231  003B  1903               	skipnz
  1232  003C  2833               	goto	l4998
  1233                           
  1234                           ;main.c: 733: {
  1235                           ;main.c: 736: clrSampeTime();
  1236  003D  118A  2002  118A   	fcall	_clrSampeTime
  1237                           
  1238                           ;main.c: 751: switch(enumMainLoopStep)
  1239  0040  2C54               	goto	l5586
  1240  0041                     l5004:	
  1241                           
  1242                           ;main.c: 754: {
  1243                           ;main.c: 759: static unsigned char ucTimerZeroPoint5s = 0;
  1244                           ;main.c: 761: if(getAdOriginalCh0Value() <= 1950)
  1245  0041  118A  247B  118A   	fcall	_getAdOriginalCh0Value
  1246  0044  3007               	movlw	7
  1247  0045  0247               	subwf	?_getAdOriginalCh0Value+1,w
  1248  0046  309F               	movlw	159
  1249  0047  1903               	skipnz
  1250  0048  0246               	subwf	?_getAdOriginalCh0Value,w
  1251  0049  1803               	skipnc
  1252  004A  284D               	goto	l5008
  1253                           
  1254                           ;main.c: 762: {
  1255                           ;main.c: 763: ucTimerZeroPoint5s++;
  1256  004B  0AEA               	incf	main@ucTimerZeroPoint5s,f
  1257                           
  1258                           ;main.c: 764: }
  1259  004C  284E               	goto	l5010
  1260  004D                     l5008:	
  1261                           
  1262                           ;main.c: 765: else
  1263                           ;main.c: 766: ucTimerZeroPoint5s = 0;
  1264  004D  01EA               	clrf	main@ucTimerZeroPoint5s
  1265  004E                     l5010:	
  1266                           
  1267                           ;main.c: 768: if(ucTimerZeroPoint5s >= 5)
  1268  004E  3005               	movlw	5
  1269  004F  026A               	subwf	main@ucTimerZeroPoint5s,w
  1270  0050  1C03               	skipc
  1271  0051  2855               	goto	l5016
  1272                           
  1273                           ;main.c: 769: {
  1274                           ;main.c: 770: ucTimerZeroPoint5s = 0;
  1275  0052  01EA               	clrf	main@ucTimerZeroPoint5s
  1276                           
  1277                           ;main.c: 771: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  1278  0053  01D0               	clrf	_enumMainLoopStep
  1279  0054  0AD0               	incf	_enumMainLoopStep,f
  1280  0055                     l5016:	
  1281                           
  1282                           ;main.c: 772: }
  1283                           ;main.c: 774: if(isFinishedTwentyMinuteTimer())
  1284  0055  158A  2703  118A   	fcall	_isFinishedTwentyMinuteTimer
  1285  0058  3A00               	xorlw	0
  1286  0059  1903               	skipnz
  1287  005A  2833               	goto	l4998
  1288  005B                     l5018:	
  1289                           
  1290                           ;main.c: 775: enumMainLoopStep = MAIN_LOOP_STEP_10_HOUR_END;
  1291  005B  3009               	movlw	9
  1292  005C  1283               	bcf	3,5	;RP0=0, select bank0
  1293  005D  00D0               	movwf	_enumMainLoopStep
  1294  005E                     l772:	
  1295                           
  1296                           ;main.c: 776: break;
  1297  005E  2833               	goto	l4998
  1298  005F                     l5020:	
  1299                           
  1300                           ;main.c: 780: {
  1301                           ;main.c: 785: static unsigned char ucTimerZeroPoint3s = 0;
  1302                           ;main.c: 787: static unsigned char ucTimerCntP3s = 0;
  1303                           ;main.c: 790: if(getAdOriginalCh0Value() <= 1950)
  1304  005F  118A  247B  118A   	fcall	_getAdOriginalCh0Value
  1305  0062  3007               	movlw	7
  1306  0063  0247               	subwf	?_getAdOriginalCh0Value+1,w
  1307  0064  309F               	movlw	159
  1308  0065  1903               	skipnz
  1309  0066  0246               	subwf	?_getAdOriginalCh0Value,w
  1310  0067  3003               	movlw	3
  1311  0068  1803               	skipnc
  1312  0069  2873               	goto	L12
  1313                           
  1314                           ;main.c: 791: {
  1315                           ;main.c: 792: ucTimerCntP3s++;
  1316  006A  0ADD               	incf	main@ucTimerCntP3s,f
  1317                           
  1318                           ;main.c: 793: if(ucTimerCntP3s >= 3)
  1319  006B  025D               	subwf	main@ucTimerCntP3s,w
  1320  006C  1C03               	skipc
  1321  006D  2833               	goto	l4998
  1322  006E  3002               	movlw	2
  1323                           
  1324                           ;main.c: 794: {
  1325                           ;main.c: 795: ucTimerCntP3s = 0;
  1326  006F  01DD               	clrf	main@ucTimerCntP3s
  1327                           
  1328                           ;main.c: 797: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
  1329  0070  00D0               	movwf	_enumMainLoopStep
  1330                           
  1331                           ;main.c: 799: ucTimerZeroPoint3s = 0;
  1332  0071  01E9               	clrf	main@ucTimerZeroPoint3s
  1333  0072  2833               	goto	l4998
  1334  0073                     L12:	
  1335                           
  1336                           ;main.c: 803: else
  1337                           ;main.c: 804: {
  1338                           ;main.c: 805: ucTimerZeroPoint3s++;
  1339  0073  0AE9               	incf	main@ucTimerZeroPoint3s,f
  1340                           
  1341                           ;main.c: 807: if(ucTimerZeroPoint3s >= 3)
  1342  0074  0269               	subwf	main@ucTimerZeroPoint3s,w
  1343  0075  1C03               	skipc
  1344  0076  2833               	goto	l4998
  1345                           
  1346                           ;main.c: 808: {
  1347                           ;main.c: 809: ucTimerZeroPoint3s = 0;
  1348  0077  01E9               	clrf	main@ucTimerZeroPoint3s
  1349                           
  1350                           ;main.c: 811: clearParaFunction1();
  1351  0078  118A  2491  118A   	fcall	_clearParaFunction1
  1352  007B  2833               	goto	l4998
  1353  007C                     l5040:	
  1354                           
  1355                           ;main.c: 819: {
  1356                           ;main.c: 824: static unsigned char ucTimerP5s = 0;
  1357                           ;main.c: 826: setPA3(1);
  1358  007C  3001               	movlw	1
  1359  007D  118A  2625  118A   	fcall	_setPA3
  1360                           
  1361                           ;main.c: 827: setPB4(1);
  1362  0080  3001               	movlw	1
  1363  0081  118A  2535  118A   	fcall	_setPB4
  1364                           
  1365                           ;main.c: 829: if(ucTimerP5s < 5)
  1366  0084  3005               	movlw	5
  1367  0085  0267               	subwf	main@ucTimerP5s,w
  1368  0086  1803               	skipnc
  1369  0087  288A               	goto	l5046
  1370                           
  1371                           ;main.c: 830: ucTimerP5s++;
  1372  0088  0AE7               	incf	main@ucTimerP5s,f
  1373  0089  2833               	goto	l4998
  1374  008A                     l5046:	
  1375  008A  303C               	movlw	60
  1376                           
  1377                           ;main.c: 831: else
  1378                           ;main.c: 832: {
  1379                           ;main.c: 833: ucTimerP5s = 0;
  1380  008B  01E7               	clrf	main@ucTimerP5s
  1381                           
  1382                           ;main.c: 835: startTwentyMinuteTimer(60);
  1383  008C  00A0               	movwf	?_startTwentyMinuteTimer
  1384  008D  01A1               	clrf	?_startTwentyMinuteTimer+1
  1385  008E  158A  2738  118A   	fcall	_startTwentyMinuteTimer
  1386                           
  1387                           ;main.c: 837: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  1388  0091  3003               	movlw	3
  1389  0092  2BB8               	goto	L1
  1390  0093                     l5052:	
  1391                           
  1392                           ;main.c: 844: {
  1393                           ;main.c: 849: static unsigned char ucTimerLessZeroP5s = 0;
  1394                           ;main.c: 851: static unsigned char ucTimerLargeZeroP5s = 0;
  1395                           ;main.c: 854: static unsigned char ucTimerRightP5s = 0;
  1396                           ;main.c: 856: if(getAdOriginalCh6Value() <= 85)
  1397  0093  118A  262E  118A   	fcall	_getAdOriginalCh6Value
  1398  0096  3000               	movlw	0
  1399  0097  0247               	subwf	?_getAdOriginalCh6Value+1,w
  1400  0098  3056               	movlw	86
  1401  0099  1903               	skipnz
  1402  009A  0246               	subwf	?_getAdOriginalCh6Value,w
  1403  009B  1803               	skipnc
  1404  009C  28A0               	goto	l5058
  1405                           
  1406                           ;main.c: 857: {
  1407                           ;main.c: 858: ucTimerLargeZeroP5s = 0;
  1408  009D  01E5               	clrf	main@ucTimerLargeZeroP5s
  1409                           
  1410                           ;main.c: 860: ucTimerLessZeroP5s++;
  1411  009E  0AE6               	incf	main@ucTimerLessZeroP5s,f
  1412                           
  1413                           ;main.c: 861: }
  1414  009F  28A3               	goto	l5064
  1415  00A0                     l5058:	
  1416                           
  1417                           ;main.c: 862: else
  1418                           ;main.c: 863: {
  1419                           ;main.c: 864: ucTimerLargeZeroP5s++;
  1420  00A0  0AE5               	incf	main@ucTimerLargeZeroP5s,f
  1421                           
  1422                           ;main.c: 866: ucTimerLessZeroP5s = 0;
  1423  00A1  01E6               	clrf	main@ucTimerLessZeroP5s
  1424                           
  1425                           ;main.c: 868: ucTimerRightP5s = 0;
  1426  00A2  01E8               	clrf	main@ucTimerRightP5s
  1427  00A3                     l5064:	
  1428                           
  1429                           ;main.c: 869: }
  1430                           ;main.c: 871: if(ucTimerLargeZeroP5s >= 3)
  1431  00A3  3003               	movlw	3
  1432  00A4  0265               	subwf	main@ucTimerLargeZeroP5s,w
  1433  00A5  1C03               	skipc
  1434  00A6  28AA               	goto	l5070
  1435  00A7  3004               	movlw	4
  1436                           
  1437                           ;main.c: 872: {
  1438                           ;main.c: 873: ucTimerLargeZeroP5s = 0;
  1439  00A8  01E5               	clrf	main@ucTimerLargeZeroP5s
  1440                           
  1441                           ;main.c: 874: enumMainLoopStep = MAIN_LOOP_STEP_FOURTH;
  1442  00A9  28C2               	goto	L2
  1443  00AA                     l5070:	
  1444                           ;main.c: 875: }
  1445                           
  1446                           
  1447                           ;main.c: 876: else if( ucTimerLessZeroP5s >= 3)
  1448  00AA  3003               	movlw	3
  1449  00AB  0266               	subwf	main@ucTimerLessZeroP5s,w
  1450  00AC  1C03               	skipc
  1451  00AD  28C3               	goto	l5084
  1452                           
  1453                           ;main.c: 877: {
  1454                           ;main.c: 879: if(getAdOriginalCh6Value() < 65)
  1455  00AE  118A  262E  118A   	fcall	_getAdOriginalCh6Value
  1456  00B1  3000               	movlw	0
  1457  00B2  0247               	subwf	?_getAdOriginalCh6Value+1,w
  1458  00B3  3041               	movlw	65
  1459  00B4  1903               	skipnz
  1460  00B5  0246               	subwf	?_getAdOriginalCh6Value,w
  1461  00B6  1803               	skipnc
  1462  00B7  28BA               	goto	l5076
  1463                           
  1464                           ;main.c: 880: {
  1465                           ;main.c: 881: ucTimerRightP5s++;
  1466  00B8  0AE8               	incf	main@ucTimerRightP5s,f
  1467                           
  1468                           ;main.c: 882: }
  1469  00B9  28BB               	goto	l5078
  1470  00BA                     l5076:	
  1471                           
  1472                           ;main.c: 883: else
  1473                           ;main.c: 884: {
  1474                           ;main.c: 885: ucTimerRightP5s = 0;
  1475  00BA  01E8               	clrf	main@ucTimerRightP5s
  1476  00BB                     l5078:	
  1477                           
  1478                           ;main.c: 886: }
  1479                           ;main.c: 888: if(ucTimerRightP5s >= 3)
  1480  00BB  3003               	movlw	3
  1481  00BC  0268               	subwf	main@ucTimerRightP5s,w
  1482  00BD  1C03               	skipc
  1483  00BE  28C3               	goto	l5084
  1484  00BF  3008               	movlw	8
  1485                           
  1486                           ;main.c: 889: {
  1487                           ;main.c: 890: ucTimerLargeZeroP5s = 0;
  1488  00C0  01E5               	clrf	main@ucTimerLargeZeroP5s
  1489                           
  1490                           ;main.c: 891: ucTimerRightP5s = 0;
  1491  00C1  01E8               	clrf	main@ucTimerRightP5s
  1492  00C2                     L2:	
  1493                           ;main.c: 892: enumMainLoopStep = MAIN_LOOP_STEP_3_HOUR_BRANCH;
  1494                           
  1495  00C2  00D0               	movwf	_enumMainLoopStep
  1496  00C3                     l5084:	
  1497                           ;main.c: 899: else
  1498                           ;main.c: 900: {
  1499                           ;main.c: 901: ;
  1500                           
  1501                           ;main.c: 893: }
  1502                           
  1503                           
  1504                           ;main.c: 902: }
  1505                           ;main.c: 904: if((MAIN_LOOP_STEP_3_HOUR_BRANCH == enumMainLoopStep) || (MAIN_LOOP_STEP_F
      +                          OURTH == enumMainLoopStep))
  1506  00C3  0850               	movf	_enumMainLoopStep,w
  1507  00C4  3A08               	xorlw	8
  1508  00C5  1903               	skipnz
  1509  00C6  28CB               	goto	l5088
  1510  00C7  0850               	movf	_enumMainLoopStep,w
  1511  00C8  3A04               	xorlw	4
  1512  00C9  1D03               	skipz
  1513  00CA  2833               	goto	l4998
  1514  00CB                     l5088:	
  1515                           
  1516                           ;main.c: 905: {
  1517                           ;main.c: 906: ucTimerRightP5s = 0;
  1518  00CB  01E8               	clrf	main@ucTimerRightP5s
  1519                           
  1520                           ;main.c: 907: ucTimerLargeZeroP5s = 0;
  1521  00CC  01E5               	clrf	main@ucTimerLargeZeroP5s
  1522                           
  1523                           ;main.c: 908: ucTimerLessZeroP5s = 0;
  1524  00CD  01E6               	clrf	main@ucTimerLessZeroP5s
  1525  00CE  2833               	goto	l4998
  1526  00CF                     l5090:	
  1527                           
  1528                           ;main.c: 916: {
  1529                           ;main.c: 922: startTwelveHourTimer(300);
  1530  00CF  302C               	movlw	44
  1531  00D0  00A0               	movwf	?_startTwelveHourTimer
  1532  00D1  3001               	movlw	1
  1533  00D2  00A1               	movwf	?_startTwelveHourTimer+1
  1534  00D3  158A  274C  118A   	fcall	_startTwelveHourTimer
  1535                           
  1536                           ;main.c: 923: enumMainLoopStep = MAIN_LOOP_STEP_FIFTH;
  1537  00D6  3005               	movlw	5
  1538  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  1539  00D8  00D0               	movwf	_enumMainLoopStep
  1540                           
  1541                           ;main.c: 925: bCheckTweHour = 0;
  1542  00D9  01D5               	clrf	main@bCheckTweHour
  1543                           
  1544                           ;main.c: 927: break;
  1545  00DA  2833               	goto	l4998
  1546  00DB                     l5096:	
  1547                           
  1548                           ;main.c: 931: {
  1549                           ;main.c: 935: if(( isFinishedTwelveHoursTimer() && (! bCheckTweHour)))
  1550  00DB  158A  270F  118A   	fcall	_isFinishedTwelveHoursTimer
  1551  00DE  3A00               	xorlw	0
  1552  00DF  1903               	skipnz
  1553  00E0  2B43               	goto	l5478
  1554  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  1555  00E2  08D5               	movf	main@bCheckTweHour,f
  1556  00E3  1D03               	skipz
  1557  00E4  2B43               	goto	l5478
  1558                           
  1559                           ;main.c: 936: {
  1560                           ;main.c: 937: enumMainLoopStep = MAIN_LOOP_STEP_10_HOUR_END;
  1561  00E5  3009               	movlw	9
  1562  00E6  00D0               	movwf	_enumMainLoopStep
  1563                           
  1564                           ;main.c: 938: bCheckTweHour = 1;
  1565  00E7  01D5               	clrf	main@bCheckTweHour
  1566  00E8  0AD5               	incf	main@bCheckTweHour,f
  1567                           
  1568                           ;main.c: 939: }
  1569  00E9  2833               	goto	l4998
  1570  00EA                     l813:	
  1571                           ;main.c: 944: {
  1572                           ;main.c: 945: case ADC4_STEP_INIT:
  1573                           
  1574                           
  1575                           ;main.c: 946: {
  1576                           ;main.c: 951: ucADC4_Step = ADC4_STEP_FIRST;
  1577  00EA  01D3               	clrf	_ucADC4_Step
  1578  00EB  0AD3               	incf	_ucADC4_Step,f
  1579                           
  1580                           ;main.c: 952: break;
  1581  00EC  2833               	goto	l4998
  1582  00ED                     l5104:	
  1583                           
  1584                           ;main.c: 966: uiCh5Value = getAdOriginalCh5Value();
  1585  00ED  118A  2471  118A   	fcall	_getAdOriginalCh5Value
  1586  00F0  0847               	movf	?_getAdOriginalCh5Value+1,w
  1587  00F1  00C9               	movwf	main@uiCh5Value+1
  1588  00F2  0846               	movf	?_getAdOriginalCh5Value,w
  1589  00F3  00C8               	movwf	main@uiCh5Value
  1590                           
  1591                           ;main.c: 968: if( 0 == bInitFlag)
  1592  00F4  08D6               	movf	main@bInitFlag,f
  1593  00F5  1D03               	skipz
  1594  00F6  28FD               	goto	l5114
  1595                           
  1596                           ;main.c: 969: {
  1597                           ;main.c: 970: bInitFlag = 1;
  1598  00F7  01D6               	clrf	main@bInitFlag
  1599  00F8  0AD6               	incf	main@bInitFlag,f
  1600                           
  1601                           ;main.c: 971: uiOldValue = uiCh5Value;
  1602  00F9  0849               	movf	main@uiCh5Value+1,w
  1603  00FA  00CB               	movwf	main@uiOldValue+1
  1604  00FB  0848               	movf	main@uiCh5Value,w
  1605  00FC  00CA               	movwf	main@uiOldValue
  1606  00FD                     l5114:	
  1607                           
  1608                           ;main.c: 972: }
  1609                           ;main.c: 981: if(LESS_THAN_1911 == ucChannel5Type)
  1610  00FD  08D4               	movf	_ucChannel5Type,f
  1611  00FE  1D03               	skipz
  1612  00FF  2905               	goto	l5120
  1613                           
  1614                           ;main.c: 982: {
  1615                           ;main.c: 983: uiMinValue = 0;
  1616  0100  1683               	bsf	3,5	;RP0=1, select bank1
  1617  0101  308B               	movlw	139
  1618  0102  01AA               	clrf	main@uiMinValue^(0+128)
  1619  0103  01AB               	clrf	(main@uiMinValue+1)^(0+128)
  1620                           
  1621                           ;main.c: 984: uiMaxValue = 1931;
  1622  0104  290D               	goto	L8
  1623  0105                     l5120:	
  1624                           ;main.c: 985: }
  1625                           
  1626                           
  1627                           ;main.c: 986: else if(BETWEEN_1911_AND_2067 == ucChannel5Type)
  1628  0105  0B54               	decfsz	_ucChannel5Type,w
  1629  0106  2910               	goto	l5124
  1630                           
  1631                           ;main.c: 987: {
  1632                           ;main.c: 988: uiMinValue = 1931 - 40;
  1633  0107  3063               	movlw	99
  1634  0108  1683               	bsf	3,5	;RP0=1, select bank1
  1635  0109  00AA               	movwf	main@uiMinValue^(0+128)
  1636  010A  3007               	movlw	7
  1637  010B  00AB               	movwf	(main@uiMinValue^(0+128)+1)
  1638                           
  1639                           ;main.c: 989: uiMaxValue = 2047;
  1640  010C  30FF               	movlw	255
  1641  010D                     L8:	
  1642  010D  00A8               	movwf	main@uiMaxValue^(0+128)
  1643  010E  3007               	movlw	7
  1644  010F  2929               	goto	L3
  1645  0110                     l5124:	
  1646                           ;main.c: 990: }
  1647                           
  1648                           
  1649                           ;main.c: 991: else if(BETWEEN_2067_AND_2204 == ucChannel5Type)
  1650  0110  0854               	movf	_ucChannel5Type,w
  1651  0111  3A02               	xorlw	2
  1652  0112  1D03               	skipz
  1653  0113  291B               	goto	l5128
  1654                           
  1655                           ;main.c: 992: {
  1656                           ;main.c: 993: uiMinValue = 2047 - 40;
  1657  0114  30D7               	movlw	215
  1658  0115  1683               	bsf	3,5	;RP0=1, select bank1
  1659  0116  00AA               	movwf	main@uiMinValue^(0+128)
  1660  0117  3007               	movlw	7
  1661  0118  00AB               	movwf	(main@uiMinValue^(0+128)+1)
  1662                           
  1663                           ;main.c: 994: uiMaxValue = 2164;
  1664  0119  3074               	movlw	116
  1665  011A  2927               	goto	L9
  1666  011B                     l5128:	
  1667                           ;main.c: 995: }
  1668                           
  1669                           
  1670                           ;main.c: 996: else if(BETWEEN_2204_AND_2340 == ucChannel5Type)
  1671  011B  0854               	movf	_ucChannel5Type,w
  1672  011C  3A03               	xorlw	3
  1673  011D  1D03               	skipz
  1674  011E  2921               	goto	l5132
  1675                           
  1676                           ;main.c: 997: {
  1677                           ;main.c: 998: uiMinValue = 2164 - 40;
  1678  011F  304C               	movlw	76
  1679  0120  2922               	goto	L10
  1680  0121                     l5132:	
  1681                           ;main.c: 1000: }
  1682                           
  1683                           ;main.c: 999: uiMaxValue = 2281;
  1684                           
  1685                           
  1686                           ;main.c: 1001: else
  1687                           ;main.c: 1002: {
  1688                           ;main.c: 1003: uiMinValue = 2281 - 40;
  1689  0121  30C1               	movlw	193
  1690  0122                     L10:	
  1691  0122  1683               	bsf	3,5	;RP0=1, select bank1
  1692  0123  00AA               	movwf	main@uiMinValue^(0+128)
  1693  0124  3008               	movlw	8
  1694  0125  00AB               	movwf	(main@uiMinValue^(0+128)+1)
  1695                           
  1696                           ;main.c: 1004: uiMaxValue = 2281;
  1697  0126  30E9               	movlw	233
  1698  0127                     L9:	
  1699  0127  00A8               	movwf	main@uiMaxValue^(0+128)
  1700  0128  3008               	movlw	8
  1701  0129                     L3:	
  1702  0129  00A9               	movwf	(main@uiMaxValue^(0+128)+1)
  1703                           
  1704                           ;main.c: 1005: }
  1705                           ;main.c: 1008: if(( uiCh5Value < uiMinValue )
  1706                           ;main.c: 1009: || ( uiCh5Value > uiMaxValue ))
  1707  012A  082B               	movf	(main@uiMinValue+1)^(0+128),w
  1708  012B  1283               	bcf	3,5	;RP0=0, select bank0
  1709  012C  0249               	subwf	main@uiCh5Value+1,w
  1710  012D  1D03               	skipz
  1711  012E  2933               	goto	u2425
  1712  012F  1683               	bsf	3,5	;RP0=1, select bank1
  1713  0130  082A               	movf	main@uiMinValue^(0+128),w
  1714  0131  1283               	bcf	3,5	;RP0=0, select bank0
  1715  0132  0248               	subwf	main@uiCh5Value,w
  1716  0133                     u2425:	
  1717  0133  1C03               	skipc
  1718  0134  2940               	goto	l5136
  1719  0135  0849               	movf	main@uiCh5Value+1,w
  1720  0136  1683               	bsf	3,5	;RP0=1, select bank1
  1721  0137  0229               	subwf	(main@uiMaxValue+1)^(0+128),w
  1722  0138  1D03               	skipz
  1723  0139  293E               	goto	u2435
  1724  013A  1283               	bcf	3,5	;RP0=0, select bank0
  1725  013B  0848               	movf	main@uiCh5Value,w
  1726  013C  1683               	bsf	3,5	;RP0=1, select bank1
  1727  013D  0228               	subwf	main@uiMaxValue^(0+128),w
  1728  013E                     u2435:	
  1729  013E  1803               	skipnc
  1730  013F  2945               	goto	l833
  1731  0140                     l5136:	
  1732                           
  1733                           ;main.c: 1010: {
  1734                           ;main.c: 1011: uiOldValue = uiCh5Value;
  1735  0140  1283               	bcf	3,5	;RP0=0, select bank0
  1736  0141  0849               	movf	main@uiCh5Value+1,w
  1737  0142  00CB               	movwf	main@uiOldValue+1
  1738  0143  0848               	movf	main@uiCh5Value,w
  1739  0144  00CA               	movwf	main@uiOldValue
  1740  0145                     l833:	
  1741                           
  1742                           ;main.c: 1012: }
  1743                           ;main.c: 1014: if( uiOldValue < 1931 )
  1744  0145  3007               	movlw	7
  1745  0146  1283               	bcf	3,5	;RP0=0, select bank0
  1746  0147  024B               	subwf	main@uiOldValue+1,w
  1747  0148  308B               	movlw	139
  1748  0149  1903               	skipnz
  1749  014A  024A               	subwf	main@uiOldValue,w
  1750  014B  1803               	skipnc
  1751  014C  294F               	goto	l5140
  1752                           
  1753                           ;main.c: 1015: ucChannel5Type = LESS_THAN_1911;
  1754  014D  01D4               	clrf	_ucChannel5Type
  1755  014E  296D               	goto	l837
  1756  014F                     l5140:	
  1757                           
  1758                           ;main.c: 1016: else if( uiOldValue < 2047 )
  1759  014F  3007               	movlw	7
  1760  0150  024B               	subwf	main@uiOldValue+1,w
  1761  0151  30FF               	movlw	255
  1762  0152  1903               	skipnz
  1763  0153  024A               	subwf	main@uiOldValue,w
  1764  0154  1803               	skipnc
  1765  0155  2959               	goto	l5144
  1766                           
  1767                           ;main.c: 1017: ucChannel5Type = BETWEEN_1911_AND_2067;
  1768  0156  01D4               	clrf	_ucChannel5Type
  1769  0157  0AD4               	incf	_ucChannel5Type,f
  1770  0158  296D               	goto	l837
  1771  0159                     l5144:	
  1772                           
  1773                           ;main.c: 1018: else if( uiOldValue < 2164 )
  1774  0159  3008               	movlw	8
  1775  015A  024B               	subwf	main@uiOldValue+1,w
  1776  015B  3074               	movlw	116
  1777  015C  1903               	skipnz
  1778  015D  024A               	subwf	main@uiOldValue,w
  1779  015E  1803               	skipnc
  1780  015F  2962               	goto	l5148
  1781                           
  1782                           ;main.c: 1019: ucChannel5Type = BETWEEN_2067_AND_2204;
  1783  0160  3002               	movlw	2
  1784  0161  296C               	goto	L4
  1785  0162                     l5148:	
  1786                           
  1787                           ;main.c: 1020: else if( uiOldValue < 2281 )
  1788  0162  3008               	movlw	8
  1789  0163  024B               	subwf	main@uiOldValue+1,w
  1790  0164  30E9               	movlw	233
  1791  0165  1903               	skipnz
  1792  0166  024A               	subwf	main@uiOldValue,w
  1793  0167  1803               	skipnc
  1794  0168  296B               	goto	l5152
  1795                           
  1796                           ;main.c: 1021: ucChannel5Type = BETWEEN_2204_AND_2340;
  1797  0169  3003               	movlw	3
  1798  016A  296C               	goto	L4
  1799  016B                     l5152:	
  1800                           
  1801                           ;main.c: 1022: else
  1802                           ;main.c: 1023: ucChannel5Type = MORE_THAN_2340;
  1803  016B  3004               	movlw	4
  1804  016C                     L4:	
  1805  016C  00D4               	movwf	_ucChannel5Type
  1806  016D                     l837:	
  1807                           
  1808                           ;main.c: 1025: ucADC4_Step = ADC4_STEP_SECOND;
  1809  016D  3002               	movlw	2
  1810  016E  2B36               	goto	L6
  1811  016F                     l5154:	
  1812                           ;main.c: 1026: break;
  1813                           
  1814                           
  1815                           ;main.c: 1045: {
  1816                           ;main.c: 1046: setPA1(1);
  1817  016F  3001               	movlw	1
  1818  0170  118A  24C8  118A   	fcall	_setPA1
  1819  0173                     l5156:	
  1820                           
  1821                           ;main.c: 1047: ucLoaderStep++;
  1822  0173  0AD8               	incf	main@ucLoaderStep,f
  1823                           
  1824                           ;main.c: 1048: break;
  1825  0174  2833               	goto	l4998
  1826  0175                     l5158:	
  1827                           
  1828                           ;main.c: 1052: {
  1829                           ;main.c: 1053: if(ucTimerDelay >= 5)
  1830  0175  3005               	movlw	5
  1831  0176  025E               	subwf	main@ucTimerDelay,w
  1832  0177  1C03               	skipc
  1833  0178  297F               	goto	l5166
  1834                           
  1835                           ;main.c: 1054: {
  1836                           ;main.c: 1055: setPA0(1);
  1837  0179  3001               	movlw	1
  1838  017A  118A  24BF  118A   	fcall	_setPA0
  1839  017D                     l5162:	
  1840                           
  1841                           ;main.c: 1056: ucTimerDelay = 0;
  1842  017D  01DE               	clrf	main@ucTimerDelay
  1843  017E  2973               	goto	l5156
  1844  017F                     l5166:	
  1845                           
  1846                           ;main.c: 1059: else
  1847                           ;main.c: 1060: ucTimerDelay++;
  1848  017F  0ADE               	incf	main@ucTimerDelay,f
  1849  0180  2833               	goto	l4998
  1850  0181                     l5168:	
  1851                           
  1852                           ;main.c: 1065: {
  1853                           ;main.c: 1066: if(ucTimerDelay >= 5)
  1854  0181  3005               	movlw	5
  1855  0182  025E               	subwf	main@ucTimerDelay,w
  1856  0183  1C03               	skipc
  1857  0184  297F               	goto	l5166
  1858                           
  1859                           ;main.c: 1067: {
  1860                           ;main.c: 1068: setPB0(1);
  1861  0185  3001               	movlw	1
  1862  0186  118A  24A7  118A   	fcall	_setPB0
  1863  0189  297D               	goto	l5162
  1864  018A                     l5178:	
  1865                           
  1866                           ;main.c: 1079: {
  1867                           ;main.c: 1080: if(ucTimerDelay >= 5)
  1868  018A  3005               	movlw	5
  1869  018B  025E               	subwf	main@ucTimerDelay,w
  1870  018C  1C03               	skipc
  1871  018D  297F               	goto	l5166
  1872                           
  1873                           ;main.c: 1081: {
  1874                           ;main.c: 1082: setPB1(1);
  1875  018E  3001               	movlw	1
  1876  018F  118A  24AF  118A   	fcall	_setPB1
  1877  0192  297D               	goto	l5162
  1878  0193                     l5188:	
  1879                           
  1880                           ;main.c: 1092: {
  1881                           ;main.c: 1093: if(ucTimerDelay >= 5)
  1882  0193  3005               	movlw	5
  1883  0194  025E               	subwf	main@ucTimerDelay,w
  1884  0195  1C03               	skipc
  1885  0196  297F               	goto	l5166
  1886                           
  1887                           ;main.c: 1094: {
  1888                           ;main.c: 1095: setPB2(1);
  1889  0197  3001               	movlw	1
  1890  0198  118A  24B7  118A   	fcall	_setPB2
  1891  019B  297D               	goto	l5162
  1892  019C                     l5198:	
  1893                           
  1894                           ;main.c: 1105: {
  1895                           ;main.c: 1106: if(ucTimerDelay >= 5)
  1896  019C  3005               	movlw	5
  1897  019D  025E               	subwf	main@ucTimerDelay,w
  1898  019E  1C03               	skipc
  1899  019F  297F               	goto	l5166
  1900                           
  1901                           ;main.c: 1107: {
  1902                           ;main.c: 1108: setPA1(0);
  1903  01A0  3000               	movlw	0
  1904  01A1  118A  24C8  118A   	fcall	_setPA1
  1905                           
  1906                           ;main.c: 1109: setPA0(0);
  1907  01A4  3000               	movlw	0
  1908  01A5  118A  24BF  118A   	fcall	_setPA0
  1909                           
  1910                           ;main.c: 1110: setPB0(0);
  1911  01A8  3000               	movlw	0
  1912  01A9  118A  24A7  118A   	fcall	_setPB0
  1913                           
  1914                           ;main.c: 1111: setPB1(0);
  1915  01AC  3000               	movlw	0
  1916  01AD  118A  24AF  118A   	fcall	_setPB1
  1917                           
  1918                           ;main.c: 1112: setPB2(0);
  1919  01B0  3000               	movlw	0
  1920  01B1  118A  24B7  118A   	fcall	_setPB2
  1921  01B4  297D               	goto	l5162
  1922  01B5                     l5208:	
  1923                           
  1924                           ;main.c: 1122: {
  1925                           ;main.c: 1123: if(ucTimerDelay >= 1)
  1926  01B5  085E               	movf	main@ucTimerDelay,w
  1927  01B6  1903               	btfsc	3,2
  1928  01B7  297F               	goto	l5166
  1929                           
  1930                           ;main.c: 1124: {
  1931                           ;main.c: 1125: ucTimerDelay = 0;
  1932  01B8  01DE               	clrf	main@ucTimerDelay
  1933                           
  1934                           ;main.c: 1127: ucLoaderStep = 0;
  1935  01B9  01D8               	clrf	main@ucLoaderStep
  1936  01BA                     l5212:	
  1937                           
  1938                           ;main.c: 1128: ucADC4_Step = ADC4_STEP_THIRD;
  1939  01BA  3003               	movlw	3
  1940  01BB  2B36               	goto	L6
  1941  01BC                     l5218:	
  1942                           ;main.c: 1129: }
  1943                           
  1944  01BC  0858               	movf	main@ucLoaderStep,w
  1945                           
  1946                           ; Switch size 1, requested type "space"
  1947                           ; Number of cases is 7, Range of values is 0 to 6
  1948                           ; switch strategies available:
  1949                           ; Name         Instructions Cycles
  1950                           ; direct_byte           21     7 (fixed)
  1951                           ; simple_byte           22    12 (average)
  1952                           ; jumptable            260     6 (fixed)
  1953                           ; rangetable            11     6 (fixed)
  1954                           ; spacedrange           20     9 (fixed)
  1955                           ; locatedrange           7     3 (fixed)
  1956                           ;	Chosen strategy is direct_byte
  1957  01BD  0084               	movwf	4
  1958  01BE  3007               	movlw	7
  1959  01BF  0204               	subwf	4,w
  1960  01C0  1803               	skipnc
  1961  01C1  2833               	goto	l4998
  1962  01C2  3008               	movlw	high S5804
  1963  01C3  008A               	movwf	10
  1964  01C4  1003               	clrc
  1965  01C5  0D04               	rlf	4,w
  1966  01C6  3E00               	addlw	low S5804
  1967  01C7  0082               	movwf	2
  1968  01C8                     l5220:	
  1969                           
  1970                           ;main.c: 1150: {
  1971                           ;main.c: 1151: setPA1(1);
  1972  01C8  3001               	movlw	1
  1973  01C9  118A  24C8  118A   	fcall	_setPA1
  1974  01CC                     l5222:	
  1975                           
  1976                           ;main.c: 1152: ucLoaderStep1++;
  1977  01CC  0AD9               	incf	main@ucLoaderStep1,f
  1978                           
  1979                           ;main.c: 1153: break;
  1980  01CD  2833               	goto	l4998
  1981  01CE                     l5224:	
  1982                           
  1983                           ;main.c: 1157: {
  1984                           ;main.c: 1158: if(ucTimerDelay1 >= 5)
  1985  01CE  3005               	movlw	5
  1986  01CF  025F               	subwf	main@ucTimerDelay1,w
  1987  01D0  1C03               	skipc
  1988  01D1  29D8               	goto	l5232
  1989                           
  1990                           ;main.c: 1159: {
  1991                           ;main.c: 1160: setPA0(1);
  1992  01D2  3001               	movlw	1
  1993  01D3  118A  24BF  118A   	fcall	_setPA0
  1994  01D6                     l5228:	
  1995                           
  1996                           ;main.c: 1161: ucTimerDelay1 = 0;
  1997  01D6  01DF               	clrf	main@ucTimerDelay1
  1998  01D7  29CC               	goto	l5222
  1999  01D8                     l5232:	
  2000                           
  2001                           ;main.c: 1164: else
  2002                           ;main.c: 1165: ucTimerDelay1++;
  2003  01D8  0ADF               	incf	main@ucTimerDelay1,f
  2004  01D9  2833               	goto	l4998
  2005  01DA                     l5234:	
  2006                           
  2007                           ;main.c: 1170: {
  2008                           ;main.c: 1171: if(ucTimerDelay1 >= 5)
  2009  01DA  3005               	movlw	5
  2010  01DB  025F               	subwf	main@ucTimerDelay1,w
  2011  01DC  1C03               	skipc
  2012  01DD  29D8               	goto	l5232
  2013                           
  2014                           ;main.c: 1172: {
  2015                           ;main.c: 1173: setPB0(1);
  2016  01DE  3001               	movlw	1
  2017  01DF  118A  24A7  118A   	fcall	_setPB0
  2018  01E2  29D6               	goto	l5228
  2019  01E3                     l5244:	
  2020                           
  2021                           ;main.c: 1183: {
  2022                           ;main.c: 1184: if(ucTimerDelay1 >= 5)
  2023  01E3  3005               	movlw	5
  2024  01E4  025F               	subwf	main@ucTimerDelay1,w
  2025  01E5  1C03               	skipc
  2026  01E6  29D8               	goto	l5232
  2027                           
  2028                           ;main.c: 1185: {
  2029                           ;main.c: 1187: setPB1(1);
  2030  01E7  3001               	movlw	1
  2031  01E8  118A  24AF  118A   	fcall	_setPB1
  2032  01EB  29D6               	goto	l5228
  2033  01EC                     l5254:	
  2034                           
  2035                           ;main.c: 1197: {
  2036                           ;main.c: 1198: if(ucTimerDelay1 >= 5)
  2037  01EC  3005               	movlw	5
  2038  01ED  025F               	subwf	main@ucTimerDelay1,w
  2039  01EE  1C03               	skipc
  2040  01EF  29D8               	goto	l5232
  2041                           
  2042                           ;main.c: 1199: {
  2043                           ;main.c: 1201: setPB2(1);
  2044  01F0  3001               	movlw	1
  2045  01F1  118A  24B7  118A   	fcall	_setPB2
  2046  01F4  29D6               	goto	l5228
  2047  01F5                     l5264:	
  2048                           
  2049                           ;main.c: 1211: {
  2050                           ;main.c: 1212: if(ucTimerDelay1 >= 5)
  2051  01F5  3005               	movlw	5
  2052  01F6  025F               	subwf	main@ucTimerDelay1,w
  2053  01F7  1C03               	skipc
  2054  01F8  29D8               	goto	l5232
  2055                           
  2056                           ;main.c: 1213: {
  2057                           ;main.c: 1214: setPA0(0);
  2058  01F9  3000               	movlw	0
  2059  01FA  118A  24BF  118A   	fcall	_setPA0
  2060                           
  2061                           ;main.c: 1216: setPB0(0);
  2062  01FD  3000               	movlw	0
  2063  01FE  118A  24A7  118A   	fcall	_setPB0
  2064                           
  2065                           ;main.c: 1218: setPB1(0);
  2066  0201  3000               	movlw	0
  2067  0202  118A  24AF  118A   	fcall	_setPB1
  2068                           
  2069                           ;main.c: 1220: setPB2(0);
  2070  0205  3000               	movlw	0
  2071  0206  118A  24B7  118A   	fcall	_setPB2
  2072  0209  29D6               	goto	l5228
  2073  020A                     l5274:	
  2074                           
  2075                           ;main.c: 1230: {
  2076                           ;main.c: 1231: if(ucTimerDelay1 >= 1)
  2077  020A  085F               	movf	main@ucTimerDelay1,w
  2078  020B  1903               	btfsc	3,2
  2079  020C  29D8               	goto	l5232
  2080                           
  2081                           ;main.c: 1232: {
  2082                           ;main.c: 1233: ucTimerDelay1 = 0;
  2083  020D  01DF               	clrf	main@ucTimerDelay1
  2084                           
  2085                           ;main.c: 1235: ucLoaderStep1 = 0;
  2086  020E  01D9               	clrf	main@ucLoaderStep1
  2087  020F  29BA               	goto	l5212
  2088  0210                     l5284:	
  2089  0210  0859               	movf	main@ucLoaderStep1,w
  2090                           
  2091                           ; Switch size 1, requested type "space"
  2092                           ; Number of cases is 7, Range of values is 0 to 6
  2093                           ; switch strategies available:
  2094                           ; Name         Instructions Cycles
  2095                           ; direct_byte           21     7 (fixed)
  2096                           ; simple_byte           22    12 (average)
  2097                           ; jumptable            260     6 (fixed)
  2098                           ; rangetable            11     6 (fixed)
  2099                           ; spacedrange           20     9 (fixed)
  2100                           ; locatedrange           7     3 (fixed)
  2101                           ;	Chosen strategy is direct_byte
  2102  0211  0084               	movwf	4
  2103  0212  3007               	movlw	7
  2104  0213  0204               	subwf	4,w
  2105  0214  1803               	skipnc
  2106  0215  2833               	goto	l4998
  2107  0216  3008               	movlw	high S5806
  2108  0217  008A               	movwf	10
  2109  0218  1003               	clrc
  2110  0219  0D04               	rlf	4,w
  2111  021A  3E0E               	addlw	low S5806
  2112  021B  0082               	movwf	2
  2113  021C                     l5286:	
  2114                           
  2115                           ;main.c: 1259: {
  2116                           ;main.c: 1261: setPA1(1);
  2117  021C  3001               	movlw	1
  2118  021D  118A  24C8  118A   	fcall	_setPA1
  2119                           
  2120                           ;main.c: 1263: setPA0(1);
  2121  0220  3001               	movlw	1
  2122  0221  118A  24BF  118A   	fcall	_setPA0
  2123  0224                     l5288:	
  2124                           
  2125                           ;main.c: 1264: ucLoaderStep2++;
  2126  0224  0ADA               	incf	main@ucLoaderStep2,f
  2127                           
  2128                           ;main.c: 1265: break;
  2129  0225  2833               	goto	l4998
  2130  0226                     l5290:	
  2131                           
  2132                           ;main.c: 1269: {
  2133                           ;main.c: 1270: if(ucTimerDelay2 >= 5)
  2134  0226  3005               	movlw	5
  2135  0227  0260               	subwf	main@ucTimerDelay2,w
  2136  0228  1C03               	skipc
  2137  0229  2A30               	goto	l5298
  2138                           
  2139                           ;main.c: 1271: {
  2140                           ;main.c: 1273: setPB0(1);
  2141  022A  3001               	movlw	1
  2142  022B  118A  24A7  118A   	fcall	_setPB0
  2143  022E                     l5294:	
  2144                           
  2145                           ;main.c: 1274: ucTimerDelay2 = 0;
  2146  022E  01E0               	clrf	main@ucTimerDelay2
  2147  022F  2A24               	goto	l5288
  2148  0230                     l5298:	
  2149                           
  2150                           ;main.c: 1277: else
  2151                           ;main.c: 1278: ucTimerDelay2++;
  2152  0230  0AE0               	incf	main@ucTimerDelay2,f
  2153  0231  2833               	goto	l4998
  2154  0232                     l5300:	
  2155                           
  2156                           ;main.c: 1283: {
  2157                           ;main.c: 1284: if(ucTimerDelay2 >= 5)
  2158  0232  3005               	movlw	5
  2159  0233  0260               	subwf	main@ucTimerDelay2,w
  2160  0234  1C03               	skipc
  2161  0235  2A30               	goto	l5298
  2162                           
  2163                           ;main.c: 1285: {
  2164                           ;main.c: 1287: setPB1(1);
  2165  0236  3001               	movlw	1
  2166  0237  118A  24AF  118A   	fcall	_setPB1
  2167  023A  2A2E               	goto	l5294
  2168  023B                     l5310:	
  2169                           
  2170                           ;main.c: 1297: {
  2171                           ;main.c: 1298: if(ucTimerDelay2 >= 5)
  2172  023B  3005               	movlw	5
  2173  023C  0260               	subwf	main@ucTimerDelay2,w
  2174  023D  1C03               	skipc
  2175  023E  2A30               	goto	l5298
  2176                           
  2177                           ;main.c: 1299: {
  2178                           ;main.c: 1301: setPB2(1);
  2179  023F  3001               	movlw	1
  2180  0240  118A  24B7  118A   	fcall	_setPB2
  2181  0243  2A2E               	goto	l5294
  2182  0244                     l5320:	
  2183                           
  2184                           ;main.c: 1311: {
  2185                           ;main.c: 1312: if(ucTimerDelay2 >= 5)
  2186  0244  3005               	movlw	5
  2187  0245  0260               	subwf	main@ucTimerDelay2,w
  2188  0246  1C03               	skipc
  2189  0247  2A30               	goto	l5298
  2190                           
  2191                           ;main.c: 1313: {
  2192                           ;main.c: 1316: setPB0(0);
  2193  0248  3000               	movlw	0
  2194  0249  118A  24A7  118A   	fcall	_setPB0
  2195                           
  2196                           ;main.c: 1318: setPB1(0);
  2197  024C  3000               	movlw	0
  2198  024D  118A  24AF  118A   	fcall	_setPB1
  2199                           
  2200                           ;main.c: 1320: setPB2(0);
  2201  0250  3000               	movlw	0
  2202  0251  118A  24B7  118A   	fcall	_setPB2
  2203  0254  2A2E               	goto	l5294
  2204  0255                     l5330:	
  2205                           
  2206                           ;main.c: 1330: {
  2207                           ;main.c: 1331: if(ucTimerDelay2 >= 1)
  2208  0255  0860               	movf	main@ucTimerDelay2,w
  2209  0256  1903               	btfsc	3,2
  2210  0257  2A30               	goto	l5298
  2211                           
  2212                           ;main.c: 1332: {
  2213                           ;main.c: 1333: ucTimerDelay2 = 0;
  2214  0258  01E0               	clrf	main@ucTimerDelay2
  2215                           
  2216                           ;main.c: 1335: ucLoaderStep2 = 0;
  2217  0259  01DA               	clrf	main@ucLoaderStep2
  2218  025A  29BA               	goto	l5212
  2219  025B                     l5340:	
  2220  025B  085A               	movf	main@ucLoaderStep2,w
  2221                           
  2222                           ; Switch size 1, requested type "space"
  2223                           ; Number of cases is 6, Range of values is 0 to 5
  2224                           ; switch strategies available:
  2225                           ; Name         Instructions Cycles
  2226                           ; direct_byte           19     7 (fixed)
  2227                           ; simple_byte           19    10 (average)
  2228                           ; jumptable            260     6 (fixed)
  2229                           ; rangetable            10     6 (fixed)
  2230                           ; spacedrange           18     9 (fixed)
  2231                           ; locatedrange           6     3 (fixed)
  2232                           ;	Chosen strategy is direct_byte
  2233  025C  0084               	movwf	4
  2234  025D  3006               	movlw	6
  2235  025E  0204               	subwf	4,w
  2236  025F  1803               	skipnc
  2237  0260  2833               	goto	l4998
  2238  0261  3007               	movlw	high S5808
  2239  0262  008A               	movwf	10
  2240  0263  1003               	clrc
  2241  0264  0D04               	rlf	4,w
  2242  0265  3EF4               	addlw	low S5808
  2243  0266  0082               	movwf	2
  2244  0267                     l5342:	
  2245                           
  2246                           ;main.c: 1359: {
  2247                           ;main.c: 1361: setPB0(1);
  2248  0267  3001               	movlw	1
  2249  0268  118A  24A7  118A   	fcall	_setPB0
  2250                           
  2251                           ;main.c: 1363: setPA0(1);
  2252  026B  3001               	movlw	1
  2253  026C  118A  24BF  118A   	fcall	_setPA0
  2254                           
  2255                           ;main.c: 1365: setPA1(1);
  2256  026F  3001               	movlw	1
  2257  0270  118A  24C8  118A   	fcall	_setPA1
  2258  0273                     l5344:	
  2259                           
  2260                           ;main.c: 1366: ucLoaderStep3++;
  2261  0273  0ADB               	incf	main@ucLoaderStep3,f
  2262                           
  2263                           ;main.c: 1367: break;
  2264  0274  2833               	goto	l4998
  2265  0275                     l5346:	
  2266                           
  2267                           ;main.c: 1371: {
  2268                           ;main.c: 1372: if(ucTimerDelay3 >= 5)
  2269  0275  3005               	movlw	5
  2270  0276  0261               	subwf	main@ucTimerDelay3,w
  2271  0277  1C03               	skipc
  2272  0278  2A7F               	goto	l5354
  2273                           
  2274                           ;main.c: 1373: {
  2275                           ;main.c: 1375: setPB1(1);
  2276  0279  3001               	movlw	1
  2277  027A  118A  24AF  118A   	fcall	_setPB1
  2278  027D                     l5350:	
  2279                           
  2280                           ;main.c: 1376: ucTimerDelay3 = 0;
  2281  027D  01E1               	clrf	main@ucTimerDelay3
  2282  027E  2A73               	goto	l5344
  2283  027F                     l5354:	
  2284                           
  2285                           ;main.c: 1379: else
  2286                           ;main.c: 1380: ucTimerDelay3++;
  2287  027F  0AE1               	incf	main@ucTimerDelay3,f
  2288  0280  2833               	goto	l4998
  2289  0281                     l5356:	
  2290                           
  2291                           ;main.c: 1385: {
  2292                           ;main.c: 1386: if(ucTimerDelay3 >= 5)
  2293  0281  3005               	movlw	5
  2294  0282  0261               	subwf	main@ucTimerDelay3,w
  2295  0283  1C03               	skipc
  2296  0284  2A7F               	goto	l5354
  2297                           
  2298                           ;main.c: 1387: {
  2299                           ;main.c: 1389: setPB2(1);
  2300  0285  3001               	movlw	1
  2301  0286  118A  24B7  118A   	fcall	_setPB2
  2302  0289  2A7D               	goto	l5350
  2303  028A                     l5366:	
  2304                           
  2305                           ;main.c: 1400: {
  2306                           ;main.c: 1401: if(ucTimerDelay3 >= 5)
  2307  028A  3005               	movlw	5
  2308  028B  0261               	subwf	main@ucTimerDelay3,w
  2309  028C  1C03               	skipc
  2310  028D  2A7F               	goto	l5354
  2311                           
  2312                           ;main.c: 1402: {
  2313                           ;main.c: 1405: setPB1(0);
  2314  028E  3000               	movlw	0
  2315  028F  118A  24AF  118A   	fcall	_setPB1
  2316                           
  2317                           ;main.c: 1407: setPB2(0);
  2318  0292  3000               	movlw	0
  2319  0293  118A  24B7  118A   	fcall	_setPB2
  2320  0296  2A7D               	goto	l5350
  2321  0297                     l5376:	
  2322                           
  2323                           ;main.c: 1417: {
  2324                           ;main.c: 1418: if(ucTimerDelay3 >= 1)
  2325  0297  0861               	movf	main@ucTimerDelay3,w
  2326  0298  1903               	btfsc	3,2
  2327  0299  2A7F               	goto	l5354
  2328                           
  2329                           ;main.c: 1419: {
  2330                           ;main.c: 1420: ucTimerDelay3 = 0;
  2331  029A  01E1               	clrf	main@ucTimerDelay3
  2332                           
  2333                           ;main.c: 1422: ucLoaderStep3 = 0;
  2334  029B  01DB               	clrf	main@ucLoaderStep3
  2335  029C  29BA               	goto	l5212
  2336  029D                     l5386:	
  2337  029D  085B               	movf	main@ucLoaderStep3,w
  2338                           
  2339                           ; Switch size 1, requested type "space"
  2340                           ; Number of cases is 5, Range of values is 0 to 4
  2341                           ; switch strategies available:
  2342                           ; Name         Instructions Cycles
  2343                           ; simple_byte           16     9 (average)
  2344                           ; direct_byte           17     7 (fixed)
  2345                           ; jumptable            260     6 (fixed)
  2346                           ; rangetable             9     6 (fixed)
  2347                           ; spacedrange           16     9 (fixed)
  2348                           ; locatedrange           5     3 (fixed)
  2349                           ;	Chosen strategy is simple_byte
  2350  029E  3A00               	xorlw	0	; case 0
  2351  029F  1903               	skipnz
  2352  02A0  2A67               	goto	l5342
  2353  02A1  3A01               	xorlw	1	; case 1
  2354  02A2  1903               	skipnz
  2355  02A3  2A75               	goto	l5346
  2356  02A4  3A03               	xorlw	3	; case 2
  2357  02A5  1903               	skipnz
  2358  02A6  2A81               	goto	l5356
  2359  02A7  3A01               	xorlw	1	; case 3
  2360  02A8  1903               	skipnz
  2361  02A9  2A8A               	goto	l5366
  2362  02AA  3A07               	xorlw	7	; case 4
  2363  02AB  1903               	skipnz
  2364  02AC  2A97               	goto	l5376
  2365  02AD  285E               	goto	l772
  2366  02AE                     l5388:	
  2367                           
  2368                           ;main.c: 1446: {
  2369                           ;main.c: 1448: setPB0(1);
  2370  02AE  3001               	movlw	1
  2371  02AF  118A  24A7  118A   	fcall	_setPB0
  2372                           
  2373                           ;main.c: 1450: setPA0(1);
  2374  02B2  3001               	movlw	1
  2375  02B3  118A  24BF  118A   	fcall	_setPA0
  2376                           
  2377                           ;main.c: 1452: setPA1(1);
  2378  02B6  3001               	movlw	1
  2379  02B7  118A  24C8  118A   	fcall	_setPA1
  2380                           
  2381                           ;main.c: 1454: setPB1(1);
  2382  02BA  3001               	movlw	1
  2383  02BB  118A  24AF  118A   	fcall	_setPB1
  2384  02BE                     l5390:	
  2385                           
  2386                           ;main.c: 1455: ucLoaderStep4++;
  2387  02BE  0ADC               	incf	main@ucLoaderStep4,f
  2388                           
  2389                           ;main.c: 1456: break;
  2390  02BF  2833               	goto	l4998
  2391  02C0                     l5392:	
  2392                           
  2393                           ;main.c: 1460: {
  2394                           ;main.c: 1461: if(ucTimerDelay4 >= 5)
  2395  02C0  3005               	movlw	5
  2396  02C1  0262               	subwf	main@ucTimerDelay4,w
  2397  02C2  1C03               	skipc
  2398  02C3  2ACA               	goto	l5400
  2399                           
  2400                           ;main.c: 1462: {
  2401                           ;main.c: 1464: setPB2(1);
  2402  02C4  3001               	movlw	1
  2403  02C5                     L7:	
  2404  02C5  118A  24B7  118A   	fcall	_setPB2
  2405                           
  2406                           ;main.c: 1465: ucTimerDelay4 = 0;
  2407  02C8  01E2               	clrf	main@ucTimerDelay4
  2408  02C9  2ABE               	goto	l5390
  2409  02CA                     l5400:	
  2410                           
  2411                           ;main.c: 1468: else
  2412                           ;main.c: 1469: ucTimerDelay4++;
  2413  02CA  0AE2               	incf	main@ucTimerDelay4,f
  2414  02CB  2833               	goto	l4998
  2415  02CC                     l5402:	
  2416                           
  2417                           ;main.c: 1474: {
  2418                           ;main.c: 1475: if(ucTimerDelay4 >= 5)
  2419  02CC  3005               	movlw	5
  2420  02CD  0262               	subwf	main@ucTimerDelay4,w
  2421  02CE  1C03               	skipc
  2422  02CF  2ACA               	goto	l5400
  2423                           
  2424                           ;main.c: 1476: {
  2425                           ;main.c: 1478: setPB2(0);
  2426  02D0  3000               	movlw	0
  2427  02D1  2AC5               	goto	L7
  2428  02D2                     l5412:	
  2429                           
  2430                           ;main.c: 1488: {
  2431                           ;main.c: 1489: if(ucTimerDelay4 >= 1)
  2432  02D2  0862               	movf	main@ucTimerDelay4,w
  2433  02D3  1903               	btfsc	3,2
  2434  02D4  2ACA               	goto	l5400
  2435                           
  2436                           ;main.c: 1490: {
  2437                           ;main.c: 1491: ucTimerDelay4 = 0;
  2438  02D5  01E2               	clrf	main@ucTimerDelay4
  2439                           
  2440                           ;main.c: 1493: ucLoaderStep4 = 0;
  2441  02D6  01DC               	clrf	main@ucLoaderStep4
  2442  02D7  29BA               	goto	l5212
  2443  02D8                     l5422:	
  2444  02D8  085C               	movf	main@ucLoaderStep4,w
  2445                           
  2446                           ; Switch size 1, requested type "space"
  2447                           ; Number of cases is 4, Range of values is 0 to 3
  2448                           ; switch strategies available:
  2449                           ; Name         Instructions Cycles
  2450                           ; simple_byte           13     7 (average)
  2451                           ; direct_byte           15     7 (fixed)
  2452                           ; jumptable            260     6 (fixed)
  2453                           ; rangetable             8     6 (fixed)
  2454                           ; spacedrange           14     9 (fixed)
  2455                           ; locatedrange           4     3 (fixed)
  2456                           ;	Chosen strategy is simple_byte
  2457  02D9  3A00               	xorlw	0	; case 0
  2458  02DA  1903               	skipnz
  2459  02DB  2AAE               	goto	l5388
  2460  02DC  3A01               	xorlw	1	; case 1
  2461  02DD  1903               	skipnz
  2462  02DE  2AC0               	goto	l5392
  2463  02DF  3A03               	xorlw	3	; case 2
  2464  02E0  1903               	skipnz
  2465  02E1  2ACC               	goto	l5402
  2466  02E2  3A01               	xorlw	1	; case 3
  2467  02E3  1903               	skipnz
  2468  02E4  2AD2               	goto	l5412
  2469  02E5  285E               	goto	l772
  2470  02E6                     l5426:	
  2471  02E6  0854               	movf	_ucChannel5Type,w
  2472                           
  2473                           ; Switch size 1, requested type "space"
  2474                           ; Number of cases is 5, Range of values is 0 to 4
  2475                           ; switch strategies available:
  2476                           ; Name         Instructions Cycles
  2477                           ; simple_byte           16     9 (average)
  2478                           ; direct_byte           17     7 (fixed)
  2479                           ; jumptable            260     6 (fixed)
  2480                           ; rangetable             9     6 (fixed)
  2481                           ; spacedrange           16     9 (fixed)
  2482                           ; locatedrange           5     3 (fixed)
  2483                           ;	Chosen strategy is simple_byte
  2484  02E7  3A00               	xorlw	0	; case 0
  2485  02E8  1903               	skipnz
  2486  02E9  29BC               	goto	l5218
  2487  02EA  3A01               	xorlw	1	; case 1
  2488  02EB  1903               	skipnz
  2489  02EC  2A10               	goto	l5284
  2490  02ED  3A03               	xorlw	3	; case 2
  2491  02EE  1903               	skipnz
  2492  02EF  2A5B               	goto	l5340
  2493  02F0  3A01               	xorlw	1	; case 3
  2494  02F1  1903               	skipnz
  2495  02F2  2A9D               	goto	l5386
  2496  02F3  3A07               	xorlw	7	; case 4
  2497  02F4  1903               	skipnz
  2498  02F5  2AD8               	goto	l5422
  2499  02F6  285E               	goto	l772
  2500  02F7                     l5428:	
  2501                           
  2502                           ;main.c: 1517: {
  2503                           ;main.c: 1521: static unsigned char ucTimerDelayP2sLess = 0;
  2504                           ;main.c: 1523: static unsigned char ucTimerDelayP2sMore = 0;
  2505                           ;main.c: 1525: if( getAdOriginalCh6Value() <= 150 )
  2506  02F7  118A  262E  118A   	fcall	_getAdOriginalCh6Value
  2507  02FA  3000               	movlw	0
  2508  02FB  0247               	subwf	?_getAdOriginalCh6Value+1,w
  2509  02FC  3097               	movlw	151
  2510  02FD  1903               	skipnz
  2511  02FE  0246               	subwf	?_getAdOriginalCh6Value,w
  2512  02FF  1803               	skipnc
  2513  0300  2B04               	goto	l5434
  2514                           
  2515                           ;main.c: 1526: {
  2516                           ;main.c: 1527: ucTimerDelayP2sLess++;
  2517  0301  0AE3               	incf	main@ucTimerDelayP2sLess,f
  2518                           
  2519                           ;main.c: 1528: ucTimerDelayP2sMore = 0;
  2520  0302  01E4               	clrf	main@ucTimerDelayP2sMore
  2521                           
  2522                           ;main.c: 1529: }
  2523  0303  2B06               	goto	l5438
  2524  0304                     l5434:	
  2525                           
  2526                           ;main.c: 1530: else
  2527                           ;main.c: 1531: {
  2528                           ;main.c: 1532: ucTimerDelayP2sMore++;
  2529  0304  0AE4               	incf	main@ucTimerDelayP2sMore,f
  2530                           
  2531                           ;main.c: 1533: ucTimerDelayP2sLess = 0;
  2532  0305  01E3               	clrf	main@ucTimerDelayP2sLess
  2533  0306                     l5438:	
  2534                           
  2535                           ;main.c: 1534: }
  2536                           ;main.c: 1536: if(ucTimerDelayP2sLess > 200)
  2537  0306  30C9               	movlw	201
  2538  0307  0263               	subwf	main@ucTimerDelayP2sLess,w
  2539  0308  1C03               	skipc
  2540  0309  2B0C               	goto	l972
  2541                           
  2542                           ;main.c: 1537: ucTimerDelayP2sLess = 2;
  2543  030A  3002               	movlw	2
  2544  030B  00E3               	movwf	main@ucTimerDelayP2sLess
  2545  030C                     l972:	
  2546                           
  2547                           ;main.c: 1540: if(ucTimerDelayP2sMore > 200)
  2548  030C  30C9               	movlw	201
  2549  030D  0264               	subwf	main@ucTimerDelayP2sMore,w
  2550                           
  2551                           ;main.c: 1541: ucTimerDelayP2sMore = 2;
  2552  030E  3002               	movlw	2
  2553  030F  1803               	btfsc	3,0
  2554  0310  00E4               	movwf	main@ucTimerDelayP2sMore
  2555                           
  2556                           ;main.c: 1543: if( ucTimerDelayP2sLess >= 2)
  2557  0311  0263               	subwf	main@ucTimerDelayP2sLess,w
  2558  0312  1C03               	skipc
  2559  0313  2B28               	goto	l5454
  2560                           
  2561                           ;main.c: 1544: {
  2562                           ;main.c: 1545: ucTimerDelayP2sLess = 0;
  2563  0314  01E3               	clrf	main@ucTimerDelayP2sLess
  2564                           
  2565                           ;main.c: 1546: ucTimerDelayP2sMore = 0;
  2566  0315  01E4               	clrf	main@ucTimerDelayP2sMore
  2567                           
  2568                           ;main.c: 1548: startTwentySecondsTimer();
  2569  0316  158A  2727  118A   	fcall	_startTwentySecondsTimer
  2570                           
  2571                           ;main.c: 1550: if( !isFinishedTwentySecondsTimer() )
  2572  0319  158A  26F9  118A   	fcall	_isFinishedTwentySecondsTimer
  2573  031C  3800               	iorlw	0
  2574  031D  1D03               	skipz
  2575  031E  2B23               	goto	l5452
  2576  031F                     l5450:	
  2577                           
  2578                           ;main.c: 1551: {
  2579                           ;main.c: 1556: vHandle20sTimeron();
  2580  031F  118A  253D  118A   	fcall	_vHandle20sTimeron
  2581                           
  2582                           ;main.c: 1557: }
  2583  0322  2833               	goto	l4998
  2584  0323                     l5452:	
  2585                           
  2586                           ;main.c: 1558: else
  2587                           ;main.c: 1560: {
  2588                           ;main.c: 1564: vHandle20sTimerOut(0);
  2589  0323  3000               	movlw	0
  2590  0324  118A  24E4  118A   	fcall	_vHandle20sTimerOut
  2591  0327  2833               	goto	l4998
  2592  0328                     l5454:	
  2593                           
  2594                           ;main.c: 1567: else if(ucTimerDelayP2sMore >= 2)
  2595  0328  3002               	movlw	2
  2596  0329  0264               	subwf	main@ucTimerDelayP2sMore,w
  2597  032A  1C03               	skipc
  2598  032B  2833               	goto	l4998
  2599                           
  2600                           ;main.c: 1568: {
  2601                           ;main.c: 1569: ucTimerDelayP2sMore = 0;
  2602  032C  01E4               	clrf	main@ucTimerDelayP2sMore
  2603                           
  2604                           ;main.c: 1570: ucTimerDelayP2sLess = 0;
  2605  032D  01E3               	clrf	main@ucTimerDelayP2sLess
  2606  032E  2B1F               	goto	l5450
  2607  032F                     l5460:	
  2608  032F  3004               	movlw	4
  2609                           
  2610                           ;main.c: 1899: {
  2611                           ;main.c: 1903: static unsigned char ucFourthSuffix1TimerP3s = 0;
  2612                           ;main.c: 1905: ucFourthSuffix1TimerP3s++;
  2613  0330  0AD7               	incf	main@ucFourthSuffix1TimerP3s,f
  2614                           
  2615                           ;main.c: 1907: if( ucFourthSuffix1TimerP3s > 3)
  2616  0331  0257               	subwf	main@ucFourthSuffix1TimerP3s,w
  2617  0332  1C03               	skipc
  2618  0333  2833               	goto	l4998
  2619  0334  300C               	movlw	12
  2620                           
  2621                           ;main.c: 1908: {
  2622                           ;main.c: 1909: ucFourthSuffix1TimerP3s = 0;
  2623  0335  01D7               	clrf	main@ucFourthSuffix1TimerP3s
  2624  0336                     L6:	
  2625                           ;main.c: 1910: ucADC4_Step = ADC4_STEP_FOURTH_SUFFIX2;
  2626                           
  2627  0336  00D3               	movwf	_ucADC4_Step
  2628  0337  2833               	goto	l4998
  2629  0338                     l5468:	
  2630                           
  2631                           ;main.c: 1917: {
  2632                           ;main.c: 1922: setPA6(0);
  2633  0338  3000               	movlw	0
  2634  0339  158A  26CE  118A   	fcall	_setPA6
  2635                           
  2636                           ;main.c: 1924: clearPinPortAndTimer();
  2637  033C  118A  2485  118A   	fcall	_clearPinPortAndTimer
  2638                           
  2639                           ;main.c: 1925: ucADC4_Step = ADC4_STEP_INIT;
  2640  033F  01D3               	clrf	_ucADC4_Step
  2641                           
  2642                           ;main.c: 1927: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  2643  0340  01D0               	clrf	_enumMainLoopStep
  2644  0341  0AD0               	incf	_enumMainLoopStep,f
  2645                           
  2646                           ;main.c: 1928: break;
  2647  0342  2833               	goto	l4998
  2648  0343                     l5478:	
  2649  0343  1283               	bcf	3,5	;RP0=0, select bank0
  2650  0344  0853               	movf	_ucADC4_Step,w
  2651                           
  2652                           ; Switch size 1, requested type "space"
  2653                           ; Number of cases is 7, Range of values is 0 to 12
  2654                           ; switch strategies available:
  2655                           ; Name         Instructions Cycles
  2656                           ; simple_byte           22    12 (average)
  2657                           ; direct_byte           33     7 (fixed)
  2658                           ; jumptable            260     6 (fixed)
  2659                           ; rangetable            17     6 (fixed)
  2660                           ; spacedrange           32     9 (fixed)
  2661                           ; locatedrange          13     3 (fixed)
  2662                           ;	Chosen strategy is simple_byte
  2663  0345  3A00               	xorlw	0	; case 0
  2664  0346  1903               	skipnz
  2665  0347  28EA               	goto	l813
  2666  0348  3A01               	xorlw	1	; case 1
  2667  0349  1903               	skipnz
  2668  034A  28ED               	goto	l5104
  2669  034B  3A03               	xorlw	3	; case 2
  2670  034C  1903               	skipnz
  2671  034D  2AE6               	goto	l5426
  2672  034E  3A01               	xorlw	1	; case 3
  2673  034F  1903               	skipnz
  2674  0350  2AF7               	goto	l5428
  2675  0351  3A09               	xorlw	9	; case 10
  2676  0352  1903               	skipnz
  2677  0353  285E               	goto	l772
  2678  0354  3A01               	xorlw	1	; case 11
  2679  0355  1903               	skipnz
  2680  0356  2B2F               	goto	l5460
  2681  0357  3A07               	xorlw	7	; case 12
  2682  0358  1903               	skipnz
  2683  0359  2B38               	goto	l5468
  2684  035A  285E               	goto	l772
  2685  035B                     l991:	
  2686                           ;main.c: 1954: {
  2687                           ;main.c: 1955: case HOUR_3_BRANCH_STEP_FIRST:
  2688                           
  2689                           
  2690                           ;main.c: 1956: {
  2691                           ;main.c: 1958: PB7 = 1;
  2692  035B  1283               	bcf	3,5	;RP0=0, select bank0
  2693  035C  1786               	bsf	6,7
  2694                           
  2695                           ;main.c: 1959: PBOD7 = 1;
  2696  035D  1683               	bsf	3,5	;RP0=1, select bank3
  2697  035E  30B4               	movlw	180
  2698  035F  1703               	bsf	3,6	;RP1=1, select bank3
  2699  0360  1788               	bsf	8,7
  2700                           
  2701                           ;main.c: 1964: startThreeHoursTimer(180);
  2702  0361  1283               	bcf	3,5	;RP0=0, select bank0
  2703  0362  1303               	bcf	3,6	;RP1=0, select bank0
  2704  0363  00A0               	movwf	?_startThreeHoursTimer
  2705  0364  01A1               	clrf	?_startThreeHoursTimer+1
  2706  0365  158A  2760  118A   	fcall	_startThreeHoursTimer
  2707                           
  2708                           ;main.c: 1968: setPA0(1);
  2709  0368  3001               	movlw	1
  2710  0369  118A  24BF  118A   	fcall	_setPA0
  2711                           
  2712                           ;main.c: 1970: setPA1(1);
  2713  036C  3001               	movlw	1
  2714  036D  118A  24C8  118A   	fcall	_setPA1
  2715                           
  2716                           ;main.c: 1972: setPB0(1);
  2717  0370  3001               	movlw	1
  2718  0371  118A  24A7  118A   	fcall	_setPB0
  2719                           
  2720                           ;main.c: 1974: setPB1(1);
  2721  0374  3001               	movlw	1
  2722  0375  118A  24AF  118A   	fcall	_setPB1
  2723                           
  2724                           ;main.c: 1976: setPB2(1);
  2725  0378  3001               	movlw	1
  2726  0379  118A  24B7  118A   	fcall	_setPB2
  2727                           
  2728                           ;main.c: 1978: setPB4(0);
  2729  037C  3000               	movlw	0
  2730  037D  118A  2535  118A   	fcall	_setPB4
  2731                           
  2732                           ;main.c: 1980: enumBranchStep = HOUR_3_BRANCH_STEP_SECOND;
  2733  0380  1683               	bsf	3,5	;RP0=1, select bank1
  2734  0381  01AF               	clrf	main@enumBranchStep^(0+128)
  2735  0382  0AAF               	incf	main@enumBranchStep^(0+128),f
  2736                           
  2737                           ;main.c: 1981: break;
  2738  0383  2833               	goto	l4998
  2739  0384                     l5484:	
  2740                           
  2741                           ;main.c: 1985: {
  2742                           ;main.c: 1990: enumBranchStep = HOUR_3_BRANCH_STEP_THIRD;
  2743  0384  3002               	movlw	2
  2744  0385  00AF               	movwf	main@enumBranchStep^(0+128)
  2745                           
  2746                           ;main.c: 1991: break;
  2747  0386  2833               	goto	l4998
  2748  0387                     l5486:	
  2749                           
  2750                           ;main.c: 1995: {
  2751                           ;main.c: 1999: if( (isFinishedTwelveHoursTimer()) || (isFinishedThreeHoursTimer()))
  2752  0387  158A  270F  118A   	fcall	_isFinishedTwelveHoursTimer
  2753  038A  3800               	iorlw	0
  2754  038B  1D03               	skipz
  2755  038C  2B93               	goto	l5490
  2756  038D  158A  271B  118A   	fcall	_isFinishedThreeHoursTimer
  2757  0390  3A00               	xorlw	0
  2758  0391  1903               	skipnz
  2759  0392  2B96               	goto	l5494
  2760  0393                     l5490:	
  2761                           
  2762                           ;main.c: 2000: {
  2763                           ;main.c: 2001: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2764  0393  1683               	bsf	3,5	;RP0=1, select bank1
  2765  0394  01AF               	clrf	main@enumBranchStep^(0+128)
  2766  0395  285B               	goto	l5018
  2767  0396                     l5494:	
  2768                           
  2769                           ;main.c: 2004: else
  2770                           ;main.c: 2005: {
  2771                           ;main.c: 2006: static unsigned char ucTimerX1P5s = 0;
  2772                           ;main.c: 2008: static unsigned char ucTimerLessX1P5s = 0;
  2773                           ;main.c: 2010: if(getAdOriginalCh6Value() <= 85)
  2774  0396  118A  262E  118A   	fcall	_getAdOriginalCh6Value
  2775  0399  3000               	movlw	0
  2776  039A  0247               	subwf	?_getAdOriginalCh6Value+1,w
  2777  039B  3056               	movlw	86
  2778  039C  1903               	skipnz
  2779  039D  0246               	subwf	?_getAdOriginalCh6Value,w
  2780  039E  1803               	skipnc
  2781  039F  2BA4               	goto	l5500
  2782                           
  2783                           ;main.c: 2011: {
  2784                           ;main.c: 2012: ucTimerX1P5s = 0;
  2785  03A0  1683               	bsf	3,5	;RP0=1, select bank1
  2786  03A1  01B5               	clrf	main@ucTimerX1P5s^(0+128)
  2787                           
  2788                           ;main.c: 2013: ucTimerLessX1P5s++;
  2789  03A2  0AB2               	incf	main@ucTimerLessX1P5s^(0+128),f
  2790                           
  2791                           ;main.c: 2014: }
  2792  03A3  2BA7               	goto	l5504
  2793  03A4                     l5500:	
  2794                           
  2795                           ;main.c: 2015: else
  2796                           ;main.c: 2016: {
  2797                           ;main.c: 2017: ucTimerX1P5s++;
  2798  03A4  1683               	bsf	3,5	;RP0=1, select bank1
  2799  03A5  0AB5               	incf	main@ucTimerX1P5s^(0+128),f
  2800                           
  2801                           ;main.c: 2018: ucTimerLessX1P5s = 0;
  2802  03A6  01B2               	clrf	main@ucTimerLessX1P5s^(0+128)
  2803  03A7                     l5504:	
  2804                           
  2805                           ;main.c: 2019: }
  2806                           ;main.c: 2021: if(ucTimerX1P5s >= 5)
  2807  03A7  3005               	movlw	5
  2808  03A8  0235               	subwf	main@ucTimerX1P5s^(0+128),w
  2809  03A9  1C03               	skipc
  2810  03AA  2BBB               	goto	l5518
  2811                           
  2812                           ;main.c: 2022: {
  2813                           ;main.c: 2023: ucTimerX1P5s = 0;
  2814  03AB  01B5               	clrf	main@ucTimerX1P5s^(0+128)
  2815                           
  2816                           ;main.c: 2025: ucTimerLessX1P5s = 0;
  2817  03AC  01B2               	clrf	main@ucTimerLessX1P5s^(0+128)
  2818                           
  2819                           ;main.c: 2029: PBOD7 = 0;
  2820  03AD  1703               	bsf	3,6	;RP1=1, select bank3
  2821  03AE  1388               	bcf	8,7
  2822                           
  2823                           ;main.c: 2030: PB7 = 0;
  2824  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  2825  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  2826  03B1  1386               	bcf	6,7
  2827                           
  2828                           ;main.c: 2035: clearThreeHoursTimer();
  2829  03B2  118A  24DE  118A   	fcall	_clearThreeHoursTimer
  2830                           
  2831                           ;main.c: 2037: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2832  03B5  1683               	bsf	3,5	;RP0=1, select bank1
  2833  03B6  3002               	movlw	2
  2834  03B7  01AF               	clrf	main@enumBranchStep^(0+128)
  2835  03B8                     L1:	
  2836                           ;main.c: 2039: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
  2837                           
  2838  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  2839  03B9  00D0               	movwf	_enumMainLoopStep
  2840                           
  2841                           ;main.c: 2040: }
  2842  03BA  2833               	goto	l4998
  2843  03BB                     l5518:	
  2844                           
  2845                           ;main.c: 2041: else if(ucTimerLessX1P5s >= 5)
  2846  03BB  3005               	movlw	5
  2847  03BC  0232               	subwf	main@ucTimerLessX1P5s^(0+128),w
  2848  03BD  1C03               	skipc
  2849  03BE  2833               	goto	l4998
  2850                           
  2851                           ;main.c: 2042: {
  2852                           ;main.c: 2043: static unsigned char ucTimerX2P5s = 0;
  2853                           ;main.c: 2045: static unsigned char ucTimerLessX2P5s = 0;
  2854                           ;main.c: 2047: if(getAdOriginalCh6Value() > 20)
  2855  03BF  118A  262E  118A   	fcall	_getAdOriginalCh6Value
  2856  03C2  3000               	movlw	0
  2857  03C3  0247               	subwf	?_getAdOriginalCh6Value+1,w
  2858  03C4  3015               	movlw	21
  2859  03C5  1903               	skipnz
  2860  03C6  0246               	subwf	?_getAdOriginalCh6Value,w
  2861  03C7  1C03               	skipc
  2862  03C8  2BCD               	goto	l5526
  2863                           
  2864                           ;main.c: 2048: {
  2865                           ;main.c: 2049: ucTimerX2P5s++;
  2866  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  2867  03CA  0AB6               	incf	main@ucTimerX2P5s^(0+128),f
  2868                           
  2869                           ;main.c: 2050: ucTimerLessX2P5s = 0;
  2870  03CB  01B3               	clrf	main@ucTimerLessX2P5s^(0+128)
  2871                           
  2872                           ;main.c: 2051: }
  2873  03CC  2BD0               	goto	l5530
  2874  03CD                     l5526:	
  2875                           
  2876                           ;main.c: 2052: else
  2877                           ;main.c: 2053: {
  2878                           ;main.c: 2054: ucTimerX2P5s = 0;
  2879  03CD  1683               	bsf	3,5	;RP0=1, select bank1
  2880  03CE  01B6               	clrf	main@ucTimerX2P5s^(0+128)
  2881                           
  2882                           ;main.c: 2055: ucTimerLessX2P5s++;
  2883  03CF  0AB3               	incf	main@ucTimerLessX2P5s^(0+128),f
  2884  03D0                     l5530:	
  2885                           
  2886                           ;main.c: 2056: }
  2887                           ;main.c: 2058: if(ucTimerX2P5s >= 5)
  2888  03D0  3005               	movlw	5
  2889  03D1  0236               	subwf	main@ucTimerX2P5s^(0+128),w
  2890  03D2  1C03               	skipc
  2891  03D3  2BD6               	goto	l5534
  2892  03D4                     l5532:	
  2893                           
  2894                           ;main.c: 2059: {
  2895                           ;main.c: 2060: ucTimerX2P5s = 0;
  2896  03D4  01B6               	clrf	main@ucTimerX2P5s^(0+128)
  2897                           
  2898                           ;main.c: 2061: }
  2899  03D5  2833               	goto	l4998
  2900  03D6                     l5534:	
  2901                           
  2902                           ;main.c: 2062: else if(ucTimerLessX2P5s >= 5)
  2903  03D6  3005               	movlw	5
  2904  03D7  0233               	subwf	main@ucTimerLessX2P5s^(0+128),w
  2905  03D8  1C03               	skipc
  2906  03D9  2833               	goto	l4998
  2907                           
  2908                           ;main.c: 2063: {
  2909                           ;main.c: 2064: clearParaFunction1();
  2910  03DA  118A  2491  118A   	fcall	_clearParaFunction1
  2911                           
  2912                           ;main.c: 2065: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  2913  03DD  01D0               	clrf	_enumMainLoopStep
  2914  03DE  0AD0               	incf	_enumMainLoopStep,f
  2915                           
  2916                           ;main.c: 2066: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2917  03DF  1683               	bsf	3,5	;RP0=1, select bank1
  2918  03E0  01AF               	clrf	main@enumBranchStep^(0+128)
  2919                           
  2920                           ;main.c: 2068: ucTimerLessX2P5s = 0;
  2921  03E1  01B3               	clrf	main@ucTimerLessX2P5s^(0+128)
  2922  03E2  2BD4               	goto	l5532
  2923  03E3                     l5548:	
  2924  03E3  1683               	bsf	3,5	;RP0=1, select bank1
  2925  03E4  082F               	movf	main@enumBranchStep^(0+128),w
  2926                           
  2927                           ; Switch size 1, requested type "space"
  2928                           ; Number of cases is 3, Range of values is 0 to 2
  2929                           ; switch strategies available:
  2930                           ; Name         Instructions Cycles
  2931                           ; simple_byte           10     6 (average)
  2932                           ; direct_byte           13     7 (fixed)
  2933                           ; jumptable            260     6 (fixed)
  2934                           ; rangetable             7     6 (fixed)
  2935                           ; spacedrange           12     9 (fixed)
  2936                           ; locatedrange           3     3 (fixed)
  2937                           ;	Chosen strategy is simple_byte
  2938  03E5  3A00               	xorlw	0	; case 0
  2939  03E6  1903               	skipnz
  2940  03E7  2B5B               	goto	l991
  2941  03E8  3A01               	xorlw	1	; case 1
  2942  03E9  1903               	skipnz
  2943  03EA  2B84               	goto	l5484
  2944  03EB  3A03               	xorlw	3	; case 2
  2945  03EC  1903               	skipnz
  2946  03ED  2B87               	goto	l5486
  2947  03EE  285E               	goto	l772
  2948  03EF                     l5550:	
  2949                           
  2950                           ;main.c: 2112: {
  2951                           ;main.c: 2117: setPA2(0);
  2952  03EF  3000               	movlw	0
  2953  03F0  158A  26E6  118A   	fcall	_setPA2
  2954                           
  2955                           ;main.c: 2118: setPA1(0);
  2956  03F3  3000               	movlw	0
  2957  03F4  118A  24C8  118A   	fcall	_setPA1
  2958                           
  2959                           ;main.c: 2119: setPA0(0);
  2960  03F7  3000               	movlw	0
  2961  03F8  118A  24BF  118A   	fcall	_setPA0
  2962                           
  2963                           ;main.c: 2120: setPB0(0);
  2964  03FB  3000               	movlw	0
  2965  03FC  118A  24A7  118A   	fcall	_setPB0
  2966                           
  2967                           ;main.c: 2121: setPB1(0);
  2968  03FF  3000               	movlw	0
  2969  0400  118A  24AF  118A   	fcall	_setPB1
  2970                           
  2971                           ;main.c: 2122: setPB2(0);
  2972  0403  3000               	movlw	0
  2973  0404  118A  24B7  118A   	fcall	_setPB2
  2974                           
  2975                           ;main.c: 2123: setPA3(0);
  2976  0407  3000               	movlw	0
  2977  0408  118A  2625  118A   	fcall	_setPA3
  2978                           
  2979                           ;main.c: 2124: setPB4(0);
  2980  040B  3000               	movlw	0
  2981  040C  118A  2535  118A   	fcall	_setPB4
  2982                           
  2983                           ;main.c: 2126: enumInteralStep = INTERNAL_SECOND_STEP;
  2984  040F  1683               	bsf	3,5	;RP0=1, select bank1
  2985  0410  01B0               	clrf	main@enumInteralStep^(0+128)
  2986  0411  0AB0               	incf	main@enumInteralStep^(0+128),f
  2987                           
  2988                           ;main.c: 2127: break;
  2989  0412  2833               	goto	l4998
  2990  0413                     l5554:	
  2991                           
  2992                           ;main.c: 2131: {
  2993                           ;main.c: 2135: static unsigned char ucTimer1s = 0;
  2994                           ;main.c: 2137: if(getAdOriginalCh0Value() >= 2500)
  2995  0413  118A  247B  118A   	fcall	_getAdOriginalCh0Value
  2996  0416  3009               	movlw	9
  2997  0417  0247               	subwf	?_getAdOriginalCh0Value+1,w
  2998  0418  30C4               	movlw	196
  2999  0419  1903               	skipnz
  3000  041A  0246               	subwf	?_getAdOriginalCh0Value,w
  3001  041B  1C03               	skipc
  3002  041C  2C20               	goto	l5558
  3003                           
  3004                           ;main.c: 2138: {
  3005                           ;main.c: 2139: ucTimer1s++;
  3006  041D  1683               	bsf	3,5	;RP0=1, select bank1
  3007  041E  0AB1               	incf	main@ucTimer1s^(0+128),f
  3008                           
  3009                           ;main.c: 2140: }
  3010  041F  2C22               	goto	l5560
  3011  0420                     l5558:	
  3012                           
  3013                           ;main.c: 2141: else
  3014                           ;main.c: 2142: ucTimer1s = 0;
  3015  0420  1683               	bsf	3,5	;RP0=1, select bank1
  3016  0421  01B1               	clrf	main@ucTimer1s^(0+128)
  3017  0422                     l5560:	
  3018                           
  3019                           ;main.c: 2144: if(ucTimer1s >= 10)
  3020  0422  300A               	movlw	10
  3021  0423  0231               	subwf	main@ucTimer1s^(0+128),w
  3022  0424  1C03               	skipc
  3023  0425  2833               	goto	l4998
  3024                           
  3025                           ;main.c: 2145: {
  3026                           ;main.c: 2146: enumInteralStep = INTERNAL_THIRD_STEP;
  3027  0426  3002               	movlw	2
  3028  0427  00B0               	movwf	main@enumInteralStep^(0+128)
  3029                           
  3030                           ;main.c: 2147: ucTimer1s = 0;
  3031  0428  01B1               	clrf	main@ucTimer1s^(0+128)
  3032  0429  2833               	goto	l4998
  3033  042A                     l5566:	
  3034                           
  3035                           ;main.c: 2153: {
  3036                           ;main.c: 2157: static unsigned char ucTimerP3s = 0;
  3037                           ;main.c: 2159: if(getAdOriginalCh0Value() <= 1950)
  3038  042A  118A  247B  118A   	fcall	_getAdOriginalCh0Value
  3039  042D  3007               	movlw	7
  3040  042E  0247               	subwf	?_getAdOriginalCh0Value+1,w
  3041  042F  309F               	movlw	159
  3042  0430  1903               	skipnz
  3043  0431  0246               	subwf	?_getAdOriginalCh0Value,w
  3044  0432  1803               	skipnc
  3045  0433  2C37               	goto	l5570
  3046                           
  3047                           ;main.c: 2160: {
  3048                           ;main.c: 2161: ucTimerP3s++;
  3049  0434  1683               	bsf	3,5	;RP0=1, select bank1
  3050  0435  0AB4               	incf	main@ucTimerP3s^(0+128),f
  3051                           
  3052                           ;main.c: 2162: }
  3053  0436  2C39               	goto	l5572
  3054  0437                     l5570:	
  3055                           
  3056                           ;main.c: 2163: else
  3057                           ;main.c: 2164: ucTimerP3s = 0;
  3058  0437  1683               	bsf	3,5	;RP0=1, select bank1
  3059  0438  01B4               	clrf	main@ucTimerP3s^(0+128)
  3060  0439                     l5572:	
  3061                           
  3062                           ;main.c: 2166: if(ucTimerP3s >= 3)
  3063  0439  3003               	movlw	3
  3064  043A  0234               	subwf	main@ucTimerP3s^(0+128),w
  3065  043B  1C03               	skipc
  3066  043C  2833               	goto	l4998
  3067                           
  3068                           ;main.c: 2167: {
  3069                           ;main.c: 2168: enumInteralStep = INTERNAL_FIRST_STEP;
  3070  043D  01B0               	clrf	main@enumInteralStep^(0+128)
  3071                           
  3072                           ;main.c: 2169: ucTimerP3s = 0;
  3073  043E  01B4               	clrf	main@ucTimerP3s^(0+128)
  3074                           
  3075                           ;main.c: 2171: clearAllTimer();
  3076  043F  118A  24D1  118A   	fcall	_clearAllTimer
  3077                           
  3078                           ;main.c: 2173: initPin();
  3079  0442  158A  278B  118A   	fcall	_initPin
  3080                           
  3081                           ;main.c: 2176: enumMainLoopStep = MAIN_LOOP_STEP_INIT;
  3082  0445  1283               	bcf	3,5	;RP0=0, select bank0
  3083  0446  01D0               	clrf	_enumMainLoopStep
  3084  0447                     l1039:	
  3085  0447  2C47               	goto	l1039
  3086  0448                     l5582:	
  3087  0448  1683               	bsf	3,5	;RP0=1, select bank1
  3088  0449  0830               	movf	main@enumInteralStep^(0+128),w
  3089                           
  3090                           ; Switch size 1, requested type "space"
  3091                           ; Number of cases is 3, Range of values is 0 to 2
  3092                           ; switch strategies available:
  3093                           ; Name         Instructions Cycles
  3094                           ; simple_byte           10     6 (average)
  3095                           ; direct_byte           13     7 (fixed)
  3096                           ; jumptable            260     6 (fixed)
  3097                           ; rangetable             7     6 (fixed)
  3098                           ; spacedrange           12     9 (fixed)
  3099                           ; locatedrange           3     3 (fixed)
  3100                           ;	Chosen strategy is simple_byte
  3101  044A  3A00               	xorlw	0	; case 0
  3102  044B  1903               	skipnz
  3103  044C  2BEF               	goto	l5550
  3104  044D  3A01               	xorlw	1	; case 1
  3105  044E  1903               	skipnz
  3106  044F  2C13               	goto	l5554
  3107  0450  3A03               	xorlw	3	; case 2
  3108  0451  1903               	skipnz
  3109  0452  2C2A               	goto	l5566
  3110  0453  285E               	goto	l772
  3111  0454                     l5586:	
  3112  0454  1283               	bcf	3,5	;RP0=0, select bank0
  3113  0455  0850               	movf	_enumMainLoopStep,w
  3114                           
  3115                           ; Switch size 1, requested type "space"
  3116                           ; Number of cases is 8, Range of values is 0 to 9
  3117                           ; switch strategies available:
  3118                           ; Name         Instructions Cycles
  3119                           ; simple_byte           25    13 (average)
  3120                           ; direct_byte           27     7 (fixed)
  3121                           ; jumptable            260     6 (fixed)
  3122                           ; rangetable            14     6 (fixed)
  3123                           ; spacedrange           26     9 (fixed)
  3124                           ; locatedrange          10     3 (fixed)
  3125                           ;	Chosen strategy is simple_byte
  3126  0456  3A00               	xorlw	0	; case 0
  3127  0457  1903               	skipnz
  3128  0458  2841               	goto	l5004
  3129  0459  3A01               	xorlw	1	; case 1
  3130  045A  1903               	skipnz
  3131  045B  285F               	goto	l5020
  3132  045C  3A03               	xorlw	3	; case 2
  3133  045D  1903               	skipnz
  3134  045E  287C               	goto	l5040
  3135  045F  3A01               	xorlw	1	; case 3
  3136  0460  1903               	skipnz
  3137  0461  2893               	goto	l5052
  3138  0462  3A07               	xorlw	7	; case 4
  3139  0463  1903               	skipnz
  3140  0464  28CF               	goto	l5090
  3141  0465  3A01               	xorlw	1	; case 5
  3142  0466  1903               	skipnz
  3143  0467  28DB               	goto	l5096
  3144  0468  3A0D               	xorlw	13	; case 8
  3145  0469  1903               	skipnz
  3146  046A  2BE3               	goto	l5548
  3147  046B  3A01               	xorlw	1	; case 9
  3148  046C  1903               	skipnz
  3149  046D  2C48               	goto	l5582
  3150  046E  285E               	goto	l772
  3151  046F  118A  2811         	ljmp	start
  3152  0471                     __end_of_main:	
  3153                           
  3154                           	psect	swtext1
  3155  0800                     __pswtext1:	
  3156  0800                     S5804:	
  3157  0800  118A  296F         	ljmp	l5154
  3158  0802  118A  2975         	ljmp	l5158
  3159  0804  118A  2981         	ljmp	l5168
  3160  0806  118A  298A         	ljmp	l5178
  3161  0808  118A  2993         	ljmp	l5188
  3162  080A  118A  299C         	ljmp	l5198
  3163  080C  118A  29B5         	ljmp	l5208
  3164                           
  3165                           	psect	swtext2
  3166  080E                     __pswtext2:	
  3167  080E                     S5806:	
  3168  080E  118A  29C8         	ljmp	l5220
  3169  0810  118A  29CE         	ljmp	l5224
  3170  0812  118A  29DA         	ljmp	l5234
  3171  0814  118A  29E3         	ljmp	l5244
  3172  0816  118A  29EC         	ljmp	l5254
  3173  0818  118A  29F5         	ljmp	l5264
  3174  081A  118A  2A0A         	ljmp	l5274
  3175                           
  3176                           	psect	swtext3
  3177  07F4                     __pswtext3:	
  3178  07F4                     S5808:	
  3179  07F4  118A  2A1C         	ljmp	l5286
  3180  07F6  118A  2A26         	ljmp	l5290
  3181  07F8  118A  2A32         	ljmp	l5300
  3182  07FA  118A  2A3B         	ljmp	l5310
  3183  07FC  118A  2A44         	ljmp	l5320
  3184  07FE  118A  2A55         	ljmp	l5330
  3185                           
  3186                           	psect	text986
  3187  0FB2                     __ptext986:	
  3188 ;; =============== function _vHandle20sTimeron ends ============
  3189                           
  3190                           
  3191 ;; *************** function _process_AD_Converter_Value *****************
  3192 ;; Defined at:
  3193 ;;		line 298 in file "C:\temp\dev\AK7030-OTP\common.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;		None
  3196 ;; Auto vars:     Size  Location     Type
  3197 ;;		None
  3198 ;; Return value:  Size  Location     Type
  3199 ;;		None               void
  3200 ;; Registers used:
  3201 ;;		wreg, status,2, status,0, pclath, cstack
  3202 ;; Tracked objects:
  3203 ;;		On entry : 0/20
  3204 ;;		On exit  : 40/0
  3205 ;;		Unchanged: FFF9F/0
  3206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3207 ;;      Params:         0       0       0       0       0
  3208 ;;      Locals:         0       0       0       0       0
  3209 ;;      Temps:          0       0       0       0       0
  3210 ;;      Totals:         0       0       0       0       0
  3211 ;;Total ram usage:        0 bytes
  3212 ;; Hardware stack levels used:    1
  3213 ;; Hardware stack levels required when called:    4
  3214 ;; This function calls:
  3215 ;;		_getAD_ConvertFlag
  3216 ;;		_setAD_ConvertFlag
  3217 ;;		_AD_Sample
  3218 ;;		_adc_start
  3219 ;; This function is called by:
  3220 ;;		_main
  3221 ;; This function uses a non-reentrant model
  3222 ;;
  3223  0FB2                     _process_AD_Converter_Value:	
  3224                           
  3225                           ;common.c: 299: if(getAD_ConvertFlag())
  3226                           
  3227                           ; Regs used in _process_AD_Converter_Value: [wreg+status,2+status,0+pclath+cstack]
  3228  0FB2  27BD  158A         	fcall	_getAD_ConvertFlag
  3229  0FB4  3A00               	xorlw	0
  3230  0FB5  1903               	skipnz
  3231  0FB6  0008               	return
  3232                           
  3233                           ;common.c: 300: {
  3234                           ;common.c: 301: setAD_ConvertFlag(0);
  3235  0FB7  3000               	movlw	0
  3236  0FB8  27C1  158A         	fcall	_setAD_ConvertFlag
  3237                           
  3238                           ;common.c: 302: AD_Sample();
  3239  0FBA  27C9  158A         	fcall	_AD_Sample
  3240                           
  3241                           ;common.c: 314: adc_start();
  3242  0FBC  2FC6               	ljmp	l4468
  3243  0FBD                     __end_of_process_AD_Converter_Value:	
  3244  0FBD                     __ptext997:	
  3245 ;; =============== function _setAD_ConvertFlag ends ============
  3246                           
  3247                           
  3248 ;; *************** function _getAD_ConvertFlag *****************
  3249 ;; Defined at:
  3250 ;;		line 229 in file "C:\temp\dev\AK7030-OTP\common.c"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;		None
  3253 ;; Auto vars:     Size  Location     Type
  3254 ;;		None
  3255 ;; Return value:  Size  Location     Type
  3256 ;;                  1    wreg      unsigned char 
  3257 ;; Registers used:
  3258 ;;		wreg
  3259 ;; Tracked objects:
  3260 ;;		On entry : 0/20
  3261 ;;		On exit  : 60/20
  3262 ;;		Unchanged: FFF9F/0
  3263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3264 ;;      Params:         0       0       0       0       0
  3265 ;;      Locals:         0       0       0       0       0
  3266 ;;      Temps:          0       0       0       0       0
  3267 ;;      Totals:         0       0       0       0       0
  3268 ;;Total ram usage:        0 bytes
  3269 ;; Hardware stack levels used:    1
  3270 ;; Hardware stack levels required when called:    2
  3271 ;; This function calls:
  3272 ;;		Nothing
  3273 ;; This function is called by:
  3274 ;;		_process_AD_Converter_Value
  3275 ;; This function uses a non-reentrant model
  3276 ;;
  3277  0FBD                     _getAD_ConvertFlag:	
  3278                           
  3279                           ;common.c: 230: return adc_convert_flag;
  3280                           
  3281                           ; Regs used in _getAD_ConvertFlag: [wreg]
  3282  0FBD  1683               	bsf	3,5	;RP0=1, select bank1
  3283  0FBE  1303               	bcf	3,6	;RP1=0, select bank1
  3284  0FBF  082D               	movf	_adc_convert_flag^(0+128),w
  3285  0FC0  0008               	return
  3286  0FC1                     __end_of_getAD_ConvertFlag:	
  3287  0FC1                     __ptext996:	
  3288 ;; =============== function _clearAllTimer ends ============
  3289                           
  3290                           
  3291 ;; *************** function _setAD_ConvertFlag *****************
  3292 ;; Defined at:
  3293 ;;		line 235 in file "C:\temp\dev\AK7030-OTP\common.c"
  3294 ;; Parameters:    Size  Location     Type
  3295 ;;  flag            1    wreg     unsigned char 
  3296 ;; Auto vars:     Size  Location     Type
  3297 ;;  flag            1    0[BANK0 ] unsigned char 
  3298 ;; Return value:  Size  Location     Type
  3299 ;;		None               void
  3300 ;; Registers used:
  3301 ;;		wreg
  3302 ;; Tracked objects:
  3303 ;;		On entry : 60/20
  3304 ;;		On exit  : 60/20
  3305 ;;		Unchanged: FFF9F/0
  3306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3307 ;;      Params:         0       0       0       0       0
  3308 ;;      Locals:         0       1       0       0       0
  3309 ;;      Temps:          0       0       0       0       0
  3310 ;;      Totals:         0       1       0       0       0
  3311 ;;Total ram usage:        1 bytes
  3312 ;; Hardware stack levels used:    1
  3313 ;; Hardware stack levels required when called:    2
  3314 ;; This function calls:
  3315 ;;		Nothing
  3316 ;; This function is called by:
  3317 ;;		_process_AD_Converter_Value
  3318 ;; This function uses a non-reentrant model
  3319 ;;
  3320  0FC1                     _setAD_ConvertFlag:	
  3321                           
  3322                           ; Regs used in _setAD_ConvertFlag: [wreg]
  3323                           ;setAD_ConvertFlag@flag stored from wreg
  3324  0FC1  1283               	bcf	3,5	;RP0=0, select bank0
  3325  0FC2  00A0               	movwf	setAD_ConvertFlag@flag
  3326                           
  3327                           ;common.c: 236: adc_convert_flag = flag;
  3328  0FC3  1683               	bsf	3,5	;RP0=1, select bank1
  3329  0FC4  00AD               	movwf	_adc_convert_flag^(0+128)
  3330  0FC5  0008               	return
  3331  0FC6                     __end_of_setAD_ConvertFlag:	
  3332  0FC6                     __ptext1009:	
  3333 ;; =============== function _startTwentyMinuteTimer ends ============
  3334                           
  3335                           
  3336 ;; *************** function _adc_start *****************
  3337 ;; Defined at:
  3338 ;;		line 100 in file "C:\temp\dev\AK7030-OTP\periph.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;		None
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;		None
  3343 ;; Return value:  Size  Location     Type
  3344 ;;		None               void
  3345 ;; Registers used:
  3346 ;;		None
  3347 ;; Tracked objects:
  3348 ;;		On entry : 40/20
  3349 ;;		On exit  : 60/0
  3350 ;;		Unchanged: FFF9F/0
  3351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3352 ;;      Params:         0       0       0       0       0
  3353 ;;      Locals:         0       0       0       0       0
  3354 ;;      Temps:          0       0       0       0       0
  3355 ;;      Totals:         0       0       0       0       0
  3356 ;;Total ram usage:        0 bytes
  3357 ;; Hardware stack levels used:    1
  3358 ;; Hardware stack levels required when called:    2
  3359 ;; This function calls:
  3360 ;;		Nothing
  3361 ;; This function is called by:
  3362 ;;		_main
  3363 ;;		_process_AD_Converter_Value
  3364 ;; This function uses a non-reentrant model
  3365 ;;
  3366  0FC6                     _adc_start:	
  3367  0FC6                     l4468:	
  3368                           ; Regs used in _adc_start: []
  3369                           
  3370                           
  3371                           ;periph.c: 101: GO=1;
  3372  0FC6  1283               	bcf	3,5	;RP0=0, select bank0
  3373  0FC7  149F               	bsf	31,1
  3374  0FC8  0008               	return
  3375  0FC9                     __end_of_adc_start:	
  3376  0FC9                     __ptext989:	
  3377 ;; =============== function _clearPinPortAndTimer ends ============
  3378                           
  3379                           
  3380 ;; *************** function _AD_Sample *****************
  3381 ;; Defined at:
  3382 ;;		line 328 in file "C:\temp\dev\AK7030-OTP\common.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;		None
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;		None
  3387 ;; Return value:  Size  Location     Type
  3388 ;;		None               void
  3389 ;; Registers used:
  3390 ;;		wreg, status,2, status,0, pclath, cstack
  3391 ;; Tracked objects:
  3392 ;;		On entry : 60/20
  3393 ;;		On exit  : 40/0
  3394 ;;		Unchanged: FFF9F/0
  3395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3396 ;;      Params:         0       0       0       0       0
  3397 ;;      Locals:         0       0       0       0       0
  3398 ;;      Temps:          0       0       0       0       0
  3399 ;;      Totals:         0       0       0       0       0
  3400 ;;Total ram usage:        0 bytes
  3401 ;; Hardware stack levels used:    1
  3402 ;; Hardware stack levels required when called:    3
  3403 ;; This function calls:
  3404 ;;		_adc_test_init
  3405 ;; This function is called by:
  3406 ;;		_process_AD_Converter_Value
  3407 ;; This function uses a non-reentrant model
  3408 ;;
  3409  0FC9                     _AD_Sample:	
  3410                           
  3411                           ;common.c: 329: if(sampleTimes < 12)
  3412                           
  3413                           ; Regs used in _AD_Sample: [wreg+status,2+status,0+pclath+cstack]
  3414  0FC9  300C               	movlw	12
  3415  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  3416  0FCB  0252               	subwf	_sampleTimes,w
  3417  0FCC  1803               	skipnc
  3418  0FCD  0008               	return
  3419  0FCE  300C               	movlw	12
  3420                           
  3421                           ;common.c: 330: {
  3422                           ;common.c: 332: sampleTimes++;
  3423  0FCF  0AD2               	incf	_sampleTimes,f
  3424                           
  3425                           ;common.c: 334: if(sampleTimes >= 12)
  3426  0FD0  0252               	subwf	_sampleTimes,w
  3427  0FD1  1C03               	skipc
  3428  0FD2  0008               	return
  3429                           
  3430                           ;common.c: 335: {
  3431                           ;common.c: 336: sampleTimes = 0;
  3432  0FD3  01D2               	clrf	_sampleTimes
  3433                           
  3434                           ;common.c: 338: if(sampleChannelSelect == 0)
  3435  0FD4  08D1               	movf	_sampleChannelSelect,f
  3436  0FD5  1D03               	skipz
  3437  0FD6  2FD9               	goto	l4810
  3438                           
  3439                           ;common.c: 339: {
  3440                           ;common.c: 342: sampleChannelSelect = 2;
  3441  0FD7  3002               	movlw	2
  3442  0FD8  2FE4               	goto	L17
  3443  0FD9                     l4810:	
  3444                           ;common.c: 343: }
  3445                           
  3446                           
  3447                           ;common.c: 344: else if(sampleChannelSelect == 2)
  3448  0FD9  0851               	movf	_sampleChannelSelect,w
  3449  0FDA  3A02               	xorlw	2
  3450  0FDB  1D03               	skipz
  3451  0FDC  2FDF               	goto	l4814
  3452                           
  3453                           ;common.c: 345: {
  3454                           ;common.c: 347: sampleChannelSelect = 5;
  3455  0FDD  3005               	movlw	5
  3456  0FDE  2FE4               	goto	L17
  3457  0FDF                     l4814:	
  3458                           ;common.c: 348: }
  3459                           
  3460                           
  3461                           ;common.c: 349: else if(sampleChannelSelect == 5)
  3462  0FDF  0851               	movf	_sampleChannelSelect,w
  3463  0FE0  3A05               	xorlw	5
  3464  0FE1  1D03               	skipz
  3465  0FE2  2FE6               	goto	l4818
  3466                           
  3467                           ;common.c: 350: {
  3468                           ;common.c: 352: sampleChannelSelect = 6;
  3469  0FE3  3006               	movlw	6
  3470  0FE4                     L17:	
  3471  0FE4  00D1               	movwf	_sampleChannelSelect
  3472                           
  3473                           ;common.c: 353: }
  3474  0FE5  2FE7               	goto	l4820
  3475  0FE6                     l4818:	
  3476                           
  3477                           ;common.c: 354: else
  3478                           ;common.c: 355: {
  3479                           ;common.c: 357: sampleChannelSelect = 0;
  3480  0FE6  01D1               	clrf	_sampleChannelSelect
  3481  0FE7                     l4820:	
  3482                           
  3483                           ;common.c: 358: }
  3484                           ;common.c: 363: adc_test_init(sampleChannelSelect,3);
  3485  0FE7  3003               	movlw	3
  3486  0FE8  00A0               	movwf	?_adc_test_init
  3487  0FE9  0851               	movf	_sampleChannelSelect,w
  3488  0FEA  2FEB               	ljmp	_adc_test_init
  3489  0FEB                     __end_of_AD_Sample:	
  3490  0FEB                     __ptext1010:	
  3491 ;; =============== function _adc_start ends ============
  3492                           
  3493                           
  3494 ;; *************** function _adc_test_init *****************
  3495 ;; Defined at:
  3496 ;;		line 85 in file "C:\temp\dev\AK7030-OTP\periph.c"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;  channel         1    wreg     unsigned char 
  3499 ;;  ref             1    0[BANK0 ] unsigned char 
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;  channel         1    2[BANK0 ] unsigned char 
  3502 ;; Return value:  Size  Location     Type
  3503 ;;		None               void
  3504 ;; Registers used:
  3505 ;;		wreg, status,2, status,0
  3506 ;; Tracked objects:
  3507 ;;		On entry : 60/0
  3508 ;;		On exit  : 60/20
  3509 ;;		Unchanged: FFF9F/0
  3510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3511 ;;      Params:         0       1       0       0       0
  3512 ;;      Locals:         0       1       0       0       0
  3513 ;;      Temps:          0       1       0       0       0
  3514 ;;      Totals:         0       3       0       0       0
  3515 ;;Total ram usage:        3 bytes
  3516 ;; Hardware stack levels used:    1
  3517 ;; Hardware stack levels required when called:    2
  3518 ;; This function calls:
  3519 ;;		Nothing
  3520 ;; This function is called by:
  3521 ;;		_main
  3522 ;;		_AD_Sample
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525  0FEB                     _adc_test_init:	
  3526                           
  3527                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  3528                           ;adc_test_init@channel stored from wreg
  3529  0FEB  00A2               	movwf	adc_test_init@channel
  3530                           
  3531                           ;periph.c: 86: ADCON0 = 0x00;
  3532  0FEC  019F               	clrf	31	;volatile
  3533                           
  3534                           ;periph.c: 87: ADCON0|=channel<<2;
  3535  0FED  00A1               	movwf	??_adc_test_init
  3536  0FEE  1003               	clrc
  3537  0FEF  0DA1               	rlf	??_adc_test_init,f
  3538  0FF0  1003               	clrc
  3539  0FF1  0D21               	rlf	??_adc_test_init,w
  3540  0FF2  049F               	iorwf	31,f	;volatile
  3541                           
  3542                           ;periph.c: 88: ADCON1|=ref<<6;
  3543  0FF3  0820               	movf	adc_test_init@ref,w
  3544  0FF4  00A1               	movwf	??_adc_test_init
  3545  0FF5  0CA1               	rrf	??_adc_test_init,f
  3546  0FF6  0CA1               	rrf	??_adc_test_init,f
  3547  0FF7  0C21               	rrf	??_adc_test_init,w
  3548  0FF8  39C0               	andlw	192
  3549  0FF9  1683               	bsf	3,5	;RP0=1, select bank1
  3550  0FFA  049F               	iorwf	31,f	;volatile
  3551                           
  3552                           ;periph.c: 89: ADON=1;
  3553  0FFB  1283               	bcf	3,5	;RP0=0, select bank0
  3554  0FFC  141F               	bsf	31,0
  3555                           
  3556                           ;periph.c: 90: ADIE=1;
  3557  0FFD  1683               	bsf	3,5	;RP0=1, select bank1
  3558  0FFE  150D               	bsf	13,2
  3559  0FFF  0008               	return
  3560  1000                     __end_of_adc_test_init:	
  3561                           
  3562                           	psect	text992
  3563  0471                     __ptext992:	
  3564 ;; =============== function _vHandle20sTimerOut ends ============
  3565                           
  3566                           
  3567 ;; *************** function _getAdOriginalCh5Value *****************
  3568 ;; Defined at:
  3569 ;;		line 268 in file "C:\temp\dev\AK7030-OTP\common.c"
  3570 ;; Parameters:    Size  Location     Type
  3571 ;;		None
  3572 ;; Auto vars:     Size  Location     Type
  3573 ;;		None
  3574 ;; Return value:  Size  Location     Type
  3575 ;;                  2   38[BANK0 ] unsigned int 
  3576 ;; Registers used:
  3577 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3578 ;; Tracked objects:
  3579 ;;		On entry : 60/0
  3580 ;;		On exit  : 160/0
  3581 ;;		Unchanged: FFE00/0
  3582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3583 ;;      Params:         0       2       0       0       0
  3584 ;;      Locals:         0       0       0       0       0
  3585 ;;      Temps:          0       0       0       0       0
  3586 ;;      Totals:         0       2       0       0       0
  3587 ;;Total ram usage:        2 bytes
  3588 ;; Hardware stack levels used:    1
  3589 ;; Hardware stack levels required when called:    3
  3590 ;; This function calls:
  3591 ;;		_Filter
  3592 ;; This function is called by:
  3593 ;;		_main
  3594 ;; This function uses a non-reentrant model
  3595 ;;
  3596  0471                     _getAdOriginalCh5Value:	
  3597                           
  3598                           ;common.c: 270: return Filter(uiSampleChannelFifth);
  3599                           
  3600                           ; Regs used in _getAdOriginalCh5Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  3601  0471  3090               	movlw	_uiSampleChannelFifth& (0+255)
  3602  0472  00A0               	movwf	?_Filter
  3603  0473  3001               	movlw	1
  3604  0474  00A1               	movwf	?_Filter+1
  3605  0475  2648               	fcall	_Filter
  3606  0476  0821               	movf	?_Filter+1,w
  3607  0477  00C7               	movwf	?_getAdOriginalCh5Value+1
  3608  0478  0820               	movf	?_Filter,w
  3609  0479  00C6               	movwf	?_getAdOriginalCh5Value
  3610  047A  0008               	return
  3611  047B                     __end_of_getAdOriginalCh5Value:	
  3612  047B                     __ptext994:	
  3613 ;; =============== function _getAdOriginalCh6Value ends ============
  3614                           
  3615                           
  3616 ;; *************** function _getAdOriginalCh0Value *****************
  3617 ;; Defined at:
  3618 ;;		line 259 in file "C:\temp\dev\AK7030-OTP\common.c"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;		None
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;		None
  3623 ;; Return value:  Size  Location     Type
  3624 ;;                  2   38[BANK0 ] unsigned int 
  3625 ;; Registers used:
  3626 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3627 ;; Tracked objects:
  3628 ;;		On entry : 40/0
  3629 ;;		On exit  : 160/0
  3630 ;;		Unchanged: FFE00/0
  3631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3632 ;;      Params:         0       2       0       0       0
  3633 ;;      Locals:         0       0       0       0       0
  3634 ;;      Temps:          0       0       0       0       0
  3635 ;;      Totals:         0       2       0       0       0
  3636 ;;Total ram usage:        2 bytes
  3637 ;; Hardware stack levels used:    1
  3638 ;; Hardware stack levels required when called:    3
  3639 ;; This function calls:
  3640 ;;		_Filter
  3641 ;; This function is called by:
  3642 ;;		_main
  3643 ;; This function uses a non-reentrant model
  3644 ;;
  3645  047B                     _getAdOriginalCh0Value:	
  3646                           
  3647                           ;common.c: 261: return Filter(uiSampleChannelZero);
  3648                           
  3649                           ; Regs used in _getAdOriginalCh0Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  3650  047B  30C3               	movlw	_uiSampleChannelZero& (0+255)
  3651  047C  1283               	bcf	3,5	;RP0=0, select bank0
  3652  047D  00A0               	movwf	?_Filter
  3653  047E  01A1               	clrf	?_Filter+1
  3654  047F  2648               	fcall	_Filter
  3655  0480  0821               	movf	?_Filter+1,w
  3656  0481  00C7               	movwf	?_getAdOriginalCh0Value+1
  3657  0482  0820               	movf	?_Filter,w
  3658  0483  00C6               	movwf	?_getAdOriginalCh0Value
  3659  0484  0008               	return
  3660  0485                     __end_of_getAdOriginalCh0Value:	
  3661  0485                     __ptext988:	
  3662 ;; =============== function _clearParaFunction1 ends ============
  3663                           
  3664                           
  3665 ;; *************** function _clearPinPortAndTimer *****************
  3666 ;; Defined at:
  3667 ;;		line 110 in file "C:\temp\dev\AK7030-OTP\main.c"
  3668 ;; Parameters:    Size  Location     Type
  3669 ;;		None
  3670 ;; Auto vars:     Size  Location     Type
  3671 ;;		None
  3672 ;; Return value:  Size  Location     Type
  3673 ;;		None               void
  3674 ;; Registers used:
  3675 ;;		status,2, status,0, pclath, cstack
  3676 ;; Tracked objects:
  3677 ;;		On entry : 60/0
  3678 ;;		On exit  : 60/0
  3679 ;;		Unchanged: FFF9F/0
  3680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3681 ;;      Params:         0       0       0       0       0
  3682 ;;      Locals:         0       0       0       0       0
  3683 ;;      Temps:          0       0       0       0       0
  3684 ;;      Totals:         0       0       0       0       0
  3685 ;;Total ram usage:        0 bytes
  3686 ;; Hardware stack levels used:    1
  3687 ;; Hardware stack levels required when called:    4
  3688 ;; This function calls:
  3689 ;;		_clearAllTimer
  3690 ;; This function is called by:
  3691 ;;		_main
  3692 ;; This function uses a non-reentrant model
  3693 ;;
  3694  0485                     _clearPinPortAndTimer:	
  3695                           
  3696                           ;main.c: 112: PB0 = 0;
  3697                           
  3698                           ; Regs used in _clearPinPortAndTimer: [status,2+status,0+pclath+cstack]
  3699  0485  1006               	bcf	6,0
  3700                           
  3701                           ;main.c: 113: PA0 = 0;
  3702  0486  1005               	bcf	5,0
  3703                           
  3704                           ;main.c: 114: PA1 = 0;
  3705  0487  1085               	bcf	5,1
  3706                           
  3707                           ;main.c: 115: PA2 = 0;
  3708  0488  1105               	bcf	5,2
  3709                           
  3710                           ;main.c: 116: PA3 = 0;
  3711  0489  1185               	bcf	5,3
  3712                           
  3713                           ;main.c: 119: PBOD7 = 0;
  3714  048A  1683               	bsf	3,5	;RP0=1, select bank3
  3715  048B  1703               	bsf	3,6	;RP1=1, select bank3
  3716  048C  1388               	bcf	8,7
  3717                           
  3718                           ;main.c: 120: PB7 = 0;
  3719  048D  1283               	bcf	3,5	;RP0=0, select bank0
  3720  048E  1303               	bcf	3,6	;RP1=0, select bank0
  3721  048F  1386               	bcf	6,7
  3722                           
  3723                           ;main.c: 121: clearAllTimer();
  3724  0490  2CD1               	ljmp	l4728
  3725  0491                     __end_of_clearPinPortAndTimer:	
  3726  0491                     __ptext987:	
  3727 ;; =============== function _process_AD_Converter_Value ends ============
  3728                           
  3729                           
  3730 ;; *************** function _clearParaFunction1 *****************
  3731 ;; Defined at:
  3732 ;;		line 581 in file "C:\temp\dev\AK7030-OTP\main.c"
  3733 ;; Parameters:    Size  Location     Type
  3734 ;;		None
  3735 ;; Auto vars:     Size  Location     Type
  3736 ;;		None
  3737 ;; Return value:  Size  Location     Type
  3738 ;;		None               void
  3739 ;; Registers used:
  3740 ;;		wreg, status,2, status,0, pclath, cstack
  3741 ;; Tracked objects:
  3742 ;;		On entry : 140/0
  3743 ;;		On exit  : 160/0
  3744 ;;		Unchanged: FFE9F/0
  3745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3746 ;;      Params:         0       0       0       0       0
  3747 ;;      Locals:         0       0       0       0       0
  3748 ;;      Temps:          0       0       0       0       0
  3749 ;;      Totals:         0       0       0       0       0
  3750 ;;Total ram usage:        0 bytes
  3751 ;; Hardware stack levels used:    1
  3752 ;; Hardware stack levels required when called:    4
  3753 ;; This function calls:
  3754 ;;		_setPA1
  3755 ;;		_setPA0
  3756 ;;		_setPB0
  3757 ;;		_setPB1
  3758 ;;		_setPB2
  3759 ;;		_clearAllTimer
  3760 ;;		_setPA3
  3761 ;;		_setPB4
  3762 ;; This function is called by:
  3763 ;;		_main
  3764 ;; This function uses a non-reentrant model
  3765 ;;
  3766  0491                     _clearParaFunction1:	
  3767                           
  3768                           ;main.c: 582: setPA1(0);
  3769                           
  3770                           ; Regs used in _clearParaFunction1: [wreg+status,2+status,0+pclath+cstack]
  3771  0491  3000               	movlw	0
  3772  0492  24C8  118A         	fcall	_setPA1
  3773                           
  3774                           ;main.c: 583: setPA0(0);
  3775  0494  3000               	movlw	0
  3776  0495  24BF  118A         	fcall	_setPA0
  3777                           
  3778                           ;main.c: 585: setPB0(0);
  3779  0497  3000               	movlw	0
  3780  0498  24A7  118A         	fcall	_setPB0
  3781                           
  3782                           ;main.c: 586: setPB1(0);
  3783  049A  3000               	movlw	0
  3784  049B  24AF  118A         	fcall	_setPB1
  3785                           
  3786                           ;main.c: 587: setPB2(0);
  3787  049D  3000               	movlw	0
  3788  049E  24B7  118A         	fcall	_setPB2
  3789                           
  3790                           ;main.c: 589: clearAllTimer();
  3791  04A0  24D1  118A         	fcall	_clearAllTimer
  3792                           
  3793                           ;main.c: 591: setPA3(0);
  3794  04A2  3000               	movlw	0
  3795  04A3  2625  118A         	fcall	_setPA3
  3796                           
  3797                           ;main.c: 592: setPB4(0);
  3798  04A5  3000               	movlw	0
  3799  04A6  2D35               	ljmp	_setPB4
  3800  04A7                     __end_of_clearParaFunction1:	
  3801  04A7                     __ptext1024:	
  3802 ;; =============== function _setPB1 ends ============
  3803                           
  3804                           
  3805 ;; *************** function _setPB0 *****************
  3806 ;; Defined at:
  3807 ;;		line 166 in file "C:\temp\dev\AK7030-OTP\main.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;  bValue          1    wreg     unsigned char 
  3810 ;; Auto vars:     Size  Location     Type
  3811 ;;  bValue          1    0[BANK0 ] unsigned char 
  3812 ;; Return value:  Size  Location     Type
  3813 ;;		None               void
  3814 ;; Registers used:
  3815 ;;		wreg
  3816 ;; Tracked objects:
  3817 ;;		On entry : 60/0
  3818 ;;		On exit  : 60/0
  3819 ;;		Unchanged: FFF9F/0
  3820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3821 ;;      Params:         0       0       0       0       0
  3822 ;;      Locals:         0       1       0       0       0
  3823 ;;      Temps:          0       0       0       0       0
  3824 ;;      Totals:         0       1       0       0       0
  3825 ;;Total ram usage:        1 bytes
  3826 ;; Hardware stack levels used:    1
  3827 ;; Hardware stack levels required when called:    2
  3828 ;; This function calls:
  3829 ;;		Nothing
  3830 ;; This function is called by:
  3831 ;;		_clearParaFunction1
  3832 ;;		_main
  3833 ;; This function uses a non-reentrant model
  3834 ;;
  3835  04A7                     _setPB0:	
  3836                           
  3837                           ; Regs used in _setPB0: [wreg]
  3838                           ;setPB0@bValue stored from wreg
  3839  04A7  00A0               	movwf	setPB0@bValue
  3840                           
  3841                           ;main.c: 167: if( bValue )
  3842  04A8  0820               	movf	setPB0@bValue,w
  3843  04A9  1903               	btfsc	3,2
  3844  04AA  2CAD               	goto	l700
  3845                           
  3846                           ;main.c: 169: PB0 = 1;
  3847  04AB  1406               	bsf	6,0
  3848  04AC  0008               	return
  3849  04AD                     l700:	
  3850                           
  3851                           ;main.c: 173: else
  3852                           ;main.c: 175: PB0 = 0;
  3853  04AD  1006               	bcf	6,0
  3854  04AE  0008               	return
  3855  04AF                     __end_of_setPB0:	
  3856  04AF                     __ptext1023:	
  3857 ;; =============== function _setPB2 ends ============
  3858                           
  3859                           
  3860 ;; *************** function _setPB1 *****************
  3861 ;; Defined at:
  3862 ;;		line 183 in file "C:\temp\dev\AK7030-OTP\main.c"
  3863 ;; Parameters:    Size  Location     Type
  3864 ;;  bValue          1    wreg     unsigned char 
  3865 ;; Auto vars:     Size  Location     Type
  3866 ;;  bValue          1    0[BANK0 ] unsigned char 
  3867 ;; Return value:  Size  Location     Type
  3868 ;;		None               void
  3869 ;; Registers used:
  3870 ;;		wreg
  3871 ;; Tracked objects:
  3872 ;;		On entry : 60/0
  3873 ;;		On exit  : 60/0
  3874 ;;		Unchanged: FFF9F/0
  3875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3876 ;;      Params:         0       0       0       0       0
  3877 ;;      Locals:         0       1       0       0       0
  3878 ;;      Temps:          0       0       0       0       0
  3879 ;;      Totals:         0       1       0       0       0
  3880 ;;Total ram usage:        1 bytes
  3881 ;; Hardware stack levels used:    1
  3882 ;; Hardware stack levels required when called:    2
  3883 ;; This function calls:
  3884 ;;		Nothing
  3885 ;; This function is called by:
  3886 ;;		_clearParaFunction1
  3887 ;;		_main
  3888 ;; This function uses a non-reentrant model
  3889 ;;
  3890  04AF                     _setPB1:	
  3891                           
  3892                           ; Regs used in _setPB1: [wreg]
  3893                           ;setPB1@bValue stored from wreg
  3894  04AF  00A0               	movwf	setPB1@bValue
  3895                           
  3896                           ;main.c: 184: if( bValue )
  3897  04B0  0820               	movf	setPB1@bValue,w
  3898  04B1  1903               	btfsc	3,2
  3899  04B2  2CB5               	goto	l705
  3900                           
  3901                           ;main.c: 186: PB1 = 1;
  3902  04B3  1486               	bsf	6,1
  3903  04B4  0008               	return
  3904  04B5                     l705:	
  3905                           
  3906                           ;main.c: 190: else
  3907                           ;main.c: 192: PB1 = 0;
  3908  04B5  1086               	bcf	6,1
  3909  04B6  0008               	return
  3910  04B7                     __end_of_setPB1:	
  3911  04B7                     __ptext1022:	
  3912 ;; =============== function _setPA0 ends ============
  3913                           
  3914                           
  3915 ;; *************** function _setPB2 *****************
  3916 ;; Defined at:
  3917 ;;		line 200 in file "C:\temp\dev\AK7030-OTP\main.c"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;  bValue          1    wreg     unsigned char 
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;  bValue          1    0[BANK0 ] unsigned char 
  3922 ;; Return value:  Size  Location     Type
  3923 ;;		None               void
  3924 ;; Registers used:
  3925 ;;		wreg
  3926 ;; Tracked objects:
  3927 ;;		On entry : 60/0
  3928 ;;		On exit  : 60/0
  3929 ;;		Unchanged: FFF9F/0
  3930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3931 ;;      Params:         0       0       0       0       0
  3932 ;;      Locals:         0       1       0       0       0
  3933 ;;      Temps:          0       0       0       0       0
  3934 ;;      Totals:         0       1       0       0       0
  3935 ;;Total ram usage:        1 bytes
  3936 ;; Hardware stack levels used:    1
  3937 ;; Hardware stack levels required when called:    2
  3938 ;; This function calls:
  3939 ;;		Nothing
  3940 ;; This function is called by:
  3941 ;;		_clearParaFunction1
  3942 ;;		_main
  3943 ;; This function uses a non-reentrant model
  3944 ;;
  3945  04B7                     _setPB2:	
  3946                           
  3947                           ; Regs used in _setPB2: [wreg]
  3948                           ;setPB2@bValue stored from wreg
  3949  04B7  00A0               	movwf	setPB2@bValue
  3950                           
  3951                           ;main.c: 201: if( bValue )
  3952  04B8  0820               	movf	setPB2@bValue,w
  3953  04B9  1903               	btfsc	3,2
  3954  04BA  2CBD               	goto	l710
  3955                           
  3956                           ;main.c: 203: PB2 = 1;
  3957  04BB  1506               	bsf	6,2
  3958  04BC  0008               	return
  3959  04BD                     l710:	
  3960                           
  3961                           ;main.c: 207: else
  3962                           ;main.c: 209: PB2 = 0;
  3963  04BD  1106               	bcf	6,2
  3964  04BE  0008               	return
  3965  04BF                     __end_of_setPB2:	
  3966  04BF                     __ptext1021:	
  3967 ;; =============== function _setPA1 ends ============
  3968                           
  3969                           
  3970 ;; *************** function _setPA0 *****************
  3971 ;; Defined at:
  3972 ;;		line 217 in file "C:\temp\dev\AK7030-OTP\main.c"
  3973 ;; Parameters:    Size  Location     Type
  3974 ;;  bValue          1    wreg     unsigned char 
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;  bValue          1    0[BANK0 ] unsigned char 
  3977 ;; Return value:  Size  Location     Type
  3978 ;;		None               void
  3979 ;; Registers used:
  3980 ;;		wreg
  3981 ;; Tracked objects:
  3982 ;;		On entry : 40/0
  3983 ;;		On exit  : 60/0
  3984 ;;		Unchanged: FFF9F/0
  3985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3986 ;;      Params:         0       0       0       0       0
  3987 ;;      Locals:         0       1       0       0       0
  3988 ;;      Temps:          0       0       0       0       0
  3989 ;;      Totals:         0       1       0       0       0
  3990 ;;Total ram usage:        1 bytes
  3991 ;; Hardware stack levels used:    1
  3992 ;; Hardware stack levels required when called:    2
  3993 ;; This function calls:
  3994 ;;		Nothing
  3995 ;; This function is called by:
  3996 ;;		_clearParaFunction1
  3997 ;;		_main
  3998 ;; This function uses a non-reentrant model
  3999 ;;
  4000  04BF                     _setPA0:	
  4001                           
  4002                           ; Regs used in _setPA0: [wreg]
  4003                           ;setPA0@bValue stored from wreg
  4004  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  4005  04C0  00A0               	movwf	setPA0@bValue
  4006                           
  4007                           ;main.c: 218: if( bValue )
  4008  04C1  0820               	movf	setPA0@bValue,w
  4009  04C2  1903               	btfsc	3,2
  4010  04C3  2CC6               	goto	l715
  4011                           
  4012                           ;main.c: 220: PA0 = 1;
  4013  04C4  1405               	bsf	5,0
  4014  04C5  0008               	return
  4015  04C6                     l715:	
  4016                           
  4017                           ;main.c: 224: else
  4018                           ;main.c: 226: PA0 = 0;
  4019  04C6  1005               	bcf	5,0
  4020  04C7  0008               	return
  4021  04C8                     __end_of_setPA0:	
  4022  04C8                     __ptext1020:	
  4023 ;; =============== function _setPA2 ends ============
  4024                           
  4025                           
  4026 ;; *************** function _setPA1 *****************
  4027 ;; Defined at:
  4028 ;;		line 234 in file "C:\temp\dev\AK7030-OTP\main.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;  bValue          1    wreg     unsigned char 
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;  bValue          1    0[BANK0 ] unsigned char 
  4033 ;; Return value:  Size  Location     Type
  4034 ;;		None               void
  4035 ;; Registers used:
  4036 ;;		wreg
  4037 ;; Tracked objects:
  4038 ;;		On entry : 40/0
  4039 ;;		On exit  : 60/0
  4040 ;;		Unchanged: FFF9F/0
  4041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4042 ;;      Params:         0       0       0       0       0
  4043 ;;      Locals:         0       1       0       0       0
  4044 ;;      Temps:          0       0       0       0       0
  4045 ;;      Totals:         0       1       0       0       0
  4046 ;;Total ram usage:        1 bytes
  4047 ;; Hardware stack levels used:    1
  4048 ;; Hardware stack levels required when called:    2
  4049 ;; This function calls:
  4050 ;;		Nothing
  4051 ;; This function is called by:
  4052 ;;		_clearParaFunction1
  4053 ;;		_main
  4054 ;; This function uses a non-reentrant model
  4055 ;;
  4056  04C8                     _setPA1:	
  4057                           
  4058                           ; Regs used in _setPA1: [wreg]
  4059                           ;setPA1@bValue stored from wreg
  4060  04C8  1283               	bcf	3,5	;RP0=0, select bank0
  4061  04C9  00A0               	movwf	setPA1@bValue
  4062                           
  4063                           ;main.c: 235: if( bValue )
  4064  04CA  0820               	movf	setPA1@bValue,w
  4065  04CB  1903               	btfsc	3,2
  4066  04CC  2CCF               	goto	l720
  4067                           
  4068                           ;main.c: 237: PA1 = 1;
  4069  04CD  1485               	bsf	5,1
  4070  04CE  0008               	return
  4071  04CF                     l720:	
  4072                           
  4073                           ;main.c: 241: else
  4074                           ;main.c: 243: PA1 = 0;
  4075  04CF  1085               	bcf	5,1
  4076  04D0  0008               	return
  4077  04D1                     __end_of_setPA1:	
  4078  04D1                     __ptext995:	
  4079 ;; =============== function _getAdOriginalCh0Value ends ============
  4080                           
  4081                           
  4082 ;; *************** function _clearAllTimer *****************
  4083 ;; Defined at:
  4084 ;;		line 100 in file "C:\temp\dev\AK7030-OTP\main.c"
  4085 ;; Parameters:    Size  Location     Type
  4086 ;;		None
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;		None
  4089 ;; Return value:  Size  Location     Type
  4090 ;;		None               void
  4091 ;; Registers used:
  4092 ;;		status,2, status,0, pclath, cstack
  4093 ;; Tracked objects:
  4094 ;;		On entry : 40/20
  4095 ;;		On exit  : 60/0
  4096 ;;		Unchanged: FFF9F/0
  4097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4098 ;;      Params:         0       0       0       0       0
  4099 ;;      Locals:         0       0       0       0       0
  4100 ;;      Temps:          0       0       0       0       0
  4101 ;;      Totals:         0       0       0       0       0
  4102 ;;Total ram usage:        0 bytes
  4103 ;; Hardware stack levels used:    1
  4104 ;; Hardware stack levels required when called:    3
  4105 ;; This function calls:
  4106 ;;		_clearTwelveHoursTimer
  4107 ;;		_clearThreeHoursTimer
  4108 ;;		_clearTwentySecondsTimer
  4109 ;;		_clearTwentyMinuteTimer
  4110 ;; This function is called by:
  4111 ;;		_clearPinPortAndTimer
  4112 ;;		_clearParaFunction1
  4113 ;;		_main
  4114 ;; This function uses a non-reentrant model
  4115 ;;
  4116  04D1                     _clearAllTimer:	
  4117  04D1                     l4728:	
  4118                           ; Regs used in _clearAllTimer: [status,2+status,0+pclath+cstack]
  4119                           
  4120                           
  4121                           ;main.c: 101: clearTwelveHoursTimer();
  4122  04D1  24D8  118A         	fcall	_clearTwelveHoursTimer
  4123                           
  4124                           ;main.c: 102: clearThreeHoursTimer();
  4125  04D3  24DE  118A         	fcall	_clearThreeHoursTimer
  4126                           
  4127                           ;main.c: 103: clearTwentySecondsTimer();
  4128  04D5  26DF  118A         	fcall	_clearTwentySecondsTimer
  4129                           
  4130                           ;main.c: 104: clearTwentyMinuteTimer();
  4131  04D7  2EE5               	ljmp	l4402
  4132  04D8                     __end_of_clearAllTimer:	
  4133  04D8                     __ptext1029:	
  4134 ;; =============== function _clearThreeHoursTimer ends ============
  4135                           
  4136                           
  4137 ;; *************** function _clearTwelveHoursTimer *****************
  4138 ;; Defined at:
  4139 ;;		line 402 in file "C:\temp\dev\AK7030-OTP\common.c"
  4140 ;; Parameters:    Size  Location     Type
  4141 ;;		None
  4142 ;; Auto vars:     Size  Location     Type
  4143 ;;		None
  4144 ;; Return value:  Size  Location     Type
  4145 ;;		None               void
  4146 ;; Registers used:
  4147 ;;		status,2
  4148 ;; Tracked objects:
  4149 ;;		On entry : 40/20
  4150 ;;		On exit  : 60/0
  4151 ;;		Unchanged: FFF9F/0
  4152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4153 ;;      Params:         0       0       0       0       0
  4154 ;;      Locals:         0       0       0       0       0
  4155 ;;      Temps:          0       0       0       0       0
  4156 ;;      Totals:         0       0       0       0       0
  4157 ;;Total ram usage:        0 bytes
  4158 ;; Hardware stack levels used:    1
  4159 ;; Hardware stack levels required when called:    2
  4160 ;; This function calls:
  4161 ;;		Nothing
  4162 ;; This function is called by:
  4163 ;;		_clearAllTimer
  4164 ;; This function uses a non-reentrant model
  4165 ;;
  4166  04D8                     _clearTwelveHoursTimer:	
  4167                           
  4168                           ;common.c: 403: uiBigTimer = 0;
  4169                           
  4170                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  4171  04D8  1683               	bsf	3,5	;RP0=1, select bank1
  4172  04D9  01A0               	clrf	_uiBigTimer^(0+128)
  4173  04DA  01A1               	clrf	(_uiBigTimer+1)^(0+128)
  4174                           
  4175                           ;common.c: 404: bBigTimerStartFlag = 0;
  4176  04DB  1283               	bcf	3,5	;RP0=0, select bank0
  4177  04DC  01CC               	clrf	_bBigTimerStartFlag
  4178  04DD  0008               	return
  4179  04DE                     __end_of_clearTwelveHoursTimer:	
  4180  04DE                     __ptext1028:	
  4181 ;; =============== function _clearTwentySecondsTimer ends ============
  4182                           
  4183                           
  4184 ;; *************** function _clearThreeHoursTimer *****************
  4185 ;; Defined at:
  4186 ;;		line 409 in file "C:\temp\dev\AK7030-OTP\common.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;		None
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;		None
  4191 ;; Return value:  Size  Location     Type
  4192 ;;		None               void
  4193 ;; Registers used:
  4194 ;;		status,2
  4195 ;; Tracked objects:
  4196 ;;		On entry : 60/0
  4197 ;;		On exit  : 60/0
  4198 ;;		Unchanged: FFF9F/0
  4199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4200 ;;      Params:         0       0       0       0       0
  4201 ;;      Locals:         0       0       0       0       0
  4202 ;;      Temps:          0       0       0       0       0
  4203 ;;      Totals:         0       0       0       0       0
  4204 ;;Total ram usage:        0 bytes
  4205 ;; Hardware stack levels used:    1
  4206 ;; Hardware stack levels required when called:    2
  4207 ;; This function calls:
  4208 ;;		Nothing
  4209 ;; This function is called by:
  4210 ;;		_clearAllTimer
  4211 ;;		_main
  4212 ;; This function uses a non-reentrant model
  4213 ;;
  4214  04DE                     _clearThreeHoursTimer:	
  4215                           
  4216                           ;common.c: 410: uiSmallTimer = 0;
  4217                           
  4218                           ; Regs used in _clearThreeHoursTimer: [status,2]
  4219  04DE  1683               	bsf	3,5	;RP0=1, select bank1
  4220  04DF  01A2               	clrf	_uiSmallTimer^(0+128)
  4221  04E0  01A3               	clrf	(_uiSmallTimer+1)^(0+128)
  4222                           
  4223                           ;common.c: 411: bSmallTimerStartFlag = 0;
  4224  04E1  1283               	bcf	3,5	;RP0=0, select bank0
  4225  04E2  01CD               	clrf	_bSmallTimerStartFlag
  4226  04E3  0008               	return
  4227  04E4                     __end_of_clearThreeHoursTimer:	
  4228  04E4                     __ptext991:	
  4229 ;; =============== function _getAdOriginalCh2Value ends ============
  4230                           
  4231                           
  4232 ;; *************** function _vHandle20sTimerOut *****************
  4233 ;; Defined at:
  4234 ;;		line 2481 in file "C:\temp\dev\AK7030-OTP\main.c"
  4235 ;; Parameters:    Size  Location     Type
  4236 ;;  bClearStep      1    wreg     unsigned char 
  4237 ;; Auto vars:     Size  Location     Type
  4238 ;;  bClearStep      1    1[BANK0 ] unsigned char 
  4239 ;; Return value:  Size  Location     Type
  4240 ;;		None               void
  4241 ;; Registers used:
  4242 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4243 ;; Tracked objects:
  4244 ;;		On entry : 140/0
  4245 ;;		On exit  : 160/20
  4246 ;;		Unchanged: FFE9F/0
  4247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4248 ;;      Params:         0       0       0       0       0
  4249 ;;      Locals:         0       1       0       0       0
  4250 ;;      Temps:          0       0       0       0       0
  4251 ;;      Totals:         0       1       0       0       0
  4252 ;;Total ram usage:        1 bytes
  4253 ;; Hardware stack levels used:    1
  4254 ;; Hardware stack levels required when called:    3
  4255 ;; This function calls:
  4256 ;;		_setPA3
  4257 ;;		_setPB4
  4258 ;;		_setPB6
  4259 ;;		_setPB6AsInput
  4260 ;;		_clearTwentySecondsTimer
  4261 ;; This function is called by:
  4262 ;;		_main
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265  04E4                     _vHandle20sTimerOut:	
  4266                           
  4267                           ; Regs used in _vHandle20sTimerOut: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4268                           ;vHandle20sTimerOut@bClearStep stored from wreg
  4269  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  4270  04E5  00A1               	movwf	vHandle20sTimerOut@bClearStep
  4271                           
  4272                           ;main.c: 2482: static unsigned char ucTimerOnBehaviorStep = 0;
  4273                           ;main.c: 2484: static unsigned char ucTimeCnt = 0;
  4274                           ;main.c: 2486: if( 1 == bClearStep)
  4275  04E6  0B21               	decfsz	vHandle20sTimerOut@bClearStep,w
  4276  04E7  2D22               	goto	l4792
  4277                           
  4278                           ;main.c: 2489: ucTimerOnBehaviorStep = 0;
  4279  04E8  1683               	bsf	3,5	;RP0=1, select bank1
  4280  04E9  01B7               	clrf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128)
  4281                           
  4282                           ;main.c: 2490: ucTimeCnt = 0;
  4283  04EA  01FD               	clrf	vHandle20sTimerOut@ucTimeCnt
  4284  04EB  2D22               	goto	l4792
  4285  04EC                     l4746:	
  4286                           
  4287                           ;main.c: 2496: {
  4288                           ;main.c: 2501: setPA3(0);
  4289  04EC  3000               	movlw	0
  4290  04ED  2625  118A         	fcall	_setPA3
  4291                           
  4292                           ;main.c: 2502: setPB4(0);
  4293  04EF  3000               	movlw	0
  4294  04F0  2535  118A         	fcall	_setPB4
  4295                           
  4296                           ;main.c: 2503: setPB6(1);
  4297  04F2  3001               	movlw	1
  4298  04F3  2637               	fcall	_setPB6
  4299                           
  4300                           ;main.c: 2504: ucTimeCnt = 0;
  4301  04F4  01FD               	clrf	vHandle20sTimerOut@ucTimeCnt
  4302                           
  4303                           ;main.c: 2505: ucTimerOnBehaviorStep = 1;
  4304  04F5  1683               	bsf	3,5	;RP0=1, select bank1
  4305  04F6  01B7               	clrf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128)
  4306  04F7  0AB7               	incf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128),f
  4307                           
  4308                           ;main.c: 2506: break;
  4309  04F8  0008               	return
  4310  04F9                     l4752:	
  4311  04F9  300A               	movlw	10
  4312                           
  4313                           ;main.c: 2510: {
  4314                           ;main.c: 2514: ucTimeCnt++;
  4315  04FA  0AFD               	incf	vHandle20sTimerOut@ucTimeCnt,f
  4316                           
  4317                           ;main.c: 2516: if( ucTimeCnt >= 10)
  4318  04FB  027D               	subwf	vHandle20sTimerOut@ucTimeCnt,w
  4319  04FC  1C03               	skipc
  4320  04FD  0008               	return
  4321  04FE  3002               	movlw	2
  4322                           
  4323                           ;main.c: 2517: {
  4324                           ;main.c: 2518: ucTimeCnt = 0;
  4325  04FF  01FD               	clrf	vHandle20sTimerOut@ucTimeCnt
  4326                           
  4327                           ;main.c: 2519: ucTimerOnBehaviorStep = 2;
  4328  0500  00B7               	movwf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128)
  4329  0501  0008               	return
  4330  0502                     l4760:	
  4331                           
  4332                           ;main.c: 2525: {
  4333                           ;main.c: 2529: ucTimeCnt++;
  4334  0502  0AFD               	incf	vHandle20sTimerOut@ucTimeCnt,f
  4335                           
  4336                           ;main.c: 2531: if( ucTimeCnt >= 1)
  4337  0503  087D               	movf	vHandle20sTimerOut@ucTimeCnt,w
  4338  0504  1903               	btfsc	3,2
  4339  0505  0008               	return
  4340  0506  3003               	movlw	3
  4341                           
  4342                           ;main.c: 2532: {
  4343                           ;main.c: 2533: ucTimeCnt = 0;
  4344  0507  01FD               	clrf	vHandle20sTimerOut@ucTimeCnt
  4345                           
  4346                           ;main.c: 2535: ucTimerOnBehaviorStep = 3;
  4347  0508  00B7               	movwf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128)
  4348  0509  0008               	return
  4349  050A                     l4768:	
  4350                           
  4351                           ;main.c: 2541: {
  4352                           ;main.c: 2545: setPA3(1);
  4353  050A  3001               	movlw	1
  4354  050B  2625  118A         	fcall	_setPA3
  4355                           
  4356                           ;main.c: 2546: setPB4(1);
  4357  050D  3001               	movlw	1
  4358  050E  2535  118A         	fcall	_setPB4
  4359                           
  4360                           ;main.c: 2548: setPB6AsInput();
  4361  0510  2645               	fcall	_setPB6AsInput
  4362  0511  3004               	movlw	4
  4363                           
  4364                           ;main.c: 2549: ucTimeCnt = 0;
  4365  0512  01FD               	clrf	vHandle20sTimerOut@ucTimeCnt
  4366                           
  4367                           ;main.c: 2551: ucTimerOnBehaviorStep = 4;
  4368  0513  00B7               	movwf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128)
  4369                           
  4370                           ;main.c: 2552: break;
  4371  0514  0008               	return
  4372  0515                     l4776:	
  4373  0515  3002               	movlw	2
  4374                           
  4375                           ;main.c: 2555: {
  4376                           ;main.c: 2559: ucTimeCnt++;
  4377  0516  0AFD               	incf	vHandle20sTimerOut@ucTimeCnt,f
  4378                           
  4379                           ;main.c: 2561: if( ucTimeCnt >= 2)
  4380  0517  027D               	subwf	vHandle20sTimerOut@ucTimeCnt,w
  4381  0518  1C03               	skipc
  4382  0519  0008               	return
  4383                           
  4384                           ;main.c: 2562: {
  4385                           ;main.c: 2563: clearTwentySecondsTimer();
  4386  051A  26DF               	fcall	_clearTwentySecondsTimer
  4387  051B  3003               	movlw	3
  4388                           
  4389                           ;main.c: 2565: ucTimeCnt = 0;
  4390  051C  01FD               	clrf	vHandle20sTimerOut@ucTimeCnt
  4391                           
  4392                           ;main.c: 2567: ucADC4_Step = ADC4_STEP_INIT;
  4393  051D  01D3               	clrf	_ucADC4_Step
  4394                           
  4395                           ;main.c: 2569: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  4396  051E  00D0               	movwf	_enumMainLoopStep
  4397                           
  4398                           ;main.c: 2571: ucTimerOnBehaviorStep = 0;
  4399  051F  1683               	bsf	3,5	;RP0=1, select bank1
  4400  0520  01B7               	clrf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128)
  4401  0521  0008               	return
  4402  0522                     l4792:	
  4403  0522  1683               	bsf	3,5	;RP0=1, select bank1
  4404  0523  0837               	movf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128),w
  4405                           
  4406                           ; Switch size 1, requested type "space"
  4407                           ; Number of cases is 5, Range of values is 0 to 4
  4408                           ; switch strategies available:
  4409                           ; Name         Instructions Cycles
  4410                           ; simple_byte           16     9 (average)
  4411                           ; direct_byte           17     7 (fixed)
  4412                           ; jumptable            260     6 (fixed)
  4413                           ; rangetable             9     6 (fixed)
  4414                           ; spacedrange           16     9 (fixed)
  4415                           ; locatedrange           5     3 (fixed)
  4416                           ;	Chosen strategy is simple_byte
  4417  0524  3A00               	xorlw	0	; case 0
  4418  0525  1903               	skipnz
  4419  0526  2CEC               	goto	l4746
  4420  0527  3A01               	xorlw	1	; case 1
  4421  0528  1903               	skipnz
  4422  0529  2CF9               	goto	l4752
  4423  052A  3A03               	xorlw	3	; case 2
  4424  052B  1903               	skipnz
  4425  052C  2D02               	goto	l4760
  4426  052D  3A01               	xorlw	1	; case 3
  4427  052E  1903               	skipnz
  4428  052F  2D0A               	goto	l4768
  4429  0530  3A07               	xorlw	7	; case 4
  4430  0531  1903               	skipnz
  4431  0532  2D15               	goto	l4776
  4432  0533  2D34               	goto	l1126
  4433  0534                     l1126:	
  4434  0534  0008               	return
  4435  0535                     __end_of_vHandle20sTimerOut:	
  4436  0535                     __ptext1016:	
  4437 ;; =============== function _setPA6 ends ============
  4438                           
  4439                           
  4440 ;; *************** function _setPB4 *****************
  4441 ;; Defined at:
  4442 ;;		line 310 in file "C:\temp\dev\AK7030-OTP\main.c"
  4443 ;; Parameters:    Size  Location     Type
  4444 ;;  bValue          1    wreg     unsigned char 
  4445 ;; Auto vars:     Size  Location     Type
  4446 ;;  bValue          1    0[BANK0 ] unsigned char 
  4447 ;; Return value:  Size  Location     Type
  4448 ;;		None               void
  4449 ;; Registers used:
  4450 ;;		wreg
  4451 ;; Tracked objects:
  4452 ;;		On entry : 60/0
  4453 ;;		On exit  : 60/0
  4454 ;;		Unchanged: FFF9F/0
  4455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4456 ;;      Params:         0       0       0       0       0
  4457 ;;      Locals:         0       1       0       0       0
  4458 ;;      Temps:          0       0       0       0       0
  4459 ;;      Totals:         0       1       0       0       0
  4460 ;;Total ram usage:        1 bytes
  4461 ;; Hardware stack levels used:    1
  4462 ;; Hardware stack levels required when called:    2
  4463 ;; This function calls:
  4464 ;;		Nothing
  4465 ;; This function is called by:
  4466 ;;		_clearParaFunction1
  4467 ;;		_main
  4468 ;;		_vHandle20sTimerOut
  4469 ;; This function uses a non-reentrant model
  4470 ;;
  4471  0535                     _setPB4:	
  4472                           
  4473                           ; Regs used in _setPB4: [wreg]
  4474                           ;setPB4@bValue stored from wreg
  4475  0535  00A0               	movwf	setPB4@bValue
  4476                           
  4477                           ;main.c: 311: if( bValue )
  4478  0536  0820               	movf	setPB4@bValue,w
  4479  0537  1903               	btfsc	3,2
  4480  0538  2D3B               	goto	l740
  4481                           
  4482                           ;main.c: 313: PB4 = 1;
  4483  0539  1606               	bsf	6,4
  4484  053A  0008               	return
  4485  053B                     l740:	
  4486                           
  4487                           ;main.c: 317: else
  4488                           ;main.c: 319: PB4 = 0;
  4489  053B  1206               	bcf	6,4
  4490  053C  0008               	return
  4491  053D                     __end_of_setPB4:	
  4492  053D                     __ptext985:	
  4493 ;; =============== function _main ends ============
  4494                           
  4495                           
  4496 ;; *************** function _vHandle20sTimeron *****************
  4497 ;; Defined at:
  4498 ;;		line 2207 in file "C:\temp\dev\AK7030-OTP\main.c"
  4499 ;; Parameters:    Size  Location     Type
  4500 ;;		None
  4501 ;; Auto vars:     Size  Location     Type
  4502 ;;		None
  4503 ;; Return value:  Size  Location     Type
  4504 ;;		None               void
  4505 ;; Registers used:
  4506 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4507 ;; Tracked objects:
  4508 ;;		On entry : 140/0
  4509 ;;		On exit  : 140/0
  4510 ;;		Unchanged: FFE00/0
  4511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4512 ;;      Params:         0       0       0       0       0
  4513 ;;      Locals:         0       0       0       0       0
  4514 ;;      Temps:          0       0       0       0       0
  4515 ;;      Totals:         0       0       0       0       0
  4516 ;;Total ram usage:        0 bytes
  4517 ;; Hardware stack levels used:    1
  4518 ;; Hardware stack levels required when called:    4
  4519 ;; This function calls:
  4520 ;;		_getAdOriginalCh2Value
  4521 ;;		_getAdOriginalCh6Value
  4522 ;;		_setPA3
  4523 ;;		_setPB6
  4524 ;;		_setPB6AsInput
  4525 ;; This function is called by:
  4526 ;;		_main
  4527 ;; This function uses a non-reentrant model
  4528 ;;
  4529  053D                     _vHandle20sTimeron:	
  4530                           
  4531                           ;main.c: 2208: enum enum_waiting_loop_step
  4532                           ;main.c: 2209: {
  4533                           ;main.c: 2210: WAITING_LOOP_STEP1 = 0,
  4534                           ;main.c: 2211: WAITING_LOOP_STEP2,
  4535                           ;main.c: 2212: WAITING_LOOP_STEP3,
  4536                           ;main.c: 2213: WAITING_LOOP_STEP4,
  4537                           ;main.c: 2214: WAITING_LOOP_STEP5,
  4538                           ;main.c: 2215: WAITING_LOOP_STEP6,
  4539                           ;main.c: 2216: WAITING_LOOP_STEP7,
  4540                           ;main.c: 2217: WAITING_LOOP_STEP8,
  4541                           ;main.c: 2218: WAITING_LOOP_STEP9,
  4542                           ;main.c: 2219: };
  4543                           ;main.c: 2221: enum enumCmpStep
  4544                           ;main.c: 2222: {
  4545                           ;main.c: 2223: COMPARE_STEP0 = 0,
  4546                           ;main.c: 2224: COMPARE_STEP1,
  4547                           ;main.c: 2225: COMPARE_STEP2,
  4548                           
  4549                           ; Regs used in _vHandle20sTimeron: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4550  053D  2E07               	goto	l4974
  4551  053E                     l4842:	
  4552                           
  4553                           ;main.c: 2242: {
  4554                           ;main.c: 2243: if((getAdOriginalCh2Value() > 1950))
  4555  053E  261C  118A         	fcall	_getAdOriginalCh2Value
  4556  0540  3007               	movlw	7
  4557  0541  0247               	subwf	?_getAdOriginalCh2Value+1,w
  4558  0542  309F               	movlw	159
  4559  0543  1903               	skipnz
  4560  0544  0246               	subwf	?_getAdOriginalCh2Value,w
  4561  0545  1C03               	skipc
  4562  0546  2D4B               	goto	l4848
  4563                           
  4564                           ;main.c: 2244: {
  4565                           ;main.c: 2245: ucTimerCntMore++;
  4566  0547  1683               	bsf	3,5	;RP0=1, select bank1
  4567  0548  0ABF               	incf	vHandle20sTimeron@ucTimerCntMore^(0+128),f
  4568                           
  4569                           ;main.c: 2246: ucTimerCntLess = 0;
  4570  0549  01BE               	clrf	vHandle20sTimeron@ucTimerCntLess^(0+128)
  4571                           
  4572                           ;main.c: 2247: }
  4573  054A  2D4E               	goto	l4852
  4574  054B                     l4848:	
  4575                           
  4576                           ;main.c: 2248: else
  4577                           ;main.c: 2249: {
  4578                           ;main.c: 2250: ucTimerCntLess++;
  4579  054B  1683               	bsf	3,5	;RP0=1, select bank1
  4580  054C  0ABE               	incf	vHandle20sTimeron@ucTimerCntLess^(0+128),f
  4581                           
  4582                           ;main.c: 2251: ucTimerCntMore = 0;
  4583  054D  01BF               	clrf	vHandle20sTimeron@ucTimerCntMore^(0+128)
  4584  054E                     l4852:	
  4585                           
  4586                           ;main.c: 2252: }
  4587                           ;main.c: 2254: if(ucTimerCntMore >= 2)
  4588  054E  3002               	movlw	2
  4589  054F  023F               	subwf	vHandle20sTimeron@ucTimerCntMore^(0+128),w
  4590  0550  1C03               	skipc
  4591  0551  2D55               	goto	l4858
  4592                           
  4593                           ;main.c: 2255: {
  4594                           ;main.c: 2256: ucCompareStep = COMPARE_STEP1;
  4595  0552  01B8               	clrf	vHandle20sTimeron@ucCompareStep^(0+128)
  4596  0553  0AB8               	incf	vHandle20sTimeron@ucCompareStep^(0+128),f
  4597                           
  4598                           ;main.c: 2257: ucTimerCntMore = 0;
  4599  0554  01BF               	clrf	vHandle20sTimeron@ucTimerCntMore^(0+128)
  4600  0555                     l4858:	
  4601                           
  4602                           ;main.c: 2258: }
  4603                           ;main.c: 2260: if(ucTimerCntLess >= 2)
  4604  0555  3002               	movlw	2
  4605  0556  023E               	subwf	vHandle20sTimeron@ucTimerCntLess^(0+128),w
  4606  0557  1C03               	skipc
  4607  0558  2E13               	goto	l4976
  4608                           
  4609                           ;main.c: 2261: {
  4610                           ;main.c: 2262: ucCompareStep = COMPARE_STEP2;
  4611  0559  3002               	movlw	2
  4612  055A  00B8               	movwf	vHandle20sTimeron@ucCompareStep^(0+128)
  4613                           
  4614                           ;main.c: 2263: ucTimerCntLess = 0;
  4615  055B  01BE               	clrf	vHandle20sTimeron@ucTimerCntLess^(0+128)
  4616  055C  2E13               	goto	l4976
  4617  055D                     l4864:	
  4618                           
  4619                           ;main.c: 2272: {
  4620                           ;main.c: 2273: static unsigned char ucMoreThanP8sCnt = 0;
  4621                           ;main.c: 2275: static unsigned char ucLessThanP8sCnt = 0;
  4622                           ;main.c: 2277: static unsigned char ucTimerCntN1 = 0;
  4623                           ;main.c: 2279: if((getAdOriginalCh2Value() < 1950))
  4624  055D  261C  118A         	fcall	_getAdOriginalCh2Value
  4625  055F  3007               	movlw	7
  4626  0560  0247               	subwf	?_getAdOriginalCh2Value+1,w
  4627  0561  309E               	movlw	158
  4628  0562  1903               	skipnz
  4629  0563  0246               	subwf	?_getAdOriginalCh2Value,w
  4630  0564  1803               	skipnc
  4631  0565  2D72               	goto	l4880
  4632                           
  4633                           ;main.c: 2280: {
  4634                           ;main.c: 2281: ucTimerCntN1++;
  4635  0566  1683               	bsf	3,5	;RP0=1, select bank1
  4636  0567  3002               	movlw	2
  4637  0568  0AC0               	incf	vHandle20sTimeron@ucTimerCntN1^(0+128),f
  4638                           
  4639                           ;main.c: 2282: if(ucTimerCntN1 >= 2)
  4640  0569  0240               	subwf	vHandle20sTimeron@ucTimerCntN1^(0+128),w
  4641  056A  1C03               	skipc
  4642  056B  2E13               	goto	l4976
  4643  056C  3002               	movlw	2
  4644                           
  4645                           ;main.c: 2283: {
  4646                           ;main.c: 2284: ucTimerCntN1 = 0;
  4647  056D  01C0               	clrf	vHandle20sTimeron@ucTimerCntN1^(0+128)
  4648                           
  4649                           ;main.c: 2285: ucCompareStep = COMPARE_STEP2;
  4650  056E  00B8               	movwf	vHandle20sTimeron@ucCompareStep^(0+128)
  4651                           
  4652                           ;main.c: 2287: ucLessThanP8sCnt = 0;
  4653  056F  01BA               	clrf	vHandle20sTimeron@ucLessThanP8sCnt^(0+128)
  4654                           
  4655                           ;main.c: 2289: ucMoreThanP8sCnt = 0;
  4656  0570  01BC               	clrf	vHandle20sTimeron@ucMoreThanP8sCnt^(0+128)
  4657  0571  2E13               	goto	l4976
  4658  0572                     l4880:	
  4659                           
  4660                           ;main.c: 2293: else
  4661                           ;main.c: 2294: ucTimerCntN1 = 0;
  4662  0572  1683               	bsf	3,5	;RP0=1, select bank1
  4663  0573  01C0               	clrf	vHandle20sTimeron@ucTimerCntN1^(0+128)
  4664                           
  4665                           ;main.c: 2300: if((getAdOriginalCh6Value() < 50))
  4666  0574  262E  118A         	fcall	_getAdOriginalCh6Value
  4667  0576  3000               	movlw	0
  4668  0577  0247               	subwf	?_getAdOriginalCh6Value+1,w
  4669  0578  3032               	movlw	50
  4670  0579  1903               	skipnz
  4671  057A  0246               	subwf	?_getAdOriginalCh6Value,w
  4672  057B  1803               	skipnc
  4673  057C  2D81               	goto	l4888
  4674                           
  4675                           ;main.c: 2301: {
  4676                           ;main.c: 2302: ucLessThanP8sCnt++;
  4677  057D  1683               	bsf	3,5	;RP0=1, select bank1
  4678  057E  0ABA               	incf	vHandle20sTimeron@ucLessThanP8sCnt^(0+128),f
  4679                           
  4680                           ;main.c: 2303: ucMoreThanP8sCnt = 0;
  4681  057F  01BC               	clrf	vHandle20sTimeron@ucMoreThanP8sCnt^(0+128)
  4682                           
  4683                           ;main.c: 2304: }
  4684  0580  2D84               	goto	l4892
  4685  0581                     l4888:	
  4686                           
  4687                           ;main.c: 2305: else
  4688                           ;main.c: 2306: {
  4689                           ;main.c: 2307: ucMoreThanP8sCnt++;
  4690  0581  1683               	bsf	3,5	;RP0=1, select bank1
  4691  0582  0ABC               	incf	vHandle20sTimeron@ucMoreThanP8sCnt^(0+128),f
  4692                           
  4693                           ;main.c: 2308: ucLessThanP8sCnt = 0;
  4694  0583  01BA               	clrf	vHandle20sTimeron@ucLessThanP8sCnt^(0+128)
  4695  0584                     l4892:	
  4696                           
  4697                           ;main.c: 2309: }
  4698                           ;main.c: 2311: if( ucLessThanP8sCnt >= 8)
  4699  0584  3008               	movlw	8
  4700  0585  023A               	subwf	vHandle20sTimeron@ucLessThanP8sCnt^(0+128),w
  4701  0586  1C03               	skipc
  4702  0587  2D8E               	goto	l4898
  4703                           
  4704                           ;main.c: 2312: {
  4705                           ;main.c: 2313: ucLessThanP8sCnt = 0;
  4706  0588  01BA               	clrf	vHandle20sTimeron@ucLessThanP8sCnt^(0+128)
  4707                           
  4708                           ;main.c: 2314: ucMoreThanP8sCnt = 0;
  4709  0589  01BC               	clrf	vHandle20sTimeron@ucMoreThanP8sCnt^(0+128)
  4710                           
  4711                           ;main.c: 2316: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  4712  058A  1283               	bcf	3,5	;RP0=0, select bank0
  4713  058B  01D0               	clrf	_enumMainLoopStep
  4714  058C  0AD0               	incf	_enumMainLoopStep,f
  4715  058D  2D97               	goto	L15
  4716  058E                     l4898:	
  4717                           ;main.c: 2320: ;
  4718                           ;main.c: 2321: }
  4719                           
  4720                           ;main.c: 2319: ucCompareStep = COMPARE_STEP0;
  4721                           
  4722                           ;main.c: 2317: ucADC4_Step = ADC4_STEP_INIT;
  4723                           
  4724                           
  4725                           ;main.c: 2322: else if( ucMoreThanP8sCnt >= 8 )
  4726  058E  3008               	movlw	8
  4727  058F  023C               	subwf	vHandle20sTimeron@ucMoreThanP8sCnt^(0+128),w
  4728  0590  1C03               	skipc
  4729  0591  2E13               	goto	l4976
  4730  0592  3003               	movlw	3
  4731                           
  4732                           ;main.c: 2323: {
  4733                           ;main.c: 2324: ucLessThanP8sCnt = 0;
  4734  0593  01BA               	clrf	vHandle20sTimeron@ucLessThanP8sCnt^(0+128)
  4735                           
  4736                           ;main.c: 2325: ucMoreThanP8sCnt = 0;
  4737  0594  01BC               	clrf	vHandle20sTimeron@ucMoreThanP8sCnt^(0+128)
  4738                           
  4739                           ;main.c: 2327: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  4740  0595  1283               	bcf	3,5	;RP0=0, select bank0
  4741  0596  00D0               	movwf	_enumMainLoopStep
  4742  0597                     L15:	
  4743                           
  4744                           ;main.c: 2328: ucADC4_Step = ADC4_STEP_INIT;
  4745  0597  01D3               	clrf	_ucADC4_Step
  4746  0598                     l4906:	
  4747                           
  4748                           ;main.c: 2330: ucCompareStep = COMPARE_STEP0;
  4749  0598  1683               	bsf	3,5	;RP0=1, select bank1
  4750  0599  01B8               	clrf	vHandle20sTimeron@ucCompareStep^(0+128)
  4751                           
  4752                           ;main.c: 2331: ;
  4753                           ;main.c: 2332: }
  4754  059A  2E13               	goto	l4976
  4755  059B                     l4908:	
  4756  059B  3000               	movlw	0
  4757                           
  4758                           ;main.c: 2355: {
  4759                           ;main.c: 2359: ucTimeCntP2s = 0;
  4760  059C  01BD               	clrf	vHandle20sTimeron@ucTimeCntP2s^(0+128)
  4761                           
  4762                           ;main.c: 2360: setPA3(0);
  4763  059D  2625  118A         	fcall	_setPA3
  4764                           
  4765                           ;main.c: 2361: setPB6(1);
  4766  059F  3001               	movlw	1
  4767  05A0  2637  118A         	fcall	_setPB6
  4768                           
  4769                           ;main.c: 2362: waitLoopStep = WAITING_LOOP_STEP2;
  4770  05A2  1683               	bsf	3,5	;RP0=1, select bank1
  4771  05A3  01C2               	clrf	vHandle20sTimeron@waitLoopStep^(0+128)
  4772  05A4  0AC2               	incf	vHandle20sTimeron@waitLoopStep^(0+128),f
  4773                           
  4774                           ;main.c: 2363: break;
  4775  05A5  2E13               	goto	l4976
  4776  05A6                     l4916:	
  4777                           
  4778                           ;main.c: 2367: {
  4779                           ;main.c: 2371: if((getAdOriginalCh2Value() > 2300))
  4780  05A6  261C  118A         	fcall	_getAdOriginalCh2Value
  4781  05A8  3008               	movlw	8
  4782  05A9  0247               	subwf	?_getAdOriginalCh2Value+1,w
  4783  05AA  30FD               	movlw	253
  4784  05AB  1903               	skipnz
  4785  05AC  0246               	subwf	?_getAdOriginalCh2Value,w
  4786  05AD  1C03               	skipc
  4787  05AE  2DB2               	goto	l4920
  4788                           
  4789                           ;main.c: 2372: {
  4790                           ;main.c: 2373: ucTimeCntP2s++;
  4791  05AF  1683               	bsf	3,5	;RP0=1, select bank1
  4792  05B0  0ABD               	incf	vHandle20sTimeron@ucTimeCntP2s^(0+128),f
  4793                           
  4794                           ;main.c: 2374: }
  4795  05B1  2DB4               	goto	l4922
  4796  05B2                     l4920:	
  4797                           
  4798                           ;main.c: 2375: else
  4799                           ;main.c: 2376: ucTimeCntP2s = 0;
  4800  05B2  1683               	bsf	3,5	;RP0=1, select bank1
  4801  05B3  01BD               	clrf	vHandle20sTimeron@ucTimeCntP2s^(0+128)
  4802  05B4                     l4922:	
  4803                           
  4804                           ;main.c: 2378: if( ucTimeCntP2s >= 2)
  4805  05B4  3002               	movlw	2
  4806  05B5  023D               	subwf	vHandle20sTimeron@ucTimeCntP2s^(0+128),w
  4807  05B6  1C03               	skipc
  4808  05B7  2E13               	goto	l4976
  4809  05B8  3002               	movlw	2
  4810                           
  4811                           ;main.c: 2379: {
  4812                           ;main.c: 2380: ucTimeCntP2s = 0;
  4813  05B9  01BD               	clrf	vHandle20sTimeron@ucTimeCntP2s^(0+128)
  4814                           
  4815                           ;main.c: 2381: waitLoopStep = WAITING_LOOP_STEP3;
  4816  05BA  2DCA               	goto	L14
  4817  05BB                     l4928:	
  4818                           
  4819                           ;main.c: 2387: {
  4820                           ;main.c: 2391: setPA3(1);
  4821  05BB  3001               	movlw	1
  4822  05BC  2625  118A         	fcall	_setPA3
  4823                           
  4824                           ;main.c: 2393: setPB6AsInput();
  4825  05BE  2645  118A         	fcall	_setPB6AsInput
  4826                           
  4827                           ;main.c: 2394: waitLoopStep = WAITING_LOOP_STEP4;
  4828  05C0  3003               	movlw	3
  4829  05C1  2DCA               	goto	L14
  4830  05C2                     l4932:	
  4831                           ;main.c: 2395: break;
  4832                           
  4833                           
  4834                           ;main.c: 2399: {
  4835                           ;main.c: 2403: static unsigned char ucTimerCntP5s = 0;
  4836                           ;main.c: 2404: if( ucTimerCntP5s < 5)
  4837  05C2  3005               	movlw	5
  4838  05C3  0241               	subwf	vHandle20sTimeron@ucTimerCntP5s^(0+128),w
  4839  05C4  1803               	skipnc
  4840  05C5  2DC8               	goto	l4936
  4841                           
  4842                           ;main.c: 2405: ucTimerCntP5s++;
  4843  05C6  0AC1               	incf	vHandle20sTimeron@ucTimerCntP5s^(0+128),f
  4844  05C7  2E13               	goto	l4976
  4845  05C8                     l4936:	
  4846  05C8  3004               	movlw	4
  4847                           
  4848                           ;main.c: 2406: else
  4849                           ;main.c: 2407: {
  4850                           ;main.c: 2408: ucTimerCntP5s = 0;
  4851  05C9  01C1               	clrf	vHandle20sTimeron@ucTimerCntP5s^(0+128)
  4852  05CA                     L14:	
  4853                           ;main.c: 2409: waitLoopStep = WAITING_LOOP_STEP5;
  4854                           
  4855  05CA  00C2               	movwf	vHandle20sTimeron@waitLoopStep^(0+128)
  4856  05CB  2E13               	goto	l4976
  4857  05CC                     l4940:	
  4858                           
  4859                           ;main.c: 2416: {
  4860                           ;main.c: 2420: static unsigned char ucMoreThanP3sCnt = 0;
  4861                           ;main.c: 2422: static unsigned char ucLessThanP3sCnt = 0;
  4862                           ;main.c: 2423: if((getAdOriginalCh6Value() < 50))
  4863  05CC  262E  118A         	fcall	_getAdOriginalCh6Value
  4864  05CE  3000               	movlw	0
  4865  05CF  0247               	subwf	?_getAdOriginalCh6Value+1,w
  4866  05D0  3032               	movlw	50
  4867  05D1  1903               	skipnz
  4868  05D2  0246               	subwf	?_getAdOriginalCh6Value,w
  4869  05D3  1803               	skipnc
  4870  05D4  2DD9               	goto	l4946
  4871                           
  4872                           ;main.c: 2424: {
  4873                           ;main.c: 2425: ucLessThanP3sCnt++;
  4874  05D5  1683               	bsf	3,5	;RP0=1, select bank1
  4875  05D6  0AB9               	incf	vHandle20sTimeron@ucLessThanP3sCnt^(0+128),f
  4876                           
  4877                           ;main.c: 2426: ucMoreThanP3sCnt = 0;
  4878  05D7  01BB               	clrf	vHandle20sTimeron@ucMoreThanP3sCnt^(0+128)
  4879                           
  4880                           ;main.c: 2427: }
  4881  05D8  2DDC               	goto	l4950
  4882  05D9                     l4946:	
  4883                           
  4884                           ;main.c: 2428: else
  4885                           ;main.c: 2429: {
  4886                           ;main.c: 2430: ucMoreThanP3sCnt++;
  4887  05D9  1683               	bsf	3,5	;RP0=1, select bank1
  4888  05DA  0ABB               	incf	vHandle20sTimeron@ucMoreThanP3sCnt^(0+128),f
  4889                           
  4890                           ;main.c: 2431: ucLessThanP3sCnt = 0;
  4891  05DB  01B9               	clrf	vHandle20sTimeron@ucLessThanP3sCnt^(0+128)
  4892  05DC                     l4950:	
  4893                           
  4894                           ;main.c: 2432: }
  4895                           ;main.c: 2434: if( ucLessThanP3sCnt >= 3)
  4896  05DC  3003               	movlw	3
  4897  05DD  0239               	subwf	vHandle20sTimeron@ucLessThanP3sCnt^(0+128),w
  4898  05DE  1C03               	skipc
  4899  05DF  2DE9               	goto	l4956
  4900                           
  4901                           ;main.c: 2435: {
  4902                           ;main.c: 2436: ucLessThanP3sCnt = 0;
  4903  05E0  01B9               	clrf	vHandle20sTimeron@ucLessThanP3sCnt^(0+128)
  4904                           
  4905                           ;main.c: 2437: ucMoreThanP3sCnt = 0;
  4906  05E1  01BB               	clrf	vHandle20sTimeron@ucMoreThanP3sCnt^(0+128)
  4907                           
  4908                           ;main.c: 2439: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  4909  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  4910  05E3  01D0               	clrf	_enumMainLoopStep
  4911  05E4  0AD0               	incf	_enumMainLoopStep,f
  4912                           
  4913                           ;main.c: 2440: ucADC4_Step = ADC4_STEP_INIT;
  4914  05E5  01D3               	clrf	_ucADC4_Step
  4915                           
  4916                           ;main.c: 2442: waitLoopStep = WAITING_LOOP_STEP1;
  4917  05E6  1683               	bsf	3,5	;RP0=1, select bank1
  4918  05E7  01C2               	clrf	vHandle20sTimeron@waitLoopStep^(0+128)
  4919                           
  4920                           ;main.c: 2444: ucCompareStep = COMPARE_STEP0;
  4921  05E8  01B8               	clrf	vHandle20sTimeron@ucCompareStep^(0+128)
  4922  05E9                     l4956:	
  4923                           
  4924                           ;main.c: 2445: }
  4925                           ;main.c: 2447: if(ucMoreThanP3sCnt >= 3)
  4926  05E9  3003               	movlw	3
  4927  05EA  023B               	subwf	vHandle20sTimeron@ucMoreThanP3sCnt^(0+128),w
  4928  05EB  1C03               	skipc
  4929  05EC  2E13               	goto	l4976
  4930  05ED  3003               	movlw	3
  4931                           
  4932                           ;main.c: 2448: {
  4933                           ;main.c: 2449: ucLessThanP3sCnt = 0;
  4934  05EE  01B9               	clrf	vHandle20sTimeron@ucLessThanP3sCnt^(0+128)
  4935                           
  4936                           ;main.c: 2450: ucMoreThanP3sCnt = 0;
  4937  05EF  01BB               	clrf	vHandle20sTimeron@ucMoreThanP3sCnt^(0+128)
  4938                           
  4939                           ;main.c: 2452: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  4940  05F0  1283               	bcf	3,5	;RP0=0, select bank0
  4941  05F1  00D0               	movwf	_enumMainLoopStep
  4942                           
  4943                           ;main.c: 2453: ucADC4_Step = ADC4_STEP_INIT;
  4944  05F2  01D3               	clrf	_ucADC4_Step
  4945                           
  4946                           ;main.c: 2455: waitLoopStep = WAITING_LOOP_STEP1;
  4947  05F3  1683               	bsf	3,5	;RP0=1, select bank1
  4948  05F4  01C2               	clrf	vHandle20sTimeron@waitLoopStep^(0+128)
  4949  05F5  2D98               	goto	l4906
  4950  05F6                     l4970:	
  4951  05F6  0842               	movf	vHandle20sTimeron@waitLoopStep^(0+128),w
  4952                           
  4953                           ; Switch size 1, requested type "space"
  4954                           ; Number of cases is 5, Range of values is 0 to 4
  4955                           ; switch strategies available:
  4956                           ; Name         Instructions Cycles
  4957                           ; simple_byte           16     9 (average)
  4958                           ; direct_byte           17     7 (fixed)
  4959                           ; jumptable            260     6 (fixed)
  4960                           ; rangetable             9     6 (fixed)
  4961                           ; spacedrange           16     9 (fixed)
  4962                           ; locatedrange           5     3 (fixed)
  4963                           ;	Chosen strategy is simple_byte
  4964  05F7  3A00               	xorlw	0	; case 0
  4965  05F8  1903               	skipnz
  4966  05F9  2D9B               	goto	l4908
  4967  05FA  3A01               	xorlw	1	; case 1
  4968  05FB  1903               	skipnz
  4969  05FC  2DA6               	goto	l4916
  4970  05FD  3A03               	xorlw	3	; case 2
  4971  05FE  1903               	skipnz
  4972  05FF  2DBB               	goto	l4928
  4973  0600  3A01               	xorlw	1	; case 3
  4974  0601  1903               	skipnz
  4975  0602  2DC2               	goto	l4932
  4976  0603  3A07               	xorlw	7	; case 4
  4977  0604  1903               	skipnz
  4978  0605  2DCC               	goto	l4940
  4979  0606  2E13               	goto	l4976
  4980  0607                     l4974:	
  4981  0607  1683               	bsf	3,5	;RP0=1, select bank1
  4982  0608  0838               	movf	vHandle20sTimeron@ucCompareStep^(0+128),w
  4983                           
  4984                           ; Switch size 1, requested type "space"
  4985                           ; Number of cases is 3, Range of values is 0 to 2
  4986                           ; switch strategies available:
  4987                           ; Name         Instructions Cycles
  4988                           ; simple_byte           10     6 (average)
  4989                           ; direct_byte           13     7 (fixed)
  4990                           ; jumptable            260     6 (fixed)
  4991                           ; rangetable             7     6 (fixed)
  4992                           ; spacedrange           12     9 (fixed)
  4993                           ; locatedrange           3     3 (fixed)
  4994                           ;	Chosen strategy is simple_byte
  4995  0609  3A00               	xorlw	0	; case 0
  4996  060A  1903               	skipnz
  4997  060B  2D3E               	goto	l4842
  4998  060C  3A01               	xorlw	1	; case 1
  4999  060D  1903               	skipnz
  5000  060E  2D5D               	goto	l4864
  5001  060F  3A03               	xorlw	3	; case 2
  5002  0610  1903               	skipnz
  5003  0611  2DF6               	goto	l4970
  5004  0612  2E13               	goto	l4976
  5005  0613                     l4976:	
  5006                           
  5007                           ;main.c: 2472: if(ADC4_STEP_INIT == ucADC4_Step)
  5008  0613  1283               	bcf	3,5	;RP0=0, select bank0
  5009  0614  08D3               	movf	_ucADC4_Step,f
  5010  0615  1D03               	skipz
  5011  0616  0008               	return
  5012                           
  5013                           ;main.c: 2473: {
  5014                           ;main.c: 2474: ucTimerCntMore = 0;
  5015  0617  1683               	bsf	3,5	;RP0=1, select bank1
  5016  0618  01BF               	clrf	vHandle20sTimeron@ucTimerCntMore^(0+128)
  5017                           
  5018                           ;main.c: 2475: ucTimerCntLess = 0;
  5019  0619  01BE               	clrf	vHandle20sTimeron@ucTimerCntLess^(0+128)
  5020                           
  5021                           ;main.c: 2476: ucCompareStep = COMPARE_STEP0;
  5022  061A  01B8               	clrf	vHandle20sTimeron@ucCompareStep^(0+128)
  5023  061B  0008               	return
  5024  061C                     __end_of_vHandle20sTimeron:	
  5025  061C                     __ptext990:	
  5026 ;; =============== function _AD_Sample ends ============
  5027                           
  5028                           
  5029 ;; *************** function _getAdOriginalCh2Value *****************
  5030 ;; Defined at:
  5031 ;;		line 287 in file "C:\temp\dev\AK7030-OTP\common.c"
  5032 ;; Parameters:    Size  Location     Type
  5033 ;;		None
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;		None
  5036 ;; Return value:  Size  Location     Type
  5037 ;;                  2   38[BANK0 ] unsigned int 
  5038 ;; Registers used:
  5039 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5040 ;; Tracked objects:
  5041 ;;		On entry : 140/20
  5042 ;;		On exit  : 160/0
  5043 ;;		Unchanged: FFE00/0
  5044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5045 ;;      Params:         0       2       0       0       0
  5046 ;;      Locals:         0       0       0       0       0
  5047 ;;      Temps:          0       0       0       0       0
  5048 ;;      Totals:         0       2       0       0       0
  5049 ;;Total ram usage:        2 bytes
  5050 ;; Hardware stack levels used:    1
  5051 ;; Hardware stack levels required when called:    3
  5052 ;; This function calls:
  5053 ;;		_Filter
  5054 ;; This function is called by:
  5055 ;;		_vHandle20sTimeron
  5056 ;; This function uses a non-reentrant model
  5057 ;;
  5058  061C                     _getAdOriginalCh2Value:	
  5059                           
  5060                           ;common.c: 289: return Filter(uiSampleChannelSecond);
  5061                           
  5062                           ; Regs used in _getAdOriginalCh2Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  5063  061C  30A8               	movlw	_uiSampleChannelSecond& (0+255)
  5064  061D  2701  118A         	fcall	PL8	;call to abstracted procedure
  5065  061F  2648               	fcall	_Filter
  5066  0620  0821               	movf	?_Filter+1,w
  5067  0621  00C7               	movwf	?_getAdOriginalCh2Value+1
  5068  0622  0820               	movf	?_Filter,w
  5069  0623  00C6               	movwf	?_getAdOriginalCh2Value
  5070  0624  0008               	return
  5071  0625                     __end_of_getAdOriginalCh2Value:	
  5072  0625                     __ptext1018:	
  5073 ;; =============== function _setPB6 ends ============
  5074                           
  5075                           
  5076 ;; *************** function _setPA3 *****************
  5077 ;; Defined at:
  5078 ;;		line 269 in file "C:\temp\dev\AK7030-OTP\main.c"
  5079 ;; Parameters:    Size  Location     Type
  5080 ;;  bValue          1    wreg     unsigned char 
  5081 ;; Auto vars:     Size  Location     Type
  5082 ;;  bValue          1    0[BANK0 ] unsigned char 
  5083 ;; Return value:  Size  Location     Type
  5084 ;;		None               void
  5085 ;; Registers used:
  5086 ;;		wreg
  5087 ;; Tracked objects:
  5088 ;;		On entry : 40/0
  5089 ;;		On exit  : 60/0
  5090 ;;		Unchanged: FFF9F/0
  5091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5092 ;;      Params:         0       0       0       0       0
  5093 ;;      Locals:         0       1       0       0       0
  5094 ;;      Temps:          0       0       0       0       0
  5095 ;;      Totals:         0       1       0       0       0
  5096 ;;Total ram usage:        1 bytes
  5097 ;; Hardware stack levels used:    1
  5098 ;; Hardware stack levels required when called:    2
  5099 ;; This function calls:
  5100 ;;		Nothing
  5101 ;; This function is called by:
  5102 ;;		_clearParaFunction1
  5103 ;;		_main
  5104 ;;		_vHandle20sTimeron
  5105 ;;		_vHandle20sTimerOut
  5106 ;; This function uses a non-reentrant model
  5107 ;;
  5108  0625                     _setPA3:	
  5109                           
  5110                           ; Regs used in _setPA3: [wreg]
  5111                           ;setPA3@bValue stored from wreg
  5112  0625  1283               	bcf	3,5	;RP0=0, select bank0
  5113  0626  00A0               	movwf	setPA3@bValue
  5114                           
  5115                           ;main.c: 270: if( bValue )
  5116  0627  0820               	movf	setPA3@bValue,w
  5117  0628  1903               	btfsc	3,2
  5118  0629  2E2C               	goto	l730
  5119                           
  5120                           ;main.c: 272: PA3 = 1;
  5121  062A  1585               	bsf	5,3
  5122  062B  0008               	return
  5123  062C                     l730:	
  5124                           
  5125                           ;main.c: 276: else
  5126                           ;main.c: 278: PA3 = 0;
  5127  062C  1185               	bcf	5,3
  5128  062D  0008               	return
  5129  062E                     __end_of_setPA3:	
  5130  062E                     __ptext993:	
  5131 ;; =============== function _getAdOriginalCh5Value ends ============
  5132                           
  5133                           
  5134 ;; *************** function _getAdOriginalCh6Value *****************
  5135 ;; Defined at:
  5136 ;;		line 278 in file "C:\temp\dev\AK7030-OTP\common.c"
  5137 ;; Parameters:    Size  Location     Type
  5138 ;;		None
  5139 ;; Auto vars:     Size  Location     Type
  5140 ;;		None
  5141 ;; Return value:  Size  Location     Type
  5142 ;;                  2   38[BANK0 ] unsigned int 
  5143 ;; Registers used:
  5144 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5145 ;; Tracked objects:
  5146 ;;		On entry : 40/0
  5147 ;;		On exit  : 160/0
  5148 ;;		Unchanged: FFE00/0
  5149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5150 ;;      Params:         0       2       0       0       0
  5151 ;;      Locals:         0       0       0       0       0
  5152 ;;      Temps:          0       0       0       0       0
  5153 ;;      Totals:         0       2       0       0       0
  5154 ;;Total ram usage:        2 bytes
  5155 ;; Hardware stack levels used:    1
  5156 ;; Hardware stack levels required when called:    3
  5157 ;; This function calls:
  5158 ;;		_Filter
  5159 ;; This function is called by:
  5160 ;;		_main
  5161 ;;		_vHandle20sTimeron
  5162 ;; This function uses a non-reentrant model
  5163 ;;
  5164  062E                     _getAdOriginalCh6Value:	
  5165                           
  5166                           ;common.c: 280: return Filter(uiSampleChannelSixth);
  5167                           
  5168                           ; Regs used in _getAdOriginalCh6Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  5169  062E  30C0               	movlw	_uiSampleChannelSixth& (0+255)
  5170  062F  2701  118A         	fcall	PL8	;call to abstracted procedure
  5171  0631  2648               	fcall	_Filter
  5172  0632  0821               	movf	?_Filter+1,w
  5173  0633  00C7               	movwf	?_getAdOriginalCh6Value+1
  5174  0634  0820               	movf	?_Filter,w
  5175  0635  00C6               	movwf	?_getAdOriginalCh6Value
  5176  0636  0008               	return
  5177  0637                     __end_of_getAdOriginalCh6Value:	
  5178  0637                     __ptext1017:	
  5179 ;; =============== function _setPB4 ends ============
  5180                           
  5181                           
  5182 ;; *************** function _setPB6 *****************
  5183 ;; Defined at:
  5184 ;;		line 286 in file "C:\temp\dev\AK7030-OTP\main.c"
  5185 ;; Parameters:    Size  Location     Type
  5186 ;;  bValue          1    wreg     unsigned char 
  5187 ;; Auto vars:     Size  Location     Type
  5188 ;;  bValue          1    0[BANK0 ] unsigned char 
  5189 ;; Return value:  Size  Location     Type
  5190 ;;		None               void
  5191 ;; Registers used:
  5192 ;;		wreg
  5193 ;; Tracked objects:
  5194 ;;		On entry : 160/0
  5195 ;;		On exit  : 160/0
  5196 ;;		Unchanged: FFE9F/0
  5197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5198 ;;      Params:         0       0       0       0       0
  5199 ;;      Locals:         0       1       0       0       0
  5200 ;;      Temps:          0       0       0       0       0
  5201 ;;      Totals:         0       1       0       0       0
  5202 ;;Total ram usage:        1 bytes
  5203 ;; Hardware stack levels used:    1
  5204 ;; Hardware stack levels required when called:    2
  5205 ;; This function calls:
  5206 ;;		Nothing
  5207 ;; This function is called by:
  5208 ;;		_vHandle20sTimeron
  5209 ;;		_vHandle20sTimerOut
  5210 ;; This function uses a non-reentrant model
  5211 ;;
  5212  0637                     _setPB6:	
  5213                           
  5214                           ; Regs used in _setPB6: [wreg]
  5215                           ;setPB6@bValue stored from wreg
  5216  0637  00A0               	movwf	setPB6@bValue
  5217                           
  5218                           ;main.c: 287: if( bValue )
  5219  0638  0820               	movf	setPB6@bValue,w
  5220  0639  1903               	btfsc	3,2
  5221  063A  2E40               	goto	l735
  5222                           
  5223                           ;main.c: 289: {
  5224                           ;main.c: 290: TRISB6 = 0;
  5225  063B  1683               	bsf	3,5	;RP0=1, select bank1
  5226  063C  1306               	bcf	6,6
  5227                           
  5228                           ;main.c: 291: PB6 = 1;
  5229  063D  1283               	bcf	3,5	;RP0=0, select bank0
  5230  063E  1706               	bsf	6,6
  5231                           
  5232                           ;main.c: 292: }
  5233  063F  0008               	return
  5234  0640                     l735:	
  5235                           
  5236                           ;main.c: 296: else
  5237                           ;main.c: 298: {
  5238                           ;main.c: 299: TRISB6 = 0;
  5239  0640  1683               	bsf	3,5	;RP0=1, select bank1
  5240  0641  1306               	bcf	6,6
  5241                           
  5242                           ;main.c: 300: PB6 = 0;
  5243  0642  1283               	bcf	3,5	;RP0=0, select bank0
  5244  0643  1306               	bcf	6,6
  5245  0644  0008               	return
  5246  0645                     __end_of_setPB6:	
  5247  0645                     __ptext1014:	
  5248 ;; =============== function _clock_config ends ============
  5249                           
  5250                           
  5251 ;; *************** function _setPB6AsInput *****************
  5252 ;; Defined at:
  5253 ;;		line 372 in file "C:\temp\dev\AK7030-OTP\main.c"
  5254 ;; Parameters:    Size  Location     Type
  5255 ;;		None
  5256 ;; Auto vars:     Size  Location     Type
  5257 ;;		None
  5258 ;; Return value:  Size  Location     Type
  5259 ;;		None               void
  5260 ;; Registers used:
  5261 ;;		None
  5262 ;; Tracked objects:
  5263 ;;		On entry : 160/0
  5264 ;;		On exit  : 160/20
  5265 ;;		Unchanged: FFE9F/0
  5266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5267 ;;      Params:         0       0       0       0       0
  5268 ;;      Locals:         0       0       0       0       0
  5269 ;;      Temps:          0       0       0       0       0
  5270 ;;      Totals:         0       0       0       0       0
  5271 ;;Total ram usage:        0 bytes
  5272 ;; Hardware stack levels used:    1
  5273 ;; Hardware stack levels required when called:    2
  5274 ;; This function calls:
  5275 ;;		Nothing
  5276 ;; This function is called by:
  5277 ;;		_vHandle20sTimeron
  5278 ;;		_vHandle20sTimerOut
  5279 ;; This function uses a non-reentrant model
  5280 ;;
  5281  0645                     _setPB6AsInput:	
  5282                           
  5283                           ;main.c: 374: TRISB6 = 1;
  5284                           
  5285                           ; Regs used in _setPB6AsInput: []
  5286  0645  1683               	bsf	3,5	;RP0=1, select bank1
  5287  0646  1706               	bsf	6,6
  5288  0647  0008               	return
  5289  0648                     __end_of_setPB6AsInput:	
  5290  0648                     __ptext998:	
  5291 ;; =============== function _getAD_ConvertFlag ends ============
  5292                           
  5293                           
  5294 ;; *************** function _Filter *****************
  5295 ;; Defined at:
  5296 ;;		line 63 in file "C:\temp\dev\AK7030-OTP\common.c"
  5297 ;; Parameters:    Size  Location     Type
  5298 ;;  tmpValue        2    0[BANK0 ] PTR int 
  5299 ;;		 -> uiSampleChannelSixth(24), uiSampleChannelFifth(24), uiSampleChannelSecond(24), uiSampleChannelZero(24), 
  5300 ;; Auto vars:     Size  Location     Type
  5301 ;;  cir             2   34[BANK0 ] int 
  5302 ;;  filter_buf     24    6[BANK0 ] unsigned int [12]
  5303 ;;  filter_sum      2   32[BANK0 ] unsigned int 
  5304 ;;  filter_temp     2   30[BANK0 ] unsigned int 
  5305 ;;  i               1   37[BANK0 ] unsigned char 
  5306 ;;  j               1   36[BANK0 ] unsigned char 
  5307 ;; Return value:  Size  Location     Type
  5308 ;;                  2    0[BANK0 ] unsigned int 
  5309 ;; Registers used:
  5310 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5311 ;; Tracked objects:
  5312 ;;		On entry : 60/0
  5313 ;;		On exit  : 160/0
  5314 ;;		Unchanged: FFE00/0
  5315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5316 ;;      Params:         0       2       0       0       0
  5317 ;;      Locals:         0      32       0       0       0
  5318 ;;      Temps:          0       4       0       0       0
  5319 ;;      Totals:         0      38       0       0       0
  5320 ;;Total ram usage:       38 bytes
  5321 ;; Hardware stack levels used:    1
  5322 ;; Hardware stack levels required when called:    2
  5323 ;; This function calls:
  5324 ;;		Nothing
  5325 ;; This function is called by:
  5326 ;;		_getAdOriginalCh0Value
  5327 ;;		_getAdOriginalCh5Value
  5328 ;;		_getAdOriginalCh6Value
  5329 ;;		_getAdOriginalCh2Value
  5330 ;; This function uses a non-reentrant model
  5331 ;;
  5332  0648                     _Filter:	
  5333                           
  5334                           ; Regs used in _Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  5335  0648  01C4               	clrf	Filter@j
  5336                           
  5337                           ;common.c: 67: unsigned int filter_temp = 0, filter_sum = 0;
  5338  0649  01BE               	clrf	Filter@filter_temp
  5339  064A  01BF               	clrf	Filter@filter_temp+1
  5340  064B  01C0               	clrf	Filter@filter_sum
  5341  064C  01C1               	clrf	Filter@filter_sum+1
  5342                           
  5343                           ;common.c: 69: unsigned int filter_buf[12];
  5344                           ;common.c: 71: for(int cir = 0;cir < 12; cir++)
  5345  064D  01C2               	clrf	Filter@cir
  5346  064E  01C3               	clrf	Filter@cir+1
  5347  064F                     l4584:	
  5348                           
  5349                           ;common.c: 72: filter_buf[cir] = *tmpValue++;
  5350  064F  1283               	bcf	3,5	;RP0=0, select bank0
  5351  0650  1303               	bcf	3,6	;RP1=0, select bank0
  5352  0651  0820               	movf	Filter@tmpValue,w
  5353  0652  0084               	movwf	4
  5354  0653  1783               	bsf	3,7
  5355  0654  1C21               	btfss	Filter@tmpValue+1,0
  5356  0655  1383               	bcf	3,7
  5357  0656  0800               	movf	0,w
  5358  0657  26F5  118A         	fcall	PL5	;call to abstracted procedure
  5359  0659  0D42               	rlf	Filter@cir,w
  5360  065A  3E26               	addlw	Filter@filter_buf& (0+255)
  5361  065B  0084               	movwf	4
  5362  065C  0822               	movf	??_Filter,w
  5363  065D  1383               	bcf	3,7	;select IRP bank0
  5364  065E  0080               	movwf	0
  5365  065F  0A84               	incf	4,f
  5366  0660  0823               	movf	??_Filter+1,w
  5367  0661  0080               	movwf	0
  5368  0662  3002               	movlw	2
  5369  0663  07A0               	addwf	Filter@tmpValue,f
  5370  0664  1803               	skipnc
  5371  0665  0AA1               	incf	Filter@tmpValue+1,f
  5372  0666  0AC2               	incf	Filter@cir,f
  5373  0667  1903               	skipnz
  5374  0668  0AC3               	incf	Filter@cir+1,f
  5375  0669  0843               	movf	Filter@cir+1,w
  5376  066A  3A80               	xorlw	128
  5377  066B  00FF               	movwf	127
  5378  066C  3080               	movlw	128
  5379  066D  027F               	subwf	127,w
  5380  066E  1D03               	skipz
  5381  066F  2E72               	goto	u1745
  5382  0670  300C               	movlw	12
  5383  0671  0242               	subwf	Filter@cir,w
  5384  0672                     u1745:	
  5385  0672  1C03               	skipc
  5386  0673  2E4F               	goto	l4584
  5387                           
  5388                           ;common.c: 75: for(j = 0; j < 12 - 1; j++)
  5389  0674  1283               	bcf	3,5	;RP0=0, select bank0
  5390  0675  1303               	bcf	3,6	;RP1=0, select bank0
  5391  0676  01C4               	clrf	Filter@j
  5392  0677                     l4598:	
  5393                           
  5394                           ;common.c: 76: {
  5395                           ;common.c: 77: for(i = 0; i < 12 - 1 - j; i++)
  5396  0677  01C5               	clrf	Filter@i
  5397  0678                     l4606:	
  5398  0678  01A3               	clrf	??_Filter+1
  5399  0679  0844               	movf	Filter@j,w
  5400  067A  3C0B               	sublw	11
  5401  067B  00A2               	movwf	??_Filter
  5402  067C  1C03               	skipc
  5403  067D  03A3               	decf	??_Filter+1,f
  5404  067E  0823               	movf	??_Filter+1,w
  5405  067F  3A80               	xorlw	128
  5406  0680  3C80               	sublw	128
  5407  0681  1D03               	skipz
  5408  0682  2E85               	goto	u1765
  5409  0683  0822               	movf	??_Filter,w
  5410  0684  0245               	subwf	Filter@i,w
  5411  0685                     u1765:	
  5412  0685  1803               	btfsc	3,0
  5413  0686  2EBA               	goto	l4608
  5414                           
  5415                           ;common.c: 78: {
  5416                           ;common.c: 79: if(filter_buf[i] > filter_buf[i + 1])
  5417  0687  1283               	bcf	3,5	;RP0=0, select bank0
  5418  0688  1303               	bcf	3,6	;RP1=0, select bank0
  5419  0689  1003               	clrc
  5420  068A  26EB  118A         	fcall	PL4	;call to abstracted procedure
  5421  068C  26FB  118A         	fcall	PL6	;call to abstracted procedure
  5422  068E  0800               	movf	0,w
  5423  068F  00A4               	movwf	??_Filter+2
  5424  0690  0A84               	incf	4,f
  5425  0691  0800               	movf	0,w
  5426  0692  00A5               	movwf	??_Filter+3
  5427  0693  0823               	movf	??_Filter+1,w
  5428  0694  0225               	subwf	??_Filter+3,w
  5429  0695  1D03               	skipz
  5430  0696  2E99               	goto	u1755
  5431  0697  0822               	movf	??_Filter,w
  5432  0698  0224               	subwf	??_Filter+2,w
  5433  0699                     u1755:	
  5434  0699  1803               	skipnc
  5435  069A  2EB8               	goto	l4604
  5436                           
  5437                           ;common.c: 80: {
  5438                           ;common.c: 82: filter_temp = filter_buf[i];
  5439  069B  1003               	clrc
  5440  069C  0D45               	rlf	Filter@i,w
  5441  069D  3E26               	addlw	Filter@filter_buf& (0+255)
  5442  069E  0084               	movwf	4
  5443  069F  0800               	movf	0,w
  5444  06A0  00BE               	movwf	Filter@filter_temp
  5445  06A1  0A84               	incf	4,f
  5446  06A2  0800               	movf	0,w
  5447  06A3  00BF               	movwf	Filter@filter_temp+1
  5448                           
  5449                           ;common.c: 84: filter_buf[i] = filter_buf[i + 1];
  5450  06A4  26FB  118A         	fcall	PL6	;call to abstracted procedure
  5451  06A6  0800               	movf	0,w
  5452  06A7  26F5  118A         	fcall	PL5	;call to abstracted procedure
  5453  06A9  0D45               	rlf	Filter@i,w
  5454  06AA  3E26               	addlw	Filter@filter_buf& (0+255)
  5455  06AB  0084               	movwf	4
  5456  06AC  0822               	movf	??_Filter,w
  5457  06AD  0080               	movwf	0
  5458  06AE  0A84               	incf	4,f
  5459  06AF  0823               	movf	??_Filter+1,w
  5460  06B0  0080               	movwf	0
  5461                           
  5462                           ;common.c: 86: filter_buf[i + 1] = filter_temp;
  5463  06B1  26FB  118A         	fcall	PL6	;call to abstracted procedure
  5464  06B3  083E               	movf	Filter@filter_temp,w
  5465  06B4  0080               	movwf	0
  5466  06B5  0A84               	incf	4,f
  5467  06B6  083F               	movf	Filter@filter_temp+1,w
  5468  06B7  0080               	movwf	0
  5469  06B8                     l4604:	
  5470  06B8  0AC5               	incf	Filter@i,f
  5471  06B9  2E78               	goto	l4606
  5472  06BA                     l4608:	
  5473  06BA  1283               	bcf	3,5	;RP0=0, select bank0
  5474  06BB  300B               	movlw	11
  5475  06BC  1303               	bcf	3,6	;RP1=0, select bank0
  5476  06BD  0AC4               	incf	Filter@j,f
  5477  06BE  0244               	subwf	Filter@j,w
  5478  06BF  1C03               	skipc
  5479  06C0  2E77               	goto	l4598
  5480                           
  5481                           ;common.c: 87: }
  5482                           ;common.c: 88: }
  5483                           ;common.c: 89: }
  5484                           ;common.c: 91: for(i = 2; i < 12 - 2; i++)
  5485  06C1  3002               	movlw	2
  5486  06C2  00C5               	movwf	Filter@i
  5487                           
  5488                           ;common.c: 92: {
  5489                           ;common.c: 93: filter_sum += filter_buf[i];
  5490  06C3  1003               	clrc
  5491  06C4                     L18:	
  5492  06C4  26EB  118A         	fcall	PL4	;call to abstracted procedure
  5493  06C6  0822               	movf	??_Filter,w
  5494  06C7  07C0               	addwf	Filter@filter_sum,f
  5495  06C8  1803               	skipnc
  5496  06C9  0AC1               	incf	Filter@filter_sum+1,f
  5497  06CA  0823               	movf	??_Filter+1,w
  5498  06CB  07C1               	addwf	Filter@filter_sum+1,f
  5499  06CC  300A               	movlw	10
  5500  06CD  0AC5               	incf	Filter@i,f
  5501  06CE  0245               	subwf	Filter@i,w
  5502  06CF  1C03               	skipc
  5503  06D0  2EC4               	goto	L18
  5504                           
  5505                           ;common.c: 94: }
  5506                           ;common.c: 96: return (filter_sum >> 3);
  5507  06D1  0841               	movf	Filter@filter_sum+1,w
  5508  06D2  00A1               	movwf	?_Filter+1
  5509  06D3  0840               	movf	Filter@filter_sum,w
  5510  06D4  00A0               	movwf	?_Filter
  5511  06D5  1003               	clrc
  5512  06D6  0CA1               	rrf	?_Filter+1,f
  5513  06D7  0CA0               	rrf	?_Filter,f
  5514  06D8  1003               	clrc
  5515  06D9  0CA1               	rrf	?_Filter+1,f
  5516  06DA  0CA0               	rrf	?_Filter,f
  5517  06DB  1003               	clrc
  5518  06DC  0CA1               	rrf	?_Filter+1,f
  5519  06DD  0CA0               	rrf	?_Filter,f
  5520  06DE  0008               	return
  5521  06DF                     __end_of_Filter:	
  5522  06DF                     __ptext1027:	
  5523 ;; =============== function _clearTwentyMinuteTimer ends ============
  5524                           
  5525                           
  5526 ;; *************** function _clearTwentySecondsTimer *****************
  5527 ;; Defined at:
  5528 ;;		line 415 in file "C:\temp\dev\AK7030-OTP\common.c"
  5529 ;; Parameters:    Size  Location     Type
  5530 ;;		None
  5531 ;; Auto vars:     Size  Location     Type
  5532 ;;		None
  5533 ;; Return value:  Size  Location     Type
  5534 ;;		None               void
  5535 ;; Registers used:
  5536 ;;		status,2
  5537 ;; Tracked objects:
  5538 ;;		On entry : 40/20
  5539 ;;		On exit  : 60/0
  5540 ;;		Unchanged: FFF9F/0
  5541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5542 ;;      Params:         0       0       0       0       0
  5543 ;;      Locals:         0       0       0       0       0
  5544 ;;      Temps:          0       0       0       0       0
  5545 ;;      Totals:         0       0       0       0       0
  5546 ;;Total ram usage:        0 bytes
  5547 ;; Hardware stack levels used:    1
  5548 ;; Hardware stack levels required when called:    2
  5549 ;; This function calls:
  5550 ;;		Nothing
  5551 ;; This function is called by:
  5552 ;;		_clearAllTimer
  5553 ;;		_vHandle20sTimerOut
  5554 ;; This function uses a non-reentrant model
  5555 ;;
  5556  06DF                     _clearTwentySecondsTimer:	
  5557                           
  5558                           ;common.c: 416: uiTwentySecondsTimer = 0;
  5559                           
  5560                           ; Regs used in _clearTwentySecondsTimer: [status,2]
  5561  06DF  1683               	bsf	3,5	;RP0=1, select bank1
  5562  06E0  01A6               	clrf	_uiTwentySecondsTimer^(0+128)
  5563  06E1  01A7               	clrf	(_uiTwentySecondsTimer+1)^(0+128)
  5564                           
  5565                           ;common.c: 417: bTwentySecStartFlag = 0;
  5566  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  5567  06E3  01CF               	clrf	_bTwentySecStartFlag
  5568  06E4  0008               	return
  5569  06E5                     __end_of_clearTwentySecondsTimer:	
  5570  06E5                     __ptext1026:	
  5571 ;; =============== function _initPin ends ============
  5572                           
  5573                           
  5574 ;; *************** function _clearTwentyMinuteTimer *****************
  5575 ;; Defined at:
  5576 ;;		line 422 in file "C:\temp\dev\AK7030-OTP\common.c"
  5577 ;; Parameters:    Size  Location     Type
  5578 ;;		None
  5579 ;; Auto vars:     Size  Location     Type
  5580 ;;		None
  5581 ;; Return value:  Size  Location     Type
  5582 ;;		None               void
  5583 ;; Registers used:
  5584 ;;		status,2
  5585 ;; Tracked objects:
  5586 ;;		On entry : 60/0
  5587 ;;		On exit  : 60/0
  5588 ;;		Unchanged: FFF9F/0
  5589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5590 ;;      Params:         0       0       0       0       0
  5591 ;;      Locals:         0       0       0       0       0
  5592 ;;      Temps:          0       0       0       0       0
  5593 ;;      Totals:         0       0       0       0       0
  5594 ;;Total ram usage:        0 bytes
  5595 ;; Hardware stack levels used:    1
  5596 ;; Hardware stack levels required when called:    2
  5597 ;; This function calls:
  5598 ;;		Nothing
  5599 ;; This function is called by:
  5600 ;;		_clearAllTimer
  5601 ;; This function uses a non-reentrant model
  5602 ;;
  5603  06E5                     _clearTwentyMinuteTimer:	
  5604  06E5                     l4402:	
  5605                           ; Regs used in _clearTwentyMinuteTimer: [status,2]
  5606                           
  5607                           
  5608                           ;common.c: 423: uiTwentyMinuteTimer = 0;
  5609  06E5  1683               	bsf	3,5	;RP0=1, select bank1
  5610  06E6  01A4               	clrf	_uiTwentyMinuteTimer^(0+128)
  5611  06E7  01A5               	clrf	(_uiTwentyMinuteTimer+1)^(0+128)
  5612                           
  5613                           ;common.c: 424: bTwentyMinStartFlag = 0;
  5614  06E8  1283               	bcf	3,5	;RP0=0, select bank0
  5615  06E9  01CE               	clrf	_bTwentyMinStartFlag
  5616  06EA  0008               	return
  5617  06EB                     __end_of_clearTwentyMinuteTimer:	
  5618  06EB                     PL4:	
  5619  06EB  0D45               	rlf	Filter@i,w
  5620  06EC  3E26               	addlw	Filter@filter_buf& (0+255)
  5621  06ED  0084               	movwf	4
  5622  06EE  1383               	bcf	3,7	;select IRP bank0
  5623  06EF  0800               	movf	0,w
  5624  06F0  00A2               	movwf	??_Filter
  5625  06F1  0A84               	incf	4,f
  5626  06F2  0800               	movf	0,w
  5627  06F3  00A3               	movwf	??_Filter+1
  5628  06F4  0008               	return
  5629  06F5                     PL5:	
  5630  06F5  00A2               	movwf	??_Filter
  5631  06F6  0A84               	incf	4,f
  5632  06F7  0800               	movf	0,w
  5633  06F8  00A3               	movwf	??_Filter+1
  5634  06F9  1003               	clrc
  5635  06FA  0008               	return
  5636  06FB                     PL6:	
  5637  06FB  1003               	clrc
  5638  06FC  0D45               	rlf	Filter@i,w
  5639  06FD  3E02               	addlw	2
  5640  06FE  3E26               	addlw	Filter@filter_buf& (0+255)
  5641  06FF  0084               	movwf	4
  5642  0700  0008               	return
  5643  0701                     PL8:	
  5644  0701  1283               	bcf	3,5	;RP0=0, select bank0
  5645  0702  00A0               	movwf	?_Filter
  5646  0703  3001               	movlw	1
  5647  0704  00A1               	movwf	?_Filter+1
  5648  0705  0008               	return
  5649                           
  5650                           	psect	text999
  5651  0F1B                     __ptext999:	
  5652 ;; =============== function _Filter ends ============
  5653                           
  5654                           
  5655 ;; *************** function _isFinishedThreeHoursTimer *****************
  5656 ;; Defined at:
  5657 ;;		line 498 in file "C:\temp\dev\AK7030-OTP\common.c"
  5658 ;; Parameters:    Size  Location     Type
  5659 ;;		None
  5660 ;; Auto vars:     Size  Location     Type
  5661 ;;		None
  5662 ;; Return value:  Size  Location     Type
  5663 ;;                  1    wreg      unsigned char 
  5664 ;; Registers used:
  5665 ;;		wreg, status,2, status,0
  5666 ;; Tracked objects:
  5667 ;;		On entry : 40/20
  5668 ;;		On exit  : 40/0
  5669 ;;		Unchanged: FFF9F/0
  5670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5671 ;;      Params:         0       0       0       0       0
  5672 ;;      Locals:         0       0       0       0       0
  5673 ;;      Temps:          0       0       0       0       0
  5674 ;;      Totals:         0       0       0       0       0
  5675 ;;Total ram usage:        0 bytes
  5676 ;; Hardware stack levels used:    1
  5677 ;; Hardware stack levels required when called:    2
  5678 ;; This function calls:
  5679 ;;		Nothing
  5680 ;; This function is called by:
  5681 ;;		_main
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684  0F1B                     _isFinishedThreeHoursTimer:	
  5685                           
  5686                           ;common.c: 499: if((uiSmallTimer == 0) && bSmallTimerStartFlag)
  5687                           
  5688                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  5689  0F1B  1683               	bsf	3,5	;RP0=1, select bank1
  5690  0F1C  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  5691  0F1D  0422               	iorwf	_uiSmallTimer^(0+128),w
  5692  0F1E  1D03               	skipz
  5693  0F1F  3400               	retlw	0
  5694  0F20  1283               	bcf	3,5	;RP0=0, select bank0
  5695  0F21  084D               	movf	_bSmallTimerStartFlag,w
  5696  0F22  1903               	btfsc	3,2
  5697  0F23  3400               	retlw	0
  5698  0F24  3001               	movlw	1
  5699                           
  5700                           ;common.c: 500: {
  5701                           ;common.c: 501: bSmallTimerStartFlag = 0;
  5702  0F25  01CD               	clrf	_bSmallTimerStartFlag
  5703                           
  5704                           ;common.c: 502: return 1;
  5705  0F26  0008               	return
  5706  0F27                     __end_of_isFinishedThreeHoursTimer:	
  5707                           ;common.c: 504: else
  5708                           ;common.c: 505: return 0;
  5709                           
  5710                           
  5711                           	psect	text1000
  5712  0F60                     __ptext1000:	
  5713 ;; =============== function _isFinishedThreeHoursTimer ends ============
  5714                           
  5715                           
  5716 ;; *************** function _startThreeHoursTimer *****************
  5717 ;; Defined at:
  5718 ;;		line 429 in file "C:\temp\dev\AK7030-OTP\common.c"
  5719 ;; Parameters:    Size  Location     Type
  5720 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  5721 ;; Auto vars:     Size  Location     Type
  5722 ;;		None
  5723 ;; Return value:  Size  Location     Type
  5724 ;;		None               void
  5725 ;; Registers used:
  5726 ;;		wreg, status,2, status,0
  5727 ;; Tracked objects:
  5728 ;;		On entry : 60/0
  5729 ;;		On exit  : 40/0
  5730 ;;		Unchanged: FFF9F/0
  5731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5732 ;;      Params:         0       2       0       0       0
  5733 ;;      Locals:         0       0       0       0       0
  5734 ;;      Temps:          0       0       0       0       0
  5735 ;;      Totals:         0       2       0       0       0
  5736 ;;Total ram usage:        2 bytes
  5737 ;; Hardware stack levels used:    1
  5738 ;; Hardware stack levels required when called:    2
  5739 ;; This function calls:
  5740 ;;		Nothing
  5741 ;; This function is called by:
  5742 ;;		_main
  5743 ;; This function uses a non-reentrant model
  5744 ;;
  5745  0F60                     _startThreeHoursTimer:	
  5746                           
  5747                           ;common.c: 430: if(( 0 == uiSmallTimer ) && ( 0 == bSmallTimerStartFlag ))
  5748                           
  5749                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  5750  0F60  1683               	bsf	3,5	;RP0=1, select bank1
  5751  0F61  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  5752  0F62  0422               	iorwf	_uiSmallTimer^(0+128),w
  5753  0F63  1D03               	skipz
  5754  0F64  0008               	return
  5755  0F65  1283               	bcf	3,5	;RP0=0, select bank0
  5756  0F66  08CD               	movf	_bSmallTimerStartFlag,f
  5757  0F67  1D03               	skipz
  5758  0F68  0008               	return
  5759                           
  5760                           ;common.c: 431: {
  5761                           ;common.c: 432: uiSmallTimer = uiSetTime;
  5762  0F69  0821               	movf	startThreeHoursTimer@uiSetTime+1,w
  5763  0F6A  1683               	bsf	3,5	;RP0=1, select bank1
  5764  0F6B  00A3               	movwf	(_uiSmallTimer+1)^(0+128)
  5765  0F6C  1283               	bcf	3,5	;RP0=0, select bank0
  5766  0F6D  0820               	movf	startThreeHoursTimer@uiSetTime,w
  5767  0F6E  1683               	bsf	3,5	;RP0=1, select bank1
  5768  0F6F  00A2               	movwf	_uiSmallTimer^(0+128)
  5769                           
  5770                           ;common.c: 433: bSmallTimerStartFlag = 1;
  5771  0F70  1283               	bcf	3,5	;RP0=0, select bank0
  5772  0F71  01CD               	clrf	_bSmallTimerStartFlag
  5773  0F72  0ACD               	incf	_bSmallTimerStartFlag,f
  5774  0F73  0008               	return
  5775  0F74                     __end_of_startThreeHoursTimer:	
  5776                           
  5777                           	psect	text1001
  5778  0EF9                     __ptext1001:	
  5779 ;; =============== function _startThreeHoursTimer ends ============
  5780                           
  5781                           
  5782 ;; *************** function _isFinishedTwentySecondsTimer *****************
  5783 ;; Defined at:
  5784 ;;		line 463 in file "C:\temp\dev\AK7030-OTP\common.c"
  5785 ;; Parameters:    Size  Location     Type
  5786 ;;		None
  5787 ;; Auto vars:     Size  Location     Type
  5788 ;;		None
  5789 ;; Return value:  Size  Location     Type
  5790 ;;                  1    wreg      unsigned char 
  5791 ;; Registers used:
  5792 ;;		wreg, status,2, status,0
  5793 ;; Tracked objects:
  5794 ;;		On entry : 140/0
  5795 ;;		On exit  : 140/0
  5796 ;;		Unchanged: FFE9F/0
  5797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5798 ;;      Params:         0       0       0       0       0
  5799 ;;      Locals:         0       0       0       0       0
  5800 ;;      Temps:          0       0       0       0       0
  5801 ;;      Totals:         0       0       0       0       0
  5802 ;;Total ram usage:        0 bytes
  5803 ;; Hardware stack levels used:    1
  5804 ;; Hardware stack levels required when called:    2
  5805 ;; This function calls:
  5806 ;;		Nothing
  5807 ;; This function is called by:
  5808 ;;		_main
  5809 ;; This function uses a non-reentrant model
  5810 ;;
  5811  0EF9                     _isFinishedTwentySecondsTimer:	
  5812                           
  5813                           ;common.c: 464: if(( 0 == uiTwentySecondsTimer ) && bTwentySecStartFlag )
  5814                           
  5815                           ; Regs used in _isFinishedTwentySecondsTimer: [wreg+status,2+status,0]
  5816  0EF9  1683               	bsf	3,5	;RP0=1, select bank1
  5817  0EFA  0827               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  5818  0EFB  0426               	iorwf	_uiTwentySecondsTimer^(0+128),w
  5819  0EFC  1D03               	skipz
  5820  0EFD  3400               	retlw	0
  5821  0EFE  1283               	bcf	3,5	;RP0=0, select bank0
  5822  0EFF  084F               	movf	_bTwentySecStartFlag,w
  5823  0F00  1D03               	skipz
  5824                           
  5825                           ;common.c: 465: {
  5826                           ;common.c: 467: return 1;
  5827  0F01  3401               	retlw	1
  5828                           
  5829                           ;common.c: 469: else
  5830                           ;common.c: 470: return 0;
  5831  0F02  3400               	retlw	0
  5832  0F03                     __end_of_isFinishedTwentySecondsTimer:	
  5833                           
  5834                           	psect	text1002
  5835  0F27                     __ptext1002:	
  5836 ;; =============== function _isFinishedTwentySecondsTimer ends ============
  5837                           
  5838                           
  5839 ;; *************** function _startTwentySecondsTimer *****************
  5840 ;; Defined at:
  5841 ;;		line 443 in file "C:\temp\dev\AK7030-OTP\common.c"
  5842 ;; Parameters:    Size  Location     Type
  5843 ;;		None
  5844 ;; Auto vars:     Size  Location     Type
  5845 ;;		None
  5846 ;; Return value:  Size  Location     Type
  5847 ;;		None               void
  5848 ;; Registers used:
  5849 ;;		wreg, status,2, status,0
  5850 ;; Tracked objects:
  5851 ;;		On entry : 160/0
  5852 ;;		On exit  : 140/0
  5853 ;;		Unchanged: FFE9F/0
  5854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5855 ;;      Params:         0       0       0       0       0
  5856 ;;      Locals:         0       0       0       0       0
  5857 ;;      Temps:          0       0       0       0       0
  5858 ;;      Totals:         0       0       0       0       0
  5859 ;;Total ram usage:        0 bytes
  5860 ;; Hardware stack levels used:    1
  5861 ;; Hardware stack levels required when called:    2
  5862 ;; This function calls:
  5863 ;;		Nothing
  5864 ;; This function is called by:
  5865 ;;		_main
  5866 ;; This function uses a non-reentrant model
  5867 ;;
  5868  0F27                     _startTwentySecondsTimer:	
  5869                           
  5870                           ;common.c: 444: if(( 0 == uiTwentySecondsTimer) && ( 0 == bTwentySecStartFlag))
  5871                           
  5872                           ; Regs used in _startTwentySecondsTimer: [wreg+status,2+status,0]
  5873  0F27  1683               	bsf	3,5	;RP0=1, select bank1
  5874  0F28  0827               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  5875  0F29  0426               	iorwf	_uiTwentySecondsTimer^(0+128),w
  5876  0F2A  1D03               	skipz
  5877  0F2B  0008               	return
  5878  0F2C  1283               	bcf	3,5	;RP0=0, select bank0
  5879  0F2D  08CF               	movf	_bTwentySecStartFlag,f
  5880  0F2E  1D03               	skipz
  5881  0F2F  0008               	return
  5882                           
  5883                           ;common.c: 445: {
  5884                           ;common.c: 446: uiTwentySecondsTimer = 20;
  5885  0F30  3014               	movlw	20
  5886  0F31  1683               	bsf	3,5	;RP0=1, select bank1
  5887  0F32  00A6               	movwf	_uiTwentySecondsTimer^(0+128)
  5888  0F33  01A7               	clrf	(_uiTwentySecondsTimer+1)^(0+128)
  5889                           
  5890                           ;common.c: 447: bTwentySecStartFlag = 1;
  5891  0F34  1283               	bcf	3,5	;RP0=0, select bank0
  5892  0F35  01CF               	clrf	_bTwentySecStartFlag
  5893  0F36  0ACF               	incf	_bTwentySecStartFlag,f
  5894  0F37  0008               	return
  5895  0F38                     __end_of_startTwentySecondsTimer:	
  5896                           
  5897                           	psect	text1003
  5898  0F0F                     __ptext1003:	
  5899 ;; =============== function _startTwentySecondsTimer ends ============
  5900                           
  5901                           
  5902 ;; *************** function _isFinishedTwelveHoursTimer *****************
  5903 ;; Defined at:
  5904 ;;		line 487 in file "C:\temp\dev\AK7030-OTP\common.c"
  5905 ;; Parameters:    Size  Location     Type
  5906 ;;		None
  5907 ;; Auto vars:     Size  Location     Type
  5908 ;;		None
  5909 ;; Return value:  Size  Location     Type
  5910 ;;                  1    wreg      unsigned char 
  5911 ;; Registers used:
  5912 ;;		wreg, status,2, status,0
  5913 ;; Tracked objects:
  5914 ;;		On entry : 40/0
  5915 ;;		On exit  : 40/0
  5916 ;;		Unchanged: FFF9F/0
  5917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5918 ;;      Params:         0       0       0       0       0
  5919 ;;      Locals:         0       0       0       0       0
  5920 ;;      Temps:          0       0       0       0       0
  5921 ;;      Totals:         0       0       0       0       0
  5922 ;;Total ram usage:        0 bytes
  5923 ;; Hardware stack levels used:    1
  5924 ;; Hardware stack levels required when called:    2
  5925 ;; This function calls:
  5926 ;;		Nothing
  5927 ;; This function is called by:
  5928 ;;		_main
  5929 ;; This function uses a non-reentrant model
  5930 ;;
  5931  0F0F                     _isFinishedTwelveHoursTimer:	
  5932                           
  5933                           ;common.c: 488: if(( uiBigTimer == 0 ) && bBigTimerStartFlag )
  5934                           
  5935                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  5936  0F0F  1683               	bsf	3,5	;RP0=1, select bank1
  5937  0F10  0821               	movf	(_uiBigTimer+1)^(0+128),w
  5938  0F11  0420               	iorwf	_uiBigTimer^(0+128),w
  5939  0F12  1D03               	skipz
  5940  0F13  3400               	retlw	0
  5941  0F14  1283               	bcf	3,5	;RP0=0, select bank0
  5942  0F15  084C               	movf	_bBigTimerStartFlag,w
  5943  0F16  1903               	btfsc	3,2
  5944  0F17  3400               	retlw	0
  5945  0F18  3001               	movlw	1
  5946                           
  5947                           ;common.c: 489: {
  5948                           ;common.c: 490: bBigTimerStartFlag = 0;
  5949  0F19  01CC               	clrf	_bBigTimerStartFlag
  5950                           
  5951                           ;common.c: 491: return 1;
  5952  0F1A  0008               	return
  5953  0F1B                     __end_of_isFinishedTwelveHoursTimer:	
  5954                           ;common.c: 493: else
  5955                           ;common.c: 494: return 0;
  5956                           
  5957                           
  5958                           	psect	text1004
  5959  0F4C                     __ptext1004:	
  5960 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  5961                           
  5962                           
  5963 ;; *************** function _startTwelveHourTimer *****************
  5964 ;; Defined at:
  5965 ;;		line 388 in file "C:\temp\dev\AK7030-OTP\common.c"
  5966 ;; Parameters:    Size  Location     Type
  5967 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  5968 ;; Auto vars:     Size  Location     Type
  5969 ;;		None
  5970 ;; Return value:  Size  Location     Type
  5971 ;;		None               void
  5972 ;; Registers used:
  5973 ;;		wreg, status,2, status,0
  5974 ;; Tracked objects:
  5975 ;;		On entry : 60/0
  5976 ;;		On exit  : 40/0
  5977 ;;		Unchanged: FFF9F/0
  5978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5979 ;;      Params:         0       2       0       0       0
  5980 ;;      Locals:         0       0       0       0       0
  5981 ;;      Temps:          0       0       0       0       0
  5982 ;;      Totals:         0       2       0       0       0
  5983 ;;Total ram usage:        2 bytes
  5984 ;; Hardware stack levels used:    1
  5985 ;; Hardware stack levels required when called:    2
  5986 ;; This function calls:
  5987 ;;		Nothing
  5988 ;; This function is called by:
  5989 ;;		_main
  5990 ;; This function uses a non-reentrant model
  5991 ;;
  5992  0F4C                     _startTwelveHourTimer:	
  5993                           
  5994                           ;common.c: 389: if((0 == uiBigTimer) && ( 0 == bBigTimerStartFlag))
  5995                           
  5996                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  5997  0F4C  1683               	bsf	3,5	;RP0=1, select bank1
  5998  0F4D  0821               	movf	(_uiBigTimer+1)^(0+128),w
  5999  0F4E  0420               	iorwf	_uiBigTimer^(0+128),w
  6000  0F4F  1D03               	skipz
  6001  0F50  0008               	return
  6002  0F51  1283               	bcf	3,5	;RP0=0, select bank0
  6003  0F52  08CC               	movf	_bBigTimerStartFlag,f
  6004  0F53  1D03               	skipz
  6005  0F54  0008               	return
  6006                           
  6007                           ;common.c: 390: {
  6008                           ;common.c: 391: uiBigTimer = uiSetTime;
  6009  0F55  0821               	movf	startTwelveHourTimer@uiSetTime+1,w
  6010  0F56  1683               	bsf	3,5	;RP0=1, select bank1
  6011  0F57  00A1               	movwf	(_uiBigTimer+1)^(0+128)
  6012  0F58  1283               	bcf	3,5	;RP0=0, select bank0
  6013  0F59  0820               	movf	startTwelveHourTimer@uiSetTime,w
  6014  0F5A  1683               	bsf	3,5	;RP0=1, select bank1
  6015  0F5B  00A0               	movwf	_uiBigTimer^(0+128)
  6016                           
  6017                           ;common.c: 392: bBigTimerStartFlag = 1;
  6018  0F5C  1283               	bcf	3,5	;RP0=0, select bank0
  6019  0F5D  01CC               	clrf	_bBigTimerStartFlag
  6020  0F5E  0ACC               	incf	_bBigTimerStartFlag,f
  6021  0F5F  0008               	return
  6022  0F60                     __end_of_startTwelveHourTimer:	
  6023                           
  6024                           	psect	text1005
  6025  0F03                     __ptext1005:	
  6026 ;; =============== function _startTwelveHourTimer ends ============
  6027                           
  6028                           
  6029 ;; *************** function _isFinishedTwentyMinuteTimer *****************
  6030 ;; Defined at:
  6031 ;;		line 475 in file "C:\temp\dev\AK7030-OTP\common.c"
  6032 ;; Parameters:    Size  Location     Type
  6033 ;;		None
  6034 ;; Auto vars:     Size  Location     Type
  6035 ;;		None
  6036 ;; Return value:  Size  Location     Type
  6037 ;;                  1    wreg      unsigned char 
  6038 ;; Registers used:
  6039 ;;		wreg, status,2, status,0
  6040 ;; Tracked objects:
  6041 ;;		On entry : 160/0
  6042 ;;		On exit  : 140/0
  6043 ;;		Unchanged: FFE9F/0
  6044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6045 ;;      Params:         0       0       0       0       0
  6046 ;;      Locals:         0       0       0       0       0
  6047 ;;      Temps:          0       0       0       0       0
  6048 ;;      Totals:         0       0       0       0       0
  6049 ;;Total ram usage:        0 bytes
  6050 ;; Hardware stack levels used:    1
  6051 ;; Hardware stack levels required when called:    2
  6052 ;; This function calls:
  6053 ;;		Nothing
  6054 ;; This function is called by:
  6055 ;;		_main
  6056 ;; This function uses a non-reentrant model
  6057 ;;
  6058  0F03                     _isFinishedTwentyMinuteTimer:	
  6059                           
  6060                           ;common.c: 476: if(( 0 == uiTwentyMinuteTimer ) && bTwentyMinStartFlag )
  6061                           
  6062                           ; Regs used in _isFinishedTwentyMinuteTimer: [wreg+status,2+status,0]
  6063  0F03  1683               	bsf	3,5	;RP0=1, select bank1
  6064  0F04  0825               	movf	(_uiTwentyMinuteTimer+1)^(0+128),w
  6065  0F05  0424               	iorwf	_uiTwentyMinuteTimer^(0+128),w
  6066  0F06  1D03               	skipz
  6067  0F07  3400               	retlw	0
  6068  0F08  1283               	bcf	3,5	;RP0=0, select bank0
  6069  0F09  084E               	movf	_bTwentyMinStartFlag,w
  6070  0F0A  1903               	btfsc	3,2
  6071  0F0B  3400               	retlw	0
  6072  0F0C  3001               	movlw	1
  6073                           
  6074                           ;common.c: 477: {
  6075                           ;common.c: 478: bTwentyMinStartFlag = 0;
  6076  0F0D  01CE               	clrf	_bTwentyMinStartFlag
  6077                           
  6078                           ;common.c: 479: return 1;
  6079  0F0E  0008               	return
  6080  0F0F                     __end_of_isFinishedTwentyMinuteTimer:	
  6081                           ;common.c: 481: else
  6082                           ;common.c: 482: return 0;
  6083                           
  6084                           
  6085                           	psect	text1006
  6086  0002                     __ptext1006:	
  6087 ;; =============== function _isFinishedTwentyMinuteTimer ends ============
  6088                           
  6089                           
  6090 ;; *************** function _clrSampeTime *****************
  6091 ;; Defined at:
  6092 ;;		line 519 in file "C:\temp\dev\AK7030-OTP\common.c"
  6093 ;; Parameters:    Size  Location     Type
  6094 ;;		None
  6095 ;; Auto vars:     Size  Location     Type
  6096 ;;		None
  6097 ;; Return value:  Size  Location     Type
  6098 ;;		None               void
  6099 ;; Registers used:
  6100 ;;		status,2
  6101 ;; Tracked objects:
  6102 ;;		On entry : 60/20
  6103 ;;		On exit  : 60/20
  6104 ;;		Unchanged: FFF9F/0
  6105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6106 ;;      Params:         0       0       0       0       0
  6107 ;;      Locals:         0       0       0       0       0
  6108 ;;      Temps:          0       0       0       0       0
  6109 ;;      Totals:         0       0       0       0       0
  6110 ;;Total ram usage:        0 bytes
  6111 ;; Hardware stack levels used:    1
  6112 ;; Hardware stack levels required when called:    2
  6113 ;; This function calls:
  6114 ;;		Nothing
  6115 ;; This function is called by:
  6116 ;;		_main
  6117 ;; This function uses a non-reentrant model
  6118 ;;
  6119  0002                     _clrSampeTime:	
  6120                           
  6121                           ;common.c: 520: timer.timer10msStopWatch = 0;
  6122                           
  6123                           ; Regs used in _clrSampeTime: [status,2]
  6124  0002  01AE               	clrf	_timer^(0+128)
  6125  0003  0008               	return
  6126  0004                     __end_of_clrSampeTime:	
  6127                           
  6128                           	psect	text1007
  6129  0EC8                     __ptext1007:	
  6130 ;; =============== function _clrSampeTime ends ============
  6131                           
  6132                           
  6133 ;; *************** function _isPermitSampleTime *****************
  6134 ;; Defined at:
  6135 ;;		line 509 in file "C:\temp\dev\AK7030-OTP\common.c"
  6136 ;; Parameters:    Size  Location     Type
  6137 ;;		None
  6138 ;; Auto vars:     Size  Location     Type
  6139 ;;		None
  6140 ;; Return value:  Size  Location     Type
  6141 ;;                  1    wreg      unsigned char 
  6142 ;; Registers used:
  6143 ;;		wreg
  6144 ;; Tracked objects:
  6145 ;;		On entry : 40/20
  6146 ;;		On exit  : 60/20
  6147 ;;		Unchanged: FFF9F/0
  6148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6149 ;;      Params:         0       0       0       0       0
  6150 ;;      Locals:         0       0       0       0       0
  6151 ;;      Temps:          0       0       0       0       0
  6152 ;;      Totals:         0       0       0       0       0
  6153 ;;Total ram usage:        0 bytes
  6154 ;; Hardware stack levels used:    1
  6155 ;; Hardware stack levels required when called:    2
  6156 ;; This function calls:
  6157 ;;		Nothing
  6158 ;; This function is called by:
  6159 ;;		_main
  6160 ;; This function uses a non-reentrant model
  6161 ;;
  6162  0EC8                     _isPermitSampleTime:	
  6163                           
  6164                           ;common.c: 510: if(timer.timer10msStopWatch >= 10)
  6165                           
  6166                           ; Regs used in _isPermitSampleTime: [wreg]
  6167  0EC8  300A               	movlw	10
  6168  0EC9  1683               	bsf	3,5	;RP0=1, select bank1
  6169  0ECA  022E               	subwf	_timer^(0+128),w
  6170  0ECB  1803               	btfsc	3,0
  6171                           
  6172                           ;common.c: 511: {
  6173                           ;common.c: 512: return 1;
  6174  0ECC  3401               	retlw	1
  6175                           
  6176                           ;common.c: 514: else
  6177                           ;common.c: 515: return 0;
  6178  0ECD  3400               	retlw	0
  6179  0ECE                     __end_of_isPermitSampleTime:	
  6180                           
  6181                           	psect	text1008
  6182  0F38                     __ptext1008:	
  6183 ;; =============== function _isPermitSampleTime ends ============
  6184                           
  6185                           
  6186 ;; *************** function _startTwentyMinuteTimer *****************
  6187 ;; Defined at:
  6188 ;;		line 453 in file "C:\temp\dev\AK7030-OTP\common.c"
  6189 ;; Parameters:    Size  Location     Type
  6190 ;;  uiValue         2    0[BANK0 ] unsigned int 
  6191 ;; Auto vars:     Size  Location     Type
  6192 ;;		None
  6193 ;; Return value:  Size  Location     Type
  6194 ;;		None               void
  6195 ;; Registers used:
  6196 ;;		wreg, status,2, status,0
  6197 ;; Tracked objects:
  6198 ;;		On entry : 60/0
  6199 ;;		On exit  : 40/0
  6200 ;;		Unchanged: FFF9F/0
  6201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6202 ;;      Params:         0       2       0       0       0
  6203 ;;      Locals:         0       0       0       0       0
  6204 ;;      Temps:          0       0       0       0       0
  6205 ;;      Totals:         0       2       0       0       0
  6206 ;;Total ram usage:        2 bytes
  6207 ;; Hardware stack levels used:    1
  6208 ;; Hardware stack levels required when called:    2
  6209 ;; This function calls:
  6210 ;;		Nothing
  6211 ;; This function is called by:
  6212 ;;		_main
  6213 ;; This function uses a non-reentrant model
  6214 ;;
  6215  0F38                     _startTwentyMinuteTimer:	
  6216                           
  6217                           ;common.c: 454: if(( 0 == uiTwentyMinuteTimer) && ( 0 == bTwentyMinStartFlag))
  6218                           
  6219                           ; Regs used in _startTwentyMinuteTimer: [wreg+status,2+status,0]
  6220  0F38  1683               	bsf	3,5	;RP0=1, select bank1
  6221  0F39  0825               	movf	(_uiTwentyMinuteTimer+1)^(0+128),w
  6222  0F3A  0424               	iorwf	_uiTwentyMinuteTimer^(0+128),w
  6223  0F3B  1D03               	skipz
  6224  0F3C  0008               	return
  6225  0F3D  1283               	bcf	3,5	;RP0=0, select bank0
  6226  0F3E  08CE               	movf	_bTwentyMinStartFlag,f
  6227  0F3F  1D03               	skipz
  6228  0F40  0008               	return
  6229                           
  6230                           ;common.c: 455: {
  6231                           ;common.c: 456: uiTwentyMinuteTimer = uiValue;
  6232  0F41  0821               	movf	startTwentyMinuteTimer@uiValue+1,w
  6233  0F42  1683               	bsf	3,5	;RP0=1, select bank1
  6234  0F43  00A5               	movwf	(_uiTwentyMinuteTimer+1)^(0+128)
  6235  0F44  1283               	bcf	3,5	;RP0=0, select bank0
  6236  0F45  0820               	movf	startTwentyMinuteTimer@uiValue,w
  6237  0F46  1683               	bsf	3,5	;RP0=1, select bank1
  6238  0F47  00A4               	movwf	_uiTwentyMinuteTimer^(0+128)
  6239                           
  6240                           ;common.c: 457: bTwentyMinStartFlag = 1;
  6241  0F48  1283               	bcf	3,5	;RP0=0, select bank0
  6242  0F49  01CE               	clrf	_bTwentyMinStartFlag
  6243  0F4A  0ACE               	incf	_bTwentyMinStartFlag,f
  6244  0F4B  0008               	return
  6245  0F4C                     __end_of_startTwentyMinuteTimer:	
  6246                           
  6247                           	psect	text1011
  6248  0EC5                     __ptext1011:	
  6249 ;; =============== function _adc_test_init ends ============
  6250                           
  6251                           
  6252 ;; *************** function _timer1_interrupt_config *****************
  6253 ;; Defined at:
  6254 ;;		line 221 in file "C:\temp\dev\AK7030-OTP\common.c"
  6255 ;; Parameters:    Size  Location     Type
  6256 ;;		None
  6257 ;; Auto vars:     Size  Location     Type
  6258 ;;		None
  6259 ;; Return value:  Size  Location     Type
  6260 ;;		None               void
  6261 ;; Registers used:
  6262 ;;		None
  6263 ;; Tracked objects:
  6264 ;;		On entry : 17F/20
  6265 ;;		On exit  : 17F/20
  6266 ;;		Unchanged: FFE80/0
  6267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6268 ;;      Params:         0       0       0       0       0
  6269 ;;      Locals:         0       0       0       0       0
  6270 ;;      Temps:          0       0       0       0       0
  6271 ;;      Totals:         0       0       0       0       0
  6272 ;;Total ram usage:        0 bytes
  6273 ;; Hardware stack levels used:    1
  6274 ;; Hardware stack levels required when called:    2
  6275 ;; This function calls:
  6276 ;;		Nothing
  6277 ;; This function is called by:
  6278 ;;		_main
  6279 ;; This function uses a non-reentrant model
  6280 ;;
  6281  0EC5                     _timer1_interrupt_config:	
  6282                           
  6283                           ;common.c: 222: GIE = 1;
  6284                           
  6285                           ; Regs used in _timer1_interrupt_config: []
  6286  0EC5  178B               	bsf	11,7
  6287                           
  6288                           ;common.c: 223: PEIE = 1;
  6289  0EC6  170B               	bsf	11,6
  6290  0EC7  0008               	return
  6291  0EC8                     __end_of_timer1_interrupt_config:	
  6292                           
  6293                           	psect	text1012
  6294  0EEF                     __ptext1012:	
  6295 ;; =============== function _timer1_interrupt_config ends ============
  6296                           
  6297                           
  6298 ;; *************** function _timer1_config *****************
  6299 ;; Defined at:
  6300 ;;		line 209 in file "C:\temp\dev\AK7030-OTP\common.c"
  6301 ;; Parameters:    Size  Location     Type
  6302 ;;		None
  6303 ;; Auto vars:     Size  Location     Type
  6304 ;;		None
  6305 ;; Return value:  Size  Location     Type
  6306 ;;		None               void
  6307 ;; Registers used:
  6308 ;;		wreg
  6309 ;; Tracked objects:
  6310 ;;		On entry : 17F/40
  6311 ;;		On exit  : 17F/20
  6312 ;;		Unchanged: FFE80/0
  6313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6314 ;;      Params:         0       0       0       0       0
  6315 ;;      Locals:         0       0       0       0       0
  6316 ;;      Temps:          0       0       0       0       0
  6317 ;;      Totals:         0       0       0       0       0
  6318 ;;Total ram usage:        0 bytes
  6319 ;; Hardware stack levels used:    1
  6320 ;; Hardware stack levels required when called:    2
  6321 ;; This function calls:
  6322 ;;		Nothing
  6323 ;; This function is called by:
  6324 ;;		_main
  6325 ;; This function uses a non-reentrant model
  6326 ;;
  6327  0EEF                     _timer1_config:	
  6328                           
  6329                           ;common.c: 211: TMR1H=0xCF;
  6330                           
  6331                           ; Regs used in _timer1_config: [wreg]
  6332  0EEF  30CF               	movlw	207
  6333  0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  6334  0EF1  008F               	movwf	15	;volatile
  6335                           
  6336                           ;common.c: 212: TMR1L=0x2C;
  6337  0EF2  302C               	movlw	44
  6338  0EF3  008E               	movwf	14	;volatile
  6339                           
  6340                           ;common.c: 213: T1CON=0xE1;
  6341  0EF4  30E1               	movlw	225
  6342  0EF5  0090               	movwf	16	;volatile
  6343                           
  6344                           ;common.c: 214: TMR1IE=1;
  6345  0EF6  1683               	bsf	3,5	;RP0=1, select bank1
  6346  0EF7  140C               	bsf	12,0
  6347  0EF8  0008               	return
  6348  0EF9                     __end_of_timer1_config:	
  6349                           
  6350                           	psect	text1013
  6351  0ED6                     __ptext1013:	
  6352 ;; =============== function _timer1_config ends ============
  6353                           
  6354                           
  6355 ;; *************** function _clock_config *****************
  6356 ;; Defined at:
  6357 ;;		line 201 in file "C:\temp\dev\AK7030-OTP\common.c"
  6358 ;; Parameters:    Size  Location     Type
  6359 ;;		None
  6360 ;; Auto vars:     Size  Location     Type
  6361 ;;		None
  6362 ;; Return value:  Size  Location     Type
  6363 ;;		None               void
  6364 ;; Registers used:
  6365 ;;		wreg, status,2
  6366 ;; Tracked objects:
  6367 ;;		On entry : 17F/20
  6368 ;;		On exit  : 17F/40
  6369 ;;		Unchanged: FFE80/0
  6370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6371 ;;      Params:         0       0       0       0       0
  6372 ;;      Locals:         0       0       0       0       0
  6373 ;;      Temps:          0       0       0       0       0
  6374 ;;      Totals:         0       0       0       0       0
  6375 ;;Total ram usage:        0 bytes
  6376 ;; Hardware stack levels used:    1
  6377 ;; Hardware stack levels required when called:    2
  6378 ;; This function calls:
  6379 ;;		Nothing
  6380 ;; This function is called by:
  6381 ;;		_main
  6382 ;; This function uses a non-reentrant model
  6383 ;;
  6384  0ED6                     _clock_config:	
  6385                           
  6386                           ;common.c: 203: CLKPR = 0x80;
  6387                           
  6388                           ; Regs used in _clock_config: [wreg+status,2]
  6389  0ED6  3080               	movlw	128
  6390  0ED7  1283               	bcf	3,5	;RP0=0, select bank2
  6391  0ED8  1703               	bsf	3,6	;RP1=1, select bank2
  6392  0ED9  0088               	movwf	8	;volatile
  6393                           
  6394                           ;common.c: 204: CLKPR = 0x00;
  6395  0EDA  0188               	clrf	8	;volatile
  6396  0EDB                     l1841:	
  6397                           ;common.c: 205: while(CLKPCE);
  6398                           
  6399  0EDB  1F88               	btfss	8,7
  6400  0EDC  0008               	return
  6401  0EDD  2EDB               	goto	l1841
  6402  0EDE                     __end_of_clock_config:	
  6403                           
  6404                           	psect	text1015
  6405  0ECE                     __ptext1015:	
  6406 ;; =============== function _setPB6AsInput ends ============
  6407                           
  6408                           
  6409 ;; *************** function _setPA6 *****************
  6410 ;; Defined at:
  6411 ;;		line 356 in file "C:\temp\dev\AK7030-OTP\main.c"
  6412 ;; Parameters:    Size  Location     Type
  6413 ;;  bValue          1    wreg     unsigned char 
  6414 ;; Auto vars:     Size  Location     Type
  6415 ;;  bValue          1    0[BANK0 ] unsigned char 
  6416 ;; Return value:  Size  Location     Type
  6417 ;;		None               void
  6418 ;; Registers used:
  6419 ;;		wreg
  6420 ;; Tracked objects:
  6421 ;;		On entry : 60/0
  6422 ;;		On exit  : 60/0
  6423 ;;		Unchanged: FFF9F/0
  6424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6425 ;;      Params:         0       0       0       0       0
  6426 ;;      Locals:         0       1       0       0       0
  6427 ;;      Temps:          0       0       0       0       0
  6428 ;;      Totals:         0       1       0       0       0
  6429 ;;Total ram usage:        1 bytes
  6430 ;; Hardware stack levels used:    1
  6431 ;; Hardware stack levels required when called:    2
  6432 ;; This function calls:
  6433 ;;		Nothing
  6434 ;; This function is called by:
  6435 ;;		_main
  6436 ;; This function uses a non-reentrant model
  6437 ;;
  6438  0ECE                     _setPA6:	
  6439                           
  6440                           ; Regs used in _setPA6: [wreg]
  6441                           ;setPA6@bValue stored from wreg
  6442  0ECE  00A0               	movwf	setPA6@bValue
  6443                           
  6444                           ;main.c: 357: if( bValue )
  6445  0ECF  0820               	movf	setPA6@bValue,w
  6446  0ED0  1903               	btfsc	3,2
  6447  0ED1  2ED4               	goto	l750
  6448                           
  6449                           ;main.c: 359: PA6 = 1;
  6450  0ED2  1705               	bsf	5,6
  6451  0ED3  0008               	return
  6452  0ED4                     l750:	
  6453                           
  6454                           ;main.c: 363: else
  6455                           ;main.c: 365: PA6= 0;
  6456  0ED4  1305               	bcf	5,6
  6457  0ED5  0008               	return
  6458  0ED6                     __end_of_setPA6:	
  6459                           
  6460                           	psect	text1019
  6461  0EE6                     __ptext1019:	
  6462 ;; =============== function _setPA3 ends ============
  6463                           
  6464                           
  6465 ;; *************** function _setPA2 *****************
  6466 ;; Defined at:
  6467 ;;		line 252 in file "C:\temp\dev\AK7030-OTP\main.c"
  6468 ;; Parameters:    Size  Location     Type
  6469 ;;  bValue          1    wreg     unsigned char 
  6470 ;; Auto vars:     Size  Location     Type
  6471 ;;  bValue          1    0[BANK0 ] unsigned char 
  6472 ;; Return value:  Size  Location     Type
  6473 ;;		None               void
  6474 ;; Registers used:
  6475 ;;		wreg
  6476 ;; Tracked objects:
  6477 ;;		On entry : 40/20
  6478 ;;		On exit  : 60/0
  6479 ;;		Unchanged: FFF9F/0
  6480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6481 ;;      Params:         0       0       0       0       0
  6482 ;;      Locals:         0       1       0       0       0
  6483 ;;      Temps:          0       0       0       0       0
  6484 ;;      Totals:         0       1       0       0       0
  6485 ;;Total ram usage:        1 bytes
  6486 ;; Hardware stack levels used:    1
  6487 ;; Hardware stack levels required when called:    2
  6488 ;; This function calls:
  6489 ;;		Nothing
  6490 ;; This function is called by:
  6491 ;;		_main
  6492 ;; This function uses a non-reentrant model
  6493 ;;
  6494  0EE6                     _setPA2:	
  6495                           
  6496                           ; Regs used in _setPA2: [wreg]
  6497                           ;setPA2@bValue stored from wreg
  6498  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  6499  0EE7  00A0               	movwf	setPA2@bValue
  6500                           
  6501                           ;main.c: 253: if( bValue )
  6502  0EE8  0820               	movf	setPA2@bValue,w
  6503  0EE9  1903               	btfsc	3,2
  6504  0EEA  2EED               	goto	l725
  6505                           
  6506                           ;main.c: 255: PA2 = 1;
  6507  0EEB  1505               	bsf	5,2
  6508  0EEC  0008               	return
  6509  0EED                     l725:	
  6510                           
  6511                           ;main.c: 259: else
  6512                           ;main.c: 261: PA2 = 0;
  6513  0EED  1105               	bcf	5,2
  6514  0EEE  0008               	return
  6515  0EEF                     __end_of_setPA2:	
  6516                           
  6517                           	psect	text1025
  6518  0F8B                     __ptext1025:	
  6519 ;; =============== function _setPB0 ends ============
  6520                           
  6521                           
  6522 ;; *************** function _initPin *****************
  6523 ;; Defined at:
  6524 ;;		line 129 in file "C:\temp\dev\AK7030-OTP\main.c"
  6525 ;; Parameters:    Size  Location     Type
  6526 ;;		None
  6527 ;; Auto vars:     Size  Location     Type
  6528 ;;		None
  6529 ;; Return value:  Size  Location     Type
  6530 ;;		None               void
  6531 ;; Registers used:
  6532 ;;		None
  6533 ;; Tracked objects:
  6534 ;;		On entry : 160/0
  6535 ;;		On exit  : 160/20
  6536 ;;		Unchanged: FFE9F/0
  6537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6538 ;;      Params:         0       0       0       0       0
  6539 ;;      Locals:         0       0       0       0       0
  6540 ;;      Temps:          0       0       0       0       0
  6541 ;;      Totals:         0       0       0       0       0
  6542 ;;Total ram usage:        0 bytes
  6543 ;; Hardware stack levels used:    1
  6544 ;; Hardware stack levels required when called:    2
  6545 ;; This function calls:
  6546 ;;		Nothing
  6547 ;; This function is called by:
  6548 ;;		_main
  6549 ;; This function uses a non-reentrant model
  6550 ;;
  6551  0F8B                     _initPin:	
  6552                           
  6553                           ;main.c: 132: TRISB0 = 0;
  6554                           
  6555                           ; Regs used in _initPin: []
  6556  0F8B  1683               	bsf	3,5	;RP0=1, select bank1
  6557  0F8C  1006               	bcf	6,0
  6558                           
  6559                           ;main.c: 133: PB0 = 0;
  6560  0F8D  1283               	bcf	3,5	;RP0=0, select bank0
  6561  0F8E  1006               	bcf	6,0
  6562                           
  6563                           ;main.c: 134: TRISB1 = 0;
  6564  0F8F  1683               	bsf	3,5	;RP0=1, select bank1
  6565  0F90  1086               	bcf	6,1
  6566                           
  6567                           ;main.c: 135: PB1 = 0;
  6568  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  6569  0F92  1086               	bcf	6,1
  6570                           
  6571                           ;main.c: 136: TRISB2 = 0;
  6572  0F93  1683               	bsf	3,5	;RP0=1, select bank1
  6573  0F94  1106               	bcf	6,2
  6574                           
  6575                           ;main.c: 137: PB2 = 0;
  6576  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  6577  0F96  1106               	bcf	6,2
  6578                           
  6579                           ;main.c: 138: TRISA0 = 0;
  6580  0F97  1683               	bsf	3,5	;RP0=1, select bank1
  6581  0F98  1005               	bcf	5,0
  6582                           
  6583                           ;main.c: 139: PA0 = 0;
  6584  0F99  1283               	bcf	3,5	;RP0=0, select bank0
  6585  0F9A  1005               	bcf	5,0
  6586                           
  6587                           ;main.c: 140: TRISA1 = 0;
  6588  0F9B  1683               	bsf	3,5	;RP0=1, select bank1
  6589  0F9C  1085               	bcf	5,1
  6590                           
  6591                           ;main.c: 141: PA1 = 0;
  6592  0F9D  1283               	bcf	3,5	;RP0=0, select bank0
  6593  0F9E  1085               	bcf	5,1
  6594                           
  6595                           ;main.c: 142: TRISA2 = 0;
  6596  0F9F  1683               	bsf	3,5	;RP0=1, select bank1
  6597  0FA0  1105               	bcf	5,2
  6598                           
  6599                           ;main.c: 143: PA2 = 1;
  6600  0FA1  1283               	bcf	3,5	;RP0=0, select bank0
  6601  0FA2  1505               	bsf	5,2
  6602                           
  6603                           ;main.c: 145: TRISA3 = 0;
  6604  0FA3  1683               	bsf	3,5	;RP0=1, select bank1
  6605  0FA4  1185               	bcf	5,3
  6606                           
  6607                           ;main.c: 146: PA3 = 0;
  6608  0FA5  1283               	bcf	3,5	;RP0=0, select bank0
  6609  0FA6  1185               	bcf	5,3
  6610                           
  6611                           ;main.c: 147: TRISB4 = 0;
  6612  0FA7  1683               	bsf	3,5	;RP0=1, select bank1
  6613  0FA8  1206               	bcf	6,4
  6614                           
  6615                           ;main.c: 148: PB4 = 0;
  6616  0FA9  1283               	bcf	3,5	;RP0=0, select bank0
  6617  0FAA  1206               	bcf	6,4
  6618                           
  6619                           ;main.c: 149: TRISB7 = 0;
  6620  0FAB  1683               	bsf	3,5	;RP0=1, select bank1
  6621  0FAC  1386               	bcf	6,7
  6622                           
  6623                           ;main.c: 150: PB7 = 0;
  6624  0FAD  1283               	bcf	3,5	;RP0=0, select bank0
  6625  0FAE  1386               	bcf	6,7
  6626                           
  6627                           ;main.c: 152: TRISB6 = 1;
  6628  0FAF  1683               	bsf	3,5	;RP0=1, select bank1
  6629  0FB0  1706               	bsf	6,6
  6630  0FB1  0008               	return
  6631  0FB2                     __end_of_initPin:	
  6632                           
  6633                           	psect	text1030
  6634  0706                     __ptext1030:	
  6635 ;; =============== function _clearTwelveHoursTimer ends ============
  6636                           
  6637                           
  6638 ;; *************** function _ISR *****************
  6639 ;; Defined at:
  6640 ;;		line 524 in file "C:\temp\dev\AK7030-OTP\common.c"
  6641 ;; Parameters:    Size  Location     Type
  6642 ;;		None
  6643 ;; Auto vars:     Size  Location     Type
  6644 ;;		None
  6645 ;; Return value:  Size  Location     Type
  6646 ;;		None               void
  6647 ;; Registers used:
  6648 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6649 ;; Tracked objects:
  6650 ;;		On entry : 0/0
  6651 ;;		On exit  : 60/0
  6652 ;;		Unchanged: FFE00/0
  6653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6654 ;;      Params:         0       0       0       0       0
  6655 ;;      Locals:         0       0       0       0       0
  6656 ;;      Temps:          4       0       0       0       0
  6657 ;;      Totals:         4       0       0       0       0
  6658 ;;Total ram usage:        4 bytes
  6659 ;; Hardware stack levels used:    1
  6660 ;; Hardware stack levels required when called:    1
  6661 ;; This function calls:
  6662 ;;		i1_setAD_ConvertFlag
  6663 ;;		_adc_get
  6664 ;;		_vPutSampleDataIntoTable
  6665 ;; This function is called by:
  6666 ;;		Interrupt level 1
  6667 ;; This function uses a non-reentrant model
  6668 ;;
  6669  0706                     _ISR:	
  6670                           
  6671                           ;common.c: 525: static unsigned char ucTimer1sCnt = 0;
  6672                           ;common.c: 527: if(TMR1IF == 1)
  6673  0706  1C0C               	btfss	12,0
  6674  0707  2F39               	goto	i1l4714
  6675                           
  6676                           ;common.c: 528: {
  6677                           ;common.c: 529: TMR1IF = 0 ;
  6678  0708  100C               	bcf	12,0
  6679                           
  6680                           ;common.c: 530: timer.timer10msStopWatch++;
  6681  0709  1683               	bsf	3,5	;RP0=1, select bank1
  6682  070A  3064               	movlw	100
  6683  070B  0AAE               	incf	_timer^(0+128),f
  6684                           
  6685                           ;common.c: 531: ucTimer1sCnt++;
  6686  070C  0AAC               	incf	ISR@ucTimer1sCnt^(0+128),f
  6687                           
  6688                           ;common.c: 533: if(ucTimer1sCnt >= 100)
  6689  070D  022C               	subwf	ISR@ucTimer1sCnt^(0+128),w
  6690  070E  1C03               	skipc
  6691  070F  2F39               	goto	i1l4714
  6692                           
  6693                           ;common.c: 534: {
  6694                           ;common.c: 535: ucTimer1sCnt = 0;
  6695  0710  01AC               	clrf	ISR@ucTimer1sCnt^(0+128)
  6696                           
  6697                           ;common.c: 536: if(uiBigTimer > 0)
  6698  0711  0821               	movf	(_uiBigTimer+1)^(0+128),w
  6699  0712  0420               	iorwf	_uiBigTimer^(0+128),w
  6700  0713  1903               	skipnz
  6701  0714  2F1B               	goto	i1l1952
  6702                           
  6703                           ;common.c: 537: uiBigTimer--;
  6704  0715  3001               	movlw	1
  6705  0716  02A0               	subwf	_uiBigTimer^(0+128),f
  6706  0717  3000               	movlw	0
  6707  0718  1C03               	skipc
  6708  0719  03A1               	decf	(_uiBigTimer+1)^(0+128),f
  6709  071A  02A1               	subwf	(_uiBigTimer+1)^(0+128),f
  6710  071B                     i1l1952:	
  6711                           
  6712                           ;common.c: 539: if(uiSmallTimer)
  6713  071B  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  6714  071C  0422               	iorwf	_uiSmallTimer^(0+128),w
  6715  071D  1903               	skipnz
  6716  071E  2F25               	goto	i1l1953
  6717                           
  6718                           ;common.c: 540: uiSmallTimer--;
  6719  071F  3001               	movlw	1
  6720  0720  02A2               	subwf	_uiSmallTimer^(0+128),f
  6721  0721  3000               	movlw	0
  6722  0722  1C03               	skipc
  6723  0723  03A3               	decf	(_uiSmallTimer+1)^(0+128),f
  6724  0724  02A3               	subwf	(_uiSmallTimer+1)^(0+128),f
  6725  0725                     i1l1953:	
  6726                           
  6727                           ;common.c: 542: if(uiTwentySecondsTimer)
  6728  0725  0827               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  6729  0726  0426               	iorwf	_uiTwentySecondsTimer^(0+128),w
  6730  0727  1903               	skipnz
  6731  0728  2F2F               	goto	i1l1954
  6732                           
  6733                           ;common.c: 543: uiTwentySecondsTimer--;
  6734  0729  3001               	movlw	1
  6735  072A  02A6               	subwf	_uiTwentySecondsTimer^(0+128),f
  6736  072B  3000               	movlw	0
  6737  072C  1C03               	skipc
  6738  072D  03A7               	decf	(_uiTwentySecondsTimer+1)^(0+128),f
  6739  072E  02A7               	subwf	(_uiTwentySecondsTimer+1)^(0+128),f
  6740  072F                     i1l1954:	
  6741                           
  6742                           ;common.c: 545: if(uiTwentyMinuteTimer)
  6743  072F  0825               	movf	(_uiTwentyMinuteTimer+1)^(0+128),w
  6744  0730  0424               	iorwf	_uiTwentyMinuteTimer^(0+128),w
  6745  0731  1903               	skipnz
  6746  0732  2F39               	goto	i1l4714
  6747                           
  6748                           ;common.c: 546: uiTwentyMinuteTimer--;
  6749  0733  3001               	movlw	1
  6750  0734  02A4               	subwf	_uiTwentyMinuteTimer^(0+128),f
  6751  0735  3000               	movlw	0
  6752  0736  1C03               	skipc
  6753  0737  03A5               	decf	(_uiTwentyMinuteTimer+1)^(0+128),f
  6754  0738  02A5               	subwf	(_uiTwentyMinuteTimer+1)^(0+128),f
  6755  0739                     i1l4714:	
  6756                           
  6757                           ;common.c: 547: }
  6758                           ;common.c: 548: }
  6759                           ;common.c: 550: if(ADIF)
  6760  0739  1283               	bcf	3,5	;RP0=0, select bank0
  6761  073A  1D0D               	btfss	13,2
  6762  073B  2F4A               	goto	i1l1957
  6763  073C  3001               	movlw	1
  6764                           
  6765                           ;common.c: 551: {
  6766                           ;common.c: 552: ADIF=0;
  6767  073D  110D               	bcf	13,2
  6768                           
  6769                           ;common.c: 553: setAD_ConvertFlag(1);
  6770  073E  27D8  118A         	fcall	i1_setAD_ConvertFlag
  6771                           
  6772                           ;common.c: 554: vPutSampleDataIntoTable(adc_get(),sampleChannelSelect);
  6773  0740  27CC  118A         	fcall	_adc_get
  6774  0742  0871               	movf	?_adc_get+1,w
  6775  0743  00F5               	movwf	?_vPutSampleDataIntoTable+1
  6776  0744  0870               	movf	?_adc_get,w
  6777  0745  00F4               	movwf	?_vPutSampleDataIntoTable
  6778  0746  1283               	bcf	3,5	;RP0=0, select bank0
  6779  0747  0851               	movf	_sampleChannelSelect,w
  6780  0748  00F6               	movwf	?_vPutSampleDataIntoTable+2
  6781  0749  2757               	fcall	_vPutSampleDataIntoTable
  6782  074A                     i1l1957:	
  6783  074A  087C               	movf	??_ISR+3,w
  6784  074B  1283               	bcf	3,5	;RP0=0, select bank0
  6785  074C  1303               	bcf	3,6	;RP1=0, select bank0
  6786  074D  00FF               	movwf	127
  6787  074E  087B               	movf	??_ISR+2,w
  6788  074F  008A               	movwf	10
  6789  0750  087A               	movf	??_ISR+1,w
  6790  0751  0084               	movwf	4
  6791  0752  0E79               	swapf	??_ISR^(0+-128),w
  6792  0753  0083               	movwf	3
  6793  0754  0EFE               	swapf	126,f
  6794  0755  0E7E               	swapf	126,w
  6795  0756  0009               	retfie
  6796  0757                     __end_of_ISR:	
  6797  0757                     __ptext1033:	
  6798 ;; =============== function _adc_get ends ============
  6799                           
  6800                           
  6801 ;; *************** function _vPutSampleDataIntoTable *****************
  6802 ;; Defined at:
  6803 ;;		line 105 in file "C:\temp\dev\AK7030-OTP\common.c"
  6804 ;; Parameters:    Size  Location     Type
  6805 ;;  uiSampleData    2    4[COMMON] unsigned int 
  6806 ;;  channel         1    6[COMMON] unsigned char 
  6807 ;; Auto vars:     Size  Location     Type
  6808 ;;  i               2    7[COMMON] int 
  6809 ;; Return value:  Size  Location     Type
  6810 ;;		None               void
  6811 ;; Registers used:
  6812 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  6813 ;; Tracked objects:
  6814 ;;		On entry : 60/0
  6815 ;;		On exit  : 0/0
  6816 ;;		Unchanged: FFE00/0
  6817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6818 ;;      Params:         3       0       0       0       0
  6819 ;;      Locals:         2       0       0       0       0
  6820 ;;      Temps:          0       0       0       0       0
  6821 ;;      Totals:         5       0       0       0       0
  6822 ;;Total ram usage:        5 bytes
  6823 ;; Hardware stack levels used:    1
  6824 ;; This function calls:
  6825 ;;		Nothing
  6826 ;; This function is called by:
  6827 ;;		_ISR
  6828 ;; This function uses a non-reentrant model
  6829 ;;
  6830  0757                     _vPutSampleDataIntoTable:	
  6831                           
  6832                           ;common.c: 107: static unsigned char ucChannelZeroLength = 0;
  6833                           ;common.c: 109: static unsigned char ucChannelSecondLength = 0;
  6834                           ;common.c: 111: static unsigned char ucChannelFifthLength = 0;
  6835                           ;common.c: 113: static unsigned char ucChannelSixthLength = 0;
  6836                           ;common.c: 115: if(channel == 0)
  6837                           
  6838                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1]
  6839  0757  08F6               	movf	vPutSampleDataIntoTable@channel,f
  6840  0758  1D03               	skipz
  6841  0759  2F66               	goto	i1l4640
  6842                           
  6843                           ;common.c: 116: {
  6844                           ;common.c: 117: if(ucChannelZeroLength < 12)
  6845  075A  300C               	movlw	12
  6846  075B  026E               	subwf	vPutSampleDataIntoTable@ucChannelZeroLength,w
  6847  075C  1803               	skipnc
  6848  075D  2F62               	goto	i1l4636
  6849                           
  6850                           ;common.c: 118: {
  6851                           ;common.c: 119: uiSampleChannelZero[ucChannelZeroLength] = uiSampleData;
  6852  075E  1003               	clrc
  6853  075F  27E4               	fcall	PL3	;call to abstracted procedure
  6854                           
  6855                           ;common.c: 121: ucChannelZeroLength++;
  6856  0760  0AEE               	incf	vPutSampleDataIntoTable@ucChannelZeroLength,f
  6857                           
  6858                           ;common.c: 122: }
  6859  0761  0008               	return
  6860  0762                     i1l4636:	
  6861                           
  6862                           ;common.c: 123: else
  6863                           ;common.c: 124: {
  6864                           ;common.c: 125: ucChannelZeroLength = 0;
  6865  0762  01EE               	clrf	vPutSampleDataIntoTable@ucChannelZeroLength
  6866                           
  6867                           ;common.c: 127: uiSampleChannelZero[ucChannelZeroLength] = uiSampleData;
  6868  0763  1003               	clrc
  6869  0764  27E4               	fcall	PL3	;call to abstracted procedure
  6870  0765  0008               	return
  6871  0766                     i1l4640:	
  6872                           
  6873                           ;common.c: 130: else if(channel == 2)
  6874  0766  0876               	movf	vPutSampleDataIntoTable@channel,w
  6875  0767  3A02               	xorlw	2
  6876  0768  1D03               	skipz
  6877  0769  2F7A               	goto	i1l4652
  6878                           
  6879                           ;common.c: 131: {
  6880                           ;common.c: 132: if(ucChannelSecondLength < 12)
  6881  076A  300C               	movlw	12
  6882  076B  026C               	subwf	vPutSampleDataIntoTable@ucChannelSecondLength,w
  6883  076C  1803               	skipnc
  6884  076D  2F74               	goto	i1l4648
  6885                           
  6886                           ;common.c: 133: {
  6887                           ;common.c: 134: uiSampleChannelSecond[ucChannelSecondLength] = uiSampleData;
  6888  076E  1003               	clrc
  6889  076F  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelSecondLength,w
  6890  0770  3EA8               	addlw	_uiSampleChannelSecond& (0+255)
  6891  0771  27DC               	fcall	PL2	;call to abstracted procedure
  6892                           
  6893                           ;common.c: 136: ucChannelSecondLength++;
  6894  0772  0AEC               	incf	vPutSampleDataIntoTable@ucChannelSecondLength,f
  6895                           
  6896                           ;common.c: 137: }
  6897  0773  0008               	return
  6898  0774                     i1l4648:	
  6899                           
  6900                           ;common.c: 138: else
  6901                           ;common.c: 139: {
  6902                           ;common.c: 140: ucChannelSecondLength = 0;
  6903  0774  01EC               	clrf	vPutSampleDataIntoTable@ucChannelSecondLength
  6904                           
  6905                           ;common.c: 142: uiSampleChannelSecond[ucChannelSecondLength] = uiSampleData;
  6906  0775  1003               	clrc
  6907  0776  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelSecondLength,w
  6908  0777  3EA8               	addlw	_uiSampleChannelSecond& (0+255)
  6909  0778  27DC               	fcall	PL2	;call to abstracted procedure
  6910  0779  0008               	return
  6911  077A                     i1l4652:	
  6912                           
  6913                           ;common.c: 145: else if(channel == 5)
  6914  077A  0876               	movf	vPutSampleDataIntoTable@channel,w
  6915  077B  3A05               	xorlw	5
  6916  077C  1D03               	skipz
  6917  077D  2F8E               	goto	i1l4664
  6918                           
  6919                           ;common.c: 146: {
  6920                           ;common.c: 147: if(ucChannelFifthLength < 12)
  6921  077E  300C               	movlw	12
  6922  077F  026B               	subwf	vPutSampleDataIntoTable@ucChannelFifthLength,w
  6923  0780  1803               	skipnc
  6924  0781  2F88               	goto	i1l4660
  6925                           
  6926                           ;common.c: 148: {
  6927                           ;common.c: 149: uiSampleChannelFifth[ucChannelFifthLength] = uiSampleData;
  6928  0782  1003               	clrc
  6929  0783  0D6B               	rlf	vPutSampleDataIntoTable@ucChannelFifthLength,w
  6930  0784  3E90               	addlw	_uiSampleChannelFifth& (0+255)
  6931  0785  27DC               	fcall	PL2	;call to abstracted procedure
  6932                           
  6933                           ;common.c: 151: ucChannelFifthLength++;
  6934  0786  0AEB               	incf	vPutSampleDataIntoTable@ucChannelFifthLength,f
  6935                           
  6936                           ;common.c: 152: }
  6937  0787  0008               	return
  6938  0788                     i1l4660:	
  6939                           
  6940                           ;common.c: 153: else
  6941                           ;common.c: 154: {
  6942                           ;common.c: 155: ucChannelFifthLength = 0;
  6943  0788  01EB               	clrf	vPutSampleDataIntoTable@ucChannelFifthLength
  6944                           
  6945                           ;common.c: 157: uiSampleChannelFifth[ucChannelFifthLength] = uiSampleData;
  6946  0789  1003               	clrc
  6947  078A  0D6B               	rlf	vPutSampleDataIntoTable@ucChannelFifthLength,w
  6948  078B  3E90               	addlw	_uiSampleChannelFifth& (0+255)
  6949  078C  27DC               	fcall	PL2	;call to abstracted procedure
  6950  078D  0008               	return
  6951  078E                     i1l4664:	
  6952                           
  6953                           ;common.c: 160: else if(channel == 6)
  6954  078E  0876               	movf	vPutSampleDataIntoTable@channel,w
  6955  078F  3A06               	xorlw	6
  6956  0790  1D03               	skipz
  6957  0791  2FA2               	goto	i1l4676
  6958                           
  6959                           ;common.c: 161: {
  6960                           ;common.c: 162: if(ucChannelSixthLength < 12)
  6961  0792  300C               	movlw	12
  6962  0793  026D               	subwf	vPutSampleDataIntoTable@ucChannelSixthLength,w
  6963  0794  1803               	skipnc
  6964  0795  2F9C               	goto	i1l4672
  6965                           
  6966                           ;common.c: 163: {
  6967                           ;common.c: 164: uiSampleChannelSixth[ucChannelSixthLength] = uiSampleData;
  6968  0796  1003               	clrc
  6969  0797  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelSixthLength,w
  6970  0798  3EC0               	addlw	_uiSampleChannelSixth& (0+255)
  6971  0799  27DC               	fcall	PL2	;call to abstracted procedure
  6972                           
  6973                           ;common.c: 166: ucChannelSixthLength++;
  6974  079A  0AED               	incf	vPutSampleDataIntoTable@ucChannelSixthLength,f
  6975                           
  6976                           ;common.c: 167: }
  6977  079B  0008               	return
  6978  079C                     i1l4672:	
  6979                           
  6980                           ;common.c: 168: else
  6981                           ;common.c: 169: {
  6982                           ;common.c: 170: ucChannelSixthLength = 0;
  6983  079C  01ED               	clrf	vPutSampleDataIntoTable@ucChannelSixthLength
  6984                           
  6985                           ;common.c: 172: uiSampleChannelSixth[ucChannelSixthLength] = uiSampleData;
  6986  079D  1003               	clrc
  6987  079E  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelSixthLength,w
  6988  079F  3EC0               	addlw	_uiSampleChannelSixth& (0+255)
  6989  07A0  27DC               	fcall	PL2	;call to abstracted procedure
  6990  07A1  0008               	return
  6991  07A2                     i1l4676:	
  6992                           
  6993                           ;common.c: 175: else
  6994                           ;common.c: 176: {
  6995                           ;common.c: 177: ucChannelZeroLength = 0;
  6996  07A2  01EE               	clrf	vPutSampleDataIntoTable@ucChannelZeroLength
  6997                           
  6998                           ;common.c: 179: ucChannelSecondLength = 0;
  6999  07A3  01EC               	clrf	vPutSampleDataIntoTable@ucChannelSecondLength
  7000                           
  7001                           ;common.c: 181: ucChannelFifthLength = 0;
  7002  07A4  01EB               	clrf	vPutSampleDataIntoTable@ucChannelFifthLength
  7003                           
  7004                           ;common.c: 183: ucChannelSixthLength = 0;
  7005  07A5  01ED               	clrf	vPutSampleDataIntoTable@ucChannelSixthLength
  7006                           
  7007                           ;common.c: 185: for(int i = 0;i < 12; i++)
  7008  07A6  01F7               	clrf	vPutSampleDataIntoTable@i
  7009  07A7  01F8               	clrf	vPutSampleDataIntoTable@i+1
  7010  07A8                     i1l4682:	
  7011                           
  7012                           ;common.c: 186: {
  7013                           ;common.c: 187: uiSampleChannelZero[i] = 0;
  7014  07A8  1003               	clrc
  7015  07A9  0D77               	rlf	vPutSampleDataIntoTable@i,w
  7016  07AA  3EC3               	addlw	_uiSampleChannelZero& (0+255)
  7017  07AB  0084               	movwf	4
  7018  07AC  1383               	bcf	3,7	;select IRP bank1
  7019                           
  7020                           ;common.c: 189: uiSampleChannelSecond[i] = 0;
  7021  07AD  27EE  118A         	fcall	PL7	;call to abstracted procedure
  7022  07AF  3EA8               	addlw	_uiSampleChannelSecond& (0+255)
  7023  07B0  0084               	movwf	4
  7024  07B1  1783               	bsf	3,7	;select IRP bank3
  7025                           
  7026                           ;common.c: 191: uiSampleChannelFifth[i] = 0;
  7027  07B2  27EE  118A         	fcall	PL7	;call to abstracted procedure
  7028  07B4  3E90               	addlw	_uiSampleChannelFifth& (0+255)
  7029  07B5  0084               	movwf	4
  7030                           
  7031                           ;common.c: 193: uiSampleChannelSixth[i] = 0;
  7032  07B6  27EE  118A         	fcall	PL7	;call to abstracted procedure
  7033  07B8  3EC0               	addlw	_uiSampleChannelSixth& (0+255)
  7034  07B9  0084               	movwf	4
  7035  07BA  0180               	clrf	0
  7036  07BB  0A84               	incf	4,f
  7037  07BC  0180               	clrf	0
  7038  07BD  0AF7               	incf	vPutSampleDataIntoTable@i,f
  7039  07BE  1903               	skipnz
  7040  07BF  0AF8               	incf	vPutSampleDataIntoTable@i+1,f
  7041  07C0  0878               	movf	vPutSampleDataIntoTable@i+1,w
  7042  07C1  3A80               	xorlw	128
  7043  07C2  00FF               	movwf	127
  7044  07C3  3080               	movlw	128
  7045  07C4  027F               	subwf	127,w
  7046  07C5  1D03               	skipz
  7047  07C6  2FC9               	goto	u187_25
  7048  07C7  300C               	movlw	12
  7049  07C8  0277               	subwf	vPutSampleDataIntoTable@i,w
  7050  07C9                     u187_25:	
  7051  07C9  1803               	btfsc	3,0
  7052  07CA  0008               	return
  7053  07CB  2FA8               	goto	i1l4682
  7054  07CC                     __end_of_vPutSampleDataIntoTable:	
  7055  07CC                     __ptext1032:	
  7056 ;; =============== function i1_setAD_ConvertFlag ends ============
  7057                           
  7058                           
  7059 ;; *************** function _adc_get *****************
  7060 ;; Defined at:
  7061 ;;		line 105 in file "C:\temp\dev\AK7030-OTP\periph.c"
  7062 ;; Parameters:    Size  Location     Type
  7063 ;;		None
  7064 ;; Auto vars:     Size  Location     Type
  7065 ;;  val             2    2[COMMON] unsigned int 
  7066 ;; Return value:  Size  Location     Type
  7067 ;;                  2    0[COMMON] unsigned int 
  7068 ;; Registers used:
  7069 ;;		wreg
  7070 ;; Tracked objects:
  7071 ;;		On entry : 60/20
  7072 ;;		On exit  : 60/20
  7073 ;;		Unchanged: FFF9F/0
  7074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7075 ;;      Params:         2       0       0       0       0
  7076 ;;      Locals:         2       0       0       0       0
  7077 ;;      Temps:          0       0       0       0       0
  7078 ;;      Totals:         4       0       0       0       0
  7079 ;;Total ram usage:        4 bytes
  7080 ;; Hardware stack levels used:    1
  7081 ;; This function calls:
  7082 ;;		Nothing
  7083 ;; This function is called by:
  7084 ;;		_ISR
  7085 ;; This function uses a non-reentrant model
  7086 ;;
  7087  07CC                     _adc_get:	
  7088                           
  7089                           ;periph.c: 106: unsigned int val;
  7090                           ;periph.c: 107: val = (ADRESH<<8) | ADRESL;
  7091                           
  7092                           ; Regs used in _adc_get: [wreg]
  7093  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  7094  07CD  081E               	movf	30,w	;volatile
  7095  07CE  00F3               	movwf	adc_get@val+1
  7096  07CF  01F2               	clrf	adc_get@val
  7097  07D0  1683               	bsf	3,5	;RP0=1, select bank1
  7098  07D1  081E               	movf	30,w	;volatile
  7099  07D2  04F2               	iorwf	adc_get@val,f
  7100                           
  7101                           ;periph.c: 108: return val;
  7102  07D3  0873               	movf	adc_get@val+1,w
  7103  07D4  00F1               	movwf	?_adc_get+1
  7104  07D5  0872               	movf	adc_get@val,w
  7105  07D6  00F0               	movwf	?_adc_get
  7106  07D7  0008               	return
  7107  07D8                     __end_of_adc_get:	
  7108  07D8                     __ptext1031:	
  7109 ;; =============== function _ISR ends ============
  7110                           
  7111                           
  7112 ;; *************** function i1_setAD_ConvertFlag *****************
  7113 ;; Defined at:
  7114 ;;		line 235 in file "C:\temp\dev\AK7030-OTP\common.c"
  7115 ;; Parameters:    Size  Location     Type
  7116 ;;  setAD_Conver    1    wreg     unsigned char 
  7117 ;; Auto vars:     Size  Location     Type
  7118 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  7119 ;; Return value:  Size  Location     Type
  7120 ;;		None               void
  7121 ;; Registers used:
  7122 ;;		wreg
  7123 ;; Tracked objects:
  7124 ;;		On entry : 60/0
  7125 ;;		On exit  : 60/20
  7126 ;;		Unchanged: FFF9F/0
  7127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7128 ;;      Params:         0       0       0       0       0
  7129 ;;      Locals:         1       0       0       0       0
  7130 ;;      Temps:          0       0       0       0       0
  7131 ;;      Totals:         1       0       0       0       0
  7132 ;;Total ram usage:        1 bytes
  7133 ;; Hardware stack levels used:    1
  7134 ;; This function calls:
  7135 ;;		Nothing
  7136 ;; This function is called by:
  7137 ;;		_ISR
  7138 ;; This function uses a non-reentrant model
  7139 ;;
  7140  07D8                     i1_setAD_ConvertFlag:	
  7141                           
  7142                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  7143                           ;i1setAD_ConvertFlag@flag stored from wreg
  7144  07D8  00F0               	movwf	i1setAD_ConvertFlag@flag
  7145                           
  7146                           ;common.c: 236: adc_convert_flag = flag;
  7147  07D9  1683               	bsf	3,5	;RP0=1, select bank1
  7148  07DA  00AD               	movwf	_adc_convert_flag^(0+128)
  7149  07DB  0008               	return
  7150  07DC                     __end_ofi1_setAD_ConvertFlag:	
  7151  07DC                     PL2:	
  7152  07DC  0084               	movwf	4
  7153  07DD  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  7154  07DE  1783               	bsf	3,7	;select IRP bank3
  7155  07DF  0080               	movwf	0
  7156  07E0  0A84               	incf	4,f
  7157  07E1  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  7158  07E2  0080               	movwf	0
  7159  07E3  0008               	return
  7160  07E4                     PL3:	
  7161  07E4  0D6E               	rlf	vPutSampleDataIntoTable@ucChannelZeroLength,w
  7162  07E5  3EC3               	addlw	_uiSampleChannelZero& (0+255)
  7163  07E6  0084               	movwf	4
  7164  07E7  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  7165  07E8  1383               	bcf	3,7	;select IRP bank1
  7166  07E9  0080               	movwf	0
  7167  07EA  0A84               	incf	4,f
  7168  07EB  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  7169  07EC  0080               	movwf	0
  7170  07ED  0008               	return
  7171  07EE                     PL7:	
  7172  07EE  0180               	clrf	0
  7173  07EF  0A84               	incf	4,f
  7174  07F0  0180               	clrf	0
  7175  07F1  1003               	clrc
  7176  07F2  0D77               	rlf	vPutSampleDataIntoTable@i,w
  7177  07F3  0008               	return
  7178                           
  7179                           	psect	intentry
  7180  0004                     __pintentry:	
  7181                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7182                           
  7183  0004                     interrupt_function:	
  7184  007E                     saved_w	set	btemp
  7185  0004  00FE               	movwf	btemp
  7186  0005  0E03               	swapf	3,w
  7187  0006  00F9               	movwf	??_ISR
  7188  0007  0804               	movf	4,w
  7189  0008  00FA               	movwf	??_ISR+1
  7190  0009  080A               	movf	10,w
  7191  000A  00FB               	movwf	??_ISR+2
  7192  000B  1283               	bcf	3,5	;RP0=0, select bank0
  7193  000C  1303               	bcf	3,6	;RP1=0, select bank0
  7194  000D  087F               	movf	btemp+1,w
  7195  000E  00FC               	movwf	??_ISR+3
  7196  000F  118A  2F06         	ljmp	_ISR
  7197                           
  7198                           	psect	text1034
  7199  0000                     __ptext1034:	
  7200 ;; =============== function _vPutSampleDataIntoTable ends ============
  7201                           
  7202  007E                     btemp	set	126	;btemp
  7203  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sat Feb 29 15:50:58 2020

                              ??_clock_config 0020                                             pc 0002  
                                          _GO 00F9                                            fsr 0004  
                    ?_timer1_interrupt_config 0070                                           l700 04AD  
                                         l710 04BD                                           l720 04CF  
                                         l705 04B5                                           l730 062C  
                                         l715 04C6                                           l740 053B  
                                         l725 0EED                                           l813 00EA  
                                         l750 0ED4                                           l735 0640  
                                         l833 0145                                           l755 0000  
                                         l691 0000                                           l772 005E  
                                         l837 016D                                           l694 0000  
                                         l758 0000                                           l697 0000  
                                         l972 030C                                           l991 035B  
                                         _PA0 0028                                           _PA1 0029  
                                         _GIE 005F                                           _PB0 0030  
                                         _PA2 002A                                           _PB1 0031  
                                         _PA3 002B                                           _PB2 0032  
                                         _PB4 0034                                           _PA6 002E  
                                         _PB6 0036                                           _PB7 0037  
                                         _ISR 0706                                           fsr0 0004  
                                         indf 0000                                _ucChannel5Type 0054  
                      ??_startThreeHoursTimer 0022                                          S5804 0800  
                                        S5806 080E                                          S5808 07F4  
                                        ?_ISR 0070                            __size_of_AD_Sample 0022  
                      ?_getAdOriginalCh0Value 0046                        ?_getAdOriginalCh2Value 0046  
                                        l1126 0534                                          l1039 0447  
                                        l5000 0000                                          l2610 0000  
                                        l5010 004E                                          l2604 0000  
                                        l5020 005F                                          l5004 0041  
                                        l1902 0000                                          l5102 0000  
                                        l5030 0000                                          l5014 0000  
                                        l4400 0000                                          l5120 0105  
                                        l5112 0000                                          l5104 00ED  
                                        l5040 007C                                          l5024 0000  
                                        l5016 0055                                          l5008 004D  
                                        l1905 0000                                          l1841 0EDB  
                                        l1809 0000                                          l4402 06E5  
                                        l4410 0000                                          l1850 0000  
                                        l5210 0000                                          l5122 0000  
                                        l5114 00FD                                          l5106 0000  
                                        l5050 0000                                          l5042 0000  
                                        l5034 0000                                          l5018 005B  
                                        l4404 0000                                          l4412 0000  
                                        l4420 0000                                          l1844 0000  
                                        l5300 0232                                          l5220 01C8  
                                        l5212 01BA                                          l5140 014F  
                                        l5132 0121                                          l5124 0110  
                                        l5108 0000                                          l5060 0000  
                                        l5052 0093                                          l5028 0000  
                                        l1853 0000                                          l4406 0000  
                                        l4414 0000                                          l4422 0000  
                                        l4430 0000                                          l1862 0000  
                                        l5310 023B                                          l5222 01CC  
                                        l5118 0000                                          l5070 00AA  
                                        l5062 0000                                          l5046 008A  
                                        l5038 0000                                          l1847 0000  
                                        l1871 0000                                          l4408 0000  
                                        l4416 0000                                          l4424 0000  
                                        l4432 0000                                          l4440 0000  
                                        l4520 0000                                          l1856 0000  
                                        l5400 02CA                                          l5320 0244  
                                        l5232 01D8                                          l5224 01CE  
                                        l5208 01B5                                          l5152 016B  
                                        l5144 0159                                          l5136 0140  
                                        l5128 011B                                          l5064 00A3  
                                        l5056 0000                                          l5048 0000  
                                        l1945 0000                                          l1865 0000  
                                        l4418 0000                                          l4426 0000  
                                        l4434 0000                                          l4442 0000  
                                        l4450 0000                                          l4514 0000  
                                        l4522 0000                                          l4610 0000  
                                        l5402 02CC                                          l5330 0255  
                                        l5234 01DA                                          l5218 01BC  
                                        l5162 017D                                          l5154 016F  
                                        l5090 00CF                                          l5082 0000  
                                        l5058 00A0                                          l4428 0000  
                                        l4436 0000                                          l4444 0000  
                                        l4452 0000                                          l4460 0000  
                                        l4508 0000                                          l4516 0000  
                                        l4532 0000                                          l4540 0000  
                                        l4620 0000                                          l4604 06B8  
                                        l1868 0000                                          l5500 03A4  
                                        l5412 02D2                                          l5340 025B  
                                        l5332 0000                                          l5244 01E3  
                                        l5228 01D6                                          l5156 0173  
                                        l5148 0162                                          l5092 0000  
                                        l5076 00BA                                          l5084 00C3  
                                        l5068 0000                                          l4438 0000  
                                        l4446 0000                                          l4454 0000  
                                        l4462 0000                                          l4470 0000  
                                        l4606 0678                                          l5510 0000  
                                        l5502 0000                                          l5422 02D8  
                                        l5414 0000                                          l5350 027D  
                                        l5342 0267                                          l5254 01EC  
                                        l5166 017F                                          l5158 0175  
                                        l5094 0000                                          l5078 00BB  
                                        l1896 0000                                          l4448 0000  
                                        l4456 0000                                          l4464 0000  
                                        l4544 0000                                          l4560 0000  
                                        l4624 0000                                          l4608 06BA  
                                        l5512 0000                                          l5504 03A7  
                                        l5432 0000                                          l5344 0273  
                                        l5264 01F5                                          l5168 0181  
                                        l5096 00DB                                          l5088 00CB  
                                        l4466 0000                                          l4458 0000  
                                        l4490 0000                                          l4538 0000  
                                        l4554 0000                                          l4562 0000  
                                        l4618 0000                                          l4730 0000  
                                        l4810 0FD9                                          l4802 0000  
                                        l5530 03D0                                          l5514 0000  
                                        l5450 031F                                          l5434 0304  
                                        l5426 02E6                                          l5354 027F  
                                        l5346 0275                                          l5290 0226  
                                        l5274 020A                                          l5178 018A  
                                        l1899 0000                                          l4396 0000  
                                        l4468 0FC6                                          l4476 0000  
                                        l4492 0000                                          l4820 0FE7  
                                        l5540 0000                                          l5532 03D4  
                                        l5524 0000                                          l5516 0000  
                                        l5508 0000                                          l5460 032F  
                                        l5452 0323                                          l5436 0000  
                                        l5428 02F7                                          l5356 0281  
                                        l5284 0210                                          l5276 0000  
                                        l5188 0193                                          l4398 0000  
                                        l4478 0000                                          l4566 0000  
                                        l4590 0000                                          l4734 0000  
                                        l4750 0000                                          l4742 0000  
                                        l4814 0FDF                                          l4806 0000  
                                        l4822 0000                                          l4830 0000  
                                        l4910 0000                                          l4902 0000  
                                        l5550 03EF                                          l5542 0000  
                                        l5534 03D6                                          l5526 03CD  
                                        l5518 03BB                                          l5470 0000  
                                        l5462 0000                                          l5446 0000  
                                        l5454 0328                                          l5438 0306  
                                        l5390 02BE                                          l5366 028A  
                                        l5294 022E                                          l5286 021C  
                                        l5198 019C                                          l4496 0000  
                                        l4568 0000                                          l4584 064F  
                                        l4728 04D1                                          l4760 0502  
                                        l4752 04F9                                          l4744 0000  
                                        l4824 0000                                          l4832 0000  
                                        l4920 05B2                                          l4912 0000  
                                        l4904 0000                                          l4840 0000  
                                        l5560 0422                                          l5552 0000  
                                        l5528 0000                                          l5480 0000  
                                        l5472 0000                                          l5448 0000  
                                        l5392 02C0                                          l5376 0297  
                                        l5288 0224                                          l4498 0000  
                                        l4586 0000                                          l4578 0000  
                                        l4738 0000                                          l4770 0000  
                                        l4762 0000                                          l4754 0000  
                                        l4746 04EC                                          l4818 0FE6  
                                        l4826 0000                                          l4834 0000  
                                        l4930 0000                                          l4922 05B4  
                                        l4914 0000                                          l4906 0598  
                                        l4850 0000                                          l4842 053E  
                                        l5570 0437                                          l5554 0413  
                                        l5538 0000                                          l5490 0393  
                                        l5482 0000                                          l5474 0000  
                                        l5466 0000                                          l5386 029D  
                                        l5378 0000                                          l5298 0230  
                                        l4588 0000                                          l4692 0000  
                                        l4772 0000                                          l4764 0000  
                                        l4748 0000                                          l4828 0000  
                                        l4940 05CC                                          l4932 05C2  
                                        l4916 05A6                                          l4908 059B  
                                        l4852 054E                                          l5572 0439  
                                        l5564 0000                                          l5548 03E3  
                                        l5484 0384                                          l5468 0338  
                                        l5388 02AE                                          l4598 0677  
                                        l4782 0000                                          l4774 0000  
                                        l4766 0000                                          l4758 0000  
                                        l4838 0000                                          l4950 05DC  
                                        l4926 0000                                          l4862 0000  
                                        l4846 0000                                          l5582 0448  
                                        l5566 042A                                          l5558 0420  
                                        l5494 0396                                          l5486 0387  
                                        l5478 0343                                          _ADIE 046A  
                                        l4688 0000                                          l4784 0000  
                                        l4776 0515                                          l4768 050A  
                                        l4792 0522                                          l4960 0000  
                                        l4944 0000                                          l4936 05C8  
                                        l4928 05BB                                          l4872 0000  
                                        l4880 0572                                          l4864 055D  
                                        l4856 0000                                          l4848 054B  
                                        l5576 0000                                          _ADIF 006A  
                                        l4786 0000                                          l4778 0000  
                                        l4794 0000                                          l4970 05F6  
                                        l4962 0000                                          l4954 0000  
                                        l4946 05D9                                          l4938 0000  
                                        l4890 0000                                          l4882 0000  
                                        l4874 0000                                          l4858 0555  
                                        l5578 0000                                          l5498 0000  
                                        l5586 0454                                          l4788 0000  
                                        l4964 0000                                          l4956 05E9  
                                        l4948 0000                                          l4892 0584  
                                        l4876 0000                                          l4868 0000  
                                        l4980 0000                                          l4798 0000  
                                        l4886 0000                                          l4974 0607  
                                        l4990 0000                                          l4982 0000  
                                        l4896 0000                                          l4888 0581  
                                        l4976 0613                                          l4992 0000  
                                        l4984 0000                                          l4898 058E  
                                        l4994 0000                                          l4986 0000  
                                        l4996 0000                                          l4988 0000  
                                        l4998 0033                                          _ADON 00F8  
                      ?_getAdOriginalCh5Value 0046                        ?_getAdOriginalCh6Value 0046  
               startTwelveHourTimer@uiSetTime 0020                                          u2425 0133  
                                        u2435 013E                                          u1745 0672  
                                        u1755 0699                                          u1765 0685  
                                        _PEIE 005E             vHandle20sTimeron@ucMoreThanP3sCnt 00BB  
           vHandle20sTimeron@ucMoreThanP8sCnt 00BC                                          _main 0013  
                           _vHandle20sTimeron 053D                                          btemp 007E  
                     _clearTwentySecondsTimer 06DF                                          start 0011  
                          ?_vHandle20sTimeron 0070                             main@ucTimerDelay1 005F  
                           main@ucTimerDelay2 0060                             main@ucTimerDelay3 0061  
                           main@ucTimerDelay4 0062                             main@ucTimerCntP3s 005D  
                                       ??_ISR 0079                    __end_of_isPermitSampleTime 0ECE  
                         ??_vHandle20sTimeron 0048                                 main@bInitFlag 0056  
                         _sampleChannelSelect 0051                                         ?_main 0070  
                                       _CLKPR 0108                                         _T1CON 0010  
                             __end_of_adc_get 07D8                                         _PBOD7 0C47  
                 vHandle20sTimerOut@ucTimeCnt 007D                                         _TMR1H 000F  
                                       _TMR1L 000E                         setAD_ConvertFlag@flag 0020  
                          _vHandle20sTimerOut 04E4                       _vPutSampleDataIntoTable 0757  
                             __end_of_initPin 0FB2                                         _timer 00AE  
                   __end_of_vHandle20sTimeron 061C                                         pclath 000A  
             __size_of_startTwentyMinuteTimer 0014                                         status 0003  
                                       wtemp0 007E                           ?_vHandle20sTimerOut 0070  
               __size_of_startTwelveHourTimer 0014                          __end_of_clrSampeTime 0004  
                       __end_of_clearAllTimer 04D8                                  __end_of_main 0471  
                      __size_of_adc_test_init 0015                             __end_of_AD_Sample 0FEB  
                                      ??_main 0048                          ??_vHandle20sTimerOut 0021  
                        _clearPinPortAndTimer 0485                                        _ADCON0 001F  
                                      _ADCON1 009F                          __end_of_clock_config 0EDE  
                                      _ADRESH 001E                                        _ADRESL 009E  
                                      _CLKPCE 0847                                        i1l2613 0000  
                                      i1l1856 0000                                        i1l1952 071B  
                                      i1l1953 0725                                        i1l1954 072F  
                                      i1l4700 0000                                        i1l1957 074A  
                                      i1l4640 0766                                        i1l4720 0000  
                                      i1l4704 0000                                        i1l4650 0000  
                                      i1l4634 0000                                        i1l4722 0000  
                                      i1l4714 0739                                        i1l4660 0788  
                                      i1l4652 077A                                        i1l4636 0762  
                                      i1l4628 0000                                        i1l4670 0000  
                                      i1l4662 0000                                        i1l4646 0000  
                                      i1l4638 0000                                        i1l4726 0000  
                                      i1l4718 0000                                        i1l4672 079C  
                                      i1l4664 078E                                        i1l4648 0774  
                                      i1l4682 07A8                                        i1l4674 0000  
                                      i1l4658 0000                                        i1l4684 0000  
                                      i1l4676 07A2                                        i1l4686 0000  
                                      i1l4694 0000                                        i1l4698 0000  
                                      u187_25 07C9                     ??_clearTwentySecondsTimer 0020  
                                      _TMR1IE 0460                                        _TMR1IF 0060  
                      __size_of_setPB6AsInput 0003                             _getAD_ConvertFlag 0FBD  
                           _setAD_ConvertFlag 0FC1                                        _TRISA0 0428  
                                      _TRISA1 0429                                        _TRISB0 0430  
                                      _TRISA2 042A                                        _TRISB1 0431  
                                      _TRISA3 042B                                        _TRISB2 0432  
                                      _TRISB3 0433                                        _TRISB4 0434  
                                      _TRISA6 042E                                        _TRISB5 0435  
                                      _TRISA7 042F                                        _TRISB6 0436  
                                      _TRISB7 0437                                 main@ucTimer1s 00B1  
                          ?_getAD_ConvertFlag 0070                                        _Filter 0648  
                          ?_setAD_ConvertFlag 0070                   ??_isFinishedThreeHoursTimer 0020  
         __end_of_isFinishedTwentyMinuteTimer 0F0F                   _isFinishedTwentyMinuteTimer 0F03  
               __size_of_clearThreeHoursTimer 0006                                     ??_adc_get 0072  
                         ??_getAD_ConvertFlag 0020                           ??_setAD_ConvertFlag 0020  
                      _startTwentyMinuteTimer 0F38                   __size_of_clearParaFunction1 0016  
                                      _setPA0 04BF                                        _setPA1 04C8  
                                      _setPA2 0EE6                                        _setPB0 04A7  
                                      _setPB1 04AF                                        _setPA3 0625  
                                      _setPB2 04B7                                        _setPA6 0ECE  
                                      _setPB4 0535                                        _setPB6 0637  
                                      clrloop 0EDF                              Filter@filter_buf 0026  
                            Filter@filter_sum 0040                                     ??_initPin 0020  
                     main@ucTimerDelayP2sLess 0063                       main@ucTimerDelayP2sMore 0064  
                   ??_vPutSampleDataIntoTable 0077                         ?_clearPinPortAndTimer 0070  
                                      saved_w 007E                       ??_clearTwelveHoursTimer 0020  
                 ?_process_AD_Converter_Value 0070                                 _adc_test_init 0FEB  
            __size_of_startTwentySecondsTimer 0011                     __end_of_getAD_ConvertFlag 0FC1  
                   __end_of_setAD_ConvertFlag 0FC6                    __size_of_vHandle20sTimeron 00DF  
 vPutSampleDataIntoTable@ucChannelFifthLength 006B                            __size_of_adc_start 0003  
                              __pcstackCOMMON 0070               __end_of_clearTwentySecondsTimer 06E5  
                        _uiSampleChannelFifth 0190                                 _setPB6AsInput 0645  
                        _uiSampleChannelSixth 01C0    vPutSampleDataIntoTable@ucChannelZeroLength 006E  
                    ??_clearTwentyMinuteTimer 0020                vPutSampleDataIntoTable@channel 0076  
                     ??_getAdOriginalCh0Value 0048                           main@ucTimerRightP5s 0068  
                   _isFinishedThreeHoursTimer 0F1B                       ??_getAdOriginalCh2Value 0048  
                     ??_getAdOriginalCh5Value 0048                         __end_of_timer1_config 0EF9  
                     ??_getAdOriginalCh6Value 0048                                ?_adc_test_init 0020  
            __size_of_timer1_interrupt_config 0003                        main@ucTimerLessZeroP5s 0066  
                       __size_of_clrSampeTime 0002                                    __pbssBANK0 004A  
                                  __pbssBANK1 00A0                                    __pbssBANK3 0190  
                __size_ofi1_setAD_ConvertFlag 0004                                    adc_get@val 0072  
             __end_of_vPutSampleDataIntoTable 07CC                                       ?_Filter 0020  
                                  __pmaintext 0013                                main@uiCh5Value 0048  
                                  __pintentry 0004                           main@enumInteralStep 00B0  
                                  __ptext1000 0F60                                    __ptext1001 0EF9  
                                  __ptext1010 0FEB                                    __ptext1002 0F27  
                                  __ptext1011 0EC5                                    __ptext1003 0F0F  
                                  __ptext1020 04C8                                    __ptext1012 0EEF  
                                  __ptext1004 0F4C                                    __ptext1021 04BF  
                                  __ptext1013 0ED6                                    __ptext1005 0F03  
                                  __ptext1030 0706                                    __ptext1022 04B7  
                                  __ptext1014 0645                                    __ptext1006 0002  
                                  __ptext1031 07D8                                    __ptext1023 04AF  
                                  __ptext1015 0ECE                                    __ptext1007 0EC8  
                                  __ptext1032 07CC                                    __ptext1024 04A7  
                                  __ptext1016 0535                                    __ptext1008 0F38  
                                  __ptext1033 0757                                    __ptext1025 0F8B  
                                  __ptext1017 0637                                    __ptext1009 0FC6  
                                  __ptext1034 0000                                    __ptext1026 06E5  
                                  __ptext1018 0625                                    __ptext1027 06DF  
                                  __ptext1019 0EE6                                    __ptext1028 04DE  
                                  __ptext1029 04D8                                ?_setPB6AsInput 0070  
                                     ?_setPA0 0070                                       ?_setPA1 0070  
                                     ?_setPA2 0070                                       ?_setPB0 0070  
                                     ?_setPA3 0070                                       ?_setPB1 0070  
                                     ?_setPB2 0070                                       ?_setPA6 0070  
                                     ?_setPB4 0070                                       ?_setPB6 0070  
                      ??_clearPinPortAndTimer 0020                         __size_of_clock_config 0008  
                                _clrSampeTime 0002                             __end_of_adc_start 0FC9  
                        _uiTwentySecondsTimer 00A6                            _isPermitSampleTime 0EC8  
                                     Filter@i 0045                                       Filter@j 0044  
               __size_of_startThreeHoursTimer 0014                    __size_of_getAD_ConvertFlag 0004  
                  __size_of_setAD_ConvertFlag 0005                                main@ucTimerP3s 00B4  
                              main@ucTimerP5s 0067                           ?_isPermitSampleTime 0070  
                              main@uiMaxValue 00A8                                main@uiMinValue 00AA  
                                setPA0@bValue 0020                                main@uiOldValue 004A  
                                setPA1@bValue 0020                               __size_of_Filter 0097  
                                setPA2@bValue 0020                                  setPB0@bValue 0020  
                                  _uiBigTimer 00A0                                  setPA3@bValue 0020  
                                setPB1@bValue 0020                                  setPB2@bValue 0020  
                                setPA6@bValue 0020                                  setPB4@bValue 0020  
                                _clock_config 0ED6                                       _adc_get 07CC  
                                setPB6@bValue 0020                               __size_of_setPA0 0009  
                             __size_of_setPA1 0009                               __size_of_setPB0 0008  
                             __size_of_setPA2 0009                               __size_of_setPB1 0008  
                             __size_of_setPA3 0009                               __size_of_setPB2 0008  
                             __size_of_setPB4 0008                               __size_of_setPA6 0008  
                             __size_of_setPB6 000E          __end_of_isFinishedTwentySecondsTimer 0F03  
       __size_of_isFinishedTwentySecondsTimer 000A                  _isFinishedTwentySecondsTimer 0EF9  
                        ??_isPermitSampleTime 0020                  __end_of_startTwelveHourTimer 0F60  
                                   _AD_Sample 0FC9                                  __size_of_ISR 0051  
             __size_of_clearTwentyMinuteTimer 0006                                       _initPin 0F8B  
                        _bSmallTimerStartFlag 004D                               ??_adc_test_init 0021  
                     _startTwentySecondsTimer 0F27                          end_of_initialization 0F88  
                           Filter@filter_temp 003E                       ?_startTwentyMinuteTimer 0020  
                            main@ucLoaderStep 0058                               ??_setPB6AsInput 0020  
                                  ?_AD_Sample 0070                 startTwentyMinuteTimer@uiValue 0020  
                 __size_of_vHandle20sTimerOut 0051                 ?_isFinishedTwentySecondsTimer 0070  
                ??_isFinishedTwelveHoursTimer 0020                                     Filter@cir 0042  
                         _bTwentyMinStartFlag 004E                              _adc_convert_flag 00AD  
                      __size_of_clearAllTimer 0007                  __end_of_clearThreeHoursTimer 04E4  
                     main@ucTimerLargeZeroP5s 0065                __size_of_clearTwelveHoursTimer 0006  
                     _timer1_interrupt_config 0EC5                 __end_of_clearTwelveHoursTimer 04DE  
           vHandle20sTimeron@ucLessThanP3sCnt 00B9             vHandle20sTimeron@ucLessThanP8sCnt 00BA  
          __size_of_isFinishedThreeHoursTimer 000C                        _clearTwentyMinuteTimer 06E5  
              __end_of_startTwentyMinuteTimer 0F4C                              main@ucTimerX1P5s 00B5  
                            main@ucTimerX2P5s 00B6                        main@ucTimerZeroPoint3s 0069  
                      main@ucTimerZeroPoint5s 006A                              main@ucTimerDelay 005E  
                              __end_of_Filter 06DF                    __end_of_clearParaFunction1 04A7  
                         _bTwentySecStartFlag 004F           __size_of_isFinishedTwelveHoursTimer 000C  
 vPutSampleDataIntoTable@ucChannelSixthLength 006D                      vPutSampleDataIntoTable@i 0077  
                         i1_setAD_ConvertFlag 07D8                                __end_of_setPA0 04C8  
                              __end_of_setPA1 04D1                                __end_of_setPB0 04AF  
                              __end_of_setPA2 0EEF                                __end_of_setPB1 04B7  
                              __end_of_setPA3 062E                                __end_of_setPB2 04BF  
                              __end_of_setPB4 053D                                __end_of_setPA6 0ED6  
                              __end_of_setPB6 0645                     ??_startTwentySecondsTimer 0020  
                         start_initialization 0F74                                   __end_of_ISR 0757  
                        main@ucTimerLessX1P5s 00B2                          main@ucTimerLessX2P5s 00B3  
              __size_of_getAdOriginalCh0Value 000A                      ?_clearTwentySecondsTimer 0070  
              __size_of_getAdOriginalCh2Value 0009                         _uiSampleChannelSecond 01A8  
               __end_of_getAdOriginalCh0Value 0485                 __end_of_getAdOriginalCh2Value 0625  
              __size_of_getAdOriginalCh5Value 000A                __size_of_getAdOriginalCh6Value 0009  
               __end_of_getAdOriginalCh5Value 047B                 __end_of_getAdOriginalCh6Value 0637  
                        ?i1_setAD_ConvertFlag 0070                          _startTwelveHourTimer 0F4C  
           __end_of_isFinishedThreeHoursTimer 0F27                            main@enumBranchStep 00AF  
                                    ??_Filter 0022                                 _clearAllTimer 04D1  
               vHandle20sTimeron@ucTimeCntP2s 00BD                                   _ucADC4_Step 0053  
              vHandle20sTimeron@ucCompareStep 00B8                                      ??_setPA0 0020  
                                    ??_setPA1 0020                                      ??_setPA2 0020  
                                    ??_setPB0 0020                                      ??_setPA3 0020  
                                    ??_setPB1 0020                                      ??_setPB2 0020  
                                    ??_setPA6 0020                                      ??_setPB4 0020  
                                    ??_setPB6 0020                 vHandle20sTimeron@ucTimerCntN1 00C0  
                    ?_vPutSampleDataIntoTable 0074                                   ??_AD_Sample 0023  
                   ??_timer1_interrupt_config 0020                                   __pbssCOMMON 007D  
                               __pcstackBANK0 0020                ??_isFinishedTwentySecondsTimer 0020  
                                   _adc_start 0FC6               vHandle20sTimeron@ucTimerCntLess 00BE  
                            _enumMainLoopStep 0050               vHandle20sTimeron@ucTimerCntMore 00BF  
                         _uiSampleChannelZero 00C3                         ??i1_setAD_ConvertFlag 0070  
                       ?_startTwelveHourTimer 0020               __end_of_startTwentySecondsTimer 0F38  
                              ?_clearAllTimer 0070                        __size_of_timer1_config 000A  
                        _clearThreeHoursTimer 04DE                  __end_of_startThreeHoursTimer 0F74  
                                   __ptext990 061C                                     __ptext991 04E4  
                                   __ptext992 0471                                     __ptext984 0000  
                                   __ptext993 062E                                     __ptext985 053D  
                                   __ptext994 047B                                     __ptext986 0FB2  
                                   __ptext995 04D1                                     __ptext987 0491  
                                   __ptext996 0FC1                                     __ptext988 0485  
                                   __ptext997 0FBD                                     __ptext989 0FC9  
                                   __ptext998 0648                                     __ptext999 0F1B  
                         _uiTwentyMinuteTimer 00A4                                      ?_adc_get 0070  
                                   __pswtext1 0800                                     __pswtext2 080E  
                                   __pswtext3 07F4            __end_of_isFinishedTwelveHoursTimer 0F1B  
                  _isFinishedTwelveHoursTimer 0F0F                               ISR@ucTimer1sCnt 00AC  
                                    ?_initPin 0070                 __size_of_clearPinPortAndTimer 000C  
                                  ?_adc_start 0070                             interrupt_function 0004  
             __end_of_timer1_interrupt_config 0EC8                         ?_clearThreeHoursTimer 0070  
                ?_isFinishedTwentyMinuteTimer 0070                          adc_test_init@channel 0022  
         vPutSampleDataIntoTable@uiSampleData 0074                   __size_of_isPermitSampleTime 0006  
                                _uiSmallTimer 00A2                         __end_of_adc_test_init 1000  
                               _timer1_config 0EEF                  ??_process_AD_Converter_Value 0023  
                     ?_clearTwentyMinuteTimer 0070                        ??_startTwelveHourTimer 0022  
                             ??_clearAllTimer 0020                   main@ucFourthSuffix1TimerP3s 0057  
               ??_isFinishedTwentyMinuteTimer 0020                    __end_of_vHandle20sTimerOut 0535  
                       __end_of_setPB6AsInput 0648                              __size_of_adc_get 000C  
              vHandle20sTimeron@ucTimerCntP5s 00C1           __size_of_process_AD_Converter_Value 000B  
               vHandle20sTimeron@waitLoopStep 00C2                            _clearParaFunction1 0491  
                            __size_of_initPin 0027                                Filter@tmpValue 0020  
                              ?_timer1_config 0070                __end_of_clearTwentyMinuteTimer 06EB  
                                 ??_adc_start 0020  vPutSampleDataIntoTable@ucChannelSecondLength 006C  
                        _startThreeHoursTimer 0F60                           ?_clearParaFunction1 0070  
                       _clearTwelveHoursTimer 04D8                                 __size_of_main 045E  
                                    clear_ram 0EDE                        ??_clearThreeHoursTimer 0020  
            __size_of_clearTwentySecondsTimer 0006                          ??_clearParaFunction1 0021  
                               ?_clrSampeTime 0070       vHandle20sTimerOut@ucTimerOnBehaviorStep 00B7  
                                 _sampleTimes 0052          __size_of_isFinishedTwentyMinuteTimer 000C  
                       ?_startThreeHoursTimer 0020              __size_of_vPutSampleDataIntoTable 0075  
                                    intlevel1 0000                         _getAdOriginalCh0Value 047B  
                       _getAdOriginalCh2Value 061C                         _getAdOriginalCh5Value 0471  
                       _getAdOriginalCh6Value 062E                    ?_isFinishedThreeHoursTimer 0070  
                vHandle20sTimerOut@bClearStep 0021                             main@ucLoaderStep1 0059  
                           main@ucLoaderStep2 005A                             main@ucLoaderStep3 005B  
                           main@ucLoaderStep4 005C                                 ?_clock_config 0070  
                    ?_startTwentySecondsTimer 0070                 startThreeHoursTimer@uiSetTime 0020  
                     i1setAD_ConvertFlag@flag 0070                                ??_clrSampeTime 0020  
                 ?_isFinishedTwelveHoursTimer 0070                            _bBigTimerStartFlag 004C  
                             ??_timer1_config 0020                             main@bCheckTweHour 0055  
                 __end_ofi1_setAD_ConvertFlag 07DC            __end_of_process_AD_Converter_Value 0FBD  
                  _process_AD_Converter_Value 0FB2                        ?_clearTwelveHoursTimer 0070  
                    ??_startTwentyMinuteTimer 0022                              adc_test_init@ref 0020  
                __end_of_clearPinPortAndTimer 0491  
