

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Thu Oct 31 06:31:11 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,delta=2
    15                           	psect	text835,local,class=CODE,delta=2
    16                           	psect	text836,local,class=CODE,delta=2
    17                           	psect	text838,local,class=CODE,delta=2
    18                           	psect	text839,local,class=CODE,delta=2
    19                           	psect	text844,local,class=CODE,delta=2
    20                           	psect	text845,local,class=CODE,delta=2
    21                           	psect	text846,local,class=CODE,delta=2
    22                           	psect	text847,local,class=CODE,delta=2
    23                           	psect	text848,local,class=CODE,delta=2
    24                           	psect	text849,local,class=CODE,delta=2
    25                           	psect	text850,local,class=CODE,delta=2
    26                           	psect	text851,local,class=CODE,delta=2
    27                           	psect	text852,local,class=CODE,delta=2
    28                           	psect	text853,local,class=CODE,delta=2
    29                           	psect	text854,local,class=CODE,delta=2
    30                           	psect	text857,local,class=CODE,delta=2
    31                           	psect	text858,local,class=CODE,delta=2
    32                           	psect	text859,local,class=CODE,delta=2
    33                           	psect	text860,local,class=CODE,delta=2
    34                           	psect	text861,local,class=CODE,delta=2
    35                           	psect	text862,local,class=CODE,delta=2
    36                           	psect	text863,local,class=CODE,delta=2
    37                           	psect	text871,local,class=CODE,delta=2
    38                           	psect	text872,local,class=CODE,delta=2
    39                           	psect	text873,local,class=CODE,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	text877,local,class=CODE,delta=2
    42                           	psect	pa_nodes,global,class=CODE,delta=2
    43                           	dabs	1,0x7E,2
    44  000A                     	;#
    45                           
    46                           	psect	config
    47  2000  0FFF               	dw	4095	;#
    48  2001  3FDE               	dw	16350	;#
    49  2002  3FF8               	dw	16376	;#
    50                           
    51                           	psect	idataBANK0
    52  0000                     __pidataBANK0:	
    53  001F                     _ADCON0	set	31
    54  001E                     _ADRESH	set	30
    55  0017                     _CCP1CON	set	23
    56  0015                     _CCPR1L	set	21
    57  0010                     _T1CON	set	16
    58  0012                     _T2CON	set	18
    59  000F                     _TMR1H	set	15
    60  000E                     _TMR1L	set	14
    61  006A                     _ADIF	set	106
    62  00F8                     _ADON	set	248
    63  005F                     _GIE	set	95
    64  00F9                     _GO	set	249
    65  0032                     _PB2	set	50
    66  0033                     _PB3	set	51
    67  0034                     _PB4	set	52
    68  0035                     _PB5	set	53
    69  005E                     _PEIE	set	94
    70  0060                     _TMR1IF	set	96
    71  009F                     _ADCON1	set	159
    72  009E                     _ADRESL	set	158
    73  0092                     _PR2	set	146
    74  046A                     _ADIE	set	1130
    75  0460                     _TMR1IE	set	1120
    76  0430                     _TRISB0	set	1072
    77  0431                     _TRISB1	set	1073
    78  0432                     _TRISB2	set	1074
    79  0433                     _TRISB3	set	1075
    80  0434                     _TRISB4	set	1076
    81  0435                     _TRISB5	set	1077
    82  0108                     _CLKPR	set	264
    83  0847                     _CLKPCE	set	2119
    84  0C42                     _PBOD2	set	3138
    85                           
    86                           	psect	cinit
    87  03FC                     start_initialization:	
    88  03FC  3054               	movlw	low __pbssBANK0
    89                           
    90                           ; Clear objects allocated to COMMON
    91  03FD  01FD               	clrf	__pbssCOMMON& (0+127)
    92                           
    93                           ; Clear objects allocated to BANK0
    94  03FE  1383               	bcf	3,7	;select IRP bank0
    95  03FF  0084               	movwf	4
    96  0400  306F               	movlw	low (__pbssBANK0+27)
    97  0401  118A  2484  118A   	fcall	clear_ram
    98                           
    99                           ; Clear objects allocated to BANK1
   100  0404  30A0               	movlw	low __pbssBANK1
   101  0405  0084               	movwf	4
   102  0406  30EA               	movlw	low (__pbssBANK1+74)
   103  0407  118A  2484         	fcall	clear_ram
   104                           
   105                           ;initializer for _sampleChannelSelect
   106  0409  300C               	movlw	12
   107  040A  00EF               	movwf	__pdataBANK0& (0+127)
   108  040B                     end_of_initialization:	
   109                           ;End of C runtime variable initialization code
   110                           
   111  040B  0183               	clrf	3
   112  040C  118A  2813         	ljmp	_main	;jump to C main() function
   113                           
   114                           	psect	bssCOMMON
   115  007D                     __pbssCOMMON:	
   116  007D                     vPutSampleDataIntoTable@ucChannelFirstLength:	
   117  007D                     	ds	1
   118                           
   119                           	psect	bssBANK0
   120  0054                     __pbssBANK0:	
   121  0054                     _uiBigTimer:	
   122  0054                     	ds	2
   123  0056                     _uiOneHourTimer:	
   124  0056                     	ds	2
   125  0058                     _uiSmallTimer:	
   126  0058                     	ds	2
   127  005A                     _uiTwentyMinTimer:	
   128  005A                     	ds	2
   129  005C                     main@uiTimerOneP5s:	
   130  005C                     	ds	2
   131  005E                     main@uiTimerTwoP5s:	
   132  005E                     	ds	2
   133  0060                     ISR@ucTimer1sCnt:	
   134  0060                     	ds	1
   135  0061                     _adc_convert_flag:	
   136  0061                     	ds	1
   137  0062                     _bBigTimerStartFlag:	
   138  0062                     	ds	1
   139  0063                     _bOneHourTimerStartFlag:	
   140  0063                     	ds	1
   141  0064                     _bSmallTimerStartFlag:	
   142  0064                     	ds	1
   143  0065                     _bTwentyMinStartFlag:	
   144  0065                     	ds	1
   145  0066                     _sampleTimes:	
   146  0066                     	ds	1
   147  0067                     _timer:	
   148  0067                     	ds	1
   149  0068                     main@cTimerP5s_797:	
   150  0068                     	ds	1
   151  0069                     main@cTimerP5s_801:	
   152  0069                     	ds	1
   153  006A                     main@ucStep:	
   154  006A                     	ds	1
   155  006B                     main@ucTimerP3s:	
   156  006B                     	ds	1
   157  006C                     main@ucTimerP5s:	
   158  006C                     	ds	1
   159  006D                     vPutSampleDataIntoTable@ucChannelFourteenthLength:	
   160  006D                     	ds	1
   161  006E                     vPutSampleDataIntoTable@ucChannelFourthLength:	
   162  006E                     	ds	1
   163                           
   164                           	psect	dataBANK0
   165  006F                     __pdataBANK0:	
   166  006F                     _sampleChannelSelect:	
   167  006F                     	ds	1
   168                           
   169                           	psect	bssBANK1
   170  00A0                     __pbssBANK1:	
   171  00A0                     _uiTwentySecondsTimer:	
   172  00A0                     	ds	2
   173  00A2                     _uiSampleChannelFirst:	
   174  00A2                     	ds	24
   175  00BA                     _uiSampleChannelFourteenth:	
   176  00BA                     	ds	24
   177  00D2                     _uiSampleChannelFourth:	
   178  00D2                     	ds	24
   179                           
   180                           	psect	clrtext
   181  0484                     clear_ram:	
   182                           ;	Called with FSR containing the base address, and
   183                           ;	W with the last address+1
   184                           
   185  0484  0064               	clrwdt	;clear the watchdog before getting into this loop
   186  0485                     clrloop:	
   187  0485  0180               	clrf	0	;clear RAM location pointed to by FSR
   188  0486  0A84               	incf	4,f	;increment pointer
   189  0487  0604               	xorwf	4,w	;XOR with final address
   190  0488  1903               	btfsc	3,2	;have we reached the end yet?
   191  0489  3400               	retlw	0	;all done for this memory range, return
   192  048A  0604               	xorwf	4,w	;XOR again to restore value
   193  048B  2C85               	goto	clrloop	;do the next byte
   194                           
   195                           	psect	cstackCOMMON
   196  0070                     __pcstackCOMMON:	
   197  0070                     ?_clearTwelveHoursTimer:	
   198  0070                     ?_clearThreeHoursTimer:	
   199                           ; 0 bytes @ 0x0
   200                           
   201  0070                     ?_clock_config:	
   202                           ; 0 bytes @ 0x0
   203                           
   204  0070                     ?_timer1_config:	
   205                           ; 0 bytes @ 0x0
   206                           
   207  0070                     ?_timer1_interrupt_config:	
   208                           ; 0 bytes @ 0x0
   209                           
   210  0070                     ?_adc_start:	
   211                           ; 0 bytes @ 0x0
   212                           
   213  0070                     ?_process_AD_Converter_Value:	
   214                           ; 0 bytes @ 0x0
   215                           
   216  0070                     ?_clrSampeTime:	
   217                           ; 0 bytes @ 0x0
   218                           
   219  0070                     ?_clearTwentyMinTimer:	
   220                           ; 0 bytes @ 0x0
   221                           
   222  0070                     ?_AD_Sample:	
   223                           ; 0 bytes @ 0x0
   224                           
   225  0070                     ?_initPB3:	
   226                           ; 0 bytes @ 0x0
   227                           
   228  0070                     ?_setPB3:	
   229                           ; 0 bytes @ 0x0
   230                           
   231  0070                     ?_initPB4:	
   232                           ; 0 bytes @ 0x0
   233                           
   234  0070                     ?_setPB4:	
   235                           ; 0 bytes @ 0x0
   236                           
   237  0070                     ?_initPB5:	
   238                           ; 0 bytes @ 0x0
   239                           
   240  0070                     ?_setPB5:	
   241                           ; 0 bytes @ 0x0
   242                           
   243  0070                     ?_initPB2_AsHighResistence:	
   244                           ; 0 bytes @ 0x0
   245                           
   246  0070                     ?_pwm_start:	
   247                           ; 0 bytes @ 0x0
   248                           
   249  0070                     ?_pwm_config:	
   250                           ; 0 bytes @ 0x0
   251                           
   252  0070                     ?_initPin:	
   253                           ; 0 bytes @ 0x0
   254                           
   255  0070                     ?_setPinInitVaule:	
   256                           ; 0 bytes @ 0x0
   257                           
   258  0070                     ?_selectAdChannel:	
   259                           ; 0 bytes @ 0x0
   260                           
   261  0070                     ?_reset:	
   262                           ; 0 bytes @ 0x0
   263                           
   264  0070                     ?_setAD_ConvertFlag:	
   265                           ; 0 bytes @ 0x0
   266                           
   267  0070                     ?_ISR:	
   268                           ; 0 bytes @ 0x0
   269                           
   270  0070                     ?i1_setAD_ConvertFlag:	
   271                           ; 0 bytes @ 0x0
   272                           
   273  0070                     ??i1_setAD_ConvertFlag:	
   274                           ; 0 bytes @ 0x0
   275                           
   276  0070                     ?_isPermitSampleTime:	
   277                           ; 0 bytes @ 0x0
   278                           
   279  0070                     ?_isFinishedTwentyMinTimer:	
   280                           ; 1 bytes @ 0x0
   281                           
   282  0070                     ?_isFinishedTwelveHoursTimer:	
   283                           ; 1 bytes @ 0x0
   284                           
   285  0070                     ?_isFinishedThreeHoursTimer:	
   286                           ; 1 bytes @ 0x0
   287                           
   288  0070                     ?_isFinishedOneHoursTimer:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0070                     ?_calPulseWidth:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0070                     ?_getAD_ConvertFlag:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0070                     ?_adc_get:	
   298                           ; 1 bytes @ 0x0
   299                           
   300  0070                     ?_main:	
   301                           ; 2 bytes @ 0x0
   302                           
   303  0070                     i1setAD_ConvertFlag@flag:	
   304                           ; 2 bytes @ 0x0
   305                           
   306                           
   307                           ; 1 bytes @ 0x0
   308  0070                     	ds	2
   309  0072                     ??_adc_get:	
   310  0072                     adc_get@val:	
   311                           ; 0 bytes @ 0x2
   312                           
   313                           
   314                           ; 2 bytes @ 0x2
   315  0072                     	ds	2
   316  0074                     ?_vPutSampleDataIntoTable:	
   317  0074                     vPutSampleDataIntoTable@uiSampleData:	
   318                           ; 0 bytes @ 0x4
   319                           
   320                           
   321                           ; 2 bytes @ 0x4
   322  0074                     	ds	2
   323  0076                     vPutSampleDataIntoTable@channel:	
   324                           
   325                           ; 1 bytes @ 0x6
   326  0076                     	ds	1
   327  0077                     ??_vPutSampleDataIntoTable:	
   328  0077                     vPutSampleDataIntoTable@i:	
   329                           ; 0 bytes @ 0x7
   330                           
   331                           
   332                           ; 2 bytes @ 0x7
   333  0077                     	ds	2
   334  0079                     ??_ISR:	
   335                           
   336                           ; 0 bytes @ 0x9
   337  0079                     	ds	4
   338                           
   339                           	psect	cstackBANK0
   340  0020                     __pcstackBANK0:	
   341  0020                     ??_clearTwelveHoursTimer:	
   342  0020                     ??_clearThreeHoursTimer:	
   343                           ; 0 bytes @ 0x0
   344                           
   345  0020                     ??_clock_config:	
   346                           ; 0 bytes @ 0x0
   347                           
   348  0020                     ??_timer1_config:	
   349                           ; 0 bytes @ 0x0
   350                           
   351  0020                     ??_timer1_interrupt_config:	
   352                           ; 0 bytes @ 0x0
   353                           
   354  0020                     ?_adc_test_init:	
   355                           ; 0 bytes @ 0x0
   356                           
   357  0020                     ??_adc_start:	
   358                           ; 0 bytes @ 0x0
   359                           
   360  0020                     ?_startTwentyMinTimer:	
   361                           ; 0 bytes @ 0x0
   362                           
   363  0020                     ??_isPermitSampleTime:	
   364                           ; 0 bytes @ 0x0
   365                           
   366  0020                     ??_clrSampeTime:	
   367                           ; 0 bytes @ 0x0
   368                           
   369  0020                     ??_isFinishedTwentyMinTimer:	
   370                           ; 0 bytes @ 0x0
   371                           
   372  0020                     ??_clearTwentyMinTimer:	
   373                           ; 0 bytes @ 0x0
   374                           
   375  0020                     ?_startTwelveHourTimer:	
   376                           ; 0 bytes @ 0x0
   377                           
   378  0020                     ??_isFinishedTwelveHoursTimer:	
   379                           ; 0 bytes @ 0x0
   380                           
   381  0020                     ?_startThreeHoursTimer:	
   382                           ; 0 bytes @ 0x0
   383                           
   384  0020                     ??_isFinishedThreeHoursTimer:	
   385                           ; 0 bytes @ 0x0
   386                           
   387  0020                     ?_startOneHoursTimer:	
   388                           ; 0 bytes @ 0x0
   389                           
   390  0020                     ??_isFinishedOneHoursTimer:	
   391                           ; 0 bytes @ 0x0
   392                           
   393  0020                     ??_AD_Sample:	
   394                           ; 0 bytes @ 0x0
   395                           
   396  0020                     ??_initPB3:	
   397                           ; 0 bytes @ 0x0
   398                           
   399  0020                     ??_setPB3:	
   400                           ; 0 bytes @ 0x0
   401                           
   402  0020                     ??_initPB4:	
   403                           ; 0 bytes @ 0x0
   404                           
   405  0020                     ??_setPB4:	
   406                           ; 0 bytes @ 0x0
   407                           
   408  0020                     ??_initPB5:	
   409                           ; 0 bytes @ 0x0
   410                           
   411  0020                     ??_setPB5:	
   412                           ; 0 bytes @ 0x0
   413                           
   414  0020                     ??_initPB2_AsHighResistence:	
   415                           ; 0 bytes @ 0x0
   416                           
   417  0020                     ??_pwm_start:	
   418                           ; 0 bytes @ 0x0
   419                           
   420  0020                     ??_pwm_config:	
   421                           ; 0 bytes @ 0x0
   422                           
   423  0020                     ??_selectAdChannel:	
   424                           ; 0 bytes @ 0x0
   425                           
   426  0020                     ??_reset:	
   427                           ; 0 bytes @ 0x0
   428                           
   429  0020                     ??_getAD_ConvertFlag:	
   430                           ; 0 bytes @ 0x0
   431                           
   432  0020                     ??_setAD_ConvertFlag:	
   433                           ; 0 bytes @ 0x0
   434                           
   435  0020                     ?_Filter:	
   436                           ; 0 bytes @ 0x0
   437                           
   438  0020                     initPB3@bValue:	
   439                           ; 2 bytes @ 0x0
   440                           
   441  0020                     setPB3@bValue:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0020                     initPB4@bValue:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0020                     setPB4@bValue:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0020                     initPB5@bValue:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0020                     setPB5@bValue:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0020                     pwm_config@state:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0020                     setAD_ConvertFlag@flag:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  0020                     adc_test_init@ref:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0020                     startTwelveHourTimer@uiSetTime:	
   466                           ; 1 bytes @ 0x0
   467                           
   468  0020                     startThreeHoursTimer@uiSetTime:	
   469                           ; 2 bytes @ 0x0
   470                           
   471  0020                     startOneHoursTimer@uiSetTime:	
   472                           ; 2 bytes @ 0x0
   473                           
   474  0020                     startTwentyMinTimer@uiSetValue:	
   475                           ; 2 bytes @ 0x0
   476                           
   477                           
   478                           ; 2 bytes @ 0x0
   479  0020                     	ds	1
   480  0021                     ??_adc_test_init:	
   481  0021                     ??_initPin:	
   482                           ; 0 bytes @ 0x1
   483                           
   484  0021                     ??_setPinInitVaule:	
   485                           ; 0 bytes @ 0x1
   486                           
   487  0021                     pwm_start@ucPulseWidth:	
   488                           ; 0 bytes @ 0x1
   489                           
   490                           
   491                           ; 1 bytes @ 0x1
   492  0021                     	ds	1
   493  0022                     ??_startTwentyMinTimer:	
   494  0022                     ??_startTwelveHourTimer:	
   495                           ; 0 bytes @ 0x2
   496                           
   497  0022                     ??_startThreeHoursTimer:	
   498                           ; 0 bytes @ 0x2
   499                           
   500  0022                     ??_startOneHoursTimer:	
   501                           ; 0 bytes @ 0x2
   502                           
   503  0022                     ??_Filter:	
   504                           ; 0 bytes @ 0x2
   505                           
   506  0022                     pwm_start@ucGeHighestSixValue:	
   507                           ; 0 bytes @ 0x2
   508                           
   509  0022                     adc_test_init@channel:	
   510                           ; 1 bytes @ 0x2
   511                           
   512                           
   513                           ; 1 bytes @ 0x2
   514  0022                     	ds	1
   515  0023                     ??_process_AD_Converter_Value:	
   516  0023                     pwm_start@ucCCP1CON_Value:	
   517                           ; 0 bytes @ 0x3
   518                           
   519                           
   520                           ; 1 bytes @ 0x3
   521  0023                     	ds	1
   522  0024                     pwm_start@ucGetLowestTwoValue:	
   523                           
   524                           ; 1 bytes @ 0x4
   525  0024                     	ds	1
   526  0025                     pwm_start@ucConvertRealPulseWidth:	
   527                           
   528                           ; 1 bytes @ 0x5
   529  0025                     	ds	1
   530  0026                     Filter@filter_buf:	
   531                           
   532                           ; 24 bytes @ 0x6
   533  0026                     	ds	24
   534  003E                     Filter@filter_temp:	
   535                           
   536                           ; 2 bytes @ 0x1E
   537  003E                     	ds	2
   538  0040                     Filter@filter_sum:	
   539                           
   540                           ; 2 bytes @ 0x20
   541  0040                     	ds	2
   542  0042                     Filter@tmpValue:	
   543                           
   544                           ; 1 bytes @ 0x22
   545  0042                     	ds	1
   546  0043                     Filter@cir:	
   547                           
   548                           ; 2 bytes @ 0x23
   549  0043                     	ds	2
   550  0045                     Filter@j:	
   551                           
   552                           ; 1 bytes @ 0x25
   553  0045                     	ds	1
   554  0046                     Filter@i:	
   555                           
   556                           ; 1 bytes @ 0x26
   557  0046                     	ds	1
   558  0047                     ?_getAdOriginalCh12Value:	
   559  0047                     ?_getAdOriginalCh13Value:	
   560                           ; 2 bytes @ 0x27
   561                           
   562                           
   563                           ; 2 bytes @ 0x27
   564  0047                     	ds	2
   565  0049                     ??_getAdOriginalCh12Value:	
   566  0049                     ??_getAdOriginalCh13Value:	
   567                           ; 0 bytes @ 0x29
   568                           
   569  0049                     ??_calPulseWidth:	
   570                           ; 0 bytes @ 0x29
   571                           
   572  0049                     calPulseWidth@uiGapValue:	
   573                           ; 0 bytes @ 0x29
   574                           
   575                           
   576                           ; 2 bytes @ 0x29
   577  0049                     	ds	2
   578  004B                     calPulseWidth@ucThreeTimesValue:	
   579                           
   580                           ; 1 bytes @ 0x2B
   581  004B                     	ds	1
   582  004C                     calPulseWidth@ucHalfValue:	
   583                           
   584                           ; 1 bytes @ 0x2C
   585  004C                     	ds	1
   586  004D                     calPulseWidth@ucPulseWidth:	
   587                           
   588                           ; 1 bytes @ 0x2D
   589  004D                     	ds	1
   590  004E                     calPulseWidth@ucGapValue:	
   591                           
   592                           ; 1 bytes @ 0x2E
   593  004E                     	ds	1
   594  004F                     calPulseWidth@uiChannel2Value:	
   595                           
   596                           ; 2 bytes @ 0x2F
   597  004F                     	ds	2
   598  0051                     ??_main:	
   599  0051                     main@ucPulseWidth:	
   600                           ; 0 bytes @ 0x31
   601                           
   602                           
   603                           ; 1 bytes @ 0x31
   604  0051                     	ds	1
   605  0052                     main@uiCh13Value:	
   606                           
   607                           ; 2 bytes @ 0x32
   608  0052                     	ds	2
   609                           
   610                           	psect	maintext
   611  0013                     __pmaintext:	
   612 ;;Data sizes: Strings 0, constant 0, data 1, bss 102, persistent 0 stack 0
   613 ;;Auto spaces:   Size  Autos    Used
   614 ;; COMMON          14     13      14
   615 ;; BANK0           80     52      80
   616 ;; BANK1           80      0      74
   617 ;; BANK3           96      0       0
   618 ;; BANK2           96      0       0
   619 ;;
   620 ;; Pointer list with targets:
   621 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   622 ;;
   623 ;; ?_getAdOriginalCh13Value	unsigned int  size(1) Largest target is 0
   624 ;;
   625 ;; ?_getAdOriginalCh12Value	unsigned int  size(1) Largest target is 0
   626 ;;
   627 ;; ?_Filter	unsigned int  size(1) Largest target is 0
   628 ;;
   629 ;; Filter@tmpValue	PTR int  size(1) Largest target is 24
   630 ;;		 -> uiSampleChannelFourteenth(BANK1[24]), uiSampleChannelFourth(BANK1[24]), uiSampleChannelFirst(BANK1[24]), 
   631 ;;
   632 ;;
   633 ;; Critical Paths under _main in COMMON
   634 ;;
   635 ;;   None.
   636 ;;
   637 ;; Critical Paths under _ISR in COMMON
   638 ;;
   639 ;;   _ISR->_vPutSampleDataIntoTable
   640 ;;   _vPutSampleDataIntoTable->_adc_get
   641 ;;
   642 ;; Critical Paths under _main in BANK0
   643 ;;
   644 ;;   _main->_calPulseWidth
   645 ;;   _calPulseWidth->_getAdOriginalCh12Value
   646 ;;   _getAdOriginalCh13Value->_Filter
   647 ;;   _process_AD_Converter_Value->_adc_test_init
   648 ;;   _getAdOriginalCh12Value->_Filter
   649 ;;   _setPinInitVaule->_setPB3
   650 ;;   _setPinInitVaule->_setPB4
   651 ;;   _setPinInitVaule->_setPB5
   652 ;;   _initPin->_initPB3
   653 ;;   _initPin->_initPB4
   654 ;;   _initPin->_initPB5
   655 ;;
   656 ;; Critical Paths under _ISR in BANK0
   657 ;;
   658 ;;   None.
   659 ;;
   660 ;; Critical Paths under _main in BANK1
   661 ;;
   662 ;;   None.
   663 ;;
   664 ;; Critical Paths under _ISR in BANK1
   665 ;;
   666 ;;   None.
   667 ;;
   668 ;; Critical Paths under _main in BANK3
   669 ;;
   670 ;;   None.
   671 ;;
   672 ;; Critical Paths under _ISR in BANK3
   673 ;;
   674 ;;   None.
   675 ;;
   676 ;; Critical Paths under _main in BANK2
   677 ;;
   678 ;;   None.
   679 ;;
   680 ;; Critical Paths under _ISR in BANK2
   681 ;;
   682 ;;   None.
   683 ;;
   684 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   685 ;;
   686 ;;
   687 ;;Call Graph Tables:
   688 ;;
   689 ;; ---------------------------------------------------------------------------------
   690 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   691 ;; ---------------------------------------------------------------------------------
   692 ;; (0) _main                                                 3     3      0    2080
   693 ;;                                             49 BANK0      3     3      0
   694 ;;                            _initPin
   695 ;;                    _setPinInitVaule
   696 ;;                    _selectAdChannel
   697 ;;                       _clock_config
   698 ;;                      _timer1_config
   699 ;;            _timer1_interrupt_config
   700 ;;                      _adc_test_init
   701 ;;                          _adc_start
   702 ;;                _startTwentyMinTimer
   703 ;;         _process_AD_Converter_Value
   704 ;;                 _isPermitSampleTime
   705 ;;                       _clrSampeTime
   706 ;;           _isFinishedTwentyMinTimer
   707 ;;             _getAdOriginalCh13Value
   708 ;;                      _calPulseWidth
   709 ;;                          _pwm_start
   710 ;;                             _setPB3
   711 ;;                             _setPB4
   712 ;;                             _setPB5
   713 ;;                _clearTwentyMinTimer
   714 ;;               _startTwelveHourTimer
   715 ;;         _isFinishedTwelveHoursTimer
   716 ;;              _clearTwelveHoursTimer
   717 ;;               _startThreeHoursTimer
   718 ;;          _isFinishedThreeHoursTimer
   719 ;;               _clearThreeHoursTimer
   720 ;;                 _startOneHoursTimer
   721 ;;            _isFinishedOneHoursTimer
   722 ;;                              _reset
   723 ;;                         _pwm_config
   724 ;; ---------------------------------------------------------------------------------
   725 ;; (1) _calPulseWidth                                        8     8      0     832
   726 ;;                                             41 BANK0      8     8      0
   727 ;;             _getAdOriginalCh12Value
   728 ;; ---------------------------------------------------------------------------------
   729 ;; (1) _getAdOriginalCh13Value                               2     0      2     620
   730 ;;                                             39 BANK0      2     0      2
   731 ;;                             _Filter
   732 ;; ---------------------------------------------------------------------------------
   733 ;; (1) _process_AD_Converter_Value                           0     0      0      66
   734 ;;                  _getAD_ConvertFlag
   735 ;;                  _setAD_ConvertFlag
   736 ;;                          _AD_Sample
   737 ;;                      _adc_test_init
   738 ;;                          _adc_start
   739 ;; ---------------------------------------------------------------------------------
   740 ;; (2) _getAdOriginalCh12Value                               2     0      2     620
   741 ;;                                             39 BANK0      2     0      2
   742 ;;                             _Filter
   743 ;; ---------------------------------------------------------------------------------
   744 ;; (1) _setPinInitVaule                                      0     0      0      66
   745 ;;                             _setPB3
   746 ;;                             _setPB4
   747 ;;                             _setPB5
   748 ;; ---------------------------------------------------------------------------------
   749 ;; (1) _initPin                                              0     0      0      66
   750 ;;           _initPB2_AsHighResistence
   751 ;;                            _initPB3
   752 ;;                            _initPB4
   753 ;;                            _initPB5
   754 ;; ---------------------------------------------------------------------------------
   755 ;; (2) _AD_Sample                                            0     0      0       0
   756 ;; ---------------------------------------------------------------------------------
   757 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   758 ;;                                              0 BANK0      1     1      0
   759 ;; ---------------------------------------------------------------------------------
   760 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   761 ;; ---------------------------------------------------------------------------------
   762 ;; (3) _Filter                                              39    37      2     620
   763 ;;                                              0 BANK0     39    37      2
   764 ;; ---------------------------------------------------------------------------------
   765 ;; (1) _isFinishedOneHoursTimer                              0     0      0       0
   766 ;; ---------------------------------------------------------------------------------
   767 ;; (1) _startOneHoursTimer                                   2     0      2      22
   768 ;;                                              0 BANK0      2     0      2
   769 ;; ---------------------------------------------------------------------------------
   770 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   771 ;; ---------------------------------------------------------------------------------
   772 ;; (1) _startThreeHoursTimer                                 2     0      2      22
   773 ;;                                              0 BANK0      2     0      2
   774 ;; ---------------------------------------------------------------------------------
   775 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   776 ;; ---------------------------------------------------------------------------------
   777 ;; (1) _startTwelveHourTimer                                 2     0      2      22
   778 ;;                                              0 BANK0      2     0      2
   779 ;; ---------------------------------------------------------------------------------
   780 ;; (1) _clearTwentyMinTimer                                  0     0      0       0
   781 ;; ---------------------------------------------------------------------------------
   782 ;; (1) _isFinishedTwentyMinTimer                             0     0      0       0
   783 ;; ---------------------------------------------------------------------------------
   784 ;; (1) _clrSampeTime                                         0     0      0       0
   785 ;; ---------------------------------------------------------------------------------
   786 ;; (1) _isPermitSampleTime                                   0     0      0       0
   787 ;; ---------------------------------------------------------------------------------
   788 ;; (1) _startTwentyMinTimer                                  2     0      2      22
   789 ;;                                              0 BANK0      2     0      2
   790 ;; ---------------------------------------------------------------------------------
   791 ;; (2) _adc_start                                            0     0      0       0
   792 ;; ---------------------------------------------------------------------------------
   793 ;; (2) _adc_test_init                                        3     2      1      44
   794 ;;                                              0 BANK0      3     2      1
   795 ;; ---------------------------------------------------------------------------------
   796 ;; (1) _timer1_interrupt_config                              0     0      0       0
   797 ;; ---------------------------------------------------------------------------------
   798 ;; (1) _timer1_config                                        0     0      0       0
   799 ;; ---------------------------------------------------------------------------------
   800 ;; (1) _clock_config                                         0     0      0       0
   801 ;; ---------------------------------------------------------------------------------
   802 ;; (1) _reset                                                0     0      0       0
   803 ;; ---------------------------------------------------------------------------------
   804 ;; (1) _selectAdChannel                                      0     0      0       0
   805 ;; ---------------------------------------------------------------------------------
   806 ;; (1) _pwm_config                                           1     1      0      22
   807 ;;                                              0 BANK0      1     1      0
   808 ;; ---------------------------------------------------------------------------------
   809 ;; (1) _pwm_start                                            6     6      0     141
   810 ;;                                              0 BANK0      6     6      0
   811 ;; ---------------------------------------------------------------------------------
   812 ;; (2) _initPB2_AsHighResistence                             0     0      0       0
   813 ;; ---------------------------------------------------------------------------------
   814 ;; (1) _setPB5                                               1     1      0      22
   815 ;;                                              0 BANK0      1     1      0
   816 ;; ---------------------------------------------------------------------------------
   817 ;; (2) _initPB5                                              1     1      0      22
   818 ;;                                              0 BANK0      1     1      0
   819 ;; ---------------------------------------------------------------------------------
   820 ;; (1) _setPB4                                               1     1      0      22
   821 ;;                                              0 BANK0      1     1      0
   822 ;; ---------------------------------------------------------------------------------
   823 ;; (2) _initPB4                                              1     1      0      22
   824 ;;                                              0 BANK0      1     1      0
   825 ;; ---------------------------------------------------------------------------------
   826 ;; (1) _setPB3                                               1     1      0      22
   827 ;;                                              0 BANK0      1     1      0
   828 ;; ---------------------------------------------------------------------------------
   829 ;; (2) _initPB3                                              1     1      0      22
   830 ;;                                              0 BANK0      1     1      0
   831 ;; ---------------------------------------------------------------------------------
   832 ;; (1) _clearThreeHoursTimer                                 0     0      0       0
   833 ;; ---------------------------------------------------------------------------------
   834 ;; (1) _clearTwelveHoursTimer                                0     0      0       0
   835 ;; ---------------------------------------------------------------------------------
   836 ;; Estimated maximum stack depth 3
   837 ;; ---------------------------------------------------------------------------------
   838 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   839 ;; ---------------------------------------------------------------------------------
   840 ;; (4) _ISR                                                  4     4      0     407
   841 ;;                                              9 COMMON     4     4      0
   842 ;;                i1_setAD_ConvertFlag
   843 ;;                            _adc_get
   844 ;;            _vPutSampleDataIntoTable
   845 ;; ---------------------------------------------------------------------------------
   846 ;; (5) i1_setAD_ConvertFlag                                  1     1      0      73
   847 ;;                                              0 COMMON     1     1      0
   848 ;; ---------------------------------------------------------------------------------
   849 ;; (5) _adc_get                                              4     2      2      24
   850 ;;                                              0 COMMON     4     2      2
   851 ;; ---------------------------------------------------------------------------------
   852 ;; (5) _vPutSampleDataIntoTable                              5     2      3     310
   853 ;;                                              4 COMMON     5     2      3
   854 ;;                            _adc_get (ARG)
   855 ;; ---------------------------------------------------------------------------------
   856 ;; Estimated maximum stack depth 5
   857 ;; ---------------------------------------------------------------------------------
   858 ;; Call Graph Graphs:
   859 ;; _main (ROOT)
   860 ;;   _initPin
   861 ;;     _initPB2_AsHighResistence
   862 ;;     _initPB3
   863 ;;     _initPB4
   864 ;;     _initPB5
   865 ;;   _setPinInitVaule
   866 ;;     _setPB3
   867 ;;     _setPB4
   868 ;;     _setPB5
   869 ;;   _selectAdChannel
   870 ;;   _clock_config
   871 ;;   _timer1_config
   872 ;;   _timer1_interrupt_config
   873 ;;   _adc_test_init
   874 ;;   _adc_start
   875 ;;   _startTwentyMinTimer
   876 ;;   _process_AD_Converter_Value
   877 ;;     _getAD_ConvertFlag
   878 ;;     _setAD_ConvertFlag
   879 ;;     _AD_Sample
   880 ;;     _adc_test_init
   881 ;;     _adc_start
   882 ;;   _isPermitSampleTime
   883 ;;   _clrSampeTime
   884 ;;   _isFinishedTwentyMinTimer
   885 ;;   _getAdOriginalCh13Value
   886 ;;     _Filter
   887 ;;   _calPulseWidth
   888 ;;     _getAdOriginalCh12Value
   889 ;;       _Filter
   890 ;;   _pwm_start
   891 ;;   _setPB3
   892 ;;   _setPB4
   893 ;;   _setPB5
   894 ;;   _clearTwentyMinTimer
   895 ;;   _startTwelveHourTimer
   896 ;;   _isFinishedTwelveHoursTimer
   897 ;;   _clearTwelveHoursTimer
   898 ;;   _startThreeHoursTimer
   899 ;;   _isFinishedThreeHoursTimer
   900 ;;   _clearThreeHoursTimer
   901 ;;   _startOneHoursTimer
   902 ;;   _isFinishedOneHoursTimer
   903 ;;   _reset
   904 ;;   _pwm_config
   905 ;;
   906 ;; _ISR (ROOT)
   907 ;;   i1_setAD_ConvertFlag
   908 ;;   _adc_get
   909 ;;   _vPutSampleDataIntoTable
   910 ;;     _adc_get (ARG)
   911 ;;
   912 ;; Address spaces:
   913 ;;Name               Size   Autos  Total    Cost      Usage
   914 ;;BANK3               60      0       0      10        0.0%
   915 ;;BITBANK3            60      0       0       9        0.0%
   916 ;;SFR3                 0      0       0       4        0.0%
   917 ;;BITSFR3              0      0       0       4        0.0%
   918 ;;BANK2               60      0       0      12        0.0%
   919 ;;BITBANK2            60      0       0      11        0.0%
   920 ;;SFR2                 0      0       0       5        0.0%
   921 ;;BITSFR2              0      0       0       5        0.0%
   922 ;;SFR1                 0      0       0       2        0.0%
   923 ;;BITSFR1              0      0       0       2        0.0%
   924 ;;BANK1               50      0      4A       8       92.5%
   925 ;;BITBANK1            50      0       0       7        0.0%
   926 ;;CODE                 0      0       0       0        0.0%
   927 ;;DATA                 0      0      AF       6        0.0%
   928 ;;ABS                  0      0      A8       3        0.0%
   929 ;;NULL                 0      0       0       0        0.0%
   930 ;;STACK                0      0       7       2        0.0%
   931 ;;BANK0               50     34      50       5      100.0%
   932 ;;BITBANK0            50      0       0       4        0.0%
   933 ;;SFR0                 0      0       0       1        0.0%
   934 ;;BITSFR0              0      0       0       1        0.0%
   935 ;;COMMON               E      D       E       1      100.0%
   936 ;;BITCOMMON            E      0       0       0        0.0%
   937                           
   938                           
   939 ;; *************** function _main *****************
   940 ;; Defined at:
   941 ;;		line 592 in file "D:\develop\190625\AK7030-OTP\main.c"
   942 ;; Parameters:    Size  Location     Type
   943 ;;		None
   944 ;; Auto vars:     Size  Location     Type
   945 ;;  uiCh13Value     2   50[BANK0 ] unsigned int 
   946 ;;  ucPulseWidth    1   49[BANK0 ] unsigned char 
   947 ;; Return value:  Size  Location     Type
   948 ;;                  2  747[COMMON] int 
   949 ;; Registers used:
   950 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   951 ;; Tracked objects:
   952 ;;		On entry : 17F/0
   953 ;;		On exit  : 60/0
   954 ;;		Unchanged: FFE00/0
   955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   956 ;;      Params:         0       0       0       0       0
   957 ;;      Locals:         0       3       0       0       0
   958 ;;      Temps:          0       0       0       0       0
   959 ;;      Totals:         0       3       0       0       0
   960 ;;Total ram usage:        3 bytes
   961 ;; Hardware stack levels required when called:    5
   962 ;; This function calls:
   963 ;;		_initPin
   964 ;;		_setPinInitVaule
   965 ;;		_selectAdChannel
   966 ;;		_clock_config
   967 ;;		_timer1_config
   968 ;;		_timer1_interrupt_config
   969 ;;		_adc_test_init
   970 ;;		_adc_start
   971 ;;		_startTwentyMinTimer
   972 ;;		_process_AD_Converter_Value
   973 ;;		_isPermitSampleTime
   974 ;;		_clrSampeTime
   975 ;;		_isFinishedTwentyMinTimer
   976 ;;		_getAdOriginalCh13Value
   977 ;;		_calPulseWidth
   978 ;;		_pwm_start
   979 ;;		_setPB3
   980 ;;		_setPB4
   981 ;;		_setPB5
   982 ;;		_clearTwentyMinTimer
   983 ;;		_startTwelveHourTimer
   984 ;;		_isFinishedTwelveHoursTimer
   985 ;;		_clearTwelveHoursTimer
   986 ;;		_startThreeHoursTimer
   987 ;;		_isFinishedThreeHoursTimer
   988 ;;		_clearThreeHoursTimer
   989 ;;		_startOneHoursTimer
   990 ;;		_isFinishedOneHoursTimer
   991 ;;		_reset
   992 ;;		_pwm_config
   993 ;; This function is called by:
   994 ;;		Startup code after reset
   995 ;; This function uses a non-reentrant model
   996 ;;
   997  0013                     _main:	
   998                           
   999                           ;main.c: 603: initPin();
  1000                           
  1001                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1002  0013  118A  2384  118A   	fcall	_initPin
  1003                           
  1004                           ;main.c: 604: setPinInitVaule();
  1005  0016  118A  23DA  118A   	fcall	_setPinInitVaule
  1006                           
  1007                           ;main.c: 605: selectAdChannel();
  1008  0019  118A  249D  118A   	fcall	_selectAdChannel
  1009                           
  1010                           ;main.c: 607: clock_config();
  1011  001C  118A  248C  118A   	fcall	_clock_config
  1012                           
  1013                           ;main.c: 608: timer1_config();
  1014  001F  118A  247A  118A   	fcall	_timer1_config
  1015                           
  1016                           ;main.c: 609: timer1_interrupt_config();
  1017  0022  118A  24A9  118A   	fcall	_timer1_interrupt_config
  1018                           
  1019                           ;main.c: 611: adc_test_init(12,3);
  1020  0025  3003               	movlw	3
  1021  0026  1283               	bcf	3,5	;RP0=0, select bank0
  1022  0027  00A0               	movwf	?_adc_test_init
  1023  0028  300C               	movlw	12
  1024  0029  118A  236C  118A   	fcall	_adc_test_init
  1025                           
  1026                           ;main.c: 618: adc_start();
  1027  002C  118A  2381  118A   	fcall	_adc_start
  1028                           
  1029                           ;main.c: 625: startTwentyMinTimer( 60 );
  1030  002F  303C               	movlw	60
  1031  0030  00A0               	movwf	?_startTwentyMinTimer
  1032  0031  01A1               	clrf	?_startTwentyMinTimer+1
  1033  0032  118A  2438  118A   	fcall	_startTwentyMinTimer
  1034  0035                     l3673:	
  1035  0035  0064               	clrwdt	;#
  1036                           
  1037                           ;main.c: 632: process_AD_Converter_Value();
  1038  0036  118A  233B  118A   	fcall	_process_AD_Converter_Value
  1039                           
  1040                           ;main.c: 634: if( isPermitSampleTime() )
  1041  0039  118A  2494  118A   	fcall	_isPermitSampleTime
  1042  003C  3A00               	xorlw	0
  1043  003D  1903               	skipnz
  1044  003E  2835               	goto	l3673
  1045                           
  1046                           ;main.c: 635: {
  1047                           ;main.c: 638: clrSampeTime();
  1048  003F  118A  24AC  118A   	fcall	_clrSampeTime
  1049                           
  1050                           ;main.c: 646: enum systemStep {
  1051                           ;main.c: 647: INIT_STEP = 0,
  1052                           ;main.c: 648: START_UP_PWM_STEP,
  1053                           ;main.c: 649: CHECK_10_HOUR_TIMER_STEP,
  1054                           ;main.c: 650: STARTUP_3_HOUR_TIMER_STEP,
  1055                           ;main.c: 651: CHECK_3_HOUR_TIMER_STEP,
  1056                           ;main.c: 652: STARTUP_1_HOUR_TIMER_STEP,
  1057                           ;main.c: 653: CHECK_1_HOUR_TIMER_STEP,
  1058                           ;main.c: 654: READY_FOR_RESET_STEP = 99,
  1059                           ;main.c: 655: MEET_RESET_CONDITION_STEP,
  1060                           ;main.c: 656: RESET_STEP,
  1061                           ;main.c: 657: };
  1062                           ;main.c: 659: static enum systemStep ucStep = INIT_STEP;
  1063                           ;main.c: 661: switch(ucStep)
  1064  0042  2954               	goto	l3817
  1065  0043                     l3681:	
  1066                           
  1067                           ;main.c: 665: {
  1068                           ;main.c: 670: static unsigned char ucTimerP3s = 0;
  1069                           ;main.c: 672: if( isFinishedTwentyMinTimer() )
  1070  0043  118A  2470  118A   	fcall	_isFinishedTwentyMinTimer
  1071  0046  3A00               	xorlw	0
  1072  0047  1903               	skipnz
  1073  0048  284D               	goto	l3687
  1074                           
  1075                           ;main.c: 673: {
  1076                           ;main.c: 674: ucStep = READY_FOR_RESET_STEP;
  1077  0049  3063               	movlw	99
  1078  004A  00EA               	movwf	main@ucStep
  1079                           
  1080                           ;main.c: 675: ucTimerP3s = 0;
  1081  004B  01EB               	clrf	main@ucTimerP3s
  1082                           
  1083                           ;main.c: 676: }
  1084  004C  2835               	goto	l3673
  1085  004D                     l3687:	
  1086                           
  1087                           ;main.c: 677: else
  1088                           ;main.c: 678: {
  1089                           ;main.c: 679: if( getAdOriginalCh13Value() > 90 )
  1090  004D  118A  2175  118A   	fcall	_getAdOriginalCh13Value
  1091  0050  3000               	movlw	0
  1092  0051  0248               	subwf	?_getAdOriginalCh13Value+1,w
  1093  0052  305B               	movlw	91
  1094  0053  1903               	skipnz
  1095  0054  0247               	subwf	?_getAdOriginalCh13Value,w
  1096  0055  1C03               	skipc
  1097  0056  2859               	goto	l3691
  1098                           
  1099                           ;main.c: 680: {
  1100                           ;main.c: 681: ucTimerP3s++;
  1101  0057  0AEB               	incf	main@ucTimerP3s,f
  1102                           
  1103                           ;main.c: 682: }
  1104  0058  285A               	goto	l3693
  1105  0059                     l3691:	
  1106                           
  1107                           ;main.c: 683: else
  1108                           ;main.c: 684: ucTimerP3s = 0;
  1109  0059  01EB               	clrf	main@ucTimerP3s
  1110  005A                     l3693:	
  1111                           
  1112                           ;main.c: 686: if( ucTimerP3s >= 3)
  1113  005A  3003               	movlw	3
  1114  005B  026B               	subwf	main@ucTimerP3s,w
  1115  005C  1C03               	skipc
  1116  005D  2835               	goto	l3673
  1117                           
  1118                           ;main.c: 687: {
  1119                           ;main.c: 688: ucTimerP3s = 0;
  1120  005E  01EB               	clrf	main@ucTimerP3s
  1121                           
  1122                           ;main.c: 689: ucStep = START_UP_PWM_STEP;
  1123  005F  01EA               	clrf	main@ucStep
  1124  0060  0AEA               	incf	main@ucStep,f
  1125  0061  2835               	goto	l3673
  1126  0062                     l3699:	
  1127                           
  1128                           ;main.c: 707: ucPulseWidth = calPulseWidth();
  1129  0062  118A  217C  118A   	fcall	_calPulseWidth
  1130  0065  00D1               	movwf	main@ucPulseWidth
  1131                           
  1132                           ;main.c: 709: pwm_start( ucPulseWidth );
  1133  0066  0851               	movf	main@ucPulseWidth,w
  1134  0067  118A  23B5  118A   	fcall	_pwm_start
  1135                           
  1136                           ;main.c: 711: setPB3(0);
  1137  006A  3000               	movlw	0
  1138  006B  118A  23E2  118A   	fcall	_setPB3
  1139                           
  1140                           ;main.c: 712: setPB4(1);
  1141  006E  3001               	movlw	1
  1142  006F  118A  23EC  118A   	fcall	_setPB4
  1143                           
  1144                           ;main.c: 713: setPB5(0);
  1145  0072  3000               	movlw	0
  1146  0073  118A  23F4  118A   	fcall	_setPB5
  1147                           
  1148                           ;main.c: 714: clearTwentyMinTimer();
  1149  0076  118A  2499  118A   	fcall	_clearTwentyMinTimer
  1150                           
  1151                           ;main.c: 715: startTwelveHourTimer( 240);
  1152  0079  30F0               	movlw	240
  1153  007A  00A0               	movwf	?_startTwelveHourTimer
  1154  007B  01A1               	clrf	?_startTwelveHourTimer+1
  1155  007C  118A  242A  118A   	fcall	_startTwelveHourTimer
  1156                           
  1157                           ;main.c: 716: ucStep = CHECK_10_HOUR_TIMER_STEP;
  1158  007F  3002               	movlw	2
  1159  0080  2950               	goto	L7
  1160  0081                     l3717:	
  1161                           ;main.c: 717: break;
  1162                           
  1163                           
  1164                           ;main.c: 721: {
  1165                           ;main.c: 726: static unsigned char ucTimerP5s = 0;
  1166                           ;main.c: 728: if( isFinishedTwelveHoursTimer () )
  1167  0081  118A  2466  118A   	fcall	_isFinishedTwelveHoursTimer
  1168  0084  3A00               	xorlw	0
  1169  0085  1903               	skipnz
  1170  0086  2889               	goto	l3721
  1171  0087                     l3719:	
  1172                           
  1173                           ;main.c: 729: ucStep = READY_FOR_RESET_STEP;
  1174  0087  3063               	movlw	99
  1175  0088  2950               	goto	L7
  1176  0089                     l3721:	
  1177                           
  1178                           ;main.c: 730: else
  1179                           ;main.c: 731: {
  1180                           ;main.c: 732: if( getAdOriginalCh13Value() < 200 )
  1181  0089  118A  2175  118A   	fcall	_getAdOriginalCh13Value
  1182  008C  3000               	movlw	0
  1183  008D  0248               	subwf	?_getAdOriginalCh13Value+1,w
  1184  008E  30C8               	movlw	200
  1185  008F  1903               	skipnz
  1186  0090  0247               	subwf	?_getAdOriginalCh13Value,w
  1187  0091  1803               	skipnc
  1188  0092  2895               	goto	l3725
  1189                           
  1190                           ;main.c: 733: ucTimerP5s++;
  1191  0093  0AEC               	incf	main@ucTimerP5s,f
  1192  0094  2896               	goto	l3727
  1193  0095                     l3725:	
  1194                           
  1195                           ;main.c: 734: else
  1196                           ;main.c: 735: ucTimerP5s = 0;
  1197  0095  01EC               	clrf	main@ucTimerP5s
  1198  0096                     l3727:	
  1199                           
  1200                           ;main.c: 737: if( ucTimerP5s > 5)
  1201  0096  3006               	movlw	6
  1202  0097  026C               	subwf	main@ucTimerP5s,w
  1203  0098  1C03               	skipc
  1204  0099  2835               	goto	l3673
  1205  009A  3003               	movlw	3
  1206                           
  1207                           ;main.c: 738: {
  1208                           ;main.c: 739: ucTimerP5s = 0;
  1209  009B  01EC               	clrf	main@ucTimerP5s
  1210                           
  1211                           ;main.c: 740: ucStep = STARTUP_3_HOUR_TIMER_STEP;
  1212  009C  2950               	goto	L7
  1213  009D                     l3733:	
  1214                           
  1215                           ;main.c: 748: {
  1216                           ;main.c: 749: clearTwelveHoursTimer();
  1217  009D  118A  24A5  118A   	fcall	_clearTwelveHoursTimer
  1218                           
  1219                           ;main.c: 750: startThreeHoursTimer(180);
  1220  00A0  30B4               	movlw	180
  1221  00A1  00A0               	movwf	?_startThreeHoursTimer
  1222  00A2  01A1               	clrf	?_startThreeHoursTimer+1
  1223  00A3  118A  241C  118A   	fcall	_startThreeHoursTimer
  1224                           
  1225                           ;main.c: 751: ucStep = CHECK_3_HOUR_TIMER_STEP;
  1226  00A6  3004               	movlw	4
  1227  00A7  2950               	goto	L7
  1228  00A8                     l3737:	
  1229                           ;main.c: 752: break;
  1230                           
  1231                           
  1232                           ;main.c: 756: {
  1233                           ;main.c: 757: static unsigned char ucTimerP5s = 0;
  1234                           ;main.c: 759: if( isFinishedThreeHoursTimer() )
  1235  00A8  118A  245C  118A   	fcall	_isFinishedThreeHoursTimer
  1236  00AB  3A00               	xorlw	0
  1237  00AC  1D03               	btfss	3,2
  1238  00AD  2887               	goto	l3719
  1239                           
  1240                           ;main.c: 761: else
  1241                           ;main.c: 762: {
  1242                           ;main.c: 763: if( getAdOriginalCh13Value() < 85 )
  1243  00AE  118A  2175  118A   	fcall	_getAdOriginalCh13Value
  1244  00B1  3000               	movlw	0
  1245  00B2  0248               	subwf	?_getAdOriginalCh13Value+1,w
  1246  00B3  3055               	movlw	85
  1247  00B4  1903               	skipnz
  1248  00B5  0247               	subwf	?_getAdOriginalCh13Value,w
  1249  00B6  1803               	skipnc
  1250  00B7  28BA               	goto	l3745
  1251                           
  1252                           ;main.c: 764: ucTimerP5s++;
  1253  00B8  0AE8               	incf	main@cTimerP5s_797,f
  1254  00B9  28BB               	goto	l3747
  1255  00BA                     l3745:	
  1256                           
  1257                           ;main.c: 765: else
  1258                           ;main.c: 766: ucTimerP5s = 0;
  1259  00BA  01E8               	clrf	main@cTimerP5s_797
  1260  00BB                     l3747:	
  1261                           
  1262                           ;main.c: 768: if( ucTimerP5s > 5)
  1263  00BB  3006               	movlw	6
  1264  00BC  0268               	subwf	main@cTimerP5s_797,w
  1265  00BD  1C03               	skipc
  1266  00BE  2835               	goto	l3673
  1267  00BF  3005               	movlw	5
  1268                           
  1269                           ;main.c: 769: {
  1270                           ;main.c: 770: ucTimerP5s = 0;
  1271  00C0  01E8               	clrf	main@cTimerP5s_797
  1272                           
  1273                           ;main.c: 771: ucStep = STARTUP_1_HOUR_TIMER_STEP;
  1274  00C1  2950               	goto	L7
  1275  00C2                     l3753:	
  1276                           
  1277                           ;main.c: 778: {
  1278                           ;main.c: 779: clearThreeHoursTimer();
  1279  00C2  118A  24A1  118A   	fcall	_clearThreeHoursTimer
  1280                           
  1281                           ;main.c: 780: startOneHoursTimer( 120 );
  1282  00C5  3078               	movlw	120
  1283  00C6  00A0               	movwf	?_startOneHoursTimer
  1284  00C7  01A1               	clrf	?_startOneHoursTimer+1
  1285  00C8  118A  240E  118A   	fcall	_startOneHoursTimer
  1286                           
  1287                           ;main.c: 781: setPB3(1);
  1288  00CB  3001               	movlw	1
  1289  00CC  118A  23E2  118A   	fcall	_setPB3
  1290                           
  1291                           ;main.c: 782: setPB4(0);
  1292  00CF  3000               	movlw	0
  1293  00D0  118A  23EC  118A   	fcall	_setPB4
  1294                           
  1295                           ;main.c: 783: setPB5(1);
  1296  00D3  3001               	movlw	1
  1297  00D4  118A  23F4  118A   	fcall	_setPB5
  1298                           
  1299                           ;main.c: 784: ucStep = CHECK_1_HOUR_TIMER_STEP;
  1300  00D7  3006               	movlw	6
  1301  00D8  2950               	goto	L7
  1302  00D9                     l3765:	
  1303                           ;main.c: 785: break;
  1304                           
  1305                           
  1306                           ;main.c: 789: {
  1307                           ;main.c: 790: static unsigned int uiTimerOneP5s = 0;
  1308                           ;main.c: 791: static unsigned int uiTimerTwoP5s = 0;
  1309                           ;main.c: 793: unsigned int uiCh13Value = getAdOriginalCh13Value();
  1310  00D9  118A  2175  118A   	fcall	_getAdOriginalCh13Value
  1311  00DC  0848               	movf	?_getAdOriginalCh13Value+1,w
  1312  00DD  00D3               	movwf	main@uiCh13Value+1
  1313  00DE  0847               	movf	?_getAdOriginalCh13Value,w
  1314  00DF  00D2               	movwf	main@uiCh13Value
  1315                           
  1316                           ;main.c: 796: if( isFinishedOneHoursTimer() )
  1317  00E0  118A  2452  118A   	fcall	_isFinishedOneHoursTimer
  1318  00E3  3A00               	xorlw	0
  1319  00E4  1D03               	btfss	3,2
  1320  00E5  2887               	goto	l3719
  1321                           
  1322                           ;main.c: 798: else
  1323                           ;main.c: 799: {
  1324                           ;main.c: 800: if( uiCh13Value > 100 )
  1325  00E6  3000               	movlw	0
  1326  00E7  0253               	subwf	main@uiCh13Value+1,w
  1327  00E8  3065               	movlw	101
  1328  00E9  1903               	skipnz
  1329  00EA  0252               	subwf	main@uiCh13Value,w
  1330  00EB  1C03               	skipc
  1331  00EC  28F3               	goto	l3777
  1332                           
  1333                           ;main.c: 801: {
  1334                           ;main.c: 802: uiTimerOneP5s++;
  1335  00ED  0ADC               	incf	main@uiTimerOneP5s,f
  1336  00EE  1903               	skipnz
  1337  00EF  0ADD               	incf	main@uiTimerOneP5s+1,f
  1338                           
  1339                           ;main.c: 803: uiTimerTwoP5s = 0;
  1340  00F0  01DE               	clrf	main@uiTimerTwoP5s
  1341  00F1  01DF               	clrf	main@uiTimerTwoP5s+1
  1342                           
  1343                           ;main.c: 804: }
  1344  00F2  28F5               	goto	l3779
  1345  00F3                     l3777:	
  1346                           
  1347                           ;main.c: 805: else
  1348                           ;main.c: 806: uiTimerOneP5s = 0;
  1349  00F3  01DC               	clrf	main@uiTimerOneP5s
  1350  00F4  01DD               	clrf	main@uiTimerOneP5s+1
  1351  00F5                     l3779:	
  1352                           
  1353                           ;main.c: 808: if(uiTimerOneP5s > 5)
  1354  00F5  3000               	movlw	0
  1355  00F6  025D               	subwf	main@uiTimerOneP5s+1,w
  1356  00F7  3006               	movlw	6
  1357  00F8  1903               	skipnz
  1358  00F9  025C               	subwf	main@uiTimerOneP5s,w
  1359                           
  1360                           ;main.c: 809: {
  1361                           ;main.c: 810: setPB3(0);
  1362  00FA  3000               	movlw	0
  1363  00FB  1C03               	skipc
  1364  00FC  290D               	goto	L8
  1365  00FD  118A  23E2  118A   	fcall	_setPB3
  1366                           
  1367                           ;main.c: 811: setPB4(1);
  1368  0100  3001               	movlw	1
  1369  0101  118A  23EC  118A   	fcall	_setPB4
  1370                           
  1371                           ;main.c: 812: setPB5(0);
  1372  0104  3000               	movlw	0
  1373  0105  118A  23F4  118A   	fcall	_setPB5
  1374                           
  1375                           ;main.c: 814: uiTimerOneP5s = 0;
  1376  0108  01DC               	clrf	main@uiTimerOneP5s
  1377  0109  01DD               	clrf	main@uiTimerOneP5s+1
  1378                           
  1379                           ;main.c: 815: uiTimerTwoP5s = 0;
  1380  010A  01DE               	clrf	main@uiTimerTwoP5s
  1381  010B  01DF               	clrf	main@uiTimerTwoP5s+1
  1382                           
  1383                           ;main.c: 817: }
  1384  010C  2835               	goto	l3673
  1385  010D                     L8:	
  1386                           ;main.c: 818: else
  1387                           ;main.c: 819: {
  1388                           ;main.c: 820: if( uiCh13Value < 25 )
  1389                           
  1390  010D  0253               	subwf	main@uiCh13Value+1,w
  1391  010E  3019               	movlw	25
  1392  010F  1903               	skipnz
  1393  0110  0252               	subwf	main@uiCh13Value,w
  1394  0111  1803               	skipnc
  1395  0112  2917               	goto	l3791
  1396                           
  1397                           ;main.c: 821: uiTimerTwoP5s++;
  1398  0113  0ADE               	incf	main@uiTimerTwoP5s,f
  1399  0114  1903               	skipnz
  1400  0115  0ADF               	incf	main@uiTimerTwoP5s+1,f
  1401  0116  2919               	goto	l3793
  1402  0117                     l3791:	
  1403                           
  1404                           ;main.c: 822: else
  1405                           ;main.c: 823: uiTimerTwoP5s = 0;
  1406  0117  01DE               	clrf	main@uiTimerTwoP5s
  1407  0118  01DF               	clrf	main@uiTimerTwoP5s+1
  1408  0119                     l3793:	
  1409                           
  1410                           ;main.c: 825: if(uiTimerTwoP5s > 5)
  1411  0119  3000               	movlw	0
  1412  011A  025F               	subwf	main@uiTimerTwoP5s+1,w
  1413  011B  3006               	movlw	6
  1414  011C  1903               	skipnz
  1415  011D  025E               	subwf	main@uiTimerTwoP5s,w
  1416  011E  1C03               	skipc
  1417  011F  2835               	goto	l3673
  1418  0120                     l3795:	
  1419                           
  1420                           ;main.c: 826: reset();
  1421  0120  118A  24AE  118A   	fcall	_reset
  1422  0123  2835               	goto	l3673
  1423  0124                     l3797:	
  1424                           
  1425                           ;main.c: 855: {
  1426                           ;main.c: 856: setPB3(0);
  1427  0124  3000               	movlw	0
  1428  0125  118A  23E2  118A   	fcall	_setPB3
  1429                           
  1430                           ;main.c: 857: setPB4(0);
  1431  0128  3000               	movlw	0
  1432  0129  118A  23EC  118A   	fcall	_setPB4
  1433                           
  1434                           ;main.c: 858: setPB5(1);
  1435  012C  3001               	movlw	1
  1436  012D  118A  23F4  118A   	fcall	_setPB5
  1437                           
  1438                           ;main.c: 859: pwm_config(0);
  1439  0130  3000               	movlw	0
  1440  0131  118A  2446  118A   	fcall	_pwm_config
  1441                           
  1442                           ;main.c: 860: pwm_start(60);
  1443  0134  303C               	movlw	60
  1444  0135  118A  23B5  118A   	fcall	_pwm_start
  1445                           
  1446                           ;main.c: 861: pwm_config(1);
  1447  0138  3001               	movlw	1
  1448  0139  118A  2446  118A   	fcall	_pwm_config
  1449                           
  1450                           ;main.c: 862: ucStep = MEET_RESET_CONDITION_STEP;
  1451  013C  3064               	movlw	100
  1452  013D  2950               	goto	L7
  1453  013E                     l3801:	
  1454                           ;main.c: 863: break;
  1455                           
  1456                           
  1457                           ;main.c: 867: {
  1458                           ;main.c: 868: static unsigned char ucTimerP5s = 0;
  1459                           ;main.c: 870: if( getAdOriginalCh13Value() >50 )
  1460  013E  118A  2175  118A   	fcall	_getAdOriginalCh13Value
  1461  0141  3000               	movlw	0
  1462  0142  0248               	subwf	?_getAdOriginalCh13Value+1,w
  1463  0143  3033               	movlw	51
  1464  0144  1903               	skipnz
  1465  0145  0247               	subwf	?_getAdOriginalCh13Value,w
  1466  0146  1C03               	skipc
  1467  0147  294A               	goto	l3805
  1468                           
  1469                           ;main.c: 871: ucTimerP5s++;
  1470  0148  0AE9               	incf	main@cTimerP5s_801,f
  1471  0149  294B               	goto	l3807
  1472  014A                     l3805:	
  1473                           
  1474                           ;main.c: 872: else
  1475                           ;main.c: 873: ucTimerP5s = 0;
  1476  014A  01E9               	clrf	main@cTimerP5s_801
  1477  014B                     l3807:	
  1478                           
  1479                           ;main.c: 875: if(ucTimerP5s > 5)
  1480  014B  3006               	movlw	6
  1481  014C  0269               	subwf	main@cTimerP5s_801,w
  1482  014D  1C03               	skipc
  1483  014E  2835               	goto	l3673
  1484                           
  1485                           ;main.c: 876: ucStep = RESET_STEP;
  1486  014F  3065               	movlw	101
  1487  0150                     L7:	
  1488  0150  00EA               	movwf	main@ucStep
  1489  0151  2835               	goto	l3673
  1490  0152                     l3811:	
  1491                           
  1492                           ;main.c: 881: {
  1493                           ;main.c: 882: ucStep = INIT_STEP;
  1494  0152  01EA               	clrf	main@ucStep
  1495  0153  2920               	goto	l3795
  1496  0154                     l3817:	
  1497  0154  086A               	movf	main@ucStep,w
  1498                           
  1499                           ; Switch size 1, requested type "space"
  1500                           ; Number of cases is 10, Range of values is 0 to 101
  1501                           ; switch strategies available:
  1502                           ; Name         Instructions Cycles
  1503                           ; simple_byte           31    16 (average)
  1504                           ; direct_byte          211     7 (fixed)
  1505                           ; jumptable            260     6 (fixed)
  1506                           ; rangetable           106     6 (fixed)
  1507                           ; spacedrange          210     9 (fixed)
  1508                           ; locatedrange         102     3 (fixed)
  1509                           ;	Chosen strategy is simple_byte
  1510  0155  3A00               	xorlw	0	; case 0
  1511  0156  1903               	skipnz
  1512  0157  2843               	goto	l3681
  1513  0158  3A01               	xorlw	1	; case 1
  1514  0159  1903               	skipnz
  1515  015A  2862               	goto	l3699
  1516  015B  3A03               	xorlw	3	; case 2
  1517  015C  1903               	skipnz
  1518  015D  2881               	goto	l3717
  1519  015E  3A01               	xorlw	1	; case 3
  1520  015F  1903               	skipnz
  1521  0160  289D               	goto	l3733
  1522  0161  3A07               	xorlw	7	; case 4
  1523  0162  1903               	skipnz
  1524  0163  28A8               	goto	l3737
  1525  0164  3A01               	xorlw	1	; case 5
  1526  0165  1903               	skipnz
  1527  0166  28C2               	goto	l3753
  1528  0167  3A03               	xorlw	3	; case 6
  1529  0168  1903               	skipnz
  1530  0169  28D9               	goto	l3765
  1531  016A  3A65               	xorlw	101	; case 99
  1532  016B  1903               	skipnz
  1533  016C  2924               	goto	l3797
  1534  016D  3A07               	xorlw	7	; case 100
  1535  016E  1903               	skipnz
  1536  016F  293E               	goto	l3801
  1537  0170  3A01               	xorlw	1	; case 101
  1538  0171  1903               	skipnz
  1539  0172  2952               	goto	l3811
  1540  0173  2974               	goto	l749
  1541  0174                     l749:	
  1542  0174  2835               	goto	l3673
  1543  0175                     __end_of_main:	
  1544                           
  1545                           	psect	text835
  1546  0175                     __ptext835:	
  1547 ;; =============== function _calPulseWidth ends ============
  1548                           
  1549                           
  1550 ;; *************** function _getAdOriginalCh13Value *****************
  1551 ;; Defined at:
  1552 ;;		line 238 in file "D:\develop\190625\AK7030-OTP\common.c"
  1553 ;; Parameters:    Size  Location     Type
  1554 ;;		None
  1555 ;; Auto vars:     Size  Location     Type
  1556 ;;		None
  1557 ;; Return value:  Size  Location     Type
  1558 ;;                  2   39[BANK0 ] unsigned int 
  1559 ;; Registers used:
  1560 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1561 ;; Tracked objects:
  1562 ;;		On entry : 60/0
  1563 ;;		On exit  : 160/0
  1564 ;;		Unchanged: FFE00/0
  1565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1566 ;;      Params:         0       2       0       0       0
  1567 ;;      Locals:         0       0       0       0       0
  1568 ;;      Temps:          0       0       0       0       0
  1569 ;;      Totals:         0       2       0       0       0
  1570 ;;Total ram usage:        2 bytes
  1571 ;; Hardware stack levels used:    1
  1572 ;; Hardware stack levels required when called:    3
  1573 ;; This function calls:
  1574 ;;		_Filter
  1575 ;; This function is called by:
  1576 ;;		_main
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579  0175                     _getAdOriginalCh13Value:	
  1580                           
  1581                           ;common.c: 240: return Filter(uiSampleChannelFourth);
  1582                           
  1583                           ; Regs used in _getAdOriginalCh13Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  1584  0175  30D2               	movlw	_uiSampleChannelFourth& (0+255)
  1585  0176  21B4               	fcall	_Filter
  1586  0177  0821               	movf	?_Filter+1,w
  1587  0178  00C8               	movwf	?_getAdOriginalCh13Value+1
  1588  0179  0820               	movf	?_Filter,w
  1589  017A  00C7               	movwf	?_getAdOriginalCh13Value
  1590  017B  0008               	return
  1591  017C                     __end_of_getAdOriginalCh13Value:	
  1592  017C                     __ptext834:	
  1593 ;; =============== function _main ends ============
  1594                           
  1595                           
  1596 ;; *************** function _calPulseWidth *****************
  1597 ;; Defined at:
  1598 ;;		line 529 in file "D:\develop\190625\AK7030-OTP\main.c"
  1599 ;; Parameters:    Size  Location     Type
  1600 ;;		None
  1601 ;; Auto vars:     Size  Location     Type
  1602 ;;  uiGapValue      2   41[BANK0 ] unsigned int 
  1603 ;;  ucGapValue      1   46[BANK0 ] unsigned char 
  1604 ;;  ucHalfValue     1   44[BANK0 ] unsigned char 
  1605 ;;  ucThreeTimes    1   43[BANK0 ] unsigned char 
  1606 ;;  uiChannel2Va    2   47[BANK0 ] unsigned int 
  1607 ;;  ucPulseWidth    1   45[BANK0 ] unsigned char 
  1608 ;; Return value:  Size  Location     Type
  1609 ;;                  1    wreg      unsigned char 
  1610 ;; Registers used:
  1611 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1612 ;; Tracked objects:
  1613 ;;		On entry : 60/0
  1614 ;;		On exit  : 160/0
  1615 ;;		Unchanged: FFE00/0
  1616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1617 ;;      Params:         0       0       0       0       0
  1618 ;;      Locals:         0       8       0       0       0
  1619 ;;      Temps:          0       0       0       0       0
  1620 ;;      Totals:         0       8       0       0       0
  1621 ;;Total ram usage:        8 bytes
  1622 ;; Hardware stack levels used:    1
  1623 ;; Hardware stack levels required when called:    4
  1624 ;; This function calls:
  1625 ;;		_getAdOriginalCh12Value
  1626 ;; This function is called by:
  1627 ;;		_main
  1628 ;; This function uses a non-reentrant model
  1629 ;;
  1630  017C                     _calPulseWidth:	
  1631                           
  1632                           ;main.c: 534: unsigned int uiChannel2Value = getAdOriginalCh12Value();
  1633                           
  1634                           ; Regs used in _calPulseWidth: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1635  017C  21AD  118A         	fcall	_getAdOriginalCh12Value
  1636  017E  0848               	movf	?_getAdOriginalCh12Value+1,w
  1637  017F  00D0               	movwf	calPulseWidth@uiChannel2Value+1
  1638  0180  0847               	movf	?_getAdOriginalCh12Value,w
  1639  0181  00CF               	movwf	calPulseWidth@uiChannel2Value
  1640                           
  1641                           ;main.c: 536: if( uiChannel2Value >= 332 )
  1642  0182  3001               	movlw	1
  1643  0183  0250               	subwf	calPulseWidth@uiChannel2Value+1,w
  1644  0184  304C               	movlw	76
  1645  0185  1903               	skipnz
  1646  0186  024F               	subwf	calPulseWidth@uiChannel2Value,w
  1647  0187  1C03               	skipc
  1648  0188  298B               	goto	l3637
  1649                           
  1650                           ;main.c: 537: ucPulseWidth = 100;
  1651  0189  3064               	movlw	100
  1652  018A  29AB               	goto	L9
  1653  018B                     l3637:	
  1654                           
  1655                           ;main.c: 538: else if( uiChannel2Value <= 312)
  1656  018B  3001               	movlw	1
  1657  018C  0250               	subwf	calPulseWidth@uiChannel2Value+1,w
  1658  018D  3039               	movlw	57
  1659  018E  1903               	skipnz
  1660  018F  024F               	subwf	calPulseWidth@uiChannel2Value,w
  1661  0190  1803               	skipnc
  1662  0191  2994               	goto	l3641
  1663                           
  1664                           ;main.c: 539: ucPulseWidth = 30;
  1665  0192  301E               	movlw	30
  1666  0193  29AB               	goto	L9
  1667  0194                     l3641:	
  1668                           
  1669                           ;main.c: 544: unsigned char ucGapValue = 0;
  1670  0194  01CE               	clrf	calPulseWidth@ucGapValue
  1671                           
  1672                           ;main.c: 546: unsigned char ucThreeTimesValue = 0;
  1673  0195  01CB               	clrf	calPulseWidth@ucThreeTimesValue
  1674                           
  1675                           ;main.c: 547: unsigned char ucHalfValue = 0;
  1676  0196  01CC               	clrf	calPulseWidth@ucHalfValue
  1677                           
  1678                           ;main.c: 549: uiGapValue = uiChannel2Value - 312;
  1679  0197  0850               	movf	calPulseWidth@uiChannel2Value+1,w
  1680  0198  00CA               	movwf	calPulseWidth@uiGapValue+1
  1681  0199  084F               	movf	calPulseWidth@uiChannel2Value,w
  1682  019A  00C9               	movwf	calPulseWidth@uiGapValue
  1683  019B  30C8               	movlw	200
  1684  019C  07C9               	addwf	calPulseWidth@uiGapValue,f
  1685  019D  1803               	skipnc
  1686  019E  0ACA               	incf	calPulseWidth@uiGapValue+1,f
  1687  019F  30FE               	movlw	254
  1688  01A0  07CA               	addwf	calPulseWidth@uiGapValue+1,f
  1689                           
  1690                           ;main.c: 551: ucGapValue = uiGapValue;
  1691  01A1  0849               	movf	calPulseWidth@uiGapValue,w
  1692  01A2  00CE               	movwf	calPulseWidth@ucGapValue
  1693                           
  1694                           ;main.c: 553: ucThreeTimesValue = ucGapValue*3;
  1695  01A3  074E               	addwf	calPulseWidth@ucGapValue,w
  1696  01A4  074E               	addwf	calPulseWidth@ucGapValue,w
  1697  01A5  00CB               	movwf	calPulseWidth@ucThreeTimesValue
  1698                           
  1699                           ;main.c: 555: ucHalfValue = ucGapValue >> 1;
  1700  01A6  1003               	clrc
  1701  01A7  0C4E               	rrf	calPulseWidth@ucGapValue,w
  1702  01A8  00CC               	movwf	calPulseWidth@ucHalfValue
  1703                           
  1704                           ;main.c: 557: ucPulseWidth = 30 + ucThreeTimesValue + ucHalfValue;
  1705  01A9  074B               	addwf	calPulseWidth@ucThreeTimesValue,w
  1706  01AA  3E1E               	addlw	30
  1707  01AB                     L9:	
  1708  01AB  00CD               	movwf	calPulseWidth@ucPulseWidth
  1709                           
  1710                           ;main.c: 559: }
  1711                           ;main.c: 563: return ucPulseWidth;
  1712  01AC  0008               	return
  1713  01AD                     __end_of_calPulseWidth:	
  1714  01AD                     __ptext837:	
  1715 ;; =============== function _process_AD_Converter_Value ends ============
  1716                           
  1717                           
  1718 ;; *************** function _getAdOriginalCh12Value *****************
  1719 ;; Defined at:
  1720 ;;		line 226 in file "D:\develop\190625\AK7030-OTP\common.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;		None
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;		None
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  2   39[BANK0 ] unsigned int 
  1727 ;; Registers used:
  1728 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1729 ;; Tracked objects:
  1730 ;;		On entry : 60/0
  1731 ;;		On exit  : 160/0
  1732 ;;		Unchanged: FFE00/0
  1733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1734 ;;      Params:         0       2       0       0       0
  1735 ;;      Locals:         0       0       0       0       0
  1736 ;;      Temps:          0       0       0       0       0
  1737 ;;      Totals:         0       2       0       0       0
  1738 ;;Total ram usage:        2 bytes
  1739 ;; Hardware stack levels used:    1
  1740 ;; Hardware stack levels required when called:    3
  1741 ;; This function calls:
  1742 ;;		_Filter
  1743 ;; This function is called by:
  1744 ;;		_calPulseWidth
  1745 ;; This function uses a non-reentrant model
  1746 ;;
  1747  01AD                     _getAdOriginalCh12Value:	
  1748                           
  1749                           ;common.c: 229: return Filter(uiSampleChannelFirst);
  1750                           
  1751                           ; Regs used in _getAdOriginalCh12Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  1752  01AD  30A2               	movlw	_uiSampleChannelFirst& (0+255)
  1753  01AE  21B4               	fcall	_Filter
  1754  01AF  0821               	movf	?_Filter+1,w
  1755  01B0  00C8               	movwf	?_getAdOriginalCh12Value+1
  1756  01B1  0820               	movf	?_Filter,w
  1757  01B2  00C7               	movwf	?_getAdOriginalCh12Value
  1758  01B3  0008               	return
  1759  01B4                     __end_of_getAdOriginalCh12Value:	
  1760  01B4                     __ptext843:	
  1761 ;; =============== function _getAD_ConvertFlag ends ============
  1762                           
  1763                           
  1764 ;; *************** function _Filter *****************
  1765 ;; Defined at:
  1766 ;;		line 60 in file "D:\develop\190625\AK7030-OTP\common.c"
  1767 ;; Parameters:    Size  Location     Type
  1768 ;;  tmpValue        1    wreg     PTR int 
  1769 ;;		 -> uiSampleChannelFourteenth(24), uiSampleChannelFourth(24), uiSampleChannelFirst(24), 
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;  tmpValue        1   34[BANK0 ] PTR int 
  1772 ;;		 -> uiSampleChannelFourteenth(24), uiSampleChannelFourth(24), uiSampleChannelFirst(24), 
  1773 ;;  cir             2   35[BANK0 ] int 
  1774 ;;  filter_buf     24    6[BANK0 ] unsigned int [12]
  1775 ;;  filter_sum      2   32[BANK0 ] unsigned int 
  1776 ;;  filter_temp     2   30[BANK0 ] unsigned int 
  1777 ;;  i               1   38[BANK0 ] unsigned char 
  1778 ;;  j               1   37[BANK0 ] unsigned char 
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  2    0[BANK0 ] unsigned int 
  1781 ;; Registers used:
  1782 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1783 ;; Tracked objects:
  1784 ;;		On entry : 60/0
  1785 ;;		On exit  : 160/0
  1786 ;;		Unchanged: FFE00/0
  1787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1788 ;;      Params:         0       2       0       0       0
  1789 ;;      Locals:         0      33       0       0       0
  1790 ;;      Temps:          0       4       0       0       0
  1791 ;;      Totals:         0      39       0       0       0
  1792 ;;Total ram usage:       39 bytes
  1793 ;; Hardware stack levels used:    1
  1794 ;; Hardware stack levels required when called:    2
  1795 ;; This function calls:
  1796 ;;		Nothing
  1797 ;; This function is called by:
  1798 ;;		_getAdOriginalCh12Value
  1799 ;;		_getAdOriginalCh13Value
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802  01B4                     _Filter:	
  1803                           
  1804                           ; Regs used in _Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  1805                           ;Filter@tmpValue stored from wreg
  1806  01B4  00C2               	movwf	Filter@tmpValue
  1807  01B5  01C5               	clrf	Filter@j
  1808                           
  1809                           ;common.c: 64: unsigned int filter_temp = 0, filter_sum = 0;
  1810  01B6  01BE               	clrf	Filter@filter_temp
  1811  01B7  01BF               	clrf	Filter@filter_temp+1
  1812  01B8  01C0               	clrf	Filter@filter_sum
  1813  01B9  01C1               	clrf	Filter@filter_sum+1
  1814                           
  1815                           ;common.c: 66: unsigned int filter_buf[12];
  1816                           ;common.c: 68: for(int cir = 0;cir < 12; cir++)
  1817  01BA  01C3               	clrf	Filter@cir
  1818  01BB  01C4               	clrf	Filter@cir+1
  1819  01BC                     l3447:	
  1820                           
  1821                           ;common.c: 69: filter_buf[cir] = *tmpValue++;
  1822  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  1823  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  1824  01BE  0842               	movf	Filter@tmpValue,w
  1825  01BF  2242  118A         	fcall	PL3	;call to abstracted procedure
  1826  01C1  1003               	clrc
  1827  01C2  0D43               	rlf	Filter@cir,w
  1828  01C3  224A  118A         	fcall	PL5	;call to abstracted procedure
  1829  01C5  0AC2               	incf	Filter@tmpValue,f
  1830  01C6  0AC2               	incf	Filter@tmpValue,f
  1831  01C7  0AC3               	incf	Filter@cir,f
  1832  01C8  1903               	skipnz
  1833  01C9  0AC4               	incf	Filter@cir+1,f
  1834  01CA  0844               	movf	Filter@cir+1,w
  1835  01CB  3A80               	xorlw	128
  1836  01CC  00FF               	movwf	127
  1837  01CD  3080               	movlw	128
  1838  01CE  027F               	subwf	127,w
  1839  01CF  1D03               	skipz
  1840  01D0  29D3               	goto	u965
  1841  01D1  300C               	movlw	12
  1842  01D2  0243               	subwf	Filter@cir,w
  1843  01D3                     u965:	
  1844  01D3  1C03               	skipc
  1845  01D4  29BC               	goto	l3447
  1846                           
  1847                           ;common.c: 72: for(j = 0; j < 12 - 1; j++)
  1848  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  1849  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  1850  01D7  01C5               	clrf	Filter@j
  1851  01D8                     l3461:	
  1852                           
  1853                           ;common.c: 73: {
  1854                           ;common.c: 74: for(i = 0; i < 12 - 1 - j; i++)
  1855  01D8  01C6               	clrf	Filter@i
  1856  01D9                     l3469:	
  1857  01D9  01A3               	clrf	??_Filter+1
  1858  01DA  0845               	movf	Filter@j,w
  1859  01DB  3C0B               	sublw	11
  1860  01DC  00A2               	movwf	??_Filter
  1861  01DD  1C03               	skipc
  1862  01DE  03A3               	decf	??_Filter+1,f
  1863  01DF  0823               	movf	??_Filter+1,w
  1864  01E0  3A80               	xorlw	128
  1865  01E1  3C80               	sublw	128
  1866  01E2  1D03               	skipz
  1867  01E3  29E6               	goto	u985
  1868  01E4  0822               	movf	??_Filter,w
  1869  01E5  0246               	subwf	Filter@i,w
  1870  01E6                     u985:	
  1871  01E6  1803               	btfsc	3,0
  1872  01E7  2A1B               	goto	l3471
  1873                           
  1874                           ;common.c: 75: {
  1875                           ;common.c: 76: if(filter_buf[i] > filter_buf[i + 1])
  1876  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  1877  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  1878  01EA  1003               	clrc
  1879  01EB  0D46               	rlf	Filter@i,w
  1880  01EC  3E26               	addlw	Filter@filter_buf& (0+255)
  1881  01ED  2242  118A         	fcall	PL3	;call to abstracted procedure
  1882  01EF  2252  118A         	fcall	PL6	;call to abstracted procedure
  1883  01F1  0800               	movf	0,w
  1884  01F2  00A4               	movwf	??_Filter+2
  1885  01F3  0A84               	incf	4,f
  1886  01F4  0800               	movf	0,w
  1887  01F5  00A5               	movwf	??_Filter+3
  1888  01F6  0823               	movf	??_Filter+1,w
  1889  01F7  0225               	subwf	??_Filter+3,w
  1890  01F8  1D03               	skipz
  1891  01F9  29FC               	goto	u975
  1892  01FA  0822               	movf	??_Filter,w
  1893  01FB  0224               	subwf	??_Filter+2,w
  1894  01FC                     u975:	
  1895  01FC  1803               	skipnc
  1896  01FD  2A19               	goto	l3467
  1897                           
  1898                           ;common.c: 77: {
  1899                           ;common.c: 79: filter_temp = filter_buf[i];
  1900  01FE  1003               	clrc
  1901  01FF  0D46               	rlf	Filter@i,w
  1902  0200  3E26               	addlw	Filter@filter_buf& (0+255)
  1903  0201  0084               	movwf	4
  1904  0202  0800               	movf	0,w
  1905  0203  00BE               	movwf	Filter@filter_temp
  1906  0204  0A84               	incf	4,f
  1907  0205  0800               	movf	0,w
  1908  0206  00BF               	movwf	Filter@filter_temp+1
  1909                           
  1910                           ;common.c: 81: filter_buf[i] = filter_buf[i + 1];
  1911  0207  2252  118A         	fcall	PL6	;call to abstracted procedure
  1912  0209  0800               	movf	0,w
  1913  020A  00A2               	movwf	??_Filter
  1914  020B  0A84               	incf	4,f
  1915  020C  0800               	movf	0,w
  1916  020D  00A3               	movwf	??_Filter+1
  1917  020E  1003               	clrc
  1918  020F  0D46               	rlf	Filter@i,w
  1919  0210  224A  118A         	fcall	PL5	;call to abstracted procedure
  1920                           
  1921                           ;common.c: 83: filter_buf[i + 1] = filter_temp;
  1922  0212  2252  118A         	fcall	PL6	;call to abstracted procedure
  1923  0214  083E               	movf	Filter@filter_temp,w
  1924  0215  0080               	movwf	0
  1925  0216  0A84               	incf	4,f
  1926  0217  083F               	movf	Filter@filter_temp+1,w
  1927  0218  0080               	movwf	0
  1928  0219                     l3467:	
  1929  0219  0AC6               	incf	Filter@i,f
  1930  021A  29D9               	goto	l3469
  1931  021B                     l3471:	
  1932  021B  1283               	bcf	3,5	;RP0=0, select bank0
  1933  021C  300B               	movlw	11
  1934  021D  1303               	bcf	3,6	;RP1=0, select bank0
  1935  021E  0AC5               	incf	Filter@j,f
  1936  021F  0245               	subwf	Filter@j,w
  1937  0220  1C03               	skipc
  1938  0221  29D8               	goto	l3461
  1939                           
  1940                           ;common.c: 84: }
  1941                           ;common.c: 85: }
  1942                           ;common.c: 86: }
  1943                           ;common.c: 88: for(i = 2; i < 12 - 2; i++)
  1944  0222  3002               	movlw	2
  1945  0223  00C6               	movwf	Filter@i
  1946                           
  1947                           ;common.c: 89: {
  1948                           ;common.c: 90: filter_sum += filter_buf[i];
  1949  0224  1003               	clrc
  1950  0225                     L12:	
  1951  0225  0D46               	rlf	Filter@i,w
  1952  0226  3E26               	addlw	Filter@filter_buf& (0+255)
  1953  0227  2242  118A         	fcall	PL3	;call to abstracted procedure
  1954  0229  0822               	movf	??_Filter,w
  1955  022A  07C0               	addwf	Filter@filter_sum,f
  1956  022B  1803               	skipnc
  1957  022C  0AC1               	incf	Filter@filter_sum+1,f
  1958  022D  0823               	movf	??_Filter+1,w
  1959  022E  07C1               	addwf	Filter@filter_sum+1,f
  1960  022F  300A               	movlw	10
  1961  0230  0AC6               	incf	Filter@i,f
  1962  0231  0246               	subwf	Filter@i,w
  1963  0232  1C03               	skipc
  1964  0233  2A25               	goto	L12
  1965                           
  1966                           ;common.c: 91: }
  1967                           ;common.c: 93: return (filter_sum >> 3);
  1968  0234  0841               	movf	Filter@filter_sum+1,w
  1969  0235  00A1               	movwf	?_Filter+1
  1970  0236  0840               	movf	Filter@filter_sum,w
  1971  0237  00A0               	movwf	?_Filter
  1972  0238  1003               	clrc
  1973  0239  0CA1               	rrf	?_Filter+1,f
  1974  023A  0CA0               	rrf	?_Filter,f
  1975  023B  1003               	clrc
  1976  023C  0CA1               	rrf	?_Filter+1,f
  1977  023D  0CA0               	rrf	?_Filter,f
  1978  023E  1003               	clrc
  1979  023F  0CA1               	rrf	?_Filter+1,f
  1980  0240  0CA0               	rrf	?_Filter,f
  1981  0241  0008               	return
  1982  0242                     __end_of_Filter:	
  1983  0242                     PL3:	
  1984  0242  0084               	movwf	4
  1985  0243  1383               	bcf	3,7	;select IRP bank0
  1986  0244  0800               	movf	0,w
  1987  0245  00A2               	movwf	??_Filter
  1988  0246  0A84               	incf	4,f
  1989  0247  0800               	movf	0,w
  1990  0248  00A3               	movwf	??_Filter+1
  1991  0249  0008               	return
  1992  024A                     PL5:	
  1993  024A  3E26               	addlw	Filter@filter_buf& (0+255)
  1994  024B  0084               	movwf	4
  1995  024C  0822               	movf	??_Filter,w
  1996  024D  0080               	movwf	0
  1997  024E  0A84               	incf	4,f
  1998  024F  0823               	movf	??_Filter+1,w
  1999  0250  0080               	movwf	0
  2000  0251  0008               	return
  2001  0252                     PL6:	
  2002  0252  1003               	clrc
  2003  0253  0D46               	rlf	Filter@i,w
  2004  0254  3E02               	addlw	2
  2005  0255  3E26               	addlw	Filter@filter_buf& (0+255)
  2006  0256  0084               	movwf	4
  2007  0257  0008               	return
  2008                           
  2009                           	psect	text836
  2010  033B                     __ptext836:	
  2011 ;; =============== function _getAdOriginalCh13Value ends ============
  2012                           
  2013                           
  2014 ;; *************** function _process_AD_Converter_Value *****************
  2015 ;; Defined at:
  2016 ;;		line 260 in file "D:\develop\190625\AK7030-OTP\common.c"
  2017 ;; Parameters:    Size  Location     Type
  2018 ;;		None
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;		None
  2021 ;; Return value:  Size  Location     Type
  2022 ;;		None               void
  2023 ;; Registers used:
  2024 ;;		wreg, status,2, status,0, pclath, cstack
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 60/0
  2028 ;;		Unchanged: FFF9F/0
  2029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2030 ;;      Params:         0       0       0       0       0
  2031 ;;      Locals:         0       0       0       0       0
  2032 ;;      Temps:          0       0       0       0       0
  2033 ;;      Totals:         0       0       0       0       0
  2034 ;;Total ram usage:        0 bytes
  2035 ;; Hardware stack levels used:    1
  2036 ;; Hardware stack levels required when called:    3
  2037 ;; This function calls:
  2038 ;;		_getAD_ConvertFlag
  2039 ;;		_setAD_ConvertFlag
  2040 ;;		_AD_Sample
  2041 ;;		_adc_test_init
  2042 ;;		_adc_start
  2043 ;; This function is called by:
  2044 ;;		_main
  2045 ;; This function uses a non-reentrant model
  2046 ;;
  2047  033B                     _process_AD_Converter_Value:	
  2048                           
  2049                           ;common.c: 261: if(getAD_ConvertFlag())
  2050                           
  2051                           ; Regs used in _process_AD_Converter_Value: [wreg+status,2+status,0+pclath+cstack]
  2052  033B  2351  118A         	fcall	_getAD_ConvertFlag
  2053  033D  3A00               	xorlw	0
  2054  033E  1903               	skipnz
  2055  033F  0008               	return
  2056                           
  2057                           ;common.c: 262: {
  2058                           ;common.c: 263: setAD_ConvertFlag(0);
  2059  0340  3000               	movlw	0
  2060  0341  2355  118A         	fcall	_setAD_ConvertFlag
  2061                           
  2062                           ;common.c: 264: AD_Sample();
  2063  0343  2358  118A         	fcall	_AD_Sample
  2064                           
  2065                           ;common.c: 265: if(12 == sampleChannelSelect)
  2066  0345  086F               	movf	_sampleChannelSelect,w
  2067  0346  3A0C               	xorlw	12
  2068                           
  2069                           ;common.c: 266: adc_test_init(12,3);
  2070  0347  3003               	movlw	3
  2071  0348  00A0               	movwf	?_adc_test_init
  2072  0349  1D03               	skipz
  2073  034A  2B4D               	goto	L11
  2074  034B  300C               	movlw	12
  2075  034C  2B4E               	goto	L10
  2076  034D                     L11:	
  2077                           ;common.c: 269: else
  2078                           ;common.c: 270: adc_test_init(13,3);
  2079                           
  2080  034D  300D               	movlw	13
  2081  034E                     L10:	
  2082  034E  236C  118A         	fcall	_adc_test_init
  2083                           
  2084                           ;common.c: 272: adc_start();
  2085  0350  2B81               	ljmp	l3327
  2086  0351                     __end_of_process_AD_Converter_Value:	
  2087  0351                     __ptext842:	
  2088 ;; =============== function _setAD_ConvertFlag ends ============
  2089                           
  2090                           
  2091 ;; *************** function _getAD_ConvertFlag *****************
  2092 ;; Defined at:
  2093 ;;		line 209 in file "D:\develop\190625\AK7030-OTP\common.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;		None
  2096 ;; Auto vars:     Size  Location     Type
  2097 ;;		None
  2098 ;; Return value:  Size  Location     Type
  2099 ;;                  1    wreg      unsigned char 
  2100 ;; Registers used:
  2101 ;;		wreg
  2102 ;; Tracked objects:
  2103 ;;		On entry : 0/0
  2104 ;;		On exit  : 60/0
  2105 ;;		Unchanged: FFF9F/0
  2106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2107 ;;      Params:         0       0       0       0       0
  2108 ;;      Locals:         0       0       0       0       0
  2109 ;;      Temps:          0       0       0       0       0
  2110 ;;      Totals:         0       0       0       0       0
  2111 ;;Total ram usage:        0 bytes
  2112 ;; Hardware stack levels used:    1
  2113 ;; Hardware stack levels required when called:    2
  2114 ;; This function calls:
  2115 ;;		Nothing
  2116 ;; This function is called by:
  2117 ;;		_process_AD_Converter_Value
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120  0351                     _getAD_ConvertFlag:	
  2121                           
  2122                           ;common.c: 210: return adc_convert_flag;
  2123                           
  2124                           ; Regs used in _getAD_ConvertFlag: [wreg]
  2125  0351  1283               	bcf	3,5	;RP0=0, select bank0
  2126  0352  1303               	bcf	3,6	;RP1=0, select bank0
  2127  0353  0861               	movf	_adc_convert_flag,w
  2128  0354  0008               	return
  2129  0355                     __end_of_getAD_ConvertFlag:	
  2130  0355                     __ptext841:	
  2131 ;; =============== function _AD_Sample ends ============
  2132                           
  2133                           
  2134 ;; *************** function _setAD_ConvertFlag *****************
  2135 ;; Defined at:
  2136 ;;		line 215 in file "D:\develop\190625\AK7030-OTP\common.c"
  2137 ;; Parameters:    Size  Location     Type
  2138 ;;  flag            1    wreg     unsigned char 
  2139 ;; Auto vars:     Size  Location     Type
  2140 ;;  flag            1    0[BANK0 ] unsigned char 
  2141 ;; Return value:  Size  Location     Type
  2142 ;;		None               void
  2143 ;; Registers used:
  2144 ;;		wreg
  2145 ;; Tracked objects:
  2146 ;;		On entry : 60/0
  2147 ;;		On exit  : 60/0
  2148 ;;		Unchanged: FFF9F/0
  2149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2150 ;;      Params:         0       0       0       0       0
  2151 ;;      Locals:         0       1       0       0       0
  2152 ;;      Temps:          0       0       0       0       0
  2153 ;;      Totals:         0       1       0       0       0
  2154 ;;Total ram usage:        1 bytes
  2155 ;; Hardware stack levels used:    1
  2156 ;; Hardware stack levels required when called:    2
  2157 ;; This function calls:
  2158 ;;		Nothing
  2159 ;; This function is called by:
  2160 ;;		_process_AD_Converter_Value
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163  0355                     _setAD_ConvertFlag:	
  2164                           
  2165                           ; Regs used in _setAD_ConvertFlag: [wreg]
  2166                           ;setAD_ConvertFlag@flag stored from wreg
  2167  0355  00A0               	movwf	setAD_ConvertFlag@flag
  2168                           
  2169                           ;common.c: 216: adc_convert_flag = flag;
  2170  0356  00E1               	movwf	_adc_convert_flag
  2171  0357  0008               	return
  2172  0358                     __end_of_setAD_ConvertFlag:	
  2173  0358                     __ptext840:	
  2174 ;; =============== function _initPin ends ============
  2175                           
  2176                           
  2177 ;; *************** function _AD_Sample *****************
  2178 ;; Defined at:
  2179 ;;		line 286 in file "D:\develop\190625\AK7030-OTP\common.c"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;		None
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;		None
  2184 ;; Return value:  Size  Location     Type
  2185 ;;		None               void
  2186 ;; Registers used:
  2187 ;;		wreg, status,2, status,0
  2188 ;; Tracked objects:
  2189 ;;		On entry : 60/0
  2190 ;;		On exit  : 60/0
  2191 ;;		Unchanged: FFF9F/0
  2192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2193 ;;      Params:         0       0       0       0       0
  2194 ;;      Locals:         0       0       0       0       0
  2195 ;;      Temps:          0       0       0       0       0
  2196 ;;      Totals:         0       0       0       0       0
  2197 ;;Total ram usage:        0 bytes
  2198 ;; Hardware stack levels used:    1
  2199 ;; Hardware stack levels required when called:    2
  2200 ;; This function calls:
  2201 ;;		Nothing
  2202 ;; This function is called by:
  2203 ;;		_process_AD_Converter_Value
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206  0358                     _AD_Sample:	
  2207                           
  2208                           ;common.c: 287: if(sampleTimes < 12)
  2209                           
  2210                           ; Regs used in _AD_Sample: [wreg+status,2+status,0]
  2211  0358  300C               	movlw	12
  2212  0359  0266               	subwf	_sampleTimes,w
  2213  035A  1803               	skipnc
  2214  035B  0008               	return
  2215  035C  300C               	movlw	12
  2216                           
  2217                           ;common.c: 288: {
  2218                           ;common.c: 309: sampleTimes++;
  2219  035D  0AE6               	incf	_sampleTimes,f
  2220                           
  2221                           ;common.c: 311: if(sampleTimes >= 12)
  2222  035E  0266               	subwf	_sampleTimes,w
  2223  035F  1C03               	skipc
  2224  0360  0008               	return
  2225                           
  2226                           ;common.c: 312: {
  2227                           ;common.c: 313: sampleTimes = 0;
  2228  0361  01E6               	clrf	_sampleTimes
  2229                           
  2230                           ;common.c: 315: if(sampleChannelSelect == 12)
  2231  0362  086F               	movf	_sampleChannelSelect,w
  2232  0363  3A0C               	xorlw	12
  2233  0364  1D03               	skipz
  2234  0365  2B69               	goto	l3557
  2235                           
  2236                           ;common.c: 316: {
  2237                           ;common.c: 319: sampleChannelSelect = 13;
  2238  0366  300D               	movlw	13
  2239  0367  00EF               	movwf	_sampleChannelSelect
  2240                           
  2241                           ;common.c: 320: }
  2242  0368  0008               	return
  2243  0369                     l3557:	
  2244                           
  2245                           ;common.c: 331: else
  2246                           ;common.c: 332: {
  2247                           ;common.c: 334: sampleChannelSelect = 12;
  2248  0369  300C               	movlw	12
  2249  036A  00EF               	movwf	_sampleChannelSelect
  2250  036B  0008               	return
  2251  036C                     __end_of_AD_Sample:	
  2252  036C                     __ptext856:	
  2253 ;; =============== function _adc_start ends ============
  2254                           
  2255                           
  2256 ;; *************** function _adc_test_init *****************
  2257 ;; Defined at:
  2258 ;;		line 85 in file "D:\develop\190625\AK7030-OTP\periph.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;  channel         1    wreg     unsigned char 
  2261 ;;  ref             1    0[BANK0 ] unsigned char 
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;  channel         1    2[BANK0 ] unsigned char 
  2264 ;; Return value:  Size  Location     Type
  2265 ;;		None               void
  2266 ;; Registers used:
  2267 ;;		wreg, status,2, status,0
  2268 ;; Tracked objects:
  2269 ;;		On entry : 60/0
  2270 ;;		On exit  : 60/20
  2271 ;;		Unchanged: FFF9F/0
  2272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2273 ;;      Params:         0       1       0       0       0
  2274 ;;      Locals:         0       1       0       0       0
  2275 ;;      Temps:          0       1       0       0       0
  2276 ;;      Totals:         0       3       0       0       0
  2277 ;;Total ram usage:        3 bytes
  2278 ;; Hardware stack levels used:    1
  2279 ;; Hardware stack levels required when called:    2
  2280 ;; This function calls:
  2281 ;;		Nothing
  2282 ;; This function is called by:
  2283 ;;		_main
  2284 ;;		_process_AD_Converter_Value
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287  036C                     _adc_test_init:	
  2288                           
  2289                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  2290                           ;adc_test_init@channel stored from wreg
  2291  036C  00A2               	movwf	adc_test_init@channel
  2292                           
  2293                           ;periph.c: 86: ADCON0 = 0x00;
  2294  036D  019F               	clrf	31	;volatile
  2295                           
  2296                           ;periph.c: 87: ADCON0|=channel<<2;
  2297  036E  00A1               	movwf	??_adc_test_init
  2298  036F  1003               	clrc
  2299  0370  0DA1               	rlf	??_adc_test_init,f
  2300  0371  1003               	clrc
  2301  0372  0D21               	rlf	??_adc_test_init,w
  2302  0373  049F               	iorwf	31,f	;volatile
  2303                           
  2304                           ;periph.c: 88: ADCON1|=ref<<6;
  2305  0374  0820               	movf	adc_test_init@ref,w
  2306  0375  00A1               	movwf	??_adc_test_init
  2307  0376  0CA1               	rrf	??_adc_test_init,f
  2308  0377  0CA1               	rrf	??_adc_test_init,f
  2309  0378  0C21               	rrf	??_adc_test_init,w
  2310  0379  39C0               	andlw	192
  2311  037A  1683               	bsf	3,5	;RP0=1, select bank1
  2312  037B  049F               	iorwf	31,f	;volatile
  2313                           
  2314                           ;periph.c: 89: ADON=1;
  2315  037C  1283               	bcf	3,5	;RP0=0, select bank0
  2316  037D  141F               	bsf	31,0
  2317                           
  2318                           ;periph.c: 90: ADIE=1;
  2319  037E  1683               	bsf	3,5	;RP0=1, select bank1
  2320  037F  150D               	bsf	13,2
  2321  0380  0008               	return
  2322  0381                     __end_of_adc_test_init:	
  2323  0381                     __ptext855:	
  2324 ;; =============== function _startTwentyMinTimer ends ============
  2325                           
  2326                           
  2327 ;; *************** function _adc_start *****************
  2328 ;; Defined at:
  2329 ;;		line 100 in file "D:\develop\190625\AK7030-OTP\periph.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;		None
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;		None
  2334 ;; Return value:  Size  Location     Type
  2335 ;;		None               void
  2336 ;; Registers used:
  2337 ;;		None
  2338 ;; Tracked objects:
  2339 ;;		On entry : 60/20
  2340 ;;		On exit  : 60/0
  2341 ;;		Unchanged: FFF9F/0
  2342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2343 ;;      Params:         0       0       0       0       0
  2344 ;;      Locals:         0       0       0       0       0
  2345 ;;      Temps:          0       0       0       0       0
  2346 ;;      Totals:         0       0       0       0       0
  2347 ;;Total ram usage:        0 bytes
  2348 ;; Hardware stack levels used:    1
  2349 ;; Hardware stack levels required when called:    2
  2350 ;; This function calls:
  2351 ;;		Nothing
  2352 ;; This function is called by:
  2353 ;;		_main
  2354 ;;		_process_AD_Converter_Value
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357  0381                     _adc_start:	
  2358  0381                     l3327:	
  2359                           ; Regs used in _adc_start: []
  2360                           
  2361                           
  2362                           ;periph.c: 101: GO=1;
  2363  0381  1283               	bcf	3,5	;RP0=0, select bank0
  2364  0382  149F               	bsf	31,1
  2365  0383  0008               	return
  2366  0384                     __end_of_adc_start:	
  2367                           
  2368                           	psect	text838
  2369  03DA                     __ptext838:	
  2370 ;; =============== function _getAdOriginalCh12Value ends ============
  2371                           
  2372                           
  2373 ;; *************** function _setPinInitVaule *****************
  2374 ;; Defined at:
  2375 ;;		line 340 in file "D:\develop\190625\AK7030-OTP\main.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;		None
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;		None
  2380 ;; Return value:  Size  Location     Type
  2381 ;;		None               void
  2382 ;; Registers used:
  2383 ;;		wreg, status,2, status,0, pclath, cstack
  2384 ;; Tracked objects:
  2385 ;;		On entry : 17F/20
  2386 ;;		On exit  : 17F/0
  2387 ;;		Unchanged: FFE80/0
  2388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2389 ;;      Params:         0       0       0       0       0
  2390 ;;      Locals:         0       0       0       0       0
  2391 ;;      Temps:          0       0       0       0       0
  2392 ;;      Totals:         0       0       0       0       0
  2393 ;;Total ram usage:        0 bytes
  2394 ;; Hardware stack levels used:    1
  2395 ;; Hardware stack levels required when called:    3
  2396 ;; This function calls:
  2397 ;;		_setPB3
  2398 ;;		_setPB4
  2399 ;;		_setPB5
  2400 ;; This function is called by:
  2401 ;;		_main
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404  03DA                     _setPinInitVaule:	
  2405                           
  2406                           ;main.c: 342: setPB3(1);
  2407                           
  2408                           ; Regs used in _setPinInitVaule: [wreg+status,2+status,0+pclath+cstack]
  2409  03DA  3001               	movlw	1
  2410  03DB  23E2  118A         	fcall	_setPB3
  2411                           
  2412                           ;main.c: 343: setPB4(0);
  2413  03DD  3000               	movlw	0
  2414  03DE  23EC  118A         	fcall	_setPB4
  2415                           
  2416                           ;main.c: 344: setPB5(1);
  2417  03E0  3001               	movlw	1
  2418  03E1  2BF4               	ljmp	_setPB5
  2419  03E2                     __end_of_setPinInitVaule:	
  2420  03E2                     __ptext869:	
  2421 ;; =============== function _initPB4 ends ============
  2422                           
  2423                           
  2424 ;; *************** function _setPB3 *****************
  2425 ;; Defined at:
  2426 ;;		line 143 in file "D:\develop\190625\AK7030-OTP\main.c"
  2427 ;; Parameters:    Size  Location     Type
  2428 ;;  bValue          1    wreg     unsigned char 
  2429 ;; Auto vars:     Size  Location     Type
  2430 ;;  bValue          1    0[BANK0 ] unsigned char 
  2431 ;; Return value:  Size  Location     Type
  2432 ;;		None               void
  2433 ;; Registers used:
  2434 ;;		wreg
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/60
  2437 ;;		On exit  : 60/0
  2438 ;;		Unchanged: FFF9F/0
  2439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2440 ;;      Params:         0       0       0       0       0
  2441 ;;      Locals:         0       1       0       0       0
  2442 ;;      Temps:          0       0       0       0       0
  2443 ;;      Totals:         0       1       0       0       0
  2444 ;;Total ram usage:        1 bytes
  2445 ;; Hardware stack levels used:    1
  2446 ;; Hardware stack levels required when called:    2
  2447 ;; This function calls:
  2448 ;;		Nothing
  2449 ;; This function is called by:
  2450 ;;		_setPinInitVaule
  2451 ;;		_main
  2452 ;; This function uses a non-reentrant model
  2453 ;;
  2454  03E2                     _setPB3:	
  2455                           
  2456                           ; Regs used in _setPB3: [wreg]
  2457                           ;setPB3@bValue stored from wreg
  2458  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  2459  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  2460  03E4  00A0               	movwf	setPB3@bValue
  2461                           
  2462                           ;main.c: 144: if( bValue )
  2463  03E5  0820               	movf	setPB3@bValue,w
  2464  03E6  1903               	btfsc	3,2
  2465  03E7  2BEA               	goto	l687
  2466                           
  2467                           ;main.c: 146: PB3 = 1;
  2468  03E8  1586               	bsf	6,3
  2469  03E9  0008               	return
  2470  03EA                     l687:	
  2471                           
  2472                           ;main.c: 150: else
  2473                           ;main.c: 152: PB3= 0;
  2474  03EA  1186               	bcf	6,3
  2475  03EB  0008               	return
  2476  03EC                     __end_of_setPB3:	
  2477  03EC                     __ptext867:	
  2478 ;; =============== function _initPB5 ends ============
  2479                           
  2480                           
  2481 ;; *************** function _setPB4 *****************
  2482 ;; Defined at:
  2483 ;;		line 178 in file "D:\develop\190625\AK7030-OTP\main.c"
  2484 ;; Parameters:    Size  Location     Type
  2485 ;;  bValue          1    wreg     unsigned char 
  2486 ;; Auto vars:     Size  Location     Type
  2487 ;;  bValue          1    0[BANK0 ] unsigned char 
  2488 ;; Return value:  Size  Location     Type
  2489 ;;		None               void
  2490 ;; Registers used:
  2491 ;;		wreg
  2492 ;; Tracked objects:
  2493 ;;		On entry : 60/0
  2494 ;;		On exit  : 60/0
  2495 ;;		Unchanged: FFF9F/0
  2496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2497 ;;      Params:         0       0       0       0       0
  2498 ;;      Locals:         0       1       0       0       0
  2499 ;;      Temps:          0       0       0       0       0
  2500 ;;      Totals:         0       1       0       0       0
  2501 ;;Total ram usage:        1 bytes
  2502 ;; Hardware stack levels used:    1
  2503 ;; Hardware stack levels required when called:    2
  2504 ;; This function calls:
  2505 ;;		Nothing
  2506 ;; This function is called by:
  2507 ;;		_setPinInitVaule
  2508 ;;		_main
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511  03EC                     _setPB4:	
  2512                           
  2513                           ; Regs used in _setPB4: [wreg]
  2514                           ;setPB4@bValue stored from wreg
  2515  03EC  00A0               	movwf	setPB4@bValue
  2516                           
  2517                           ;main.c: 179: if( bValue )
  2518  03ED  0820               	movf	setPB4@bValue,w
  2519  03EE  1903               	btfsc	3,2
  2520  03EF  2BF2               	goto	l697
  2521                           
  2522                           ;main.c: 181: PB4 = 1;
  2523  03F0  1606               	bsf	6,4
  2524  03F1  0008               	return
  2525  03F2                     l697:	
  2526                           
  2527                           ;main.c: 185: else
  2528                           ;main.c: 187: PB4= 0;
  2529  03F2  1206               	bcf	6,4
  2530  03F3  0008               	return
  2531  03F4                     __end_of_setPB4:	
  2532  03F4                     __ptext865:	
  2533 ;; =============== function _initPB2_AsHighResistence ends ============
  2534                           
  2535                           
  2536 ;; *************** function _setPB5 *****************
  2537 ;; Defined at:
  2538 ;;		line 212 in file "D:\develop\190625\AK7030-OTP\main.c"
  2539 ;; Parameters:    Size  Location     Type
  2540 ;;  bValue          1    wreg     unsigned char 
  2541 ;; Auto vars:     Size  Location     Type
  2542 ;;  bValue          1    0[BANK0 ] unsigned char 
  2543 ;; Return value:  Size  Location     Type
  2544 ;;		None               void
  2545 ;; Registers used:
  2546 ;;		wreg
  2547 ;; Tracked objects:
  2548 ;;		On entry : 60/0
  2549 ;;		On exit  : 60/0
  2550 ;;		Unchanged: FFF9F/0
  2551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2552 ;;      Params:         0       0       0       0       0
  2553 ;;      Locals:         0       1       0       0       0
  2554 ;;      Temps:          0       0       0       0       0
  2555 ;;      Totals:         0       1       0       0       0
  2556 ;;Total ram usage:        1 bytes
  2557 ;; Hardware stack levels used:    1
  2558 ;; Hardware stack levels required when called:    2
  2559 ;; This function calls:
  2560 ;;		Nothing
  2561 ;; This function is called by:
  2562 ;;		_setPinInitVaule
  2563 ;;		_main
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566  03F4                     _setPB5:	
  2567                           
  2568                           ; Regs used in _setPB5: [wreg]
  2569                           ;setPB5@bValue stored from wreg
  2570  03F4  00A0               	movwf	setPB5@bValue
  2571                           
  2572                           ;main.c: 213: if( bValue )
  2573  03F5  0820               	movf	setPB5@bValue,w
  2574  03F6  1903               	btfsc	3,2
  2575  03F7  2BFA               	goto	l707
  2576                           
  2577                           ;main.c: 215: PB5 = 1;
  2578  03F8  1686               	bsf	6,5
  2579  03F9  0008               	return
  2580  03FA                     l707:	
  2581                           
  2582                           ;main.c: 219: else
  2583                           ;main.c: 221: PB5= 0;
  2584  03FA  1286               	bcf	6,5
  2585  03FB  0008               	return
  2586  03FC                     __end_of_setPB5:	
  2587                           
  2588                           	psect	text839
  2589  0384                     __ptext839:	
  2590 ;; =============== function _setPinInitVaule ends ============
  2591                           
  2592                           
  2593 ;; *************** function _initPin *****************
  2594 ;; Defined at:
  2595 ;;		line 324 in file "D:\develop\190625\AK7030-OTP\main.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;		None
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;		None
  2600 ;; Return value:  Size  Location     Type
  2601 ;;		None               void
  2602 ;; Registers used:
  2603 ;;		wreg, status,2, status,0, pclath, cstack
  2604 ;; Tracked objects:
  2605 ;;		On entry : 17F/0
  2606 ;;		On exit  : 17F/20
  2607 ;;		Unchanged: FFE80/0
  2608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2609 ;;      Params:         0       0       0       0       0
  2610 ;;      Locals:         0       0       0       0       0
  2611 ;;      Temps:          0       0       0       0       0
  2612 ;;      Totals:         0       0       0       0       0
  2613 ;;Total ram usage:        0 bytes
  2614 ;; Hardware stack levels used:    1
  2615 ;; Hardware stack levels required when called:    3
  2616 ;; This function calls:
  2617 ;;		_initPB2_AsHighResistence
  2618 ;;		_initPB3
  2619 ;;		_initPB4
  2620 ;;		_initPB5
  2621 ;; This function is called by:
  2622 ;;		_main
  2623 ;; This function uses a non-reentrant model
  2624 ;;
  2625  0384                     _initPin:	
  2626                           
  2627                           ;main.c: 326: initPB2_AsHighResistence();
  2628                           
  2629                           ; Regs used in _initPin: [wreg+status,2+status,0+pclath+cstack]
  2630  0384  239A  118A         	fcall	_initPB2_AsHighResistence
  2631                           
  2632                           ;main.c: 328: initPB3(0);
  2633  0386  3000               	movlw	0
  2634  0387  238E  118A         	fcall	_initPB3
  2635                           
  2636                           ;main.c: 330: initPB4(0);
  2637  0389  3000               	movlw	0
  2638  038A  239F  118A         	fcall	_initPB4
  2639                           
  2640                           ;main.c: 332: initPB5(0);
  2641  038C  3000               	movlw	0
  2642  038D  2BAA               	ljmp	_initPB5
  2643  038E                     __end_of_initPin:	
  2644  038E                     __ptext870:	
  2645 ;; =============== function _setPB3 ends ============
  2646                           
  2647                           
  2648 ;; *************** function _initPB3 *****************
  2649 ;; Defined at:
  2650 ;;		line 126 in file "D:\develop\190625\AK7030-OTP\main.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;  bValue          1    wreg     unsigned char 
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;  bValue          1    0[BANK0 ] unsigned char 
  2655 ;; Return value:  Size  Location     Type
  2656 ;;		None               void
  2657 ;; Registers used:
  2658 ;;		wreg
  2659 ;; Tracked objects:
  2660 ;;		On entry : 17F/60
  2661 ;;		On exit  : 17F/20
  2662 ;;		Unchanged: FFE80/0
  2663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2664 ;;      Params:         0       0       0       0       0
  2665 ;;      Locals:         0       1       0       0       0
  2666 ;;      Temps:          0       0       0       0       0
  2667 ;;      Totals:         0       1       0       0       0
  2668 ;;Total ram usage:        1 bytes
  2669 ;; Hardware stack levels used:    1
  2670 ;; Hardware stack levels required when called:    2
  2671 ;; This function calls:
  2672 ;;		Nothing
  2673 ;; This function is called by:
  2674 ;;		_initPin
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677  038E                     _initPB3:	
  2678                           
  2679                           ; Regs used in _initPB3: [wreg]
  2680                           ;initPB3@bValue stored from wreg
  2681  038E  1283               	bcf	3,5	;RP0=0, select bank0
  2682  038F  1303               	bcf	3,6	;RP1=0, select bank0
  2683  0390  00A0               	movwf	initPB3@bValue
  2684                           
  2685                           ;main.c: 127: if( bValue )
  2686  0391  0820               	movf	initPB3@bValue,w
  2687  0392  1903               	btfsc	3,2
  2688  0393  2B97               	goto	l682
  2689                           
  2690                           ;main.c: 129: TRISB3 = 1;
  2691  0394  1683               	bsf	3,5	;RP0=1, select bank1
  2692  0395  1586               	bsf	6,3
  2693  0396  0008               	return
  2694  0397                     l682:	
  2695                           
  2696                           ;main.c: 133: else
  2697                           ;main.c: 135: TRISB3 = 0;
  2698  0397  1683               	bsf	3,5	;RP0=1, select bank1
  2699  0398  1186               	bcf	6,3
  2700  0399  0008               	return
  2701  039A                     __end_of_initPB3:	
  2702  039A                     __ptext864:	
  2703 ;; =============== function _pwm_start ends ============
  2704                           
  2705                           
  2706 ;; *************** function _initPB2_AsHighResistence *****************
  2707 ;; Defined at:
  2708 ;;		line 229 in file "D:\develop\190625\AK7030-OTP\main.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;		None
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;		None
  2713 ;; Return value:  Size  Location     Type
  2714 ;;		None               void
  2715 ;; Registers used:
  2716 ;;		None
  2717 ;; Tracked objects:
  2718 ;;		On entry : 17F/0
  2719 ;;		On exit  : 17F/60
  2720 ;;		Unchanged: FFE80/0
  2721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2722 ;;      Params:         0       0       0       0       0
  2723 ;;      Locals:         0       0       0       0       0
  2724 ;;      Temps:          0       0       0       0       0
  2725 ;;      Totals:         0       0       0       0       0
  2726 ;;Total ram usage:        0 bytes
  2727 ;; Hardware stack levels used:    1
  2728 ;; Hardware stack levels required when called:    2
  2729 ;; This function calls:
  2730 ;;		Nothing
  2731 ;; This function is called by:
  2732 ;;		_initPin
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735  039A                     _initPB2_AsHighResistence:	
  2736                           
  2737                           ;main.c: 231: PB2 = 1;
  2738                           
  2739                           ; Regs used in _initPB2_AsHighResistence: []
  2740  039A  1506               	bsf	6,2
  2741                           
  2742                           ;main.c: 232: PBOD2 = 1;
  2743  039B  1683               	bsf	3,5	;RP0=1, select bank3
  2744  039C  1703               	bsf	3,6	;RP1=1, select bank3
  2745  039D  1508               	bsf	8,2
  2746  039E  0008               	return
  2747  039F                     __end_of_initPB2_AsHighResistence:	
  2748  039F                     __ptext868:	
  2749 ;; =============== function _setPB4 ends ============
  2750                           
  2751                           
  2752 ;; *************** function _initPB4 *****************
  2753 ;; Defined at:
  2754 ;;		line 161 in file "D:\develop\190625\AK7030-OTP\main.c"
  2755 ;; Parameters:    Size  Location     Type
  2756 ;;  bValue          1    wreg     unsigned char 
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;  bValue          1    0[BANK0 ] unsigned char 
  2759 ;; Return value:  Size  Location     Type
  2760 ;;		None               void
  2761 ;; Registers used:
  2762 ;;		wreg
  2763 ;; Tracked objects:
  2764 ;;		On entry : 17F/20
  2765 ;;		On exit  : 17F/20
  2766 ;;		Unchanged: FFE80/0
  2767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2768 ;;      Params:         0       0       0       0       0
  2769 ;;      Locals:         0       1       0       0       0
  2770 ;;      Temps:          0       0       0       0       0
  2771 ;;      Totals:         0       1       0       0       0
  2772 ;;Total ram usage:        1 bytes
  2773 ;; Hardware stack levels used:    1
  2774 ;; Hardware stack levels required when called:    2
  2775 ;; This function calls:
  2776 ;;		Nothing
  2777 ;; This function is called by:
  2778 ;;		_initPin
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781  039F                     _initPB4:	
  2782                           
  2783                           ; Regs used in _initPB4: [wreg]
  2784                           ;initPB4@bValue stored from wreg
  2785  039F  1283               	bcf	3,5	;RP0=0, select bank0
  2786  03A0  00A0               	movwf	initPB4@bValue
  2787                           
  2788                           ;main.c: 162: if( bValue )
  2789  03A1  0820               	movf	initPB4@bValue,w
  2790  03A2  1903               	btfsc	3,2
  2791  03A3  2BA7               	goto	l692
  2792                           
  2793                           ;main.c: 164: TRISB4 = 1;
  2794  03A4  1683               	bsf	3,5	;RP0=1, select bank1
  2795  03A5  1606               	bsf	6,4
  2796  03A6  0008               	return
  2797  03A7                     l692:	
  2798                           
  2799                           ;main.c: 168: else
  2800                           ;main.c: 170: TRISB4= 0;
  2801  03A7  1683               	bsf	3,5	;RP0=1, select bank1
  2802  03A8  1206               	bcf	6,4
  2803  03A9  0008               	return
  2804  03AA                     __end_of_initPB4:	
  2805  03AA                     __ptext866:	
  2806 ;; =============== function _setPB5 ends ============
  2807                           
  2808                           
  2809 ;; *************** function _initPB5 *****************
  2810 ;; Defined at:
  2811 ;;		line 195 in file "D:\develop\190625\AK7030-OTP\main.c"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;  bValue          1    wreg     unsigned char 
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;  bValue          1    0[BANK0 ] unsigned char 
  2816 ;; Return value:  Size  Location     Type
  2817 ;;		None               void
  2818 ;; Registers used:
  2819 ;;		wreg
  2820 ;; Tracked objects:
  2821 ;;		On entry : 17F/20
  2822 ;;		On exit  : 17F/20
  2823 ;;		Unchanged: FFE80/0
  2824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2825 ;;      Params:         0       0       0       0       0
  2826 ;;      Locals:         0       1       0       0       0
  2827 ;;      Temps:          0       0       0       0       0
  2828 ;;      Totals:         0       1       0       0       0
  2829 ;;Total ram usage:        1 bytes
  2830 ;; Hardware stack levels used:    1
  2831 ;; Hardware stack levels required when called:    2
  2832 ;; This function calls:
  2833 ;;		Nothing
  2834 ;; This function is called by:
  2835 ;;		_initPin
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838  03AA                     _initPB5:	
  2839                           
  2840                           ; Regs used in _initPB5: [wreg]
  2841                           ;initPB5@bValue stored from wreg
  2842  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  2843  03AB  00A0               	movwf	initPB5@bValue
  2844                           
  2845                           ;main.c: 196: if( bValue )
  2846  03AC  0820               	movf	initPB5@bValue,w
  2847  03AD  1903               	btfsc	3,2
  2848  03AE  2BB2               	goto	l702
  2849                           
  2850                           ;main.c: 198: TRISB5 = 1;
  2851  03AF  1683               	bsf	3,5	;RP0=1, select bank1
  2852  03B0  1686               	bsf	6,5
  2853  03B1  0008               	return
  2854  03B2                     l702:	
  2855                           
  2856                           ;main.c: 202: else
  2857                           ;main.c: 204: TRISB5= 0;
  2858  03B2  1683               	bsf	3,5	;RP0=1, select bank1
  2859  03B3  1286               	bcf	6,5
  2860  03B4  0008               	return
  2861  03B5                     __end_of_initPB5:	
  2862                           
  2863                           	psect	text844
  2864  0452                     __ptext844:	
  2865 ;; =============== function _Filter ends ============
  2866                           
  2867                           
  2868 ;; *************** function _isFinishedOneHoursTimer *****************
  2869 ;; Defined at:
  2870 ;;		line 507 in file "D:\develop\190625\AK7030-OTP\common.c"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;		None
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;		None
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  1    wreg      unsigned char 
  2877 ;; Registers used:
  2878 ;;		wreg, status,2, status,0
  2879 ;; Tracked objects:
  2880 ;;		On entry : 160/0
  2881 ;;		On exit  : 160/0
  2882 ;;		Unchanged: FFE9F/0
  2883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2884 ;;      Params:         0       0       0       0       0
  2885 ;;      Locals:         0       0       0       0       0
  2886 ;;      Temps:          0       0       0       0       0
  2887 ;;      Totals:         0       0       0       0       0
  2888 ;;Total ram usage:        0 bytes
  2889 ;; Hardware stack levels used:    1
  2890 ;; Hardware stack levels required when called:    2
  2891 ;; This function calls:
  2892 ;;		Nothing
  2893 ;; This function is called by:
  2894 ;;		_main
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897  0452                     _isFinishedOneHoursTimer:	
  2898                           
  2899                           ;common.c: 508: if((uiOneHourTimer == 0) && bOneHourTimerStartFlag)
  2900                           
  2901                           ; Regs used in _isFinishedOneHoursTimer: [wreg+status,2+status,0]
  2902  0452  0857               	movf	_uiOneHourTimer+1,w
  2903  0453  0456               	iorwf	_uiOneHourTimer,w
  2904  0454  1D03               	skipz
  2905  0455  3400               	retlw	0
  2906  0456  0863               	movf	_bOneHourTimerStartFlag,w
  2907  0457  1903               	btfsc	3,2
  2908  0458  3400               	retlw	0
  2909  0459  3001               	movlw	1
  2910                           
  2911                           ;common.c: 509: {
  2912                           ;common.c: 510: bOneHourTimerStartFlag = 0;
  2913  045A  01E3               	clrf	_bOneHourTimerStartFlag
  2914                           
  2915                           ;common.c: 511: return 1;
  2916  045B  0008               	return
  2917  045C                     __end_of_isFinishedOneHoursTimer:	
  2918                           ;common.c: 513: else
  2919                           ;common.c: 514: return 0;
  2920                           
  2921                           
  2922                           	psect	text845
  2923  040E                     __ptext845:	
  2924 ;; =============== function _isFinishedOneHoursTimer ends ============
  2925                           
  2926                           
  2927 ;; *************** function _startOneHoursTimer *****************
  2928 ;; Defined at:
  2929 ;;		line 424 in file "D:\develop\190625\AK7030-OTP\common.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  2932 ;; Auto vars:     Size  Location     Type
  2933 ;;		None
  2934 ;; Return value:  Size  Location     Type
  2935 ;;		None               void
  2936 ;; Registers used:
  2937 ;;		wreg, status,2, status,0
  2938 ;; Tracked objects:
  2939 ;;		On entry : 60/0
  2940 ;;		On exit  : 60/0
  2941 ;;		Unchanged: FFF9F/0
  2942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2943 ;;      Params:         0       2       0       0       0
  2944 ;;      Locals:         0       0       0       0       0
  2945 ;;      Temps:          0       0       0       0       0
  2946 ;;      Totals:         0       2       0       0       0
  2947 ;;Total ram usage:        2 bytes
  2948 ;; Hardware stack levels used:    1
  2949 ;; Hardware stack levels required when called:    2
  2950 ;; This function calls:
  2951 ;;		Nothing
  2952 ;; This function is called by:
  2953 ;;		_main
  2954 ;; This function uses a non-reentrant model
  2955 ;;
  2956  040E                     _startOneHoursTimer:	
  2957                           
  2958                           ;common.c: 425: if(( 0 == uiOneHourTimer ) && ( 0 == bOneHourTimerStartFlag ))
  2959                           
  2960                           ; Regs used in _startOneHoursTimer: [wreg+status,2+status,0]
  2961  040E  0857               	movf	_uiOneHourTimer+1,w
  2962  040F  0456               	iorwf	_uiOneHourTimer,w
  2963  0410  1D03               	skipz
  2964  0411  0008               	return
  2965  0412  08E3               	movf	_bOneHourTimerStartFlag,f
  2966  0413  1D03               	skipz
  2967  0414  0008               	return
  2968                           
  2969                           ;common.c: 426: {
  2970                           ;common.c: 427: uiOneHourTimer = uiSetTime;
  2971  0415  0821               	movf	startOneHoursTimer@uiSetTime+1,w
  2972  0416  00D7               	movwf	_uiOneHourTimer+1
  2973  0417  0820               	movf	startOneHoursTimer@uiSetTime,w
  2974  0418  00D6               	movwf	_uiOneHourTimer
  2975                           
  2976                           ;common.c: 428: bOneHourTimerStartFlag = 1;
  2977  0419  01E3               	clrf	_bOneHourTimerStartFlag
  2978  041A  0AE3               	incf	_bOneHourTimerStartFlag,f
  2979  041B  0008               	return
  2980  041C                     __end_of_startOneHoursTimer:	
  2981                           
  2982                           	psect	text846
  2983  045C                     __ptext846:	
  2984 ;; =============== function _startOneHoursTimer ends ============
  2985                           
  2986                           
  2987 ;; *************** function _isFinishedThreeHoursTimer *****************
  2988 ;; Defined at:
  2989 ;;		line 494 in file "D:\develop\190625\AK7030-OTP\common.c"
  2990 ;; Parameters:    Size  Location     Type
  2991 ;;		None
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;		None
  2994 ;; Return value:  Size  Location     Type
  2995 ;;                  1    wreg      unsigned char 
  2996 ;; Registers used:
  2997 ;;		wreg, status,2, status,0
  2998 ;; Tracked objects:
  2999 ;;		On entry : 60/0
  3000 ;;		On exit  : 60/0
  3001 ;;		Unchanged: FFF9F/0
  3002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3003 ;;      Params:         0       0       0       0       0
  3004 ;;      Locals:         0       0       0       0       0
  3005 ;;      Temps:          0       0       0       0       0
  3006 ;;      Totals:         0       0       0       0       0
  3007 ;;Total ram usage:        0 bytes
  3008 ;; Hardware stack levels used:    1
  3009 ;; Hardware stack levels required when called:    2
  3010 ;; This function calls:
  3011 ;;		Nothing
  3012 ;; This function is called by:
  3013 ;;		_main
  3014 ;; This function uses a non-reentrant model
  3015 ;;
  3016  045C                     _isFinishedThreeHoursTimer:	
  3017                           
  3018                           ;common.c: 495: if((uiSmallTimer == 0) && bSmallTimerStartFlag)
  3019                           
  3020                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  3021  045C  0859               	movf	_uiSmallTimer+1,w
  3022  045D  0458               	iorwf	_uiSmallTimer,w
  3023  045E  1D03               	skipz
  3024  045F  3400               	retlw	0
  3025  0460  0864               	movf	_bSmallTimerStartFlag,w
  3026  0461  1903               	btfsc	3,2
  3027  0462  3400               	retlw	0
  3028  0463  3001               	movlw	1
  3029                           
  3030                           ;common.c: 496: {
  3031                           ;common.c: 497: bSmallTimerStartFlag = 0;
  3032  0464  01E4               	clrf	_bSmallTimerStartFlag
  3033                           
  3034                           ;common.c: 498: return 1;
  3035  0465  0008               	return
  3036  0466                     __end_of_isFinishedThreeHoursTimer:	
  3037                           ;common.c: 500: else
  3038                           ;common.c: 501: return 0;
  3039                           
  3040                           
  3041                           	psect	text847
  3042  041C                     __ptext847:	
  3043 ;; =============== function _isFinishedThreeHoursTimer ends ============
  3044                           
  3045                           
  3046 ;; *************** function _startThreeHoursTimer *****************
  3047 ;; Defined at:
  3048 ;;		line 411 in file "D:\develop\190625\AK7030-OTP\common.c"
  3049 ;; Parameters:    Size  Location     Type
  3050 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;		None
  3053 ;; Return value:  Size  Location     Type
  3054 ;;		None               void
  3055 ;; Registers used:
  3056 ;;		wreg, status,2, status,0
  3057 ;; Tracked objects:
  3058 ;;		On entry : 60/0
  3059 ;;		On exit  : 60/0
  3060 ;;		Unchanged: FFF9F/0
  3061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3062 ;;      Params:         0       2       0       0       0
  3063 ;;      Locals:         0       0       0       0       0
  3064 ;;      Temps:          0       0       0       0       0
  3065 ;;      Totals:         0       2       0       0       0
  3066 ;;Total ram usage:        2 bytes
  3067 ;; Hardware stack levels used:    1
  3068 ;; Hardware stack levels required when called:    2
  3069 ;; This function calls:
  3070 ;;		Nothing
  3071 ;; This function is called by:
  3072 ;;		_main
  3073 ;; This function uses a non-reentrant model
  3074 ;;
  3075  041C                     _startThreeHoursTimer:	
  3076                           
  3077                           ;common.c: 412: if(( 0 == uiSmallTimer ) && ( 0 == bSmallTimerStartFlag ))
  3078                           
  3079                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  3080  041C  0859               	movf	_uiSmallTimer+1,w
  3081  041D  0458               	iorwf	_uiSmallTimer,w
  3082  041E  1D03               	skipz
  3083  041F  0008               	return
  3084  0420  08E4               	movf	_bSmallTimerStartFlag,f
  3085  0421  1D03               	skipz
  3086  0422  0008               	return
  3087                           
  3088                           ;common.c: 413: {
  3089                           ;common.c: 414: uiSmallTimer = uiSetTime;
  3090  0423  0821               	movf	startThreeHoursTimer@uiSetTime+1,w
  3091  0424  00D9               	movwf	_uiSmallTimer+1
  3092  0425  0820               	movf	startThreeHoursTimer@uiSetTime,w
  3093  0426  00D8               	movwf	_uiSmallTimer
  3094                           
  3095                           ;common.c: 415: bSmallTimerStartFlag = 1;
  3096  0427  01E4               	clrf	_bSmallTimerStartFlag
  3097  0428  0AE4               	incf	_bSmallTimerStartFlag,f
  3098  0429  0008               	return
  3099  042A                     __end_of_startThreeHoursTimer:	
  3100                           
  3101                           	psect	text848
  3102  0466                     __ptext848:	
  3103 ;; =============== function _startThreeHoursTimer ends ============
  3104                           
  3105                           
  3106 ;; *************** function _isFinishedTwelveHoursTimer *****************
  3107 ;; Defined at:
  3108 ;;		line 483 in file "D:\develop\190625\AK7030-OTP\common.c"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;		None
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;		None
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  1    wreg      unsigned char 
  3115 ;; Registers used:
  3116 ;;		wreg, status,2, status,0
  3117 ;; Tracked objects:
  3118 ;;		On entry : 60/0
  3119 ;;		On exit  : 60/0
  3120 ;;		Unchanged: FFF9F/0
  3121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3122 ;;      Params:         0       0       0       0       0
  3123 ;;      Locals:         0       0       0       0       0
  3124 ;;      Temps:          0       0       0       0       0
  3125 ;;      Totals:         0       0       0       0       0
  3126 ;;Total ram usage:        0 bytes
  3127 ;; Hardware stack levels used:    1
  3128 ;; Hardware stack levels required when called:    2
  3129 ;; This function calls:
  3130 ;;		Nothing
  3131 ;; This function is called by:
  3132 ;;		_main
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135  0466                     _isFinishedTwelveHoursTimer:	
  3136                           
  3137                           ;common.c: 484: if(( uiBigTimer == 0 ) && bBigTimerStartFlag )
  3138                           
  3139                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  3140  0466  0855               	movf	_uiBigTimer+1,w
  3141  0467  0454               	iorwf	_uiBigTimer,w
  3142  0468  1D03               	skipz
  3143  0469  3400               	retlw	0
  3144  046A  0862               	movf	_bBigTimerStartFlag,w
  3145  046B  1903               	btfsc	3,2
  3146  046C  3400               	retlw	0
  3147  046D  3001               	movlw	1
  3148                           
  3149                           ;common.c: 485: {
  3150                           ;common.c: 486: bBigTimerStartFlag = 0;
  3151  046E  01E2               	clrf	_bBigTimerStartFlag
  3152                           
  3153                           ;common.c: 487: return 1;
  3154  046F  0008               	return
  3155  0470                     __end_of_isFinishedTwelveHoursTimer:	
  3156                           ;common.c: 489: else
  3157                           ;common.c: 490: return 0;
  3158                           
  3159                           
  3160                           	psect	text849
  3161  042A                     __ptext849:	
  3162 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  3163                           
  3164                           
  3165 ;; *************** function _startTwelveHourTimer *****************
  3166 ;; Defined at:
  3167 ;;		line 363 in file "D:\develop\190625\AK7030-OTP\common.c"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;		None
  3172 ;; Return value:  Size  Location     Type
  3173 ;;		None               void
  3174 ;; Registers used:
  3175 ;;		wreg, status,2, status,0
  3176 ;; Tracked objects:
  3177 ;;		On entry : 160/0
  3178 ;;		On exit  : 160/0
  3179 ;;		Unchanged: FFE9F/0
  3180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3181 ;;      Params:         0       2       0       0       0
  3182 ;;      Locals:         0       0       0       0       0
  3183 ;;      Temps:          0       0       0       0       0
  3184 ;;      Totals:         0       2       0       0       0
  3185 ;;Total ram usage:        2 bytes
  3186 ;; Hardware stack levels used:    1
  3187 ;; Hardware stack levels required when called:    2
  3188 ;; This function calls:
  3189 ;;		Nothing
  3190 ;; This function is called by:
  3191 ;;		_main
  3192 ;; This function uses a non-reentrant model
  3193 ;;
  3194  042A                     _startTwelveHourTimer:	
  3195                           
  3196                           ;common.c: 364: if((0 == uiBigTimer) && ( 0 == bBigTimerStartFlag))
  3197                           
  3198                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  3199  042A  0855               	movf	_uiBigTimer+1,w
  3200  042B  0454               	iorwf	_uiBigTimer,w
  3201  042C  1D03               	skipz
  3202  042D  0008               	return
  3203  042E  08E2               	movf	_bBigTimerStartFlag,f
  3204  042F  1D03               	skipz
  3205  0430  0008               	return
  3206                           
  3207                           ;common.c: 365: {
  3208                           ;common.c: 366: uiBigTimer = uiSetTime;
  3209  0431  0821               	movf	startTwelveHourTimer@uiSetTime+1,w
  3210  0432  00D5               	movwf	_uiBigTimer+1
  3211  0433  0820               	movf	startTwelveHourTimer@uiSetTime,w
  3212  0434  00D4               	movwf	_uiBigTimer
  3213                           
  3214                           ;common.c: 367: bBigTimerStartFlag = 1;
  3215  0435  01E2               	clrf	_bBigTimerStartFlag
  3216  0436  0AE2               	incf	_bBigTimerStartFlag,f
  3217  0437  0008               	return
  3218  0438                     __end_of_startTwelveHourTimer:	
  3219                           
  3220                           	psect	text850
  3221  0499                     __ptext850:	
  3222 ;; =============== function _startTwelveHourTimer ends ============
  3223                           
  3224                           
  3225 ;; *************** function _clearTwentyMinTimer *****************
  3226 ;; Defined at:
  3227 ;;		line 404 in file "D:\develop\190625\AK7030-OTP\common.c"
  3228 ;; Parameters:    Size  Location     Type
  3229 ;;		None
  3230 ;; Auto vars:     Size  Location     Type
  3231 ;;		None
  3232 ;; Return value:  Size  Location     Type
  3233 ;;		None               void
  3234 ;; Registers used:
  3235 ;;		status,2
  3236 ;; Tracked objects:
  3237 ;;		On entry : 160/0
  3238 ;;		On exit  : 160/0
  3239 ;;		Unchanged: FFE9F/0
  3240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3241 ;;      Params:         0       0       0       0       0
  3242 ;;      Locals:         0       0       0       0       0
  3243 ;;      Temps:          0       0       0       0       0
  3244 ;;      Totals:         0       0       0       0       0
  3245 ;;Total ram usage:        0 bytes
  3246 ;; Hardware stack levels used:    1
  3247 ;; Hardware stack levels required when called:    2
  3248 ;; This function calls:
  3249 ;;		Nothing
  3250 ;; This function is called by:
  3251 ;;		_main
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254  0499                     _clearTwentyMinTimer:	
  3255                           
  3256                           ;common.c: 405: uiTwentyMinTimer = 0;
  3257                           
  3258                           ; Regs used in _clearTwentyMinTimer: [status,2]
  3259  0499  01DA               	clrf	_uiTwentyMinTimer
  3260  049A  01DB               	clrf	_uiTwentyMinTimer+1
  3261                           
  3262                           ;common.c: 406: bTwentyMinStartFlag = 0;
  3263  049B  01E5               	clrf	_bTwentyMinStartFlag
  3264  049C  0008               	return
  3265  049D                     __end_of_clearTwentyMinTimer:	
  3266                           
  3267                           	psect	text851
  3268  0470                     __ptext851:	
  3269 ;; =============== function _clearTwentyMinTimer ends ============
  3270                           
  3271                           
  3272 ;; *************** function _isFinishedTwentyMinTimer *****************
  3273 ;; Defined at:
  3274 ;;		line 459 in file "D:\develop\190625\AK7030-OTP\common.c"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;		None
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;		None
  3279 ;; Return value:  Size  Location     Type
  3280 ;;                  1    wreg      unsigned char 
  3281 ;; Registers used:
  3282 ;;		wreg, status,2, status,0
  3283 ;; Tracked objects:
  3284 ;;		On entry : 60/0
  3285 ;;		On exit  : 60/0
  3286 ;;		Unchanged: FFF9F/0
  3287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3288 ;;      Params:         0       0       0       0       0
  3289 ;;      Locals:         0       0       0       0       0
  3290 ;;      Temps:          0       0       0       0       0
  3291 ;;      Totals:         0       0       0       0       0
  3292 ;;Total ram usage:        0 bytes
  3293 ;; Hardware stack levels used:    1
  3294 ;; Hardware stack levels required when called:    2
  3295 ;; This function calls:
  3296 ;;		Nothing
  3297 ;; This function is called by:
  3298 ;;		_main
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301  0470                     _isFinishedTwentyMinTimer:	
  3302                           
  3303                           ;common.c: 460: if(( 0 == uiTwentyMinTimer ) && bTwentyMinStartFlag )
  3304                           
  3305                           ; Regs used in _isFinishedTwentyMinTimer: [wreg+status,2+status,0]
  3306  0470  085B               	movf	_uiTwentyMinTimer+1,w
  3307  0471  045A               	iorwf	_uiTwentyMinTimer,w
  3308  0472  1D03               	skipz
  3309  0473  3400               	retlw	0
  3310  0474  0865               	movf	_bTwentyMinStartFlag,w
  3311  0475  1903               	btfsc	3,2
  3312  0476  3400               	retlw	0
  3313  0477  3001               	movlw	1
  3314                           
  3315                           ;common.c: 461: {
  3316                           ;common.c: 462: bTwentyMinStartFlag = 0;
  3317  0478  01E5               	clrf	_bTwentyMinStartFlag
  3318                           
  3319                           ;common.c: 463: return 1;
  3320  0479  0008               	return
  3321  047A                     __end_of_isFinishedTwentyMinTimer:	
  3322                           ;common.c: 465: else
  3323                           ;common.c: 466: return 0;
  3324                           
  3325                           
  3326                           	psect	text852
  3327  04AC                     __ptext852:	
  3328 ;; =============== function _isFinishedTwentyMinTimer ends ============
  3329                           
  3330                           
  3331 ;; *************** function _clrSampeTime *****************
  3332 ;; Defined at:
  3333 ;;		line 529 in file "D:\develop\190625\AK7030-OTP\common.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;		None
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;		None
  3338 ;; Return value:  Size  Location     Type
  3339 ;;		None               void
  3340 ;; Registers used:
  3341 ;;		status,2
  3342 ;; Tracked objects:
  3343 ;;		On entry : 60/0
  3344 ;;		On exit  : 60/0
  3345 ;;		Unchanged: FFF9F/0
  3346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3347 ;;      Params:         0       0       0       0       0
  3348 ;;      Locals:         0       0       0       0       0
  3349 ;;      Temps:          0       0       0       0       0
  3350 ;;      Totals:         0       0       0       0       0
  3351 ;;Total ram usage:        0 bytes
  3352 ;; Hardware stack levels used:    1
  3353 ;; Hardware stack levels required when called:    2
  3354 ;; This function calls:
  3355 ;;		Nothing
  3356 ;; This function is called by:
  3357 ;;		_main
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360  04AC                     _clrSampeTime:	
  3361                           
  3362                           ;common.c: 530: timer.timer10msStopWatch = 0;
  3363                           
  3364                           ; Regs used in _clrSampeTime: [status,2]
  3365  04AC  01E7               	clrf	_timer
  3366  04AD  0008               	return
  3367  04AE                     __end_of_clrSampeTime:	
  3368                           
  3369                           	psect	text853
  3370  0494                     __ptext853:	
  3371 ;; =============== function _clrSampeTime ends ============
  3372                           
  3373                           
  3374 ;; *************** function _isPermitSampleTime *****************
  3375 ;; Defined at:
  3376 ;;		line 519 in file "D:\develop\190625\AK7030-OTP\common.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;		None
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;		None
  3381 ;; Return value:  Size  Location     Type
  3382 ;;                  1    wreg      unsigned char 
  3383 ;; Registers used:
  3384 ;;		wreg
  3385 ;; Tracked objects:
  3386 ;;		On entry : 60/0
  3387 ;;		On exit  : 60/0
  3388 ;;		Unchanged: FFF9F/0
  3389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3390 ;;      Params:         0       0       0       0       0
  3391 ;;      Locals:         0       0       0       0       0
  3392 ;;      Temps:          0       0       0       0       0
  3393 ;;      Totals:         0       0       0       0       0
  3394 ;;Total ram usage:        0 bytes
  3395 ;; Hardware stack levels used:    1
  3396 ;; Hardware stack levels required when called:    2
  3397 ;; This function calls:
  3398 ;;		Nothing
  3399 ;; This function is called by:
  3400 ;;		_main
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403  0494                     _isPermitSampleTime:	
  3404                           
  3405                           ;common.c: 520: if(timer.timer10msStopWatch >= 10)
  3406                           
  3407                           ; Regs used in _isPermitSampleTime: [wreg]
  3408  0494  300A               	movlw	10
  3409  0495  0267               	subwf	_timer,w
  3410  0496  1803               	btfsc	3,0
  3411                           
  3412                           ;common.c: 521: {
  3413                           ;common.c: 522: return 1;
  3414  0497  3401               	retlw	1
  3415                           
  3416                           ;common.c: 524: else
  3417                           ;common.c: 525: return 0;
  3418  0498  3400               	retlw	0
  3419  0499                     __end_of_isPermitSampleTime:	
  3420                           
  3421                           	psect	text854
  3422  0438                     __ptext854:	
  3423 ;; =============== function _isPermitSampleTime ends ============
  3424                           
  3425                           
  3426 ;; *************** function _startTwentyMinTimer *****************
  3427 ;; Defined at:
  3428 ;;		line 449 in file "D:\develop\190625\AK7030-OTP\common.c"
  3429 ;; Parameters:    Size  Location     Type
  3430 ;;  uiSetValue      2    0[BANK0 ] unsigned int 
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;		None
  3433 ;; Return value:  Size  Location     Type
  3434 ;;		None               void
  3435 ;; Registers used:
  3436 ;;		wreg, status,2, status,0
  3437 ;; Tracked objects:
  3438 ;;		On entry : 17F/0
  3439 ;;		On exit  : 17F/0
  3440 ;;		Unchanged: FFE80/0
  3441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3442 ;;      Params:         0       2       0       0       0
  3443 ;;      Locals:         0       0       0       0       0
  3444 ;;      Temps:          0       0       0       0       0
  3445 ;;      Totals:         0       2       0       0       0
  3446 ;;Total ram usage:        2 bytes
  3447 ;; Hardware stack levels used:    1
  3448 ;; Hardware stack levels required when called:    2
  3449 ;; This function calls:
  3450 ;;		Nothing
  3451 ;; This function is called by:
  3452 ;;		_main
  3453 ;; This function uses a non-reentrant model
  3454 ;;
  3455  0438                     _startTwentyMinTimer:	
  3456                           
  3457                           ;common.c: 450: if(( 0 == uiTwentyMinTimer) && ( 0 == bTwentyMinStartFlag))
  3458                           
  3459                           ; Regs used in _startTwentyMinTimer: [wreg+status,2+status,0]
  3460  0438  085B               	movf	_uiTwentyMinTimer+1,w
  3461  0439  045A               	iorwf	_uiTwentyMinTimer,w
  3462  043A  1D03               	skipz
  3463  043B  0008               	return
  3464  043C  08E5               	movf	_bTwentyMinStartFlag,f
  3465  043D  1D03               	skipz
  3466  043E  0008               	return
  3467                           
  3468                           ;common.c: 451: {
  3469                           ;common.c: 452: uiTwentyMinTimer = uiSetValue;
  3470  043F  0821               	movf	startTwentyMinTimer@uiSetValue+1,w
  3471  0440  00DB               	movwf	_uiTwentyMinTimer+1
  3472  0441  0820               	movf	startTwentyMinTimer@uiSetValue,w
  3473  0442  00DA               	movwf	_uiTwentyMinTimer
  3474                           
  3475                           ;common.c: 453: bTwentyMinStartFlag = 1;
  3476  0443  01E5               	clrf	_bTwentyMinStartFlag
  3477  0444  0AE5               	incf	_bTwentyMinStartFlag,f
  3478  0445  0008               	return
  3479  0446                     __end_of_startTwentyMinTimer:	
  3480                           
  3481                           	psect	text857
  3482  04A9                     __ptext857:	
  3483 ;; =============== function _adc_test_init ends ============
  3484                           
  3485                           
  3486 ;; *************** function _timer1_interrupt_config *****************
  3487 ;; Defined at:
  3488 ;;		line 201 in file "D:\develop\190625\AK7030-OTP\common.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;		None
  3491 ;; Auto vars:     Size  Location     Type
  3492 ;;		None
  3493 ;; Return value:  Size  Location     Type
  3494 ;;		None               void
  3495 ;; Registers used:
  3496 ;;		None
  3497 ;; Tracked objects:
  3498 ;;		On entry : 17F/20
  3499 ;;		On exit  : 17F/20
  3500 ;;		Unchanged: FFE80/0
  3501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3502 ;;      Params:         0       0       0       0       0
  3503 ;;      Locals:         0       0       0       0       0
  3504 ;;      Temps:          0       0       0       0       0
  3505 ;;      Totals:         0       0       0       0       0
  3506 ;;Total ram usage:        0 bytes
  3507 ;; Hardware stack levels used:    1
  3508 ;; Hardware stack levels required when called:    2
  3509 ;; This function calls:
  3510 ;;		Nothing
  3511 ;; This function is called by:
  3512 ;;		_main
  3513 ;; This function uses a non-reentrant model
  3514 ;;
  3515  04A9                     _timer1_interrupt_config:	
  3516                           
  3517                           ;common.c: 202: GIE = 1;
  3518                           
  3519                           ; Regs used in _timer1_interrupt_config: []
  3520  04A9  178B               	bsf	11,7
  3521                           
  3522                           ;common.c: 203: PEIE = 1;
  3523  04AA  170B               	bsf	11,6
  3524  04AB  0008               	return
  3525  04AC                     __end_of_timer1_interrupt_config:	
  3526                           
  3527                           	psect	text858
  3528  047A                     __ptext858:	
  3529 ;; =============== function _timer1_interrupt_config ends ============
  3530                           
  3531                           
  3532 ;; *************** function _timer1_config *****************
  3533 ;; Defined at:
  3534 ;;		line 189 in file "D:\develop\190625\AK7030-OTP\common.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;		None
  3537 ;; Auto vars:     Size  Location     Type
  3538 ;;		None
  3539 ;; Return value:  Size  Location     Type
  3540 ;;		None               void
  3541 ;; Registers used:
  3542 ;;		wreg
  3543 ;; Tracked objects:
  3544 ;;		On entry : 17F/40
  3545 ;;		On exit  : 17F/20
  3546 ;;		Unchanged: FFE80/0
  3547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3548 ;;      Params:         0       0       0       0       0
  3549 ;;      Locals:         0       0       0       0       0
  3550 ;;      Temps:          0       0       0       0       0
  3551 ;;      Totals:         0       0       0       0       0
  3552 ;;Total ram usage:        0 bytes
  3553 ;; Hardware stack levels used:    1
  3554 ;; Hardware stack levels required when called:    2
  3555 ;; This function calls:
  3556 ;;		Nothing
  3557 ;; This function is called by:
  3558 ;;		_main
  3559 ;; This function uses a non-reentrant model
  3560 ;;
  3561  047A                     _timer1_config:	
  3562                           
  3563                           ;common.c: 191: TMR1H=0xCF;
  3564                           
  3565                           ; Regs used in _timer1_config: [wreg]
  3566  047A  30CF               	movlw	207
  3567  047B  1303               	bcf	3,6	;RP1=0, select bank0
  3568  047C  008F               	movwf	15	;volatile
  3569                           
  3570                           ;common.c: 192: TMR1L=0x2C;
  3571  047D  302C               	movlw	44
  3572  047E  008E               	movwf	14	;volatile
  3573                           
  3574                           ;common.c: 193: T1CON=0xE1;
  3575  047F  30E1               	movlw	225
  3576  0480  0090               	movwf	16	;volatile
  3577                           
  3578                           ;common.c: 194: TMR1IE=1;
  3579  0481  1683               	bsf	3,5	;RP0=1, select bank1
  3580  0482  140C               	bsf	12,0
  3581  0483  0008               	return
  3582  0484                     __end_of_timer1_config:	
  3583                           
  3584                           	psect	text859
  3585  048C                     __ptext859:	
  3586 ;; =============== function _timer1_config ends ============
  3587                           
  3588                           
  3589 ;; *************** function _clock_config *****************
  3590 ;; Defined at:
  3591 ;;		line 181 in file "D:\develop\190625\AK7030-OTP\common.c"
  3592 ;; Parameters:    Size  Location     Type
  3593 ;;		None
  3594 ;; Auto vars:     Size  Location     Type
  3595 ;;		None
  3596 ;; Return value:  Size  Location     Type
  3597 ;;		None               void
  3598 ;; Registers used:
  3599 ;;		wreg, status,2
  3600 ;; Tracked objects:
  3601 ;;		On entry : 17F/20
  3602 ;;		On exit  : 17F/40
  3603 ;;		Unchanged: FFE80/0
  3604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3605 ;;      Params:         0       0       0       0       0
  3606 ;;      Locals:         0       0       0       0       0
  3607 ;;      Temps:          0       0       0       0       0
  3608 ;;      Totals:         0       0       0       0       0
  3609 ;;Total ram usage:        0 bytes
  3610 ;; Hardware stack levels used:    1
  3611 ;; Hardware stack levels required when called:    2
  3612 ;; This function calls:
  3613 ;;		Nothing
  3614 ;; This function is called by:
  3615 ;;		_main
  3616 ;; This function uses a non-reentrant model
  3617 ;;
  3618  048C                     _clock_config:	
  3619                           
  3620                           ;common.c: 183: CLKPR = 0x80;
  3621                           
  3622                           ; Regs used in _clock_config: [wreg+status,2]
  3623  048C  3080               	movlw	128
  3624  048D  1283               	bcf	3,5	;RP0=0, select bank2
  3625  048E  1703               	bsf	3,6	;RP1=1, select bank2
  3626  048F  0088               	movwf	8	;volatile
  3627                           
  3628                           ;common.c: 184: CLKPR = 0x00;
  3629  0490  0188               	clrf	8	;volatile
  3630  0491                     l1517:	
  3631                           ;common.c: 185: while(CLKPCE);
  3632                           
  3633  0491  1F88               	btfss	8,7
  3634  0492  0008               	return
  3635  0493  2C91               	goto	l1517
  3636  0494                     __end_of_clock_config:	
  3637                           
  3638                           	psect	text860
  3639  04AE                     __ptext860:	
  3640 ;; =============== function _clock_config ends ============
  3641                           
  3642                           
  3643 ;; *************** function _reset *****************
  3644 ;; Defined at:
  3645 ;;		line 362 in file "D:\develop\190625\AK7030-OTP\main.c"
  3646 ;; Parameters:    Size  Location     Type
  3647 ;;		None
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;		None
  3650 ;; Return value:  Size  Location     Type
  3651 ;;		None               void
  3652 ;; Registers used:
  3653 ;;		None
  3654 ;; Tracked objects:
  3655 ;;		On entry : 60/0
  3656 ;;		On exit  : 60/0
  3657 ;;		Unchanged: FFFFFF9F/0
  3658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3659 ;;      Params:         0       0       0       0       0
  3660 ;;      Locals:         0       0       0       0       0
  3661 ;;      Temps:          0       0       0       0       0
  3662 ;;      Totals:         0       0       0       0       0
  3663 ;;Total ram usage:        0 bytes
  3664 ;; Hardware stack levels used:    1
  3665 ;; Hardware stack levels required when called:    2
  3666 ;; This function calls:
  3667 ;;		Nothing
  3668 ;; This function is called by:
  3669 ;;		_main
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672  04AE                     _reset:	
  3673  04AE                     l735:	
  3674                           ; Regs used in _reset: []
  3675                           ;main.c: 364: while(1);
  3676                           
  3677  04AE  2CAE               	goto	l735
  3678                           
  3679                           	psect	text861
  3680  049D                     __ptext861:	
  3681  049D                     __end_of_reset:	
  3682                           
  3683 ;; =============== function _reset ends ============
  3684 ;; *************** function _selectAdChannel *****************
  3685 ;; Defined at:
  3686 ;;		line 351 in file "D:\develop\190625\AK7030-OTP\main.c"
  3687 ;; Parameters:    Size  Location     Type
  3688 ;;		None
  3689 ;; Auto vars:     Size  Location     Type
  3690 ;;		None
  3691 ;; Return value:  Size  Location     Type
  3692 ;;		None               void
  3693 ;; Registers used:
  3694 ;;		None
  3695 ;; Tracked objects:
  3696 ;;		On entry : 17F/0
  3697 ;;		On exit  : 17F/20
  3698 ;;		Unchanged: FFE80/0
  3699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3700 ;;      Params:         0       0       0       0       0
  3701 ;;      Locals:         0       0       0       0       0
  3702 ;;      Temps:          0       0       0       0       0
  3703 ;;      Totals:         0       0       0       0       0
  3704 ;;Total ram usage:        0 bytes
  3705 ;; Hardware stack levels used:    1
  3706 ;; Hardware stack levels required when called:    2
  3707 ;; This function calls:
  3708 ;;		Nothing
  3709 ;; This function is called by:
  3710 ;;		_main
  3711 ;; This function uses a non-reentrant model
  3712 ;;
  3713  049D                     _selectAdChannel:	
  3714                           
  3715                           ;main.c: 353: TRISB0 = 1;
  3716                           
  3717                           ; Regs used in _selectAdChannel: []
  3718  049D  1683               	bsf	3,5	;RP0=1, select bank1
  3719  049E  1406               	bsf	6,0
  3720                           
  3721                           ;main.c: 354: TRISB1 = 1;
  3722  049F  1486               	bsf	6,1
  3723  04A0  0008               	return
  3724  04A1                     __end_of_selectAdChannel:	
  3725                           
  3726                           	psect	text862
  3727  0446                     __ptext862:	
  3728 ;; =============== function _selectAdChannel ends ============
  3729                           
  3730                           
  3731 ;; *************** function _pwm_config *****************
  3732 ;; Defined at:
  3733 ;;		line 310 in file "D:\develop\190625\AK7030-OTP\main.c"
  3734 ;; Parameters:    Size  Location     Type
  3735 ;;  state           1    wreg     unsigned char 
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;  state           1    0[BANK0 ] unsigned char 
  3738 ;; Return value:  Size  Location     Type
  3739 ;;		None               void
  3740 ;; Registers used:
  3741 ;;		wreg, status,2, status,0
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/0
  3744 ;;		On exit  : 60/0
  3745 ;;		Unchanged: FFF9F/0
  3746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3747 ;;      Params:         0       0       0       0       0
  3748 ;;      Locals:         0       1       0       0       0
  3749 ;;      Temps:          0       0       0       0       0
  3750 ;;      Totals:         0       1       0       0       0
  3751 ;;Total ram usage:        1 bytes
  3752 ;; Hardware stack levels used:    1
  3753 ;; Hardware stack levels required when called:    2
  3754 ;; This function calls:
  3755 ;;		Nothing
  3756 ;; This function is called by:
  3757 ;;		_main
  3758 ;; This function uses a non-reentrant model
  3759 ;;
  3760  0446                     _pwm_config:	
  3761                           
  3762                           ; Regs used in _pwm_config: [wreg+status,2+status,0]
  3763                           ;pwm_config@state stored from wreg
  3764  0446  1283               	bcf	3,5	;RP0=0, select bank0
  3765  0447  1303               	bcf	3,6	;RP1=0, select bank0
  3766  0448  00A0               	movwf	pwm_config@state
  3767                           
  3768                           ;main.c: 312: if( state )
  3769  0449  0820               	movf	pwm_config@state,w
  3770  044A  1903               	btfsc	3,2
  3771  044B  2C4F               	goto	l3303
  3772                           
  3773                           ;main.c: 313: CCP1CON|= 0x0c;
  3774  044C  300C               	movlw	12
  3775  044D  0497               	iorwf	23,f	;volatile
  3776  044E  0008               	return
  3777  044F                     l3303:	
  3778                           
  3779                           ;main.c: 314: else
  3780                           ;main.c: 315: CCP1CON&= 0xf0;
  3781  044F  30F0               	movlw	240
  3782  0450  0597               	andwf	23,f	;volatile
  3783  0451  0008               	return
  3784  0452                     __end_of_pwm_config:	
  3785                           
  3786                           	psect	text863
  3787  03B5                     __ptext863:	
  3788 ;; =============== function _pwm_config ends ============
  3789                           
  3790                           
  3791 ;; *************** function _pwm_start *****************
  3792 ;; Defined at:
  3793 ;;		line 256 in file "D:\develop\190625\AK7030-OTP\main.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;  ucPulseWidth    1    wreg     unsigned char 
  3796 ;; Auto vars:     Size  Location     Type
  3797 ;;  ucPulseWidth    1    1[BANK0 ] unsigned char 
  3798 ;;  ucConvertRea    1    5[BANK0 ] unsigned char 
  3799 ;;  ucGetLowestT    1    4[BANK0 ] unsigned char 
  3800 ;;  ucCCP1CON_Va    1    3[BANK0 ] unsigned char 
  3801 ;;  ucGeHighestS    1    2[BANK0 ] unsigned char 
  3802 ;; Return value:  Size  Location     Type
  3803 ;;		None               void
  3804 ;; Registers used:
  3805 ;;		wreg, status,2, status,0
  3806 ;; Tracked objects:
  3807 ;;		On entry : 60/0
  3808 ;;		On exit  : 60/60
  3809 ;;		Unchanged: FFF9F/0
  3810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3811 ;;      Params:         0       0       0       0       0
  3812 ;;      Locals:         0       5       0       0       0
  3813 ;;      Temps:          0       1       0       0       0
  3814 ;;      Totals:         0       6       0       0       0
  3815 ;;Total ram usage:        6 bytes
  3816 ;; Hardware stack levels used:    1
  3817 ;; Hardware stack levels required when called:    2
  3818 ;; This function calls:
  3819 ;;		Nothing
  3820 ;; This function is called by:
  3821 ;;		_main
  3822 ;; This function uses a non-reentrant model
  3823 ;;
  3824  03B5                     _pwm_start:	
  3825                           
  3826                           ; Regs used in _pwm_start: [wreg+status,2+status,0]
  3827                           ;pwm_start@ucPulseWidth stored from wreg
  3828  03B5  00A1               	movwf	pwm_start@ucPulseWidth
  3829                           
  3830                           ;main.c: 261: unsigned char ucGetLowestTwoValue = 0,ucGeHighestSixValue = 0;
  3831  03B6  01A4               	clrf	pwm_start@ucGetLowestTwoValue
  3832  03B7  01A2               	clrf	pwm_start@ucGeHighestSixValue
  3833                           
  3834                           ;main.c: 263: unsigned char ucCCP1CON_Value = 0;
  3835  03B8  01A3               	clrf	pwm_start@ucCCP1CON_Value
  3836                           
  3837                           ;main.c: 269: ucConvertRealPulseWidth = ucPulseWidth << 1;
  3838  03B9  1003               	clrc
  3839  03BA  0D21               	rlf	pwm_start@ucPulseWidth,w
  3840  03BB  00A5               	movwf	pwm_start@ucConvertRealPulseWidth
  3841                           
  3842                           ;main.c: 275: ucGetLowestTwoValue = ucConvertRealPulseWidth & 0x03;
  3843  03BC  00A4               	movwf	pwm_start@ucGetLowestTwoValue
  3844  03BD  3003               	movlw	3
  3845  03BE  05A4               	andwf	pwm_start@ucGetLowestTwoValue,f
  3846                           
  3847                           ;main.c: 281: ucCCP1CON_Value = ucGetLowestTwoValue << 4;
  3848  03BF  0E24               	swapf	pwm_start@ucGetLowestTwoValue,w
  3849  03C0  39F0               	andlw	240
  3850  03C1  00A3               	movwf	pwm_start@ucCCP1CON_Value
  3851                           
  3852                           ;main.c: 287: ucGeHighestSixValue = ucConvertRealPulseWidth >> 2;
  3853  03C2  0825               	movf	pwm_start@ucConvertRealPulseWidth,w
  3854  03C3  00A0               	movwf	??_pwm_start
  3855  03C4  1003               	clrc
  3856  03C5  0CA0               	rrf	??_pwm_start,f
  3857  03C6  1003               	clrc
  3858  03C7  0CA0               	rrf	??_pwm_start,f
  3859  03C8  0820               	movf	??_pwm_start,w
  3860  03C9  00A2               	movwf	pwm_start@ucGeHighestSixValue
  3861                           
  3862                           ;main.c: 296: T2CON=0x04;
  3863  03CA  3004               	movlw	4
  3864  03CB  0092               	movwf	18	;volatile
  3865                           
  3866                           ;main.c: 297: PR2 = 49;
  3867  03CC  3031               	movlw	49
  3868  03CD  1683               	bsf	3,5	;RP0=1, select bank1
  3869  03CE  0092               	movwf	18	;volatile
  3870                           
  3871                           ;main.c: 298: CCPR1L = ucGeHighestSixValue;
  3872  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  3873  03D0  0822               	movf	pwm_start@ucGeHighestSixValue,w
  3874  03D1  0095               	movwf	21	;volatile
  3875                           
  3876                           ;main.c: 299: CCP1CON=0x00;
  3877  03D2  0197               	clrf	23	;volatile
  3878                           
  3879                           ;main.c: 300: CCP1CON = CCP1CON | ucCCP1CON_Value;
  3880  03D3  0823               	movf	pwm_start@ucCCP1CON_Value,w
  3881  03D4  0497               	iorwf	23,f	;volatile
  3882                           
  3883                           ;main.c: 302: TRISB2=0;
  3884  03D5  1683               	bsf	3,5	;RP0=1, select bank1
  3885  03D6  1106               	bcf	6,2
  3886                           
  3887                           ;main.c: 303: PBOD2 = 0;
  3888  03D7  1703               	bsf	3,6	;RP1=1, select bank3
  3889  03D8  1108               	bcf	8,2
  3890  03D9  0008               	return
  3891  03DA                     __end_of_pwm_start:	
  3892                           
  3893                           	psect	text871
  3894  04A1                     __ptext871:	
  3895 ;; =============== function _initPB3 ends ============
  3896                           
  3897                           
  3898 ;; *************** function _clearThreeHoursTimer *****************
  3899 ;; Defined at:
  3900 ;;		line 384 in file "D:\develop\190625\AK7030-OTP\common.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;		None
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;		None
  3905 ;; Return value:  Size  Location     Type
  3906 ;;		None               void
  3907 ;; Registers used:
  3908 ;;		status,2
  3909 ;; Tracked objects:
  3910 ;;		On entry : 60/0
  3911 ;;		On exit  : 60/0
  3912 ;;		Unchanged: FFF9F/0
  3913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3914 ;;      Params:         0       0       0       0       0
  3915 ;;      Locals:         0       0       0       0       0
  3916 ;;      Temps:          0       0       0       0       0
  3917 ;;      Totals:         0       0       0       0       0
  3918 ;;Total ram usage:        0 bytes
  3919 ;; Hardware stack levels used:    1
  3920 ;; Hardware stack levels required when called:    2
  3921 ;; This function calls:
  3922 ;;		Nothing
  3923 ;; This function is called by:
  3924 ;;		_main
  3925 ;; This function uses a non-reentrant model
  3926 ;;
  3927  04A1                     _clearThreeHoursTimer:	
  3928                           
  3929                           ;common.c: 385: uiSmallTimer = 0;
  3930                           
  3931                           ; Regs used in _clearThreeHoursTimer: [status,2]
  3932  04A1  01D8               	clrf	_uiSmallTimer
  3933  04A2  01D9               	clrf	_uiSmallTimer+1
  3934                           
  3935                           ;common.c: 386: bSmallTimerStartFlag = 0;
  3936  04A3  01E4               	clrf	_bSmallTimerStartFlag
  3937  04A4  0008               	return
  3938  04A5                     __end_of_clearThreeHoursTimer:	
  3939                           
  3940                           	psect	text872
  3941  04A5                     __ptext872:	
  3942 ;; =============== function _clearThreeHoursTimer ends ============
  3943                           
  3944                           
  3945 ;; *************** function _clearTwelveHoursTimer *****************
  3946 ;; Defined at:
  3947 ;;		line 377 in file "D:\develop\190625\AK7030-OTP\common.c"
  3948 ;; Parameters:    Size  Location     Type
  3949 ;;		None
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;		None
  3952 ;; Return value:  Size  Location     Type
  3953 ;;		None               void
  3954 ;; Registers used:
  3955 ;;		status,2
  3956 ;; Tracked objects:
  3957 ;;		On entry : 60/0
  3958 ;;		On exit  : 60/0
  3959 ;;		Unchanged: FFF9F/0
  3960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3961 ;;      Params:         0       0       0       0       0
  3962 ;;      Locals:         0       0       0       0       0
  3963 ;;      Temps:          0       0       0       0       0
  3964 ;;      Totals:         0       0       0       0       0
  3965 ;;Total ram usage:        0 bytes
  3966 ;; Hardware stack levels used:    1
  3967 ;; Hardware stack levels required when called:    2
  3968 ;; This function calls:
  3969 ;;		Nothing
  3970 ;; This function is called by:
  3971 ;;		_main
  3972 ;; This function uses a non-reentrant model
  3973 ;;
  3974  04A5                     _clearTwelveHoursTimer:	
  3975                           
  3976                           ;common.c: 378: uiBigTimer = 0;
  3977                           
  3978                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  3979  04A5  01D4               	clrf	_uiBigTimer
  3980  04A6  01D5               	clrf	_uiBigTimer+1
  3981                           
  3982                           ;common.c: 379: bBigTimerStartFlag = 0;
  3983  04A7  01E2               	clrf	_bBigTimerStartFlag
  3984  04A8  0008               	return
  3985  04A9                     __end_of_clearTwelveHoursTimer:	
  3986                           
  3987                           	psect	text873
  3988  0258                     __ptext873:	
  3989 ;; =============== function _clearTwelveHoursTimer ends ============
  3990                           
  3991                           
  3992 ;; *************** function _ISR *****************
  3993 ;; Defined at:
  3994 ;;		line 534 in file "D:\develop\190625\AK7030-OTP\common.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;		None
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;		None
  3999 ;; Return value:  Size  Location     Type
  4000 ;;		None               void
  4001 ;; Registers used:
  4002 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4003 ;; Tracked objects:
  4004 ;;		On entry : 0/0
  4005 ;;		On exit  : 60/0
  4006 ;;		Unchanged: FFE00/0
  4007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4008 ;;      Params:         0       0       0       0       0
  4009 ;;      Locals:         0       0       0       0       0
  4010 ;;      Temps:          4       0       0       0       0
  4011 ;;      Totals:         4       0       0       0       0
  4012 ;;Total ram usage:        4 bytes
  4013 ;; Hardware stack levels used:    1
  4014 ;; Hardware stack levels required when called:    1
  4015 ;; This function calls:
  4016 ;;		i1_setAD_ConvertFlag
  4017 ;;		_adc_get
  4018 ;;		_vPutSampleDataIntoTable
  4019 ;; This function is called by:
  4020 ;;		Interrupt level 1
  4021 ;; This function uses a non-reentrant model
  4022 ;;
  4023  0258                     _ISR:	
  4024                           
  4025                           ;common.c: 535: static unsigned char ucTimer1sCnt = 0;
  4026                           ;common.c: 537: if(TMR1IF == 1)
  4027  0258  1C0C               	btfss	12,0
  4028  0259  2A96               	goto	i1l3581
  4029  025A  3064               	movlw	100
  4030                           
  4031                           ;common.c: 538: {
  4032                           ;common.c: 539: TMR1IF = 0 ;
  4033  025B  100C               	bcf	12,0
  4034                           
  4035                           ;common.c: 540: timer.timer10msStopWatch++;
  4036  025C  0AE7               	incf	_timer,f
  4037                           
  4038                           ;common.c: 541: ucTimer1sCnt++;
  4039  025D  0AE0               	incf	ISR@ucTimer1sCnt,f
  4040                           
  4041                           ;common.c: 543: if(ucTimer1sCnt >= 100)
  4042  025E  0260               	subwf	ISR@ucTimer1sCnt,w
  4043  025F  1C03               	skipc
  4044  0260  2A96               	goto	i1l3581
  4045                           
  4046                           ;common.c: 544: {
  4047                           ;common.c: 545: ucTimer1sCnt = 0;
  4048  0261  01E0               	clrf	ISR@ucTimer1sCnt
  4049                           
  4050                           ;common.c: 546: if(uiBigTimer > 0)
  4051  0262  0855               	movf	_uiBigTimer+1,w
  4052  0263  0454               	iorwf	_uiBigTimer,w
  4053  0264  1903               	skipnz
  4054  0265  2A6C               	goto	i1l1632
  4055                           
  4056                           ;common.c: 547: uiBigTimer--;
  4057  0266  3001               	movlw	1
  4058  0267  02D4               	subwf	_uiBigTimer,f
  4059  0268  3000               	movlw	0
  4060  0269  1C03               	skipc
  4061  026A  03D5               	decf	_uiBigTimer+1,f
  4062  026B  02D5               	subwf	_uiBigTimer+1,f
  4063  026C                     i1l1632:	
  4064                           
  4065                           ;common.c: 549: if(uiSmallTimer)
  4066  026C  0859               	movf	_uiSmallTimer+1,w
  4067  026D  0458               	iorwf	_uiSmallTimer,w
  4068  026E  1903               	skipnz
  4069  026F  2A76               	goto	i1l1633
  4070                           
  4071                           ;common.c: 550: uiSmallTimer--;
  4072  0270  3001               	movlw	1
  4073  0271  02D8               	subwf	_uiSmallTimer,f
  4074  0272  3000               	movlw	0
  4075  0273  1C03               	skipc
  4076  0274  03D9               	decf	_uiSmallTimer+1,f
  4077  0275  02D9               	subwf	_uiSmallTimer+1,f
  4078  0276                     i1l1633:	
  4079                           
  4080                           ;common.c: 552: if(uiTwentySecondsTimer)
  4081  0276  1683               	bsf	3,5	;RP0=1, select bank1
  4082  0277  0821               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  4083  0278  0420               	iorwf	_uiTwentySecondsTimer^(0+128),w
  4084  0279  1903               	skipnz
  4085  027A  2A81               	goto	i1l1634
  4086                           
  4087                           ;common.c: 553: uiTwentySecondsTimer--;
  4088  027B  3001               	movlw	1
  4089  027C  02A0               	subwf	_uiTwentySecondsTimer^(0+128),f
  4090  027D  3000               	movlw	0
  4091  027E  1C03               	skipc
  4092  027F  03A1               	decf	(_uiTwentySecondsTimer+1)^(0+128),f
  4093  0280  02A1               	subwf	(_uiTwentySecondsTimer+1)^(0+128),f
  4094  0281                     i1l1634:	
  4095                           
  4096                           ;common.c: 555: if(uiTwentyMinTimer)
  4097  0281  1283               	bcf	3,5	;RP0=0, select bank0
  4098  0282  085B               	movf	_uiTwentyMinTimer+1,w
  4099  0283  045A               	iorwf	_uiTwentyMinTimer,w
  4100  0284  1903               	skipnz
  4101  0285  2A8C               	goto	i1l1635
  4102                           
  4103                           ;common.c: 556: uiTwentyMinTimer--;
  4104  0286  3001               	movlw	1
  4105  0287  02DA               	subwf	_uiTwentyMinTimer,f
  4106  0288  3000               	movlw	0
  4107  0289  1C03               	skipc
  4108  028A  03DB               	decf	_uiTwentyMinTimer+1,f
  4109  028B  02DB               	subwf	_uiTwentyMinTimer+1,f
  4110  028C                     i1l1635:	
  4111                           
  4112                           ;common.c: 558: if( uiOneHourTimer )
  4113  028C  0857               	movf	_uiOneHourTimer+1,w
  4114  028D  0456               	iorwf	_uiOneHourTimer,w
  4115  028E  1903               	skipnz
  4116  028F  2A96               	goto	i1l3581
  4117                           
  4118                           ;common.c: 559: uiOneHourTimer--;
  4119  0290  3001               	movlw	1
  4120  0291  02D6               	subwf	_uiOneHourTimer,f
  4121  0292  3000               	movlw	0
  4122  0293  1C03               	skipc
  4123  0294  03D7               	decf	_uiOneHourTimer+1,f
  4124  0295  02D7               	subwf	_uiOneHourTimer+1,f
  4125  0296                     i1l3581:	
  4126                           
  4127                           ;common.c: 560: }
  4128                           ;common.c: 561: }
  4129                           ;common.c: 563: if(ADIF)
  4130  0296  1D0D               	btfss	13,2
  4131  0297  2AB1               	goto	i1l1640
  4132  0298  3001               	movlw	1
  4133                           
  4134                           ;common.c: 564: {
  4135                           ;common.c: 566: ADIF=0;
  4136  0299  110D               	bcf	13,2
  4137                           
  4138                           ;common.c: 567: setAD_ConvertFlag(1);
  4139  029A  2328  118A         	fcall	i1_setAD_ConvertFlag
  4140                           
  4141                           ;common.c: 569: if(sampleChannelSelect == 12)
  4142  029C  086F               	movf	_sampleChannelSelect,w
  4143  029D  3A0C               	xorlw	12
  4144  029E  1D03               	skipz
  4145  029F  2AA8               	goto	i1l3591
  4146                           
  4147                           ;common.c: 570: {
  4148                           ;common.c: 573: vPutSampleDataIntoTable(adc_get(),12);
  4149  02A0  22BE  118A         	fcall	_adc_get
  4150  02A2  0871               	movf	?_adc_get+1,w
  4151  02A3  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4152  02A4  0870               	movf	?_adc_get,w
  4153  02A5  00F4               	movwf	?_vPutSampleDataIntoTable
  4154  02A6  300C               	movlw	12
  4155  02A7  2AAF               	goto	L13
  4156  02A8                     i1l3591:	
  4157                           ;common.c: 577: }
  4158                           
  4159                           
  4160                           ;common.c: 578: else
  4161                           ;common.c: 579: {
  4162                           ;common.c: 583: vPutSampleDataIntoTable(adc_get(),13);
  4163  02A8  22BE  118A         	fcall	_adc_get
  4164  02AA  0871               	movf	?_adc_get+1,w
  4165  02AB  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4166  02AC  0870               	movf	?_adc_get,w
  4167  02AD  00F4               	movwf	?_vPutSampleDataIntoTable
  4168  02AE  300D               	movlw	13
  4169  02AF                     L13:	
  4170  02AF  00F6               	movwf	?_vPutSampleDataIntoTable+2
  4171  02B0  22C9               	fcall	_vPutSampleDataIntoTable
  4172  02B1                     i1l1640:	
  4173  02B1  087C               	movf	??_ISR+3,w
  4174  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  4175  02B3  1303               	bcf	3,6	;RP1=0, select bank0
  4176  02B4  00FF               	movwf	127
  4177  02B5  087B               	movf	??_ISR+2,w
  4178  02B6  008A               	movwf	10
  4179  02B7  087A               	movf	??_ISR+1,w
  4180  02B8  0084               	movwf	4
  4181  02B9  0E79               	swapf	??_ISR^(0+-128),w
  4182  02BA  0083               	movwf	3
  4183  02BB  0EFE               	swapf	126,f
  4184  02BC  0E7E               	swapf	126,w
  4185  02BD  0009               	retfie
  4186  02BE                     __end_of_ISR:	
  4187  02BE                     __ptext875:	
  4188 ;; =============== function i1_setAD_ConvertFlag ends ============
  4189                           
  4190                           
  4191 ;; *************** function _adc_get *****************
  4192 ;; Defined at:
  4193 ;;		line 105 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;		None
  4196 ;; Auto vars:     Size  Location     Type
  4197 ;;  val             2    2[COMMON] unsigned int 
  4198 ;; Return value:  Size  Location     Type
  4199 ;;                  2    0[COMMON] unsigned int 
  4200 ;; Registers used:
  4201 ;;		wreg
  4202 ;; Tracked objects:
  4203 ;;		On entry : 60/0
  4204 ;;		On exit  : 60/20
  4205 ;;		Unchanged: FFF9F/0
  4206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4207 ;;      Params:         2       0       0       0       0
  4208 ;;      Locals:         2       0       0       0       0
  4209 ;;      Temps:          0       0       0       0       0
  4210 ;;      Totals:         4       0       0       0       0
  4211 ;;Total ram usage:        4 bytes
  4212 ;; Hardware stack levels used:    1
  4213 ;; This function calls:
  4214 ;;		Nothing
  4215 ;; This function is called by:
  4216 ;;		_ISR
  4217 ;; This function uses a non-reentrant model
  4218 ;;
  4219  02BE                     _adc_get:	
  4220                           
  4221                           ;periph.c: 106: unsigned int val;
  4222                           ;periph.c: 107: val = (ADRESH<<8) | ADRESL;
  4223                           
  4224                           ; Regs used in _adc_get: [wreg]
  4225  02BE  081E               	movf	30,w	;volatile
  4226  02BF  00F3               	movwf	adc_get@val+1
  4227  02C0  01F2               	clrf	adc_get@val
  4228  02C1  1683               	bsf	3,5	;RP0=1, select bank1
  4229  02C2  081E               	movf	30,w	;volatile
  4230  02C3  04F2               	iorwf	adc_get@val,f
  4231                           
  4232                           ;periph.c: 108: return val;
  4233  02C4  0873               	movf	adc_get@val+1,w
  4234  02C5  00F1               	movwf	?_adc_get+1
  4235  02C6  0872               	movf	adc_get@val,w
  4236  02C7  00F0               	movwf	?_adc_get
  4237  02C8  0008               	return
  4238  02C9                     __end_of_adc_get:	
  4239  02C9                     __ptext876:	
  4240 ;; =============== function _adc_get ends ============
  4241                           
  4242                           
  4243 ;; *************** function _vPutSampleDataIntoTable *****************
  4244 ;; Defined at:
  4245 ;;		line 106 in file "D:\develop\190625\AK7030-OTP\common.c"
  4246 ;; Parameters:    Size  Location     Type
  4247 ;;  uiSampleData    2    4[COMMON] unsigned int 
  4248 ;;  channel         1    6[COMMON] unsigned char 
  4249 ;; Auto vars:     Size  Location     Type
  4250 ;;  i               2    7[COMMON] int 
  4251 ;; Return value:  Size  Location     Type
  4252 ;;		None               void
  4253 ;; Registers used:
  4254 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4255 ;; Tracked objects:
  4256 ;;		On entry : 60/20
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: FFE00/0
  4259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4260 ;;      Params:         3       0       0       0       0
  4261 ;;      Locals:         2       0       0       0       0
  4262 ;;      Temps:          0       0       0       0       0
  4263 ;;      Totals:         5       0       0       0       0
  4264 ;;Total ram usage:        5 bytes
  4265 ;; Hardware stack levels used:    1
  4266 ;; This function calls:
  4267 ;;		Nothing
  4268 ;; This function is called by:
  4269 ;;		_ISR
  4270 ;; This function uses a non-reentrant model
  4271 ;;
  4272  02C9                     _vPutSampleDataIntoTable:	
  4273                           
  4274                           ;common.c: 108: static unsigned char ucChannelFirstLength = 0;
  4275                           ;common.c: 110: static unsigned char ucChannelFourthLength = 0;
  4276                           ;common.c: 112: static unsigned char ucChannelFourteenthLength = 0;
  4277                           ;common.c: 114: if(channel == 12)
  4278                           
  4279                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1]
  4280  02C9  0876               	movf	vPutSampleDataIntoTable@channel,w
  4281  02CA  3A0C               	xorlw	12
  4282  02CB  1D03               	skipz
  4283  02CC  2ADD               	goto	i1l3503
  4284                           
  4285                           ;common.c: 115: {
  4286                           ;common.c: 116: if(ucChannelFirstLength < 12)
  4287  02CD  300C               	movlw	12
  4288  02CE  027D               	subwf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4289  02CF  1803               	skipnc
  4290  02D0  2AD7               	goto	i1l3499
  4291                           
  4292                           ;common.c: 117: {
  4293                           ;common.c: 118: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  4294  02D1  1003               	clrc
  4295  02D2  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4296  02D3  3EA2               	addlw	_uiSampleChannelFirst& (0+255)
  4297  02D4  232B               	fcall	PL2	;call to abstracted procedure
  4298                           
  4299                           ;common.c: 120: ucChannelFirstLength++;
  4300  02D5  0AFD               	incf	vPutSampleDataIntoTable@ucChannelFirstLength,f
  4301                           
  4302                           ;common.c: 121: }
  4303  02D6  0008               	return
  4304  02D7                     i1l3499:	
  4305                           
  4306                           ;common.c: 122: else
  4307                           ;common.c: 123: {
  4308                           ;common.c: 124: ucChannelFirstLength = 0;
  4309  02D7  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  4310                           
  4311                           ;common.c: 126: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  4312  02D8  1003               	clrc
  4313  02D9  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4314  02DA  3EA2               	addlw	_uiSampleChannelFirst& (0+255)
  4315  02DB  232B               	fcall	PL2	;call to abstracted procedure
  4316  02DC  0008               	return
  4317  02DD                     i1l3503:	
  4318                           
  4319                           ;common.c: 129: else if(channel == 13)
  4320  02DD  0876               	movf	vPutSampleDataIntoTable@channel,w
  4321  02DE  3A0D               	xorlw	13
  4322  02DF  1D03               	skipz
  4323  02E0  2AF2               	goto	i1l3515
  4324                           
  4325                           ;common.c: 130: {
  4326                           ;common.c: 131: if(ucChannelFourthLength < 12)
  4327  02E1  300C               	movlw	12
  4328  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  4329  02E3  026E               	subwf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4330  02E4  1803               	skipnc
  4331  02E5  2AEC               	goto	i1l3511
  4332                           
  4333                           ;common.c: 132: {
  4334                           ;common.c: 133: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  4335  02E6  1003               	clrc
  4336  02E7  0D6E               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4337  02E8  3ED2               	addlw	_uiSampleChannelFourth& (0+255)
  4338  02E9  232B               	fcall	PL2	;call to abstracted procedure
  4339                           
  4340                           ;common.c: 135: ucChannelFourthLength++;
  4341  02EA  0AEE               	incf	vPutSampleDataIntoTable@ucChannelFourthLength,f
  4342                           
  4343                           ;common.c: 136: }
  4344  02EB  0008               	return
  4345  02EC                     i1l3511:	
  4346                           
  4347                           ;common.c: 137: else
  4348                           ;common.c: 138: {
  4349                           ;common.c: 139: ucChannelFourthLength = 0;
  4350  02EC  01EE               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  4351                           
  4352                           ;common.c: 141: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  4353  02ED  1003               	clrc
  4354  02EE  0D6E               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4355  02EF  3ED2               	addlw	_uiSampleChannelFourth& (0+255)
  4356  02F0  232B               	fcall	PL2	;call to abstracted procedure
  4357  02F1  0008               	return
  4358  02F2                     i1l3515:	
  4359                           
  4360                           ;common.c: 144: else if(channel == 14)
  4361  02F2  0876               	movf	vPutSampleDataIntoTable@channel,w
  4362  02F3  3A0E               	xorlw	14
  4363  02F4  1D03               	skipz
  4364  02F5  2B07               	goto	i1l3527
  4365                           
  4366                           ;common.c: 145: {
  4367                           ;common.c: 146: if(ucChannelFourteenthLength < 12)
  4368  02F6  300C               	movlw	12
  4369  02F7  1283               	bcf	3,5	;RP0=0, select bank0
  4370  02F8  026D               	subwf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4371  02F9  1803               	skipnc
  4372  02FA  2B01               	goto	i1l3523
  4373                           
  4374                           ;common.c: 147: {
  4375                           ;common.c: 148: uiSampleChannelFourteenth[ucChannelFourteenthLength] = uiSampleData;
  4376  02FB  1003               	clrc
  4377  02FC  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4378  02FD  3EBA               	addlw	_uiSampleChannelFourteenth& (0+255)
  4379  02FE  232B               	fcall	PL2	;call to abstracted procedure
  4380                           
  4381                           ;common.c: 150: ucChannelFourteenthLength++;
  4382  02FF  0AED               	incf	vPutSampleDataIntoTable@ucChannelFourteenthLength,f
  4383                           
  4384                           ;common.c: 151: }
  4385  0300  0008               	return
  4386  0301                     i1l3523:	
  4387                           
  4388                           ;common.c: 152: else
  4389                           ;common.c: 153: {
  4390                           ;common.c: 154: ucChannelFourteenthLength = 0;
  4391  0301  01ED               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4392                           
  4393                           ;common.c: 156: uiSampleChannelFourth[ucChannelFourteenthLength] = uiSampleData;
  4394  0302  1003               	clrc
  4395  0303  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4396  0304  3ED2               	addlw	_uiSampleChannelFourth& (0+255)
  4397  0305  232B               	fcall	PL2	;call to abstracted procedure
  4398  0306  0008               	return
  4399  0307                     i1l3527:	
  4400                           
  4401                           ;common.c: 159: else
  4402                           ;common.c: 160: {
  4403                           ;common.c: 161: ucChannelFirstLength = 0;
  4404  0307  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  4405                           
  4406                           ;common.c: 163: ucChannelFourthLength = 0;
  4407  0308  1283               	bcf	3,5	;RP0=0, select bank0
  4408  0309  01EE               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  4409                           
  4410                           ;common.c: 165: ucChannelFourteenthLength = 0;
  4411  030A  01ED               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4412                           
  4413                           ;common.c: 167: for(int i = 0;i < 12; i++)
  4414  030B  01F7               	clrf	vPutSampleDataIntoTable@i
  4415  030C  01F8               	clrf	vPutSampleDataIntoTable@i+1
  4416  030D                     i1l3533:	
  4417                           
  4418                           ;common.c: 168: {
  4419                           ;common.c: 169: uiSampleChannelFirst[i] = 0;
  4420  030D  1003               	clrc
  4421  030E  0D77               	rlf	vPutSampleDataIntoTable@i,w
  4422  030F  3EA2               	addlw	_uiSampleChannelFirst& (0+255)
  4423  0310  0084               	movwf	4
  4424  0311  1383               	bcf	3,7	;select IRP bank1
  4425  0312  0180               	clrf	0
  4426                           
  4427                           ;common.c: 171: uiSampleChannelFourth[i] = 0;
  4428  0313  2333  118A         	fcall	PL4	;call to abstracted procedure
  4429                           
  4430                           ;common.c: 173: uiSampleChannelFourth[i] = 0;
  4431  0315  2333  118A         	fcall	PL4	;call to abstracted procedure
  4432  0317  0A84               	incf	4,f
  4433  0318  0180               	clrf	0
  4434  0319  0AF7               	incf	vPutSampleDataIntoTable@i,f
  4435  031A  1903               	skipnz
  4436  031B  0AF8               	incf	vPutSampleDataIntoTable@i+1,f
  4437  031C  0878               	movf	vPutSampleDataIntoTable@i+1,w
  4438  031D  3A80               	xorlw	128
  4439  031E  00FF               	movwf	127
  4440  031F  3080               	movlw	128
  4441  0320  027F               	subwf	127,w
  4442  0321  1D03               	skipz
  4443  0322  2B25               	goto	u107_25
  4444  0323  300C               	movlw	12
  4445  0324  0277               	subwf	vPutSampleDataIntoTable@i,w
  4446  0325                     u107_25:	
  4447  0325  1803               	btfsc	3,0
  4448  0326  0008               	return
  4449  0327  2B0D               	goto	i1l3533
  4450  0328                     __end_of_vPutSampleDataIntoTable:	
  4451  0328                     __ptext874:	
  4452 ;; =============== function _ISR ends ============
  4453                           
  4454                           
  4455 ;; *************** function i1_setAD_ConvertFlag *****************
  4456 ;; Defined at:
  4457 ;;		line 215 in file "D:\develop\190625\AK7030-OTP\common.c"
  4458 ;; Parameters:    Size  Location     Type
  4459 ;;  setAD_Conver    1    wreg     unsigned char 
  4460 ;; Auto vars:     Size  Location     Type
  4461 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  4462 ;; Return value:  Size  Location     Type
  4463 ;;		None               void
  4464 ;; Registers used:
  4465 ;;		wreg
  4466 ;; Tracked objects:
  4467 ;;		On entry : 60/0
  4468 ;;		On exit  : 60/0
  4469 ;;		Unchanged: FFF9F/0
  4470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4471 ;;      Params:         0       0       0       0       0
  4472 ;;      Locals:         1       0       0       0       0
  4473 ;;      Temps:          0       0       0       0       0
  4474 ;;      Totals:         1       0       0       0       0
  4475 ;;Total ram usage:        1 bytes
  4476 ;; Hardware stack levels used:    1
  4477 ;; This function calls:
  4478 ;;		Nothing
  4479 ;; This function is called by:
  4480 ;;		_ISR
  4481 ;; This function uses a non-reentrant model
  4482 ;;
  4483  0328                     i1_setAD_ConvertFlag:	
  4484                           
  4485                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  4486                           ;i1setAD_ConvertFlag@flag stored from wreg
  4487  0328  00F0               	movwf	i1setAD_ConvertFlag@flag
  4488                           
  4489                           ;common.c: 216: adc_convert_flag = flag;
  4490  0329  00E1               	movwf	_adc_convert_flag
  4491  032A  0008               	return
  4492  032B                     __end_ofi1_setAD_ConvertFlag:	
  4493  032B                     PL2:	
  4494  032B  0084               	movwf	4
  4495  032C  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  4496  032D  1383               	bcf	3,7	;select IRP bank1
  4497  032E  0080               	movwf	0
  4498  032F  0A84               	incf	4,f
  4499  0330  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  4500  0331  0080               	movwf	0
  4501  0332  0008               	return
  4502  0333                     PL4:	
  4503  0333  0A84               	incf	4,f
  4504  0334  0180               	clrf	0
  4505  0335  1003               	clrc
  4506  0336  0D77               	rlf	vPutSampleDataIntoTable@i,w
  4507  0337  3ED2               	addlw	_uiSampleChannelFourth& (0+255)
  4508  0338  0084               	movwf	4
  4509  0339  0180               	clrf	0
  4510  033A  0008               	return
  4511                           
  4512                           	psect	intentry
  4513  0004                     __pintentry:	
  4514                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4515                           
  4516  0004                     interrupt_function:	
  4517  007E                     saved_w	set	btemp
  4518  0004  00FE               	movwf	btemp
  4519  0005  0E03               	swapf	3,w
  4520  0006  00F9               	movwf	??_ISR
  4521  0007  0804               	movf	4,w
  4522  0008  00FA               	movwf	??_ISR+1
  4523  0009  080A               	movf	10,w
  4524  000A  00FB               	movwf	??_ISR+2
  4525  000B  1283               	bcf	3,5	;RP0=0, select bank0
  4526  000C  1303               	bcf	3,6	;RP1=0, select bank0
  4527  000D  087F               	movf	btemp+1,w
  4528  000E  00FC               	movwf	??_ISR+3
  4529  000F  118A  2A58         	ljmp	_ISR
  4530                           
  4531                           	psect	text877
  4532  0000                     __ptext877:	
  4533 ;; =============== function _vPutSampleDataIntoTable ends ============
  4534                           
  4535  007E                     btemp	set	126	;btemp
  4536  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Thu Oct 31 06:31:11 2019

                                  ??_clock_config 0020                               ?_startOneHoursTimer 0020  
                                              _GO 00F9                                                fsr 0004  
                        ?_timer1_interrupt_config 0070                                               l702 03B2  
                                             l712 0000                                               l707 03FA  
                                             l732 0000                                               l718 0000  
                                             l726 0000                                               l735 04AE  
                                             l729 0000                                               l745 0000  
                                             l682 0397                                               l692 03A7  
                                             l749 0174                                               l687 03EA  
                                             l697 03F2                                               _GIE 005F  
                                             _PB2 0032                                               _PB3 0033  
                                             _PB4 0034                                               _PB5 0035  
                                             _PR2 0092                                               _ISR 0258  
                                             u965 01D3                                               u975 01FC  
                                             u985 01E6                                               fsr0 0004  
                                             indf 0000                            ??_startThreeHoursTimer 0022  
                                            ?_ISR 0070                              ??_startOneHoursTimer 0022  
                              __size_of_AD_Sample 0014                                              l1520 0000  
                                            l1523 0000                                              l1532 0000  
                                            l3301 0000                                              l1517 0491  
                                            l1526 0000                                              l3303 044F  
                                            l3311 0000                                              l1535 0000  
                                            l3305 0000                                              l3313 0000  
                                            l3321 0000                                              l1625 0000  
                                            l3401 0000                                              l1529 0000  
                                            l1538 0000                                              l3251 0000  
                                            l3307 0000                                              l3315 0000  
                                            l3323 0000                                              l1491 0000  
                                            l1564 0000                                              l3245 0000  
                                            l3253 0000                                              l3261 0000  
                                            l3309 0000                                              l3325 0000  
                                            l3317 0000                                              l2293 0000  
                                            l3405 0000                                              l1567 0000  
                                            l3247 0000                                              l3255 0000  
                                            l3263 0000                                              l3271 0000  
                                            l2287 0000                                              l3319 0000  
                                            l3327 0381                                              l3335 0000  
                                            l3351 0000                                              l3407 0000  
                                            l3423 0000                                              l3431 0000  
                                            l1576 0000                                              l3249 0000  
                                            l3257 0000                                              l3265 0000  
                                            l3273 0000                                              l3281 0000  
                                            l3329 0000                                              l3337 0000  
                                            l3417 0000                                              l3425 0000  
                                            l3441 0000                                              l3601 0000  
                                            l3259 0000                                              l3267 0000  
                                            l3291 0000                                              l3283 0000  
                                            l3275 0000                                              l3355 0000  
                                            l3451 0000                                              l3603 0000  
                                            l3269 0000                                              l3293 0000  
                                            l3285 0000                                              l3277 0000  
                                            l3349 0000                                              l3357 0000  
                                            l3381 0000                                              l3429 0000  
                                            l3461 01D8                                              l3453 0000  
                                            l3605 0000                                              l3613 0000  
                                            l3701 0000                                              l3295 0000  
                                            l3287 0000                                              l3279 0000  
                                            l3367 0000                                              l3375 0000  
                                            l3383 0000                                              l3471 021B  
                                            l3447 01BC                                              l3543 0000  
                                            l3607 0000                                              l3631 0000  
                                            l3711 0000                                              l3703 0000  
                                            l3297 0000                                              l3289 0000  
                                            l3369 0000                                              l3377 0000  
                                            l3393 0000                                              l3481 0000  
                                            l3473 0000                                              l3449 0000  
                                            l3553 0000                                              l3545 0000  
                                            l3609 0000                                              l3617 0000  
                                            l3625 0000                                              l3641 0194  
                                            l3633 0000                                              l3801 013E  
                                            l3721 0089                                              l3713 0000  
                                            l3705 0000                                              l3299 0000  
                                            l3483 0000                                              l3467 0219  
                                            l3539 0000                                              l3651 0000  
                                            l3643 0000                                              l3811 0152  
                                            l3731 0000                                              l3715 0000  
                                            l3707 0000                                              l3469 01D9  
                                            l3557 0369                                              l3549 0000  
                                            l3653 0000                                              l3645 0000  
                                            l3637 018B                                              l3629 0000  
                                            l3805 014A                                              l3733 009D  
                                            l3725 0095                                              l3717 0081  
                                            l3709 0000                                              l3661 0000  
                                            l3399 0000                                              l3487 0000  
                                            l3647 0000                                              l3807 014B  
                                            l3751 0000                                              l3735 0000  
                                            l3727 0096                                              l3719 0087  
                                            l3671 0000                                              l3663 0000  
                                            l3649 0000                                              l3761 0000  
                                            l3753 00C2                                              l3745 00BA  
                                            l3737 00A8                                              l3681 0043  
                                            l3817 0154                                              l3673 0035  
                                            l3665 0000                                              l3763 0000  
                                            l3755 0000                                              l3747 00BB  
                                            l3691 0059                                              l3675 0000  
                                            l3667 0000                                              l3659 0000  
                                            l3765 00D9                                              l3757 0000  
                                            l3693 005A                                              l3685 0000  
                                            l3677 0000                                              l3669 0000  
                                            l3599 0000                                              l3791 0117  
                                            l3783 0000                                              l3775 0000  
                                            l3767 0000                                              l3759 0000  
                                            l3687 004D                                              l3793 0119  
                                            l3785 0000                                              l3777 00F3  
                                            l3697 0000                                              l3795 0120  
                                            l3779 00F5                                              l3699 0062  
                                            l3797 0124                                              l3799 0000  
                                            _ADIE 046A                                              _ADIF 006A  
                                            _ADON 00F8                     startTwelveHourTimer@uiSetTime 0020  
                    pwm_start@ucGetLowestTwoValue 0024                                              _PEIE 005E  
                                            _main 0013                                              btemp 007E  
                                            start 0011                           ?_getAdOriginalCh12Value 0047  
                         ?_getAdOriginalCh13Value 0047                        ??_isFinishedTwentyMinTimer 0020  
                                           ??_ISR 0079                                 ??_setPinInitVaule 0021  
                      __end_of_isPermitSampleTime 0499                               _sampleChannelSelect 006F  
                                           ?_main 0070                                             _CLKPR 0108  
                                           _T1CON 0010                                             _T2CON 0012  
                                 __end_of_adc_get 02C9                                             _PBOD2 0C42  
                                           _TMR1H 000F                                             _TMR1L 000E  
                           setAD_ConvertFlag@flag 0020                                 ??_selectAdChannel 0020  
                                 __end_of_initPB3 039A                                   __end_of_initPB4 03AA  
                                 __end_of_initPB5 03B5                           _vPutSampleDataIntoTable 02C9  
                                 __end_of_initPin 038E                                             _reset 04AE  
                                           _timer 0067                                   pwm_config@state 0020  
                                           pclath 000A                                             status 0003  
                  __end_of_getAdOriginalCh12Value 01B4                                             wtemp0 007E  
                  __end_of_getAdOriginalCh13Value 017C                     __size_of_startTwelveHourTimer 000E  
                            __end_of_clrSampeTime 04AE                                      __end_of_main 0175  
                          __size_of_adc_test_init 0015                                 __end_of_AD_Sample 036C  
                                          ??_main 0051                                            _ADCON0 001F  
                                          _ADCON1 009F                              __end_of_clock_config 0494  
                                          _ADRESH 001E                                            _ADRESL 009E  
                                          _CCPR1L 0015                                            ?_reset 0070  
                                          _CLKPCE 0847                                            i1l1532 0000  
                                          i1l1640 02B1                                            i1l1632 026C  
                                          i1l1633 0276                                            i1l1634 0281  
                                          i1l1635 028C                                            i1l3501 0000  
                                          i1l3511 02EC                                            i1l3503 02DD  
                                          i1l2296 0000                                            i1l3521 0000  
                                          i1l3513 0000                                            i1l3523 0301  
                                          i1l3515 02F2                                            i1l3533 030D  
                                          i1l3525 0000                                            i1l3509 0000  
                                          i1l3535 0000                                            i1l3527 0307  
                                          i1l3537 0000                                            i1l3491 0000  
                                          i1l3563 0000                                            u107_25 0325  
                                          i1l3565 0000                                            i1l3581 0296  
                                          i1l3591 02A8                                            i1l3559 0000  
                                          i1l3497 0000                                            i1l3593 0000  
                                          i1l3585 0000                                            i1l3569 0000  
                                          i1l3499 02D7                                            i1l3587 0000  
                                          i1l3597 0000                                            _TMR1IE 0460  
                                          _TMR1IF 0060                                 _getAD_ConvertFlag 0351  
                               _setAD_ConvertFlag 0355                                            _TRISB0 0430  
                                          _TRISB1 0431                                            _TRISB2 0432  
                                          _TRISB3 0433                                            _TRISB4 0434  
                                          _TRISB5 0435                                ?_getAD_ConvertFlag 0070  
                                          _Filter 01B4                                ?_setAD_ConvertFlag 0070  
                     ??_isFinishedThreeHoursTimer 0020                     __size_of_clearThreeHoursTimer 0004  
                          __size_of_calPulseWidth 0031                                         ??_adc_get 0072  
                             ??_getAD_ConvertFlag 0020                               ??_setAD_ConvertFlag 0020  
                                          _setPB3 03E2                                            _setPB4 03EC  
                                          _setPB5 03F4                       __end_of_clearTwentyMinTimer 049D  
                                          clrloop 0485                                  Filter@filter_buf 0026  
                                       ??_initPB3 0020                                         ??_initPB4 0020  
                                       ??_initPB5 0020                                  Filter@filter_sum 0040  
                                       ??_initPin 0021                         ??_vPutSampleDataIntoTable 0077  
                                          saved_w 007E                           ??_clearTwelveHoursTimer 0020  
                pwm_start@ucConvertRealPulseWidth 0025                       ?_process_AD_Converter_Value 0070  
                                   _adc_test_init 036C                         __end_of_getAD_ConvertFlag 0355  
                       __end_of_setAD_ConvertFlag 0358                                __size_of_adc_start 0003  
                        _initPB2_AsHighResistence 039A                  __size_of_isFinishedOneHoursTimer 000A  
                __end_of_isFinishedTwentyMinTimer 047A                                    __pcstackCOMMON 0070  
                                    __pidataBANK0 0000                                 main@uiTimerOneP5s 005C  
                                   __end_of_reset 049D                                 main@uiTimerTwoP5s 005E  
                            _uiSampleChannelFirst 00A2                    vPutSampleDataIntoTable@channel 0076  
                       _isFinishedThreeHoursTimer 045C                             __end_of_timer1_config 0484  
                  calPulseWidth@ucThreeTimesValue 004B                                    ?_adc_test_init 0020  
                     __end_of_startTwentyMinTimer 0446                                     _calPulseWidth 017C  
     vPutSampleDataIntoTable@ucChannelFirstLength 007D                                           ??_reset 0020  
                __size_of_timer1_interrupt_config 0003                             __size_of_clrSampeTime 0002  
                                      __pbssBANK0 0054                                        __pbssBANK1 00A0  
                    __size_ofi1_setAD_ConvertFlag 0003                                   _setPinInitVaule 03DA  
                                      adc_get@val 0072                                  _uiTwentyMinTimer 005A  
                 __end_of_vPutSampleDataIntoTable 0328                                           ?_Filter 0020  
                                      __pmaintext 0013                                   _selectAdChannel 049D  
                                      __pintentry 0004                                           _CCP1CON 0017  
                                         ?_setPB3 0070                                           ?_setPB4 0070  
                                         ?_setPB5 0070                             __size_of_clock_config 0008  
                                    _clrSampeTime 04AC                                 __end_of_adc_start 0384  
                            _uiTwentySecondsTimer 00A0                                _isPermitSampleTime 0494  
                                  ?_calPulseWidth 0070                                           Filter@i 0046  
                                         Filter@j 0045                                __size_of_pwm_start 0025  
                     __size_of_startOneHoursTimer 000E                     __size_of_startThreeHoursTimer 000E  
                      __size_of_getAD_ConvertFlag 0004                        __size_of_setAD_ConvertFlag 0003  
                                  main@ucTimerP3s 006B                                    main@ucTimerP5s 006C  
                             ?_isPermitSampleTime 0070                                   __size_of_Filter 008E  
                                      _uiBigTimer 0054                                      setPB3@bValue 0020  
                                    setPB4@bValue 0020                                      _clock_config 048C  
                                    setPB5@bValue 0020                                           _adc_get 02BE  
                                 __size_of_setPB3 000A                                   __size_of_setPB4 0008  
                                 __size_of_setPB5 0008                              ??_isPermitSampleTime 0020  
                    __end_of_startTwelveHourTimer 0438                                     initPB3@bValue 0020  
                                   initPB4@bValue 0020                                         _AD_Sample 0358  
                                         _initPB3 038E                                           _initPB4 039F  
                                         _initPB5 03AA                                      __size_of_ISR 0066  
                                   initPB5@bValue 0020                                           _initPin 0384  
                            _bSmallTimerStartFlag 0064                                   ??_adc_test_init 0021  
               __size_of_isFinishedTwentyMinTimer 000A                         ?_isFinishedTwentyMinTimer 0070  
                         __end_of_setPinInitVaule 03E2                              end_of_initialization 040B  
                               Filter@filter_temp 003E                          calPulseWidth@ucHalfValue 004C  
                           pwm_start@ucPulseWidth 0021                           __end_of_selectAdChannel 04A1  
                         _isFinishedOneHoursTimer 0452                                 __end_of_pwm_start 03DA  
                                      ?_AD_Sample 0070                      ??_isFinishedTwelveHoursTimer 0020  
                                       Filter@cir 0043                               _bTwentyMinStartFlag 0065  
                                _adc_convert_flag 0061                                   ??_calPulseWidth 0049  
                                      _pwm_config 0446                      __end_of_clearThreeHoursTimer 04A5  
                  __size_of_clearTwelveHoursTimer 0004                           _timer1_interrupt_config 04A9  
                   __end_of_clearTwelveHoursTimer 04A9                        ??_initPB2_AsHighResistence 0020  
              __size_of_isFinishedThreeHoursTimer 000A                                        main@ucStep 006A  
                                  __end_of_Filter 0242                     startTwentyMinTimer@uiSetValue 0020  
             __size_of_isFinishedTwelveHoursTimer 000A                          vPutSampleDataIntoTable@i 0077  
                             i1_setAD_ConvertFlag 0328                                    __end_of_setPB3 03EC  
                                  __end_of_setPB4 03F4                                    __end_of_setPB5 03FC  
                                main@ucPulseWidth 0051                               start_initialization 03FC  
                                     __end_of_ISR 02BE                             _uiSampleChannelFourth 00D2  
                        ??_getAdOriginalCh12Value 0049                                  ?_setPinInitVaule 0070  
                        ??_getAdOriginalCh13Value 0049                      __size_of_clearTwentyMinTimer 0004  
                       ??_isFinishedOneHoursTimer 0020                              ?i1_setAD_ConvertFlag 0070  
                            _startTwelveHourTimer 042A                 __end_of_isFinishedThreeHoursTimer 0466  
                                ?_selectAdChannel 0070                                          ??_Filter 0022  
                                     __pdataBANK0 006F                                          ??_setPB3 0020  
                                        ??_setPB4 0020                                          ??_setPB5 0020  
                        ?_vPutSampleDataIntoTable 0074                                       ??_AD_Sample 0020  
                       ??_timer1_interrupt_config 0020                                       __pbssCOMMON 007D  
                                   __pcstackBANK0 0020                                       ?_pwm_config 0070  
                                       _adc_start 0381                             ??i1_setAD_ConvertFlag 0070  
                                 main@uiCh13Value 0052                             ?_startTwelveHourTimer 0020  
                       calPulseWidth@ucPulseWidth 004D                      __size_of_startTwentyMinTimer 000E  
                          __size_of_timer1_config 000A                              _clearThreeHoursTimer 04A1  
                    __end_of_startThreeHoursTimer 042A                                         __ptext840 0358  
                                       __ptext841 0355                                         __ptext850 0499  
                                       __ptext842 0351                                         __ptext834 017C  
                                       __ptext851 0470                                         __ptext843 01B4  
                                       __ptext835 0175                                         __ptext860 04AE  
                                       __ptext852 04AC                                         __ptext844 0452  
                                       __ptext836 033B                                         __ptext861 049D  
                                       __ptext853 0494                                         __ptext845 040E  
                                       __ptext837 01AD                                         __ptext870 038E  
                                       __ptext862 0446                                         __ptext854 0438  
                                       __ptext846 045C                                         __ptext838 03DA  
                                       __ptext871 04A1                                         __ptext863 03B5  
                                       __ptext855 0381                                         __ptext847 041C  
                                       __ptext839 0384                                         __ptext872 04A5  
                                       __ptext864 039A                                         __ptext856 036C  
                                       __ptext848 0466                                         __ptext873 0258  
                                       __ptext865 03F4                                         __ptext857 04A9  
                                       __ptext849 042A                                         __ptext874 0328  
                                       __ptext866 03AA                                         __ptext858 047A  
                                       __ptext875 02BE                                         __ptext867 03EC  
                                       __ptext859 048C                                         __ptext876 02C9  
                                       __ptext868 039F                                         __ptext877 0000  
                                       __ptext869 03E2                                 main@cTimerP5s_801 0069  
                               main@cTimerP5s_797 0068                                          ?_adc_get 0070  
                 __end_of_isFinishedOneHoursTimer 045C                __end_of_isFinishedTwelveHoursTimer 0470  
                      _isFinishedTwelveHoursTimer 0466                                          ?_initPB3 0070  
                                        ?_initPB4 0070                                          ?_initPB5 0070  
                                 ISR@ucTimer1sCnt 0060                                          ?_initPin 0070  
                      __end_of_startOneHoursTimer 041C                  __end_of_initPB2_AsHighResistence 039F  
                       _uiSampleChannelFourteenth 00BA                                        ?_adc_start 0070  
                 __size_of_getAdOriginalCh12Value 0007                   __size_of_getAdOriginalCh13Value 0007  
                                  __size_of_reset FFEF                                 interrupt_function 0004  
                         calPulseWidth@ucGapValue 004E                   __end_of_timer1_interrupt_config 04AC  
                           ?_clearThreeHoursTimer 0070                               __size_of_pwm_config 000C  
                            adc_test_init@channel 0022               vPutSampleDataIntoTable@uiSampleData 0074  
                         calPulseWidth@uiGapValue 0049      vPutSampleDataIntoTable@ucChannelFourthLength 006E  
                     __size_of_isPermitSampleTime 0005                                         _pwm_start 03B5  
                                    _uiSmallTimer 0058                             __end_of_adc_test_init 0381  
                                   _timer1_config 047A                      ??_process_AD_Converter_Value 0023  
                          ??_startTwelveHourTimer 0022                          pwm_start@ucCCP1CON_Value 0023  
                          _getAdOriginalCh12Value 01AD                            _getAdOriginalCh13Value 0175  
                             _clearTwentyMinTimer 0499                       startOneHoursTimer@uiSetTime 0020  
                                __size_of_adc_get 000B               __size_of_process_AD_Converter_Value 0016  
                                      ?_pwm_start 0070                          _isFinishedTwentyMinTimer 0470  
vPutSampleDataIntoTable@ucChannelFourteenthLength 006D                                  __size_of_initPB3 000C  
                                __size_of_initPB4 000B                                  __size_of_initPB5 000B  
                                __size_of_initPin 000A                                    Filter@tmpValue 0042  
                                  ?_timer1_config 0070                             __end_of_calPulseWidth 01AD  
                            ?_clearTwentyMinTimer 0070                                       ??_adc_start 0020  
                            _startThreeHoursTimer 041C                             _clearTwelveHoursTimer 04A5  
                                  _uiOneHourTimer 0056                                     __size_of_main 0162  
                                        clear_ram 0484                            ??_clearThreeHoursTimer 0020  
               __size_of_initPB2_AsHighResistence 0005                         ?_initPB2_AsHighResistence 0070  
                          _bOneHourTimerStartFlag 0063                                     ?_clrSampeTime 0070  
                             _startTwentyMinTimer 0438                                      ??_pwm_config 0020  
                                     _sampleTimes 0066                             ??_clearTwentyMinTimer 0020  
                           ?_startThreeHoursTimer 0020                  __size_of_vPutSampleDataIntoTable 005F  
                                        intlevel1 0000                      calPulseWidth@uiChannel2Value 004F  
                            ?_startTwentyMinTimer 0020                          __size_of_setPinInitVaule 0008  
                      ?_isFinishedThreeHoursTimer 0070                                     ?_clock_config 0070  
                              __end_of_pwm_config 0452                          __size_of_selectAdChannel 0004  
                   startThreeHoursTimer@uiSetTime 0020                           i1setAD_ConvertFlag@flag 0070  
                                     ??_pwm_start 0020                                    ??_clrSampeTime 0020  
                     ?_isFinishedTwelveHoursTimer 0070                                _bBigTimerStartFlag 0062  
                                 ??_timer1_config 0020                       __end_ofi1_setAD_ConvertFlag 032B  
              __end_of_process_AD_Converter_Value 0351                        _process_AD_Converter_Value 033B  
                        ?_isFinishedOneHoursTimer 0070                            ?_clearTwelveHoursTimer 0070  
                                adc_test_init@ref 0020                             ??_startTwentyMinTimer 0022  
                              _startOneHoursTimer 040E                      pwm_start@ucGeHighestSixValue 0022  
