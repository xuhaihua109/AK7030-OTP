

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Tue Dec 10 10:16:53 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,delta=2
    16                           	psect	text1365,local,class=CODE,delta=2
    17                           	psect	text1366,local,class=CODE,delta=2
    18                           	psect	text1367,local,class=CODE,delta=2
    19                           	psect	text1368,local,class=CODE,delta=2
    20                           	psect	text1369,local,class=CODE,delta=2
    21                           	psect	text1374,local,class=CODE,delta=2
    22                           	psect	text1375,local,class=CODE,delta=2
    23                           	psect	text1376,local,class=CODE,delta=2
    24                           	psect	text1377,local,class=CODE,delta=2
    25                           	psect	text1378,local,class=CODE,delta=2
    26                           	psect	text1379,local,class=CODE,delta=2
    27                           	psect	text1380,local,class=CODE,delta=2
    28                           	psect	text1381,local,class=CODE,delta=2
    29                           	psect	text1382,local,class=CODE,delta=2
    30                           	psect	text1383,local,class=CODE,delta=2
    31                           	psect	text1385,local,class=CODE,delta=2
    32                           	psect	text1387,local,class=CODE,delta=2
    33                           	psect	text1388,local,class=CODE,delta=2
    34                           	psect	text1389,local,class=CODE,delta=2
    35                           	psect	text1394,local,class=CODE,delta=2
    36                           	psect	text1395,local,class=CODE,delta=2
    37                           	psect	text1396,local,class=CODE,delta=2
    38                           	psect	text1404,local,class=CODE,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	text1411,local,class=CODE,delta=2
    41                           	psect	pa_nodes,global,class=CODE,delta=2
    42                           	dabs	1,0x7E,2
    43  000A                     	;#
    44                           
    45                           	psect	config
    46  2000  0FFF               	dw	4095	;#
    47  2001  3FDE               	dw	16350	;#
    48  2002  3F78               	dw	16248	;#
    49                           
    50                           	psect	idataBANK0
    51  0000                     __pidataBANK0:	
    52  001F                     _ADCON0	set	31
    53  001E                     _ADRESH	set	30
    54  0017                     _CCP1CON	set	23
    55  0015                     _CCPR1L	set	21
    56  0010                     _T1CON	set	16
    57  0012                     _T2CON	set	18
    58  000F                     _TMR1H	set	15
    59  000E                     _TMR1L	set	14
    60  006A                     _ADIF	set	106
    61  00F8                     _ADON	set	248
    62  005F                     _GIE	set	95
    63  00F9                     _GO	set	249
    64  0030                     _PB0	set	48
    65  0031                     _PB1	set	49
    66  0032                     _PB2	set	50
    67  0033                     _PB3	set	51
    68  005E                     _PEIE	set	94
    69  0060                     _TMR1IF	set	96
    70  009F                     _ADCON1	set	159
    71  009E                     _ADRESL	set	158
    72  0092                     _PR2	set	146
    73  046A                     _ADIE	set	1130
    74  0460                     _TMR1IE	set	1120
    75  0430                     _TRISB0	set	1072
    76  0431                     _TRISB1	set	1073
    77  0432                     _TRISB2	set	1074
    78  0433                     _TRISB3	set	1075
    79  0434                     _TRISB4	set	1076
    80  0435                     _TRISB5	set	1077
    81  0108                     _CLKPR	set	264
    82  0847                     _CLKPCE	set	2119
    83  0C42                     _PBOD2	set	3138
    84                           
    85                           	psect	cinit
    86  055E                     start_initialization:	
    87  055E  3043               	movlw	low __pbssBANK0
    88                           
    89                           ; Clear objects allocated to COMMON
    90  055F  01FD               	clrf	__pbssCOMMON& (0+127)
    91                           
    92                           ; Clear objects allocated to BANK0
    93  0560  1383               	bcf	3,7	;select IRP bank0
    94  0561  0084               	movwf	4
    95  0562  3063               	movlw	low (__pbssBANK0+32)
    96  0563  118A  25F4  118A   	fcall	clear_ram
    97                           
    98                           ; Clear objects allocated to BANK1
    99  0566  30A0               	movlw	low __pbssBANK1
   100  0567  0084               	movwf	4
   101  0568  30BD               	movlw	low (__pbssBANK1+29)
   102  0569  118A  25F4         	fcall	clear_ram
   103                           
   104                           ;initializer for _sampleChannelSelect
   105  056B  3002               	movlw	2
   106  056C  00E3               	movwf	__pdataBANK0& (0+127)
   107                           
   108                           ;initializer for vPutSampleDataIntoTable@uiInitWidth
   109  056D  304B               	movlw	75
   110  056E  00E4               	movwf	(__pdataBANK0+1)& (0+127)
   111  056F                     end_of_initialization:	
   112                           ;End of C runtime variable initialization code
   113                           
   114  056F  0183               	clrf	3
   115  0570  118A  2A3E         	ljmp	_main	;jump to C main() function
   116                           
   117                           	psect	bssCOMMON
   118  007D                     __pbssCOMMON:	
   119  007D                     vPutSampleDataIntoTable@ucCh12Length:	
   120  007D                     	ds	1
   121                           
   122                           	psect	bssBANK0
   123  0043                     __pbssBANK0:	
   124  0043                     _uiBigTimer:	
   125  0043                     	ds	2
   126  0045                     _uiOneHourTimer:	
   127  0045                     	ds	2
   128  0047                     _uiSmallTimer:	
   129  0047                     	ds	2
   130  0049                     _uiTwentyMinTimer:	
   131  0049                     	ds	2
   132  004B                     _uiTwentySecondsTimer:	
   133  004B                     	ds	2
   134  004D                     vPutSampleDataIntoTable@uiCalWidthArray1:	
   135  004D                     	ds	2
   136  004F                     vPutSampleDataIntoTable@uiCalWidthArray2:	
   137  004F                     	ds	2
   138  0051                     vPutSampleDataIntoTable@uiCalWidthArray3:	
   139  0051                     	ds	2
   140  0053                     vPutSampleDataIntoTable@uiCalWidthArray4:	
   141  0053                     	ds	2
   142  0055                     vPutSampleDataIntoTable@uiCalWidthCnt:	
   143  0055                     	ds	2
   144  0057                     ISR@ucTimer1sCnt:	
   145  0057                     	ds	1
   146  0058                     _adc_convert_flag:	
   147  0058                     	ds	1
   148  0059                     _bBigTimerStartFlag:	
   149  0059                     	ds	1
   150  005A                     _bOneHourTimerStartFlag:	
   151  005A                     	ds	1
   152  005B                     _bSmallTimerStartFlag:	
   153  005B                     	ds	1
   154  005C                     _bTwentyMinStartFlag:	
   155  005C                     	ds	1
   156  005D                     _bWaitResetFlag:	
   157  005D                     	ds	1
   158  005E                     _sampleTimes:	
   159  005E                     	ds	1
   160  005F                     _timer:	
   161  005F                     	ds	1
   162  0060                     vPutSampleDataIntoTable@ucCh13Length:	
   163  0060                     	ds	1
   164  0061                     vPutSampleDataIntoTable@ucChannelFourteenthLength:	
   165  0061                     	ds	1
   166  0062                     vPutSampleDataIntoTable@ucInitFlag:	
   167  0062                     	ds	1
   168                           
   169                           	psect	dataBANK0
   170  0063                     __pdataBANK0:	
   171  0063                     _sampleChannelSelect:	
   172  0063                     	ds	1
   173  0064                     vPutSampleDataIntoTable@uiInitWidth:	
   174  0064                     	ds	1
   175                           
   176                           	psect	bssBANK1
   177  00A0                     __pbssBANK1:	
   178  00A0                     main@ucDelay1s:	
   179  00A0                     	ds	2
   180  00A2                     main@uiTimerOneP5s:	
   181  00A2                     	ds	2
   182  00A4                     main@uiTimerTwoP5s:	
   183  00A4                     	ds	2
   184  00A6                     main@cTimerP5s_786:	
   185  00A6                     	ds	1
   186  00A7                     main@cTimerP5s_792:	
   187  00A7                     	ds	1
   188  00A8                     main@ucStep:	
   189  00A8                     	ds	1
   190  00A9                     main@ucTimerP3s:	
   191  00A9                     	ds	1
   192  00AA                     main@ucTimerP5s:	
   193  00AA                     	ds	1
   194  00AB                     _uiSampleCh12:	
   195  00AB                     	ds	6
   196  00B1                     _uiSampleCh13:	
   197  00B1                     	ds	6
   198  00B7                     _uiSampleChannelFourteenth:	
   199  00B7                     	ds	6
   200                           
   201                           	psect	clrtext
   202  05F4                     clear_ram:	
   203                           ;	Called with FSR containing the base address, and
   204                           ;	W with the last address+1
   205                           
   206  05F4  0064               	clrwdt	;clear the watchdog before getting into this loop
   207  05F5                     clrloop:	
   208  05F5  0180               	clrf	0	;clear RAM location pointed to by FSR
   209  05F6  0A84               	incf	4,f	;increment pointer
   210  05F7  0604               	xorwf	4,w	;XOR with final address
   211  05F8  1903               	btfsc	3,2	;have we reached the end yet?
   212  05F9  3400               	retlw	0	;all done for this memory range, return
   213  05FA  0604               	xorwf	4,w	;XOR again to restore value
   214  05FB  2DF5               	goto	clrloop	;do the next byte
   215                           
   216                           	psect	cstackBANK1
   217  00BD                     __pcstackBANK1:	
   218  00BD                     ??_clearTwelveHoursTimer:	
   219  00BD                     ??_clearThreeHoursTimer:	
   220                           ; 0 bytes @ 0x0
   221                           
   222  00BD                     ??_clearOneHoursTimer:	
   223                           ; 0 bytes @ 0x0
   224                           
   225  00BD                     ??_clearTwentyMinTimer:	
   226                           ; 0 bytes @ 0x0
   227                           
   228  00BD                     ??_clock_config:	
   229                           ; 0 bytes @ 0x0
   230                           
   231  00BD                     ??_timer1_config:	
   232                           ; 0 bytes @ 0x0
   233                           
   234  00BD                     ??_timer1_interrupt_config:	
   235                           ; 0 bytes @ 0x0
   236                           
   237  00BD                     ?_adc_test_init:	
   238                           ; 0 bytes @ 0x0
   239                           
   240  00BD                     ?_startTwentyMinTimer:	
   241                           ; 0 bytes @ 0x0
   242                           
   243  00BD                     ??_adc_start:	
   244                           ; 0 bytes @ 0x0
   245                           
   246  00BD                     ??_isPermitSampleTime:	
   247                           ; 0 bytes @ 0x0
   248                           
   249  00BD                     ??_clrSampeTime:	
   250                           ; 0 bytes @ 0x0
   251                           
   252  00BD                     ??_isFinishedTwentyMinTimer:	
   253                           ; 0 bytes @ 0x0
   254                           
   255  00BD                     ?_startTwelveHourTimer:	
   256                           ; 0 bytes @ 0x0
   257                           
   258  00BD                     ??_isFinishedTwelveHoursTimer:	
   259                           ; 0 bytes @ 0x0
   260                           
   261  00BD                     ?_startThreeHoursTimer:	
   262                           ; 0 bytes @ 0x0
   263                           
   264  00BD                     ??_isFinishedThreeHoursTimer:	
   265                           ; 0 bytes @ 0x0
   266                           
   267  00BD                     ?_startOneHoursTimer:	
   268                           ; 0 bytes @ 0x0
   269                           
   270  00BD                     ??_isFinishedOneHoursTimer:	
   271                           ; 0 bytes @ 0x0
   272                           
   273  00BD                     ??_setWaitResetFlag:	
   274                           ; 0 bytes @ 0x0
   275                           
   276  00BD                     ??_AD_Sample:	
   277                           ; 0 bytes @ 0x0
   278                           
   279  00BD                     ??_initPB3:	
   280                           ; 0 bytes @ 0x0
   281                           
   282  00BD                     ??_setPB3:	
   283                           ; 0 bytes @ 0x0
   284                           
   285  00BD                     ??_initPB4:	
   286                           ; 0 bytes @ 0x0
   287                           
   288  00BD                     ??_setPB4:	
   289                           ; 0 bytes @ 0x0
   290                           
   291  00BD                     ??_initPB5:	
   292                           ; 0 bytes @ 0x0
   293                           
   294  00BD                     ??_setPB5:	
   295                           ; 0 bytes @ 0x0
   296                           
   297  00BD                     ??_initPB2_AsHighResistence:	
   298                           ; 0 bytes @ 0x0
   299                           
   300  00BD                     ?_pwm_start:	
   301                           ; 0 bytes @ 0x0
   302                           
   303  00BD                     ??_selectAdChannel:	
   304                           ; 0 bytes @ 0x0
   305                           
   306  00BD                     ??_reset:	
   307                           ; 0 bytes @ 0x0
   308                           
   309  00BD                     ??_resetAllTimer:	
   310                           ; 0 bytes @ 0x0
   311                           
   312  00BD                     ??_getAD_ConvertFlag:	
   313                           ; 0 bytes @ 0x0
   314                           
   315  00BD                     ??_setAD_ConvertFlag:	
   316                           ; 0 bytes @ 0x0
   317                           
   318  00BD                     ?_FilterCh13:	
   319                           ; 0 bytes @ 0x0
   320                           
   321  00BD                     initPB3@bValue:	
   322                           ; 2 bytes @ 0x0
   323                           
   324  00BD                     setPB3@bValue:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  00BD                     initPB4@bValue:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  00BD                     setPB4@bValue:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  00BD                     initPB5@bValue:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  00BD                     setPB5@bValue:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  00BD                     pwm_start@ucPulseFrequency:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  00BD                     setWaitResetFlag@bValue:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  00BD                     setAD_ConvertFlag@flag:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  00BD                     adc_test_init@ref:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  00BD                     startTwelveHourTimer@uiSetTime:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  00BD                     startThreeHoursTimer@uiSetTime:	
   355                           ; 2 bytes @ 0x0
   356                           
   357  00BD                     startOneHoursTimer@uiSetTime:	
   358                           ; 2 bytes @ 0x0
   359                           
   360  00BD                     startTwentyMinTimer@uiSetValue:	
   361                           ; 2 bytes @ 0x0
   362                           
   363                           
   364                           ; 2 bytes @ 0x0
   365  00BD                     	ds	1
   366  00BE                     ??_adc_test_init:	
   367  00BE                     ??_pwm_start:	
   368                           ; 0 bytes @ 0x1
   369                           
   370  00BE                     ??_initPin:	
   371                           ; 0 bytes @ 0x1
   372                           
   373  00BE                     ??_setPinInitVaule:	
   374                           ; 0 bytes @ 0x1
   375                           
   376  00BE                     pwm_start@ucPulseWidth:	
   377                           ; 0 bytes @ 0x1
   378                           
   379                           
   380                           ; 1 bytes @ 0x1
   381  00BE                     	ds	1
   382  00BF                     ??_startTwentyMinTimer:	
   383  00BF                     ??_startTwelveHourTimer:	
   384                           ; 0 bytes @ 0x2
   385                           
   386  00BF                     ??_startThreeHoursTimer:	
   387                           ; 0 bytes @ 0x2
   388                           
   389  00BF                     ??_startOneHoursTimer:	
   390                           ; 0 bytes @ 0x2
   391                           
   392  00BF                     ??_FilterCh13:	
   393                           ; 0 bytes @ 0x2
   394                           
   395  00BF                     adc_test_init@channel:	
   396                           ; 0 bytes @ 0x2
   397                           
   398                           
   399                           ; 1 bytes @ 0x2
   400  00BF                     	ds	1
   401  00C0                     ??_process_AD_Converter_Value:	
   402                           
   403                           ; 0 bytes @ 0x3
   404  00C0                     	ds	3
   405  00C3                     FilterCh13@tmpValue:	
   406                           
   407                           ; 1 bytes @ 0x6
   408  00C3                     	ds	1
   409  00C4                     FilterCh13@filter_temp:	
   410                           
   411                           ; 2 bytes @ 0x7
   412  00C4                     	ds	2
   413  00C6                     FilterCh13@filter_sum:	
   414                           
   415                           ; 2 bytes @ 0x9
   416  00C6                     	ds	2
   417  00C8                     FilterCh13@filter_buf:	
   418                           
   419                           ; 6 bytes @ 0xB
   420  00C8                     	ds	6
   421  00CE                     FilterCh13@cir:	
   422                           
   423                           ; 2 bytes @ 0x11
   424  00CE                     	ds	2
   425  00D0                     FilterCh13@j:	
   426                           
   427                           ; 1 bytes @ 0x13
   428  00D0                     	ds	1
   429  00D1                     FilterCh13@i:	
   430                           
   431                           ; 1 bytes @ 0x14
   432  00D1                     	ds	1
   433  00D2                     ?_getAdOriginalCh13Value:	
   434                           
   435                           ; 2 bytes @ 0x15
   436  00D2                     	ds	2
   437  00D4                     ??_getAdOriginalCh13Value:	
   438  00D4                     ??_main:	
   439                           ; 0 bytes @ 0x17
   440                           
   441                           
   442                           ; 0 bytes @ 0x17
   443  00D4                     	ds	1
   444  00D5                     main@ucChValue:	
   445                           
   446                           ; 2 bytes @ 0x18
   447  00D5                     	ds	2
   448  00D7                     main@uiCh13Value:	
   449                           
   450                           ; 2 bytes @ 0x1A
   451  00D7                     	ds	2
   452                           
   453                           	psect	cstackCOMMON
   454  0070                     __pcstackCOMMON:	
   455  0070                     ?_clearTwelveHoursTimer:	
   456  0070                     ?_clearThreeHoursTimer:	
   457                           ; 0 bytes @ 0x0
   458                           
   459  0070                     ?_clearOneHoursTimer:	
   460                           ; 0 bytes @ 0x0
   461                           
   462  0070                     ?_clearTwentyMinTimer:	
   463                           ; 0 bytes @ 0x0
   464                           
   465  0070                     ?_clock_config:	
   466                           ; 0 bytes @ 0x0
   467                           
   468  0070                     ?_timer1_config:	
   469                           ; 0 bytes @ 0x0
   470                           
   471  0070                     ?_timer1_interrupt_config:	
   472                           ; 0 bytes @ 0x0
   473                           
   474  0070                     ?_adc_start:	
   475                           ; 0 bytes @ 0x0
   476                           
   477  0070                     ?_process_AD_Converter_Value:	
   478                           ; 0 bytes @ 0x0
   479                           
   480  0070                     ?_clrSampeTime:	
   481                           ; 0 bytes @ 0x0
   482                           
   483  0070                     ?_setWaitResetFlag:	
   484                           ; 0 bytes @ 0x0
   485                           
   486  0070                     ?_AD_Sample:	
   487                           ; 0 bytes @ 0x0
   488                           
   489  0070                     ?_initPB3:	
   490                           ; 0 bytes @ 0x0
   491                           
   492  0070                     ?_setPB3:	
   493                           ; 0 bytes @ 0x0
   494                           
   495  0070                     ?_initPB4:	
   496                           ; 0 bytes @ 0x0
   497                           
   498  0070                     ?_setPB4:	
   499                           ; 0 bytes @ 0x0
   500                           
   501  0070                     ?_initPB5:	
   502                           ; 0 bytes @ 0x0
   503                           
   504  0070                     ?_setPB5:	
   505                           ; 0 bytes @ 0x0
   506                           
   507  0070                     ?_initPB2_AsHighResistence:	
   508                           ; 0 bytes @ 0x0
   509                           
   510  0070                     ?_initPin:	
   511                           ; 0 bytes @ 0x0
   512                           
   513  0070                     ?_setPinInitVaule:	
   514                           ; 0 bytes @ 0x0
   515                           
   516  0070                     ?_selectAdChannel:	
   517                           ; 0 bytes @ 0x0
   518                           
   519  0070                     ?_reset:	
   520                           ; 0 bytes @ 0x0
   521                           
   522  0070                     ?_resetAllTimer:	
   523                           ; 0 bytes @ 0x0
   524                           
   525  0070                     ??_getWaitResetFlag:	
   526                           ; 0 bytes @ 0x0
   527                           
   528  0070                     ?_setPWM_Width:	
   529                           ; 0 bytes @ 0x0
   530                           
   531  0070                     ??_setPWM_Width:	
   532                           ; 0 bytes @ 0x0
   533                           
   534  0070                     ?_setAD_ConvertFlag:	
   535                           ; 0 bytes @ 0x0
   536                           
   537  0070                     ?_ISR:	
   538                           ; 0 bytes @ 0x0
   539                           
   540  0070                     ?i1_setAD_ConvertFlag:	
   541                           ; 0 bytes @ 0x0
   542                           
   543  0070                     ??i1_setAD_ConvertFlag:	
   544                           ; 0 bytes @ 0x0
   545                           
   546  0070                     ?_isPermitSampleTime:	
   547                           ; 0 bytes @ 0x0
   548                           
   549  0070                     ?_isFinishedTwentyMinTimer:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ?_isFinishedTwelveHoursTimer:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ?_isFinishedThreeHoursTimer:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     ?_isFinishedOneHoursTimer:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ?_getWaitResetFlag:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ?_getAD_ConvertFlag:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0070                     ?_adc_get:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0070                     ?_main:	
   571                           ; 2 bytes @ 0x0
   572                           
   573  0070                     ?_Filter:	
   574                           ; 2 bytes @ 0x0
   575                           
   576  0070                     setPWM_Width@ucWidth:	
   577                           ; 2 bytes @ 0x0
   578                           
   579  0070                     i1setAD_ConvertFlag@flag:	
   580                           ; 1 bytes @ 0x0
   581                           
   582                           
   583                           ; 1 bytes @ 0x0
   584  0070                     	ds	2
   585  0072                     ??_adc_get:	
   586  0072                     ??_Filter:	
   587                           ; 0 bytes @ 0x2
   588                           
   589  0072                     adc_get@val:	
   590                           ; 0 bytes @ 0x2
   591                           
   592                           
   593                           ; 2 bytes @ 0x2
   594  0072                     	ds	4
   595  0076                     ?_vPutSampleDataIntoTable:	
   596  0076                     vPutSampleDataIntoTable@uiSampleData:	
   597                           ; 0 bytes @ 0x6
   598                           
   599                           
   600                           ; 2 bytes @ 0x6
   601  0076                     	ds	2
   602  0078                     vPutSampleDataIntoTable@channel:	
   603                           
   604                           ; 1 bytes @ 0x8
   605  0078                     	ds	1
   606  0079                     vPutSampleDataIntoTable@uiDeviationValue:	
   607                           
   608                           ; 2 bytes @ 0x9
   609  0079                     	ds	2
   610  007B                     vPutSampleDataIntoTable@i:	
   611                           
   612                           ; 2 bytes @ 0xB
   613  007B                     	ds	2
   614                           
   615                           	psect	cstackBANK0
   616  0020                     __pcstackBANK0:	
   617  0020                     Filter@filter_temp:	
   618                           
   619                           ; 2 bytes @ 0x0
   620  0020                     	ds	2
   621  0022                     Filter@filter_sum:	
   622                           
   623                           ; 2 bytes @ 0x2
   624  0022                     	ds	2
   625  0024                     Filter@tmpValue:	
   626                           
   627                           ; 1 bytes @ 0x4
   628  0024                     	ds	1
   629  0025                     Filter@filter_buf:	
   630                           
   631                           ; 6 bytes @ 0x5
   632  0025                     	ds	6
   633  002B                     Filter@cir:	
   634                           
   635                           ; 2 bytes @ 0xB
   636  002B                     	ds	2
   637  002D                     Filter@j:	
   638                           
   639                           ; 1 bytes @ 0xD
   640  002D                     	ds	1
   641  002E                     Filter@i:	
   642                           
   643                           ; 1 bytes @ 0xE
   644  002E                     	ds	1
   645  002F                     ??_vPutSampleDataIntoTable:	
   646                           
   647                           ; 0 bytes @ 0xF
   648  002F                     	ds	16
   649  003F                     ??_ISR:	
   650                           
   651                           ; 0 bytes @ 0x1F
   652  003F                     	ds	4
   653                           
   654                           	psect	maintext
   655  023E                     __pmaintext:	
   656 ;;Data sizes: Strings 0, constant 0, data 2, bss 62, persistent 0 stack 0
   657 ;;Auto spaces:   Size  Autos    Used
   658 ;; COMMON          14     13      14
   659 ;; BANK0           80     35      69
   660 ;; BANK1           80     28      57
   661 ;; BANK3           96      0       0
   662 ;; BANK2           96      0       0
   663 ;;
   664 ;; Pointer list with targets:
   665 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   666 ;;
   667 ;; ?_getAdOriginalCh13Value	unsigned int  size(1) Largest target is 0
   668 ;;
   669 ;; ?_Filter	unsigned int  size(1) Largest target is 0
   670 ;;
   671 ;; ?_FilterCh13	unsigned int  size(1) Largest target is 0
   672 ;;
   673 ;; Filter@tmpValue	PTR unsigned int  size(1) Largest target is 6
   674 ;;		 -> uiSampleChannelFourteenth(BANK1[6]), uiSampleCh12(BANK1[6]), 
   675 ;;
   676 ;; FilterCh13@tmpValue	PTR unsigned int  size(1) Largest target is 6
   677 ;;		 -> uiSampleCh13(BANK1[6]), 
   678 ;;
   679 ;;
   680 ;; Critical Paths under _main in COMMON
   681 ;;
   682 ;;   None.
   683 ;;
   684 ;; Critical Paths under _ISR in COMMON
   685 ;;
   686 ;;   _ISR->_vPutSampleDataIntoTable
   687 ;;   _vPutSampleDataIntoTable->_Filter
   688 ;;
   689 ;; Critical Paths under _main in BANK0
   690 ;;
   691 ;;   None.
   692 ;;
   693 ;; Critical Paths under _ISR in BANK0
   694 ;;
   695 ;;   _ISR->_vPutSampleDataIntoTable
   696 ;;   _vPutSampleDataIntoTable->_Filter
   697 ;;
   698 ;; Critical Paths under _main in BANK1
   699 ;;
   700 ;;   _main->_getAdOriginalCh13Value
   701 ;;   _getAdOriginalCh13Value->_FilterCh13
   702 ;;   _process_AD_Converter_Value->_adc_test_init
   703 ;;   _setPinInitVaule->_setPB3
   704 ;;   _setPinInitVaule->_setPB4
   705 ;;   _setPinInitVaule->_setPB5
   706 ;;   _initPin->_initPB3
   707 ;;   _initPin->_initPB4
   708 ;;   _initPin->_initPB5
   709 ;;
   710 ;; Critical Paths under _ISR in BANK1
   711 ;;
   712 ;;   None.
   713 ;;
   714 ;; Critical Paths under _main in BANK3
   715 ;;
   716 ;;   None.
   717 ;;
   718 ;; Critical Paths under _ISR in BANK3
   719 ;;
   720 ;;   None.
   721 ;;
   722 ;; Critical Paths under _main in BANK2
   723 ;;
   724 ;;   None.
   725 ;;
   726 ;; Critical Paths under _ISR in BANK2
   727 ;;
   728 ;;   None.
   729 ;;
   730 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   731 ;;
   732 ;;
   733 ;;Call Graph Tables:
   734 ;;
   735 ;; ---------------------------------------------------------------------------------
   736 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   737 ;; ---------------------------------------------------------------------------------
   738 ;; (0) _main                                                 5     5      0    1665
   739 ;;                                             23 BANK1      5     5      0
   740 ;;                            _initPin
   741 ;;                    _setPinInitVaule
   742 ;;                    _selectAdChannel
   743 ;;                       _clock_config
   744 ;;                      _timer1_config
   745 ;;            _timer1_interrupt_config
   746 ;;                      _adc_test_init
   747 ;;                _startTwentyMinTimer
   748 ;;                          _adc_start
   749 ;;         _process_AD_Converter_Value
   750 ;;                 _isPermitSampleTime
   751 ;;                       _clrSampeTime
   752 ;;           _isFinishedTwentyMinTimer
   753 ;;             _getAdOriginalCh13Value
   754 ;;                          _pwm_start
   755 ;;                             _setPB3
   756 ;;                             _setPB4
   757 ;;                             _setPB5
   758 ;;                _clearTwentyMinTimer
   759 ;;               _startTwelveHourTimer
   760 ;;         _isFinishedTwelveHoursTimer
   761 ;;              _clearTwelveHoursTimer
   762 ;;               _startThreeHoursTimer
   763 ;;          _isFinishedThreeHoursTimer
   764 ;;               _clearThreeHoursTimer
   765 ;;                 _startOneHoursTimer
   766 ;;            _isFinishedOneHoursTimer
   767 ;;                      _resetAllTimer
   768 ;;                   _setWaitResetFlag
   769 ;;                              _reset
   770 ;; ---------------------------------------------------------------------------------
   771 ;; (1) _getAdOriginalCh13Value                               2     0      2     915
   772 ;;                                             21 BANK1      2     0      2
   773 ;;                         _FilterCh13
   774 ;; ---------------------------------------------------------------------------------
   775 ;; (1) _process_AD_Converter_Value                           0     0      0      93
   776 ;;                  _getAD_ConvertFlag
   777 ;;                  _setAD_ConvertFlag
   778 ;;                          _AD_Sample
   779 ;;                      _adc_test_init
   780 ;;                          _adc_start
   781 ;; ---------------------------------------------------------------------------------
   782 ;; (1) _resetAllTimer                                        0     0      0       0
   783 ;;              _clearTwelveHoursTimer
   784 ;;               _clearThreeHoursTimer
   785 ;;                 _clearOneHoursTimer
   786 ;;                _clearTwentyMinTimer
   787 ;; ---------------------------------------------------------------------------------
   788 ;; (1) _setPinInitVaule                                      0     0      0      93
   789 ;;                             _setPB3
   790 ;;                             _setPB4
   791 ;;                             _setPB5
   792 ;; ---------------------------------------------------------------------------------
   793 ;; (1) _initPin                                              0     0      0      93
   794 ;;           _initPB2_AsHighResistence
   795 ;;                            _initPB3
   796 ;;                            _initPB4
   797 ;;                            _initPB5
   798 ;; ---------------------------------------------------------------------------------
   799 ;; (2) _AD_Sample                                            0     0      0       0
   800 ;; ---------------------------------------------------------------------------------
   801 ;; (2) _setAD_ConvertFlag                                    1     1      0      31
   802 ;;                                              0 BANK1      1     1      0
   803 ;; ---------------------------------------------------------------------------------
   804 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   805 ;; ---------------------------------------------------------------------------------
   806 ;; (2) _FilterCh13                                          21    19      2     915
   807 ;;                                              0 BANK1     21    19      2
   808 ;; ---------------------------------------------------------------------------------
   809 ;; (1) _setWaitResetFlag                                     1     1      0      31
   810 ;;                                              0 BANK1      1     1      0
   811 ;; ---------------------------------------------------------------------------------
   812 ;; (1) _isFinishedOneHoursTimer                              0     0      0       0
   813 ;; ---------------------------------------------------------------------------------
   814 ;; (1) _startOneHoursTimer                                   2     0      2      31
   815 ;;                                              0 BANK1      2     0      2
   816 ;; ---------------------------------------------------------------------------------
   817 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   818 ;; ---------------------------------------------------------------------------------
   819 ;; (1) _startThreeHoursTimer                                 2     0      2      31
   820 ;;                                              0 BANK1      2     0      2
   821 ;; ---------------------------------------------------------------------------------
   822 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   823 ;; ---------------------------------------------------------------------------------
   824 ;; (1) _startTwelveHourTimer                                 2     0      2      31
   825 ;;                                              0 BANK1      2     0      2
   826 ;; ---------------------------------------------------------------------------------
   827 ;; (1) _isFinishedTwentyMinTimer                             0     0      0       0
   828 ;; ---------------------------------------------------------------------------------
   829 ;; (1) _clrSampeTime                                         0     0      0       0
   830 ;; ---------------------------------------------------------------------------------
   831 ;; (1) _isPermitSampleTime                                   0     0      0       0
   832 ;; ---------------------------------------------------------------------------------
   833 ;; (2) _adc_start                                            0     0      0       0
   834 ;; ---------------------------------------------------------------------------------
   835 ;; (1) _startTwentyMinTimer                                  2     0      2      31
   836 ;;                                              0 BANK1      2     0      2
   837 ;; ---------------------------------------------------------------------------------
   838 ;; (2) _adc_test_init                                        3     2      1      62
   839 ;;                                              0 BANK1      3     2      1
   840 ;; ---------------------------------------------------------------------------------
   841 ;; (1) _timer1_interrupt_config                              0     0      0       0
   842 ;; ---------------------------------------------------------------------------------
   843 ;; (1) _timer1_config                                        0     0      0       0
   844 ;; ---------------------------------------------------------------------------------
   845 ;; (1) _clock_config                                         0     0      0       0
   846 ;; ---------------------------------------------------------------------------------
   847 ;; (2) _clearTwentyMinTimer                                  0     0      0       0
   848 ;; ---------------------------------------------------------------------------------
   849 ;; (2) _clearOneHoursTimer                                   0     0      0       0
   850 ;; ---------------------------------------------------------------------------------
   851 ;; (2) _clearThreeHoursTimer                                 0     0      0       0
   852 ;; ---------------------------------------------------------------------------------
   853 ;; (2) _clearTwelveHoursTimer                                0     0      0       0
   854 ;; ---------------------------------------------------------------------------------
   855 ;; (1) _reset                                                0     0      0       0
   856 ;; ---------------------------------------------------------------------------------
   857 ;; (1) _selectAdChannel                                      0     0      0       0
   858 ;; ---------------------------------------------------------------------------------
   859 ;; (1) _pwm_start                                            2     1      1      62
   860 ;;                                              0 BANK1      2     1      1
   861 ;; ---------------------------------------------------------------------------------
   862 ;; (2) _initPB2_AsHighResistence                             0     0      0       0
   863 ;; ---------------------------------------------------------------------------------
   864 ;; (1) _setPB5                                               1     1      0      31
   865 ;;                                              0 BANK1      1     1      0
   866 ;; ---------------------------------------------------------------------------------
   867 ;; (2) _initPB5                                              1     1      0      31
   868 ;;                                              0 BANK1      1     1      0
   869 ;; ---------------------------------------------------------------------------------
   870 ;; (1) _setPB4                                               1     1      0      31
   871 ;;                                              0 BANK1      1     1      0
   872 ;; ---------------------------------------------------------------------------------
   873 ;; (2) _initPB4                                              1     1      0      31
   874 ;;                                              0 BANK1      1     1      0
   875 ;; ---------------------------------------------------------------------------------
   876 ;; (1) _setPB3                                               1     1      0      31
   877 ;;                                              0 BANK1      1     1      0
   878 ;; ---------------------------------------------------------------------------------
   879 ;; (2) _initPB3                                              1     1      0      31
   880 ;;                                              0 BANK1      1     1      0
   881 ;; ---------------------------------------------------------------------------------
   882 ;; Estimated maximum stack depth 2
   883 ;; ---------------------------------------------------------------------------------
   884 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   885 ;; ---------------------------------------------------------------------------------
   886 ;; (3) _ISR                                                  4     4      0    1107
   887 ;;                                             31 BANK0      4     4      0
   888 ;;                i1_setAD_ConvertFlag
   889 ;;                            _adc_get
   890 ;;            _vPutSampleDataIntoTable
   891 ;; ---------------------------------------------------------------------------------
   892 ;; (4) _vPutSampleDataIntoTable                             25    22      3    1010
   893 ;;                                              6 COMMON     7     4      3
   894 ;;                                             15 BANK0     16    16      0
   895 ;;                             _Filter
   896 ;;                   _getWaitResetFlag
   897 ;;                       _setPWM_Width
   898 ;;                            _adc_get (ARG)
   899 ;; ---------------------------------------------------------------------------------
   900 ;; (4) i1_setAD_ConvertFlag                                  1     1      0      73
   901 ;;                                              0 COMMON     1     1      0
   902 ;; ---------------------------------------------------------------------------------
   903 ;; (4) _adc_get                                              4     2      2      24
   904 ;;                                              0 COMMON     4     2      2
   905 ;; ---------------------------------------------------------------------------------
   906 ;; (5) _Filter                                              21    19      2     620
   907 ;;                                              0 COMMON     6     4      2
   908 ;;                                              0 BANK0     15    15      0
   909 ;; ---------------------------------------------------------------------------------
   910 ;; (5) _setPWM_Width                                         1     1      0      33
   911 ;;                                              0 COMMON     1     1      0
   912 ;; ---------------------------------------------------------------------------------
   913 ;; (5) _getWaitResetFlag                                     0     0      0       0
   914 ;; ---------------------------------------------------------------------------------
   915 ;; Estimated maximum stack depth 5
   916 ;; ---------------------------------------------------------------------------------
   917 ;; Call Graph Graphs:
   918 ;; _main (ROOT)
   919 ;;   _initPin
   920 ;;     _initPB2_AsHighResistence
   921 ;;     _initPB3
   922 ;;     _initPB4
   923 ;;     _initPB5
   924 ;;   _setPinInitVaule
   925 ;;     _setPB3
   926 ;;     _setPB4
   927 ;;     _setPB5
   928 ;;   _selectAdChannel
   929 ;;   _clock_config
   930 ;;   _timer1_config
   931 ;;   _timer1_interrupt_config
   932 ;;   _adc_test_init
   933 ;;   _startTwentyMinTimer
   934 ;;   _adc_start
   935 ;;   _process_AD_Converter_Value
   936 ;;     _getAD_ConvertFlag
   937 ;;     _setAD_ConvertFlag
   938 ;;     _AD_Sample
   939 ;;     _adc_test_init
   940 ;;     _adc_start
   941 ;;   _isPermitSampleTime
   942 ;;   _clrSampeTime
   943 ;;   _isFinishedTwentyMinTimer
   944 ;;   _getAdOriginalCh13Value
   945 ;;     _FilterCh13
   946 ;;   _pwm_start
   947 ;;   _setPB3
   948 ;;   _setPB4
   949 ;;   _setPB5
   950 ;;   _clearTwentyMinTimer
   951 ;;   _startTwelveHourTimer
   952 ;;   _isFinishedTwelveHoursTimer
   953 ;;   _clearTwelveHoursTimer
   954 ;;   _startThreeHoursTimer
   955 ;;   _isFinishedThreeHoursTimer
   956 ;;   _clearThreeHoursTimer
   957 ;;   _startOneHoursTimer
   958 ;;   _isFinishedOneHoursTimer
   959 ;;   _resetAllTimer
   960 ;;     _clearTwelveHoursTimer
   961 ;;     _clearThreeHoursTimer
   962 ;;     _clearOneHoursTimer
   963 ;;     _clearTwentyMinTimer
   964 ;;   _setWaitResetFlag
   965 ;;   _reset
   966 ;;
   967 ;; _ISR (ROOT)
   968 ;;   i1_setAD_ConvertFlag
   969 ;;   _adc_get
   970 ;;   _vPutSampleDataIntoTable
   971 ;;     _Filter
   972 ;;     _getWaitResetFlag
   973 ;;     _setPWM_Width
   974 ;;     _adc_get (ARG)
   975 ;;
   976 ;; Address spaces:
   977 ;;Name               Size   Autos  Total    Cost      Usage
   978 ;;BANK3               60      0       0      10        0.0%
   979 ;;BITBANK3            60      0       0       9        0.0%
   980 ;;SFR3                 0      0       0       4        0.0%
   981 ;;BITSFR3              0      0       0       4        0.0%
   982 ;;BANK2               60      0       0      12        0.0%
   983 ;;BITBANK2            60      0       0      11        0.0%
   984 ;;SFR2                 0      0       0       5        0.0%
   985 ;;BITSFR2              0      0       0       5        0.0%
   986 ;;SFR1                 0      0       0       2        0.0%
   987 ;;BITSFR1              0      0       0       2        0.0%
   988 ;;BANK1               50     1C      39       8       71.3%
   989 ;;BITBANK1            50      0       0       7        0.0%
   990 ;;CODE                 0      0       0       0        0.0%
   991 ;;DATA                 0      0      94       6        0.0%
   992 ;;ABS                  0      0      8C       3        0.0%
   993 ;;NULL                 0      0       0       0        0.0%
   994 ;;STACK                0      0       8       2        0.0%
   995 ;;BANK0               50     23      45       5       86.3%
   996 ;;BITBANK0            50      0       0       4        0.0%
   997 ;;SFR0                 0      0       0       1        0.0%
   998 ;;BITSFR0              0      0       0       1        0.0%
   999 ;;COMMON               E      D       E       1      100.0%
  1000 ;;BITCOMMON            E      0       0       0        0.0%
  1001                           
  1002                           
  1003 ;; *************** function _main *****************
  1004 ;; Defined at:
  1005 ;;		line 529 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  1006 ;; Parameters:    Size  Location     Type
  1007 ;;		None
  1008 ;; Auto vars:     Size  Location     Type
  1009 ;;  ucChValue       2   24[BANK1 ] unsigned int 
  1010 ;;  uiCh13Value     2   26[BANK1 ] unsigned int 
  1011 ;; Return value:  Size  Location     Type
  1012 ;;                  2  732[COMMON] int 
  1013 ;; Registers used:
  1014 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1015 ;; Tracked objects:
  1016 ;;		On entry : 17F/0
  1017 ;;		On exit  : 60/20
  1018 ;;		Unchanged: 0/0
  1019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1020 ;;      Params:         0       0       0       0       0
  1021 ;;      Locals:         0       0       4       0       0
  1022 ;;      Temps:          0       0       1       0       0
  1023 ;;      Totals:         0       0       5       0       0
  1024 ;;Total ram usage:        5 bytes
  1025 ;; Hardware stack levels required when called:    5
  1026 ;; This function calls:
  1027 ;;		_initPin
  1028 ;;		_setPinInitVaule
  1029 ;;		_selectAdChannel
  1030 ;;		_clock_config
  1031 ;;		_timer1_config
  1032 ;;		_timer1_interrupt_config
  1033 ;;		_adc_test_init
  1034 ;;		_startTwentyMinTimer
  1035 ;;		_adc_start
  1036 ;;		_process_AD_Converter_Value
  1037 ;;		_isPermitSampleTime
  1038 ;;		_clrSampeTime
  1039 ;;		_isFinishedTwentyMinTimer
  1040 ;;		_getAdOriginalCh13Value
  1041 ;;		_pwm_start
  1042 ;;		_setPB3
  1043 ;;		_setPB4
  1044 ;;		_setPB5
  1045 ;;		_clearTwentyMinTimer
  1046 ;;		_startTwelveHourTimer
  1047 ;;		_isFinishedTwelveHoursTimer
  1048 ;;		_clearTwelveHoursTimer
  1049 ;;		_startThreeHoursTimer
  1050 ;;		_isFinishedThreeHoursTimer
  1051 ;;		_clearThreeHoursTimer
  1052 ;;		_startOneHoursTimer
  1053 ;;		_isFinishedOneHoursTimer
  1054 ;;		_resetAllTimer
  1055 ;;		_setWaitResetFlag
  1056 ;;		_reset
  1057 ;; This function is called by:
  1058 ;;		Startup code after reset
  1059 ;; This function uses a non-reentrant model
  1060 ;;
  1061  023E                     _main:	
  1062                           
  1063                           ;main.c: 530: enum systemStep {
  1064                           ;main.c: 531: INIT_STEP = 0,
  1065                           ;main.c: 532: START_UP_PWM_STEP,
  1066                           ;main.c: 533: CHECK_10_HOUR_TIMER_STEP,
  1067                           ;main.c: 534: STARTUP_3_HOUR_TIMER_STEP,
  1068                           ;main.c: 535: CHECK_3_HOUR_TIMER_STEP,
  1069                           ;main.c: 536: STARTUP_1_HOUR_TIMER_STEP,
  1070                           ;main.c: 537: CHECK_1_HOUR_TIMER_STEP,
  1071                           ;main.c: 538: READY_FOR_RESET_STEP = 99,
  1072                           ;main.c: 539: DELAY_ONE_SECOND_FOR_PWM,
  1073                           ;main.c: 540: MEET_RESET_CONDITION_STEP,
  1074                           ;main.c: 541: RESET_STEP,
  1075                           ;main.c: 542: };
  1076                           ;main.c: 544: static enum systemStep ucStep = INIT_STEP;
  1077                           
  1078                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1079  023E  118A  2507  118A   	fcall	_initPin
  1080                           
  1081                           ;main.c: 558: setPinInitVaule();
  1082  0241  118A  24DE  118A   	fcall	_setPinInitVaule
  1083                           
  1084                           ;main.c: 559: selectAdChannel();
  1085  0244  118A  260D  118A   	fcall	_selectAdChannel
  1086                           
  1087                           ;main.c: 561: clock_config();
  1088  0247  118A  25FC  118A   	fcall	_clock_config
  1089                           
  1090                           ;main.c: 562: timer1_config();
  1091  024A  118A  25EA  118A   	fcall	_timer1_config
  1092                           
  1093                           ;main.c: 563: timer1_interrupt_config();
  1094  024D  118A  2611  118A   	fcall	_timer1_interrupt_config
  1095                           
  1096                           ;main.c: 565: adc_test_init(2,3);
  1097  0250  3003               	movlw	3
  1098  0251  00BD               	movwf	?_adc_test_init^(0+128)
  1099  0252  3002               	movlw	2
  1100  0253  118A  24BE  118A   	fcall	_adc_test_init
  1101                           
  1102                           ;main.c: 571: startTwentyMinTimer( 1200 );
  1103  0256  30B0               	movlw	176
  1104  0257  00BD               	movwf	?_startTwentyMinTimer^(0+128)
  1105  0258  3004               	movlw	4
  1106  0259  00BE               	movwf	(?_startTwentyMinTimer^(0+128)+1)
  1107  025A  118A  25AB  118A   	fcall	_startTwentyMinTimer
  1108                           
  1109                           ;main.c: 572: _delay(1000);
  1110  025D  30F9               	movlw	249
  1111  025E  1683               	bsf	3,5	;RP0=1, select bank1
  1112  025F  00D4               	movwf	??_main^(0+128)
  1113  0260                     u2217:	
  1114  0260  0064               	clrwdt
  1115  0261  0BD4               	decfsz	??_main^(0+128),f
  1116  0262  2A60               	goto	u2217
  1117  0263  2A64               	nop2	;nop
  1118  0264  0064               	clrwdt
  1119                           
  1120                           ;main.c: 573: adc_start();
  1121  0265  118A  24DA  118A   	fcall	_adc_start
  1122                           
  1123                           ;main.c: 601: switch(ucStep)
  1124  0268  2BB1               	goto	l4261
  1125  0269                     l4269:	
  1126                           
  1127                           ;main.c: 605: {
  1128                           ;main.c: 610: static unsigned char ucTimerP3s = 0;
  1129                           ;main.c: 612: if( isFinishedTwentyMinTimer() )
  1130  0269  118A  25DF  118A   	fcall	_isFinishedTwentyMinTimer
  1131  026C  3A00               	xorlw	0
  1132  026D  1903               	skipnz
  1133  026E  2A74               	goto	l4275
  1134                           
  1135                           ;main.c: 613: {
  1136                           ;main.c: 614: ucStep = READY_FOR_RESET_STEP;
  1137  026F  3063               	movlw	99
  1138  0270  1683               	bsf	3,5	;RP0=1, select bank1
  1139  0271  00A8               	movwf	main@ucStep^(0+128)
  1140                           
  1141                           ;main.c: 615: ucTimerP3s = 0;
  1142  0272  01A9               	clrf	main@ucTimerP3s^(0+128)
  1143                           
  1144                           ;main.c: 616: }
  1145  0273  2BB1               	goto	l4261
  1146  0274                     l4275:	
  1147                           
  1148                           ;main.c: 617: else
  1149                           ;main.c: 618: {
  1150                           ;main.c: 619: if( getAdOriginalCh13Value() > 90 )
  1151  0274  118A  23E3  118A   	fcall	_getAdOriginalCh13Value
  1152  0277  3000               	movlw	0
  1153  0278  0253               	subwf	(?_getAdOriginalCh13Value+1)^(0+128),w
  1154  0279  305B               	movlw	91
  1155  027A  1903               	skipnz
  1156  027B  0252               	subwf	?_getAdOriginalCh13Value^(0+128),w
  1157  027C  1C03               	skipc
  1158  027D  2A80               	goto	l4279
  1159                           
  1160                           ;main.c: 620: {
  1161                           ;main.c: 621: ucTimerP3s++;
  1162  027E  0AA9               	incf	main@ucTimerP3s^(0+128),f
  1163                           
  1164                           ;main.c: 622: }
  1165  027F  2A81               	goto	l4281
  1166  0280                     l4279:	
  1167                           
  1168                           ;main.c: 623: else
  1169                           ;main.c: 624: ucTimerP3s = 0;
  1170  0280  01A9               	clrf	main@ucTimerP3s^(0+128)
  1171  0281                     l4281:	
  1172                           
  1173                           ;main.c: 626: if( ucTimerP3s >= 30)
  1174  0281  301E               	movlw	30
  1175  0282  0229               	subwf	main@ucTimerP3s^(0+128),w
  1176  0283  1C03               	skipc
  1177  0284  2BB1               	goto	l4261
  1178                           
  1179                           ;main.c: 627: {
  1180                           ;main.c: 628: ucTimerP3s = 0;
  1181  0285  01A9               	clrf	main@ucTimerP3s^(0+128)
  1182  0286                     l4285:	
  1183                           
  1184                           ;main.c: 629: ucStep = START_UP_PWM_STEP;
  1185  0286  1683               	bsf	3,5	;RP0=1, select bank1
  1186  0287  01A8               	clrf	main@ucStep^(0+128)
  1187  0288  0AA8               	incf	main@ucStep^(0+128),f
  1188  0289  2BB1               	goto	l4261
  1189  028A                     l4287:	
  1190                           
  1191                           ;main.c: 640: {
  1192                           ;main.c: 645: pwm_start(150,249);
  1193  028A  30F9               	movlw	249
  1194  028B  00BD               	movwf	?_pwm_start^(0+128)
  1195  028C  3096               	movlw	150
  1196  028D  118A  2548  118A   	fcall	_pwm_start
  1197                           
  1198                           ;main.c: 647: setPB3(0);
  1199  0290  3000               	movlw	0
  1200  0291  118A  24E6  118A   	fcall	_setPB3
  1201                           
  1202                           ;main.c: 648: setPB4(1);
  1203  0294  3001               	movlw	1
  1204  0295  118A  24F1  118A   	fcall	_setPB4
  1205                           
  1206                           ;main.c: 649: setPB5(0);
  1207  0298  3000               	movlw	0
  1208  0299  118A  24FC  118A   	fcall	_setPB5
  1209                           
  1210                           ;main.c: 650: clearTwentyMinTimer();
  1211  029C  118A  2544  118A   	fcall	_clearTwentyMinTimer
  1212                           
  1213                           ;main.c: 651: startTwelveHourTimer( 36000);
  1214  029F  30A0               	movlw	160
  1215  02A0  1683               	bsf	3,5	;RP0=1, select bank1
  1216  02A1  00BD               	movwf	?_startTwelveHourTimer^(0+128)
  1217  02A2  308C               	movlw	140
  1218  02A3  00BE               	movwf	(?_startTwelveHourTimer^(0+128)+1)
  1219  02A4  118A  2598  118A   	fcall	_startTwelveHourTimer
  1220                           
  1221                           ;main.c: 652: ucStep = CHECK_10_HOUR_TIMER_STEP;
  1222  02A7  3002               	movlw	2
  1223  02A8  2B84               	goto	L9
  1224  02A9                     l4295:	
  1225                           ;main.c: 653: break;
  1226                           
  1227                           
  1228                           ;main.c: 657: {
  1229                           ;main.c: 662: static unsigned char ucTimerP5s = 0;
  1230                           ;main.c: 664: if( isFinishedTwelveHoursTimer () )
  1231  02A9  118A  25D4  118A   	fcall	_isFinishedTwelveHoursTimer
  1232  02AC  3A00               	xorlw	0
  1233  02AD  1903               	skipnz
  1234  02AE  2AB1               	goto	l4299
  1235  02AF                     l4297:	
  1236                           
  1237                           ;main.c: 665: ucStep = READY_FOR_RESET_STEP;
  1238  02AF  3063               	movlw	99
  1239  02B0  2B84               	goto	L9
  1240  02B1                     l4299:	
  1241                           
  1242                           ;main.c: 666: else
  1243                           ;main.c: 667: {
  1244                           ;main.c: 668: if( getAdOriginalCh13Value() < 200 )
  1245  02B1  118A  23E3  118A   	fcall	_getAdOriginalCh13Value
  1246  02B4  3000               	movlw	0
  1247  02B5  0253               	subwf	(?_getAdOriginalCh13Value+1)^(0+128),w
  1248  02B6  30C8               	movlw	200
  1249  02B7  1903               	skipnz
  1250  02B8  0252               	subwf	?_getAdOriginalCh13Value^(0+128),w
  1251  02B9  1803               	skipnc
  1252  02BA  2ABD               	goto	l4303
  1253                           
  1254                           ;main.c: 669: ucTimerP5s++;
  1255  02BB  0AAA               	incf	main@ucTimerP5s^(0+128),f
  1256  02BC  2ABE               	goto	l4305
  1257  02BD                     l4303:	
  1258                           
  1259                           ;main.c: 670: else
  1260                           ;main.c: 671: ucTimerP5s = 0;
  1261  02BD  01AA               	clrf	main@ucTimerP5s^(0+128)
  1262  02BE                     l4305:	
  1263                           
  1264                           ;main.c: 673: if( ucTimerP5s >= 10)
  1265  02BE  300A               	movlw	10
  1266  02BF  022A               	subwf	main@ucTimerP5s^(0+128),w
  1267  02C0  1C03               	skipc
  1268  02C1  2BB1               	goto	l4261
  1269  02C2  3003               	movlw	3
  1270                           
  1271                           ;main.c: 674: {
  1272                           ;main.c: 675: ucTimerP5s = 0;
  1273  02C3  01AA               	clrf	main@ucTimerP5s^(0+128)
  1274                           
  1275                           ;main.c: 676: ucStep = STARTUP_3_HOUR_TIMER_STEP;
  1276  02C4  2BAB               	goto	L8
  1277  02C5                     l4311:	
  1278                           
  1279                           ;main.c: 684: {
  1280                           ;main.c: 685: clearTwelveHoursTimer();
  1281  02C5  118A  2536  118A   	fcall	_clearTwelveHoursTimer
  1282                           
  1283                           ;main.c: 686: startThreeHoursTimer(10800);
  1284  02C8  3030               	movlw	48
  1285  02C9  1683               	bsf	3,5	;RP0=1, select bank1
  1286  02CA  00BD               	movwf	?_startThreeHoursTimer^(0+128)
  1287  02CB  302A               	movlw	42
  1288  02CC  00BE               	movwf	(?_startThreeHoursTimer^(0+128)+1)
  1289  02CD  118A  2585  118A   	fcall	_startThreeHoursTimer
  1290                           
  1291                           ;main.c: 687: ucStep = CHECK_3_HOUR_TIMER_STEP;
  1292  02D0  3004               	movlw	4
  1293  02D1  2B84               	goto	L9
  1294  02D2                     l4315:	
  1295                           ;main.c: 688: break;
  1296                           
  1297                           
  1298                           ;main.c: 692: {
  1299                           ;main.c: 693: static unsigned char ucTimerP5s = 0;
  1300                           ;main.c: 695: if( isFinishedThreeHoursTimer() )
  1301  02D2  118A  25C9  118A   	fcall	_isFinishedThreeHoursTimer
  1302  02D5  3A00               	xorlw	0
  1303  02D6  1D03               	btfss	3,2
  1304  02D7  2AAF               	goto	l4297
  1305                           
  1306                           ;main.c: 697: else
  1307                           ;main.c: 698: {
  1308                           ;main.c: 699: if( getAdOriginalCh13Value() < 65 )
  1309  02D8  118A  23E3  118A   	fcall	_getAdOriginalCh13Value
  1310  02DB  3000               	movlw	0
  1311  02DC  0253               	subwf	(?_getAdOriginalCh13Value+1)^(0+128),w
  1312  02DD  3041               	movlw	65
  1313  02DE  1903               	skipnz
  1314  02DF  0252               	subwf	?_getAdOriginalCh13Value^(0+128),w
  1315  02E0  1803               	skipnc
  1316  02E1  2AE4               	goto	l4323
  1317                           
  1318                           ;main.c: 700: ucTimerP5s++;
  1319  02E2  0AA6               	incf	main@cTimerP5s_786^(0+128),f
  1320  02E3  2AE5               	goto	l4325
  1321  02E4                     l4323:	
  1322                           
  1323                           ;main.c: 701: else
  1324                           ;main.c: 702: ucTimerP5s = 0;
  1325  02E4  01A6               	clrf	main@cTimerP5s_786^(0+128)
  1326  02E5                     l4325:	
  1327                           
  1328                           ;main.c: 704: if( ucTimerP5s >= 10)
  1329  02E5  300A               	movlw	10
  1330  02E6  0226               	subwf	main@cTimerP5s_786^(0+128),w
  1331  02E7  1C03               	skipc
  1332  02E8  2BB1               	goto	l4261
  1333  02E9  3005               	movlw	5
  1334                           
  1335                           ;main.c: 705: {
  1336                           ;main.c: 706: ucTimerP5s = 0;
  1337  02EA  01A6               	clrf	main@cTimerP5s_786^(0+128)
  1338                           
  1339                           ;main.c: 707: ucStep = STARTUP_1_HOUR_TIMER_STEP;
  1340  02EB  2BAB               	goto	L8
  1341  02EC                     l4331:	
  1342                           
  1343                           ;main.c: 714: {
  1344                           ;main.c: 715: clearThreeHoursTimer();
  1345  02EC  118A  253B  118A   	fcall	_clearThreeHoursTimer
  1346                           
  1347                           ;main.c: 716: startOneHoursTimer( 3600 );
  1348  02EF  3010               	movlw	16
  1349  02F0  1683               	bsf	3,5	;RP0=1, select bank1
  1350  02F1  00BD               	movwf	?_startOneHoursTimer^(0+128)
  1351  02F2  300E               	movlw	14
  1352  02F3  00BE               	movwf	(?_startOneHoursTimer^(0+128)+1)
  1353  02F4  118A  2572  118A   	fcall	_startOneHoursTimer
  1354                           
  1355                           ;main.c: 717: setPB3(1);
  1356  02F7  3001               	movlw	1
  1357  02F8  118A  24E6  118A   	fcall	_setPB3
  1358                           
  1359                           ;main.c: 718: setPB4(0);
  1360  02FB  3000               	movlw	0
  1361  02FC  118A  24F1  118A   	fcall	_setPB4
  1362                           
  1363                           ;main.c: 719: setPB5(1);
  1364  02FF  3001               	movlw	1
  1365  0300  118A  24FC  118A   	fcall	_setPB5
  1366                           
  1367                           ;main.c: 720: ucStep = CHECK_1_HOUR_TIMER_STEP;
  1368  0303  3006               	movlw	6
  1369  0304  2B84               	goto	L9
  1370  0305                     l4343:	
  1371                           ;main.c: 721: break;
  1372                           
  1373                           
  1374                           ;main.c: 725: {
  1375                           ;main.c: 730: static unsigned int uiTimerOneP5s = 0;
  1376                           ;main.c: 731: static unsigned int uiTimerTwoP5s = 0;
  1377                           ;main.c: 732: static unsigned int uiTimerThreeP5s = 0;
  1378                           ;main.c: 734: unsigned int uiCh13Value = getAdOriginalCh13Value();
  1379  0305  118A  23E3  118A   	fcall	_getAdOriginalCh13Value
  1380  0308  0853               	movf	(?_getAdOriginalCh13Value+1)^(0+128),w
  1381  0309  00D8               	movwf	(main@uiCh13Value+1)^(0+128)
  1382  030A  0852               	movf	?_getAdOriginalCh13Value^(0+128),w
  1383  030B  00D7               	movwf	main@uiCh13Value^(0+128)
  1384                           
  1385                           ;main.c: 737: if( isFinishedOneHoursTimer() )
  1386  030C  118A  25BE  118A   	fcall	_isFinishedOneHoursTimer
  1387  030F  3A00               	xorlw	0
  1388  0310  1D03               	btfss	3,2
  1389  0311  2AAF               	goto	l4297
  1390                           
  1391                           ;main.c: 739: else
  1392                           ;main.c: 740: {
  1393                           ;main.c: 741: if( uiCh13Value > 90 )
  1394  0312  3000               	movlw	0
  1395  0313  1683               	bsf	3,5	;RP0=1, select bank1
  1396  0314  0258               	subwf	(main@uiCh13Value+1)^(0+128),w
  1397  0315  305B               	movlw	91
  1398  0316  1903               	skipnz
  1399  0317  0257               	subwf	main@uiCh13Value^(0+128),w
  1400  0318  1C03               	skipc
  1401  0319  2B27               	goto	l4357
  1402                           
  1403                           ;main.c: 742: {
  1404                           ;main.c: 743: if( uiTimerOneP5s <= 10 )
  1405  031A  3000               	movlw	0
  1406  031B  0223               	subwf	(main@uiTimerOneP5s+1)^(0+128),w
  1407  031C  300B               	movlw	11
  1408  031D  1903               	skipnz
  1409  031E  0222               	subwf	main@uiTimerOneP5s^(0+128),w
  1410  031F  1803               	skipnc
  1411  0320  2B24               	goto	l4355
  1412                           
  1413                           ;main.c: 744: uiTimerOneP5s++;
  1414  0321  0AA2               	incf	main@uiTimerOneP5s^(0+128),f
  1415  0322  1903               	skipnz
  1416  0323  0AA3               	incf	(main@uiTimerOneP5s+1)^(0+128),f
  1417  0324                     l4355:	
  1418                           
  1419                           ;main.c: 746: uiTimerThreeP5s = 0;
  1420  0324  01A4               	clrf	main@uiTimerTwoP5s^(0+128)
  1421  0325  01A5               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1422                           
  1423                           ;main.c: 747: }
  1424  0326  2B29               	goto	l4359
  1425  0327                     l4357:	
  1426                           
  1427                           ;main.c: 748: else
  1428                           ;main.c: 749: {
  1429                           ;main.c: 750: uiTimerOneP5s = 0;
  1430  0327  01A2               	clrf	main@uiTimerOneP5s^(0+128)
  1431  0328  01A3               	clrf	(main@uiTimerOneP5s+1)^(0+128)
  1432  0329                     l4359:	
  1433                           
  1434                           ;main.c: 751: }
  1435                           ;main.c: 754: if(uiTimerOneP5s > 10)
  1436  0329  3000               	movlw	0
  1437  032A  0223               	subwf	(main@uiTimerOneP5s+1)^(0+128),w
  1438  032B  300B               	movlw	11
  1439  032C  1903               	skipnz
  1440  032D  0222               	subwf	main@uiTimerOneP5s^(0+128),w
  1441                           
  1442                           ;main.c: 755: {
  1443                           ;main.c: 756: setPB3(0);
  1444  032E  3000               	movlw	0
  1445  032F  1C03               	skipc
  1446  0330  2B45               	goto	L11
  1447  0331  118A  24E6  118A   	fcall	_setPB3
  1448                           
  1449                           ;main.c: 757: setPB4(1);
  1450  0334  3001               	movlw	1
  1451  0335  118A  24F1  118A   	fcall	_setPB4
  1452                           
  1453                           ;main.c: 758: setPB5(0);
  1454  0338  3000               	movlw	0
  1455  0339  118A  24FC  118A   	fcall	_setPB5
  1456                           
  1457                           ;main.c: 760: uiTimerOneP5s = 0;
  1458  033C  1683               	bsf	3,5	;RP0=1, select bank1
  1459  033D  01A2               	clrf	main@uiTimerOneP5s^(0+128)
  1460  033E  01A3               	clrf	(main@uiTimerOneP5s+1)^(0+128)
  1461                           
  1462                           ;main.c: 761: uiTimerTwoP5s = 0;
  1463  033F  01A4               	clrf	main@uiTimerTwoP5s^(0+128)
  1464  0340  01A5               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1465                           
  1466                           ;main.c: 763: resetAllTimer();
  1467  0341  118A  252F  118A   	fcall	_resetAllTimer
  1468  0344  2A86               	goto	l4285
  1469  0345                     L11:	
  1470                           ;main.c: 767: else
  1471                           ;main.c: 768: {
  1472                           ;main.c: 769: if( uiCh13Value < 65 )
  1473                           
  1474  0345  0258               	subwf	(main@uiCh13Value+1)^(0+128),w
  1475  0346  3041               	movlw	65
  1476  0347  1903               	skipnz
  1477  0348  0257               	subwf	main@uiCh13Value^(0+128),w
  1478  0349  1803               	skipnc
  1479  034A  2B56               	goto	l4377
  1480                           
  1481                           ;main.c: 770: {
  1482                           ;main.c: 772: if( uiTimerTwoP5s <= 10)
  1483  034B  3000               	movlw	0
  1484  034C  0225               	subwf	(main@uiTimerTwoP5s+1)^(0+128),w
  1485  034D  300B               	movlw	11
  1486  034E  1903               	skipnz
  1487  034F  0224               	subwf	main@uiTimerTwoP5s^(0+128),w
  1488  0350  1803               	skipnc
  1489  0351  2B58               	goto	l4379
  1490                           
  1491                           ;main.c: 773: uiTimerTwoP5s++;
  1492  0352  0AA4               	incf	main@uiTimerTwoP5s^(0+128),f
  1493  0353  1903               	skipnz
  1494  0354  0AA5               	incf	(main@uiTimerTwoP5s+1)^(0+128),f
  1495  0355  2B58               	goto	l4379
  1496  0356                     l4377:	
  1497                           
  1498                           ;main.c: 778: uiTimerThreeP5s = 0;
  1499  0356  01A4               	clrf	main@uiTimerTwoP5s^(0+128)
  1500  0357  01A5               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1501  0358                     l4379:	
  1502                           
  1503                           ;main.c: 779: }
  1504                           ;main.c: 781: if(uiTimerTwoP5s > 10)
  1505  0358  3000               	movlw	0
  1506  0359  0225               	subwf	(main@uiTimerTwoP5s+1)^(0+128),w
  1507  035A  300B               	movlw	11
  1508  035B  1903               	skipnz
  1509  035C  0224               	subwf	main@uiTimerTwoP5s^(0+128),w
  1510  035D  1C03               	skipc
  1511  035E  2BB1               	goto	l4261
  1512                           
  1513                           ;main.c: 782: {
  1514                           ;main.c: 783: setPB3(1);
  1515  035F  3001               	movlw	1
  1516  0360  118A  24E6  118A   	fcall	_setPB3
  1517                           
  1518                           ;main.c: 784: setPB4(0);
  1519  0363  3000               	movlw	0
  1520  0364  118A  24F1  118A   	fcall	_setPB4
  1521                           
  1522                           ;main.c: 785: setPB5(1);
  1523  0367  3001               	movlw	1
  1524  0368  118A  24FC  118A   	fcall	_setPB5
  1525  036B  2BB1               	goto	l4261
  1526  036C                     l4383:	
  1527                           
  1528                           ;main.c: 804: {
  1529                           ;main.c: 805: setPB3(0);
  1530  036C  3000               	movlw	0
  1531  036D  118A  24E6  118A   	fcall	_setPB3
  1532                           
  1533                           ;main.c: 806: setPB4(0);
  1534  0370  3000               	movlw	0
  1535  0371  118A  24F1  118A   	fcall	_setPB4
  1536                           
  1537                           ;main.c: 807: setPB5(1);
  1538  0374  3001               	movlw	1
  1539  0375  118A  24FC  118A   	fcall	_setPB5
  1540                           
  1541                           ;main.c: 810: setWaitResetFlag(1);
  1542  0378  3001               	movlw	1
  1543  0379  118A  2604  118A   	fcall	_setWaitResetFlag
  1544                           
  1545                           ;main.c: 811: pwm_start(150,249);
  1546  037C  30F9               	movlw	249
  1547  037D  1683               	bsf	3,5	;RP0=1, select bank1
  1548  037E  00BD               	movwf	?_pwm_start^(0+128)
  1549  037F  3096               	movlw	150
  1550  0380  118A  2548  118A   	fcall	_pwm_start
  1551                           
  1552                           ;main.c: 817: ucStep = DELAY_ONE_SECOND_FOR_PWM;
  1553  0383  3064               	movlw	100
  1554  0384                     L9:	
  1555  0384  1683               	bsf	3,5	;RP0=1, select bank1
  1556  0385  2BAB               	goto	L8
  1557  0386                     l4387:	
  1558                           ;main.c: 818: break;
  1559                           
  1560                           
  1561                           ;main.c: 822: {
  1562                           ;main.c: 823: static unsigned ucDelay1s = 0;
  1563                           ;main.c: 824: if(ucDelay1s <= 50)
  1564  0386  3000               	movlw	0
  1565  0387  0221               	subwf	(main@ucDelay1s+1)^(0+128),w
  1566  0388  3033               	movlw	51
  1567  0389  1903               	skipnz
  1568  038A  0220               	subwf	main@ucDelay1s^(0+128),w
  1569  038B  1803               	skipnc
  1570  038C  2B91               	goto	l4391
  1571                           
  1572                           ;main.c: 825: ucDelay1s++;
  1573  038D  0AA0               	incf	main@ucDelay1s^(0+128),f
  1574  038E  1903               	skipnz
  1575  038F  0AA1               	incf	(main@ucDelay1s+1)^(0+128),f
  1576  0390  2BB1               	goto	l4261
  1577  0391                     l4391:	
  1578  0391  3065               	movlw	101
  1579                           
  1580                           ;main.c: 826: else
  1581                           ;main.c: 827: {
  1582                           ;main.c: 828: ucDelay1s = 0;
  1583  0392  01A0               	clrf	main@ucDelay1s^(0+128)
  1584  0393  01A1               	clrf	(main@ucDelay1s+1)^(0+128)
  1585                           
  1586                           ;main.c: 829: ucStep = MEET_RESET_CONDITION_STEP;
  1587  0394  2BAB               	goto	L8
  1588  0395                     l4395:	
  1589                           
  1590                           ;main.c: 839: {
  1591                           ;main.c: 840: static unsigned char ucTimerP5s = 0;
  1592                           ;main.c: 841: unsigned int ucChValue = getAdOriginalCh13Value();
  1593  0395  118A  23E3  118A   	fcall	_getAdOriginalCh13Value
  1594  0398  0853               	movf	(?_getAdOriginalCh13Value+1)^(0+128),w
  1595  0399  00D6               	movwf	(main@ucChValue+1)^(0+128)
  1596  039A  0852               	movf	?_getAdOriginalCh13Value^(0+128),w
  1597  039B  00D5               	movwf	main@ucChValue^(0+128)
  1598                           
  1599                           ;main.c: 843: if( ucChValue > 50 )
  1600  039C  3000               	movlw	0
  1601  039D  0256               	subwf	(main@ucChValue+1)^(0+128),w
  1602  039E  3033               	movlw	51
  1603  039F  1903               	skipnz
  1604  03A0  0255               	subwf	main@ucChValue^(0+128),w
  1605  03A1  1C03               	skipc
  1606  03A2  2BA5               	goto	l4401
  1607                           
  1608                           ;main.c: 844: ucTimerP5s++;
  1609  03A3  0AA7               	incf	main@cTimerP5s_792^(0+128),f
  1610  03A4  2BA6               	goto	l4403
  1611  03A5                     l4401:	
  1612                           
  1613                           ;main.c: 845: else
  1614                           ;main.c: 846: ucTimerP5s = 0;
  1615  03A5  01A7               	clrf	main@cTimerP5s_792^(0+128)
  1616  03A6                     l4403:	
  1617                           
  1618                           ;main.c: 848: if(ucTimerP5s >= 50)
  1619  03A6  3032               	movlw	50
  1620  03A7  0227               	subwf	main@cTimerP5s_792^(0+128),w
  1621  03A8  1C03               	skipc
  1622  03A9  2BB1               	goto	l4261
  1623                           
  1624                           ;main.c: 849: ucStep = RESET_STEP;
  1625  03AA  3066               	movlw	102
  1626  03AB                     L8:	
  1627  03AB  00A8               	movwf	main@ucStep^(0+128)
  1628  03AC  2BB1               	goto	l4261
  1629  03AD                     l4407:	
  1630                           
  1631                           ;main.c: 854: {
  1632                           ;main.c: 855: ucStep = INIT_STEP;
  1633  03AD  01A8               	clrf	main@ucStep^(0+128)
  1634                           
  1635                           ;main.c: 856: reset();
  1636  03AE  118A  2616  118A   	fcall	_reset
  1637  03B1                     l4261:	
  1638                           ;main.c: 857: break;
  1639                           
  1640  03B1  0064               	clrwdt	;#
  1641                           
  1642                           ;main.c: 586: process_AD_Converter_Value();
  1643  03B2  118A  2488  118A   	fcall	_process_AD_Converter_Value
  1644                           
  1645                           ;main.c: 588: if( isPermitSampleTime() )
  1646  03B5  118A  2609  118A   	fcall	_isPermitSampleTime
  1647  03B8  3A00               	xorlw	0
  1648  03B9  1903               	skipnz
  1649  03BA  2BB1               	goto	l4261
  1650                           
  1651                           ;main.c: 589: {
  1652                           ;main.c: 592: clrSampeTime();
  1653  03BB  118A  2614  118A   	fcall	_clrSampeTime
  1654  03BE  1683               	bsf	3,5	;RP0=1, select bank1
  1655  03BF  0828               	movf	main@ucStep^(0+128),w
  1656                           
  1657                           ; Switch size 1, requested type "space"
  1658                           ; Number of cases is 11, Range of values is 0 to 102
  1659                           ; switch strategies available:
  1660                           ; Name         Instructions Cycles
  1661                           ; simple_byte           34    18 (average)
  1662                           ; direct_byte          213     7 (fixed)
  1663                           ; jumptable            260     6 (fixed)
  1664                           ; rangetable           107     6 (fixed)
  1665                           ; spacedrange          212     9 (fixed)
  1666                           ; locatedrange         103     3 (fixed)
  1667                           ;	Chosen strategy is simple_byte
  1668  03C0  3A00               	xorlw	0	; case 0
  1669  03C1  1903               	skipnz
  1670  03C2  2A69               	goto	l4269
  1671  03C3  3A01               	xorlw	1	; case 1
  1672  03C4  1903               	skipnz
  1673  03C5  2A8A               	goto	l4287
  1674  03C6  3A03               	xorlw	3	; case 2
  1675  03C7  1903               	skipnz
  1676  03C8  2AA9               	goto	l4295
  1677  03C9  3A01               	xorlw	1	; case 3
  1678  03CA  1903               	skipnz
  1679  03CB  2AC5               	goto	l4311
  1680  03CC  3A07               	xorlw	7	; case 4
  1681  03CD  1903               	skipnz
  1682  03CE  2AD2               	goto	l4315
  1683  03CF  3A01               	xorlw	1	; case 5
  1684  03D0  1903               	skipnz
  1685  03D1  2AEC               	goto	l4331
  1686  03D2  3A03               	xorlw	3	; case 6
  1687  03D3  1903               	skipnz
  1688  03D4  2B05               	goto	l4343
  1689  03D5  3A65               	xorlw	101	; case 99
  1690  03D6  1903               	skipnz
  1691  03D7  2B6C               	goto	l4383
  1692  03D8  3A07               	xorlw	7	; case 100
  1693  03D9  1903               	skipnz
  1694  03DA  2B86               	goto	l4387
  1695  03DB  3A01               	xorlw	1	; case 101
  1696  03DC  1903               	skipnz
  1697  03DD  2B95               	goto	l4395
  1698  03DE  3A03               	xorlw	3	; case 102
  1699  03DF  1903               	skipnz
  1700  03E0  2BAD               	goto	l4407
  1701  03E1  2BE2               	goto	l736
  1702  03E2                     l736:	
  1703  03E2  2BB1               	goto	l4261
  1704  03E3                     __end_of_main:	
  1705                           
  1706                           	psect	text1365
  1707  03E3                     __ptext1365:	
  1708 ;; =============== function _main ends ============
  1709                           
  1710                           
  1711 ;; *************** function _getAdOriginalCh13Value *****************
  1712 ;; Defined at:
  1713 ;;		line 397 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;		None
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;		None
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  2   21[BANK1 ] unsigned int 
  1720 ;; Registers used:
  1721 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1722 ;; Tracked objects:
  1723 ;;		On entry : 40/0
  1724 ;;		On exit  : 160/20
  1725 ;;		Unchanged: FFE00/0
  1726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1727 ;;      Params:         0       0       2       0       0
  1728 ;;      Locals:         0       0       0       0       0
  1729 ;;      Temps:          0       0       0       0       0
  1730 ;;      Totals:         0       0       2       0       0
  1731 ;;Total ram usage:        2 bytes
  1732 ;; Hardware stack levels used:    1
  1733 ;; Hardware stack levels required when called:    4
  1734 ;; This function calls:
  1735 ;;		_FilterCh13
  1736 ;; This function is called by:
  1737 ;;		_main
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740  03E3                     _getAdOriginalCh13Value:	
  1741                           
  1742                           ;common.c: 399: return FilterCh13(uiSampleCh13);
  1743                           
  1744                           ; Regs used in _getAdOriginalCh13Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  1745  03E3  30B1               	movlw	_uiSampleCh13& (0+255)
  1746  03E4  23EA               	fcall	_FilterCh13
  1747  03E5  083E               	movf	(?_FilterCh13+1)^(0+128),w
  1748  03E6  00D3               	movwf	(?_getAdOriginalCh13Value+1)^(0+128)
  1749  03E7  083D               	movf	?_FilterCh13^(0+128),w
  1750  03E8  00D2               	movwf	?_getAdOriginalCh13Value^(0+128)
  1751  03E9  0008               	return
  1752  03EA                     __end_of_getAdOriginalCh13Value:	
  1753  03EA                     __ptext1373:	
  1754 ;; =============== function _getAD_ConvertFlag ends ============
  1755                           
  1756                           
  1757 ;; *************** function _FilterCh13 *****************
  1758 ;; Defined at:
  1759 ;;		line 76 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  1760 ;; Parameters:    Size  Location     Type
  1761 ;;  tmpValue        1    wreg     PTR unsigned int 
  1762 ;;		 -> uiSampleCh13(6), 
  1763 ;; Auto vars:     Size  Location     Type
  1764 ;;  tmpValue        1    6[BANK1 ] PTR unsigned int 
  1765 ;;		 -> uiSampleCh13(6), 
  1766 ;;  cir             2   17[BANK1 ] int 
  1767 ;;  filter_buf      6   11[BANK1 ] unsigned int [3]
  1768 ;;  filter_sum      2    9[BANK1 ] unsigned int 
  1769 ;;  filter_temp     2    7[BANK1 ] unsigned int 
  1770 ;;  i               1   20[BANK1 ] unsigned char 
  1771 ;;  j               1   19[BANK1 ] unsigned char 
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  2    0[BANK1 ] unsigned int 
  1774 ;; Registers used:
  1775 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1776 ;; Tracked objects:
  1777 ;;		On entry : 40/0
  1778 ;;		On exit  : 160/20
  1779 ;;		Unchanged: FFE00/0
  1780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1781 ;;      Params:         0       0       2       0       0
  1782 ;;      Locals:         0       0      15       0       0
  1783 ;;      Temps:          0       0       4       0       0
  1784 ;;      Totals:         0       0      21       0       0
  1785 ;;Total ram usage:       21 bytes
  1786 ;; Hardware stack levels used:    1
  1787 ;; Hardware stack levels required when called:    3
  1788 ;; This function calls:
  1789 ;;		Nothing
  1790 ;; This function is called by:
  1791 ;;		_getAdOriginalCh13Value
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794  03EA                     _FilterCh13:	
  1795                           
  1796                           ; Regs used in _FilterCh13: [wreg-fsr0h+status,2+status,0+btemp+1]
  1797                           ;FilterCh13@tmpValue stored from wreg
  1798  03EA  1683               	bsf	3,5	;RP0=1, select bank1
  1799  03EB  00C3               	movwf	FilterCh13@tmpValue^(0+128)
  1800  03EC  01D0               	clrf	FilterCh13@j^(0+128)
  1801                           
  1802                           ;common.c: 79: unsigned int filter_temp = 0, filter_sum = 0;
  1803  03ED  01C4               	clrf	FilterCh13@filter_temp^(0+128)
  1804  03EE  01C5               	clrf	(FilterCh13@filter_temp+1)^(0+128)
  1805  03EF  01C6               	clrf	FilterCh13@filter_sum^(0+128)
  1806  03F0  01C7               	clrf	(FilterCh13@filter_sum+1)^(0+128)
  1807                           
  1808                           ;common.c: 81: unsigned int filter_buf[3];
  1809                           ;common.c: 83: for(int cir = 0;cir < 3; cir++)
  1810  03F1  01CE               	clrf	FilterCh13@cir^(0+128)
  1811  03F2  01CF               	clrf	(FilterCh13@cir+1)^(0+128)
  1812  03F3                     l4159:	
  1813                           
  1814                           ;common.c: 84: filter_buf[cir] = *tmpValue++;
  1815  03F3  1683               	bsf	3,5	;RP0=1, select bank1
  1816  03F4  1303               	bcf	3,6	;RP1=0, select bank1
  1817  03F5  0843               	movf	FilterCh13@tmpValue^(0+128),w
  1818  03F6  0084               	movwf	4
  1819  03F7  1383               	bcf	3,7	;select IRP bank0
  1820  03F8  2473  118A         	fcall	PL5	;call to abstracted procedure
  1821  03FA  0D4E               	rlf	FilterCh13@cir^(0+128),w
  1822  03FB  247A  118A         	fcall	PL6	;call to abstracted procedure
  1823  03FD  0AC3               	incf	FilterCh13@tmpValue^(0+128),f
  1824  03FE  0AC3               	incf	FilterCh13@tmpValue^(0+128),f
  1825  03FF  0ACE               	incf	FilterCh13@cir^(0+128),f
  1826  0400  1903               	skipnz
  1827  0401  0ACF               	incf	(FilterCh13@cir+1)^(0+128),f
  1828  0402  084F               	movf	(FilterCh13@cir+1)^(0+128),w
  1829  0403  3A80               	xorlw	128
  1830  0404  00FF               	movwf	127
  1831  0405  3080               	movlw	128
  1832  0406  027F               	subwf	127,w
  1833  0407  1D03               	skipz
  1834  0408  2C0B               	goto	u1915
  1835  0409  3003               	movlw	3
  1836  040A  024E               	subwf	FilterCh13@cir^(0+128),w
  1837  040B                     u1915:	
  1838  040B  1C03               	skipc
  1839  040C  2BF3               	goto	l4159
  1840                           
  1841                           ;common.c: 88: for(j = 0; j < 3 - 1; j++)
  1842  040D  1683               	bsf	3,5	;RP0=1, select bank1
  1843  040E  1303               	bcf	3,6	;RP1=0, select bank1
  1844  040F  01D0               	clrf	FilterCh13@j^(0+128)
  1845                           
  1846                           ;common.c: 89: {
  1847                           ;common.c: 90: for(i = 0; i < 3 - 1 - j; i++)
  1848  0410  01D1               	clrf	FilterCh13@i^(0+128)
  1849  0411                     l4181:	
  1850  0411  01C0               	clrf	(??_FilterCh13^(0+128)+1)
  1851  0412  0850               	movf	FilterCh13@j^(0+128),w
  1852  0413  3C02               	sublw	2
  1853  0414  00BF               	movwf	??_FilterCh13^(0+128)
  1854  0415  1C03               	skipc
  1855  0416  03C0               	decf	(??_FilterCh13^(0+128)+1),f
  1856  0417  0840               	movf	(??_FilterCh13+1)^(0+128),w
  1857  0418  3A80               	xorlw	128
  1858  0419  3C80               	sublw	128
  1859  041A  1D03               	skipz
  1860  041B  2C1E               	goto	u1935
  1861  041C  083F               	movf	??_FilterCh13^(0+128),w
  1862  041D  0251               	subwf	FilterCh13@i^(0+128),w
  1863  041E                     u1935:	
  1864  041E  1803               	btfsc	3,0
  1865  041F  2C4D               	goto	l4183
  1866                           
  1867                           ;common.c: 91: {
  1868                           ;common.c: 92: if(filter_buf[i] > filter_buf[i + 1])
  1869  0420  1683               	bsf	3,5	;RP0=1, select bank1
  1870  0421  1303               	bcf	3,6	;RP1=0, select bank1
  1871  0422  1003               	clrc
  1872  0423  2469  118A         	fcall	PL4	;call to abstracted procedure
  1873  0425  2482  118A         	fcall	PL8	;call to abstracted procedure
  1874  0427  0800               	movf	0,w
  1875  0428  00C1               	movwf	(??_FilterCh13+2)^(0+128)
  1876  0429  0A84               	incf	4,f
  1877  042A  0800               	movf	0,w
  1878  042B  00C2               	movwf	((??_FilterCh13+2)^(0+128)+1)
  1879  042C  0840               	movf	(??_FilterCh13+1)^(0+128),w
  1880  042D  0242               	subwf	(??_FilterCh13+3)^(0+128),w
  1881  042E  1D03               	skipz
  1882  042F  2C32               	goto	u1925
  1883  0430  083F               	movf	??_FilterCh13^(0+128),w
  1884  0431  0241               	subwf	(??_FilterCh13+2)^(0+128),w
  1885  0432                     u1925:	
  1886  0432  1803               	skipnc
  1887  0433  2C4B               	goto	l4179
  1888                           
  1889                           ;common.c: 93: {
  1890                           ;common.c: 95: filter_temp = filter_buf[i];
  1891  0434  1003               	clrc
  1892  0435  0D51               	rlf	FilterCh13@i^(0+128),w
  1893  0436  3EC8               	addlw	FilterCh13@filter_buf& (0+255)
  1894  0437  0084               	movwf	4
  1895  0438  0800               	movf	0,w
  1896  0439  00C4               	movwf	FilterCh13@filter_temp^(0+128)
  1897  043A  0A84               	incf	4,f
  1898  043B  0800               	movf	0,w
  1899  043C  00C5               	movwf	(FilterCh13@filter_temp+1)^(0+128)
  1900                           
  1901                           ;common.c: 97: filter_buf[i] = filter_buf[i + 1];
  1902  043D  2482  118A         	fcall	PL8	;call to abstracted procedure
  1903  043F  2473  118A         	fcall	PL5	;call to abstracted procedure
  1904  0441  0D51               	rlf	FilterCh13@i^(0+128),w
  1905  0442  247A  118A         	fcall	PL6	;call to abstracted procedure
  1906                           
  1907                           ;common.c: 99: filter_buf[i + 1] = filter_temp;
  1908  0444  2482  118A         	fcall	PL8	;call to abstracted procedure
  1909  0446  0844               	movf	FilterCh13@filter_temp^(0+128),w
  1910  0447  0080               	movwf	0
  1911  0448  0A84               	incf	4,f
  1912  0449  0845               	movf	(FilterCh13@filter_temp+1)^(0+128),w
  1913  044A  0080               	movwf	0
  1914  044B                     l4179:	
  1915  044B  0AD1               	incf	FilterCh13@i^(0+128),f
  1916  044C  2C11               	goto	l4181
  1917  044D                     l4183:	
  1918  044D  1683               	bsf	3,5	;RP0=1, select bank1
  1919  044E  3002               	movlw	2
  1920  044F  1303               	bcf	3,6	;RP1=0, select bank1
  1921  0450  0AD0               	incf	FilterCh13@j^(0+128),f
  1922  0451  0250               	subwf	FilterCh13@j^(0+128),w
  1923                           
  1924                           ;common.c: 100: }
  1925                           ;common.c: 101: }
  1926                           ;common.c: 102: }
  1927                           ;common.c: 104: for(i = 1; i < 3 - 1; i++)
  1928  0452  01D1               	clrf	FilterCh13@i^(0+128)
  1929  0453  1C03               	skipc
  1930  0454  2C11               	goto	l4181
  1931  0455  0AD1               	incf	FilterCh13@i^(0+128),f
  1932                           
  1933                           ;common.c: 105: {
  1934                           ;common.c: 106: filter_sum += filter_buf[i];
  1935  0456  1003               	clrc
  1936  0457                     L14:	
  1937  0457  2469  118A         	fcall	PL4	;call to abstracted procedure
  1938  0459  083F               	movf	??_FilterCh13^(0+128),w
  1939  045A  07C6               	addwf	FilterCh13@filter_sum^(0+128),f
  1940  045B  1803               	skipnc
  1941  045C  0AC7               	incf	(FilterCh13@filter_sum+1)^(0+128),f
  1942  045D  0840               	movf	(??_FilterCh13+1)^(0+128),w
  1943  045E  07C7               	addwf	(FilterCh13@filter_sum+1)^(0+128),f
  1944  045F  3002               	movlw	2
  1945  0460  0AD1               	incf	FilterCh13@i^(0+128),f
  1946  0461  0251               	subwf	FilterCh13@i^(0+128),w
  1947  0462  1C03               	skipc
  1948  0463  2C57               	goto	L14
  1949                           
  1950                           ;common.c: 107: }
  1951                           ;common.c: 110: return (filter_sum >> 0 );
  1952  0464  0847               	movf	(FilterCh13@filter_sum+1)^(0+128),w
  1953  0465  00BE               	movwf	(?_FilterCh13+1)^(0+128)
  1954  0466  0846               	movf	FilterCh13@filter_sum^(0+128),w
  1955  0467  00BD               	movwf	?_FilterCh13^(0+128)
  1956  0468  0008               	return
  1957  0469                     __end_of_FilterCh13:	
  1958  0469                     PL4:	
  1959  0469  0D51               	rlf	FilterCh13@i^(0+128),w
  1960  046A  3EC8               	addlw	FilterCh13@filter_buf& (0+255)
  1961  046B  0084               	movwf	4
  1962  046C  1383               	bcf	3,7	;select IRP bank1
  1963  046D  0800               	movf	0,w
  1964  046E  00BF               	movwf	??_FilterCh13^(0+128)
  1965  046F  0A84               	incf	4,f
  1966  0470  0800               	movf	0,w
  1967  0471  00C0               	movwf	(??_FilterCh13^(0+128)+1)
  1968  0472  0008               	return
  1969  0473                     PL5:	
  1970  0473  0800               	movf	0,w
  1971  0474  00BF               	movwf	??_FilterCh13^(0+128)
  1972  0475  0A84               	incf	4,f
  1973  0476  0800               	movf	0,w
  1974  0477  00C0               	movwf	(??_FilterCh13^(0+128)+1)
  1975  0478  1003               	clrc
  1976  0479  0008               	return
  1977  047A                     PL6:	
  1978  047A  3EC8               	addlw	FilterCh13@filter_buf& (0+255)
  1979  047B  0084               	movwf	4
  1980  047C  083F               	movf	??_FilterCh13^(0+128),w
  1981  047D  0080               	movwf	0
  1982  047E  0A84               	incf	4,f
  1983  047F  0840               	movf	(??_FilterCh13+1)^(0+128),w
  1984  0480  0080               	movwf	0
  1985  0481  0008               	return
  1986  0482                     PL8:	
  1987  0482  1003               	clrc
  1988  0483  0D51               	rlf	FilterCh13@i^(0+128),w
  1989  0484  3E02               	addlw	2
  1990  0485  3EC8               	addlw	FilterCh13@filter_buf& (0+255)
  1991  0486  0084               	movwf	4
  1992  0487  0008               	return
  1993                           
  1994                           	psect	text1366
  1995  0488                     __ptext1366:	
  1996 ;; =============== function _getAdOriginalCh13Value ends ============
  1997                           
  1998                           
  1999 ;; *************** function _process_AD_Converter_Value *****************
  2000 ;; Defined at:
  2001 ;;		line 419 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;		None
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;		None
  2006 ;; Return value:  Size  Location     Type
  2007 ;;		None               void
  2008 ;; Registers used:
  2009 ;;		wreg, status,2, status,0, pclath, cstack
  2010 ;; Tracked objects:
  2011 ;;		On entry : 0/0
  2012 ;;		On exit  : 60/0
  2013 ;;		Unchanged: FFF9F/0
  2014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2015 ;;      Params:         0       0       0       0       0
  2016 ;;      Locals:         0       0       0       0       0
  2017 ;;      Temps:          0       0       0       0       0
  2018 ;;      Totals:         0       0       0       0       0
  2019 ;;Total ram usage:        0 bytes
  2020 ;; Hardware stack levels used:    1
  2021 ;; Hardware stack levels required when called:    4
  2022 ;; This function calls:
  2023 ;;		_getAD_ConvertFlag
  2024 ;;		_setAD_ConvertFlag
  2025 ;;		_AD_Sample
  2026 ;;		_adc_test_init
  2027 ;;		_adc_start
  2028 ;; This function is called by:
  2029 ;;		_main
  2030 ;; This function uses a non-reentrant model
  2031 ;;
  2032  0488                     _process_AD_Converter_Value:	
  2033                           
  2034                           ;common.c: 420: if(getAD_ConvertFlag())
  2035                           
  2036                           ; Regs used in _process_AD_Converter_Value: [wreg+status,2+status,0+pclath+cstack]
  2037  0488  24A1  118A         	fcall	_getAD_ConvertFlag
  2038  048A  3A00               	xorlw	0
  2039  048B  1903               	skipnz
  2040  048C  0008               	return
  2041                           
  2042                           ;common.c: 421: {
  2043                           ;common.c: 422: setAD_ConvertFlag(0);
  2044  048D  3000               	movlw	0
  2045  048E  24A5  118A         	fcall	_setAD_ConvertFlag
  2046                           
  2047                           ;common.c: 423: AD_Sample();
  2048  0490  24AA  118A         	fcall	_AD_Sample
  2049                           
  2050                           ;common.c: 424: if(2 == sampleChannelSelect)
  2051  0492  0863               	movf	_sampleChannelSelect,w
  2052  0493  3A02               	xorlw	2
  2053                           
  2054                           ;common.c: 425: adc_test_init(2,3);
  2055  0494  3003               	movlw	3
  2056  0495  1D03               	skipz
  2057  0496  2C9B               	goto	L13
  2058  0497  1683               	bsf	3,5	;RP0=1, select bank1
  2059  0498  00BD               	movwf	?_adc_test_init^(0+128)
  2060  0499  3002               	movlw	2
  2061  049A  2C9E               	goto	L12
  2062  049B                     L13:	
  2063                           ;common.c: 426: else
  2064                           ;common.c: 427: adc_test_init(1,3);
  2065                           
  2066  049B  1683               	bsf	3,5	;RP0=1, select bank1
  2067  049C  00BD               	movwf	?_adc_test_init^(0+128)
  2068  049D  3001               	movlw	1
  2069  049E                     L12:	
  2070  049E  24BE  118A         	fcall	_adc_test_init
  2071                           
  2072                           ;common.c: 428: adc_start();
  2073  04A0  2CDA               	ljmp	l4047
  2074  04A1                     __end_of_process_AD_Converter_Value:	
  2075  04A1                     __ptext1372:	
  2076 ;; =============== function _setAD_ConvertFlag ends ============
  2077                           
  2078                           
  2079 ;; *************** function _getAD_ConvertFlag *****************
  2080 ;; Defined at:
  2081 ;;		line 368 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;		None
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;		None
  2086 ;; Return value:  Size  Location     Type
  2087 ;;                  1    wreg      unsigned char 
  2088 ;; Registers used:
  2089 ;;		wreg
  2090 ;; Tracked objects:
  2091 ;;		On entry : 0/0
  2092 ;;		On exit  : 60/0
  2093 ;;		Unchanged: FFF9F/0
  2094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2095 ;;      Params:         0       0       0       0       0
  2096 ;;      Locals:         0       0       0       0       0
  2097 ;;      Temps:          0       0       0       0       0
  2098 ;;      Totals:         0       0       0       0       0
  2099 ;;Total ram usage:        0 bytes
  2100 ;; Hardware stack levels used:    1
  2101 ;; Hardware stack levels required when called:    3
  2102 ;; This function calls:
  2103 ;;		Nothing
  2104 ;; This function is called by:
  2105 ;;		_process_AD_Converter_Value
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108  04A1                     _getAD_ConvertFlag:	
  2109                           
  2110                           ;common.c: 369: return adc_convert_flag;
  2111                           
  2112                           ; Regs used in _getAD_ConvertFlag: [wreg]
  2113  04A1  1283               	bcf	3,5	;RP0=0, select bank0
  2114  04A2  1303               	bcf	3,6	;RP1=0, select bank0
  2115  04A3  0858               	movf	_adc_convert_flag,w
  2116  04A4  0008               	return
  2117  04A5                     __end_of_getAD_ConvertFlag:	
  2118  04A5                     __ptext1371:	
  2119 ;; =============== function _AD_Sample ends ============
  2120                           
  2121                           
  2122 ;; *************** function _setAD_ConvertFlag *****************
  2123 ;; Defined at:
  2124 ;;		line 374 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;  flag            1    wreg     unsigned char 
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;  flag            1    0[BANK1 ] unsigned char 
  2129 ;; Return value:  Size  Location     Type
  2130 ;;		None               void
  2131 ;; Registers used:
  2132 ;;		wreg
  2133 ;; Tracked objects:
  2134 ;;		On entry : 60/0
  2135 ;;		On exit  : 60/0
  2136 ;;		Unchanged: FFF9F/0
  2137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2138 ;;      Params:         0       0       0       0       0
  2139 ;;      Locals:         0       0       1       0       0
  2140 ;;      Temps:          0       0       0       0       0
  2141 ;;      Totals:         0       0       1       0       0
  2142 ;;Total ram usage:        1 bytes
  2143 ;; Hardware stack levels used:    1
  2144 ;; Hardware stack levels required when called:    3
  2145 ;; This function calls:
  2146 ;;		Nothing
  2147 ;; This function is called by:
  2148 ;;		_process_AD_Converter_Value
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151  04A5                     _setAD_ConvertFlag:	
  2152                           
  2153                           ; Regs used in _setAD_ConvertFlag: [wreg]
  2154                           ;setAD_ConvertFlag@flag stored from wreg
  2155  04A5  1683               	bsf	3,5	;RP0=1, select bank1
  2156  04A6  00BD               	movwf	setAD_ConvertFlag@flag^(0+128)
  2157                           
  2158                           ;common.c: 375: adc_convert_flag = flag;
  2159  04A7  1283               	bcf	3,5	;RP0=0, select bank0
  2160  04A8  00D8               	movwf	_adc_convert_flag
  2161  04A9  0008               	return
  2162  04AA                     __end_of_setAD_ConvertFlag:	
  2163  04AA                     __ptext1370:	
  2164 ;; =============== function _initPin ends ============
  2165                           
  2166                           
  2167 ;; *************** function _AD_Sample *****************
  2168 ;; Defined at:
  2169 ;;		line 442 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;		None
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;		None
  2174 ;; Return value:  Size  Location     Type
  2175 ;;		None               void
  2176 ;; Registers used:
  2177 ;;		wreg, status,2, status,0
  2178 ;; Tracked objects:
  2179 ;;		On entry : 60/0
  2180 ;;		On exit  : 60/0
  2181 ;;		Unchanged: FFF9F/0
  2182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2183 ;;      Params:         0       0       0       0       0
  2184 ;;      Locals:         0       0       0       0       0
  2185 ;;      Temps:          0       0       0       0       0
  2186 ;;      Totals:         0       0       0       0       0
  2187 ;;Total ram usage:        0 bytes
  2188 ;; Hardware stack levels used:    1
  2189 ;; Hardware stack levels required when called:    3
  2190 ;; This function calls:
  2191 ;;		Nothing
  2192 ;; This function is called by:
  2193 ;;		_process_AD_Converter_Value
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196  04AA                     _AD_Sample:	
  2197                           
  2198                           ;common.c: 443: if(sampleTimes < 3)
  2199                           
  2200                           ; Regs used in _AD_Sample: [wreg+status,2+status,0]
  2201  04AA  3003               	movlw	3
  2202  04AB  025E               	subwf	_sampleTimes,w
  2203  04AC  1803               	skipnc
  2204  04AD  0008               	return
  2205  04AE  3003               	movlw	3
  2206                           
  2207                           ;common.c: 444: {
  2208                           ;common.c: 445: sampleTimes++;
  2209  04AF  0ADE               	incf	_sampleTimes,f
  2210                           
  2211                           ;common.c: 447: if(sampleTimes >= 3)
  2212  04B0  025E               	subwf	_sampleTimes,w
  2213  04B1  1C03               	skipc
  2214  04B2  0008               	return
  2215                           
  2216                           ;common.c: 448: {
  2217                           ;common.c: 449: sampleTimes = 0;
  2218  04B3  01DE               	clrf	_sampleTimes
  2219                           
  2220                           ;common.c: 451: if(sampleChannelSelect == 2)
  2221  04B4  0863               	movf	_sampleChannelSelect,w
  2222  04B5  3A02               	xorlw	2
  2223  04B6  1D03               	skipz
  2224  04B7  2CBB               	goto	l4219
  2225                           
  2226                           ;common.c: 452: {
  2227                           ;common.c: 453: sampleChannelSelect = 1;
  2228  04B8  01E3               	clrf	_sampleChannelSelect
  2229  04B9  0AE3               	incf	_sampleChannelSelect,f
  2230                           
  2231                           ;common.c: 454: }
  2232  04BA  0008               	return
  2233  04BB                     l4219:	
  2234                           
  2235                           ;common.c: 456: else
  2236                           ;common.c: 457: {
  2237                           ;common.c: 458: sampleChannelSelect = 2;
  2238  04BB  3002               	movlw	2
  2239  04BC  00E3               	movwf	_sampleChannelSelect
  2240  04BD  0008               	return
  2241  04BE                     __end_of_AD_Sample:	
  2242  04BE                     __ptext1386:	
  2243 ;; =============== function _startTwentyMinTimer ends ============
  2244                           
  2245                           
  2246 ;; *************** function _adc_test_init *****************
  2247 ;; Defined at:
  2248 ;;		line 85 in file "D:\develop\AK7030-good\AK7030-OTP\periph.c"
  2249 ;; Parameters:    Size  Location     Type
  2250 ;;  channel         1    wreg     unsigned char 
  2251 ;;  ref             1    0[BANK1 ] unsigned char 
  2252 ;; Auto vars:     Size  Location     Type
  2253 ;;  channel         1    2[BANK1 ] unsigned char 
  2254 ;; Return value:  Size  Location     Type
  2255 ;;		None               void
  2256 ;; Registers used:
  2257 ;;		wreg, status,2, status,0
  2258 ;; Tracked objects:
  2259 ;;		On entry : 60/20
  2260 ;;		On exit  : 60/20
  2261 ;;		Unchanged: FFF9F/0
  2262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2263 ;;      Params:         0       0       1       0       0
  2264 ;;      Locals:         0       0       1       0       0
  2265 ;;      Temps:          0       0       1       0       0
  2266 ;;      Totals:         0       0       3       0       0
  2267 ;;Total ram usage:        3 bytes
  2268 ;; Hardware stack levels used:    1
  2269 ;; Hardware stack levels required when called:    3
  2270 ;; This function calls:
  2271 ;;		Nothing
  2272 ;; This function is called by:
  2273 ;;		_main
  2274 ;;		_process_AD_Converter_Value
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277  04BE                     _adc_test_init:	
  2278                           
  2279                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  2280                           ;adc_test_init@channel stored from wreg
  2281  04BE  00BF               	movwf	adc_test_init@channel^(0+128)
  2282                           
  2283                           ;periph.c: 86: ADCON0 = 0x40;
  2284  04BF  3040               	movlw	64
  2285  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  2286  04C1  009F               	movwf	31	;volatile
  2287                           
  2288                           ;periph.c: 87: ADCON0|=channel<<2;
  2289  04C2  1683               	bsf	3,5	;RP0=1, select bank1
  2290  04C3  083F               	movf	adc_test_init@channel^(0+128),w
  2291  04C4  00BE               	movwf	??_adc_test_init^(0+128)
  2292  04C5  1003               	clrc
  2293  04C6  0DBE               	rlf	??_adc_test_init^(0+128),f
  2294  04C7  1003               	clrc
  2295  04C8  0D3E               	rlf	??_adc_test_init^(0+128),w
  2296  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  2297  04CA  049F               	iorwf	31,f	;volatile
  2298                           
  2299                           ;periph.c: 88: ADCON1 = 0x35;
  2300  04CB  3035               	movlw	53
  2301  04CC  1683               	bsf	3,5	;RP0=1, select bank1
  2302  04CD  009F               	movwf	31	;volatile
  2303                           
  2304                           ;periph.c: 89: ADCON1|=ref<<6;
  2305  04CE  083D               	movf	adc_test_init@ref^(0+128),w
  2306  04CF  00BE               	movwf	??_adc_test_init^(0+128)
  2307  04D0  0CBE               	rrf	??_adc_test_init^(0+128),f
  2308  04D1  0CBE               	rrf	??_adc_test_init^(0+128),f
  2309  04D2  0C3E               	rrf	??_adc_test_init^(0+128),w
  2310  04D3  39C0               	andlw	192
  2311  04D4  049F               	iorwf	31,f	;volatile
  2312                           
  2313                           ;periph.c: 90: ADON=1;
  2314  04D5  1283               	bcf	3,5	;RP0=0, select bank0
  2315  04D6  141F               	bsf	31,0
  2316                           
  2317                           ;periph.c: 91: ADIE=1;
  2318  04D7  1683               	bsf	3,5	;RP0=1, select bank1
  2319  04D8  150D               	bsf	13,2
  2320  04D9  0008               	return
  2321  04DA                     __end_of_adc_test_init:	
  2322  04DA                     __ptext1384:	
  2323 ;; =============== function _isPermitSampleTime ends ============
  2324                           
  2325                           
  2326 ;; *************** function _adc_start *****************
  2327 ;; Defined at:
  2328 ;;		line 101 in file "D:\develop\AK7030-good\AK7030-OTP\periph.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;		None
  2331 ;; Auto vars:     Size  Location     Type
  2332 ;;		None
  2333 ;; Return value:  Size  Location     Type
  2334 ;;		None               void
  2335 ;; Registers used:
  2336 ;;		None
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 60/0
  2340 ;;		Unchanged: FFF9F/0
  2341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2342 ;;      Params:         0       0       0       0       0
  2343 ;;      Locals:         0       0       0       0       0
  2344 ;;      Temps:          0       0       0       0       0
  2345 ;;      Totals:         0       0       0       0       0
  2346 ;;Total ram usage:        0 bytes
  2347 ;; Hardware stack levels used:    1
  2348 ;; Hardware stack levels required when called:    3
  2349 ;; This function calls:
  2350 ;;		Nothing
  2351 ;; This function is called by:
  2352 ;;		_main
  2353 ;;		_process_AD_Converter_Value
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356  04DA                     _adc_start:	
  2357  04DA                     l4047:	
  2358                           ; Regs used in _adc_start: []
  2359                           
  2360                           
  2361                           ;periph.c: 102: GO=1;
  2362  04DA  1283               	bcf	3,5	;RP0=0, select bank0
  2363  04DB  1303               	bcf	3,6	;RP1=0, select bank0
  2364  04DC  149F               	bsf	31,1
  2365  04DD  0008               	return
  2366  04DE                     __end_of_adc_start:	
  2367                           
  2368                           	psect	text1367
  2369  052F                     __ptext1367:	
  2370 ;; =============== function _process_AD_Converter_Value ends ============
  2371                           
  2372                           
  2373 ;; *************** function _resetAllTimer *****************
  2374 ;; Defined at:
  2375 ;;		line 494 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;		None
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;		None
  2380 ;; Return value:  Size  Location     Type
  2381 ;;		None               void
  2382 ;; Registers used:
  2383 ;;		status,2, status,0, pclath, cstack
  2384 ;; Tracked objects:
  2385 ;;		On entry : 160/20
  2386 ;;		On exit  : 160/0
  2387 ;;		Unchanged: FFE9F/0
  2388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2389 ;;      Params:         0       0       0       0       0
  2390 ;;      Locals:         0       0       0       0       0
  2391 ;;      Temps:          0       0       0       0       0
  2392 ;;      Totals:         0       0       0       0       0
  2393 ;;Total ram usage:        0 bytes
  2394 ;; Hardware stack levels used:    1
  2395 ;; Hardware stack levels required when called:    4
  2396 ;; This function calls:
  2397 ;;		_clearTwelveHoursTimer
  2398 ;;		_clearThreeHoursTimer
  2399 ;;		_clearOneHoursTimer
  2400 ;;		_clearTwentyMinTimer
  2401 ;; This function is called by:
  2402 ;;		_main
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405  052F                     _resetAllTimer:	
  2406                           
  2407                           ;main.c: 495: clearTwelveHoursTimer();
  2408                           
  2409                           ; Regs used in _resetAllTimer: [status,2+status,0+pclath+cstack]
  2410  052F  2536  118A         	fcall	_clearTwelveHoursTimer
  2411                           
  2412                           ;main.c: 496: clearThreeHoursTimer();
  2413  0531  253B  118A         	fcall	_clearThreeHoursTimer
  2414                           
  2415                           ;main.c: 497: clearOneHoursTimer();
  2416  0533  2540  118A         	fcall	_clearOneHoursTimer
  2417                           
  2418                           ;main.c: 498: clearTwentyMinTimer();
  2419  0535  2D44               	ljmp	l4017
  2420  0536                     __end_of_resetAllTimer:	
  2421  0536                     __ptext1393:	
  2422 ;; =============== function _clearThreeHoursTimer ends ============
  2423                           
  2424                           
  2425 ;; *************** function _clearTwelveHoursTimer *****************
  2426 ;; Defined at:
  2427 ;;		line 485 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;		None
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;		None
  2432 ;; Return value:  Size  Location     Type
  2433 ;;		None               void
  2434 ;; Registers used:
  2435 ;;		status,2
  2436 ;; Tracked objects:
  2437 ;;		On entry : 40/20
  2438 ;;		On exit  : 60/0
  2439 ;;		Unchanged: FFF9F/0
  2440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2441 ;;      Params:         0       0       0       0       0
  2442 ;;      Locals:         0       0       0       0       0
  2443 ;;      Temps:          0       0       0       0       0
  2444 ;;      Totals:         0       0       0       0       0
  2445 ;;Total ram usage:        0 bytes
  2446 ;; Hardware stack levels used:    1
  2447 ;; Hardware stack levels required when called:    3
  2448 ;; This function calls:
  2449 ;;		Nothing
  2450 ;; This function is called by:
  2451 ;;		_resetAllTimer
  2452 ;;		_main
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455  0536                     _clearTwelveHoursTimer:	
  2456                           
  2457                           ;common.c: 486: uiBigTimer = 0;
  2458                           
  2459                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  2460  0536  1283               	bcf	3,5	;RP0=0, select bank0
  2461  0537  01C3               	clrf	_uiBigTimer
  2462  0538  01C4               	clrf	_uiBigTimer+1
  2463                           
  2464                           ;common.c: 487: bBigTimerStartFlag = 0;
  2465  0539  01D9               	clrf	_bBigTimerStartFlag
  2466  053A  0008               	return
  2467  053B                     __end_of_clearTwelveHoursTimer:	
  2468  053B                     __ptext1392:	
  2469 ;; =============== function _clearOneHoursTimer ends ============
  2470                           
  2471                           
  2472 ;; *************** function _clearThreeHoursTimer *****************
  2473 ;; Defined at:
  2474 ;;		line 492 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;		None
  2477 ;; Auto vars:     Size  Location     Type
  2478 ;;		None
  2479 ;; Return value:  Size  Location     Type
  2480 ;;		None               void
  2481 ;; Registers used:
  2482 ;;		status,2
  2483 ;; Tracked objects:
  2484 ;;		On entry : 40/20
  2485 ;;		On exit  : 60/0
  2486 ;;		Unchanged: FFF9F/0
  2487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2488 ;;      Params:         0       0       0       0       0
  2489 ;;      Locals:         0       0       0       0       0
  2490 ;;      Temps:          0       0       0       0       0
  2491 ;;      Totals:         0       0       0       0       0
  2492 ;;Total ram usage:        0 bytes
  2493 ;; Hardware stack levels used:    1
  2494 ;; Hardware stack levels required when called:    3
  2495 ;; This function calls:
  2496 ;;		Nothing
  2497 ;; This function is called by:
  2498 ;;		_resetAllTimer
  2499 ;;		_main
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502  053B                     _clearThreeHoursTimer:	
  2503                           
  2504                           ;common.c: 493: uiSmallTimer = 0;
  2505                           
  2506                           ; Regs used in _clearThreeHoursTimer: [status,2]
  2507  053B  1283               	bcf	3,5	;RP0=0, select bank0
  2508  053C  01C7               	clrf	_uiSmallTimer
  2509  053D  01C8               	clrf	_uiSmallTimer+1
  2510                           
  2511                           ;common.c: 494: bSmallTimerStartFlag = 0;
  2512  053E  01DB               	clrf	_bSmallTimerStartFlag
  2513  053F  0008               	return
  2514  0540                     __end_of_clearThreeHoursTimer:	
  2515  0540                     __ptext1391:	
  2516 ;; =============== function _clearTwentyMinTimer ends ============
  2517                           
  2518                           
  2519 ;; *************** function _clearOneHoursTimer *****************
  2520 ;; Defined at:
  2521 ;;		line 498 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;		None
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;		None
  2526 ;; Return value:  Size  Location     Type
  2527 ;;		None               void
  2528 ;; Registers used:
  2529 ;;		status,2
  2530 ;; Tracked objects:
  2531 ;;		On entry : 160/0
  2532 ;;		On exit  : 160/0
  2533 ;;		Unchanged: FFE9F/0
  2534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2535 ;;      Params:         0       0       0       0       0
  2536 ;;      Locals:         0       0       0       0       0
  2537 ;;      Temps:          0       0       0       0       0
  2538 ;;      Totals:         0       0       0       0       0
  2539 ;;Total ram usage:        0 bytes
  2540 ;; Hardware stack levels used:    1
  2541 ;; Hardware stack levels required when called:    3
  2542 ;; This function calls:
  2543 ;;		Nothing
  2544 ;; This function is called by:
  2545 ;;		_resetAllTimer
  2546 ;; This function uses a non-reentrant model
  2547 ;;
  2548  0540                     _clearOneHoursTimer:	
  2549                           
  2550                           ;common.c: 499: uiOneHourTimer = 0;
  2551                           
  2552                           ; Regs used in _clearOneHoursTimer: [status,2]
  2553  0540  01C5               	clrf	_uiOneHourTimer
  2554  0541  01C6               	clrf	_uiOneHourTimer+1
  2555                           
  2556                           ;common.c: 500: bOneHourTimerStartFlag = 0;
  2557  0542  01DA               	clrf	_bOneHourTimerStartFlag
  2558  0543  0008               	return
  2559  0544                     __end_of_clearOneHoursTimer:	
  2560  0544                     __ptext1390:	
  2561 ;; =============== function _clock_config ends ============
  2562                           
  2563                           
  2564 ;; *************** function _clearTwentyMinTimer *****************
  2565 ;; Defined at:
  2566 ;;		line 505 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;		None
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;		None
  2571 ;; Return value:  Size  Location     Type
  2572 ;;		None               void
  2573 ;; Registers used:
  2574 ;;		status,2
  2575 ;; Tracked objects:
  2576 ;;		On entry : 60/0
  2577 ;;		On exit  : 60/0
  2578 ;;		Unchanged: FFF9F/0
  2579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2580 ;;      Params:         0       0       0       0       0
  2581 ;;      Locals:         0       0       0       0       0
  2582 ;;      Temps:          0       0       0       0       0
  2583 ;;      Totals:         0       0       0       0       0
  2584 ;;Total ram usage:        0 bytes
  2585 ;; Hardware stack levels used:    1
  2586 ;; Hardware stack levels required when called:    3
  2587 ;; This function calls:
  2588 ;;		Nothing
  2589 ;; This function is called by:
  2590 ;;		_resetAllTimer
  2591 ;;		_main
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594  0544                     _clearTwentyMinTimer:	
  2595  0544                     l4017:	
  2596                           ; Regs used in _clearTwentyMinTimer: [status,2]
  2597                           
  2598                           
  2599                           ;common.c: 506: uiTwentyMinTimer = 0;
  2600  0544  01C9               	clrf	_uiTwentyMinTimer
  2601  0545  01CA               	clrf	_uiTwentyMinTimer+1
  2602                           
  2603                           ;common.c: 507: bTwentyMinStartFlag = 0;
  2604  0546  01DC               	clrf	_bTwentyMinStartFlag
  2605  0547  0008               	return
  2606  0548                     __end_of_clearTwentyMinTimer:	
  2607                           
  2608                           	psect	text1368
  2609  04DE                     __ptext1368:	
  2610 ;; =============== function _resetAllTimer ends ============
  2611                           
  2612                           
  2613 ;; *************** function _setPinInitVaule *****************
  2614 ;; Defined at:
  2615 ;;		line 285 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;		None
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;		None
  2620 ;; Return value:  Size  Location     Type
  2621 ;;		None               void
  2622 ;; Registers used:
  2623 ;;		wreg, status,2, status,0, pclath, cstack
  2624 ;; Tracked objects:
  2625 ;;		On entry : 17F/20
  2626 ;;		On exit  : 17F/0
  2627 ;;		Unchanged: FFE80/0
  2628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2629 ;;      Params:         0       0       0       0       0
  2630 ;;      Locals:         0       0       0       0       0
  2631 ;;      Temps:          0       0       0       0       0
  2632 ;;      Totals:         0       0       0       0       0
  2633 ;;Total ram usage:        0 bytes
  2634 ;; Hardware stack levels used:    1
  2635 ;; Hardware stack levels required when called:    4
  2636 ;; This function calls:
  2637 ;;		_setPB3
  2638 ;;		_setPB4
  2639 ;;		_setPB5
  2640 ;; This function is called by:
  2641 ;;		_main
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644  04DE                     _setPinInitVaule:	
  2645                           
  2646                           ;main.c: 287: setPB3(1);
  2647                           
  2648                           ; Regs used in _setPinInitVaule: [wreg+status,2+status,0+pclath+cstack]
  2649  04DE  3001               	movlw	1
  2650  04DF  24E6  118A         	fcall	_setPB3
  2651                           
  2652                           ;main.c: 288: setPB4(0);
  2653  04E1  3000               	movlw	0
  2654  04E2  24F1  118A         	fcall	_setPB4
  2655                           
  2656                           ;main.c: 289: setPB5(1);
  2657  04E4  3001               	movlw	1
  2658  04E5  2CFC               	ljmp	_setPB5
  2659  04E6                     __end_of_setPinInitVaule:	
  2660  04E6                     __ptext1402:	
  2661 ;; =============== function _initPB4 ends ============
  2662                           
  2663                           
  2664 ;; *************** function _setPB3 *****************
  2665 ;; Defined at:
  2666 ;;		line 135 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2667 ;; Parameters:    Size  Location     Type
  2668 ;;  bValue          1    wreg     unsigned char 
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;  bValue          1    0[BANK1 ] unsigned char 
  2671 ;; Return value:  Size  Location     Type
  2672 ;;		None               void
  2673 ;; Registers used:
  2674 ;;		wreg
  2675 ;; Tracked objects:
  2676 ;;		On entry : 40/0
  2677 ;;		On exit  : 60/0
  2678 ;;		Unchanged: FFF9F/0
  2679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2680 ;;      Params:         0       0       0       0       0
  2681 ;;      Locals:         0       0       1       0       0
  2682 ;;      Temps:          0       0       0       0       0
  2683 ;;      Totals:         0       0       1       0       0
  2684 ;;Total ram usage:        1 bytes
  2685 ;; Hardware stack levels used:    1
  2686 ;; Hardware stack levels required when called:    3
  2687 ;; This function calls:
  2688 ;;		Nothing
  2689 ;; This function is called by:
  2690 ;;		_setPinInitVaule
  2691 ;;		_main
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694  04E6                     _setPB3:	
  2695                           
  2696                           ; Regs used in _setPB3: [wreg]
  2697                           ;setPB3@bValue stored from wreg
  2698  04E6  1683               	bsf	3,5	;RP0=1, select bank1
  2699  04E7  00BD               	movwf	setPB3@bValue^(0+128)
  2700                           
  2701                           ;main.c: 136: if( bValue )
  2702  04E8  083D               	movf	setPB3@bValue^(0+128),w
  2703  04E9  1903               	btfsc	3,2
  2704  04EA  2CEE               	goto	l684
  2705                           
  2706                           ;main.c: 139: PB0 = 1;
  2707  04EB  1283               	bcf	3,5	;RP0=0, select bank0
  2708  04EC  1406               	bsf	6,0
  2709  04ED  0008               	return
  2710  04EE                     l684:	
  2711                           
  2712                           ;main.c: 143: else
  2713                           ;main.c: 146: PB0 = 0;
  2714  04EE  1283               	bcf	3,5	;RP0=0, select bank0
  2715  04EF  1006               	bcf	6,0
  2716  04F0  0008               	return
  2717  04F1                     __end_of_setPB3:	
  2718  04F1                     __ptext1400:	
  2719 ;; =============== function _initPB5 ends ============
  2720                           
  2721                           
  2722 ;; *************** function _setPB4 *****************
  2723 ;; Defined at:
  2724 ;;		line 174 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;  bValue          1    wreg     unsigned char 
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;  bValue          1    0[BANK1 ] unsigned char 
  2729 ;; Return value:  Size  Location     Type
  2730 ;;		None               void
  2731 ;; Registers used:
  2732 ;;		wreg
  2733 ;; Tracked objects:
  2734 ;;		On entry : 60/0
  2735 ;;		On exit  : 60/0
  2736 ;;		Unchanged: FFF9F/0
  2737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2738 ;;      Params:         0       0       0       0       0
  2739 ;;      Locals:         0       0       1       0       0
  2740 ;;      Temps:          0       0       0       0       0
  2741 ;;      Totals:         0       0       1       0       0
  2742 ;;Total ram usage:        1 bytes
  2743 ;; Hardware stack levels used:    1
  2744 ;; Hardware stack levels required when called:    3
  2745 ;; This function calls:
  2746 ;;		Nothing
  2747 ;; This function is called by:
  2748 ;;		_setPinInitVaule
  2749 ;;		_main
  2750 ;; This function uses a non-reentrant model
  2751 ;;
  2752  04F1                     _setPB4:	
  2753                           
  2754                           ; Regs used in _setPB4: [wreg]
  2755                           ;setPB4@bValue stored from wreg
  2756  04F1  1683               	bsf	3,5	;RP0=1, select bank1
  2757  04F2  00BD               	movwf	setPB4@bValue^(0+128)
  2758                           
  2759                           ;main.c: 175: if( bValue )
  2760  04F3  083D               	movf	setPB4@bValue^(0+128),w
  2761  04F4  1903               	btfsc	3,2
  2762  04F5  2CF9               	goto	l694
  2763                           
  2764                           ;main.c: 178: PB3 = 1;
  2765  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  2766  04F7  1586               	bsf	6,3
  2767  04F8  0008               	return
  2768  04F9                     l694:	
  2769                           
  2770                           ;main.c: 182: else
  2771                           ;main.c: 185: PB3 = 0;
  2772  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  2773  04FA  1186               	bcf	6,3
  2774  04FB  0008               	return
  2775  04FC                     __end_of_setPB4:	
  2776  04FC                     __ptext1398:	
  2777 ;; =============== function _initPB2_AsHighResistence ends ============
  2778                           
  2779                           
  2780 ;; *************** function _setPB5 *****************
  2781 ;; Defined at:
  2782 ;;		line 212 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;  bValue          1    wreg     unsigned char 
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;  bValue          1    0[BANK1 ] unsigned char 
  2787 ;; Return value:  Size  Location     Type
  2788 ;;		None               void
  2789 ;; Registers used:
  2790 ;;		wreg
  2791 ;; Tracked objects:
  2792 ;;		On entry : 60/0
  2793 ;;		On exit  : 60/0
  2794 ;;		Unchanged: FFF9F/0
  2795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2796 ;;      Params:         0       0       0       0       0
  2797 ;;      Locals:         0       0       1       0       0
  2798 ;;      Temps:          0       0       0       0       0
  2799 ;;      Totals:         0       0       1       0       0
  2800 ;;Total ram usage:        1 bytes
  2801 ;; Hardware stack levels used:    1
  2802 ;; Hardware stack levels required when called:    3
  2803 ;; This function calls:
  2804 ;;		Nothing
  2805 ;; This function is called by:
  2806 ;;		_setPinInitVaule
  2807 ;;		_main
  2808 ;; This function uses a non-reentrant model
  2809 ;;
  2810  04FC                     _setPB5:	
  2811                           
  2812                           ; Regs used in _setPB5: [wreg]
  2813                           ;setPB5@bValue stored from wreg
  2814  04FC  1683               	bsf	3,5	;RP0=1, select bank1
  2815  04FD  00BD               	movwf	setPB5@bValue^(0+128)
  2816                           
  2817                           ;main.c: 213: if( bValue )
  2818  04FE  083D               	movf	setPB5@bValue^(0+128),w
  2819  04FF  1903               	btfsc	3,2
  2820  0500  2D04               	goto	l704
  2821                           
  2822                           ;main.c: 216: PB1 = 1;
  2823  0501  1283               	bcf	3,5	;RP0=0, select bank0
  2824  0502  1486               	bsf	6,1
  2825  0503  0008               	return
  2826  0504                     l704:	
  2827                           
  2828                           ;main.c: 221: else
  2829                           ;main.c: 224: PB1 = 0;
  2830  0504  1283               	bcf	3,5	;RP0=0, select bank0
  2831  0505  1086               	bcf	6,1
  2832  0506  0008               	return
  2833  0507                     __end_of_setPB5:	
  2834                           
  2835                           	psect	text1369
  2836  0507                     __ptext1369:	
  2837 ;; =============== function _setPinInitVaule ends ============
  2838                           
  2839                           
  2840 ;; *************** function _initPin *****************
  2841 ;; Defined at:
  2842 ;;		line 269 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;		None
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;		None
  2847 ;; Return value:  Size  Location     Type
  2848 ;;		None               void
  2849 ;; Registers used:
  2850 ;;		wreg, status,2, status,0, pclath, cstack
  2851 ;; Tracked objects:
  2852 ;;		On entry : 17F/0
  2853 ;;		On exit  : 17F/20
  2854 ;;		Unchanged: FFE80/0
  2855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2856 ;;      Params:         0       0       0       0       0
  2857 ;;      Locals:         0       0       0       0       0
  2858 ;;      Temps:          0       0       0       0       0
  2859 ;;      Totals:         0       0       0       0       0
  2860 ;;Total ram usage:        0 bytes
  2861 ;; Hardware stack levels used:    1
  2862 ;; Hardware stack levels required when called:    4
  2863 ;; This function calls:
  2864 ;;		_initPB2_AsHighResistence
  2865 ;;		_initPB3
  2866 ;;		_initPB4
  2867 ;;		_initPB5
  2868 ;; This function is called by:
  2869 ;;		_main
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872  0507                     _initPin:	
  2873                           
  2874                           ;main.c: 271: initPB2_AsHighResistence();
  2875                           
  2876                           ; Regs used in _initPin: [wreg+status,2+status,0+pclath+cstack]
  2877  0507  251A  118A         	fcall	_initPB2_AsHighResistence
  2878                           
  2879                           ;main.c: 273: initPB3(0);
  2880  0509  3000               	movlw	0
  2881  050A  2511  118A         	fcall	_initPB3
  2882                           
  2883                           ;main.c: 275: initPB4(0);
  2884  050C  3000               	movlw	0
  2885  050D  251F  118A         	fcall	_initPB4
  2886                           
  2887                           ;main.c: 277: initPB5(0);
  2888  050F  3000               	movlw	0
  2889  0510  2D27               	ljmp	_initPB5
  2890  0511                     __end_of_initPin:	
  2891  0511                     __ptext1403:	
  2892 ;; =============== function _setPB3 ends ============
  2893                           
  2894                           
  2895 ;; *************** function _initPB3 *****************
  2896 ;; Defined at:
  2897 ;;		line 116 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;  bValue          1    wreg     unsigned char 
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;  bValue          1    0[BANK1 ] unsigned char 
  2902 ;; Return value:  Size  Location     Type
  2903 ;;		None               void
  2904 ;; Registers used:
  2905 ;;		wreg
  2906 ;; Tracked objects:
  2907 ;;		On entry : 17F/60
  2908 ;;		On exit  : 17F/20
  2909 ;;		Unchanged: FFE80/0
  2910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2911 ;;      Params:         0       0       0       0       0
  2912 ;;      Locals:         0       0       1       0       0
  2913 ;;      Temps:          0       0       0       0       0
  2914 ;;      Totals:         0       0       1       0       0
  2915 ;;Total ram usage:        1 bytes
  2916 ;; Hardware stack levels used:    1
  2917 ;; Hardware stack levels required when called:    3
  2918 ;; This function calls:
  2919 ;;		Nothing
  2920 ;; This function is called by:
  2921 ;;		_initPin
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924  0511                     _initPB3:	
  2925                           
  2926                           ; Regs used in _initPB3: [wreg]
  2927                           ;initPB3@bValue stored from wreg
  2928  0511  1303               	bcf	3,6	;RP1=0, select bank1
  2929  0512  00BD               	movwf	initPB3@bValue^(0+128)
  2930                           
  2931                           ;main.c: 117: if( bValue )
  2932  0513  083D               	movf	initPB3@bValue^(0+128),w
  2933  0514  1903               	btfsc	3,2
  2934  0515  2D18               	goto	l679
  2935                           
  2936                           ;main.c: 120: TRISB0 = 1;
  2937  0516  1406               	bsf	6,0
  2938  0517  0008               	return
  2939  0518                     l679:	
  2940                           
  2941                           ;main.c: 124: else
  2942                           ;main.c: 127: TRISB0 = 0;
  2943  0518  1006               	bcf	6,0
  2944  0519  0008               	return
  2945  051A                     __end_of_initPB3:	
  2946  051A                     __ptext1397:	
  2947 ;; =============== function _pwm_start ends ============
  2948                           
  2949                           
  2950 ;; *************** function _initPB2_AsHighResistence *****************
  2951 ;; Defined at:
  2952 ;;		line 232 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;		None
  2955 ;; Auto vars:     Size  Location     Type
  2956 ;;		None
  2957 ;; Return value:  Size  Location     Type
  2958 ;;		None               void
  2959 ;; Registers used:
  2960 ;;		None
  2961 ;; Tracked objects:
  2962 ;;		On entry : 17F/0
  2963 ;;		On exit  : 17F/60
  2964 ;;		Unchanged: FFE80/0
  2965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2966 ;;      Params:         0       0       0       0       0
  2967 ;;      Locals:         0       0       0       0       0
  2968 ;;      Temps:          0       0       0       0       0
  2969 ;;      Totals:         0       0       0       0       0
  2970 ;;Total ram usage:        0 bytes
  2971 ;; Hardware stack levels used:    1
  2972 ;; Hardware stack levels required when called:    3
  2973 ;; This function calls:
  2974 ;;		Nothing
  2975 ;; This function is called by:
  2976 ;;		_initPin
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979  051A                     _initPB2_AsHighResistence:	
  2980                           
  2981                           ;main.c: 234: PB2 = 1;
  2982                           
  2983                           ; Regs used in _initPB2_AsHighResistence: []
  2984  051A  1506               	bsf	6,2
  2985                           
  2986                           ;main.c: 235: PBOD2 = 1;
  2987  051B  1683               	bsf	3,5	;RP0=1, select bank3
  2988  051C  1703               	bsf	3,6	;RP1=1, select bank3
  2989  051D  1508               	bsf	8,2
  2990  051E  0008               	return
  2991  051F                     __end_of_initPB2_AsHighResistence:	
  2992  051F                     __ptext1401:	
  2993 ;; =============== function _setPB4 ends ============
  2994                           
  2995                           
  2996 ;; *************** function _initPB4 *****************
  2997 ;; Defined at:
  2998 ;;		line 155 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;  bValue          1    wreg     unsigned char 
  3001 ;; Auto vars:     Size  Location     Type
  3002 ;;  bValue          1    0[BANK1 ] unsigned char 
  3003 ;; Return value:  Size  Location     Type
  3004 ;;		None               void
  3005 ;; Registers used:
  3006 ;;		wreg
  3007 ;; Tracked objects:
  3008 ;;		On entry : 17F/20
  3009 ;;		On exit  : 17F/20
  3010 ;;		Unchanged: FFE80/0
  3011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3012 ;;      Params:         0       0       0       0       0
  3013 ;;      Locals:         0       0       1       0       0
  3014 ;;      Temps:          0       0       0       0       0
  3015 ;;      Totals:         0       0       1       0       0
  3016 ;;Total ram usage:        1 bytes
  3017 ;; Hardware stack levels used:    1
  3018 ;; Hardware stack levels required when called:    3
  3019 ;; This function calls:
  3020 ;;		Nothing
  3021 ;; This function is called by:
  3022 ;;		_initPin
  3023 ;; This function uses a non-reentrant model
  3024 ;;
  3025  051F                     _initPB4:	
  3026                           
  3027                           ; Regs used in _initPB4: [wreg]
  3028                           ;initPB4@bValue stored from wreg
  3029  051F  00BD               	movwf	initPB4@bValue^(0+128)
  3030                           
  3031                           ;main.c: 156: if( bValue )
  3032  0520  083D               	movf	initPB4@bValue^(0+128),w
  3033  0521  1903               	btfsc	3,2
  3034  0522  2D25               	goto	l689
  3035                           
  3036                           ;main.c: 159: TRISB3 = 1;
  3037  0523  1586               	bsf	6,3
  3038  0524  0008               	return
  3039  0525                     l689:	
  3040                           
  3041                           ;main.c: 163: else
  3042                           ;main.c: 166: TRISB3 = 0;
  3043  0525  1186               	bcf	6,3
  3044  0526  0008               	return
  3045  0527                     __end_of_initPB4:	
  3046  0527                     __ptext1399:	
  3047 ;; =============== function _setPB5 ends ============
  3048                           
  3049                           
  3050 ;; *************** function _initPB5 *****************
  3051 ;; Defined at:
  3052 ;;		line 193 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;  bValue          1    wreg     unsigned char 
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;  bValue          1    0[BANK1 ] unsigned char 
  3057 ;; Return value:  Size  Location     Type
  3058 ;;		None               void
  3059 ;; Registers used:
  3060 ;;		wreg
  3061 ;; Tracked objects:
  3062 ;;		On entry : 17F/20
  3063 ;;		On exit  : 17F/20
  3064 ;;		Unchanged: FFE80/0
  3065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3066 ;;      Params:         0       0       0       0       0
  3067 ;;      Locals:         0       0       1       0       0
  3068 ;;      Temps:          0       0       0       0       0
  3069 ;;      Totals:         0       0       1       0       0
  3070 ;;Total ram usage:        1 bytes
  3071 ;; Hardware stack levels used:    1
  3072 ;; Hardware stack levels required when called:    3
  3073 ;; This function calls:
  3074 ;;		Nothing
  3075 ;; This function is called by:
  3076 ;;		_initPin
  3077 ;; This function uses a non-reentrant model
  3078 ;;
  3079  0527                     _initPB5:	
  3080                           
  3081                           ; Regs used in _initPB5: [wreg]
  3082                           ;initPB5@bValue stored from wreg
  3083  0527  00BD               	movwf	initPB5@bValue^(0+128)
  3084                           
  3085                           ;main.c: 194: if( bValue )
  3086  0528  083D               	movf	initPB5@bValue^(0+128),w
  3087  0529  1903               	btfsc	3,2
  3088  052A  2D2D               	goto	l699
  3089                           
  3090                           ;main.c: 197: TRISB1 = 1;
  3091  052B  1486               	bsf	6,1
  3092  052C  0008               	return
  3093  052D                     l699:	
  3094                           
  3095                           ;main.c: 201: else
  3096                           ;main.c: 204: TRISB1= 0;
  3097  052D  1086               	bcf	6,1
  3098  052E  0008               	return
  3099  052F                     __end_of_initPB5:	
  3100                           
  3101                           	psect	text1374
  3102  0604                     __ptext1374:	
  3103 ;; =============== function _FilterCh13 ends ============
  3104                           
  3105                           
  3106 ;; *************** function _setWaitResetFlag *****************
  3107 ;; Defined at:
  3108 ;;		line 55 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;  bValue          1    wreg     unsigned char 
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;  bValue          1    0[BANK1 ] unsigned char 
  3113 ;; Return value:  Size  Location     Type
  3114 ;;		None               void
  3115 ;; Registers used:
  3116 ;;		wreg
  3117 ;; Tracked objects:
  3118 ;;		On entry : 60/0
  3119 ;;		On exit  : 60/0
  3120 ;;		Unchanged: FFF9F/0
  3121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3122 ;;      Params:         0       0       0       0       0
  3123 ;;      Locals:         0       0       1       0       0
  3124 ;;      Temps:          0       0       0       0       0
  3125 ;;      Totals:         0       0       1       0       0
  3126 ;;Total ram usage:        1 bytes
  3127 ;; Hardware stack levels used:    1
  3128 ;; Hardware stack levels required when called:    3
  3129 ;; This function calls:
  3130 ;;		Nothing
  3131 ;; This function is called by:
  3132 ;;		_main
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135  0604                     _setWaitResetFlag:	
  3136                           
  3137                           ; Regs used in _setWaitResetFlag: [wreg]
  3138                           ;setWaitResetFlag@bValue stored from wreg
  3139  0604  1683               	bsf	3,5	;RP0=1, select bank1
  3140  0605  00BD               	movwf	setWaitResetFlag@bValue^(0+128)
  3141                           
  3142                           ;common.c: 56: bWaitResetFlag = bValue;
  3143  0606  1283               	bcf	3,5	;RP0=0, select bank0
  3144  0607  00DD               	movwf	_bWaitResetFlag
  3145  0608  0008               	return
  3146  0609                     __end_of_setWaitResetFlag:	
  3147                           
  3148                           	psect	text1375
  3149  05BE                     __ptext1375:	
  3150 ;; =============== function _setWaitResetFlag ends ============
  3151                           
  3152                           
  3153 ;; *************** function _isFinishedOneHoursTimer *****************
  3154 ;; Defined at:
  3155 ;;		line 608 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3156 ;; Parameters:    Size  Location     Type
  3157 ;;		None
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;		None
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  1    wreg      unsigned char 
  3162 ;; Registers used:
  3163 ;;		wreg, status,2, status,0
  3164 ;; Tracked objects:
  3165 ;;		On entry : 160/20
  3166 ;;		On exit  : 160/0
  3167 ;;		Unchanged: FFE9F/0
  3168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3169 ;;      Params:         0       0       0       0       0
  3170 ;;      Locals:         0       0       0       0       0
  3171 ;;      Temps:          0       0       0       0       0
  3172 ;;      Totals:         0       0       0       0       0
  3173 ;;Total ram usage:        0 bytes
  3174 ;; Hardware stack levels used:    1
  3175 ;; Hardware stack levels required when called:    3
  3176 ;; This function calls:
  3177 ;;		Nothing
  3178 ;; This function is called by:
  3179 ;;		_main
  3180 ;; This function uses a non-reentrant model
  3181 ;;
  3182  05BE                     _isFinishedOneHoursTimer:	
  3183                           
  3184                           ;common.c: 609: if((uiOneHourTimer == 0) && bOneHourTimerStartFlag)
  3185                           
  3186                           ; Regs used in _isFinishedOneHoursTimer: [wreg+status,2+status,0]
  3187  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  3188  05BF  0846               	movf	_uiOneHourTimer+1,w
  3189  05C0  0445               	iorwf	_uiOneHourTimer,w
  3190  05C1  1D03               	skipz
  3191  05C2  3400               	retlw	0
  3192  05C3  085A               	movf	_bOneHourTimerStartFlag,w
  3193  05C4  1903               	btfsc	3,2
  3194  05C5  3400               	retlw	0
  3195  05C6  3001               	movlw	1
  3196                           
  3197                           ;common.c: 610: {
  3198                           ;common.c: 611: bOneHourTimerStartFlag = 0;
  3199  05C7  01DA               	clrf	_bOneHourTimerStartFlag
  3200                           
  3201                           ;common.c: 612: return 1;
  3202  05C8  0008               	return
  3203  05C9                     __end_of_isFinishedOneHoursTimer:	
  3204                           ;common.c: 614: else
  3205                           ;common.c: 615: return 0;
  3206                           
  3207                           
  3208                           	psect	text1376
  3209  0572                     __ptext1376:	
  3210 ;; =============== function _isFinishedOneHoursTimer ends ============
  3211                           
  3212                           
  3213 ;; *************** function _startOneHoursTimer *****************
  3214 ;; Defined at:
  3215 ;;		line 525 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3216 ;; Parameters:    Size  Location     Type
  3217 ;;  uiSetTime       2    0[BANK1 ] unsigned int 
  3218 ;; Auto vars:     Size  Location     Type
  3219 ;;		None
  3220 ;; Return value:  Size  Location     Type
  3221 ;;		None               void
  3222 ;; Registers used:
  3223 ;;		wreg, status,2, status,0
  3224 ;; Tracked objects:
  3225 ;;		On entry : 60/20
  3226 ;;		On exit  : 60/0
  3227 ;;		Unchanged: FFF9F/0
  3228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3229 ;;      Params:         0       0       2       0       0
  3230 ;;      Locals:         0       0       0       0       0
  3231 ;;      Temps:          0       0       0       0       0
  3232 ;;      Totals:         0       0       2       0       0
  3233 ;;Total ram usage:        2 bytes
  3234 ;; Hardware stack levels used:    1
  3235 ;; Hardware stack levels required when called:    3
  3236 ;; This function calls:
  3237 ;;		Nothing
  3238 ;; This function is called by:
  3239 ;;		_main
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242  0572                     _startOneHoursTimer:	
  3243                           
  3244                           ;common.c: 526: if(( 0 == uiOneHourTimer ) && ( 0 == bOneHourTimerStartFlag ))
  3245                           
  3246                           ; Regs used in _startOneHoursTimer: [wreg+status,2+status,0]
  3247  0572  1283               	bcf	3,5	;RP0=0, select bank0
  3248  0573  0846               	movf	_uiOneHourTimer+1,w
  3249  0574  0445               	iorwf	_uiOneHourTimer,w
  3250  0575  1D03               	skipz
  3251  0576  0008               	return
  3252  0577  08DA               	movf	_bOneHourTimerStartFlag,f
  3253  0578  1D03               	skipz
  3254  0579  0008               	return
  3255                           
  3256                           ;common.c: 527: {
  3257                           ;common.c: 528: uiOneHourTimer = uiSetTime;
  3258  057A  1683               	bsf	3,5	;RP0=1, select bank1
  3259  057B  083E               	movf	(startOneHoursTimer@uiSetTime+1)^(0+128),w
  3260  057C  1283               	bcf	3,5	;RP0=0, select bank0
  3261  057D  00C6               	movwf	_uiOneHourTimer+1
  3262  057E  1683               	bsf	3,5	;RP0=1, select bank1
  3263  057F  083D               	movf	startOneHoursTimer@uiSetTime^(0+128),w
  3264  0580  1283               	bcf	3,5	;RP0=0, select bank0
  3265  0581  00C5               	movwf	_uiOneHourTimer
  3266                           
  3267                           ;common.c: 529: bOneHourTimerStartFlag = 1;
  3268  0582  01DA               	clrf	_bOneHourTimerStartFlag
  3269  0583  0ADA               	incf	_bOneHourTimerStartFlag,f
  3270  0584  0008               	return
  3271  0585                     __end_of_startOneHoursTimer:	
  3272                           
  3273                           	psect	text1377
  3274  05C9                     __ptext1377:	
  3275 ;; =============== function _startOneHoursTimer ends ============
  3276                           
  3277                           
  3278 ;; *************** function _isFinishedThreeHoursTimer *****************
  3279 ;; Defined at:
  3280 ;;		line 595 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;		None
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;		None
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  1    wreg      unsigned char 
  3287 ;; Registers used:
  3288 ;;		wreg, status,2, status,0
  3289 ;; Tracked objects:
  3290 ;;		On entry : 40/20
  3291 ;;		On exit  : 60/0
  3292 ;;		Unchanged: FFF9F/0
  3293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3294 ;;      Params:         0       0       0       0       0
  3295 ;;      Locals:         0       0       0       0       0
  3296 ;;      Temps:          0       0       0       0       0
  3297 ;;      Totals:         0       0       0       0       0
  3298 ;;Total ram usage:        0 bytes
  3299 ;; Hardware stack levels used:    1
  3300 ;; Hardware stack levels required when called:    3
  3301 ;; This function calls:
  3302 ;;		Nothing
  3303 ;; This function is called by:
  3304 ;;		_main
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307  05C9                     _isFinishedThreeHoursTimer:	
  3308                           
  3309                           ;common.c: 596: if((uiSmallTimer == 0) && bSmallTimerStartFlag)
  3310                           
  3311                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  3312  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  3313  05CA  0848               	movf	_uiSmallTimer+1,w
  3314  05CB  0447               	iorwf	_uiSmallTimer,w
  3315  05CC  1D03               	skipz
  3316  05CD  3400               	retlw	0
  3317  05CE  085B               	movf	_bSmallTimerStartFlag,w
  3318  05CF  1903               	btfsc	3,2
  3319  05D0  3400               	retlw	0
  3320  05D1  3001               	movlw	1
  3321                           
  3322                           ;common.c: 597: {
  3323                           ;common.c: 598: bSmallTimerStartFlag = 0;
  3324  05D2  01DB               	clrf	_bSmallTimerStartFlag
  3325                           
  3326                           ;common.c: 599: return 1;
  3327  05D3  0008               	return
  3328  05D4                     __end_of_isFinishedThreeHoursTimer:	
  3329                           ;common.c: 601: else
  3330                           ;common.c: 602: return 0;
  3331                           
  3332                           
  3333                           	psect	text1378
  3334  0585                     __ptext1378:	
  3335 ;; =============== function _isFinishedThreeHoursTimer ends ============
  3336                           
  3337                           
  3338 ;; *************** function _startThreeHoursTimer *****************
  3339 ;; Defined at:
  3340 ;;		line 512 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;  uiSetTime       2    0[BANK1 ] unsigned int 
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;		None
  3345 ;; Return value:  Size  Location     Type
  3346 ;;		None               void
  3347 ;; Registers used:
  3348 ;;		wreg, status,2, status,0
  3349 ;; Tracked objects:
  3350 ;;		On entry : 60/20
  3351 ;;		On exit  : 60/0
  3352 ;;		Unchanged: FFF9F/0
  3353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3354 ;;      Params:         0       0       2       0       0
  3355 ;;      Locals:         0       0       0       0       0
  3356 ;;      Temps:          0       0       0       0       0
  3357 ;;      Totals:         0       0       2       0       0
  3358 ;;Total ram usage:        2 bytes
  3359 ;; Hardware stack levels used:    1
  3360 ;; Hardware stack levels required when called:    3
  3361 ;; This function calls:
  3362 ;;		Nothing
  3363 ;; This function is called by:
  3364 ;;		_main
  3365 ;; This function uses a non-reentrant model
  3366 ;;
  3367  0585                     _startThreeHoursTimer:	
  3368                           
  3369                           ;common.c: 513: if(( 0 == uiSmallTimer ) && ( 0 == bSmallTimerStartFlag ))
  3370                           
  3371                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  3372  0585  1283               	bcf	3,5	;RP0=0, select bank0
  3373  0586  0848               	movf	_uiSmallTimer+1,w
  3374  0587  0447               	iorwf	_uiSmallTimer,w
  3375  0588  1D03               	skipz
  3376  0589  0008               	return
  3377  058A  08DB               	movf	_bSmallTimerStartFlag,f
  3378  058B  1D03               	skipz
  3379  058C  0008               	return
  3380                           
  3381                           ;common.c: 514: {
  3382                           ;common.c: 515: uiSmallTimer = uiSetTime;
  3383  058D  1683               	bsf	3,5	;RP0=1, select bank1
  3384  058E  083E               	movf	(startThreeHoursTimer@uiSetTime+1)^(0+128),w
  3385  058F  1283               	bcf	3,5	;RP0=0, select bank0
  3386  0590  00C8               	movwf	_uiSmallTimer+1
  3387  0591  1683               	bsf	3,5	;RP0=1, select bank1
  3388  0592  083D               	movf	startThreeHoursTimer@uiSetTime^(0+128),w
  3389  0593  1283               	bcf	3,5	;RP0=0, select bank0
  3390  0594  00C7               	movwf	_uiSmallTimer
  3391                           
  3392                           ;common.c: 516: bSmallTimerStartFlag = 1;
  3393  0595  01DB               	clrf	_bSmallTimerStartFlag
  3394  0596  0ADB               	incf	_bSmallTimerStartFlag,f
  3395  0597  0008               	return
  3396  0598                     __end_of_startThreeHoursTimer:	
  3397                           
  3398                           	psect	text1379
  3399  05D4                     __ptext1379:	
  3400 ;; =============== function _startThreeHoursTimer ends ============
  3401                           
  3402                           
  3403 ;; *************** function _isFinishedTwelveHoursTimer *****************
  3404 ;; Defined at:
  3405 ;;		line 584 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3406 ;; Parameters:    Size  Location     Type
  3407 ;;		None
  3408 ;; Auto vars:     Size  Location     Type
  3409 ;;		None
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  1    wreg      unsigned char 
  3412 ;; Registers used:
  3413 ;;		wreg, status,2, status,0
  3414 ;; Tracked objects:
  3415 ;;		On entry : 40/20
  3416 ;;		On exit  : 60/0
  3417 ;;		Unchanged: FFF9F/0
  3418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3419 ;;      Params:         0       0       0       0       0
  3420 ;;      Locals:         0       0       0       0       0
  3421 ;;      Temps:          0       0       0       0       0
  3422 ;;      Totals:         0       0       0       0       0
  3423 ;;Total ram usage:        0 bytes
  3424 ;; Hardware stack levels used:    1
  3425 ;; Hardware stack levels required when called:    3
  3426 ;; This function calls:
  3427 ;;		Nothing
  3428 ;; This function is called by:
  3429 ;;		_main
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432  05D4                     _isFinishedTwelveHoursTimer:	
  3433                           
  3434                           ;common.c: 585: if(( uiBigTimer == 0 ) && bBigTimerStartFlag )
  3435                           
  3436                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  3437  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  3438  05D5  0844               	movf	_uiBigTimer+1,w
  3439  05D6  0443               	iorwf	_uiBigTimer,w
  3440  05D7  1D03               	skipz
  3441  05D8  3400               	retlw	0
  3442  05D9  0859               	movf	_bBigTimerStartFlag,w
  3443  05DA  1903               	btfsc	3,2
  3444  05DB  3400               	retlw	0
  3445  05DC  3001               	movlw	1
  3446                           
  3447                           ;common.c: 586: {
  3448                           ;common.c: 587: bBigTimerStartFlag = 0;
  3449  05DD  01D9               	clrf	_bBigTimerStartFlag
  3450                           
  3451                           ;common.c: 588: return 1;
  3452  05DE  0008               	return
  3453  05DF                     __end_of_isFinishedTwelveHoursTimer:	
  3454                           ;common.c: 590: else
  3455                           ;common.c: 591: return 0;
  3456                           
  3457                           
  3458                           	psect	text1380
  3459  0598                     __ptext1380:	
  3460 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  3461                           
  3462                           
  3463 ;; *************** function _startTwelveHourTimer *****************
  3464 ;; Defined at:
  3465 ;;		line 471 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3466 ;; Parameters:    Size  Location     Type
  3467 ;;  uiSetTime       2    0[BANK1 ] unsigned int 
  3468 ;; Auto vars:     Size  Location     Type
  3469 ;;		None
  3470 ;; Return value:  Size  Location     Type
  3471 ;;		None               void
  3472 ;; Registers used:
  3473 ;;		wreg, status,2, status,0
  3474 ;; Tracked objects:
  3475 ;;		On entry : 60/20
  3476 ;;		On exit  : 60/0
  3477 ;;		Unchanged: FFF9F/0
  3478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3479 ;;      Params:         0       0       2       0       0
  3480 ;;      Locals:         0       0       0       0       0
  3481 ;;      Temps:          0       0       0       0       0
  3482 ;;      Totals:         0       0       2       0       0
  3483 ;;Total ram usage:        2 bytes
  3484 ;; Hardware stack levels used:    1
  3485 ;; Hardware stack levels required when called:    3
  3486 ;; This function calls:
  3487 ;;		Nothing
  3488 ;; This function is called by:
  3489 ;;		_main
  3490 ;; This function uses a non-reentrant model
  3491 ;;
  3492  0598                     _startTwelveHourTimer:	
  3493                           
  3494                           ;common.c: 472: if((0 == uiBigTimer) && ( 0 == bBigTimerStartFlag))
  3495                           
  3496                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  3497  0598  1283               	bcf	3,5	;RP0=0, select bank0
  3498  0599  0844               	movf	_uiBigTimer+1,w
  3499  059A  0443               	iorwf	_uiBigTimer,w
  3500  059B  1D03               	skipz
  3501  059C  0008               	return
  3502  059D  08D9               	movf	_bBigTimerStartFlag,f
  3503  059E  1D03               	skipz
  3504  059F  0008               	return
  3505                           
  3506                           ;common.c: 473: {
  3507                           ;common.c: 474: uiBigTimer = uiSetTime;
  3508  05A0  1683               	bsf	3,5	;RP0=1, select bank1
  3509  05A1  083E               	movf	(startTwelveHourTimer@uiSetTime+1)^(0+128),w
  3510  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  3511  05A3  00C4               	movwf	_uiBigTimer+1
  3512  05A4  1683               	bsf	3,5	;RP0=1, select bank1
  3513  05A5  083D               	movf	startTwelveHourTimer@uiSetTime^(0+128),w
  3514  05A6  1283               	bcf	3,5	;RP0=0, select bank0
  3515  05A7  00C3               	movwf	_uiBigTimer
  3516                           
  3517                           ;common.c: 475: bBigTimerStartFlag = 1;
  3518  05A8  01D9               	clrf	_bBigTimerStartFlag
  3519  05A9  0AD9               	incf	_bBigTimerStartFlag,f
  3520  05AA  0008               	return
  3521  05AB                     __end_of_startTwelveHourTimer:	
  3522                           
  3523                           	psect	text1381
  3524  05DF                     __ptext1381:	
  3525 ;; =============== function _startTwelveHourTimer ends ============
  3526                           
  3527                           
  3528 ;; *************** function _isFinishedTwentyMinTimer *****************
  3529 ;; Defined at:
  3530 ;;		line 560 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;		None
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;		None
  3535 ;; Return value:  Size  Location     Type
  3536 ;;                  1    wreg      unsigned char 
  3537 ;; Registers used:
  3538 ;;		wreg, status,2, status,0
  3539 ;; Tracked objects:
  3540 ;;		On entry : 40/20
  3541 ;;		On exit  : 60/0
  3542 ;;		Unchanged: FFF9F/0
  3543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3544 ;;      Params:         0       0       0       0       0
  3545 ;;      Locals:         0       0       0       0       0
  3546 ;;      Temps:          0       0       0       0       0
  3547 ;;      Totals:         0       0       0       0       0
  3548 ;;Total ram usage:        0 bytes
  3549 ;; Hardware stack levels used:    1
  3550 ;; Hardware stack levels required when called:    3
  3551 ;; This function calls:
  3552 ;;		Nothing
  3553 ;; This function is called by:
  3554 ;;		_main
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557  05DF                     _isFinishedTwentyMinTimer:	
  3558                           
  3559                           ;common.c: 561: if(( 0 == uiTwentyMinTimer ) && bTwentyMinStartFlag )
  3560                           
  3561                           ; Regs used in _isFinishedTwentyMinTimer: [wreg+status,2+status,0]
  3562  05DF  1283               	bcf	3,5	;RP0=0, select bank0
  3563  05E0  084A               	movf	_uiTwentyMinTimer+1,w
  3564  05E1  0449               	iorwf	_uiTwentyMinTimer,w
  3565  05E2  1D03               	skipz
  3566  05E3  3400               	retlw	0
  3567  05E4  085C               	movf	_bTwentyMinStartFlag,w
  3568  05E5  1903               	btfsc	3,2
  3569  05E6  3400               	retlw	0
  3570  05E7  3001               	movlw	1
  3571                           
  3572                           ;common.c: 562: {
  3573                           ;common.c: 563: bTwentyMinStartFlag = 0;
  3574  05E8  01DC               	clrf	_bTwentyMinStartFlag
  3575                           
  3576                           ;common.c: 564: return 1;
  3577  05E9  0008               	return
  3578  05EA                     __end_of_isFinishedTwentyMinTimer:	
  3579                           ;common.c: 566: else
  3580                           ;common.c: 567: return 0;
  3581                           
  3582                           
  3583                           	psect	text1382
  3584  0614                     __ptext1382:	
  3585 ;; =============== function _isFinishedTwentyMinTimer ends ============
  3586                           
  3587                           
  3588 ;; *************** function _clrSampeTime *****************
  3589 ;; Defined at:
  3590 ;;		line 630 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3591 ;; Parameters:    Size  Location     Type
  3592 ;;		None
  3593 ;; Auto vars:     Size  Location     Type
  3594 ;;		None
  3595 ;; Return value:  Size  Location     Type
  3596 ;;		None               void
  3597 ;; Registers used:
  3598 ;;		status,2
  3599 ;; Tracked objects:
  3600 ;;		On entry : 60/0
  3601 ;;		On exit  : 60/0
  3602 ;;		Unchanged: FFF9F/0
  3603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3604 ;;      Params:         0       0       0       0       0
  3605 ;;      Locals:         0       0       0       0       0
  3606 ;;      Temps:          0       0       0       0       0
  3607 ;;      Totals:         0       0       0       0       0
  3608 ;;Total ram usage:        0 bytes
  3609 ;; Hardware stack levels used:    1
  3610 ;; Hardware stack levels required when called:    3
  3611 ;; This function calls:
  3612 ;;		Nothing
  3613 ;; This function is called by:
  3614 ;;		_main
  3615 ;; This function uses a non-reentrant model
  3616 ;;
  3617  0614                     _clrSampeTime:	
  3618                           
  3619                           ;common.c: 631: timer.timer10msStopWatch = 0;
  3620                           
  3621                           ; Regs used in _clrSampeTime: [status,2]
  3622  0614  01DF               	clrf	_timer
  3623  0615  0008               	return
  3624  0616                     __end_of_clrSampeTime:	
  3625                           
  3626                           	psect	text1383
  3627  0609                     __ptext1383:	
  3628 ;; =============== function _clrSampeTime ends ============
  3629                           
  3630                           
  3631 ;; *************** function _isPermitSampleTime *****************
  3632 ;; Defined at:
  3633 ;;		line 620 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3634 ;; Parameters:    Size  Location     Type
  3635 ;;		None
  3636 ;; Auto vars:     Size  Location     Type
  3637 ;;		None
  3638 ;; Return value:  Size  Location     Type
  3639 ;;                  1    wreg      unsigned char 
  3640 ;; Registers used:
  3641 ;;		wreg
  3642 ;; Tracked objects:
  3643 ;;		On entry : 60/0
  3644 ;;		On exit  : 60/0
  3645 ;;		Unchanged: FFF9F/0
  3646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3647 ;;      Params:         0       0       0       0       0
  3648 ;;      Locals:         0       0       0       0       0
  3649 ;;      Temps:          0       0       0       0       0
  3650 ;;      Totals:         0       0       0       0       0
  3651 ;;Total ram usage:        0 bytes
  3652 ;; Hardware stack levels used:    1
  3653 ;; Hardware stack levels required when called:    3
  3654 ;; This function calls:
  3655 ;;		Nothing
  3656 ;; This function is called by:
  3657 ;;		_main
  3658 ;; This function uses a non-reentrant model
  3659 ;;
  3660  0609                     _isPermitSampleTime:	
  3661                           
  3662                           ;common.c: 621: if(timer.timer10msStopWatch >= 1)
  3663                           
  3664                           ; Regs used in _isPermitSampleTime: [wreg]
  3665  0609  085F               	movf	_timer,w
  3666  060A  1D03               	skipz
  3667                           
  3668                           ;common.c: 622: {
  3669                           ;common.c: 623: return 1;
  3670  060B  3401               	retlw	1
  3671                           
  3672                           ;common.c: 625: else
  3673                           ;common.c: 626: return 0;
  3674  060C  3400               	retlw	0
  3675  060D                     __end_of_isPermitSampleTime:	
  3676                           
  3677                           	psect	text1385
  3678  05AB                     __ptext1385:	
  3679 ;; =============== function _adc_start ends ============
  3680                           
  3681                           
  3682 ;; *************** function _startTwentyMinTimer *****************
  3683 ;; Defined at:
  3684 ;;		line 550 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3685 ;; Parameters:    Size  Location     Type
  3686 ;;  uiSetValue      2    0[BANK1 ] unsigned int 
  3687 ;; Auto vars:     Size  Location     Type
  3688 ;;		None
  3689 ;; Return value:  Size  Location     Type
  3690 ;;		None               void
  3691 ;; Registers used:
  3692 ;;		wreg, status,2, status,0
  3693 ;; Tracked objects:
  3694 ;;		On entry : 17F/20
  3695 ;;		On exit  : 17F/0
  3696 ;;		Unchanged: FFE80/0
  3697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3698 ;;      Params:         0       0       2       0       0
  3699 ;;      Locals:         0       0       0       0       0
  3700 ;;      Temps:          0       0       0       0       0
  3701 ;;      Totals:         0       0       2       0       0
  3702 ;;Total ram usage:        2 bytes
  3703 ;; Hardware stack levels used:    1
  3704 ;; Hardware stack levels required when called:    3
  3705 ;; This function calls:
  3706 ;;		Nothing
  3707 ;; This function is called by:
  3708 ;;		_main
  3709 ;; This function uses a non-reentrant model
  3710 ;;
  3711  05AB                     _startTwentyMinTimer:	
  3712                           
  3713                           ;common.c: 551: if(( 0 == uiTwentyMinTimer) && ( 0 == bTwentyMinStartFlag))
  3714                           
  3715                           ; Regs used in _startTwentyMinTimer: [wreg+status,2+status,0]
  3716  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  3717  05AC  084A               	movf	_uiTwentyMinTimer+1,w
  3718  05AD  0449               	iorwf	_uiTwentyMinTimer,w
  3719  05AE  1D03               	skipz
  3720  05AF  0008               	return
  3721  05B0  08DC               	movf	_bTwentyMinStartFlag,f
  3722  05B1  1D03               	skipz
  3723  05B2  0008               	return
  3724                           
  3725                           ;common.c: 552: {
  3726                           ;common.c: 553: uiTwentyMinTimer = uiSetValue;
  3727  05B3  1683               	bsf	3,5	;RP0=1, select bank1
  3728  05B4  083E               	movf	(startTwentyMinTimer@uiSetValue+1)^(0+128),w
  3729  05B5  1283               	bcf	3,5	;RP0=0, select bank0
  3730  05B6  00CA               	movwf	_uiTwentyMinTimer+1
  3731  05B7  1683               	bsf	3,5	;RP0=1, select bank1
  3732  05B8  083D               	movf	startTwentyMinTimer@uiSetValue^(0+128),w
  3733  05B9  1283               	bcf	3,5	;RP0=0, select bank0
  3734  05BA  00C9               	movwf	_uiTwentyMinTimer
  3735                           
  3736                           ;common.c: 554: bTwentyMinStartFlag = 1;
  3737  05BB  01DC               	clrf	_bTwentyMinStartFlag
  3738  05BC  0ADC               	incf	_bTwentyMinStartFlag,f
  3739  05BD  0008               	return
  3740  05BE                     __end_of_startTwentyMinTimer:	
  3741                           
  3742                           	psect	text1387
  3743  0611                     __ptext1387:	
  3744 ;; =============== function _adc_test_init ends ============
  3745                           
  3746                           
  3747 ;; *************** function _timer1_interrupt_config *****************
  3748 ;; Defined at:
  3749 ;;		line 360 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3750 ;; Parameters:    Size  Location     Type
  3751 ;;		None
  3752 ;; Auto vars:     Size  Location     Type
  3753 ;;		None
  3754 ;; Return value:  Size  Location     Type
  3755 ;;		None               void
  3756 ;; Registers used:
  3757 ;;		None
  3758 ;; Tracked objects:
  3759 ;;		On entry : 17F/20
  3760 ;;		On exit  : 17F/20
  3761 ;;		Unchanged: FFE80/0
  3762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3763 ;;      Params:         0       0       0       0       0
  3764 ;;      Locals:         0       0       0       0       0
  3765 ;;      Temps:          0       0       0       0       0
  3766 ;;      Totals:         0       0       0       0       0
  3767 ;;Total ram usage:        0 bytes
  3768 ;; Hardware stack levels used:    1
  3769 ;; Hardware stack levels required when called:    3
  3770 ;; This function calls:
  3771 ;;		Nothing
  3772 ;; This function is called by:
  3773 ;;		_main
  3774 ;; This function uses a non-reentrant model
  3775 ;;
  3776  0611                     _timer1_interrupt_config:	
  3777                           
  3778                           ;common.c: 361: GIE = 1;
  3779                           
  3780                           ; Regs used in _timer1_interrupt_config: []
  3781  0611  178B               	bsf	11,7
  3782                           
  3783                           ;common.c: 362: PEIE = 1;
  3784  0612  170B               	bsf	11,6
  3785  0613  0008               	return
  3786  0614                     __end_of_timer1_interrupt_config:	
  3787                           
  3788                           	psect	text1388
  3789  05EA                     __ptext1388:	
  3790 ;; =============== function _timer1_interrupt_config ends ============
  3791                           
  3792                           
  3793 ;; *************** function _timer1_config *****************
  3794 ;; Defined at:
  3795 ;;		line 348 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3796 ;; Parameters:    Size  Location     Type
  3797 ;;		None
  3798 ;; Auto vars:     Size  Location     Type
  3799 ;;		None
  3800 ;; Return value:  Size  Location     Type
  3801 ;;		None               void
  3802 ;; Registers used:
  3803 ;;		wreg
  3804 ;; Tracked objects:
  3805 ;;		On entry : 17F/40
  3806 ;;		On exit  : 17F/20
  3807 ;;		Unchanged: FFE80/0
  3808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3809 ;;      Params:         0       0       0       0       0
  3810 ;;      Locals:         0       0       0       0       0
  3811 ;;      Temps:          0       0       0       0       0
  3812 ;;      Totals:         0       0       0       0       0
  3813 ;;Total ram usage:        0 bytes
  3814 ;; Hardware stack levels used:    1
  3815 ;; Hardware stack levels required when called:    3
  3816 ;; This function calls:
  3817 ;;		Nothing
  3818 ;; This function is called by:
  3819 ;;		_main
  3820 ;; This function uses a non-reentrant model
  3821 ;;
  3822  05EA                     _timer1_config:	
  3823                           
  3824                           ;common.c: 350: TMR1H=0xCF;
  3825                           
  3826                           ; Regs used in _timer1_config: [wreg]
  3827  05EA  30CF               	movlw	207
  3828  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  3829  05EC  008F               	movwf	15	;volatile
  3830                           
  3831                           ;common.c: 351: TMR1L=0x2C;
  3832  05ED  302C               	movlw	44
  3833  05EE  008E               	movwf	14	;volatile
  3834                           
  3835                           ;common.c: 352: T1CON=0xE1;
  3836  05EF  30E1               	movlw	225
  3837  05F0  0090               	movwf	16	;volatile
  3838                           
  3839                           ;common.c: 353: TMR1IE=1;
  3840  05F1  1683               	bsf	3,5	;RP0=1, select bank1
  3841  05F2  140C               	bsf	12,0
  3842  05F3  0008               	return
  3843  05F4                     __end_of_timer1_config:	
  3844                           
  3845                           	psect	text1389
  3846  05FC                     __ptext1389:	
  3847 ;; =============== function _timer1_config ends ============
  3848                           
  3849                           
  3850 ;; *************** function _clock_config *****************
  3851 ;; Defined at:
  3852 ;;		line 340 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3853 ;; Parameters:    Size  Location     Type
  3854 ;;		None
  3855 ;; Auto vars:     Size  Location     Type
  3856 ;;		None
  3857 ;; Return value:  Size  Location     Type
  3858 ;;		None               void
  3859 ;; Registers used:
  3860 ;;		wreg, status,2
  3861 ;; Tracked objects:
  3862 ;;		On entry : 17F/20
  3863 ;;		On exit  : 17F/40
  3864 ;;		Unchanged: FFE80/0
  3865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3866 ;;      Params:         0       0       0       0       0
  3867 ;;      Locals:         0       0       0       0       0
  3868 ;;      Temps:          0       0       0       0       0
  3869 ;;      Totals:         0       0       0       0       0
  3870 ;;Total ram usage:        0 bytes
  3871 ;; Hardware stack levels used:    1
  3872 ;; Hardware stack levels required when called:    3
  3873 ;; This function calls:
  3874 ;;		Nothing
  3875 ;; This function is called by:
  3876 ;;		_main
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879  05FC                     _clock_config:	
  3880                           
  3881                           ;common.c: 342: CLKPR = 0x80;
  3882                           
  3883                           ; Regs used in _clock_config: [wreg+status,2]
  3884  05FC  3080               	movlw	128
  3885  05FD  1283               	bcf	3,5	;RP0=0, select bank2
  3886  05FE  1703               	bsf	3,6	;RP1=1, select bank2
  3887  05FF  0088               	movwf	8	;volatile
  3888                           
  3889                           ;common.c: 343: CLKPR = 0x00;
  3890  0600  0188               	clrf	8	;volatile
  3891  0601                     l1569:	
  3892                           ;common.c: 344: while(CLKPCE);
  3893                           
  3894  0601  1F88               	btfss	8,7
  3895  0602  0008               	return
  3896  0603  2E01               	goto	l1569
  3897  0604                     __end_of_clock_config:	
  3898                           
  3899                           	psect	text1394
  3900  0616                     __ptext1394:	
  3901 ;; =============== function _clearTwelveHoursTimer ends ============
  3902                           
  3903                           
  3904 ;; *************** function _reset *****************
  3905 ;; Defined at:
  3906 ;;		line 307 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;		None
  3909 ;; Auto vars:     Size  Location     Type
  3910 ;;		None
  3911 ;; Return value:  Size  Location     Type
  3912 ;;		None               void
  3913 ;; Registers used:
  3914 ;;		None
  3915 ;; Tracked objects:
  3916 ;;		On entry : 60/20
  3917 ;;		On exit  : 60/20
  3918 ;;		Unchanged: FFFFFF9F/0
  3919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3920 ;;      Params:         0       0       0       0       0
  3921 ;;      Locals:         0       0       0       0       0
  3922 ;;      Temps:          0       0       0       0       0
  3923 ;;      Totals:         0       0       0       0       0
  3924 ;;Total ram usage:        0 bytes
  3925 ;; Hardware stack levels used:    1
  3926 ;; Hardware stack levels required when called:    3
  3927 ;; This function calls:
  3928 ;;		Nothing
  3929 ;; This function is called by:
  3930 ;;		_main
  3931 ;; This function uses a non-reentrant model
  3932 ;;
  3933  0616                     _reset:	
  3934  0616                     l724:	
  3935                           ; Regs used in _reset: []
  3936                           ;main.c: 309: while(1);
  3937                           
  3938  0616  2E16               	goto	l724
  3939                           
  3940                           	psect	text1395
  3941  060D                     __ptext1395:	
  3942  060D                     __end_of_reset:	
  3943                           
  3944 ;; =============== function _reset ends ============
  3945 ;; *************** function _selectAdChannel *****************
  3946 ;; Defined at:
  3947 ;;		line 296 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  3948 ;; Parameters:    Size  Location     Type
  3949 ;;		None
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;		None
  3952 ;; Return value:  Size  Location     Type
  3953 ;;		None               void
  3954 ;; Registers used:
  3955 ;;		None
  3956 ;; Tracked objects:
  3957 ;;		On entry : 17F/0
  3958 ;;		On exit  : 17F/20
  3959 ;;		Unchanged: FFE80/0
  3960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3961 ;;      Params:         0       0       0       0       0
  3962 ;;      Locals:         0       0       0       0       0
  3963 ;;      Temps:          0       0       0       0       0
  3964 ;;      Totals:         0       0       0       0       0
  3965 ;;Total ram usage:        0 bytes
  3966 ;; Hardware stack levels used:    1
  3967 ;; Hardware stack levels required when called:    3
  3968 ;; This function calls:
  3969 ;;		Nothing
  3970 ;; This function is called by:
  3971 ;;		_main
  3972 ;; This function uses a non-reentrant model
  3973 ;;
  3974  060D                     _selectAdChannel:	
  3975                           
  3976                           ;main.c: 298: TRISB4 = 1;
  3977                           
  3978                           ; Regs used in _selectAdChannel: []
  3979  060D  1683               	bsf	3,5	;RP0=1, select bank1
  3980  060E  1606               	bsf	6,4
  3981                           
  3982                           ;main.c: 299: TRISB5 = 1;
  3983  060F  1686               	bsf	6,5
  3984  0610  0008               	return
  3985  0611                     __end_of_selectAdChannel:	
  3986                           
  3987                           	psect	text1396
  3988  0548                     __ptext1396:	
  3989 ;; =============== function _selectAdChannel ends ============
  3990                           
  3991                           
  3992 ;; *************** function _pwm_start *****************
  3993 ;; Defined at:
  3994 ;;		line 244 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;  ucPulseWidth    1    wreg     unsigned char 
  3997 ;;  ucPulseFrequ    1    0[BANK1 ] unsigned char 
  3998 ;; Auto vars:     Size  Location     Type
  3999 ;;  ucPulseWidth    1    1[BANK1 ] unsigned char 
  4000 ;; Return value:  Size  Location     Type
  4001 ;;		None               void
  4002 ;; Registers used:
  4003 ;;		wreg, status,2, status,0
  4004 ;; Tracked objects:
  4005 ;;		On entry : 60/20
  4006 ;;		On exit  : 60/0
  4007 ;;		Unchanged: FFF9F/0
  4008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4009 ;;      Params:         0       0       1       0       0
  4010 ;;      Locals:         0       0       1       0       0
  4011 ;;      Temps:          0       0       0       0       0
  4012 ;;      Totals:         0       0       2       0       0
  4013 ;;Total ram usage:        2 bytes
  4014 ;; Hardware stack levels used:    1
  4015 ;; Hardware stack levels required when called:    3
  4016 ;; This function calls:
  4017 ;;		Nothing
  4018 ;; This function is called by:
  4019 ;;		_main
  4020 ;; This function uses a non-reentrant model
  4021 ;;
  4022  0548                     _pwm_start:	
  4023                           
  4024                           ; Regs used in _pwm_start: [wreg+status,2+status,0]
  4025                           ;pwm_start@ucPulseWidth stored from wreg
  4026  0548  00BE               	movwf	pwm_start@ucPulseWidth^(0+128)
  4027                           
  4028                           ;main.c: 246: CCP1CON&= 0xf0;
  4029  0549  30F0               	movlw	240
  4030  054A  1283               	bcf	3,5	;RP0=0, select bank0
  4031  054B  0597               	andwf	23,f	;volatile
  4032                           
  4033                           ;main.c: 248: T2CON=0x04;
  4034  054C  3004               	movlw	4
  4035  054D  0092               	movwf	18	;volatile
  4036                           
  4037                           ;main.c: 249: PR2 = ucPulseFrequency;
  4038  054E  1683               	bsf	3,5	;RP0=1, select bank1
  4039  054F  083D               	movf	pwm_start@ucPulseFrequency^(0+128),w
  4040  0550  0092               	movwf	18	;volatile
  4041                           
  4042                           ;main.c: 250: CCPR1L = ucPulseWidth;
  4043  0551  083E               	movf	pwm_start@ucPulseWidth^(0+128),w
  4044  0552  1283               	bcf	3,5	;RP0=0, select bank0
  4045  0553  0095               	movwf	21	;volatile
  4046                           
  4047                           ;main.c: 251: CCP1CON=0x00;
  4048  0554  0197               	clrf	23	;volatile
  4049                           
  4050                           ;main.c: 253: TRISB2=0;
  4051  0555  1683               	bsf	3,5	;RP0=1, select bank1
  4052  0556  300C               	movlw	12
  4053  0557  1106               	bcf	6,2
  4054                           
  4055                           ;main.c: 254: PBOD2 = 0;
  4056  0558  1703               	bsf	3,6	;RP1=1, select bank3
  4057  0559  1108               	bcf	8,2
  4058                           
  4059                           ;main.c: 256: CCP1CON|= 0x0c;
  4060  055A  1283               	bcf	3,5	;RP0=0, select bank0
  4061  055B  1303               	bcf	3,6	;RP1=0, select bank0
  4062  055C  0497               	iorwf	23,f	;volatile
  4063  055D  0008               	return
  4064  055E                     __end_of_pwm_start:	
  4065                           
  4066                           	psect	text1404
  4067  0013                     __ptext1404:	
  4068 ;; =============== function _initPB3 ends ============
  4069                           
  4070                           
  4071 ;; *************** function _ISR *****************
  4072 ;; Defined at:
  4073 ;;		line 638 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  4074 ;; Parameters:    Size  Location     Type
  4075 ;;		None
  4076 ;; Auto vars:     Size  Location     Type
  4077 ;;		None
  4078 ;; Return value:  Size  Location     Type
  4079 ;;		None               void
  4080 ;; Registers used:
  4081 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4082 ;; Tracked objects:
  4083 ;;		On entry : 0/0
  4084 ;;		On exit  : 60/0
  4085 ;;		Unchanged: FFE00/0
  4086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4087 ;;      Params:         0       0       0       0       0
  4088 ;;      Locals:         0       0       0       0       0
  4089 ;;      Temps:          0       4       0       0       0
  4090 ;;      Totals:         0       4       0       0       0
  4091 ;;Total ram usage:        4 bytes
  4092 ;; Hardware stack levels used:    1
  4093 ;; Hardware stack levels required when called:    2
  4094 ;; This function calls:
  4095 ;;		i1_setAD_ConvertFlag
  4096 ;;		_adc_get
  4097 ;;		_vPutSampleDataIntoTable
  4098 ;; This function is called by:
  4099 ;;		Interrupt level 1
  4100 ;; This function uses a non-reentrant model
  4101 ;;
  4102  0013                     _ISR:	
  4103                           
  4104                           ;common.c: 639: static unsigned char ucTimer1sCnt = 0;
  4105                           ;common.c: 642: if(TMR1IF == 1)
  4106  0013  1C0C               	btfss	12,0
  4107  0014  284F               	goto	i1l3755
  4108  0015  3064               	movlw	100
  4109                           
  4110                           ;common.c: 643: {
  4111                           ;common.c: 644: TMR1IF = 0 ;
  4112  0016  100C               	bcf	12,0
  4113                           
  4114                           ;common.c: 645: timer.timer10msStopWatch++;
  4115  0017  0ADF               	incf	_timer,f
  4116                           
  4117                           ;common.c: 646: ucTimer1sCnt++;
  4118  0018  0AD7               	incf	ISR@ucTimer1sCnt,f
  4119                           
  4120                           ;common.c: 650: if(ucTimer1sCnt >= 100)
  4121  0019  0257               	subwf	ISR@ucTimer1sCnt,w
  4122  001A  1C03               	skipc
  4123  001B  284F               	goto	i1l3755
  4124                           
  4125                           ;common.c: 651: {
  4126                           ;common.c: 652: ucTimer1sCnt = 0;
  4127  001C  01D7               	clrf	ISR@ucTimer1sCnt
  4128                           
  4129                           ;common.c: 653: if(uiBigTimer > 0)
  4130  001D  0844               	movf	_uiBigTimer+1,w
  4131  001E  0443               	iorwf	_uiBigTimer,w
  4132  001F  1903               	skipnz
  4133  0020  2827               	goto	i1l1672
  4134                           
  4135                           ;common.c: 654: uiBigTimer--;
  4136  0021  3001               	movlw	1
  4137  0022  02C3               	subwf	_uiBigTimer,f
  4138  0023  3000               	movlw	0
  4139  0024  1C03               	skipc
  4140  0025  03C4               	decf	_uiBigTimer+1,f
  4141  0026  02C4               	subwf	_uiBigTimer+1,f
  4142  0027                     i1l1672:	
  4143                           
  4144                           ;common.c: 656: if(uiSmallTimer)
  4145  0027  0848               	movf	_uiSmallTimer+1,w
  4146  0028  0447               	iorwf	_uiSmallTimer,w
  4147  0029  1903               	skipnz
  4148  002A  2831               	goto	i1l1673
  4149                           
  4150                           ;common.c: 657: uiSmallTimer--;
  4151  002B  3001               	movlw	1
  4152  002C  02C7               	subwf	_uiSmallTimer,f
  4153  002D  3000               	movlw	0
  4154  002E  1C03               	skipc
  4155  002F  03C8               	decf	_uiSmallTimer+1,f
  4156  0030  02C8               	subwf	_uiSmallTimer+1,f
  4157  0031                     i1l1673:	
  4158                           
  4159                           ;common.c: 659: if(uiTwentySecondsTimer)
  4160  0031  084C               	movf	_uiTwentySecondsTimer+1,w
  4161  0032  044B               	iorwf	_uiTwentySecondsTimer,w
  4162  0033  1903               	skipnz
  4163  0034  283B               	goto	i1l1674
  4164                           
  4165                           ;common.c: 660: uiTwentySecondsTimer--;
  4166  0035  3001               	movlw	1
  4167  0036  02CB               	subwf	_uiTwentySecondsTimer,f
  4168  0037  3000               	movlw	0
  4169  0038  1C03               	skipc
  4170  0039  03CC               	decf	_uiTwentySecondsTimer+1,f
  4171  003A  02CC               	subwf	_uiTwentySecondsTimer+1,f
  4172  003B                     i1l1674:	
  4173                           
  4174                           ;common.c: 662: if(uiTwentyMinTimer)
  4175  003B  084A               	movf	_uiTwentyMinTimer+1,w
  4176  003C  0449               	iorwf	_uiTwentyMinTimer,w
  4177  003D  1903               	skipnz
  4178  003E  2845               	goto	i1l1675
  4179                           
  4180                           ;common.c: 663: uiTwentyMinTimer--;
  4181  003F  3001               	movlw	1
  4182  0040  02C9               	subwf	_uiTwentyMinTimer,f
  4183  0041  3000               	movlw	0
  4184  0042  1C03               	skipc
  4185  0043  03CA               	decf	_uiTwentyMinTimer+1,f
  4186  0044  02CA               	subwf	_uiTwentyMinTimer+1,f
  4187  0045                     i1l1675:	
  4188                           
  4189                           ;common.c: 665: if( uiOneHourTimer )
  4190  0045  0846               	movf	_uiOneHourTimer+1,w
  4191  0046  0445               	iorwf	_uiOneHourTimer,w
  4192  0047  1903               	skipnz
  4193  0048  284F               	goto	i1l3755
  4194                           
  4195                           ;common.c: 666: uiOneHourTimer--;
  4196  0049  3001               	movlw	1
  4197  004A  02C5               	subwf	_uiOneHourTimer,f
  4198  004B  3000               	movlw	0
  4199  004C  1C03               	skipc
  4200  004D  03C6               	decf	_uiOneHourTimer+1,f
  4201  004E  02C6               	subwf	_uiOneHourTimer+1,f
  4202  004F                     i1l3755:	
  4203                           
  4204                           ;common.c: 667: }
  4205                           ;common.c: 668: }
  4206                           ;common.c: 670: if(ADIF)
  4207  004F  1D0D               	btfss	13,2
  4208  0050  286B               	goto	i1l1680
  4209  0051  3001               	movlw	1
  4210                           
  4211                           ;common.c: 671: {
  4212                           ;common.c: 673: ADIF=0;
  4213  0052  110D               	bcf	13,2
  4214                           
  4215                           ;common.c: 674: setAD_ConvertFlag(1);
  4216  0053  2083  118A         	fcall	i1_setAD_ConvertFlag
  4217                           
  4218                           ;common.c: 676: if(sampleChannelSelect == 2)
  4219  0055  0863               	movf	_sampleChannelSelect,w
  4220  0056  3A02               	xorlw	2
  4221  0057  1D03               	skipz
  4222  0058  2862               	goto	i1l3765
  4223                           
  4224                           ;common.c: 677: {
  4225                           ;common.c: 680: vPutSampleDataIntoTable(adc_get(),2);
  4226  0059  2078  118A         	fcall	_adc_get
  4227  005B  0871               	movf	?_adc_get+1,w
  4228  005C  00F7               	movwf	?_vPutSampleDataIntoTable+1
  4229  005D  0870               	movf	?_adc_get,w
  4230  005E  00F6               	movwf	?_vPutSampleDataIntoTable
  4231  005F  3002               	movlw	2
  4232  0060  00F8               	movwf	?_vPutSampleDataIntoTable+2
  4233  0061  286A               	goto	L15
  4234  0062                     i1l3765:	
  4235                           ;common.c: 684: }
  4236                           
  4237                           
  4238                           ;common.c: 685: else
  4239                           ;common.c: 686: {
  4240                           ;common.c: 690: vPutSampleDataIntoTable(adc_get(),1);
  4241  0062  2078  118A         	fcall	_adc_get
  4242  0064  0871               	movf	?_adc_get+1,w
  4243  0065  00F7               	movwf	?_vPutSampleDataIntoTable+1
  4244  0066  0870               	movf	?_adc_get,w
  4245  0067  00F6               	movwf	?_vPutSampleDataIntoTable
  4246  0068  01F8               	clrf	?_vPutSampleDataIntoTable+2
  4247  0069  0AF8               	incf	?_vPutSampleDataIntoTable+2,f
  4248  006A                     L15:	
  4249  006A  2086               	fcall	_vPutSampleDataIntoTable
  4250  006B                     i1l1680:	
  4251  006B  1283               	bcf	3,5	;RP0=0, select bank0
  4252  006C  1303               	bcf	3,6	;RP1=0, select bank0
  4253  006D  0842               	movf	??_ISR+3,w
  4254  006E  00FF               	movwf	127
  4255  006F  0841               	movf	??_ISR+2,w
  4256  0070  008A               	movwf	10
  4257  0071  0840               	movf	??_ISR+1,w
  4258  0072  0084               	movwf	4
  4259  0073  0E3F               	swapf	??_ISR^0,w
  4260  0074  0083               	movwf	3
  4261  0075  0EFE               	swapf	126,f
  4262  0076  0E7E               	swapf	126,w
  4263  0077  0009               	retfie
  4264  0078                     __end_of_ISR:	
  4265  0078                     __ptext1407:	
  4266 ;; =============== function i1_setAD_ConvertFlag ends ============
  4267                           
  4268                           
  4269 ;; *************** function _adc_get *****************
  4270 ;; Defined at:
  4271 ;;		line 106 in file "D:\develop\AK7030-good\AK7030-OTP\periph.c"
  4272 ;; Parameters:    Size  Location     Type
  4273 ;;		None
  4274 ;; Auto vars:     Size  Location     Type
  4275 ;;  val             2    2[COMMON] unsigned int 
  4276 ;; Return value:  Size  Location     Type
  4277 ;;                  2    0[COMMON] unsigned int 
  4278 ;; Registers used:
  4279 ;;		wreg
  4280 ;; Tracked objects:
  4281 ;;		On entry : 60/0
  4282 ;;		On exit  : 60/20
  4283 ;;		Unchanged: FFF9F/0
  4284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4285 ;;      Params:         2       0       0       0       0
  4286 ;;      Locals:         2       0       0       0       0
  4287 ;;      Temps:          0       0       0       0       0
  4288 ;;      Totals:         4       0       0       0       0
  4289 ;;Total ram usage:        4 bytes
  4290 ;; Hardware stack levels used:    1
  4291 ;; This function calls:
  4292 ;;		Nothing
  4293 ;; This function is called by:
  4294 ;;		_ISR
  4295 ;; This function uses a non-reentrant model
  4296 ;;
  4297  0078                     _adc_get:	
  4298                           
  4299                           ;periph.c: 107: unsigned int val;
  4300                           ;periph.c: 108: val = (ADRESH<<8) | ADRESL;
  4301                           
  4302                           ; Regs used in _adc_get: [wreg]
  4303  0078  081E               	movf	30,w	;volatile
  4304  0079  00F3               	movwf	adc_get@val+1
  4305  007A  01F2               	clrf	adc_get@val
  4306  007B  1683               	bsf	3,5	;RP0=1, select bank1
  4307  007C  081E               	movf	30,w	;volatile
  4308  007D  04F2               	iorwf	adc_get@val,f
  4309                           
  4310                           ;periph.c: 109: return val;
  4311  007E  0873               	movf	adc_get@val+1,w
  4312  007F  00F1               	movwf	?_adc_get+1
  4313  0080  0872               	movf	adc_get@val,w
  4314  0081  00F0               	movwf	?_adc_get
  4315  0082  0008               	return
  4316  0083                     __end_of_adc_get:	
  4317  0083                     __ptext1406:	
  4318 ;; =============== function _vPutSampleDataIntoTable ends ============
  4319                           
  4320                           
  4321 ;; *************** function i1_setAD_ConvertFlag *****************
  4322 ;; Defined at:
  4323 ;;		line 374 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  4324 ;; Parameters:    Size  Location     Type
  4325 ;;  setAD_Conver    1    wreg     unsigned char 
  4326 ;; Auto vars:     Size  Location     Type
  4327 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  4328 ;; Return value:  Size  Location     Type
  4329 ;;		None               void
  4330 ;; Registers used:
  4331 ;;		wreg
  4332 ;; Tracked objects:
  4333 ;;		On entry : 60/0
  4334 ;;		On exit  : 60/0
  4335 ;;		Unchanged: FFF9F/0
  4336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4337 ;;      Params:         0       0       0       0       0
  4338 ;;      Locals:         1       0       0       0       0
  4339 ;;      Temps:          0       0       0       0       0
  4340 ;;      Totals:         1       0       0       0       0
  4341 ;;Total ram usage:        1 bytes
  4342 ;; Hardware stack levels used:    1
  4343 ;; This function calls:
  4344 ;;		Nothing
  4345 ;; This function is called by:
  4346 ;;		_ISR
  4347 ;; This function uses a non-reentrant model
  4348 ;;
  4349  0083                     i1_setAD_ConvertFlag:	
  4350                           
  4351                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  4352                           ;i1setAD_ConvertFlag@flag stored from wreg
  4353  0083  00F0               	movwf	i1setAD_ConvertFlag@flag
  4354                           
  4355                           ;common.c: 375: adc_convert_flag = flag;
  4356  0084  00D8               	movwf	_adc_convert_flag
  4357  0085  0008               	return
  4358  0086                     __end_ofi1_setAD_ConvertFlag:	
  4359  0086                     __ptext1405:	
  4360 ;; =============== function _ISR ends ============
  4361                           
  4362                           
  4363 ;; *************** function _vPutSampleDataIntoTable *****************
  4364 ;; Defined at:
  4365 ;;		line 165 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  4366 ;; Parameters:    Size  Location     Type
  4367 ;;  uiSampleData    2    6[COMMON] unsigned int 
  4368 ;;  channel         1    8[COMMON] unsigned char 
  4369 ;; Auto vars:     Size  Location     Type
  4370 ;;  uiDeviationV    2    9[COMMON] unsigned int 
  4371 ;;  uiAbstractVa    2    0        unsigned int 
  4372 ;;  i               2   11[COMMON] int 
  4373 ;; Return value:  Size  Location     Type
  4374 ;;		None               void
  4375 ;; Registers used:
  4376 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4377 ;; Tracked objects:
  4378 ;;		On entry : 60/20
  4379 ;;		On exit  : 0/0
  4380 ;;		Unchanged: FFE00/0
  4381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4382 ;;      Params:         3       0       0       0       0
  4383 ;;      Locals:         4       0       0       0       0
  4384 ;;      Temps:          0      16       0       0       0
  4385 ;;      Totals:         7      16       0       0       0
  4386 ;;Total ram usage:       23 bytes
  4387 ;; Hardware stack levels used:    1
  4388 ;; Hardware stack levels required when called:    1
  4389 ;; This function calls:
  4390 ;;		_Filter
  4391 ;;		_getWaitResetFlag
  4392 ;;		_setPWM_Width
  4393 ;; This function is called by:
  4394 ;;		_ISR
  4395 ;; This function uses a non-reentrant model
  4396 ;;
  4397  0086                     _vPutSampleDataIntoTable:	
  4398                           
  4399                           ;common.c: 167: static unsigned char ucCh12Length = 0;
  4400                           ;common.c: 169: static unsigned char ucCh13Length = 0;
  4401                           ;common.c: 171: static unsigned char ucChannelFourteenthLength = 0;
  4402                           ;common.c: 172: static unsigned int uiCalWidthArrayNew = 0;
  4403                           ;common.c: 173: static unsigned int uiCalWidthArrayOld = 0;
  4404                           ;common.c: 175: static unsigned int uiCalWidthArray1 = 0;
  4405                           ;common.c: 176: static unsigned int uiCalWidthArray2 = 0;
  4406                           ;common.c: 177: static unsigned int uiCalWidthArray3 = 0;
  4407                           ;common.c: 178: static unsigned int uiCalWidthArray4 = 0;
  4408                           
  4409                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  4410  0086  0878               	movf	vPutSampleDataIntoTable@channel,w
  4411  0087  3A02               	xorlw	2
  4412  0088  1D03               	skipz
  4413  0089  2942               	goto	i1l3677
  4414                           
  4415                           ;common.c: 183: {
  4416                           ;common.c: 184: if(ucCh12Length < 3)
  4417  008A  3003               	movlw	3
  4418  008B  027D               	subwf	vPutSampleDataIntoTable@ucCh12Length,w
  4419  008C  1803               	skipnc
  4420  008D  293C               	goto	i1l3673
  4421                           
  4422                           ;common.c: 185: {
  4423                           ;common.c: 186: uiSampleCh12[ucCh12Length] = uiSampleData;
  4424  008E  1003               	clrc
  4425  008F  0D7D               	rlf	vPutSampleDataIntoTable@ucCh12Length,w
  4426  0090  3EAB               	addlw	_uiSampleCh12& (0+255)
  4427  0091  221A  118A         	fcall	PL2	;call to abstracted procedure
  4428                           
  4429                           ;common.c: 188: ucCh12Length++;
  4430  0093  0AFD               	incf	vPutSampleDataIntoTable@ucCh12Length,f
  4431                           
  4432                           ;common.c: 190: if( 3 == ucCh12Length )
  4433  0094  087D               	movf	vPutSampleDataIntoTable@ucCh12Length,w
  4434  0095  3A03               	xorlw	3
  4435  0096  1D03               	skipz
  4436  0097  0008               	return
  4437  0098  30AB               	movlw	_uiSampleCh12& (0+255)
  4438                           
  4439                           ;common.c: 191: {
  4440                           ;common.c: 192: ucCh12Length = 0;
  4441  0099  01FD               	clrf	vPutSampleDataIntoTable@ucCh12Length
  4442                           
  4443                           ;common.c: 196: static unsigned char bInitArrayFlag = 0;
  4444                           ;common.c: 198: static unsigned int uiCalWidthArray[1],uiCalWidthCnt = 0;
  4445                           ;common.c: 200: static unsigned char uiInitWidth = 75;
  4446                           ;common.c: 203: uiCalWidthArray1 = Filter(uiSampleCh12);
  4447  009A  2191  118A         	fcall	_Filter
  4448  009C  0871               	movf	?_Filter+1,w
  4449  009D  00CE               	movwf	vPutSampleDataIntoTable@uiCalWidthArray1+1
  4450  009E  0870               	movf	?_Filter,w
  4451  009F  00CD               	movwf	vPutSampleDataIntoTable@uiCalWidthArray1
  4452                           
  4453                           ;common.c: 205: if( 0 == ucInitFlag)
  4454  00A0  08E2               	movf	vPutSampleDataIntoTable@ucInitFlag,f
  4455  00A1  1D03               	skipz
  4456  00A2  28B1               	goto	i1l3649
  4457                           
  4458                           ;common.c: 206: {
  4459                           ;common.c: 207: ucInitFlag = 1;
  4460  00A3  01E2               	clrf	vPutSampleDataIntoTable@ucInitFlag
  4461  00A4  0AE2               	incf	vPutSampleDataIntoTable@ucInitFlag,f
  4462                           
  4463                           ;common.c: 209: uiCalWidthArray2 = uiCalWidthArray1;
  4464  00A5  084E               	movf	vPutSampleDataIntoTable@uiCalWidthArray1+1,w
  4465  00A6  00D0               	movwf	vPutSampleDataIntoTable@uiCalWidthArray2+1
  4466  00A7  084D               	movf	vPutSampleDataIntoTable@uiCalWidthArray1,w
  4467  00A8  00CF               	movwf	vPutSampleDataIntoTable@uiCalWidthArray2
  4468                           
  4469                           ;common.c: 210: uiCalWidthArray3 = uiCalWidthArray1;
  4470  00A9  084E               	movf	vPutSampleDataIntoTable@uiCalWidthArray1+1,w
  4471  00AA  00D2               	movwf	vPutSampleDataIntoTable@uiCalWidthArray3+1
  4472  00AB  084D               	movf	vPutSampleDataIntoTable@uiCalWidthArray1,w
  4473  00AC  00D1               	movwf	vPutSampleDataIntoTable@uiCalWidthArray3
  4474                           
  4475                           ;common.c: 211: uiCalWidthArray4 = uiCalWidthArray1;
  4476  00AD  084E               	movf	vPutSampleDataIntoTable@uiCalWidthArray1+1,w
  4477  00AE  00D4               	movwf	vPutSampleDataIntoTable@uiCalWidthArray4+1
  4478  00AF  084D               	movf	vPutSampleDataIntoTable@uiCalWidthArray1,w
  4479  00B0  00D3               	movwf	vPutSampleDataIntoTable@uiCalWidthArray4
  4480  00B1                     i1l3649:	
  4481                           
  4482                           ;common.c: 228: uiDeviationValue = (uiCalWidthArray1 >> 2) + (uiCalWidthArray2 >> 2)
  4483                           ;common.c: 229: + (uiCalWidthArray3 >> 2) + (uiCalWidthArray4 >> 2) + uiCalWidthArray4 -
      +                           uiCalWidthArray3;
  4484  00B1  0854               	movf	vPutSampleDataIntoTable@uiCalWidthArray4+1,w
  4485  00B2  00B0               	movwf	??_vPutSampleDataIntoTable+1
  4486  00B3  0853               	movf	vPutSampleDataIntoTable@uiCalWidthArray4,w
  4487  00B4  00AF               	movwf	??_vPutSampleDataIntoTable
  4488  00B5  1003               	clrc
  4489  00B6  0CB0               	rrf	??_vPutSampleDataIntoTable+1,f
  4490  00B7  0CAF               	rrf	??_vPutSampleDataIntoTable,f
  4491  00B8  1003               	clrc
  4492  00B9  0CB0               	rrf	??_vPutSampleDataIntoTable+1,f
  4493  00BA  0CAF               	rrf	??_vPutSampleDataIntoTable,f
  4494  00BB  0852               	movf	vPutSampleDataIntoTable@uiCalWidthArray3+1,w
  4495  00BC  00B2               	movwf	??_vPutSampleDataIntoTable+3
  4496  00BD  0851               	movf	vPutSampleDataIntoTable@uiCalWidthArray3,w
  4497  00BE  00B1               	movwf	??_vPutSampleDataIntoTable+2
  4498  00BF  1003               	clrc
  4499  00C0  0CB2               	rrf	??_vPutSampleDataIntoTable+3,f
  4500  00C1  0CB1               	rrf	??_vPutSampleDataIntoTable+2,f
  4501  00C2  1003               	clrc
  4502  00C3  0CB2               	rrf	??_vPutSampleDataIntoTable+3,f
  4503  00C4  0CB1               	rrf	??_vPutSampleDataIntoTable+2,f
  4504  00C5  0850               	movf	vPutSampleDataIntoTable@uiCalWidthArray2+1,w
  4505  00C6  00B4               	movwf	??_vPutSampleDataIntoTable+5
  4506  00C7  084F               	movf	vPutSampleDataIntoTable@uiCalWidthArray2,w
  4507  00C8  00B3               	movwf	??_vPutSampleDataIntoTable+4
  4508  00C9  1003               	clrc
  4509  00CA  0CB4               	rrf	??_vPutSampleDataIntoTable+5,f
  4510  00CB  0CB3               	rrf	??_vPutSampleDataIntoTable+4,f
  4511  00CC  1003               	clrc
  4512  00CD  0CB4               	rrf	??_vPutSampleDataIntoTable+5,f
  4513  00CE  0CB3               	rrf	??_vPutSampleDataIntoTable+4,f
  4514  00CF  084E               	movf	vPutSampleDataIntoTable@uiCalWidthArray1+1,w
  4515  00D0  00B6               	movwf	??_vPutSampleDataIntoTable+7
  4516  00D1  084D               	movf	vPutSampleDataIntoTable@uiCalWidthArray1,w
  4517  00D2  00B5               	movwf	??_vPutSampleDataIntoTable+6
  4518  00D3  1003               	clrc
  4519  00D4  0CB6               	rrf	??_vPutSampleDataIntoTable+7,f
  4520  00D5  0CB5               	rrf	??_vPutSampleDataIntoTable+6,f
  4521  00D6  1003               	clrc
  4522  00D7  0CB6               	rrf	??_vPutSampleDataIntoTable+7,f
  4523  00D8  0CB5               	rrf	??_vPutSampleDataIntoTable+6,f
  4524  00D9  0833               	movf	??_vPutSampleDataIntoTable+4,w
  4525  00DA  0735               	addwf	??_vPutSampleDataIntoTable+6,w
  4526  00DB  00B7               	movwf	??_vPutSampleDataIntoTable+8
  4527  00DC  0834               	movf	??_vPutSampleDataIntoTable+5,w
  4528  00DD  1803               	skipnc
  4529  00DE  0A34               	incf	??_vPutSampleDataIntoTable+5,w
  4530  00DF  0736               	addwf	??_vPutSampleDataIntoTable+7,w
  4531  00E0  00B8               	movwf	??_vPutSampleDataIntoTable+9
  4532  00E1  0831               	movf	??_vPutSampleDataIntoTable+2,w
  4533  00E2  0737               	addwf	??_vPutSampleDataIntoTable+8,w
  4534  00E3  00B9               	movwf	??_vPutSampleDataIntoTable+10
  4535  00E4  0832               	movf	??_vPutSampleDataIntoTable+3,w
  4536  00E5  1803               	skipnc
  4537  00E6  0A32               	incf	??_vPutSampleDataIntoTable+3,w
  4538  00E7  0738               	addwf	??_vPutSampleDataIntoTable+9,w
  4539  00E8  00BA               	movwf	??_vPutSampleDataIntoTable+11
  4540  00E9  082F               	movf	??_vPutSampleDataIntoTable,w
  4541  00EA  0739               	addwf	??_vPutSampleDataIntoTable+10,w
  4542  00EB  00BB               	movwf	??_vPutSampleDataIntoTable+12
  4543  00EC  0830               	movf	??_vPutSampleDataIntoTable+1,w
  4544  00ED  1803               	skipnc
  4545  00EE  0A30               	incf	??_vPutSampleDataIntoTable+1,w
  4546  00EF  073A               	addwf	??_vPutSampleDataIntoTable+11,w
  4547  00F0  00BC               	movwf	??_vPutSampleDataIntoTable+13
  4548  00F1  0851               	movf	vPutSampleDataIntoTable@uiCalWidthArray3,w
  4549  00F2  023B               	subwf	??_vPutSampleDataIntoTable+12,w
  4550  00F3  00BD               	movwf	??_vPutSampleDataIntoTable+14
  4551  00F4  0852               	movf	vPutSampleDataIntoTable@uiCalWidthArray3+1,w
  4552  00F5  1C03               	skipc
  4553  00F6  0A52               	incf	vPutSampleDataIntoTable@uiCalWidthArray3+1,w
  4554  00F7  023C               	subwf	??_vPutSampleDataIntoTable+13,w
  4555  00F8  00BE               	movwf	??_vPutSampleDataIntoTable+15
  4556  00F9  0853               	movf	vPutSampleDataIntoTable@uiCalWidthArray4,w
  4557  00FA  073D               	addwf	??_vPutSampleDataIntoTable+14,w
  4558  00FB  00F9               	movwf	vPutSampleDataIntoTable@uiDeviationValue
  4559  00FC  0854               	movf	vPutSampleDataIntoTable@uiCalWidthArray4+1,w
  4560  00FD  1803               	skipnc
  4561  00FE  0A54               	incf	vPutSampleDataIntoTable@uiCalWidthArray4+1,w
  4562  00FF  073E               	addwf	??_vPutSampleDataIntoTable+15,w
  4563  0100  00FA               	movwf	vPutSampleDataIntoTable@uiDeviationValue+1
  4564                           
  4565                           ;common.c: 233: if(uiCalWidthCnt>400)
  4566  0101  3001               	movlw	1
  4567  0102  0256               	subwf	vPutSampleDataIntoTable@uiCalWidthCnt+1,w
  4568  0103  3091               	movlw	145
  4569  0104  1903               	skipnz
  4570  0105  0255               	subwf	vPutSampleDataIntoTable@uiCalWidthCnt,w
  4571  0106  1C03               	skipc
  4572  0107  290C               	goto	i1l1545
  4573                           
  4574                           ;common.c: 234: uiDeviationValue =400;
  4575  0108  3090               	movlw	144
  4576  0109  00F9               	movwf	vPutSampleDataIntoTable@uiDeviationValue
  4577  010A  3001               	movlw	1
  4578  010B  00FA               	movwf	vPutSampleDataIntoTable@uiDeviationValue+1
  4579  010C                     i1l1545:	
  4580                           
  4581                           ;common.c: 236: uiCalWidthArray4 = uiCalWidthArray3;
  4582  010C  0852               	movf	vPutSampleDataIntoTable@uiCalWidthArray3+1,w
  4583  010D  00D4               	movwf	vPutSampleDataIntoTable@uiCalWidthArray4+1
  4584  010E  0851               	movf	vPutSampleDataIntoTable@uiCalWidthArray3,w
  4585  010F  00D3               	movwf	vPutSampleDataIntoTable@uiCalWidthArray4
  4586                           
  4587                           ;common.c: 237: uiCalWidthArray3 = uiCalWidthArray2;
  4588  0110  0850               	movf	vPutSampleDataIntoTable@uiCalWidthArray2+1,w
  4589  0111  00D2               	movwf	vPutSampleDataIntoTable@uiCalWidthArray3+1
  4590  0112  084F               	movf	vPutSampleDataIntoTable@uiCalWidthArray2,w
  4591  0113  00D1               	movwf	vPutSampleDataIntoTable@uiCalWidthArray3
  4592                           
  4593                           ;common.c: 241: uiCalWidthArrayOld=uiCalWidthArrayNew;
  4594  0114  084E               	movf	vPutSampleDataIntoTable@uiCalWidthArray1+1,w
  4595  0115  00D0               	movwf	vPutSampleDataIntoTable@uiCalWidthArray2+1
  4596  0116  084D               	movf	vPutSampleDataIntoTable@uiCalWidthArray1,w
  4597  0117  00CF               	movwf	vPutSampleDataIntoTable@uiCalWidthArray2
  4598                           
  4599                           ;common.c: 246: if(uiDeviationValue > (295))
  4600  0118  3001               	movlw	1
  4601  0119  027A               	subwf	vPutSampleDataIntoTable@uiDeviationValue+1,w
  4602  011A  3028               	movlw	40
  4603  011B  1903               	skipnz
  4604  011C  0279               	subwf	vPutSampleDataIntoTable@uiDeviationValue,w
  4605  011D  1C03               	skipc
  4606  011E  2921               	goto	i1l3657
  4607                           
  4608                           ;common.c: 247: {
  4609                           ;common.c: 250: uiInitWidth++;
  4610  011F  0AE4               	incf	vPutSampleDataIntoTable@uiInitWidth,f
  4611                           
  4612                           ;common.c: 252: }
  4613  0120  2928               	goto	i1l3661
  4614  0121                     i1l3657:	
  4615                           
  4616                           ;common.c: 253: else if(uiDeviationValue < (295))
  4617  0121  3001               	movlw	1
  4618  0122  027A               	subwf	vPutSampleDataIntoTable@uiDeviationValue+1,w
  4619  0123  3027               	movlw	39
  4620  0124  1903               	skipnz
  4621  0125  0279               	subwf	vPutSampleDataIntoTable@uiDeviationValue,w
  4622  0126  1C03               	btfss	3,0
  4623                           
  4624                           ;common.c: 254: {
  4625                           ;common.c: 257: uiInitWidth--;
  4626  0127  03E4               	decf	vPutSampleDataIntoTable@uiInitWidth,f
  4627  0128                     i1l3661:	
  4628                           ;common.c: 259: }
  4629                           
  4630                           
  4631                           ;common.c: 263: if(uiInitWidth > 249)
  4632  0128  30FA               	movlw	250
  4633  0129  0264               	subwf	vPutSampleDataIntoTable@uiInitWidth,w
  4634  012A  1C03               	skipc
  4635  012B  292E               	goto	i1l1550
  4636                           
  4637                           ;common.c: 264: uiInitWidth = 249;
  4638  012C  30F9               	movlw	249
  4639  012D  00E4               	movwf	vPutSampleDataIntoTable@uiInitWidth
  4640  012E                     i1l1550:	
  4641                           
  4642                           ;common.c: 266: if(uiInitWidth < 75)
  4643  012E  304B               	movlw	75
  4644  012F  0264               	subwf	vPutSampleDataIntoTable@uiInitWidth,w
  4645  0130  1803               	skipnc
  4646  0131  2934               	goto	i1l3667
  4647                           
  4648                           ;common.c: 267: uiInitWidth = 75;
  4649  0132  304B               	movlw	75
  4650  0133  00E4               	movwf	vPutSampleDataIntoTable@uiInitWidth
  4651  0134                     i1l3667:	
  4652                           
  4653                           ;common.c: 61: return bWaitResetFlag;
  4654                           
  4655                           ; Regs used in _getWaitResetFlag: [wreg]
  4656                           
  4657                           ;common.c: 271: if( 1 == getWaitResetFlag())
  4658  0134  085D               	movf	_bWaitResetFlag,w
  4659  0135  3A01               	xorlw	1
  4660  0136  1D03               	skipz
  4661  0137  293A               	goto	i1l3671
  4662                           
  4663                           ;common.c: 272: {
  4664                           ;common.c: 274: uiInitWidth = 150;
  4665  0138  3096               	movlw	150
  4666  0139  00E4               	movwf	vPutSampleDataIntoTable@uiInitWidth
  4667  013A                     i1l3671:	
  4668                           
  4669                           ;common.c: 275: }
  4670                           ;common.c: 276: setPWM_Width(uiInitWidth);
  4671  013A  0864               	movf	vPutSampleDataIntoTable@uiInitWidth,w
  4672  013B  2A17               	ljmp	_setPWM_Width
  4673  013C                     i1l3673:	
  4674                           
  4675                           ;common.c: 281: else
  4676                           ;common.c: 282: {
  4677                           ;common.c: 283: ucCh12Length = 0;
  4678  013C  01FD               	clrf	vPutSampleDataIntoTable@ucCh12Length
  4679                           
  4680                           ;common.c: 285: uiSampleCh12[ucCh12Length] = uiSampleData;
  4681  013D  1003               	clrc
  4682  013E  0D7D               	rlf	vPutSampleDataIntoTable@ucCh12Length,w
  4683  013F  3EAB               	addlw	_uiSampleCh12& (0+255)
  4684  0140  221A               	fcall	PL2	;call to abstracted procedure
  4685  0141  0008               	return
  4686  0142                     i1l3677:	
  4687                           
  4688                           ;common.c: 288: else if(channel == 1)
  4689  0142  0B78               	decfsz	vPutSampleDataIntoTable@channel,w
  4690  0143  2955               	goto	i1l3689
  4691                           
  4692                           ;common.c: 289: {
  4693                           ;common.c: 290: if(ucCh13Length < 3)
  4694  0144  3003               	movlw	3
  4695  0145  1283               	bcf	3,5	;RP0=0, select bank0
  4696  0146  0260               	subwf	vPutSampleDataIntoTable@ucCh13Length,w
  4697  0147  1803               	skipnc
  4698  0148  294F               	goto	i1l3685
  4699                           
  4700                           ;common.c: 291: {
  4701                           ;common.c: 292: uiSampleCh13[ucCh13Length] = uiSampleData;
  4702  0149  1003               	clrc
  4703  014A  0D60               	rlf	vPutSampleDataIntoTable@ucCh13Length,w
  4704  014B  3EB1               	addlw	_uiSampleCh13& (0+255)
  4705  014C  221A               	fcall	PL2	;call to abstracted procedure
  4706                           
  4707                           ;common.c: 294: ucCh13Length++;
  4708  014D  0AE0               	incf	vPutSampleDataIntoTable@ucCh13Length,f
  4709                           
  4710                           ;common.c: 295: }
  4711  014E  0008               	return
  4712  014F                     i1l3685:	
  4713                           
  4714                           ;common.c: 296: else
  4715                           ;common.c: 297: {
  4716                           ;common.c: 298: ucCh13Length = 0;
  4717  014F  01E0               	clrf	vPutSampleDataIntoTable@ucCh13Length
  4718                           
  4719                           ;common.c: 300: uiSampleCh13[ucCh13Length] = uiSampleData;
  4720  0150  1003               	clrc
  4721  0151  0D60               	rlf	vPutSampleDataIntoTable@ucCh13Length,w
  4722  0152  3EB1               	addlw	_uiSampleCh13& (0+255)
  4723  0153  221A               	fcall	PL2	;call to abstracted procedure
  4724  0154  0008               	return
  4725  0155                     i1l3689:	
  4726                           
  4727                           ;common.c: 303: else if(channel == 14)
  4728  0155  0878               	movf	vPutSampleDataIntoTable@channel,w
  4729  0156  3A0E               	xorlw	14
  4730  0157  1D03               	skipz
  4731  0158  296A               	goto	i1l3701
  4732                           
  4733                           ;common.c: 304: {
  4734                           ;common.c: 305: if(ucChannelFourteenthLength < 3)
  4735  0159  3003               	movlw	3
  4736  015A  1283               	bcf	3,5	;RP0=0, select bank0
  4737  015B  0261               	subwf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4738  015C  1803               	skipnc
  4739  015D  2964               	goto	i1l3697
  4740                           
  4741                           ;common.c: 306: {
  4742                           ;common.c: 307: uiSampleChannelFourteenth[ucChannelFourteenthLength] = uiSampleData;
  4743  015E  1003               	clrc
  4744  015F  0D61               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4745  0160  3EB7               	addlw	_uiSampleChannelFourteenth& (0+255)
  4746  0161  221A               	fcall	PL2	;call to abstracted procedure
  4747                           
  4748                           ;common.c: 309: ucChannelFourteenthLength++;
  4749  0162  0AE1               	incf	vPutSampleDataIntoTable@ucChannelFourteenthLength,f
  4750                           
  4751                           ;common.c: 310: }
  4752  0163  0008               	return
  4753  0164                     i1l3697:	
  4754                           
  4755                           ;common.c: 311: else
  4756                           ;common.c: 312: {
  4757                           ;common.c: 313: ucChannelFourteenthLength = 0;
  4758  0164  01E1               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4759                           
  4760                           ;common.c: 315: uiSampleCh13[ucChannelFourteenthLength] = uiSampleData;
  4761  0165  1003               	clrc
  4762  0166  0D61               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4763  0167  3EB1               	addlw	_uiSampleCh13& (0+255)
  4764  0168  221A               	fcall	PL2	;call to abstracted procedure
  4765  0169  0008               	return
  4766  016A                     i1l3701:	
  4767                           
  4768                           ;common.c: 318: else
  4769                           ;common.c: 319: {
  4770                           ;common.c: 320: ucCh12Length = 0;
  4771  016A  01FD               	clrf	vPutSampleDataIntoTable@ucCh12Length
  4772                           
  4773                           ;common.c: 322: ucCh13Length = 0;
  4774  016B  1283               	bcf	3,5	;RP0=0, select bank0
  4775  016C  01E0               	clrf	vPutSampleDataIntoTable@ucCh13Length
  4776                           
  4777                           ;common.c: 324: ucChannelFourteenthLength = 0;
  4778  016D  01E1               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4779                           
  4780                           ;common.c: 326: for(int i = 0;i < 3; i++)
  4781  016E  01FB               	clrf	vPutSampleDataIntoTable@i
  4782  016F  01FC               	clrf	vPutSampleDataIntoTable@i+1
  4783  0170                     i1l3707:	
  4784                           
  4785                           ;common.c: 327: {
  4786                           ;common.c: 328: uiSampleCh12[i] = 0;
  4787  0170  1003               	clrc
  4788  0171  0D7B               	rlf	vPutSampleDataIntoTable@i,w
  4789  0172  3EAB               	addlw	_uiSampleCh12& (0+255)
  4790  0173  0084               	movwf	4
  4791  0174  1383               	bcf	3,7	;select IRP bank1
  4792                           
  4793                           ;common.c: 330: uiSampleCh13[i] = 0;
  4794  0175  2238  118A         	fcall	PL10	;call to abstracted procedure
  4795  0177  3EB1               	addlw	_uiSampleCh13& (0+255)
  4796  0178  0084               	movwf	4
  4797                           
  4798                           ;common.c: 332: uiSampleChannelFourteenth[i] = 0;
  4799  0179  2238  118A         	fcall	PL10	;call to abstracted procedure
  4800  017B  3EB7               	addlw	_uiSampleChannelFourteenth& (0+255)
  4801  017C  0084               	movwf	4
  4802  017D  0180               	clrf	0
  4803  017E  0A84               	incf	4,f
  4804  017F  0180               	clrf	0
  4805  0180  0AFB               	incf	vPutSampleDataIntoTable@i,f
  4806  0181  1903               	skipnz
  4807  0182  0AFC               	incf	vPutSampleDataIntoTable@i+1,f
  4808  0183  087C               	movf	vPutSampleDataIntoTable@i+1,w
  4809  0184  3A80               	xorlw	128
  4810  0185  00FF               	movwf	127
  4811  0186  3080               	movlw	128
  4812  0187  027F               	subwf	127,w
  4813  0188  1D03               	skipz
  4814  0189  298C               	goto	u132_25
  4815  018A  3003               	movlw	3
  4816  018B  027B               	subwf	vPutSampleDataIntoTable@i,w
  4817  018C                     u132_25:	
  4818  018C  1803               	btfsc	3,0
  4819  018D  0008               	return
  4820  018E  2970               	goto	i1l3707
  4821  018F                     __end_of_vPutSampleDataIntoTable:	
  4822  018F                     __ptext1410:	
  4823 ;; =============== function _setPWM_Width ends ============
  4824                           
  4825                           
  4826 ;; *************** function _getWaitResetFlag *****************
  4827 ;; Defined at:
  4828 ;;		line 60 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  4829 ;; Parameters:    Size  Location     Type
  4830 ;;		None
  4831 ;; Auto vars:     Size  Location     Type
  4832 ;;		None
  4833 ;; Return value:  Size  Location     Type
  4834 ;;                  1    wreg      unsigned char 
  4835 ;; Registers used:
  4836 ;;		wreg
  4837 ;; Tracked objects:
  4838 ;;		On entry : 160/0
  4839 ;;		On exit  : 160/0
  4840 ;;		Unchanged: FFE9F/0
  4841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4842 ;;      Params:         0       0       0       0       0
  4843 ;;      Locals:         0       0       0       0       0
  4844 ;;      Temps:          0       0       0       0       0
  4845 ;;      Totals:         0       0       0       0       0
  4846 ;;Total ram usage:        0 bytes
  4847 ;; Hardware stack levels used:    1
  4848 ;; This function calls:
  4849 ;;		Nothing
  4850 ;; This function is called by:
  4851 ;;		_vPutSampleDataIntoTable
  4852 ;; This function uses a non-reentrant model
  4853 ;;
  4854  018F                     _getWaitResetFlag:	
  4855                           
  4856                           ;common.c: 61: return bWaitResetFlag;
  4857                           
  4858                           ; Regs used in _getWaitResetFlag: [wreg]
  4859  018F  085D               	movf	_bWaitResetFlag,w
  4860  0190  0008               	return
  4861  0191                     __end_of_getWaitResetFlag:	
  4862  0191                     __ptext1408:	
  4863 ;; =============== function _adc_get ends ============
  4864                           
  4865                           
  4866 ;; *************** function _Filter *****************
  4867 ;; Defined at:
  4868 ;;		line 117 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;  tmpValue        1    wreg     PTR unsigned int 
  4871 ;;		 -> uiSampleChannelFourteenth(6), uiSampleCh12(6), 
  4872 ;; Auto vars:     Size  Location     Type
  4873 ;;  tmpValue        1    4[BANK0 ] PTR unsigned int 
  4874 ;;		 -> uiSampleChannelFourteenth(6), uiSampleCh12(6), 
  4875 ;;  cir             2   11[BANK0 ] int 
  4876 ;;  filter_buf      6    5[BANK0 ] unsigned int [3]
  4877 ;;  filter_sum      2    2[BANK0 ] unsigned int 
  4878 ;;  filter_temp     2    0[BANK0 ] unsigned int 
  4879 ;;  i               1   14[BANK0 ] unsigned char 
  4880 ;;  j               1   13[BANK0 ] unsigned char 
  4881 ;; Return value:  Size  Location     Type
  4882 ;;                  2    0[COMMON] unsigned int 
  4883 ;; Registers used:
  4884 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4885 ;; Tracked objects:
  4886 ;;		On entry : 160/20
  4887 ;;		On exit  : 160/0
  4888 ;;		Unchanged: FFE00/0
  4889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4890 ;;      Params:         2       0       0       0       0
  4891 ;;      Locals:         0      15       0       0       0
  4892 ;;      Temps:          4       0       0       0       0
  4893 ;;      Totals:         6      15       0       0       0
  4894 ;;Total ram usage:       21 bytes
  4895 ;; Hardware stack levels used:    1
  4896 ;; This function calls:
  4897 ;;		Nothing
  4898 ;; This function is called by:
  4899 ;;		_vPutSampleDataIntoTable
  4900 ;; This function uses a non-reentrant model
  4901 ;;
  4902  0191                     _Filter:	
  4903                           
  4904                           ; Regs used in _Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  4905                           ;Filter@tmpValue stored from wreg
  4906  0191  1283               	bcf	3,5	;RP0=0, select bank0
  4907  0192  00A4               	movwf	Filter@tmpValue
  4908  0193  01AD               	clrf	Filter@j
  4909                           
  4910                           ;common.c: 121: unsigned int filter_temp = 0, filter_sum = 0;
  4911  0194  01A0               	clrf	Filter@filter_temp
  4912  0195  01A1               	clrf	Filter@filter_temp+1
  4913  0196  01A2               	clrf	Filter@filter_sum
  4914  0197  01A3               	clrf	Filter@filter_sum+1
  4915                           
  4916                           ;common.c: 123: unsigned int filter_buf[3];
  4917                           ;common.c: 125: for(int cir = 0;cir < 3; cir++)
  4918  0198  01AB               	clrf	Filter@cir
  4919  0199  01AC               	clrf	Filter@cir+1
  4920  019A                     i1l3585:	
  4921                           
  4922                           ;common.c: 126: filter_buf[cir] = *tmpValue++;
  4923  019A  1283               	bcf	3,5	;RP0=0, select bank0
  4924  019B  1303               	bcf	3,6	;RP1=0, select bank0
  4925  019C  0824               	movf	Filter@tmpValue,w
  4926  019D  2222  118A         	fcall	PL3	;call to abstracted procedure
  4927  019F  1003               	clrc
  4928  01A0  0D2B               	rlf	Filter@cir,w
  4929  01A1  222A  118A         	fcall	PL7	;call to abstracted procedure
  4930  01A3  0AA4               	incf	Filter@tmpValue,f
  4931  01A4  0AA4               	incf	Filter@tmpValue,f
  4932  01A5  0AAB               	incf	Filter@cir,f
  4933  01A6  1903               	skipnz
  4934  01A7  0AAC               	incf	Filter@cir+1,f
  4935  01A8  082C               	movf	Filter@cir+1,w
  4936  01A9  3A80               	xorlw	128
  4937  01AA  00FF               	movwf	127
  4938  01AB  3080               	movlw	128
  4939  01AC  027F               	subwf	127,w
  4940  01AD  1D03               	skipz
  4941  01AE  29B1               	goto	u113_25
  4942  01AF  3003               	movlw	3
  4943  01B0  022B               	subwf	Filter@cir,w
  4944  01B1                     u113_25:	
  4945  01B1  1C03               	skipc
  4946  01B2  299A               	goto	i1l3585
  4947                           
  4948                           ;common.c: 130: for(j = 0; j < 3 - 1; j++)
  4949  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  4950  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  4951  01B5  01AD               	clrf	Filter@j
  4952                           
  4953                           ;common.c: 131: {
  4954                           ;common.c: 132: for(i = 0; i < 3 - 1 - j; i++)
  4955  01B6  01AE               	clrf	Filter@i
  4956  01B7                     i1l3607:	
  4957  01B7  01F3               	clrf	??_Filter+1
  4958  01B8  082D               	movf	Filter@j,w
  4959  01B9  3C02               	sublw	2
  4960  01BA  00F2               	movwf	??_Filter
  4961  01BB  1C03               	skipc
  4962  01BC  03F3               	decf	??_Filter+1,f
  4963  01BD  0873               	movf	??_Filter+1,w
  4964  01BE  3A80               	xorlw	128
  4965  01BF  3C80               	sublw	128
  4966  01C0  1D03               	skipz
  4967  01C1  29C4               	goto	u115_25
  4968  01C2  0872               	movf	??_Filter,w
  4969  01C3  022E               	subwf	Filter@i,w
  4970  01C4                     u115_25:	
  4971  01C4  1803               	btfsc	3,0
  4972  01C5  29F9               	goto	i1l3609
  4973                           
  4974                           ;common.c: 133: {
  4975                           ;common.c: 134: if(filter_buf[i] > filter_buf[i + 1])
  4976  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  4977  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  4978  01C8  1003               	clrc
  4979  01C9  0D2E               	rlf	Filter@i,w
  4980  01CA  3E25               	addlw	Filter@filter_buf& (0+255)
  4981  01CB  2222  118A         	fcall	PL3	;call to abstracted procedure
  4982  01CD  2232  118A         	fcall	PL9	;call to abstracted procedure
  4983  01CF  0800               	movf	0,w
  4984  01D0  00F4               	movwf	??_Filter+2
  4985  01D1  0A84               	incf	4,f
  4986  01D2  0800               	movf	0,w
  4987  01D3  00F5               	movwf	??_Filter+3
  4988  01D4  0873               	movf	??_Filter+1,w
  4989  01D5  0275               	subwf	??_Filter+3,w
  4990  01D6  1D03               	skipz
  4991  01D7  29DA               	goto	u114_25
  4992  01D8  0872               	movf	??_Filter,w
  4993  01D9  0274               	subwf	??_Filter+2,w
  4994  01DA                     u114_25:	
  4995  01DA  1803               	skipnc
  4996  01DB  29F7               	goto	i1l3605
  4997                           
  4998                           ;common.c: 135: {
  4999                           ;common.c: 137: filter_temp = filter_buf[i];
  5000  01DC  1003               	clrc
  5001  01DD  0D2E               	rlf	Filter@i,w
  5002  01DE  3E25               	addlw	Filter@filter_buf& (0+255)
  5003  01DF  0084               	movwf	4
  5004  01E0  0800               	movf	0,w
  5005  01E1  00A0               	movwf	Filter@filter_temp
  5006  01E2  0A84               	incf	4,f
  5007  01E3  0800               	movf	0,w
  5008  01E4  00A1               	movwf	Filter@filter_temp+1
  5009                           
  5010                           ;common.c: 139: filter_buf[i] = filter_buf[i + 1];
  5011  01E5  2232  118A         	fcall	PL9	;call to abstracted procedure
  5012  01E7  0800               	movf	0,w
  5013  01E8  00F2               	movwf	??_Filter
  5014  01E9  0A84               	incf	4,f
  5015  01EA  0800               	movf	0,w
  5016  01EB  00F3               	movwf	??_Filter+1
  5017  01EC  1003               	clrc
  5018  01ED  0D2E               	rlf	Filter@i,w
  5019  01EE  222A  118A         	fcall	PL7	;call to abstracted procedure
  5020                           
  5021                           ;common.c: 141: filter_buf[i + 1] = filter_temp;
  5022  01F0  2232  118A         	fcall	PL9	;call to abstracted procedure
  5023  01F2  0820               	movf	Filter@filter_temp,w
  5024  01F3  0080               	movwf	0
  5025  01F4  0A84               	incf	4,f
  5026  01F5  0821               	movf	Filter@filter_temp+1,w
  5027  01F6  0080               	movwf	0
  5028  01F7                     i1l3605:	
  5029  01F7  0AAE               	incf	Filter@i,f
  5030  01F8  29B7               	goto	i1l3607
  5031  01F9                     i1l3609:	
  5032  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  5033  01FA  3002               	movlw	2
  5034  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  5035  01FC  0AAD               	incf	Filter@j,f
  5036  01FD  022D               	subwf	Filter@j,w
  5037                           
  5038                           ;common.c: 142: }
  5039                           ;common.c: 143: }
  5040                           ;common.c: 144: }
  5041                           ;common.c: 146: for(i = 1; i < 3 - 1; i++)
  5042  01FE  01AE               	clrf	Filter@i
  5043  01FF  1C03               	skipc
  5044  0200  29B7               	goto	i1l3607
  5045  0201  0AAE               	incf	Filter@i,f
  5046                           
  5047                           ;common.c: 147: {
  5048                           ;common.c: 148: filter_sum += filter_buf[i];
  5049  0202  1003               	clrc
  5050  0203                     L16:	
  5051  0203  0D2E               	rlf	Filter@i,w
  5052  0204  3E25               	addlw	Filter@filter_buf& (0+255)
  5053  0205  2222  118A         	fcall	PL3	;call to abstracted procedure
  5054  0207  0872               	movf	??_Filter,w
  5055  0208  07A2               	addwf	Filter@filter_sum,f
  5056  0209  1803               	skipnc
  5057  020A  0AA3               	incf	Filter@filter_sum+1,f
  5058  020B  0873               	movf	??_Filter+1,w
  5059  020C  07A3               	addwf	Filter@filter_sum+1,f
  5060  020D  3002               	movlw	2
  5061  020E  0AAE               	incf	Filter@i,f
  5062  020F  022E               	subwf	Filter@i,w
  5063  0210  1C03               	skipc
  5064  0211  2A03               	goto	L16
  5065                           
  5066                           ;common.c: 149: }
  5067                           ;common.c: 152: return (filter_sum );
  5068  0212  0823               	movf	Filter@filter_sum+1,w
  5069  0213  00F1               	movwf	?_Filter+1
  5070  0214  0822               	movf	Filter@filter_sum,w
  5071  0215  00F0               	movwf	?_Filter
  5072  0216  0008               	return
  5073  0217                     __end_of_Filter:	
  5074  0217                     __ptext1409:	
  5075 ;; =============== function _Filter ends ============
  5076                           
  5077                           
  5078 ;; *************** function _setPWM_Width *****************
  5079 ;; Defined at:
  5080 ;;		line 65 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  5081 ;; Parameters:    Size  Location     Type
  5082 ;;  ucWidth         1    wreg     unsigned char 
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;  ucWidth         1    0[COMMON] unsigned char 
  5085 ;; Return value:  Size  Location     Type
  5086 ;;		None               void
  5087 ;; Registers used:
  5088 ;;		wreg
  5089 ;; Tracked objects:
  5090 ;;		On entry : 160/0
  5091 ;;		On exit  : 160/0
  5092 ;;		Unchanged: FFE9F/0
  5093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5094 ;;      Params:         0       0       0       0       0
  5095 ;;      Locals:         1       0       0       0       0
  5096 ;;      Temps:          0       0       0       0       0
  5097 ;;      Totals:         1       0       0       0       0
  5098 ;;Total ram usage:        1 bytes
  5099 ;; Hardware stack levels used:    1
  5100 ;; This function calls:
  5101 ;;		Nothing
  5102 ;; This function is called by:
  5103 ;;		_vPutSampleDataIntoTable
  5104 ;; This function uses a non-reentrant model
  5105 ;;
  5106  0217                     _setPWM_Width:	
  5107                           
  5108                           ; Regs used in _setPWM_Width: [wreg]
  5109                           ;setPWM_Width@ucWidth stored from wreg
  5110  0217  00F0               	movwf	setPWM_Width@ucWidth
  5111                           
  5112                           ;common.c: 71: ucOldWidth = ucWidth;
  5113  0218  0095               	movwf	21	;volatile
  5114  0219  0008               	return
  5115  021A                     __end_of_setPWM_Width:	
  5116  021A                     PL2:	
  5117  021A  0084               	movwf	4
  5118  021B  0876               	movf	vPutSampleDataIntoTable@uiSampleData,w
  5119  021C  1383               	bcf	3,7	;select IRP bank1
  5120  021D  0080               	movwf	0
  5121  021E  0A84               	incf	4,f
  5122  021F  0877               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  5123  0220  0080               	movwf	0
  5124  0221  0008               	return
  5125  0222                     PL3:	
  5126  0222  0084               	movwf	4
  5127  0223  1383               	bcf	3,7	;select IRP bank0
  5128  0224  0800               	movf	0,w
  5129  0225  00F2               	movwf	??_Filter
  5130  0226  0A84               	incf	4,f
  5131  0227  0800               	movf	0,w
  5132  0228  00F3               	movwf	??_Filter+1
  5133  0229  0008               	return
  5134  022A                     PL7:	
  5135  022A  3E25               	addlw	Filter@filter_buf& (0+255)
  5136  022B  0084               	movwf	4
  5137  022C  0872               	movf	??_Filter,w
  5138  022D  0080               	movwf	0
  5139  022E  0A84               	incf	4,f
  5140  022F  0873               	movf	??_Filter+1,w
  5141  0230  0080               	movwf	0
  5142  0231  0008               	return
  5143  0232                     PL9:	
  5144  0232  1003               	clrc
  5145  0233  0D2E               	rlf	Filter@i,w
  5146  0234  3E02               	addlw	2
  5147  0235  3E25               	addlw	Filter@filter_buf& (0+255)
  5148  0236  0084               	movwf	4
  5149  0237  0008               	return
  5150  0238                     PL10:	
  5151  0238  0180               	clrf	0
  5152  0239  0A84               	incf	4,f
  5153  023A  0180               	clrf	0
  5154  023B  1003               	clrc
  5155  023C  0D7B               	rlf	vPutSampleDataIntoTable@i,w
  5156  023D  0008               	return
  5157                           
  5158                           	psect	intentry
  5159  0004                     __pintentry:	
  5160                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5161                           
  5162  0004                     interrupt_function:	
  5163  007E                     saved_w	set	btemp
  5164  0004  00FE               	movwf	btemp
  5165  0005  0E03               	swapf	3,w
  5166  0006  1283               	bcf	3,5	;RP0=0, select bank0
  5167  0007  1303               	bcf	3,6	;RP1=0, select bank0
  5168  0008  00BF               	movwf	??_ISR
  5169  0009  0804               	movf	4,w
  5170  000A  00C0               	movwf	??_ISR+1
  5171  000B  080A               	movf	10,w
  5172  000C  00C1               	movwf	??_ISR+2
  5173  000D  087F               	movf	btemp+1,w
  5174  000E  00C2               	movwf	??_ISR+3
  5175  000F  118A  2813         	ljmp	_ISR
  5176                           
  5177                           	psect	text1411
  5178  0000                     __ptext1411:	
  5179 ;; =============== function _getWaitResetFlag ends ============
  5180                           
  5181  007E                     btemp	set	126	;btemp
  5182  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Tue Dec 10 10:16:53 2019

                                  ??_clock_config 00BD                                 ?_getWaitResetFlag 0070  
                             ?_startOneHoursTimer 00BD                                                _GO 00F9  
                              ??_getWaitResetFlag 0070                                                fsr 0004  
                        ?_timer1_interrupt_config 0070                                               l704 0504  
                                             l712 0000                                               l721 0000  
                                             l730 0000                                               l715 0000  
                                             l724 0616                                               l709 0000  
                                             l718 0000                                               l736 03E2  
                                             l684 04EE                                               l694 04F9  
                                             l679 0518                                               l689 0525  
                                             l699 052D                                               _GIE 005F  
                                             _PB0 0030                                               _PB1 0031  
                                             _PB2 0032                                               _PB3 0033  
                                             _PR2 0092                                               _ISR 0013  
                                             fsr0 0004                                               indf 0000  
                          ??_startThreeHoursTimer 00BF                                              ?_ISR 0070  
                            ??_startOneHoursTimer 00BF                                __size_of_AD_Sample 0014  
                                            l4001 0000                                              l4003 0000  
                                            l4011 0000                                              l4005 0000  
                                            l4013 0000                                              l4021 0000  
                                            l2333 0000                                              l1622 0000  
                                            l4007 0000                                              l4015 0000  
                                            l4023 0000                                              l2327 0000  
                                            l4031 0000                                              l4103 0000  
                                            l4111 0000                                              l1616 0000  
                                            l4009 0000                                              l1625 0000  
                                            l4017 0544                                              l4025 0000  
                                            l4033 0000                                              l4201 0000  
                                            l1619 0000                                              l4019 0000  
                                            l4027 0000                                              l4035 0000  
                                            l4051 0000                                              l4115 0000  
                                            l1475 0000                                              l4211 0000  
                                            l1572 0000                                              l4037 0000  
                                            l4029 0000                                              l4045 0000  
                                            l4061 0000                                              l4109 0000  
                                            l4117 0000                                              l4133 0000  
                                            l4141 0000                                              l1581 0000  
                                            l4205 0000                                              l4221 0000  
                                            l1590 0000                                              l1575 0000  
                                            l4039 0000                                              l4047 04DA  
                                            l4063 0000                                              l4127 0000  
                                            l4135 0000                                              l4151 0000  
                                            l4215 0000                                              l4207 0000  
                                            l4223 0000                                              l4231 0000  
                                            l4311 02C5                                              l4303 02BD  
                                            l1584 0000                                              l1569 0601  
                                            l4049 0000                                              l1665 0000  
                                            l1497 0000                                              l4161 0000  
                                            l4153 0000                                              l4225 0000  
                                            l4233 0000                                              l4401 03A5  
                                            l4313 0000                                              l4305 02BE  
                                            l1578 0000                                              l4067 0000  
                                            l4091 0000                                              l4139 0000  
                                            l4163 0000                                              l4219 04BB  
                                            l4227 0000                                              l4403 03A6  
                                            l4331 02EC                                              l4323 02E4  
                                            l4315 02D2                                              l4251 0000  
                                            l4069 0000                                              l4085 0000  
                                            l4093 0000                                              l4181 0411  
                                            l4165 0000                                              l4229 0000  
                                            l4237 0000                                              l4245 0000  
                                            l4341 0000                                              l4333 0000  
                                            l4325 02E5                                              l4309 0000  
                                            l4261 03B1                                              l4253 0000  
                                            l4079 0000                                              l4087 0000  
                                            l4183 044D                                              l4159 03F3  
                                            l4407 03AD                                              l4343 0305  
                                            l4335 0000                                              l4263 0000  
                                            l4255 0000                                              l4193 0000  
                                            l4185 0000                                              l4409 0000  
                                            l4345 0000                                              l4337 0000  
                                            l4329 0000                                              l4281 0281  
                                            l4273 0000                                              l4265 0000  
                                            l4257 0000                                              l4249 0000  
                                            l4195 0000                                              l4179 044B  
                                            l4363 0000                                              l4355 0324  
                                            l4339 0000                                              l4291 0000  
                                            l4275 0274                                              l4259 0000  
                                            l4365 0000                                              l4357 0327  
                                            l4293 0000                                              l4285 0286  
                                            l4269 0269                                              l4391 0391  
                                            l4383 036C                                              l4367 0000  
                                            l4359 0329                                              l4295 02A9  
                                            l4287 028A                                              l4279 0280  
                                            l4393 0000                                              l4385 0000  
                                            l4377 0356                                              l4297 02AF  
                                            l4289 0000                                              l4395 0395  
                                            l4387 0386                                              l4379 0358  
                                            l4299 02B1                                              l4397 0000  
                                            l3971 0000                                              l3973 0000  
                                            l3981 0000                                              l3967 0000  
                                            l3975 0000                                              l3983 0000  
                                            l3991 0000                                              _ADIE 046A  
                                            _ADIF 006A                                              l3969 0000  
                                            l3977 0000                                              l3985 0000  
                                            l3993 0000                                              l3979 0000  
                                            l3987 0000                                              l3995 0000  
                                            l3989 0000                                              l3997 0000  
                                            l3999 0000                                              _ADON 00F8  
                   startTwelveHourTimer@uiSetTime 00BD                                              u2217 0260  
                                            u1915 040B                                              u1925 0432  
                                            u1935 041E                                              _PEIE 005E  
                            FilterCh13@filter_buf 00C8                              FilterCh13@filter_sum 00C6  
                                            _main 023E                                              btemp 007E  
                                            start 0011                           ?_getAdOriginalCh13Value 00D2  
                      ??_isFinishedTwentyMinTimer 00BD                                             ??_ISR 003F  
                               ??_setPinInitVaule 00BE                        __end_of_isPermitSampleTime 060D  
                             _sampleChannelSelect 0063                                             ?_main 0070  
                                           _CLKPR 0108                                             _T1CON 0010  
                                           _T2CON 0012                                   __end_of_adc_get 0083  
                                           _PBOD2 0C42                                             _TMR1H 000F  
                                           _TMR1L 000E                             setAD_ConvertFlag@flag 00BD  
                               ??_selectAdChannel 00BD                             FilterCh13@filter_temp 00C4  
                                      _FilterCh13 03EA                                   __end_of_initPB3 051A  
                                 __end_of_initPB4 0527                                   __end_of_initPB5 052F  
                         _vPutSampleDataIntoTable 0086                                   __end_of_initPin 0511  
                                           _reset 0616                                             _timer 005F  
                                           pclath 000A                                             status 0003  
                                           wtemp0 007E                    __end_of_getAdOriginalCh13Value 03EA  
                   __size_of_startTwelveHourTimer 0013                              __end_of_clrSampeTime 0616  
                                    __end_of_main 03E3                            __size_of_adc_test_init 001C  
                               __end_of_AD_Sample 04BE                                            ??_main 00D4  
                             setPWM_Width@ucWidth 0070                                     main@ucChValue 00D5  
                                   main@ucDelay1s 00A0                                            _ADCON0 001F  
                                          _ADCON1 009F                              __end_of_clock_config 0604  
                                          _ADRESH 001E                                            _ADRESL 009E  
                                          _CCPR1L 0015                                            ?_reset 0070  
                                          _CLKPCE 0847                                            i1l1510 0000  
                                          i1l1550 012E                                            i1l2336 0000  
                                          i1l1545 010C                                            i1l1484 0000  
                                          u113_25 01B1                                            i1l1478 0000  
                                          i1l1584 0000                                            i1l1680 006B  
                                          i1l1672 0027                                            i1l1673 0031  
                                          i1l1674 003B                                            i1l3611 0000  
                                          i1l1675 0045                                            i1l3525 0000  
                                          i1l3621 0000                                            i1l3605 01F7  
                                          u114_25 01DA                                            i1l3701 016A  
                                          i1l3607 01B7                                            i1l3711 0000  
                                          i1l3529 0000                                            i1l3609 01F9  
                                          i1l3641 0000                                            i1l3633 0000  
                                          i1l3619 0000                                            i1l3707 0170  
                                          i1l3651 0000                                            i1l3635 0000  
                                          i1l3627 0000                                            u115_25 01C4  
                                          i1l3709 0000                                            i1l3661 0128  
                                          i1l3645 0000                                            i1l3733 0000  
                                          i1l3591 0000                                            i1l3671 013A  
                                          i1l3639 0000                                            i1l3743 0000  
                                          i1l3585 019A                                            i1l3657 0121  
                                          i1l3649 00B1                                            i1l3673 013C  
                                          i1l3761 0000                                            i1l3737 0000  
                                          i1l3587 0000                                            i1l3579 0000  
                                          i1l3771 0000                                            i1l3683 0000  
                                          i1l3675 0000                                            i1l3667 0134  
                                          i1l3739 0000                                            i1l3755 004F  
                                          i1l3589 0000                                            u132_25 018C  
                                          i1l3685 014F                                            i1l3677 0142  
                                          i1l3765 0062                                            i1l3767 0000  
                                          i1l3695 0000                                            i1l3687 0000  
                                          i1l3679 0000                                            i1l3759 0000  
                                          i1l3697 0164                                            i1l3689 0155  
                                          i1l3699 0000                             __end_of_resetAllTimer 0536  
                                          _TMR1IE 0460                                            _TMR1IF 0060  
                               _getAD_ConvertFlag 04A1                                 _setAD_ConvertFlag 04A5  
                                          _TRISB0 0430                                            _TRISB1 0431  
                                          _TRISB2 0432                                            _TRISB3 0433  
                                          _TRISB4 0434                                            _TRISB5 0435  
                              ?_getAD_ConvertFlag 0070                                            _Filter 0191  
                              ?_setAD_ConvertFlag 0070                       ??_isFinishedThreeHoursTimer 00BD  
                   __size_of_clearThreeHoursTimer 0005                                         ??_adc_get 0072  
                             ??_getAD_ConvertFlag 00BD                               ??_setAD_ConvertFlag 00BD  
                                          _setPB3 04E6                                            _setPB4 04F1  
                                          _setPB5 04FC                       __end_of_clearTwentyMinTimer 0548  
                                          clrloop 05F5                                  Filter@filter_buf 0025  
                                       ??_initPB3 00BD                                         ??_initPB4 00BD  
                                       ??_initPB5 00BD                                  Filter@filter_sum 0022  
                                       ??_initPin 00BE                         ??_vPutSampleDataIntoTable 002F  
                                          saved_w 007E                           ??_clearTwelveHoursTimer 00BD  
                                     ?_FilterCh13 00BD                          __end_of_setWaitResetFlag 0609  
                     ?_process_AD_Converter_Value 0070                                     _adc_test_init 04BE  
                       __end_of_getAD_ConvertFlag 04A5                         __end_of_setAD_ConvertFlag 04AA  
                                   ?_setPWM_Width 0070                                __size_of_adc_start 0004  
                        _initPB2_AsHighResistence 051A                  __size_of_isFinishedOneHoursTimer 000B  
                __end_of_isFinishedTwentyMinTimer 05EA                                    __pcstackCOMMON 0070  
                                    __pidataBANK0 0000                                 main@uiTimerOneP5s 00A2  
                                   __end_of_reset 060D                                 main@uiTimerTwoP5s 00A4  
                          setWaitResetFlag@bValue 00BD           vPutSampleDataIntoTable@uiCalWidthArray1 004D  
         vPutSampleDataIntoTable@uiCalWidthArray2 004F           vPutSampleDataIntoTable@uiCalWidthArray3 0051  
         vPutSampleDataIntoTable@uiCalWidthArray4 0053                    vPutSampleDataIntoTable@channel 0078  
                       _isFinishedThreeHoursTimer 05C9                             __end_of_timer1_config 05F4  
                       __size_of_getWaitResetFlag 0002                                    ?_adc_test_init 00BD  
                     __end_of_startTwentyMinTimer 05BE                                           ??_reset 00BD  
                __size_of_timer1_interrupt_config 0003                             __size_of_clrSampeTime 0002  
                                      __pbssBANK0 0043                                        __pbssBANK1 00A0  
                                  ??_setPWM_Width 0070                      __size_ofi1_setAD_ConvertFlag 0003  
                                 _setPinInitVaule 04DE                                        adc_get@val 0072  
                                _uiTwentyMinTimer 0049                   __end_of_vPutSampleDataIntoTable 018F  
                                         ?_Filter 0070                       __size_of_clearOneHoursTimer 0004  
                                      __pmaintext 023E               vPutSampleDataIntoTable@ucCh12Length 007D  
                             __size_of_FilterCh13 007F               vPutSampleDataIntoTable@ucCh13Length 0060  
         vPutSampleDataIntoTable@uiDeviationValue 0079                                   _selectAdChannel 060D  
                                      __pintentry 0004                                           _CCP1CON 0017  
                                      __ptext1400 04F1                                        __ptext1401 051F  
                                      __ptext1410 018F                                        __ptext1402 04E6  
                                      __ptext1411 0000                                        __ptext1403 0511  
                                      __ptext1404 0013                                        __ptext1405 0086  
                                      __ptext1406 0083                                           ?_setPB3 0070  
                                      __ptext1407 0078                                           ?_setPB4 0070  
                                      __ptext1408 0191                                           ?_setPB5 0070  
                                      __ptext1409 0217                                        __ptext1370 04AA  
                                      __ptext1371 04A5                                        __ptext1380 0598  
                                      __ptext1372 04A1                                        __ptext1381 05DF  
                                      __ptext1373 03EA                                        __ptext1365 03E3  
                                      __ptext1390 0544                                        __ptext1382 0614  
                                      __ptext1374 0604                                        __ptext1366 0488  
                                      __ptext1391 0540                                        __ptext1383 0609  
                                      __ptext1375 05BE                                        __ptext1367 052F  
                                      __ptext1392 053B                                        __ptext1384 04DA  
                                      __ptext1376 0572                                        __ptext1368 04DE  
                                      __ptext1393 0536                                        __ptext1385 05AB  
                                      __ptext1377 05C9                                        __ptext1369 0507  
                                      __ptext1394 0616                                        __ptext1386 04BE  
                                      __ptext1378 0585                                        __ptext1395 060D  
                                      __ptext1387 0611                                        __ptext1379 05D4  
                                      __ptext1396 0548                                        __ptext1388 05EA  
                                      __ptext1397 051A                                        __ptext1389 05FC  
                                      __ptext1398 04FC                                        __ptext1399 0527  
                           __size_of_clock_config 0008                                      _clrSampeTime 0614  
                               __end_of_adc_start 04DE                              _uiTwentySecondsTimer 004B  
                              _isPermitSampleTime 0609                                           Filter@i 002E  
                                         Filter@j 002D                                __size_of_pwm_start 0016  
                     __size_of_startOneHoursTimer 0013                     __size_of_startThreeHoursTimer 0013  
                      __size_of_getAD_ConvertFlag 0004                        __size_of_setAD_ConvertFlag 0005  
                                  main@ucTimerP3s 00A9                                    main@ucTimerP5s 00AA  
                             ?_isPermitSampleTime 0070                                   __size_of_Filter 0086  
                                      _uiBigTimer 0043                                      setPB3@bValue 00BD  
                                    setPB4@bValue 00BD                                      _clock_config 05FC  
                                    setPB5@bValue 00BD                                           _adc_get 0078  
                                 __size_of_setPB3 000B                                   __size_of_setPB4 000B  
                                 __size_of_setPB5 000B                              ??_isPermitSampleTime 00BD  
                    __end_of_startTwelveHourTimer 05AB                                     initPB3@bValue 00BD  
                                   initPB4@bValue 00BD                                         _AD_Sample 04AA  
                                         _initPB3 0511                                           _initPB4 051F  
                                         _initPB5 0527                                      __size_of_ISR 0065  
                                   initPB5@bValue 00BD                                           _initPin 0507  
                            _bSmallTimerStartFlag 005B                                   ??_adc_test_init 00BE  
               __size_of_isFinishedTwentyMinTimer 000B                         ?_isFinishedTwentyMinTimer 0070  
                         __end_of_setPinInitVaule 04E6                              end_of_initialization 056F  
                               Filter@filter_temp 0020                             pwm_start@ucPulseWidth 00BE  
                         __end_of_selectAdChannel 0611                           _isFinishedOneHoursTimer 05BE  
                               __end_of_pwm_start 055E                              __end_of_setPWM_Width 021A  
                                      ?_AD_Sample 0070                      ??_isFinishedTwelveHoursTimer 00BD  
                                       Filter@cir 002B                               _bTwentyMinStartFlag 005C  
                                _adc_convert_flag 0058                                      ??_FilterCh13 00BF  
                                _getWaitResetFlag 018F                      __end_of_clearThreeHoursTimer 0540  
                  __size_of_clearTwelveHoursTimer 0005                                 ?_setWaitResetFlag 0070  
                         _timer1_interrupt_config 0611                     __end_of_clearTwelveHoursTimer 053B  
                      ??_initPB2_AsHighResistence 00BD                                ??_setWaitResetFlag 00BD  
              __size_of_isFinishedThreeHoursTimer 000B                                        main@ucStep 00A8  
                                  __end_of_Filter 0217                     startTwentyMinTimer@uiSetValue 00BD  
             __size_of_isFinishedTwelveHoursTimer 000B                                FilterCh13@tmpValue 00C3  
                              __end_of_FilterCh13 0469                          vPutSampleDataIntoTable@i 007B  
                             i1_setAD_ConvertFlag 0083                                    __end_of_setPB3 04F1  
                                  __end_of_setPB4 04FC                                    __end_of_setPB5 0507  
                          __size_of_resetAllTimer 0007                               start_initialization 055E  
                                     __end_of_ISR 0078                                  ?_setPinInitVaule 0070  
                        ??_getAdOriginalCh13Value 00D4                      __size_of_clearTwentyMinTimer 0004  
                       ??_isFinishedOneHoursTimer 00BD                              ?i1_setAD_ConvertFlag 0070  
                            _startTwelveHourTimer 0598                 __end_of_isFinishedThreeHoursTimer 05D4  
                                ?_selectAdChannel 0070                                          ??_Filter 0072  
               vPutSampleDataIntoTable@ucInitFlag 0062                                       __pdataBANK0 0063  
                                        ??_setPB3 00BD                                          ??_setPB4 00BD  
                                        ??_setPB5 00BD                          ?_vPutSampleDataIntoTable 0076  
                                     ??_AD_Sample 00BD                         ??_timer1_interrupt_config 00BD  
                                     __pbssCOMMON 007D                                     __pcstackBANK0 0020  
                                   __pcstackBANK1 00BD                                         _adc_start 04DA  
                           ??i1_setAD_ConvertFlag 0070                                   main@uiCh13Value 00D7  
                           ?_startTwelveHourTimer 00BD                                     _resetAllTimer 052F  
                      __end_of_clearOneHoursTimer 0544                      __size_of_startTwentyMinTimer 0013  
                          __size_of_timer1_config 000A                              _clearThreeHoursTimer 053B  
                           __size_of_setPWM_Width 0003                      __end_of_startThreeHoursTimer 0598  
                               main@cTimerP5s_792 00A7                                 main@cTimerP5s_786 00A6  
                                        ?_adc_get 0070                   __end_of_isFinishedOneHoursTimer 05C9  
              __end_of_isFinishedTwelveHoursTimer 05DF                        _isFinishedTwelveHoursTimer 05D4  
                                        ?_initPB3 0070                                          ?_initPB4 0070  
                                        ?_initPB5 0070                                   ISR@ucTimer1sCnt 0057  
                                        ?_initPin 0070                        __end_of_startOneHoursTimer 0585  
                __end_of_initPB2_AsHighResistence 051F                         _uiSampleChannelFourteenth 00B7  
                                      ?_adc_start 0070                   __size_of_getAdOriginalCh13Value 0007  
                                  __size_of_reset FFF7                                    ?_resetAllTimer 0070  
                               interrupt_function 0004                                      _setPWM_Width 0217  
                                  _bWaitResetFlag 005D                   __end_of_timer1_interrupt_config 0614  
                       pwm_start@ucPulseFrequency 00BD                          __end_of_getWaitResetFlag 0191  
                           ?_clearThreeHoursTimer 0070                                      _uiSampleCh12 00AB  
                                    _uiSampleCh13 00B1                              adc_test_init@channel 00BF  
             vPutSampleDataIntoTable@uiSampleData 0076                       __size_of_isPermitSampleTime 0004  
                                       _pwm_start 0548                                      _uiSmallTimer 0047  
            vPutSampleDataIntoTable@uiCalWidthCnt 0055                             __end_of_adc_test_init 04DA  
                                   _timer1_config 05EA                      ??_process_AD_Converter_Value 00C0  
                          ??_startTwelveHourTimer 00BF                         __size_of_setWaitResetFlag 0005  
                          _getAdOriginalCh13Value 03E3                               _clearTwentyMinTimer 0544  
                     startOneHoursTimer@uiSetTime 00BD                                  __size_of_adc_get 000B  
             __size_of_process_AD_Converter_Value 0019                                        ?_pwm_start 00BD  
                        _isFinishedTwentyMinTimer 05DF  vPutSampleDataIntoTable@ucChannelFourteenthLength 0061  
                                __size_of_initPB3 0009                                  __size_of_initPB4 0008  
                                __size_of_initPB5 0008                                  __size_of_initPin 000A  
                                  Filter@tmpValue 0024                                    ?_timer1_config 0070  
                            ?_clearTwentyMinTimer 0070                                       ??_adc_start 00BD  
                                 ??_resetAllTimer 00BD                              _startThreeHoursTimer 0585  
                           _clearTwelveHoursTimer 0536                                    _uiOneHourTimer 0045  
                                   __size_of_main 01A5                vPutSampleDataIntoTable@uiInitWidth 0064  
                                   FilterCh13@cir 00CE                                          clear_ram 05F4  
                          ??_clearThreeHoursTimer 00BD                 __size_of_initPB2_AsHighResistence 0005  
                       ?_initPB2_AsHighResistence 0070                            _bOneHourTimerStartFlag 005A  
                                   ?_clrSampeTime 0070                               _startTwentyMinTimer 05AB  
                                     _sampleTimes 005E                             ??_clearTwentyMinTimer 00BD  
                           ?_startThreeHoursTimer 00BD                  __size_of_vPutSampleDataIntoTable 0109  
                                        intlevel1 0000                              ?_startTwentyMinTimer 00BD  
                        __size_of_setPinInitVaule 0008                        ?_isFinishedThreeHoursTimer 0070  
                                   ?_clock_config 0070                          __size_of_selectAdChannel 0004  
                              _clearOneHoursTimer 0540                     startThreeHoursTimer@uiSetTime 00BD  
                         i1setAD_ConvertFlag@flag 0070                                       ??_pwm_start 00BE  
                                  ??_clrSampeTime 00BD                       ?_isFinishedTwelveHoursTimer 0070  
                              _bBigTimerStartFlag 0059                                   ??_timer1_config 00BD  
                                     FilterCh13@i 00D1                                       FilterCh13@j 00D0  
                             ?_clearOneHoursTimer 0070                       __end_ofi1_setAD_ConvertFlag 0086  
              __end_of_process_AD_Converter_Value 04A1                        _process_AD_Converter_Value 0488  
                        ?_isFinishedOneHoursTimer 0070                            ?_clearTwelveHoursTimer 0070  
                                adc_test_init@ref 00BD                             ??_startTwentyMinTimer 00BF  
                              _startOneHoursTimer 0572                              ??_clearOneHoursTimer 00BD  
                                _setWaitResetFlag 0604  
