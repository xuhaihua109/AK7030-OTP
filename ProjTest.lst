

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Tue Jun 04 15:50:12 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,delta=2
    14                           	psect	swtext1,local,class=CONST,delta=2
    15                           	psect	swtext2,local,class=CONST,delta=2
    16                           	psect	swtext3,local,class=CONST,delta=2
    17                           	psect	text408,local,class=CODE,delta=2
    18                           	psect	text413,local,class=CODE,delta=2
    19                           	psect	text414,local,class=CODE,delta=2
    20                           	psect	text415,local,class=CODE,delta=2
    21                           	psect	text416,local,class=CODE,delta=2
    22                           	psect	text418,local,class=CODE,delta=2
    23                           	psect	text419,local,class=CODE,delta=2
    24                           	psect	text420,local,class=CODE,delta=2
    25                           	psect	text422,local,class=CODE,delta=2
    26                           	psect	text423,local,class=CODE,delta=2
    27                           	psect	text424,local,class=CODE,delta=2
    28                           	psect	text425,local,class=CODE,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text428,local,class=CODE,delta=2
    31                           	psect	pa_nodes,global,class=CODE,delta=2
    32                           	dabs	1,0x7E,2
    33  000A                     	;#
    34                           
    35                           	psect	config
    36  2000  2FFF               	dw	12287	;#
    37  2001  3FDE               	dw	16350	;#
    38  2002  3FF8               	dw	16376	;#
    39                           
    40                           	psect	idataBANK0
    41  0000                     __pidataBANK0:	
    42  001F                     _ADCON0	set	31
    43  001E                     _ADRESH	set	30
    44  001B                     _OP1CON0	set	27
    45  001C                     _OP1CON1	set	28
    46  001D                     _OP1CON2	set	29
    47  0010                     _T1CON	set	16
    48  000F                     _TMR1H	set	15
    49  000E                     _TMR1L	set	14
    50  006A                     _ADIF	set	106
    51  00F8                     _ADON	set	248
    52  005F                     _GIE	set	95
    53  00F9                     _GO	set	249
    54  0028                     _PA0	set	40
    55  0029                     _PA1	set	41
    56  002A                     _PA2	set	42
    57  002B                     _PA3	set	43
    58  002E                     _PA6	set	46
    59  002F                     _PA7	set	47
    60  0030                     _PB0	set	48
    61  0031                     _PB1	set	49
    62  005E                     _PEIE	set	94
    63  0060                     _TMR1IF	set	96
    64  009F                     _ADCON1	set	159
    65  009E                     _ADRESL	set	158
    66  0087                     _DACCON	set	135
    67  0088                     _DACR0	set	136
    68  009B                     _OP2CON0	set	155
    69  009C                     _OP2CON1	set	156
    70  009D                     _OP2CON2	set	157
    71  046A                     _ADIE	set	1130
    72  0460                     _TMR1IE	set	1120
    73  0428                     _TRISA0	set	1064
    74  0429                     _TRISA1	set	1065
    75  042A                     _TRISA2	set	1066
    76  042B                     _TRISA3	set	1067
    77  042E                     _TRISA6	set	1070
    78  042F                     _TRISA7	set	1071
    79  0430                     _TRISB0	set	1072
    80  0431                     _TRISB1	set	1073
    81  0432                     _TRISB2	set	1074
    82  0433                     _TRISB3	set	1075
    83  0434                     _TRISB4	set	1076
    84  0435                     _TRISB5	set	1077
    85  0437                     _TRISB7	set	1079
    86  0108                     _CLKPR	set	264
    87  0847                     _CLKPCE	set	2119
    88  0C46                     _PBOD6	set	3142
    89                           
    90                           	psect	cinit
    91  02C4                     start_initialization:	
    92  02C4  3020               	movlw	low __pbssBANK0
    93                           
    94                           ; Clear objects allocated to COMMON
    95  02C5  01F6               	clrf	__pbssCOMMON& (0+127)
    96  02C6  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
    97  02C7  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
    98  02C8  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
    99  02C9  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   100                           
   101                           ; Clear objects allocated to BANK0
   102  02CA  1383               	bcf	3,7	;select IRP bank0
   103  02CB  0084               	movwf	4
   104  02CC  3047               	movlw	low (__pbssBANK0+39)
   105  02CD  118A  2311         	fcall	clear_ram
   106                           
   107                           ;initializer for _sampleChannelSelect
   108  02CF  300E               	movlw	14
   109  02D0  00CC               	movwf	__pdataBANK0& (0+127)
   110  02D1                     end_of_initialization:	
   111                           ;End of C runtime variable initialization code
   112                           
   113  02D1  0183               	clrf	3
   114  02D2  118A  280D         	ljmp	_main	;jump to C main() function
   115                           
   116                           	psect	bssCOMMON
   117  0076                     __pbssCOMMON:	
   118  0076                     _uiBigTimer:	
   119  0076                     	ds	2
   120  0078                     ISR@ucTimer1sCnt:	
   121  0078                     	ds	1
   122  0079                     _adc_convert_flag:	
   123  0079                     	ds	1
   124  007A                     _timer:	
   125  007A                     	ds	1
   126                           
   127                           	psect	bssBANK0
   128  0020                     __pbssBANK0:	
   129  0020                     _buffer_Sample_AD_Value:	
   130  0020                     	ds	12
   131  002C                     _adc_original_CH14_value:	
   132  002C                     	ds	2
   133  002E                     _adc_original_CH4_value:	
   134  002E                     	ds	2
   135  0030                     _adc_original_value:	
   136  0030                     	ds	2
   137  0032                     _multiFilterMaxValue:	
   138  0032                     	ds	2
   139  0034                     _multiFilterMinValue:	
   140  0034                     	ds	2
   141  0036                     _uiSmallTimer:	
   142  0036                     	ds	2
   143  0038                     main@ucTimerCount:	
   144  0038                     	ds	2
   145  003A                     _sampleTimes:	
   146  003A                     	ds	1
   147  003B                     main@AD_sample_process_step:	
   148  003B                     	ds	1
   149  003C                     main@ucChannel4Type:	
   150  003C                     	ds	1
   151  003D                     main@ucLoaderStep:	
   152  003D                     	ds	1
   153  003E                     main@ucLoaderStep1:	
   154  003E                     	ds	1
   155  003F                     main@ucLoaderStep2:	
   156  003F                     	ds	1
   157  0040                     main@ucLoaderStep3:	
   158  0040                     	ds	1
   159  0041                     main@ucLoaderStep4:	
   160  0041                     	ds	1
   161  0042                     main@ucTimerDelay:	
   162  0042                     	ds	1
   163  0043                     main@ucTimerDelay1:	
   164  0043                     	ds	1
   165  0044                     main@ucTimerDelay2:	
   166  0044                     	ds	1
   167  0045                     main@ucTimerDelay3:	
   168  0045                     	ds	1
   169  0046                     main@ucTimerDelay4:	
   170  0046                     	ds	1
   171                           
   172                           	psect	dataBANK0
   173  004C                     __pdataBANK0:	
   174  004C                     _sampleChannelSelect:	
   175  004C                     	ds	1
   176                           
   177                           	psect	clrtext
   178  0311                     clear_ram:	
   179                           ;	Called with FSR containing the base address, and
   180                           ;	W with the last address+1
   181                           
   182  0311  0064               	clrwdt	;clear the watchdog before getting into this loop
   183  0312                     clrloop:	
   184  0312  0180               	clrf	0	;clear RAM location pointed to by FSR
   185  0313  0A84               	incf	4,f	;increment pointer
   186  0314  0604               	xorwf	4,w	;XOR with final address
   187  0315  1903               	btfsc	3,2	;have we reached the end yet?
   188  0316  3400               	retlw	0	;all done for this memory range, return
   189  0317  0604               	xorwf	4,w	;XOR again to restore value
   190  0318  2B12               	goto	clrloop	;do the next byte
   191                           
   192                           	psect	cstackCOMMON
   193  0070                     __pcstackCOMMON:	
   194  0070                     ?_clock_config:	
   195  0070                     ?_timer1_config:	
   196                           ; 0 bytes @ 0x0
   197                           
   198  0070                     ?_timer1_interrupt_config:	
   199                           ; 0 bytes @ 0x0
   200                           
   201  0070                     ?_dac_init:	
   202                           ; 0 bytes @ 0x0
   203                           
   204  0070                     ?_op1_init:	
   205                           ; 0 bytes @ 0x0
   206                           
   207  0070                     ?_op2_init:	
   208                           ; 0 bytes @ 0x0
   209                           
   210  0070                     ?_adc_start:	
   211                           ; 0 bytes @ 0x0
   212                           
   213  0070                     ?_clrSampeTime:	
   214                           ; 0 bytes @ 0x0
   215                           
   216  0070                     ?_process_AD_Converter_Value:	
   217                           ; 0 bytes @ 0x0
   218                           
   219  0070                     ?_AD_Sample:	
   220                           ; 0 bytes @ 0x0
   221                           
   222  0070                     ?_main:	
   223                           ; 0 bytes @ 0x0
   224                           
   225  0070                     ?_setAD_ConvertFlag:	
   226                           ; 0 bytes @ 0x0
   227                           
   228  0070                     ?_ISR:	
   229                           ; 0 bytes @ 0x0
   230                           
   231  0070                     ?i1_setAD_ConvertFlag:	
   232                           ; 0 bytes @ 0x0
   233                           
   234  0070                     ??i1_setAD_ConvertFlag:	
   235                           ; 0 bytes @ 0x0
   236                           
   237  0070                     ?_isPermitSampleTime:	
   238                           ; 0 bytes @ 0x0
   239                           
   240  0070                     ?_getAD_ConvertFlag:	
   241                           ; 1 bytes @ 0x0
   242                           
   243  0070                     ?_adc_get:	
   244                           ; 1 bytes @ 0x0
   245                           
   246  0070                     i1setAD_ConvertFlag@flag:	
   247                           ; 2 bytes @ 0x0
   248                           
   249                           
   250                           ; 1 bytes @ 0x0
   251  0070                     	ds	2
   252  0072                     ??_adc_get:	
   253  0072                     adc_get@val:	
   254                           ; 0 bytes @ 0x2
   255                           
   256                           
   257                           ; 2 bytes @ 0x2
   258  0072                     	ds	2
   259  0074                     ??_ISR:	
   260                           
   261                           ; 0 bytes @ 0x4
   262  0074                     	ds	2
   263                           
   264                           	psect	cstackBANK0
   265  0047                     __pcstackBANK0:	
   266  0047                     ??_clock_config:	
   267  0047                     ??_timer1_config:	
   268                           ; 0 bytes @ 0x0
   269                           
   270  0047                     ??_timer1_interrupt_config:	
   271                           ; 0 bytes @ 0x0
   272                           
   273  0047                     ?_adc_test_init:	
   274                           ; 0 bytes @ 0x0
   275                           
   276  0047                     ??_dac_init:	
   277                           ; 0 bytes @ 0x0
   278                           
   279  0047                     ??_op1_init:	
   280                           ; 0 bytes @ 0x0
   281                           
   282  0047                     ??_op2_init:	
   283                           ; 0 bytes @ 0x0
   284                           
   285  0047                     ??_adc_start:	
   286                           ; 0 bytes @ 0x0
   287                           
   288  0047                     ??_isPermitSampleTime:	
   289                           ; 0 bytes @ 0x0
   290                           
   291  0047                     ??_clrSampeTime:	
   292                           ; 0 bytes @ 0x0
   293                           
   294  0047                     ??_getAD_ConvertFlag:	
   295                           ; 0 bytes @ 0x0
   296                           
   297  0047                     ??_setAD_ConvertFlag:	
   298                           ; 0 bytes @ 0x0
   299                           
   300  0047                     ?_getAdOriginalCh14Value:	
   301                           ; 0 bytes @ 0x0
   302                           
   303  0047                     ?_getAdOriginaCh4Value:	
   304                           ; 2 bytes @ 0x0
   305                           
   306  0047                     ?_getAdOriginalValue:	
   307                           ; 2 bytes @ 0x0
   308                           
   309  0047                     setAD_ConvertFlag@flag:	
   310                           ; 2 bytes @ 0x0
   311                           
   312  0047                     adc_test_init@ref:	
   313                           ; 1 bytes @ 0x0
   314                           
   315                           
   316                           ; 1 bytes @ 0x0
   317  0047                     	ds	1
   318  0048                     ??_adc_test_init:	
   319                           
   320                           ; 0 bytes @ 0x1
   321  0048                     	ds	1
   322  0049                     ??_getAdOriginalCh14Value:	
   323  0049                     ??_getAdOriginaCh4Value:	
   324                           ; 0 bytes @ 0x2
   325                           
   326  0049                     ??_AD_Sample:	
   327                           ; 0 bytes @ 0x2
   328                           
   329  0049                     ??_getAdOriginalValue:	
   330                           ; 0 bytes @ 0x2
   331                           
   332  0049                     adc_test_init@channel:	
   333                           ; 0 bytes @ 0x2
   334                           
   335                           
   336                           ; 1 bytes @ 0x2
   337  0049                     	ds	2
   338  004B                     AD_Sample@index:	
   339                           
   340                           ; 1 bytes @ 0x4
   341  004B                     	ds	1
   342  004C                     ??_process_AD_Converter_Value:	
   343  004C                     ??_main:	
   344                           ; 0 bytes @ 0x5
   345                           
   346                           
   347                           	psect	maintext
   348  000D                     __pmaintext:	
   349                           ; 0 bytes @ 0x5
   350 ;;Data sizes: Strings 0, constant 0, data 1, bss 44, persistent 0 stack 0
   351 ;;Auto spaces:   Size  Autos    Used
   352 ;; COMMON          14      6      11
   353 ;; BANK0           80      5      45
   354 ;; BANK1           80      0       0
   355 ;; BANK3           96      0       0
   356 ;; BANK2           96      0       0
   357 ;;
   358 ;; Pointer list with targets:
   359 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   360 ;;
   361 ;; ?_getAdOriginalCh14Value	unsigned int  size(1) Largest target is 0
   362 ;;
   363 ;; ?_getAdOriginaCh4Value	unsigned int  size(1) Largest target is 0
   364 ;;
   365 ;; ?_getAdOriginalValue	unsigned int  size(1) Largest target is 0
   366 ;;
   367 ;;
   368 ;; Critical Paths under _main in COMMON
   369 ;;
   370 ;;   None.
   371 ;;
   372 ;; Critical Paths under _ISR in COMMON
   373 ;;
   374 ;;   _ISR->_adc_get
   375 ;;
   376 ;; Critical Paths under _main in BANK0
   377 ;;
   378 ;;   _process_AD_Converter_Value->_AD_Sample
   379 ;;   _AD_Sample->_getAdOriginalValue
   380 ;;
   381 ;; Critical Paths under _ISR in BANK0
   382 ;;
   383 ;;   None.
   384 ;;
   385 ;; Critical Paths under _main in BANK1
   386 ;;
   387 ;;   None.
   388 ;;
   389 ;; Critical Paths under _ISR in BANK1
   390 ;;
   391 ;;   None.
   392 ;;
   393 ;; Critical Paths under _main in BANK3
   394 ;;
   395 ;;   None.
   396 ;;
   397 ;; Critical Paths under _ISR in BANK3
   398 ;;
   399 ;;   None.
   400 ;;
   401 ;; Critical Paths under _main in BANK2
   402 ;;
   403 ;;   None.
   404 ;;
   405 ;; Critical Paths under _ISR in BANK2
   406 ;;
   407 ;;   None.
   408 ;;
   409 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   410 ;;
   411 ;;
   412 ;;Call Graph Tables:
   413 ;;
   414 ;; ---------------------------------------------------------------------------------
   415 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   416 ;; ---------------------------------------------------------------------------------
   417 ;; (0) _main                                                 0     0      0     178
   418 ;;                       _clock_config
   419 ;;                      _timer1_config
   420 ;;            _timer1_interrupt_config
   421 ;;                      _adc_test_init
   422 ;;                           _dac_init
   423 ;;                           _op1_init
   424 ;;                           _op2_init
   425 ;;                          _adc_start
   426 ;;                 _isPermitSampleTime
   427 ;;                       _clrSampeTime
   428 ;;         _process_AD_Converter_Value
   429 ;;             _getAdOriginalCh14Value
   430 ;;               _getAdOriginaCh4Value
   431 ;; ---------------------------------------------------------------------------------
   432 ;; (1) _process_AD_Converter_Value                           0     0      0     134
   433 ;;                  _getAD_ConvertFlag
   434 ;;                  _setAD_ConvertFlag
   435 ;;                          _AD_Sample
   436 ;;                      _adc_test_init
   437 ;;                          _adc_start
   438 ;; ---------------------------------------------------------------------------------
   439 ;; (2) _AD_Sample                                            3     3      0      68
   440 ;;                                              2 BANK0      3     3      0
   441 ;;                 _getAdOriginalValue
   442 ;; ---------------------------------------------------------------------------------
   443 ;; (3) _getAdOriginalValue                                   2     0      2       0
   444 ;;                                              0 BANK0      2     0      2
   445 ;; ---------------------------------------------------------------------------------
   446 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   447 ;;                                              0 BANK0      1     1      0
   448 ;; ---------------------------------------------------------------------------------
   449 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   450 ;; ---------------------------------------------------------------------------------
   451 ;; (1) _getAdOriginaCh4Value                                 2     0      2       0
   452 ;;                                              0 BANK0      2     0      2
   453 ;; ---------------------------------------------------------------------------------
   454 ;; (1) _getAdOriginalCh14Value                               2     0      2       0
   455 ;;                                              0 BANK0      2     0      2
   456 ;; ---------------------------------------------------------------------------------
   457 ;; (1) _clrSampeTime                                         0     0      0       0
   458 ;; ---------------------------------------------------------------------------------
   459 ;; (1) _isPermitSampleTime                                   0     0      0       0
   460 ;; ---------------------------------------------------------------------------------
   461 ;; (2) _adc_start                                            0     0      0       0
   462 ;; ---------------------------------------------------------------------------------
   463 ;; (1) _op2_init                                             0     0      0       0
   464 ;; ---------------------------------------------------------------------------------
   465 ;; (1) _op1_init                                             0     0      0       0
   466 ;; ---------------------------------------------------------------------------------
   467 ;; (1) _dac_init                                             0     0      0       0
   468 ;; ---------------------------------------------------------------------------------
   469 ;; (2) _adc_test_init                                        3     2      1      44
   470 ;;                                              0 BANK0      3     2      1
   471 ;; ---------------------------------------------------------------------------------
   472 ;; (1) _timer1_interrupt_config                              0     0      0       0
   473 ;; ---------------------------------------------------------------------------------
   474 ;; (1) _timer1_config                                        0     0      0       0
   475 ;; ---------------------------------------------------------------------------------
   476 ;; (1) _clock_config                                         0     0      0       0
   477 ;; ---------------------------------------------------------------------------------
   478 ;; Estimated maximum stack depth 3
   479 ;; ---------------------------------------------------------------------------------
   480 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   481 ;; ---------------------------------------------------------------------------------
   482 ;; (4) _ISR                                                  2     2      0      97
   483 ;;                                              4 COMMON     2     2      0
   484 ;;                i1_setAD_ConvertFlag
   485 ;;                            _adc_get
   486 ;; ---------------------------------------------------------------------------------
   487 ;; (5) i1_setAD_ConvertFlag                                  1     1      0      73
   488 ;;                                              0 COMMON     1     1      0
   489 ;; ---------------------------------------------------------------------------------
   490 ;; (5) _adc_get                                              4     2      2      24
   491 ;;                                              0 COMMON     4     2      2
   492 ;; ---------------------------------------------------------------------------------
   493 ;; Estimated maximum stack depth 5
   494 ;; ---------------------------------------------------------------------------------
   495 ;; Call Graph Graphs:
   496 ;; _main (ROOT)
   497 ;;   _clock_config
   498 ;;   _timer1_config
   499 ;;   _timer1_interrupt_config
   500 ;;   _adc_test_init
   501 ;;   _dac_init
   502 ;;   _op1_init
   503 ;;   _op2_init
   504 ;;   _adc_start
   505 ;;   _isPermitSampleTime
   506 ;;   _clrSampeTime
   507 ;;   _process_AD_Converter_Value
   508 ;;     _getAD_ConvertFlag
   509 ;;     _setAD_ConvertFlag
   510 ;;     _AD_Sample
   511 ;;       _getAdOriginalValue
   512 ;;     _adc_test_init
   513 ;;     _adc_start
   514 ;;   _getAdOriginalCh14Value
   515 ;;   _getAdOriginaCh4Value
   516 ;;
   517 ;; _ISR (ROOT)
   518 ;;   i1_setAD_ConvertFlag
   519 ;;   _adc_get
   520 ;;
   521 ;; Address spaces:
   522 ;;Name               Size   Autos  Total    Cost      Usage
   523 ;;BANK3               60      0       0      10        0.0%
   524 ;;BITBANK3            60      0       0       9        0.0%
   525 ;;SFR3                 0      0       0       4        0.0%
   526 ;;BITSFR3              0      0       0       4        0.0%
   527 ;;BANK2               60      0       0      12        0.0%
   528 ;;BITBANK2            60      0       0      11        0.0%
   529 ;;SFR2                 0      0       0       5        0.0%
   530 ;;BITSFR2              0      0       0       5        0.0%
   531 ;;SFR1                 0      0       0       2        0.0%
   532 ;;BITSFR1              0      0       0       2        0.0%
   533 ;;BANK1               50      0       0       8        0.0%
   534 ;;BITBANK1            50      0       0       7        0.0%
   535 ;;CODE                 0      0       0       0        0.0%
   536 ;;DATA                 0      0      3F       6        0.0%
   537 ;;ABS                  0      0      38       3        0.0%
   538 ;;NULL                 0      0       0       0        0.0%
   539 ;;STACK                0      0       7       2        0.0%
   540 ;;BANK0               50      5      2D       5       56.3%
   541 ;;BITBANK0            50      0       0       4        0.0%
   542 ;;SFR0                 0      0       0       1        0.0%
   543 ;;BITSFR0              0      0       0       1        0.0%
   544 ;;COMMON               E      6       B       1       78.6%
   545 ;;BITCOMMON            E      0       0       0        0.0%
   546                           
   547                           
   548 ;; *************** function _main *****************
   549 ;; Defined at:
   550 ;;		line 84 in file "C:\190604\AK7030-OTP\main.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;		None
   553 ;; Auto vars:     Size  Location     Type
   554 ;;		None
   555 ;; Return value:  Size  Location     Type
   556 ;;		None               void
   557 ;; Registers used:
   558 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   559 ;; Tracked objects:
   560 ;;		On entry : 17F/0
   561 ;;		On exit  : 60/0
   562 ;;		Unchanged: FFE00/0
   563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   564 ;;      Params:         0       0       0       0       0
   565 ;;      Locals:         0       0       0       0       0
   566 ;;      Temps:          0       0       0       0       0
   567 ;;      Totals:         0       0       0       0       0
   568 ;;Total ram usage:        0 bytes
   569 ;; Hardware stack levels required when called:    5
   570 ;; This function calls:
   571 ;;		_clock_config
   572 ;;		_timer1_config
   573 ;;		_timer1_interrupt_config
   574 ;;		_adc_test_init
   575 ;;		_dac_init
   576 ;;		_op1_init
   577 ;;		_op2_init
   578 ;;		_adc_start
   579 ;;		_isPermitSampleTime
   580 ;;		_clrSampeTime
   581 ;;		_process_AD_Converter_Value
   582 ;;		_getAdOriginalCh14Value
   583 ;;		_getAdOriginaCh4Value
   584 ;; This function is called by:
   585 ;;		Startup code after reset
   586 ;; This function uses a non-reentrant model
   587 ;;
   588  000D                     _main:	
   589                           
   590                           ;main.c: 85: enum step
   591                           ;main.c: 86: {
   592                           ;main.c: 87: SENSE_PB2_INPUT_VOLTAGE = 0,
   593                           ;main.c: 88: SENSE_PB2_DURATION_ONE_SECOND,
   594                           ;main.c: 89: SENSE_PB2_INPUT_VOLTAGE__AGAIN,
   595                           ;main.c: 90: SENSE_PB2_DURATION__SECOND,
   596                           ;main.c: 91: SET_PA2_VALUE,
   597                           ;main.c: 92: ADC1_VALUE_MEET_CONDITION,
   598                           ;main.c: 93: PROCESS_AD_VALUE,
   599                           ;main.c: 94: WAIT_SET_TIME_FINISHED,
   600                           ;main.c: 95: SET_TIME_BE_FINISHED,
   601                           ;main.c: 96: CHECKING_PULL_OUT_BATTERY,
   602                           ;main.c: 97: CHECKING_INSTALLED_BATTERY,
   603                           ;main.c: 98: };
   604                           ;main.c: 100: enum workTimerType
   605                           ;main.c: 101: {
   606                           
   607                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   608  000D  1683               	bsf	3,5	;RP0=1, select bank1
   609  000E  1005               	bcf	5,0
   610                           
   611                           ;main.c: 119: TRISA1 = 0;
   612  000F  1085               	bcf	5,1
   613                           
   614                           ;main.c: 120: TRISA2 = 0;
   615  0010  1105               	bcf	5,2
   616                           
   617                           ;main.c: 121: TRISA3 = 0;
   618  0011  1185               	bcf	5,3
   619                           
   620                           ;main.c: 122: TRISB0 = 0;
   621  0012  1006               	bcf	6,0
   622                           
   623                           ;main.c: 123: TRISB1 = 0;
   624  0013  1086               	bcf	6,1
   625                           
   626                           ;main.c: 124: TRISA6 = 0;
   627  0014  1305               	bcf	5,6
   628                           
   629                           ;main.c: 125: TRISA7 = 0;
   630  0015  1385               	bcf	5,7
   631                           
   632                           ;main.c: 127: PBOD6 = 1;
   633  0016  1703               	bsf	3,6	;RP1=1, select bank3
   634  0017  1708               	bsf	8,6
   635                           
   636                           ;main.c: 129: PA0 = 0;
   637  0018  1283               	bcf	3,5	;RP0=0, select bank0
   638  0019  1303               	bcf	3,6	;RP1=0, select bank0
   639  001A  1005               	bcf	5,0
   640                           
   641                           ;main.c: 130: PA1 = 0;
   642  001B  1085               	bcf	5,1
   643                           
   644                           ;main.c: 131: PA2 = 0;
   645  001C  1105               	bcf	5,2
   646                           
   647                           ;main.c: 132: PA3 = 1;
   648  001D  1585               	bsf	5,3
   649                           
   650                           ;main.c: 133: PB0 = 0;
   651  001E  1006               	bcf	6,0
   652                           
   653                           ;main.c: 134: PB1 = 0;
   654  001F  1086               	bcf	6,1
   655                           
   656                           ;main.c: 135: PA6 = 0;
   657  0020  1305               	bcf	5,6
   658                           
   659                           ;main.c: 136: PA7 = 0;
   660  0021  1385               	bcf	5,7
   661                           
   662                           ;main.c: 138: TRISB2 = 1;
   663  0022  1683               	bsf	3,5	;RP0=1, select bank1
   664  0023  1506               	bsf	6,2
   665                           
   666                           ;main.c: 140: TRISB7 = 1;
   667  0024  1786               	bsf	6,7
   668                           
   669                           ;main.c: 141: TRISB4 = 1;
   670  0025  1606               	bsf	6,4
   671                           
   672                           ;main.c: 143: clock_config();
   673  0026  118A  2321  118A   	fcall	_clock_config
   674                           
   675                           ;main.c: 144: timer1_config();
   676  0029  118A  2307  118A   	fcall	_timer1_config
   677                           
   678                           ;main.c: 145: timer1_interrupt_config();
   679  002C  118A  233D  118A   	fcall	_timer1_interrupt_config
   680                           
   681                           ;main.c: 147: adc_test_init(14,3);
   682  002F  3003               	movlw	3
   683  0030  1283               	bcf	3,5	;RP0=0, select bank0
   684  0031  00C7               	movwf	?_adc_test_init
   685  0032  300E               	movlw	14
   686  0033  118A  224E  118A   	fcall	_adc_test_init
   687                           
   688                           ;main.c: 149: dac_init();
   689  0036  118A  2338  118A   	fcall	_dac_init
   690                           
   691                           ;main.c: 150: op1_init();
   692  0039  118A  22FC  118A   	fcall	_op1_init
   693                           
   694                           ;main.c: 151: op2_init();
   695  003C  118A  2319  118A   	fcall	_op2_init
   696                           
   697                           ;main.c: 154: adc_start();
   698  003F  118A  2263  118A   	fcall	_adc_start
   699  0042                     l3463:	
   700  0042  0064               	clrwdt	;#
   701                           
   702                           ;main.c: 168: if(isPermitSampleTime())
   703  0043  118A  2333  118A   	fcall	_isPermitSampleTime
   704  0046  3A00               	xorlw	0
   705  0047  1903               	skipnz
   706  0048  2842               	goto	l3463
   707                           
   708                           ;main.c: 169: {
   709                           ;main.c: 170: clrSampeTime();
   710  0049  118A  2340  118A   	fcall	_clrSampeTime
   711                           
   712                           ;main.c: 171: process_AD_Converter_Value();
   713  004C  118A  21D1  118A   	fcall	_process_AD_Converter_Value
   714                           
   715                           ;main.c: 173: switch(AD_sample_process_step)
   716  004F  29C0               	goto	l3779
   717  0050                     l3471:	
   718                           
   719                           ;main.c: 176: {
   720                           ;main.c: 177: static unsigned ucTimerCount = 0;
   721                           ;main.c: 178: if(getAdOriginalCh14Value() > 1951)
   722  0050  118A  232E  118A   	fcall	_getAdOriginalCh14Value
   723  0053  3007               	movlw	7
   724  0054  0248               	subwf	?_getAdOriginalCh14Value+1,w
   725  0055  30A0               	movlw	160
   726  0056  1903               	skipnz
   727  0057  0247               	subwf	?_getAdOriginalCh14Value,w
   728  0058  1C03               	skipc
   729  0059  285E               	goto	l3475
   730                           
   731                           ;main.c: 179: {
   732                           ;main.c: 180: ucTimerCount++;
   733  005A  0AB8               	incf	main@ucTimerCount,f
   734  005B  1903               	skipnz
   735  005C  0AB9               	incf	main@ucTimerCount+1,f
   736                           
   737                           ;main.c: 181: }
   738  005D  2860               	goto	l3477
   739  005E                     l3475:	
   740                           
   741                           ;main.c: 182: else
   742                           ;main.c: 183: ucTimerCount = 0;
   743  005E  01B8               	clrf	main@ucTimerCount
   744  005F  01B9               	clrf	main@ucTimerCount+1
   745  0060                     l3477:	
   746                           
   747                           ;main.c: 185: if(ucTimerCount >= 10)
   748  0060  3000               	movlw	0
   749  0061  0239               	subwf	main@ucTimerCount+1,w
   750  0062  300A               	movlw	10
   751  0063  1903               	skipnz
   752  0064  0238               	subwf	main@ucTimerCount,w
   753  0065  1C03               	skipc
   754  0066  2842               	goto	l3463
   755  0067                     l3479:	
   756                           
   757                           ;main.c: 186: AD_sample_process_step++;
   758  0067  0ABB               	incf	main@AD_sample_process_step,f
   759  0068  2842               	goto	l3463
   760  0069                     l687:	
   761                           ;main.c: 189: }
   762                           ;main.c: 191: case 1:
   763                           
   764                           
   765                           ;main.c: 192: {
   766                           ;main.c: 194: PA6 = 1;
   767  0069  1705               	bsf	5,6
   768  006A  2867               	goto	l3479
   769  006B                     l3483:	
   770                           
   771                           ;main.c: 201: {
   772                           ;main.c: 203: if(getAdOriginaCh4Value() < 1911)
   773  006B  118A  2329  118A   	fcall	_getAdOriginaCh4Value
   774  006E  3007               	movlw	7
   775  006F  0248               	subwf	?_getAdOriginaCh4Value+1,w
   776  0070  3077               	movlw	119
   777  0071  1903               	skipnz
   778  0072  0247               	subwf	?_getAdOriginaCh4Value,w
   779  0073  1803               	skipnc
   780  0074  2877               	goto	l3487
   781                           
   782                           ;main.c: 204: {
   783                           ;main.c: 205: ucChannel4Type = 0;
   784  0075  01BC               	clrf	main@ucChannel4Type
   785                           
   786                           ;main.c: 207: }
   787  0076  2867               	goto	l3479
   788  0077                     l3487:	
   789                           
   790                           ;main.c: 208: else if(getAdOriginaCh4Value() < 2067)
   791  0077  118A  2329  118A   	fcall	_getAdOriginaCh4Value
   792  007A  3008               	movlw	8
   793  007B  0248               	subwf	?_getAdOriginaCh4Value+1,w
   794  007C  3013               	movlw	19
   795  007D  1903               	skipnz
   796  007E  0247               	subwf	?_getAdOriginaCh4Value,w
   797  007F  1803               	skipnc
   798  0080  2884               	goto	l3491
   799                           
   800                           ;main.c: 209: {
   801                           ;main.c: 210: ucChannel4Type = 1;
   802  0081  01BC               	clrf	main@ucChannel4Type
   803  0082  0ABC               	incf	main@ucChannel4Type,f
   804                           
   805                           ;main.c: 211: }
   806  0083  2867               	goto	l3479
   807  0084                     l3491:	
   808                           
   809                           ;main.c: 212: else if(getAdOriginaCh4Value() < 2204)
   810  0084  118A  2329  118A   	fcall	_getAdOriginaCh4Value
   811  0087  3008               	movlw	8
   812  0088  0248               	subwf	?_getAdOriginaCh4Value+1,w
   813  0089  309C               	movlw	156
   814  008A  1903               	skipnz
   815  008B  0247               	subwf	?_getAdOriginaCh4Value,w
   816  008C  1803               	skipnc
   817  008D  2890               	goto	l3495
   818                           
   819                           ;main.c: 213: {
   820                           ;main.c: 214: ucChannel4Type = 2;
   821  008E  3002               	movlw	2
   822  008F  289D               	goto	L2
   823  0090                     l3495:	
   824                           ;main.c: 215: }
   825                           
   826                           
   827                           ;main.c: 216: else if(getAdOriginaCh4Value() < 2340)
   828  0090  118A  2329  118A   	fcall	_getAdOriginaCh4Value
   829  0093  3009               	movlw	9
   830  0094  0248               	subwf	?_getAdOriginaCh4Value+1,w
   831  0095  3024               	movlw	36
   832  0096  1903               	skipnz
   833  0097  0247               	subwf	?_getAdOriginaCh4Value,w
   834  0098  1803               	skipnc
   835  0099  289C               	goto	l3499
   836                           
   837                           ;main.c: 217: {
   838                           ;main.c: 218: ucChannel4Type = 3;
   839  009A  3003               	movlw	3
   840  009B  289D               	goto	L2
   841  009C                     l3499:	
   842                           ;main.c: 219: }
   843                           
   844                           
   845                           ;main.c: 220: else
   846                           ;main.c: 221: {
   847                           ;main.c: 222: ucChannel4Type = 4;
   848  009C  3004               	movlw	4
   849  009D                     L2:	
   850  009D  00BC               	movwf	main@ucChannel4Type
   851  009E  2867               	goto	l3479
   852  009F                     l705:	
   853                           ;main.c: 240: {
   854                           ;main.c: 241: case 0:
   855                           
   856                           
   857                           ;main.c: 242: {
   858                           ;main.c: 243: PA2 = 1;
   859  009F  1505               	bsf	5,2
   860  00A0                     l3503:	
   861                           
   862                           ;main.c: 244: ucLoaderStep++;
   863  00A0  0ABD               	incf	main@ucLoaderStep,f
   864                           
   865                           ;main.c: 245: break;
   866  00A1  2842               	goto	l3463
   867  00A2                     l3505:	
   868                           
   869                           ;main.c: 249: {
   870                           ;main.c: 250: if(ucTimerDelay >= 5)
   871  00A2  3005               	movlw	5
   872  00A3  0242               	subwf	main@ucTimerDelay,w
   873  00A4  1C03               	skipc
   874  00A5  28A9               	goto	l3513
   875                           
   876                           ;main.c: 251: {
   877                           ;main.c: 252: PA1 = 1;
   878  00A6  1485               	bsf	5,1
   879  00A7                     l3509:	
   880                           
   881                           ;main.c: 253: ucTimerDelay = 0;
   882  00A7  01C2               	clrf	main@ucTimerDelay
   883  00A8  28A0               	goto	l3503
   884  00A9                     l3513:	
   885                           
   886                           ;main.c: 256: else
   887                           ;main.c: 257: ucTimerDelay++;
   888  00A9  0AC2               	incf	main@ucTimerDelay,f
   889  00AA  2842               	goto	l3463
   890  00AB                     l3515:	
   891                           
   892                           ;main.c: 262: {
   893                           ;main.c: 263: if(ucTimerDelay >= 5)
   894  00AB  3005               	movlw	5
   895  00AC  0242               	subwf	main@ucTimerDelay,w
   896  00AD  1C03               	skipc
   897  00AE  28A9               	goto	l3513
   898                           
   899                           ;main.c: 264: {
   900                           ;main.c: 265: PA0= 1;
   901  00AF  1405               	bsf	5,0
   902  00B0  28A7               	goto	l3509
   903  00B1                     l3525:	
   904                           
   905                           ;main.c: 277: {
   906                           ;main.c: 278: if(ucTimerDelay >= 5)
   907  00B1  3005               	movlw	5
   908  00B2  0242               	subwf	main@ucTimerDelay,w
   909  00B3  1C03               	skipc
   910  00B4  28A9               	goto	l3513
   911                           
   912                           ;main.c: 279: {
   913                           ;main.c: 280: PB0 = 1;
   914  00B5  1406               	bsf	6,0
   915  00B6  28A7               	goto	l3509
   916  00B7                     l3535:	
   917                           
   918                           ;main.c: 290: {
   919                           ;main.c: 291: if(ucTimerDelay >= 5)
   920  00B7  3005               	movlw	5
   921  00B8  0242               	subwf	main@ucTimerDelay,w
   922  00B9  1C03               	skipc
   923  00BA  28A9               	goto	l3513
   924                           
   925                           ;main.c: 292: {
   926                           ;main.c: 293: PB1 = 1;
   927  00BB  1486               	bsf	6,1
   928  00BC  28A7               	goto	l3509
   929  00BD                     l3545:	
   930                           
   931                           ;main.c: 303: {
   932                           ;main.c: 304: if(ucTimerDelay >= 5)
   933  00BD  3005               	movlw	5
   934  00BE  0242               	subwf	main@ucTimerDelay,w
   935  00BF  1C03               	skipc
   936  00C0  28A9               	goto	l3513
   937                           
   938                           ;main.c: 305: {
   939                           ;main.c: 306: PA2 = 0;
   940  00C1  1105               	bcf	5,2
   941                           
   942                           ;main.c: 307: PA1 = 0;
   943  00C2  1085               	bcf	5,1
   944                           
   945                           ;main.c: 308: PA0 = 0;
   946  00C3  1005               	bcf	5,0
   947                           
   948                           ;main.c: 309: PB0 = 0;
   949  00C4  1006               	bcf	6,0
   950                           
   951                           ;main.c: 310: PB1 = 0;
   952  00C5  1086               	bcf	6,1
   953  00C6  28A7               	goto	l3509
   954  00C7                     l3555:	
   955                           
   956                           ;main.c: 320: {
   957                           ;main.c: 321: if(ucTimerDelay >= 5)
   958  00C7  3005               	movlw	5
   959  00C8  0242               	subwf	main@ucTimerDelay,w
   960  00C9  1C03               	skipc
   961  00CA  28A9               	goto	l3513
   962  00CB  3002               	movlw	2
   963                           
   964                           ;main.c: 322: {
   965                           ;main.c: 323: ucTimerDelay = 0;
   966  00CC  01C2               	clrf	main@ucTimerDelay
   967                           
   968                           ;main.c: 324: AD_sample_process_step = 2;
   969  00CD  00BB               	movwf	main@AD_sample_process_step
   970                           
   971                           ;main.c: 325: ucLoaderStep = 0;
   972  00CE  01BD               	clrf	main@ucLoaderStep
   973                           
   974                           ;main.c: 326: }
   975  00CF  2842               	goto	l3463
   976  00D0                     l3567:	
   977  00D0  083D               	movf	main@ucLoaderStep,w
   978                           
   979                           ; Switch size 1, requested type "space"
   980                           ; Number of cases is 7, Range of values is 0 to 6
   981                           ; switch strategies available:
   982                           ; Name         Instructions Cycles
   983                           ; direct_byte           21     7 (fixed)
   984                           ; simple_byte           22    12 (average)
   985                           ; jumptable            260     6 (fixed)
   986                           ; rangetable            11     6 (fixed)
   987                           ; spacedrange           20     9 (fixed)
   988                           ; locatedrange           7     3 (fixed)
   989                           ;	Chosen strategy is direct_byte
   990  00D1  0084               	movwf	4
   991  00D2  3007               	movlw	7
   992  00D3  0204               	subwf	4,w
   993  00D4  1803               	skipnc
   994  00D5  2842               	goto	l3463
   995  00D6  3002               	movlw	high S3961
   996  00D7  008A               	movwf	10
   997  00D8  1003               	clrc
   998  00D9  0D04               	rlf	4,w
   999  00DA  3ED4               	addlw	low S3961
  1000  00DB  0082               	movwf	2
  1001  00DC                     l733:	
  1002                           ;main.c: 345: {
  1003                           ;main.c: 346: case 0:
  1004                           
  1005                           
  1006                           ;main.c: 347: {
  1007                           ;main.c: 348: PA2 = 1;
  1008  00DC  1505               	bsf	5,2
  1009  00DD                     l3569:	
  1010                           
  1011                           ;main.c: 349: ucLoaderStep1++;
  1012  00DD  0ABE               	incf	main@ucLoaderStep1,f
  1013                           
  1014                           ;main.c: 350: break;
  1015  00DE  2842               	goto	l3463
  1016  00DF                     l3571:	
  1017                           
  1018                           ;main.c: 354: {
  1019                           ;main.c: 355: if(ucTimerDelay1 >= 5)
  1020  00DF  3005               	movlw	5
  1021  00E0  0243               	subwf	main@ucTimerDelay1,w
  1022  00E1  1C03               	skipc
  1023  00E2  28E6               	goto	l3579
  1024                           
  1025                           ;main.c: 356: {
  1026                           ;main.c: 357: PA1 = 1;
  1027  00E3  1485               	bsf	5,1
  1028  00E4                     l3575:	
  1029                           
  1030                           ;main.c: 358: ucTimerDelay1 = 0;
  1031  00E4  01C3               	clrf	main@ucTimerDelay1
  1032  00E5  28DD               	goto	l3569
  1033  00E6                     l3579:	
  1034                           
  1035                           ;main.c: 361: else
  1036                           ;main.c: 362: ucTimerDelay1++;
  1037  00E6  0AC3               	incf	main@ucTimerDelay1,f
  1038  00E7  2842               	goto	l3463
  1039  00E8                     l3581:	
  1040                           
  1041                           ;main.c: 367: {
  1042                           ;main.c: 368: if(ucTimerDelay1 >= 5)
  1043  00E8  3005               	movlw	5
  1044  00E9  0243               	subwf	main@ucTimerDelay1,w
  1045  00EA  1C03               	skipc
  1046  00EB  28E6               	goto	l3579
  1047                           
  1048                           ;main.c: 369: {
  1049                           ;main.c: 370: PA0 = 1;
  1050  00EC  1405               	bsf	5,0
  1051  00ED  28E4               	goto	l3575
  1052  00EE                     l3591:	
  1053                           
  1054                           ;main.c: 380: {
  1055                           ;main.c: 381: if(ucTimerDelay1 >= 5)
  1056  00EE  3005               	movlw	5
  1057  00EF  0243               	subwf	main@ucTimerDelay1,w
  1058  00F0  1C03               	skipc
  1059  00F1  28E6               	goto	l3579
  1060                           
  1061                           ;main.c: 382: {
  1062                           ;main.c: 383: PB0 = 1;
  1063  00F2  1406               	bsf	6,0
  1064  00F3  28E4               	goto	l3575
  1065  00F4                     l3601:	
  1066                           
  1067                           ;main.c: 393: {
  1068                           ;main.c: 394: if(ucTimerDelay1 >= 5)
  1069  00F4  3005               	movlw	5
  1070  00F5  0243               	subwf	main@ucTimerDelay1,w
  1071  00F6  1C03               	skipc
  1072  00F7  28E6               	goto	l3579
  1073                           
  1074                           ;main.c: 395: {
  1075                           ;main.c: 396: PB1 = 1;
  1076  00F8  1486               	bsf	6,1
  1077  00F9  28E4               	goto	l3575
  1078  00FA                     l3611:	
  1079                           
  1080                           ;main.c: 406: {
  1081                           ;main.c: 407: if(ucTimerDelay1 >= 5)
  1082  00FA  3005               	movlw	5
  1083  00FB  0243               	subwf	main@ucTimerDelay1,w
  1084  00FC  1C03               	skipc
  1085  00FD  28E6               	goto	l3579
  1086                           
  1087                           ;main.c: 408: {
  1088                           ;main.c: 409: PA1 = 0;
  1089  00FE  1085               	bcf	5,1
  1090                           
  1091                           ;main.c: 410: PA0 = 0;
  1092  00FF  1005               	bcf	5,0
  1093                           
  1094                           ;main.c: 411: PB0 = 0;
  1095  0100  1006               	bcf	6,0
  1096                           
  1097                           ;main.c: 412: PB1 = 0;
  1098  0101  1086               	bcf	6,1
  1099  0102  28E4               	goto	l3575
  1100  0103                     l3621:	
  1101                           
  1102                           ;main.c: 422: {
  1103                           ;main.c: 423: if(ucTimerDelay1 >= 5)
  1104  0103  3005               	movlw	5
  1105  0104  0243               	subwf	main@ucTimerDelay1,w
  1106  0105  1C03               	skipc
  1107  0106  28E6               	goto	l3579
  1108  0107  3002               	movlw	2
  1109                           
  1110                           ;main.c: 424: {
  1111                           ;main.c: 425: ucTimerDelay1 = 0;
  1112  0108  01C3               	clrf	main@ucTimerDelay1
  1113                           
  1114                           ;main.c: 426: AD_sample_process_step = 2;
  1115  0109  00BB               	movwf	main@AD_sample_process_step
  1116                           
  1117                           ;main.c: 427: ucLoaderStep1 = 0;
  1118  010A  01BE               	clrf	main@ucLoaderStep1
  1119                           
  1120                           ;main.c: 428: }
  1121  010B  2842               	goto	l3463
  1122  010C                     l3633:	
  1123  010C  083E               	movf	main@ucLoaderStep1,w
  1124                           
  1125                           ; Switch size 1, requested type "space"
  1126                           ; Number of cases is 7, Range of values is 0 to 6
  1127                           ; switch strategies available:
  1128                           ; Name         Instructions Cycles
  1129                           ; direct_byte           21     7 (fixed)
  1130                           ; simple_byte           22    12 (average)
  1131                           ; jumptable            260     6 (fixed)
  1132                           ; rangetable            11     6 (fixed)
  1133                           ; spacedrange           20     9 (fixed)
  1134                           ; locatedrange           7     3 (fixed)
  1135                           ;	Chosen strategy is direct_byte
  1136  010D  0084               	movwf	4
  1137  010E  3007               	movlw	7
  1138  010F  0204               	subwf	4,w
  1139  0110  1803               	skipnc
  1140  0111  2842               	goto	l3463
  1141  0112  3002               	movlw	high S3963
  1142  0113  008A               	movwf	10
  1143  0114  1003               	clrc
  1144  0115  0D04               	rlf	4,w
  1145  0116  3EE2               	addlw	low S3963
  1146  0117  0082               	movwf	2
  1147  0118                     l760:	
  1148                           ;main.c: 448: {
  1149                           ;main.c: 449: case 0:
  1150                           
  1151                           
  1152                           ;main.c: 450: {
  1153                           ;main.c: 451: PA2 = 1;
  1154  0118  1505               	bsf	5,2
  1155                           
  1156                           ;main.c: 452: PA1 = 1;
  1157  0119  1485               	bsf	5,1
  1158  011A                     l3635:	
  1159                           
  1160                           ;main.c: 453: ucLoaderStep2++;
  1161  011A  0ABF               	incf	main@ucLoaderStep2,f
  1162                           
  1163                           ;main.c: 454: break;
  1164  011B  2842               	goto	l3463
  1165  011C                     l3637:	
  1166                           
  1167                           ;main.c: 458: {
  1168                           ;main.c: 459: if(ucTimerDelay2 >= 5)
  1169  011C  3005               	movlw	5
  1170  011D  0244               	subwf	main@ucTimerDelay2,w
  1171  011E  1C03               	skipc
  1172  011F  2923               	goto	l3645
  1173                           
  1174                           ;main.c: 460: {
  1175                           ;main.c: 461: PA0 = 1;
  1176  0120  1405               	bsf	5,0
  1177  0121                     l3641:	
  1178                           
  1179                           ;main.c: 462: ucTimerDelay2 = 0;
  1180  0121  01C4               	clrf	main@ucTimerDelay2
  1181  0122  291A               	goto	l3635
  1182  0123                     l3645:	
  1183                           
  1184                           ;main.c: 465: else
  1185                           ;main.c: 466: ucTimerDelay2++;
  1186  0123  0AC4               	incf	main@ucTimerDelay2,f
  1187  0124  2842               	goto	l3463
  1188  0125                     l3647:	
  1189                           
  1190                           ;main.c: 471: {
  1191                           ;main.c: 472: if(ucTimerDelay2 >= 5)
  1192  0125  3005               	movlw	5
  1193  0126  0244               	subwf	main@ucTimerDelay2,w
  1194  0127  1C03               	skipc
  1195  0128  2923               	goto	l3645
  1196                           
  1197                           ;main.c: 473: {
  1198                           ;main.c: 474: PB0 = 1;
  1199  0129  1406               	bsf	6,0
  1200  012A  2921               	goto	l3641
  1201  012B                     l3657:	
  1202                           
  1203                           ;main.c: 484: {
  1204                           ;main.c: 485: if(ucTimerDelay2 >= 5)
  1205  012B  3005               	movlw	5
  1206  012C  0244               	subwf	main@ucTimerDelay2,w
  1207  012D  1C03               	skipc
  1208  012E  2923               	goto	l3645
  1209                           
  1210                           ;main.c: 486: {
  1211                           ;main.c: 487: PB1 = 1;
  1212  012F  1486               	bsf	6,1
  1213  0130  2921               	goto	l3641
  1214  0131                     l3667:	
  1215                           
  1216                           ;main.c: 497: {
  1217                           ;main.c: 498: if(ucTimerDelay2 >= 5)
  1218  0131  3005               	movlw	5
  1219  0132  0244               	subwf	main@ucTimerDelay2,w
  1220  0133  1C03               	skipc
  1221  0134  2923               	goto	l3645
  1222                           
  1223                           ;main.c: 499: {
  1224                           ;main.c: 501: PA0 = 0;
  1225  0135  1005               	bcf	5,0
  1226                           
  1227                           ;main.c: 502: PB0 = 0;
  1228  0136  1006               	bcf	6,0
  1229                           
  1230                           ;main.c: 503: PB1 = 0;
  1231  0137  1086               	bcf	6,1
  1232  0138  2921               	goto	l3641
  1233  0139                     l3677:	
  1234                           
  1235                           ;main.c: 513: {
  1236                           ;main.c: 514: if(ucTimerDelay2 >= 5)
  1237  0139  3005               	movlw	5
  1238  013A  0244               	subwf	main@ucTimerDelay2,w
  1239  013B  1C03               	skipc
  1240  013C  2923               	goto	l3645
  1241  013D  3002               	movlw	2
  1242                           
  1243                           ;main.c: 515: {
  1244                           ;main.c: 516: ucTimerDelay2 = 0;
  1245  013E  01C4               	clrf	main@ucTimerDelay2
  1246                           
  1247                           ;main.c: 517: AD_sample_process_step = 2;
  1248  013F  00BB               	movwf	main@AD_sample_process_step
  1249                           
  1250                           ;main.c: 518: ucLoaderStep2 = 0;
  1251  0140  01BF               	clrf	main@ucLoaderStep2
  1252                           
  1253                           ;main.c: 519: }
  1254  0141  2842               	goto	l3463
  1255  0142                     l3689:	
  1256  0142  083F               	movf	main@ucLoaderStep2,w
  1257                           
  1258                           ; Switch size 1, requested type "space"
  1259                           ; Number of cases is 6, Range of values is 0 to 5
  1260                           ; switch strategies available:
  1261                           ; Name         Instructions Cycles
  1262                           ; direct_byte           19     7 (fixed)
  1263                           ; simple_byte           19    10 (average)
  1264                           ; jumptable            260     6 (fixed)
  1265                           ; rangetable            10     6 (fixed)
  1266                           ; spacedrange           18     9 (fixed)
  1267                           ; locatedrange           6     3 (fixed)
  1268                           ;	Chosen strategy is direct_byte
  1269  0143  0084               	movwf	4
  1270  0144  3006               	movlw	6
  1271  0145  0204               	subwf	4,w
  1272  0146  1803               	skipnc
  1273  0147  2842               	goto	l3463
  1274  0148  3002               	movlw	high S3965
  1275  0149  008A               	movwf	10
  1276  014A  1003               	clrc
  1277  014B  0D04               	rlf	4,w
  1278  014C  3EF0               	addlw	low S3965
  1279  014D  0082               	movwf	2
  1280  014E                     l784:	
  1281                           ;main.c: 539: {
  1282                           ;main.c: 540: case 0:
  1283                           
  1284                           
  1285                           ;main.c: 541: {
  1286                           ;main.c: 542: PA2 = 1;
  1287  014E  1505               	bsf	5,2
  1288                           
  1289                           ;main.c: 543: PA1 = 1;
  1290  014F  1485               	bsf	5,1
  1291                           
  1292                           ;main.c: 544: PA0 = 1;
  1293  0150  1405               	bsf	5,0
  1294  0151                     l3691:	
  1295                           
  1296                           ;main.c: 545: ucLoaderStep3++;
  1297  0151  0AC0               	incf	main@ucLoaderStep3,f
  1298                           
  1299                           ;main.c: 546: break;
  1300  0152  2842               	goto	l3463
  1301  0153                     l3693:	
  1302                           
  1303                           ;main.c: 550: {
  1304                           ;main.c: 551: if(ucTimerDelay3 >= 5)
  1305  0153  3005               	movlw	5
  1306  0154  0245               	subwf	main@ucTimerDelay3,w
  1307  0155  1C03               	skipc
  1308  0156  295A               	goto	l3701
  1309                           
  1310                           ;main.c: 552: {
  1311                           ;main.c: 553: PB0 = 1;
  1312  0157  1406               	bsf	6,0
  1313  0158                     l3697:	
  1314                           
  1315                           ;main.c: 554: ucTimerDelay3 = 0;
  1316  0158  01C5               	clrf	main@ucTimerDelay3
  1317  0159  2951               	goto	l3691
  1318  015A                     l3701:	
  1319                           
  1320                           ;main.c: 557: else
  1321                           ;main.c: 558: ucTimerDelay3++;
  1322  015A  0AC5               	incf	main@ucTimerDelay3,f
  1323  015B  2842               	goto	l3463
  1324  015C                     l3703:	
  1325                           
  1326                           ;main.c: 563: {
  1327                           ;main.c: 564: if(ucTimerDelay3 >= 5)
  1328  015C  3005               	movlw	5
  1329  015D  0245               	subwf	main@ucTimerDelay3,w
  1330  015E  1C03               	skipc
  1331  015F  295A               	goto	l3701
  1332                           
  1333                           ;main.c: 565: {
  1334                           ;main.c: 566: PB1 = 1;
  1335  0160  1486               	bsf	6,1
  1336  0161  2958               	goto	l3697
  1337  0162                     l3713:	
  1338                           
  1339                           ;main.c: 577: {
  1340                           ;main.c: 578: if(ucTimerDelay3 >= 5)
  1341  0162  3005               	movlw	5
  1342  0163  0245               	subwf	main@ucTimerDelay3,w
  1343  0164  1C03               	skipc
  1344  0165  295A               	goto	l3701
  1345                           
  1346                           ;main.c: 579: {
  1347                           ;main.c: 581: PB0 = 0;
  1348  0166  1006               	bcf	6,0
  1349                           
  1350                           ;main.c: 582: PB1 = 0;
  1351  0167  1086               	bcf	6,1
  1352  0168  2958               	goto	l3697
  1353  0169                     l3723:	
  1354                           
  1355                           ;main.c: 592: {
  1356                           ;main.c: 593: if(ucTimerDelay3 >= 5)
  1357  0169  3005               	movlw	5
  1358  016A  0245               	subwf	main@ucTimerDelay3,w
  1359  016B  1C03               	skipc
  1360  016C  295A               	goto	l3701
  1361  016D  3002               	movlw	2
  1362                           
  1363                           ;main.c: 594: {
  1364                           ;main.c: 595: ucTimerDelay3 = 0;
  1365  016E  01C5               	clrf	main@ucTimerDelay3
  1366                           
  1367                           ;main.c: 596: AD_sample_process_step = 2;
  1368  016F  00BB               	movwf	main@AD_sample_process_step
  1369                           
  1370                           ;main.c: 597: ucLoaderStep3 = 0;
  1371  0170  01C0               	clrf	main@ucLoaderStep3
  1372                           
  1373                           ;main.c: 598: }
  1374  0171  2842               	goto	l3463
  1375  0172                     l3735:	
  1376  0172  0840               	movf	main@ucLoaderStep3,w
  1377                           
  1378                           ; Switch size 1, requested type "space"
  1379                           ; Number of cases is 5, Range of values is 0 to 4
  1380                           ; switch strategies available:
  1381                           ; Name         Instructions Cycles
  1382                           ; simple_byte           16     9 (average)
  1383                           ; direct_byte           17     7 (fixed)
  1384                           ; jumptable            260     6 (fixed)
  1385                           ; rangetable             9     6 (fixed)
  1386                           ; spacedrange           16     9 (fixed)
  1387                           ; locatedrange           5     3 (fixed)
  1388                           ;	Chosen strategy is simple_byte
  1389  0173  3A00               	xorlw	0	; case 0
  1390  0174  1903               	skipnz
  1391  0175  294E               	goto	l784
  1392  0176  3A01               	xorlw	1	; case 1
  1393  0177  1903               	skipnz
  1394  0178  2953               	goto	l3693
  1395  0179  3A03               	xorlw	3	; case 2
  1396  017A  1903               	skipnz
  1397  017B  295C               	goto	l3703
  1398  017C  3A01               	xorlw	1	; case 3
  1399  017D  1903               	skipnz
  1400  017E  2962               	goto	l3713
  1401  017F  3A07               	xorlw	7	; case 4
  1402  0180  1903               	skipnz
  1403  0181  2969               	goto	l3723
  1404  0182  29D0               	goto	l678
  1405  0183                     l805:	
  1406                           ;main.c: 618: {
  1407                           ;main.c: 619: case 0:
  1408                           
  1409                           
  1410                           ;main.c: 620: {
  1411                           ;main.c: 621: PA2 = 1;
  1412  0183  1505               	bsf	5,2
  1413                           
  1414                           ;main.c: 622: PA1 = 1;
  1415  0184  1485               	bsf	5,1
  1416                           
  1417                           ;main.c: 623: PA0 = 1;
  1418  0185  1405               	bsf	5,0
  1419                           
  1420                           ;main.c: 624: PB0 = 1;
  1421  0186  1406               	bsf	6,0
  1422  0187                     l3737:	
  1423                           
  1424                           ;main.c: 625: ucLoaderStep4++;
  1425  0187  0AC1               	incf	main@ucLoaderStep4,f
  1426                           
  1427                           ;main.c: 626: break;
  1428  0188  2842               	goto	l3463
  1429  0189                     l3739:	
  1430                           
  1431                           ;main.c: 630: {
  1432                           ;main.c: 631: if(ucTimerDelay4 >= 5)
  1433  0189  3005               	movlw	5
  1434  018A  0246               	subwf	main@ucTimerDelay4,w
  1435  018B  1C03               	skipc
  1436  018C  2990               	goto	l3747
  1437                           
  1438                           ;main.c: 632: {
  1439                           ;main.c: 633: PB1 = 1;
  1440  018D  1486               	bsf	6,1
  1441  018E                     l3743:	
  1442                           
  1443                           ;main.c: 634: ucTimerDelay4 = 0;
  1444  018E  01C6               	clrf	main@ucTimerDelay4
  1445  018F  2987               	goto	l3737
  1446  0190                     l3747:	
  1447                           
  1448                           ;main.c: 637: else
  1449                           ;main.c: 638: ucTimerDelay4++;
  1450  0190  0AC6               	incf	main@ucTimerDelay4,f
  1451  0191  2842               	goto	l3463
  1452  0192                     l3749:	
  1453                           
  1454                           ;main.c: 643: {
  1455                           ;main.c: 644: if(ucTimerDelay4 >= 5)
  1456  0192  3005               	movlw	5
  1457  0193  0246               	subwf	main@ucTimerDelay4,w
  1458  0194  1C03               	skipc
  1459  0195  2990               	goto	l3747
  1460                           
  1461                           ;main.c: 645: {
  1462                           ;main.c: 646: PB1 = 0;
  1463  0196  1086               	bcf	6,1
  1464  0197  298E               	goto	l3743
  1465  0198                     l3759:	
  1466                           
  1467                           ;main.c: 656: {
  1468                           ;main.c: 657: if(ucTimerDelay4 >= 5)
  1469  0198  3005               	movlw	5
  1470  0199  0246               	subwf	main@ucTimerDelay4,w
  1471  019A  1C03               	skipc
  1472  019B  2990               	goto	l3747
  1473  019C  3002               	movlw	2
  1474                           
  1475                           ;main.c: 658: {
  1476                           ;main.c: 659: ucTimerDelay4 = 0;
  1477  019D  01C6               	clrf	main@ucTimerDelay4
  1478                           
  1479                           ;main.c: 660: AD_sample_process_step = 2;
  1480  019E  00BB               	movwf	main@AD_sample_process_step
  1481                           
  1482                           ;main.c: 661: ucLoaderStep4 = 0;
  1483  019F  01C1               	clrf	main@ucLoaderStep4
  1484                           
  1485                           ;main.c: 662: }
  1486  01A0  2842               	goto	l3463
  1487  01A1                     l3771:	
  1488  01A1  0841               	movf	main@ucLoaderStep4,w
  1489                           
  1490                           ; Switch size 1, requested type "space"
  1491                           ; Number of cases is 4, Range of values is 0 to 3
  1492                           ; switch strategies available:
  1493                           ; Name         Instructions Cycles
  1494                           ; simple_byte           13     7 (average)
  1495                           ; direct_byte           15     7 (fixed)
  1496                           ; jumptable            260     6 (fixed)
  1497                           ; rangetable             8     6 (fixed)
  1498                           ; spacedrange           14     9 (fixed)
  1499                           ; locatedrange           4     3 (fixed)
  1500                           ;	Chosen strategy is simple_byte
  1501  01A2  3A00               	xorlw	0	; case 0
  1502  01A3  1903               	skipnz
  1503  01A4  2983               	goto	l805
  1504  01A5  3A01               	xorlw	1	; case 1
  1505  01A6  1903               	skipnz
  1506  01A7  2989               	goto	l3739
  1507  01A8  3A03               	xorlw	3	; case 2
  1508  01A9  1903               	skipnz
  1509  01AA  2992               	goto	l3749
  1510  01AB  3A01               	xorlw	1	; case 3
  1511  01AC  1903               	skipnz
  1512  01AD  2998               	goto	l3759
  1513  01AE  29D0               	goto	l678
  1514  01AF                     l3775:	
  1515  01AF  083C               	movf	main@ucChannel4Type,w
  1516                           
  1517                           ; Switch size 1, requested type "space"
  1518                           ; Number of cases is 5, Range of values is 0 to 4
  1519                           ; switch strategies available:
  1520                           ; Name         Instructions Cycles
  1521                           ; simple_byte           16     9 (average)
  1522                           ; direct_byte           17     7 (fixed)
  1523                           ; jumptable            260     6 (fixed)
  1524                           ; rangetable             9     6 (fixed)
  1525                           ; spacedrange           16     9 (fixed)
  1526                           ; locatedrange           5     3 (fixed)
  1527                           ;	Chosen strategy is simple_byte
  1528  01B0  3A00               	xorlw	0	; case 0
  1529  01B1  1903               	skipnz
  1530  01B2  28D0               	goto	l3567
  1531  01B3  3A01               	xorlw	1	; case 1
  1532  01B4  1903               	skipnz
  1533  01B5  290C               	goto	l3633
  1534  01B6  3A03               	xorlw	3	; case 2
  1535  01B7  1903               	skipnz
  1536  01B8  2942               	goto	l3689
  1537  01B9  3A01               	xorlw	1	; case 3
  1538  01BA  1903               	skipnz
  1539  01BB  2972               	goto	l3735
  1540  01BC  3A07               	xorlw	7	; case 4
  1541  01BD  1903               	skipnz
  1542  01BE  29A1               	goto	l3771
  1543  01BF  29D0               	goto	l678
  1544  01C0                     l3779:	
  1545  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  1546  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  1547  01C2  083B               	movf	main@AD_sample_process_step,w
  1548                           
  1549                           ; Switch size 1, requested type "space"
  1550                           ; Number of cases is 4, Range of values is 0 to 3
  1551                           ; switch strategies available:
  1552                           ; Name         Instructions Cycles
  1553                           ; simple_byte           13     7 (average)
  1554                           ; direct_byte           15     7 (fixed)
  1555                           ; jumptable            260     6 (fixed)
  1556                           ; rangetable             8     6 (fixed)
  1557                           ; spacedrange           14     9 (fixed)
  1558                           ; locatedrange           4     3 (fixed)
  1559                           ;	Chosen strategy is simple_byte
  1560  01C3  3A00               	xorlw	0	; case 0
  1561  01C4  1903               	skipnz
  1562  01C5  2850               	goto	l3471
  1563  01C6  3A01               	xorlw	1	; case 1
  1564  01C7  1903               	skipnz
  1565  01C8  2869               	goto	l687
  1566  01C9  3A03               	xorlw	3	; case 2
  1567  01CA  1903               	skipnz
  1568  01CB  286B               	goto	l3483
  1569  01CC  3A01               	xorlw	1	; case 3
  1570  01CD  1903               	skipnz
  1571  01CE  29AF               	goto	l3775
  1572  01CF  29D0               	goto	l678
  1573  01D0                     l678:	
  1574  01D0  2842               	goto	l3463
  1575  01D1                     __end_of_main:	
  1576                           
  1577                           	psect	swtext1
  1578  02D4                     __pswtext1:	
  1579  02D4                     S3961:	
  1580  02D4  118A  289F         	ljmp	l705
  1581  02D6  118A  28A2         	ljmp	l3505
  1582  02D8  118A  28AB         	ljmp	l3515
  1583  02DA  118A  28B1         	ljmp	l3525
  1584  02DC  118A  28B7         	ljmp	l3535
  1585  02DE  118A  28BD         	ljmp	l3545
  1586  02E0  118A  28C7         	ljmp	l3555
  1587                           
  1588                           	psect	swtext2
  1589  02E2                     __pswtext2:	
  1590  02E2                     S3963:	
  1591  02E2  118A  28DC         	ljmp	l733
  1592  02E4  118A  28DF         	ljmp	l3571
  1593  02E6  118A  28E8         	ljmp	l3581
  1594  02E8  118A  28EE         	ljmp	l3591
  1595  02EA  118A  28F4         	ljmp	l3601
  1596  02EC  118A  28FA         	ljmp	l3611
  1597  02EE  118A  2903         	ljmp	l3621
  1598                           
  1599                           	psect	swtext3
  1600  02F0                     __pswtext3:	
  1601  02F0                     S3965:	
  1602  02F0  118A  2918         	ljmp	l760
  1603  02F2  118A  291C         	ljmp	l3637
  1604  02F4  118A  2925         	ljmp	l3647
  1605  02F6  118A  292B         	ljmp	l3657
  1606  02F8  118A  2931         	ljmp	l3667
  1607  02FA  118A  2939         	ljmp	l3677
  1608                           
  1609                           	psect	text408
  1610  01D1                     __ptext408:	
  1611 ;; =============== function _main ends ============
  1612                           
  1613                           
  1614 ;; *************** function _process_AD_Converter_Value *****************
  1615 ;; Defined at:
  1616 ;;		line 100 in file "C:\190604\AK7030-OTP\common.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;		None
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;		None
  1621 ;; Return value:  Size  Location     Type
  1622 ;;		None               void
  1623 ;; Registers used:
  1624 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: FFE9F/0
  1629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1630 ;;      Params:         0       0       0       0       0
  1631 ;;      Locals:         0       0       0       0       0
  1632 ;;      Temps:          0       0       0       0       0
  1633 ;;      Totals:         0       0       0       0       0
  1634 ;;Total ram usage:        0 bytes
  1635 ;; Hardware stack levels used:    1
  1636 ;; Hardware stack levels required when called:    4
  1637 ;; This function calls:
  1638 ;;		_getAD_ConvertFlag
  1639 ;;		_setAD_ConvertFlag
  1640 ;;		_AD_Sample
  1641 ;;		_adc_test_init
  1642 ;;		_adc_start
  1643 ;; This function is called by:
  1644 ;;		_main
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647  01D1                     _process_AD_Converter_Value:	
  1648                           
  1649                           ;common.c: 65: return adc_convert_flag;
  1650                           
  1651                           ; Regs used in _getAD_ConvertFlag: [wreg]
  1652                           
  1653                           ;common.c: 101: if(getAD_ConvertFlag())
  1654                           
  1655                           ; Regs used in _process_AD_Converter_Value: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1656  01D1  0879               	movf	_adc_convert_flag,w
  1657  01D2  3A00               	xorlw	0
  1658  01D3  1903               	skipnz
  1659  01D4  0008               	return
  1660                           
  1661                           ;common.c: 102: {
  1662                           ;common.c: 103: setAD_ConvertFlag(0);
  1663  01D5  3000               	movlw	0
  1664  01D6  21E8  118A         	fcall	_setAD_ConvertFlag
  1665                           
  1666                           ;common.c: 104: AD_Sample();
  1667  01D8  21ED  118A         	fcall	_AD_Sample
  1668                           
  1669                           ;common.c: 105: if(4 == sampleChannelSelect)
  1670  01DA  084C               	movf	_sampleChannelSelect,w
  1671  01DB  3A04               	xorlw	4
  1672                           
  1673                           ;common.c: 106: adc_test_init(4,3);
  1674  01DC  3003               	movlw	3
  1675  01DD  00C7               	movwf	?_adc_test_init
  1676  01DE  1D03               	skipz
  1677  01DF  29E2               	goto	L4
  1678  01E0  3004               	movlw	4
  1679  01E1  29E3               	goto	L3
  1680  01E2                     L4:	
  1681                           ;common.c: 107: else
  1682                           ;common.c: 108: adc_test_init(14,3);
  1683                           
  1684  01E2  300E               	movlw	14
  1685  01E3                     L3:	
  1686  01E3  224E  118A         	fcall	_adc_test_init
  1687                           
  1688                           ;common.c: 110: adc_start();
  1689  01E5  2A63               	ljmp	l3321
  1690  01E6                     __end_of_process_AD_Converter_Value:	
  1691  01E6                     __ptext412:	
  1692 ;; =============== function _setAD_ConvertFlag ends ============
  1693                           
  1694                           
  1695 ;; *************** function _getAD_ConvertFlag *****************
  1696 ;; Defined at:
  1697 ;;		line 64 in file "C:\190604\AK7030-OTP\common.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;		None
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;		None
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      unsigned char 
  1704 ;; Registers used:
  1705 ;;		wreg
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: FFFFF/0
  1710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1711 ;;      Params:         0       0       0       0       0
  1712 ;;      Locals:         0       0       0       0       0
  1713 ;;      Temps:          0       0       0       0       0
  1714 ;;      Totals:         0       0       0       0       0
  1715 ;;Total ram usage:        0 bytes
  1716 ;; Hardware stack levels used:    1
  1717 ;; Hardware stack levels required when called:    2
  1718 ;; This function calls:
  1719 ;;		Nothing
  1720 ;; This function is called by:
  1721 ;;		_process_AD_Converter_Value
  1722 ;; This function uses a non-reentrant model
  1723 ;;
  1724  01E6                     _getAD_ConvertFlag:	
  1725                           
  1726                           ;common.c: 65: return adc_convert_flag;
  1727                           
  1728                           ; Regs used in _getAD_ConvertFlag: [wreg]
  1729  01E6  0879               	movf	_adc_convert_flag,w
  1730  01E7  0008               	return
  1731  01E8                     __end_of_getAD_ConvertFlag:	
  1732  01E8                     __ptext411:	
  1733 ;; =============== function _getAdOriginalValue ends ============
  1734                           
  1735                           
  1736 ;; *************** function _setAD_ConvertFlag *****************
  1737 ;; Defined at:
  1738 ;;		line 70 in file "C:\190604\AK7030-OTP\common.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;  flag            1    wreg     unsigned char 
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  flag            1    0[BANK0 ] unsigned char 
  1743 ;; Return value:  Size  Location     Type
  1744 ;;		None               void
  1745 ;; Registers used:
  1746 ;;		wreg
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 60/0
  1750 ;;		Unchanged: FFF9F/0
  1751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1752 ;;      Params:         0       0       0       0       0
  1753 ;;      Locals:         0       1       0       0       0
  1754 ;;      Temps:          0       0       0       0       0
  1755 ;;      Totals:         0       1       0       0       0
  1756 ;;Total ram usage:        1 bytes
  1757 ;; Hardware stack levels used:    1
  1758 ;; Hardware stack levels required when called:    2
  1759 ;; This function calls:
  1760 ;;		Nothing
  1761 ;; This function is called by:
  1762 ;;		_process_AD_Converter_Value
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765  01E8                     _setAD_ConvertFlag:	
  1766                           
  1767                           ; Regs used in _setAD_ConvertFlag: [wreg]
  1768                           ;setAD_ConvertFlag@flag stored from wreg
  1769  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  1770  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  1771  01EA  00C7               	movwf	setAD_ConvertFlag@flag
  1772                           
  1773                           ;common.c: 71: adc_convert_flag = flag;
  1774  01EB  00F9               	movwf	_adc_convert_flag
  1775  01EC  0008               	return
  1776  01ED                     __end_of_setAD_ConvertFlag:	
  1777  01ED                     __ptext409:	
  1778 ;; =============== function _process_AD_Converter_Value ends ============
  1779                           
  1780                           
  1781 ;; *************** function _AD_Sample *****************
  1782 ;; Defined at:
  1783 ;;		line 124 in file "C:\190604\AK7030-OTP\common.c"
  1784 ;; Parameters:    Size  Location     Type
  1785 ;;		None
  1786 ;; Auto vars:     Size  Location     Type
  1787 ;;  index           1    4[BANK0 ] unsigned char 
  1788 ;; Return value:  Size  Location     Type
  1789 ;;		None               void
  1790 ;; Registers used:
  1791 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1792 ;; Tracked objects:
  1793 ;;		On entry : 60/0
  1794 ;;		On exit  : 60/0
  1795 ;;		Unchanged: FFE9F/0
  1796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1797 ;;      Params:         0       0       0       0       0
  1798 ;;      Locals:         0       1       0       0       0
  1799 ;;      Temps:          0       2       0       0       0
  1800 ;;      Totals:         0       3       0       0       0
  1801 ;;Total ram usage:        3 bytes
  1802 ;; Hardware stack levels used:    1
  1803 ;; Hardware stack levels required when called:    3
  1804 ;; This function calls:
  1805 ;;		_getAdOriginalValue
  1806 ;; This function is called by:
  1807 ;;		_process_AD_Converter_Value
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810  01ED                     _AD_Sample:	
  1811                           
  1812                           ;common.c: 125: if(sampleTimes < 6)
  1813                           
  1814                           ; Regs used in _AD_Sample: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1815  01ED  3006               	movlw	6
  1816  01EE  023A               	subwf	_sampleTimes,w
  1817  01EF  1803               	skipnc
  1818  01F0  0008               	return
  1819                           
  1820                           ;common.c: 126: {
  1821                           ;common.c: 128: buffer_Sample_AD_Value[sampleTimes] = getAdOriginalValue();
  1822  01F1  2249  118A         	fcall	_getAdOriginalValue
  1823  01F3  1003               	clrc
  1824  01F4  0D3A               	rlf	_sampleTimes,w
  1825  01F5  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  1826  01F6  0084               	movwf	4
  1827  01F7  0847               	movf	?_getAdOriginalValue,w
  1828  01F8  1383               	bcf	3,7	;select IRP bank0
  1829  01F9  0080               	movwf	0
  1830  01FA  0A84               	incf	4,f
  1831  01FB  0848               	movf	?_getAdOriginalValue+1,w
  1832  01FC  0080               	movwf	0
  1833                           
  1834                           ;common.c: 130: if(sampleTimes == 0)
  1835  01FD  08BA               	movf	_sampleTimes,f
  1836  01FE  1D03               	skipz
  1837  01FF  2A08               	goto	l3399
  1838                           
  1839                           ;common.c: 131: {
  1840                           ;common.c: 132: multiFilterMaxValue = buffer_Sample_AD_Value[0];
  1841  0200  0821               	movf	_buffer_Sample_AD_Value+1,w
  1842  0201  00B3               	movwf	_multiFilterMaxValue+1
  1843  0202  0820               	movf	_buffer_Sample_AD_Value,w
  1844  0203  00B2               	movwf	_multiFilterMaxValue
  1845                           
  1846                           ;common.c: 133: multiFilterMinValue = buffer_Sample_AD_Value[0];
  1847  0204  0821               	movf	_buffer_Sample_AD_Value+1,w
  1848  0205  00B5               	movwf	_multiFilterMinValue+1
  1849  0206  0820               	movf	_buffer_Sample_AD_Value,w
  1850  0207  00B4               	movwf	_multiFilterMinValue
  1851  0208                     l3399:	
  1852                           
  1853                           ;common.c: 134: }
  1854                           ;common.c: 136: if(multiFilterMaxValue < buffer_Sample_AD_Value[sampleTimes])
  1855  0208  2266  118A         	fcall	PL2	;call to abstracted procedure
  1856  020A  0233               	subwf	_multiFilterMaxValue+1,w
  1857  020B  1D03               	skipz
  1858  020C  2A0F               	goto	u595
  1859  020D  0849               	movf	??_AD_Sample,w
  1860  020E  0232               	subwf	_multiFilterMaxValue,w
  1861  020F                     u595:	
  1862  020F  1803               	skipnc
  1863  0210  2A1A               	goto	l1528
  1864                           
  1865                           ;common.c: 137: {
  1866                           ;common.c: 138: multiFilterMaxValue = buffer_Sample_AD_Value[sampleTimes];
  1867  0211  1003               	clrc
  1868  0212  0D3A               	rlf	_sampleTimes,w
  1869  0213  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  1870  0214  0084               	movwf	4
  1871  0215  0800               	movf	0,w
  1872  0216  00B2               	movwf	_multiFilterMaxValue
  1873  0217  0A84               	incf	4,f
  1874  0218  0800               	movf	0,w
  1875  0219  00B3               	movwf	_multiFilterMaxValue+1
  1876  021A                     l1528:	
  1877                           
  1878                           ;common.c: 139: }
  1879                           ;common.c: 140: if(multiFilterMinValue > buffer_Sample_AD_Value[sampleTimes])
  1880  021A  2266  118A         	fcall	PL2	;call to abstracted procedure
  1881  021C  0835               	movf	_multiFilterMinValue+1,w
  1882  021D  024A               	subwf	??_AD_Sample+1,w
  1883  021E  1D03               	skipz
  1884  021F  2A22               	goto	u605
  1885  0220  0834               	movf	_multiFilterMinValue,w
  1886  0221  0249               	subwf	??_AD_Sample,w
  1887  0222                     u605:	
  1888  0222  1803               	skipnc
  1889  0223  2A2D               	goto	l3405
  1890                           
  1891                           ;common.c: 141: {
  1892                           ;common.c: 142: multiFilterMinValue = buffer_Sample_AD_Value[sampleTimes];
  1893  0224  1003               	clrc
  1894  0225  0D3A               	rlf	_sampleTimes,w
  1895  0226  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  1896  0227  0084               	movwf	4
  1897  0228  0800               	movf	0,w
  1898  0229  00B4               	movwf	_multiFilterMinValue
  1899  022A  0A84               	incf	4,f
  1900  022B  0800               	movf	0,w
  1901  022C  00B5               	movwf	_multiFilterMinValue+1
  1902  022D                     l3405:	
  1903  022D  3006               	movlw	6
  1904                           
  1905                           ;common.c: 147: sampleTimes++;
  1906  022E  0ABA               	incf	_sampleTimes,f
  1907                           
  1908                           ;common.c: 149: if(sampleTimes >= 6)
  1909  022F  023A               	subwf	_sampleTimes,w
  1910  0230  1C03               	skipc
  1911  0231  0008               	return
  1912                           
  1913                           ;common.c: 150: {
  1914                           ;common.c: 151: sampleTimes = 0;
  1915  0232  01BA               	clrf	_sampleTimes
  1916                           
  1917                           ;common.c: 154: {
  1918                           ;common.c: 156: sampleCH14Value = ((multiFilterSumValue - multiFilterMaxValue - multiFil
      +                          terMinValue))>> 2;
  1919  0233  084C               	movf	_sampleChannelSelect,w
  1920  0234  3A0E               	xorlw	14
  1921  0235  1D03               	skipz
  1922  0236  2A39               	goto	l3417
  1923                           
  1924                           ;common.c: 157: sampleChannelSelect = 4;
  1925  0237  3004               	movlw	4
  1926  0238  2A3A               	goto	L5
  1927  0239                     l3417:	
  1928                           ;common.c: 158: }
  1929                           
  1930                           
  1931                           ;common.c: 162: sampleChannelSelect = 14;
  1932  0239  300E               	movlw	14
  1933  023A                     L5:	
  1934  023A  00CC               	movwf	_sampleChannelSelect
  1935                           
  1936                           ;common.c: 168: }
  1937                           ;common.c: 170: for(unsigned char index = 0; index < 6;index++)
  1938                           
  1939                           ;common.c: 163: }
  1940  023B  01CB               	clrf	AD_Sample@index
  1941  023C                     l3427:	
  1942                           
  1943                           ;common.c: 171: buffer_Sample_AD_Value[index] = 0;
  1944  023C  1003               	clrc
  1945  023D  0D4B               	rlf	AD_Sample@index,w
  1946  023E  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  1947  023F  0084               	movwf	4
  1948  0240  3006               	movlw	6
  1949  0241  0180               	clrf	0
  1950  0242  0A84               	incf	4,f
  1951  0243  0180               	clrf	0
  1952  0244  0ACB               	incf	AD_Sample@index,f
  1953  0245  024B               	subwf	AD_Sample@index,w
  1954  0246  1803               	btfsc	3,0
  1955  0247  0008               	return
  1956  0248  2A3C               	goto	l3427
  1957  0249                     __end_of_AD_Sample:	
  1958  0249                     __ptext410:	
  1959 ;; =============== function _AD_Sample ends ============
  1960                           
  1961                           
  1962 ;; *************** function _getAdOriginalValue *****************
  1963 ;; Defined at:
  1964 ;;		line 76 in file "C:\190604\AK7030-OTP\common.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;		None
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;		None
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  2    0[BANK0 ] unsigned int 
  1971 ;; Registers used:
  1972 ;;		wreg
  1973 ;; Tracked objects:
  1974 ;;		On entry : 60/0
  1975 ;;		On exit  : 60/0
  1976 ;;		Unchanged: FFF9F/0
  1977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1978 ;;      Params:         0       2       0       0       0
  1979 ;;      Locals:         0       0       0       0       0
  1980 ;;      Temps:          0       0       0       0       0
  1981 ;;      Totals:         0       2       0       0       0
  1982 ;;Total ram usage:        2 bytes
  1983 ;; Hardware stack levels used:    1
  1984 ;; Hardware stack levels required when called:    2
  1985 ;; This function calls:
  1986 ;;		Nothing
  1987 ;; This function is called by:
  1988 ;;		_AD_Sample
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991  0249                     _getAdOriginalValue:	
  1992                           
  1993                           ;common.c: 77: return adc_original_value;
  1994                           
  1995                           ; Regs used in _getAdOriginalValue: [wreg]
  1996  0249  0831               	movf	_adc_original_value+1,w
  1997  024A  00C8               	movwf	?_getAdOriginalValue+1
  1998  024B  0830               	movf	_adc_original_value,w
  1999  024C  00C7               	movwf	?_getAdOriginalValue
  2000  024D  0008               	return
  2001  024E                     __end_of_getAdOriginalValue:	
  2002  024E                     __ptext421:	
  2003 ;; =============== function _dac_init ends ============
  2004                           
  2005                           
  2006 ;; *************** function _adc_test_init *****************
  2007 ;; Defined at:
  2008 ;;		line 85 in file "C:\190604\AK7030-OTP\periph.c"
  2009 ;; Parameters:    Size  Location     Type
  2010 ;;  channel         1    wreg     unsigned char 
  2011 ;;  ref             1    0[BANK0 ] unsigned char 
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;  channel         1    2[BANK0 ] unsigned char 
  2014 ;; Return value:  Size  Location     Type
  2015 ;;		None               void
  2016 ;; Registers used:
  2017 ;;		wreg, status,2, status,0
  2018 ;; Tracked objects:
  2019 ;;		On entry : 60/0
  2020 ;;		On exit  : 60/20
  2021 ;;		Unchanged: FFF9F/0
  2022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2023 ;;      Params:         0       1       0       0       0
  2024 ;;      Locals:         0       1       0       0       0
  2025 ;;      Temps:          0       1       0       0       0
  2026 ;;      Totals:         0       3       0       0       0
  2027 ;;Total ram usage:        3 bytes
  2028 ;; Hardware stack levels used:    1
  2029 ;; Hardware stack levels required when called:    2
  2030 ;; This function calls:
  2031 ;;		Nothing
  2032 ;; This function is called by:
  2033 ;;		_main
  2034 ;;		_process_AD_Converter_Value
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037  024E                     _adc_test_init:	
  2038                           
  2039                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  2040                           ;adc_test_init@channel stored from wreg
  2041  024E  00C9               	movwf	adc_test_init@channel
  2042                           
  2043                           ;periph.c: 86: ADCON0 = 0x00;
  2044  024F  019F               	clrf	31	;volatile
  2045                           
  2046                           ;periph.c: 87: ADCON0|=channel<<2;
  2047  0250  00C8               	movwf	??_adc_test_init
  2048  0251  1003               	clrc
  2049  0252  0DC8               	rlf	??_adc_test_init,f
  2050  0253  1003               	clrc
  2051  0254  0D48               	rlf	??_adc_test_init,w
  2052  0255  049F               	iorwf	31,f	;volatile
  2053                           
  2054                           ;periph.c: 88: ADCON1|=ref<<6;
  2055  0256  0847               	movf	adc_test_init@ref,w
  2056  0257  00C8               	movwf	??_adc_test_init
  2057  0258  0CC8               	rrf	??_adc_test_init,f
  2058  0259  0CC8               	rrf	??_adc_test_init,f
  2059  025A  0C48               	rrf	??_adc_test_init,w
  2060  025B  39C0               	andlw	192
  2061  025C  1683               	bsf	3,5	;RP0=1, select bank1
  2062  025D  049F               	iorwf	31,f	;volatile
  2063                           
  2064                           ;periph.c: 89: ADON=1;
  2065  025E  1283               	bcf	3,5	;RP0=0, select bank0
  2066  025F  141F               	bsf	31,0
  2067                           
  2068                           ;periph.c: 90: ADIE=1;
  2069  0260  1683               	bsf	3,5	;RP0=1, select bank1
  2070  0261  150D               	bsf	13,2
  2071  0262  0008               	return
  2072  0263                     __end_of_adc_test_init:	
  2073  0263                     __ptext417:	
  2074 ;; =============== function _isPermitSampleTime ends ============
  2075                           
  2076                           
  2077 ;; *************** function _adc_start *****************
  2078 ;; Defined at:
  2079 ;;		line 100 in file "C:\190604\AK7030-OTP\periph.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;		None
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;		None
  2084 ;; Return value:  Size  Location     Type
  2085 ;;		None               void
  2086 ;; Registers used:
  2087 ;;		None
  2088 ;; Tracked objects:
  2089 ;;		On entry : 60/20
  2090 ;;		On exit  : 60/0
  2091 ;;		Unchanged: FFF9F/0
  2092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2093 ;;      Params:         0       0       0       0       0
  2094 ;;      Locals:         0       0       0       0       0
  2095 ;;      Temps:          0       0       0       0       0
  2096 ;;      Totals:         0       0       0       0       0
  2097 ;;Total ram usage:        0 bytes
  2098 ;; Hardware stack levels used:    1
  2099 ;; Hardware stack levels required when called:    2
  2100 ;; This function calls:
  2101 ;;		Nothing
  2102 ;; This function is called by:
  2103 ;;		_main
  2104 ;;		_process_AD_Converter_Value
  2105 ;; This function uses a non-reentrant model
  2106 ;;
  2107  0263                     _adc_start:	
  2108  0263                     l3321:	
  2109                           ; Regs used in _adc_start: []
  2110                           
  2111                           
  2112                           ;periph.c: 101: GO=1;
  2113  0263  1283               	bcf	3,5	;RP0=0, select bank0
  2114  0264  149F               	bsf	31,1
  2115  0265  0008               	return
  2116  0266                     __end_of_adc_start:	
  2117  0266                     PL2:	
  2118  0266  1003               	clrc
  2119  0267  0D3A               	rlf	_sampleTimes,w
  2120  0268  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  2121  0269  0084               	movwf	4
  2122  026A  0800               	movf	0,w
  2123  026B  00C9               	movwf	??_AD_Sample
  2124  026C  0A84               	incf	4,f
  2125  026D  0800               	movf	0,w
  2126  026E  00CA               	movwf	??_AD_Sample+1
  2127  026F  0008               	return
  2128                           
  2129                           	psect	text413
  2130  0329                     __ptext413:	
  2131 ;; =============== function _getAD_ConvertFlag ends ============
  2132                           
  2133                           
  2134 ;; *************** function _getAdOriginaCh4Value *****************
  2135 ;; Defined at:
  2136 ;;		line 87 in file "C:\190604\AK7030-OTP\common.c"
  2137 ;; Parameters:    Size  Location     Type
  2138 ;;		None
  2139 ;; Auto vars:     Size  Location     Type
  2140 ;;		None
  2141 ;; Return value:  Size  Location     Type
  2142 ;;                  2    0[BANK0 ] unsigned int 
  2143 ;; Registers used:
  2144 ;;		wreg
  2145 ;; Tracked objects:
  2146 ;;		On entry : 60/0
  2147 ;;		On exit  : 60/0
  2148 ;;		Unchanged: FFF9F/0
  2149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2150 ;;      Params:         0       2       0       0       0
  2151 ;;      Locals:         0       0       0       0       0
  2152 ;;      Temps:          0       0       0       0       0
  2153 ;;      Totals:         0       2       0       0       0
  2154 ;;Total ram usage:        2 bytes
  2155 ;; Hardware stack levels used:    1
  2156 ;; Hardware stack levels required when called:    2
  2157 ;; This function calls:
  2158 ;;		Nothing
  2159 ;; This function is called by:
  2160 ;;		_main
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163  0329                     _getAdOriginaCh4Value:	
  2164                           
  2165                           ;common.c: 88: return adc_original_CH4_value;
  2166                           
  2167                           ; Regs used in _getAdOriginaCh4Value: [wreg]
  2168  0329  082F               	movf	_adc_original_CH4_value+1,w
  2169  032A  00C8               	movwf	?_getAdOriginaCh4Value+1
  2170  032B  082E               	movf	_adc_original_CH4_value,w
  2171  032C  00C7               	movwf	?_getAdOriginaCh4Value
  2172  032D  0008               	return
  2173  032E                     __end_of_getAdOriginaCh4Value:	
  2174                           
  2175                           	psect	text414
  2176  032E                     __ptext414:	
  2177 ;; =============== function _getAdOriginaCh4Value ends ============
  2178                           
  2179                           
  2180 ;; *************** function _getAdOriginalCh14Value *****************
  2181 ;; Defined at:
  2182 ;;		line 93 in file "C:\190604\AK7030-OTP\common.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;		None
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;		None
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  2    0[BANK0 ] unsigned int 
  2189 ;; Registers used:
  2190 ;;		wreg
  2191 ;; Tracked objects:
  2192 ;;		On entry : 60/0
  2193 ;;		On exit  : 60/0
  2194 ;;		Unchanged: FFF9F/0
  2195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2196 ;;      Params:         0       2       0       0       0
  2197 ;;      Locals:         0       0       0       0       0
  2198 ;;      Temps:          0       0       0       0       0
  2199 ;;      Totals:         0       2       0       0       0
  2200 ;;Total ram usage:        2 bytes
  2201 ;; Hardware stack levels used:    1
  2202 ;; Hardware stack levels required when called:    2
  2203 ;; This function calls:
  2204 ;;		Nothing
  2205 ;; This function is called by:
  2206 ;;		_main
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209  032E                     _getAdOriginalCh14Value:	
  2210                           
  2211                           ;common.c: 94: return adc_original_CH14_value;
  2212                           
  2213                           ; Regs used in _getAdOriginalCh14Value: [wreg]
  2214  032E  082D               	movf	_adc_original_CH14_value+1,w
  2215  032F  00C8               	movwf	?_getAdOriginalCh14Value+1
  2216  0330  082C               	movf	_adc_original_CH14_value,w
  2217  0331  00C7               	movwf	?_getAdOriginalCh14Value
  2218  0332  0008               	return
  2219  0333                     __end_of_getAdOriginalCh14Value:	
  2220                           
  2221                           	psect	text415
  2222  0340                     __ptext415:	
  2223 ;; =============== function _getAdOriginalCh14Value ends ============
  2224                           
  2225                           
  2226 ;; *************** function _clrSampeTime *****************
  2227 ;; Defined at:
  2228 ;;		line 254 in file "C:\190604\AK7030-OTP\common.c"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;		None
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;		None
  2233 ;; Return value:  Size  Location     Type
  2234 ;;		None               void
  2235 ;; Registers used:
  2236 ;;		status,2
  2237 ;; Tracked objects:
  2238 ;;		On entry : 0/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: FFFFF/0
  2241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2242 ;;      Params:         0       0       0       0       0
  2243 ;;      Locals:         0       0       0       0       0
  2244 ;;      Temps:          0       0       0       0       0
  2245 ;;      Totals:         0       0       0       0       0
  2246 ;;Total ram usage:        0 bytes
  2247 ;; Hardware stack levels used:    1
  2248 ;; Hardware stack levels required when called:    2
  2249 ;; This function calls:
  2250 ;;		Nothing
  2251 ;; This function is called by:
  2252 ;;		_main
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255  0340                     _clrSampeTime:	
  2256                           
  2257                           ;common.c: 255: timer.timer10msStopWatch = 0;
  2258                           
  2259                           ; Regs used in _clrSampeTime: [status,2]
  2260  0340  01FA               	clrf	_timer
  2261  0341  0008               	return
  2262  0342                     __end_of_clrSampeTime:	
  2263                           
  2264                           	psect	text416
  2265  0333                     __ptext416:	
  2266 ;; =============== function _clrSampeTime ends ============
  2267                           
  2268                           
  2269 ;; *************** function _isPermitSampleTime *****************
  2270 ;; Defined at:
  2271 ;;		line 244 in file "C:\190604\AK7030-OTP\common.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;		None
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;		None
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  1    wreg      unsigned char 
  2278 ;; Registers used:
  2279 ;;		wreg
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/0
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: FFFFF/0
  2284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2285 ;;      Params:         0       0       0       0       0
  2286 ;;      Locals:         0       0       0       0       0
  2287 ;;      Temps:          0       0       0       0       0
  2288 ;;      Totals:         0       0       0       0       0
  2289 ;;Total ram usage:        0 bytes
  2290 ;; Hardware stack levels used:    1
  2291 ;; Hardware stack levels required when called:    2
  2292 ;; This function calls:
  2293 ;;		Nothing
  2294 ;; This function is called by:
  2295 ;;		_main
  2296 ;; This function uses a non-reentrant model
  2297 ;;
  2298  0333                     _isPermitSampleTime:	
  2299                           
  2300                           ;common.c: 245: if(timer.timer10msStopWatch >= 10)
  2301                           
  2302                           ; Regs used in _isPermitSampleTime: [wreg]
  2303  0333  300A               	movlw	10
  2304  0334  027A               	subwf	_timer,w
  2305  0335  1803               	btfsc	3,0
  2306                           
  2307                           ;common.c: 246: {
  2308                           ;common.c: 247: return 1;
  2309  0336  3401               	retlw	1
  2310                           
  2311                           ;common.c: 249: else
  2312                           ;common.c: 250: return 0;
  2313  0337  3400               	retlw	0
  2314  0338                     __end_of_isPermitSampleTime:	
  2315                           
  2316                           	psect	text418
  2317  0319                     __ptext418:	
  2318 ;; =============== function _adc_start ends ============
  2319                           
  2320                           
  2321 ;; *************** function _op2_init *****************
  2322 ;; Defined at:
  2323 ;;		line 45 in file "C:\190604\AK7030-OTP\periph.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;		None
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;		None
  2328 ;; Return value:  Size  Location     Type
  2329 ;;		None               void
  2330 ;; Registers used:
  2331 ;;		wreg
  2332 ;; Tracked objects:
  2333 ;;		On entry : 17F/20
  2334 ;;		On exit  : 17F/20
  2335 ;;		Unchanged: FFE80/0
  2336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2337 ;;      Params:         0       0       0       0       0
  2338 ;;      Locals:         0       0       0       0       0
  2339 ;;      Temps:          0       0       0       0       0
  2340 ;;      Totals:         0       0       0       0       0
  2341 ;;Total ram usage:        0 bytes
  2342 ;; Hardware stack levels used:    1
  2343 ;; Hardware stack levels required when called:    2
  2344 ;; This function calls:
  2345 ;;		Nothing
  2346 ;; This function is called by:
  2347 ;;		_main
  2348 ;; This function uses a non-reentrant model
  2349 ;;
  2350  0319                     _op2_init:	
  2351                           
  2352                           ;periph.c: 52: OP2CON1=0x10;
  2353                           
  2354                           ; Regs used in _op2_init: [wreg]
  2355  0319  3010               	movlw	16
  2356  031A  009C               	movwf	28	;volatile
  2357                           
  2358                           ;periph.c: 54: OP2CON2=0x10;
  2359  031B  009D               	movwf	29	;volatile
  2360                           
  2361                           ;periph.c: 55: OP2CON0=0x80;
  2362  031C  3080               	movlw	128
  2363  031D  009B               	movwf	27	;volatile
  2364                           
  2365                           ;periph.c: 58: TRISA7=0;
  2366  031E  1385               	bcf	5,7
  2367                           
  2368                           ;periph.c: 60: TRISB7 = 1;
  2369  031F  1786               	bsf	6,7
  2370  0320  0008               	return
  2371  0321                     __end_of_op2_init:	
  2372                           
  2373                           	psect	text419
  2374  02FC                     __ptext419:	
  2375 ;; =============== function _op2_init ends ============
  2376                           
  2377                           
  2378 ;; *************** function _op1_init *****************
  2379 ;; Defined at:
  2380 ;;		line 26 in file "C:\190604\AK7030-OTP\periph.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;		None
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;		None
  2385 ;; Return value:  Size  Location     Type
  2386 ;;		None               void
  2387 ;; Registers used:
  2388 ;;		wreg
  2389 ;; Tracked objects:
  2390 ;;		On entry : 17F/20
  2391 ;;		On exit  : 17F/20
  2392 ;;		Unchanged: FFE80/0
  2393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2394 ;;      Params:         0       0       0       0       0
  2395 ;;      Locals:         0       0       0       0       0
  2396 ;;      Temps:          0       0       0       0       0
  2397 ;;      Totals:         0       0       0       0       0
  2398 ;;Total ram usage:        0 bytes
  2399 ;; Hardware stack levels used:    1
  2400 ;; Hardware stack levels required when called:    2
  2401 ;; This function calls:
  2402 ;;		Nothing
  2403 ;; This function is called by:
  2404 ;;		_main
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407  02FC                     _op1_init:	
  2408                           
  2409                           ;periph.c: 33: OP1CON1=0x02;
  2410                           
  2411                           ; Regs used in _op1_init: [wreg]
  2412  02FC  3002               	movlw	2
  2413  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  2414  02FE  009C               	movwf	28	;volatile
  2415                           
  2416                           ;periph.c: 34: OP1CON2=0xA0;
  2417  02FF  30A0               	movlw	160
  2418  0300  009D               	movwf	29	;volatile
  2419                           
  2420                           ;periph.c: 35: OP1CON0=0x80;
  2421  0301  3080               	movlw	128
  2422  0302  009B               	movwf	27	;volatile
  2423                           
  2424                           ;periph.c: 38: TRISB3=1;
  2425  0303  1683               	bsf	3,5	;RP0=1, select bank1
  2426  0304  1586               	bsf	6,3
  2427                           
  2428                           ;periph.c: 40: TRISB5=0;
  2429  0305  1286               	bcf	6,5
  2430  0306  0008               	return
  2431  0307                     __end_of_op1_init:	
  2432                           
  2433                           	psect	text420
  2434  0338                     __ptext420:	
  2435 ;; =============== function _op1_init ends ============
  2436                           
  2437                           
  2438 ;; *************** function _dac_init *****************
  2439 ;; Defined at:
  2440 ;;		line 14 in file "C:\190604\AK7030-OTP\periph.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;		None
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;		None
  2445 ;; Return value:  Size  Location     Type
  2446 ;;		None               void
  2447 ;; Registers used:
  2448 ;;		wreg
  2449 ;; Tracked objects:
  2450 ;;		On entry : 17F/20
  2451 ;;		On exit  : 17F/20
  2452 ;;		Unchanged: FFE80/0
  2453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2454 ;;      Params:         0       0       0       0       0
  2455 ;;      Locals:         0       0       0       0       0
  2456 ;;      Temps:          0       0       0       0       0
  2457 ;;      Totals:         0       0       0       0       0
  2458 ;;Total ram usage:        0 bytes
  2459 ;; Hardware stack levels used:    1
  2460 ;; Hardware stack levels required when called:    2
  2461 ;; This function calls:
  2462 ;;		Nothing
  2463 ;; This function is called by:
  2464 ;;		_main
  2465 ;; This function uses a non-reentrant model
  2466 ;;
  2467  0338                     _dac_init:	
  2468                           
  2469                           ;periph.c: 15: DACCON|=1;
  2470                           
  2471                           ; Regs used in _dac_init: [wreg]
  2472  0338  1407               	bsf	7,0	;volatile
  2473                           
  2474                           ;periph.c: 17: DACR0=0x0F;
  2475  0339  300F               	movlw	15
  2476  033A  0088               	movwf	8	;volatile
  2477                           
  2478                           ;periph.c: 18: DACCON|=(1)<<2;
  2479  033B  1507               	bsf	7,2	;volatile
  2480  033C  0008               	return
  2481  033D                     __end_of_dac_init:	
  2482                           
  2483                           	psect	text422
  2484  033D                     __ptext422:	
  2485 ;; =============== function _adc_test_init ends ============
  2486                           
  2487                           
  2488 ;; *************** function _timer1_interrupt_config *****************
  2489 ;; Defined at:
  2490 ;;		line 56 in file "C:\190604\AK7030-OTP\common.c"
  2491 ;; Parameters:    Size  Location     Type
  2492 ;;		None
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;		None
  2495 ;; Return value:  Size  Location     Type
  2496 ;;		None               void
  2497 ;; Registers used:
  2498 ;;		None
  2499 ;; Tracked objects:
  2500 ;;		On entry : 17F/20
  2501 ;;		On exit  : 17F/20
  2502 ;;		Unchanged: FFE80/0
  2503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2504 ;;      Params:         0       0       0       0       0
  2505 ;;      Locals:         0       0       0       0       0
  2506 ;;      Temps:          0       0       0       0       0
  2507 ;;      Totals:         0       0       0       0       0
  2508 ;;Total ram usage:        0 bytes
  2509 ;; Hardware stack levels used:    1
  2510 ;; Hardware stack levels required when called:    2
  2511 ;; This function calls:
  2512 ;;		Nothing
  2513 ;; This function is called by:
  2514 ;;		_main
  2515 ;; This function uses a non-reentrant model
  2516 ;;
  2517  033D                     _timer1_interrupt_config:	
  2518                           
  2519                           ;common.c: 57: GIE = 1;
  2520                           
  2521                           ; Regs used in _timer1_interrupt_config: []
  2522  033D  178B               	bsf	11,7
  2523                           
  2524                           ;common.c: 58: PEIE = 1;
  2525  033E  170B               	bsf	11,6
  2526  033F  0008               	return
  2527  0340                     __end_of_timer1_interrupt_config:	
  2528                           
  2529                           	psect	text423
  2530  0307                     __ptext423:	
  2531 ;; =============== function _timer1_interrupt_config ends ============
  2532                           
  2533                           
  2534 ;; *************** function _timer1_config *****************
  2535 ;; Defined at:
  2536 ;;		line 44 in file "C:\190604\AK7030-OTP\common.c"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;		None
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;		None
  2541 ;; Return value:  Size  Location     Type
  2542 ;;		None               void
  2543 ;; Registers used:
  2544 ;;		wreg
  2545 ;; Tracked objects:
  2546 ;;		On entry : 17F/40
  2547 ;;		On exit  : 17F/20
  2548 ;;		Unchanged: FFE80/0
  2549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2550 ;;      Params:         0       0       0       0       0
  2551 ;;      Locals:         0       0       0       0       0
  2552 ;;      Temps:          0       0       0       0       0
  2553 ;;      Totals:         0       0       0       0       0
  2554 ;;Total ram usage:        0 bytes
  2555 ;; Hardware stack levels used:    1
  2556 ;; Hardware stack levels required when called:    2
  2557 ;; This function calls:
  2558 ;;		Nothing
  2559 ;; This function is called by:
  2560 ;;		_main
  2561 ;; This function uses a non-reentrant model
  2562 ;;
  2563  0307                     _timer1_config:	
  2564                           
  2565                           ;common.c: 46: TMR1H=0xCF;
  2566                           
  2567                           ; Regs used in _timer1_config: [wreg]
  2568  0307  30CF               	movlw	207
  2569  0308  1303               	bcf	3,6	;RP1=0, select bank0
  2570  0309  008F               	movwf	15	;volatile
  2571                           
  2572                           ;common.c: 47: TMR1L=0x2C;
  2573  030A  302C               	movlw	44
  2574  030B  008E               	movwf	14	;volatile
  2575                           
  2576                           ;common.c: 48: T1CON=0xE1;
  2577  030C  30E1               	movlw	225
  2578  030D  0090               	movwf	16	;volatile
  2579                           
  2580                           ;common.c: 49: TMR1IE=1;
  2581  030E  1683               	bsf	3,5	;RP0=1, select bank1
  2582  030F  140C               	bsf	12,0
  2583  0310  0008               	return
  2584  0311                     __end_of_timer1_config:	
  2585                           
  2586                           	psect	text424
  2587  0321                     __ptext424:	
  2588 ;; =============== function _timer1_config ends ============
  2589                           
  2590                           
  2591 ;; *************** function _clock_config *****************
  2592 ;; Defined at:
  2593 ;;		line 36 in file "C:\190604\AK7030-OTP\common.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;		None
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;		None
  2598 ;; Return value:  Size  Location     Type
  2599 ;;		None               void
  2600 ;; Registers used:
  2601 ;;		wreg, status,2
  2602 ;; Tracked objects:
  2603 ;;		On entry : 17F/20
  2604 ;;		On exit  : 17F/40
  2605 ;;		Unchanged: FFE80/0
  2606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2607 ;;      Params:         0       0       0       0       0
  2608 ;;      Locals:         0       0       0       0       0
  2609 ;;      Temps:          0       0       0       0       0
  2610 ;;      Totals:         0       0       0       0       0
  2611 ;;Total ram usage:        0 bytes
  2612 ;; Hardware stack levels used:    1
  2613 ;; Hardware stack levels required when called:    2
  2614 ;; This function calls:
  2615 ;;		Nothing
  2616 ;; This function is called by:
  2617 ;;		_main
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620  0321                     _clock_config:	
  2621                           
  2622                           ;common.c: 38: CLKPR = 0x80;
  2623                           
  2624                           ; Regs used in _clock_config: [wreg+status,2]
  2625  0321  3080               	movlw	128
  2626  0322  1283               	bcf	3,5	;RP0=0, select bank2
  2627  0323  1703               	bsf	3,6	;RP1=1, select bank2
  2628  0324  0088               	movwf	8	;volatile
  2629                           
  2630                           ;common.c: 39: CLKPR = 0x00;
  2631  0325  0188               	clrf	8	;volatile
  2632  0326                     l1490:	
  2633                           ;common.c: 40: while(CLKPCE);
  2634                           
  2635  0326  1F88               	btfss	8,7
  2636  0327  0008               	return
  2637  0328  2B26               	goto	l1490
  2638  0329                     __end_of_clock_config:	
  2639                           
  2640                           	psect	text425
  2641  0270                     __ptext425:	
  2642 ;; =============== function _clock_config ends ============
  2643                           
  2644                           
  2645 ;; *************** function _ISR *****************
  2646 ;; Defined at:
  2647 ;;		line 259 in file "C:\190604\AK7030-OTP\common.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;		None
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;		None
  2652 ;; Return value:  Size  Location     Type
  2653 ;;		None               void
  2654 ;; Registers used:
  2655 ;;		wreg, status,2, status,0, pclath, cstack
  2656 ;; Tracked objects:
  2657 ;;		On entry : 0/0
  2658 ;;		On exit  : 60/0
  2659 ;;		Unchanged: FFF9F/0
  2660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2661 ;;      Params:         0       0       0       0       0
  2662 ;;      Locals:         0       0       0       0       0
  2663 ;;      Temps:          2       0       0       0       0
  2664 ;;      Totals:         2       0       0       0       0
  2665 ;;Total ram usage:        2 bytes
  2666 ;; Hardware stack levels used:    1
  2667 ;; Hardware stack levels required when called:    1
  2668 ;; This function calls:
  2669 ;;		i1_setAD_ConvertFlag
  2670 ;;		_adc_get
  2671 ;; This function is called by:
  2672 ;;		Interrupt level 1
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675  0270                     _ISR:	
  2676                           
  2677                           ;common.c: 260: static unsigned char ucTimer1sCnt = 0;
  2678                           ;common.c: 262: if(TMR1IF == 1)
  2679  0270  1283               	bcf	3,5	;RP0=0, select bank0
  2680  0271  1303               	bcf	3,6	;RP1=0, select bank0
  2681  0272  1C0C               	btfss	12,0
  2682  0273  2A90               	goto	i1l3371
  2683  0274  3064               	movlw	100
  2684                           
  2685                           ;common.c: 263: {
  2686                           ;common.c: 264: TMR1IF = 0 ;
  2687  0275  100C               	bcf	12,0
  2688                           
  2689                           ;common.c: 265: timer.timer10msStopWatch++;
  2690  0276  0AFA               	incf	_timer,f
  2691                           
  2692                           ;common.c: 266: ucTimer1sCnt++;
  2693  0277  0AF8               	incf	ISR@ucTimer1sCnt,f
  2694                           
  2695                           ;common.c: 268: if(ucTimer1sCnt >= 100)
  2696  0278  0278               	subwf	ISR@ucTimer1sCnt,w
  2697  0279  1C03               	skipc
  2698  027A  2A90               	goto	i1l3371
  2699                           
  2700                           ;common.c: 269: {
  2701                           ;common.c: 270: ucTimer1sCnt = 0;
  2702  027B  01F8               	clrf	ISR@ucTimer1sCnt
  2703                           
  2704                           ;common.c: 271: if(uiBigTimer > 0)
  2705  027C  0877               	movf	_uiBigTimer+1,w
  2706  027D  0476               	iorwf	_uiBigTimer,w
  2707  027E  1903               	skipnz
  2708  027F  2A86               	goto	i1l1583
  2709                           
  2710                           ;common.c: 272: uiBigTimer--;
  2711  0280  3001               	movlw	1
  2712  0281  02F6               	subwf	_uiBigTimer,f
  2713  0282  3000               	movlw	0
  2714  0283  1C03               	skipc
  2715  0284  03F7               	decf	_uiBigTimer+1,f
  2716  0285  02F7               	subwf	_uiBigTimer+1,f
  2717  0286                     i1l1583:	
  2718                           
  2719                           ;common.c: 274: if(uiSmallTimer)
  2720  0286  0837               	movf	_uiSmallTimer+1,w
  2721  0287  0436               	iorwf	_uiSmallTimer,w
  2722  0288  1903               	skipnz
  2723  0289  2A90               	goto	i1l3371
  2724                           
  2725                           ;common.c: 275: uiSmallTimer--;
  2726  028A  3001               	movlw	1
  2727  028B  02B6               	subwf	_uiSmallTimer,f
  2728  028C  3000               	movlw	0
  2729  028D  1C03               	skipc
  2730  028E  03B7               	decf	_uiSmallTimer+1,f
  2731  028F  02B7               	subwf	_uiSmallTimer+1,f
  2732  0290                     i1l3371:	
  2733                           
  2734                           ;common.c: 276: }
  2735                           ;common.c: 277: }
  2736                           ;common.c: 279: if(ADIF)
  2737  0290  1D0D               	btfss	13,2
  2738  0291  2AAF               	goto	i1l1588
  2739  0292  3001               	movlw	1
  2740                           
  2741                           ;common.c: 280: {
  2742                           ;common.c: 281: ADIF=0;
  2743  0293  110D               	bcf	13,2
  2744                           
  2745                           ;common.c: 282: setAD_ConvertFlag(1);
  2746  0294  22C1  118A         	fcall	i1_setAD_ConvertFlag
  2747                           
  2748                           ;common.c: 283: adc_original_value = adc_get();
  2749  0296  22B6  118A         	fcall	_adc_get
  2750  0298  0871               	movf	?_adc_get+1,w
  2751  0299  1283               	bcf	3,5	;RP0=0, select bank0
  2752  029A  00B1               	movwf	_adc_original_value+1
  2753  029B  0870               	movf	?_adc_get,w
  2754  029C  00B0               	movwf	_adc_original_value
  2755                           
  2756                           ;common.c: 284: if(sampleChannelSelect == 4)
  2757  029D  084C               	movf	_sampleChannelSelect,w
  2758  029E  3A04               	xorlw	4
  2759  029F  1D03               	skipz
  2760  02A0  2AA9               	goto	i1l3383
  2761                           
  2762                           ;common.c: 285: adc_original_CH4_value = adc_get();
  2763  02A1  22B6  118A         	fcall	_adc_get
  2764  02A3  0871               	movf	?_adc_get+1,w
  2765  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  2766  02A5  00AF               	movwf	_adc_original_CH4_value+1
  2767  02A6  0870               	movf	?_adc_get,w
  2768  02A7  00AE               	movwf	_adc_original_CH4_value
  2769  02A8  2AAF               	goto	i1l1588
  2770  02A9                     i1l3383:	
  2771                           
  2772                           ;common.c: 286: else
  2773                           ;common.c: 287: adc_original_CH14_value = adc_get();
  2774  02A9  22B6               	fcall	_adc_get
  2775  02AA  0871               	movf	?_adc_get+1,w
  2776  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  2777  02AC  00AD               	movwf	_adc_original_CH14_value+1
  2778  02AD  0870               	movf	?_adc_get,w
  2779  02AE  00AC               	movwf	_adc_original_CH14_value
  2780  02AF                     i1l1588:	
  2781  02AF  0875               	movf	??_ISR+1,w
  2782  02B0  008A               	movwf	10
  2783  02B1  0E74               	swapf	??_ISR^(0+-128),w
  2784  02B2  0083               	movwf	3
  2785  02B3  0EFE               	swapf	126,f
  2786  02B4  0E7E               	swapf	126,w
  2787  02B5  0009               	retfie
  2788  02B6                     __end_of_ISR:	
  2789  02B6                     __ptext427:	
  2790 ;; =============== function i1_setAD_ConvertFlag ends ============
  2791                           
  2792                           
  2793 ;; *************** function _adc_get *****************
  2794 ;; Defined at:
  2795 ;;		line 105 in file "C:\190604\AK7030-OTP\periph.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;		None
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;  val             2    2[COMMON] unsigned int 
  2800 ;; Return value:  Size  Location     Type
  2801 ;;                  2    0[COMMON] unsigned int 
  2802 ;; Registers used:
  2803 ;;		wreg
  2804 ;; Tracked objects:
  2805 ;;		On entry : 60/0
  2806 ;;		On exit  : 60/20
  2807 ;;		Unchanged: FFF9F/0
  2808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2809 ;;      Params:         2       0       0       0       0
  2810 ;;      Locals:         2       0       0       0       0
  2811 ;;      Temps:          0       0       0       0       0
  2812 ;;      Totals:         4       0       0       0       0
  2813 ;;Total ram usage:        4 bytes
  2814 ;; Hardware stack levels used:    1
  2815 ;; This function calls:
  2816 ;;		Nothing
  2817 ;; This function is called by:
  2818 ;;		_ISR
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821  02B6                     _adc_get:	
  2822                           
  2823                           ;periph.c: 106: unsigned int val;
  2824                           ;periph.c: 107: val = (ADRESH<<8) | ADRESL;
  2825                           
  2826                           ; Regs used in _adc_get: [wreg]
  2827  02B6  081E               	movf	30,w	;volatile
  2828  02B7  00F3               	movwf	adc_get@val+1
  2829  02B8  01F2               	clrf	adc_get@val
  2830  02B9  1683               	bsf	3,5	;RP0=1, select bank1
  2831  02BA  081E               	movf	30,w	;volatile
  2832  02BB  04F2               	iorwf	adc_get@val,f
  2833                           
  2834                           ;periph.c: 108: return val;
  2835  02BC  0873               	movf	adc_get@val+1,w
  2836  02BD  00F1               	movwf	?_adc_get+1
  2837  02BE  0872               	movf	adc_get@val,w
  2838  02BF  00F0               	movwf	?_adc_get
  2839  02C0  0008               	return
  2840  02C1                     __end_of_adc_get:	
  2841  02C1                     __ptext426:	
  2842 ;; =============== function _ISR ends ============
  2843                           
  2844                           
  2845 ;; *************** function i1_setAD_ConvertFlag *****************
  2846 ;; Defined at:
  2847 ;;		line 70 in file "C:\190604\AK7030-OTP\common.c"
  2848 ;; Parameters:    Size  Location     Type
  2849 ;;  setAD_Conver    1    wreg     unsigned char 
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  2852 ;; Return value:  Size  Location     Type
  2853 ;;		None               void
  2854 ;; Registers used:
  2855 ;;		wreg
  2856 ;; Tracked objects:
  2857 ;;		On entry : 60/0
  2858 ;;		On exit  : 60/0
  2859 ;;		Unchanged: FFF9F/0
  2860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2861 ;;      Params:         0       0       0       0       0
  2862 ;;      Locals:         1       0       0       0       0
  2863 ;;      Temps:          0       0       0       0       0
  2864 ;;      Totals:         1       0       0       0       0
  2865 ;;Total ram usage:        1 bytes
  2866 ;; Hardware stack levels used:    1
  2867 ;; This function calls:
  2868 ;;		Nothing
  2869 ;; This function is called by:
  2870 ;;		_ISR
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873  02C1                     i1_setAD_ConvertFlag:	
  2874                           
  2875                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  2876                           ;i1setAD_ConvertFlag@flag stored from wreg
  2877  02C1  00F0               	movwf	i1setAD_ConvertFlag@flag
  2878                           
  2879                           ;common.c: 71: adc_convert_flag = flag;
  2880  02C2  00F9               	movwf	_adc_convert_flag
  2881  02C3  0008               	return
  2882  02C4                     __end_ofi1_setAD_ConvertFlag:	
  2883                           
  2884                           	psect	intentry
  2885  0004                     __pintentry:	
  2886                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  2887                           
  2888  0004                     interrupt_function:	
  2889  007E                     saved_w	set	btemp
  2890  0004  00FE               	movwf	btemp
  2891  0005  0E03               	swapf	3,w
  2892  0006  00F4               	movwf	??_ISR
  2893  0007  080A               	movf	10,w
  2894  0008  00F5               	movwf	??_ISR+1
  2895  0009  118A  2A70         	ljmp	_ISR
  2896                           
  2897                           	psect	text428
  2898  0000                     __ptext428:	
  2899 ;; =============== function _adc_get ends ============
  2900                           
  2901  007E                     btemp	set	126	;btemp
  2902  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Tue Jun 04 15:50:12 2019

                     ??_clock_config 0047                                    pc 0002  
                                 _GO 00F9                                   fsr 0004  
                ?_getAdOriginalValue 0047             ?_timer1_interrupt_config 0070  
                                l705 009F                                  l805 0183  
                                l733 00DC                                  l760 0118  
                                l678 01D0                                  l687 0069  
                                l784 014E                                  _PA0 0028  
                                _PA1 0029                                  _GIE 005F  
                                _PB0 0030                                  _PA2 002A  
                                _PB1 0031                                  _PA3 002B  
                                _PA6 002E                                  _PA7 002F  
                                _ISR 0270                                  u605 0222  
                                u595 020F                                  fsr0 0004  
                                indf 0000                                 S3961 02D4  
                               S3963 02E2                                 S3965 02F0  
                               ?_ISR 0070                   __size_of_AD_Sample 005C  
                               l2220 0000                                 l1502 0000  
                               l2231 0000                                 l2223 0000  
                               l2217 0000                                 l1505 0000  
                               l1514 0000                                 l1508 0000  
                               l3301 0000                                 l2237 0000  
                               l1517 0000                                 l3303 0000  
                               l3311 0000                                 l1528 021A  
                               l3305 0000                                 l3313 0000  
                               l3321 0263                                 l1490 0326  
                               l3307 0000                                 l3315 0000  
                               l3323 0000                                 l3411 0000  
                               l1493 0000                                 l3309 0000  
                               l3317 0000                                 l3341 0000  
                               l3405 022D                                 l3319 0000  
                               l3335 0000                                 l3351 0000  
                               l3431 0000                                 l3407 0000  
                               l3503 00A0                                 l1496 0000  
                               l1576 0000                                 l3337 0000  
                               l3345 0000                                 l3417 0239  
                               l3433 0000                                 l3601 00F4  
                               l3513 00A9                                 l3505 00A2  
                               l3283 0000                                 l1499 0000  
                               l3291 0000                                 l3427 023C  
                               l3611 00FA                                 l3515 00AB  
                               l3451 0000                                 l3285 0000  
                               l3293 0000                                 l3349 0000  
                               l3429 0000                                 l3437 0000  
                               l3701 015A                                 l3621 0103  
                               l3525 00B1                                 l3509 00A7  
                               l3461 0000                                 l3453 0000  
                               l3287 0000                                 l3295 0000  
                               l3391 0000                                 l3439 0000  
                               l3703 015C                                 l3535 00B7  
                               l3471 0050                                 l3463 0042  
                               l3455 0000                                 l3447 0000  
                               l3289 0000                                 l3297 0000  
                               l3713 0162                                 l3641 0121  
                               l3633 010C                                 l3625 0000  
                               l3561 0000                                 l3545 00BD  
                               l3465 0000                                 l3457 0000  
                               l3449 0000                                 l3299 0000  
                               l3395 0000                                 l3723 0169  
                               l3635 011A                                 l3627 0000  
                               l3571 00DF                                 l3555 00C7  
                               l3491 0084                                 l3483 006B  
                               l3475 005E                                 l3459 0000  
                               l3645 0123                                 l3637 011C  
                               l3581 00E8                                 l3477 0060  
                               l3469 0000                                 l3399 0208  
                               l3743 018E                                 l3735 0172  
                               l3727 0000                                 l3647 0125  
                               l3591 00EE                                 l3575 00E4  
                               l3567 00D0                                 l3559 0000  
                               l3495 0090                                 l3487 0077  
                               l3479 0067                                 l3737 0187  
                               l3729 0000                                 l3681 0000  
                               l3657 012B                                 l3569 00DD  
                               l3771 01A1                                 l3763 0000  
                               l3747 0190                                 l3739 0189  
                               l3691 0151                                 l3683 0000  
                               l3667 0131                                 l3579 00E6  
                               l3499 009C                                 l3765 0000  
                               l3749 0192                                 l3693 0153  
                               l3677 0139                                 l3775 01AF  
                               l3759 0198                                 l3697 0158  
                               l3689 0142                                 l3779 01C0  
                               _ADIE 046A                                 _ADIF 006A  
                               _ADON 00F8                                 _PEIE 005E  
               ??_getAdOriginalValue 0049                                 _main 000D  
                               btemp 007E                                 start 000B  
            ?_getAdOriginalCh14Value 0047                    main@ucTimerDelay1 0043  
                  main@ucTimerDelay2 0044                    main@ucTimerDelay3 0045  
                  main@ucTimerDelay4 0046                                ??_ISR 0074  
         __end_of_isPermitSampleTime 0338                  _sampleChannelSelect 004C  
             ??_getAdOriginaCh4Value 0049                                ?_main 0070  
                              _DACR0 0088                                _CLKPR 0108  
                              _T1CON 0010                      __end_of_adc_get 02C1  
                              _PBOD6 0C46                                _TMR1H 000F  
                              _TMR1L 000E                setAD_ConvertFlag@flag 0047  
                              _timer 007A                                pclath 000A  
                              status 0003                                wtemp0 007E  
     __end_of_getAdOriginalCh14Value 0333                 __end_of_clrSampeTime 0342  
                       __end_of_main 01D1               __size_of_adc_test_init 0015  
                  __end_of_AD_Sample 0249                               ??_main 004C  
                             _ADCON0 001F                               _ADCON1 009F  
               __end_of_clock_config 0329                               _DACCON 0087  
                             _ADRESH 001E                               _ADRESL 009E  
                             _CLKPCE 0847                               i1l2240 0000  
                             i1l1505 0000                               i1l1583 0286  
                             i1l3361 0000                               i1l3371 0290  
                             i1l3355 0000                               i1l1588 02AF  
                             i1l3365 0000                               i1l3383 02A9  
                             i1l3375 0000                               i1l3359 0000  
                             i1l3385 0000                               i1l3377 0000  
                             i1l3379 0000                               i1l3389 0000  
                   __end_of_dac_init 033D                               _TMR1IE 0460  
                             _TMR1IF 0060                    _getAD_ConvertFlag 01E6  
                  _setAD_ConvertFlag 01E8                               _TRISA0 0428  
                             _TRISA1 0429                               _TRISB0 0430  
                             _TRISA2 042A                               _TRISB1 0431  
                             _TRISA3 042B                               _TRISB2 0432  
                             _TRISB3 0433                               _TRISB4 0434  
                             _TRISA6 042E                               _TRISB5 0435  
                             _TRISA7 042F                               _TRISB7 0437  
                 ?_getAD_ConvertFlag 0070                   ?_setAD_ConvertFlag 0070  
                   __end_of_op1_init 0307                     __end_of_op2_init 0321  
                          ??_adc_get 0072                  ??_getAD_ConvertFlag 0047  
                ??_setAD_ConvertFlag 0047                               clrloop 0312  
                             saved_w 007E          ?_process_AD_Converter_Value 0070  
                      _adc_test_init 024E            __end_of_getAD_ConvertFlag 01E8  
          __end_of_setAD_ConvertFlag 01ED                   __size_of_adc_start 0003  
                     __pcstackCOMMON 0070                         __pidataBANK0 0000  
            _adc_original_CH14_value 002C                __end_of_timer1_config 0311  
                     ?_adc_test_init 0047     __size_of_timer1_interrupt_config 0003  
              __size_of_clrSampeTime 0002                           __pbssBANK0 0020  
       __size_ofi1_setAD_ConvertFlag 0003                           adc_get@val 0072  
                         __pmaintext 000D                           __pintentry 0004  
                          ?_dac_init 0070                __size_of_clock_config 0008  
                            _OP1CON0 001B                              _OP1CON1 001C  
                            _OP1CON2 001D                              _OP2CON0 009B  
                            _OP2CON1 009C                              _OP2CON2 009D  
                       _clrSampeTime 0340                    __end_of_adc_start 0266  
                          ?_op1_init 0070                            ?_op2_init 0070  
                 _isPermitSampleTime 0333               _buffer_Sample_AD_Value 0020  
                 _adc_original_value 0030           __size_of_getAD_ConvertFlag 0002  
         __size_of_setAD_ConvertFlag 0005          __size_of_getAdOriginalValue 0005  
                ?_isPermitSampleTime 0070                           _uiBigTimer 0076  
                       _clock_config 0321                              _adc_get 02B6  
                _multiFilterMaxValue 0032                  _multiFilterMinValue 0034  
               ??_isPermitSampleTime 0047                           ??_dac_init 0047  
                          _AD_Sample 01ED                         __size_of_ISR 0046  
      __size_of_getAdOriginaCh4Value 0005                      ??_adc_test_init 0048  
                         ??_op1_init 0047                           ??_op2_init 0047  
               end_of_initialization 02D1                     main@ucLoaderStep 003D  
                         ?_AD_Sample 0070                   main@ucChannel4Type 003C  
                   _adc_convert_flag 0079              _timer1_interrupt_config 033D  
                     AD_Sample@index 004B                     main@ucTimerDelay 0042  
                   main@ucTimerCount 0038                  i1_setAD_ConvertFlag 02C1  
                start_initialization 02C4                          __end_of_ISR 02B6  
           ??_getAdOriginalCh14Value 0049                 ?i1_setAD_ConvertFlag 0070  
         main@AD_sample_process_step 003B                          __pdataBANK0 004C  
                        ??_AD_Sample 0049            ??_timer1_interrupt_config 0047  
                        __pbssCOMMON 0076                    __size_of_dac_init 0005  
                      __pcstackBANK0 0047                            _adc_start 0263  
                  __size_of_op1_init 000B                    __size_of_op2_init 0008  
              ??i1_setAD_ConvertFlag 0070               __size_of_timer1_config 000A  
                          __ptext410 0249                            __ptext411 01E8  
                          __ptext420 0338                            __ptext412 01E6  
                          __ptext421 024E                            __ptext413 0329  
                          __ptext422 033D                            __ptext414 032E  
                          __ptext423 0307                            __ptext415 0340  
                          __ptext424 0321                            __ptext416 0333  
                          __ptext408 01D1                            __ptext425 0270  
                          __ptext417 0263                            __ptext409 01ED  
                          __ptext426 02C1                            __ptext418 0319  
                          __ptext427 02B6                            __ptext419 02FC  
                          __ptext428 0000                             ?_adc_get 0070  
             _adc_original_CH4_value 002E                            __pswtext1 02D4  
                          __pswtext2 02E2                            __pswtext3 02F0  
                    ISR@ucTimer1sCnt 0078           __end_of_getAdOriginalValue 024E  
                         ?_adc_start 0070      __size_of_getAdOriginalCh14Value 0005  
                  interrupt_function 0004         __end_of_getAdOriginaCh4Value 032E  
    __end_of_timer1_interrupt_config 0340                 adc_test_init@channel 0049  
        __size_of_isPermitSampleTime 0005                         _uiSmallTimer 0036  
              __end_of_adc_test_init 0263                        _timer1_config 0307  
       ??_process_AD_Converter_Value 004C               _getAdOriginalCh14Value 032E  
                   __size_of_adc_get 000B  __size_of_process_AD_Converter_Value 0015  
                           _dac_init 0338                       ?_timer1_config 0070  
                           _op1_init 02FC                             _op2_init 0319  
                        ??_adc_start 0047                        __size_of_main 01C4  
                           clear_ram 0311                        ?_clrSampeTime 0070  
               _getAdOriginaCh4Value 0329                          _sampleTimes 003A  
                           intlevel1 0000                    main@ucLoaderStep1 003E  
                  main@ucLoaderStep2 003F                    main@ucLoaderStep3 0040  
                  main@ucLoaderStep4 0041                        ?_clock_config 0070  
            i1setAD_ConvertFlag@flag 0070                       ??_clrSampeTime 0047  
              ?_getAdOriginaCh4Value 0047                      ??_timer1_config 0047  
        __end_ofi1_setAD_ConvertFlag 02C4   __end_of_process_AD_Converter_Value 01E6  
         _process_AD_Converter_Value 01D1                     adc_test_init@ref 0047  
                 _getAdOriginalValue 0249  
