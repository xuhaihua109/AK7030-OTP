

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Fri Dec 20 15:01:13 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,delta=2
    16                           	psect	text1367,local,class=CODE,delta=2
    17                           	psect	text1368,local,class=CODE,delta=2
    18                           	psect	text1369,local,class=CODE,delta=2
    19                           	psect	text1370,local,class=CODE,delta=2
    20                           	psect	text1371,local,class=CODE,delta=2
    21                           	psect	text1376,local,class=CODE,delta=2
    22                           	psect	text1377,local,class=CODE,delta=2
    23                           	psect	text1378,local,class=CODE,delta=2
    24                           	psect	text1379,local,class=CODE,delta=2
    25                           	psect	text1380,local,class=CODE,delta=2
    26                           	psect	text1381,local,class=CODE,delta=2
    27                           	psect	text1382,local,class=CODE,delta=2
    28                           	psect	text1383,local,class=CODE,delta=2
    29                           	psect	text1384,local,class=CODE,delta=2
    30                           	psect	text1385,local,class=CODE,delta=2
    31                           	psect	text1387,local,class=CODE,delta=2
    32                           	psect	text1389,local,class=CODE,delta=2
    33                           	psect	text1390,local,class=CODE,delta=2
    34                           	psect	text1391,local,class=CODE,delta=2
    35                           	psect	text1392,local,class=CODE,delta=2
    36                           	psect	text1393,local,class=CODE,delta=2
    37                           	psect	text1398,local,class=CODE,delta=2
    38                           	psect	text1399,local,class=CODE,delta=2
    39                           	psect	text1400,local,class=CODE,delta=2
    40                           	psect	text1408,local,class=CODE,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	text1415,local,class=CODE,delta=2
    43                           	psect	pa_nodes,global,class=CODE,delta=2
    44                           	dabs	1,0x1E0,16
    45                           	dabs	1,0x7E,2
    46  000A                     	;#
    47                           
    48                           	psect	config
    49  2000  0FFF               	dw	4095	;#
    50  2001  3FDE               	dw	16350	;#
    51  2002  3F78               	dw	16248	;#
    52                           
    53                           	psect	idataBANK0
    54  0000                     __pidataBANK0:	
    55  01E0                     _key	set	480	;_key
    56  001F                     _ADCON0	set	31
    57  001E                     _ADRESH	set	30
    58  0017                     _CCP1CON	set	23
    59  0015                     _CCPR1L	set	21
    60  001B                     _OP1CON0	set	27
    61  001C                     _OP1CON1	set	28
    62  001D                     _OP1CON2	set	29
    63  0010                     _T1CON	set	16
    64  0012                     _T2CON	set	18
    65  000F                     _TMR1H	set	15
    66  000E                     _TMR1L	set	14
    67  006A                     _ADIF	set	106
    68  00F8                     _ADON	set	248
    69  005F                     _GIE	set	95
    70  00F9                     _GO	set	249
    71  0030                     _PB0	set	48
    72  0031                     _PB1	set	49
    73  0032                     _PB2	set	50
    74  0033                     _PB3	set	51
    75  005E                     _PEIE	set	94
    76  0060                     _TMR1IF	set	96
    77  009F                     _ADCON1	set	159
    78  009E                     _ADRESL	set	158
    79  0092                     _PR2	set	146
    80  046A                     _ADIE	set	1130
    81  0460                     _TMR1IE	set	1120
    82  0430                     _TRISB0	set	1072
    83  0431                     _TRISB1	set	1073
    84  0432                     _TRISB2	set	1074
    85  0433                     _TRISB3	set	1075
    86  0434                     _TRISB4	set	1076
    87  0435                     _TRISB5	set	1077
    88  0108                     _CLKPR	set	264
    89  0847                     _CLKPCE	set	2119
    90  0C42                     _PBOD2	set	3138
    91  0C78                     _SRAM_MAP	set	3192
    92                           
    93                           	psect	cinit
    94  0545                     start_initialization:	
    95  0545  303D               	movlw	low __pbssBANK0
    96                           
    97                           ; Clear objects allocated to COMMON
    98  0546  01FB               	clrf	__pbssCOMMON& (0+127)
    99  0547  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   100  0548  01FD               	clrf	(__pbssCOMMON+2)& (0+127)
   101                           
   102                           ; Clear objects allocated to BANK0
   103  0549  1383               	bcf	3,7	;select IRP bank0
   104  054A  0084               	movwf	4
   105  054B  3055               	movlw	low (__pbssBANK0+24)
   106  054C  118A  25FD  118A   	fcall	clear_ram
   107                           
   108                           ; Clear objects allocated to BANK1
   109  054F  30A0               	movlw	low __pbssBANK1
   110  0550  0084               	movwf	4
   111  0551  30C0               	movlw	low (__pbssBANK1+32)
   112  0552  118A  25FD         	fcall	clear_ram
   113                           
   114                           ;initializer for _sampleChannelSelect
   115  0554  3002               	movlw	2
   116  0555  00D5               	movwf	__pdataBANK0& (0+127)
   117                           
   118                           ;initializer for vPutSampleDataIntoTable@uiInitWidth
   119  0556  304B               	movlw	75
   120  0557  00D6               	movwf	(__pdataBANK0+1)& (0+127)
   121  0558                     end_of_initialization:	
   122                           ;End of C runtime variable initialization code
   123                           
   124  0558  0183               	clrf	3
   125  0559  118A  2A34         	ljmp	_main	;jump to C main() function
   126                           
   127                           	psect	bssCOMMON
   128  007B                     __pbssCOMMON:	
   129  007B                     vPutSampleDataIntoTable@uiCalWidthArrayNew:	
   130  007B                     	ds	2
   131  007D                     vPutSampleDataIntoTable@ucCh12Length:	
   132  007D                     	ds	1
   133                           
   134                           	psect	bssBANK0
   135  003D                     __pbssBANK0:	
   136  003D                     _uiBigTimer:	
   137  003D                     	ds	2
   138  003F                     _uiOneHourTimer:	
   139  003F                     	ds	2
   140  0041                     _uiSmallTimer:	
   141  0041                     	ds	2
   142  0043                     vPutSampleDataIntoTable@uiCalWidthArrayOld:	
   143  0043                     	ds	2
   144  0045                     ISR@ucTimer1sCnt:	
   145  0045                     	ds	1
   146  0046                     _adc_convert_flag:	
   147  0046                     	ds	1
   148  0047                     _bBigTimerStartFlag:	
   149  0047                     	ds	1
   150  0048                     _bOneHourTimerStartFlag:	
   151  0048                     	ds	1
   152  0049                     _bSmallTimerStartFlag:	
   153  0049                     	ds	1
   154  004A                     _bTwentyMinStartFlag:	
   155  004A                     	ds	1
   156  004B                     _bWaitResetFlag:	
   157  004B                     	ds	1
   158  004C                     _sampleTimes:	
   159  004C                     	ds	1
   160  004D                     _timer:	
   161  004D                     	ds	1
   162  004E                     main@cTimerP5s_795:	
   163  004E                     	ds	1
   164  004F                     main@cTimerP5s_801:	
   165  004F                     	ds	1
   166  0050                     main@ucStep:	
   167  0050                     	ds	1
   168  0051                     main@ucTimerP3s:	
   169  0051                     	ds	1
   170  0052                     main@ucTimerP5s:	
   171  0052                     	ds	1
   172  0053                     vPutSampleDataIntoTable@ucCh13Length:	
   173  0053                     	ds	1
   174  0054                     vPutSampleDataIntoTable@ucChannelFourteenthLength:	
   175  0054                     	ds	1
   176                           
   177                           	psect	dataBANK0
   178  0055                     __pdataBANK0:	
   179  0055                     _sampleChannelSelect:	
   180  0055                     	ds	1
   181  0056                     vPutSampleDataIntoTable@uiInitWidth:	
   182  0056                     	ds	1
   183                           
   184                           	psect	bssBANK1
   185  00A0                     __pbssBANK1:	
   186  00A0                     _ad_offset:	
   187  00A0                     	ds	2
   188  00A2                     _uiTwentyMinTimer:	
   189  00A2                     	ds	2
   190  00A4                     _uiTwentySecondsTimer:	
   191  00A4                     	ds	2
   192  00A6                     main@ucDelay1s:	
   193  00A6                     	ds	2
   194  00A8                     main@uiTimerOneP5s:	
   195  00A8                     	ds	2
   196  00AA                     main@uiTimerTwoP5s:	
   197  00AA                     	ds	2
   198  00AC                     vPutSampleDataIntoTable@uiCalWidthCnt:	
   199  00AC                     	ds	2
   200  00AE                     _uiSampleCh12:	
   201  00AE                     	ds	6
   202  00B4                     _uiSampleCh13:	
   203  00B4                     	ds	6
   204  00BA                     _uiSampleChannelFourteenth:	
   205  00BA                     	ds	6
   206                           
   207                           	psect	clrtext
   208  05FD                     clear_ram:	
   209                           ;	Called with FSR containing the base address, and
   210                           ;	W with the last address+1
   211                           
   212  05FD  0064               	clrwdt	;clear the watchdog before getting into this loop
   213  05FE                     clrloop:	
   214  05FE  0180               	clrf	0	;clear RAM location pointed to by FSR
   215  05FF  0A84               	incf	4,f	;increment pointer
   216  0600  0604               	xorwf	4,w	;XOR with final address
   217  0601  1903               	btfsc	3,2	;have we reached the end yet?
   218  0602  3400               	retlw	0	;all done for this memory range, return
   219  0603  0604               	xorwf	4,w	;XOR again to restore value
   220  0604  2DFE               	goto	clrloop	;do the next byte
   221                           
   222                           	psect	cstackBANK1
   223  00C0                     __pcstackBANK1:	
   224  00C0                     ??_FilterCh13:	
   225                           
   226                           ; 0 bytes @ 0x0
   227  00C0                     	ds	4
   228  00C4                     FilterCh13@tmpValue:	
   229                           
   230                           ; 1 bytes @ 0x4
   231  00C4                     	ds	1
   232  00C5                     FilterCh13@filter_temp:	
   233                           
   234                           ; 2 bytes @ 0x5
   235  00C5                     	ds	2
   236  00C7                     FilterCh13@filter_sum:	
   237                           
   238                           ; 2 bytes @ 0x7
   239  00C7                     	ds	2
   240  00C9                     FilterCh13@filter_buf:	
   241                           
   242                           ; 6 bytes @ 0x9
   243  00C9                     	ds	6
   244  00CF                     FilterCh13@cir:	
   245                           
   246                           ; 2 bytes @ 0xF
   247  00CF                     	ds	2
   248  00D1                     FilterCh13@j:	
   249                           
   250                           ; 1 bytes @ 0x11
   251  00D1                     	ds	1
   252  00D2                     FilterCh13@i:	
   253                           
   254                           ; 1 bytes @ 0x12
   255  00D2                     	ds	1
   256  00D3                     ??_main:	
   257                           
   258                           ; 0 bytes @ 0x13
   259  00D3                     	ds	1
   260  00D4                     main@ucChValue:	
   261                           
   262                           ; 2 bytes @ 0x14
   263  00D4                     	ds	2
   264  00D6                     main@uiCh13Value:	
   265                           
   266                           ; 2 bytes @ 0x16
   267  00D6                     	ds	2
   268                           
   269                           	psect	cstackCOMMON
   270  0070                     __pcstackCOMMON:	
   271  0070                     ?_clearTwelveHoursTimer:	
   272  0070                     ?_clearThreeHoursTimer:	
   273                           ; 0 bytes @ 0x0
   274                           
   275  0070                     ?_clearOneHoursTimer:	
   276                           ; 0 bytes @ 0x0
   277                           
   278  0070                     ?_clearTwentyMinTimer:	
   279                           ; 0 bytes @ 0x0
   280                           
   281  0070                     ?_clock_config:	
   282                           ; 0 bytes @ 0x0
   283                           
   284  0070                     ?_timer1_config:	
   285                           ; 0 bytes @ 0x0
   286                           
   287  0070                     ?_timer1_interrupt_config:	
   288                           ; 0 bytes @ 0x0
   289                           
   290  0070                     ?_uid_get:	
   291                           ; 0 bytes @ 0x0
   292                           
   293  0070                     ?_op1_init:	
   294                           ; 0 bytes @ 0x0
   295                           
   296  0070                     ?_adc_start:	
   297                           ; 0 bytes @ 0x0
   298                           
   299  0070                     ?_process_AD_Converter_Value:	
   300                           ; 0 bytes @ 0x0
   301                           
   302  0070                     ?_clrSampeTime:	
   303                           ; 0 bytes @ 0x0
   304                           
   305  0070                     ?_setWaitResetFlag:	
   306                           ; 0 bytes @ 0x0
   307                           
   308  0070                     ?_AD_Sample:	
   309                           ; 0 bytes @ 0x0
   310                           
   311  0070                     ?_initPB3:	
   312                           ; 0 bytes @ 0x0
   313                           
   314  0070                     ?_setPB3:	
   315                           ; 0 bytes @ 0x0
   316                           
   317  0070                     ?_initPB4:	
   318                           ; 0 bytes @ 0x0
   319                           
   320  0070                     ?_setPB4:	
   321                           ; 0 bytes @ 0x0
   322                           
   323  0070                     ?_initPB5:	
   324                           ; 0 bytes @ 0x0
   325                           
   326  0070                     ?_setPB5:	
   327                           ; 0 bytes @ 0x0
   328                           
   329  0070                     ?_initPB2_AsHighResistence:	
   330                           ; 0 bytes @ 0x0
   331                           
   332  0070                     ?_initPin:	
   333                           ; 0 bytes @ 0x0
   334                           
   335  0070                     ?_setPinInitVaule:	
   336                           ; 0 bytes @ 0x0
   337                           
   338  0070                     ?_selectAdChannel:	
   339                           ; 0 bytes @ 0x0
   340                           
   341  0070                     ?_reset:	
   342                           ; 0 bytes @ 0x0
   343                           
   344  0070                     ?_resetAllTimer:	
   345                           ; 0 bytes @ 0x0
   346                           
   347  0070                     ??_getWaitResetFlag:	
   348                           ; 0 bytes @ 0x0
   349                           
   350  0070                     ?_setPWM_Width:	
   351                           ; 0 bytes @ 0x0
   352                           
   353  0070                     ??_setPWM_Width:	
   354                           ; 0 bytes @ 0x0
   355                           
   356  0070                     ?_setAD_ConvertFlag:	
   357                           ; 0 bytes @ 0x0
   358                           
   359  0070                     ?_ISR:	
   360                           ; 0 bytes @ 0x0
   361                           
   362  0070                     ?i1_setAD_ConvertFlag:	
   363                           ; 0 bytes @ 0x0
   364                           
   365  0070                     ??i1_setAD_ConvertFlag:	
   366                           ; 0 bytes @ 0x0
   367                           
   368  0070                     ?_isPermitSampleTime:	
   369                           ; 0 bytes @ 0x0
   370                           
   371  0070                     ?_isFinishedTwentyMinTimer:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0070                     ?_isFinishedTwelveHoursTimer:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0070                     ?_isFinishedThreeHoursTimer:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0070                     ?_isFinishedOneHoursTimer:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0070                     ?_getWaitResetFlag:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0070                     ?_getAD_ConvertFlag:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0070                     ?_adc_get:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ?_main:	
   393                           ; 2 bytes @ 0x0
   394                           
   395  0070                     ?_Filter:	
   396                           ; 2 bytes @ 0x0
   397                           
   398  0070                     setPWM_Width@ucWidth:	
   399                           ; 2 bytes @ 0x0
   400                           
   401  0070                     i1setAD_ConvertFlag@flag:	
   402                           ; 1 bytes @ 0x0
   403                           
   404                           
   405                           ; 1 bytes @ 0x0
   406  0070                     	ds	2
   407  0072                     ??_adc_get:	
   408  0072                     ??_Filter:	
   409                           ; 0 bytes @ 0x2
   410                           
   411  0072                     adc_get@val:	
   412                           ; 0 bytes @ 0x2
   413                           
   414                           
   415                           ; 2 bytes @ 0x2
   416  0072                     	ds	4
   417  0076                     ?_vPutSampleDataIntoTable:	
   418  0076                     vPutSampleDataIntoTable@uiSampleData:	
   419                           ; 0 bytes @ 0x6
   420                           
   421                           
   422                           ; 2 bytes @ 0x6
   423  0076                     	ds	2
   424  0078                     vPutSampleDataIntoTable@channel:	
   425                           
   426                           ; 1 bytes @ 0x8
   427  0078                     	ds	1
   428  0079                     ??_vPutSampleDataIntoTable:	
   429                           
   430                           ; 0 bytes @ 0x9
   431  0079                     	ds	2
   432                           
   433                           	psect	cstackBANK0
   434  0020                     __pcstackBANK0:	
   435  0020                     Filter@filter_temp:	
   436                           
   437                           ; 2 bytes @ 0x0
   438  0020                     	ds	2
   439  0022                     Filter@filter_sum:	
   440                           
   441                           ; 2 bytes @ 0x2
   442  0022                     	ds	2
   443  0024                     Filter@tmpValue:	
   444                           
   445                           ; 1 bytes @ 0x4
   446  0024                     	ds	1
   447  0025                     Filter@filter_buf:	
   448                           
   449                           ; 6 bytes @ 0x5
   450  0025                     	ds	6
   451  002B                     Filter@cir:	
   452                           
   453                           ; 2 bytes @ 0xB
   454  002B                     	ds	2
   455  002D                     Filter@j:	
   456                           
   457                           ; 1 bytes @ 0xD
   458  002D                     	ds	1
   459  002E                     Filter@i:	
   460                           
   461                           ; 1 bytes @ 0xE
   462  002E                     	ds	1
   463  002F                     vPutSampleDataIntoTable@uiAbstractValue:	
   464                           
   465                           ; 2 bytes @ 0xF
   466  002F                     	ds	2
   467  0031                     vPutSampleDataIntoTable@i:	
   468                           
   469                           ; 2 bytes @ 0x11
   470  0031                     	ds	2
   471  0033                     vPutSampleDataIntoTable@uiDeviationValue:	
   472                           
   473                           ; 2 bytes @ 0x13
   474  0033                     	ds	2
   475  0035                     ??_ISR:	
   476                           
   477                           ; 0 bytes @ 0x15
   478  0035                     	ds	4
   479  0039                     ??_clearTwelveHoursTimer:	
   480  0039                     ??_clearThreeHoursTimer:	
   481                           ; 0 bytes @ 0x19
   482                           
   483  0039                     ??_clearOneHoursTimer:	
   484                           ; 0 bytes @ 0x19
   485                           
   486  0039                     ??_clearTwentyMinTimer:	
   487                           ; 0 bytes @ 0x19
   488                           
   489  0039                     ??_clock_config:	
   490                           ; 0 bytes @ 0x19
   491                           
   492  0039                     ??_timer1_config:	
   493                           ; 0 bytes @ 0x19
   494                           
   495  0039                     ??_timer1_interrupt_config:	
   496                           ; 0 bytes @ 0x19
   497                           
   498  0039                     ??_uid_get:	
   499                           ; 0 bytes @ 0x19
   500                           
   501  0039                     ??_op1_init:	
   502                           ; 0 bytes @ 0x19
   503                           
   504  0039                     ?_adc_test_init:	
   505                           ; 0 bytes @ 0x19
   506                           
   507  0039                     ?_startTwentyMinTimer:	
   508                           ; 0 bytes @ 0x19
   509                           
   510  0039                     ??_adc_start:	
   511                           ; 0 bytes @ 0x19
   512                           
   513  0039                     ??_isPermitSampleTime:	
   514                           ; 0 bytes @ 0x19
   515                           
   516  0039                     ??_clrSampeTime:	
   517                           ; 0 bytes @ 0x19
   518                           
   519  0039                     ??_isFinishedTwentyMinTimer:	
   520                           ; 0 bytes @ 0x19
   521                           
   522  0039                     ?_startTwelveHourTimer:	
   523                           ; 0 bytes @ 0x19
   524                           
   525  0039                     ??_isFinishedTwelveHoursTimer:	
   526                           ; 0 bytes @ 0x19
   527                           
   528  0039                     ?_startThreeHoursTimer:	
   529                           ; 0 bytes @ 0x19
   530                           
   531  0039                     ??_isFinishedThreeHoursTimer:	
   532                           ; 0 bytes @ 0x19
   533                           
   534  0039                     ?_startOneHoursTimer:	
   535                           ; 0 bytes @ 0x19
   536                           
   537  0039                     ??_isFinishedOneHoursTimer:	
   538                           ; 0 bytes @ 0x19
   539                           
   540  0039                     ??_setWaitResetFlag:	
   541                           ; 0 bytes @ 0x19
   542                           
   543  0039                     ??_AD_Sample:	
   544                           ; 0 bytes @ 0x19
   545                           
   546  0039                     ??_initPB3:	
   547                           ; 0 bytes @ 0x19
   548                           
   549  0039                     ??_setPB3:	
   550                           ; 0 bytes @ 0x19
   551                           
   552  0039                     ??_initPB4:	
   553                           ; 0 bytes @ 0x19
   554                           
   555  0039                     ??_setPB4:	
   556                           ; 0 bytes @ 0x19
   557                           
   558  0039                     ??_initPB5:	
   559                           ; 0 bytes @ 0x19
   560                           
   561  0039                     ??_setPB5:	
   562                           ; 0 bytes @ 0x19
   563                           
   564  0039                     ??_initPB2_AsHighResistence:	
   565                           ; 0 bytes @ 0x19
   566                           
   567  0039                     ?_pwm_start:	
   568                           ; 0 bytes @ 0x19
   569                           
   570  0039                     ??_selectAdChannel:	
   571                           ; 0 bytes @ 0x19
   572                           
   573  0039                     ??_reset:	
   574                           ; 0 bytes @ 0x19
   575                           
   576  0039                     ??_resetAllTimer:	
   577                           ; 0 bytes @ 0x19
   578                           
   579  0039                     ??_getAD_ConvertFlag:	
   580                           ; 0 bytes @ 0x19
   581                           
   582  0039                     ??_setAD_ConvertFlag:	
   583                           ; 0 bytes @ 0x19
   584                           
   585  0039                     ?_FilterCh13:	
   586                           ; 0 bytes @ 0x19
   587                           
   588  0039                     initPB3@bValue:	
   589                           ; 2 bytes @ 0x19
   590                           
   591  0039                     setPB3@bValue:	
   592                           ; 1 bytes @ 0x19
   593                           
   594  0039                     initPB4@bValue:	
   595                           ; 1 bytes @ 0x19
   596                           
   597  0039                     setPB4@bValue:	
   598                           ; 1 bytes @ 0x19
   599                           
   600  0039                     initPB5@bValue:	
   601                           ; 1 bytes @ 0x19
   602                           
   603  0039                     setPB5@bValue:	
   604                           ; 1 bytes @ 0x19
   605                           
   606  0039                     pwm_start@ucPulseFrequency:	
   607                           ; 1 bytes @ 0x19
   608                           
   609  0039                     setWaitResetFlag@bValue:	
   610                           ; 1 bytes @ 0x19
   611                           
   612  0039                     setAD_ConvertFlag@flag:	
   613                           ; 1 bytes @ 0x19
   614                           
   615  0039                     adc_test_init@ref:	
   616                           ; 1 bytes @ 0x19
   617                           
   618  0039                     startTwelveHourTimer@uiSetTime:	
   619                           ; 1 bytes @ 0x19
   620                           
   621  0039                     startThreeHoursTimer@uiSetTime:	
   622                           ; 2 bytes @ 0x19
   623                           
   624  0039                     startOneHoursTimer@uiSetTime:	
   625                           ; 2 bytes @ 0x19
   626                           
   627  0039                     startTwentyMinTimer@uiSetValue:	
   628                           ; 2 bytes @ 0x19
   629                           
   630                           
   631                           ; 2 bytes @ 0x19
   632  0039                     	ds	1
   633  003A                     ??_adc_test_init:	
   634  003A                     ??_pwm_start:	
   635                           ; 0 bytes @ 0x1A
   636                           
   637  003A                     ??_initPin:	
   638                           ; 0 bytes @ 0x1A
   639                           
   640  003A                     ??_setPinInitVaule:	
   641                           ; 0 bytes @ 0x1A
   642                           
   643  003A                     pwm_start@ucPulseWidth:	
   644                           ; 0 bytes @ 0x1A
   645                           
   646                           
   647                           ; 1 bytes @ 0x1A
   648  003A                     	ds	1
   649  003B                     ??_startTwentyMinTimer:	
   650  003B                     ??_startTwelveHourTimer:	
   651                           ; 0 bytes @ 0x1B
   652                           
   653  003B                     ??_startThreeHoursTimer:	
   654                           ; 0 bytes @ 0x1B
   655                           
   656  003B                     ??_startOneHoursTimer:	
   657                           ; 0 bytes @ 0x1B
   658                           
   659  003B                     ?_getAdOriginalCh13Value:	
   660                           ; 0 bytes @ 0x1B
   661                           
   662  003B                     adc_test_init@channel:	
   663                           ; 2 bytes @ 0x1B
   664                           
   665                           
   666                           ; 1 bytes @ 0x1B
   667  003B                     	ds	1
   668  003C                     ??_process_AD_Converter_Value:	
   669                           
   670                           ; 0 bytes @ 0x1C
   671  003C                     	ds	1
   672  003D                     ??_getAdOriginalCh13Value:	
   673                           
   674                           	psect	maintext
   675  0234                     __pmaintext:	
   676                           ; 0 bytes @ 0x1D
   677 ;;Data sizes: Strings 0, constant 0, data 2, bss 59, persistent 0 stack 0
   678 ;;Auto spaces:   Size  Autos    Used
   679 ;; COMMON          14     11      14
   680 ;; BANK0           80     29      55
   681 ;; BANK1           80     24      56
   682 ;; BANK3           80      0       0
   683 ;; BANK2           96      0       0
   684 ;;
   685 ;; Pointer list with targets:
   686 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   687 ;;
   688 ;; ?_getAdOriginalCh13Value	unsigned int  size(1) Largest target is 0
   689 ;;
   690 ;; ?_Filter	unsigned int  size(1) Largest target is 0
   691 ;;
   692 ;; ?_FilterCh13	unsigned int  size(1) Largest target is 0
   693 ;;
   694 ;; Filter@tmpValue	PTR unsigned int  size(1) Largest target is 6
   695 ;;		 -> uiSampleChannelFourteenth(BANK1[6]), uiSampleCh12(BANK1[6]), 
   696 ;;
   697 ;; FilterCh13@tmpValue	PTR unsigned int  size(1) Largest target is 6
   698 ;;		 -> uiSampleCh13(BANK1[6]), 
   699 ;;
   700 ;;
   701 ;; Critical Paths under _main in COMMON
   702 ;;
   703 ;;   None.
   704 ;;
   705 ;; Critical Paths under _ISR in COMMON
   706 ;;
   707 ;;   _ISR->_vPutSampleDataIntoTable
   708 ;;   _vPutSampleDataIntoTable->_Filter
   709 ;;
   710 ;; Critical Paths under _main in BANK0
   711 ;;
   712 ;;   _main->_getAdOriginalCh13Value
   713 ;;   _getAdOriginalCh13Value->_FilterCh13
   714 ;;   _process_AD_Converter_Value->_adc_test_init
   715 ;;   _setPinInitVaule->_setPB3
   716 ;;   _setPinInitVaule->_setPB4
   717 ;;   _setPinInitVaule->_setPB5
   718 ;;   _initPin->_initPB3
   719 ;;   _initPin->_initPB4
   720 ;;   _initPin->_initPB5
   721 ;;
   722 ;; Critical Paths under _ISR in BANK0
   723 ;;
   724 ;;   _ISR->_vPutSampleDataIntoTable
   725 ;;   _vPutSampleDataIntoTable->_Filter
   726 ;;
   727 ;; Critical Paths under _main in BANK1
   728 ;;
   729 ;;   _getAdOriginalCh13Value->_FilterCh13
   730 ;;
   731 ;; Critical Paths under _ISR in BANK1
   732 ;;
   733 ;;   None.
   734 ;;
   735 ;; Critical Paths under _main in BANK3
   736 ;;
   737 ;;   None.
   738 ;;
   739 ;; Critical Paths under _ISR in BANK3
   740 ;;
   741 ;;   None.
   742 ;;
   743 ;; Critical Paths under _main in BANK2
   744 ;;
   745 ;;   None.
   746 ;;
   747 ;; Critical Paths under _ISR in BANK2
   748 ;;
   749 ;;   None.
   750 ;;
   751 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   752 ;;
   753 ;;
   754 ;;Call Graph Tables:
   755 ;;
   756 ;; ---------------------------------------------------------------------------------
   757 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   758 ;; ---------------------------------------------------------------------------------
   759 ;; (0) _main                                                 5     5      0    1665
   760 ;;                                             19 BANK1      5     5      0
   761 ;;                            _initPin
   762 ;;                    _setPinInitVaule
   763 ;;                    _selectAdChannel
   764 ;;                       _clock_config
   765 ;;                      _timer1_config
   766 ;;            _timer1_interrupt_config
   767 ;;                            _uid_get
   768 ;;                           _op1_init
   769 ;;                      _adc_test_init
   770 ;;                _startTwentyMinTimer
   771 ;;                          _adc_start
   772 ;;         _process_AD_Converter_Value
   773 ;;                 _isPermitSampleTime
   774 ;;                       _clrSampeTime
   775 ;;           _isFinishedTwentyMinTimer
   776 ;;             _getAdOriginalCh13Value
   777 ;;                          _pwm_start
   778 ;;                             _setPB3
   779 ;;                             _setPB4
   780 ;;                             _setPB5
   781 ;;                _clearTwentyMinTimer
   782 ;;               _startTwelveHourTimer
   783 ;;         _isFinishedTwelveHoursTimer
   784 ;;              _clearTwelveHoursTimer
   785 ;;               _startThreeHoursTimer
   786 ;;          _isFinishedThreeHoursTimer
   787 ;;               _clearThreeHoursTimer
   788 ;;                 _startOneHoursTimer
   789 ;;            _isFinishedOneHoursTimer
   790 ;;                      _resetAllTimer
   791 ;;                   _setWaitResetFlag
   792 ;;                              _reset
   793 ;; ---------------------------------------------------------------------------------
   794 ;; (1) _getAdOriginalCh13Value                               2     0      2     915
   795 ;;                                             27 BANK0      2     0      2
   796 ;;                         _FilterCh13
   797 ;; ---------------------------------------------------------------------------------
   798 ;; (1) _process_AD_Converter_Value                           0     0      0      93
   799 ;;                  _getAD_ConvertFlag
   800 ;;                  _setAD_ConvertFlag
   801 ;;                          _AD_Sample
   802 ;;                      _adc_test_init
   803 ;;                          _adc_start
   804 ;; ---------------------------------------------------------------------------------
   805 ;; (1) _resetAllTimer                                        0     0      0       0
   806 ;;              _clearTwelveHoursTimer
   807 ;;               _clearThreeHoursTimer
   808 ;;                 _clearOneHoursTimer
   809 ;;                _clearTwentyMinTimer
   810 ;; ---------------------------------------------------------------------------------
   811 ;; (1) _setPinInitVaule                                      0     0      0      93
   812 ;;                             _setPB3
   813 ;;                             _setPB4
   814 ;;                             _setPB5
   815 ;; ---------------------------------------------------------------------------------
   816 ;; (1) _initPin                                              0     0      0      93
   817 ;;           _initPB2_AsHighResistence
   818 ;;                            _initPB3
   819 ;;                            _initPB4
   820 ;;                            _initPB5
   821 ;; ---------------------------------------------------------------------------------
   822 ;; (2) _AD_Sample                                            0     0      0       0
   823 ;; ---------------------------------------------------------------------------------
   824 ;; (2) _setAD_ConvertFlag                                    1     1      0      31
   825 ;;                                             25 BANK0      1     1      0
   826 ;; ---------------------------------------------------------------------------------
   827 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   828 ;; ---------------------------------------------------------------------------------
   829 ;; (2) _FilterCh13                                          21    19      2     915
   830 ;;                                             25 BANK0      2     0      2
   831 ;;                                              0 BANK1     19    19      0
   832 ;; ---------------------------------------------------------------------------------
   833 ;; (1) _setWaitResetFlag                                     1     1      0      31
   834 ;;                                             25 BANK0      1     1      0
   835 ;; ---------------------------------------------------------------------------------
   836 ;; (1) _isFinishedOneHoursTimer                              0     0      0       0
   837 ;; ---------------------------------------------------------------------------------
   838 ;; (1) _startOneHoursTimer                                   2     0      2      31
   839 ;;                                             25 BANK0      2     0      2
   840 ;; ---------------------------------------------------------------------------------
   841 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   842 ;; ---------------------------------------------------------------------------------
   843 ;; (1) _startThreeHoursTimer                                 2     0      2      31
   844 ;;                                             25 BANK0      2     0      2
   845 ;; ---------------------------------------------------------------------------------
   846 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   847 ;; ---------------------------------------------------------------------------------
   848 ;; (1) _startTwelveHourTimer                                 2     0      2      31
   849 ;;                                             25 BANK0      2     0      2
   850 ;; ---------------------------------------------------------------------------------
   851 ;; (1) _isFinishedTwentyMinTimer                             0     0      0       0
   852 ;; ---------------------------------------------------------------------------------
   853 ;; (1) _clrSampeTime                                         0     0      0       0
   854 ;; ---------------------------------------------------------------------------------
   855 ;; (1) _isPermitSampleTime                                   0     0      0       0
   856 ;; ---------------------------------------------------------------------------------
   857 ;; (2) _adc_start                                            0     0      0       0
   858 ;; ---------------------------------------------------------------------------------
   859 ;; (1) _startTwentyMinTimer                                  2     0      2      31
   860 ;;                                             25 BANK0      2     0      2
   861 ;; ---------------------------------------------------------------------------------
   862 ;; (2) _adc_test_init                                        3     2      1      62
   863 ;;                                             25 BANK0      3     2      1
   864 ;; ---------------------------------------------------------------------------------
   865 ;; (1) _op1_init                                             0     0      0       0
   866 ;; ---------------------------------------------------------------------------------
   867 ;; (1) _uid_get                                              0     0      0       0
   868 ;; ---------------------------------------------------------------------------------
   869 ;; (1) _timer1_interrupt_config                              0     0      0       0
   870 ;; ---------------------------------------------------------------------------------
   871 ;; (1) _timer1_config                                        0     0      0       0
   872 ;; ---------------------------------------------------------------------------------
   873 ;; (1) _clock_config                                         0     0      0       0
   874 ;; ---------------------------------------------------------------------------------
   875 ;; (2) _clearTwentyMinTimer                                  0     0      0       0
   876 ;; ---------------------------------------------------------------------------------
   877 ;; (2) _clearOneHoursTimer                                   0     0      0       0
   878 ;; ---------------------------------------------------------------------------------
   879 ;; (2) _clearThreeHoursTimer                                 0     0      0       0
   880 ;; ---------------------------------------------------------------------------------
   881 ;; (2) _clearTwelveHoursTimer                                0     0      0       0
   882 ;; ---------------------------------------------------------------------------------
   883 ;; (1) _reset                                                0     0      0       0
   884 ;; ---------------------------------------------------------------------------------
   885 ;; (1) _selectAdChannel                                      0     0      0       0
   886 ;; ---------------------------------------------------------------------------------
   887 ;; (1) _pwm_start                                            2     1      1      62
   888 ;;                                             25 BANK0      2     1      1
   889 ;; ---------------------------------------------------------------------------------
   890 ;; (2) _initPB2_AsHighResistence                             0     0      0       0
   891 ;; ---------------------------------------------------------------------------------
   892 ;; (1) _setPB5                                               1     1      0      31
   893 ;;                                             25 BANK0      1     1      0
   894 ;; ---------------------------------------------------------------------------------
   895 ;; (2) _initPB5                                              1     1      0      31
   896 ;;                                             25 BANK0      1     1      0
   897 ;; ---------------------------------------------------------------------------------
   898 ;; (1) _setPB4                                               1     1      0      31
   899 ;;                                             25 BANK0      1     1      0
   900 ;; ---------------------------------------------------------------------------------
   901 ;; (2) _initPB4                                              1     1      0      31
   902 ;;                                             25 BANK0      1     1      0
   903 ;; ---------------------------------------------------------------------------------
   904 ;; (1) _setPB3                                               1     1      0      31
   905 ;;                                             25 BANK0      1     1      0
   906 ;; ---------------------------------------------------------------------------------
   907 ;; (2) _initPB3                                              1     1      0      31
   908 ;;                                             25 BANK0      1     1      0
   909 ;; ---------------------------------------------------------------------------------
   910 ;; Estimated maximum stack depth 2
   911 ;; ---------------------------------------------------------------------------------
   912 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   913 ;; ---------------------------------------------------------------------------------
   914 ;; (3) _ISR                                                  4     4      0    1208
   915 ;;                                             21 BANK0      4     4      0
   916 ;;                i1_setAD_ConvertFlag
   917 ;;                            _adc_get
   918 ;;            _vPutSampleDataIntoTable
   919 ;; ---------------------------------------------------------------------------------
   920 ;; (4) _vPutSampleDataIntoTable                             11     8      3    1110
   921 ;;                                              6 COMMON     5     2      3
   922 ;;                                             15 BANK0      6     6      0
   923 ;;                             _Filter
   924 ;;                   _getWaitResetFlag
   925 ;;                       _setPWM_Width
   926 ;;                            _adc_get (ARG)
   927 ;; ---------------------------------------------------------------------------------
   928 ;; (4) i1_setAD_ConvertFlag                                  1     1      0      73
   929 ;;                                              0 COMMON     1     1      0
   930 ;; ---------------------------------------------------------------------------------
   931 ;; (4) _adc_get                                              4     2      2      25
   932 ;;                                              0 COMMON     4     2      2
   933 ;; ---------------------------------------------------------------------------------
   934 ;; (5) _Filter                                              21    19      2     620
   935 ;;                                              0 COMMON     6     4      2
   936 ;;                                              0 BANK0     15    15      0
   937 ;; ---------------------------------------------------------------------------------
   938 ;; (5) _setPWM_Width                                         1     1      0      33
   939 ;;                                              0 COMMON     1     1      0
   940 ;; ---------------------------------------------------------------------------------
   941 ;; (5) _getWaitResetFlag                                     0     0      0       0
   942 ;; ---------------------------------------------------------------------------------
   943 ;; Estimated maximum stack depth 5
   944 ;; ---------------------------------------------------------------------------------
   945 ;; Call Graph Graphs:
   946 ;; _main (ROOT)
   947 ;;   _initPin
   948 ;;     _initPB2_AsHighResistence
   949 ;;     _initPB3
   950 ;;     _initPB4
   951 ;;     _initPB5
   952 ;;   _setPinInitVaule
   953 ;;     _setPB3
   954 ;;     _setPB4
   955 ;;     _setPB5
   956 ;;   _selectAdChannel
   957 ;;   _clock_config
   958 ;;   _timer1_config
   959 ;;   _timer1_interrupt_config
   960 ;;   _uid_get
   961 ;;   _op1_init
   962 ;;   _adc_test_init
   963 ;;   _startTwentyMinTimer
   964 ;;   _adc_start
   965 ;;   _process_AD_Converter_Value
   966 ;;     _getAD_ConvertFlag
   967 ;;     _setAD_ConvertFlag
   968 ;;     _AD_Sample
   969 ;;     _adc_test_init
   970 ;;     _adc_start
   971 ;;   _isPermitSampleTime
   972 ;;   _clrSampeTime
   973 ;;   _isFinishedTwentyMinTimer
   974 ;;   _getAdOriginalCh13Value
   975 ;;     _FilterCh13
   976 ;;   _pwm_start
   977 ;;   _setPB3
   978 ;;   _setPB4
   979 ;;   _setPB5
   980 ;;   _clearTwentyMinTimer
   981 ;;   _startTwelveHourTimer
   982 ;;   _isFinishedTwelveHoursTimer
   983 ;;   _clearTwelveHoursTimer
   984 ;;   _startThreeHoursTimer
   985 ;;   _isFinishedThreeHoursTimer
   986 ;;   _clearThreeHoursTimer
   987 ;;   _startOneHoursTimer
   988 ;;   _isFinishedOneHoursTimer
   989 ;;   _resetAllTimer
   990 ;;     _clearTwelveHoursTimer
   991 ;;     _clearThreeHoursTimer
   992 ;;     _clearOneHoursTimer
   993 ;;     _clearTwentyMinTimer
   994 ;;   _setWaitResetFlag
   995 ;;   _reset
   996 ;;
   997 ;; _ISR (ROOT)
   998 ;;   i1_setAD_ConvertFlag
   999 ;;   _adc_get
  1000 ;;   _vPutSampleDataIntoTable
  1001 ;;     _Filter
  1002 ;;     _getWaitResetFlag
  1003 ;;     _setPWM_Width
  1004 ;;     _adc_get (ARG)
  1005 ;;
  1006 ;; Address spaces:
  1007 ;;Name               Size   Autos  Total    Cost      Usage
  1008 ;;BANK3               50      0       0      10        0.0%
  1009 ;;BITBANK3            50      0       0       9        0.0%
  1010 ;;SFR3                 0      0       0       4        0.0%
  1011 ;;BITSFR3              0      0       0       4        0.0%
  1012 ;;BANK2               60      0       0      12        0.0%
  1013 ;;BITBANK2            60      0       0      11        0.0%
  1014 ;;SFR2                 0      0       0       5        0.0%
  1015 ;;BITSFR2              0      0       0       5        0.0%
  1016 ;;SFR1                 0      0       0       2        0.0%
  1017 ;;BITSFR1              0      0       0       2        0.0%
  1018 ;;BANK1               50     18      38       8       70.0%
  1019 ;;BITBANK1            50      0       0       7        0.0%
  1020 ;;CODE                 0      0       0       0        0.0%
  1021 ;;DATA                 0      0      85       6        0.0%
  1022 ;;ABS                  0      0      7D       3        0.0%
  1023 ;;NULL                 0      0       0       0        0.0%
  1024 ;;STACK                0      0       8       2        0.0%
  1025 ;;BANK0               50     1D      37       5       68.8%
  1026 ;;BITBANK0            50      0       0       4        0.0%
  1027 ;;SFR0                 0      0       0       1        0.0%
  1028 ;;BITSFR0              0      0       0       1        0.0%
  1029 ;;COMMON               E      B       E       1      100.0%
  1030 ;;BITCOMMON            E      0       0       0        0.0%
  1031                           
  1032                           
  1033 ;; *************** function _main *****************
  1034 ;; Defined at:
  1035 ;;		line 529 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\main.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;		None
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;  ucChValue       2   20[BANK1 ] unsigned int 
  1040 ;;  uiCh13Value     2   22[BANK1 ] unsigned int 
  1041 ;; Return value:  Size  Location     Type
  1042 ;;                  2  738[COMMON] int 
  1043 ;; Registers used:
  1044 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1045 ;; Tracked objects:
  1046 ;;		On entry : 17F/0
  1047 ;;		On exit  : 40/0
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1050 ;;      Params:         0       0       0       0       0
  1051 ;;      Locals:         0       0       4       0       0
  1052 ;;      Temps:          0       0       1       0       0
  1053 ;;      Totals:         0       0       5       0       0
  1054 ;;Total ram usage:        5 bytes
  1055 ;; Hardware stack levels required when called:    5
  1056 ;; This function calls:
  1057 ;;		_initPin
  1058 ;;		_setPinInitVaule
  1059 ;;		_selectAdChannel
  1060 ;;		_clock_config
  1061 ;;		_timer1_config
  1062 ;;		_timer1_interrupt_config
  1063 ;;		_uid_get
  1064 ;;		_op1_init
  1065 ;;		_adc_test_init
  1066 ;;		_startTwentyMinTimer
  1067 ;;		_adc_start
  1068 ;;		_process_AD_Converter_Value
  1069 ;;		_isPermitSampleTime
  1070 ;;		_clrSampeTime
  1071 ;;		_isFinishedTwentyMinTimer
  1072 ;;		_getAdOriginalCh13Value
  1073 ;;		_pwm_start
  1074 ;;		_setPB3
  1075 ;;		_setPB4
  1076 ;;		_setPB5
  1077 ;;		_clearTwentyMinTimer
  1078 ;;		_startTwelveHourTimer
  1079 ;;		_isFinishedTwelveHoursTimer
  1080 ;;		_clearTwelveHoursTimer
  1081 ;;		_startThreeHoursTimer
  1082 ;;		_isFinishedThreeHoursTimer
  1083 ;;		_clearThreeHoursTimer
  1084 ;;		_startOneHoursTimer
  1085 ;;		_isFinishedOneHoursTimer
  1086 ;;		_resetAllTimer
  1087 ;;		_setWaitResetFlag
  1088 ;;		_reset
  1089 ;; This function is called by:
  1090 ;;		Startup code after reset
  1091 ;; This function uses a non-reentrant model
  1092 ;;
  1093  0234                     _main:	
  1094                           
  1095                           ;main.c: 530: enum systemStep {
  1096                           ;main.c: 531: INIT_STEP = 0,
  1097                           ;main.c: 532: START_UP_PWM_STEP,
  1098                           ;main.c: 533: CHECK_10_HOUR_TIMER_STEP,
  1099                           ;main.c: 534: STARTUP_3_HOUR_TIMER_STEP,
  1100                           ;main.c: 535: CHECK_3_HOUR_TIMER_STEP,
  1101                           ;main.c: 536: STARTUP_1_HOUR_TIMER_STEP,
  1102                           ;main.c: 537: CHECK_1_HOUR_TIMER_STEP,
  1103                           ;main.c: 538: READY_FOR_RESET_STEP = 99,
  1104                           ;main.c: 539: DELAY_ONE_SECOND_FOR_PWM,
  1105                           ;main.c: 540: MEET_RESET_CONDITION_STEP,
  1106                           ;main.c: 541: RESET_STEP,
  1107                           ;main.c: 542: };
  1108                           ;main.c: 544: static enum systemStep ucStep = INIT_STEP;
  1109                           
  1110                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1111  0234  118A  24D9  118A   	fcall	_initPin
  1112                           
  1113                           ;main.c: 558: setPinInitVaule();
  1114  0237  118A  250A  118A   	fcall	_setPinInitVaule
  1115                           
  1116                           ;main.c: 559: selectAdChannel();
  1117  023A  118A  2611  118A   	fcall	_selectAdChannel
  1118                           
  1119                           ;main.c: 561: clock_config();
  1120  023D  118A  2605  118A   	fcall	_clock_config
  1121                           
  1122                           ;main.c: 562: timer1_config();
  1123  0240  118A  25EA  118A   	fcall	_timer1_config
  1124                           
  1125                           ;main.c: 563: timer1_interrupt_config();
  1126  0243  118A  2618  118A   	fcall	_timer1_interrupt_config
  1127                           
  1128                           ;main.c: 565: uid_get();
  1129  0246  118A  2584  118A   	fcall	_uid_get
  1130                           
  1131                           ;main.c: 567: op1_init();
  1132  0249  118A  25F4  118A   	fcall	_op1_init
  1133  024C  3002               	movlw	2
  1134                           
  1135                           ;main.c: 569: adc_test_init(2,0);
  1136  024D  01B9               	clrf	?_adc_test_init
  1137  024E  118A  24BA  118A   	fcall	_adc_test_init
  1138                           
  1139                           ;main.c: 575: startTwentyMinTimer( 1200 );
  1140  0251  30B0               	movlw	176
  1141  0252  1283               	bcf	3,5	;RP0=0, select bank0
  1142  0253  00B9               	movwf	?_startTwentyMinTimer
  1143  0254  3004               	movlw	4
  1144  0255  00BA               	movwf	?_startTwentyMinTimer+1
  1145  0256  118A  2570  118A   	fcall	_startTwentyMinTimer
  1146                           
  1147                           ;main.c: 576: _delay(1000);
  1148  0259  30F9               	movlw	249
  1149  025A  1683               	bsf	3,5	;RP0=1, select bank1
  1150  025B  00D3               	movwf	??_main^(0+128)
  1151  025C                     u2257:	
  1152  025C  0064               	clrwdt
  1153  025D  0BD3               	decfsz	??_main^(0+128),f
  1154  025E  2A5C               	goto	u2257
  1155  025F  2A60               	nop2	;nop
  1156  0260  0064               	clrwdt
  1157                           
  1158                           ;main.c: 577: adc_start();
  1159  0261  118A  24D5  118A   	fcall	_adc_start
  1160                           
  1161                           ;main.c: 612: switch(ucStep)
  1162  0264  2BB1               	goto	l4325
  1163  0265                     l4333:	
  1164                           
  1165                           ;main.c: 616: {
  1166                           ;main.c: 621: static unsigned char ucTimerP3s = 0;
  1167                           ;main.c: 623: if( isFinishedTwentyMinTimer() )
  1168  0265  118A  25BF  118A   	fcall	_isFinishedTwentyMinTimer
  1169  0268  3A00               	xorlw	0
  1170  0269  1903               	skipnz
  1171  026A  2A70               	goto	l4339
  1172                           
  1173                           ;main.c: 624: {
  1174                           ;main.c: 625: ucStep = READY_FOR_RESET_STEP;
  1175  026B  3063               	movlw	99
  1176  026C  1283               	bcf	3,5	;RP0=0, select bank0
  1177  026D  00D0               	movwf	main@ucStep
  1178                           
  1179                           ;main.c: 626: ucTimerP3s = 0;
  1180  026E  01D1               	clrf	main@ucTimerP3s
  1181                           
  1182                           ;main.c: 627: }
  1183  026F  2BB1               	goto	l4325
  1184  0270                     l4339:	
  1185                           
  1186                           ;main.c: 628: else
  1187                           ;main.c: 629: {
  1188                           ;main.c: 630: if( getAdOriginalCh13Value() > 145 )
  1189  0270  118A  23E2  118A   	fcall	_getAdOriginalCh13Value
  1190  0273  3000               	movlw	0
  1191  0274  023C               	subwf	?_getAdOriginalCh13Value+1,w
  1192  0275  3092               	movlw	146
  1193  0276  1903               	skipnz
  1194  0277  023B               	subwf	?_getAdOriginalCh13Value,w
  1195  0278  1C03               	skipc
  1196  0279  2A7C               	goto	l4343
  1197                           
  1198                           ;main.c: 631: {
  1199                           ;main.c: 632: ucTimerP3s++;
  1200  027A  0AD1               	incf	main@ucTimerP3s,f
  1201                           
  1202                           ;main.c: 633: }
  1203  027B  2A7D               	goto	l4345
  1204  027C                     l4343:	
  1205                           
  1206                           ;main.c: 634: else
  1207                           ;main.c: 635: ucTimerP3s = 0;
  1208  027C  01D1               	clrf	main@ucTimerP3s
  1209  027D                     l4345:	
  1210                           
  1211                           ;main.c: 637: if( ucTimerP3s >= 30)
  1212  027D  301E               	movlw	30
  1213  027E  0251               	subwf	main@ucTimerP3s,w
  1214  027F  1C03               	skipc
  1215  0280  2BB1               	goto	l4325
  1216                           
  1217                           ;main.c: 638: {
  1218                           ;main.c: 639: ucTimerP3s = 0;
  1219  0281  01D1               	clrf	main@ucTimerP3s
  1220  0282                     l4349:	
  1221                           
  1222                           ;main.c: 640: ucStep = START_UP_PWM_STEP;
  1223  0282  01D0               	clrf	main@ucStep
  1224  0283  0AD0               	incf	main@ucStep,f
  1225  0284  2BB1               	goto	l4325
  1226  0285                     l4351:	
  1227                           
  1228                           ;main.c: 651: {
  1229                           ;main.c: 656: pwm_start(150,249);
  1230  0285  30F9               	movlw	249
  1231  0286  00B9               	movwf	?_pwm_start
  1232  0287  3096               	movlw	150
  1233  0288  118A  255B  118A   	fcall	_pwm_start
  1234                           
  1235                           ;main.c: 658: setPB3(0);
  1236  028B  3000               	movlw	0
  1237  028C  118A  2512  118A   	fcall	_setPB3
  1238                           
  1239                           ;main.c: 659: setPB4(1);
  1240  028F  3001               	movlw	1
  1241  0290  118A  251B  118A   	fcall	_setPB4
  1242                           
  1243                           ;main.c: 660: setPB5(0);
  1244  0293  3000               	movlw	0
  1245  0294  118A  2523  118A   	fcall	_setPB5
  1246                           
  1247                           ;main.c: 661: clearTwentyMinTimer();
  1248  0297  118A  253F  118A   	fcall	_clearTwentyMinTimer
  1249                           
  1250                           ;main.c: 662: startTwelveHourTimer( 36000);
  1251  029A  30A0               	movlw	160
  1252  029B  00B9               	movwf	?_startTwelveHourTimer
  1253  029C  308C               	movlw	140
  1254  029D  00BA               	movwf	?_startTwelveHourTimer+1
  1255  029E  118A  25B1  118A   	fcall	_startTwelveHourTimer
  1256                           
  1257                           ;main.c: 663: ucStep = CHECK_10_HOUR_TIMER_STEP;
  1258  02A1  3002               	movlw	2
  1259  02A2  2BAB               	goto	L8
  1260  02A3                     l4359:	
  1261                           ;main.c: 664: break;
  1262                           
  1263                           
  1264                           ;main.c: 668: {
  1265                           ;main.c: 673: static unsigned char ucTimerP5s = 0;
  1266                           ;main.c: 675: if( isFinishedTwelveHoursTimer () )
  1267  02A3  118A  25E0  118A   	fcall	_isFinishedTwelveHoursTimer
  1268  02A6  3A00               	xorlw	0
  1269  02A7  1903               	skipnz
  1270  02A8  2AAB               	goto	l4363
  1271  02A9                     l4361:	
  1272                           
  1273                           ;main.c: 676: ucStep = READY_FOR_RESET_STEP;
  1274  02A9  3063               	movlw	99
  1275  02AA  2BAB               	goto	L8
  1276  02AB                     l4363:	
  1277                           
  1278                           ;main.c: 677: else
  1279                           ;main.c: 678: {
  1280                           ;main.c: 679: if( getAdOriginalCh13Value() < 322 )
  1281  02AB  118A  23E2  118A   	fcall	_getAdOriginalCh13Value
  1282  02AE  3001               	movlw	1
  1283  02AF  023C               	subwf	?_getAdOriginalCh13Value+1,w
  1284  02B0  3042               	movlw	66
  1285  02B1  1903               	skipnz
  1286  02B2  023B               	subwf	?_getAdOriginalCh13Value,w
  1287  02B3  1803               	skipnc
  1288  02B4  2AB7               	goto	l4367
  1289                           
  1290                           ;main.c: 680: ucTimerP5s++;
  1291  02B5  0AD2               	incf	main@ucTimerP5s,f
  1292  02B6  2AB8               	goto	l4369
  1293  02B7                     l4367:	
  1294                           
  1295                           ;main.c: 681: else
  1296                           ;main.c: 682: ucTimerP5s = 0;
  1297  02B7  01D2               	clrf	main@ucTimerP5s
  1298  02B8                     l4369:	
  1299                           
  1300                           ;main.c: 684: if( ucTimerP5s >= 10)
  1301  02B8  300A               	movlw	10
  1302  02B9  0252               	subwf	main@ucTimerP5s,w
  1303  02BA  1C03               	skipc
  1304  02BB  2BB1               	goto	l4325
  1305  02BC  3003               	movlw	3
  1306                           
  1307                           ;main.c: 685: {
  1308                           ;main.c: 686: ucTimerP5s = 0;
  1309  02BD  01D2               	clrf	main@ucTimerP5s
  1310                           
  1311                           ;main.c: 687: ucStep = STARTUP_3_HOUR_TIMER_STEP;
  1312  02BE  2BAB               	goto	L8
  1313  02BF                     l4375:	
  1314                           
  1315                           ;main.c: 695: {
  1316                           ;main.c: 696: clearTwelveHoursTimer();
  1317  02BF  118A  2532  118A   	fcall	_clearTwelveHoursTimer
  1318                           
  1319                           ;main.c: 697: startThreeHoursTimer(10800);
  1320  02C2  3030               	movlw	48
  1321  02C3  00B9               	movwf	?_startThreeHoursTimer
  1322  02C4  302A               	movlw	42
  1323  02C5  00BA               	movwf	?_startThreeHoursTimer+1
  1324  02C6  118A  25A3  118A   	fcall	_startThreeHoursTimer
  1325                           
  1326                           ;main.c: 698: ucStep = CHECK_3_HOUR_TIMER_STEP;
  1327  02C9  3004               	movlw	4
  1328  02CA  2BAB               	goto	L8
  1329  02CB                     l4379:	
  1330                           ;main.c: 699: break;
  1331                           
  1332                           
  1333                           ;main.c: 703: {
  1334                           ;main.c: 704: static unsigned char ucTimerP5s = 0;
  1335                           ;main.c: 706: if( isFinishedThreeHoursTimer() )
  1336  02CB  118A  25D6  118A   	fcall	_isFinishedThreeHoursTimer
  1337  02CE  3A00               	xorlw	0
  1338  02CF  1D03               	btfss	3,2
  1339  02D0  2AA9               	goto	l4361
  1340                           
  1341                           ;main.c: 708: else
  1342                           ;main.c: 709: {
  1343                           ;main.c: 710: if( getAdOriginalCh13Value() < 105 )
  1344  02D1  118A  23E2  118A   	fcall	_getAdOriginalCh13Value
  1345  02D4  3000               	movlw	0
  1346  02D5  023C               	subwf	?_getAdOriginalCh13Value+1,w
  1347  02D6  3069               	movlw	105
  1348  02D7  1903               	skipnz
  1349  02D8  023B               	subwf	?_getAdOriginalCh13Value,w
  1350  02D9  1803               	skipnc
  1351  02DA  2ADD               	goto	l4387
  1352                           
  1353                           ;main.c: 711: ucTimerP5s++;
  1354  02DB  0ACE               	incf	main@cTimerP5s_795,f
  1355  02DC  2ADE               	goto	l4389
  1356  02DD                     l4387:	
  1357                           
  1358                           ;main.c: 712: else
  1359                           ;main.c: 713: ucTimerP5s = 0;
  1360  02DD  01CE               	clrf	main@cTimerP5s_795
  1361  02DE                     l4389:	
  1362                           
  1363                           ;main.c: 715: if( ucTimerP5s >= 10)
  1364  02DE  300A               	movlw	10
  1365  02DF  024E               	subwf	main@cTimerP5s_795,w
  1366  02E0  1C03               	skipc
  1367  02E1  2BB1               	goto	l4325
  1368  02E2  3005               	movlw	5
  1369                           
  1370                           ;main.c: 716: {
  1371                           ;main.c: 717: ucTimerP5s = 0;
  1372  02E3  01CE               	clrf	main@cTimerP5s_795
  1373                           
  1374                           ;main.c: 718: ucStep = STARTUP_1_HOUR_TIMER_STEP;
  1375  02E4  2BAB               	goto	L8
  1376  02E5                     l4395:	
  1377                           
  1378                           ;main.c: 725: {
  1379                           ;main.c: 726: clearThreeHoursTimer();
  1380  02E5  118A  2537  118A   	fcall	_clearThreeHoursTimer
  1381                           
  1382                           ;main.c: 727: startOneHoursTimer( 3600 );
  1383  02E8  3010               	movlw	16
  1384  02E9  00B9               	movwf	?_startOneHoursTimer
  1385  02EA  300E               	movlw	14
  1386  02EB  00BA               	movwf	?_startOneHoursTimer+1
  1387  02EC  118A  2595  118A   	fcall	_startOneHoursTimer
  1388                           
  1389                           ;main.c: 728: setPB3(1);
  1390  02EF  3001               	movlw	1
  1391  02F0  118A  2512  118A   	fcall	_setPB3
  1392                           
  1393                           ;main.c: 729: setPB4(0);
  1394  02F3  3000               	movlw	0
  1395  02F4  118A  251B  118A   	fcall	_setPB4
  1396                           
  1397                           ;main.c: 730: setPB5(1);
  1398  02F7  3001               	movlw	1
  1399  02F8  118A  2523  118A   	fcall	_setPB5
  1400                           
  1401                           ;main.c: 731: ucStep = CHECK_1_HOUR_TIMER_STEP;
  1402  02FB  3006               	movlw	6
  1403  02FC  2BAB               	goto	L8
  1404  02FD                     l4407:	
  1405                           ;main.c: 732: break;
  1406                           
  1407                           
  1408                           ;main.c: 736: {
  1409                           ;main.c: 741: static unsigned int uiTimerOneP5s = 0;
  1410                           ;main.c: 742: static unsigned int uiTimerTwoP5s = 0;
  1411                           ;main.c: 743: static unsigned int uiTimerThreeP5s = 0;
  1412                           ;main.c: 745: unsigned int uiCh13Value = getAdOriginalCh13Value();
  1413  02FD  118A  23E2  118A   	fcall	_getAdOriginalCh13Value
  1414  0300  083C               	movf	?_getAdOriginalCh13Value+1,w
  1415  0301  1683               	bsf	3,5	;RP0=1, select bank1
  1416  0302  00D7               	movwf	(main@uiCh13Value+1)^(0+128)
  1417  0303  1283               	bcf	3,5	;RP0=0, select bank0
  1418  0304  083B               	movf	?_getAdOriginalCh13Value,w
  1419  0305  1683               	bsf	3,5	;RP0=1, select bank1
  1420  0306  00D6               	movwf	main@uiCh13Value^(0+128)
  1421                           
  1422                           ;main.c: 748: if( isFinishedOneHoursTimer() )
  1423  0307  118A  25CB  118A   	fcall	_isFinishedOneHoursTimer
  1424  030A  3A00               	xorlw	0
  1425  030B  1D03               	btfss	3,2
  1426  030C  2AA9               	goto	l4361
  1427                           
  1428                           ;main.c: 750: else
  1429                           ;main.c: 751: {
  1430                           ;main.c: 752: if( uiCh13Value > 105 )
  1431  030D  3000               	movlw	0
  1432  030E  1683               	bsf	3,5	;RP0=1, select bank1
  1433  030F  0257               	subwf	(main@uiCh13Value+1)^(0+128),w
  1434  0310  306A               	movlw	106
  1435  0311  1903               	skipnz
  1436  0312  0256               	subwf	main@uiCh13Value^(0+128),w
  1437  0313  1C03               	skipc
  1438  0314  2B22               	goto	l4421
  1439                           
  1440                           ;main.c: 753: {
  1441                           ;main.c: 754: if( uiTimerOneP5s <= 10 )
  1442  0315  3000               	movlw	0
  1443  0316  0229               	subwf	(main@uiTimerOneP5s+1)^(0+128),w
  1444  0317  300B               	movlw	11
  1445  0318  1903               	skipnz
  1446  0319  0228               	subwf	main@uiTimerOneP5s^(0+128),w
  1447  031A  1803               	skipnc
  1448  031B  2B1F               	goto	l4419
  1449                           
  1450                           ;main.c: 755: uiTimerOneP5s++;
  1451  031C  0AA8               	incf	main@uiTimerOneP5s^(0+128),f
  1452  031D  1903               	skipnz
  1453  031E  0AA9               	incf	(main@uiTimerOneP5s+1)^(0+128),f
  1454  031F                     l4419:	
  1455                           
  1456                           ;main.c: 757: uiTimerThreeP5s = 0;
  1457  031F  01AA               	clrf	main@uiTimerTwoP5s^(0+128)
  1458  0320  01AB               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1459                           
  1460                           ;main.c: 758: }
  1461  0321  2B24               	goto	l4423
  1462  0322                     l4421:	
  1463                           
  1464                           ;main.c: 759: else
  1465                           ;main.c: 760: {
  1466                           ;main.c: 761: uiTimerOneP5s = 0;
  1467  0322  01A8               	clrf	main@uiTimerOneP5s^(0+128)
  1468  0323  01A9               	clrf	(main@uiTimerOneP5s+1)^(0+128)
  1469  0324                     l4423:	
  1470                           
  1471                           ;main.c: 762: }
  1472                           ;main.c: 765: if(uiTimerOneP5s > 10)
  1473  0324  3000               	movlw	0
  1474  0325  0229               	subwf	(main@uiTimerOneP5s+1)^(0+128),w
  1475  0326  300B               	movlw	11
  1476  0327  1903               	skipnz
  1477  0328  0228               	subwf	main@uiTimerOneP5s^(0+128),w
  1478                           
  1479                           ;main.c: 766: {
  1480                           ;main.c: 767: setPB3(0);
  1481  0329  3000               	movlw	0
  1482  032A  1C03               	skipc
  1483  032B  2B40               	goto	L9
  1484  032C  118A  2512  118A   	fcall	_setPB3
  1485                           
  1486                           ;main.c: 768: setPB4(1);
  1487  032F  3001               	movlw	1
  1488  0330  118A  251B  118A   	fcall	_setPB4
  1489                           
  1490                           ;main.c: 769: setPB5(0);
  1491  0333  3000               	movlw	0
  1492  0334  118A  2523  118A   	fcall	_setPB5
  1493                           
  1494                           ;main.c: 771: uiTimerOneP5s = 0;
  1495  0337  1683               	bsf	3,5	;RP0=1, select bank1
  1496  0338  01A8               	clrf	main@uiTimerOneP5s^(0+128)
  1497  0339  01A9               	clrf	(main@uiTimerOneP5s+1)^(0+128)
  1498                           
  1499                           ;main.c: 772: uiTimerTwoP5s = 0;
  1500  033A  01AA               	clrf	main@uiTimerTwoP5s^(0+128)
  1501  033B  01AB               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1502                           
  1503                           ;main.c: 774: resetAllTimer();
  1504  033C  118A  252B  118A   	fcall	_resetAllTimer
  1505  033F  2A82               	goto	l4349
  1506  0340                     L9:	
  1507                           ;main.c: 778: else
  1508                           ;main.c: 779: {
  1509                           ;main.c: 780: if( uiCh13Value < 105 )
  1510                           
  1511  0340  0257               	subwf	(main@uiCh13Value+1)^(0+128),w
  1512  0341  3069               	movlw	105
  1513  0342  1903               	skipnz
  1514  0343  0256               	subwf	main@uiCh13Value^(0+128),w
  1515  0344  1803               	skipnc
  1516  0345  2B51               	goto	l4441
  1517                           
  1518                           ;main.c: 781: {
  1519                           ;main.c: 783: if( uiTimerTwoP5s <= 10)
  1520  0346  3000               	movlw	0
  1521  0347  022B               	subwf	(main@uiTimerTwoP5s+1)^(0+128),w
  1522  0348  300B               	movlw	11
  1523  0349  1903               	skipnz
  1524  034A  022A               	subwf	main@uiTimerTwoP5s^(0+128),w
  1525  034B  1803               	skipnc
  1526  034C  2B53               	goto	l4443
  1527                           
  1528                           ;main.c: 784: uiTimerTwoP5s++;
  1529  034D  0AAA               	incf	main@uiTimerTwoP5s^(0+128),f
  1530  034E  1903               	skipnz
  1531  034F  0AAB               	incf	(main@uiTimerTwoP5s+1)^(0+128),f
  1532  0350  2B53               	goto	l4443
  1533  0351                     l4441:	
  1534                           
  1535                           ;main.c: 789: uiTimerThreeP5s = 0;
  1536  0351  01AA               	clrf	main@uiTimerTwoP5s^(0+128)
  1537  0352  01AB               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1538  0353                     l4443:	
  1539                           
  1540                           ;main.c: 790: }
  1541                           ;main.c: 792: if(uiTimerTwoP5s > 10)
  1542  0353  3000               	movlw	0
  1543  0354  022B               	subwf	(main@uiTimerTwoP5s+1)^(0+128),w
  1544  0355  300B               	movlw	11
  1545  0356  1903               	skipnz
  1546  0357  022A               	subwf	main@uiTimerTwoP5s^(0+128),w
  1547  0358  1C03               	skipc
  1548  0359  2BB1               	goto	l4325
  1549                           
  1550                           ;main.c: 793: {
  1551                           ;main.c: 794: setPB3(1);
  1552  035A  3001               	movlw	1
  1553  035B  118A  2512  118A   	fcall	_setPB3
  1554                           
  1555                           ;main.c: 795: setPB4(0);
  1556  035E  3000               	movlw	0
  1557  035F  118A  251B  118A   	fcall	_setPB4
  1558                           
  1559                           ;main.c: 796: setPB5(1);
  1560  0362  3001               	movlw	1
  1561  0363  118A  2523  118A   	fcall	_setPB5
  1562  0366  2BB1               	goto	l4325
  1563  0367                     l4447:	
  1564                           
  1565                           ;main.c: 815: {
  1566                           ;main.c: 816: setPB3(0);
  1567  0367  3000               	movlw	0
  1568  0368  118A  2512  118A   	fcall	_setPB3
  1569                           
  1570                           ;main.c: 817: setPB4(0);
  1571  036B  3000               	movlw	0
  1572  036C  118A  251B  118A   	fcall	_setPB4
  1573                           
  1574                           ;main.c: 818: setPB5(1);
  1575  036F  3001               	movlw	1
  1576  0370  118A  2523  118A   	fcall	_setPB5
  1577                           
  1578                           ;main.c: 821: setWaitResetFlag(1);
  1579  0373  3001               	movlw	1
  1580  0374  118A  2615  118A   	fcall	_setWaitResetFlag
  1581                           
  1582                           ;main.c: 822: pwm_start(150,249);
  1583  0377  30F9               	movlw	249
  1584  0378  00B9               	movwf	?_pwm_start
  1585  0379  3096               	movlw	150
  1586  037A  118A  255B  118A   	fcall	_pwm_start
  1587                           
  1588                           ;main.c: 828: ucStep = DELAY_ONE_SECOND_FOR_PWM;
  1589  037D  3064               	movlw	100
  1590  037E  2BAB               	goto	L8
  1591  037F                     l4451:	
  1592                           ;main.c: 829: break;
  1593                           
  1594                           
  1595                           ;main.c: 833: {
  1596                           ;main.c: 834: static unsigned ucDelay1s = 0;
  1597                           ;main.c: 835: if(ucDelay1s <= 50)
  1598  037F  3000               	movlw	0
  1599  0380  1683               	bsf	3,5	;RP0=1, select bank1
  1600  0381  0227               	subwf	(main@ucDelay1s+1)^(0+128),w
  1601  0382  3033               	movlw	51
  1602  0383  1903               	skipnz
  1603  0384  0226               	subwf	main@ucDelay1s^(0+128),w
  1604  0385  1803               	skipnc
  1605  0386  2B8B               	goto	l4455
  1606                           
  1607                           ;main.c: 836: ucDelay1s++;
  1608  0387  0AA6               	incf	main@ucDelay1s^(0+128),f
  1609  0388  1903               	skipnz
  1610  0389  0AA7               	incf	(main@ucDelay1s+1)^(0+128),f
  1611  038A  2BB1               	goto	l4325
  1612  038B                     l4455:	
  1613  038B  3065               	movlw	101
  1614                           
  1615                           ;main.c: 837: else
  1616                           ;main.c: 838: {
  1617                           ;main.c: 839: ucDelay1s = 0;
  1618  038C  01A6               	clrf	main@ucDelay1s^(0+128)
  1619  038D  01A7               	clrf	(main@ucDelay1s+1)^(0+128)
  1620                           
  1621                           ;main.c: 840: ucStep = MEET_RESET_CONDITION_STEP;
  1622  038E  1283               	bcf	3,5	;RP0=0, select bank0
  1623  038F  2BAB               	goto	L8
  1624  0390                     l4459:	
  1625                           
  1626                           ;main.c: 850: {
  1627                           ;main.c: 851: static unsigned char ucTimerP5s = 0;
  1628                           ;main.c: 852: unsigned int ucChValue = getAdOriginalCh13Value();
  1629  0390  118A  23E2  118A   	fcall	_getAdOriginalCh13Value
  1630  0393  083C               	movf	?_getAdOriginalCh13Value+1,w
  1631  0394  1683               	bsf	3,5	;RP0=1, select bank1
  1632  0395  00D5               	movwf	(main@ucChValue+1)^(0+128)
  1633  0396  1283               	bcf	3,5	;RP0=0, select bank0
  1634  0397  083B               	movf	?_getAdOriginalCh13Value,w
  1635  0398  1683               	bsf	3,5	;RP0=1, select bank1
  1636  0399  00D4               	movwf	main@ucChValue^(0+128)
  1637                           
  1638                           ;main.c: 854: if( ucChValue > 81 )
  1639  039A  3000               	movlw	0
  1640  039B  0255               	subwf	(main@ucChValue+1)^(0+128),w
  1641  039C  3052               	movlw	82
  1642  039D  1903               	skipnz
  1643  039E  0254               	subwf	main@ucChValue^(0+128),w
  1644  039F  1C03               	skipc
  1645  03A0  2BA4               	goto	l4465
  1646                           
  1647                           ;main.c: 855: ucTimerP5s++;
  1648  03A1  1283               	bcf	3,5	;RP0=0, select bank0
  1649  03A2  0ACF               	incf	main@cTimerP5s_801,f
  1650  03A3  2BA6               	goto	l4467
  1651  03A4                     l4465:	
  1652                           
  1653                           ;main.c: 856: else
  1654                           ;main.c: 857: ucTimerP5s = 0;
  1655  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  1656  03A5  01CF               	clrf	main@cTimerP5s_801
  1657  03A6                     l4467:	
  1658                           
  1659                           ;main.c: 859: if(ucTimerP5s >= 50)
  1660  03A6  3032               	movlw	50
  1661  03A7  024F               	subwf	main@cTimerP5s_801,w
  1662  03A8  1C03               	skipc
  1663  03A9  2BB1               	goto	l4325
  1664                           
  1665                           ;main.c: 860: ucStep = RESET_STEP;
  1666  03AA  3066               	movlw	102
  1667  03AB                     L8:	
  1668  03AB  00D0               	movwf	main@ucStep
  1669  03AC  2BB1               	goto	l4325
  1670  03AD                     l4471:	
  1671                           
  1672                           ;main.c: 865: {
  1673                           ;main.c: 866: ucStep = INIT_STEP;
  1674  03AD  01D0               	clrf	main@ucStep
  1675                           
  1676                           ;main.c: 867: reset();
  1677  03AE  118A  261D  118A   	fcall	_reset
  1678  03B1                     l4325:	
  1679                           ;main.c: 868: break;
  1680                           
  1681  03B1  0064               	clrwdt	;#
  1682                           
  1683                           ;main.c: 597: process_AD_Converter_Value();
  1684  03B2  118A  248A  118A   	fcall	_process_AD_Converter_Value
  1685                           
  1686                           ;main.c: 599: if( isPermitSampleTime() )
  1687  03B5  118A  260D  118A   	fcall	_isPermitSampleTime
  1688  03B8  3A00               	xorlw	0
  1689  03B9  1903               	skipnz
  1690  03BA  2BB1               	goto	l4325
  1691                           
  1692                           ;main.c: 600: {
  1693                           ;main.c: 603: clrSampeTime();
  1694  03BB  118A  261B  118A   	fcall	_clrSampeTime
  1695  03BE  0850               	movf	main@ucStep,w
  1696                           
  1697                           ; Switch size 1, requested type "space"
  1698                           ; Number of cases is 11, Range of values is 0 to 102
  1699                           ; switch strategies available:
  1700                           ; Name         Instructions Cycles
  1701                           ; simple_byte           34    18 (average)
  1702                           ; direct_byte          213     7 (fixed)
  1703                           ; jumptable            260     6 (fixed)
  1704                           ; rangetable           107     6 (fixed)
  1705                           ; spacedrange          212     9 (fixed)
  1706                           ; locatedrange         103     3 (fixed)
  1707                           ;	Chosen strategy is simple_byte
  1708  03BF  3A00               	xorlw	0	; case 0
  1709  03C0  1903               	skipnz
  1710  03C1  2A65               	goto	l4333
  1711  03C2  3A01               	xorlw	1	; case 1
  1712  03C3  1903               	skipnz
  1713  03C4  2A85               	goto	l4351
  1714  03C5  3A03               	xorlw	3	; case 2
  1715  03C6  1903               	skipnz
  1716  03C7  2AA3               	goto	l4359
  1717  03C8  3A01               	xorlw	1	; case 3
  1718  03C9  1903               	skipnz
  1719  03CA  2ABF               	goto	l4375
  1720  03CB  3A07               	xorlw	7	; case 4
  1721  03CC  1903               	skipnz
  1722  03CD  2ACB               	goto	l4379
  1723  03CE  3A01               	xorlw	1	; case 5
  1724  03CF  1903               	skipnz
  1725  03D0  2AE5               	goto	l4395
  1726  03D1  3A03               	xorlw	3	; case 6
  1727  03D2  1903               	skipnz
  1728  03D3  2AFD               	goto	l4407
  1729  03D4  3A65               	xorlw	101	; case 99
  1730  03D5  1903               	skipnz
  1731  03D6  2B67               	goto	l4447
  1732  03D7  3A07               	xorlw	7	; case 100
  1733  03D8  1903               	skipnz
  1734  03D9  2B7F               	goto	l4451
  1735  03DA  3A01               	xorlw	1	; case 101
  1736  03DB  1903               	skipnz
  1737  03DC  2B90               	goto	l4459
  1738  03DD  3A03               	xorlw	3	; case 102
  1739  03DE  1903               	skipnz
  1740  03DF  2BAD               	goto	l4471
  1741  03E0  2BE1               	goto	l742
  1742  03E1                     l742:	
  1743  03E1  2BB1               	goto	l4325
  1744  03E2                     __end_of_main:	
  1745                           
  1746                           	psect	text1367
  1747  03E2                     __ptext1367:	
  1748 ;; =============== function _main ends ============
  1749                           
  1750                           
  1751 ;; *************** function _getAdOriginalCh13Value *****************
  1752 ;; Defined at:
  1753 ;;		line 410 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;		None
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;		None
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  2   27[BANK0 ] unsigned int 
  1760 ;; Registers used:
  1761 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1762 ;; Tracked objects:
  1763 ;;		On entry : 40/0
  1764 ;;		On exit  : 160/0
  1765 ;;		Unchanged: FFE00/0
  1766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1767 ;;      Params:         0       2       0       0       0
  1768 ;;      Locals:         0       0       0       0       0
  1769 ;;      Temps:          0       0       0       0       0
  1770 ;;      Totals:         0       2       0       0       0
  1771 ;;Total ram usage:        2 bytes
  1772 ;; Hardware stack levels used:    1
  1773 ;; Hardware stack levels required when called:    4
  1774 ;; This function calls:
  1775 ;;		_FilterCh13
  1776 ;; This function is called by:
  1777 ;;		_main
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780  03E2                     _getAdOriginalCh13Value:	
  1781                           
  1782                           ;common.c: 412: return FilterCh13(uiSampleCh13);
  1783                           
  1784                           ; Regs used in _getAdOriginalCh13Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  1785  03E2  30B4               	movlw	_uiSampleCh13& (0+255)
  1786  03E3  23E9               	fcall	_FilterCh13
  1787  03E4  083A               	movf	?_FilterCh13+1,w
  1788  03E5  00BC               	movwf	?_getAdOriginalCh13Value+1
  1789  03E6  0839               	movf	?_FilterCh13,w
  1790  03E7  00BB               	movwf	?_getAdOriginalCh13Value
  1791  03E8  0008               	return
  1792  03E9                     __end_of_getAdOriginalCh13Value:	
  1793  03E9                     __ptext1375:	
  1794 ;; =============== function _getAD_ConvertFlag ends ============
  1795                           
  1796                           
  1797 ;; *************** function _FilterCh13 *****************
  1798 ;; Defined at:
  1799 ;;		line 76 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;  tmpValue        1    wreg     PTR unsigned int 
  1802 ;;		 -> uiSampleCh13(6), 
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;  tmpValue        1    4[BANK1 ] PTR unsigned int 
  1805 ;;		 -> uiSampleCh13(6), 
  1806 ;;  cir             2   15[BANK1 ] int 
  1807 ;;  filter_buf      6    9[BANK1 ] unsigned int [3]
  1808 ;;  filter_sum      2    7[BANK1 ] unsigned int 
  1809 ;;  filter_temp     2    5[BANK1 ] unsigned int 
  1810 ;;  i               1   18[BANK1 ] unsigned char 
  1811 ;;  j               1   17[BANK1 ] unsigned char 
  1812 ;; Return value:  Size  Location     Type
  1813 ;;                  2   25[BANK0 ] unsigned int 
  1814 ;; Registers used:
  1815 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1816 ;; Tracked objects:
  1817 ;;		On entry : 40/0
  1818 ;;		On exit  : 160/0
  1819 ;;		Unchanged: FFE00/0
  1820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1821 ;;      Params:         0       2       0       0       0
  1822 ;;      Locals:         0       0      15       0       0
  1823 ;;      Temps:          0       0       4       0       0
  1824 ;;      Totals:         0       2      19       0       0
  1825 ;;Total ram usage:       21 bytes
  1826 ;; Hardware stack levels used:    1
  1827 ;; Hardware stack levels required when called:    3
  1828 ;; This function calls:
  1829 ;;		Nothing
  1830 ;; This function is called by:
  1831 ;;		_getAdOriginalCh13Value
  1832 ;; This function uses a non-reentrant model
  1833 ;;
  1834  03E9                     _FilterCh13:	
  1835                           
  1836                           ; Regs used in _FilterCh13: [wreg-fsr0h+status,2+status,0+btemp+1]
  1837                           ;FilterCh13@tmpValue stored from wreg
  1838  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  1839  03EA  00C4               	movwf	FilterCh13@tmpValue^(0+128)
  1840  03EB  01D1               	clrf	FilterCh13@j^(0+128)
  1841                           
  1842                           ;common.c: 79: unsigned int filter_temp = 0, filter_sum = 0;
  1843  03EC  01C5               	clrf	FilterCh13@filter_temp^(0+128)
  1844  03ED  01C6               	clrf	(FilterCh13@filter_temp+1)^(0+128)
  1845  03EE  01C7               	clrf	FilterCh13@filter_sum^(0+128)
  1846  03EF  01C8               	clrf	(FilterCh13@filter_sum+1)^(0+128)
  1847                           
  1848                           ;common.c: 81: unsigned int filter_buf[3];
  1849                           ;common.c: 83: for(int cir = 0;cir < 3; cir++)
  1850  03F0  01CF               	clrf	FilterCh13@cir^(0+128)
  1851  03F1  01D0               	clrf	(FilterCh13@cir+1)^(0+128)
  1852  03F2                     l4223:	
  1853                           
  1854                           ;common.c: 84: filter_buf[cir] = *tmpValue++;
  1855  03F2  1683               	bsf	3,5	;RP0=1, select bank1
  1856  03F3  1303               	bcf	3,6	;RP1=0, select bank1
  1857  03F4  0844               	movf	FilterCh13@tmpValue^(0+128),w
  1858  03F5  0084               	movwf	4
  1859  03F6  1383               	bcf	3,7	;select IRP bank0
  1860  03F7  2475  118A         	fcall	PL6	;call to abstracted procedure
  1861  03F9  0D4F               	rlf	FilterCh13@cir^(0+128),w
  1862  03FA  247C  118A         	fcall	PL7	;call to abstracted procedure
  1863  03FC  0AC4               	incf	FilterCh13@tmpValue^(0+128),f
  1864  03FD  0AC4               	incf	FilterCh13@tmpValue^(0+128),f
  1865  03FE  0ACF               	incf	FilterCh13@cir^(0+128),f
  1866  03FF  1903               	skipnz
  1867  0400  0AD0               	incf	(FilterCh13@cir+1)^(0+128),f
  1868  0401  0850               	movf	(FilterCh13@cir+1)^(0+128),w
  1869  0402  3A80               	xorlw	128
  1870  0403  00FF               	movwf	127
  1871  0404  3080               	movlw	128
  1872  0405  027F               	subwf	127,w
  1873  0406  1D03               	skipz
  1874  0407  2C0A               	goto	u1955
  1875  0408  3003               	movlw	3
  1876  0409  024F               	subwf	FilterCh13@cir^(0+128),w
  1877  040A                     u1955:	
  1878  040A  1C03               	skipc
  1879  040B  2BF2               	goto	l4223
  1880                           
  1881                           ;common.c: 88: for(j = 0; j < 3 - 1; j++)
  1882  040C  1683               	bsf	3,5	;RP0=1, select bank1
  1883  040D  1303               	bcf	3,6	;RP1=0, select bank1
  1884  040E  01D1               	clrf	FilterCh13@j^(0+128)
  1885                           
  1886                           ;common.c: 89: {
  1887                           ;common.c: 90: for(i = 0; i < 3 - 1 - j; i++)
  1888  040F  01D2               	clrf	FilterCh13@i^(0+128)
  1889  0410                     l4245:	
  1890  0410  01C1               	clrf	(??_FilterCh13^(0+128)+1)
  1891  0411  0851               	movf	FilterCh13@j^(0+128),w
  1892  0412  3C02               	sublw	2
  1893  0413  00C0               	movwf	??_FilterCh13^(0+128)
  1894  0414  1C03               	skipc
  1895  0415  03C1               	decf	(??_FilterCh13^(0+128)+1),f
  1896  0416  0841               	movf	(??_FilterCh13+1)^(0+128),w
  1897  0417  3A80               	xorlw	128
  1898  0418  3C80               	sublw	128
  1899  0419  1D03               	skipz
  1900  041A  2C1D               	goto	u1975
  1901  041B  0840               	movf	??_FilterCh13^(0+128),w
  1902  041C  0252               	subwf	FilterCh13@i^(0+128),w
  1903  041D                     u1975:	
  1904  041D  1803               	btfsc	3,0
  1905  041E  2C4C               	goto	l4247
  1906                           
  1907                           ;common.c: 91: {
  1908                           ;common.c: 92: if(filter_buf[i] > filter_buf[i + 1])
  1909  041F  1683               	bsf	3,5	;RP0=1, select bank1
  1910  0420  1303               	bcf	3,6	;RP1=0, select bank1
  1911  0421  1003               	clrc
  1912  0422  246B  118A         	fcall	PL5	;call to abstracted procedure
  1913  0424  2484  118A         	fcall	PL9	;call to abstracted procedure
  1914  0426  0800               	movf	0,w
  1915  0427  00C2               	movwf	(??_FilterCh13+2)^(0+128)
  1916  0428  0A84               	incf	4,f
  1917  0429  0800               	movf	0,w
  1918  042A  00C3               	movwf	((??_FilterCh13+2)^(0+128)+1)
  1919  042B  0841               	movf	(??_FilterCh13+1)^(0+128),w
  1920  042C  0243               	subwf	(??_FilterCh13+3)^(0+128),w
  1921  042D  1D03               	skipz
  1922  042E  2C31               	goto	u1965
  1923  042F  0840               	movf	??_FilterCh13^(0+128),w
  1924  0430  0242               	subwf	(??_FilterCh13+2)^(0+128),w
  1925  0431                     u1965:	
  1926  0431  1803               	skipnc
  1927  0432  2C4A               	goto	l4243
  1928                           
  1929                           ;common.c: 93: {
  1930                           ;common.c: 95: filter_temp = filter_buf[i];
  1931  0433  1003               	clrc
  1932  0434  0D52               	rlf	FilterCh13@i^(0+128),w
  1933  0435  3EC9               	addlw	FilterCh13@filter_buf& (0+255)
  1934  0436  0084               	movwf	4
  1935  0437  0800               	movf	0,w
  1936  0438  00C5               	movwf	FilterCh13@filter_temp^(0+128)
  1937  0439  0A84               	incf	4,f
  1938  043A  0800               	movf	0,w
  1939  043B  00C6               	movwf	(FilterCh13@filter_temp+1)^(0+128)
  1940                           
  1941                           ;common.c: 97: filter_buf[i] = filter_buf[i + 1];
  1942  043C  2484  118A         	fcall	PL9	;call to abstracted procedure
  1943  043E  2475  118A         	fcall	PL6	;call to abstracted procedure
  1944  0440  0D52               	rlf	FilterCh13@i^(0+128),w
  1945  0441  247C  118A         	fcall	PL7	;call to abstracted procedure
  1946                           
  1947                           ;common.c: 99: filter_buf[i + 1] = filter_temp;
  1948  0443  2484  118A         	fcall	PL9	;call to abstracted procedure
  1949  0445  0845               	movf	FilterCh13@filter_temp^(0+128),w
  1950  0446  0080               	movwf	0
  1951  0447  0A84               	incf	4,f
  1952  0448  0846               	movf	(FilterCh13@filter_temp+1)^(0+128),w
  1953  0449  0080               	movwf	0
  1954  044A                     l4243:	
  1955  044A  0AD2               	incf	FilterCh13@i^(0+128),f
  1956  044B  2C10               	goto	l4245
  1957  044C                     l4247:	
  1958  044C  1683               	bsf	3,5	;RP0=1, select bank1
  1959  044D  3002               	movlw	2
  1960  044E  1303               	bcf	3,6	;RP1=0, select bank1
  1961  044F  0AD1               	incf	FilterCh13@j^(0+128),f
  1962  0450  0251               	subwf	FilterCh13@j^(0+128),w
  1963                           
  1964                           ;common.c: 100: }
  1965                           ;common.c: 101: }
  1966                           ;common.c: 102: }
  1967                           ;common.c: 104: for(i = 1; i < 3 - 1; i++)
  1968  0451  01D2               	clrf	FilterCh13@i^(0+128)
  1969  0452  1C03               	skipc
  1970  0453  2C10               	goto	l4245
  1971  0454  0AD2               	incf	FilterCh13@i^(0+128),f
  1972                           
  1973                           ;common.c: 105: {
  1974                           ;common.c: 106: filter_sum += filter_buf[i];
  1975  0455  1003               	clrc
  1976  0456                     L11:	
  1977  0456  246B  118A         	fcall	PL5	;call to abstracted procedure
  1978  0458  0840               	movf	??_FilterCh13^(0+128),w
  1979  0459  07C7               	addwf	FilterCh13@filter_sum^(0+128),f
  1980  045A  1803               	skipnc
  1981  045B  0AC8               	incf	(FilterCh13@filter_sum+1)^(0+128),f
  1982  045C  0841               	movf	(??_FilterCh13+1)^(0+128),w
  1983  045D  07C8               	addwf	(FilterCh13@filter_sum+1)^(0+128),f
  1984  045E  3002               	movlw	2
  1985  045F  0AD2               	incf	FilterCh13@i^(0+128),f
  1986  0460  0252               	subwf	FilterCh13@i^(0+128),w
  1987  0461  1C03               	skipc
  1988  0462  2C56               	goto	L11
  1989                           
  1990                           ;common.c: 107: }
  1991                           ;common.c: 110: return (filter_sum >> 0 );
  1992  0463  0848               	movf	(FilterCh13@filter_sum+1)^(0+128),w
  1993  0464  1283               	bcf	3,5	;RP0=0, select bank0
  1994  0465  00BA               	movwf	?_FilterCh13+1
  1995  0466  1683               	bsf	3,5	;RP0=1, select bank1
  1996  0467  0847               	movf	FilterCh13@filter_sum^(0+128),w
  1997  0468  1283               	bcf	3,5	;RP0=0, select bank0
  1998  0469  00B9               	movwf	?_FilterCh13
  1999  046A  0008               	return
  2000  046B                     __end_of_FilterCh13:	
  2001  046B                     PL5:	
  2002  046B  0D52               	rlf	FilterCh13@i^(0+128),w
  2003  046C  3EC9               	addlw	FilterCh13@filter_buf& (0+255)
  2004  046D  0084               	movwf	4
  2005  046E  1383               	bcf	3,7	;select IRP bank1
  2006  046F  0800               	movf	0,w
  2007  0470  00C0               	movwf	??_FilterCh13^(0+128)
  2008  0471  0A84               	incf	4,f
  2009  0472  0800               	movf	0,w
  2010  0473  00C1               	movwf	(??_FilterCh13^(0+128)+1)
  2011  0474  0008               	return
  2012  0475                     PL6:	
  2013  0475  0800               	movf	0,w
  2014  0476  00C0               	movwf	??_FilterCh13^(0+128)
  2015  0477  0A84               	incf	4,f
  2016  0478  0800               	movf	0,w
  2017  0479  00C1               	movwf	(??_FilterCh13^(0+128)+1)
  2018  047A  1003               	clrc
  2019  047B  0008               	return
  2020  047C                     PL7:	
  2021  047C  3EC9               	addlw	FilterCh13@filter_buf& (0+255)
  2022  047D  0084               	movwf	4
  2023  047E  0840               	movf	??_FilterCh13^(0+128),w
  2024  047F  0080               	movwf	0
  2025  0480  0A84               	incf	4,f
  2026  0481  0841               	movf	(??_FilterCh13+1)^(0+128),w
  2027  0482  0080               	movwf	0
  2028  0483  0008               	return
  2029  0484                     PL9:	
  2030  0484  1003               	clrc
  2031  0485  0D52               	rlf	FilterCh13@i^(0+128),w
  2032  0486  3E02               	addlw	2
  2033  0487  3EC9               	addlw	FilterCh13@filter_buf& (0+255)
  2034  0488  0084               	movwf	4
  2035  0489  0008               	return
  2036                           
  2037                           	psect	text1368
  2038  048A                     __ptext1368:	
  2039 ;; =============== function _getAdOriginalCh13Value ends ============
  2040                           
  2041                           
  2042 ;; *************** function _process_AD_Converter_Value *****************
  2043 ;; Defined at:
  2044 ;;		line 432 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  2045 ;; Parameters:    Size  Location     Type
  2046 ;;		None
  2047 ;; Auto vars:     Size  Location     Type
  2048 ;;		None
  2049 ;; Return value:  Size  Location     Type
  2050 ;;		None               void
  2051 ;; Registers used:
  2052 ;;		wreg, status,2, status,0, pclath, cstack
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 60/0
  2056 ;;		Unchanged: FFF9F/0
  2057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2058 ;;      Params:         0       0       0       0       0
  2059 ;;      Locals:         0       0       0       0       0
  2060 ;;      Temps:          0       0       0       0       0
  2061 ;;      Totals:         0       0       0       0       0
  2062 ;;Total ram usage:        0 bytes
  2063 ;; Hardware stack levels used:    1
  2064 ;; Hardware stack levels required when called:    4
  2065 ;; This function calls:
  2066 ;;		_getAD_ConvertFlag
  2067 ;;		_setAD_ConvertFlag
  2068 ;;		_AD_Sample
  2069 ;;		_adc_test_init
  2070 ;;		_adc_start
  2071 ;; This function is called by:
  2072 ;;		_main
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075  048A                     _process_AD_Converter_Value:	
  2076                           
  2077                           ;common.c: 433: if(getAD_ConvertFlag())
  2078                           
  2079                           ; Regs used in _process_AD_Converter_Value: [wreg+status,2+status,0+pclath+cstack]
  2080  048A  249F  118A         	fcall	_getAD_ConvertFlag
  2081  048C  3A00               	xorlw	0
  2082  048D  1903               	skipnz
  2083  048E  0008               	return
  2084                           
  2085                           ;common.c: 434: {
  2086                           ;common.c: 435: setAD_ConvertFlag(0);
  2087  048F  3000               	movlw	0
  2088  0490  24A3  118A         	fcall	_setAD_ConvertFlag
  2089                           
  2090                           ;common.c: 436: AD_Sample();
  2091  0492  24A6  118A         	fcall	_AD_Sample
  2092                           
  2093                           ;common.c: 437: if(2 == sampleChannelSelect)
  2094  0494  0855               	movf	_sampleChannelSelect,w
  2095  0495  3A02               	xorlw	2
  2096  0496  1D03               	skipz
  2097  0497  2C9A               	goto	l4305
  2098  0498  3002               	movlw	2
  2099  0499  2C9B               	goto	L10
  2100  049A                     l4305:	
  2101                           ;common.c: 438: adc_test_init(2,0);
  2102                           
  2103  049A  3001               	movlw	1
  2104  049B                     L10:	
  2105                           
  2106                           ;common.c: 439: else
  2107                           ;common.c: 440: adc_test_init(1,0);
  2108  049B  01B9               	clrf	?_adc_test_init
  2109  049C  24BA  118A         	fcall	_adc_test_init
  2110                           
  2111                           ;common.c: 441: adc_start();
  2112  049E  2CD5               	ljmp	l4111
  2113  049F                     __end_of_process_AD_Converter_Value:	
  2114  049F                     __ptext1374:	
  2115 ;; =============== function _setAD_ConvertFlag ends ============
  2116                           
  2117                           
  2118 ;; *************** function _getAD_ConvertFlag *****************
  2119 ;; Defined at:
  2120 ;;		line 381 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;		None
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;		None
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  1    wreg      unsigned char 
  2127 ;; Registers used:
  2128 ;;		wreg
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 60/0
  2132 ;;		Unchanged: FFF9F/0
  2133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2134 ;;      Params:         0       0       0       0       0
  2135 ;;      Locals:         0       0       0       0       0
  2136 ;;      Temps:          0       0       0       0       0
  2137 ;;      Totals:         0       0       0       0       0
  2138 ;;Total ram usage:        0 bytes
  2139 ;; Hardware stack levels used:    1
  2140 ;; Hardware stack levels required when called:    3
  2141 ;; This function calls:
  2142 ;;		Nothing
  2143 ;; This function is called by:
  2144 ;;		_process_AD_Converter_Value
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147  049F                     _getAD_ConvertFlag:	
  2148                           
  2149                           ;common.c: 382: return adc_convert_flag;
  2150                           
  2151                           ; Regs used in _getAD_ConvertFlag: [wreg]
  2152  049F  1283               	bcf	3,5	;RP0=0, select bank0
  2153  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  2154  04A1  0846               	movf	_adc_convert_flag,w
  2155  04A2  0008               	return
  2156  04A3                     __end_of_getAD_ConvertFlag:	
  2157  04A3                     __ptext1373:	
  2158 ;; =============== function _AD_Sample ends ============
  2159                           
  2160                           
  2161 ;; *************** function _setAD_ConvertFlag *****************
  2162 ;; Defined at:
  2163 ;;		line 387 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;  flag            1    wreg     unsigned char 
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;  flag            1   25[BANK0 ] unsigned char 
  2168 ;; Return value:  Size  Location     Type
  2169 ;;		None               void
  2170 ;; Registers used:
  2171 ;;		wreg
  2172 ;; Tracked objects:
  2173 ;;		On entry : 60/0
  2174 ;;		On exit  : 60/0
  2175 ;;		Unchanged: FFF9F/0
  2176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2177 ;;      Params:         0       0       0       0       0
  2178 ;;      Locals:         0       1       0       0       0
  2179 ;;      Temps:          0       0       0       0       0
  2180 ;;      Totals:         0       1       0       0       0
  2181 ;;Total ram usage:        1 bytes
  2182 ;; Hardware stack levels used:    1
  2183 ;; Hardware stack levels required when called:    3
  2184 ;; This function calls:
  2185 ;;		Nothing
  2186 ;; This function is called by:
  2187 ;;		_process_AD_Converter_Value
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190  04A3                     _setAD_ConvertFlag:	
  2191                           
  2192                           ; Regs used in _setAD_ConvertFlag: [wreg]
  2193                           ;setAD_ConvertFlag@flag stored from wreg
  2194  04A3  00B9               	movwf	setAD_ConvertFlag@flag
  2195                           
  2196                           ;common.c: 388: adc_convert_flag = flag;
  2197  04A4  00C6               	movwf	_adc_convert_flag
  2198  04A5  0008               	return
  2199  04A6                     __end_of_setAD_ConvertFlag:	
  2200  04A6                     __ptext1372:	
  2201 ;; =============== function _initPin ends ============
  2202                           
  2203                           
  2204 ;; *************** function _AD_Sample *****************
  2205 ;; Defined at:
  2206 ;;		line 455 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  2207 ;; Parameters:    Size  Location     Type
  2208 ;;		None
  2209 ;; Auto vars:     Size  Location     Type
  2210 ;;		None
  2211 ;; Return value:  Size  Location     Type
  2212 ;;		None               void
  2213 ;; Registers used:
  2214 ;;		wreg, status,2, status,0
  2215 ;; Tracked objects:
  2216 ;;		On entry : 60/0
  2217 ;;		On exit  : 60/0
  2218 ;;		Unchanged: FFF9F/0
  2219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2220 ;;      Params:         0       0       0       0       0
  2221 ;;      Locals:         0       0       0       0       0
  2222 ;;      Temps:          0       0       0       0       0
  2223 ;;      Totals:         0       0       0       0       0
  2224 ;;Total ram usage:        0 bytes
  2225 ;; Hardware stack levels used:    1
  2226 ;; Hardware stack levels required when called:    3
  2227 ;; This function calls:
  2228 ;;		Nothing
  2229 ;; This function is called by:
  2230 ;;		_process_AD_Converter_Value
  2231 ;; This function uses a non-reentrant model
  2232 ;;
  2233  04A6                     _AD_Sample:	
  2234                           
  2235                           ;common.c: 456: if(sampleTimes < 3)
  2236                           
  2237                           ; Regs used in _AD_Sample: [wreg+status,2+status,0]
  2238  04A6  3003               	movlw	3
  2239  04A7  024C               	subwf	_sampleTimes,w
  2240  04A8  1803               	skipnc
  2241  04A9  0008               	return
  2242  04AA  3003               	movlw	3
  2243                           
  2244                           ;common.c: 457: {
  2245                           ;common.c: 458: sampleTimes++;
  2246  04AB  0ACC               	incf	_sampleTimes,f
  2247                           
  2248                           ;common.c: 460: if(sampleTimes >= 3)
  2249  04AC  024C               	subwf	_sampleTimes,w
  2250  04AD  1C03               	skipc
  2251  04AE  0008               	return
  2252                           
  2253                           ;common.c: 461: {
  2254                           ;common.c: 462: sampleTimes = 0;
  2255  04AF  01CC               	clrf	_sampleTimes
  2256                           
  2257                           ;common.c: 464: if(sampleChannelSelect == 2)
  2258  04B0  0855               	movf	_sampleChannelSelect,w
  2259  04B1  3A02               	xorlw	2
  2260  04B2  1D03               	skipz
  2261  04B3  2CB7               	goto	l4283
  2262                           
  2263                           ;common.c: 465: {
  2264                           ;common.c: 466: sampleChannelSelect = 1;
  2265  04B4  01D5               	clrf	_sampleChannelSelect
  2266  04B5  0AD5               	incf	_sampleChannelSelect,f
  2267                           
  2268                           ;common.c: 467: }
  2269  04B6  0008               	return
  2270  04B7                     l4283:	
  2271                           
  2272                           ;common.c: 469: else
  2273                           ;common.c: 470: {
  2274                           ;common.c: 471: sampleChannelSelect = 2;
  2275  04B7  3002               	movlw	2
  2276  04B8  00D5               	movwf	_sampleChannelSelect
  2277  04B9  0008               	return
  2278  04BA                     __end_of_AD_Sample:	
  2279  04BA                     __ptext1388:	
  2280 ;; =============== function _startTwentyMinTimer ends ============
  2281                           
  2282                           
  2283 ;; *************** function _adc_test_init *****************
  2284 ;; Defined at:
  2285 ;;		line 121 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\periph.c"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;  channel         1    wreg     unsigned char 
  2288 ;;  ref             1   25[BANK0 ] unsigned char 
  2289 ;; Auto vars:     Size  Location     Type
  2290 ;;  channel         1   27[BANK0 ] unsigned char 
  2291 ;; Return value:  Size  Location     Type
  2292 ;;		None               void
  2293 ;; Registers used:
  2294 ;;		wreg, status,2, status,0
  2295 ;; Tracked objects:
  2296 ;;		On entry : 60/0
  2297 ;;		On exit  : 60/20
  2298 ;;		Unchanged: FFF9F/0
  2299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2300 ;;      Params:         0       1       0       0       0
  2301 ;;      Locals:         0       1       0       0       0
  2302 ;;      Temps:          0       1       0       0       0
  2303 ;;      Totals:         0       3       0       0       0
  2304 ;;Total ram usage:        3 bytes
  2305 ;; Hardware stack levels used:    1
  2306 ;; Hardware stack levels required when called:    3
  2307 ;; This function calls:
  2308 ;;		Nothing
  2309 ;; This function is called by:
  2310 ;;		_main
  2311 ;;		_process_AD_Converter_Value
  2312 ;; This function uses a non-reentrant model
  2313 ;;
  2314  04BA                     _adc_test_init:	
  2315                           
  2316                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  2317                           ;adc_test_init@channel stored from wreg
  2318  04BA  00BB               	movwf	adc_test_init@channel
  2319                           
  2320                           ;periph.c: 122: ADCON0 = 0x40;
  2321  04BB  3040               	movlw	64
  2322  04BC  009F               	movwf	31	;volatile
  2323                           
  2324                           ;periph.c: 123: ADCON0|=channel<<2;
  2325  04BD  083B               	movf	adc_test_init@channel,w
  2326  04BE  00BA               	movwf	??_adc_test_init
  2327  04BF  1003               	clrc
  2328  04C0  0DBA               	rlf	??_adc_test_init,f
  2329  04C1  1003               	clrc
  2330  04C2  0D3A               	rlf	??_adc_test_init,w
  2331  04C3  049F               	iorwf	31,f	;volatile
  2332                           
  2333                           ;periph.c: 124: ADCON1 = 0x35;
  2334  04C4  3035               	movlw	53
  2335  04C5  1683               	bsf	3,5	;RP0=1, select bank1
  2336  04C6  009F               	movwf	31	;volatile
  2337                           
  2338                           ;periph.c: 125: ADCON1|=ref<<6;
  2339  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  2340  04C8  0839               	movf	adc_test_init@ref,w
  2341  04C9  00BA               	movwf	??_adc_test_init
  2342  04CA  0CBA               	rrf	??_adc_test_init,f
  2343  04CB  0CBA               	rrf	??_adc_test_init,f
  2344  04CC  0C3A               	rrf	??_adc_test_init,w
  2345  04CD  39C0               	andlw	192
  2346  04CE  1683               	bsf	3,5	;RP0=1, select bank1
  2347  04CF  049F               	iorwf	31,f	;volatile
  2348                           
  2349                           ;periph.c: 126: ADON=1;
  2350  04D0  1283               	bcf	3,5	;RP0=0, select bank0
  2351  04D1  141F               	bsf	31,0
  2352                           
  2353                           ;periph.c: 127: ADIE=1;
  2354  04D2  1683               	bsf	3,5	;RP0=1, select bank1
  2355  04D3  150D               	bsf	13,2
  2356  04D4  0008               	return
  2357  04D5                     __end_of_adc_test_init:	
  2358  04D5                     __ptext1386:	
  2359 ;; =============== function _isPermitSampleTime ends ============
  2360                           
  2361                           
  2362 ;; *************** function _adc_start *****************
  2363 ;; Defined at:
  2364 ;;		line 137 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\periph.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;		None
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;		None
  2369 ;; Return value:  Size  Location     Type
  2370 ;;		None               void
  2371 ;; Registers used:
  2372 ;;		None
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/20
  2375 ;;		On exit  : 60/0
  2376 ;;		Unchanged: FFF9F/0
  2377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2378 ;;      Params:         0       0       0       0       0
  2379 ;;      Locals:         0       0       0       0       0
  2380 ;;      Temps:          0       0       0       0       0
  2381 ;;      Totals:         0       0       0       0       0
  2382 ;;Total ram usage:        0 bytes
  2383 ;; Hardware stack levels used:    1
  2384 ;; Hardware stack levels required when called:    3
  2385 ;; This function calls:
  2386 ;;		Nothing
  2387 ;; This function is called by:
  2388 ;;		_main
  2389 ;;		_process_AD_Converter_Value
  2390 ;; This function uses a non-reentrant model
  2391 ;;
  2392  04D5                     _adc_start:	
  2393  04D5                     l4111:	
  2394                           ; Regs used in _adc_start: []
  2395                           
  2396                           
  2397                           ;periph.c: 138: GO=1;
  2398  04D5  1283               	bcf	3,5	;RP0=0, select bank0
  2399  04D6  1303               	bcf	3,6	;RP1=0, select bank0
  2400  04D7  149F               	bsf	31,1
  2401  04D8  0008               	return
  2402  04D9                     __end_of_adc_start:	
  2403                           
  2404                           	psect	text1369
  2405  052B                     __ptext1369:	
  2406 ;; =============== function _process_AD_Converter_Value ends ============
  2407                           
  2408                           
  2409 ;; *************** function _resetAllTimer *****************
  2410 ;; Defined at:
  2411 ;;		line 494 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\main.c"
  2412 ;; Parameters:    Size  Location     Type
  2413 ;;		None
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;		None
  2416 ;; Return value:  Size  Location     Type
  2417 ;;		None               void
  2418 ;; Registers used:
  2419 ;;		status,2, status,0, pclath, cstack
  2420 ;; Tracked objects:
  2421 ;;		On entry : 160/20
  2422 ;;		On exit  : 160/0
  2423 ;;		Unchanged: FFE9F/0
  2424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2425 ;;      Params:         0       0       0       0       0
  2426 ;;      Locals:         0       0       0       0       0
  2427 ;;      Temps:          0       0       0       0       0
  2428 ;;      Totals:         0       0       0       0       0
  2429 ;;Total ram usage:        0 bytes
  2430 ;; Hardware stack levels used:    1
  2431 ;; Hardware stack levels required when called:    4
  2432 ;; This function calls:
  2433 ;;		_clearTwelveHoursTimer
  2434 ;;		_clearThreeHoursTimer
  2435 ;;		_clearOneHoursTimer
  2436 ;;		_clearTwentyMinTimer
  2437 ;; This function is called by:
  2438 ;;		_main
  2439 ;; This function uses a non-reentrant model
  2440 ;;
  2441  052B                     _resetAllTimer:	
  2442                           
  2443                           ;main.c: 495: clearTwelveHoursTimer();
  2444                           
  2445                           ; Regs used in _resetAllTimer: [status,2+status,0+pclath+cstack]
  2446  052B  2532  118A         	fcall	_clearTwelveHoursTimer
  2447                           
  2448                           ;main.c: 496: clearThreeHoursTimer();
  2449  052D  2537  118A         	fcall	_clearThreeHoursTimer
  2450                           
  2451                           ;main.c: 497: clearOneHoursTimer();
  2452  052F  253B  118A         	fcall	_clearOneHoursTimer
  2453                           
  2454                           ;main.c: 498: clearTwentyMinTimer();
  2455  0531  2D3F               	ljmp	l4073
  2456  0532                     __end_of_resetAllTimer:	
  2457  0532                     __ptext1397:	
  2458 ;; =============== function _clearThreeHoursTimer ends ============
  2459                           
  2460                           
  2461 ;; *************** function _clearTwelveHoursTimer *****************
  2462 ;; Defined at:
  2463 ;;		line 498 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  2464 ;; Parameters:    Size  Location     Type
  2465 ;;		None
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;		None
  2468 ;; Return value:  Size  Location     Type
  2469 ;;		None               void
  2470 ;; Registers used:
  2471 ;;		status,2
  2472 ;; Tracked objects:
  2473 ;;		On entry : 40/0
  2474 ;;		On exit  : 60/0
  2475 ;;		Unchanged: FFF9F/0
  2476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2477 ;;      Params:         0       0       0       0       0
  2478 ;;      Locals:         0       0       0       0       0
  2479 ;;      Temps:          0       0       0       0       0
  2480 ;;      Totals:         0       0       0       0       0
  2481 ;;Total ram usage:        0 bytes
  2482 ;; Hardware stack levels used:    1
  2483 ;; Hardware stack levels required when called:    3
  2484 ;; This function calls:
  2485 ;;		Nothing
  2486 ;; This function is called by:
  2487 ;;		_resetAllTimer
  2488 ;;		_main
  2489 ;; This function uses a non-reentrant model
  2490 ;;
  2491  0532                     _clearTwelveHoursTimer:	
  2492                           
  2493                           ;common.c: 499: uiBigTimer = 0;
  2494                           
  2495                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  2496  0532  1283               	bcf	3,5	;RP0=0, select bank0
  2497  0533  01BD               	clrf	_uiBigTimer
  2498  0534  01BE               	clrf	_uiBigTimer+1
  2499                           
  2500                           ;common.c: 500: bBigTimerStartFlag = 0;
  2501  0535  01C7               	clrf	_bBigTimerStartFlag
  2502  0536  0008               	return
  2503  0537                     __end_of_clearTwelveHoursTimer:	
  2504  0537                     __ptext1396:	
  2505 ;; =============== function _clearOneHoursTimer ends ============
  2506                           
  2507                           
  2508 ;; *************** function _clearThreeHoursTimer *****************
  2509 ;; Defined at:
  2510 ;;		line 505 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;		None
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;		None
  2515 ;; Return value:  Size  Location     Type
  2516 ;;		None               void
  2517 ;; Registers used:
  2518 ;;		status,2
  2519 ;; Tracked objects:
  2520 ;;		On entry : 60/0
  2521 ;;		On exit  : 60/0
  2522 ;;		Unchanged: FFF9F/0
  2523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2524 ;;      Params:         0       0       0       0       0
  2525 ;;      Locals:         0       0       0       0       0
  2526 ;;      Temps:          0       0       0       0       0
  2527 ;;      Totals:         0       0       0       0       0
  2528 ;;Total ram usage:        0 bytes
  2529 ;; Hardware stack levels used:    1
  2530 ;; Hardware stack levels required when called:    3
  2531 ;; This function calls:
  2532 ;;		Nothing
  2533 ;; This function is called by:
  2534 ;;		_resetAllTimer
  2535 ;;		_main
  2536 ;; This function uses a non-reentrant model
  2537 ;;
  2538  0537                     _clearThreeHoursTimer:	
  2539                           
  2540                           ;common.c: 506: uiSmallTimer = 0;
  2541                           
  2542                           ; Regs used in _clearThreeHoursTimer: [status,2]
  2543  0537  01C1               	clrf	_uiSmallTimer
  2544  0538  01C2               	clrf	_uiSmallTimer+1
  2545                           
  2546                           ;common.c: 507: bSmallTimerStartFlag = 0;
  2547  0539  01C9               	clrf	_bSmallTimerStartFlag
  2548  053A  0008               	return
  2549  053B                     __end_of_clearThreeHoursTimer:	
  2550  053B                     __ptext1395:	
  2551 ;; =============== function _clearTwentyMinTimer ends ============
  2552                           
  2553                           
  2554 ;; *************** function _clearOneHoursTimer *****************
  2555 ;; Defined at:
  2556 ;;		line 511 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;		None
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;		None
  2561 ;; Return value:  Size  Location     Type
  2562 ;;		None               void
  2563 ;; Registers used:
  2564 ;;		status,2
  2565 ;; Tracked objects:
  2566 ;;		On entry : 160/0
  2567 ;;		On exit  : 160/0
  2568 ;;		Unchanged: FFE9F/0
  2569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2570 ;;      Params:         0       0       0       0       0
  2571 ;;      Locals:         0       0       0       0       0
  2572 ;;      Temps:          0       0       0       0       0
  2573 ;;      Totals:         0       0       0       0       0
  2574 ;;Total ram usage:        0 bytes
  2575 ;; Hardware stack levels used:    1
  2576 ;; Hardware stack levels required when called:    3
  2577 ;; This function calls:
  2578 ;;		Nothing
  2579 ;; This function is called by:
  2580 ;;		_resetAllTimer
  2581 ;; This function uses a non-reentrant model
  2582 ;;
  2583  053B                     _clearOneHoursTimer:	
  2584                           
  2585                           ;common.c: 512: uiOneHourTimer = 0;
  2586                           
  2587                           ; Regs used in _clearOneHoursTimer: [status,2]
  2588  053B  01BF               	clrf	_uiOneHourTimer
  2589  053C  01C0               	clrf	_uiOneHourTimer+1
  2590                           
  2591                           ;common.c: 513: bOneHourTimerStartFlag = 0;
  2592  053D  01C8               	clrf	_bOneHourTimerStartFlag
  2593  053E  0008               	return
  2594  053F                     __end_of_clearOneHoursTimer:	
  2595  053F                     __ptext1394:	
  2596 ;; =============== function _clock_config ends ============
  2597                           
  2598                           
  2599 ;; *************** function _clearTwentyMinTimer *****************
  2600 ;; Defined at:
  2601 ;;		line 518 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;		None
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;		None
  2606 ;; Return value:  Size  Location     Type
  2607 ;;		None               void
  2608 ;; Registers used:
  2609 ;;		status,2
  2610 ;; Tracked objects:
  2611 ;;		On entry : 60/0
  2612 ;;		On exit  : 60/0
  2613 ;;		Unchanged: FFF9F/0
  2614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2615 ;;      Params:         0       0       0       0       0
  2616 ;;      Locals:         0       0       0       0       0
  2617 ;;      Temps:          0       0       0       0       0
  2618 ;;      Totals:         0       0       0       0       0
  2619 ;;Total ram usage:        0 bytes
  2620 ;; Hardware stack levels used:    1
  2621 ;; Hardware stack levels required when called:    3
  2622 ;; This function calls:
  2623 ;;		Nothing
  2624 ;; This function is called by:
  2625 ;;		_resetAllTimer
  2626 ;;		_main
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629  053F                     _clearTwentyMinTimer:	
  2630  053F                     l4073:	
  2631                           ; Regs used in _clearTwentyMinTimer: [status,2]
  2632                           
  2633                           
  2634                           ;common.c: 519: uiTwentyMinTimer = 0;
  2635  053F  1683               	bsf	3,5	;RP0=1, select bank1
  2636  0540  01A2               	clrf	_uiTwentyMinTimer^(0+128)
  2637  0541  01A3               	clrf	(_uiTwentyMinTimer+1)^(0+128)
  2638                           
  2639                           ;common.c: 520: bTwentyMinStartFlag = 0;
  2640  0542  1283               	bcf	3,5	;RP0=0, select bank0
  2641  0543  01CA               	clrf	_bTwentyMinStartFlag
  2642  0544  0008               	return
  2643  0545                     __end_of_clearTwentyMinTimer:	
  2644                           
  2645                           	psect	text1370
  2646  050A                     __ptext1370:	
  2647 ;; =============== function _resetAllTimer ends ============
  2648                           
  2649                           
  2650 ;; *************** function _setPinInitVaule *****************
  2651 ;; Defined at:
  2652 ;;		line 285 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\main.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;		None
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;		None
  2657 ;; Return value:  Size  Location     Type
  2658 ;;		None               void
  2659 ;; Registers used:
  2660 ;;		wreg, status,2, status,0, pclath, cstack
  2661 ;; Tracked objects:
  2662 ;;		On entry : 17F/20
  2663 ;;		On exit  : 17F/0
  2664 ;;		Unchanged: FFE80/0
  2665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2666 ;;      Params:         0       0       0       0       0
  2667 ;;      Locals:         0       0       0       0       0
  2668 ;;      Temps:          0       0       0       0       0
  2669 ;;      Totals:         0       0       0       0       0
  2670 ;;Total ram usage:        0 bytes
  2671 ;; Hardware stack levels used:    1
  2672 ;; Hardware stack levels required when called:    4
  2673 ;; This function calls:
  2674 ;;		_setPB3
  2675 ;;		_setPB4
  2676 ;;		_setPB5
  2677 ;; This function is called by:
  2678 ;;		_main
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681  050A                     _setPinInitVaule:	
  2682                           
  2683                           ;main.c: 287: setPB3(1);
  2684                           
  2685                           ; Regs used in _setPinInitVaule: [wreg+status,2+status,0+pclath+cstack]
  2686  050A  3001               	movlw	1
  2687  050B  2512  118A         	fcall	_setPB3
  2688                           
  2689                           ;main.c: 288: setPB4(0);
  2690  050D  3000               	movlw	0
  2691  050E  251B  118A         	fcall	_setPB4
  2692                           
  2693                           ;main.c: 289: setPB5(1);
  2694  0510  3001               	movlw	1
  2695  0511  2D23               	ljmp	_setPB5
  2696  0512                     __end_of_setPinInitVaule:	
  2697  0512                     __ptext1406:	
  2698 ;; =============== function _initPB4 ends ============
  2699                           
  2700                           
  2701 ;; *************** function _setPB3 *****************
  2702 ;; Defined at:
  2703 ;;		line 135 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\main.c"
  2704 ;; Parameters:    Size  Location     Type
  2705 ;;  bValue          1    wreg     unsigned char 
  2706 ;; Auto vars:     Size  Location     Type
  2707 ;;  bValue          1   25[BANK0 ] unsigned char 
  2708 ;; Return value:  Size  Location     Type
  2709 ;;		None               void
  2710 ;; Registers used:
  2711 ;;		wreg
  2712 ;; Tracked objects:
  2713 ;;		On entry : 40/0
  2714 ;;		On exit  : 60/0
  2715 ;;		Unchanged: FFF9F/0
  2716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2717 ;;      Params:         0       0       0       0       0
  2718 ;;      Locals:         0       1       0       0       0
  2719 ;;      Temps:          0       0       0       0       0
  2720 ;;      Totals:         0       1       0       0       0
  2721 ;;Total ram usage:        1 bytes
  2722 ;; Hardware stack levels used:    1
  2723 ;; Hardware stack levels required when called:    3
  2724 ;; This function calls:
  2725 ;;		Nothing
  2726 ;; This function is called by:
  2727 ;;		_setPinInitVaule
  2728 ;;		_main
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731  0512                     _setPB3:	
  2732                           
  2733                           ; Regs used in _setPB3: [wreg]
  2734                           ;setPB3@bValue stored from wreg
  2735  0512  1283               	bcf	3,5	;RP0=0, select bank0
  2736  0513  00B9               	movwf	setPB3@bValue
  2737                           
  2738                           ;main.c: 136: if( bValue )
  2739  0514  0839               	movf	setPB3@bValue,w
  2740  0515  1903               	btfsc	3,2
  2741  0516  2D19               	goto	l690
  2742                           
  2743                           ;main.c: 139: PB0 = 1;
  2744  0517  1406               	bsf	6,0
  2745  0518  0008               	return
  2746  0519                     l690:	
  2747                           
  2748                           ;main.c: 143: else
  2749                           ;main.c: 146: PB0 = 0;
  2750  0519  1006               	bcf	6,0
  2751  051A  0008               	return
  2752  051B                     __end_of_setPB3:	
  2753  051B                     __ptext1404:	
  2754 ;; =============== function _initPB5 ends ============
  2755                           
  2756                           
  2757 ;; *************** function _setPB4 *****************
  2758 ;; Defined at:
  2759 ;;		line 174 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\main.c"
  2760 ;; Parameters:    Size  Location     Type
  2761 ;;  bValue          1    wreg     unsigned char 
  2762 ;; Auto vars:     Size  Location     Type
  2763 ;;  bValue          1   25[BANK0 ] unsigned char 
  2764 ;; Return value:  Size  Location     Type
  2765 ;;		None               void
  2766 ;; Registers used:
  2767 ;;		wreg
  2768 ;; Tracked objects:
  2769 ;;		On entry : 60/0
  2770 ;;		On exit  : 60/0
  2771 ;;		Unchanged: FFF9F/0
  2772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2773 ;;      Params:         0       0       0       0       0
  2774 ;;      Locals:         0       1       0       0       0
  2775 ;;      Temps:          0       0       0       0       0
  2776 ;;      Totals:         0       1       0       0       0
  2777 ;;Total ram usage:        1 bytes
  2778 ;; Hardware stack levels used:    1
  2779 ;; Hardware stack levels required when called:    3
  2780 ;; This function calls:
  2781 ;;		Nothing
  2782 ;; This function is called by:
  2783 ;;		_setPinInitVaule
  2784 ;;		_main
  2785 ;; This function uses a non-reentrant model
  2786 ;;
  2787  051B                     _setPB4:	
  2788                           
  2789                           ; Regs used in _setPB4: [wreg]
  2790                           ;setPB4@bValue stored from wreg
  2791  051B  00B9               	movwf	setPB4@bValue
  2792                           
  2793                           ;main.c: 175: if( bValue )
  2794  051C  0839               	movf	setPB4@bValue,w
  2795  051D  1903               	btfsc	3,2
  2796  051E  2D21               	goto	l700
  2797                           
  2798                           ;main.c: 178: PB3 = 1;
  2799  051F  1586               	bsf	6,3
  2800  0520  0008               	return
  2801  0521                     l700:	
  2802                           
  2803                           ;main.c: 182: else
  2804                           ;main.c: 185: PB3 = 0;
  2805  0521  1186               	bcf	6,3
  2806  0522  0008               	return
  2807  0523                     __end_of_setPB4:	
  2808  0523                     __ptext1402:	
  2809 ;; =============== function _initPB2_AsHighResistence ends ============
  2810                           
  2811                           
  2812 ;; *************** function _setPB5 *****************
  2813 ;; Defined at:
  2814 ;;		line 212 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\main.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;  bValue          1    wreg     unsigned char 
  2817 ;; Auto vars:     Size  Location     Type
  2818 ;;  bValue          1   25[BANK0 ] unsigned char 
  2819 ;; Return value:  Size  Location     Type
  2820 ;;		None               void
  2821 ;; Registers used:
  2822 ;;		wreg
  2823 ;; Tracked objects:
  2824 ;;		On entry : 60/0
  2825 ;;		On exit  : 60/0
  2826 ;;		Unchanged: FFF9F/0
  2827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2828 ;;      Params:         0       0       0       0       0
  2829 ;;      Locals:         0       1       0       0       0
  2830 ;;      Temps:          0       0       0       0       0
  2831 ;;      Totals:         0       1       0       0       0
  2832 ;;Total ram usage:        1 bytes
  2833 ;; Hardware stack levels used:    1
  2834 ;; Hardware stack levels required when called:    3
  2835 ;; This function calls:
  2836 ;;		Nothing
  2837 ;; This function is called by:
  2838 ;;		_setPinInitVaule
  2839 ;;		_main
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842  0523                     _setPB5:	
  2843                           
  2844                           ; Regs used in _setPB5: [wreg]
  2845                           ;setPB5@bValue stored from wreg
  2846  0523  00B9               	movwf	setPB5@bValue
  2847                           
  2848                           ;main.c: 213: if( bValue )
  2849  0524  0839               	movf	setPB5@bValue,w
  2850  0525  1903               	btfsc	3,2
  2851  0526  2D29               	goto	l710
  2852                           
  2853                           ;main.c: 216: PB1 = 1;
  2854  0527  1486               	bsf	6,1
  2855  0528  0008               	return
  2856  0529                     l710:	
  2857                           
  2858                           ;main.c: 221: else
  2859                           ;main.c: 224: PB1 = 0;
  2860  0529  1086               	bcf	6,1
  2861  052A  0008               	return
  2862  052B                     __end_of_setPB5:	
  2863                           
  2864                           	psect	text1371
  2865  04D9                     __ptext1371:	
  2866 ;; =============== function _setPinInitVaule ends ============
  2867                           
  2868                           
  2869 ;; *************** function _initPin *****************
  2870 ;; Defined at:
  2871 ;;		line 269 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\main.c"
  2872 ;; Parameters:    Size  Location     Type
  2873 ;;		None
  2874 ;; Auto vars:     Size  Location     Type
  2875 ;;		None
  2876 ;; Return value:  Size  Location     Type
  2877 ;;		None               void
  2878 ;; Registers used:
  2879 ;;		wreg, status,2, status,0, pclath, cstack
  2880 ;; Tracked objects:
  2881 ;;		On entry : 17F/0
  2882 ;;		On exit  : 17F/20
  2883 ;;		Unchanged: FFE80/0
  2884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2885 ;;      Params:         0       0       0       0       0
  2886 ;;      Locals:         0       0       0       0       0
  2887 ;;      Temps:          0       0       0       0       0
  2888 ;;      Totals:         0       0       0       0       0
  2889 ;;Total ram usage:        0 bytes
  2890 ;; Hardware stack levels used:    1
  2891 ;; Hardware stack levels required when called:    4
  2892 ;; This function calls:
  2893 ;;		_initPB2_AsHighResistence
  2894 ;;		_initPB3
  2895 ;;		_initPB4
  2896 ;;		_initPB5
  2897 ;; This function is called by:
  2898 ;;		_main
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901  04D9                     _initPin:	
  2902                           
  2903                           ;main.c: 271: initPB2_AsHighResistence();
  2904                           
  2905                           ; Regs used in _initPin: [wreg+status,2+status,0+pclath+cstack]
  2906  04D9  24EF  118A         	fcall	_initPB2_AsHighResistence
  2907                           
  2908                           ;main.c: 273: initPB3(0);
  2909  04DB  3000               	movlw	0
  2910  04DC  24E3  118A         	fcall	_initPB3
  2911                           
  2912                           ;main.c: 275: initPB4(0);
  2913  04DE  3000               	movlw	0
  2914  04DF  24F4  118A         	fcall	_initPB4
  2915                           
  2916                           ;main.c: 277: initPB5(0);
  2917  04E1  3000               	movlw	0
  2918  04E2  2CFF               	ljmp	_initPB5
  2919  04E3                     __end_of_initPin:	
  2920  04E3                     __ptext1407:	
  2921 ;; =============== function _setPB3 ends ============
  2922                           
  2923                           
  2924 ;; *************** function _initPB3 *****************
  2925 ;; Defined at:
  2926 ;;		line 116 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\main.c"
  2927 ;; Parameters:    Size  Location     Type
  2928 ;;  bValue          1    wreg     unsigned char 
  2929 ;; Auto vars:     Size  Location     Type
  2930 ;;  bValue          1   25[BANK0 ] unsigned char 
  2931 ;; Return value:  Size  Location     Type
  2932 ;;		None               void
  2933 ;; Registers used:
  2934 ;;		wreg
  2935 ;; Tracked objects:
  2936 ;;		On entry : 17F/60
  2937 ;;		On exit  : 17F/20
  2938 ;;		Unchanged: FFE80/0
  2939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2940 ;;      Params:         0       0       0       0       0
  2941 ;;      Locals:         0       1       0       0       0
  2942 ;;      Temps:          0       0       0       0       0
  2943 ;;      Totals:         0       1       0       0       0
  2944 ;;Total ram usage:        1 bytes
  2945 ;; Hardware stack levels used:    1
  2946 ;; Hardware stack levels required when called:    3
  2947 ;; This function calls:
  2948 ;;		Nothing
  2949 ;; This function is called by:
  2950 ;;		_initPin
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953  04E3                     _initPB3:	
  2954                           
  2955                           ; Regs used in _initPB3: [wreg]
  2956                           ;initPB3@bValue stored from wreg
  2957  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  2958  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  2959  04E5  00B9               	movwf	initPB3@bValue
  2960                           
  2961                           ;main.c: 117: if( bValue )
  2962  04E6  0839               	movf	initPB3@bValue,w
  2963  04E7  1903               	btfsc	3,2
  2964  04E8  2CEC               	goto	l685
  2965                           
  2966                           ;main.c: 120: TRISB0 = 1;
  2967  04E9  1683               	bsf	3,5	;RP0=1, select bank1
  2968  04EA  1406               	bsf	6,0
  2969  04EB  0008               	return
  2970  04EC                     l685:	
  2971                           
  2972                           ;main.c: 124: else
  2973                           ;main.c: 127: TRISB0 = 0;
  2974  04EC  1683               	bsf	3,5	;RP0=1, select bank1
  2975  04ED  1006               	bcf	6,0
  2976  04EE  0008               	return
  2977  04EF                     __end_of_initPB3:	
  2978  04EF                     __ptext1401:	
  2979 ;; =============== function _pwm_start ends ============
  2980                           
  2981                           
  2982 ;; *************** function _initPB2_AsHighResistence *****************
  2983 ;; Defined at:
  2984 ;;		line 232 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\main.c"
  2985 ;; Parameters:    Size  Location     Type
  2986 ;;		None
  2987 ;; Auto vars:     Size  Location     Type
  2988 ;;		None
  2989 ;; Return value:  Size  Location     Type
  2990 ;;		None               void
  2991 ;; Registers used:
  2992 ;;		None
  2993 ;; Tracked objects:
  2994 ;;		On entry : 17F/0
  2995 ;;		On exit  : 17F/60
  2996 ;;		Unchanged: FFE80/0
  2997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2998 ;;      Params:         0       0       0       0       0
  2999 ;;      Locals:         0       0       0       0       0
  3000 ;;      Temps:          0       0       0       0       0
  3001 ;;      Totals:         0       0       0       0       0
  3002 ;;Total ram usage:        0 bytes
  3003 ;; Hardware stack levels used:    1
  3004 ;; Hardware stack levels required when called:    3
  3005 ;; This function calls:
  3006 ;;		Nothing
  3007 ;; This function is called by:
  3008 ;;		_initPin
  3009 ;; This function uses a non-reentrant model
  3010 ;;
  3011  04EF                     _initPB2_AsHighResistence:	
  3012                           
  3013                           ;main.c: 234: PB2 = 1;
  3014                           
  3015                           ; Regs used in _initPB2_AsHighResistence: []
  3016  04EF  1506               	bsf	6,2
  3017                           
  3018                           ;main.c: 235: PBOD2 = 1;
  3019  04F0  1683               	bsf	3,5	;RP0=1, select bank3
  3020  04F1  1703               	bsf	3,6	;RP1=1, select bank3
  3021  04F2  1508               	bsf	8,2
  3022  04F3  0008               	return
  3023  04F4                     __end_of_initPB2_AsHighResistence:	
  3024  04F4                     __ptext1405:	
  3025 ;; =============== function _setPB4 ends ============
  3026                           
  3027                           
  3028 ;; *************** function _initPB4 *****************
  3029 ;; Defined at:
  3030 ;;		line 155 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\main.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;  bValue          1    wreg     unsigned char 
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;  bValue          1   25[BANK0 ] unsigned char 
  3035 ;; Return value:  Size  Location     Type
  3036 ;;		None               void
  3037 ;; Registers used:
  3038 ;;		wreg
  3039 ;; Tracked objects:
  3040 ;;		On entry : 17F/20
  3041 ;;		On exit  : 17F/20
  3042 ;;		Unchanged: FFE80/0
  3043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3044 ;;      Params:         0       0       0       0       0
  3045 ;;      Locals:         0       1       0       0       0
  3046 ;;      Temps:          0       0       0       0       0
  3047 ;;      Totals:         0       1       0       0       0
  3048 ;;Total ram usage:        1 bytes
  3049 ;; Hardware stack levels used:    1
  3050 ;; Hardware stack levels required when called:    3
  3051 ;; This function calls:
  3052 ;;		Nothing
  3053 ;; This function is called by:
  3054 ;;		_initPin
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057  04F4                     _initPB4:	
  3058                           
  3059                           ; Regs used in _initPB4: [wreg]
  3060                           ;initPB4@bValue stored from wreg
  3061  04F4  1283               	bcf	3,5	;RP0=0, select bank0
  3062  04F5  00B9               	movwf	initPB4@bValue
  3063                           
  3064                           ;main.c: 156: if( bValue )
  3065  04F6  0839               	movf	initPB4@bValue,w
  3066  04F7  1903               	btfsc	3,2
  3067  04F8  2CFC               	goto	l695
  3068                           
  3069                           ;main.c: 159: TRISB3 = 1;
  3070  04F9  1683               	bsf	3,5	;RP0=1, select bank1
  3071  04FA  1586               	bsf	6,3
  3072  04FB  0008               	return
  3073  04FC                     l695:	
  3074                           
  3075                           ;main.c: 163: else
  3076                           ;main.c: 166: TRISB3 = 0;
  3077  04FC  1683               	bsf	3,5	;RP0=1, select bank1
  3078  04FD  1186               	bcf	6,3
  3079  04FE  0008               	return
  3080  04FF                     __end_of_initPB4:	
  3081  04FF                     __ptext1403:	
  3082 ;; =============== function _setPB5 ends ============
  3083                           
  3084                           
  3085 ;; *************** function _initPB5 *****************
  3086 ;; Defined at:
  3087 ;;		line 193 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\main.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;  bValue          1    wreg     unsigned char 
  3090 ;; Auto vars:     Size  Location     Type
  3091 ;;  bValue          1   25[BANK0 ] unsigned char 
  3092 ;; Return value:  Size  Location     Type
  3093 ;;		None               void
  3094 ;; Registers used:
  3095 ;;		wreg
  3096 ;; Tracked objects:
  3097 ;;		On entry : 17F/20
  3098 ;;		On exit  : 17F/20
  3099 ;;		Unchanged: FFE80/0
  3100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3101 ;;      Params:         0       0       0       0       0
  3102 ;;      Locals:         0       1       0       0       0
  3103 ;;      Temps:          0       0       0       0       0
  3104 ;;      Totals:         0       1       0       0       0
  3105 ;;Total ram usage:        1 bytes
  3106 ;; Hardware stack levels used:    1
  3107 ;; Hardware stack levels required when called:    3
  3108 ;; This function calls:
  3109 ;;		Nothing
  3110 ;; This function is called by:
  3111 ;;		_initPin
  3112 ;; This function uses a non-reentrant model
  3113 ;;
  3114  04FF                     _initPB5:	
  3115                           
  3116                           ; Regs used in _initPB5: [wreg]
  3117                           ;initPB5@bValue stored from wreg
  3118  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  3119  0500  00B9               	movwf	initPB5@bValue
  3120                           
  3121                           ;main.c: 194: if( bValue )
  3122  0501  0839               	movf	initPB5@bValue,w
  3123  0502  1903               	btfsc	3,2
  3124  0503  2D07               	goto	l705
  3125                           
  3126                           ;main.c: 197: TRISB1 = 1;
  3127  0504  1683               	bsf	3,5	;RP0=1, select bank1
  3128  0505  1486               	bsf	6,1
  3129  0506  0008               	return
  3130  0507                     l705:	
  3131                           
  3132                           ;main.c: 201: else
  3133                           ;main.c: 204: TRISB1= 0;
  3134  0507  1683               	bsf	3,5	;RP0=1, select bank1
  3135  0508  1086               	bcf	6,1
  3136  0509  0008               	return
  3137  050A                     __end_of_initPB5:	
  3138                           
  3139                           	psect	text1376
  3140  0615                     __ptext1376:	
  3141 ;; =============== function _FilterCh13 ends ============
  3142                           
  3143                           
  3144 ;; *************** function _setWaitResetFlag *****************
  3145 ;; Defined at:
  3146 ;;		line 55 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;  bValue          1    wreg     unsigned char 
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;  bValue          1   25[BANK0 ] unsigned char 
  3151 ;; Return value:  Size  Location     Type
  3152 ;;		None               void
  3153 ;; Registers used:
  3154 ;;		wreg
  3155 ;; Tracked objects:
  3156 ;;		On entry : 60/0
  3157 ;;		On exit  : 60/0
  3158 ;;		Unchanged: FFF9F/0
  3159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3160 ;;      Params:         0       0       0       0       0
  3161 ;;      Locals:         0       1       0       0       0
  3162 ;;      Temps:          0       0       0       0       0
  3163 ;;      Totals:         0       1       0       0       0
  3164 ;;Total ram usage:        1 bytes
  3165 ;; Hardware stack levels used:    1
  3166 ;; Hardware stack levels required when called:    3
  3167 ;; This function calls:
  3168 ;;		Nothing
  3169 ;; This function is called by:
  3170 ;;		_main
  3171 ;; This function uses a non-reentrant model
  3172 ;;
  3173  0615                     _setWaitResetFlag:	
  3174                           
  3175                           ; Regs used in _setWaitResetFlag: [wreg]
  3176                           ;setWaitResetFlag@bValue stored from wreg
  3177  0615  00B9               	movwf	setWaitResetFlag@bValue
  3178                           
  3179                           ;common.c: 56: bWaitResetFlag = bValue;
  3180  0616  00CB               	movwf	_bWaitResetFlag
  3181  0617  0008               	return
  3182  0618                     __end_of_setWaitResetFlag:	
  3183                           
  3184                           	psect	text1377
  3185  05CB                     __ptext1377:	
  3186 ;; =============== function _setWaitResetFlag ends ============
  3187                           
  3188                           
  3189 ;; *************** function _isFinishedOneHoursTimer *****************
  3190 ;; Defined at:
  3191 ;;		line 621 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;		None
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;		None
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  1    wreg      unsigned char 
  3198 ;; Registers used:
  3199 ;;		wreg, status,2, status,0
  3200 ;; Tracked objects:
  3201 ;;		On entry : 160/20
  3202 ;;		On exit  : 160/0
  3203 ;;		Unchanged: FFE9F/0
  3204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3205 ;;      Params:         0       0       0       0       0
  3206 ;;      Locals:         0       0       0       0       0
  3207 ;;      Temps:          0       0       0       0       0
  3208 ;;      Totals:         0       0       0       0       0
  3209 ;;Total ram usage:        0 bytes
  3210 ;; Hardware stack levels used:    1
  3211 ;; Hardware stack levels required when called:    3
  3212 ;; This function calls:
  3213 ;;		Nothing
  3214 ;; This function is called by:
  3215 ;;		_main
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218  05CB                     _isFinishedOneHoursTimer:	
  3219                           
  3220                           ;common.c: 622: if((uiOneHourTimer == 0) && bOneHourTimerStartFlag)
  3221                           
  3222                           ; Regs used in _isFinishedOneHoursTimer: [wreg+status,2+status,0]
  3223  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  3224  05CC  0840               	movf	_uiOneHourTimer+1,w
  3225  05CD  043F               	iorwf	_uiOneHourTimer,w
  3226  05CE  1D03               	skipz
  3227  05CF  3400               	retlw	0
  3228  05D0  0848               	movf	_bOneHourTimerStartFlag,w
  3229  05D1  1903               	btfsc	3,2
  3230  05D2  3400               	retlw	0
  3231  05D3  3001               	movlw	1
  3232                           
  3233                           ;common.c: 623: {
  3234                           ;common.c: 624: bOneHourTimerStartFlag = 0;
  3235  05D4  01C8               	clrf	_bOneHourTimerStartFlag
  3236                           
  3237                           ;common.c: 625: return 1;
  3238  05D5  0008               	return
  3239  05D6                     __end_of_isFinishedOneHoursTimer:	
  3240                           ;common.c: 627: else
  3241                           ;common.c: 628: return 0;
  3242                           
  3243                           
  3244                           	psect	text1378
  3245  0595                     __ptext1378:	
  3246 ;; =============== function _isFinishedOneHoursTimer ends ============
  3247                           
  3248                           
  3249 ;; *************** function _startOneHoursTimer *****************
  3250 ;; Defined at:
  3251 ;;		line 538 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  3252 ;; Parameters:    Size  Location     Type
  3253 ;;  uiSetTime       2   25[BANK0 ] unsigned int 
  3254 ;; Auto vars:     Size  Location     Type
  3255 ;;		None
  3256 ;; Return value:  Size  Location     Type
  3257 ;;		None               void
  3258 ;; Registers used:
  3259 ;;		wreg, status,2, status,0
  3260 ;; Tracked objects:
  3261 ;;		On entry : 60/0
  3262 ;;		On exit  : 60/0
  3263 ;;		Unchanged: FFF9F/0
  3264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3265 ;;      Params:         0       2       0       0       0
  3266 ;;      Locals:         0       0       0       0       0
  3267 ;;      Temps:          0       0       0       0       0
  3268 ;;      Totals:         0       2       0       0       0
  3269 ;;Total ram usage:        2 bytes
  3270 ;; Hardware stack levels used:    1
  3271 ;; Hardware stack levels required when called:    3
  3272 ;; This function calls:
  3273 ;;		Nothing
  3274 ;; This function is called by:
  3275 ;;		_main
  3276 ;; This function uses a non-reentrant model
  3277 ;;
  3278  0595                     _startOneHoursTimer:	
  3279                           
  3280                           ;common.c: 539: if(( 0 == uiOneHourTimer ) && ( 0 == bOneHourTimerStartFlag ))
  3281                           
  3282                           ; Regs used in _startOneHoursTimer: [wreg+status,2+status,0]
  3283  0595  0840               	movf	_uiOneHourTimer+1,w
  3284  0596  043F               	iorwf	_uiOneHourTimer,w
  3285  0597  1D03               	skipz
  3286  0598  0008               	return
  3287  0599  08C8               	movf	_bOneHourTimerStartFlag,f
  3288  059A  1D03               	skipz
  3289  059B  0008               	return
  3290                           
  3291                           ;common.c: 540: {
  3292                           ;common.c: 541: uiOneHourTimer = uiSetTime;
  3293  059C  083A               	movf	startOneHoursTimer@uiSetTime+1,w
  3294  059D  00C0               	movwf	_uiOneHourTimer+1
  3295  059E  0839               	movf	startOneHoursTimer@uiSetTime,w
  3296  059F  00BF               	movwf	_uiOneHourTimer
  3297                           
  3298                           ;common.c: 542: bOneHourTimerStartFlag = 1;
  3299  05A0  01C8               	clrf	_bOneHourTimerStartFlag
  3300  05A1  0AC8               	incf	_bOneHourTimerStartFlag,f
  3301  05A2  0008               	return
  3302  05A3                     __end_of_startOneHoursTimer:	
  3303                           
  3304                           	psect	text1379
  3305  05D6                     __ptext1379:	
  3306 ;; =============== function _startOneHoursTimer ends ============
  3307                           
  3308                           
  3309 ;; *************** function _isFinishedThreeHoursTimer *****************
  3310 ;; Defined at:
  3311 ;;		line 608 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;		None
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;		None
  3316 ;; Return value:  Size  Location     Type
  3317 ;;                  1    wreg      unsigned char 
  3318 ;; Registers used:
  3319 ;;		wreg, status,2, status,0
  3320 ;; Tracked objects:
  3321 ;;		On entry : 60/0
  3322 ;;		On exit  : 60/0
  3323 ;;		Unchanged: FFF9F/0
  3324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3325 ;;      Params:         0       0       0       0       0
  3326 ;;      Locals:         0       0       0       0       0
  3327 ;;      Temps:          0       0       0       0       0
  3328 ;;      Totals:         0       0       0       0       0
  3329 ;;Total ram usage:        0 bytes
  3330 ;; Hardware stack levels used:    1
  3331 ;; Hardware stack levels required when called:    3
  3332 ;; This function calls:
  3333 ;;		Nothing
  3334 ;; This function is called by:
  3335 ;;		_main
  3336 ;; This function uses a non-reentrant model
  3337 ;;
  3338  05D6                     _isFinishedThreeHoursTimer:	
  3339                           
  3340                           ;common.c: 609: if((uiSmallTimer == 0) && bSmallTimerStartFlag)
  3341                           
  3342                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  3343  05D6  0842               	movf	_uiSmallTimer+1,w
  3344  05D7  0441               	iorwf	_uiSmallTimer,w
  3345  05D8  1D03               	skipz
  3346  05D9  3400               	retlw	0
  3347  05DA  0849               	movf	_bSmallTimerStartFlag,w
  3348  05DB  1903               	btfsc	3,2
  3349  05DC  3400               	retlw	0
  3350  05DD  3001               	movlw	1
  3351                           
  3352                           ;common.c: 610: {
  3353                           ;common.c: 611: bSmallTimerStartFlag = 0;
  3354  05DE  01C9               	clrf	_bSmallTimerStartFlag
  3355                           
  3356                           ;common.c: 612: return 1;
  3357  05DF  0008               	return
  3358  05E0                     __end_of_isFinishedThreeHoursTimer:	
  3359                           ;common.c: 614: else
  3360                           ;common.c: 615: return 0;
  3361                           
  3362                           
  3363                           	psect	text1380
  3364  05A3                     __ptext1380:	
  3365 ;; =============== function _isFinishedThreeHoursTimer ends ============
  3366                           
  3367                           
  3368 ;; *************** function _startThreeHoursTimer *****************
  3369 ;; Defined at:
  3370 ;;		line 525 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  3371 ;; Parameters:    Size  Location     Type
  3372 ;;  uiSetTime       2   25[BANK0 ] unsigned int 
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;		None
  3375 ;; Return value:  Size  Location     Type
  3376 ;;		None               void
  3377 ;; Registers used:
  3378 ;;		wreg, status,2, status,0
  3379 ;; Tracked objects:
  3380 ;;		On entry : 60/0
  3381 ;;		On exit  : 60/0
  3382 ;;		Unchanged: FFF9F/0
  3383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3384 ;;      Params:         0       2       0       0       0
  3385 ;;      Locals:         0       0       0       0       0
  3386 ;;      Temps:          0       0       0       0       0
  3387 ;;      Totals:         0       2       0       0       0
  3388 ;;Total ram usage:        2 bytes
  3389 ;; Hardware stack levels used:    1
  3390 ;; Hardware stack levels required when called:    3
  3391 ;; This function calls:
  3392 ;;		Nothing
  3393 ;; This function is called by:
  3394 ;;		_main
  3395 ;; This function uses a non-reentrant model
  3396 ;;
  3397  05A3                     _startThreeHoursTimer:	
  3398                           
  3399                           ;common.c: 526: if(( 0 == uiSmallTimer ) && ( 0 == bSmallTimerStartFlag ))
  3400                           
  3401                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  3402  05A3  0842               	movf	_uiSmallTimer+1,w
  3403  05A4  0441               	iorwf	_uiSmallTimer,w
  3404  05A5  1D03               	skipz
  3405  05A6  0008               	return
  3406  05A7  08C9               	movf	_bSmallTimerStartFlag,f
  3407  05A8  1D03               	skipz
  3408  05A9  0008               	return
  3409                           
  3410                           ;common.c: 527: {
  3411                           ;common.c: 528: uiSmallTimer = uiSetTime;
  3412  05AA  083A               	movf	startThreeHoursTimer@uiSetTime+1,w
  3413  05AB  00C2               	movwf	_uiSmallTimer+1
  3414  05AC  0839               	movf	startThreeHoursTimer@uiSetTime,w
  3415  05AD  00C1               	movwf	_uiSmallTimer
  3416                           
  3417                           ;common.c: 529: bSmallTimerStartFlag = 1;
  3418  05AE  01C9               	clrf	_bSmallTimerStartFlag
  3419  05AF  0AC9               	incf	_bSmallTimerStartFlag,f
  3420  05B0  0008               	return
  3421  05B1                     __end_of_startThreeHoursTimer:	
  3422                           
  3423                           	psect	text1381
  3424  05E0                     __ptext1381:	
  3425 ;; =============== function _startThreeHoursTimer ends ============
  3426                           
  3427                           
  3428 ;; *************** function _isFinishedTwelveHoursTimer *****************
  3429 ;; Defined at:
  3430 ;;		line 597 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;		None
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;		None
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  1    wreg      unsigned char 
  3437 ;; Registers used:
  3438 ;;		wreg, status,2, status,0
  3439 ;; Tracked objects:
  3440 ;;		On entry : 60/0
  3441 ;;		On exit  : 60/0
  3442 ;;		Unchanged: FFF9F/0
  3443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3444 ;;      Params:         0       0       0       0       0
  3445 ;;      Locals:         0       0       0       0       0
  3446 ;;      Temps:          0       0       0       0       0
  3447 ;;      Totals:         0       0       0       0       0
  3448 ;;Total ram usage:        0 bytes
  3449 ;; Hardware stack levels used:    1
  3450 ;; Hardware stack levels required when called:    3
  3451 ;; This function calls:
  3452 ;;		Nothing
  3453 ;; This function is called by:
  3454 ;;		_main
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457  05E0                     _isFinishedTwelveHoursTimer:	
  3458                           
  3459                           ;common.c: 598: if(( uiBigTimer == 0 ) && bBigTimerStartFlag )
  3460                           
  3461                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  3462  05E0  083E               	movf	_uiBigTimer+1,w
  3463  05E1  043D               	iorwf	_uiBigTimer,w
  3464  05E2  1D03               	skipz
  3465  05E3  3400               	retlw	0
  3466  05E4  0847               	movf	_bBigTimerStartFlag,w
  3467  05E5  1903               	btfsc	3,2
  3468  05E6  3400               	retlw	0
  3469  05E7  3001               	movlw	1
  3470                           
  3471                           ;common.c: 599: {
  3472                           ;common.c: 600: bBigTimerStartFlag = 0;
  3473  05E8  01C7               	clrf	_bBigTimerStartFlag
  3474                           
  3475                           ;common.c: 601: return 1;
  3476  05E9  0008               	return
  3477  05EA                     __end_of_isFinishedTwelveHoursTimer:	
  3478                           ;common.c: 603: else
  3479                           ;common.c: 604: return 0;
  3480                           
  3481                           
  3482                           	psect	text1382
  3483  05B1                     __ptext1382:	
  3484 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  3485                           
  3486                           
  3487 ;; *************** function _startTwelveHourTimer *****************
  3488 ;; Defined at:
  3489 ;;		line 484 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  3490 ;; Parameters:    Size  Location     Type
  3491 ;;  uiSetTime       2   25[BANK0 ] unsigned int 
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;		None
  3494 ;; Return value:  Size  Location     Type
  3495 ;;		None               void
  3496 ;; Registers used:
  3497 ;;		wreg, status,2, status,0
  3498 ;; Tracked objects:
  3499 ;;		On entry : 60/0
  3500 ;;		On exit  : 60/0
  3501 ;;		Unchanged: FFF9F/0
  3502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3503 ;;      Params:         0       2       0       0       0
  3504 ;;      Locals:         0       0       0       0       0
  3505 ;;      Temps:          0       0       0       0       0
  3506 ;;      Totals:         0       2       0       0       0
  3507 ;;Total ram usage:        2 bytes
  3508 ;; Hardware stack levels used:    1
  3509 ;; Hardware stack levels required when called:    3
  3510 ;; This function calls:
  3511 ;;		Nothing
  3512 ;; This function is called by:
  3513 ;;		_main
  3514 ;; This function uses a non-reentrant model
  3515 ;;
  3516  05B1                     _startTwelveHourTimer:	
  3517                           
  3518                           ;common.c: 485: if((0 == uiBigTimer) && ( 0 == bBigTimerStartFlag))
  3519                           
  3520                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  3521  05B1  083E               	movf	_uiBigTimer+1,w
  3522  05B2  043D               	iorwf	_uiBigTimer,w
  3523  05B3  1D03               	skipz
  3524  05B4  0008               	return
  3525  05B5  08C7               	movf	_bBigTimerStartFlag,f
  3526  05B6  1D03               	skipz
  3527  05B7  0008               	return
  3528                           
  3529                           ;common.c: 486: {
  3530                           ;common.c: 487: uiBigTimer = uiSetTime;
  3531  05B8  083A               	movf	startTwelveHourTimer@uiSetTime+1,w
  3532  05B9  00BE               	movwf	_uiBigTimer+1
  3533  05BA  0839               	movf	startTwelveHourTimer@uiSetTime,w
  3534  05BB  00BD               	movwf	_uiBigTimer
  3535                           
  3536                           ;common.c: 488: bBigTimerStartFlag = 1;
  3537  05BC  01C7               	clrf	_bBigTimerStartFlag
  3538  05BD  0AC7               	incf	_bBigTimerStartFlag,f
  3539  05BE  0008               	return
  3540  05BF                     __end_of_startTwelveHourTimer:	
  3541                           
  3542                           	psect	text1383
  3543  05BF                     __ptext1383:	
  3544 ;; =============== function _startTwelveHourTimer ends ============
  3545                           
  3546                           
  3547 ;; *************** function _isFinishedTwentyMinTimer *****************
  3548 ;; Defined at:
  3549 ;;		line 573 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  3550 ;; Parameters:    Size  Location     Type
  3551 ;;		None
  3552 ;; Auto vars:     Size  Location     Type
  3553 ;;		None
  3554 ;; Return value:  Size  Location     Type
  3555 ;;                  1    wreg      unsigned char 
  3556 ;; Registers used:
  3557 ;;		wreg, status,2, status,0
  3558 ;; Tracked objects:
  3559 ;;		On entry : 60/0
  3560 ;;		On exit  : 40/0
  3561 ;;		Unchanged: FFF9F/0
  3562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3563 ;;      Params:         0       0       0       0       0
  3564 ;;      Locals:         0       0       0       0       0
  3565 ;;      Temps:          0       0       0       0       0
  3566 ;;      Totals:         0       0       0       0       0
  3567 ;;Total ram usage:        0 bytes
  3568 ;; Hardware stack levels used:    1
  3569 ;; Hardware stack levels required when called:    3
  3570 ;; This function calls:
  3571 ;;		Nothing
  3572 ;; This function is called by:
  3573 ;;		_main
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576  05BF                     _isFinishedTwentyMinTimer:	
  3577                           
  3578                           ;common.c: 574: if(( 0 == uiTwentyMinTimer ) && bTwentyMinStartFlag )
  3579                           
  3580                           ; Regs used in _isFinishedTwentyMinTimer: [wreg+status,2+status,0]
  3581  05BF  1683               	bsf	3,5	;RP0=1, select bank1
  3582  05C0  0823               	movf	(_uiTwentyMinTimer+1)^(0+128),w
  3583  05C1  0422               	iorwf	_uiTwentyMinTimer^(0+128),w
  3584  05C2  1D03               	skipz
  3585  05C3  3400               	retlw	0
  3586  05C4  1283               	bcf	3,5	;RP0=0, select bank0
  3587  05C5  084A               	movf	_bTwentyMinStartFlag,w
  3588  05C6  1903               	btfsc	3,2
  3589  05C7  3400               	retlw	0
  3590  05C8  3001               	movlw	1
  3591                           
  3592                           ;common.c: 575: {
  3593                           ;common.c: 576: bTwentyMinStartFlag = 0;
  3594  05C9  01CA               	clrf	_bTwentyMinStartFlag
  3595                           
  3596                           ;common.c: 577: return 1;
  3597  05CA  0008               	return
  3598  05CB                     __end_of_isFinishedTwentyMinTimer:	
  3599                           ;common.c: 579: else
  3600                           ;common.c: 580: return 0;
  3601                           
  3602                           
  3603                           	psect	text1384
  3604  061B                     __ptext1384:	
  3605 ;; =============== function _isFinishedTwentyMinTimer ends ============
  3606                           
  3607                           
  3608 ;; *************** function _clrSampeTime *****************
  3609 ;; Defined at:
  3610 ;;		line 643 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;		None
  3613 ;; Auto vars:     Size  Location     Type
  3614 ;;		None
  3615 ;; Return value:  Size  Location     Type
  3616 ;;		None               void
  3617 ;; Registers used:
  3618 ;;		status,2
  3619 ;; Tracked objects:
  3620 ;;		On entry : 60/0
  3621 ;;		On exit  : 60/0
  3622 ;;		Unchanged: FFF9F/0
  3623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3624 ;;      Params:         0       0       0       0       0
  3625 ;;      Locals:         0       0       0       0       0
  3626 ;;      Temps:          0       0       0       0       0
  3627 ;;      Totals:         0       0       0       0       0
  3628 ;;Total ram usage:        0 bytes
  3629 ;; Hardware stack levels used:    1
  3630 ;; Hardware stack levels required when called:    3
  3631 ;; This function calls:
  3632 ;;		Nothing
  3633 ;; This function is called by:
  3634 ;;		_main
  3635 ;; This function uses a non-reentrant model
  3636 ;;
  3637  061B                     _clrSampeTime:	
  3638                           
  3639                           ;common.c: 644: timer.timer10msStopWatch = 0;
  3640                           
  3641                           ; Regs used in _clrSampeTime: [status,2]
  3642  061B  01CD               	clrf	_timer
  3643  061C  0008               	return
  3644  061D                     __end_of_clrSampeTime:	
  3645                           
  3646                           	psect	text1385
  3647  060D                     __ptext1385:	
  3648 ;; =============== function _clrSampeTime ends ============
  3649                           
  3650                           
  3651 ;; *************** function _isPermitSampleTime *****************
  3652 ;; Defined at:
  3653 ;;		line 633 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  3654 ;; Parameters:    Size  Location     Type
  3655 ;;		None
  3656 ;; Auto vars:     Size  Location     Type
  3657 ;;		None
  3658 ;; Return value:  Size  Location     Type
  3659 ;;                  1    wreg      unsigned char 
  3660 ;; Registers used:
  3661 ;;		wreg
  3662 ;; Tracked objects:
  3663 ;;		On entry : 60/0
  3664 ;;		On exit  : 60/0
  3665 ;;		Unchanged: FFF9F/0
  3666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3667 ;;      Params:         0       0       0       0       0
  3668 ;;      Locals:         0       0       0       0       0
  3669 ;;      Temps:          0       0       0       0       0
  3670 ;;      Totals:         0       0       0       0       0
  3671 ;;Total ram usage:        0 bytes
  3672 ;; Hardware stack levels used:    1
  3673 ;; Hardware stack levels required when called:    3
  3674 ;; This function calls:
  3675 ;;		Nothing
  3676 ;; This function is called by:
  3677 ;;		_main
  3678 ;; This function uses a non-reentrant model
  3679 ;;
  3680  060D                     _isPermitSampleTime:	
  3681                           
  3682                           ;common.c: 634: if(timer.timer10msStopWatch >= 1)
  3683                           
  3684                           ; Regs used in _isPermitSampleTime: [wreg]
  3685  060D  084D               	movf	_timer,w
  3686  060E  1D03               	skipz
  3687                           
  3688                           ;common.c: 635: {
  3689                           ;common.c: 636: return 1;
  3690  060F  3401               	retlw	1
  3691                           
  3692                           ;common.c: 638: else
  3693                           ;common.c: 639: return 0;
  3694  0610  3400               	retlw	0
  3695  0611                     __end_of_isPermitSampleTime:	
  3696                           
  3697                           	psect	text1387
  3698  0570                     __ptext1387:	
  3699 ;; =============== function _adc_start ends ============
  3700                           
  3701                           
  3702 ;; *************** function _startTwentyMinTimer *****************
  3703 ;; Defined at:
  3704 ;;		line 563 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  3705 ;; Parameters:    Size  Location     Type
  3706 ;;  uiSetValue      2   25[BANK0 ] unsigned int 
  3707 ;; Auto vars:     Size  Location     Type
  3708 ;;		None
  3709 ;; Return value:  Size  Location     Type
  3710 ;;		None               void
  3711 ;; Registers used:
  3712 ;;		wreg, status,2, status,0
  3713 ;; Tracked objects:
  3714 ;;		On entry : 17F/0
  3715 ;;		On exit  : 15F/0
  3716 ;;		Unchanged: FFE80/0
  3717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3718 ;;      Params:         0       2       0       0       0
  3719 ;;      Locals:         0       0       0       0       0
  3720 ;;      Temps:          0       0       0       0       0
  3721 ;;      Totals:         0       2       0       0       0
  3722 ;;Total ram usage:        2 bytes
  3723 ;; Hardware stack levels used:    1
  3724 ;; Hardware stack levels required when called:    3
  3725 ;; This function calls:
  3726 ;;		Nothing
  3727 ;; This function is called by:
  3728 ;;		_main
  3729 ;; This function uses a non-reentrant model
  3730 ;;
  3731  0570                     _startTwentyMinTimer:	
  3732                           
  3733                           ;common.c: 564: if(( 0 == uiTwentyMinTimer) && ( 0 == bTwentyMinStartFlag))
  3734                           
  3735                           ; Regs used in _startTwentyMinTimer: [wreg+status,2+status,0]
  3736  0570  1683               	bsf	3,5	;RP0=1, select bank1
  3737  0571  0823               	movf	(_uiTwentyMinTimer+1)^(0+128),w
  3738  0572  0422               	iorwf	_uiTwentyMinTimer^(0+128),w
  3739  0573  1D03               	skipz
  3740  0574  0008               	return
  3741  0575  1283               	bcf	3,5	;RP0=0, select bank0
  3742  0576  08CA               	movf	_bTwentyMinStartFlag,f
  3743  0577  1D03               	skipz
  3744  0578  0008               	return
  3745                           
  3746                           ;common.c: 565: {
  3747                           ;common.c: 566: uiTwentyMinTimer = uiSetValue;
  3748  0579  083A               	movf	startTwentyMinTimer@uiSetValue+1,w
  3749  057A  1683               	bsf	3,5	;RP0=1, select bank1
  3750  057B  00A3               	movwf	(_uiTwentyMinTimer+1)^(0+128)
  3751  057C  1283               	bcf	3,5	;RP0=0, select bank0
  3752  057D  0839               	movf	startTwentyMinTimer@uiSetValue,w
  3753  057E  1683               	bsf	3,5	;RP0=1, select bank1
  3754  057F  00A2               	movwf	_uiTwentyMinTimer^(0+128)
  3755                           
  3756                           ;common.c: 567: bTwentyMinStartFlag = 1;
  3757  0580  1283               	bcf	3,5	;RP0=0, select bank0
  3758  0581  01CA               	clrf	_bTwentyMinStartFlag
  3759  0582  0ACA               	incf	_bTwentyMinStartFlag,f
  3760  0583  0008               	return
  3761  0584                     __end_of_startTwentyMinTimer:	
  3762                           
  3763                           	psect	text1389
  3764  05F4                     __ptext1389:	
  3765 ;; =============== function _adc_test_init ends ============
  3766                           
  3767                           
  3768 ;; *************** function _op1_init *****************
  3769 ;; Defined at:
  3770 ;;		line 63 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\periph.c"
  3771 ;; Parameters:    Size  Location     Type
  3772 ;;		None
  3773 ;; Auto vars:     Size  Location     Type
  3774 ;;		None
  3775 ;; Return value:  Size  Location     Type
  3776 ;;		None               void
  3777 ;; Registers used:
  3778 ;;		wreg
  3779 ;; Tracked objects:
  3780 ;;		On entry : 17F/60
  3781 ;;		On exit  : 17F/0
  3782 ;;		Unchanged: FFE80/0
  3783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3784 ;;      Params:         0       0       0       0       0
  3785 ;;      Locals:         0       0       0       0       0
  3786 ;;      Temps:          0       0       0       0       0
  3787 ;;      Totals:         0       0       0       0       0
  3788 ;;Total ram usage:        0 bytes
  3789 ;; Hardware stack levels used:    1
  3790 ;; Hardware stack levels required when called:    3
  3791 ;; This function calls:
  3792 ;;		Nothing
  3793 ;; This function is called by:
  3794 ;;		_main
  3795 ;; This function uses a non-reentrant model
  3796 ;;
  3797  05F4                     _op1_init:	
  3798                           
  3799                           ;periph.c: 69: OP1CON1=0x13;
  3800                           
  3801                           ; Regs used in _op1_init: [wreg]
  3802  05F4  3013               	movlw	19
  3803  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  3804  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  3805  05F7  009C               	movwf	28	;volatile
  3806                           
  3807                           ;periph.c: 70: OP1CON2=0x10;
  3808  05F8  3010               	movlw	16
  3809  05F9  009D               	movwf	29	;volatile
  3810                           
  3811                           ;periph.c: 71: OP1CON0=0x80;
  3812  05FA  3080               	movlw	128
  3813  05FB  009B               	movwf	27	;volatile
  3814  05FC  0008               	return
  3815  05FD                     __end_of_op1_init:	
  3816                           
  3817                           	psect	text1390
  3818  0584                     __ptext1390:	
  3819 ;; =============== function _op1_init ends ============
  3820                           
  3821                           
  3822 ;; *************** function _uid_get *****************
  3823 ;; Defined at:
  3824 ;;		line 31 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\periph.c"
  3825 ;; Parameters:    Size  Location     Type
  3826 ;;		None
  3827 ;; Auto vars:     Size  Location     Type
  3828 ;;		None
  3829 ;; Return value:  Size  Location     Type
  3830 ;;		None               void
  3831 ;; Registers used:
  3832 ;;		wreg
  3833 ;; Tracked objects:
  3834 ;;		On entry : 17F/20
  3835 ;;		On exit  : 17F/60
  3836 ;;		Unchanged: FFE80/0
  3837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3838 ;;      Params:         0       0       0       0       0
  3839 ;;      Locals:         0       0       0       0       0
  3840 ;;      Temps:          0       0       0       0       0
  3841 ;;      Totals:         0       0       0       0       0
  3842 ;;Total ram usage:        0 bytes
  3843 ;; Hardware stack levels used:    1
  3844 ;; Hardware stack levels required when called:    3
  3845 ;; This function calls:
  3846 ;;		Nothing
  3847 ;; This function is called by:
  3848 ;;		_main
  3849 ;; This function uses a non-reentrant model
  3850 ;;
  3851  0584                     _uid_get:	
  3852                           
  3853                           ;periph.c: 33: SRAM_MAP = 1;
  3854                           
  3855                           ; Regs used in _uid_get: [wreg]
  3856  0584  1703               	bsf	3,6	;RP1=1, select bank3
  3857  0585  140F               	bsf	15,0
  3858                           
  3859                           ;periph.c: 35: bgr_trim = key.u_1v2;
  3860  0586  0862               	movf	98,w	;volatile
  3861  0587  0863               	movf	99,w	;volatile
  3862                           
  3863                           ;periph.c: 36: ad_offset = key.otp_uid&0xff;
  3864  0588  0867               	movf	103,w	;volatile
  3865  0589  1303               	bcf	3,6	;RP1=0, select bank1
  3866  058A  00A1               	movwf	(_ad_offset+1)^(0+128)	;volatile
  3867  058B  1703               	bsf	3,6	;RP1=1, select bank3
  3868  058C  0866               	movf	102,w	;volatile
  3869  058D  1303               	bcf	3,6	;RP1=0, select bank1
  3870  058E  00A0               	movwf	_ad_offset^(0+128)	;volatile
  3871  058F  30FF               	movlw	255
  3872  0590  05A0               	andwf	_ad_offset^(0+128),f
  3873  0591  01A1               	clrf	(_ad_offset+1)^(0+128)
  3874                           
  3875                           ;periph.c: 38: SRAM_MAP = 0;
  3876  0592  1703               	bsf	3,6	;RP1=1, select bank3
  3877  0593  100F               	bcf	15,0
  3878  0594  0008               	return
  3879  0595                     __end_of_uid_get:	
  3880                           
  3881                           	psect	text1391
  3882  0618                     __ptext1391:	
  3883 ;; =============== function _uid_get ends ============
  3884                           
  3885                           
  3886 ;; *************** function _timer1_interrupt_config *****************
  3887 ;; Defined at:
  3888 ;;		line 373 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;		None
  3891 ;; Auto vars:     Size  Location     Type
  3892 ;;		None
  3893 ;; Return value:  Size  Location     Type
  3894 ;;		None               void
  3895 ;; Registers used:
  3896 ;;		None
  3897 ;; Tracked objects:
  3898 ;;		On entry : 17F/20
  3899 ;;		On exit  : 17F/20
  3900 ;;		Unchanged: FFE80/0
  3901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3902 ;;      Params:         0       0       0       0       0
  3903 ;;      Locals:         0       0       0       0       0
  3904 ;;      Temps:          0       0       0       0       0
  3905 ;;      Totals:         0       0       0       0       0
  3906 ;;Total ram usage:        0 bytes
  3907 ;; Hardware stack levels used:    1
  3908 ;; Hardware stack levels required when called:    3
  3909 ;; This function calls:
  3910 ;;		Nothing
  3911 ;; This function is called by:
  3912 ;;		_main
  3913 ;; This function uses a non-reentrant model
  3914 ;;
  3915  0618                     _timer1_interrupt_config:	
  3916                           
  3917                           ;common.c: 374: GIE = 1;
  3918                           
  3919                           ; Regs used in _timer1_interrupt_config: []
  3920  0618  178B               	bsf	11,7
  3921                           
  3922                           ;common.c: 375: PEIE = 1;
  3923  0619  170B               	bsf	11,6
  3924  061A  0008               	return
  3925  061B                     __end_of_timer1_interrupt_config:	
  3926                           
  3927                           	psect	text1392
  3928  05EA                     __ptext1392:	
  3929 ;; =============== function _timer1_interrupt_config ends ============
  3930                           
  3931                           
  3932 ;; *************** function _timer1_config *****************
  3933 ;; Defined at:
  3934 ;;		line 361 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  3935 ;; Parameters:    Size  Location     Type
  3936 ;;		None
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;		None
  3939 ;; Return value:  Size  Location     Type
  3940 ;;		None               void
  3941 ;; Registers used:
  3942 ;;		wreg
  3943 ;; Tracked objects:
  3944 ;;		On entry : 17F/40
  3945 ;;		On exit  : 17F/20
  3946 ;;		Unchanged: FFE80/0
  3947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3948 ;;      Params:         0       0       0       0       0
  3949 ;;      Locals:         0       0       0       0       0
  3950 ;;      Temps:          0       0       0       0       0
  3951 ;;      Totals:         0       0       0       0       0
  3952 ;;Total ram usage:        0 bytes
  3953 ;; Hardware stack levels used:    1
  3954 ;; Hardware stack levels required when called:    3
  3955 ;; This function calls:
  3956 ;;		Nothing
  3957 ;; This function is called by:
  3958 ;;		_main
  3959 ;; This function uses a non-reentrant model
  3960 ;;
  3961  05EA                     _timer1_config:	
  3962                           
  3963                           ;common.c: 363: TMR1H=0xCF;
  3964                           
  3965                           ; Regs used in _timer1_config: [wreg]
  3966  05EA  30CF               	movlw	207
  3967  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  3968  05EC  008F               	movwf	15	;volatile
  3969                           
  3970                           ;common.c: 364: TMR1L=0x2C;
  3971  05ED  302C               	movlw	44
  3972  05EE  008E               	movwf	14	;volatile
  3973                           
  3974                           ;common.c: 365: T1CON=0xE1;
  3975  05EF  30E1               	movlw	225
  3976  05F0  0090               	movwf	16	;volatile
  3977                           
  3978                           ;common.c: 366: TMR1IE=1;
  3979  05F1  1683               	bsf	3,5	;RP0=1, select bank1
  3980  05F2  140C               	bsf	12,0
  3981  05F3  0008               	return
  3982  05F4                     __end_of_timer1_config:	
  3983                           
  3984                           	psect	text1393
  3985  0605                     __ptext1393:	
  3986 ;; =============== function _timer1_config ends ============
  3987                           
  3988                           
  3989 ;; *************** function _clock_config *****************
  3990 ;; Defined at:
  3991 ;;		line 353 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;		None
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;		None
  3996 ;; Return value:  Size  Location     Type
  3997 ;;		None               void
  3998 ;; Registers used:
  3999 ;;		wreg, status,2
  4000 ;; Tracked objects:
  4001 ;;		On entry : 17F/20
  4002 ;;		On exit  : 17F/40
  4003 ;;		Unchanged: FFE80/0
  4004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4005 ;;      Params:         0       0       0       0       0
  4006 ;;      Locals:         0       0       0       0       0
  4007 ;;      Temps:          0       0       0       0       0
  4008 ;;      Totals:         0       0       0       0       0
  4009 ;;Total ram usage:        0 bytes
  4010 ;; Hardware stack levels used:    1
  4011 ;; Hardware stack levels required when called:    3
  4012 ;; This function calls:
  4013 ;;		Nothing
  4014 ;; This function is called by:
  4015 ;;		_main
  4016 ;; This function uses a non-reentrant model
  4017 ;;
  4018  0605                     _clock_config:	
  4019                           
  4020                           ;common.c: 355: CLKPR = 0x80;
  4021                           
  4022                           ; Regs used in _clock_config: [wreg+status,2]
  4023  0605  3080               	movlw	128
  4024  0606  1283               	bcf	3,5	;RP0=0, select bank2
  4025  0607  1703               	bsf	3,6	;RP1=1, select bank2
  4026  0608  0088               	movwf	8	;volatile
  4027                           
  4028                           ;common.c: 356: CLKPR = 0x00;
  4029  0609  0188               	clrf	8	;volatile
  4030  060A                     l1574:	
  4031                           ;common.c: 357: while(CLKPCE);
  4032                           
  4033  060A  1F88               	btfss	8,7
  4034  060B  0008               	return
  4035  060C  2E0A               	goto	l1574
  4036  060D                     __end_of_clock_config:	
  4037                           
  4038                           	psect	text1398
  4039  061D                     __ptext1398:	
  4040 ;; =============== function _clearTwelveHoursTimer ends ============
  4041                           
  4042                           
  4043 ;; *************** function _reset *****************
  4044 ;; Defined at:
  4045 ;;		line 307 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\main.c"
  4046 ;; Parameters:    Size  Location     Type
  4047 ;;		None
  4048 ;; Auto vars:     Size  Location     Type
  4049 ;;		None
  4050 ;; Return value:  Size  Location     Type
  4051 ;;		None               void
  4052 ;; Registers used:
  4053 ;;		None
  4054 ;; Tracked objects:
  4055 ;;		On entry : 60/0
  4056 ;;		On exit  : 60/0
  4057 ;;		Unchanged: FFFFFF9F/0
  4058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4059 ;;      Params:         0       0       0       0       0
  4060 ;;      Locals:         0       0       0       0       0
  4061 ;;      Temps:          0       0       0       0       0
  4062 ;;      Totals:         0       0       0       0       0
  4063 ;;Total ram usage:        0 bytes
  4064 ;; Hardware stack levels used:    1
  4065 ;; Hardware stack levels required when called:    3
  4066 ;; This function calls:
  4067 ;;		Nothing
  4068 ;; This function is called by:
  4069 ;;		_main
  4070 ;; This function uses a non-reentrant model
  4071 ;;
  4072  061D                     _reset:	
  4073  061D                     l730:	
  4074                           ; Regs used in _reset: []
  4075                           ;main.c: 309: while(1);
  4076                           
  4077  061D  2E1D               	goto	l730
  4078                           
  4079                           	psect	text1399
  4080  0611                     __ptext1399:	
  4081  0611                     __end_of_reset:	
  4082                           
  4083 ;; =============== function _reset ends ============
  4084 ;; *************** function _selectAdChannel *****************
  4085 ;; Defined at:
  4086 ;;		line 296 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\main.c"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;		None
  4089 ;; Auto vars:     Size  Location     Type
  4090 ;;		None
  4091 ;; Return value:  Size  Location     Type
  4092 ;;		None               void
  4093 ;; Registers used:
  4094 ;;		None
  4095 ;; Tracked objects:
  4096 ;;		On entry : 17F/0
  4097 ;;		On exit  : 17F/20
  4098 ;;		Unchanged: FFE80/0
  4099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4100 ;;      Params:         0       0       0       0       0
  4101 ;;      Locals:         0       0       0       0       0
  4102 ;;      Temps:          0       0       0       0       0
  4103 ;;      Totals:         0       0       0       0       0
  4104 ;;Total ram usage:        0 bytes
  4105 ;; Hardware stack levels used:    1
  4106 ;; Hardware stack levels required when called:    3
  4107 ;; This function calls:
  4108 ;;		Nothing
  4109 ;; This function is called by:
  4110 ;;		_main
  4111 ;; This function uses a non-reentrant model
  4112 ;;
  4113  0611                     _selectAdChannel:	
  4114                           
  4115                           ;main.c: 298: TRISB4 = 1;
  4116                           
  4117                           ; Regs used in _selectAdChannel: []
  4118  0611  1683               	bsf	3,5	;RP0=1, select bank1
  4119  0612  1606               	bsf	6,4
  4120                           
  4121                           ;main.c: 299: TRISB5 = 1;
  4122  0613  1686               	bsf	6,5
  4123  0614  0008               	return
  4124  0615                     __end_of_selectAdChannel:	
  4125                           
  4126                           	psect	text1400
  4127  055B                     __ptext1400:	
  4128 ;; =============== function _selectAdChannel ends ============
  4129                           
  4130                           
  4131 ;; *************** function _pwm_start *****************
  4132 ;; Defined at:
  4133 ;;		line 244 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\main.c"
  4134 ;; Parameters:    Size  Location     Type
  4135 ;;  ucPulseWidth    1    wreg     unsigned char 
  4136 ;;  ucPulseFrequ    1   25[BANK0 ] unsigned char 
  4137 ;; Auto vars:     Size  Location     Type
  4138 ;;  ucPulseWidth    1   26[BANK0 ] unsigned char 
  4139 ;; Return value:  Size  Location     Type
  4140 ;;		None               void
  4141 ;; Registers used:
  4142 ;;		wreg, status,2, status,0
  4143 ;; Tracked objects:
  4144 ;;		On entry : 60/0
  4145 ;;		On exit  : 60/0
  4146 ;;		Unchanged: FFF9F/0
  4147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4148 ;;      Params:         0       1       0       0       0
  4149 ;;      Locals:         0       1       0       0       0
  4150 ;;      Temps:          0       0       0       0       0
  4151 ;;      Totals:         0       2       0       0       0
  4152 ;;Total ram usage:        2 bytes
  4153 ;; Hardware stack levels used:    1
  4154 ;; Hardware stack levels required when called:    3
  4155 ;; This function calls:
  4156 ;;		Nothing
  4157 ;; This function is called by:
  4158 ;;		_main
  4159 ;; This function uses a non-reentrant model
  4160 ;;
  4161  055B                     _pwm_start:	
  4162                           
  4163                           ; Regs used in _pwm_start: [wreg+status,2+status,0]
  4164                           ;pwm_start@ucPulseWidth stored from wreg
  4165  055B  00BA               	movwf	pwm_start@ucPulseWidth
  4166                           
  4167                           ;main.c: 246: CCP1CON&= 0xf0;
  4168  055C  30F0               	movlw	240
  4169  055D  0597               	andwf	23,f	;volatile
  4170                           
  4171                           ;main.c: 248: T2CON=0x04;
  4172  055E  3004               	movlw	4
  4173  055F  0092               	movwf	18	;volatile
  4174                           
  4175                           ;main.c: 249: PR2 = ucPulseFrequency;
  4176  0560  0839               	movf	pwm_start@ucPulseFrequency,w
  4177  0561  1683               	bsf	3,5	;RP0=1, select bank1
  4178  0562  0092               	movwf	18	;volatile
  4179                           
  4180                           ;main.c: 250: CCPR1L = ucPulseWidth;
  4181  0563  1283               	bcf	3,5	;RP0=0, select bank0
  4182  0564  083A               	movf	pwm_start@ucPulseWidth,w
  4183  0565  0095               	movwf	21	;volatile
  4184                           
  4185                           ;main.c: 251: CCP1CON=0x00;
  4186  0566  0197               	clrf	23	;volatile
  4187                           
  4188                           ;main.c: 253: TRISB2=0;
  4189  0567  1683               	bsf	3,5	;RP0=1, select bank1
  4190  0568  300C               	movlw	12
  4191  0569  1106               	bcf	6,2
  4192                           
  4193                           ;main.c: 254: PBOD2 = 0;
  4194  056A  1703               	bsf	3,6	;RP1=1, select bank3
  4195  056B  1108               	bcf	8,2
  4196                           
  4197                           ;main.c: 256: CCP1CON|= 0x0c;
  4198  056C  1283               	bcf	3,5	;RP0=0, select bank0
  4199  056D  1303               	bcf	3,6	;RP1=0, select bank0
  4200  056E  0497               	iorwf	23,f	;volatile
  4201  056F  0008               	return
  4202  0570                     __end_of_pwm_start:	
  4203                           
  4204                           	psect	text1408
  4205  0013                     __ptext1408:	
  4206 ;; =============== function _initPB3 ends ============
  4207                           
  4208                           
  4209 ;; *************** function _ISR *****************
  4210 ;; Defined at:
  4211 ;;		line 651 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;		None
  4214 ;; Auto vars:     Size  Location     Type
  4215 ;;		None
  4216 ;; Return value:  Size  Location     Type
  4217 ;;		None               void
  4218 ;; Registers used:
  4219 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4220 ;; Tracked objects:
  4221 ;;		On entry : 0/0
  4222 ;;		On exit  : 60/0
  4223 ;;		Unchanged: FFE00/0
  4224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4225 ;;      Params:         0       0       0       0       0
  4226 ;;      Locals:         0       0       0       0       0
  4227 ;;      Temps:          0       4       0       0       0
  4228 ;;      Totals:         0       4       0       0       0
  4229 ;;Total ram usage:        4 bytes
  4230 ;; Hardware stack levels used:    1
  4231 ;; Hardware stack levels required when called:    2
  4232 ;; This function calls:
  4233 ;;		i1_setAD_ConvertFlag
  4234 ;;		_adc_get
  4235 ;;		_vPutSampleDataIntoTable
  4236 ;; This function is called by:
  4237 ;;		Interrupt level 1
  4238 ;; This function uses a non-reentrant model
  4239 ;;
  4240  0013                     _ISR:	
  4241                           
  4242                           ;common.c: 652: static unsigned char ucTimer1sCnt = 0;
  4243                           ;common.c: 655: if(TMR1IF == 1)
  4244  0013  1C0C               	btfss	12,0
  4245  0014  2851               	goto	i1l3811
  4246  0015  3064               	movlw	100
  4247                           
  4248                           ;common.c: 656: {
  4249                           ;common.c: 657: TMR1IF = 0 ;
  4250  0016  100C               	bcf	12,0
  4251                           
  4252                           ;common.c: 658: timer.timer10msStopWatch++;
  4253  0017  0ACD               	incf	_timer,f
  4254                           
  4255                           ;common.c: 659: ucTimer1sCnt++;
  4256  0018  0AC5               	incf	ISR@ucTimer1sCnt,f
  4257                           
  4258                           ;common.c: 663: if(ucTimer1sCnt >= 100)
  4259  0019  0245               	subwf	ISR@ucTimer1sCnt,w
  4260  001A  1C03               	skipc
  4261  001B  2851               	goto	i1l3811
  4262                           
  4263                           ;common.c: 664: {
  4264                           ;common.c: 665: ucTimer1sCnt = 0;
  4265  001C  01C5               	clrf	ISR@ucTimer1sCnt
  4266                           
  4267                           ;common.c: 666: if(uiBigTimer > 0)
  4268  001D  083E               	movf	_uiBigTimer+1,w
  4269  001E  043D               	iorwf	_uiBigTimer,w
  4270  001F  1903               	skipnz
  4271  0020  2827               	goto	i1l1677
  4272                           
  4273                           ;common.c: 667: uiBigTimer--;
  4274  0021  3001               	movlw	1
  4275  0022  02BD               	subwf	_uiBigTimer,f
  4276  0023  3000               	movlw	0
  4277  0024  1C03               	skipc
  4278  0025  03BE               	decf	_uiBigTimer+1,f
  4279  0026  02BE               	subwf	_uiBigTimer+1,f
  4280  0027                     i1l1677:	
  4281                           
  4282                           ;common.c: 669: if(uiSmallTimer)
  4283  0027  0842               	movf	_uiSmallTimer+1,w
  4284  0028  0441               	iorwf	_uiSmallTimer,w
  4285  0029  1903               	skipnz
  4286  002A  2831               	goto	i1l1678
  4287                           
  4288                           ;common.c: 670: uiSmallTimer--;
  4289  002B  3001               	movlw	1
  4290  002C  02C1               	subwf	_uiSmallTimer,f
  4291  002D  3000               	movlw	0
  4292  002E  1C03               	skipc
  4293  002F  03C2               	decf	_uiSmallTimer+1,f
  4294  0030  02C2               	subwf	_uiSmallTimer+1,f
  4295  0031                     i1l1678:	
  4296                           
  4297                           ;common.c: 672: if(uiTwentySecondsTimer)
  4298  0031  1683               	bsf	3,5	;RP0=1, select bank1
  4299  0032  0825               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  4300  0033  0424               	iorwf	_uiTwentySecondsTimer^(0+128),w
  4301  0034  1903               	skipnz
  4302  0035  283C               	goto	i1l1679
  4303                           
  4304                           ;common.c: 673: uiTwentySecondsTimer--;
  4305  0036  3001               	movlw	1
  4306  0037  02A4               	subwf	_uiTwentySecondsTimer^(0+128),f
  4307  0038  3000               	movlw	0
  4308  0039  1C03               	skipc
  4309  003A  03A5               	decf	(_uiTwentySecondsTimer+1)^(0+128),f
  4310  003B  02A5               	subwf	(_uiTwentySecondsTimer+1)^(0+128),f
  4311  003C                     i1l1679:	
  4312                           
  4313                           ;common.c: 675: if(uiTwentyMinTimer)
  4314  003C  0823               	movf	(_uiTwentyMinTimer+1)^(0+128),w
  4315  003D  0422               	iorwf	_uiTwentyMinTimer^(0+128),w
  4316  003E  1903               	skipnz
  4317  003F  2846               	goto	i1l1680
  4318                           
  4319                           ;common.c: 676: uiTwentyMinTimer--;
  4320  0040  3001               	movlw	1
  4321  0041  02A2               	subwf	_uiTwentyMinTimer^(0+128),f
  4322  0042  3000               	movlw	0
  4323  0043  1C03               	skipc
  4324  0044  03A3               	decf	(_uiTwentyMinTimer+1)^(0+128),f
  4325  0045  02A3               	subwf	(_uiTwentyMinTimer+1)^(0+128),f
  4326  0046                     i1l1680:	
  4327                           
  4328                           ;common.c: 678: if( uiOneHourTimer )
  4329  0046  1283               	bcf	3,5	;RP0=0, select bank0
  4330  0047  0840               	movf	_uiOneHourTimer+1,w
  4331  0048  043F               	iorwf	_uiOneHourTimer,w
  4332  0049  1903               	skipnz
  4333  004A  2851               	goto	i1l3811
  4334                           
  4335                           ;common.c: 679: uiOneHourTimer--;
  4336  004B  3001               	movlw	1
  4337  004C  02BF               	subwf	_uiOneHourTimer,f
  4338  004D  3000               	movlw	0
  4339  004E  1C03               	skipc
  4340  004F  03C0               	decf	_uiOneHourTimer+1,f
  4341  0050  02C0               	subwf	_uiOneHourTimer+1,f
  4342  0051                     i1l3811:	
  4343                           
  4344                           ;common.c: 680: }
  4345                           ;common.c: 681: }
  4346                           ;common.c: 683: if(ADIF)
  4347  0051  1D0D               	btfss	13,2
  4348  0052  286D               	goto	i1l1685
  4349  0053  3001               	movlw	1
  4350                           
  4351                           ;common.c: 684: {
  4352                           ;common.c: 686: ADIF=0;
  4353  0054  110D               	bcf	13,2
  4354                           
  4355                           ;common.c: 687: setAD_ConvertFlag(1);
  4356  0055  208B  118A         	fcall	i1_setAD_ConvertFlag
  4357                           
  4358                           ;common.c: 689: if(sampleChannelSelect == 2)
  4359  0057  0855               	movf	_sampleChannelSelect,w
  4360  0058  3A02               	xorlw	2
  4361  0059  1D03               	skipz
  4362  005A  2864               	goto	i1l3821
  4363                           
  4364                           ;common.c: 690: {
  4365                           ;common.c: 693: vPutSampleDataIntoTable(adc_get(),2);
  4366  005B  207A  118A         	fcall	_adc_get
  4367  005D  0871               	movf	?_adc_get+1,w
  4368  005E  00F7               	movwf	?_vPutSampleDataIntoTable+1
  4369  005F  0870               	movf	?_adc_get,w
  4370  0060  00F6               	movwf	?_vPutSampleDataIntoTable
  4371  0061  3002               	movlw	2
  4372  0062  00F8               	movwf	?_vPutSampleDataIntoTable+2
  4373  0063  286C               	goto	L12
  4374  0064                     i1l3821:	
  4375                           ;common.c: 697: }
  4376                           
  4377                           
  4378                           ;common.c: 698: else
  4379                           ;common.c: 699: {
  4380                           ;common.c: 703: vPutSampleDataIntoTable(adc_get(),1);
  4381  0064  207A  118A         	fcall	_adc_get
  4382  0066  0871               	movf	?_adc_get+1,w
  4383  0067  00F7               	movwf	?_vPutSampleDataIntoTable+1
  4384  0068  0870               	movf	?_adc_get,w
  4385  0069  00F6               	movwf	?_vPutSampleDataIntoTable
  4386  006A  01F8               	clrf	?_vPutSampleDataIntoTable+2
  4387  006B  0AF8               	incf	?_vPutSampleDataIntoTable+2,f
  4388  006C                     L12:	
  4389  006C  208E               	fcall	_vPutSampleDataIntoTable
  4390  006D                     i1l1685:	
  4391  006D  1283               	bcf	3,5	;RP0=0, select bank0
  4392  006E  1303               	bcf	3,6	;RP1=0, select bank0
  4393  006F  0838               	movf	??_ISR+3,w
  4394  0070  00FF               	movwf	127
  4395  0071  0837               	movf	??_ISR+2,w
  4396  0072  008A               	movwf	10
  4397  0073  0836               	movf	??_ISR+1,w
  4398  0074  0084               	movwf	4
  4399  0075  0E35               	swapf	??_ISR^0,w
  4400  0076  0083               	movwf	3
  4401  0077  0EFE               	swapf	126,f
  4402  0078  0E7E               	swapf	126,w
  4403  0079  0009               	retfie
  4404  007A                     __end_of_ISR:	
  4405  007A                     __ptext1411:	
  4406 ;; =============== function i1_setAD_ConvertFlag ends ============
  4407                           
  4408                           
  4409 ;; *************** function _adc_get *****************
  4410 ;; Defined at:
  4411 ;;		line 142 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\periph.c"
  4412 ;; Parameters:    Size  Location     Type
  4413 ;;		None
  4414 ;; Auto vars:     Size  Location     Type
  4415 ;;  val             2    2[COMMON] unsigned int 
  4416 ;; Return value:  Size  Location     Type
  4417 ;;                  2    0[COMMON] unsigned int 
  4418 ;; Registers used:
  4419 ;;		wreg
  4420 ;; Tracked objects:
  4421 ;;		On entry : 60/0
  4422 ;;		On exit  : 60/20
  4423 ;;		Unchanged: FFF9F/0
  4424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4425 ;;      Params:         2       0       0       0       0
  4426 ;;      Locals:         2       0       0       0       0
  4427 ;;      Temps:          0       0       0       0       0
  4428 ;;      Totals:         4       0       0       0       0
  4429 ;;Total ram usage:        4 bytes
  4430 ;; Hardware stack levels used:    1
  4431 ;; This function calls:
  4432 ;;		Nothing
  4433 ;; This function is called by:
  4434 ;;		_ISR
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437  007A                     _adc_get:	
  4438                           
  4439                           ;periph.c: 143: unsigned int val;
  4440                           ;periph.c: 144: val = (ADRESH<<8) | ADRESL;
  4441                           
  4442                           ; Regs used in _adc_get: [wreg]
  4443  007A  081E               	movf	30,w	;volatile
  4444  007B  00F3               	movwf	adc_get@val+1
  4445  007C  01F2               	clrf	adc_get@val
  4446  007D  1683               	bsf	3,5	;RP0=1, select bank1
  4447  007E  081E               	movf	30,w	;volatile
  4448  007F  04F2               	iorwf	adc_get@val,f
  4449                           
  4450                           ;periph.c: 146: val = val + ad_offset;
  4451  0080  0820               	movf	_ad_offset^(0+128),w
  4452  0081  07F2               	addwf	adc_get@val,f
  4453  0082  1803               	skipnc
  4454  0083  0AF3               	incf	adc_get@val+1,f
  4455  0084  0821               	movf	(_ad_offset+1)^(0+128),w
  4456  0085  07F3               	addwf	adc_get@val+1,f
  4457                           
  4458                           ;periph.c: 148: return val;
  4459  0086  0873               	movf	adc_get@val+1,w
  4460  0087  00F1               	movwf	?_adc_get+1
  4461  0088  0872               	movf	adc_get@val,w
  4462  0089  00F0               	movwf	?_adc_get
  4463  008A  0008               	return
  4464  008B                     __end_of_adc_get:	
  4465  008B                     __ptext1410:	
  4466 ;; =============== function _vPutSampleDataIntoTable ends ============
  4467                           
  4468                           
  4469 ;; *************** function i1_setAD_ConvertFlag *****************
  4470 ;; Defined at:
  4471 ;;		line 387 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;  setAD_Conver    1    wreg     unsigned char 
  4474 ;; Auto vars:     Size  Location     Type
  4475 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  4476 ;; Return value:  Size  Location     Type
  4477 ;;		None               void
  4478 ;; Registers used:
  4479 ;;		wreg
  4480 ;; Tracked objects:
  4481 ;;		On entry : 60/0
  4482 ;;		On exit  : 60/0
  4483 ;;		Unchanged: FFF9F/0
  4484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4485 ;;      Params:         0       0       0       0       0
  4486 ;;      Locals:         1       0       0       0       0
  4487 ;;      Temps:          0       0       0       0       0
  4488 ;;      Totals:         1       0       0       0       0
  4489 ;;Total ram usage:        1 bytes
  4490 ;; Hardware stack levels used:    1
  4491 ;; This function calls:
  4492 ;;		Nothing
  4493 ;; This function is called by:
  4494 ;;		_ISR
  4495 ;; This function uses a non-reentrant model
  4496 ;;
  4497  008B                     i1_setAD_ConvertFlag:	
  4498                           
  4499                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  4500                           ;i1setAD_ConvertFlag@flag stored from wreg
  4501  008B  00F0               	movwf	i1setAD_ConvertFlag@flag
  4502                           
  4503                           ;common.c: 388: adc_convert_flag = flag;
  4504  008C  00C6               	movwf	_adc_convert_flag
  4505  008D  0008               	return
  4506  008E                     __end_ofi1_setAD_ConvertFlag:	
  4507  008E                     __ptext1409:	
  4508 ;; =============== function _ISR ends ============
  4509                           
  4510                           
  4511 ;; *************** function _vPutSampleDataIntoTable *****************
  4512 ;; Defined at:
  4513 ;;		line 165 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  4514 ;; Parameters:    Size  Location     Type
  4515 ;;  uiSampleData    2    6[COMMON] unsigned int 
  4516 ;;  channel         1    8[COMMON] unsigned char 
  4517 ;; Auto vars:     Size  Location     Type
  4518 ;;  uiDeviationV    2   19[BANK0 ] unsigned int 
  4519 ;;  uiAbstractVa    2   15[BANK0 ] unsigned int 
  4520 ;;  i               2   17[BANK0 ] int 
  4521 ;; Return value:  Size  Location     Type
  4522 ;;		None               void
  4523 ;; Registers used:
  4524 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4525 ;; Tracked objects:
  4526 ;;		On entry : 60/20
  4527 ;;		On exit  : 0/0
  4528 ;;		Unchanged: FFE00/0
  4529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4530 ;;      Params:         3       0       0       0       0
  4531 ;;      Locals:         0       6       0       0       0
  4532 ;;      Temps:          2       0       0       0       0
  4533 ;;      Totals:         5       6       0       0       0
  4534 ;;Total ram usage:       11 bytes
  4535 ;; Hardware stack levels used:    1
  4536 ;; Hardware stack levels required when called:    1
  4537 ;; This function calls:
  4538 ;;		_Filter
  4539 ;;		_getWaitResetFlag
  4540 ;;		_setPWM_Width
  4541 ;; This function is called by:
  4542 ;;		_ISR
  4543 ;; This function uses a non-reentrant model
  4544 ;;
  4545  008E                     _vPutSampleDataIntoTable:	
  4546                           
  4547                           ;common.c: 167: static unsigned char ucCh12Length = 0;
  4548                           ;common.c: 169: static unsigned char ucCh13Length = 0;
  4549                           ;common.c: 171: static unsigned char ucChannelFourteenthLength = 0;
  4550                           ;common.c: 172: static unsigned int uiCalWidthArrayNew = 0;
  4551                           ;common.c: 173: static unsigned int uiCalWidthArrayOld = 0;
  4552                           ;common.c: 180: static unsigned char ucInitFlag = 0;
  4553                           ;common.c: 182: if(channel == 2)
  4554                           
  4555                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  4556  008E  0878               	movf	vPutSampleDataIntoTable@channel,w
  4557  008F  3A02               	xorlw	2
  4558  0090  1D03               	skipz
  4559  0091  2921               	goto	i1l3733
  4560                           
  4561                           ;common.c: 183: {
  4562                           ;common.c: 184: if(ucCh12Length < 3)
  4563  0092  3003               	movlw	3
  4564  0093  027D               	subwf	vPutSampleDataIntoTable@ucCh12Length,w
  4565  0094  1803               	skipnc
  4566  0095  291B               	goto	i1l3729
  4567                           
  4568                           ;common.c: 185: {
  4569                           ;common.c: 186: uiSampleCh12[ucCh12Length] = uiSampleData;
  4570  0096  1003               	clrc
  4571  0097  0D7D               	rlf	vPutSampleDataIntoTable@ucCh12Length,w
  4572  0098  3EAE               	addlw	_uiSampleCh12& (0+255)
  4573  0099  21FB  118A         	fcall	PL2	;call to abstracted procedure
  4574                           
  4575                           ;common.c: 188: ucCh12Length++;
  4576  009B  0AFD               	incf	vPutSampleDataIntoTable@ucCh12Length,f
  4577                           
  4578                           ;common.c: 190: if( 3 == ucCh12Length )
  4579  009C  087D               	movf	vPutSampleDataIntoTable@ucCh12Length,w
  4580  009D  3A03               	xorlw	3
  4581  009E  1D03               	skipz
  4582  009F  0008               	return
  4583  00A0  30AE               	movlw	_uiSampleCh12& (0+255)
  4584                           
  4585                           ;common.c: 191: {
  4586                           ;common.c: 192: ucCh12Length = 0;
  4587  00A1  01FD               	clrf	vPutSampleDataIntoTable@ucCh12Length
  4588                           
  4589                           ;common.c: 196: static unsigned char bInitArrayFlag = 0;
  4590                           ;common.c: 198: static unsigned int uiCalWidthArray[1],uiCalWidthCnt = 0;
  4591                           ;common.c: 200: static unsigned char uiInitWidth = 75;
  4592                           ;common.c: 202: uiCalWidthArrayNew = Filter(uiSampleCh12);
  4593  00A2  2172  118A         	fcall	_Filter
  4594  00A4  0871               	movf	?_Filter+1,w
  4595  00A5  00FC               	movwf	vPutSampleDataIntoTable@uiCalWidthArrayNew+1
  4596  00A6  0870               	movf	?_Filter,w
  4597  00A7  00FB               	movwf	vPutSampleDataIntoTable@uiCalWidthArrayNew
  4598                           
  4599                           ;common.c: 217: if( uiCalWidthArrayNew >= uiCalWidthArrayOld)
  4600  00A8  0844               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld+1,w
  4601  00A9  027C               	subwf	vPutSampleDataIntoTable@uiCalWidthArrayNew+1,w
  4602  00AA  1D03               	skipz
  4603  00AB  28AE               	goto	u123_25
  4604  00AC  0843               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld,w
  4605  00AD  027B               	subwf	vPutSampleDataIntoTable@uiCalWidthArrayNew,w
  4606  00AE                     u123_25:	
  4607  00AE  1C03               	skipc
  4608  00AF  28C3               	goto	i1l3695
  4609                           
  4610                           ;common.c: 218: {
  4611                           ;common.c: 219: uiAbstractValue = uiCalWidthArrayNew - uiCalWidthArrayOld;
  4612  00B0  087C               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew+1,w
  4613  00B1  00B0               	movwf	vPutSampleDataIntoTable@uiAbstractValue+1
  4614  00B2  087B               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew,w
  4615  00B3  00AF               	movwf	vPutSampleDataIntoTable@uiAbstractValue
  4616  00B4  0843               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld,w
  4617  00B5  02AF               	subwf	vPutSampleDataIntoTable@uiAbstractValue,f
  4618  00B6  0844               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld+1,w
  4619  00B7  1C03               	skipc
  4620  00B8  03B0               	decf	vPutSampleDataIntoTable@uiAbstractValue+1,f
  4621  00B9  02B0               	subwf	vPutSampleDataIntoTable@uiAbstractValue+1,f
  4622                           
  4623                           ;common.c: 220: uiDeviationValue = ((uiCalWidthArrayNew+uiCalWidthArrayOld)>>1) + (uiAbs
      +                          tractValue<<1);
  4624  00BA  087C               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew+1,w
  4625  00BB  2203  118A         	fcall	PL3	;call to abstracted procedure
  4626  00BD  07B3               	addwf	vPutSampleDataIntoTable@uiDeviationValue,f
  4627  00BE  1803               	skipnc
  4628  00BF  0AB4               	incf	vPutSampleDataIntoTable@uiDeviationValue+1,f
  4629  00C0  087A               	movf	??_vPutSampleDataIntoTable+1,w
  4630  00C1  07B4               	addwf	vPutSampleDataIntoTable@uiDeviationValue+1,f
  4631                           
  4632                           ;common.c: 222: }
  4633  00C2  28D4               	goto	i1l3699
  4634  00C3                     i1l3695:	
  4635                           
  4636                           ;common.c: 223: else
  4637                           ;common.c: 224: {
  4638                           ;common.c: 225: uiAbstractValue = uiCalWidthArrayOld - uiCalWidthArrayNew;
  4639  00C3  0844               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld+1,w
  4640  00C4  00B0               	movwf	vPutSampleDataIntoTable@uiAbstractValue+1
  4641  00C5  0843               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld,w
  4642  00C6  00AF               	movwf	vPutSampleDataIntoTable@uiAbstractValue
  4643  00C7  087B               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew,w
  4644  00C8  02AF               	subwf	vPutSampleDataIntoTable@uiAbstractValue,f
  4645  00C9  087C               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew+1,w
  4646  00CA  1C03               	skipc
  4647  00CB  03B0               	decf	vPutSampleDataIntoTable@uiAbstractValue+1,f
  4648  00CC  02B0               	subwf	vPutSampleDataIntoTable@uiAbstractValue+1,f
  4649                           
  4650                           ;common.c: 226: uiDeviationValue = ((uiCalWidthArrayNew+uiCalWidthArrayOld)>>1) - (uiAbs
      +                          tractValue<<1);
  4651  00CD  2203  118A         	fcall	PL3	;call to abstracted procedure
  4652  00CF  02B3               	subwf	vPutSampleDataIntoTable@uiDeviationValue,f
  4653  00D0  087A               	movf	??_vPutSampleDataIntoTable+1,w
  4654  00D1  1C03               	skipc
  4655  00D2  03B4               	decf	vPutSampleDataIntoTable@uiDeviationValue+1,f
  4656  00D3  02B4               	subwf	vPutSampleDataIntoTable@uiDeviationValue+1,f
  4657  00D4                     i1l3699:	
  4658                           
  4659                           ;common.c: 229: }
  4660                           ;common.c: 236: if(uiCalWidthCnt>400)
  4661  00D4  3001               	movlw	1
  4662  00D5  1683               	bsf	3,5	;RP0=1, select bank1
  4663  00D6  022D               	subwf	(vPutSampleDataIntoTable@uiCalWidthCnt+1)^(0+128),w
  4664  00D7  3091               	movlw	145
  4665  00D8  1903               	skipnz
  4666  00D9  022C               	subwf	vPutSampleDataIntoTable@uiCalWidthCnt^(0+128),w
  4667  00DA  1C03               	skipc
  4668  00DB  28E1               	goto	i1l1546
  4669                           
  4670                           ;common.c: 237: uiDeviationValue =400;
  4671  00DC  3090               	movlw	144
  4672  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  4673  00DE  00B3               	movwf	vPutSampleDataIntoTable@uiDeviationValue
  4674  00DF  3001               	movlw	1
  4675  00E0  00B4               	movwf	vPutSampleDataIntoTable@uiDeviationValue+1
  4676  00E1                     i1l1546:	
  4677                           
  4678                           ;common.c: 244: uiCalWidthArrayOld=uiCalWidthArrayNew;
  4679  00E1  087C               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew+1,w
  4680  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  4681  00E3  00C4               	movwf	vPutSampleDataIntoTable@uiCalWidthArrayOld+1
  4682  00E4  087B               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew,w
  4683  00E5  00C3               	movwf	vPutSampleDataIntoTable@uiCalWidthArrayOld
  4684                           
  4685                           ;common.c: 249: if(uiDeviationValue > (470))
  4686  00E6  3001               	movlw	1
  4687  00E7  0234               	subwf	vPutSampleDataIntoTable@uiDeviationValue+1,w
  4688  00E8  30D7               	movlw	215
  4689  00E9  1903               	skipnz
  4690  00EA  0233               	subwf	vPutSampleDataIntoTable@uiDeviationValue,w
  4691                           
  4692                           ;common.c: 250: {
  4693                           ;common.c: 252: if(uiDeviationValue <= (470+5))
  4694  00EB  3001               	movlw	1
  4695  00EC  1C03               	skipc
  4696  00ED  28F6               	goto	L14
  4697  00EE  0234               	subwf	vPutSampleDataIntoTable@uiDeviationValue+1,w
  4698  00EF  30DC               	movlw	220
  4699  00F0  1903               	skipnz
  4700  00F1  0233               	subwf	vPutSampleDataIntoTable@uiDeviationValue,w
  4701  00F2  1803               	skipnc
  4702                           
  4703                           ;common.c: 255: else
  4704                           ;common.c: 256: {uiInitWidth=uiInitWidth+2;
  4705                           
  4706                           ;common.c: 254: }
  4707                           
  4708                           ;common.c: 253: {uiInitWidth++;
  4709  00F3  0AD6               	incf	vPutSampleDataIntoTable@uiInitWidth,f
  4710  00F4  0AD6               	incf	vPutSampleDataIntoTable@uiInitWidth,f
  4711  00F5  2907               	goto	i1l3717
  4712  00F6                     L14:	
  4713                           ;common.c: 260: else if(uiDeviationValue < (470))
  4714                           
  4715  00F6  0234               	subwf	vPutSampleDataIntoTable@uiDeviationValue+1,w
  4716  00F7  30D6               	movlw	214
  4717  00F8  1903               	skipnz
  4718  00F9  0233               	subwf	vPutSampleDataIntoTable@uiDeviationValue,w
  4719  00FA  1803               	skipnc
  4720  00FB  2907               	goto	i1l3717
  4721                           
  4722                           ;common.c: 261: {
  4723                           ;common.c: 264: if(uiDeviationValue >= (470+5))
  4724  00FC  3001               	movlw	1
  4725  00FD  0234               	subwf	vPutSampleDataIntoTable@uiDeviationValue+1,w
  4726  00FE  30DB               	movlw	219
  4727  00FF  1903               	skipnz
  4728  0100  0233               	subwf	vPutSampleDataIntoTable@uiDeviationValue,w
  4729  0101  1C03               	skipc
  4730  0102  2905               	goto	i1l3715
  4731                           
  4732                           ;common.c: 265: {uiInitWidth--;
  4733  0103  03D6               	decf	vPutSampleDataIntoTable@uiInitWidth,f
  4734                           
  4735                           ;common.c: 266: }
  4736  0104  2907               	goto	i1l3717
  4737  0105                     i1l3715:	
  4738                           
  4739                           ;common.c: 267: else
  4740                           ;common.c: 268: {uiInitWidth=uiInitWidth-2;
  4741  0105  30FE               	movlw	254
  4742  0106  07D6               	addwf	vPutSampleDataIntoTable@uiInitWidth,f
  4743  0107                     i1l3717:	
  4744                           
  4745                           ;common.c: 276: if(uiInitWidth > 249)
  4746  0107  30FA               	movlw	250
  4747  0108  0256               	subwf	vPutSampleDataIntoTable@uiInitWidth,w
  4748  0109  1C03               	skipc
  4749  010A  290D               	goto	i1l1555
  4750                           
  4751                           ;common.c: 277: uiInitWidth = 249;
  4752  010B  30F9               	movlw	249
  4753  010C  00D6               	movwf	vPutSampleDataIntoTable@uiInitWidth
  4754  010D                     i1l1555:	
  4755                           
  4756                           ;common.c: 279: if(uiInitWidth < 75)
  4757  010D  304B               	movlw	75
  4758  010E  0256               	subwf	vPutSampleDataIntoTable@uiInitWidth,w
  4759  010F  1803               	skipnc
  4760  0110  2913               	goto	i1l3723
  4761                           
  4762                           ;common.c: 280: uiInitWidth = 75;
  4763  0111  304B               	movlw	75
  4764  0112  00D6               	movwf	vPutSampleDataIntoTable@uiInitWidth
  4765  0113                     i1l3723:	
  4766                           
  4767                           ;common.c: 61: return bWaitResetFlag;
  4768                           
  4769                           ; Regs used in _getWaitResetFlag: [wreg]
  4770                           
  4771                           ;common.c: 284: if( 1 == getWaitResetFlag())
  4772  0113  084B               	movf	_bWaitResetFlag,w
  4773  0114  3A01               	xorlw	1
  4774  0115  1D03               	skipz
  4775  0116  2919               	goto	i1l3727
  4776                           
  4777                           ;common.c: 285: {
  4778                           ;common.c: 287: uiInitWidth = 150;
  4779  0117  3096               	movlw	150
  4780  0118  00D6               	movwf	vPutSampleDataIntoTable@uiInitWidth
  4781  0119                     i1l3727:	
  4782                           
  4783                           ;common.c: 288: }
  4784                           ;common.c: 289: setPWM_Width(uiInitWidth);
  4785  0119  0856               	movf	vPutSampleDataIntoTable@uiInitWidth,w
  4786  011A  29F8               	ljmp	_setPWM_Width
  4787  011B                     i1l3729:	
  4788                           
  4789                           ;common.c: 294: else
  4790                           ;common.c: 295: {
  4791                           ;common.c: 296: ucCh12Length = 0;
  4792  011B  01FD               	clrf	vPutSampleDataIntoTable@ucCh12Length
  4793                           
  4794                           ;common.c: 298: uiSampleCh12[ucCh12Length] = uiSampleData;
  4795  011C  1003               	clrc
  4796  011D  0D7D               	rlf	vPutSampleDataIntoTable@ucCh12Length,w
  4797  011E  3EAE               	addlw	_uiSampleCh12& (0+255)
  4798  011F  21FB               	fcall	PL2	;call to abstracted procedure
  4799  0120  0008               	return
  4800  0121                     i1l3733:	
  4801                           
  4802                           ;common.c: 301: else if(channel == 1)
  4803  0121  0B78               	decfsz	vPutSampleDataIntoTable@channel,w
  4804  0122  2934               	goto	i1l3745
  4805                           
  4806                           ;common.c: 302: {
  4807                           ;common.c: 303: if(ucCh13Length < 3)
  4808  0123  3003               	movlw	3
  4809  0124  1283               	bcf	3,5	;RP0=0, select bank0
  4810  0125  0253               	subwf	vPutSampleDataIntoTable@ucCh13Length,w
  4811  0126  1803               	skipnc
  4812  0127  292E               	goto	i1l3741
  4813                           
  4814                           ;common.c: 304: {
  4815                           ;common.c: 305: uiSampleCh13[ucCh13Length] = uiSampleData;
  4816  0128  1003               	clrc
  4817  0129  0D53               	rlf	vPutSampleDataIntoTable@ucCh13Length,w
  4818  012A  3EB4               	addlw	_uiSampleCh13& (0+255)
  4819  012B  21FB               	fcall	PL2	;call to abstracted procedure
  4820                           
  4821                           ;common.c: 307: ucCh13Length++;
  4822  012C  0AD3               	incf	vPutSampleDataIntoTable@ucCh13Length,f
  4823                           
  4824                           ;common.c: 308: }
  4825  012D  0008               	return
  4826  012E                     i1l3741:	
  4827                           
  4828                           ;common.c: 309: else
  4829                           ;common.c: 310: {
  4830                           ;common.c: 311: ucCh13Length = 0;
  4831  012E  01D3               	clrf	vPutSampleDataIntoTable@ucCh13Length
  4832                           
  4833                           ;common.c: 313: uiSampleCh13[ucCh13Length] = uiSampleData;
  4834  012F  1003               	clrc
  4835  0130  0D53               	rlf	vPutSampleDataIntoTable@ucCh13Length,w
  4836  0131  3EB4               	addlw	_uiSampleCh13& (0+255)
  4837  0132  21FB               	fcall	PL2	;call to abstracted procedure
  4838  0133  0008               	return
  4839  0134                     i1l3745:	
  4840                           
  4841                           ;common.c: 316: else if(channel == 14)
  4842  0134  0878               	movf	vPutSampleDataIntoTable@channel,w
  4843  0135  3A0E               	xorlw	14
  4844  0136  1D03               	skipz
  4845  0137  2949               	goto	i1l3757
  4846                           
  4847                           ;common.c: 317: {
  4848                           ;common.c: 318: if(ucChannelFourteenthLength < 3)
  4849  0138  3003               	movlw	3
  4850  0139  1283               	bcf	3,5	;RP0=0, select bank0
  4851  013A  0254               	subwf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4852  013B  1803               	skipnc
  4853  013C  2943               	goto	i1l3753
  4854                           
  4855                           ;common.c: 319: {
  4856                           ;common.c: 320: uiSampleChannelFourteenth[ucChannelFourteenthLength] = uiSampleData;
  4857  013D  1003               	clrc
  4858  013E  0D54               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4859  013F  3EBA               	addlw	_uiSampleChannelFourteenth& (0+255)
  4860  0140  21FB               	fcall	PL2	;call to abstracted procedure
  4861                           
  4862                           ;common.c: 322: ucChannelFourteenthLength++;
  4863  0141  0AD4               	incf	vPutSampleDataIntoTable@ucChannelFourteenthLength,f
  4864                           
  4865                           ;common.c: 323: }
  4866  0142  0008               	return
  4867  0143                     i1l3753:	
  4868                           
  4869                           ;common.c: 324: else
  4870                           ;common.c: 325: {
  4871                           ;common.c: 326: ucChannelFourteenthLength = 0;
  4872  0143  01D4               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4873                           
  4874                           ;common.c: 328: uiSampleCh13[ucChannelFourteenthLength] = uiSampleData;
  4875  0144  1003               	clrc
  4876  0145  0D54               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4877  0146  3EB4               	addlw	_uiSampleCh13& (0+255)
  4878  0147  21FB               	fcall	PL2	;call to abstracted procedure
  4879  0148  0008               	return
  4880  0149                     i1l3757:	
  4881                           
  4882                           ;common.c: 331: else
  4883                           ;common.c: 332: {
  4884                           ;common.c: 333: ucCh12Length = 0;
  4885  0149  01FD               	clrf	vPutSampleDataIntoTable@ucCh12Length
  4886                           
  4887                           ;common.c: 335: ucCh13Length = 0;
  4888  014A  1283               	bcf	3,5	;RP0=0, select bank0
  4889  014B  01D3               	clrf	vPutSampleDataIntoTable@ucCh13Length
  4890                           
  4891                           ;common.c: 337: ucChannelFourteenthLength = 0;
  4892  014C  01D4               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4893                           
  4894                           ;common.c: 339: for(int i = 0;i < 3; i++)
  4895  014D  01B1               	clrf	vPutSampleDataIntoTable@i
  4896  014E  01B2               	clrf	vPutSampleDataIntoTable@i+1
  4897  014F                     i1l3763:	
  4898                           
  4899                           ;common.c: 340: {
  4900                           ;common.c: 341: uiSampleCh12[i] = 0;
  4901  014F  1283               	bcf	3,5	;RP0=0, select bank0
  4902  0150  1303               	bcf	3,6	;RP1=0, select bank0
  4903  0151  1003               	clrc
  4904  0152  0D31               	rlf	vPutSampleDataIntoTable@i,w
  4905  0153  3EAE               	addlw	_uiSampleCh12& (0+255)
  4906  0154  0084               	movwf	4
  4907  0155  1383               	bcf	3,7	;select IRP bank1
  4908                           
  4909                           ;common.c: 343: uiSampleCh13[i] = 0;
  4910  0156  222E  118A         	fcall	PL11	;call to abstracted procedure
  4911  0158  3EB4               	addlw	_uiSampleCh13& (0+255)
  4912  0159  0084               	movwf	4
  4913                           
  4914                           ;common.c: 345: uiSampleChannelFourteenth[i] = 0;
  4915  015A  222E  118A         	fcall	PL11	;call to abstracted procedure
  4916  015C  3EBA               	addlw	_uiSampleChannelFourteenth& (0+255)
  4917  015D  0084               	movwf	4
  4918  015E  0180               	clrf	0
  4919  015F  0A84               	incf	4,f
  4920  0160  0180               	clrf	0
  4921  0161  0AB1               	incf	vPutSampleDataIntoTable@i,f
  4922  0162  1903               	skipnz
  4923  0163  0AB2               	incf	vPutSampleDataIntoTable@i+1,f
  4924  0164  0832               	movf	vPutSampleDataIntoTable@i+1,w
  4925  0165  3A80               	xorlw	128
  4926  0166  00FF               	movwf	127
  4927  0167  3080               	movlw	128
  4928  0168  027F               	subwf	127,w
  4929  0169  1D03               	skipz
  4930  016A  296D               	goto	u136_25
  4931  016B  3003               	movlw	3
  4932  016C  0231               	subwf	vPutSampleDataIntoTable@i,w
  4933  016D                     u136_25:	
  4934  016D  1803               	btfsc	3,0
  4935  016E  0008               	return
  4936  016F  294F               	goto	i1l3763
  4937  0170                     __end_of_vPutSampleDataIntoTable:	
  4938  0170                     __ptext1414:	
  4939 ;; =============== function _setPWM_Width ends ============
  4940                           
  4941                           
  4942 ;; *************** function _getWaitResetFlag *****************
  4943 ;; Defined at:
  4944 ;;		line 60 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  4945 ;; Parameters:    Size  Location     Type
  4946 ;;		None
  4947 ;; Auto vars:     Size  Location     Type
  4948 ;;		None
  4949 ;; Return value:  Size  Location     Type
  4950 ;;                  1    wreg      unsigned char 
  4951 ;; Registers used:
  4952 ;;		wreg
  4953 ;; Tracked objects:
  4954 ;;		On entry : 160/0
  4955 ;;		On exit  : 160/0
  4956 ;;		Unchanged: FFE9F/0
  4957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4958 ;;      Params:         0       0       0       0       0
  4959 ;;      Locals:         0       0       0       0       0
  4960 ;;      Temps:          0       0       0       0       0
  4961 ;;      Totals:         0       0       0       0       0
  4962 ;;Total ram usage:        0 bytes
  4963 ;; Hardware stack levels used:    1
  4964 ;; This function calls:
  4965 ;;		Nothing
  4966 ;; This function is called by:
  4967 ;;		_vPutSampleDataIntoTable
  4968 ;; This function uses a non-reentrant model
  4969 ;;
  4970  0170                     _getWaitResetFlag:	
  4971                           
  4972                           ;common.c: 61: return bWaitResetFlag;
  4973                           
  4974                           ; Regs used in _getWaitResetFlag: [wreg]
  4975  0170  084B               	movf	_bWaitResetFlag,w
  4976  0171  0008               	return
  4977  0172                     __end_of_getWaitResetFlag:	
  4978  0172                     __ptext1412:	
  4979 ;; =============== function _adc_get ends ============
  4980                           
  4981                           
  4982 ;; *************** function _Filter *****************
  4983 ;; Defined at:
  4984 ;;		line 117 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  4985 ;; Parameters:    Size  Location     Type
  4986 ;;  tmpValue        1    wreg     PTR unsigned int 
  4987 ;;		 -> uiSampleChannelFourteenth(6), uiSampleCh12(6), 
  4988 ;; Auto vars:     Size  Location     Type
  4989 ;;  tmpValue        1    4[BANK0 ] PTR unsigned int 
  4990 ;;		 -> uiSampleChannelFourteenth(6), uiSampleCh12(6), 
  4991 ;;  cir             2   11[BANK0 ] int 
  4992 ;;  filter_buf      6    5[BANK0 ] unsigned int [3]
  4993 ;;  filter_sum      2    2[BANK0 ] unsigned int 
  4994 ;;  filter_temp     2    0[BANK0 ] unsigned int 
  4995 ;;  i               1   14[BANK0 ] unsigned char 
  4996 ;;  j               1   13[BANK0 ] unsigned char 
  4997 ;; Return value:  Size  Location     Type
  4998 ;;                  2    0[COMMON] unsigned int 
  4999 ;; Registers used:
  5000 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5001 ;; Tracked objects:
  5002 ;;		On entry : 160/20
  5003 ;;		On exit  : 160/0
  5004 ;;		Unchanged: FFE00/0
  5005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5006 ;;      Params:         2       0       0       0       0
  5007 ;;      Locals:         0      15       0       0       0
  5008 ;;      Temps:          4       0       0       0       0
  5009 ;;      Totals:         6      15       0       0       0
  5010 ;;Total ram usage:       21 bytes
  5011 ;; Hardware stack levels used:    1
  5012 ;; This function calls:
  5013 ;;		Nothing
  5014 ;; This function is called by:
  5015 ;;		_vPutSampleDataIntoTable
  5016 ;; This function uses a non-reentrant model
  5017 ;;
  5018  0172                     _Filter:	
  5019                           
  5020                           ; Regs used in _Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  5021                           ;Filter@tmpValue stored from wreg
  5022  0172  1283               	bcf	3,5	;RP0=0, select bank0
  5023  0173  00A4               	movwf	Filter@tmpValue
  5024  0174  01AD               	clrf	Filter@j
  5025                           
  5026                           ;common.c: 121: unsigned int filter_temp = 0, filter_sum = 0;
  5027  0175  01A0               	clrf	Filter@filter_temp
  5028  0176  01A1               	clrf	Filter@filter_temp+1
  5029  0177  01A2               	clrf	Filter@filter_sum
  5030  0178  01A3               	clrf	Filter@filter_sum+1
  5031                           
  5032                           ;common.c: 123: unsigned int filter_buf[3];
  5033                           ;common.c: 125: for(int cir = 0;cir < 3; cir++)
  5034  0179  01AB               	clrf	Filter@cir
  5035  017A  01AC               	clrf	Filter@cir+1
  5036  017B                     i1l3629:	
  5037                           
  5038                           ;common.c: 126: filter_buf[cir] = *tmpValue++;
  5039  017B  1283               	bcf	3,5	;RP0=0, select bank0
  5040  017C  1303               	bcf	3,6	;RP1=0, select bank0
  5041  017D  0824               	movf	Filter@tmpValue,w
  5042  017E  2218  118A         	fcall	PL4	;call to abstracted procedure
  5043  0180  1003               	clrc
  5044  0181  0D2B               	rlf	Filter@cir,w
  5045  0182  2220  118A         	fcall	PL8	;call to abstracted procedure
  5046  0184  0AA4               	incf	Filter@tmpValue,f
  5047  0185  0AA4               	incf	Filter@tmpValue,f
  5048  0186  0AAB               	incf	Filter@cir,f
  5049  0187  1903               	skipnz
  5050  0188  0AAC               	incf	Filter@cir+1,f
  5051  0189  082C               	movf	Filter@cir+1,w
  5052  018A  3A80               	xorlw	128
  5053  018B  00FF               	movwf	127
  5054  018C  3080               	movlw	128
  5055  018D  027F               	subwf	127,w
  5056  018E  1D03               	skipz
  5057  018F  2992               	goto	u115_25
  5058  0190  3003               	movlw	3
  5059  0191  022B               	subwf	Filter@cir,w
  5060  0192                     u115_25:	
  5061  0192  1C03               	skipc
  5062  0193  297B               	goto	i1l3629
  5063                           
  5064                           ;common.c: 130: for(j = 0; j < 3 - 1; j++)
  5065  0194  1283               	bcf	3,5	;RP0=0, select bank0
  5066  0195  1303               	bcf	3,6	;RP1=0, select bank0
  5067  0196  01AD               	clrf	Filter@j
  5068                           
  5069                           ;common.c: 131: {
  5070                           ;common.c: 132: for(i = 0; i < 3 - 1 - j; i++)
  5071  0197  01AE               	clrf	Filter@i
  5072  0198                     i1l3651:	
  5073  0198  01F3               	clrf	??_Filter+1
  5074  0199  082D               	movf	Filter@j,w
  5075  019A  3C02               	sublw	2
  5076  019B  00F2               	movwf	??_Filter
  5077  019C  1C03               	skipc
  5078  019D  03F3               	decf	??_Filter+1,f
  5079  019E  0873               	movf	??_Filter+1,w
  5080  019F  3A80               	xorlw	128
  5081  01A0  3C80               	sublw	128
  5082  01A1  1D03               	skipz
  5083  01A2  29A5               	goto	u117_25
  5084  01A3  0872               	movf	??_Filter,w
  5085  01A4  022E               	subwf	Filter@i,w
  5086  01A5                     u117_25:	
  5087  01A5  1803               	btfsc	3,0
  5088  01A6  29DA               	goto	i1l3653
  5089                           
  5090                           ;common.c: 133: {
  5091                           ;common.c: 134: if(filter_buf[i] > filter_buf[i + 1])
  5092  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  5093  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  5094  01A9  1003               	clrc
  5095  01AA  0D2E               	rlf	Filter@i,w
  5096  01AB  3E25               	addlw	Filter@filter_buf& (0+255)
  5097  01AC  2218  118A         	fcall	PL4	;call to abstracted procedure
  5098  01AE  2228  118A         	fcall	PL10	;call to abstracted procedure
  5099  01B0  0800               	movf	0,w
  5100  01B1  00F4               	movwf	??_Filter+2
  5101  01B2  0A84               	incf	4,f
  5102  01B3  0800               	movf	0,w
  5103  01B4  00F5               	movwf	??_Filter+3
  5104  01B5  0873               	movf	??_Filter+1,w
  5105  01B6  0275               	subwf	??_Filter+3,w
  5106  01B7  1D03               	skipz
  5107  01B8  29BB               	goto	u116_25
  5108  01B9  0872               	movf	??_Filter,w
  5109  01BA  0274               	subwf	??_Filter+2,w
  5110  01BB                     u116_25:	
  5111  01BB  1803               	skipnc
  5112  01BC  29D8               	goto	i1l3649
  5113                           
  5114                           ;common.c: 135: {
  5115                           ;common.c: 137: filter_temp = filter_buf[i];
  5116  01BD  1003               	clrc
  5117  01BE  0D2E               	rlf	Filter@i,w
  5118  01BF  3E25               	addlw	Filter@filter_buf& (0+255)
  5119  01C0  0084               	movwf	4
  5120  01C1  0800               	movf	0,w
  5121  01C2  00A0               	movwf	Filter@filter_temp
  5122  01C3  0A84               	incf	4,f
  5123  01C4  0800               	movf	0,w
  5124  01C5  00A1               	movwf	Filter@filter_temp+1
  5125                           
  5126                           ;common.c: 139: filter_buf[i] = filter_buf[i + 1];
  5127  01C6  2228  118A         	fcall	PL10	;call to abstracted procedure
  5128  01C8  0800               	movf	0,w
  5129  01C9  00F2               	movwf	??_Filter
  5130  01CA  0A84               	incf	4,f
  5131  01CB  0800               	movf	0,w
  5132  01CC  00F3               	movwf	??_Filter+1
  5133  01CD  1003               	clrc
  5134  01CE  0D2E               	rlf	Filter@i,w
  5135  01CF  2220  118A         	fcall	PL8	;call to abstracted procedure
  5136                           
  5137                           ;common.c: 141: filter_buf[i + 1] = filter_temp;
  5138  01D1  2228  118A         	fcall	PL10	;call to abstracted procedure
  5139  01D3  0820               	movf	Filter@filter_temp,w
  5140  01D4  0080               	movwf	0
  5141  01D5  0A84               	incf	4,f
  5142  01D6  0821               	movf	Filter@filter_temp+1,w
  5143  01D7  0080               	movwf	0
  5144  01D8                     i1l3649:	
  5145  01D8  0AAE               	incf	Filter@i,f
  5146  01D9  2998               	goto	i1l3651
  5147  01DA                     i1l3653:	
  5148  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  5149  01DB  3002               	movlw	2
  5150  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  5151  01DD  0AAD               	incf	Filter@j,f
  5152  01DE  022D               	subwf	Filter@j,w
  5153                           
  5154                           ;common.c: 142: }
  5155                           ;common.c: 143: }
  5156                           ;common.c: 144: }
  5157                           ;common.c: 146: for(i = 1; i < 3 - 1; i++)
  5158  01DF  01AE               	clrf	Filter@i
  5159  01E0  1C03               	skipc
  5160  01E1  2998               	goto	i1l3651
  5161  01E2  0AAE               	incf	Filter@i,f
  5162                           
  5163                           ;common.c: 147: {
  5164                           ;common.c: 148: filter_sum += filter_buf[i];
  5165  01E3  1003               	clrc
  5166  01E4                     L15:	
  5167  01E4  0D2E               	rlf	Filter@i,w
  5168  01E5  3E25               	addlw	Filter@filter_buf& (0+255)
  5169  01E6  2218  118A         	fcall	PL4	;call to abstracted procedure
  5170  01E8  0872               	movf	??_Filter,w
  5171  01E9  07A2               	addwf	Filter@filter_sum,f
  5172  01EA  1803               	skipnc
  5173  01EB  0AA3               	incf	Filter@filter_sum+1,f
  5174  01EC  0873               	movf	??_Filter+1,w
  5175  01ED  07A3               	addwf	Filter@filter_sum+1,f
  5176  01EE  3002               	movlw	2
  5177  01EF  0AAE               	incf	Filter@i,f
  5178  01F0  022E               	subwf	Filter@i,w
  5179  01F1  1C03               	skipc
  5180  01F2  29E4               	goto	L15
  5181                           
  5182                           ;common.c: 149: }
  5183                           ;common.c: 153: return (filter_sum );
  5184  01F3  0823               	movf	Filter@filter_sum+1,w
  5185  01F4  00F1               	movwf	?_Filter+1
  5186  01F5  0822               	movf	Filter@filter_sum,w
  5187  01F6  00F0               	movwf	?_Filter
  5188  01F7  0008               	return
  5189  01F8                     __end_of_Filter:	
  5190  01F8                     __ptext1413:	
  5191 ;; =============== function _Filter ends ============
  5192                           
  5193                           
  5194 ;; *************** function _setPWM_Width *****************
  5195 ;; Defined at:
  5196 ;;		line 65 in file "D:\develop\AK7030-OTP-191211-change-pin_bb_div2(two_filter)\AK7030-OTP\common.c"
  5197 ;; Parameters:    Size  Location     Type
  5198 ;;  ucWidth         1    wreg     unsigned char 
  5199 ;; Auto vars:     Size  Location     Type
  5200 ;;  ucWidth         1    0[COMMON] unsigned char 
  5201 ;; Return value:  Size  Location     Type
  5202 ;;		None               void
  5203 ;; Registers used:
  5204 ;;		wreg
  5205 ;; Tracked objects:
  5206 ;;		On entry : 160/0
  5207 ;;		On exit  : 160/0
  5208 ;;		Unchanged: FFE9F/0
  5209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5210 ;;      Params:         0       0       0       0       0
  5211 ;;      Locals:         1       0       0       0       0
  5212 ;;      Temps:          0       0       0       0       0
  5213 ;;      Totals:         1       0       0       0       0
  5214 ;;Total ram usage:        1 bytes
  5215 ;; Hardware stack levels used:    1
  5216 ;; This function calls:
  5217 ;;		Nothing
  5218 ;; This function is called by:
  5219 ;;		_vPutSampleDataIntoTable
  5220 ;; This function uses a non-reentrant model
  5221 ;;
  5222  01F8                     _setPWM_Width:	
  5223                           
  5224                           ; Regs used in _setPWM_Width: [wreg]
  5225                           ;setPWM_Width@ucWidth stored from wreg
  5226  01F8  00F0               	movwf	setPWM_Width@ucWidth
  5227                           
  5228                           ;common.c: 71: ucOldWidth = ucWidth;
  5229  01F9  0095               	movwf	21	;volatile
  5230  01FA  0008               	return
  5231  01FB                     __end_of_setPWM_Width:	
  5232  01FB                     PL2:	
  5233  01FB  0084               	movwf	4
  5234  01FC  0876               	movf	vPutSampleDataIntoTable@uiSampleData,w
  5235  01FD  1383               	bcf	3,7	;select IRP bank1
  5236  01FE  0080               	movwf	0
  5237  01FF  0A84               	incf	4,f
  5238  0200  0877               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  5239  0201  0080               	movwf	0
  5240  0202  0008               	return
  5241  0203                     PL3:	
  5242  0203  00B4               	movwf	vPutSampleDataIntoTable@uiDeviationValue+1
  5243  0204  087B               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew,w
  5244  0205  00B3               	movwf	vPutSampleDataIntoTable@uiDeviationValue
  5245  0206  0843               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld,w
  5246  0207  07B3               	addwf	vPutSampleDataIntoTable@uiDeviationValue,f
  5247  0208  1803               	skipnc
  5248  0209  0AB4               	incf	vPutSampleDataIntoTable@uiDeviationValue+1,f
  5249  020A  0844               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld+1,w
  5250  020B  07B4               	addwf	vPutSampleDataIntoTable@uiDeviationValue+1,f
  5251  020C  1003               	clrc
  5252  020D  0CB4               	rrf	vPutSampleDataIntoTable@uiDeviationValue+1,f
  5253  020E  0CB3               	rrf	vPutSampleDataIntoTable@uiDeviationValue,f
  5254  020F  0830               	movf	vPutSampleDataIntoTable@uiAbstractValue+1,w
  5255  0210  00FA               	movwf	??_vPutSampleDataIntoTable+1
  5256  0211  082F               	movf	vPutSampleDataIntoTable@uiAbstractValue,w
  5257  0212  00F9               	movwf	??_vPutSampleDataIntoTable
  5258  0213  1003               	clrc
  5259  0214  0DF9               	rlf	??_vPutSampleDataIntoTable,f
  5260  0215  0DFA               	rlf	??_vPutSampleDataIntoTable+1,f
  5261  0216  0879               	movf	??_vPutSampleDataIntoTable,w
  5262  0217  0008               	return
  5263  0218                     PL4:	
  5264  0218  0084               	movwf	4
  5265  0219  1383               	bcf	3,7	;select IRP bank0
  5266  021A  0800               	movf	0,w
  5267  021B  00F2               	movwf	??_Filter
  5268  021C  0A84               	incf	4,f
  5269  021D  0800               	movf	0,w
  5270  021E  00F3               	movwf	??_Filter+1
  5271  021F  0008               	return
  5272  0220                     PL8:	
  5273  0220  3E25               	addlw	Filter@filter_buf& (0+255)
  5274  0221  0084               	movwf	4
  5275  0222  0872               	movf	??_Filter,w
  5276  0223  0080               	movwf	0
  5277  0224  0A84               	incf	4,f
  5278  0225  0873               	movf	??_Filter+1,w
  5279  0226  0080               	movwf	0
  5280  0227  0008               	return
  5281  0228                     PL10:	
  5282  0228  1003               	clrc
  5283  0229  0D2E               	rlf	Filter@i,w
  5284  022A  3E02               	addlw	2
  5285  022B  3E25               	addlw	Filter@filter_buf& (0+255)
  5286  022C  0084               	movwf	4
  5287  022D  0008               	return
  5288  022E                     PL11:	
  5289  022E  0180               	clrf	0
  5290  022F  0A84               	incf	4,f
  5291  0230  0180               	clrf	0
  5292  0231  1003               	clrc
  5293  0232  0D31               	rlf	vPutSampleDataIntoTable@i,w
  5294  0233  0008               	return
  5295                           
  5296                           	psect	intentry
  5297  0004                     __pintentry:	
  5298                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5299                           
  5300  0004                     interrupt_function:	
  5301  007E                     saved_w	set	btemp
  5302  0004  00FE               	movwf	btemp
  5303  0005  0E03               	swapf	3,w
  5304  0006  1283               	bcf	3,5	;RP0=0, select bank0
  5305  0007  1303               	bcf	3,6	;RP1=0, select bank0
  5306  0008  00B5               	movwf	??_ISR
  5307  0009  0804               	movf	4,w
  5308  000A  00B6               	movwf	??_ISR+1
  5309  000B  080A               	movf	10,w
  5310  000C  00B7               	movwf	??_ISR+2
  5311  000D  087F               	movf	btemp+1,w
  5312  000E  00B8               	movwf	??_ISR+3
  5313  000F  118A  2813         	ljmp	_ISR
  5314                           
  5315                           	psect	text1415
  5316  0000                     __ptext1415:	
  5317 ;; =============== function _getWaitResetFlag ends ============
  5318                           
  5319  007E                     btemp	set	126	;btemp
  5320  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri Dec 20 15:01:13 2019

                                  ??_clock_config 0039                                 ?_getWaitResetFlag 0070  
                             ?_startOneHoursTimer 0039                                                _GO 00F9  
                              ??_getWaitResetFlag 0070                                                fsr 0004  
                        ?_timer1_interrupt_config 0070                                               l700 0521  
                                             l710 0529                                               l705 0507  
                                             l721 0000                                               l730 061D  
                                             l715 0000                                               l724 0000  
                                             l718 0000                                               l742 03E1  
                                             l727 0000                                               l736 0000  
                                             l690 0519                                               l685 04EC  
                                             l695 04FC                                               _GIE 005F  
                                             _PB0 0030                                               _PB1 0031  
                                             _PB2 0032                                               _PB3 0033  
                                             _PR2 0092                                               _ISR 0013  
                                             _key 01E0                                               fsr0 0004  
                                             indf 0000                            ??_startThreeHoursTimer 003B  
                                            ?_ISR 0070                              ??_startOneHoursTimer 003B  
                              __size_of_AD_Sample 0014                                              l1505 0000  
                                            l2332 0000                                              l1621 0000  
                                            l4101 0000                                              l1630 0000  
                                            l2326 0000                                              l4023 0000  
                                            l4031 0000                                              l2343 0000  
                                            l4103 0000                                              l4111 04D5  
                                            l1624 0000                                              l4025 0000  
                                            l4033 0000                                              l4041 0000  
                                            l4113 0000                                              l4027 0000  
                                            l4035 0000                                              l4043 0000  
                                            l4051 0000                                              l1627 0000  
                                            l4115 0000                                              l4131 0000  
                                            l4203 0000                                              l1483 0000  
                                            l1580 0000                                              l4029 0000  
                                            l4037 0000                                              l4045 0000  
                                            l4061 0000                                              l4053 0000  
                                            l4109 0000                                              l2349 0000  
                                            l4125 0000                                              l4133 0000  
                                            l4205 0000                                              l4301 0000  
                                            l1574 060A                                              l1670 0000  
                                            l4039 0000                                              l4047 0000  
                                            l4063 0000                                              l4055 0000  
                                            l4071 0000                                              l1583 0000  
                                            l4127 0000                                              l4143 0000  
                                            l4151 0000                                              l4215 0000  
                                            l4223 03F2                                              l4057 0000  
                                            l4049 0000                                              l4065 0000  
                                            l4073 053F                                              l1577 0000  
                                            l4081 0000                                              l4225 0000  
                                            l4217 0000                                              l4305 049A  
                                            l4401 0000                                              l4321 0000  
                                            l4313 0000                                              l1586 0000  
                                            l4059 0000                                              l4067 0000  
                                            l4075 0000                                              l4083 0000  
                                            l4091 0000                                              l4155 0000  
                                            l4243 044A                                              l4227 0000  
                                            l1595 0000                                              l4403 0000  
                                            l4323 0000                                              l4315 0000  
                                            l4069 0000                                              l4077 0000  
                                            l4085 0000                                              l4093 0000  
                                            l4149 0000                                              l4157 0000  
                                            l4173 0000                                              l4181 0000  
                                            l4245 0410                                              l4229 0000  
                                            l1589 0000                                              l4309 0000  
                                            l4421 0322                                              l4405 0000  
                                            l4333 0265                                              l4325 03B1  
                                            l4317 0000                                              l4079 0000  
                                            l4087 0000                                              l4095 0000  
                                            l4167 0000                                              l4175 0000  
                                            l4191 0000                                              l4247 044C  
                                            l4271 0000                                              l4431 0000  
                                            l4423 0324                                              l4407 02FD  
                                            l4351 0285                                              l4343 027C  
                                            l4327 0000                                              l4319 0000  
                                            l4089 0000                                              l4097 0000  
                                            l4257 0000                                              l4249 0000  
                                            l4265 0000                                              l4441 0351  
                                            l4409 0000                                              l4361 02A9  
                                            l4353 0000                                              l4345 027D  
                                            l4337 0000                                              l4329 0000  
                                            l4099 0000                                              l4179 0000  
                                            l4259 0000                                              l4283 04B7  
                                            l4275 0000                                              l4291 0000  
                                            l4451 037F                                              l4443 0353  
                                            l4427 0000                                              l4419 031F  
                                            l4363 02AB                                              l4355 0000  
                                            l4339 0270                                              l4197 0000  
                                            l4269 0000                                              l4285 0000  
                                            l4293 0000                                              l4461 0000  
                                            l4429 0000                                              l4373 0000  
                                            l4357 0000                                              l4349 0282  
                                            l4199 0000                                              l4279 0000  
                                            l4287 0000                                              l4295 0000  
                                            l4471 03AD                                              l4455 038B  
                                            l4447 0367                                              l4375 02BF  
                                            l4367 02B7                                              l4359 02A3  
                                            l4289 0000                                              l4297 0000  
                                            l4473 0000                                              l4465 03A4  
                                            l4457 0000                                              l4449 0000  
                                            l4393 0000                                              l4377 0000  
                                            l4369 02B8                                              l4467 03A6  
                                            l4459 0390                                              l4395 02E5  
                                            l4387 02DD                                              l4379 02CB  
                                            l4397 0000                                              l4389 02DE  
                                            l4399 0000                                              _ADIE 046A  
                                            _ADIF 006A                                              _ADON 00F8  
                   startTwelveHourTimer@uiSetTime 0039                                              u2257 025C  
                                            u1955 040A                                              _PEIE 005E  
                                            u1965 0431                                              u1975 041D  
                            FilterCh13@filter_buf 00C9                              FilterCh13@filter_sum 00C7  
                                            _main 0234                                              btemp 007E  
                                            start 0011                           ?_getAdOriginalCh13Value 003B  
                      ??_isFinishedTwentyMinTimer 0039                                             ??_ISR 0035  
                               ??_setPinInitVaule 003A                        __end_of_isPermitSampleTime 0611  
                             _sampleChannelSelect 0055                                             ?_main 0070  
                                           _CLKPR 0108                                             _T1CON 0010  
                                           _T2CON 0012                                   __end_of_adc_get 008B  
                                           _PBOD2 0C42                                             _TMR1H 000F  
                                           _TMR1L 000E                             setAD_ConvertFlag@flag 0039  
                               ??_selectAdChannel 0039                             FilterCh13@filter_temp 00C5  
                                      _FilterCh13 03E9                                   __end_of_initPB3 04EF  
                                 __end_of_initPB4 04FF                                   __end_of_initPB5 050A  
                         _vPutSampleDataIntoTable 008E                                   __end_of_initPin 04E3  
                                           _reset 061D                                             _timer 004D  
                                 __end_of_uid_get 0595                                             pclath 000A  
                                           status 0003                                             wtemp0 007E  
                  __end_of_getAdOriginalCh13Value 03E9                     __size_of_startTwelveHourTimer 000E  
                            __end_of_clrSampeTime 061D                                      __end_of_main 03E2  
                          __size_of_adc_test_init 001B                                 __end_of_AD_Sample 04BA  
                                          ??_main 00D3                               setPWM_Width@ucWidth 0070  
                                   main@ucChValue 00D4                                     main@ucDelay1s 00A6  
                                          _ADCON0 001F                                            _ADCON1 009F  
                            __end_of_clock_config 060D                                            _ADRESH 001E  
                                          _ADRESL 009E                                            _CCPR1L 0015  
                                          ?_reset 0070                                            _CLKPCE 0847  
                                          i1l1518 0000                                            i1l2352 0000  
                                          i1l1546 00E1                                            i1l1555 010D  
                                          i1l1492 0000                                            i1l1486 0000  
                                          i1l1680 0046                                            i1l1589 0000  
                                          i1l1685 006D                                            i1l1677 0027  
                                          i1l1678 0031                                            i1l3631 0000  
                                          i1l3623 0000                                            i1l1679 003C  
                                          i1l3633 0000                                            i1l3651 0198  
                                          i1l3635 0000                                            i1l3731 0000  
                                          i1l3723 0113                                            i1l3715 0105  
                                          i1l3811 0051                                            i1l3573 0000  
                                          i1l3653 01DA                                            u115_25 0192  
                                          i1l3629 017B                                            i1l3741 012E  
                                          i1l3717 0107                                            u123_25 00AE  
                                          i1l3733 0121                                            i1l3821 0064  
                                          i1l3663 0000                                            i1l3655 0000  
                                          i1l3823 0000                                            i1l3751 0000  
                                          i1l3743 0000                                            i1l3735 0000  
                                          i1l3727 0119                                            i1l3671 0000  
                                          i1l3815 0000                                            i1l3569 0000  
                                          i1l3665 0000                                            i1l3649 01D8  
                                          i1l3753 0143                                            i1l3745 0134  
                                          i1l3729 011B                                            i1l3817 0000  
                                          i1l3827 0000                                            i1l3763 014F  
                                          i1l3755 0000                                            i1l3739 0000  
                                          i1l3683 0000                                            u116_25 01BB  
                                          i1l3765 0000                                            i1l3757 0149  
                                          i1l3693 0000                                            i1l3685 0000  
                                          i1l3677 0000                                            i1l3767 0000  
                                          i1l3695 00C3                                            i1l3687 0000  
                                          i1l3679 0000                                            i1l3697 0000  
                                          i1l3689 0000                                            i1l3793 0000  
                                          i1l3699 00D4                                            i1l3795 0000  
                                          u117_25 01A5                                            i1l3789 0000  
                                          i1l3799 0000                                            u136_25 016D  
                           __end_of_resetAllTimer 0532                                            _TMR1IE 0460  
                                          _TMR1IF 0060                                 _getAD_ConvertFlag 049F  
                               _setAD_ConvertFlag 04A3                                            _TRISB0 0430  
                                          _TRISB1 0431                                            _TRISB2 0432  
                                          _TRISB3 0433                                            _TRISB4 0434  
                                          _TRISB5 0435                                ?_getAD_ConvertFlag 0070  
                                          _Filter 0172                                ?_setAD_ConvertFlag 0070  
                                __end_of_op1_init 05FD                       ??_isFinishedThreeHoursTimer 0039  
                   __size_of_clearThreeHoursTimer 0004                                         ??_adc_get 0072  
                             ??_getAD_ConvertFlag 0039                               ??_setAD_ConvertFlag 0039  
                                          _setPB3 0512                                            _setPB4 051B  
                                          _setPB5 0523                       __end_of_clearTwentyMinTimer 0545  
                                          clrloop 05FE                                  Filter@filter_buf 0025  
                                       ??_initPB3 0039                                         ??_initPB4 0039  
                                       ??_initPB5 0039                                  Filter@filter_sum 0022  
                                       ??_initPin 003A                         ??_vPutSampleDataIntoTable 0079  
                                          saved_w 007E                           ??_clearTwelveHoursTimer 0039  
                                     ?_FilterCh13 0039                                         ??_uid_get 0039  
                        __end_of_setWaitResetFlag 0618                       ?_process_AD_Converter_Value 0070  
                                   _adc_test_init 04BA                         __end_of_getAD_ConvertFlag 04A3  
                       __end_of_setAD_ConvertFlag 04A6                                     ?_setPWM_Width 0070  
                              __size_of_adc_start 0004                          _initPB2_AsHighResistence 04EF  
                __size_of_isFinishedOneHoursTimer 000B                  __end_of_isFinishedTwentyMinTimer 05CB  
                                  __pcstackCOMMON 0070                                      __pidataBANK0 0000  
                               main@uiTimerOneP5s 00A8                                     __end_of_reset 0611  
                               main@uiTimerTwoP5s 00AA                            setWaitResetFlag@bValue 0039  
                  vPutSampleDataIntoTable@channel 0078                         _isFinishedThreeHoursTimer 05D6  
                           __end_of_timer1_config 05F4                         __size_of_getWaitResetFlag 0002  
                                  ?_adc_test_init 0039                       __end_of_startTwentyMinTimer 0584  
                                         ??_reset 0039                  __size_of_timer1_interrupt_config 0003  
                           __size_of_clrSampeTime 0002                                        __pbssBANK0 003D  
                                      __pbssBANK1 00A0                                    ??_setPWM_Width 0070  
                    __size_ofi1_setAD_ConvertFlag 0003                                   _setPinInitVaule 050A  
                                      adc_get@val 0072                                  _uiTwentyMinTimer 00A2  
                 __end_of_vPutSampleDataIntoTable 0170                                           ?_Filter 0070  
                     __size_of_clearOneHoursTimer 0004                                        __pmaintext 0234  
             vPutSampleDataIntoTable@ucCh12Length 007D                               __size_of_FilterCh13 0082  
             vPutSampleDataIntoTable@ucCh13Length 0053           vPutSampleDataIntoTable@uiDeviationValue 0033  
                                 _selectAdChannel 0611                                        __pintentry 0004  
                                         _CCP1CON 0017                                        __ptext1400 055B  
                                      __ptext1401 04EF                                        __ptext1410 008B  
                                      __ptext1402 0523                                        __ptext1411 007A  
                                      __ptext1403 04FF                                        __ptext1412 0172  
                                      __ptext1404 051B                                        __ptext1413 01F8  
                                      __ptext1405 04F4                                        __ptext1414 0170  
                                      __ptext1406 0512                                           ?_setPB3 0070  
                                      __ptext1415 0000                                        __ptext1407 04E3  
                                         ?_setPB4 0070                                        __ptext1408 0013  
                                         ?_setPB5 0070                                        __ptext1409 008E  
                                      __ptext1370 050A                                        __ptext1371 04D9  
                                      __ptext1380 05A3                                        __ptext1372 04A6  
                                      __ptext1381 05E0                                        __ptext1373 04A3  
                                      __ptext1390 0584                                        __ptext1382 05B1  
                                      __ptext1374 049F                                        __ptext1391 0618  
                                      __ptext1383 05BF                                        __ptext1375 03E9  
                                      __ptext1367 03E2                                        __ptext1392 05EA  
                                      __ptext1384 061B                                        __ptext1376 0615  
                                      __ptext1368 048A                                        __ptext1393 0605  
                                      __ptext1385 060D                                        __ptext1377 05CB  
                                      __ptext1369 052B                                        __ptext1394 053F  
                                      __ptext1386 04D5                                        __ptext1378 0595  
                                      __ptext1395 053B                                        __ptext1387 0570  
                                      __ptext1379 05D6                                        __ptext1396 0537  
                                      __ptext1388 04BA                                        __ptext1397 0532  
                                      __ptext1389 05F4                                        __ptext1398 061D  
                                      __ptext1399 0611                             __size_of_clock_config 0008  
                                         _OP1CON0 001B                                           _OP1CON1 001C  
                                         _OP1CON2 001D                                      _clrSampeTime 061B  
                               __end_of_adc_start 04D9                              _uiTwentySecondsTimer 00A4  
                                       ?_op1_init 0070                                _isPermitSampleTime 060D  
                                         Filter@i 002E                                           Filter@j 002D  
                              __size_of_pwm_start 0015                       __size_of_startOneHoursTimer 000E  
                   __size_of_startThreeHoursTimer 000E                        __size_of_getAD_ConvertFlag 0004  
                      __size_of_setAD_ConvertFlag 0003                                    main@ucTimerP3s 0051  
                                  main@ucTimerP5s 0052                               ?_isPermitSampleTime 0070  
                                 __size_of_Filter 0086                                        _uiBigTimer 003D  
                                    setPB3@bValue 0039                                      setPB4@bValue 0039  
                                    _clock_config 0605                                      setPB5@bValue 0039  
                                         _adc_get 007A                                   __size_of_setPB3 0009  
                                 __size_of_setPB4 0008                                   __size_of_setPB5 0008  
                            ??_isPermitSampleTime 0039                      __end_of_startTwelveHourTimer 05BF  
                                   initPB3@bValue 0039                                     initPB4@bValue 0039  
                                       _AD_Sample 04A6                                           _initPB3 04E3  
                                         _initPB4 04F4                                           _initPB5 04FF  
                                    __size_of_ISR 0067                                     initPB5@bValue 0039  
                                         _initPin 04D9                              _bSmallTimerStartFlag 0049  
                                 ??_adc_test_init 003A                                           _uid_get 0584  
               __size_of_isFinishedTwentyMinTimer 000C                                        ??_op1_init 0039  
                       ?_isFinishedTwentyMinTimer 0070                           __end_of_setPinInitVaule 0512  
                            end_of_initialization 0558                                 Filter@filter_temp 0020  
                           pwm_start@ucPulseWidth 003A                           __end_of_selectAdChannel 0615  
                         _isFinishedOneHoursTimer 05CB                                 __end_of_pwm_start 0570  
                            __end_of_setPWM_Width 01FB                                        ?_AD_Sample 0070  
                    ??_isFinishedTwelveHoursTimer 0039                                         Filter@cir 002B  
                             _bTwentyMinStartFlag 004A                                  _adc_convert_flag 0046  
                                    ??_FilterCh13 00C0                                  _getWaitResetFlag 0170  
                    __end_of_clearThreeHoursTimer 053B                    __size_of_clearTwelveHoursTimer 0005  
                               ?_setWaitResetFlag 0070                           _timer1_interrupt_config 0618  
                   __end_of_clearTwelveHoursTimer 0537                        ??_initPB2_AsHighResistence 0039  
                              ??_setWaitResetFlag 0039                __size_of_isFinishedThreeHoursTimer 000A  
                                      main@ucStep 0050                                    __end_of_Filter 01F8  
                   startTwentyMinTimer@uiSetValue 0039               __size_of_isFinishedTwelveHoursTimer 000A  
                              FilterCh13@tmpValue 00C4                                __end_of_FilterCh13 046B  
                        vPutSampleDataIntoTable@i 0031                               i1_setAD_ConvertFlag 008B  
                                  __end_of_setPB3 051B                                    __end_of_setPB4 0523  
                                  __end_of_setPB5 052B                            __size_of_resetAllTimer 0007  
                             start_initialization 0545                                       __end_of_ISR 007A  
                                ?_setPinInitVaule 0070                          ??_getAdOriginalCh13Value 003D  
                    __size_of_clearTwentyMinTimer 0006                         ??_isFinishedOneHoursTimer 0039  
                            ?i1_setAD_ConvertFlag 0070                              _startTwelveHourTimer 05B1  
               __end_of_isFinishedThreeHoursTimer 05E0                                  ?_selectAdChannel 0070  
                                        ??_Filter 0072                                       __pdataBANK0 0055  
                                        ??_setPB3 0039                                          ??_setPB4 0039  
                                        ??_setPB5 0039                          ?_vPutSampleDataIntoTable 0076  
                                     ??_AD_Sample 0039                         ??_timer1_interrupt_config 0039  
                                     __pbssCOMMON 007B                                     __pcstackBANK0 0020  
                                   __pcstackBANK1 00C0                                         _ad_offset 00A0  
                                       _adc_start 04D5                                 __size_of_op1_init 0009  
                           ??i1_setAD_ConvertFlag 0070                                   main@uiCh13Value 00D6  
                           ?_startTwelveHourTimer 0039                                     _resetAllTimer 052B  
                      __end_of_clearOneHoursTimer 053F                      __size_of_startTwentyMinTimer 0014  
                          __size_of_timer1_config 000A                              _clearThreeHoursTimer 0537  
                           __size_of_setPWM_Width 0003                      __end_of_startThreeHoursTimer 05B1  
                               main@cTimerP5s_801 004F                                 main@cTimerP5s_795 004E  
                                        ?_adc_get 0070                   __end_of_isFinishedOneHoursTimer 05D6  
              __end_of_isFinishedTwelveHoursTimer 05EA                        _isFinishedTwelveHoursTimer 05E0  
                                        ?_initPB3 0070                                          ?_initPB4 0070  
                                        ?_initPB5 0070                                   ISR@ucTimer1sCnt 0045  
                                        ?_initPin 0070                        __end_of_startOneHoursTimer 05A3  
                                        ?_uid_get 0070                  __end_of_initPB2_AsHighResistence 04F4  
                       _uiSampleChannelFourteenth 00BA                                        ?_adc_start 0070  
                 __size_of_getAdOriginalCh13Value 0007                                    __size_of_reset FFF4  
                                  ?_resetAllTimer 0070                                 interrupt_function 0004  
                                    _setPWM_Width 01F8                                    _bWaitResetFlag 004B  
                 __end_of_timer1_interrupt_config 061B                         pwm_start@ucPulseFrequency 0039  
                        __end_of_getWaitResetFlag 0172                             ?_clearThreeHoursTimer 0070  
                                    _uiSampleCh12 00AE                                      _uiSampleCh13 00B4  
                            adc_test_init@channel 003B                                          _SRAM_MAP 0C78  
             vPutSampleDataIntoTable@uiSampleData 0076                       __size_of_isPermitSampleTime 0004  
                                       _pwm_start 055B         vPutSampleDataIntoTable@uiCalWidthArrayOld 0043  
       vPutSampleDataIntoTable@uiCalWidthArrayNew 007B                                      _uiSmallTimer 0041  
            vPutSampleDataIntoTable@uiCalWidthCnt 00AC                             __end_of_adc_test_init 04D5  
                                   _timer1_config 05EA                      ??_process_AD_Converter_Value 003C  
                          ??_startTwelveHourTimer 003B                         __size_of_setWaitResetFlag 0003  
                          _getAdOriginalCh13Value 03E2                               _clearTwentyMinTimer 053F  
                     startOneHoursTimer@uiSetTime 0039                                  __size_of_adc_get 0011  
             __size_of_process_AD_Converter_Value 0015                                        ?_pwm_start 0039  
                        _isFinishedTwentyMinTimer 05BF  vPutSampleDataIntoTable@ucChannelFourteenthLength 0054  
                                __size_of_initPB3 000C                                  __size_of_initPB4 000B  
                                __size_of_initPB5 000B                                  __size_of_initPin 000A  
                                  Filter@tmpValue 0024                                    ?_timer1_config 0070  
                                        _op1_init 05F4                                  __size_of_uid_get 0011  
                            ?_clearTwentyMinTimer 0070                                       ??_adc_start 0039  
                                 ??_resetAllTimer 0039                              _startThreeHoursTimer 05A3  
                           _clearTwelveHoursTimer 0532                                    _uiOneHourTimer 003F  
                                   __size_of_main 01AE                vPutSampleDataIntoTable@uiInitWidth 0056  
                                   FilterCh13@cir 00CF                                          clear_ram 05FD  
                          ??_clearThreeHoursTimer 0039                 __size_of_initPB2_AsHighResistence 0005  
                       ?_initPB2_AsHighResistence 0070                            _bOneHourTimerStartFlag 0048  
                                   ?_clrSampeTime 0070                               _startTwentyMinTimer 0570  
                                     _sampleTimes 004C                             ??_clearTwentyMinTimer 0039  
                           ?_startThreeHoursTimer 0039                  __size_of_vPutSampleDataIntoTable 00E2  
                                        intlevel1 0000                              ?_startTwentyMinTimer 0039  
                        __size_of_setPinInitVaule 0008                        ?_isFinishedThreeHoursTimer 0070  
          vPutSampleDataIntoTable@uiAbstractValue 002F                                     ?_clock_config 0070  
                        __size_of_selectAdChannel 0004                                _clearOneHoursTimer 053B  
                   startThreeHoursTimer@uiSetTime 0039                           i1setAD_ConvertFlag@flag 0070  
                                     ??_pwm_start 003A                                    ??_clrSampeTime 0039  
                     ?_isFinishedTwelveHoursTimer 0070                                _bBigTimerStartFlag 0047  
                                 ??_timer1_config 0039                                       FilterCh13@i 00D2  
                                     FilterCh13@j 00D1                               ?_clearOneHoursTimer 0070  
                     __end_ofi1_setAD_ConvertFlag 008E                __end_of_process_AD_Converter_Value 049F  
                      _process_AD_Converter_Value 048A                          ?_isFinishedOneHoursTimer 0070  
                          ?_clearTwelveHoursTimer 0070                                  adc_test_init@ref 0039  
                           ??_startTwentyMinTimer 003B                                _startOneHoursTimer 0595  
                            ??_clearOneHoursTimer 0039                                  _setWaitResetFlag 0615  
