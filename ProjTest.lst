

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Mon Nov 11 00:00:22 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,delta=2
    16                           	psect	text833,local,class=CODE,delta=2
    17                           	psect	text834,local,class=CODE,delta=2
    18                           	psect	text835,local,class=CODE,delta=2
    19                           	psect	text837,local,class=CODE,delta=2
    20                           	psect	text838,local,class=CODE,delta=2
    21                           	psect	text839,local,class=CODE,delta=2
    22                           	psect	text840,local,class=CODE,delta=2
    23                           	psect	text841,local,class=CODE,delta=2
    24                           	psect	text842,local,class=CODE,delta=2
    25                           	psect	text843,local,class=CODE,delta=2
    26                           	psect	text844,local,class=CODE,delta=2
    27                           	psect	text845,local,class=CODE,delta=2
    28                           	psect	text846,local,class=CODE,delta=2
    29                           	psect	text847,local,class=CODE,delta=2
    30                           	psect	text848,local,class=CODE,delta=2
    31                           	psect	text849,local,class=CODE,delta=2
    32                           	psect	text850,local,class=CODE,delta=2
    33                           	psect	text851,local,class=CODE,delta=2
    34                           	psect	text852,local,class=CODE,delta=2
    35                           	psect	text853,local,class=CODE,delta=2
    36                           	psect	text854,local,class=CODE,delta=2
    37                           	psect	text855,local,class=CODE,delta=2
    38                           	psect	text863,local,class=CODE,delta=2
    39                           	psect	text864,local,class=CODE,delta=2
    40                           	psect	text865,local,class=CODE,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	text875,local,class=CODE,delta=2
    43                           	psect	pa_nodes,global,class=CODE,delta=2
    44                           	dabs	1,0x7E,2
    45  000A                     	;#
    46                           
    47                           	psect	config
    48  2000  0FFF               	dw	4095	;#
    49  2001  3FDE               	dw	16350	;#
    50  2002  3FF8               	dw	16376	;#
    51                           
    52                           	psect	idataBANK0
    53  0000                     __pidataBANK0:	
    54  001F                     _ADCON0	set	31
    55  001E                     _ADRESH	set	30
    56  0017                     _CCP1CON	set	23
    57  0015                     _CCPR1L	set	21
    58  0010                     _T1CON	set	16
    59  0012                     _T2CON	set	18
    60  000F                     _TMR1H	set	15
    61  000E                     _TMR1L	set	14
    62  006A                     _ADIF	set	106
    63  00F8                     _ADON	set	248
    64  005F                     _GIE	set	95
    65  00F9                     _GO	set	249
    66  0032                     _PB2	set	50
    67  0033                     _PB3	set	51
    68  0034                     _PB4	set	52
    69  0035                     _PB5	set	53
    70  005E                     _PEIE	set	94
    71  0060                     _TMR1IF	set	96
    72  009F                     _ADCON1	set	159
    73  009E                     _ADRESL	set	158
    74  0092                     _PR2	set	146
    75  046A                     _ADIE	set	1130
    76  0460                     _TMR1IE	set	1120
    77  0430                     _TRISB0	set	1072
    78  0431                     _TRISB1	set	1073
    79  0432                     _TRISB2	set	1074
    80  0433                     _TRISB3	set	1075
    81  0434                     _TRISB4	set	1076
    82  0435                     _TRISB5	set	1077
    83  0108                     _CLKPR	set	264
    84  0847                     _CLKPCE	set	2119
    85  0C42                     _PBOD2	set	3138
    86                           
    87                           	psect	cinit
    88  0442                     start_initialization:	
    89  0442  3020               	movlw	low __pbssBANK0
    90                           
    91                           ; Clear objects allocated to COMMON
    92  0443  01FD               	clrf	__pbssCOMMON& (0+127)
    93                           
    94                           ; Clear objects allocated to BANK0
    95  0444  1383               	bcf	3,7	;select IRP bank0
    96  0445  0084               	movwf	4
    97  0446  303F               	movlw	low (__pbssBANK0+31)
    98  0447  118A  24F1  118A   	fcall	clear_ram
    99                           
   100                           ; Clear objects allocated to BANK1
   101  044A  30A0               	movlw	low __pbssBANK1
   102  044B  0084               	movwf	4
   103  044C  30B8               	movlw	low (__pbssBANK1+24)
   104  044D  118A  24F1  118A   	fcall	clear_ram
   105  0450  3090               	movlw	low __pbssBANK3
   106                           
   107                           ; Clear objects allocated to BANK3
   108  0451  1783               	bsf	3,7	;select IRP bank2
   109  0452  0084               	movwf	4
   110  0453  30CC               	movlw	low (__pbssBANK3+60)
   111  0454  118A  24F1         	fcall	clear_ram
   112                           
   113                           ;initializer for _sampleChannelSelect
   114  0456  300C               	movlw	12
   115  0457  00DE               	movwf	__pdataBANK0& (0+127)
   116                           
   117                           ;initializer for vPutSampleDataIntoTable@uiInitWidth
   118  0458  304B               	movlw	75
   119  0459  00DF               	movwf	(__pdataBANK0+1)& (0+127)
   120  045A                     end_of_initialization:	
   121                           ;End of C runtime variable initialization code
   122                           
   123  045A  0183               	clrf	3
   124  045B  118A  29BE         	ljmp	_main	;jump to C main() function
   125                           
   126                           	psect	bssCOMMON
   127  007D                     __pbssCOMMON:	
   128  007D                     setPWM_Width@ucOldWidth:	
   129  007D                     	ds	1
   130                           
   131                           	psect	bssBANK0
   132  0020                     __pbssBANK0:	
   133  0020                     _uiBigTimer:	
   134  0020                     	ds	2
   135  0022                     _uiOneHourTimer:	
   136  0022                     	ds	2
   137  0024                     _uiSmallTimer:	
   138  0024                     	ds	2
   139  0026                     _uiTwentyMinTimer:	
   140  0026                     	ds	2
   141  0028                     _uiTwentySecondsTimer:	
   142  0028                     	ds	2
   143  002A                     main@ucDelay1s:	
   144  002A                     	ds	2
   145  002C                     main@uiTimerOneP5s:	
   146  002C                     	ds	2
   147  002E                     main@uiTimerThreeP5s:	
   148  002E                     	ds	2
   149  0030                     main@uiTimerTwoP5s:	
   150  0030                     	ds	2
   151  0032                     ISR@ucTimer1sCnt:	
   152  0032                     	ds	1
   153  0033                     _bBigTimerStartFlag:	
   154  0033                     	ds	1
   155  0034                     _bOneHourTimerStartFlag:	
   156  0034                     	ds	1
   157  0035                     _bSmallTimerStartFlag:	
   158  0035                     	ds	1
   159  0036                     _bTwentyMinStartFlag:	
   160  0036                     	ds	1
   161  0037                     _timer:	
   162  0037                     	ds	1
   163  0038                     main@cTimerP5s_777:	
   164  0038                     	ds	1
   165  0039                     main@cTimerP5s_783:	
   166  0039                     	ds	1
   167  003A                     main@ucStep:	
   168  003A                     	ds	1
   169  003B                     main@ucTimerP3s:	
   170  003B                     	ds	1
   171  003C                     main@ucTimerP5s:	
   172  003C                     	ds	1
   173  003D                     vPutSampleDataIntoTable@ucCh12Length:	
   174  003D                     	ds	1
   175  003E                     vPutSampleDataIntoTable@ucCh13Length:	
   176  003E                     	ds	1
   177                           
   178                           	psect	dataBANK0
   179  005E                     __pdataBANK0:	
   180  005E                     _sampleChannelSelect:	
   181  005E                     	ds	1
   182  005F                     vPutSampleDataIntoTable@uiInitWidth:	
   183  005F                     	ds	1
   184                           
   185                           	psect	bssBANK1
   186  00A0                     __pbssBANK1:	
   187  00A0                     _uiSampleCh13:	
   188  00A0                     	ds	24
   189                           
   190                           	psect	bssBANK3
   191  0190                     __pbssBANK3:	
   192  0190                     _uiSampleCh12:	
   193  0190                     	ds	60
   194                           
   195                           	psect	clrtext
   196  04F1                     clear_ram:	
   197                           ;	Called with FSR containing the base address, and
   198                           ;	W with the last address+1
   199                           
   200  04F1  0064               	clrwdt	;clear the watchdog before getting into this loop
   201  04F2                     clrloop:	
   202  04F2  0180               	clrf	0	;clear RAM location pointed to by FSR
   203  04F3  0A84               	incf	4,f	;increment pointer
   204  04F4  0604               	xorwf	4,w	;XOR with final address
   205  04F5  1903               	btfsc	3,2	;have we reached the end yet?
   206  04F6  3400               	retlw	0	;all done for this memory range, return
   207  04F7  0604               	xorwf	4,w	;XOR again to restore value
   208  04F8  2CF2               	goto	clrloop	;do the next byte
   209                           
   210                           	psect	cstackCOMMON
   211  0070                     __pcstackCOMMON:	
   212  0070                     ?_clearTwelveHoursTimer:	
   213  0070                     ?_clearThreeHoursTimer:	
   214                           ; 0 bytes @ 0x0
   215                           
   216  0070                     ?_clock_config:	
   217                           ; 0 bytes @ 0x0
   218                           
   219  0070                     ?_timer1_config:	
   220                           ; 0 bytes @ 0x0
   221                           
   222  0070                     ?_timer1_interrupt_config:	
   223                           ; 0 bytes @ 0x0
   224                           
   225  0070                     ?_adc_start:	
   226                           ; 0 bytes @ 0x0
   227                           
   228  0070                     ?_clrSampeTime:	
   229                           ; 0 bytes @ 0x0
   230                           
   231  0070                     ?_clearTwentyMinTimer:	
   232                           ; 0 bytes @ 0x0
   233                           
   234  0070                     ?_disable_AD_interrupt:	
   235                           ; 0 bytes @ 0x0
   236                           
   237  0070                     ??_disable_AD_interrupt:	
   238                           ; 0 bytes @ 0x0
   239                           
   240  0070                     ?_switchSampleChannel:	
   241                           ; 0 bytes @ 0x0
   242                           
   243  0070                     ?_enable_AD_interrupt:	
   244                           ; 0 bytes @ 0x0
   245                           
   246  0070                     ??_enable_AD_interrupt:	
   247                           ; 0 bytes @ 0x0
   248                           
   249  0070                     ?_initPB3:	
   250                           ; 0 bytes @ 0x0
   251                           
   252  0070                     ?_setPB3:	
   253                           ; 0 bytes @ 0x0
   254                           
   255  0070                     ?_initPB4:	
   256                           ; 0 bytes @ 0x0
   257                           
   258  0070                     ?_setPB4:	
   259                           ; 0 bytes @ 0x0
   260                           
   261  0070                     ?_initPB5:	
   262                           ; 0 bytes @ 0x0
   263                           
   264  0070                     ?_setPB5:	
   265                           ; 0 bytes @ 0x0
   266                           
   267  0070                     ?_initPB2_AsHighResistence:	
   268                           ; 0 bytes @ 0x0
   269                           
   270  0070                     ?_initPin:	
   271                           ; 0 bytes @ 0x0
   272                           
   273  0070                     ?_setPinInitVaule:	
   274                           ; 0 bytes @ 0x0
   275                           
   276  0070                     ?_selectAdChannel:	
   277                           ; 0 bytes @ 0x0
   278                           
   279  0070                     ?_reset:	
   280                           ; 0 bytes @ 0x0
   281                           
   282  0070                     ?_setPWM_Width:	
   283                           ; 0 bytes @ 0x0
   284                           
   285  0070                     ??_setPWM_Width:	
   286                           ; 0 bytes @ 0x0
   287                           
   288  0070                     ?_setAD_ConvertFlag:	
   289                           ; 0 bytes @ 0x0
   290                           
   291  0070                     ??_setAD_ConvertFlag:	
   292                           ; 0 bytes @ 0x0
   293                           
   294  0070                     ?_ISR:	
   295                           ; 0 bytes @ 0x0
   296                           
   297  0070                     ?i1_adc_test_init:	
   298                           ; 0 bytes @ 0x0
   299                           
   300  0070                     ?_isPermitSampleTime:	
   301                           ; 0 bytes @ 0x0
   302                           
   303  0070                     ?_isFinishedTwentyMinTimer:	
   304                           ; 1 bytes @ 0x0
   305                           
   306  0070                     ?_isFinishedTwelveHoursTimer:	
   307                           ; 1 bytes @ 0x0
   308                           
   309  0070                     ?_isFinishedThreeHoursTimer:	
   310                           ; 1 bytes @ 0x0
   311                           
   312  0070                     ?_isFinishedOneHoursTimer:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0070                     ?_adc_get:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0070                     ?_main:	
   319                           ; 2 bytes @ 0x0
   320                           
   321  0070                     ?_FilterCh12:	
   322                           ; 2 bytes @ 0x0
   323                           
   324  0070                     setPWM_Width@ucWidth:	
   325                           ; 2 bytes @ 0x0
   326                           
   327  0070                     setAD_ConvertFlag@flag:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0070                     i1adc_test_init@ref:	
   331                           ; 1 bytes @ 0x0
   332                           
   333                           
   334                           ; 1 bytes @ 0x0
   335  0070                     	ds	1
   336  0071                     ??i1_adc_test_init:	
   337                           
   338                           ; 0 bytes @ 0x1
   339  0071                     	ds	1
   340  0072                     ??_adc_get:	
   341  0072                     ??_FilterCh12:	
   342                           ; 0 bytes @ 0x2
   343                           
   344  0072                     i1adc_test_init@channel:	
   345                           ; 0 bytes @ 0x2
   346                           
   347  0072                     adc_get@val:	
   348                           ; 1 bytes @ 0x2
   349                           
   350                           
   351                           ; 2 bytes @ 0x2
   352  0072                     	ds	1
   353  0073                     ??_switchSampleChannel:	
   354  0073                     switchSampleChannel@ucCurrentChannel:	
   355                           ; 0 bytes @ 0x3
   356                           
   357                           
   358                           ; 1 bytes @ 0x3
   359  0073                     	ds	4
   360  0077                     FilterCh12@filter_temp:	
   361                           
   362                           ; 2 bytes @ 0x7
   363  0077                     	ds	2
   364  0079                     FilterCh12@filter_sum:	
   365                           
   366                           ; 2 bytes @ 0x9
   367  0079                     	ds	2
   368  007B                     FilterCh12@j:	
   369                           
   370                           ; 1 bytes @ 0xB
   371  007B                     	ds	1
   372  007C                     FilterCh12@i:	
   373                           
   374                           ; 1 bytes @ 0xC
   375  007C                     	ds	1
   376  007D                     ??_vPutSampleDataIntoTable:	
   377                           
   378                           	psect	cstackBANK0
   379  003F                     __pcstackBANK0:	
   380                           ; 0 bytes @ 0xD
   381                           
   382  003F                     ?_vPutSampleDataIntoTable:	
   383  003F                     vPutSampleDataIntoTable@uiSampleData:	
   384                           ; 0 bytes @ 0x0
   385                           
   386                           
   387                           ; 2 bytes @ 0x0
   388  003F                     	ds	2
   389  0041                     vPutSampleDataIntoTable@channel:	
   390                           
   391                           ; 1 bytes @ 0x2
   392  0041                     	ds	1
   393  0042                     vPutSampleDataIntoTable@uiCalWidth:	
   394                           
   395                           ; 2 bytes @ 0x3
   396  0042                     	ds	2
   397  0044                     vPutSampleDataIntoTable@i:	
   398                           
   399                           ; 2 bytes @ 0x5
   400  0044                     	ds	2
   401  0046                     ??_ISR:	
   402                           
   403                           ; 0 bytes @ 0x7
   404  0046                     	ds	4
   405  004A                     ??_clearTwelveHoursTimer:	
   406  004A                     ??_clearThreeHoursTimer:	
   407                           ; 0 bytes @ 0xB
   408                           
   409  004A                     ??_clock_config:	
   410                           ; 0 bytes @ 0xB
   411                           
   412  004A                     ??_timer1_config:	
   413                           ; 0 bytes @ 0xB
   414                           
   415  004A                     ??_timer1_interrupt_config:	
   416                           ; 0 bytes @ 0xB
   417                           
   418  004A                     ?_adc_test_init:	
   419                           ; 0 bytes @ 0xB
   420                           
   421  004A                     ?_startTwentyMinTimer:	
   422                           ; 0 bytes @ 0xB
   423                           
   424  004A                     ??_adc_start:	
   425                           ; 0 bytes @ 0xB
   426                           
   427  004A                     ??_isPermitSampleTime:	
   428                           ; 0 bytes @ 0xB
   429                           
   430  004A                     ??_clrSampeTime:	
   431                           ; 0 bytes @ 0xB
   432                           
   433  004A                     ??_isFinishedTwentyMinTimer:	
   434                           ; 0 bytes @ 0xB
   435                           
   436  004A                     ??_clearTwentyMinTimer:	
   437                           ; 0 bytes @ 0xB
   438                           
   439  004A                     ?_startTwelveHourTimer:	
   440                           ; 0 bytes @ 0xB
   441                           
   442  004A                     ??_isFinishedTwelveHoursTimer:	
   443                           ; 0 bytes @ 0xB
   444                           
   445  004A                     ?_startThreeHoursTimer:	
   446                           ; 0 bytes @ 0xB
   447                           
   448  004A                     ??_isFinishedThreeHoursTimer:	
   449                           ; 0 bytes @ 0xB
   450                           
   451  004A                     ?_startOneHoursTimer:	
   452                           ; 0 bytes @ 0xB
   453                           
   454  004A                     ??_isFinishedOneHoursTimer:	
   455                           ; 0 bytes @ 0xB
   456                           
   457  004A                     ??_initPB3:	
   458                           ; 0 bytes @ 0xB
   459                           
   460  004A                     ??_setPB3:	
   461                           ; 0 bytes @ 0xB
   462                           
   463  004A                     ??_initPB4:	
   464                           ; 0 bytes @ 0xB
   465                           
   466  004A                     ??_setPB4:	
   467                           ; 0 bytes @ 0xB
   468                           
   469  004A                     ??_initPB5:	
   470                           ; 0 bytes @ 0xB
   471                           
   472  004A                     ??_setPB5:	
   473                           ; 0 bytes @ 0xB
   474                           
   475  004A                     ??_initPB2_AsHighResistence:	
   476                           ; 0 bytes @ 0xB
   477                           
   478  004A                     ?_pwm_start:	
   479                           ; 0 bytes @ 0xB
   480                           
   481  004A                     ??_selectAdChannel:	
   482                           ; 0 bytes @ 0xB
   483                           
   484  004A                     ??_reset:	
   485                           ; 0 bytes @ 0xB
   486                           
   487  004A                     ?_FilterCh13:	
   488                           ; 0 bytes @ 0xB
   489                           
   490  004A                     initPB3@bValue:	
   491                           ; 2 bytes @ 0xB
   492                           
   493  004A                     setPB3@bValue:	
   494                           ; 1 bytes @ 0xB
   495                           
   496  004A                     initPB4@bValue:	
   497                           ; 1 bytes @ 0xB
   498                           
   499  004A                     setPB4@bValue:	
   500                           ; 1 bytes @ 0xB
   501                           
   502  004A                     initPB5@bValue:	
   503                           ; 1 bytes @ 0xB
   504                           
   505  004A                     setPB5@bValue:	
   506                           ; 1 bytes @ 0xB
   507                           
   508  004A                     pwm_start@ucPulseFrequency:	
   509                           ; 1 bytes @ 0xB
   510                           
   511  004A                     adc_test_init@ref:	
   512                           ; 1 bytes @ 0xB
   513                           
   514  004A                     startTwelveHourTimer@uiSetTime:	
   515                           ; 1 bytes @ 0xB
   516                           
   517  004A                     startThreeHoursTimer@uiSetTime:	
   518                           ; 2 bytes @ 0xB
   519                           
   520  004A                     startOneHoursTimer@uiSetTime:	
   521                           ; 2 bytes @ 0xB
   522                           
   523  004A                     startTwentyMinTimer@uiSetValue:	
   524                           ; 2 bytes @ 0xB
   525                           
   526                           
   527                           ; 2 bytes @ 0xB
   528  004A                     	ds	1
   529  004B                     ??_adc_test_init:	
   530  004B                     ??_pwm_start:	
   531                           ; 0 bytes @ 0xC
   532                           
   533  004B                     ??_initPin:	
   534                           ; 0 bytes @ 0xC
   535                           
   536  004B                     ??_setPinInitVaule:	
   537                           ; 0 bytes @ 0xC
   538                           
   539  004B                     pwm_start@ucPulseWidth:	
   540                           ; 0 bytes @ 0xC
   541                           
   542                           
   543                           ; 1 bytes @ 0xC
   544  004B                     	ds	1
   545  004C                     ??_startTwentyMinTimer:	
   546  004C                     ??_startTwelveHourTimer:	
   547                           ; 0 bytes @ 0xD
   548                           
   549  004C                     ??_startThreeHoursTimer:	
   550                           ; 0 bytes @ 0xD
   551                           
   552  004C                     ??_startOneHoursTimer:	
   553                           ; 0 bytes @ 0xD
   554                           
   555  004C                     ??_FilterCh13:	
   556                           ; 0 bytes @ 0xD
   557                           
   558  004C                     adc_test_init@channel:	
   559                           ; 0 bytes @ 0xD
   560                           
   561                           
   562                           ; 1 bytes @ 0xD
   563  004C                     	ds	5
   564  0051                     FilterCh13@filter_temp:	
   565                           
   566                           ; 2 bytes @ 0x12
   567  0051                     	ds	2
   568  0053                     FilterCh13@filter_sum:	
   569                           
   570                           ; 2 bytes @ 0x14
   571  0053                     	ds	2
   572  0055                     FilterCh13@j:	
   573                           
   574                           ; 1 bytes @ 0x16
   575  0055                     	ds	1
   576  0056                     FilterCh13@i:	
   577                           
   578                           ; 1 bytes @ 0x17
   579  0056                     	ds	1
   580  0057                     ?_getAdOriginalCh13Value:	
   581                           
   582                           ; 2 bytes @ 0x18
   583  0057                     	ds	2
   584  0059                     ??_getAdOriginalCh13Value:	
   585  0059                     ??_main:	
   586                           ; 0 bytes @ 0x1A
   587                           
   588                           
   589                           ; 0 bytes @ 0x1A
   590  0059                     	ds	1
   591  005A                     main@ucChValue:	
   592                           
   593                           ; 2 bytes @ 0x1B
   594  005A                     	ds	2
   595  005C                     main@uiCh13Value:	
   596                           
   597                           ; 2 bytes @ 0x1D
   598  005C                     	ds	2
   599                           
   600                           	psect	maintext
   601  01BE                     __pmaintext:	
   602 ;;Data sizes: Strings 0, constant 0, data 2, bss 116, persistent 0 stack 0
   603 ;;Auto spaces:   Size  Autos    Used
   604 ;; COMMON          14     13      14
   605 ;; BANK0           80     31      64
   606 ;; BANK1           80      0      24
   607 ;; BANK3           96      0      60
   608 ;; BANK2           96      0       0
   609 ;;
   610 ;; Pointer list with targets:
   611 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   612 ;;
   613 ;; ?_getAdOriginalCh13Value	unsigned int  size(1) Largest target is 0
   614 ;;
   615 ;; ?_FilterCh12	unsigned int  size(1) Largest target is 0
   616 ;;
   617 ;; ?_FilterCh13	unsigned int  size(1) Largest target is 0
   618 ;;
   619 ;;
   620 ;; Critical Paths under _main in COMMON
   621 ;;
   622 ;;   None.
   623 ;;
   624 ;; Critical Paths under _ISR in COMMON
   625 ;;
   626 ;;   _vPutSampleDataIntoTable->_FilterCh12
   627 ;;   _switchSampleChannel->i1_adc_test_init
   628 ;;
   629 ;; Critical Paths under _main in BANK0
   630 ;;
   631 ;;   _main->_getAdOriginalCh13Value
   632 ;;   _getAdOriginalCh13Value->_FilterCh13
   633 ;;   _setPinInitVaule->_setPB3
   634 ;;   _setPinInitVaule->_setPB4
   635 ;;   _setPinInitVaule->_setPB5
   636 ;;   _initPin->_initPB3
   637 ;;   _initPin->_initPB4
   638 ;;   _initPin->_initPB5
   639 ;;
   640 ;; Critical Paths under _ISR in BANK0
   641 ;;
   642 ;;   _ISR->_vPutSampleDataIntoTable
   643 ;;
   644 ;; Critical Paths under _main in BANK1
   645 ;;
   646 ;;   None.
   647 ;;
   648 ;; Critical Paths under _ISR in BANK1
   649 ;;
   650 ;;   None.
   651 ;;
   652 ;; Critical Paths under _main in BANK3
   653 ;;
   654 ;;   None.
   655 ;;
   656 ;; Critical Paths under _ISR in BANK3
   657 ;;
   658 ;;   None.
   659 ;;
   660 ;; Critical Paths under _main in BANK2
   661 ;;
   662 ;;   None.
   663 ;;
   664 ;; Critical Paths under _ISR in BANK2
   665 ;;
   666 ;;   None.
   667 ;;
   668 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   669 ;;
   670 ;;
   671 ;;Call Graph Tables:
   672 ;;
   673 ;; ---------------------------------------------------------------------------------
   674 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   675 ;; ---------------------------------------------------------------------------------
   676 ;; (0) _main                                                 5     5      0     806
   677 ;;                                             26 BANK0      5     5      0
   678 ;;                            _initPin
   679 ;;                    _setPinInitVaule
   680 ;;                    _selectAdChannel
   681 ;;                       _clock_config
   682 ;;                      _timer1_config
   683 ;;            _timer1_interrupt_config
   684 ;;                      _adc_test_init
   685 ;;                _startTwentyMinTimer
   686 ;;                          _pwm_start
   687 ;;                          _adc_start
   688 ;;                 _isPermitSampleTime
   689 ;;                       _clrSampeTime
   690 ;;           _isFinishedTwentyMinTimer
   691 ;;             _getAdOriginalCh13Value
   692 ;;                             _setPB3
   693 ;;                             _setPB4
   694 ;;                             _setPB5
   695 ;;                _clearTwentyMinTimer
   696 ;;               _startTwelveHourTimer
   697 ;;         _isFinishedTwelveHoursTimer
   698 ;;              _clearTwelveHoursTimer
   699 ;;               _startThreeHoursTimer
   700 ;;          _isFinishedThreeHoursTimer
   701 ;;               _clearThreeHoursTimer
   702 ;;                 _startOneHoursTimer
   703 ;;            _isFinishedOneHoursTimer
   704 ;;                              _reset
   705 ;; ---------------------------------------------------------------------------------
   706 ;; (1) _getAdOriginalCh13Value                               2     0      2     342
   707 ;;                                             24 BANK0      2     0      2
   708 ;;                         _FilterCh13
   709 ;; ---------------------------------------------------------------------------------
   710 ;; (1) _setPinInitVaule                                      0     0      0      66
   711 ;;                             _setPB3
   712 ;;                             _setPB4
   713 ;;                             _setPB5
   714 ;; ---------------------------------------------------------------------------------
   715 ;; (1) _initPin                                              0     0      0      66
   716 ;;           _initPB2_AsHighResistence
   717 ;;                            _initPB3
   718 ;;                            _initPB4
   719 ;;                            _initPB5
   720 ;; ---------------------------------------------------------------------------------
   721 ;; (2) _FilterCh13                                          13    11      2     342
   722 ;;                                             11 BANK0     13    11      2
   723 ;; ---------------------------------------------------------------------------------
   724 ;; (1) _isFinishedOneHoursTimer                              0     0      0       0
   725 ;; ---------------------------------------------------------------------------------
   726 ;; (1) _startOneHoursTimer                                   2     0      2      22
   727 ;;                                             11 BANK0      2     0      2
   728 ;; ---------------------------------------------------------------------------------
   729 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   730 ;; ---------------------------------------------------------------------------------
   731 ;; (1) _startThreeHoursTimer                                 2     0      2      22
   732 ;;                                             11 BANK0      2     0      2
   733 ;; ---------------------------------------------------------------------------------
   734 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   735 ;; ---------------------------------------------------------------------------------
   736 ;; (1) _startTwelveHourTimer                                 2     0      2      22
   737 ;;                                             11 BANK0      2     0      2
   738 ;; ---------------------------------------------------------------------------------
   739 ;; (1) _clearTwentyMinTimer                                  0     0      0       0
   740 ;; ---------------------------------------------------------------------------------
   741 ;; (1) _isFinishedTwentyMinTimer                             0     0      0       0
   742 ;; ---------------------------------------------------------------------------------
   743 ;; (1) _clrSampeTime                                         0     0      0       0
   744 ;; ---------------------------------------------------------------------------------
   745 ;; (1) _isPermitSampleTime                                   0     0      0       0
   746 ;; ---------------------------------------------------------------------------------
   747 ;; (1) _adc_start                                            0     0      0       0
   748 ;; ---------------------------------------------------------------------------------
   749 ;; (1) _startTwentyMinTimer                                  2     0      2      22
   750 ;;                                             11 BANK0      2     0      2
   751 ;; ---------------------------------------------------------------------------------
   752 ;; (1) _adc_test_init                                        3     2      1      44
   753 ;;                                             11 BANK0      3     2      1
   754 ;; ---------------------------------------------------------------------------------
   755 ;; (1) _timer1_interrupt_config                              0     0      0       0
   756 ;; ---------------------------------------------------------------------------------
   757 ;; (1) _timer1_config                                        0     0      0       0
   758 ;; ---------------------------------------------------------------------------------
   759 ;; (1) _clock_config                                         0     0      0       0
   760 ;; ---------------------------------------------------------------------------------
   761 ;; (1) _reset                                                0     0      0       0
   762 ;; ---------------------------------------------------------------------------------
   763 ;; (1) _selectAdChannel                                      0     0      0       0
   764 ;; ---------------------------------------------------------------------------------
   765 ;; (1) _pwm_start                                            2     1      1      44
   766 ;;                                             11 BANK0      2     1      1
   767 ;; ---------------------------------------------------------------------------------
   768 ;; (2) _initPB2_AsHighResistence                             0     0      0       0
   769 ;; ---------------------------------------------------------------------------------
   770 ;; (1) _setPB5                                               1     1      0      22
   771 ;;                                             11 BANK0      1     1      0
   772 ;; ---------------------------------------------------------------------------------
   773 ;; (2) _initPB5                                              1     1      0      22
   774 ;;                                             11 BANK0      1     1      0
   775 ;; ---------------------------------------------------------------------------------
   776 ;; (1) _setPB4                                               1     1      0      22
   777 ;;                                             11 BANK0      1     1      0
   778 ;; ---------------------------------------------------------------------------------
   779 ;; (2) _initPB4                                              1     1      0      22
   780 ;;                                             11 BANK0      1     1      0
   781 ;; ---------------------------------------------------------------------------------
   782 ;; (1) _setPB3                                               1     1      0      22
   783 ;;                                             11 BANK0      1     1      0
   784 ;; ---------------------------------------------------------------------------------
   785 ;; (2) _initPB3                                              1     1      0      22
   786 ;;                                             11 BANK0      1     1      0
   787 ;; ---------------------------------------------------------------------------------
   788 ;; (1) _clearThreeHoursTimer                                 0     0      0       0
   789 ;; ---------------------------------------------------------------------------------
   790 ;; (1) _clearTwelveHoursTimer                                0     0      0       0
   791 ;; ---------------------------------------------------------------------------------
   792 ;; Estimated maximum stack depth 2
   793 ;; ---------------------------------------------------------------------------------
   794 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   795 ;; ---------------------------------------------------------------------------------
   796 ;; (3) _ISR                                                  4     4      0     835
   797 ;;                                              7 BANK0      4     4      0
   798 ;;                  _setAD_ConvertFlag
   799 ;;                            _adc_get
   800 ;;            _vPutSampleDataIntoTable
   801 ;; ---------------------------------------------------------------------------------
   802 ;; (4) _vPutSampleDataIntoTable                              7     4      3     800
   803 ;;                                              0 BANK0      7     4      3
   804 ;;               _disable_AD_interrupt
   805 ;;                         _FilterCh12
   806 ;;                       _setPWM_Width
   807 ;;                _switchSampleChannel
   808 ;;                _enable_AD_interrupt
   809 ;;                            _adc_get (ARG)
   810 ;; ---------------------------------------------------------------------------------
   811 ;; (5) _switchSampleChannel                                  1     1      0     168
   812 ;;                                              3 COMMON     1     1      0
   813 ;;                    i1_adc_test_init
   814 ;; ---------------------------------------------------------------------------------
   815 ;; (6) i1_adc_test_init                                      3     2      1     146
   816 ;;                                              0 COMMON     3     2      1
   817 ;; ---------------------------------------------------------------------------------
   818 ;; (4) _adc_get                                              4     2      2      24
   819 ;;                                              0 COMMON     4     2      2
   820 ;; ---------------------------------------------------------------------------------
   821 ;; (4) _setAD_ConvertFlag                                    1     1      0      11
   822 ;;                                              0 COMMON     1     1      0
   823 ;; ---------------------------------------------------------------------------------
   824 ;; (5) _enable_AD_interrupt                                  0     0      0       0
   825 ;; ---------------------------------------------------------------------------------
   826 ;; (5) _disable_AD_interrupt                                 0     0      0       0
   827 ;; ---------------------------------------------------------------------------------
   828 ;; (5) _FilterCh12                                          13    11      2     342
   829 ;;                                              0 COMMON    13    11      2
   830 ;; ---------------------------------------------------------------------------------
   831 ;; (5) _setPWM_Width                                         1     1      0      66
   832 ;;                                              0 COMMON     1     1      0
   833 ;; ---------------------------------------------------------------------------------
   834 ;; Estimated maximum stack depth 6
   835 ;; ---------------------------------------------------------------------------------
   836 ;; Call Graph Graphs:
   837 ;; _main (ROOT)
   838 ;;   _initPin
   839 ;;     _initPB2_AsHighResistence
   840 ;;     _initPB3
   841 ;;     _initPB4
   842 ;;     _initPB5
   843 ;;   _setPinInitVaule
   844 ;;     _setPB3
   845 ;;     _setPB4
   846 ;;     _setPB5
   847 ;;   _selectAdChannel
   848 ;;   _clock_config
   849 ;;   _timer1_config
   850 ;;   _timer1_interrupt_config
   851 ;;   _adc_test_init
   852 ;;   _startTwentyMinTimer
   853 ;;   _pwm_start
   854 ;;   _adc_start
   855 ;;   _isPermitSampleTime
   856 ;;   _clrSampeTime
   857 ;;   _isFinishedTwentyMinTimer
   858 ;;   _getAdOriginalCh13Value
   859 ;;     _FilterCh13
   860 ;;   _setPB3
   861 ;;   _setPB4
   862 ;;   _setPB5
   863 ;;   _clearTwentyMinTimer
   864 ;;   _startTwelveHourTimer
   865 ;;   _isFinishedTwelveHoursTimer
   866 ;;   _clearTwelveHoursTimer
   867 ;;   _startThreeHoursTimer
   868 ;;   _isFinishedThreeHoursTimer
   869 ;;   _clearThreeHoursTimer
   870 ;;   _startOneHoursTimer
   871 ;;   _isFinishedOneHoursTimer
   872 ;;   _reset
   873 ;;
   874 ;; _ISR (ROOT)
   875 ;;   _setAD_ConvertFlag
   876 ;;   _adc_get
   877 ;;   _vPutSampleDataIntoTable
   878 ;;     _disable_AD_interrupt
   879 ;;     _FilterCh12
   880 ;;     _setPWM_Width
   881 ;;     _switchSampleChannel
   882 ;;       i1_adc_test_init
   883 ;;     _enable_AD_interrupt
   884 ;;     _adc_get (ARG)
   885 ;;
   886 ;; Address spaces:
   887 ;;Name               Size   Autos  Total    Cost      Usage
   888 ;;BANK3               60      0      3C      10       62.5%
   889 ;;BITBANK3            60      0       0       9        0.0%
   890 ;;SFR3                 0      0       0       4        0.0%
   891 ;;BITSFR3              0      0       0       4        0.0%
   892 ;;BANK2               60      0       0      12        0.0%
   893 ;;BITBANK2            60      0       0      11        0.0%
   894 ;;SFR2                 0      0       0       5        0.0%
   895 ;;BITSFR2              0      0       0       5        0.0%
   896 ;;SFR1                 0      0       0       2        0.0%
   897 ;;BITSFR1              0      0       0       2        0.0%
   898 ;;BANK1               50      0      18       8       30.0%
   899 ;;BITBANK1            50      0       0       7        0.0%
   900 ;;CODE                 0      0       0       0        0.0%
   901 ;;DATA                 0      0      AC       6        0.0%
   902 ;;ABS                  0      0      A2       3        0.0%
   903 ;;NULL                 0      0       0       0        0.0%
   904 ;;STACK                0      0       A       2        0.0%
   905 ;;BANK0               50     1F      40       5       80.0%
   906 ;;BITBANK0            50      0       0       4        0.0%
   907 ;;SFR0                 0      0       0       1        0.0%
   908 ;;BITSFR0              0      0       0       1        0.0%
   909 ;;COMMON               E      D       E       1      100.0%
   910 ;;BITCOMMON            E      0       0       0        0.0%
   911                           
   912                           
   913 ;; *************** function _main *****************
   914 ;; Defined at:
   915 ;;		line 593 in file "D:\develop\190625\AK7030-OTP\main.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;		None
   918 ;; Auto vars:     Size  Location     Type
   919 ;;  ucChValue       2   27[BANK0 ] unsigned int 
   920 ;;  uiCh13Value     2   29[BANK0 ] unsigned int 
   921 ;; Return value:  Size  Location     Type
   922 ;;                  2  728[COMMON] int 
   923 ;; Registers used:
   924 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   925 ;; Tracked objects:
   926 ;;		On entry : 17F/0
   927 ;;		On exit  : 60/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   930 ;;      Params:         0       0       0       0       0
   931 ;;      Locals:         0       4       0       0       0
   932 ;;      Temps:          0       1       0       0       0
   933 ;;      Totals:         0       5       0       0       0
   934 ;;Total ram usage:        5 bytes
   935 ;; Hardware stack levels required when called:    6
   936 ;; This function calls:
   937 ;;		_initPin
   938 ;;		_setPinInitVaule
   939 ;;		_selectAdChannel
   940 ;;		_clock_config
   941 ;;		_timer1_config
   942 ;;		_timer1_interrupt_config
   943 ;;		_adc_test_init
   944 ;;		_startTwentyMinTimer
   945 ;;		_pwm_start
   946 ;;		_adc_start
   947 ;;		_isPermitSampleTime
   948 ;;		_clrSampeTime
   949 ;;		_isFinishedTwentyMinTimer
   950 ;;		_getAdOriginalCh13Value
   951 ;;		_setPB3
   952 ;;		_setPB4
   953 ;;		_setPB5
   954 ;;		_clearTwentyMinTimer
   955 ;;		_startTwelveHourTimer
   956 ;;		_isFinishedTwelveHoursTimer
   957 ;;		_clearTwelveHoursTimer
   958 ;;		_startThreeHoursTimer
   959 ;;		_isFinishedThreeHoursTimer
   960 ;;		_clearThreeHoursTimer
   961 ;;		_startOneHoursTimer
   962 ;;		_isFinishedOneHoursTimer
   963 ;;		_reset
   964 ;; This function is called by:
   965 ;;		Startup code after reset
   966 ;; This function uses a non-reentrant model
   967 ;;
   968  01BE                     _main:	
   969                           
   970                           ;main.c: 594: enum systemStep {
   971                           ;main.c: 595: INIT_STEP = 0,
   972                           ;main.c: 596: START_UP_PWM_STEP,
   973                           ;main.c: 597: CHECK_10_HOUR_TIMER_STEP,
   974                           ;main.c: 598: STARTUP_3_HOUR_TIMER_STEP,
   975                           ;main.c: 599: CHECK_3_HOUR_TIMER_STEP,
   976                           ;main.c: 600: STARTUP_1_HOUR_TIMER_STEP,
   977                           ;main.c: 601: CHECK_1_HOUR_TIMER_STEP,
   978                           ;main.c: 602: READY_FOR_RESET_STEP = 99,
   979                           ;main.c: 603: DELAY_ONE_SECOND_FOR_PWM,
   980                           ;main.c: 604: MEET_RESET_CONDITION_STEP,
   981                           ;main.c: 605: RESET_STEP,
   982                           ;main.c: 606: };
   983                           ;main.c: 608: static enum systemStep ucStep = INIT_STEP;
   984                           
   985                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   986  01BE  118A  23F0  118A   	fcall	_initPin
   987                           
   988                           ;main.c: 622: setPinInitVaule();
   989  01C1  118A  2421  118A   	fcall	_setPinInitVaule
   990                           
   991                           ;main.c: 623: selectAdChannel();
   992  01C4  118A  2510  118A   	fcall	_selectAdChannel
   993                           
   994                           ;main.c: 625: clock_config();
   995  01C7  118A  24F9  118A   	fcall	_clock_config
   996                           
   997                           ;main.c: 626: timer1_config();
   998  01CA  118A  24E7  118A   	fcall	_timer1_config
   999                           
  1000                           ;main.c: 627: timer1_interrupt_config();
  1001  01CD  118A  251C  118A   	fcall	_timer1_interrupt_config
  1002                           
  1003                           ;main.c: 629: adc_test_init(12,3);
  1004  01D0  3003               	movlw	3
  1005  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  1006  01D2  00CA               	movwf	?_adc_test_init
  1007  01D3  300C               	movlw	12
  1008  01D4  118A  245D  118A   	fcall	_adc_test_init
  1009                           
  1010                           ;main.c: 641: startTwentyMinTimer( 60 );
  1011  01D7  303C               	movlw	60
  1012  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  1013  01D9  00CA               	movwf	?_startTwentyMinTimer
  1014  01DA  01CB               	clrf	?_startTwentyMinTimer+1
  1015  01DB  118A  24B1  118A   	fcall	_startTwentyMinTimer
  1016                           
  1017                           ;main.c: 642: pwm_start(75,249);
  1018  01DE  30F9               	movlw	249
  1019  01DF  00CA               	movwf	?_pwm_start
  1020  01E0  304B               	movlw	75
  1021  01E1  118A  2472  118A   	fcall	_pwm_start
  1022                           
  1023                           ;main.c: 643: _delay(1000);
  1024  01E4  30F9               	movlw	249
  1025  01E5  00D9               	movwf	??_main
  1026  01E6                     u1537:	
  1027  01E6  0064               	clrwdt
  1028  01E7  0BD9               	decfsz	??_main,f
  1029  01E8  29E6               	goto	u1537
  1030  01E9  29EA               	nop2	;nop
  1031  01EA  0064               	clrwdt
  1032                           
  1033                           ;main.c: 644: adc_start();
  1034  01EB  118A  250C  118A   	fcall	_adc_start
  1035  01EE                     l3658:	
  1036  01EE  0064               	clrwdt	;#
  1037                           
  1038                           ;main.c: 655: if( isPermitSampleTime() )
  1039  01EF  118A  2501  118A   	fcall	_isPermitSampleTime
  1040  01F2  3A00               	xorlw	0
  1041  01F3  1903               	skipnz
  1042  01F4  29EE               	goto	l3658
  1043                           
  1044                           ;main.c: 656: {
  1045                           ;main.c: 659: clrSampeTime();
  1046  01F5  118A  251F  118A   	fcall	_clrSampeTime
  1047                           
  1048                           ;main.c: 668: switch(ucStep)
  1049  01F8  2B3B               	goto	l3816
  1050  01F9                     l3664:	
  1051                           
  1052                           ;main.c: 672: {
  1053                           ;main.c: 677: static unsigned char ucTimerP3s = 0;
  1054                           ;main.c: 679: if( isFinishedTwentyMinTimer() )
  1055  01F9  118A  24DD  118A   	fcall	_isFinishedTwentyMinTimer
  1056  01FC  3A00               	xorlw	0
  1057  01FD  1903               	skipnz
  1058  01FE  2A03               	goto	l3670
  1059                           
  1060                           ;main.c: 680: {
  1061                           ;main.c: 681: ucStep = READY_FOR_RESET_STEP;
  1062  01FF  3063               	movlw	99
  1063  0200  00BA               	movwf	main@ucStep
  1064                           
  1065                           ;main.c: 682: ucTimerP3s = 0;
  1066  0201  01BB               	clrf	main@ucTimerP3s
  1067                           
  1068                           ;main.c: 683: }
  1069  0202  29EE               	goto	l3658
  1070  0203                     l3670:	
  1071                           
  1072                           ;main.c: 684: else
  1073                           ;main.c: 685: {
  1074                           ;main.c: 686: if( getAdOriginalCh13Value() > 90 )
  1075  0203  118A  2360  118A   	fcall	_getAdOriginalCh13Value
  1076  0206  3000               	movlw	0
  1077  0207  0258               	subwf	?_getAdOriginalCh13Value+1,w
  1078  0208  305B               	movlw	91
  1079  0209  1903               	skipnz
  1080  020A  0257               	subwf	?_getAdOriginalCh13Value,w
  1081  020B  1C03               	skipc
  1082  020C  2A0F               	goto	l3674
  1083                           
  1084                           ;main.c: 687: {
  1085                           ;main.c: 688: ucTimerP3s++;
  1086  020D  0ABB               	incf	main@ucTimerP3s,f
  1087                           
  1088                           ;main.c: 689: }
  1089  020E  2A10               	goto	l3676
  1090  020F                     l3674:	
  1091                           
  1092                           ;main.c: 690: else
  1093                           ;main.c: 691: ucTimerP3s = 0;
  1094  020F  01BB               	clrf	main@ucTimerP3s
  1095  0210                     l3676:	
  1096                           
  1097                           ;main.c: 693: if( ucTimerP3s >= 3)
  1098  0210  3003               	movlw	3
  1099  0211  023B               	subwf	main@ucTimerP3s,w
  1100  0212  1C03               	skipc
  1101  0213  29EE               	goto	l3658
  1102                           
  1103                           ;main.c: 694: {
  1104                           ;main.c: 695: ucTimerP3s = 0;
  1105  0214  01BB               	clrf	main@ucTimerP3s
  1106                           
  1107                           ;main.c: 696: ucStep = START_UP_PWM_STEP;
  1108  0215  01BA               	clrf	main@ucStep
  1109  0216  0ABA               	incf	main@ucStep,f
  1110  0217                     l738:	
  1111                           
  1112                           ;main.c: 697: }
  1113                           ;main.c: 699: }
  1114                           ;main.c: 703: break;
  1115  0217  29EE               	goto	l3658
  1116  0218                     l3682:	
  1117                           
  1118                           ;main.c: 707: {
  1119                           ;main.c: 717: setPB3(0);
  1120  0218  3000               	movlw	0
  1121  0219  118A  2429  118A   	fcall	_setPB3
  1122                           
  1123                           ;main.c: 718: setPB4(1);
  1124  021C  3001               	movlw	1
  1125  021D  118A  2432  118A   	fcall	_setPB4
  1126                           
  1127                           ;main.c: 719: setPB5(0);
  1128  0220  3000               	movlw	0
  1129  0221  118A  243A  118A   	fcall	_setPB5
  1130                           
  1131                           ;main.c: 720: clearTwentyMinTimer();
  1132  0224  118A  2508  118A   	fcall	_clearTwentyMinTimer
  1133                           
  1134                           ;main.c: 721: startTwelveHourTimer( 240);
  1135  0227  30F0               	movlw	240
  1136  0228  00CA               	movwf	?_startTwelveHourTimer
  1137  0229  01CB               	clrf	?_startTwelveHourTimer+1
  1138  022A  118A  24A3  118A   	fcall	_startTwelveHourTimer
  1139                           
  1140                           ;main.c: 722: ucStep = CHECK_10_HOUR_TIMER_STEP;
  1141  022D  3002               	movlw	2
  1142  022E  2B37               	goto	L8
  1143  022F                     l3690:	
  1144                           ;main.c: 723: break;
  1145                           
  1146                           
  1147                           ;main.c: 727: {
  1148                           ;main.c: 732: static unsigned char ucTimerP5s = 0;
  1149                           ;main.c: 734: if( isFinishedTwelveHoursTimer () )
  1150  022F  118A  24D3  118A   	fcall	_isFinishedTwelveHoursTimer
  1151  0232  3A00               	xorlw	0
  1152  0233  1903               	skipnz
  1153  0234  2A37               	goto	l3694
  1154  0235                     l3692:	
  1155                           
  1156                           ;main.c: 735: ucStep = READY_FOR_RESET_STEP;
  1157  0235  3063               	movlw	99
  1158  0236  2B37               	goto	L8
  1159  0237                     l3694:	
  1160                           
  1161                           ;main.c: 736: else
  1162                           ;main.c: 737: {
  1163                           ;main.c: 738: if( getAdOriginalCh13Value() < 200 )
  1164  0237  118A  2360  118A   	fcall	_getAdOriginalCh13Value
  1165  023A  3000               	movlw	0
  1166  023B  0258               	subwf	?_getAdOriginalCh13Value+1,w
  1167  023C  30C8               	movlw	200
  1168  023D  1903               	skipnz
  1169  023E  0257               	subwf	?_getAdOriginalCh13Value,w
  1170  023F  1803               	skipnc
  1171  0240  2A43               	goto	l3698
  1172                           
  1173                           ;main.c: 739: ucTimerP5s++;
  1174  0241  0ABC               	incf	main@ucTimerP5s,f
  1175  0242  2A44               	goto	l3700
  1176  0243                     l3698:	
  1177                           
  1178                           ;main.c: 740: else
  1179                           ;main.c: 741: ucTimerP5s = 0;
  1180  0243  01BC               	clrf	main@ucTimerP5s
  1181  0244                     l3700:	
  1182                           
  1183                           ;main.c: 743: if( ucTimerP5s > 5)
  1184  0244  3006               	movlw	6
  1185  0245  023C               	subwf	main@ucTimerP5s,w
  1186  0246  1C03               	skipc
  1187  0247  29EE               	goto	l3658
  1188  0248  3003               	movlw	3
  1189                           
  1190                           ;main.c: 744: {
  1191                           ;main.c: 745: ucTimerP5s = 0;
  1192  0249  01BC               	clrf	main@ucTimerP5s
  1193                           
  1194                           ;main.c: 746: ucStep = STARTUP_3_HOUR_TIMER_STEP;
  1195  024A  2B37               	goto	L8
  1196  024B                     l3706:	
  1197                           
  1198                           ;main.c: 754: {
  1199                           ;main.c: 755: clearTwelveHoursTimer();
  1200  024B  118A  2518  118A   	fcall	_clearTwelveHoursTimer
  1201                           
  1202                           ;main.c: 756: startThreeHoursTimer(180);
  1203  024E  30B4               	movlw	180
  1204  024F  00CA               	movwf	?_startThreeHoursTimer
  1205  0250  01CB               	clrf	?_startThreeHoursTimer+1
  1206  0251  118A  2495  118A   	fcall	_startThreeHoursTimer
  1207                           
  1208                           ;main.c: 757: ucStep = CHECK_3_HOUR_TIMER_STEP;
  1209  0254  3004               	movlw	4
  1210  0255  2B37               	goto	L8
  1211  0256                     l3710:	
  1212                           ;main.c: 758: break;
  1213                           
  1214                           
  1215                           ;main.c: 762: {
  1216                           ;main.c: 763: static unsigned char ucTimerP5s = 0;
  1217                           ;main.c: 765: if( isFinishedThreeHoursTimer() )
  1218  0256  118A  24C9  118A   	fcall	_isFinishedThreeHoursTimer
  1219  0259  3A00               	xorlw	0
  1220  025A  1D03               	btfss	3,2
  1221  025B  2A35               	goto	l3692
  1222                           
  1223                           ;main.c: 767: else
  1224                           ;main.c: 768: {
  1225                           ;main.c: 769: if( getAdOriginalCh13Value() < 85 )
  1226  025C  118A  2360  118A   	fcall	_getAdOriginalCh13Value
  1227  025F  3000               	movlw	0
  1228  0260  0258               	subwf	?_getAdOriginalCh13Value+1,w
  1229  0261  3055               	movlw	85
  1230  0262  1903               	skipnz
  1231  0263  0257               	subwf	?_getAdOriginalCh13Value,w
  1232  0264  1803               	skipnc
  1233  0265  2A68               	goto	l3718
  1234                           
  1235                           ;main.c: 770: ucTimerP5s++;
  1236  0266  0AB8               	incf	main@cTimerP5s_777,f
  1237  0267  2A69               	goto	l3720
  1238  0268                     l3718:	
  1239                           
  1240                           ;main.c: 771: else
  1241                           ;main.c: 772: ucTimerP5s = 0;
  1242  0268  01B8               	clrf	main@cTimerP5s_777
  1243  0269                     l3720:	
  1244                           
  1245                           ;main.c: 774: if( ucTimerP5s > 5)
  1246  0269  3006               	movlw	6
  1247  026A  0238               	subwf	main@cTimerP5s_777,w
  1248  026B  1C03               	skipc
  1249  026C  29EE               	goto	l3658
  1250  026D  3005               	movlw	5
  1251                           
  1252                           ;main.c: 775: {
  1253                           ;main.c: 776: ucTimerP5s = 0;
  1254  026E  01B8               	clrf	main@cTimerP5s_777
  1255                           
  1256                           ;main.c: 777: ucStep = STARTUP_1_HOUR_TIMER_STEP;
  1257  026F  2B37               	goto	L8
  1258  0270                     l3726:	
  1259                           
  1260                           ;main.c: 784: {
  1261                           ;main.c: 785: clearThreeHoursTimer();
  1262  0270  118A  2514  118A   	fcall	_clearThreeHoursTimer
  1263                           
  1264                           ;main.c: 786: startOneHoursTimer( 120 );
  1265  0273  3078               	movlw	120
  1266  0274  00CA               	movwf	?_startOneHoursTimer
  1267  0275  01CB               	clrf	?_startOneHoursTimer+1
  1268  0276  118A  2487  118A   	fcall	_startOneHoursTimer
  1269                           
  1270                           ;main.c: 787: setPB3(1);
  1271  0279  3001               	movlw	1
  1272  027A  118A  2429  118A   	fcall	_setPB3
  1273                           
  1274                           ;main.c: 788: setPB4(0);
  1275  027D  3000               	movlw	0
  1276  027E  118A  2432  118A   	fcall	_setPB4
  1277                           
  1278                           ;main.c: 789: setPB5(1);
  1279  0281  3001               	movlw	1
  1280  0282  118A  243A  118A   	fcall	_setPB5
  1281                           
  1282                           ;main.c: 790: ucStep = CHECK_1_HOUR_TIMER_STEP;
  1283  0285  3006               	movlw	6
  1284  0286  2B37               	goto	L8
  1285  0287                     l3738:	
  1286                           ;main.c: 791: break;
  1287                           
  1288                           
  1289                           ;main.c: 795: {
  1290                           ;main.c: 800: static unsigned int uiTimerOneP5s = 0;
  1291                           ;main.c: 801: static unsigned int uiTimerTwoP5s = 0;
  1292                           ;main.c: 802: static unsigned int uiTimerThreeP5s = 0;
  1293                           ;main.c: 804: unsigned int uiCh13Value = getAdOriginalCh13Value();
  1294  0287  118A  2360  118A   	fcall	_getAdOriginalCh13Value
  1295  028A  0858               	movf	?_getAdOriginalCh13Value+1,w
  1296  028B  00DD               	movwf	main@uiCh13Value+1
  1297  028C  0857               	movf	?_getAdOriginalCh13Value,w
  1298  028D  00DC               	movwf	main@uiCh13Value
  1299                           
  1300                           ;main.c: 807: if( isFinishedOneHoursTimer() )
  1301  028E  118A  24BF  118A   	fcall	_isFinishedOneHoursTimer
  1302  0291  3A00               	xorlw	0
  1303  0292  1D03               	btfss	3,2
  1304  0293  2A35               	goto	l3692
  1305                           
  1306                           ;main.c: 809: else
  1307                           ;main.c: 810: {
  1308                           ;main.c: 811: if( uiCh13Value > 100 )
  1309  0294  3000               	movlw	0
  1310  0295  025D               	subwf	main@uiCh13Value+1,w
  1311  0296  3065               	movlw	101
  1312  0297  1903               	skipnz
  1313  0298  025C               	subwf	main@uiCh13Value,w
  1314  0299  1C03               	skipc
  1315  029A  2AAA               	goto	l3754
  1316                           
  1317                           ;main.c: 812: {
  1318                           ;main.c: 813: if( uiTimerOneP5s <= 5 )
  1319  029B  3000               	movlw	0
  1320  029C  022D               	subwf	main@uiTimerOneP5s+1,w
  1321  029D  3006               	movlw	6
  1322  029E  1903               	skipnz
  1323  029F  022C               	subwf	main@uiTimerOneP5s,w
  1324  02A0  1803               	skipnc
  1325  02A1  2AA5               	goto	l3750
  1326                           
  1327                           ;main.c: 814: uiTimerOneP5s++;
  1328  02A2  0AAC               	incf	main@uiTimerOneP5s,f
  1329  02A3  1903               	skipnz
  1330  02A4  0AAD               	incf	main@uiTimerOneP5s+1,f
  1331  02A5                     l3750:	
  1332                           
  1333                           ;main.c: 815: uiTimerTwoP5s = 0;
  1334  02A5  01B0               	clrf	main@uiTimerTwoP5s
  1335  02A6  01B1               	clrf	main@uiTimerTwoP5s+1
  1336                           
  1337                           ;main.c: 816: uiTimerThreeP5s = 0;
  1338  02A7  01AE               	clrf	main@uiTimerThreeP5s
  1339  02A8  01AF               	clrf	main@uiTimerThreeP5s+1
  1340                           
  1341                           ;main.c: 817: }
  1342  02A9  2AAC               	goto	l3756
  1343  02AA                     l3754:	
  1344                           
  1345                           ;main.c: 818: else
  1346                           ;main.c: 819: {
  1347                           ;main.c: 820: uiTimerOneP5s = 0;
  1348  02AA  01AC               	clrf	main@uiTimerOneP5s
  1349  02AB  01AD               	clrf	main@uiTimerOneP5s+1
  1350  02AC                     l3756:	
  1351                           
  1352                           ;main.c: 821: }
  1353                           ;main.c: 824: if(uiTimerOneP5s > 5)
  1354  02AC  3000               	movlw	0
  1355  02AD  022D               	subwf	main@uiTimerOneP5s+1,w
  1356  02AE  3006               	movlw	6
  1357  02AF  1903               	skipnz
  1358  02B0  022C               	subwf	main@uiTimerOneP5s,w
  1359                           
  1360                           ;main.c: 825: {
  1361                           ;main.c: 826: setPB3(0);
  1362  02B1  3000               	movlw	0
  1363  02B2  1C03               	skipc
  1364  02B3  2AC4               	goto	L9
  1365  02B4  118A  2429  118A   	fcall	_setPB3
  1366                           
  1367                           ;main.c: 827: setPB4(1);
  1368  02B7  3001               	movlw	1
  1369  02B8  118A  2432  118A   	fcall	_setPB4
  1370                           
  1371                           ;main.c: 828: setPB5(0);
  1372  02BB  3000               	movlw	0
  1373  02BC  118A  243A  118A   	fcall	_setPB5
  1374                           
  1375                           ;main.c: 830: uiTimerOneP5s = 0;
  1376  02BF  01AC               	clrf	main@uiTimerOneP5s
  1377  02C0  01AD               	clrf	main@uiTimerOneP5s+1
  1378                           
  1379                           ;main.c: 831: uiTimerTwoP5s = 0;
  1380  02C1  01B0               	clrf	main@uiTimerTwoP5s
  1381  02C2  01B1               	clrf	main@uiTimerTwoP5s+1
  1382                           
  1383                           ;main.c: 832: }
  1384  02C3  29EE               	goto	l3658
  1385  02C4                     L9:	
  1386                           ;main.c: 833: else
  1387                           ;main.c: 834: {
  1388                           ;main.c: 835: if( uiCh13Value < 90 )
  1389                           
  1390  02C4  025D               	subwf	main@uiCh13Value+1,w
  1391  02C5  305A               	movlw	90
  1392  02C6  1903               	skipnz
  1393  02C7  025C               	subwf	main@uiCh13Value,w
  1394  02C8  1803               	skipnc
  1395  02C9  2AD5               	goto	l3770
  1396                           
  1397                           ;main.c: 836: {
  1398                           ;main.c: 837: if( uiTimerTwoP5s <= 5)
  1399  02CA  3000               	movlw	0
  1400  02CB  0231               	subwf	main@uiTimerTwoP5s+1,w
  1401  02CC  3006               	movlw	6
  1402  02CD  1903               	skipnz
  1403  02CE  0230               	subwf	main@uiTimerTwoP5s,w
  1404  02CF  1803               	skipnc
  1405  02D0  2AD9               	goto	l3772
  1406                           
  1407                           ;main.c: 838: uiTimerTwoP5s++;
  1408  02D1  0AB0               	incf	main@uiTimerTwoP5s,f
  1409  02D2  1903               	skipnz
  1410  02D3  0AB1               	incf	main@uiTimerTwoP5s+1,f
  1411  02D4  2AD9               	goto	l3772
  1412  02D5                     l3770:	
  1413                           
  1414                           ;main.c: 840: else
  1415                           ;main.c: 841: {
  1416                           ;main.c: 842: uiTimerTwoP5s = 0;
  1417  02D5  01B0               	clrf	main@uiTimerTwoP5s
  1418  02D6  01B1               	clrf	main@uiTimerTwoP5s+1
  1419                           
  1420                           ;main.c: 843: uiTimerThreeP5s = 0;
  1421  02D7  01AE               	clrf	main@uiTimerThreeP5s
  1422  02D8  01AF               	clrf	main@uiTimerThreeP5s+1
  1423  02D9                     l3772:	
  1424                           
  1425                           ;main.c: 844: }
  1426                           ;main.c: 846: if(uiTimerTwoP5s > 5)
  1427  02D9  3000               	movlw	0
  1428  02DA  0231               	subwf	main@uiTimerTwoP5s+1,w
  1429  02DB  3006               	movlw	6
  1430  02DC  1903               	skipnz
  1431  02DD  0230               	subwf	main@uiTimerTwoP5s,w
  1432  02DE  1C03               	skipc
  1433  02DF  29EE               	goto	l3658
  1434                           
  1435                           ;main.c: 847: {
  1436                           ;main.c: 848: setPB3(1);
  1437  02E0  3001               	movlw	1
  1438  02E1  118A  2429  118A   	fcall	_setPB3
  1439                           
  1440                           ;main.c: 849: setPB4(0);
  1441  02E4  3000               	movlw	0
  1442  02E5  118A  2432  118A   	fcall	_setPB4
  1443                           
  1444                           ;main.c: 850: setPB5(1);
  1445  02E8  3001               	movlw	1
  1446  02E9  118A  243A  118A   	fcall	_setPB5
  1447                           
  1448                           ;main.c: 852: if(uiCh13Value < 25)
  1449  02EC  3000               	movlw	0
  1450  02ED  025D               	subwf	main@uiCh13Value+1,w
  1451  02EE  3019               	movlw	25
  1452  02EF  1903               	skipnz
  1453  02F0  025C               	subwf	main@uiCh13Value,w
  1454  02F1  1803               	skipnc
  1455  02F2  2AF7               	goto	l3780
  1456                           
  1457                           ;main.c: 853: uiTimerThreeP5s++;
  1458  02F3  0AAE               	incf	main@uiTimerThreeP5s,f
  1459  02F4  1903               	skipnz
  1460  02F5  0AAF               	incf	main@uiTimerThreeP5s+1,f
  1461  02F6  2AF9               	goto	l3782
  1462  02F7                     l3780:	
  1463                           
  1464                           ;main.c: 854: else
  1465                           ;main.c: 855: uiTimerThreeP5s = 0;
  1466  02F7  01AE               	clrf	main@uiTimerThreeP5s
  1467  02F8  01AF               	clrf	main@uiTimerThreeP5s+1
  1468  02F9                     l3782:	
  1469                           
  1470                           ;main.c: 857: if(uiTimerThreeP5s > 5)
  1471  02F9  3000               	movlw	0
  1472  02FA  022F               	subwf	main@uiTimerThreeP5s+1,w
  1473  02FB  3006               	movlw	6
  1474  02FC  1903               	skipnz
  1475  02FD  022E               	subwf	main@uiTimerThreeP5s,w
  1476  02FE  1C03               	skipc
  1477  02FF  29EE               	goto	l3658
  1478  0300                     l3784:	
  1479                           
  1480                           ;main.c: 858: reset();
  1481  0300  118A  2521  118A   	fcall	_reset
  1482  0303  29EE               	goto	l3658
  1483  0304                     l3786:	
  1484                           
  1485                           ;main.c: 867: {
  1486                           ;main.c: 868: setPB3(0);
  1487  0304  3000               	movlw	0
  1488  0305  118A  2429  118A   	fcall	_setPB3
  1489                           
  1490                           ;main.c: 869: setPB4(0);
  1491  0308  3000               	movlw	0
  1492  0309  118A  2432  118A   	fcall	_setPB4
  1493                           
  1494                           ;main.c: 870: setPB5(1);
  1495  030C  3001               	movlw	1
  1496  030D  118A  243A  118A   	fcall	_setPB5
  1497                           
  1498                           ;main.c: 874: ucStep = DELAY_ONE_SECOND_FOR_PWM;
  1499  0310  3064               	movlw	100
  1500  0311  2B37               	goto	L8
  1501  0312                     l3790:	
  1502                           ;main.c: 875: break;
  1503                           
  1504                           
  1505                           ;main.c: 879: {
  1506                           ;main.c: 880: static unsigned ucDelay1s = 0;
  1507                           ;main.c: 881: if(ucDelay1s < 10)
  1508  0312  3000               	movlw	0
  1509  0313  022B               	subwf	main@ucDelay1s+1,w
  1510  0314  300A               	movlw	10
  1511  0315  1903               	skipnz
  1512  0316  022A               	subwf	main@ucDelay1s,w
  1513  0317  1803               	skipnc
  1514  0318  2B1D               	goto	l3794
  1515                           
  1516                           ;main.c: 882: ucDelay1s++;
  1517  0319  0AAA               	incf	main@ucDelay1s,f
  1518  031A  1903               	skipnz
  1519  031B  0AAB               	incf	main@ucDelay1s+1,f
  1520  031C  29EE               	goto	l3658
  1521  031D                     l3794:	
  1522  031D  3065               	movlw	101
  1523                           
  1524                           ;main.c: 883: else
  1525                           ;main.c: 884: {
  1526                           ;main.c: 885: ucDelay1s = 0;
  1527  031E  01AA               	clrf	main@ucDelay1s
  1528  031F  01AB               	clrf	main@ucDelay1s+1
  1529                           
  1530                           ;main.c: 886: ucStep = MEET_RESET_CONDITION_STEP;
  1531  0320  2B37               	goto	L8
  1532  0321                     l3798:	
  1533                           
  1534                           ;main.c: 896: {
  1535                           ;main.c: 897: static unsigned char ucTimerP5s = 0;
  1536                           ;main.c: 898: unsigned int ucChValue = getAdOriginalCh13Value();
  1537  0321  118A  2360  118A   	fcall	_getAdOriginalCh13Value
  1538  0324  0858               	movf	?_getAdOriginalCh13Value+1,w
  1539  0325  00DB               	movwf	main@ucChValue+1
  1540  0326  0857               	movf	?_getAdOriginalCh13Value,w
  1541  0327  00DA               	movwf	main@ucChValue
  1542                           
  1543                           ;main.c: 900: if( ucChValue > 50 )
  1544  0328  3000               	movlw	0
  1545  0329  025B               	subwf	main@ucChValue+1,w
  1546  032A  3033               	movlw	51
  1547  032B  1903               	skipnz
  1548  032C  025A               	subwf	main@ucChValue,w
  1549  032D  1C03               	skipc
  1550  032E  2B31               	goto	l3804
  1551                           
  1552                           ;main.c: 901: ucTimerP5s++;
  1553  032F  0AB9               	incf	main@cTimerP5s_783,f
  1554  0330  2B32               	goto	l3806
  1555  0331                     l3804:	
  1556                           
  1557                           ;main.c: 902: else
  1558                           ;main.c: 903: ucTimerP5s = 0;
  1559  0331  01B9               	clrf	main@cTimerP5s_783
  1560  0332                     l3806:	
  1561                           
  1562                           ;main.c: 905: if(ucTimerP5s > 5)
  1563  0332  3006               	movlw	6
  1564  0333  0239               	subwf	main@cTimerP5s_783,w
  1565  0334  1C03               	skipc
  1566  0335  29EE               	goto	l3658
  1567                           
  1568                           ;main.c: 906: ucStep = RESET_STEP;
  1569  0336  3066               	movlw	102
  1570  0337                     L8:	
  1571  0337  00BA               	movwf	main@ucStep
  1572  0338  29EE               	goto	l3658
  1573  0339                     l3810:	
  1574                           
  1575                           ;main.c: 911: {
  1576                           ;main.c: 912: ucStep = INIT_STEP;
  1577  0339  01BA               	clrf	main@ucStep
  1578  033A  2B00               	goto	l3784
  1579  033B                     l3816:	
  1580  033B  083A               	movf	main@ucStep,w
  1581                           
  1582                           ; Switch size 1, requested type "space"
  1583                           ; Number of cases is 11, Range of values is 0 to 102
  1584                           ; switch strategies available:
  1585                           ; Name         Instructions Cycles
  1586                           ; simple_byte           34    18 (average)
  1587                           ; direct_byte          213     7 (fixed)
  1588                           ; jumptable            260     6 (fixed)
  1589                           ; rangetable           107     6 (fixed)
  1590                           ; spacedrange          212     9 (fixed)
  1591                           ; locatedrange         103     3 (fixed)
  1592                           ;	Chosen strategy is simple_byte
  1593  033C  3A00               	xorlw	0	; case 0
  1594  033D  1903               	skipnz
  1595  033E  29F9               	goto	l3664
  1596  033F  3A01               	xorlw	1	; case 1
  1597  0340  1903               	skipnz
  1598  0341  2A18               	goto	l3682
  1599  0342  3A03               	xorlw	3	; case 2
  1600  0343  1903               	skipnz
  1601  0344  2A2F               	goto	l3690
  1602  0345  3A01               	xorlw	1	; case 3
  1603  0346  1903               	skipnz
  1604  0347  2A4B               	goto	l3706
  1605  0348  3A07               	xorlw	7	; case 4
  1606  0349  1903               	skipnz
  1607  034A  2A56               	goto	l3710
  1608  034B  3A01               	xorlw	1	; case 5
  1609  034C  1903               	skipnz
  1610  034D  2A70               	goto	l3726
  1611  034E  3A03               	xorlw	3	; case 6
  1612  034F  1903               	skipnz
  1613  0350  2A87               	goto	l3738
  1614  0351  3A65               	xorlw	101	; case 99
  1615  0352  1903               	skipnz
  1616  0353  2B04               	goto	l3786
  1617  0354  3A07               	xorlw	7	; case 100
  1618  0355  1903               	skipnz
  1619  0356  2B12               	goto	l3790
  1620  0357  3A01               	xorlw	1	; case 101
  1621  0358  1903               	skipnz
  1622  0359  2B21               	goto	l3798
  1623  035A  3A03               	xorlw	3	; case 102
  1624  035B  1903               	skipnz
  1625  035C  2B39               	goto	l3810
  1626  035D  2A17               	goto	l738
  1627  035E  118A  2811         	ljmp	start
  1628  0360                     __end_of_main:	
  1629                           
  1630                           	psect	text833
  1631  0360                     __ptext833:	
  1632 ;; =============== function _main ends ============
  1633                           
  1634                           
  1635 ;; *************** function _getAdOriginalCh13Value *****************
  1636 ;; Defined at:
  1637 ;;		line 354 in file "D:\develop\190625\AK7030-OTP\common.c"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;		None
  1640 ;; Auto vars:     Size  Location     Type
  1641 ;;		None
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  2   24[BANK0 ] unsigned int 
  1644 ;; Registers used:
  1645 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1646 ;; Tracked objects:
  1647 ;;		On entry : 60/0
  1648 ;;		On exit  : 160/0
  1649 ;;		Unchanged: FFE00/0
  1650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1651 ;;      Params:         0       2       0       0       0
  1652 ;;      Locals:         0       0       0       0       0
  1653 ;;      Temps:          0       0       0       0       0
  1654 ;;      Totals:         0       2       0       0       0
  1655 ;;Total ram usage:        2 bytes
  1656 ;; Hardware stack levels used:    1
  1657 ;; Hardware stack levels required when called:    5
  1658 ;; This function calls:
  1659 ;;		_FilterCh13
  1660 ;; This function is called by:
  1661 ;;		_main
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664  0360                     _getAdOriginalCh13Value:	
  1665                           
  1666                           ;common.c: 356: return FilterCh13();
  1667                           
  1668                           ; Regs used in _getAdOriginalCh13Value: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1669  0360  2366               	fcall	_FilterCh13
  1670  0361  084B               	movf	?_FilterCh13+1,w
  1671  0362  00D8               	movwf	?_getAdOriginalCh13Value+1
  1672  0363  084A               	movf	?_FilterCh13,w
  1673  0364  00D7               	movwf	?_getAdOriginalCh13Value
  1674  0365  0008               	return
  1675  0366                     __end_of_getAdOriginalCh13Value:	
  1676  0366                     __ptext836:	
  1677 ;; =============== function _initPin ends ============
  1678                           
  1679                           
  1680 ;; *************** function _FilterCh13 *****************
  1681 ;; Defined at:
  1682 ;;		line 73 in file "D:\develop\190625\AK7030-OTP\common.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;		None
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;  filter_sum      2   20[BANK0 ] unsigned int 
  1687 ;;  filter_temp     2   18[BANK0 ] unsigned int 
  1688 ;;  i               1   23[BANK0 ] unsigned char 
  1689 ;;  j               1   22[BANK0 ] unsigned char 
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  2   11[BANK0 ] unsigned int 
  1692 ;; Registers used:
  1693 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1694 ;; Tracked objects:
  1695 ;;		On entry : 60/0
  1696 ;;		On exit  : 160/0
  1697 ;;		Unchanged: FFE00/0
  1698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1699 ;;      Params:         0       2       0       0       0
  1700 ;;      Locals:         0       6       0       0       0
  1701 ;;      Temps:          0       5       0       0       0
  1702 ;;      Totals:         0      13       0       0       0
  1703 ;;Total ram usage:       13 bytes
  1704 ;; Hardware stack levels used:    1
  1705 ;; Hardware stack levels required when called:    4
  1706 ;; This function calls:
  1707 ;;		Nothing
  1708 ;; This function is called by:
  1709 ;;		_getAdOriginalCh13Value
  1710 ;; This function uses a non-reentrant model
  1711 ;;
  1712  0366                     _FilterCh13:	
  1713                           
  1714                           ; Regs used in _FilterCh13: [wreg-fsr0h+status,2+status,0]
  1715  0366  01D5               	clrf	FilterCh13@j
  1716                           
  1717                           ;common.c: 90: unsigned int filter_temp = 0, filter_sum = 0;
  1718  0367  01D1               	clrf	FilterCh13@filter_temp
  1719  0368  01D2               	clrf	FilterCh13@filter_temp+1
  1720  0369  01D3               	clrf	FilterCh13@filter_sum
  1721  036A  01D4               	clrf	FilterCh13@filter_sum+1
  1722                           
  1723                           ;common.c: 94: for(j = 0; j < 12 - 1; j++)
  1724  036B  01D5               	clrf	FilterCh13@j
  1725  036C                     l3446:	
  1726                           
  1727                           ;common.c: 95: {
  1728                           ;common.c: 96: for(i = 0; i < 12 - 1 - j; i++)
  1729  036C  01D6               	clrf	FilterCh13@i
  1730  036D                     l3454:	
  1731  036D  01CD               	clrf	??_FilterCh13+1
  1732  036E  0855               	movf	FilterCh13@j,w
  1733  036F  3C0B               	sublw	11
  1734  0370  00CC               	movwf	??_FilterCh13
  1735  0371  1C03               	skipc
  1736  0372  03CD               	decf	??_FilterCh13+1,f
  1737  0373  084D               	movf	??_FilterCh13+1,w
  1738  0374  3A80               	xorlw	128
  1739  0375  3C80               	sublw	128
  1740  0376  1D03               	skipz
  1741  0377  2B7A               	goto	u1035
  1742  0378  084C               	movf	??_FilterCh13,w
  1743  0379  0256               	subwf	FilterCh13@i,w
  1744  037A                     u1035:	
  1745  037A  1803               	btfsc	3,0
  1746  037B  2BBB               	goto	l3456
  1747                           
  1748                           ;common.c: 97: {
  1749                           ;common.c: 98: if(uiSampleCh13[i] > uiSampleCh13[i + 1])
  1750  037C  1283               	bcf	3,5	;RP0=0, select bank0
  1751  037D  1303               	bcf	3,6	;RP1=0, select bank0
  1752  037E  1003               	clrc
  1753  037F  0D56               	rlf	FilterCh13@i,w
  1754  0380  23E1  118A         	fcall	PL2	;call to abstracted procedure
  1755  0382  23EA  118A         	fcall	PL5	;call to abstracted procedure
  1756  0384  00CE               	movwf	??_FilterCh13+2
  1757  0385  0A84               	incf	4,f
  1758  0386  0800               	movf	0,w
  1759  0387  00CF               	movwf	??_FilterCh13+3
  1760  0388  3A80               	xorlw	128
  1761  0389  00D0               	movwf	??_FilterCh13+4
  1762  038A  084D               	movf	??_FilterCh13+1,w
  1763  038B  3A80               	xorlw	128
  1764  038C  0250               	subwf	??_FilterCh13+4,w
  1765  038D  1D03               	skipz
  1766  038E  2B91               	goto	u1025
  1767  038F  084C               	movf	??_FilterCh13,w
  1768  0390  024E               	subwf	??_FilterCh13+2,w
  1769  0391                     u1025:	
  1770  0391  1803               	skipnc
  1771  0392  2BB7               	goto	l3452
  1772                           
  1773                           ;common.c: 99: {
  1774                           ;common.c: 101: filter_temp = uiSampleCh13[i];
  1775  0393  1283               	bcf	3,5	;RP0=0, select bank0
  1776  0394  1303               	bcf	3,6	;RP1=0, select bank0
  1777  0395  1003               	clrc
  1778  0396  0D56               	rlf	FilterCh13@i,w
  1779  0397  3EA0               	addlw	_uiSampleCh13& (0+255)
  1780  0398  0084               	movwf	4
  1781  0399  1383               	bcf	3,7	;select IRP bank1
  1782  039A  0800               	movf	0,w
  1783  039B  00D1               	movwf	FilterCh13@filter_temp
  1784  039C  0A84               	incf	4,f
  1785  039D  0800               	movf	0,w
  1786  039E  00D2               	movwf	FilterCh13@filter_temp+1
  1787                           
  1788                           ;common.c: 103: uiSampleCh13[i] = uiSampleCh13[i + 1];
  1789  039F  23EA  118A         	fcall	PL5	;call to abstracted procedure
  1790  03A1  00CC               	movwf	??_FilterCh13
  1791  03A2  0A84               	incf	4,f
  1792  03A3  0800               	movf	0,w
  1793  03A4  00CD               	movwf	??_FilterCh13+1
  1794  03A5  1003               	clrc
  1795  03A6  0D56               	rlf	FilterCh13@i,w
  1796  03A7  3EA0               	addlw	_uiSampleCh13& (0+255)
  1797  03A8  0084               	movwf	4
  1798  03A9  084C               	movf	??_FilterCh13,w
  1799  03AA  0080               	movwf	0
  1800  03AB  0A84               	incf	4,f
  1801  03AC  084D               	movf	??_FilterCh13+1,w
  1802  03AD  0080               	movwf	0
  1803                           
  1804                           ;common.c: 105: uiSampleCh13[i + 1] = filter_temp;
  1805  03AE  1003               	clrc
  1806  03AF  0D56               	rlf	FilterCh13@i,w
  1807  03B0  3EA2               	addlw	(_uiSampleCh13+2)& (0+255)
  1808  03B1  0084               	movwf	4
  1809  03B2  0851               	movf	FilterCh13@filter_temp,w
  1810  03B3  0080               	movwf	0
  1811  03B4  0A84               	incf	4,f
  1812  03B5  0852               	movf	FilterCh13@filter_temp+1,w
  1813  03B6  0080               	movwf	0
  1814  03B7                     l3452:	
  1815  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  1816  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  1817  03B9  0AD6               	incf	FilterCh13@i,f
  1818  03BA  2B6D               	goto	l3454
  1819  03BB                     l3456:	
  1820  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  1821  03BC  300B               	movlw	11
  1822  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  1823  03BE  0AD5               	incf	FilterCh13@j,f
  1824  03BF  0255               	subwf	FilterCh13@j,w
  1825  03C0  1C03               	skipc
  1826  03C1  2B6C               	goto	l3446
  1827                           
  1828                           ;common.c: 106: }
  1829                           ;common.c: 107: }
  1830                           ;common.c: 108: }
  1831                           ;common.c: 118: for(i = 2; i < 12 - 2; i++)
  1832  03C2  3002               	movlw	2
  1833  03C3  00D6               	movwf	FilterCh13@i
  1834                           
  1835                           ;common.c: 119: {
  1836                           ;common.c: 120: filter_sum += uiSampleCh13[i];
  1837  03C4  1003               	clrc
  1838  03C5                     L10:	
  1839  03C5  0D56               	rlf	FilterCh13@i,w
  1840  03C6  23E1  118A         	fcall	PL2	;call to abstracted procedure
  1841  03C8  084C               	movf	??_FilterCh13,w
  1842  03C9  07D3               	addwf	FilterCh13@filter_sum,f
  1843  03CA  1803               	skipnc
  1844  03CB  0AD4               	incf	FilterCh13@filter_sum+1,f
  1845  03CC  084D               	movf	??_FilterCh13+1,w
  1846  03CD  07D4               	addwf	FilterCh13@filter_sum+1,f
  1847  03CE  300A               	movlw	10
  1848  03CF  0AD6               	incf	FilterCh13@i,f
  1849  03D0  0256               	subwf	FilterCh13@i,w
  1850  03D1  1C03               	skipc
  1851  03D2  2BC5               	goto	L10
  1852                           
  1853                           ;common.c: 121: }
  1854                           ;common.c: 128: return (filter_sum >> 3);
  1855  03D3  0854               	movf	FilterCh13@filter_sum+1,w
  1856  03D4  00CB               	movwf	?_FilterCh13+1
  1857  03D5  0853               	movf	FilterCh13@filter_sum,w
  1858  03D6  00CA               	movwf	?_FilterCh13
  1859  03D7  1003               	clrc
  1860  03D8  0CCB               	rrf	?_FilterCh13+1,f
  1861  03D9  0CCA               	rrf	?_FilterCh13,f
  1862  03DA  1003               	clrc
  1863  03DB  0CCB               	rrf	?_FilterCh13+1,f
  1864  03DC  0CCA               	rrf	?_FilterCh13,f
  1865  03DD  1003               	clrc
  1866  03DE  0CCB               	rrf	?_FilterCh13+1,f
  1867  03DF  0CCA               	rrf	?_FilterCh13,f
  1868  03E0  0008               	return
  1869  03E1                     __end_of_FilterCh13:	
  1870  03E1                     PL2:	
  1871  03E1  3EA0               	addlw	_uiSampleCh13& (0+255)
  1872  03E2  0084               	movwf	4
  1873  03E3  1383               	bcf	3,7	;select IRP bank1
  1874  03E4  0800               	movf	0,w
  1875  03E5  00CC               	movwf	??_FilterCh13
  1876  03E6  0A84               	incf	4,f
  1877  03E7  0800               	movf	0,w
  1878  03E8  00CD               	movwf	??_FilterCh13+1
  1879  03E9  0008               	return
  1880  03EA                     PL5:	
  1881  03EA  1003               	clrc
  1882  03EB  0D56               	rlf	FilterCh13@i,w
  1883  03EC  3EA2               	addlw	(_uiSampleCh13+2)& (0+255)
  1884  03ED  0084               	movwf	4
  1885  03EE  0800               	movf	0,w
  1886  03EF  0008               	return
  1887                           
  1888                           	psect	text834
  1889  0421                     __ptext834:	
  1890 ;; =============== function _getAdOriginalCh13Value ends ============
  1891                           
  1892                           
  1893 ;; *************** function _setPinInitVaule *****************
  1894 ;; Defined at:
  1895 ;;		line 287 in file "D:\develop\190625\AK7030-OTP\main.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;		None
  1898 ;; Auto vars:     Size  Location     Type
  1899 ;;		None
  1900 ;; Return value:  Size  Location     Type
  1901 ;;		None               void
  1902 ;; Registers used:
  1903 ;;		wreg, status,2, status,0, pclath, cstack
  1904 ;; Tracked objects:
  1905 ;;		On entry : 17F/20
  1906 ;;		On exit  : 17F/0
  1907 ;;		Unchanged: FFE80/0
  1908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1909 ;;      Params:         0       0       0       0       0
  1910 ;;      Locals:         0       0       0       0       0
  1911 ;;      Temps:          0       0       0       0       0
  1912 ;;      Totals:         0       0       0       0       0
  1913 ;;Total ram usage:        0 bytes
  1914 ;; Hardware stack levels used:    1
  1915 ;; Hardware stack levels required when called:    5
  1916 ;; This function calls:
  1917 ;;		_setPB3
  1918 ;;		_setPB4
  1919 ;;		_setPB5
  1920 ;; This function is called by:
  1921 ;;		_main
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924  0421                     _setPinInitVaule:	
  1925                           
  1926                           ;main.c: 289: setPB3(1);
  1927                           
  1928                           ; Regs used in _setPinInitVaule: [wreg+status,2+status,0+pclath+cstack]
  1929  0421  3001               	movlw	1
  1930  0422  2429  118A         	fcall	_setPB3
  1931                           
  1932                           ;main.c: 290: setPB4(0);
  1933  0424  3000               	movlw	0
  1934  0425  2432  118A         	fcall	_setPB4
  1935                           
  1936                           ;main.c: 291: setPB5(1);
  1937  0427  3001               	movlw	1
  1938  0428  2C3A               	ljmp	_setPB5
  1939  0429                     __end_of_setPinInitVaule:	
  1940  0429                     __ptext861:	
  1941 ;; =============== function _initPB4 ends ============
  1942                           
  1943                           
  1944 ;; *************** function _setPB3 *****************
  1945 ;; Defined at:
  1946 ;;		line 148 in file "D:\develop\190625\AK7030-OTP\main.c"
  1947 ;; Parameters:    Size  Location     Type
  1948 ;;  bValue          1    wreg     unsigned char 
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;  bValue          1   11[BANK0 ] unsigned char 
  1951 ;; Return value:  Size  Location     Type
  1952 ;;		None               void
  1953 ;; Registers used:
  1954 ;;		wreg
  1955 ;; Tracked objects:
  1956 ;;		On entry : 40/0
  1957 ;;		On exit  : 60/0
  1958 ;;		Unchanged: FFF9F/0
  1959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1960 ;;      Params:         0       0       0       0       0
  1961 ;;      Locals:         0       1       0       0       0
  1962 ;;      Temps:          0       0       0       0       0
  1963 ;;      Totals:         0       1       0       0       0
  1964 ;;Total ram usage:        1 bytes
  1965 ;; Hardware stack levels used:    1
  1966 ;; Hardware stack levels required when called:    4
  1967 ;; This function calls:
  1968 ;;		Nothing
  1969 ;; This function is called by:
  1970 ;;		_setPinInitVaule
  1971 ;;		_main
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974  0429                     _setPB3:	
  1975                           
  1976                           ; Regs used in _setPB3: [wreg]
  1977                           ;setPB3@bValue stored from wreg
  1978  0429  1283               	bcf	3,5	;RP0=0, select bank0
  1979  042A  00CA               	movwf	setPB3@bValue
  1980                           
  1981                           ;main.c: 149: if( bValue )
  1982  042B  084A               	movf	setPB3@bValue,w
  1983  042C  1903               	btfsc	3,2
  1984  042D  2C30               	goto	l683
  1985                           
  1986                           ;main.c: 151: PB3 = 1;
  1987  042E  1586               	bsf	6,3
  1988  042F  0008               	return
  1989  0430                     l683:	
  1990                           
  1991                           ;main.c: 155: else
  1992                           ;main.c: 157: PB3= 0;
  1993  0430  1186               	bcf	6,3
  1994  0431  0008               	return
  1995  0432                     __end_of_setPB3:	
  1996  0432                     __ptext859:	
  1997 ;; =============== function _initPB5 ends ============
  1998                           
  1999                           
  2000 ;; *************** function _setPB4 *****************
  2001 ;; Defined at:
  2002 ;;		line 183 in file "D:\develop\190625\AK7030-OTP\main.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;  bValue          1    wreg     unsigned char 
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;  bValue          1   11[BANK0 ] unsigned char 
  2007 ;; Return value:  Size  Location     Type
  2008 ;;		None               void
  2009 ;; Registers used:
  2010 ;;		wreg
  2011 ;; Tracked objects:
  2012 ;;		On entry : 60/0
  2013 ;;		On exit  : 60/0
  2014 ;;		Unchanged: FFF9F/0
  2015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2016 ;;      Params:         0       0       0       0       0
  2017 ;;      Locals:         0       1       0       0       0
  2018 ;;      Temps:          0       0       0       0       0
  2019 ;;      Totals:         0       1       0       0       0
  2020 ;;Total ram usage:        1 bytes
  2021 ;; Hardware stack levels used:    1
  2022 ;; Hardware stack levels required when called:    4
  2023 ;; This function calls:
  2024 ;;		Nothing
  2025 ;; This function is called by:
  2026 ;;		_setPinInitVaule
  2027 ;;		_main
  2028 ;; This function uses a non-reentrant model
  2029 ;;
  2030  0432                     _setPB4:	
  2031                           
  2032                           ; Regs used in _setPB4: [wreg]
  2033                           ;setPB4@bValue stored from wreg
  2034  0432  00CA               	movwf	setPB4@bValue
  2035                           
  2036                           ;main.c: 184: if( bValue )
  2037  0433  084A               	movf	setPB4@bValue,w
  2038  0434  1903               	btfsc	3,2
  2039  0435  2C38               	goto	l693
  2040                           
  2041                           ;main.c: 186: PB4 = 1;
  2042  0436  1606               	bsf	6,4
  2043  0437  0008               	return
  2044  0438                     l693:	
  2045                           
  2046                           ;main.c: 190: else
  2047                           ;main.c: 192: PB4= 0;
  2048  0438  1206               	bcf	6,4
  2049  0439  0008               	return
  2050  043A                     __end_of_setPB4:	
  2051  043A                     __ptext857:	
  2052 ;; =============== function _initPB2_AsHighResistence ends ============
  2053                           
  2054                           
  2055 ;; *************** function _setPB5 *****************
  2056 ;; Defined at:
  2057 ;;		line 217 in file "D:\develop\190625\AK7030-OTP\main.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;  bValue          1    wreg     unsigned char 
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;  bValue          1   11[BANK0 ] unsigned char 
  2062 ;; Return value:  Size  Location     Type
  2063 ;;		None               void
  2064 ;; Registers used:
  2065 ;;		wreg
  2066 ;; Tracked objects:
  2067 ;;		On entry : 60/0
  2068 ;;		On exit  : 60/0
  2069 ;;		Unchanged: FFF9F/0
  2070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2071 ;;      Params:         0       0       0       0       0
  2072 ;;      Locals:         0       1       0       0       0
  2073 ;;      Temps:          0       0       0       0       0
  2074 ;;      Totals:         0       1       0       0       0
  2075 ;;Total ram usage:        1 bytes
  2076 ;; Hardware stack levels used:    1
  2077 ;; Hardware stack levels required when called:    4
  2078 ;; This function calls:
  2079 ;;		Nothing
  2080 ;; This function is called by:
  2081 ;;		_setPinInitVaule
  2082 ;;		_main
  2083 ;; This function uses a non-reentrant model
  2084 ;;
  2085  043A                     _setPB5:	
  2086                           
  2087                           ; Regs used in _setPB5: [wreg]
  2088                           ;setPB5@bValue stored from wreg
  2089  043A  00CA               	movwf	setPB5@bValue
  2090                           
  2091                           ;main.c: 218: if( bValue )
  2092  043B  084A               	movf	setPB5@bValue,w
  2093  043C  1903               	btfsc	3,2
  2094  043D  2C40               	goto	l703
  2095                           
  2096                           ;main.c: 220: PB5 = 1;
  2097  043E  1686               	bsf	6,5
  2098  043F  0008               	return
  2099  0440                     l703:	
  2100                           
  2101                           ;main.c: 224: else
  2102                           ;main.c: 226: PB5= 0;
  2103  0440  1286               	bcf	6,5
  2104  0441  0008               	return
  2105  0442                     __end_of_setPB5:	
  2106                           
  2107                           	psect	text835
  2108  03F0                     __ptext835:	
  2109 ;; =============== function _setPinInitVaule ends ============
  2110                           
  2111                           
  2112 ;; *************** function _initPin *****************
  2113 ;; Defined at:
  2114 ;;		line 271 in file "D:\develop\190625\AK7030-OTP\main.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;		None
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;		None
  2119 ;; Return value:  Size  Location     Type
  2120 ;;		None               void
  2121 ;; Registers used:
  2122 ;;		wreg, status,2, status,0, pclath, cstack
  2123 ;; Tracked objects:
  2124 ;;		On entry : 17F/0
  2125 ;;		On exit  : 17F/20
  2126 ;;		Unchanged: FFE80/0
  2127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2128 ;;      Params:         0       0       0       0       0
  2129 ;;      Locals:         0       0       0       0       0
  2130 ;;      Temps:          0       0       0       0       0
  2131 ;;      Totals:         0       0       0       0       0
  2132 ;;Total ram usage:        0 bytes
  2133 ;; Hardware stack levels used:    1
  2134 ;; Hardware stack levels required when called:    5
  2135 ;; This function calls:
  2136 ;;		_initPB2_AsHighResistence
  2137 ;;		_initPB3
  2138 ;;		_initPB4
  2139 ;;		_initPB5
  2140 ;; This function is called by:
  2141 ;;		_main
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144  03F0                     _initPin:	
  2145                           
  2146                           ;main.c: 273: initPB2_AsHighResistence();
  2147                           
  2148                           ; Regs used in _initPin: [wreg+status,2+status,0+pclath+cstack]
  2149  03F0  2406  118A         	fcall	_initPB2_AsHighResistence
  2150                           
  2151                           ;main.c: 275: initPB3(0);
  2152  03F2  3000               	movlw	0
  2153  03F3  23FA  118A         	fcall	_initPB3
  2154                           
  2155                           ;main.c: 277: initPB4(0);
  2156  03F5  3000               	movlw	0
  2157  03F6  240B  118A         	fcall	_initPB4
  2158                           
  2159                           ;main.c: 279: initPB5(0);
  2160  03F8  3000               	movlw	0
  2161  03F9  2C16               	ljmp	_initPB5
  2162  03FA                     __end_of_initPin:	
  2163  03FA                     __ptext862:	
  2164 ;; =============== function _setPB3 ends ============
  2165                           
  2166                           
  2167 ;; *************** function _initPB3 *****************
  2168 ;; Defined at:
  2169 ;;		line 131 in file "D:\develop\190625\AK7030-OTP\main.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;  bValue          1    wreg     unsigned char 
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;  bValue          1   11[BANK0 ] unsigned char 
  2174 ;; Return value:  Size  Location     Type
  2175 ;;		None               void
  2176 ;; Registers used:
  2177 ;;		wreg
  2178 ;; Tracked objects:
  2179 ;;		On entry : 17F/60
  2180 ;;		On exit  : 17F/20
  2181 ;;		Unchanged: FFE80/0
  2182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2183 ;;      Params:         0       0       0       0       0
  2184 ;;      Locals:         0       1       0       0       0
  2185 ;;      Temps:          0       0       0       0       0
  2186 ;;      Totals:         0       1       0       0       0
  2187 ;;Total ram usage:        1 bytes
  2188 ;; Hardware stack levels used:    1
  2189 ;; Hardware stack levels required when called:    4
  2190 ;; This function calls:
  2191 ;;		Nothing
  2192 ;; This function is called by:
  2193 ;;		_initPin
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196  03FA                     _initPB3:	
  2197                           
  2198                           ; Regs used in _initPB3: [wreg]
  2199                           ;initPB3@bValue stored from wreg
  2200  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  2201  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  2202  03FC  00CA               	movwf	initPB3@bValue
  2203                           
  2204                           ;main.c: 132: if( bValue )
  2205  03FD  084A               	movf	initPB3@bValue,w
  2206  03FE  1903               	btfsc	3,2
  2207  03FF  2C03               	goto	l678
  2208                           
  2209                           ;main.c: 134: TRISB3 = 1;
  2210  0400  1683               	bsf	3,5	;RP0=1, select bank1
  2211  0401  1586               	bsf	6,3
  2212  0402  0008               	return
  2213  0403                     l678:	
  2214                           
  2215                           ;main.c: 138: else
  2216                           ;main.c: 140: TRISB3 = 0;
  2217  0403  1683               	bsf	3,5	;RP0=1, select bank1
  2218  0404  1186               	bcf	6,3
  2219  0405  0008               	return
  2220  0406                     __end_of_initPB3:	
  2221  0406                     __ptext856:	
  2222 ;; =============== function _pwm_start ends ============
  2223                           
  2224                           
  2225 ;; *************** function _initPB2_AsHighResistence *****************
  2226 ;; Defined at:
  2227 ;;		line 234 in file "D:\develop\190625\AK7030-OTP\main.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;		None
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;		None
  2232 ;; Return value:  Size  Location     Type
  2233 ;;		None               void
  2234 ;; Registers used:
  2235 ;;		None
  2236 ;; Tracked objects:
  2237 ;;		On entry : 17F/0
  2238 ;;		On exit  : 17F/60
  2239 ;;		Unchanged: FFE80/0
  2240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2241 ;;      Params:         0       0       0       0       0
  2242 ;;      Locals:         0       0       0       0       0
  2243 ;;      Temps:          0       0       0       0       0
  2244 ;;      Totals:         0       0       0       0       0
  2245 ;;Total ram usage:        0 bytes
  2246 ;; Hardware stack levels used:    1
  2247 ;; Hardware stack levels required when called:    4
  2248 ;; This function calls:
  2249 ;;		Nothing
  2250 ;; This function is called by:
  2251 ;;		_initPin
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254  0406                     _initPB2_AsHighResistence:	
  2255                           
  2256                           ;main.c: 236: PB2 = 1;
  2257                           
  2258                           ; Regs used in _initPB2_AsHighResistence: []
  2259  0406  1506               	bsf	6,2
  2260                           
  2261                           ;main.c: 237: PBOD2 = 1;
  2262  0407  1683               	bsf	3,5	;RP0=1, select bank3
  2263  0408  1703               	bsf	3,6	;RP1=1, select bank3
  2264  0409  1508               	bsf	8,2
  2265  040A  0008               	return
  2266  040B                     __end_of_initPB2_AsHighResistence:	
  2267  040B                     __ptext860:	
  2268 ;; =============== function _setPB4 ends ============
  2269                           
  2270                           
  2271 ;; *************** function _initPB4 *****************
  2272 ;; Defined at:
  2273 ;;		line 166 in file "D:\develop\190625\AK7030-OTP\main.c"
  2274 ;; Parameters:    Size  Location     Type
  2275 ;;  bValue          1    wreg     unsigned char 
  2276 ;; Auto vars:     Size  Location     Type
  2277 ;;  bValue          1   11[BANK0 ] unsigned char 
  2278 ;; Return value:  Size  Location     Type
  2279 ;;		None               void
  2280 ;; Registers used:
  2281 ;;		wreg
  2282 ;; Tracked objects:
  2283 ;;		On entry : 17F/20
  2284 ;;		On exit  : 17F/20
  2285 ;;		Unchanged: FFE80/0
  2286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2287 ;;      Params:         0       0       0       0       0
  2288 ;;      Locals:         0       1       0       0       0
  2289 ;;      Temps:          0       0       0       0       0
  2290 ;;      Totals:         0       1       0       0       0
  2291 ;;Total ram usage:        1 bytes
  2292 ;; Hardware stack levels used:    1
  2293 ;; Hardware stack levels required when called:    4
  2294 ;; This function calls:
  2295 ;;		Nothing
  2296 ;; This function is called by:
  2297 ;;		_initPin
  2298 ;; This function uses a non-reentrant model
  2299 ;;
  2300  040B                     _initPB4:	
  2301                           
  2302                           ; Regs used in _initPB4: [wreg]
  2303                           ;initPB4@bValue stored from wreg
  2304  040B  1283               	bcf	3,5	;RP0=0, select bank0
  2305  040C  00CA               	movwf	initPB4@bValue
  2306                           
  2307                           ;main.c: 167: if( bValue )
  2308  040D  084A               	movf	initPB4@bValue,w
  2309  040E  1903               	btfsc	3,2
  2310  040F  2C13               	goto	l688
  2311                           
  2312                           ;main.c: 169: TRISB4 = 1;
  2313  0410  1683               	bsf	3,5	;RP0=1, select bank1
  2314  0411  1606               	bsf	6,4
  2315  0412  0008               	return
  2316  0413                     l688:	
  2317                           
  2318                           ;main.c: 173: else
  2319                           ;main.c: 175: TRISB4= 0;
  2320  0413  1683               	bsf	3,5	;RP0=1, select bank1
  2321  0414  1206               	bcf	6,4
  2322  0415  0008               	return
  2323  0416                     __end_of_initPB4:	
  2324  0416                     __ptext858:	
  2325 ;; =============== function _setPB5 ends ============
  2326                           
  2327                           
  2328 ;; *************** function _initPB5 *****************
  2329 ;; Defined at:
  2330 ;;		line 200 in file "D:\develop\190625\AK7030-OTP\main.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;  bValue          1    wreg     unsigned char 
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;  bValue          1   11[BANK0 ] unsigned char 
  2335 ;; Return value:  Size  Location     Type
  2336 ;;		None               void
  2337 ;; Registers used:
  2338 ;;		wreg
  2339 ;; Tracked objects:
  2340 ;;		On entry : 17F/20
  2341 ;;		On exit  : 17F/20
  2342 ;;		Unchanged: FFE80/0
  2343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2344 ;;      Params:         0       0       0       0       0
  2345 ;;      Locals:         0       1       0       0       0
  2346 ;;      Temps:          0       0       0       0       0
  2347 ;;      Totals:         0       1       0       0       0
  2348 ;;Total ram usage:        1 bytes
  2349 ;; Hardware stack levels used:    1
  2350 ;; Hardware stack levels required when called:    4
  2351 ;; This function calls:
  2352 ;;		Nothing
  2353 ;; This function is called by:
  2354 ;;		_initPin
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357  0416                     _initPB5:	
  2358                           
  2359                           ; Regs used in _initPB5: [wreg]
  2360                           ;initPB5@bValue stored from wreg
  2361  0416  1283               	bcf	3,5	;RP0=0, select bank0
  2362  0417  00CA               	movwf	initPB5@bValue
  2363                           
  2364                           ;main.c: 201: if( bValue )
  2365  0418  084A               	movf	initPB5@bValue,w
  2366  0419  1903               	btfsc	3,2
  2367  041A  2C1E               	goto	l698
  2368                           
  2369                           ;main.c: 203: TRISB5 = 1;
  2370  041B  1683               	bsf	3,5	;RP0=1, select bank1
  2371  041C  1686               	bsf	6,5
  2372  041D  0008               	return
  2373  041E                     l698:	
  2374                           
  2375                           ;main.c: 207: else
  2376                           ;main.c: 209: TRISB5= 0;
  2377  041E  1683               	bsf	3,5	;RP0=1, select bank1
  2378  041F  1286               	bcf	6,5
  2379  0420  0008               	return
  2380  0421                     __end_of_initPB5:	
  2381                           
  2382                           	psect	text837
  2383  04BF                     __ptext837:	
  2384 ;; =============== function _FilterCh13 ends ============
  2385                           
  2386                           
  2387 ;; *************** function _isFinishedOneHoursTimer *****************
  2388 ;; Defined at:
  2389 ;;		line 576 in file "D:\develop\190625\AK7030-OTP\common.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;		None
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;		None
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  1    wreg      unsigned char 
  2396 ;; Registers used:
  2397 ;;		wreg, status,2, status,0
  2398 ;; Tracked objects:
  2399 ;;		On entry : 160/0
  2400 ;;		On exit  : 160/0
  2401 ;;		Unchanged: FFE9F/0
  2402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2403 ;;      Params:         0       0       0       0       0
  2404 ;;      Locals:         0       0       0       0       0
  2405 ;;      Temps:          0       0       0       0       0
  2406 ;;      Totals:         0       0       0       0       0
  2407 ;;Total ram usage:        0 bytes
  2408 ;; Hardware stack levels used:    1
  2409 ;; Hardware stack levels required when called:    4
  2410 ;; This function calls:
  2411 ;;		Nothing
  2412 ;; This function is called by:
  2413 ;;		_main
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416  04BF                     _isFinishedOneHoursTimer:	
  2417                           
  2418                           ;common.c: 577: if((uiOneHourTimer == 0) && bOneHourTimerStartFlag)
  2419                           
  2420                           ; Regs used in _isFinishedOneHoursTimer: [wreg+status,2+status,0]
  2421  04BF  0823               	movf	_uiOneHourTimer+1,w
  2422  04C0  0422               	iorwf	_uiOneHourTimer,w
  2423  04C1  1D03               	skipz
  2424  04C2  3400               	retlw	0
  2425  04C3  0834               	movf	_bOneHourTimerStartFlag,w
  2426  04C4  1903               	btfsc	3,2
  2427  04C5  3400               	retlw	0
  2428  04C6  3001               	movlw	1
  2429                           
  2430                           ;common.c: 578: {
  2431                           ;common.c: 579: bOneHourTimerStartFlag = 0;
  2432  04C7  01B4               	clrf	_bOneHourTimerStartFlag
  2433                           
  2434                           ;common.c: 580: return 1;
  2435  04C8  0008               	return
  2436  04C9                     __end_of_isFinishedOneHoursTimer:	
  2437                           ;common.c: 582: else
  2438                           ;common.c: 583: return 0;
  2439                           
  2440                           
  2441                           	psect	text838
  2442  0487                     __ptext838:	
  2443 ;; =============== function _isFinishedOneHoursTimer ends ============
  2444                           
  2445                           
  2446 ;; *************** function _startOneHoursTimer *****************
  2447 ;; Defined at:
  2448 ;;		line 493 in file "D:\develop\190625\AK7030-OTP\common.c"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;  uiSetTime       2   11[BANK0 ] unsigned int 
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;		None
  2453 ;; Return value:  Size  Location     Type
  2454 ;;		None               void
  2455 ;; Registers used:
  2456 ;;		wreg, status,2, status,0
  2457 ;; Tracked objects:
  2458 ;;		On entry : 60/0
  2459 ;;		On exit  : 60/0
  2460 ;;		Unchanged: FFF9F/0
  2461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2462 ;;      Params:         0       2       0       0       0
  2463 ;;      Locals:         0       0       0       0       0
  2464 ;;      Temps:          0       0       0       0       0
  2465 ;;      Totals:         0       2       0       0       0
  2466 ;;Total ram usage:        2 bytes
  2467 ;; Hardware stack levels used:    1
  2468 ;; Hardware stack levels required when called:    4
  2469 ;; This function calls:
  2470 ;;		Nothing
  2471 ;; This function is called by:
  2472 ;;		_main
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475  0487                     _startOneHoursTimer:	
  2476                           
  2477                           ;common.c: 494: if(( 0 == uiOneHourTimer ) && ( 0 == bOneHourTimerStartFlag ))
  2478                           
  2479                           ; Regs used in _startOneHoursTimer: [wreg+status,2+status,0]
  2480  0487  0823               	movf	_uiOneHourTimer+1,w
  2481  0488  0422               	iorwf	_uiOneHourTimer,w
  2482  0489  1D03               	skipz
  2483  048A  0008               	return
  2484  048B  08B4               	movf	_bOneHourTimerStartFlag,f
  2485  048C  1D03               	skipz
  2486  048D  0008               	return
  2487                           
  2488                           ;common.c: 495: {
  2489                           ;common.c: 496: uiOneHourTimer = uiSetTime;
  2490  048E  084B               	movf	startOneHoursTimer@uiSetTime+1,w
  2491  048F  00A3               	movwf	_uiOneHourTimer+1
  2492  0490  084A               	movf	startOneHoursTimer@uiSetTime,w
  2493  0491  00A2               	movwf	_uiOneHourTimer
  2494                           
  2495                           ;common.c: 497: bOneHourTimerStartFlag = 1;
  2496  0492  01B4               	clrf	_bOneHourTimerStartFlag
  2497  0493  0AB4               	incf	_bOneHourTimerStartFlag,f
  2498  0494  0008               	return
  2499  0495                     __end_of_startOneHoursTimer:	
  2500                           
  2501                           	psect	text839
  2502  04C9                     __ptext839:	
  2503 ;; =============== function _startOneHoursTimer ends ============
  2504                           
  2505                           
  2506 ;; *************** function _isFinishedThreeHoursTimer *****************
  2507 ;; Defined at:
  2508 ;;		line 563 in file "D:\develop\190625\AK7030-OTP\common.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;		None
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;		None
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  1    wreg      unsigned char 
  2515 ;; Registers used:
  2516 ;;		wreg, status,2, status,0
  2517 ;; Tracked objects:
  2518 ;;		On entry : 60/0
  2519 ;;		On exit  : 60/0
  2520 ;;		Unchanged: FFF9F/0
  2521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2522 ;;      Params:         0       0       0       0       0
  2523 ;;      Locals:         0       0       0       0       0
  2524 ;;      Temps:          0       0       0       0       0
  2525 ;;      Totals:         0       0       0       0       0
  2526 ;;Total ram usage:        0 bytes
  2527 ;; Hardware stack levels used:    1
  2528 ;; Hardware stack levels required when called:    4
  2529 ;; This function calls:
  2530 ;;		Nothing
  2531 ;; This function is called by:
  2532 ;;		_main
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535  04C9                     _isFinishedThreeHoursTimer:	
  2536                           
  2537                           ;common.c: 564: if((uiSmallTimer == 0) && bSmallTimerStartFlag)
  2538                           
  2539                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  2540  04C9  0825               	movf	_uiSmallTimer+1,w
  2541  04CA  0424               	iorwf	_uiSmallTimer,w
  2542  04CB  1D03               	skipz
  2543  04CC  3400               	retlw	0
  2544  04CD  0835               	movf	_bSmallTimerStartFlag,w
  2545  04CE  1903               	btfsc	3,2
  2546  04CF  3400               	retlw	0
  2547  04D0  3001               	movlw	1
  2548                           
  2549                           ;common.c: 565: {
  2550                           ;common.c: 566: bSmallTimerStartFlag = 0;
  2551  04D1  01B5               	clrf	_bSmallTimerStartFlag
  2552                           
  2553                           ;common.c: 567: return 1;
  2554  04D2  0008               	return
  2555  04D3                     __end_of_isFinishedThreeHoursTimer:	
  2556                           ;common.c: 569: else
  2557                           ;common.c: 570: return 0;
  2558                           
  2559                           
  2560                           	psect	text840
  2561  0495                     __ptext840:	
  2562 ;; =============== function _isFinishedThreeHoursTimer ends ============
  2563                           
  2564                           
  2565 ;; *************** function _startThreeHoursTimer *****************
  2566 ;; Defined at:
  2567 ;;		line 480 in file "D:\develop\190625\AK7030-OTP\common.c"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;  uiSetTime       2   11[BANK0 ] unsigned int 
  2570 ;; Auto vars:     Size  Location     Type
  2571 ;;		None
  2572 ;; Return value:  Size  Location     Type
  2573 ;;		None               void
  2574 ;; Registers used:
  2575 ;;		wreg, status,2, status,0
  2576 ;; Tracked objects:
  2577 ;;		On entry : 60/0
  2578 ;;		On exit  : 60/0
  2579 ;;		Unchanged: FFF9F/0
  2580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2581 ;;      Params:         0       2       0       0       0
  2582 ;;      Locals:         0       0       0       0       0
  2583 ;;      Temps:          0       0       0       0       0
  2584 ;;      Totals:         0       2       0       0       0
  2585 ;;Total ram usage:        2 bytes
  2586 ;; Hardware stack levels used:    1
  2587 ;; Hardware stack levels required when called:    4
  2588 ;; This function calls:
  2589 ;;		Nothing
  2590 ;; This function is called by:
  2591 ;;		_main
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594  0495                     _startThreeHoursTimer:	
  2595                           
  2596                           ;common.c: 481: if(( 0 == uiSmallTimer ) && ( 0 == bSmallTimerStartFlag ))
  2597                           
  2598                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  2599  0495  0825               	movf	_uiSmallTimer+1,w
  2600  0496  0424               	iorwf	_uiSmallTimer,w
  2601  0497  1D03               	skipz
  2602  0498  0008               	return
  2603  0499  08B5               	movf	_bSmallTimerStartFlag,f
  2604  049A  1D03               	skipz
  2605  049B  0008               	return
  2606                           
  2607                           ;common.c: 482: {
  2608                           ;common.c: 483: uiSmallTimer = uiSetTime;
  2609  049C  084B               	movf	startThreeHoursTimer@uiSetTime+1,w
  2610  049D  00A5               	movwf	_uiSmallTimer+1
  2611  049E  084A               	movf	startThreeHoursTimer@uiSetTime,w
  2612  049F  00A4               	movwf	_uiSmallTimer
  2613                           
  2614                           ;common.c: 484: bSmallTimerStartFlag = 1;
  2615  04A0  01B5               	clrf	_bSmallTimerStartFlag
  2616  04A1  0AB5               	incf	_bSmallTimerStartFlag,f
  2617  04A2  0008               	return
  2618  04A3                     __end_of_startThreeHoursTimer:	
  2619                           
  2620                           	psect	text841
  2621  04D3                     __ptext841:	
  2622 ;; =============== function _startThreeHoursTimer ends ============
  2623                           
  2624                           
  2625 ;; *************** function _isFinishedTwelveHoursTimer *****************
  2626 ;; Defined at:
  2627 ;;		line 552 in file "D:\develop\190625\AK7030-OTP\common.c"
  2628 ;; Parameters:    Size  Location     Type
  2629 ;;		None
  2630 ;; Auto vars:     Size  Location     Type
  2631 ;;		None
  2632 ;; Return value:  Size  Location     Type
  2633 ;;                  1    wreg      unsigned char 
  2634 ;; Registers used:
  2635 ;;		wreg, status,2, status,0
  2636 ;; Tracked objects:
  2637 ;;		On entry : 60/0
  2638 ;;		On exit  : 60/0
  2639 ;;		Unchanged: FFF9F/0
  2640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2641 ;;      Params:         0       0       0       0       0
  2642 ;;      Locals:         0       0       0       0       0
  2643 ;;      Temps:          0       0       0       0       0
  2644 ;;      Totals:         0       0       0       0       0
  2645 ;;Total ram usage:        0 bytes
  2646 ;; Hardware stack levels used:    1
  2647 ;; Hardware stack levels required when called:    4
  2648 ;; This function calls:
  2649 ;;		Nothing
  2650 ;; This function is called by:
  2651 ;;		_main
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654  04D3                     _isFinishedTwelveHoursTimer:	
  2655                           
  2656                           ;common.c: 553: if(( uiBigTimer == 0 ) && bBigTimerStartFlag )
  2657                           
  2658                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  2659  04D3  0821               	movf	_uiBigTimer+1,w
  2660  04D4  0420               	iorwf	_uiBigTimer,w
  2661  04D5  1D03               	skipz
  2662  04D6  3400               	retlw	0
  2663  04D7  0833               	movf	_bBigTimerStartFlag,w
  2664  04D8  1903               	btfsc	3,2
  2665  04D9  3400               	retlw	0
  2666  04DA  3001               	movlw	1
  2667                           
  2668                           ;common.c: 554: {
  2669                           ;common.c: 555: bBigTimerStartFlag = 0;
  2670  04DB  01B3               	clrf	_bBigTimerStartFlag
  2671                           
  2672                           ;common.c: 556: return 1;
  2673  04DC  0008               	return
  2674  04DD                     __end_of_isFinishedTwelveHoursTimer:	
  2675                           ;common.c: 558: else
  2676                           ;common.c: 559: return 0;
  2677                           
  2678                           
  2679                           	psect	text842
  2680  04A3                     __ptext842:	
  2681 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  2682                           
  2683                           
  2684 ;; *************** function _startTwelveHourTimer *****************
  2685 ;; Defined at:
  2686 ;;		line 432 in file "D:\develop\190625\AK7030-OTP\common.c"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;  uiSetTime       2   11[BANK0 ] unsigned int 
  2689 ;; Auto vars:     Size  Location     Type
  2690 ;;		None
  2691 ;; Return value:  Size  Location     Type
  2692 ;;		None               void
  2693 ;; Registers used:
  2694 ;;		wreg, status,2, status,0
  2695 ;; Tracked objects:
  2696 ;;		On entry : 60/0
  2697 ;;		On exit  : 60/0
  2698 ;;		Unchanged: FFF9F/0
  2699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2700 ;;      Params:         0       2       0       0       0
  2701 ;;      Locals:         0       0       0       0       0
  2702 ;;      Temps:          0       0       0       0       0
  2703 ;;      Totals:         0       2       0       0       0
  2704 ;;Total ram usage:        2 bytes
  2705 ;; Hardware stack levels used:    1
  2706 ;; Hardware stack levels required when called:    4
  2707 ;; This function calls:
  2708 ;;		Nothing
  2709 ;; This function is called by:
  2710 ;;		_main
  2711 ;; This function uses a non-reentrant model
  2712 ;;
  2713  04A3                     _startTwelveHourTimer:	
  2714                           
  2715                           ;common.c: 433: if((0 == uiBigTimer) && ( 0 == bBigTimerStartFlag))
  2716                           
  2717                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  2718  04A3  0821               	movf	_uiBigTimer+1,w
  2719  04A4  0420               	iorwf	_uiBigTimer,w
  2720  04A5  1D03               	skipz
  2721  04A6  0008               	return
  2722  04A7  08B3               	movf	_bBigTimerStartFlag,f
  2723  04A8  1D03               	skipz
  2724  04A9  0008               	return
  2725                           
  2726                           ;common.c: 434: {
  2727                           ;common.c: 435: uiBigTimer = uiSetTime;
  2728  04AA  084B               	movf	startTwelveHourTimer@uiSetTime+1,w
  2729  04AB  00A1               	movwf	_uiBigTimer+1
  2730  04AC  084A               	movf	startTwelveHourTimer@uiSetTime,w
  2731  04AD  00A0               	movwf	_uiBigTimer
  2732                           
  2733                           ;common.c: 436: bBigTimerStartFlag = 1;
  2734  04AE  01B3               	clrf	_bBigTimerStartFlag
  2735  04AF  0AB3               	incf	_bBigTimerStartFlag,f
  2736  04B0  0008               	return
  2737  04B1                     __end_of_startTwelveHourTimer:	
  2738                           
  2739                           	psect	text843
  2740  0508                     __ptext843:	
  2741 ;; =============== function _startTwelveHourTimer ends ============
  2742                           
  2743                           
  2744 ;; *************** function _clearTwentyMinTimer *****************
  2745 ;; Defined at:
  2746 ;;		line 473 in file "D:\develop\190625\AK7030-OTP\common.c"
  2747 ;; Parameters:    Size  Location     Type
  2748 ;;		None
  2749 ;; Auto vars:     Size  Location     Type
  2750 ;;		None
  2751 ;; Return value:  Size  Location     Type
  2752 ;;		None               void
  2753 ;; Registers used:
  2754 ;;		status,2
  2755 ;; Tracked objects:
  2756 ;;		On entry : 60/0
  2757 ;;		On exit  : 60/0
  2758 ;;		Unchanged: FFF9F/0
  2759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2760 ;;      Params:         0       0       0       0       0
  2761 ;;      Locals:         0       0       0       0       0
  2762 ;;      Temps:          0       0       0       0       0
  2763 ;;      Totals:         0       0       0       0       0
  2764 ;;Total ram usage:        0 bytes
  2765 ;; Hardware stack levels used:    1
  2766 ;; Hardware stack levels required when called:    4
  2767 ;; This function calls:
  2768 ;;		Nothing
  2769 ;; This function is called by:
  2770 ;;		_main
  2771 ;; This function uses a non-reentrant model
  2772 ;;
  2773  0508                     _clearTwentyMinTimer:	
  2774                           
  2775                           ;common.c: 474: uiTwentyMinTimer = 0;
  2776                           
  2777                           ; Regs used in _clearTwentyMinTimer: [status,2]
  2778  0508  01A6               	clrf	_uiTwentyMinTimer
  2779  0509  01A7               	clrf	_uiTwentyMinTimer+1
  2780                           
  2781                           ;common.c: 475: bTwentyMinStartFlag = 0;
  2782  050A  01B6               	clrf	_bTwentyMinStartFlag
  2783  050B  0008               	return
  2784  050C                     __end_of_clearTwentyMinTimer:	
  2785                           
  2786                           	psect	text844
  2787  04DD                     __ptext844:	
  2788 ;; =============== function _clearTwentyMinTimer ends ============
  2789                           
  2790                           
  2791 ;; *************** function _isFinishedTwentyMinTimer *****************
  2792 ;; Defined at:
  2793 ;;		line 528 in file "D:\develop\190625\AK7030-OTP\common.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;		None
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;		None
  2798 ;; Return value:  Size  Location     Type
  2799 ;;                  1    wreg      unsigned char 
  2800 ;; Registers used:
  2801 ;;		wreg, status,2, status,0
  2802 ;; Tracked objects:
  2803 ;;		On entry : 60/0
  2804 ;;		On exit  : 60/0
  2805 ;;		Unchanged: FFF9F/0
  2806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2807 ;;      Params:         0       0       0       0       0
  2808 ;;      Locals:         0       0       0       0       0
  2809 ;;      Temps:          0       0       0       0       0
  2810 ;;      Totals:         0       0       0       0       0
  2811 ;;Total ram usage:        0 bytes
  2812 ;; Hardware stack levels used:    1
  2813 ;; Hardware stack levels required when called:    4
  2814 ;; This function calls:
  2815 ;;		Nothing
  2816 ;; This function is called by:
  2817 ;;		_main
  2818 ;; This function uses a non-reentrant model
  2819 ;;
  2820  04DD                     _isFinishedTwentyMinTimer:	
  2821                           
  2822                           ;common.c: 529: if(( 0 == uiTwentyMinTimer ) && bTwentyMinStartFlag )
  2823                           
  2824                           ; Regs used in _isFinishedTwentyMinTimer: [wreg+status,2+status,0]
  2825  04DD  0827               	movf	_uiTwentyMinTimer+1,w
  2826  04DE  0426               	iorwf	_uiTwentyMinTimer,w
  2827  04DF  1D03               	skipz
  2828  04E0  3400               	retlw	0
  2829  04E1  0836               	movf	_bTwentyMinStartFlag,w
  2830  04E2  1903               	btfsc	3,2
  2831  04E3  3400               	retlw	0
  2832  04E4  3001               	movlw	1
  2833                           
  2834                           ;common.c: 530: {
  2835                           ;common.c: 531: bTwentyMinStartFlag = 0;
  2836  04E5  01B6               	clrf	_bTwentyMinStartFlag
  2837                           
  2838                           ;common.c: 532: return 1;
  2839  04E6  0008               	return
  2840  04E7                     __end_of_isFinishedTwentyMinTimer:	
  2841                           ;common.c: 534: else
  2842                           ;common.c: 535: return 0;
  2843                           
  2844                           
  2845                           	psect	text845
  2846  051F                     __ptext845:	
  2847 ;; =============== function _isFinishedTwentyMinTimer ends ============
  2848                           
  2849                           
  2850 ;; *************** function _clrSampeTime *****************
  2851 ;; Defined at:
  2852 ;;		line 598 in file "D:\develop\190625\AK7030-OTP\common.c"
  2853 ;; Parameters:    Size  Location     Type
  2854 ;;		None
  2855 ;; Auto vars:     Size  Location     Type
  2856 ;;		None
  2857 ;; Return value:  Size  Location     Type
  2858 ;;		None               void
  2859 ;; Registers used:
  2860 ;;		status,2
  2861 ;; Tracked objects:
  2862 ;;		On entry : 60/0
  2863 ;;		On exit  : 60/0
  2864 ;;		Unchanged: FFF9F/0
  2865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2866 ;;      Params:         0       0       0       0       0
  2867 ;;      Locals:         0       0       0       0       0
  2868 ;;      Temps:          0       0       0       0       0
  2869 ;;      Totals:         0       0       0       0       0
  2870 ;;Total ram usage:        0 bytes
  2871 ;; Hardware stack levels used:    1
  2872 ;; Hardware stack levels required when called:    4
  2873 ;; This function calls:
  2874 ;;		Nothing
  2875 ;; This function is called by:
  2876 ;;		_main
  2877 ;; This function uses a non-reentrant model
  2878 ;;
  2879  051F                     _clrSampeTime:	
  2880                           
  2881                           ;common.c: 599: timer.timer10msStopWatch = 0;
  2882                           
  2883                           ; Regs used in _clrSampeTime: [status,2]
  2884  051F  01B7               	clrf	_timer
  2885  0520  0008               	return
  2886  0521                     __end_of_clrSampeTime:	
  2887                           
  2888                           	psect	text846
  2889  0501                     __ptext846:	
  2890 ;; =============== function _clrSampeTime ends ============
  2891                           
  2892                           
  2893 ;; *************** function _isPermitSampleTime *****************
  2894 ;; Defined at:
  2895 ;;		line 588 in file "D:\develop\190625\AK7030-OTP\common.c"
  2896 ;; Parameters:    Size  Location     Type
  2897 ;;		None
  2898 ;; Auto vars:     Size  Location     Type
  2899 ;;		None
  2900 ;; Return value:  Size  Location     Type
  2901 ;;                  1    wreg      unsigned char 
  2902 ;; Registers used:
  2903 ;;		wreg
  2904 ;; Tracked objects:
  2905 ;;		On entry : 0/0
  2906 ;;		On exit  : 60/0
  2907 ;;		Unchanged: FFF9F/0
  2908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2909 ;;      Params:         0       0       0       0       0
  2910 ;;      Locals:         0       0       0       0       0
  2911 ;;      Temps:          0       0       0       0       0
  2912 ;;      Totals:         0       0       0       0       0
  2913 ;;Total ram usage:        0 bytes
  2914 ;; Hardware stack levels used:    1
  2915 ;; Hardware stack levels required when called:    4
  2916 ;; This function calls:
  2917 ;;		Nothing
  2918 ;; This function is called by:
  2919 ;;		_main
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922  0501                     _isPermitSampleTime:	
  2923                           
  2924                           ;common.c: 589: if(timer.timer10msStopWatch >= 10)
  2925                           
  2926                           ; Regs used in _isPermitSampleTime: [wreg]
  2927  0501  300A               	movlw	10
  2928  0502  1283               	bcf	3,5	;RP0=0, select bank0
  2929  0503  1303               	bcf	3,6	;RP1=0, select bank0
  2930  0504  0237               	subwf	_timer,w
  2931  0505  1803               	btfsc	3,0
  2932                           
  2933                           ;common.c: 590: {
  2934                           ;common.c: 591: return 1;
  2935  0506  3401               	retlw	1
  2936                           
  2937                           ;common.c: 593: else
  2938                           ;common.c: 594: return 0;
  2939  0507  3400               	retlw	0
  2940  0508                     __end_of_isPermitSampleTime:	
  2941                           
  2942                           	psect	text847
  2943  050C                     __ptext847:	
  2944 ;; =============== function _isPermitSampleTime ends ============
  2945                           
  2946                           
  2947 ;; *************** function _adc_start *****************
  2948 ;; Defined at:
  2949 ;;		line 101 in file "D:\develop\190625\AK7030-OTP\periph.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;		None
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;		None
  2954 ;; Return value:  Size  Location     Type
  2955 ;;		None               void
  2956 ;; Registers used:
  2957 ;;		None
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 60/0
  2961 ;;		Unchanged: FFF9F/0
  2962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2963 ;;      Params:         0       0       0       0       0
  2964 ;;      Locals:         0       0       0       0       0
  2965 ;;      Temps:          0       0       0       0       0
  2966 ;;      Totals:         0       0       0       0       0
  2967 ;;Total ram usage:        0 bytes
  2968 ;; Hardware stack levels used:    1
  2969 ;; Hardware stack levels required when called:    4
  2970 ;; This function calls:
  2971 ;;		Nothing
  2972 ;; This function is called by:
  2973 ;;		_main
  2974 ;; This function uses a non-reentrant model
  2975 ;;
  2976  050C                     _adc_start:	
  2977                           
  2978                           ;periph.c: 102: GO=1;
  2979                           
  2980                           ; Regs used in _adc_start: []
  2981  050C  1283               	bcf	3,5	;RP0=0, select bank0
  2982  050D  1303               	bcf	3,6	;RP1=0, select bank0
  2983  050E  149F               	bsf	31,1
  2984  050F  0008               	return
  2985  0510                     __end_of_adc_start:	
  2986                           
  2987                           	psect	text848
  2988  04B1                     __ptext848:	
  2989 ;; =============== function _adc_start ends ============
  2990                           
  2991                           
  2992 ;; *************** function _startTwentyMinTimer *****************
  2993 ;; Defined at:
  2994 ;;		line 518 in file "D:\develop\190625\AK7030-OTP\common.c"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;  uiSetValue      2   11[BANK0 ] unsigned int 
  2997 ;; Auto vars:     Size  Location     Type
  2998 ;;		None
  2999 ;; Return value:  Size  Location     Type
  3000 ;;		None               void
  3001 ;; Registers used:
  3002 ;;		wreg, status,2, status,0
  3003 ;; Tracked objects:
  3004 ;;		On entry : 17F/0
  3005 ;;		On exit  : 17F/0
  3006 ;;		Unchanged: FFE80/0
  3007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3008 ;;      Params:         0       2       0       0       0
  3009 ;;      Locals:         0       0       0       0       0
  3010 ;;      Temps:          0       0       0       0       0
  3011 ;;      Totals:         0       2       0       0       0
  3012 ;;Total ram usage:        2 bytes
  3013 ;; Hardware stack levels used:    1
  3014 ;; Hardware stack levels required when called:    4
  3015 ;; This function calls:
  3016 ;;		Nothing
  3017 ;; This function is called by:
  3018 ;;		_main
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021  04B1                     _startTwentyMinTimer:	
  3022                           
  3023                           ;common.c: 519: if(( 0 == uiTwentyMinTimer) && ( 0 == bTwentyMinStartFlag))
  3024                           
  3025                           ; Regs used in _startTwentyMinTimer: [wreg+status,2+status,0]
  3026  04B1  0827               	movf	_uiTwentyMinTimer+1,w
  3027  04B2  0426               	iorwf	_uiTwentyMinTimer,w
  3028  04B3  1D03               	skipz
  3029  04B4  0008               	return
  3030  04B5  08B6               	movf	_bTwentyMinStartFlag,f
  3031  04B6  1D03               	skipz
  3032  04B7  0008               	return
  3033                           
  3034                           ;common.c: 520: {
  3035                           ;common.c: 521: uiTwentyMinTimer = uiSetValue;
  3036  04B8  084B               	movf	startTwentyMinTimer@uiSetValue+1,w
  3037  04B9  00A7               	movwf	_uiTwentyMinTimer+1
  3038  04BA  084A               	movf	startTwentyMinTimer@uiSetValue,w
  3039  04BB  00A6               	movwf	_uiTwentyMinTimer
  3040                           
  3041                           ;common.c: 522: bTwentyMinStartFlag = 1;
  3042  04BC  01B6               	clrf	_bTwentyMinStartFlag
  3043  04BD  0AB6               	incf	_bTwentyMinStartFlag,f
  3044  04BE  0008               	return
  3045  04BF                     __end_of_startTwentyMinTimer:	
  3046                           
  3047                           	psect	text849
  3048  045D                     __ptext849:	
  3049 ;; =============== function _startTwentyMinTimer ends ============
  3050                           
  3051                           
  3052 ;; *************** function _adc_test_init *****************
  3053 ;; Defined at:
  3054 ;;		line 85 in file "D:\develop\190625\AK7030-OTP\periph.c"
  3055 ;; Parameters:    Size  Location     Type
  3056 ;;  channel         1    wreg     unsigned char 
  3057 ;;  ref             1   11[BANK0 ] unsigned char 
  3058 ;; Auto vars:     Size  Location     Type
  3059 ;;  channel         1   13[BANK0 ] unsigned char 
  3060 ;; Return value:  Size  Location     Type
  3061 ;;		None               void
  3062 ;; Registers used:
  3063 ;;		wreg, status,2, status,0
  3064 ;; Tracked objects:
  3065 ;;		On entry : 17F/0
  3066 ;;		On exit  : 17F/20
  3067 ;;		Unchanged: FFE80/0
  3068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3069 ;;      Params:         0       1       0       0       0
  3070 ;;      Locals:         0       1       0       0       0
  3071 ;;      Temps:          0       1       0       0       0
  3072 ;;      Totals:         0       3       0       0       0
  3073 ;;Total ram usage:        3 bytes
  3074 ;; Hardware stack levels used:    1
  3075 ;; Hardware stack levels required when called:    4
  3076 ;; This function calls:
  3077 ;;		Nothing
  3078 ;; This function is called by:
  3079 ;;		_main
  3080 ;; This function uses a non-reentrant model
  3081 ;;
  3082  045D                     _adc_test_init:	
  3083                           
  3084                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  3085                           ;adc_test_init@channel stored from wreg
  3086  045D  00CC               	movwf	adc_test_init@channel
  3087                           
  3088                           ;periph.c: 86: ADCON0 = 0x00;
  3089  045E  019F               	clrf	31	;volatile
  3090                           
  3091                           ;periph.c: 87: ADCON0|=channel<<2;
  3092  045F  00CB               	movwf	??_adc_test_init
  3093  0460  1003               	clrc
  3094  0461  0DCB               	rlf	??_adc_test_init,f
  3095  0462  1003               	clrc
  3096  0463  0D4B               	rlf	??_adc_test_init,w
  3097  0464  049F               	iorwf	31,f	;volatile
  3098                           
  3099                           ;periph.c: 89: ADCON1|=ref<<6;
  3100  0465  084A               	movf	adc_test_init@ref,w
  3101  0466  00CB               	movwf	??_adc_test_init
  3102  0467  0CCB               	rrf	??_adc_test_init,f
  3103  0468  0CCB               	rrf	??_adc_test_init,f
  3104  0469  0C4B               	rrf	??_adc_test_init,w
  3105  046A  39C0               	andlw	192
  3106  046B  1683               	bsf	3,5	;RP0=1, select bank1
  3107  046C  049F               	iorwf	31,f	;volatile
  3108                           
  3109                           ;periph.c: 90: ADON=1;
  3110  046D  1283               	bcf	3,5	;RP0=0, select bank0
  3111  046E  141F               	bsf	31,0
  3112                           
  3113                           ;periph.c: 91: ADIE=1;
  3114  046F  1683               	bsf	3,5	;RP0=1, select bank1
  3115  0470  150D               	bsf	13,2
  3116  0471  0008               	return
  3117  0472                     __end_of_adc_test_init:	
  3118                           
  3119                           	psect	text850
  3120  051C                     __ptext850:	
  3121 ;; =============== function _adc_test_init ends ============
  3122                           
  3123                           
  3124 ;; *************** function _timer1_interrupt_config *****************
  3125 ;; Defined at:
  3126 ;;		line 307 in file "D:\develop\190625\AK7030-OTP\common.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;		None
  3129 ;; Auto vars:     Size  Location     Type
  3130 ;;		None
  3131 ;; Return value:  Size  Location     Type
  3132 ;;		None               void
  3133 ;; Registers used:
  3134 ;;		None
  3135 ;; Tracked objects:
  3136 ;;		On entry : 17F/20
  3137 ;;		On exit  : 17F/20
  3138 ;;		Unchanged: FFE80/0
  3139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3140 ;;      Params:         0       0       0       0       0
  3141 ;;      Locals:         0       0       0       0       0
  3142 ;;      Temps:          0       0       0       0       0
  3143 ;;      Totals:         0       0       0       0       0
  3144 ;;Total ram usage:        0 bytes
  3145 ;; Hardware stack levels used:    1
  3146 ;; Hardware stack levels required when called:    4
  3147 ;; This function calls:
  3148 ;;		Nothing
  3149 ;; This function is called by:
  3150 ;;		_main
  3151 ;; This function uses a non-reentrant model
  3152 ;;
  3153  051C                     _timer1_interrupt_config:	
  3154                           
  3155                           ;common.c: 308: GIE = 1;
  3156                           
  3157                           ; Regs used in _timer1_interrupt_config: []
  3158  051C  178B               	bsf	11,7
  3159                           
  3160                           ;common.c: 309: PEIE = 1;
  3161  051D  170B               	bsf	11,6
  3162  051E  0008               	return
  3163  051F                     __end_of_timer1_interrupt_config:	
  3164                           
  3165                           	psect	text851
  3166  04E7                     __ptext851:	
  3167 ;; =============== function _timer1_interrupt_config ends ============
  3168                           
  3169                           
  3170 ;; *************** function _timer1_config *****************
  3171 ;; Defined at:
  3172 ;;		line 295 in file "D:\develop\190625\AK7030-OTP\common.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;		None
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;		None
  3177 ;; Return value:  Size  Location     Type
  3178 ;;		None               void
  3179 ;; Registers used:
  3180 ;;		wreg
  3181 ;; Tracked objects:
  3182 ;;		On entry : 17F/40
  3183 ;;		On exit  : 17F/20
  3184 ;;		Unchanged: FFE80/0
  3185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3186 ;;      Params:         0       0       0       0       0
  3187 ;;      Locals:         0       0       0       0       0
  3188 ;;      Temps:          0       0       0       0       0
  3189 ;;      Totals:         0       0       0       0       0
  3190 ;;Total ram usage:        0 bytes
  3191 ;; Hardware stack levels used:    1
  3192 ;; Hardware stack levels required when called:    4
  3193 ;; This function calls:
  3194 ;;		Nothing
  3195 ;; This function is called by:
  3196 ;;		_main
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199  04E7                     _timer1_config:	
  3200                           
  3201                           ;common.c: 297: TMR1H=0xCF;
  3202                           
  3203                           ; Regs used in _timer1_config: [wreg]
  3204  04E7  30CF               	movlw	207
  3205  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  3206  04E9  008F               	movwf	15	;volatile
  3207                           
  3208                           ;common.c: 298: TMR1L=0x2C;
  3209  04EA  302C               	movlw	44
  3210  04EB  008E               	movwf	14	;volatile
  3211                           
  3212                           ;common.c: 299: T1CON=0xE1;
  3213  04EC  30E1               	movlw	225
  3214  04ED  0090               	movwf	16	;volatile
  3215                           
  3216                           ;common.c: 300: TMR1IE=1;
  3217  04EE  1683               	bsf	3,5	;RP0=1, select bank1
  3218  04EF  140C               	bsf	12,0
  3219  04F0  0008               	return
  3220  04F1                     __end_of_timer1_config:	
  3221                           
  3222                           	psect	text852
  3223  04F9                     __ptext852:	
  3224 ;; =============== function _timer1_config ends ============
  3225                           
  3226                           
  3227 ;; *************** function _clock_config *****************
  3228 ;; Defined at:
  3229 ;;		line 287 in file "D:\develop\190625\AK7030-OTP\common.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;		None
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;		None
  3234 ;; Return value:  Size  Location     Type
  3235 ;;		None               void
  3236 ;; Registers used:
  3237 ;;		wreg, status,2
  3238 ;; Tracked objects:
  3239 ;;		On entry : 17F/20
  3240 ;;		On exit  : 17F/40
  3241 ;;		Unchanged: FFE80/0
  3242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3243 ;;      Params:         0       0       0       0       0
  3244 ;;      Locals:         0       0       0       0       0
  3245 ;;      Temps:          0       0       0       0       0
  3246 ;;      Totals:         0       0       0       0       0
  3247 ;;Total ram usage:        0 bytes
  3248 ;; Hardware stack levels used:    1
  3249 ;; Hardware stack levels required when called:    4
  3250 ;; This function calls:
  3251 ;;		Nothing
  3252 ;; This function is called by:
  3253 ;;		_main
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256  04F9                     _clock_config:	
  3257                           
  3258                           ;common.c: 289: CLKPR = 0x80;
  3259                           
  3260                           ; Regs used in _clock_config: [wreg+status,2]
  3261  04F9  3080               	movlw	128
  3262  04FA  1283               	bcf	3,5	;RP0=0, select bank2
  3263  04FB  1703               	bsf	3,6	;RP1=1, select bank2
  3264  04FC  0088               	movwf	8	;volatile
  3265                           
  3266                           ;common.c: 290: CLKPR = 0x00;
  3267  04FD  0188               	clrf	8	;volatile
  3268  04FE                     l1528:	
  3269                           ;common.c: 291: while(CLKPCE);
  3270                           
  3271  04FE  1F88               	btfss	8,7
  3272  04FF  0008               	return
  3273  0500  2CFE               	goto	l1528
  3274  0501                     __end_of_clock_config:	
  3275                           
  3276                           	psect	text853
  3277  0521                     __ptext853:	
  3278 ;; =============== function _clock_config ends ============
  3279                           
  3280                           
  3281 ;; *************** function _reset *****************
  3282 ;; Defined at:
  3283 ;;		line 309 in file "D:\develop\190625\AK7030-OTP\main.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;		None
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;		None
  3288 ;; Return value:  Size  Location     Type
  3289 ;;		None               void
  3290 ;; Registers used:
  3291 ;;		None
  3292 ;; Tracked objects:
  3293 ;;		On entry : 60/0
  3294 ;;		On exit  : 60/0
  3295 ;;		Unchanged: FFFFFF9F/0
  3296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3297 ;;      Params:         0       0       0       0       0
  3298 ;;      Locals:         0       0       0       0       0
  3299 ;;      Temps:          0       0       0       0       0
  3300 ;;      Totals:         0       0       0       0       0
  3301 ;;Total ram usage:        0 bytes
  3302 ;; Hardware stack levels used:    1
  3303 ;; Hardware stack levels required when called:    4
  3304 ;; This function calls:
  3305 ;;		Nothing
  3306 ;; This function is called by:
  3307 ;;		_main
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310  0521                     _reset:	
  3311  0521                     l723:	
  3312                           ; Regs used in _reset: []
  3313                           ;main.c: 311: while(1);
  3314                           
  3315  0521  2D21               	goto	l723
  3316                           
  3317                           	psect	text854
  3318  0510                     __ptext854:	
  3319  0510                     __end_of_reset:	
  3320                           
  3321 ;; =============== function _reset ends ============
  3322 ;; *************** function _selectAdChannel *****************
  3323 ;; Defined at:
  3324 ;;		line 298 in file "D:\develop\190625\AK7030-OTP\main.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;		None
  3327 ;; Auto vars:     Size  Location     Type
  3328 ;;		None
  3329 ;; Return value:  Size  Location     Type
  3330 ;;		None               void
  3331 ;; Registers used:
  3332 ;;		None
  3333 ;; Tracked objects:
  3334 ;;		On entry : 17F/0
  3335 ;;		On exit  : 17F/20
  3336 ;;		Unchanged: FFE80/0
  3337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3338 ;;      Params:         0       0       0       0       0
  3339 ;;      Locals:         0       0       0       0       0
  3340 ;;      Temps:          0       0       0       0       0
  3341 ;;      Totals:         0       0       0       0       0
  3342 ;;Total ram usage:        0 bytes
  3343 ;; Hardware stack levels used:    1
  3344 ;; Hardware stack levels required when called:    4
  3345 ;; This function calls:
  3346 ;;		Nothing
  3347 ;; This function is called by:
  3348 ;;		_main
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351  0510                     _selectAdChannel:	
  3352                           
  3353                           ;main.c: 300: TRISB0 = 1;
  3354                           
  3355                           ; Regs used in _selectAdChannel: []
  3356  0510  1683               	bsf	3,5	;RP0=1, select bank1
  3357  0511  1406               	bsf	6,0
  3358                           
  3359                           ;main.c: 301: TRISB1 = 1;
  3360  0512  1486               	bsf	6,1
  3361  0513  0008               	return
  3362  0514                     __end_of_selectAdChannel:	
  3363                           
  3364                           	psect	text855
  3365  0472                     __ptext855:	
  3366 ;; =============== function _selectAdChannel ends ============
  3367                           
  3368                           
  3369 ;; *************** function _pwm_start *****************
  3370 ;; Defined at:
  3371 ;;		line 246 in file "D:\develop\190625\AK7030-OTP\main.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;  ucPulseWidth    1    wreg     unsigned char 
  3374 ;;  ucPulseFrequ    1   11[BANK0 ] unsigned char 
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;  ucPulseWidth    1   12[BANK0 ] unsigned char 
  3377 ;; Return value:  Size  Location     Type
  3378 ;;		None               void
  3379 ;; Registers used:
  3380 ;;		wreg, status,2, status,0
  3381 ;; Tracked objects:
  3382 ;;		On entry : 17F/0
  3383 ;;		On exit  : 17F/0
  3384 ;;		Unchanged: FFE80/0
  3385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3386 ;;      Params:         0       1       0       0       0
  3387 ;;      Locals:         0       1       0       0       0
  3388 ;;      Temps:          0       0       0       0       0
  3389 ;;      Totals:         0       2       0       0       0
  3390 ;;Total ram usage:        2 bytes
  3391 ;; Hardware stack levels used:    1
  3392 ;; Hardware stack levels required when called:    4
  3393 ;; This function calls:
  3394 ;;		Nothing
  3395 ;; This function is called by:
  3396 ;;		_main
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399  0472                     _pwm_start:	
  3400                           
  3401                           ; Regs used in _pwm_start: [wreg+status,2+status,0]
  3402                           ;pwm_start@ucPulseWidth stored from wreg
  3403  0472  00CB               	movwf	pwm_start@ucPulseWidth
  3404                           
  3405                           ;main.c: 248: CCP1CON&= 0xf0;
  3406  0473  30F0               	movlw	240
  3407  0474  0597               	andwf	23,f	;volatile
  3408                           
  3409                           ;main.c: 250: T2CON=0x04;
  3410  0475  3004               	movlw	4
  3411  0476  0092               	movwf	18	;volatile
  3412                           
  3413                           ;main.c: 251: PR2 = ucPulseFrequency;
  3414  0477  084A               	movf	pwm_start@ucPulseFrequency,w
  3415  0478  1683               	bsf	3,5	;RP0=1, select bank1
  3416  0479  0092               	movwf	18	;volatile
  3417                           
  3418                           ;main.c: 252: CCPR1L = ucPulseWidth;
  3419  047A  1283               	bcf	3,5	;RP0=0, select bank0
  3420  047B  084B               	movf	pwm_start@ucPulseWidth,w
  3421  047C  0095               	movwf	21	;volatile
  3422                           
  3423                           ;main.c: 253: CCP1CON=0x00;
  3424  047D  0197               	clrf	23	;volatile
  3425                           
  3426                           ;main.c: 255: TRISB2=0;
  3427  047E  1683               	bsf	3,5	;RP0=1, select bank1
  3428  047F  300C               	movlw	12
  3429  0480  1106               	bcf	6,2
  3430                           
  3431                           ;main.c: 256: PBOD2 = 0;
  3432  0481  1703               	bsf	3,6	;RP1=1, select bank3
  3433  0482  1108               	bcf	8,2
  3434                           
  3435                           ;main.c: 258: CCP1CON|= 0x0c;
  3436  0483  1283               	bcf	3,5	;RP0=0, select bank0
  3437  0484  1303               	bcf	3,6	;RP1=0, select bank0
  3438  0485  0497               	iorwf	23,f	;volatile
  3439  0486  0008               	return
  3440  0487                     __end_of_pwm_start:	
  3441                           
  3442                           	psect	text863
  3443  0514                     __ptext863:	
  3444 ;; =============== function _initPB3 ends ============
  3445                           
  3446                           
  3447 ;; *************** function _clearThreeHoursTimer *****************
  3448 ;; Defined at:
  3449 ;;		line 453 in file "D:\develop\190625\AK7030-OTP\common.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;		None
  3452 ;; Auto vars:     Size  Location     Type
  3453 ;;		None
  3454 ;; Return value:  Size  Location     Type
  3455 ;;		None               void
  3456 ;; Registers used:
  3457 ;;		status,2
  3458 ;; Tracked objects:
  3459 ;;		On entry : 60/0
  3460 ;;		On exit  : 60/0
  3461 ;;		Unchanged: FFF9F/0
  3462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3463 ;;      Params:         0       0       0       0       0
  3464 ;;      Locals:         0       0       0       0       0
  3465 ;;      Temps:          0       0       0       0       0
  3466 ;;      Totals:         0       0       0       0       0
  3467 ;;Total ram usage:        0 bytes
  3468 ;; Hardware stack levels used:    1
  3469 ;; Hardware stack levels required when called:    4
  3470 ;; This function calls:
  3471 ;;		Nothing
  3472 ;; This function is called by:
  3473 ;;		_main
  3474 ;; This function uses a non-reentrant model
  3475 ;;
  3476  0514                     _clearThreeHoursTimer:	
  3477                           
  3478                           ;common.c: 454: uiSmallTimer = 0;
  3479                           
  3480                           ; Regs used in _clearThreeHoursTimer: [status,2]
  3481  0514  01A4               	clrf	_uiSmallTimer
  3482  0515  01A5               	clrf	_uiSmallTimer+1
  3483                           
  3484                           ;common.c: 455: bSmallTimerStartFlag = 0;
  3485  0516  01B5               	clrf	_bSmallTimerStartFlag
  3486  0517  0008               	return
  3487  0518                     __end_of_clearThreeHoursTimer:	
  3488                           
  3489                           	psect	text864
  3490  0518                     __ptext864:	
  3491 ;; =============== function _clearThreeHoursTimer ends ============
  3492                           
  3493                           
  3494 ;; *************** function _clearTwelveHoursTimer *****************
  3495 ;; Defined at:
  3496 ;;		line 446 in file "D:\develop\190625\AK7030-OTP\common.c"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;		None
  3499 ;; Auto vars:     Size  Location     Type
  3500 ;;		None
  3501 ;; Return value:  Size  Location     Type
  3502 ;;		None               void
  3503 ;; Registers used:
  3504 ;;		status,2
  3505 ;; Tracked objects:
  3506 ;;		On entry : 60/0
  3507 ;;		On exit  : 60/0
  3508 ;;		Unchanged: FFF9F/0
  3509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3510 ;;      Params:         0       0       0       0       0
  3511 ;;      Locals:         0       0       0       0       0
  3512 ;;      Temps:          0       0       0       0       0
  3513 ;;      Totals:         0       0       0       0       0
  3514 ;;Total ram usage:        0 bytes
  3515 ;; Hardware stack levels used:    1
  3516 ;; Hardware stack levels required when called:    4
  3517 ;; This function calls:
  3518 ;;		Nothing
  3519 ;; This function is called by:
  3520 ;;		_main
  3521 ;; This function uses a non-reentrant model
  3522 ;;
  3523  0518                     _clearTwelveHoursTimer:	
  3524                           
  3525                           ;common.c: 447: uiBigTimer = 0;
  3526                           
  3527                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  3528  0518  01A0               	clrf	_uiBigTimer
  3529  0519  01A1               	clrf	_uiBigTimer+1
  3530                           
  3531                           ;common.c: 448: bBigTimerStartFlag = 0;
  3532  051A  01B3               	clrf	_bBigTimerStartFlag
  3533  051B  0008               	return
  3534  051C                     __end_of_clearTwelveHoursTimer:	
  3535                           
  3536                           	psect	text865
  3537  0013                     __ptext865:	
  3538 ;; =============== function _clearTwelveHoursTimer ends ============
  3539                           
  3540                           
  3541 ;; *************** function _ISR *****************
  3542 ;; Defined at:
  3543 ;;		line 647 in file "D:\develop\190625\AK7030-OTP\common.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;		None
  3546 ;; Auto vars:     Size  Location     Type
  3547 ;;		None
  3548 ;; Return value:  Size  Location     Type
  3549 ;;		None               void
  3550 ;; Registers used:
  3551 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3552 ;; Tracked objects:
  3553 ;;		On entry : 0/0
  3554 ;;		On exit  : 60/0
  3555 ;;		Unchanged: FFE00/0
  3556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3557 ;;      Params:         0       0       0       0       0
  3558 ;;      Locals:         0       0       0       0       0
  3559 ;;      Temps:          0       4       0       0       0
  3560 ;;      Totals:         0       4       0       0       0
  3561 ;;Total ram usage:        4 bytes
  3562 ;; Hardware stack levels used:    1
  3563 ;; Hardware stack levels required when called:    3
  3564 ;; This function calls:
  3565 ;;		_setAD_ConvertFlag
  3566 ;;		_adc_get
  3567 ;;		_vPutSampleDataIntoTable
  3568 ;; This function is called by:
  3569 ;;		Interrupt level 1
  3570 ;; This function uses a non-reentrant model
  3571 ;;
  3572  0013                     _ISR:	
  3573                           
  3574                           ;common.c: 648: static unsigned char ucTimer1sCnt = 0;
  3575                           ;common.c: 651: if(TMR1IF == 1)
  3576  0013  1C0C               	btfss	12,0
  3577  0014  284F               	goto	i1l3606
  3578  0015  3064               	movlw	100
  3579                           
  3580                           ;common.c: 652: {
  3581                           ;common.c: 653: TMR1IF = 0 ;
  3582  0016  100C               	bcf	12,0
  3583                           
  3584                           ;common.c: 654: timer.timer10msStopWatch++;
  3585  0017  0AB7               	incf	_timer,f
  3586                           
  3587                           ;common.c: 655: ucTimer1sCnt++;
  3588  0018  0AB2               	incf	ISR@ucTimer1sCnt,f
  3589                           
  3590                           ;common.c: 659: if(ucTimer1sCnt >= 100)
  3591  0019  0232               	subwf	ISR@ucTimer1sCnt,w
  3592  001A  1C03               	skipc
  3593  001B  284F               	goto	i1l3606
  3594                           
  3595                           ;common.c: 660: {
  3596                           ;common.c: 661: ucTimer1sCnt = 0;
  3597  001C  01B2               	clrf	ISR@ucTimer1sCnt
  3598                           
  3599                           ;common.c: 662: if(uiBigTimer > 0)
  3600  001D  0821               	movf	_uiBigTimer+1,w
  3601  001E  0420               	iorwf	_uiBigTimer,w
  3602  001F  1903               	skipnz
  3603  0020  2827               	goto	i1l1639
  3604                           
  3605                           ;common.c: 663: uiBigTimer--;
  3606  0021  3001               	movlw	1
  3607  0022  02A0               	subwf	_uiBigTimer,f
  3608  0023  3000               	movlw	0
  3609  0024  1C03               	skipc
  3610  0025  03A1               	decf	_uiBigTimer+1,f
  3611  0026  02A1               	subwf	_uiBigTimer+1,f
  3612  0027                     i1l1639:	
  3613                           
  3614                           ;common.c: 665: if(uiSmallTimer)
  3615  0027  0825               	movf	_uiSmallTimer+1,w
  3616  0028  0424               	iorwf	_uiSmallTimer,w
  3617  0029  1903               	skipnz
  3618  002A  2831               	goto	i1l1640
  3619                           
  3620                           ;common.c: 666: uiSmallTimer--;
  3621  002B  3001               	movlw	1
  3622  002C  02A4               	subwf	_uiSmallTimer,f
  3623  002D  3000               	movlw	0
  3624  002E  1C03               	skipc
  3625  002F  03A5               	decf	_uiSmallTimer+1,f
  3626  0030  02A5               	subwf	_uiSmallTimer+1,f
  3627  0031                     i1l1640:	
  3628                           
  3629                           ;common.c: 668: if(uiTwentySecondsTimer)
  3630  0031  0829               	movf	_uiTwentySecondsTimer+1,w
  3631  0032  0428               	iorwf	_uiTwentySecondsTimer,w
  3632  0033  1903               	skipnz
  3633  0034  283B               	goto	i1l1641
  3634                           
  3635                           ;common.c: 669: uiTwentySecondsTimer--;
  3636  0035  3001               	movlw	1
  3637  0036  02A8               	subwf	_uiTwentySecondsTimer,f
  3638  0037  3000               	movlw	0
  3639  0038  1C03               	skipc
  3640  0039  03A9               	decf	_uiTwentySecondsTimer+1,f
  3641  003A  02A9               	subwf	_uiTwentySecondsTimer+1,f
  3642  003B                     i1l1641:	
  3643                           
  3644                           ;common.c: 671: if(uiTwentyMinTimer)
  3645  003B  0827               	movf	_uiTwentyMinTimer+1,w
  3646  003C  0426               	iorwf	_uiTwentyMinTimer,w
  3647  003D  1903               	skipnz
  3648  003E  2845               	goto	i1l1642
  3649                           
  3650                           ;common.c: 672: uiTwentyMinTimer--;
  3651  003F  3001               	movlw	1
  3652  0040  02A6               	subwf	_uiTwentyMinTimer,f
  3653  0041  3000               	movlw	0
  3654  0042  1C03               	skipc
  3655  0043  03A7               	decf	_uiTwentyMinTimer+1,f
  3656  0044  02A7               	subwf	_uiTwentyMinTimer+1,f
  3657  0045                     i1l1642:	
  3658                           
  3659                           ;common.c: 674: if( uiOneHourTimer )
  3660  0045  0823               	movf	_uiOneHourTimer+1,w
  3661  0046  0422               	iorwf	_uiOneHourTimer,w
  3662  0047  1903               	skipnz
  3663  0048  284F               	goto	i1l3606
  3664                           
  3665                           ;common.c: 675: uiOneHourTimer--;
  3666  0049  3001               	movlw	1
  3667  004A  02A2               	subwf	_uiOneHourTimer,f
  3668  004B  3000               	movlw	0
  3669  004C  1C03               	skipc
  3670  004D  03A3               	decf	_uiOneHourTimer+1,f
  3671  004E  02A3               	subwf	_uiOneHourTimer+1,f
  3672  004F                     i1l3606:	
  3673                           
  3674                           ;common.c: 676: }
  3675                           ;common.c: 677: }
  3676                           ;common.c: 679: if(ADIF)
  3677  004F  1D0D               	btfss	13,2
  3678  0050  2864               	goto	i1l1647
  3679  0051  3001               	movlw	1
  3680                           
  3681                           ;common.c: 680: {
  3682                           ;common.c: 682: ADIF=0;
  3683  0052  110D               	bcf	13,2
  3684                           
  3685                           ;common.c: 685: if(sampleChannelSelect == 12)
  3686                           
  3687                           ;common.c: 683: setAD_ConvertFlag(1);
  3688  0053  085E               	movf	_sampleChannelSelect,w
  3689  0054  3A0C               	xorlw	12
  3690  0055  1D03               	skipz
  3691  0056  285D               	goto	i1l3616
  3692                           
  3693                           ;common.c: 686: {
  3694                           ;common.c: 687: vPutSampleDataIntoTable(adc_get(),12);
  3695  0057  2071  118A         	fcall	_adc_get
  3696  0059  21B8  118A         	fcall	PL6	;call to abstracted procedure
  3697  005B  300C               	movlw	12
  3698  005C  2862               	goto	L11
  3699  005D                     i1l3616:	
  3700                           ;common.c: 688: }
  3701                           
  3702                           
  3703                           ;common.c: 689: else
  3704                           ;common.c: 690: {
  3705                           ;common.c: 691: vPutSampleDataIntoTable(adc_get(),13);
  3706  005D  2071  118A         	fcall	_adc_get
  3707  005F  21B8  118A         	fcall	PL6	;call to abstracted procedure
  3708  0061  300D               	movlw	13
  3709  0062                     L11:	
  3710  0062  00C1               	movwf	?_vPutSampleDataIntoTable+2
  3711  0063  207D               	fcall	_vPutSampleDataIntoTable
  3712  0064                     i1l1647:	
  3713  0064  1283               	bcf	3,5	;RP0=0, select bank0
  3714  0065  1303               	bcf	3,6	;RP1=0, select bank0
  3715  0066  0849               	movf	??_ISR+3,w
  3716  0067  00FF               	movwf	127
  3717  0068  0848               	movf	??_ISR+2,w
  3718  0069  008A               	movwf	10
  3719  006A  0847               	movf	??_ISR+1,w
  3720  006B  0084               	movwf	4
  3721  006C  0E46               	swapf	??_ISR^0,w
  3722  006D  0083               	movwf	3
  3723  006E  0EFE               	swapf	126,f
  3724  006F  0E7E               	swapf	126,w
  3725  0070  0009               	retfie
  3726  0071                     __end_of_ISR:	
  3727  0071                     __ptext869:	
  3728 ;; =============== function i1_adc_test_init ends ============
  3729                           
  3730                           
  3731 ;; *************** function _adc_get *****************
  3732 ;; Defined at:
  3733 ;;		line 106 in file "D:\develop\190625\AK7030-OTP\periph.c"
  3734 ;; Parameters:    Size  Location     Type
  3735 ;;		None
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;  val             2    2[COMMON] unsigned int 
  3738 ;; Return value:  Size  Location     Type
  3739 ;;                  2    0[COMMON] unsigned int 
  3740 ;; Registers used:
  3741 ;;		wreg
  3742 ;; Tracked objects:
  3743 ;;		On entry : 60/0
  3744 ;;		On exit  : 60/20
  3745 ;;		Unchanged: FFF9F/0
  3746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3747 ;;      Params:         2       0       0       0       0
  3748 ;;      Locals:         2       0       0       0       0
  3749 ;;      Temps:          0       0       0       0       0
  3750 ;;      Totals:         4       0       0       0       0
  3751 ;;Total ram usage:        4 bytes
  3752 ;; Hardware stack levels used:    1
  3753 ;; This function calls:
  3754 ;;		Nothing
  3755 ;; This function is called by:
  3756 ;;		_ISR
  3757 ;; This function uses a non-reentrant model
  3758 ;;
  3759  0071                     _adc_get:	
  3760                           
  3761                           ;periph.c: 107: unsigned int val;
  3762                           ;periph.c: 108: val = (ADRESH<<8) | ADRESL;
  3763                           
  3764                           ; Regs used in _adc_get: [wreg]
  3765  0071  081E               	movf	30,w	;volatile
  3766  0072  00F3               	movwf	adc_get@val+1
  3767  0073  01F2               	clrf	adc_get@val
  3768  0074  1683               	bsf	3,5	;RP0=1, select bank1
  3769  0075  081E               	movf	30,w	;volatile
  3770  0076  04F2               	iorwf	adc_get@val,f
  3771                           
  3772                           ;periph.c: 109: return val;
  3773  0077  0873               	movf	adc_get@val+1,w
  3774  0078  00F1               	movwf	?_adc_get+1
  3775  0079  0872               	movf	adc_get@val,w
  3776  007A  00F0               	movwf	?_adc_get
  3777  007B  0008               	return
  3778  007C                     __end_of_adc_get:	
  3779  007C                     __ptext870:	
  3780 ;; =============== function _adc_get ends ============
  3781                           
  3782                           
  3783 ;; *************** function _setAD_ConvertFlag *****************
  3784 ;; Defined at:
  3785 ;;		line 321 in file "D:\develop\190625\AK7030-OTP\common.c"
  3786 ;; Parameters:    Size  Location     Type
  3787 ;;  flag            1    wreg     unsigned char 
  3788 ;; Auto vars:     Size  Location     Type
  3789 ;;  flag            1    0[COMMON] unsigned char 
  3790 ;; Return value:  Size  Location     Type
  3791 ;;		None               void
  3792 ;; Registers used:
  3793 ;;		wreg
  3794 ;; Tracked objects:
  3795 ;;		On entry : 60/0
  3796 ;;		On exit  : 60/0
  3797 ;;		Unchanged: FFFFFF9F/0
  3798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3799 ;;      Params:         0       0       0       0       0
  3800 ;;      Locals:         1       0       0       0       0
  3801 ;;      Temps:          0       0       0       0       0
  3802 ;;      Totals:         1       0       0       0       0
  3803 ;;Total ram usage:        1 bytes
  3804 ;; Hardware stack levels used:    1
  3805 ;; This function calls:
  3806 ;;		Nothing
  3807 ;; This function is called by:
  3808 ;;		_ISR
  3809 ;; This function uses a non-reentrant model
  3810 ;;
  3811  007C                     _setAD_ConvertFlag:	
  3812                           
  3813                           ; Regs used in _setAD_ConvertFlag: [wreg]
  3814  007C  0008               	return
  3815  007D                     __end_of_setAD_ConvertFlag:	
  3816  007D                     __ptext866:	
  3817 ;; =============== function _ISR ends ============
  3818                           
  3819                           
  3820 ;; *************** function _vPutSampleDataIntoTable *****************
  3821 ;; Defined at:
  3822 ;;		line 200 in file "D:\develop\190625\AK7030-OTP\common.c"
  3823 ;; Parameters:    Size  Location     Type
  3824 ;;  uiSampleData    2    0[BANK0 ] unsigned int 
  3825 ;;  channel         1    2[BANK0 ] unsigned char 
  3826 ;; Auto vars:     Size  Location     Type
  3827 ;;  uiCalWidth      2    3[BANK0 ] unsigned int 
  3828 ;;  i               2    5[BANK0 ] int 
  3829 ;; Return value:  Size  Location     Type
  3830 ;;		None               void
  3831 ;; Registers used:
  3832 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3833 ;; Tracked objects:
  3834 ;;		On entry : 60/0
  3835 ;;		On exit  : 0/0
  3836 ;;		Unchanged: FFE00/0
  3837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3838 ;;      Params:         0       3       0       0       0
  3839 ;;      Locals:         0       4       0       0       0
  3840 ;;      Temps:          0       0       0       0       0
  3841 ;;      Totals:         0       7       0       0       0
  3842 ;;Total ram usage:        7 bytes
  3843 ;; Hardware stack levels used:    1
  3844 ;; Hardware stack levels required when called:    2
  3845 ;; This function calls:
  3846 ;;		_disable_AD_interrupt
  3847 ;;		_FilterCh12
  3848 ;;		_setPWM_Width
  3849 ;;		_switchSampleChannel
  3850 ;;		_enable_AD_interrupt
  3851 ;; This function is called by:
  3852 ;;		_ISR
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855  007D                     _vPutSampleDataIntoTable:	
  3856                           
  3857                           ;common.c: 202: static unsigned char ucCh12Length = 0;
  3858                           ;common.c: 204: static unsigned char ucCh13Length = 0;
  3859                           ;common.c: 206: if(channel == 12)
  3860                           
  3861                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  3862  007D  0841               	movf	vPutSampleDataIntoTable@channel,w
  3863  007E  3A0C               	xorlw	12
  3864  007F  1D03               	skipz
  3865  0080  28C2               	goto	i1l3544
  3866                           
  3867                           ;common.c: 207: {
  3868                           ;common.c: 208: if(ucCh12Length < 30)
  3869  0081  301E               	movlw	30
  3870  0082  023D               	subwf	vPutSampleDataIntoTable@ucCh12Length,w
  3871  0083  1803               	skipnc
  3872  0084  0008               	return
  3873                           
  3874                           ;common.c: 209: {
  3875                           ;common.c: 210: uiSampleCh12[ucCh12Length] = uiSampleData;
  3876  0085  1003               	clrc
  3877  0086  0D3D               	rlf	vPutSampleDataIntoTable@ucCh12Length,w
  3878  0087  3E90               	addlw	_uiSampleCh12& (0+255)
  3879  0088  0084               	movwf	4
  3880  0089  083F               	movf	vPutSampleDataIntoTable@uiSampleData,w
  3881  008A  1783               	bsf	3,7	;select IRP bank3
  3882  008B  0080               	movwf	0
  3883  008C  0A84               	incf	4,f
  3884  008D  0840               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  3885  008E  0080               	movwf	0
  3886                           
  3887                           ;common.c: 212: ucCh12Length++;
  3888  008F  0ABD               	incf	vPutSampleDataIntoTable@ucCh12Length,f
  3889                           
  3890                           ;common.c: 214: if( 30 == ucCh12Length )
  3891  0090  083D               	movf	vPutSampleDataIntoTable@ucCh12Length,w
  3892  0091  3A1E               	xorlw	30
  3893  0092  1D03               	skipz
  3894  0093  0008               	return
  3895                           
  3896                           ;common.c: 215: {
  3897                           ;common.c: 216: ucCh12Length = 0;
  3898  0094  01BD               	clrf	vPutSampleDataIntoTable@ucCh12Length
  3899                           
  3900                           ;common.c: 220: static unsigned char uiInitWidth = 75;
  3901                           ;common.c: 222: disable_AD_interrupt();
  3902  0095  217D  118A         	fcall	_disable_AD_interrupt
  3903                           
  3904                           ;common.c: 224: uiCalWidth = FilterCh12();
  3905  0097  210A  118A         	fcall	_FilterCh12
  3906  0099  0871               	movf	?_FilterCh12+1,w
  3907  009A  1283               	bcf	3,5	;RP0=0, select bank0
  3908  009B  1303               	bcf	3,6	;RP1=0, select bank0
  3909  009C  00C3               	movwf	vPutSampleDataIntoTable@uiCalWidth+1
  3910  009D  0870               	movf	?_FilterCh12,w
  3911  009E  00C2               	movwf	vPutSampleDataIntoTable@uiCalWidth
  3912                           
  3913                           ;common.c: 226: if(uiCalWidth > 312)
  3914  009F  3001               	movlw	1
  3915  00A0  0243               	subwf	vPutSampleDataIntoTable@uiCalWidth+1,w
  3916  00A1  3039               	movlw	57
  3917  00A2  1903               	skipnz
  3918  00A3  0242               	subwf	vPutSampleDataIntoTable@uiCalWidth,w
  3919  00A4  1C03               	skipc
  3920  00A5  28A8               	goto	i1l3530
  3921                           
  3922                           ;common.c: 227: {
  3923                           ;common.c: 230: uiInitWidth++;
  3924  00A6  0ADF               	incf	vPutSampleDataIntoTable@uiInitWidth,f
  3925                           
  3926                           ;common.c: 231: }
  3927  00A7  28AF               	goto	i1l3534
  3928  00A8                     i1l3530:	
  3929                           
  3930                           ;common.c: 232: else if(uiCalWidth < 312)
  3931  00A8  3001               	movlw	1
  3932  00A9  0243               	subwf	vPutSampleDataIntoTable@uiCalWidth+1,w
  3933  00AA  3038               	movlw	56
  3934  00AB  1903               	skipnz
  3935  00AC  0242               	subwf	vPutSampleDataIntoTable@uiCalWidth,w
  3936  00AD  1C03               	btfss	3,0
  3937                           
  3938                           ;common.c: 233: {
  3939                           ;common.c: 236: uiInitWidth--;
  3940  00AE  03DF               	decf	vPutSampleDataIntoTable@uiInitWidth,f
  3941  00AF                     i1l3534:	
  3942                           ;common.c: 237: }
  3943                           
  3944                           
  3945                           ;common.c: 241: if(uiInitWidth > 249)
  3946  00AF  30FA               	movlw	250
  3947  00B0  025F               	subwf	vPutSampleDataIntoTable@uiInitWidth,w
  3948  00B1  1C03               	skipc
  3949  00B2  28B5               	goto	i1l1515
  3950                           
  3951                           ;common.c: 242: uiInitWidth = 249;
  3952  00B3  30F9               	movlw	249
  3953  00B4  00DF               	movwf	vPutSampleDataIntoTable@uiInitWidth
  3954  00B5                     i1l1515:	
  3955                           
  3956                           ;common.c: 244: if(uiInitWidth < 75)
  3957  00B5  304B               	movlw	75
  3958  00B6  025F               	subwf	vPutSampleDataIntoTable@uiInitWidth,w
  3959  00B7  1803               	skipnc
  3960  00B8  28BB               	goto	i1l3540
  3961                           
  3962                           ;common.c: 245: uiInitWidth = 75;
  3963  00B9  304B               	movlw	75
  3964  00BA  00DF               	movwf	vPutSampleDataIntoTable@uiInitWidth
  3965  00BB                     i1l3540:	
  3966                           
  3967                           ;common.c: 249: setPWM_Width(uiInitWidth);
  3968  00BB  085F               	movf	vPutSampleDataIntoTable@uiInitWidth,w
  3969  00BC  2101  118A         	fcall	_setPWM_Width
  3970                           
  3971                           ;common.c: 250: switchSampleChannel( 12 );
  3972  00BE  300C               	movlw	12
  3973  00BF  2180  118A         	fcall	_switchSampleChannel
  3974                           
  3975                           ;common.c: 251: enable_AD_interrupt();
  3976  00C1  29A7               	ljmp	i1l3582
  3977  00C2                     i1l3544:	
  3978                           
  3979                           ;common.c: 255: else if(channel == 13)
  3980  00C2  0841               	movf	vPutSampleDataIntoTable@channel,w
  3981  00C3  3A0D               	xorlw	13
  3982  00C4  1D03               	skipz
  3983  00C5  28DC               	goto	i1l3558
  3984                           
  3985                           ;common.c: 256: {
  3986                           ;common.c: 257: if(ucCh13Length < 12)
  3987  00C6  300C               	movlw	12
  3988  00C7  023E               	subwf	vPutSampleDataIntoTable@ucCh13Length,w
  3989  00C8  1803               	skipnc
  3990  00C9  0008               	return
  3991                           
  3992                           ;common.c: 258: {
  3993                           ;common.c: 259: uiSampleCh13[ucCh13Length] = uiSampleData;
  3994  00CA  1003               	clrc
  3995  00CB  0D3E               	rlf	vPutSampleDataIntoTable@ucCh13Length,w
  3996  00CC  3EA0               	addlw	_uiSampleCh13& (0+255)
  3997  00CD  0084               	movwf	4
  3998  00CE  083F               	movf	vPutSampleDataIntoTable@uiSampleData,w
  3999  00CF  1383               	bcf	3,7	;select IRP bank1
  4000  00D0  0080               	movwf	0
  4001  00D1  0A84               	incf	4,f
  4002  00D2  0840               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  4003  00D3  0080               	movwf	0
  4004                           
  4005                           ;common.c: 261: ucCh13Length++;
  4006  00D4  0ABE               	incf	vPutSampleDataIntoTable@ucCh13Length,f
  4007                           
  4008                           ;common.c: 262: if( 12 == ucCh13Length)
  4009  00D5  083E               	movf	vPutSampleDataIntoTable@ucCh13Length,w
  4010  00D6  3A0C               	xorlw	12
  4011  00D7  1D03               	skipz
  4012  00D8  0008               	return
  4013  00D9  300D               	movlw	13
  4014                           
  4015                           ;common.c: 263: {
  4016                           ;common.c: 264: ucCh13Length = 0;
  4017  00DA  01BE               	clrf	vPutSampleDataIntoTable@ucCh13Length
  4018                           
  4019                           ;common.c: 265: switchSampleChannel( 13 );
  4020  00DB  2980               	ljmp	_switchSampleChannel
  4021  00DC                     i1l3558:	
  4022                           
  4023                           ;common.c: 269: else
  4024                           ;common.c: 270: {
  4025                           ;common.c: 271: ucCh12Length = 0;
  4026  00DC  01BD               	clrf	vPutSampleDataIntoTable@ucCh12Length
  4027                           
  4028                           ;common.c: 273: ucCh13Length = 0;
  4029  00DD  01BE               	clrf	vPutSampleDataIntoTable@ucCh13Length
  4030                           
  4031                           ;common.c: 275: for(int i = 0;i < 30; i++)
  4032  00DE  01C4               	clrf	vPutSampleDataIntoTable@i
  4033  00DF  01C5               	clrf	vPutSampleDataIntoTable@i+1
  4034  00E0                     i1l3564:	
  4035                           
  4036                           ;common.c: 276: {
  4037                           ;common.c: 277: uiSampleCh12[i] = 0;
  4038  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  4039  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  4040  00E2  1003               	clrc
  4041  00E3  0D44               	rlf	vPutSampleDataIntoTable@i,w
  4042  00E4  3E90               	addlw	_uiSampleCh12& (0+255)
  4043  00E5  0084               	movwf	4
  4044  00E6  1783               	bsf	3,7	;select IRP bank3
  4045  00E7  0180               	clrf	0
  4046  00E8  0A84               	incf	4,f
  4047  00E9  0180               	clrf	0
  4048                           
  4049                           ;common.c: 279: uiSampleCh13[i] = 0;
  4050  00EA  1003               	clrc
  4051  00EB  0D44               	rlf	vPutSampleDataIntoTable@i,w
  4052  00EC  3EA0               	addlw	_uiSampleCh13& (0+255)
  4053  00ED  0084               	movwf	4
  4054  00EE  1383               	bcf	3,7	;select IRP bank1
  4055  00EF  0180               	clrf	0
  4056  00F0  0A84               	incf	4,f
  4057  00F1  0180               	clrf	0
  4058  00F2  0AC4               	incf	vPutSampleDataIntoTable@i,f
  4059  00F3  1903               	skipnz
  4060  00F4  0AC5               	incf	vPutSampleDataIntoTable@i+1,f
  4061  00F5  0845               	movf	vPutSampleDataIntoTable@i+1,w
  4062  00F6  3A80               	xorlw	128
  4063  00F7  00FF               	movwf	127
  4064  00F8  3080               	movlw	128
  4065  00F9  027F               	subwf	127,w
  4066  00FA  1D03               	skipz
  4067  00FB  28FE               	goto	u120_25
  4068  00FC  301E               	movlw	30
  4069  00FD  0244               	subwf	vPutSampleDataIntoTable@i,w
  4070  00FE                     u120_25:	
  4071  00FE  1803               	btfsc	3,0
  4072  00FF  0008               	return
  4073  0100  28E0               	goto	i1l3564
  4074  0101                     __end_of_vPutSampleDataIntoTable:	
  4075  0101                     __ptext874:	
  4076 ;; =============== function _FilterCh12 ends ============
  4077                           
  4078                           
  4079 ;; *************** function _setPWM_Width *****************
  4080 ;; Defined at:
  4081 ;;		line 62 in file "D:\develop\190625\AK7030-OTP\common.c"
  4082 ;; Parameters:    Size  Location     Type
  4083 ;;  ucWidth         1    wreg     unsigned char 
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;  ucWidth         1    0[COMMON] unsigned char 
  4086 ;; Return value:  Size  Location     Type
  4087 ;;		None               void
  4088 ;; Registers used:
  4089 ;;		wreg
  4090 ;; Tracked objects:
  4091 ;;		On entry : 160/100
  4092 ;;		On exit  : 160/100
  4093 ;;		Unchanged: FFE9F/0
  4094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4095 ;;      Params:         0       0       0       0       0
  4096 ;;      Locals:         1       0       0       0       0
  4097 ;;      Temps:          0       0       0       0       0
  4098 ;;      Totals:         1       0       0       0       0
  4099 ;;Total ram usage:        1 bytes
  4100 ;; Hardware stack levels used:    1
  4101 ;; This function calls:
  4102 ;;		Nothing
  4103 ;; This function is called by:
  4104 ;;		_vPutSampleDataIntoTable
  4105 ;; This function uses a non-reentrant model
  4106 ;;
  4107  0101                     _setPWM_Width:	
  4108                           
  4109                           ; Regs used in _setPWM_Width: [wreg]
  4110                           ;setPWM_Width@ucWidth stored from wreg
  4111  0101  00F0               	movwf	setPWM_Width@ucWidth
  4112                           
  4113                           ;common.c: 63: static unsigned char ucOldWidth = 0;
  4114                           ;common.c: 65: if( ucOldWidth != ucWidth)
  4115  0102  067D               	xorwf	setPWM_Width@ucOldWidth,w
  4116  0103  1903               	skipnz
  4117  0104  0008               	return
  4118                           
  4119                           ;common.c: 66: {
  4120                           ;common.c: 67: CCPR1L = ucWidth;
  4121  0105  0870               	movf	setPWM_Width@ucWidth,w
  4122  0106  0095               	movwf	21	;volatile
  4123                           
  4124                           ;common.c: 68: ucOldWidth = ucWidth;
  4125  0107  0870               	movf	setPWM_Width@ucWidth,w
  4126  0108  00FD               	movwf	setPWM_Width@ucOldWidth
  4127  0109  0008               	return
  4128  010A                     __end_of_setPWM_Width:	
  4129  010A                     __ptext873:	
  4130 ;; =============== function _disable_AD_interrupt ends ============
  4131                           
  4132                           
  4133 ;; *************** function _FilterCh12 *****************
  4134 ;; Defined at:
  4135 ;;		line 134 in file "D:\develop\190625\AK7030-OTP\common.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;		None
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;  filter_sum      2    9[COMMON] unsigned int 
  4140 ;;  filter_temp     2    7[COMMON] unsigned int 
  4141 ;;  i               1   12[COMMON] unsigned char 
  4142 ;;  j               1   11[COMMON] unsigned char 
  4143 ;; Return value:  Size  Location     Type
  4144 ;;                  2    0[COMMON] unsigned int 
  4145 ;; Registers used:
  4146 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4147 ;; Tracked objects:
  4148 ;;		On entry : 160/120
  4149 ;;		On exit  : 100/100
  4150 ;;		Unchanged: FFE00/0
  4151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4152 ;;      Params:         2       0       0       0       0
  4153 ;;      Locals:         6       0       0       0       0
  4154 ;;      Temps:          5       0       0       0       0
  4155 ;;      Totals:        13       0       0       0       0
  4156 ;;Total ram usage:       13 bytes
  4157 ;; Hardware stack levels used:    1
  4158 ;; This function calls:
  4159 ;;		Nothing
  4160 ;; This function is called by:
  4161 ;;		_vPutSampleDataIntoTable
  4162 ;; This function uses a non-reentrant model
  4163 ;;
  4164  010A                     _FilterCh12:	
  4165                           
  4166                           ; Regs used in _FilterCh12: [wreg-fsr0h+status,2+status,0]
  4167  010A  01FB               	clrf	FilterCh12@j
  4168                           
  4169                           ;common.c: 151: unsigned int filter_temp = 0, filter_sum = 0;
  4170  010B  01F7               	clrf	FilterCh12@filter_temp
  4171  010C  01F8               	clrf	FilterCh12@filter_temp+1
  4172  010D  01F9               	clrf	FilterCh12@filter_sum
  4173  010E  01FA               	clrf	FilterCh12@filter_sum+1
  4174                           
  4175                           ;common.c: 160: for(j = 0; j < 30 - 1; j++)
  4176  010F  01FB               	clrf	FilterCh12@j
  4177  0110                     i1l3482:	
  4178                           
  4179                           ;common.c: 161: {
  4180                           ;common.c: 162: for(i = 0; i < 30 - 1 - j; i++)
  4181  0110  01FC               	clrf	FilterCh12@i
  4182  0111                     i1l3490:	
  4183  0111  01F3               	clrf	??_FilterCh12+1
  4184  0112  087B               	movf	FilterCh12@j,w
  4185  0113  3C1D               	sublw	29
  4186  0114  00F2               	movwf	??_FilterCh12
  4187  0115  1C03               	skipc
  4188  0116  03F3               	decf	??_FilterCh12+1,f
  4189  0117  0873               	movf	??_FilterCh12+1,w
  4190  0118  3A80               	xorlw	128
  4191  0119  3C80               	sublw	128
  4192  011A  1D03               	skipz
  4193  011B  291E               	goto	u107_25
  4194  011C  0872               	movf	??_FilterCh12,w
  4195  011D  027C               	subwf	FilterCh12@i,w
  4196  011E                     u107_25:	
  4197  011E  1803               	btfsc	3,0
  4198  011F  2959               	goto	i1l3492
  4199                           
  4200                           ;common.c: 163: {
  4201                           ;common.c: 164: if(uiSampleCh12[i] > uiSampleCh12[i + 1])
  4202  0120  1003               	clrc
  4203  0121  0D7C               	rlf	FilterCh12@i,w
  4204  0122  21A9  118A         	fcall	PL3	;call to abstracted procedure
  4205  0124  21B2  118A         	fcall	PL4	;call to abstracted procedure
  4206  0126  00F4               	movwf	??_FilterCh12+2
  4207  0127  0A84               	incf	4,f
  4208  0128  0800               	movf	0,w
  4209  0129  00F5               	movwf	??_FilterCh12+3
  4210  012A  3A80               	xorlw	128
  4211  012B  00F6               	movwf	??_FilterCh12+4
  4212  012C  0873               	movf	??_FilterCh12+1,w
  4213  012D  3A80               	xorlw	128
  4214  012E  0276               	subwf	??_FilterCh12+4,w
  4215  012F  1D03               	skipz
  4216  0130  2933               	goto	u106_25
  4217  0131  0872               	movf	??_FilterCh12,w
  4218  0132  0274               	subwf	??_FilterCh12+2,w
  4219  0133                     u106_25:	
  4220  0133  1803               	skipnc
  4221  0134  2957               	goto	i1l3488
  4222                           
  4223                           ;common.c: 165: {
  4224                           ;common.c: 167: filter_temp = uiSampleCh12[i];
  4225  0135  1003               	clrc
  4226  0136  0D7C               	rlf	FilterCh12@i,w
  4227  0137  3E90               	addlw	_uiSampleCh12& (0+255)
  4228  0138  0084               	movwf	4
  4229  0139  1783               	bsf	3,7	;select IRP bank3
  4230  013A  0800               	movf	0,w
  4231  013B  00F7               	movwf	FilterCh12@filter_temp
  4232  013C  0A84               	incf	4,f
  4233  013D  0800               	movf	0,w
  4234  013E  00F8               	movwf	FilterCh12@filter_temp+1
  4235                           
  4236                           ;common.c: 169: uiSampleCh12[i] = uiSampleCh12[i + 1];
  4237  013F  21B2  118A         	fcall	PL4	;call to abstracted procedure
  4238  0141  00F2               	movwf	??_FilterCh12
  4239  0142  0A84               	incf	4,f
  4240  0143  0800               	movf	0,w
  4241  0144  00F3               	movwf	??_FilterCh12+1
  4242  0145  1003               	clrc
  4243  0146  0D7C               	rlf	FilterCh12@i,w
  4244  0147  3E90               	addlw	_uiSampleCh12& (0+255)
  4245  0148  0084               	movwf	4
  4246  0149  0872               	movf	??_FilterCh12,w
  4247  014A  0080               	movwf	0
  4248  014B  0A84               	incf	4,f
  4249  014C  0873               	movf	??_FilterCh12+1,w
  4250  014D  0080               	movwf	0
  4251                           
  4252                           ;common.c: 171: uiSampleCh12[i + 1] = filter_temp;
  4253  014E  1003               	clrc
  4254  014F  0D7C               	rlf	FilterCh12@i,w
  4255  0150  3E92               	addlw	(_uiSampleCh12+2)& (0+255)
  4256  0151  0084               	movwf	4
  4257  0152  0877               	movf	FilterCh12@filter_temp,w
  4258  0153  0080               	movwf	0
  4259  0154  0A84               	incf	4,f
  4260  0155  0878               	movf	FilterCh12@filter_temp+1,w
  4261  0156  0080               	movwf	0
  4262  0157                     i1l3488:	
  4263  0157  0AFC               	incf	FilterCh12@i,f
  4264  0158  2911               	goto	i1l3490
  4265  0159                     i1l3492:	
  4266  0159  301D               	movlw	29
  4267  015A  0AFB               	incf	FilterCh12@j,f
  4268  015B  027B               	subwf	FilterCh12@j,w
  4269  015C  1C03               	skipc
  4270  015D  2910               	goto	i1l3482
  4271                           
  4272                           ;common.c: 172: }
  4273                           ;common.c: 173: }
  4274                           ;common.c: 174: }
  4275                           ;common.c: 184: for(i = 7; i < 30 - 7; i++)
  4276  015E  3007               	movlw	7
  4277  015F  00FC               	movwf	FilterCh12@i
  4278                           
  4279                           ;common.c: 185: {
  4280                           ;common.c: 186: filter_sum += uiSampleCh12[i];
  4281  0160  1003               	clrc
  4282  0161                     L12:	
  4283  0161  0D7C               	rlf	FilterCh12@i,w
  4284  0162  21A9  118A         	fcall	PL3	;call to abstracted procedure
  4285  0164  0872               	movf	??_FilterCh12,w
  4286  0165  07F9               	addwf	FilterCh12@filter_sum,f
  4287  0166  1803               	skipnc
  4288  0167  0AFA               	incf	FilterCh12@filter_sum+1,f
  4289  0168  0873               	movf	??_FilterCh12+1,w
  4290  0169  07FA               	addwf	FilterCh12@filter_sum+1,f
  4291  016A  3017               	movlw	23
  4292  016B  0AFC               	incf	FilterCh12@i,f
  4293  016C  027C               	subwf	FilterCh12@i,w
  4294  016D  1C03               	skipc
  4295  016E  2961               	goto	L12
  4296                           
  4297                           ;common.c: 187: }
  4298                           ;common.c: 194: return (filter_sum >> 4);
  4299  016F  087A               	movf	FilterCh12@filter_sum+1,w
  4300  0170  00F1               	movwf	?_FilterCh12+1
  4301  0171  0879               	movf	FilterCh12@filter_sum,w
  4302  0172  00F0               	movwf	?_FilterCh12
  4303  0173  300F               	movlw	15
  4304  0174  0EF0               	swapf	?_FilterCh12,f
  4305  0175  0EF1               	swapf	?_FilterCh12+1,f
  4306  0176  05F0               	andwf	?_FilterCh12,f
  4307  0177  0871               	movf	?_FilterCh12+1,w
  4308  0178  39F0               	andlw	240
  4309  0179  04F0               	iorwf	?_FilterCh12,f
  4310  017A  300F               	movlw	15
  4311  017B  05F1               	andwf	?_FilterCh12+1,f
  4312  017C  0008               	return
  4313  017D                     __end_of_FilterCh12:	
  4314  017D                     __ptext872:	
  4315 ;; =============== function _enable_AD_interrupt ends ============
  4316                           
  4317                           
  4318 ;; *************** function _disable_AD_interrupt *****************
  4319 ;; Defined at:
  4320 ;;		line 113 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4321 ;; Parameters:    Size  Location     Type
  4322 ;;		None
  4323 ;; Auto vars:     Size  Location     Type
  4324 ;;		None
  4325 ;; Return value:  Size  Location     Type
  4326 ;;		None               void
  4327 ;; Registers used:
  4328 ;;		None
  4329 ;; Tracked objects:
  4330 ;;		On entry : 160/100
  4331 ;;		On exit  : 160/120
  4332 ;;		Unchanged: FFE9F/0
  4333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4334 ;;      Params:         0       0       0       0       0
  4335 ;;      Locals:         0       0       0       0       0
  4336 ;;      Temps:          0       0       0       0       0
  4337 ;;      Totals:         0       0       0       0       0
  4338 ;;Total ram usage:        0 bytes
  4339 ;; Hardware stack levels used:    1
  4340 ;; This function calls:
  4341 ;;		Nothing
  4342 ;; This function is called by:
  4343 ;;		_vPutSampleDataIntoTable
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346  017D                     _disable_AD_interrupt:	
  4347                           
  4348                           ;periph.c: 114: ADIE = 0;
  4349                           
  4350                           ; Regs used in _disable_AD_interrupt: []
  4351  017D  1683               	bsf	3,5	;RP0=1, select bank1
  4352  017E  110D               	bcf	13,2
  4353  017F  0008               	return
  4354  0180                     __end_of_disable_AD_interrupt:	
  4355  0180                     __ptext867:	
  4356 ;; =============== function _vPutSampleDataIntoTable ends ============
  4357                           
  4358                           
  4359 ;; *************** function _switchSampleChannel *****************
  4360 ;; Defined at:
  4361 ;;		line 365 in file "D:\develop\190625\AK7030-OTP\common.c"
  4362 ;; Parameters:    Size  Location     Type
  4363 ;;  ucCurrentCha    1    wreg     unsigned char 
  4364 ;; Auto vars:     Size  Location     Type
  4365 ;;  ucCurrentCha    1    3[COMMON] unsigned char 
  4366 ;; Return value:  Size  Location     Type
  4367 ;;		None               void
  4368 ;; Registers used:
  4369 ;;		wreg, status,2, status,0, pclath, cstack
  4370 ;; Tracked objects:
  4371 ;;		On entry : 60/100
  4372 ;;		On exit  : 60/120
  4373 ;;		Unchanged: FFF9F/0
  4374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4375 ;;      Params:         0       0       0       0       0
  4376 ;;      Locals:         1       0       0       0       0
  4377 ;;      Temps:          0       0       0       0       0
  4378 ;;      Totals:         1       0       0       0       0
  4379 ;;Total ram usage:        1 bytes
  4380 ;; Hardware stack levels used:    1
  4381 ;; Hardware stack levels required when called:    1
  4382 ;; This function calls:
  4383 ;;		i1_adc_test_init
  4384 ;; This function is called by:
  4385 ;;		_vPutSampleDataIntoTable
  4386 ;; This function uses a non-reentrant model
  4387 ;;
  4388  0180                     _switchSampleChannel:	
  4389                           
  4390                           ; Regs used in _switchSampleChannel: [wreg+status,2+status,0+pclath+cstack]
  4391                           ;switchSampleChannel@ucCurrentChannel stored from wreg
  4392  0180  00F3               	movwf	switchSampleChannel@ucCurrentChannel
  4393                           
  4394                           ;common.c: 366: if(12 == ucCurrentChannel)
  4395  0181  3A0C               	xorlw	12
  4396  0182  1D03               	skipz
  4397  0183  298B               	goto	i1l3578
  4398                           
  4399                           ;common.c: 367: {
  4400                           ;common.c: 368: sampleChannelSelect = 13;
  4401  0184  300D               	movlw	13
  4402  0185  00DE               	movwf	_sampleChannelSelect
  4403                           
  4404                           ;common.c: 369: adc_test_init(13,3);
  4405  0186  3003               	movlw	3
  4406  0187  00F0               	movwf	?i1_adc_test_init
  4407  0188  300D               	movlw	13
  4408  0189  2192               	fcall	i1_adc_test_init
  4409                           
  4410                           ;common.c: 370: }
  4411  018A  0008               	return
  4412  018B                     i1l3578:	
  4413                           
  4414                           ;common.c: 371: else
  4415                           ;common.c: 372: {
  4416                           ;common.c: 373: sampleChannelSelect = 12;
  4417  018B  300C               	movlw	12
  4418  018C  00DE               	movwf	_sampleChannelSelect
  4419                           
  4420                           ;common.c: 374: adc_test_init(12,3);
  4421  018D  3003               	movlw	3
  4422  018E  00F0               	movwf	?i1_adc_test_init
  4423  018F  300C               	movlw	12
  4424  0190  2192               	fcall	i1_adc_test_init
  4425  0191  0008               	return
  4426  0192                     __end_of_switchSampleChannel:	
  4427  0192                     __ptext868:	
  4428 ;; =============== function _switchSampleChannel ends ============
  4429                           
  4430                           
  4431 ;; *************** function i1_adc_test_init *****************
  4432 ;; Defined at:
  4433 ;;		line 85 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4434 ;; Parameters:    Size  Location     Type
  4435 ;;  adc_test_ini    1    wreg     unsigned char 
  4436 ;;  adc_test_ini    1    0[COMMON] unsigned char 
  4437 ;; Auto vars:     Size  Location     Type
  4438 ;;  adc_test_ini    1    2[COMMON] unsigned char 
  4439 ;; Return value:  Size  Location     Type
  4440 ;;		None               void
  4441 ;; Registers used:
  4442 ;;		wreg, status,2, status,0
  4443 ;; Tracked objects:
  4444 ;;		On entry : 60/100
  4445 ;;		On exit  : 60/120
  4446 ;;		Unchanged: FFF9F/0
  4447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4448 ;;      Params:         1       0       0       0       0
  4449 ;;      Locals:         1       0       0       0       0
  4450 ;;      Temps:          1       0       0       0       0
  4451 ;;      Totals:         3       0       0       0       0
  4452 ;;Total ram usage:        3 bytes
  4453 ;; Hardware stack levels used:    1
  4454 ;; This function calls:
  4455 ;;		Nothing
  4456 ;; This function is called by:
  4457 ;;		_switchSampleChannel
  4458 ;; This function uses a non-reentrant model
  4459 ;;
  4460  0192                     i1_adc_test_init:	
  4461                           
  4462                           ; Regs used in i1_adc_test_init: [wreg+status,2+status,0]
  4463                           ;i1adc_test_init@channel stored from wreg
  4464  0192  00F2               	movwf	i1adc_test_init@channel
  4465                           
  4466                           ;periph.c: 86: ADCON0 = 0x00;
  4467  0193  019F               	clrf	31	;volatile
  4468                           
  4469                           ;periph.c: 87: ADCON0|=channel<<2;
  4470  0194  00F1               	movwf	??i1_adc_test_init
  4471  0195  1003               	clrc
  4472  0196  0DF1               	rlf	??i1_adc_test_init,f
  4473  0197  1003               	clrc
  4474  0198  0D71               	rlf	??i1_adc_test_init,w
  4475  0199  049F               	iorwf	31,f	;volatile
  4476                           
  4477                           ;periph.c: 89: ADCON1|=ref<<6;
  4478  019A  0870               	movf	i1adc_test_init@ref,w
  4479  019B  00F1               	movwf	??i1_adc_test_init
  4480  019C  0CF1               	rrf	??i1_adc_test_init,f
  4481  019D  0CF1               	rrf	??i1_adc_test_init,f
  4482  019E  0C71               	rrf	??i1_adc_test_init,w
  4483  019F  39C0               	andlw	192
  4484  01A0  1683               	bsf	3,5	;RP0=1, select bank1
  4485  01A1  049F               	iorwf	31,f	;volatile
  4486                           
  4487                           ;periph.c: 90: ADON=1;
  4488  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  4489  01A3  141F               	bsf	31,0
  4490                           
  4491                           ;periph.c: 91: ADIE=1;
  4492  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  4493  01A5  150D               	bsf	13,2
  4494  01A6  0008               	return
  4495  01A7                     __end_ofi1_adc_test_init:	
  4496  01A7                     __ptext871:	
  4497 ;; =============== function _setAD_ConvertFlag ends ============
  4498                           
  4499                           
  4500 ;; *************** function _enable_AD_interrupt *****************
  4501 ;; Defined at:
  4502 ;;		line 118 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4503 ;; Parameters:    Size  Location     Type
  4504 ;;		None
  4505 ;; Auto vars:     Size  Location     Type
  4506 ;;		None
  4507 ;; Return value:  Size  Location     Type
  4508 ;;		None               void
  4509 ;; Registers used:
  4510 ;;		None
  4511 ;; Tracked objects:
  4512 ;;		On entry : 160/120
  4513 ;;		On exit  : 160/120
  4514 ;;		Unchanged: FFE9F/0
  4515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4516 ;;      Params:         0       0       0       0       0
  4517 ;;      Locals:         0       0       0       0       0
  4518 ;;      Temps:          0       0       0       0       0
  4519 ;;      Totals:         0       0       0       0       0
  4520 ;;Total ram usage:        0 bytes
  4521 ;; Hardware stack levels used:    1
  4522 ;; This function calls:
  4523 ;;		Nothing
  4524 ;; This function is called by:
  4525 ;;		_vPutSampleDataIntoTable
  4526 ;; This function uses a non-reentrant model
  4527 ;;
  4528  01A7                     _enable_AD_interrupt:	
  4529  01A7                     i1l3582:	
  4530                           ; Regs used in _enable_AD_interrupt: []
  4531                           
  4532                           
  4533                           ;periph.c: 119: ADIE = 1;
  4534  01A7  150D               	bsf	13,2
  4535  01A8  0008               	return
  4536  01A9                     __end_of_enable_AD_interrupt:	
  4537  01A9                     PL3:	
  4538  01A9  3E90               	addlw	_uiSampleCh12& (0+255)
  4539  01AA  0084               	movwf	4
  4540  01AB  1783               	bsf	3,7	;select IRP bank3
  4541  01AC  0800               	movf	0,w
  4542  01AD  00F2               	movwf	??_FilterCh12
  4543  01AE  0A84               	incf	4,f
  4544  01AF  0800               	movf	0,w
  4545  01B0  00F3               	movwf	??_FilterCh12+1
  4546  01B1  0008               	return
  4547  01B2                     PL4:	
  4548  01B2  1003               	clrc
  4549  01B3  0D7C               	rlf	FilterCh12@i,w
  4550  01B4  3E92               	addlw	(_uiSampleCh12+2)& (0+255)
  4551  01B5  0084               	movwf	4
  4552  01B6  0800               	movf	0,w
  4553  01B7  0008               	return
  4554  01B8                     PL6:	
  4555  01B8  0871               	movf	?_adc_get+1,w
  4556  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  4557  01BA  00C0               	movwf	?_vPutSampleDataIntoTable+1
  4558  01BB  0870               	movf	?_adc_get,w
  4559  01BC  00BF               	movwf	?_vPutSampleDataIntoTable
  4560  01BD  0008               	return
  4561                           
  4562                           	psect	intentry
  4563  0004                     __pintentry:	
  4564                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4565                           
  4566  0004                     interrupt_function:	
  4567  007E                     saved_w	set	btemp
  4568  0004  00FE               	movwf	btemp
  4569  0005  0E03               	swapf	3,w
  4570  0006  1283               	bcf	3,5	;RP0=0, select bank0
  4571  0007  1303               	bcf	3,6	;RP1=0, select bank0
  4572  0008  00C6               	movwf	??_ISR
  4573  0009  0804               	movf	4,w
  4574  000A  00C7               	movwf	??_ISR+1
  4575  000B  080A               	movf	10,w
  4576  000C  00C8               	movwf	??_ISR+2
  4577  000D  087F               	movf	btemp+1,w
  4578  000E  00C9               	movwf	??_ISR+3
  4579  000F  118A  2813         	ljmp	_ISR
  4580                           
  4581                           	psect	text875
  4582  0000                     __ptext875:	
  4583 ;; =============== function _setPWM_Width ends ============
  4584                           
  4585  007E                     btemp	set	126	;btemp
  4586  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon Nov 11 00:00:22 2019

                     ??_clock_config 004A                  ?_startOneHoursTimer 004A  
               ?_enable_AD_interrupt 0070                                   _GO 00F9  
                                 fsr 0004             ?_timer1_interrupt_config 0070  
               FilterCh12@filter_sum 0079                                  l703 0440  
                                l711 0000                                  l720 0000  
                                l714 0000                                  l723 0521  
                                l708 0000                                  l717 0000  
                                l738 0217                                  l683 0430  
                                l693 0438                                  l678 0403  
                                l688 0413                                  l698 041E  
                                _GIE 005F                                  _PB2 0032  
                                _PB3 0033                                  _PB4 0034  
                                _PB5 0035                                  _PR2 0092  
                                _ISR 0013         __end_of_disable_AD_interrupt 0180  
                                fsr0 0004                                  indf 0000  
              FilterCh12@filter_temp 0077               ??_startThreeHoursTimer 004C  
                               ?_ISR 0070                 ??_startOneHoursTimer 004C  
                               l2300 0000                                 l1531 0000  
                               l3300 0000                                 l3302 0000  
                               l1534 0000                                 l3310 0000  
                               l1528 04FE                                 l3304 0000  
                               l3320 0000                                 l3312 0000  
                               l1632 0000                                 l3400 0000  
                               l1537 0000                                 l3306 0000  
                               l3314 0000                                 l3322 0000  
                               l3330 0000                                 l3402 0000  
                               l1571 0000                                 l3260 0000  
                               l3308 0000                                 l3316 0000  
                               l3332 0000                                 l3412 0000  
                               l3420 0000                                 l1549 0000  
                               l3254 0000                                 l1574 0000  
                               l3262 0000                                 l3270 0000  
                               l2294 0000                                 l3318 0000  
                               l3350 0000                                 l1583 0000  
                               l3256 0000                                 l3264 0000  
                               l3272 0000                                 l3280 0000  
                               l3328 0000                                 l3344 0000  
                               l3352 0000                                 l3424 0000  
                               l1488 0000                                 l3440 0000  
                               l3258 0000                                 l3266 0000  
                               l3274 0000                                 l3282 0000  
                               l3290 0000                                 l3346 0000  
                               l3362 0000                                 l3370 0000  
                               l3418 0000                                 l3426 0000  
                               l3268 0000                                 l3276 0000  
                               l3292 0000                                 l3284 0000  
                               l3364 0000                                 l3372 0000  
                               l3452 03B7                                 l3700 0244  
                               l3278 0000                                 l3294 0000  
                               l3286 0000                                 l3454 036D  
                               l3446 036C                                 l3710 0256  
                               l3296 0000                                 l3288 0000  
                               l3376 0000                                 l3472 0000  
                               l3456 03BB                                 l3632 0000  
                               l3640 0000                                 l3800 0000  
                               l3720 0269                                 l3704 0000  
                               l3298 0000                                 l3378 0000  
                               l3394 0000                                 l3466 0000  
                               l3458 0000                                 l3634 0000  
                               l3642 0000                                 l3810 0339  
                               l3730 0000                                 l3706 024B  
                               l3650 0000                                 l3388 0000  
                               l3396 0000                                 l3468 0000  
                               l3636 0000                                 l3804 0331  
                               l3740 0000                                 l3732 0000  
                               l3724 0000                                 l3708 0000  
                               l3660 0000                                 l3652 0000  
                               l3638 0000                                 l3806 0332  
                               l3750 02A5                                 l3734 0000  
                               l3726 0270                                 l3718 0268  
                               l3670 0203                                 l3654 0000  
                               l3646 0000                                 l3760 0000  
                               l3752 0000                                 l3736 0000  
                               l3728 0000                                 l3680 0000  
                               l3664 01F9                                 l3816 033B  
                               l3656 0000                                 l3648 0000  
                               l3770 02D5                                 l3762 0000  
                               l3754 02AA                                 l3738 0287  
                               l3690 022F                                 l3682 0218  
                               l3674 020F                                 l3658 01EE  
                               l3780 02F7                                 l3772 02D9  
                               l3756 02AC                                 l3692 0235  
                               l3684 0000                                 l3676 0210  
                               l3668 0000                                 l3790 0312  
                               l3782 02F9                                 l3694 0237  
                               l3686 0000                                 l3784 0300  
                               l3776 0000                                 l3688 0000  
                               l3794 031D                                 l3786 0304  
                               l3698 0243                                 l3796 0000  
                               l3788 0000                                 l3798 0321  
                               _ADIE 046A                                 _ADIF 006A  
                               _ADON 00F8        startTwelveHourTimer@uiSetTime 004A  
                               u1025 0391                                 u1035 037A  
                               u1537 01E6                                 _PEIE 005E  
               FilterCh13@filter_sum 0053                                 _main 01BE  
                               btemp 007E                                 start 0011  
            ?_getAdOriginalCh13Value 0057           ??_isFinishedTwentyMinTimer 004A  
                              ??_ISR 0046                ??_enable_AD_interrupt 0070  
                  ??_setPinInitVaule 004B           __end_of_isPermitSampleTime 0508  
                _sampleChannelSelect 005E                                ?_main 0070  
                              _CLKPR 0108                                _T1CON 0010  
                              _T2CON 0012                      __end_of_adc_get 007C  
                              _PBOD2 0C42                                _TMR1H 000F  
                              _TMR1L 000E                setAD_ConvertFlag@flag 0070  
                  ??_selectAdChannel 004A                FilterCh13@filter_temp 0051  
                         _FilterCh12 010A                           _FilterCh13 0366  
                    __end_of_initPB3 0406                      __end_of_initPB4 0416  
                    __end_of_initPB5 0421              _vPutSampleDataIntoTable 007D  
                    __end_of_initPin 03FA                                _reset 0521  
                              _timer 0037                                pclath 000A  
                main@uiTimerThreeP5s 002E                                status 0003  
                              wtemp0 007E       __end_of_getAdOriginalCh13Value 0366  
      __size_of_startTwelveHourTimer 000E                 __end_of_clrSampeTime 0521  
                       __end_of_main 0360               __size_of_adc_test_init 0015  
                  ??i1_adc_test_init 0071                               ??_main 0059  
                setPWM_Width@ucWidth 0070                        main@ucChValue 005A  
                 i1adc_test_init@ref 0070                        main@ucDelay1s 002A  
                             _ADCON0 001F                               _ADCON1 009F  
               __end_of_clock_config 0501                               _ADRESH 001E  
                             _ADRESL 009E                               _CCPR1L 0015  
                             ?_reset 0070                               _CLKPCE 0847  
                             i1l2303 0000                               i1l2306 0000  
                             i1l1515 00B5                               i1l2309 0000  
                             u120_25 00FE                               i1l1543 0000  
                             i1l1640 0031                               i1l1641 003B  
                             i1l1642 0045                               i1l3502 0000  
                             i1l2294 0000                               i1l3510 0000  
                             i1l1647 0064                               i1l1639 0027  
                             i1l3504 0000                               i1l3530 00A8  
                             i1l3522 0000                               i1l3610 0000  
                             i1l1499 0000                               i1l3436 0000  
                             i1l3540 00BB                               i1l3524 0000  
                             i1l3516 0000                               i1l3612 0000  
                             u106_25 0133                               i1l3630 0000  
                             i1l3622 0000                               i1l3550 0000  
                             i1l3542 0000                               i1l3534 00AF  
                             i1l3526 0000                               i1l3518 0000  
                             i1l3606 004F                               i1l3624 0000  
                             i1l3552 0000                               i1l3544 00C2  
                             i1l3616 005D                               i1l3490 0111  
                             i1l3482 0110                               i1l3570 0000  
                             i1l3618 0000                               i1l3626 0000  
                             i1l3492 0159                               i1l3476 0000  
                             i1l3628 0000                               i1l3580 0000  
                             i1l3572 0000                               i1l3564 00E0  
                             i1l3556 0000                               u107_25 011E  
                             i1l3494 0000                               i1l3582 01A7  
                             i1l3566 0000                               i1l3558 00DC  
                             i1l3590 0000                               i1l3488 0157  
                             i1l3576 0000                               i1l3568 0000  
                             i1l3584 0000                               i1l3578 018B  
                             i1l3594 0000                               i1l3588 0000  
                             _TMR1IE 0460                               _TMR1IF 0060  
                  _setAD_ConvertFlag 007C                               _TRISB0 0430  
                             _TRISB1 0431                               _TRISB2 0432  
                             _TRISB3 0433                               _TRISB4 0434  
                             _TRISB5 0435                   ?_setAD_ConvertFlag 0070  
               _disable_AD_interrupt 017D          ??_isFinishedThreeHoursTimer 004A  
      __size_of_clearThreeHoursTimer 0004                            ??_adc_get 0072  
             setPWM_Width@ucOldWidth 007D                  ??_setAD_ConvertFlag 0070  
                             _setPB3 0429                               _setPB4 0432  
                             _setPB5 043A          __end_of_clearTwentyMinTimer 050C  
                             clrloop 04F2                            ??_initPB3 004A  
                          ??_initPB4 004A                            ??_initPB5 004A  
                          ??_initPin 004B            ??_vPutSampleDataIntoTable 007D  
                             saved_w 007E              ??_clearTwelveHoursTimer 004A  
                        ?_FilterCh12 0070                          ?_FilterCh13 004A  
                      _adc_test_init 045D            __end_of_setAD_ConvertFlag 007D  
                      ?_setPWM_Width 0070                ?_disable_AD_interrupt 0070  
                 __size_of_adc_start 0004             _initPB2_AsHighResistence 0406  
   __size_of_isFinishedOneHoursTimer 000A     __end_of_isFinishedTwentyMinTimer 04E7  
                     __pcstackCOMMON 0070                         __pidataBANK0 0000  
                  main@uiTimerOneP5s 002C                        __end_of_reset 0510  
                  main@uiTimerTwoP5s 0030       vPutSampleDataIntoTable@channel 0041  
          _isFinishedThreeHoursTimer 04C9                __end_of_timer1_config 04F1  
                     ?_adc_test_init 004A          __end_of_startTwentyMinTimer 04BF  
                            ??_reset 004A     __size_of_timer1_interrupt_config 0003  
              __size_of_clrSampeTime 0002                           __pbssBANK0 0020  
                         __pbssBANK1 00A0                           __pbssBANK3 0190  
                     ??_setPWM_Width 0070                      _setPinInitVaule 0421  
                         adc_get@val 0072                     _uiTwentyMinTimer 0026  
    __end_of_vPutSampleDataIntoTable 0101                           __pmaintext 01BE  
vPutSampleDataIntoTable@ucCh12Length 003D                  __size_of_FilterCh12 0073  
                __size_of_FilterCh13 007B  vPutSampleDataIntoTable@ucCh13Length 003E  
                    _selectAdChannel 0510                           __pintentry 0004  
                            _CCP1CON 0017         __size_of_switchSampleChannel 0012  
                            ?_setPB3 0070                              ?_setPB4 0070  
                            ?_setPB5 0070                __size_of_clock_config 0008  
                       _clrSampeTime 051F                    __end_of_adc_start 0510  
               _uiTwentySecondsTimer 0028                   _isPermitSampleTime 0501  
                 __size_of_pwm_start 0015          __size_of_startOneHoursTimer 000E  
      __size_of_startThreeHoursTimer 000E           __size_of_setAD_ConvertFlag 0001  
                     main@ucTimerP3s 003B                       main@ucTimerP5s 003C  
                ?_isPermitSampleTime 0070               ??_disable_AD_interrupt 0070  
                    i1_adc_test_init 0192          __end_of_enable_AD_interrupt 01A9  
                         _uiBigTimer 0020                         setPB3@bValue 004A  
                       setPB4@bValue 004A                         _clock_config 04F9  
                       setPB5@bValue 004A                              _adc_get 0071  
                    __size_of_setPB3 0009                      __size_of_setPB4 0008  
                    __size_of_setPB5 0008                 ??_isPermitSampleTime 004A  
       __end_of_startTwelveHourTimer 04B1                        initPB3@bValue 004A  
                      initPB4@bValue 004A                              _initPB3 03FA  
                            _initPB4 040B                              _initPB5 0416  
                       __size_of_ISR 005E                        initPB5@bValue 004A  
                            _initPin 03F0                 _bSmallTimerStartFlag 0035  
                    ??_adc_test_init 004B  switchSampleChannel@ucCurrentChannel 0073  
  __size_of_isFinishedTwentyMinTimer 000A            ?_isFinishedTwentyMinTimer 0070  
            __end_of_setPinInitVaule 0429                 end_of_initialization 045A  
              pwm_start@ucPulseWidth 004B              __end_of_selectAdChannel 0514  
            _isFinishedOneHoursTimer 04BF                    __end_of_pwm_start 0487  
               __end_of_setPWM_Width 010A         ??_isFinishedTwelveHoursTimer 004A  
                _bTwentyMinStartFlag 0036                         ??_FilterCh12 0072  
                       ??_FilterCh13 004C         __end_of_clearThreeHoursTimer 0518  
     __size_of_clearTwelveHoursTimer 0004              __end_ofi1_adc_test_init 01A7  
            _timer1_interrupt_config 051C        __end_of_clearTwelveHoursTimer 051C  
         ??_initPB2_AsHighResistence 004A   __size_of_isFinishedThreeHoursTimer 000A  
                         main@ucStep 003A        startTwentyMinTimer@uiSetValue 004A  
__size_of_isFinishedTwelveHoursTimer 000A                   __end_of_FilterCh12 017D  
                 __end_of_FilterCh13 03E1             vPutSampleDataIntoTable@i 0044  
                     __end_of_setPB3 0432                       __end_of_setPB4 043A  
                     __end_of_setPB5 0442                  start_initialization 0442  
                        __end_of_ISR 0071                     ?_setPinInitVaule 0070  
           ??_getAdOriginalCh13Value 0059         __size_of_clearTwentyMinTimer 0004  
                _switchSampleChannel 0180            ??_isFinishedOneHoursTimer 004A  
               _startTwelveHourTimer 04A3    __end_of_isFinishedThreeHoursTimer 04D3  
                   ?_selectAdChannel 0070    vPutSampleDataIntoTable@uiCalWidth 0042  
                        __pdataBANK0 005E                 ?_switchSampleChannel 0070  
                           ??_setPB3 004A                             ??_setPB4 004A  
                           ??_setPB5 004A             ?_vPutSampleDataIntoTable 003F  
          ??_timer1_interrupt_config 004A                          __pbssCOMMON 007D  
                      __pcstackBANK0 003F                     ?i1_adc_test_init 0070  
                          _adc_start 050C                      main@uiCh13Value 005C  
              ?_startTwelveHourTimer 004A         __size_of_startTwentyMinTimer 000E  
             i1adc_test_init@channel 0072               __size_of_timer1_config 000A  
               _clearThreeHoursTimer 0514                __size_of_setPWM_Width 0009  
       __end_of_startThreeHoursTimer 04A3                            __ptext840 0495  
                          __ptext841 04D3                            __ptext833 0360  
                          __ptext850 051C                            __ptext842 04A3  
                          __ptext834 0421                            __ptext851 04E7  
                          __ptext843 0508                            __ptext835 03F0  
                          __ptext860 040B                            __ptext852 04F9  
                          __ptext844 04DD                            __ptext836 0366  
                          __ptext861 0429                            __ptext853 0521  
                          __ptext845 051F                            __ptext837 04BF  
                          __ptext870 007C                            __ptext862 03FA  
                          __ptext854 0510                            __ptext846 0501  
                          __ptext838 0487                            __ptext871 01A7  
                          __ptext863 0514                            __ptext855 0472  
                          __ptext847 050C                            __ptext839 04C9  
                          __ptext872 017D                            __ptext864 0518  
                          __ptext856 0406                            __ptext848 04B1  
                          __ptext873 010A                            __ptext865 0013  
                          __ptext857 043A                            __ptext849 045D  
                          __ptext874 0101                            __ptext866 007D  
                          __ptext858 0416                            __ptext875 0000  
                          __ptext867 0180                            __ptext859 0432  
                          __ptext868 0192                            __ptext869 0071  
              ??_switchSampleChannel 0073                    main@cTimerP5s_783 0039  
                  main@cTimerP5s_777 0038                             ?_adc_get 0070  
    __end_of_isFinishedOneHoursTimer 04C9   __end_of_isFinishedTwelveHoursTimer 04DD  
         _isFinishedTwelveHoursTimer 04D3                             ?_initPB3 0070  
                           ?_initPB4 0070                             ?_initPB5 0070  
                    ISR@ucTimer1sCnt 0032                             ?_initPin 0070  
         __end_of_startOneHoursTimer 0495     __end_of_initPB2_AsHighResistence 040B  
                         ?_adc_start 0070      __size_of_getAdOriginalCh13Value 0006  
                     __size_of_reset FFEF                    interrupt_function 0004  
                       _setPWM_Width 0101      __end_of_timer1_interrupt_config 051F  
      __size_of_disable_AD_interrupt 0003            pwm_start@ucPulseFrequency 004A  
              ?_clearThreeHoursTimer 0070                         _uiSampleCh12 0190  
                       _uiSampleCh13 00A0                 adc_test_init@channel 004C  
       __size_of_enable_AD_interrupt 0002  vPutSampleDataIntoTable@uiSampleData 003F  
        __size_of_isPermitSampleTime 0007                            _pwm_start 0472  
                       _uiSmallTimer 0024                __end_of_adc_test_init 0472  
                      _timer1_config 04E7               ??_startTwelveHourTimer 004C  
             _getAdOriginalCh13Value 0360                  _clearTwentyMinTimer 0508  
        startOneHoursTimer@uiSetTime 004A                     __size_of_adc_get 000B  
                         ?_pwm_start 004A             _isFinishedTwentyMinTimer 04DD  
                   __size_of_initPB3 000C                     __size_of_initPB4 000B  
                   __size_of_initPB5 000B                     __size_of_initPin 000A  
                     ?_timer1_config 0070                 ?_clearTwentyMinTimer 0070  
                        ??_adc_start 004A                 _startThreeHoursTimer 0495  
              _clearTwelveHoursTimer 0518                       _uiOneHourTimer 0022  
                      __size_of_main 01A2   vPutSampleDataIntoTable@uiInitWidth 005F  
                           clear_ram 04F1               ??_clearThreeHoursTimer 004A  
  __size_of_initPB2_AsHighResistence 0005            ?_initPB2_AsHighResistence 0070  
             _bOneHourTimerStartFlag 0034                        ?_clrSampeTime 0070  
                _startTwentyMinTimer 04B1                ??_clearTwentyMinTimer 004A  
              ?_startThreeHoursTimer 004A     __size_of_vPutSampleDataIntoTable 0084  
                           intlevel1 0000                 ?_startTwentyMinTimer 004A  
           __size_of_setPinInitVaule 0008           ?_isFinishedThreeHoursTimer 0070  
                      ?_clock_config 0070             __size_of_selectAdChannel 0004  
      startThreeHoursTimer@uiSetTime 004A                          ??_pwm_start 004B  
                     ??_clrSampeTime 004A          ?_isFinishedTwelveHoursTimer 0070  
                 _bBigTimerStartFlag 0033                      ??_timer1_config 004A  
                        FilterCh12@i 007C                          FilterCh12@j 007B  
                        FilterCh13@i 0056                          FilterCh13@j 0055  
           ?_isFinishedOneHoursTimer 0070               ?_clearTwelveHoursTimer 0070  
                _enable_AD_interrupt 01A7                     adc_test_init@ref 004A  
              ??_startTwentyMinTimer 004C                   _startOneHoursTimer 0487  
           __size_ofi1_adc_test_init 0015          __end_of_switchSampleChannel 0192  
