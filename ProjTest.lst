

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Sun Nov 03 21:58:25 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,delta=2
    16                           	psect	text930,local,class=CODE,delta=2
    17                           	psect	text931,local,class=CODE,delta=2
    18                           	psect	text933,local,class=CODE,delta=2
    19                           	psect	text934,local,class=CODE,delta=2
    20                           	psect	text939,local,class=CODE,delta=2
    21                           	psect	text940,local,class=CODE,delta=2
    22                           	psect	text941,local,class=CODE,delta=2
    23                           	psect	text942,local,class=CODE,delta=2
    24                           	psect	text943,local,class=CODE,delta=2
    25                           	psect	text944,local,class=CODE,delta=2
    26                           	psect	text945,local,class=CODE,delta=2
    27                           	psect	text946,local,class=CODE,delta=2
    28                           	psect	text947,local,class=CODE,delta=2
    29                           	psect	text948,local,class=CODE,delta=2
    30                           	psect	text949,local,class=CODE,delta=2
    31                           	psect	text952,local,class=CODE,delta=2
    32                           	psect	text953,local,class=CODE,delta=2
    33                           	psect	text954,local,class=CODE,delta=2
    34                           	psect	text955,local,class=CODE,delta=2
    35                           	psect	text956,local,class=CODE,delta=2
    36                           	psect	text957,local,class=CODE,delta=2
    37                           	psect	text965,local,class=CODE,delta=2
    38                           	psect	text966,local,class=CODE,delta=2
    39                           	psect	text967,local,class=CODE,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	text971,local,class=CODE,delta=2
    42                           	psect	pa_nodes,global,class=CODE,delta=2
    43                           	dabs	1,0x7E,2
    44  000A                     	;#
    45                           
    46                           	psect	config
    47  2000  0FFF               	dw	4095	;#
    48  2001  3FDE               	dw	16350	;#
    49  2002  3FF8               	dw	16376	;#
    50                           
    51                           	psect	idataBANK0
    52  0000                     __pidataBANK0:	
    53  001F                     _ADCON0	set	31
    54  001E                     _ADRESH	set	30
    55  0017                     _CCP1CON	set	23
    56  0015                     _CCPR1L	set	21
    57  0010                     _T1CON	set	16
    58  0012                     _T2CON	set	18
    59  000F                     _TMR1H	set	15
    60  000E                     _TMR1L	set	14
    61  006A                     _ADIF	set	106
    62  00F8                     _ADON	set	248
    63  005F                     _GIE	set	95
    64  00F9                     _GO	set	249
    65  0032                     _PB2	set	50
    66  0033                     _PB3	set	51
    67  0034                     _PB4	set	52
    68  0035                     _PB5	set	53
    69  005E                     _PEIE	set	94
    70  0060                     _TMR1IF	set	96
    71  009F                     _ADCON1	set	159
    72  009E                     _ADRESL	set	158
    73  0092                     _PR2	set	146
    74  046A                     _ADIE	set	1130
    75  0460                     _TMR1IE	set	1120
    76  0430                     _TRISB0	set	1072
    77  0431                     _TRISB1	set	1073
    78  0432                     _TRISB2	set	1074
    79  0433                     _TRISB3	set	1075
    80  0434                     _TRISB4	set	1076
    81  0435                     _TRISB5	set	1077
    82  0108                     _CLKPR	set	264
    83  0847                     _CLKPCE	set	2119
    84  0C42                     _PBOD2	set	3138
    85                           
    86                           	psect	cinit
    87  04AB                     start_initialization:	
    88  04AB  30A0               	movlw	low __pbssBANK1
    89                           
    90                           ; Clear objects allocated to COMMON
    91  04AC  01FD               	clrf	__pbssCOMMON& (0+127)
    92                           
    93                           ; Clear objects allocated to BANK0
    94  04AD  01E9               	clrf	__pbssBANK0& (0+127)
    95  04AE  01EA               	clrf	(__pbssBANK0+1)& (0+127)
    96  04AF  01EB               	clrf	(__pbssBANK0+2)& (0+127)
    97  04B0  01EC               	clrf	(__pbssBANK0+3)& (0+127)
    98  04B1  01ED               	clrf	(__pbssBANK0+4)& (0+127)
    99                           
   100                           ; Clear objects allocated to BANK1
   101  04B2  1383               	bcf	3,7	;select IRP bank0
   102  04B3  0084               	movwf	4
   103  04B4  30E7               	movlw	low (__pbssBANK1+71)
   104  04B5  118A  255A  118A   	fcall	clear_ram
   105  04B8  3090               	movlw	low __pbssBANK3
   106                           
   107                           ; Clear objects allocated to BANK3
   108  04B9  1783               	bsf	3,7	;select IRP bank2
   109  04BA  0084               	movwf	4
   110  04BB  30E0               	movlw	low (__pbssBANK3+80)
   111  04BC  118A  255A         	fcall	clear_ram
   112                           
   113                           ;initializer for _sampleChannelSelect
   114  04BE  300C               	movlw	12
   115  04BF  00EE               	movwf	__pdataBANK0& (0+127)
   116  04C0                     end_of_initialization:	
   117                           ;End of C runtime variable initialization code
   118                           
   119  04C0  0183               	clrf	3
   120  04C1  118A  2813         	ljmp	_main	;jump to C main() function
   121                           
   122                           	psect	bssCOMMON
   123  007D                     __pbssCOMMON:	
   124  007D                     vPutSampleDataIntoTable@ucChannelFirstLength:	
   125  007D                     	ds	1
   126                           
   127                           	psect	bssBANK0
   128  0069                     __pbssBANK0:	
   129  0069                     calPulseWidth@uiOldValue:	
   130  0069                     	ds	2
   131  006B                     main@ucStep:	
   132  006B                     	ds	1
   133  006C                     vPutSampleDataIntoTable@ucChannelFourteenthLength:	
   134  006C                     	ds	1
   135  006D                     vPutSampleDataIntoTable@ucChannelFourthLength:	
   136  006D                     	ds	1
   137                           
   138                           	psect	dataBANK0
   139  006E                     __pdataBANK0:	
   140  006E                     _sampleChannelSelect:	
   141  006E                     	ds	1
   142                           
   143                           	psect	bssBANK1
   144  00A0                     __pbssBANK1:	
   145  00A0                     _uiBigTimer:	
   146  00A0                     	ds	2
   147  00A2                     _uiOneHourTimer:	
   148  00A2                     	ds	2
   149  00A4                     _uiSmallTimer:	
   150  00A4                     	ds	2
   151  00A6                     _uiTwentyMinTimer:	
   152  00A6                     	ds	2
   153  00A8                     _uiTwentySecondsTimer:	
   154  00A8                     	ds	2
   155  00AA                     main@ucDelay1s:	
   156  00AA                     	ds	2
   157  00AC                     main@uiTimerOneP5s:	
   158  00AC                     	ds	2
   159  00AE                     main@uiTimerThreeP5s:	
   160  00AE                     	ds	2
   161  00B0                     main@uiTimerTwoP5s:	
   162  00B0                     	ds	2
   163  00B2                     ISR@ucTimer1sCnt:	
   164  00B2                     	ds	1
   165  00B3                     _adc_convert_flag:	
   166  00B3                     	ds	1
   167  00B4                     _bBigTimerStartFlag:	
   168  00B4                     	ds	1
   169  00B5                     _bOneHourTimerStartFlag:	
   170  00B5                     	ds	1
   171  00B6                     _bSmallTimerStartFlag:	
   172  00B6                     	ds	1
   173  00B7                     _bTwentyMinStartFlag:	
   174  00B7                     	ds	1
   175  00B8                     _sampleTimes:	
   176  00B8                     	ds	1
   177  00B9                     _timer:	
   178  00B9                     	ds	1
   179  00BA                     calPulseWidth@bInitFlag:	
   180  00BA                     	ds	1
   181  00BB                     main@cTimerP5s_790:	
   182  00BB                     	ds	1
   183  00BC                     main@cTimerP5s_796:	
   184  00BC                     	ds	1
   185  00BD                     main@ucTimerP3s:	
   186  00BD                     	ds	1
   187  00BE                     main@ucTimerP5s:	
   188  00BE                     	ds	1
   189  00BF                     _uiSampleChannelFourth:	
   190  00BF                     	ds	40
   191                           
   192                           	psect	bssBANK3
   193  0190                     __pbssBANK3:	
   194  0190                     _uiSampleChannelFirst:	
   195  0190                     	ds	40
   196  01B8                     _uiSampleChannelFourteenth:	
   197  01B8                     	ds	40
   198                           
   199                           	psect	clrtext
   200  055A                     clear_ram:	
   201                           ;	Called with FSR containing the base address, and
   202                           ;	W with the last address+1
   203                           
   204  055A  0064               	clrwdt	;clear the watchdog before getting into this loop
   205  055B                     clrloop:	
   206  055B  0180               	clrf	0	;clear RAM location pointed to by FSR
   207  055C  0A84               	incf	4,f	;increment pointer
   208  055D  0604               	xorwf	4,w	;XOR with final address
   209  055E  1903               	btfsc	3,2	;have we reached the end yet?
   210  055F  3400               	retlw	0	;all done for this memory range, return
   211  0560  0604               	xorwf	4,w	;XOR again to restore value
   212  0561  2D5B               	goto	clrloop	;do the next byte
   213                           
   214                           	psect	cstackCOMMON
   215  0070                     __pcstackCOMMON:	
   216  0070                     ?_clearTwelveHoursTimer:	
   217  0070                     ?_clearThreeHoursTimer:	
   218                           ; 0 bytes @ 0x0
   219                           
   220  0070                     ?_clock_config:	
   221                           ; 0 bytes @ 0x0
   222                           
   223  0070                     ?_timer1_config:	
   224                           ; 0 bytes @ 0x0
   225                           
   226  0070                     ?_timer1_interrupt_config:	
   227                           ; 0 bytes @ 0x0
   228                           
   229  0070                     ?_adc_start:	
   230                           ; 0 bytes @ 0x0
   231                           
   232  0070                     ?_process_AD_Converter_Value:	
   233                           ; 0 bytes @ 0x0
   234                           
   235  0070                     ?_clrSampeTime:	
   236                           ; 0 bytes @ 0x0
   237                           
   238  0070                     ?_clearTwentyMinTimer:	
   239                           ; 0 bytes @ 0x0
   240                           
   241  0070                     ?_AD_Sample:	
   242                           ; 0 bytes @ 0x0
   243                           
   244  0070                     ?_initPB3:	
   245                           ; 0 bytes @ 0x0
   246                           
   247  0070                     ?_setPB3:	
   248                           ; 0 bytes @ 0x0
   249                           
   250  0070                     ?_initPB4:	
   251                           ; 0 bytes @ 0x0
   252                           
   253  0070                     ?_setPB4:	
   254                           ; 0 bytes @ 0x0
   255                           
   256  0070                     ?_initPB5:	
   257                           ; 0 bytes @ 0x0
   258                           
   259  0070                     ?_setPB5:	
   260                           ; 0 bytes @ 0x0
   261                           
   262  0070                     ?_initPB2_AsHighResistence:	
   263                           ; 0 bytes @ 0x0
   264                           
   265  0070                     ?_pwm_start:	
   266                           ; 0 bytes @ 0x0
   267                           
   268  0070                     ?_initPin:	
   269                           ; 0 bytes @ 0x0
   270                           
   271  0070                     ?_setPinInitVaule:	
   272                           ; 0 bytes @ 0x0
   273                           
   274  0070                     ?_selectAdChannel:	
   275                           ; 0 bytes @ 0x0
   276                           
   277  0070                     ?_reset:	
   278                           ; 0 bytes @ 0x0
   279                           
   280  0070                     ?_setAD_ConvertFlag:	
   281                           ; 0 bytes @ 0x0
   282                           
   283  0070                     ?_ISR:	
   284                           ; 0 bytes @ 0x0
   285                           
   286  0070                     ?i1_setAD_ConvertFlag:	
   287                           ; 0 bytes @ 0x0
   288                           
   289  0070                     ??i1_setAD_ConvertFlag:	
   290                           ; 0 bytes @ 0x0
   291                           
   292  0070                     ?_isPermitSampleTime:	
   293                           ; 0 bytes @ 0x0
   294                           
   295  0070                     ?_isFinishedTwentyMinTimer:	
   296                           ; 1 bytes @ 0x0
   297                           
   298  0070                     ?_isFinishedTwelveHoursTimer:	
   299                           ; 1 bytes @ 0x0
   300                           
   301  0070                     ?_isFinishedThreeHoursTimer:	
   302                           ; 1 bytes @ 0x0
   303                           
   304  0070                     ?_isFinishedOneHoursTimer:	
   305                           ; 1 bytes @ 0x0
   306                           
   307  0070                     ?_calPulseWidth:	
   308                           ; 1 bytes @ 0x0
   309                           
   310  0070                     ?_getAD_ConvertFlag:	
   311                           ; 1 bytes @ 0x0
   312                           
   313  0070                     ?_adc_get:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0070                     ?_main:	
   317                           ; 2 bytes @ 0x0
   318                           
   319  0070                     i1setAD_ConvertFlag@flag:	
   320                           ; 2 bytes @ 0x0
   321                           
   322                           
   323                           ; 1 bytes @ 0x0
   324  0070                     	ds	2
   325  0072                     ??_adc_get:	
   326  0072                     adc_get@val:	
   327                           ; 0 bytes @ 0x2
   328                           
   329                           
   330                           ; 2 bytes @ 0x2
   331  0072                     	ds	2
   332  0074                     ?_vPutSampleDataIntoTable:	
   333  0074                     vPutSampleDataIntoTable@uiSampleData:	
   334                           ; 0 bytes @ 0x4
   335                           
   336                           
   337                           ; 2 bytes @ 0x4
   338  0074                     	ds	2
   339  0076                     vPutSampleDataIntoTable@channel:	
   340                           
   341                           ; 1 bytes @ 0x6
   342  0076                     	ds	1
   343  0077                     ??_vPutSampleDataIntoTable:	
   344  0077                     vPutSampleDataIntoTable@i:	
   345                           ; 0 bytes @ 0x7
   346                           
   347                           
   348                           ; 2 bytes @ 0x7
   349  0077                     	ds	2
   350  0079                     ??_ISR:	
   351                           
   352                           ; 0 bytes @ 0x9
   353  0079                     	ds	4
   354                           
   355                           	psect	cstackBANK0
   356  0020                     __pcstackBANK0:	
   357  0020                     ??_clearTwelveHoursTimer:	
   358  0020                     ??_clearThreeHoursTimer:	
   359                           ; 0 bytes @ 0x0
   360                           
   361  0020                     ??_clock_config:	
   362                           ; 0 bytes @ 0x0
   363                           
   364  0020                     ??_timer1_config:	
   365                           ; 0 bytes @ 0x0
   366                           
   367  0020                     ??_timer1_interrupt_config:	
   368                           ; 0 bytes @ 0x0
   369                           
   370  0020                     ?_adc_test_init:	
   371                           ; 0 bytes @ 0x0
   372                           
   373  0020                     ??_adc_start:	
   374                           ; 0 bytes @ 0x0
   375                           
   376  0020                     ?_startTwentyMinTimer:	
   377                           ; 0 bytes @ 0x0
   378                           
   379  0020                     ??_isPermitSampleTime:	
   380                           ; 0 bytes @ 0x0
   381                           
   382  0020                     ??_clrSampeTime:	
   383                           ; 0 bytes @ 0x0
   384                           
   385  0020                     ??_isFinishedTwentyMinTimer:	
   386                           ; 0 bytes @ 0x0
   387                           
   388  0020                     ??_clearTwentyMinTimer:	
   389                           ; 0 bytes @ 0x0
   390                           
   391  0020                     ?_startTwelveHourTimer:	
   392                           ; 0 bytes @ 0x0
   393                           
   394  0020                     ??_isFinishedTwelveHoursTimer:	
   395                           ; 0 bytes @ 0x0
   396                           
   397  0020                     ?_startThreeHoursTimer:	
   398                           ; 0 bytes @ 0x0
   399                           
   400  0020                     ??_isFinishedThreeHoursTimer:	
   401                           ; 0 bytes @ 0x0
   402                           
   403  0020                     ?_startOneHoursTimer:	
   404                           ; 0 bytes @ 0x0
   405                           
   406  0020                     ??_isFinishedOneHoursTimer:	
   407                           ; 0 bytes @ 0x0
   408                           
   409  0020                     ??_AD_Sample:	
   410                           ; 0 bytes @ 0x0
   411                           
   412  0020                     ??_initPB3:	
   413                           ; 0 bytes @ 0x0
   414                           
   415  0020                     ??_setPB3:	
   416                           ; 0 bytes @ 0x0
   417                           
   418  0020                     ??_initPB4:	
   419                           ; 0 bytes @ 0x0
   420                           
   421  0020                     ??_setPB4:	
   422                           ; 0 bytes @ 0x0
   423                           
   424  0020                     ??_initPB5:	
   425                           ; 0 bytes @ 0x0
   426                           
   427  0020                     ??_setPB5:	
   428                           ; 0 bytes @ 0x0
   429                           
   430  0020                     ??_initPB2_AsHighResistence:	
   431                           ; 0 bytes @ 0x0
   432                           
   433  0020                     ??_pwm_start:	
   434                           ; 0 bytes @ 0x0
   435                           
   436  0020                     ??_selectAdChannel:	
   437                           ; 0 bytes @ 0x0
   438                           
   439  0020                     ??_reset:	
   440                           ; 0 bytes @ 0x0
   441                           
   442  0020                     ??_getAD_ConvertFlag:	
   443                           ; 0 bytes @ 0x0
   444                           
   445  0020                     ??_setAD_ConvertFlag:	
   446                           ; 0 bytes @ 0x0
   447                           
   448  0020                     ?_Filter:	
   449                           ; 0 bytes @ 0x0
   450                           
   451  0020                     initPB3@bValue:	
   452                           ; 2 bytes @ 0x0
   453                           
   454  0020                     setPB3@bValue:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0020                     initPB4@bValue:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0020                     setPB4@bValue:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0020                     initPB5@bValue:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  0020                     setPB5@bValue:	
   467                           ; 1 bytes @ 0x0
   468                           
   469  0020                     pwm_start@ucPulseWidth:	
   470                           ; 1 bytes @ 0x0
   471                           
   472  0020                     setAD_ConvertFlag@flag:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0020                     adc_test_init@ref:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0020                     Filter@tmpValue:	
   479                           ; 1 bytes @ 0x0
   480                           
   481  0020                     startTwelveHourTimer@uiSetTime:	
   482                           ; 2 bytes @ 0x0
   483                           
   484  0020                     startThreeHoursTimer@uiSetTime:	
   485                           ; 2 bytes @ 0x0
   486                           
   487  0020                     startOneHoursTimer@uiSetTime:	
   488                           ; 2 bytes @ 0x0
   489                           
   490  0020                     startTwentyMinTimer@uiSetValue:	
   491                           ; 2 bytes @ 0x0
   492                           
   493                           
   494                           ; 2 bytes @ 0x0
   495  0020                     	ds	1
   496  0021                     ??_adc_test_init:	
   497  0021                     ??_initPin:	
   498                           ; 0 bytes @ 0x1
   499                           
   500  0021                     ??_setPinInitVaule:	
   501                           ; 0 bytes @ 0x1
   502                           
   503                           
   504                           ; 0 bytes @ 0x1
   505  0021                     	ds	1
   506  0022                     ??_startTwentyMinTimer:	
   507  0022                     ??_startTwelveHourTimer:	
   508                           ; 0 bytes @ 0x2
   509                           
   510  0022                     ??_startThreeHoursTimer:	
   511                           ; 0 bytes @ 0x2
   512                           
   513  0022                     ??_startOneHoursTimer:	
   514                           ; 0 bytes @ 0x2
   515                           
   516  0022                     ??_Filter:	
   517                           ; 0 bytes @ 0x2
   518                           
   519  0022                     adc_test_init@channel:	
   520                           ; 0 bytes @ 0x2
   521                           
   522                           
   523                           ; 1 bytes @ 0x2
   524  0022                     	ds	1
   525  0023                     ??_process_AD_Converter_Value:	
   526                           
   527                           ; 0 bytes @ 0x3
   528  0023                     	ds	3
   529  0026                     Filter@filter_buf:	
   530                           
   531                           ; 40 bytes @ 0x6
   532  0026                     	ds	40
   533  004E                     Filter@filter_temp:	
   534                           
   535                           ; 2 bytes @ 0x2E
   536  004E                     	ds	2
   537  0050                     Filter@filter_sum:	
   538                           
   539                           ; 2 bytes @ 0x30
   540  0050                     	ds	2
   541  0052                     Filter@cir:	
   542                           
   543                           ; 2 bytes @ 0x32
   544  0052                     	ds	2
   545  0054                     Filter@j:	
   546                           
   547                           ; 1 bytes @ 0x34
   548  0054                     	ds	1
   549  0055                     Filter@i:	
   550                           
   551                           ; 1 bytes @ 0x35
   552  0055                     	ds	1
   553  0056                     ?_getAdOriginalCh12Value:	
   554  0056                     ?_getAdOriginalCh13Value:	
   555                           ; 2 bytes @ 0x36
   556                           
   557                           
   558                           ; 2 bytes @ 0x36
   559  0056                     	ds	2
   560  0058                     ??_getAdOriginalCh12Value:	
   561  0058                     ??_getAdOriginalCh13Value:	
   562                           ; 0 bytes @ 0x38
   563                           
   564  0058                     ??_calPulseWidth:	
   565                           ; 0 bytes @ 0x38
   566                           
   567                           
   568                           ; 0 bytes @ 0x38
   569  0058                     	ds	2
   570  005A                     calPulseWidth@uiGapValue:	
   571                           
   572                           ; 2 bytes @ 0x3A
   573  005A                     	ds	2
   574  005C                     calPulseWidth@ucThreeTimesValue:	
   575                           
   576                           ; 1 bytes @ 0x3C
   577  005C                     	ds	1
   578  005D                     calPulseWidth@ucHalfValue:	
   579                           
   580                           ; 1 bytes @ 0x3D
   581  005D                     	ds	1
   582  005E                     calPulseWidth@ucGapValue:	
   583                           
   584                           ; 1 bytes @ 0x3E
   585  005E                     	ds	1
   586  005F                     calPulseWidth@uiChannel2Value:	
   587                           
   588                           ; 2 bytes @ 0x3F
   589  005F                     	ds	2
   590  0061                     calPulseWidth@ucPulseWidth:	
   591                           
   592                           ; 1 bytes @ 0x41
   593  0061                     	ds	1
   594  0062                     calPulseWidth@uiNewValue:	
   595                           
   596                           ; 2 bytes @ 0x42
   597  0062                     	ds	2
   598  0064                     ??_main:	
   599  0064                     main@ucChValue:	
   600                           ; 0 bytes @ 0x44
   601                           
   602                           
   603                           ; 2 bytes @ 0x44
   604  0064                     	ds	2
   605  0066                     main@ucPulseWidth:	
   606                           
   607                           ; 1 bytes @ 0x46
   608  0066                     	ds	1
   609  0067                     main@uiCh13Value:	
   610                           
   611                           ; 2 bytes @ 0x47
   612  0067                     	ds	2
   613                           
   614                           	psect	maintext
   615  0013                     __pmaintext:	
   616 ;;Data sizes: Strings 0, constant 0, data 1, bss 157, persistent 0 stack 0
   617 ;;Auto spaces:   Size  Autos    Used
   618 ;; COMMON          14     13      14
   619 ;; BANK0           80     73      79
   620 ;; BANK1           80      0      71
   621 ;; BANK3           96      0      80
   622 ;; BANK2           96      0       0
   623 ;;
   624 ;; Pointer list with targets:
   625 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   626 ;;
   627 ;; ?_getAdOriginalCh13Value	unsigned int  size(1) Largest target is 0
   628 ;;
   629 ;; ?_getAdOriginalCh12Value	unsigned int  size(1) Largest target is 0
   630 ;;
   631 ;; ?_Filter	unsigned int  size(1) Largest target is 0
   632 ;;
   633 ;; Filter@tmpValue	PTR int  size(2) Largest target is 40
   634 ;;		 -> uiSampleChannelFourteenth(BANK3[40]), uiSampleChannelFourth(BANK1[40]), uiSampleChannelFirst(BANK3[40]), 
   635 ;;
   636 ;;
   637 ;; Critical Paths under _main in COMMON
   638 ;;
   639 ;;   None.
   640 ;;
   641 ;; Critical Paths under _ISR in COMMON
   642 ;;
   643 ;;   _ISR->_vPutSampleDataIntoTable
   644 ;;   _vPutSampleDataIntoTable->_adc_get
   645 ;;
   646 ;; Critical Paths under _main in BANK0
   647 ;;
   648 ;;   _main->_calPulseWidth
   649 ;;   _calPulseWidth->_getAdOriginalCh12Value
   650 ;;   _getAdOriginalCh13Value->_Filter
   651 ;;   _process_AD_Converter_Value->_adc_test_init
   652 ;;   _getAdOriginalCh12Value->_Filter
   653 ;;   _setPinInitVaule->_setPB3
   654 ;;   _setPinInitVaule->_setPB4
   655 ;;   _setPinInitVaule->_setPB5
   656 ;;   _initPin->_initPB3
   657 ;;   _initPin->_initPB4
   658 ;;   _initPin->_initPB5
   659 ;;
   660 ;; Critical Paths under _ISR in BANK0
   661 ;;
   662 ;;   None.
   663 ;;
   664 ;; Critical Paths under _main in BANK1
   665 ;;
   666 ;;   None.
   667 ;;
   668 ;; Critical Paths under _ISR in BANK1
   669 ;;
   670 ;;   None.
   671 ;;
   672 ;; Critical Paths under _main in BANK3
   673 ;;
   674 ;;   None.
   675 ;;
   676 ;; Critical Paths under _ISR in BANK3
   677 ;;
   678 ;;   None.
   679 ;;
   680 ;; Critical Paths under _main in BANK2
   681 ;;
   682 ;;   None.
   683 ;;
   684 ;; Critical Paths under _ISR in BANK2
   685 ;;
   686 ;;   None.
   687 ;;
   688 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   689 ;;
   690 ;;
   691 ;;Call Graph Tables:
   692 ;;
   693 ;; ---------------------------------------------------------------------------------
   694 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   695 ;; ---------------------------------------------------------------------------------
   696 ;; (0) _main                                                 5     5      0    2142
   697 ;;                                             68 BANK0      5     5      0
   698 ;;                            _initPin
   699 ;;                    _setPinInitVaule
   700 ;;                    _selectAdChannel
   701 ;;                       _clock_config
   702 ;;                      _timer1_config
   703 ;;            _timer1_interrupt_config
   704 ;;                      _adc_test_init
   705 ;;                          _adc_start
   706 ;;                _startTwentyMinTimer
   707 ;;         _process_AD_Converter_Value
   708 ;;                 _isPermitSampleTime
   709 ;;                       _clrSampeTime
   710 ;;                      _calPulseWidth
   711 ;;                          _pwm_start
   712 ;;           _isFinishedTwentyMinTimer
   713 ;;             _getAdOriginalCh13Value
   714 ;;                             _setPB3
   715 ;;                             _setPB4
   716 ;;                             _setPB5
   717 ;;                _clearTwentyMinTimer
   718 ;;               _startTwelveHourTimer
   719 ;;         _isFinishedTwelveHoursTimer
   720 ;;              _clearTwelveHoursTimer
   721 ;;               _startThreeHoursTimer
   722 ;;          _isFinishedThreeHoursTimer
   723 ;;               _clearThreeHoursTimer
   724 ;;                 _startOneHoursTimer
   725 ;;            _isFinishedOneHoursTimer
   726 ;;                              _reset
   727 ;; ---------------------------------------------------------------------------------
   728 ;; (1) _calPulseWidth                                       12    12      0     990
   729 ;;                                             56 BANK0     12    12      0
   730 ;;             _getAdOriginalCh12Value
   731 ;; ---------------------------------------------------------------------------------
   732 ;; (1) _getAdOriginalCh13Value                               2     0      2     620
   733 ;;                                             54 BANK0      2     0      2
   734 ;;                             _Filter
   735 ;; ---------------------------------------------------------------------------------
   736 ;; (1) _process_AD_Converter_Value                           0     0      0      66
   737 ;;                  _getAD_ConvertFlag
   738 ;;                  _setAD_ConvertFlag
   739 ;;                          _AD_Sample
   740 ;;                      _adc_test_init
   741 ;;                          _adc_start
   742 ;; ---------------------------------------------------------------------------------
   743 ;; (2) _getAdOriginalCh12Value                               2     0      2     620
   744 ;;                                             54 BANK0      2     0      2
   745 ;;                             _Filter
   746 ;; ---------------------------------------------------------------------------------
   747 ;; (1) _setPinInitVaule                                      0     0      0      66
   748 ;;                             _setPB3
   749 ;;                             _setPB4
   750 ;;                             _setPB5
   751 ;; ---------------------------------------------------------------------------------
   752 ;; (1) _initPin                                              0     0      0      66
   753 ;;           _initPB2_AsHighResistence
   754 ;;                            _initPB3
   755 ;;                            _initPB4
   756 ;;                            _initPB5
   757 ;; ---------------------------------------------------------------------------------
   758 ;; (2) _AD_Sample                                            0     0      0       0
   759 ;; ---------------------------------------------------------------------------------
   760 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   761 ;;                                              0 BANK0      1     1      0
   762 ;; ---------------------------------------------------------------------------------
   763 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   764 ;; ---------------------------------------------------------------------------------
   765 ;; (2) _Filter                                              54    52      2     620
   766 ;;                                              0 BANK0     54    52      2
   767 ;; ---------------------------------------------------------------------------------
   768 ;; (1) _isFinishedOneHoursTimer                              0     0      0       0
   769 ;; ---------------------------------------------------------------------------------
   770 ;; (1) _startOneHoursTimer                                   2     0      2      22
   771 ;;                                              0 BANK0      2     0      2
   772 ;; ---------------------------------------------------------------------------------
   773 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   774 ;; ---------------------------------------------------------------------------------
   775 ;; (1) _startThreeHoursTimer                                 2     0      2      22
   776 ;;                                              0 BANK0      2     0      2
   777 ;; ---------------------------------------------------------------------------------
   778 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   779 ;; ---------------------------------------------------------------------------------
   780 ;; (1) _startTwelveHourTimer                                 2     0      2      22
   781 ;;                                              0 BANK0      2     0      2
   782 ;; ---------------------------------------------------------------------------------
   783 ;; (1) _clearTwentyMinTimer                                  0     0      0       0
   784 ;; ---------------------------------------------------------------------------------
   785 ;; (1) _isFinishedTwentyMinTimer                             0     0      0       0
   786 ;; ---------------------------------------------------------------------------------
   787 ;; (1) _clrSampeTime                                         0     0      0       0
   788 ;; ---------------------------------------------------------------------------------
   789 ;; (1) _isPermitSampleTime                                   0     0      0       0
   790 ;; ---------------------------------------------------------------------------------
   791 ;; (1) _startTwentyMinTimer                                  2     0      2      22
   792 ;;                                              0 BANK0      2     0      2
   793 ;; ---------------------------------------------------------------------------------
   794 ;; (2) _adc_start                                            0     0      0       0
   795 ;; ---------------------------------------------------------------------------------
   796 ;; (2) _adc_test_init                                        3     2      1      44
   797 ;;                                              0 BANK0      3     2      1
   798 ;; ---------------------------------------------------------------------------------
   799 ;; (1) _timer1_interrupt_config                              0     0      0       0
   800 ;; ---------------------------------------------------------------------------------
   801 ;; (1) _timer1_config                                        0     0      0       0
   802 ;; ---------------------------------------------------------------------------------
   803 ;; (1) _clock_config                                         0     0      0       0
   804 ;; ---------------------------------------------------------------------------------
   805 ;; (1) _reset                                                0     0      0       0
   806 ;; ---------------------------------------------------------------------------------
   807 ;; (1) _selectAdChannel                                      0     0      0       0
   808 ;; ---------------------------------------------------------------------------------
   809 ;; (1) _pwm_start                                            1     1      0      22
   810 ;;                                              0 BANK0      1     1      0
   811 ;; ---------------------------------------------------------------------------------
   812 ;; (2) _initPB2_AsHighResistence                             0     0      0       0
   813 ;; ---------------------------------------------------------------------------------
   814 ;; (1) _setPB5                                               1     1      0      22
   815 ;;                                              0 BANK0      1     1      0
   816 ;; ---------------------------------------------------------------------------------
   817 ;; (2) _initPB5                                              1     1      0      22
   818 ;;                                              0 BANK0      1     1      0
   819 ;; ---------------------------------------------------------------------------------
   820 ;; (1) _setPB4                                               1     1      0      22
   821 ;;                                              0 BANK0      1     1      0
   822 ;; ---------------------------------------------------------------------------------
   823 ;; (2) _initPB4                                              1     1      0      22
   824 ;;                                              0 BANK0      1     1      0
   825 ;; ---------------------------------------------------------------------------------
   826 ;; (1) _setPB3                                               1     1      0      22
   827 ;;                                              0 BANK0      1     1      0
   828 ;; ---------------------------------------------------------------------------------
   829 ;; (2) _initPB3                                              1     1      0      22
   830 ;;                                              0 BANK0      1     1      0
   831 ;; ---------------------------------------------------------------------------------
   832 ;; (1) _clearThreeHoursTimer                                 0     0      0       0
   833 ;; ---------------------------------------------------------------------------------
   834 ;; (1) _clearTwelveHoursTimer                                0     0      0       0
   835 ;; ---------------------------------------------------------------------------------
   836 ;; Estimated maximum stack depth 2
   837 ;; ---------------------------------------------------------------------------------
   838 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   839 ;; ---------------------------------------------------------------------------------
   840 ;; (4) _ISR                                                  4     4      0     407
   841 ;;                                              9 COMMON     4     4      0
   842 ;;                i1_setAD_ConvertFlag
   843 ;;                            _adc_get
   844 ;;            _vPutSampleDataIntoTable
   845 ;; ---------------------------------------------------------------------------------
   846 ;; (5) i1_setAD_ConvertFlag                                  1     1      0      73
   847 ;;                                              0 COMMON     1     1      0
   848 ;; ---------------------------------------------------------------------------------
   849 ;; (5) _adc_get                                              4     2      2      24
   850 ;;                                              0 COMMON     4     2      2
   851 ;; ---------------------------------------------------------------------------------
   852 ;; (5) _vPutSampleDataIntoTable                              5     2      3     310
   853 ;;                                              4 COMMON     5     2      3
   854 ;;                            _adc_get (ARG)
   855 ;; ---------------------------------------------------------------------------------
   856 ;; Estimated maximum stack depth 5
   857 ;; ---------------------------------------------------------------------------------
   858 ;; Call Graph Graphs:
   859 ;; _main (ROOT)
   860 ;;   _initPin
   861 ;;     _initPB2_AsHighResistence
   862 ;;     _initPB3
   863 ;;     _initPB4
   864 ;;     _initPB5
   865 ;;   _setPinInitVaule
   866 ;;     _setPB3
   867 ;;     _setPB4
   868 ;;     _setPB5
   869 ;;   _selectAdChannel
   870 ;;   _clock_config
   871 ;;   _timer1_config
   872 ;;   _timer1_interrupt_config
   873 ;;   _adc_test_init
   874 ;;   _adc_start
   875 ;;   _startTwentyMinTimer
   876 ;;   _process_AD_Converter_Value
   877 ;;     _getAD_ConvertFlag
   878 ;;     _setAD_ConvertFlag
   879 ;;     _AD_Sample
   880 ;;     _adc_test_init
   881 ;;     _adc_start
   882 ;;   _isPermitSampleTime
   883 ;;   _clrSampeTime
   884 ;;   _calPulseWidth
   885 ;;     _getAdOriginalCh12Value
   886 ;;       _Filter
   887 ;;   _pwm_start
   888 ;;   _isFinishedTwentyMinTimer
   889 ;;   _getAdOriginalCh13Value
   890 ;;     _Filter
   891 ;;   _setPB3
   892 ;;   _setPB4
   893 ;;   _setPB5
   894 ;;   _clearTwentyMinTimer
   895 ;;   _startTwelveHourTimer
   896 ;;   _isFinishedTwelveHoursTimer
   897 ;;   _clearTwelveHoursTimer
   898 ;;   _startThreeHoursTimer
   899 ;;   _isFinishedThreeHoursTimer
   900 ;;   _clearThreeHoursTimer
   901 ;;   _startOneHoursTimer
   902 ;;   _isFinishedOneHoursTimer
   903 ;;   _reset
   904 ;;
   905 ;; _ISR (ROOT)
   906 ;;   i1_setAD_ConvertFlag
   907 ;;   _adc_get
   908 ;;   _vPutSampleDataIntoTable
   909 ;;     _adc_get (ARG)
   910 ;;
   911 ;; Address spaces:
   912 ;;Name               Size   Autos  Total    Cost      Usage
   913 ;;BANK3               60      0      50      10       83.3%
   914 ;;BITBANK3            60      0       0       9        0.0%
   915 ;;SFR3                 0      0       0       4        0.0%
   916 ;;BITSFR3              0      0       0       4        0.0%
   917 ;;BANK2               60      0       0      12        0.0%
   918 ;;BITBANK2            60      0       0      11        0.0%
   919 ;;SFR2                 0      0       0       5        0.0%
   920 ;;BITSFR2              0      0       0       5        0.0%
   921 ;;SFR1                 0      0       0       2        0.0%
   922 ;;BITSFR1              0      0       0       2        0.0%
   923 ;;BANK1               50      0      47       8       88.8%
   924 ;;BITBANK1            50      0       0       7        0.0%
   925 ;;CODE                 0      0       0       0        0.0%
   926 ;;DATA                 0      0      FB       6        0.0%
   927 ;;ABS                  0      0      F4       3        0.0%
   928 ;;NULL                 0      0       0       0        0.0%
   929 ;;STACK                0      0       7       2        0.0%
   930 ;;BANK0               50     49      4F       5       98.8%
   931 ;;BITBANK0            50      0       0       4        0.0%
   932 ;;SFR0                 0      0       0       1        0.0%
   933 ;;BITSFR0              0      0       0       1        0.0%
   934 ;;COMMON               E      D       E       1      100.0%
   935 ;;BITCOMMON            E      0       0       0        0.0%
   936                           
   937                           
   938 ;; *************** function _main *****************
   939 ;; Defined at:
   940 ;;		line 581 in file "D:\develop\190625\AK7030-OTP\main.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;		None
   943 ;; Auto vars:     Size  Location     Type
   944 ;;  ucChValue       2   68[BANK0 ] unsigned int 
   945 ;;  uiCh13Value     2   71[BANK0 ] unsigned int 
   946 ;;  ucPulseWidth    1   70[BANK0 ] unsigned char 
   947 ;; Return value:  Size  Location     Type
   948 ;;                  2  751[COMMON] int 
   949 ;; Registers used:
   950 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   951 ;; Tracked objects:
   952 ;;		On entry : 17F/0
   953 ;;		On exit  : 60/0
   954 ;;		Unchanged: FFE00/0
   955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   956 ;;      Params:         0       0       0       0       0
   957 ;;      Locals:         0       5       0       0       0
   958 ;;      Temps:          0       0       0       0       0
   959 ;;      Totals:         0       5       0       0       0
   960 ;;Total ram usage:        5 bytes
   961 ;; Hardware stack levels required when called:    5
   962 ;; This function calls:
   963 ;;		_initPin
   964 ;;		_setPinInitVaule
   965 ;;		_selectAdChannel
   966 ;;		_clock_config
   967 ;;		_timer1_config
   968 ;;		_timer1_interrupt_config
   969 ;;		_adc_test_init
   970 ;;		_adc_start
   971 ;;		_startTwentyMinTimer
   972 ;;		_process_AD_Converter_Value
   973 ;;		_isPermitSampleTime
   974 ;;		_clrSampeTime
   975 ;;		_calPulseWidth
   976 ;;		_pwm_start
   977 ;;		_isFinishedTwentyMinTimer
   978 ;;		_getAdOriginalCh13Value
   979 ;;		_setPB3
   980 ;;		_setPB4
   981 ;;		_setPB5
   982 ;;		_clearTwentyMinTimer
   983 ;;		_startTwelveHourTimer
   984 ;;		_isFinishedTwelveHoursTimer
   985 ;;		_clearTwelveHoursTimer
   986 ;;		_startThreeHoursTimer
   987 ;;		_isFinishedThreeHoursTimer
   988 ;;		_clearThreeHoursTimer
   989 ;;		_startOneHoursTimer
   990 ;;		_isFinishedOneHoursTimer
   991 ;;		_reset
   992 ;; This function is called by:
   993 ;;		Startup code after reset
   994 ;; This function uses a non-reentrant model
   995 ;;
   996  0013                     _main:	
   997                           
   998                           ;main.c: 592: initPin();
   999                           
  1000                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1001  0013  118A  2459  118A   	fcall	_initPin
  1002                           
  1003                           ;main.c: 593: setPinInitVaule();
  1004  0016  118A  248A  118A   	fcall	_setPinInitVaule
  1005                           
  1006                           ;main.c: 594: selectAdChannel();
  1007  0019  118A  257F  118A   	fcall	_selectAdChannel
  1008                           
  1009                           ;main.c: 596: clock_config();
  1010  001C  118A  2562  118A   	fcall	_clock_config
  1011                           
  1012                           ;main.c: 597: timer1_config();
  1013  001F  118A  2550  118A   	fcall	_timer1_config
  1014                           
  1015                           ;main.c: 598: timer1_interrupt_config();
  1016  0022  118A  2583  118A   	fcall	_timer1_interrupt_config
  1017                           
  1018                           ;main.c: 600: adc_test_init(12,3);
  1019  0025  3003               	movlw	3
  1020  0026  1283               	bcf	3,5	;RP0=0, select bank0
  1021  0027  00A0               	movwf	?_adc_test_init
  1022  0028  300C               	movlw	12
  1023  0029  118A  2441  118A   	fcall	_adc_test_init
  1024                           
  1025                           ;main.c: 607: adc_start();
  1026  002C  118A  2456  118A   	fcall	_adc_start
  1027                           
  1028                           ;main.c: 614: startTwentyMinTimer( 60 );
  1029  002F  303C               	movlw	60
  1030  0030  00A0               	movwf	?_startTwentyMinTimer
  1031  0031  01A1               	clrf	?_startTwentyMinTimer+1
  1032  0032  118A  2511  118A   	fcall	_startTwentyMinTimer
  1033  0035                     l3730:	
  1034  0035  0064               	clrwdt	;#
  1035                           
  1036                           ;main.c: 621: process_AD_Converter_Value();
  1037  0036  118A  240C  118A   	fcall	_process_AD_Converter_Value
  1038                           
  1039                           ;main.c: 623: if( isPermitSampleTime() )
  1040  0039  118A  256A  118A   	fcall	_isPermitSampleTime
  1041  003C  3A00               	xorlw	0
  1042  003D  1903               	skipnz
  1043  003E  2835               	goto	l3730
  1044                           
  1045                           ;main.c: 624: {
  1046                           ;main.c: 627: clrSampeTime();
  1047  003F  118A  2586  118A   	fcall	_clrSampeTime
  1048                           
  1049                           ;main.c: 635: enum systemStep {
  1050                           ;main.c: 636: INIT_STEP = 0,
  1051                           ;main.c: 637: START_UP_PWM_STEP,
  1052                           ;main.c: 638: CHECK_10_HOUR_TIMER_STEP,
  1053                           ;main.c: 639: STARTUP_3_HOUR_TIMER_STEP,
  1054                           ;main.c: 640: CHECK_3_HOUR_TIMER_STEP,
  1055                           ;main.c: 641: STARTUP_1_HOUR_TIMER_STEP,
  1056                           ;main.c: 642: CHECK_1_HOUR_TIMER_STEP,
  1057                           ;main.c: 643: READY_FOR_RESET_STEP = 99,
  1058                           ;main.c: 644: DELAY_ONE_SECOND_FOR_PWM,
  1059                           ;main.c: 645: MEET_RESET_CONDITION_STEP,
  1060                           ;main.c: 646: RESET_STEP,
  1061                           ;main.c: 647: };
  1062                           ;main.c: 649: static enum systemStep ucStep = INIT_STEP;
  1063  0042  3002               	movlw	2
  1064  0043  1283               	bcf	3,5	;RP0=0, select bank0
  1065  0044  026B               	subwf	main@ucStep,w
  1066  0045  1C03               	skipc
  1067  0046  29B9               	goto	l3906
  1068  0047  3063               	movlw	99
  1069  0048  026B               	subwf	main@ucStep,w
  1070  0049  1803               	skipnc
  1071  004A  29B9               	goto	l3906
  1072                           
  1073                           ;main.c: 652: pwm_start( calPulseWidth() );
  1074  004B  118A  21E8  118A   	fcall	_calPulseWidth
  1075  004E  118A  24C3  118A   	fcall	_pwm_start
  1076  0051  29B9               	goto	l3906
  1077  0052                     l3744:	
  1078                           
  1079                           ;main.c: 658: {
  1080                           ;main.c: 663: static unsigned char ucTimerP3s = 0;
  1081                           ;main.c: 665: if( isFinishedTwentyMinTimer() )
  1082  0052  118A  2545  118A   	fcall	_isFinishedTwentyMinTimer
  1083  0055  3A00               	xorlw	0
  1084  0056  1903               	skipnz
  1085  0057  285E               	goto	l3750
  1086                           
  1087                           ;main.c: 666: {
  1088                           ;main.c: 667: ucStep = READY_FOR_RESET_STEP;
  1089  0058  3063               	movlw	99
  1090  0059  1283               	bcf	3,5	;RP0=0, select bank0
  1091  005A  00EB               	movwf	main@ucStep
  1092                           
  1093                           ;main.c: 668: ucTimerP3s = 0;
  1094  005B  1683               	bsf	3,5	;RP0=1, select bank1
  1095  005C  01BD               	clrf	main@ucTimerP3s^(0+128)
  1096                           
  1097                           ;main.c: 669: }
  1098  005D  2835               	goto	l3730
  1099  005E                     l3750:	
  1100                           
  1101                           ;main.c: 670: else
  1102                           ;main.c: 671: {
  1103                           ;main.c: 672: if( getAdOriginalCh13Value() > 90 )
  1104  005E  118A  21DE  118A   	fcall	_getAdOriginalCh13Value
  1105  0061  3000               	movlw	0
  1106  0062  0257               	subwf	?_getAdOriginalCh13Value+1,w
  1107  0063  305B               	movlw	91
  1108  0064  1903               	skipnz
  1109  0065  0256               	subwf	?_getAdOriginalCh13Value,w
  1110  0066  1C03               	skipc
  1111  0067  286B               	goto	l3754
  1112                           
  1113                           ;main.c: 673: {
  1114                           ;main.c: 674: ucTimerP3s++;
  1115  0068  1683               	bsf	3,5	;RP0=1, select bank1
  1116  0069  0ABD               	incf	main@ucTimerP3s^(0+128),f
  1117                           
  1118                           ;main.c: 675: }
  1119  006A  286D               	goto	l3756
  1120  006B                     l3754:	
  1121                           
  1122                           ;main.c: 676: else
  1123                           ;main.c: 677: ucTimerP3s = 0;
  1124  006B  1683               	bsf	3,5	;RP0=1, select bank1
  1125  006C  01BD               	clrf	main@ucTimerP3s^(0+128)
  1126  006D                     l3756:	
  1127                           
  1128                           ;main.c: 679: if( ucTimerP3s >= 3)
  1129  006D  3003               	movlw	3
  1130  006E  023D               	subwf	main@ucTimerP3s^(0+128),w
  1131  006F  1C03               	skipc
  1132  0070  2835               	goto	l3730
  1133                           
  1134                           ;main.c: 680: {
  1135                           ;main.c: 681: ucTimerP3s = 0;
  1136  0071  01BD               	clrf	main@ucTimerP3s^(0+128)
  1137                           
  1138                           ;main.c: 682: ucStep = START_UP_PWM_STEP;
  1139  0072  1283               	bcf	3,5	;RP0=0, select bank0
  1140  0073  01EB               	clrf	main@ucStep
  1141  0074  0AEB               	incf	main@ucStep,f
  1142  0075                     l762:	
  1143                           
  1144                           ;main.c: 683: }
  1145                           ;main.c: 685: }
  1146                           ;main.c: 689: break;
  1147  0075  2835               	goto	l3730
  1148  0076                     l3762:	
  1149                           
  1150                           ;main.c: 699: ucPulseWidth = calPulseWidth();
  1151  0076  118A  21E8  118A   	fcall	_calPulseWidth
  1152  0079  00E6               	movwf	main@ucPulseWidth
  1153                           
  1154                           ;main.c: 701: pwm_start( ucPulseWidth );
  1155  007A  0866               	movf	main@ucPulseWidth,w
  1156  007B  118A  24C3  118A   	fcall	_pwm_start
  1157                           
  1158                           ;main.c: 703: setPB3(0);
  1159  007E  3000               	movlw	0
  1160  007F  118A  2492  118A   	fcall	_setPB3
  1161                           
  1162                           ;main.c: 704: setPB4(1);
  1163  0082  3001               	movlw	1
  1164  0083  118A  249B  118A   	fcall	_setPB4
  1165                           
  1166                           ;main.c: 705: setPB5(0);
  1167  0086  3000               	movlw	0
  1168  0087  118A  24A3  118A   	fcall	_setPB5
  1169                           
  1170                           ;main.c: 706: clearTwentyMinTimer();
  1171  008A  118A  2570  118A   	fcall	_clearTwentyMinTimer
  1172                           
  1173                           ;main.c: 707: startTwelveHourTimer( 240);
  1174  008D  30F0               	movlw	240
  1175  008E  1283               	bcf	3,5	;RP0=0, select bank0
  1176  008F  00A0               	movwf	?_startTwelveHourTimer
  1177  0090  01A1               	clrf	?_startTwelveHourTimer+1
  1178  0091  118A  24FE  118A   	fcall	_startTwelveHourTimer
  1179                           
  1180                           ;main.c: 708: ucStep = CHECK_10_HOUR_TIMER_STEP;
  1181  0094  3002               	movlw	2
  1182  0095  29B4               	goto	L9
  1183  0096                     l3780:	
  1184                           ;main.c: 709: break;
  1185                           
  1186                           
  1187                           ;main.c: 713: {
  1188                           ;main.c: 718: static unsigned char ucTimerP5s = 0;
  1189                           ;main.c: 720: if( isFinishedTwelveHoursTimer () )
  1190  0096  118A  253A  118A   	fcall	_isFinishedTwelveHoursTimer
  1191  0099  3A00               	xorlw	0
  1192  009A  1903               	skipnz
  1193  009B  289E               	goto	l3784
  1194  009C                     l3782:	
  1195                           
  1196                           ;main.c: 721: ucStep = READY_FOR_RESET_STEP;
  1197  009C  3063               	movlw	99
  1198  009D  29B4               	goto	L9
  1199  009E                     l3784:	
  1200                           
  1201                           ;main.c: 722: else
  1202                           ;main.c: 723: {
  1203                           ;main.c: 724: if( getAdOriginalCh13Value() < 200 )
  1204  009E  118A  21DE  118A   	fcall	_getAdOriginalCh13Value
  1205  00A1  3000               	movlw	0
  1206  00A2  0257               	subwf	?_getAdOriginalCh13Value+1,w
  1207  00A3  30C8               	movlw	200
  1208  00A4  1903               	skipnz
  1209  00A5  0256               	subwf	?_getAdOriginalCh13Value,w
  1210  00A6  1803               	skipnc
  1211  00A7  28AB               	goto	l3788
  1212                           
  1213                           ;main.c: 725: ucTimerP5s++;
  1214  00A8  1683               	bsf	3,5	;RP0=1, select bank1
  1215  00A9  0ABE               	incf	main@ucTimerP5s^(0+128),f
  1216  00AA  28AD               	goto	l3790
  1217  00AB                     l3788:	
  1218                           
  1219                           ;main.c: 726: else
  1220                           ;main.c: 727: ucTimerP5s = 0;
  1221  00AB  1683               	bsf	3,5	;RP0=1, select bank1
  1222  00AC  01BE               	clrf	main@ucTimerP5s^(0+128)
  1223  00AD                     l3790:	
  1224                           
  1225                           ;main.c: 729: if( ucTimerP5s > 5)
  1226  00AD  3006               	movlw	6
  1227  00AE  023E               	subwf	main@ucTimerP5s^(0+128),w
  1228  00AF  1C03               	skipc
  1229  00B0  2835               	goto	l3730
  1230  00B1  3003               	movlw	3
  1231                           
  1232                           ;main.c: 730: {
  1233                           ;main.c: 731: ucTimerP5s = 0;
  1234  00B2  01BE               	clrf	main@ucTimerP5s^(0+128)
  1235                           
  1236                           ;main.c: 732: ucStep = STARTUP_3_HOUR_TIMER_STEP;
  1237  00B3  29B4               	goto	L9
  1238  00B4                     l3796:	
  1239                           
  1240                           ;main.c: 740: {
  1241                           ;main.c: 741: clearTwelveHoursTimer();
  1242  00B4  118A  257A  118A   	fcall	_clearTwelveHoursTimer
  1243                           
  1244                           ;main.c: 742: startThreeHoursTimer(180);
  1245  00B7  30B4               	movlw	180
  1246  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  1247  00B9  00A0               	movwf	?_startThreeHoursTimer
  1248  00BA  01A1               	clrf	?_startThreeHoursTimer+1
  1249  00BB  118A  24EB  118A   	fcall	_startThreeHoursTimer
  1250                           
  1251                           ;main.c: 743: ucStep = CHECK_3_HOUR_TIMER_STEP;
  1252  00BE  3004               	movlw	4
  1253  00BF  29B4               	goto	L9
  1254  00C0                     l3800:	
  1255                           ;main.c: 744: break;
  1256                           
  1257                           
  1258                           ;main.c: 748: {
  1259                           ;main.c: 749: static unsigned char ucTimerP5s = 0;
  1260                           ;main.c: 751: if( isFinishedThreeHoursTimer() )
  1261  00C0  118A  252F  118A   	fcall	_isFinishedThreeHoursTimer
  1262  00C3  3A00               	xorlw	0
  1263  00C4  1D03               	btfss	3,2
  1264  00C5  289C               	goto	l3782
  1265                           
  1266                           ;main.c: 753: else
  1267                           ;main.c: 754: {
  1268                           ;main.c: 755: if( getAdOriginalCh13Value() < 85 )
  1269  00C6  118A  21DE  118A   	fcall	_getAdOriginalCh13Value
  1270  00C9  3000               	movlw	0
  1271  00CA  0257               	subwf	?_getAdOriginalCh13Value+1,w
  1272  00CB  3055               	movlw	85
  1273  00CC  1903               	skipnz
  1274  00CD  0256               	subwf	?_getAdOriginalCh13Value,w
  1275  00CE  1803               	skipnc
  1276  00CF  28D3               	goto	l3808
  1277                           
  1278                           ;main.c: 756: ucTimerP5s++;
  1279  00D0  1683               	bsf	3,5	;RP0=1, select bank1
  1280  00D1  0ABB               	incf	main@cTimerP5s_790^(0+128),f
  1281  00D2  28D5               	goto	l3810
  1282  00D3                     l3808:	
  1283                           
  1284                           ;main.c: 757: else
  1285                           ;main.c: 758: ucTimerP5s = 0;
  1286  00D3  1683               	bsf	3,5	;RP0=1, select bank1
  1287  00D4  01BB               	clrf	main@cTimerP5s_790^(0+128)
  1288  00D5                     l3810:	
  1289                           
  1290                           ;main.c: 760: if( ucTimerP5s > 5)
  1291  00D5  3006               	movlw	6
  1292  00D6  023B               	subwf	main@cTimerP5s_790^(0+128),w
  1293  00D7  1C03               	skipc
  1294  00D8  2835               	goto	l3730
  1295  00D9  3005               	movlw	5
  1296                           
  1297                           ;main.c: 761: {
  1298                           ;main.c: 762: ucTimerP5s = 0;
  1299  00DA  01BB               	clrf	main@cTimerP5s_790^(0+128)
  1300                           
  1301                           ;main.c: 763: ucStep = STARTUP_1_HOUR_TIMER_STEP;
  1302  00DB  29B4               	goto	L9
  1303  00DC                     l3816:	
  1304                           
  1305                           ;main.c: 770: {
  1306                           ;main.c: 771: clearThreeHoursTimer();
  1307  00DC  118A  2575  118A   	fcall	_clearThreeHoursTimer
  1308                           
  1309                           ;main.c: 772: startOneHoursTimer( 120 );
  1310  00DF  3078               	movlw	120
  1311  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1312  00E1  00A0               	movwf	?_startOneHoursTimer
  1313  00E2  01A1               	clrf	?_startOneHoursTimer+1
  1314  00E3  118A  24D8  118A   	fcall	_startOneHoursTimer
  1315                           
  1316                           ;main.c: 773: setPB3(1);
  1317  00E6  3001               	movlw	1
  1318  00E7  118A  2492  118A   	fcall	_setPB3
  1319                           
  1320                           ;main.c: 774: setPB4(0);
  1321  00EA  3000               	movlw	0
  1322  00EB  118A  249B  118A   	fcall	_setPB4
  1323                           
  1324                           ;main.c: 775: setPB5(1);
  1325  00EE  3001               	movlw	1
  1326  00EF  118A  24A3  118A   	fcall	_setPB5
  1327                           
  1328                           ;main.c: 776: ucStep = CHECK_1_HOUR_TIMER_STEP;
  1329  00F2  3006               	movlw	6
  1330  00F3  29B5               	goto	L8
  1331  00F4                     l3828:	
  1332                           ;main.c: 777: break;
  1333                           
  1334                           
  1335                           ;main.c: 781: {
  1336                           ;main.c: 786: static unsigned int uiTimerOneP5s = 0;
  1337                           ;main.c: 787: static unsigned int uiTimerTwoP5s = 0;
  1338                           ;main.c: 788: static unsigned int uiTimerThreeP5s = 0;
  1339                           ;main.c: 790: unsigned int uiCh13Value = getAdOriginalCh13Value();
  1340  00F4  118A  21DE  118A   	fcall	_getAdOriginalCh13Value
  1341  00F7  0857               	movf	?_getAdOriginalCh13Value+1,w
  1342  00F8  00E8               	movwf	main@uiCh13Value+1
  1343  00F9  0856               	movf	?_getAdOriginalCh13Value,w
  1344  00FA  00E7               	movwf	main@uiCh13Value
  1345                           
  1346                           ;main.c: 793: if( isFinishedOneHoursTimer() )
  1347  00FB  118A  2524  118A   	fcall	_isFinishedOneHoursTimer
  1348  00FE  3A00               	xorlw	0
  1349  00FF  1D03               	btfss	3,2
  1350  0100  289C               	goto	l3782
  1351                           
  1352                           ;main.c: 795: else
  1353                           ;main.c: 796: {
  1354                           ;main.c: 797: if( uiCh13Value > 100 )
  1355  0101  3000               	movlw	0
  1356  0102  1283               	bcf	3,5	;RP0=0, select bank0
  1357  0103  0268               	subwf	main@uiCh13Value+1,w
  1358  0104  3065               	movlw	101
  1359  0105  1903               	skipnz
  1360  0106  0267               	subwf	main@uiCh13Value,w
  1361  0107  1C03               	skipc
  1362  0108  2919               	goto	l3844
  1363                           
  1364                           ;main.c: 798: {
  1365                           ;main.c: 799: if( uiTimerOneP5s <= 5 )
  1366  0109  3000               	movlw	0
  1367  010A  1683               	bsf	3,5	;RP0=1, select bank1
  1368  010B  022D               	subwf	(main@uiTimerOneP5s+1)^(0+128),w
  1369  010C  3006               	movlw	6
  1370  010D  1903               	skipnz
  1371  010E  022C               	subwf	main@uiTimerOneP5s^(0+128),w
  1372  010F  1803               	skipnc
  1373  0110  2914               	goto	l3840
  1374                           
  1375                           ;main.c: 800: uiTimerOneP5s++;
  1376  0111  0AAC               	incf	main@uiTimerOneP5s^(0+128),f
  1377  0112  1903               	skipnz
  1378  0113  0AAD               	incf	(main@uiTimerOneP5s+1)^(0+128),f
  1379  0114                     l3840:	
  1380                           
  1381                           ;main.c: 801: uiTimerTwoP5s = 0;
  1382  0114  01B0               	clrf	main@uiTimerTwoP5s^(0+128)
  1383  0115  01B1               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1384                           
  1385                           ;main.c: 802: uiTimerThreeP5s = 0;
  1386  0116  01AE               	clrf	main@uiTimerThreeP5s^(0+128)
  1387  0117  01AF               	clrf	(main@uiTimerThreeP5s+1)^(0+128)
  1388                           
  1389                           ;main.c: 803: }
  1390  0118  291C               	goto	l3846
  1391  0119                     l3844:	
  1392                           
  1393                           ;main.c: 804: else
  1394                           ;main.c: 805: {
  1395                           ;main.c: 806: uiTimerOneP5s = 0;
  1396  0119  1683               	bsf	3,5	;RP0=1, select bank1
  1397  011A  01AC               	clrf	main@uiTimerOneP5s^(0+128)
  1398  011B  01AD               	clrf	(main@uiTimerOneP5s+1)^(0+128)
  1399  011C                     l3846:	
  1400                           
  1401                           ;main.c: 807: }
  1402                           ;main.c: 810: if(uiTimerOneP5s > 5)
  1403  011C  3000               	movlw	0
  1404  011D  022D               	subwf	(main@uiTimerOneP5s+1)^(0+128),w
  1405  011E  3006               	movlw	6
  1406  011F  1903               	skipnz
  1407  0120  022C               	subwf	main@uiTimerOneP5s^(0+128),w
  1408                           
  1409                           ;main.c: 811: {
  1410                           ;main.c: 812: setPB3(0);
  1411  0121  3000               	movlw	0
  1412  0122  1C03               	skipc
  1413  0123  2935               	goto	L10
  1414  0124  118A  2492  118A   	fcall	_setPB3
  1415                           
  1416                           ;main.c: 813: setPB4(1);
  1417  0127  3001               	movlw	1
  1418  0128  118A  249B  118A   	fcall	_setPB4
  1419                           
  1420                           ;main.c: 814: setPB5(0);
  1421  012B  3000               	movlw	0
  1422  012C  118A  24A3  118A   	fcall	_setPB5
  1423                           
  1424                           ;main.c: 816: uiTimerOneP5s = 0;
  1425  012F  1683               	bsf	3,5	;RP0=1, select bank1
  1426  0130  01AC               	clrf	main@uiTimerOneP5s^(0+128)
  1427  0131  01AD               	clrf	(main@uiTimerOneP5s+1)^(0+128)
  1428                           
  1429                           ;main.c: 817: uiTimerTwoP5s = 0;
  1430  0132  01B0               	clrf	main@uiTimerTwoP5s^(0+128)
  1431  0133  01B1               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1432                           
  1433                           ;main.c: 818: }
  1434  0134  2835               	goto	l3730
  1435  0135                     L10:	
  1436                           ;main.c: 819: else
  1437                           ;main.c: 820: {
  1438                           ;main.c: 821: if( uiCh13Value < 90 )
  1439                           
  1440  0135  1283               	bcf	3,5	;RP0=0, select bank0
  1441  0136  0268               	subwf	main@uiCh13Value+1,w
  1442  0137  305A               	movlw	90
  1443  0138  1903               	skipnz
  1444  0139  0267               	subwf	main@uiCh13Value,w
  1445  013A  1803               	skipnc
  1446  013B  2948               	goto	l3860
  1447                           
  1448                           ;main.c: 822: {
  1449                           ;main.c: 823: if( uiTimerTwoP5s <= 5)
  1450  013C  3000               	movlw	0
  1451  013D  1683               	bsf	3,5	;RP0=1, select bank1
  1452  013E  0231               	subwf	(main@uiTimerTwoP5s+1)^(0+128),w
  1453  013F  3006               	movlw	6
  1454  0140  1903               	skipnz
  1455  0141  0230               	subwf	main@uiTimerTwoP5s^(0+128),w
  1456  0142  1803               	skipnc
  1457  0143  294D               	goto	l3862
  1458                           
  1459                           ;main.c: 824: uiTimerTwoP5s++;
  1460  0144  0AB0               	incf	main@uiTimerTwoP5s^(0+128),f
  1461  0145  1903               	skipnz
  1462  0146  0AB1               	incf	(main@uiTimerTwoP5s+1)^(0+128),f
  1463  0147  294D               	goto	l3862
  1464  0148                     l3860:	
  1465                           
  1466                           ;main.c: 826: else
  1467                           ;main.c: 827: {
  1468                           ;main.c: 828: uiTimerTwoP5s = 0;
  1469  0148  1683               	bsf	3,5	;RP0=1, select bank1
  1470  0149  01B0               	clrf	main@uiTimerTwoP5s^(0+128)
  1471  014A  01B1               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1472                           
  1473                           ;main.c: 829: uiTimerThreeP5s = 0;
  1474  014B  01AE               	clrf	main@uiTimerThreeP5s^(0+128)
  1475  014C  01AF               	clrf	(main@uiTimerThreeP5s+1)^(0+128)
  1476  014D                     l3862:	
  1477                           
  1478                           ;main.c: 830: }
  1479                           ;main.c: 832: if(uiTimerTwoP5s > 5)
  1480  014D  3000               	movlw	0
  1481  014E  0231               	subwf	(main@uiTimerTwoP5s+1)^(0+128),w
  1482  014F  3006               	movlw	6
  1483  0150  1903               	skipnz
  1484  0151  0230               	subwf	main@uiTimerTwoP5s^(0+128),w
  1485  0152  1C03               	skipc
  1486  0153  2835               	goto	l3730
  1487                           
  1488                           ;main.c: 833: {
  1489                           ;main.c: 834: setPB3(1);
  1490  0154  3001               	movlw	1
  1491  0155  118A  2492  118A   	fcall	_setPB3
  1492                           
  1493                           ;main.c: 835: setPB4(0);
  1494  0158  3000               	movlw	0
  1495  0159  118A  249B  118A   	fcall	_setPB4
  1496                           
  1497                           ;main.c: 836: setPB5(1);
  1498  015C  3001               	movlw	1
  1499  015D  118A  24A3  118A   	fcall	_setPB5
  1500                           
  1501                           ;main.c: 838: if(uiCh13Value < 25)
  1502  0160  3000               	movlw	0
  1503  0161  0268               	subwf	main@uiCh13Value+1,w
  1504  0162  3019               	movlw	25
  1505  0163  1903               	skipnz
  1506  0164  0267               	subwf	main@uiCh13Value,w
  1507  0165  1803               	skipnc
  1508  0166  296C               	goto	l3870
  1509                           
  1510                           ;main.c: 839: uiTimerThreeP5s++;
  1511  0167  1683               	bsf	3,5	;RP0=1, select bank1
  1512  0168  0AAE               	incf	main@uiTimerThreeP5s^(0+128),f
  1513  0169  1903               	skipnz
  1514  016A  0AAF               	incf	(main@uiTimerThreeP5s+1)^(0+128),f
  1515  016B  296F               	goto	l3872
  1516  016C                     l3870:	
  1517                           
  1518                           ;main.c: 840: else
  1519                           ;main.c: 841: uiTimerThreeP5s = 0;
  1520  016C  1683               	bsf	3,5	;RP0=1, select bank1
  1521  016D  01AE               	clrf	main@uiTimerThreeP5s^(0+128)
  1522  016E  01AF               	clrf	(main@uiTimerThreeP5s+1)^(0+128)
  1523  016F                     l3872:	
  1524                           
  1525                           ;main.c: 843: if(uiTimerThreeP5s > 5)
  1526  016F  3000               	movlw	0
  1527  0170  022F               	subwf	(main@uiTimerThreeP5s+1)^(0+128),w
  1528  0171  3006               	movlw	6
  1529  0172  1903               	skipnz
  1530  0173  022E               	subwf	main@uiTimerThreeP5s^(0+128),w
  1531  0174  1C03               	skipc
  1532  0175  2835               	goto	l3730
  1533  0176                     l3874:	
  1534                           
  1535                           ;main.c: 844: reset();
  1536  0176  118A  2588  118A   	fcall	_reset
  1537  0179  2835               	goto	l3730
  1538  017A                     l3876:	
  1539                           
  1540                           ;main.c: 853: {
  1541                           ;main.c: 854: setPB3(0);
  1542  017A  3000               	movlw	0
  1543  017B  118A  2492  118A   	fcall	_setPB3
  1544                           
  1545                           ;main.c: 855: setPB4(0);
  1546  017E  3000               	movlw	0
  1547  017F  118A  249B  118A   	fcall	_setPB4
  1548                           
  1549                           ;main.c: 856: setPB5(1);
  1550  0182  3001               	movlw	1
  1551  0183  118A  24A3  118A   	fcall	_setPB5
  1552                           
  1553                           ;main.c: 858: pwm_start(60);
  1554  0186  303C               	movlw	60
  1555  0187  118A  24C3  118A   	fcall	_pwm_start
  1556                           
  1557                           ;main.c: 860: ucStep = DELAY_ONE_SECOND_FOR_PWM;
  1558  018A  3064               	movlw	100
  1559  018B  29B5               	goto	L8
  1560  018C                     l3880:	
  1561                           ;main.c: 861: break;
  1562                           
  1563                           
  1564                           ;main.c: 865: {
  1565                           ;main.c: 866: static unsigned ucDelay1s = 0;
  1566                           ;main.c: 867: if(ucDelay1s < 10)
  1567  018C  3000               	movlw	0
  1568  018D  1683               	bsf	3,5	;RP0=1, select bank1
  1569  018E  022B               	subwf	(main@ucDelay1s+1)^(0+128),w
  1570  018F  300A               	movlw	10
  1571  0190  1903               	skipnz
  1572  0191  022A               	subwf	main@ucDelay1s^(0+128),w
  1573  0192  1803               	skipnc
  1574  0193  2998               	goto	l3884
  1575                           
  1576                           ;main.c: 868: ucDelay1s++;
  1577  0194  0AAA               	incf	main@ucDelay1s^(0+128),f
  1578  0195  1903               	skipnz
  1579  0196  0AAB               	incf	(main@ucDelay1s+1)^(0+128),f
  1580  0197  2835               	goto	l3730
  1581  0198                     l3884:	
  1582  0198  3065               	movlw	101
  1583                           
  1584                           ;main.c: 869: else
  1585                           ;main.c: 870: {
  1586                           ;main.c: 871: ucDelay1s = 0;
  1587  0199  01AA               	clrf	main@ucDelay1s^(0+128)
  1588  019A  01AB               	clrf	(main@ucDelay1s+1)^(0+128)
  1589                           
  1590                           ;main.c: 872: ucStep = MEET_RESET_CONDITION_STEP;
  1591  019B  29B4               	goto	L9
  1592  019C                     l3888:	
  1593                           
  1594                           ;main.c: 882: {
  1595                           ;main.c: 883: static unsigned char ucTimerP5s = 0;
  1596                           ;main.c: 884: unsigned int ucChValue = getAdOriginalCh13Value();
  1597  019C  118A  21DE  118A   	fcall	_getAdOriginalCh13Value
  1598  019F  0857               	movf	?_getAdOriginalCh13Value+1,w
  1599  01A0  00E5               	movwf	main@ucChValue+1
  1600  01A1  0856               	movf	?_getAdOriginalCh13Value,w
  1601  01A2  00E4               	movwf	main@ucChValue
  1602                           
  1603                           ;main.c: 886: if( ucChValue > 50 )
  1604  01A3  3000               	movlw	0
  1605  01A4  0265               	subwf	main@ucChValue+1,w
  1606  01A5  3033               	movlw	51
  1607  01A6  1903               	skipnz
  1608  01A7  0264               	subwf	main@ucChValue,w
  1609  01A8  1C03               	skipc
  1610  01A9  29AD               	goto	l3894
  1611                           
  1612                           ;main.c: 887: ucTimerP5s++;
  1613  01AA  1683               	bsf	3,5	;RP0=1, select bank1
  1614  01AB  0ABC               	incf	main@cTimerP5s_796^(0+128),f
  1615  01AC  29AF               	goto	l3896
  1616  01AD                     l3894:	
  1617                           
  1618                           ;main.c: 888: else
  1619                           ;main.c: 889: ucTimerP5s = 0;
  1620  01AD  1683               	bsf	3,5	;RP0=1, select bank1
  1621  01AE  01BC               	clrf	main@cTimerP5s_796^(0+128)
  1622  01AF                     l3896:	
  1623                           
  1624                           ;main.c: 891: if(ucTimerP5s > 5)
  1625  01AF  3006               	movlw	6
  1626  01B0  023C               	subwf	main@cTimerP5s_796^(0+128),w
  1627  01B1  1C03               	skipc
  1628  01B2  2835               	goto	l3730
  1629                           
  1630                           ;main.c: 892: ucStep = RESET_STEP;
  1631  01B3  3066               	movlw	102
  1632  01B4                     L9:	
  1633  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  1634  01B5                     L8:	
  1635  01B5  00EB               	movwf	main@ucStep
  1636  01B6  2835               	goto	l3730
  1637  01B7                     l3900:	
  1638                           
  1639                           ;main.c: 897: {
  1640                           ;main.c: 898: ucStep = INIT_STEP;
  1641  01B7  01EB               	clrf	main@ucStep
  1642  01B8  2976               	goto	l3874
  1643  01B9                     l3906:	
  1644  01B9  086B               	movf	main@ucStep,w
  1645                           
  1646                           ; Switch size 1, requested type "space"
  1647                           ; Number of cases is 11, Range of values is 0 to 102
  1648                           ; switch strategies available:
  1649                           ; Name         Instructions Cycles
  1650                           ; simple_byte           34    18 (average)
  1651                           ; direct_byte          213     7 (fixed)
  1652                           ; jumptable            260     6 (fixed)
  1653                           ; rangetable           107     6 (fixed)
  1654                           ; spacedrange          212     9 (fixed)
  1655                           ; locatedrange         103     3 (fixed)
  1656                           ;	Chosen strategy is simple_byte
  1657  01BA  3A00               	xorlw	0	; case 0
  1658  01BB  1903               	skipnz
  1659  01BC  2852               	goto	l3744
  1660  01BD  3A01               	xorlw	1	; case 1
  1661  01BE  1903               	skipnz
  1662  01BF  2876               	goto	l3762
  1663  01C0  3A03               	xorlw	3	; case 2
  1664  01C1  1903               	skipnz
  1665  01C2  2896               	goto	l3780
  1666  01C3  3A01               	xorlw	1	; case 3
  1667  01C4  1903               	skipnz
  1668  01C5  28B4               	goto	l3796
  1669  01C6  3A07               	xorlw	7	; case 4
  1670  01C7  1903               	skipnz
  1671  01C8  28C0               	goto	l3800
  1672  01C9  3A01               	xorlw	1	; case 5
  1673  01CA  1903               	skipnz
  1674  01CB  28DC               	goto	l3816
  1675  01CC  3A03               	xorlw	3	; case 6
  1676  01CD  1903               	skipnz
  1677  01CE  28F4               	goto	l3828
  1678  01CF  3A65               	xorlw	101	; case 99
  1679  01D0  1903               	skipnz
  1680  01D1  297A               	goto	l3876
  1681  01D2  3A07               	xorlw	7	; case 100
  1682  01D3  1903               	skipnz
  1683  01D4  298C               	goto	l3880
  1684  01D5  3A01               	xorlw	1	; case 101
  1685  01D6  1903               	skipnz
  1686  01D7  299C               	goto	l3888
  1687  01D8  3A03               	xorlw	3	; case 102
  1688  01D9  1903               	skipnz
  1689  01DA  29B7               	goto	l3900
  1690  01DB  2875               	goto	l762
  1691  01DC  118A  2811         	ljmp	start
  1692  01DE                     __end_of_main:	
  1693                           
  1694                           	psect	text930
  1695  01DE                     __ptext930:	
  1696 ;; =============== function _calPulseWidth ends ============
  1697                           
  1698                           
  1699 ;; *************** function _getAdOriginalCh13Value *****************
  1700 ;; Defined at:
  1701 ;;		line 238 in file "D:\develop\190625\AK7030-OTP\common.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;		None
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;		None
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  2   54[BANK0 ] unsigned int 
  1708 ;; Registers used:
  1709 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1710 ;; Tracked objects:
  1711 ;;		On entry : 40/20
  1712 ;;		On exit  : 160/0
  1713 ;;		Unchanged: FFE00/0
  1714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1715 ;;      Params:         0       2       0       0       0
  1716 ;;      Locals:         0       0       0       0       0
  1717 ;;      Temps:          0       0       0       0       0
  1718 ;;      Totals:         0       2       0       0       0
  1719 ;;Total ram usage:        2 bytes
  1720 ;; Hardware stack levels used:    1
  1721 ;; Hardware stack levels required when called:    3
  1722 ;; This function calls:
  1723 ;;		_Filter
  1724 ;; This function is called by:
  1725 ;;		_main
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728  01DE                     _getAdOriginalCh13Value:	
  1729                           
  1730                           ;common.c: 240: return Filter(uiSampleChannelFourth);
  1731                           
  1732                           ; Regs used in _getAdOriginalCh13Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  1733  01DE  30BF               	movlw	_uiSampleChannelFourth& (0+255)
  1734  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  1735  01E0  00A0               	movwf	?_Filter
  1736  01E1  01A1               	clrf	?_Filter+1
  1737  01E2  226F               	fcall	_Filter
  1738  01E3  0821               	movf	?_Filter+1,w
  1739  01E4  00D7               	movwf	?_getAdOriginalCh13Value+1
  1740  01E5  0820               	movf	?_Filter,w
  1741  01E6  00D6               	movwf	?_getAdOriginalCh13Value
  1742  01E7  0008               	return
  1743  01E8                     __end_of_getAdOriginalCh13Value:	
  1744  01E8                     __ptext929:	
  1745 ;; =============== function _main ends ============
  1746                           
  1747                           
  1748 ;; *************** function _calPulseWidth *****************
  1749 ;; Defined at:
  1750 ;;		line 472 in file "D:\develop\190625\AK7030-OTP\main.c"
  1751 ;; Parameters:    Size  Location     Type
  1752 ;;		None
  1753 ;; Auto vars:     Size  Location     Type
  1754 ;;  uiGapValue      2   58[BANK0 ] unsigned int 
  1755 ;;  ucGapValue      1   62[BANK0 ] unsigned char 
  1756 ;;  ucHalfValue     1   61[BANK0 ] unsigned char 
  1757 ;;  ucThreeTimes    1   60[BANK0 ] unsigned char 
  1758 ;;  uiNewValue      2   66[BANK0 ] unsigned int 
  1759 ;;  uiChannel2Va    2   63[BANK0 ] unsigned int 
  1760 ;;  ucPulseWidth    1   65[BANK0 ] unsigned char 
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  1    wreg      unsigned char 
  1763 ;; Registers used:
  1764 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1765 ;; Tracked objects:
  1766 ;;		On entry : 60/0
  1767 ;;		On exit  : 160/0
  1768 ;;		Unchanged: FFE00/0
  1769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1770 ;;      Params:         0       0       0       0       0
  1771 ;;      Locals:         0      10       0       0       0
  1772 ;;      Temps:          0       2       0       0       0
  1773 ;;      Totals:         0      12       0       0       0
  1774 ;;Total ram usage:       12 bytes
  1775 ;; Hardware stack levels used:    1
  1776 ;; Hardware stack levels required when called:    4
  1777 ;; This function calls:
  1778 ;;		_getAdOriginalCh12Value
  1779 ;; This function is called by:
  1780 ;;		_main
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783  01E8                     _calPulseWidth:	
  1784                           
  1785                           ;main.c: 478: unsigned int uiChannel2Value = 0;
  1786                           
  1787                           ; Regs used in _calPulseWidth: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1788  01E8  01DF               	clrf	calPulseWidth@uiChannel2Value
  1789  01E9  01E0               	clrf	calPulseWidth@uiChannel2Value+1
  1790                           
  1791                           ;main.c: 479: unsigned int uiNewValue = 0;
  1792  01EA  01E2               	clrf	calPulseWidth@uiNewValue
  1793  01EB  01E3               	clrf	calPulseWidth@uiNewValue+1
  1794                           
  1795                           ;main.c: 480: static unsigned int uiOldValue = 0;
  1796                           ;main.c: 482: static unsigned char bInitFlag = 0;
  1797                           ;main.c: 484: uiNewValue = getAdOriginalCh12Value();
  1798  01EC  2264  118A         	fcall	_getAdOriginalCh12Value
  1799  01EE  0857               	movf	?_getAdOriginalCh12Value+1,w
  1800  01EF  00E3               	movwf	calPulseWidth@uiNewValue+1
  1801  01F0  0856               	movf	?_getAdOriginalCh12Value,w
  1802  01F1  00E2               	movwf	calPulseWidth@uiNewValue
  1803                           
  1804                           ;main.c: 486: if( 0 == bInitFlag )
  1805  01F2  1683               	bsf	3,5	;RP0=1, select bank1
  1806  01F3  08BA               	movf	calPulseWidth@bInitFlag^(0+128),f
  1807  01F4  1D03               	skipz
  1808  01F5  29FF               	goto	l3676
  1809                           
  1810                           ;main.c: 487: {
  1811                           ;main.c: 488: uiOldValue = getAdOriginalCh12Value();
  1812  01F6  2264  118A         	fcall	_getAdOriginalCh12Value
  1813  01F8  0857               	movf	?_getAdOriginalCh12Value+1,w
  1814  01F9  00EA               	movwf	calPulseWidth@uiOldValue+1
  1815  01FA  0856               	movf	?_getAdOriginalCh12Value,w
  1816  01FB  00E9               	movwf	calPulseWidth@uiOldValue
  1817                           
  1818                           ;main.c: 489: bInitFlag = 1;
  1819  01FC  1683               	bsf	3,5	;RP0=1, select bank1
  1820  01FD  01BA               	clrf	calPulseWidth@bInitFlag^(0+128)
  1821  01FE  0ABA               	incf	calPulseWidth@bInitFlag^(0+128),f
  1822  01FF                     l3676:	
  1823                           
  1824                           ;main.c: 490: }
  1825                           ;main.c: 492: if(uiNewValue != uiOldValue)
  1826  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  1827  0200  086A               	movf	calPulseWidth@uiOldValue+1,w
  1828  0201  0663               	xorwf	calPulseWidth@uiNewValue+1,w
  1829  0202  1D03               	skipz
  1830  0203  2A06               	goto	u1345
  1831  0204  0869               	movf	calPulseWidth@uiOldValue,w
  1832  0205  0662               	xorwf	calPulseWidth@uiNewValue,w
  1833  0206                     u1345:	
  1834  0206  1903               	skipnz
  1835  0207  2A2F               	goto	l3688
  1836                           
  1837                           ;main.c: 493: {
  1838                           ;main.c: 494: if(uiNewValue > uiOldValue)
  1839  0208  0863               	movf	calPulseWidth@uiNewValue+1,w
  1840  0209  026A               	subwf	calPulseWidth@uiOldValue+1,w
  1841  020A  1D03               	skipz
  1842  020B  2A0E               	goto	u1355
  1843  020C  0862               	movf	calPulseWidth@uiNewValue,w
  1844  020D  0269               	subwf	calPulseWidth@uiOldValue,w
  1845  020E                     u1355:	
  1846  020E  1803               	skipnc
  1847  020F  2A22               	goto	l3684
  1848                           
  1849                           ;main.c: 495: {
  1850                           ;main.c: 496: if((uiNewValue - uiOldValue) >= 5)
  1851  0210  0869               	movf	calPulseWidth@uiOldValue,w
  1852  0211  0262               	subwf	calPulseWidth@uiNewValue,w
  1853  0212  00D8               	movwf	??_calPulseWidth
  1854  0213  086A               	movf	calPulseWidth@uiOldValue+1,w
  1855  0214  1C03               	skipc
  1856  0215  0A6A               	incf	calPulseWidth@uiOldValue+1,w
  1857  0216  0263               	subwf	calPulseWidth@uiNewValue+1,w
  1858  0217  231C  118A         	fcall	PL8	;call to abstracted procedure
  1859  0219  1903               	skipnz
  1860  021A  0258               	subwf	??_calPulseWidth,w
  1861  021B  1C03               	skipc
  1862  021C  2A2F               	goto	l3688
  1863  021D                     l3682:	
  1864                           
  1865                           ;main.c: 497: uiOldValue = uiNewValue;
  1866  021D  0863               	movf	calPulseWidth@uiNewValue+1,w
  1867  021E  00EA               	movwf	calPulseWidth@uiOldValue+1
  1868  021F  0862               	movf	calPulseWidth@uiNewValue,w
  1869  0220  00E9               	movwf	calPulseWidth@uiOldValue
  1870  0221  2A2F               	goto	l3688
  1871  0222                     l3684:	
  1872                           
  1873                           ;main.c: 501: else
  1874                           ;main.c: 502: {
  1875                           ;main.c: 503: if((uiOldValue - uiNewValue) >= 5)
  1876  0222  0862               	movf	calPulseWidth@uiNewValue,w
  1877  0223  0269               	subwf	calPulseWidth@uiOldValue,w
  1878  0224  00D8               	movwf	??_calPulseWidth
  1879  0225  0863               	movf	calPulseWidth@uiNewValue+1,w
  1880  0226  1C03               	skipc
  1881  0227  0A63               	incf	calPulseWidth@uiNewValue+1,w
  1882  0228  026A               	subwf	calPulseWidth@uiOldValue+1,w
  1883  0229  231C  118A         	fcall	PL8	;call to abstracted procedure
  1884  022B  1903               	skipnz
  1885  022C  0258               	subwf	??_calPulseWidth,w
  1886  022D  1803               	btfsc	3,0
  1887  022E  2A1D               	goto	l3682
  1888  022F                     l3688:	
  1889                           ;main.c: 507: }
  1890                           ;main.c: 508: }
  1891                           
  1892                           
  1893                           ;main.c: 512: }
  1894                           ;main.c: 514: uiChannel2Value = uiOldValue;
  1895  022F  086A               	movf	calPulseWidth@uiOldValue+1,w
  1896  0230  00E0               	movwf	calPulseWidth@uiChannel2Value+1
  1897  0231  0869               	movf	calPulseWidth@uiOldValue,w
  1898  0232  00DF               	movwf	calPulseWidth@uiChannel2Value
  1899                           
  1900                           ;main.c: 516: if( uiChannel2Value >= 332 )
  1901  0233  3001               	movlw	1
  1902  0234  0260               	subwf	calPulseWidth@uiChannel2Value+1,w
  1903  0235  304C               	movlw	76
  1904  0236  1903               	skipnz
  1905  0237  025F               	subwf	calPulseWidth@uiChannel2Value,w
  1906  0238  1C03               	skipc
  1907  0239  2A3C               	goto	l3692
  1908  023A                     l3690:	
  1909                           
  1910                           ;main.c: 517: ucPulseWidth = 99;
  1911  023A  3063               	movlw	99
  1912  023B  2A44               	goto	L11
  1913  023C                     l3692:	
  1914                           
  1915                           ;main.c: 518: else if( uiChannel2Value <= 312)
  1916  023C  3001               	movlw	1
  1917  023D  0260               	subwf	calPulseWidth@uiChannel2Value+1,w
  1918  023E  3039               	movlw	57
  1919  023F  1903               	skipnz
  1920  0240  025F               	subwf	calPulseWidth@uiChannel2Value,w
  1921  0241  1803               	skipnc
  1922  0242  2A46               	goto	l3696
  1923                           
  1924                           ;main.c: 519: ucPulseWidth = 30;
  1925  0243  301E               	movlw	30
  1926  0244                     L11:	
  1927  0244  00E1               	movwf	calPulseWidth@ucPulseWidth
  1928  0245  2A62               	goto	l745
  1929  0246                     l3696:	
  1930                           
  1931                           ;main.c: 524: unsigned char ucGapValue = 0;
  1932  0246  01DE               	clrf	calPulseWidth@ucGapValue
  1933                           
  1934                           ;main.c: 526: unsigned char ucThreeTimesValue = 0;
  1935  0247  01DC               	clrf	calPulseWidth@ucThreeTimesValue
  1936                           
  1937                           ;main.c: 527: unsigned char ucHalfValue = 0;
  1938  0248  01DD               	clrf	calPulseWidth@ucHalfValue
  1939                           
  1940                           ;main.c: 529: uiGapValue = uiChannel2Value - 312;
  1941  0249  0860               	movf	calPulseWidth@uiChannel2Value+1,w
  1942  024A  00DB               	movwf	calPulseWidth@uiGapValue+1
  1943  024B  085F               	movf	calPulseWidth@uiChannel2Value,w
  1944  024C  00DA               	movwf	calPulseWidth@uiGapValue
  1945  024D  30C8               	movlw	200
  1946  024E  07DA               	addwf	calPulseWidth@uiGapValue,f
  1947  024F  1803               	skipnc
  1948  0250  0ADB               	incf	calPulseWidth@uiGapValue+1,f
  1949  0251  30FE               	movlw	254
  1950  0252  07DB               	addwf	calPulseWidth@uiGapValue+1,f
  1951                           
  1952                           ;main.c: 531: ucGapValue = uiGapValue;
  1953  0253  085A               	movf	calPulseWidth@uiGapValue,w
  1954  0254  00DE               	movwf	calPulseWidth@ucGapValue
  1955                           
  1956                           ;main.c: 533: ucThreeTimesValue = ucGapValue*3;
  1957  0255  075E               	addwf	calPulseWidth@ucGapValue,w
  1958  0256  075E               	addwf	calPulseWidth@ucGapValue,w
  1959  0257  00DC               	movwf	calPulseWidth@ucThreeTimesValue
  1960                           
  1961                           ;main.c: 535: ucHalfValue = ucGapValue >> 1;
  1962  0258  1003               	clrc
  1963  0259  0C5E               	rrf	calPulseWidth@ucGapValue,w
  1964  025A  00DD               	movwf	calPulseWidth@ucHalfValue
  1965                           
  1966                           ;main.c: 537: ucPulseWidth = 30 + ucThreeTimesValue + ucHalfValue;
  1967  025B  075C               	addwf	calPulseWidth@ucThreeTimesValue,w
  1968  025C  3E1E               	addlw	30
  1969  025D  00E1               	movwf	calPulseWidth@ucPulseWidth
  1970                           
  1971                           ;main.c: 539: if(ucPulseWidth > 99)
  1972  025E  3064               	movlw	100
  1973  025F  0261               	subwf	calPulseWidth@ucPulseWidth,w
  1974  0260  1803               	btfsc	3,0
  1975  0261  2A3A               	goto	l3690
  1976  0262                     l745:	
  1977                           
  1978                           ;main.c: 542: }
  1979                           ;main.c: 546: return ucPulseWidth;
  1980  0262  0861               	movf	calPulseWidth@ucPulseWidth,w
  1981  0263  0008               	return
  1982  0264                     __end_of_calPulseWidth:	
  1983  0264                     __ptext932:	
  1984 ;; =============== function _process_AD_Converter_Value ends ============
  1985                           
  1986                           
  1987 ;; *************** function _getAdOriginalCh12Value *****************
  1988 ;; Defined at:
  1989 ;;		line 226 in file "D:\develop\190625\AK7030-OTP\common.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;		None
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;		None
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  2   54[BANK0 ] unsigned int 
  1996 ;; Registers used:
  1997 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1998 ;; Tracked objects:
  1999 ;;		On entry : 40/0
  2000 ;;		On exit  : 160/0
  2001 ;;		Unchanged: FFE00/0
  2002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2003 ;;      Params:         0       2       0       0       0
  2004 ;;      Locals:         0       0       0       0       0
  2005 ;;      Temps:          0       0       0       0       0
  2006 ;;      Totals:         0       2       0       0       0
  2007 ;;Total ram usage:        2 bytes
  2008 ;; Hardware stack levels used:    1
  2009 ;; Hardware stack levels required when called:    3
  2010 ;; This function calls:
  2011 ;;		_Filter
  2012 ;; This function is called by:
  2013 ;;		_calPulseWidth
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016  0264                     _getAdOriginalCh12Value:	
  2017                           
  2018                           ;common.c: 229: return Filter(uiSampleChannelFirst);
  2019                           
  2020                           ; Regs used in _getAdOriginalCh12Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  2021  0264  3090               	movlw	_uiSampleChannelFirst& (0+255)
  2022  0265  1283               	bcf	3,5	;RP0=0, select bank0
  2023  0266  00A0               	movwf	?_Filter
  2024  0267  3001               	movlw	1
  2025  0268  00A1               	movwf	?_Filter+1
  2026  0269  226F               	fcall	_Filter
  2027  026A  0821               	movf	?_Filter+1,w
  2028  026B  00D7               	movwf	?_getAdOriginalCh12Value+1
  2029  026C  0820               	movf	?_Filter,w
  2030  026D  00D6               	movwf	?_getAdOriginalCh12Value
  2031  026E  0008               	return
  2032  026F                     __end_of_getAdOriginalCh12Value:	
  2033  026F                     __ptext938:	
  2034 ;; =============== function _getAD_ConvertFlag ends ============
  2035                           
  2036                           
  2037 ;; *************** function _Filter *****************
  2038 ;; Defined at:
  2039 ;;		line 60 in file "D:\develop\190625\AK7030-OTP\common.c"
  2040 ;; Parameters:    Size  Location     Type
  2041 ;;  tmpValue        2    0[BANK0 ] PTR int 
  2042 ;;		 -> uiSampleChannelFourteenth(40), uiSampleChannelFourth(40), uiSampleChannelFirst(40), 
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;  cir             2   50[BANK0 ] int 
  2045 ;;  filter_buf     40    6[BANK0 ] unsigned int [20]
  2046 ;;  filter_sum      2   48[BANK0 ] unsigned int 
  2047 ;;  filter_temp     2   46[BANK0 ] unsigned int 
  2048 ;;  i               1   53[BANK0 ] unsigned char 
  2049 ;;  j               1   52[BANK0 ] unsigned char 
  2050 ;; Return value:  Size  Location     Type
  2051 ;;                  2    0[BANK0 ] unsigned int 
  2052 ;; Registers used:
  2053 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2054 ;; Tracked objects:
  2055 ;;		On entry : 60/0
  2056 ;;		On exit  : 160/0
  2057 ;;		Unchanged: FFE00/0
  2058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2059 ;;      Params:         0       2       0       0       0
  2060 ;;      Locals:         0      48       0       0       0
  2061 ;;      Temps:          0       4       0       0       0
  2062 ;;      Totals:         0      54       0       0       0
  2063 ;;Total ram usage:       54 bytes
  2064 ;; Hardware stack levels used:    1
  2065 ;; Hardware stack levels required when called:    2
  2066 ;; This function calls:
  2067 ;;		Nothing
  2068 ;; This function is called by:
  2069 ;;		_getAdOriginalCh12Value
  2070 ;;		_getAdOriginalCh13Value
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073  026F                     _Filter:	
  2074                           
  2075                           ; Regs used in _Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  2076  026F  01D4               	clrf	Filter@j
  2077                           
  2078                           ;common.c: 64: unsigned int filter_temp = 0, filter_sum = 0;
  2079  0270  01CE               	clrf	Filter@filter_temp
  2080  0271  01CF               	clrf	Filter@filter_temp+1
  2081  0272  01D0               	clrf	Filter@filter_sum
  2082  0273  01D1               	clrf	Filter@filter_sum+1
  2083                           
  2084                           ;common.c: 66: unsigned int filter_buf[20];
  2085                           ;common.c: 68: for(int cir = 0;cir < 20; cir++)
  2086  0274  01D2               	clrf	Filter@cir
  2087  0275  01D3               	clrf	Filter@cir+1
  2088  0276                     l3486:	
  2089                           
  2090                           ;common.c: 69: filter_buf[cir] = *tmpValue++;
  2091  0276  1283               	bcf	3,5	;RP0=0, select bank0
  2092  0277  1303               	bcf	3,6	;RP1=0, select bank0
  2093  0278  0820               	movf	Filter@tmpValue,w
  2094  0279  0084               	movwf	4
  2095  027A  1783               	bsf	3,7
  2096  027B  1C21               	btfss	Filter@tmpValue+1,0
  2097  027C  1383               	bcf	3,7
  2098  027D  0800               	movf	0,w
  2099  027E  2316  118A         	fcall	PL7	;call to abstracted procedure
  2100  0280  0D52               	rlf	Filter@cir,w
  2101  0281  3E26               	addlw	Filter@filter_buf& (0+255)
  2102  0282  0084               	movwf	4
  2103  0283  0822               	movf	??_Filter,w
  2104  0284  1383               	bcf	3,7	;select IRP bank0
  2105  0285  0080               	movwf	0
  2106  0286  0A84               	incf	4,f
  2107  0287  0823               	movf	??_Filter+1,w
  2108  0288  0080               	movwf	0
  2109  0289  3002               	movlw	2
  2110  028A  07A0               	addwf	Filter@tmpValue,f
  2111  028B  1803               	skipnc
  2112  028C  0AA1               	incf	Filter@tmpValue+1,f
  2113  028D  0AD2               	incf	Filter@cir,f
  2114  028E  1903               	skipnz
  2115  028F  0AD3               	incf	Filter@cir+1,f
  2116  0290  0853               	movf	Filter@cir+1,w
  2117  0291  3A80               	xorlw	128
  2118  0292  00FF               	movwf	127
  2119  0293  3080               	movlw	128
  2120  0294  027F               	subwf	127,w
  2121  0295  1D03               	skipz
  2122  0296  2A99               	goto	u1075
  2123  0297  3014               	movlw	20
  2124  0298  0252               	subwf	Filter@cir,w
  2125  0299                     u1075:	
  2126  0299  1C03               	skipc
  2127  029A  2A76               	goto	l3486
  2128                           
  2129                           ;common.c: 72: for(j = 0; j < 20 - 1; j++)
  2130  029B  1283               	bcf	3,5	;RP0=0, select bank0
  2131  029C  1303               	bcf	3,6	;RP1=0, select bank0
  2132  029D  01D4               	clrf	Filter@j
  2133  029E                     l3500:	
  2134                           
  2135                           ;common.c: 73: {
  2136                           ;common.c: 74: for(i = 0; i < 20 - 1 - j; i++)
  2137  029E  01D5               	clrf	Filter@i
  2138  029F                     l3508:	
  2139  029F  01A3               	clrf	??_Filter+1
  2140  02A0  0854               	movf	Filter@j,w
  2141  02A1  3C13               	sublw	19
  2142  02A2  00A2               	movwf	??_Filter
  2143  02A3  1C03               	skipc
  2144  02A4  03A3               	decf	??_Filter+1,f
  2145  02A5  0823               	movf	??_Filter+1,w
  2146  02A6  3A80               	xorlw	128
  2147  02A7  3C80               	sublw	128
  2148  02A8  1D03               	skipz
  2149  02A9  2AAC               	goto	u1095
  2150  02AA  0822               	movf	??_Filter,w
  2151  02AB  0255               	subwf	Filter@i,w
  2152  02AC                     u1095:	
  2153  02AC  1803               	btfsc	3,0
  2154  02AD  2AE1               	goto	l3510
  2155                           
  2156                           ;common.c: 75: {
  2157                           ;common.c: 76: if(filter_buf[i] > filter_buf[i + 1])
  2158  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  2159  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  2160  02B0  1003               	clrc
  2161  02B1  2306  118A         	fcall	PL4	;call to abstracted procedure
  2162  02B3  2310  118A         	fcall	PL6	;call to abstracted procedure
  2163  02B5  0800               	movf	0,w
  2164  02B6  00A4               	movwf	??_Filter+2
  2165  02B7  0A84               	incf	4,f
  2166  02B8  0800               	movf	0,w
  2167  02B9  00A5               	movwf	??_Filter+3
  2168  02BA  0823               	movf	??_Filter+1,w
  2169  02BB  0225               	subwf	??_Filter+3,w
  2170  02BC  1D03               	skipz
  2171  02BD  2AC0               	goto	u1085
  2172  02BE  0822               	movf	??_Filter,w
  2173  02BF  0224               	subwf	??_Filter+2,w
  2174  02C0                     u1085:	
  2175  02C0  1803               	skipnc
  2176  02C1  2ADF               	goto	l3506
  2177                           
  2178                           ;common.c: 77: {
  2179                           ;common.c: 79: filter_temp = filter_buf[i];
  2180  02C2  1003               	clrc
  2181  02C3  0D55               	rlf	Filter@i,w
  2182  02C4  3E26               	addlw	Filter@filter_buf& (0+255)
  2183  02C5  0084               	movwf	4
  2184  02C6  0800               	movf	0,w
  2185  02C7  00CE               	movwf	Filter@filter_temp
  2186  02C8  0A84               	incf	4,f
  2187  02C9  0800               	movf	0,w
  2188  02CA  00CF               	movwf	Filter@filter_temp+1
  2189                           
  2190                           ;common.c: 81: filter_buf[i] = filter_buf[i + 1];
  2191  02CB  2310  118A         	fcall	PL6	;call to abstracted procedure
  2192  02CD  0800               	movf	0,w
  2193  02CE  2316  118A         	fcall	PL7	;call to abstracted procedure
  2194  02D0  0D55               	rlf	Filter@i,w
  2195  02D1  3E26               	addlw	Filter@filter_buf& (0+255)
  2196  02D2  0084               	movwf	4
  2197  02D3  0822               	movf	??_Filter,w
  2198  02D4  0080               	movwf	0
  2199  02D5  0A84               	incf	4,f
  2200  02D6  0823               	movf	??_Filter+1,w
  2201  02D7  0080               	movwf	0
  2202                           
  2203                           ;common.c: 83: filter_buf[i + 1] = filter_temp;
  2204  02D8  2310  118A         	fcall	PL6	;call to abstracted procedure
  2205  02DA  084E               	movf	Filter@filter_temp,w
  2206  02DB  0080               	movwf	0
  2207  02DC  0A84               	incf	4,f
  2208  02DD  084F               	movf	Filter@filter_temp+1,w
  2209  02DE  0080               	movwf	0
  2210  02DF                     l3506:	
  2211  02DF  0AD5               	incf	Filter@i,f
  2212  02E0  2A9F               	goto	l3508
  2213  02E1                     l3510:	
  2214  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  2215  02E2  3013               	movlw	19
  2216  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  2217  02E4  0AD4               	incf	Filter@j,f
  2218  02E5  0254               	subwf	Filter@j,w
  2219  02E6  1C03               	skipc
  2220  02E7  2A9E               	goto	l3500
  2221                           
  2222                           ;common.c: 84: }
  2223                           ;common.c: 85: }
  2224                           ;common.c: 86: }
  2225                           ;common.c: 88: for(i = 2; i < 20 - 2; i++)
  2226  02E8  3002               	movlw	2
  2227  02E9  00D5               	movwf	Filter@i
  2228                           
  2229                           ;common.c: 89: {
  2230                           ;common.c: 90: filter_sum += filter_buf[i];
  2231  02EA  1003               	clrc
  2232  02EB                     L14:	
  2233  02EB  2306  118A         	fcall	PL4	;call to abstracted procedure
  2234  02ED  0822               	movf	??_Filter,w
  2235  02EE  07D0               	addwf	Filter@filter_sum,f
  2236  02EF  1803               	skipnc
  2237  02F0  0AD1               	incf	Filter@filter_sum+1,f
  2238  02F1  0823               	movf	??_Filter+1,w
  2239  02F2  07D1               	addwf	Filter@filter_sum+1,f
  2240  02F3  3012               	movlw	18
  2241  02F4  0AD5               	incf	Filter@i,f
  2242  02F5  0255               	subwf	Filter@i,w
  2243  02F6  1C03               	skipc
  2244  02F7  2AEB               	goto	L14
  2245                           
  2246                           ;common.c: 91: }
  2247                           ;common.c: 93: return (filter_sum >> 4);
  2248  02F8  0851               	movf	Filter@filter_sum+1,w
  2249  02F9  00A1               	movwf	?_Filter+1
  2250  02FA  0850               	movf	Filter@filter_sum,w
  2251  02FB  00A0               	movwf	?_Filter
  2252  02FC  300F               	movlw	15
  2253  02FD  0EA0               	swapf	?_Filter,f
  2254  02FE  0EA1               	swapf	?_Filter+1,f
  2255  02FF  05A0               	andwf	?_Filter,f
  2256  0300  0821               	movf	?_Filter+1,w
  2257  0301  39F0               	andlw	240
  2258  0302  04A0               	iorwf	?_Filter,f
  2259  0303  300F               	movlw	15
  2260  0304  05A1               	andwf	?_Filter+1,f
  2261  0305  0008               	return
  2262  0306                     __end_of_Filter:	
  2263  0306                     PL4:	
  2264  0306  0D55               	rlf	Filter@i,w
  2265  0307  3E26               	addlw	Filter@filter_buf& (0+255)
  2266  0308  0084               	movwf	4
  2267  0309  1383               	bcf	3,7	;select IRP bank0
  2268  030A  0800               	movf	0,w
  2269  030B  00A2               	movwf	??_Filter
  2270  030C  0A84               	incf	4,f
  2271  030D  0800               	movf	0,w
  2272  030E  00A3               	movwf	??_Filter+1
  2273  030F  0008               	return
  2274  0310                     PL6:	
  2275  0310  1003               	clrc
  2276  0311  0D55               	rlf	Filter@i,w
  2277  0312  3E02               	addlw	2
  2278  0313  3E26               	addlw	Filter@filter_buf& (0+255)
  2279  0314  0084               	movwf	4
  2280  0315  0008               	return
  2281  0316                     PL7:	
  2282  0316  00A2               	movwf	??_Filter
  2283  0317  0A84               	incf	4,f
  2284  0318  0800               	movf	0,w
  2285  0319  00A3               	movwf	??_Filter+1
  2286  031A  1003               	clrc
  2287  031B  0008               	return
  2288  031C                     PL8:	
  2289  031C  00D9               	movwf	??_calPulseWidth+1
  2290  031D  3000               	movlw	0
  2291  031E  0259               	subwf	??_calPulseWidth+1,w
  2292  031F  3405               	retlw	5
  2293                           
  2294                           	psect	text931
  2295  040C                     __ptext931:	
  2296 ;; =============== function _getAdOriginalCh13Value ends ============
  2297                           
  2298                           
  2299 ;; *************** function _process_AD_Converter_Value *****************
  2300 ;; Defined at:
  2301 ;;		line 260 in file "D:\develop\190625\AK7030-OTP\common.c"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;		None
  2304 ;; Auto vars:     Size  Location     Type
  2305 ;;		None
  2306 ;; Return value:  Size  Location     Type
  2307 ;;		None               void
  2308 ;; Registers used:
  2309 ;;		wreg, status,2, status,0, pclath, cstack
  2310 ;; Tracked objects:
  2311 ;;		On entry : 0/20
  2312 ;;		On exit  : 40/0
  2313 ;;		Unchanged: FFF9F/0
  2314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2315 ;;      Params:         0       0       0       0       0
  2316 ;;      Locals:         0       0       0       0       0
  2317 ;;      Temps:          0       0       0       0       0
  2318 ;;      Totals:         0       0       0       0       0
  2319 ;;Total ram usage:        0 bytes
  2320 ;; Hardware stack levels used:    1
  2321 ;; Hardware stack levels required when called:    3
  2322 ;; This function calls:
  2323 ;;		_getAD_ConvertFlag
  2324 ;;		_setAD_ConvertFlag
  2325 ;;		_AD_Sample
  2326 ;;		_adc_test_init
  2327 ;;		_adc_start
  2328 ;; This function is called by:
  2329 ;;		_main
  2330 ;; This function uses a non-reentrant model
  2331 ;;
  2332  040C                     _process_AD_Converter_Value:	
  2333                           
  2334                           ;common.c: 261: if(getAD_ConvertFlag())
  2335                           
  2336                           ; Regs used in _process_AD_Converter_Value: [wreg+status,2+status,0+pclath+cstack]
  2337  040C  2423  118A         	fcall	_getAD_ConvertFlag
  2338  040E  3A00               	xorlw	0
  2339  040F  1903               	skipnz
  2340  0410  0008               	return
  2341                           
  2342                           ;common.c: 262: {
  2343                           ;common.c: 263: setAD_ConvertFlag(0);
  2344  0411  3000               	movlw	0
  2345  0412  2427  118A         	fcall	_setAD_ConvertFlag
  2346                           
  2347                           ;common.c: 264: AD_Sample();
  2348  0414  242C  118A         	fcall	_AD_Sample
  2349                           
  2350                           ;common.c: 265: if(12 == sampleChannelSelect)
  2351  0416  1283               	bcf	3,5	;RP0=0, select bank0
  2352  0417  086E               	movf	_sampleChannelSelect,w
  2353  0418  3A0C               	xorlw	12
  2354                           
  2355                           ;common.c: 266: adc_test_init(12,3);
  2356  0419  3003               	movlw	3
  2357  041A  00A0               	movwf	?_adc_test_init
  2358  041B  1D03               	skipz
  2359  041C  2C1F               	goto	L13
  2360  041D  300C               	movlw	12
  2361  041E  2C20               	goto	L12
  2362  041F                     L13:	
  2363                           ;common.c: 269: else
  2364                           ;common.c: 270: adc_test_init(13,3);
  2365                           
  2366  041F  300D               	movlw	13
  2367  0420                     L12:	
  2368  0420  2441  118A         	fcall	_adc_test_init
  2369                           
  2370                           ;common.c: 272: adc_start();
  2371  0422  2C56               	ljmp	l3366
  2372  0423                     __end_of_process_AD_Converter_Value:	
  2373  0423                     __ptext937:	
  2374 ;; =============== function _setAD_ConvertFlag ends ============
  2375                           
  2376                           
  2377 ;; *************** function _getAD_ConvertFlag *****************
  2378 ;; Defined at:
  2379 ;;		line 209 in file "D:\develop\190625\AK7030-OTP\common.c"
  2380 ;; Parameters:    Size  Location     Type
  2381 ;;		None
  2382 ;; Auto vars:     Size  Location     Type
  2383 ;;		None
  2384 ;; Return value:  Size  Location     Type
  2385 ;;                  1    wreg      unsigned char 
  2386 ;; Registers used:
  2387 ;;		wreg
  2388 ;; Tracked objects:
  2389 ;;		On entry : 0/20
  2390 ;;		On exit  : 60/20
  2391 ;;		Unchanged: FFF9F/0
  2392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2393 ;;      Params:         0       0       0       0       0
  2394 ;;      Locals:         0       0       0       0       0
  2395 ;;      Temps:          0       0       0       0       0
  2396 ;;      Totals:         0       0       0       0       0
  2397 ;;Total ram usage:        0 bytes
  2398 ;; Hardware stack levels used:    1
  2399 ;; Hardware stack levels required when called:    2
  2400 ;; This function calls:
  2401 ;;		Nothing
  2402 ;; This function is called by:
  2403 ;;		_process_AD_Converter_Value
  2404 ;; This function uses a non-reentrant model
  2405 ;;
  2406  0423                     _getAD_ConvertFlag:	
  2407                           
  2408                           ;common.c: 210: return adc_convert_flag;
  2409                           
  2410                           ; Regs used in _getAD_ConvertFlag: [wreg]
  2411  0423  1683               	bsf	3,5	;RP0=1, select bank1
  2412  0424  1303               	bcf	3,6	;RP1=0, select bank1
  2413  0425  0833               	movf	_adc_convert_flag^(0+128),w
  2414  0426  0008               	return
  2415  0427                     __end_of_getAD_ConvertFlag:	
  2416  0427                     __ptext936:	
  2417 ;; =============== function _AD_Sample ends ============
  2418                           
  2419                           
  2420 ;; *************** function _setAD_ConvertFlag *****************
  2421 ;; Defined at:
  2422 ;;		line 215 in file "D:\develop\190625\AK7030-OTP\common.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;  flag            1    wreg     unsigned char 
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;  flag            1    0[BANK0 ] unsigned char 
  2427 ;; Return value:  Size  Location     Type
  2428 ;;		None               void
  2429 ;; Registers used:
  2430 ;;		wreg
  2431 ;; Tracked objects:
  2432 ;;		On entry : 60/20
  2433 ;;		On exit  : 60/20
  2434 ;;		Unchanged: FFF9F/0
  2435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2436 ;;      Params:         0       0       0       0       0
  2437 ;;      Locals:         0       1       0       0       0
  2438 ;;      Temps:          0       0       0       0       0
  2439 ;;      Totals:         0       1       0       0       0
  2440 ;;Total ram usage:        1 bytes
  2441 ;; Hardware stack levels used:    1
  2442 ;; Hardware stack levels required when called:    2
  2443 ;; This function calls:
  2444 ;;		Nothing
  2445 ;; This function is called by:
  2446 ;;		_process_AD_Converter_Value
  2447 ;; This function uses a non-reentrant model
  2448 ;;
  2449  0427                     _setAD_ConvertFlag:	
  2450                           
  2451                           ; Regs used in _setAD_ConvertFlag: [wreg]
  2452                           ;setAD_ConvertFlag@flag stored from wreg
  2453  0427  1283               	bcf	3,5	;RP0=0, select bank0
  2454  0428  00A0               	movwf	setAD_ConvertFlag@flag
  2455                           
  2456                           ;common.c: 216: adc_convert_flag = flag;
  2457  0429  1683               	bsf	3,5	;RP0=1, select bank1
  2458  042A  00B3               	movwf	_adc_convert_flag^(0+128)
  2459  042B  0008               	return
  2460  042C                     __end_of_setAD_ConvertFlag:	
  2461  042C                     __ptext935:	
  2462 ;; =============== function _initPin ends ============
  2463                           
  2464                           
  2465 ;; *************** function _AD_Sample *****************
  2466 ;; Defined at:
  2467 ;;		line 286 in file "D:\develop\190625\AK7030-OTP\common.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;		None
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;		None
  2472 ;; Return value:  Size  Location     Type
  2473 ;;		None               void
  2474 ;; Registers used:
  2475 ;;		wreg, status,2, status,0
  2476 ;; Tracked objects:
  2477 ;;		On entry : 60/20
  2478 ;;		On exit  : 40/0
  2479 ;;		Unchanged: FFF9F/0
  2480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2481 ;;      Params:         0       0       0       0       0
  2482 ;;      Locals:         0       0       0       0       0
  2483 ;;      Temps:          0       0       0       0       0
  2484 ;;      Totals:         0       0       0       0       0
  2485 ;;Total ram usage:        0 bytes
  2486 ;; Hardware stack levels used:    1
  2487 ;; Hardware stack levels required when called:    2
  2488 ;; This function calls:
  2489 ;;		Nothing
  2490 ;; This function is called by:
  2491 ;;		_process_AD_Converter_Value
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494  042C                     _AD_Sample:	
  2495                           
  2496                           ;common.c: 287: if(sampleTimes < 12)
  2497                           
  2498                           ; Regs used in _AD_Sample: [wreg+status,2+status,0]
  2499  042C  300C               	movlw	12
  2500  042D  0238               	subwf	_sampleTimes^(0+128),w
  2501  042E  1803               	skipnc
  2502  042F  0008               	return
  2503  0430  300C               	movlw	12
  2504                           
  2505                           ;common.c: 288: {
  2506                           ;common.c: 309: sampleTimes++;
  2507  0431  0AB8               	incf	_sampleTimes^(0+128),f
  2508                           
  2509                           ;common.c: 311: if(sampleTimes >= 12)
  2510  0432  0238               	subwf	_sampleTimes^(0+128),w
  2511  0433  1C03               	skipc
  2512  0434  0008               	return
  2513                           
  2514                           ;common.c: 312: {
  2515                           ;common.c: 313: sampleTimes = 0;
  2516  0435  01B8               	clrf	_sampleTimes^(0+128)
  2517                           
  2518                           ;common.c: 315: if(sampleChannelSelect == 12)
  2519  0436  1283               	bcf	3,5	;RP0=0, select bank0
  2520  0437  086E               	movf	_sampleChannelSelect,w
  2521  0438  3A0C               	xorlw	12
  2522  0439  1D03               	skipz
  2523  043A  2C3E               	goto	l3594
  2524                           
  2525                           ;common.c: 316: {
  2526                           ;common.c: 319: sampleChannelSelect = 13;
  2527  043B  300D               	movlw	13
  2528  043C  00EE               	movwf	_sampleChannelSelect
  2529                           
  2530                           ;common.c: 320: }
  2531  043D  0008               	return
  2532  043E                     l3594:	
  2533                           
  2534                           ;common.c: 331: else
  2535                           ;common.c: 332: {
  2536                           ;common.c: 334: sampleChannelSelect = 12;
  2537  043E  300C               	movlw	12
  2538  043F  00EE               	movwf	_sampleChannelSelect
  2539  0440  0008               	return
  2540  0441                     __end_of_AD_Sample:	
  2541  0441                     __ptext951:	
  2542 ;; =============== function _adc_start ends ============
  2543                           
  2544                           
  2545 ;; *************** function _adc_test_init *****************
  2546 ;; Defined at:
  2547 ;;		line 85 in file "D:\develop\190625\AK7030-OTP\periph.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;  channel         1    wreg     unsigned char 
  2550 ;;  ref             1    0[BANK0 ] unsigned char 
  2551 ;; Auto vars:     Size  Location     Type
  2552 ;;  channel         1    2[BANK0 ] unsigned char 
  2553 ;; Return value:  Size  Location     Type
  2554 ;;		None               void
  2555 ;; Registers used:
  2556 ;;		wreg, status,2, status,0
  2557 ;; Tracked objects:
  2558 ;;		On entry : 60/0
  2559 ;;		On exit  : 60/20
  2560 ;;		Unchanged: FFF9F/0
  2561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2562 ;;      Params:         0       1       0       0       0
  2563 ;;      Locals:         0       1       0       0       0
  2564 ;;      Temps:          0       1       0       0       0
  2565 ;;      Totals:         0       3       0       0       0
  2566 ;;Total ram usage:        3 bytes
  2567 ;; Hardware stack levels used:    1
  2568 ;; Hardware stack levels required when called:    2
  2569 ;; This function calls:
  2570 ;;		Nothing
  2571 ;; This function is called by:
  2572 ;;		_main
  2573 ;;		_process_AD_Converter_Value
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576  0441                     _adc_test_init:	
  2577                           
  2578                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  2579                           ;adc_test_init@channel stored from wreg
  2580  0441  00A2               	movwf	adc_test_init@channel
  2581                           
  2582                           ;periph.c: 86: ADCON0 = 0x00;
  2583  0442  019F               	clrf	31	;volatile
  2584                           
  2585                           ;periph.c: 87: ADCON0|=channel<<2;
  2586  0443  00A1               	movwf	??_adc_test_init
  2587  0444  1003               	clrc
  2588  0445  0DA1               	rlf	??_adc_test_init,f
  2589  0446  1003               	clrc
  2590  0447  0D21               	rlf	??_adc_test_init,w
  2591  0448  049F               	iorwf	31,f	;volatile
  2592                           
  2593                           ;periph.c: 88: ADCON1|=ref<<6;
  2594  0449  0820               	movf	adc_test_init@ref,w
  2595  044A  00A1               	movwf	??_adc_test_init
  2596  044B  0CA1               	rrf	??_adc_test_init,f
  2597  044C  0CA1               	rrf	??_adc_test_init,f
  2598  044D  0C21               	rrf	??_adc_test_init,w
  2599  044E  39C0               	andlw	192
  2600  044F  1683               	bsf	3,5	;RP0=1, select bank1
  2601  0450  049F               	iorwf	31,f	;volatile
  2602                           
  2603                           ;periph.c: 89: ADON=1;
  2604  0451  1283               	bcf	3,5	;RP0=0, select bank0
  2605  0452  141F               	bsf	31,0
  2606                           
  2607                           ;periph.c: 90: ADIE=1;
  2608  0453  1683               	bsf	3,5	;RP0=1, select bank1
  2609  0454  150D               	bsf	13,2
  2610  0455  0008               	return
  2611  0456                     __end_of_adc_test_init:	
  2612  0456                     __ptext950:	
  2613 ;; =============== function _startTwentyMinTimer ends ============
  2614                           
  2615                           
  2616 ;; *************** function _adc_start *****************
  2617 ;; Defined at:
  2618 ;;		line 100 in file "D:\develop\190625\AK7030-OTP\periph.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;		None
  2621 ;; Auto vars:     Size  Location     Type
  2622 ;;		None
  2623 ;; Return value:  Size  Location     Type
  2624 ;;		None               void
  2625 ;; Registers used:
  2626 ;;		None
  2627 ;; Tracked objects:
  2628 ;;		On entry : 60/20
  2629 ;;		On exit  : 60/0
  2630 ;;		Unchanged: FFF9F/0
  2631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2632 ;;      Params:         0       0       0       0       0
  2633 ;;      Locals:         0       0       0       0       0
  2634 ;;      Temps:          0       0       0       0       0
  2635 ;;      Totals:         0       0       0       0       0
  2636 ;;Total ram usage:        0 bytes
  2637 ;; Hardware stack levels used:    1
  2638 ;; Hardware stack levels required when called:    2
  2639 ;; This function calls:
  2640 ;;		Nothing
  2641 ;; This function is called by:
  2642 ;;		_main
  2643 ;;		_process_AD_Converter_Value
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646  0456                     _adc_start:	
  2647  0456                     l3366:	
  2648                           ; Regs used in _adc_start: []
  2649                           
  2650                           
  2651                           ;periph.c: 101: GO=1;
  2652  0456  1283               	bcf	3,5	;RP0=0, select bank0
  2653  0457  149F               	bsf	31,1
  2654  0458  0008               	return
  2655  0459                     __end_of_adc_start:	
  2656                           
  2657                           	psect	text933
  2658  048A                     __ptext933:	
  2659 ;; =============== function _getAdOriginalCh12Value ends ============
  2660                           
  2661                           
  2662 ;; *************** function _setPinInitVaule *****************
  2663 ;; Defined at:
  2664 ;;		line 284 in file "D:\develop\190625\AK7030-OTP\main.c"
  2665 ;; Parameters:    Size  Location     Type
  2666 ;;		None
  2667 ;; Auto vars:     Size  Location     Type
  2668 ;;		None
  2669 ;; Return value:  Size  Location     Type
  2670 ;;		None               void
  2671 ;; Registers used:
  2672 ;;		wreg, status,2, status,0, pclath, cstack
  2673 ;; Tracked objects:
  2674 ;;		On entry : 17F/20
  2675 ;;		On exit  : 17F/0
  2676 ;;		Unchanged: FFE80/0
  2677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2678 ;;      Params:         0       0       0       0       0
  2679 ;;      Locals:         0       0       0       0       0
  2680 ;;      Temps:          0       0       0       0       0
  2681 ;;      Totals:         0       0       0       0       0
  2682 ;;Total ram usage:        0 bytes
  2683 ;; Hardware stack levels used:    1
  2684 ;; Hardware stack levels required when called:    3
  2685 ;; This function calls:
  2686 ;;		_setPB3
  2687 ;;		_setPB4
  2688 ;;		_setPB5
  2689 ;; This function is called by:
  2690 ;;		_main
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693  048A                     _setPinInitVaule:	
  2694                           
  2695                           ;main.c: 286: setPB3(1);
  2696                           
  2697                           ; Regs used in _setPinInitVaule: [wreg+status,2+status,0+pclath+cstack]
  2698  048A  3001               	movlw	1
  2699  048B  2492  118A         	fcall	_setPB3
  2700                           
  2701                           ;main.c: 287: setPB4(0);
  2702  048D  3000               	movlw	0
  2703  048E  249B  118A         	fcall	_setPB4
  2704                           
  2705                           ;main.c: 288: setPB5(1);
  2706  0490  3001               	movlw	1
  2707  0491  2CA3               	ljmp	_setPB5
  2708  0492                     __end_of_setPinInitVaule:	
  2709  0492                     __ptext963:	
  2710 ;; =============== function _initPB4 ends ============
  2711                           
  2712                           
  2713 ;; *************** function _setPB3 *****************
  2714 ;; Defined at:
  2715 ;;		line 145 in file "D:\develop\190625\AK7030-OTP\main.c"
  2716 ;; Parameters:    Size  Location     Type
  2717 ;;  bValue          1    wreg     unsigned char 
  2718 ;; Auto vars:     Size  Location     Type
  2719 ;;  bValue          1    0[BANK0 ] unsigned char 
  2720 ;; Return value:  Size  Location     Type
  2721 ;;		None               void
  2722 ;; Registers used:
  2723 ;;		wreg
  2724 ;; Tracked objects:
  2725 ;;		On entry : 40/0
  2726 ;;		On exit  : 60/0
  2727 ;;		Unchanged: FFF9F/0
  2728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2729 ;;      Params:         0       0       0       0       0
  2730 ;;      Locals:         0       1       0       0       0
  2731 ;;      Temps:          0       0       0       0       0
  2732 ;;      Totals:         0       1       0       0       0
  2733 ;;Total ram usage:        1 bytes
  2734 ;; Hardware stack levels used:    1
  2735 ;; Hardware stack levels required when called:    2
  2736 ;; This function calls:
  2737 ;;		Nothing
  2738 ;; This function is called by:
  2739 ;;		_setPinInitVaule
  2740 ;;		_main
  2741 ;; This function uses a non-reentrant model
  2742 ;;
  2743  0492                     _setPB3:	
  2744                           
  2745                           ; Regs used in _setPB3: [wreg]
  2746                           ;setPB3@bValue stored from wreg
  2747  0492  1283               	bcf	3,5	;RP0=0, select bank0
  2748  0493  00A0               	movwf	setPB3@bValue
  2749                           
  2750                           ;main.c: 146: if( bValue )
  2751  0494  0820               	movf	setPB3@bValue,w
  2752  0495  1903               	btfsc	3,2
  2753  0496  2C99               	goto	l685
  2754                           
  2755                           ;main.c: 148: PB3 = 1;
  2756  0497  1586               	bsf	6,3
  2757  0498  0008               	return
  2758  0499                     l685:	
  2759                           
  2760                           ;main.c: 152: else
  2761                           ;main.c: 154: PB3= 0;
  2762  0499  1186               	bcf	6,3
  2763  049A  0008               	return
  2764  049B                     __end_of_setPB3:	
  2765  049B                     __ptext961:	
  2766 ;; =============== function _initPB5 ends ============
  2767                           
  2768                           
  2769 ;; *************** function _setPB4 *****************
  2770 ;; Defined at:
  2771 ;;		line 180 in file "D:\develop\190625\AK7030-OTP\main.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;  bValue          1    wreg     unsigned char 
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;  bValue          1    0[BANK0 ] unsigned char 
  2776 ;; Return value:  Size  Location     Type
  2777 ;;		None               void
  2778 ;; Registers used:
  2779 ;;		wreg
  2780 ;; Tracked objects:
  2781 ;;		On entry : 60/0
  2782 ;;		On exit  : 60/0
  2783 ;;		Unchanged: FFF9F/0
  2784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2785 ;;      Params:         0       0       0       0       0
  2786 ;;      Locals:         0       1       0       0       0
  2787 ;;      Temps:          0       0       0       0       0
  2788 ;;      Totals:         0       1       0       0       0
  2789 ;;Total ram usage:        1 bytes
  2790 ;; Hardware stack levels used:    1
  2791 ;; Hardware stack levels required when called:    2
  2792 ;; This function calls:
  2793 ;;		Nothing
  2794 ;; This function is called by:
  2795 ;;		_setPinInitVaule
  2796 ;;		_main
  2797 ;; This function uses a non-reentrant model
  2798 ;;
  2799  049B                     _setPB4:	
  2800                           
  2801                           ; Regs used in _setPB4: [wreg]
  2802                           ;setPB4@bValue stored from wreg
  2803  049B  00A0               	movwf	setPB4@bValue
  2804                           
  2805                           ;main.c: 181: if( bValue )
  2806  049C  0820               	movf	setPB4@bValue,w
  2807  049D  1903               	btfsc	3,2
  2808  049E  2CA1               	goto	l695
  2809                           
  2810                           ;main.c: 183: PB4 = 1;
  2811  049F  1606               	bsf	6,4
  2812  04A0  0008               	return
  2813  04A1                     l695:	
  2814                           
  2815                           ;main.c: 187: else
  2816                           ;main.c: 189: PB4= 0;
  2817  04A1  1206               	bcf	6,4
  2818  04A2  0008               	return
  2819  04A3                     __end_of_setPB4:	
  2820  04A3                     __ptext959:	
  2821 ;; =============== function _initPB2_AsHighResistence ends ============
  2822                           
  2823                           
  2824 ;; *************** function _setPB5 *****************
  2825 ;; Defined at:
  2826 ;;		line 214 in file "D:\develop\190625\AK7030-OTP\main.c"
  2827 ;; Parameters:    Size  Location     Type
  2828 ;;  bValue          1    wreg     unsigned char 
  2829 ;; Auto vars:     Size  Location     Type
  2830 ;;  bValue          1    0[BANK0 ] unsigned char 
  2831 ;; Return value:  Size  Location     Type
  2832 ;;		None               void
  2833 ;; Registers used:
  2834 ;;		wreg
  2835 ;; Tracked objects:
  2836 ;;		On entry : 60/0
  2837 ;;		On exit  : 60/0
  2838 ;;		Unchanged: FFF9F/0
  2839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2840 ;;      Params:         0       0       0       0       0
  2841 ;;      Locals:         0       1       0       0       0
  2842 ;;      Temps:          0       0       0       0       0
  2843 ;;      Totals:         0       1       0       0       0
  2844 ;;Total ram usage:        1 bytes
  2845 ;; Hardware stack levels used:    1
  2846 ;; Hardware stack levels required when called:    2
  2847 ;; This function calls:
  2848 ;;		Nothing
  2849 ;; This function is called by:
  2850 ;;		_setPinInitVaule
  2851 ;;		_main
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854  04A3                     _setPB5:	
  2855                           
  2856                           ; Regs used in _setPB5: [wreg]
  2857                           ;setPB5@bValue stored from wreg
  2858  04A3  00A0               	movwf	setPB5@bValue
  2859                           
  2860                           ;main.c: 215: if( bValue )
  2861  04A4  0820               	movf	setPB5@bValue,w
  2862  04A5  1903               	btfsc	3,2
  2863  04A6  2CA9               	goto	l705
  2864                           
  2865                           ;main.c: 217: PB5 = 1;
  2866  04A7  1686               	bsf	6,5
  2867  04A8  0008               	return
  2868  04A9                     l705:	
  2869                           
  2870                           ;main.c: 221: else
  2871                           ;main.c: 223: PB5= 0;
  2872  04A9  1286               	bcf	6,5
  2873  04AA  0008               	return
  2874  04AB                     __end_of_setPB5:	
  2875                           
  2876                           	psect	text934
  2877  0459                     __ptext934:	
  2878 ;; =============== function _setPinInitVaule ends ============
  2879                           
  2880                           
  2881 ;; *************** function _initPin *****************
  2882 ;; Defined at:
  2883 ;;		line 268 in file "D:\develop\190625\AK7030-OTP\main.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;		None
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;		None
  2888 ;; Return value:  Size  Location     Type
  2889 ;;		None               void
  2890 ;; Registers used:
  2891 ;;		wreg, status,2, status,0, pclath, cstack
  2892 ;; Tracked objects:
  2893 ;;		On entry : 17F/0
  2894 ;;		On exit  : 17F/20
  2895 ;;		Unchanged: FFE80/0
  2896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2897 ;;      Params:         0       0       0       0       0
  2898 ;;      Locals:         0       0       0       0       0
  2899 ;;      Temps:          0       0       0       0       0
  2900 ;;      Totals:         0       0       0       0       0
  2901 ;;Total ram usage:        0 bytes
  2902 ;; Hardware stack levels used:    1
  2903 ;; Hardware stack levels required when called:    3
  2904 ;; This function calls:
  2905 ;;		_initPB2_AsHighResistence
  2906 ;;		_initPB3
  2907 ;;		_initPB4
  2908 ;;		_initPB5
  2909 ;; This function is called by:
  2910 ;;		_main
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913  0459                     _initPin:	
  2914                           
  2915                           ;main.c: 270: initPB2_AsHighResistence();
  2916                           
  2917                           ; Regs used in _initPin: [wreg+status,2+status,0+pclath+cstack]
  2918  0459  246F  118A         	fcall	_initPB2_AsHighResistence
  2919                           
  2920                           ;main.c: 272: initPB3(0);
  2921  045B  3000               	movlw	0
  2922  045C  2463  118A         	fcall	_initPB3
  2923                           
  2924                           ;main.c: 274: initPB4(0);
  2925  045E  3000               	movlw	0
  2926  045F  2474  118A         	fcall	_initPB4
  2927                           
  2928                           ;main.c: 276: initPB5(0);
  2929  0461  3000               	movlw	0
  2930  0462  2C7F               	ljmp	_initPB5
  2931  0463                     __end_of_initPin:	
  2932  0463                     __ptext964:	
  2933 ;; =============== function _setPB3 ends ============
  2934                           
  2935                           
  2936 ;; *************** function _initPB3 *****************
  2937 ;; Defined at:
  2938 ;;		line 128 in file "D:\develop\190625\AK7030-OTP\main.c"
  2939 ;; Parameters:    Size  Location     Type
  2940 ;;  bValue          1    wreg     unsigned char 
  2941 ;; Auto vars:     Size  Location     Type
  2942 ;;  bValue          1    0[BANK0 ] unsigned char 
  2943 ;; Return value:  Size  Location     Type
  2944 ;;		None               void
  2945 ;; Registers used:
  2946 ;;		wreg
  2947 ;; Tracked objects:
  2948 ;;		On entry : 17F/60
  2949 ;;		On exit  : 17F/20
  2950 ;;		Unchanged: FFE80/0
  2951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2952 ;;      Params:         0       0       0       0       0
  2953 ;;      Locals:         0       1       0       0       0
  2954 ;;      Temps:          0       0       0       0       0
  2955 ;;      Totals:         0       1       0       0       0
  2956 ;;Total ram usage:        1 bytes
  2957 ;; Hardware stack levels used:    1
  2958 ;; Hardware stack levels required when called:    2
  2959 ;; This function calls:
  2960 ;;		Nothing
  2961 ;; This function is called by:
  2962 ;;		_initPin
  2963 ;; This function uses a non-reentrant model
  2964 ;;
  2965  0463                     _initPB3:	
  2966                           
  2967                           ; Regs used in _initPB3: [wreg]
  2968                           ;initPB3@bValue stored from wreg
  2969  0463  1283               	bcf	3,5	;RP0=0, select bank0
  2970  0464  1303               	bcf	3,6	;RP1=0, select bank0
  2971  0465  00A0               	movwf	initPB3@bValue
  2972                           
  2973                           ;main.c: 129: if( bValue )
  2974  0466  0820               	movf	initPB3@bValue,w
  2975  0467  1903               	btfsc	3,2
  2976  0468  2C6C               	goto	l680
  2977                           
  2978                           ;main.c: 131: TRISB3 = 1;
  2979  0469  1683               	bsf	3,5	;RP0=1, select bank1
  2980  046A  1586               	bsf	6,3
  2981  046B  0008               	return
  2982  046C                     l680:	
  2983                           
  2984                           ;main.c: 135: else
  2985                           ;main.c: 137: TRISB3 = 0;
  2986  046C  1683               	bsf	3,5	;RP0=1, select bank1
  2987  046D  1186               	bcf	6,3
  2988  046E  0008               	return
  2989  046F                     __end_of_initPB3:	
  2990  046F                     __ptext958:	
  2991 ;; =============== function _pwm_start ends ============
  2992                           
  2993                           
  2994 ;; *************** function _initPB2_AsHighResistence *****************
  2995 ;; Defined at:
  2996 ;;		line 231 in file "D:\develop\190625\AK7030-OTP\main.c"
  2997 ;; Parameters:    Size  Location     Type
  2998 ;;		None
  2999 ;; Auto vars:     Size  Location     Type
  3000 ;;		None
  3001 ;; Return value:  Size  Location     Type
  3002 ;;		None               void
  3003 ;; Registers used:
  3004 ;;		None
  3005 ;; Tracked objects:
  3006 ;;		On entry : 17F/0
  3007 ;;		On exit  : 17F/60
  3008 ;;		Unchanged: FFE80/0
  3009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3010 ;;      Params:         0       0       0       0       0
  3011 ;;      Locals:         0       0       0       0       0
  3012 ;;      Temps:          0       0       0       0       0
  3013 ;;      Totals:         0       0       0       0       0
  3014 ;;Total ram usage:        0 bytes
  3015 ;; Hardware stack levels used:    1
  3016 ;; Hardware stack levels required when called:    2
  3017 ;; This function calls:
  3018 ;;		Nothing
  3019 ;; This function is called by:
  3020 ;;		_initPin
  3021 ;; This function uses a non-reentrant model
  3022 ;;
  3023  046F                     _initPB2_AsHighResistence:	
  3024                           
  3025                           ;main.c: 233: PB2 = 1;
  3026                           
  3027                           ; Regs used in _initPB2_AsHighResistence: []
  3028  046F  1506               	bsf	6,2
  3029                           
  3030                           ;main.c: 234: PBOD2 = 1;
  3031  0470  1683               	bsf	3,5	;RP0=1, select bank3
  3032  0471  1703               	bsf	3,6	;RP1=1, select bank3
  3033  0472  1508               	bsf	8,2
  3034  0473  0008               	return
  3035  0474                     __end_of_initPB2_AsHighResistence:	
  3036  0474                     __ptext962:	
  3037 ;; =============== function _setPB4 ends ============
  3038                           
  3039                           
  3040 ;; *************** function _initPB4 *****************
  3041 ;; Defined at:
  3042 ;;		line 163 in file "D:\develop\190625\AK7030-OTP\main.c"
  3043 ;; Parameters:    Size  Location     Type
  3044 ;;  bValue          1    wreg     unsigned char 
  3045 ;; Auto vars:     Size  Location     Type
  3046 ;;  bValue          1    0[BANK0 ] unsigned char 
  3047 ;; Return value:  Size  Location     Type
  3048 ;;		None               void
  3049 ;; Registers used:
  3050 ;;		wreg
  3051 ;; Tracked objects:
  3052 ;;		On entry : 17F/20
  3053 ;;		On exit  : 17F/20
  3054 ;;		Unchanged: FFE80/0
  3055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3056 ;;      Params:         0       0       0       0       0
  3057 ;;      Locals:         0       1       0       0       0
  3058 ;;      Temps:          0       0       0       0       0
  3059 ;;      Totals:         0       1       0       0       0
  3060 ;;Total ram usage:        1 bytes
  3061 ;; Hardware stack levels used:    1
  3062 ;; Hardware stack levels required when called:    2
  3063 ;; This function calls:
  3064 ;;		Nothing
  3065 ;; This function is called by:
  3066 ;;		_initPin
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069  0474                     _initPB4:	
  3070                           
  3071                           ; Regs used in _initPB4: [wreg]
  3072                           ;initPB4@bValue stored from wreg
  3073  0474  1283               	bcf	3,5	;RP0=0, select bank0
  3074  0475  00A0               	movwf	initPB4@bValue
  3075                           
  3076                           ;main.c: 164: if( bValue )
  3077  0476  0820               	movf	initPB4@bValue,w
  3078  0477  1903               	btfsc	3,2
  3079  0478  2C7C               	goto	l690
  3080                           
  3081                           ;main.c: 166: TRISB4 = 1;
  3082  0479  1683               	bsf	3,5	;RP0=1, select bank1
  3083  047A  1606               	bsf	6,4
  3084  047B  0008               	return
  3085  047C                     l690:	
  3086                           
  3087                           ;main.c: 170: else
  3088                           ;main.c: 172: TRISB4= 0;
  3089  047C  1683               	bsf	3,5	;RP0=1, select bank1
  3090  047D  1206               	bcf	6,4
  3091  047E  0008               	return
  3092  047F                     __end_of_initPB4:	
  3093  047F                     __ptext960:	
  3094 ;; =============== function _setPB5 ends ============
  3095                           
  3096                           
  3097 ;; *************** function _initPB5 *****************
  3098 ;; Defined at:
  3099 ;;		line 197 in file "D:\develop\190625\AK7030-OTP\main.c"
  3100 ;; Parameters:    Size  Location     Type
  3101 ;;  bValue          1    wreg     unsigned char 
  3102 ;; Auto vars:     Size  Location     Type
  3103 ;;  bValue          1    0[BANK0 ] unsigned char 
  3104 ;; Return value:  Size  Location     Type
  3105 ;;		None               void
  3106 ;; Registers used:
  3107 ;;		wreg
  3108 ;; Tracked objects:
  3109 ;;		On entry : 17F/20
  3110 ;;		On exit  : 17F/20
  3111 ;;		Unchanged: FFE80/0
  3112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3113 ;;      Params:         0       0       0       0       0
  3114 ;;      Locals:         0       1       0       0       0
  3115 ;;      Temps:          0       0       0       0       0
  3116 ;;      Totals:         0       1       0       0       0
  3117 ;;Total ram usage:        1 bytes
  3118 ;; Hardware stack levels used:    1
  3119 ;; Hardware stack levels required when called:    2
  3120 ;; This function calls:
  3121 ;;		Nothing
  3122 ;; This function is called by:
  3123 ;;		_initPin
  3124 ;; This function uses a non-reentrant model
  3125 ;;
  3126  047F                     _initPB5:	
  3127                           
  3128                           ; Regs used in _initPB5: [wreg]
  3129                           ;initPB5@bValue stored from wreg
  3130  047F  1283               	bcf	3,5	;RP0=0, select bank0
  3131  0480  00A0               	movwf	initPB5@bValue
  3132                           
  3133                           ;main.c: 198: if( bValue )
  3134  0481  0820               	movf	initPB5@bValue,w
  3135  0482  1903               	btfsc	3,2
  3136  0483  2C87               	goto	l700
  3137                           
  3138                           ;main.c: 200: TRISB5 = 1;
  3139  0484  1683               	bsf	3,5	;RP0=1, select bank1
  3140  0485  1686               	bsf	6,5
  3141  0486  0008               	return
  3142  0487                     l700:	
  3143                           
  3144                           ;main.c: 204: else
  3145                           ;main.c: 206: TRISB5= 0;
  3146  0487  1683               	bsf	3,5	;RP0=1, select bank1
  3147  0488  1286               	bcf	6,5
  3148  0489  0008               	return
  3149  048A                     __end_of_initPB5:	
  3150                           
  3151                           	psect	text939
  3152  0524                     __ptext939:	
  3153 ;; =============== function _Filter ends ============
  3154                           
  3155                           
  3156 ;; *************** function _isFinishedOneHoursTimer *****************
  3157 ;; Defined at:
  3158 ;;		line 507 in file "D:\develop\190625\AK7030-OTP\common.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;		None
  3161 ;; Auto vars:     Size  Location     Type
  3162 ;;		None
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  1    wreg      unsigned char 
  3165 ;; Registers used:
  3166 ;;		wreg, status,2, status,0
  3167 ;; Tracked objects:
  3168 ;;		On entry : 160/0
  3169 ;;		On exit  : 160/20
  3170 ;;		Unchanged: FFE9F/0
  3171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3172 ;;      Params:         0       0       0       0       0
  3173 ;;      Locals:         0       0       0       0       0
  3174 ;;      Temps:          0       0       0       0       0
  3175 ;;      Totals:         0       0       0       0       0
  3176 ;;Total ram usage:        0 bytes
  3177 ;; Hardware stack levels used:    1
  3178 ;; Hardware stack levels required when called:    2
  3179 ;; This function calls:
  3180 ;;		Nothing
  3181 ;; This function is called by:
  3182 ;;		_main
  3183 ;; This function uses a non-reentrant model
  3184 ;;
  3185  0524                     _isFinishedOneHoursTimer:	
  3186                           
  3187                           ;common.c: 508: if((uiOneHourTimer == 0) && bOneHourTimerStartFlag)
  3188                           
  3189                           ; Regs used in _isFinishedOneHoursTimer: [wreg+status,2+status,0]
  3190  0524  1683               	bsf	3,5	;RP0=1, select bank1
  3191  0525  0823               	movf	(_uiOneHourTimer+1)^(0+128),w
  3192  0526  0422               	iorwf	_uiOneHourTimer^(0+128),w
  3193  0527  1D03               	skipz
  3194  0528  3400               	retlw	0
  3195  0529  0835               	movf	_bOneHourTimerStartFlag^(0+128),w
  3196  052A  1903               	btfsc	3,2
  3197  052B  3400               	retlw	0
  3198  052C  3001               	movlw	1
  3199                           
  3200                           ;common.c: 509: {
  3201                           ;common.c: 510: bOneHourTimerStartFlag = 0;
  3202  052D  01B5               	clrf	_bOneHourTimerStartFlag^(0+128)
  3203                           
  3204                           ;common.c: 511: return 1;
  3205  052E  0008               	return
  3206  052F                     __end_of_isFinishedOneHoursTimer:	
  3207                           ;common.c: 513: else
  3208                           ;common.c: 514: return 0;
  3209                           
  3210                           
  3211                           	psect	text940
  3212  04D8                     __ptext940:	
  3213 ;; =============== function _isFinishedOneHoursTimer ends ============
  3214                           
  3215                           
  3216 ;; *************** function _startOneHoursTimer *****************
  3217 ;; Defined at:
  3218 ;;		line 424 in file "D:\develop\190625\AK7030-OTP\common.c"
  3219 ;; Parameters:    Size  Location     Type
  3220 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;		None
  3223 ;; Return value:  Size  Location     Type
  3224 ;;		None               void
  3225 ;; Registers used:
  3226 ;;		wreg, status,2, status,0
  3227 ;; Tracked objects:
  3228 ;;		On entry : 60/0
  3229 ;;		On exit  : 60/20
  3230 ;;		Unchanged: FFF9F/0
  3231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3232 ;;      Params:         0       2       0       0       0
  3233 ;;      Locals:         0       0       0       0       0
  3234 ;;      Temps:          0       0       0       0       0
  3235 ;;      Totals:         0       2       0       0       0
  3236 ;;Total ram usage:        2 bytes
  3237 ;; Hardware stack levels used:    1
  3238 ;; Hardware stack levels required when called:    2
  3239 ;; This function calls:
  3240 ;;		Nothing
  3241 ;; This function is called by:
  3242 ;;		_main
  3243 ;; This function uses a non-reentrant model
  3244 ;;
  3245  04D8                     _startOneHoursTimer:	
  3246                           
  3247                           ;common.c: 425: if(( 0 == uiOneHourTimer ) && ( 0 == bOneHourTimerStartFlag ))
  3248                           
  3249                           ; Regs used in _startOneHoursTimer: [wreg+status,2+status,0]
  3250  04D8  1683               	bsf	3,5	;RP0=1, select bank1
  3251  04D9  0823               	movf	(_uiOneHourTimer+1)^(0+128),w
  3252  04DA  0422               	iorwf	_uiOneHourTimer^(0+128),w
  3253  04DB  1D03               	skipz
  3254  04DC  0008               	return
  3255  04DD  08B5               	movf	_bOneHourTimerStartFlag^(0+128),f
  3256  04DE  1D03               	skipz
  3257  04DF  0008               	return
  3258                           
  3259                           ;common.c: 426: {
  3260                           ;common.c: 427: uiOneHourTimer = uiSetTime;
  3261  04E0  1283               	bcf	3,5	;RP0=0, select bank0
  3262  04E1  0821               	movf	startOneHoursTimer@uiSetTime+1,w
  3263  04E2  1683               	bsf	3,5	;RP0=1, select bank1
  3264  04E3  00A3               	movwf	(_uiOneHourTimer+1)^(0+128)
  3265  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  3266  04E5  0820               	movf	startOneHoursTimer@uiSetTime,w
  3267  04E6  1683               	bsf	3,5	;RP0=1, select bank1
  3268  04E7  00A2               	movwf	_uiOneHourTimer^(0+128)
  3269                           
  3270                           ;common.c: 428: bOneHourTimerStartFlag = 1;
  3271  04E8  01B5               	clrf	_bOneHourTimerStartFlag^(0+128)
  3272  04E9  0AB5               	incf	_bOneHourTimerStartFlag^(0+128),f
  3273  04EA  0008               	return
  3274  04EB                     __end_of_startOneHoursTimer:	
  3275                           
  3276                           	psect	text941
  3277  052F                     __ptext941:	
  3278 ;; =============== function _startOneHoursTimer ends ============
  3279                           
  3280                           
  3281 ;; *************** function _isFinishedThreeHoursTimer *****************
  3282 ;; Defined at:
  3283 ;;		line 494 in file "D:\develop\190625\AK7030-OTP\common.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;		None
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;		None
  3288 ;; Return value:  Size  Location     Type
  3289 ;;                  1    wreg      unsigned char 
  3290 ;; Registers used:
  3291 ;;		wreg, status,2, status,0
  3292 ;; Tracked objects:
  3293 ;;		On entry : 60/0
  3294 ;;		On exit  : 60/20
  3295 ;;		Unchanged: FFF9F/0
  3296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3297 ;;      Params:         0       0       0       0       0
  3298 ;;      Locals:         0       0       0       0       0
  3299 ;;      Temps:          0       0       0       0       0
  3300 ;;      Totals:         0       0       0       0       0
  3301 ;;Total ram usage:        0 bytes
  3302 ;; Hardware stack levels used:    1
  3303 ;; Hardware stack levels required when called:    2
  3304 ;; This function calls:
  3305 ;;		Nothing
  3306 ;; This function is called by:
  3307 ;;		_main
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310  052F                     _isFinishedThreeHoursTimer:	
  3311                           
  3312                           ;common.c: 495: if((uiSmallTimer == 0) && bSmallTimerStartFlag)
  3313                           
  3314                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  3315  052F  1683               	bsf	3,5	;RP0=1, select bank1
  3316  0530  0825               	movf	(_uiSmallTimer+1)^(0+128),w
  3317  0531  0424               	iorwf	_uiSmallTimer^(0+128),w
  3318  0532  1D03               	skipz
  3319  0533  3400               	retlw	0
  3320  0534  0836               	movf	_bSmallTimerStartFlag^(0+128),w
  3321  0535  1903               	btfsc	3,2
  3322  0536  3400               	retlw	0
  3323  0537  3001               	movlw	1
  3324                           
  3325                           ;common.c: 496: {
  3326                           ;common.c: 497: bSmallTimerStartFlag = 0;
  3327  0538  01B6               	clrf	_bSmallTimerStartFlag^(0+128)
  3328                           
  3329                           ;common.c: 498: return 1;
  3330  0539  0008               	return
  3331  053A                     __end_of_isFinishedThreeHoursTimer:	
  3332                           ;common.c: 500: else
  3333                           ;common.c: 501: return 0;
  3334                           
  3335                           
  3336                           	psect	text942
  3337  04EB                     __ptext942:	
  3338 ;; =============== function _isFinishedThreeHoursTimer ends ============
  3339                           
  3340                           
  3341 ;; *************** function _startThreeHoursTimer *****************
  3342 ;; Defined at:
  3343 ;;		line 411 in file "D:\develop\190625\AK7030-OTP\common.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;		None
  3348 ;; Return value:  Size  Location     Type
  3349 ;;		None               void
  3350 ;; Registers used:
  3351 ;;		wreg, status,2, status,0
  3352 ;; Tracked objects:
  3353 ;;		On entry : 60/0
  3354 ;;		On exit  : 60/20
  3355 ;;		Unchanged: FFF9F/0
  3356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3357 ;;      Params:         0       2       0       0       0
  3358 ;;      Locals:         0       0       0       0       0
  3359 ;;      Temps:          0       0       0       0       0
  3360 ;;      Totals:         0       2       0       0       0
  3361 ;;Total ram usage:        2 bytes
  3362 ;; Hardware stack levels used:    1
  3363 ;; Hardware stack levels required when called:    2
  3364 ;; This function calls:
  3365 ;;		Nothing
  3366 ;; This function is called by:
  3367 ;;		_main
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370  04EB                     _startThreeHoursTimer:	
  3371                           
  3372                           ;common.c: 412: if(( 0 == uiSmallTimer ) && ( 0 == bSmallTimerStartFlag ))
  3373                           
  3374                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  3375  04EB  1683               	bsf	3,5	;RP0=1, select bank1
  3376  04EC  0825               	movf	(_uiSmallTimer+1)^(0+128),w
  3377  04ED  0424               	iorwf	_uiSmallTimer^(0+128),w
  3378  04EE  1D03               	skipz
  3379  04EF  0008               	return
  3380  04F0  08B6               	movf	_bSmallTimerStartFlag^(0+128),f
  3381  04F1  1D03               	skipz
  3382  04F2  0008               	return
  3383                           
  3384                           ;common.c: 413: {
  3385                           ;common.c: 414: uiSmallTimer = uiSetTime;
  3386  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  3387  04F4  0821               	movf	startThreeHoursTimer@uiSetTime+1,w
  3388  04F5  1683               	bsf	3,5	;RP0=1, select bank1
  3389  04F6  00A5               	movwf	(_uiSmallTimer+1)^(0+128)
  3390  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  3391  04F8  0820               	movf	startThreeHoursTimer@uiSetTime,w
  3392  04F9  1683               	bsf	3,5	;RP0=1, select bank1
  3393  04FA  00A4               	movwf	_uiSmallTimer^(0+128)
  3394                           
  3395                           ;common.c: 415: bSmallTimerStartFlag = 1;
  3396  04FB  01B6               	clrf	_bSmallTimerStartFlag^(0+128)
  3397  04FC  0AB6               	incf	_bSmallTimerStartFlag^(0+128),f
  3398  04FD  0008               	return
  3399  04FE                     __end_of_startThreeHoursTimer:	
  3400                           
  3401                           	psect	text943
  3402  053A                     __ptext943:	
  3403 ;; =============== function _startThreeHoursTimer ends ============
  3404                           
  3405                           
  3406 ;; *************** function _isFinishedTwelveHoursTimer *****************
  3407 ;; Defined at:
  3408 ;;		line 483 in file "D:\develop\190625\AK7030-OTP\common.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;		None
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;		None
  3413 ;; Return value:  Size  Location     Type
  3414 ;;                  1    wreg      unsigned char 
  3415 ;; Registers used:
  3416 ;;		wreg, status,2, status,0
  3417 ;; Tracked objects:
  3418 ;;		On entry : 60/0
  3419 ;;		On exit  : 60/20
  3420 ;;		Unchanged: FFF9F/0
  3421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3422 ;;      Params:         0       0       0       0       0
  3423 ;;      Locals:         0       0       0       0       0
  3424 ;;      Temps:          0       0       0       0       0
  3425 ;;      Totals:         0       0       0       0       0
  3426 ;;Total ram usage:        0 bytes
  3427 ;; Hardware stack levels used:    1
  3428 ;; Hardware stack levels required when called:    2
  3429 ;; This function calls:
  3430 ;;		Nothing
  3431 ;; This function is called by:
  3432 ;;		_main
  3433 ;; This function uses a non-reentrant model
  3434 ;;
  3435  053A                     _isFinishedTwelveHoursTimer:	
  3436                           
  3437                           ;common.c: 484: if(( uiBigTimer == 0 ) && bBigTimerStartFlag )
  3438                           
  3439                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  3440  053A  1683               	bsf	3,5	;RP0=1, select bank1
  3441  053B  0821               	movf	(_uiBigTimer+1)^(0+128),w
  3442  053C  0420               	iorwf	_uiBigTimer^(0+128),w
  3443  053D  1D03               	skipz
  3444  053E  3400               	retlw	0
  3445  053F  0834               	movf	_bBigTimerStartFlag^(0+128),w
  3446  0540  1903               	btfsc	3,2
  3447  0541  3400               	retlw	0
  3448  0542  3001               	movlw	1
  3449                           
  3450                           ;common.c: 485: {
  3451                           ;common.c: 486: bBigTimerStartFlag = 0;
  3452  0543  01B4               	clrf	_bBigTimerStartFlag^(0+128)
  3453                           
  3454                           ;common.c: 487: return 1;
  3455  0544  0008               	return
  3456  0545                     __end_of_isFinishedTwelveHoursTimer:	
  3457                           ;common.c: 489: else
  3458                           ;common.c: 490: return 0;
  3459                           
  3460                           
  3461                           	psect	text944
  3462  04FE                     __ptext944:	
  3463 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  3464                           
  3465                           
  3466 ;; *************** function _startTwelveHourTimer *****************
  3467 ;; Defined at:
  3468 ;;		line 363 in file "D:\develop\190625\AK7030-OTP\common.c"
  3469 ;; Parameters:    Size  Location     Type
  3470 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  3471 ;; Auto vars:     Size  Location     Type
  3472 ;;		None
  3473 ;; Return value:  Size  Location     Type
  3474 ;;		None               void
  3475 ;; Registers used:
  3476 ;;		wreg, status,2, status,0
  3477 ;; Tracked objects:
  3478 ;;		On entry : 160/0
  3479 ;;		On exit  : 160/20
  3480 ;;		Unchanged: FFE9F/0
  3481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3482 ;;      Params:         0       2       0       0       0
  3483 ;;      Locals:         0       0       0       0       0
  3484 ;;      Temps:          0       0       0       0       0
  3485 ;;      Totals:         0       2       0       0       0
  3486 ;;Total ram usage:        2 bytes
  3487 ;; Hardware stack levels used:    1
  3488 ;; Hardware stack levels required when called:    2
  3489 ;; This function calls:
  3490 ;;		Nothing
  3491 ;; This function is called by:
  3492 ;;		_main
  3493 ;; This function uses a non-reentrant model
  3494 ;;
  3495  04FE                     _startTwelveHourTimer:	
  3496                           
  3497                           ;common.c: 364: if((0 == uiBigTimer) && ( 0 == bBigTimerStartFlag))
  3498                           
  3499                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  3500  04FE  1683               	bsf	3,5	;RP0=1, select bank1
  3501  04FF  0821               	movf	(_uiBigTimer+1)^(0+128),w
  3502  0500  0420               	iorwf	_uiBigTimer^(0+128),w
  3503  0501  1D03               	skipz
  3504  0502  0008               	return
  3505  0503  08B4               	movf	_bBigTimerStartFlag^(0+128),f
  3506  0504  1D03               	skipz
  3507  0505  0008               	return
  3508                           
  3509                           ;common.c: 365: {
  3510                           ;common.c: 366: uiBigTimer = uiSetTime;
  3511  0506  1283               	bcf	3,5	;RP0=0, select bank0
  3512  0507  0821               	movf	startTwelveHourTimer@uiSetTime+1,w
  3513  0508  1683               	bsf	3,5	;RP0=1, select bank1
  3514  0509  00A1               	movwf	(_uiBigTimer+1)^(0+128)
  3515  050A  1283               	bcf	3,5	;RP0=0, select bank0
  3516  050B  0820               	movf	startTwelveHourTimer@uiSetTime,w
  3517  050C  1683               	bsf	3,5	;RP0=1, select bank1
  3518  050D  00A0               	movwf	_uiBigTimer^(0+128)
  3519                           
  3520                           ;common.c: 367: bBigTimerStartFlag = 1;
  3521  050E  01B4               	clrf	_bBigTimerStartFlag^(0+128)
  3522  050F  0AB4               	incf	_bBigTimerStartFlag^(0+128),f
  3523  0510  0008               	return
  3524  0511                     __end_of_startTwelveHourTimer:	
  3525                           
  3526                           	psect	text945
  3527  0570                     __ptext945:	
  3528 ;; =============== function _startTwelveHourTimer ends ============
  3529                           
  3530                           
  3531 ;; *************** function _clearTwentyMinTimer *****************
  3532 ;; Defined at:
  3533 ;;		line 404 in file "D:\develop\190625\AK7030-OTP\common.c"
  3534 ;; Parameters:    Size  Location     Type
  3535 ;;		None
  3536 ;; Auto vars:     Size  Location     Type
  3537 ;;		None
  3538 ;; Return value:  Size  Location     Type
  3539 ;;		None               void
  3540 ;; Registers used:
  3541 ;;		status,2
  3542 ;; Tracked objects:
  3543 ;;		On entry : 160/0
  3544 ;;		On exit  : 160/20
  3545 ;;		Unchanged: FFE9F/0
  3546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3547 ;;      Params:         0       0       0       0       0
  3548 ;;      Locals:         0       0       0       0       0
  3549 ;;      Temps:          0       0       0       0       0
  3550 ;;      Totals:         0       0       0       0       0
  3551 ;;Total ram usage:        0 bytes
  3552 ;; Hardware stack levels used:    1
  3553 ;; Hardware stack levels required when called:    2
  3554 ;; This function calls:
  3555 ;;		Nothing
  3556 ;; This function is called by:
  3557 ;;		_main
  3558 ;; This function uses a non-reentrant model
  3559 ;;
  3560  0570                     _clearTwentyMinTimer:	
  3561                           
  3562                           ;common.c: 405: uiTwentyMinTimer = 0;
  3563                           
  3564                           ; Regs used in _clearTwentyMinTimer: [status,2]
  3565  0570  1683               	bsf	3,5	;RP0=1, select bank1
  3566  0571  01A6               	clrf	_uiTwentyMinTimer^(0+128)
  3567  0572  01A7               	clrf	(_uiTwentyMinTimer+1)^(0+128)
  3568                           
  3569                           ;common.c: 406: bTwentyMinStartFlag = 0;
  3570  0573  01B7               	clrf	_bTwentyMinStartFlag^(0+128)
  3571  0574  0008               	return
  3572  0575                     __end_of_clearTwentyMinTimer:	
  3573                           
  3574                           	psect	text946
  3575  0545                     __ptext946:	
  3576 ;; =============== function _clearTwentyMinTimer ends ============
  3577                           
  3578                           
  3579 ;; *************** function _isFinishedTwentyMinTimer *****************
  3580 ;; Defined at:
  3581 ;;		line 459 in file "D:\develop\190625\AK7030-OTP\common.c"
  3582 ;; Parameters:    Size  Location     Type
  3583 ;;		None
  3584 ;; Auto vars:     Size  Location     Type
  3585 ;;		None
  3586 ;; Return value:  Size  Location     Type
  3587 ;;                  1    wreg      unsigned char 
  3588 ;; Registers used:
  3589 ;;		wreg, status,2, status,0
  3590 ;; Tracked objects:
  3591 ;;		On entry : 60/0
  3592 ;;		On exit  : 60/20
  3593 ;;		Unchanged: FFF9F/0
  3594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3595 ;;      Params:         0       0       0       0       0
  3596 ;;      Locals:         0       0       0       0       0
  3597 ;;      Temps:          0       0       0       0       0
  3598 ;;      Totals:         0       0       0       0       0
  3599 ;;Total ram usage:        0 bytes
  3600 ;; Hardware stack levels used:    1
  3601 ;; Hardware stack levels required when called:    2
  3602 ;; This function calls:
  3603 ;;		Nothing
  3604 ;; This function is called by:
  3605 ;;		_main
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608  0545                     _isFinishedTwentyMinTimer:	
  3609                           
  3610                           ;common.c: 460: if(( 0 == uiTwentyMinTimer ) && bTwentyMinStartFlag )
  3611                           
  3612                           ; Regs used in _isFinishedTwentyMinTimer: [wreg+status,2+status,0]
  3613  0545  1683               	bsf	3,5	;RP0=1, select bank1
  3614  0546  0827               	movf	(_uiTwentyMinTimer+1)^(0+128),w
  3615  0547  0426               	iorwf	_uiTwentyMinTimer^(0+128),w
  3616  0548  1D03               	skipz
  3617  0549  3400               	retlw	0
  3618  054A  0837               	movf	_bTwentyMinStartFlag^(0+128),w
  3619  054B  1903               	btfsc	3,2
  3620  054C  3400               	retlw	0
  3621  054D  3001               	movlw	1
  3622                           
  3623                           ;common.c: 461: {
  3624                           ;common.c: 462: bTwentyMinStartFlag = 0;
  3625  054E  01B7               	clrf	_bTwentyMinStartFlag^(0+128)
  3626                           
  3627                           ;common.c: 463: return 1;
  3628  054F  0008               	return
  3629  0550                     __end_of_isFinishedTwentyMinTimer:	
  3630                           ;common.c: 465: else
  3631                           ;common.c: 466: return 0;
  3632                           
  3633                           
  3634                           	psect	text947
  3635  0586                     __ptext947:	
  3636 ;; =============== function _isFinishedTwentyMinTimer ends ============
  3637                           
  3638                           
  3639 ;; *************** function _clrSampeTime *****************
  3640 ;; Defined at:
  3641 ;;		line 529 in file "D:\develop\190625\AK7030-OTP\common.c"
  3642 ;; Parameters:    Size  Location     Type
  3643 ;;		None
  3644 ;; Auto vars:     Size  Location     Type
  3645 ;;		None
  3646 ;; Return value:  Size  Location     Type
  3647 ;;		None               void
  3648 ;; Registers used:
  3649 ;;		status,2
  3650 ;; Tracked objects:
  3651 ;;		On entry : 60/20
  3652 ;;		On exit  : 60/20
  3653 ;;		Unchanged: FFF9F/0
  3654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3655 ;;      Params:         0       0       0       0       0
  3656 ;;      Locals:         0       0       0       0       0
  3657 ;;      Temps:          0       0       0       0       0
  3658 ;;      Totals:         0       0       0       0       0
  3659 ;;Total ram usage:        0 bytes
  3660 ;; Hardware stack levels used:    1
  3661 ;; Hardware stack levels required when called:    2
  3662 ;; This function calls:
  3663 ;;		Nothing
  3664 ;; This function is called by:
  3665 ;;		_main
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668  0586                     _clrSampeTime:	
  3669                           
  3670                           ;common.c: 530: timer.timer10msStopWatch = 0;
  3671                           
  3672                           ; Regs used in _clrSampeTime: [status,2]
  3673  0586  01B9               	clrf	_timer^(0+128)
  3674  0587  0008               	return
  3675  0588                     __end_of_clrSampeTime:	
  3676                           
  3677                           	psect	text948
  3678  056A                     __ptext948:	
  3679 ;; =============== function _clrSampeTime ends ============
  3680                           
  3681                           
  3682 ;; *************** function _isPermitSampleTime *****************
  3683 ;; Defined at:
  3684 ;;		line 519 in file "D:\develop\190625\AK7030-OTP\common.c"
  3685 ;; Parameters:    Size  Location     Type
  3686 ;;		None
  3687 ;; Auto vars:     Size  Location     Type
  3688 ;;		None
  3689 ;; Return value:  Size  Location     Type
  3690 ;;                  1    wreg      unsigned char 
  3691 ;; Registers used:
  3692 ;;		wreg
  3693 ;; Tracked objects:
  3694 ;;		On entry : 40/20
  3695 ;;		On exit  : 60/20
  3696 ;;		Unchanged: FFF9F/0
  3697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3698 ;;      Params:         0       0       0       0       0
  3699 ;;      Locals:         0       0       0       0       0
  3700 ;;      Temps:          0       0       0       0       0
  3701 ;;      Totals:         0       0       0       0       0
  3702 ;;Total ram usage:        0 bytes
  3703 ;; Hardware stack levels used:    1
  3704 ;; Hardware stack levels required when called:    2
  3705 ;; This function calls:
  3706 ;;		Nothing
  3707 ;; This function is called by:
  3708 ;;		_main
  3709 ;; This function uses a non-reentrant model
  3710 ;;
  3711  056A                     _isPermitSampleTime:	
  3712                           
  3713                           ;common.c: 520: if(timer.timer10msStopWatch >= 10)
  3714                           
  3715                           ; Regs used in _isPermitSampleTime: [wreg]
  3716  056A  300A               	movlw	10
  3717  056B  1683               	bsf	3,5	;RP0=1, select bank1
  3718  056C  0239               	subwf	_timer^(0+128),w
  3719  056D  1803               	btfsc	3,0
  3720                           
  3721                           ;common.c: 521: {
  3722                           ;common.c: 522: return 1;
  3723  056E  3401               	retlw	1
  3724                           
  3725                           ;common.c: 524: else
  3726                           ;common.c: 525: return 0;
  3727  056F  3400               	retlw	0
  3728  0570                     __end_of_isPermitSampleTime:	
  3729                           
  3730                           	psect	text949
  3731  0511                     __ptext949:	
  3732 ;; =============== function _isPermitSampleTime ends ============
  3733                           
  3734                           
  3735 ;; *************** function _startTwentyMinTimer *****************
  3736 ;; Defined at:
  3737 ;;		line 449 in file "D:\develop\190625\AK7030-OTP\common.c"
  3738 ;; Parameters:    Size  Location     Type
  3739 ;;  uiSetValue      2    0[BANK0 ] unsigned int 
  3740 ;; Auto vars:     Size  Location     Type
  3741 ;;		None
  3742 ;; Return value:  Size  Location     Type
  3743 ;;		None               void
  3744 ;; Registers used:
  3745 ;;		wreg, status,2, status,0
  3746 ;; Tracked objects:
  3747 ;;		On entry : 17F/0
  3748 ;;		On exit  : 17F/20
  3749 ;;		Unchanged: FFE80/0
  3750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3751 ;;      Params:         0       2       0       0       0
  3752 ;;      Locals:         0       0       0       0       0
  3753 ;;      Temps:          0       0       0       0       0
  3754 ;;      Totals:         0       2       0       0       0
  3755 ;;Total ram usage:        2 bytes
  3756 ;; Hardware stack levels used:    1
  3757 ;; Hardware stack levels required when called:    2
  3758 ;; This function calls:
  3759 ;;		Nothing
  3760 ;; This function is called by:
  3761 ;;		_main
  3762 ;; This function uses a non-reentrant model
  3763 ;;
  3764  0511                     _startTwentyMinTimer:	
  3765                           
  3766                           ;common.c: 450: if(( 0 == uiTwentyMinTimer) && ( 0 == bTwentyMinStartFlag))
  3767                           
  3768                           ; Regs used in _startTwentyMinTimer: [wreg+status,2+status,0]
  3769  0511  1683               	bsf	3,5	;RP0=1, select bank1
  3770  0512  0827               	movf	(_uiTwentyMinTimer+1)^(0+128),w
  3771  0513  0426               	iorwf	_uiTwentyMinTimer^(0+128),w
  3772  0514  1D03               	skipz
  3773  0515  0008               	return
  3774  0516  08B7               	movf	_bTwentyMinStartFlag^(0+128),f
  3775  0517  1D03               	skipz
  3776  0518  0008               	return
  3777                           
  3778                           ;common.c: 451: {
  3779                           ;common.c: 452: uiTwentyMinTimer = uiSetValue;
  3780  0519  1283               	bcf	3,5	;RP0=0, select bank0
  3781  051A  0821               	movf	startTwentyMinTimer@uiSetValue+1,w
  3782  051B  1683               	bsf	3,5	;RP0=1, select bank1
  3783  051C  00A7               	movwf	(_uiTwentyMinTimer+1)^(0+128)
  3784  051D  1283               	bcf	3,5	;RP0=0, select bank0
  3785  051E  0820               	movf	startTwentyMinTimer@uiSetValue,w
  3786  051F  1683               	bsf	3,5	;RP0=1, select bank1
  3787  0520  00A6               	movwf	_uiTwentyMinTimer^(0+128)
  3788                           
  3789                           ;common.c: 453: bTwentyMinStartFlag = 1;
  3790  0521  01B7               	clrf	_bTwentyMinStartFlag^(0+128)
  3791  0522  0AB7               	incf	_bTwentyMinStartFlag^(0+128),f
  3792  0523  0008               	return
  3793  0524                     __end_of_startTwentyMinTimer:	
  3794                           
  3795                           	psect	text952
  3796  0583                     __ptext952:	
  3797 ;; =============== function _adc_test_init ends ============
  3798                           
  3799                           
  3800 ;; *************** function _timer1_interrupt_config *****************
  3801 ;; Defined at:
  3802 ;;		line 201 in file "D:\develop\190625\AK7030-OTP\common.c"
  3803 ;; Parameters:    Size  Location     Type
  3804 ;;		None
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;		None
  3807 ;; Return value:  Size  Location     Type
  3808 ;;		None               void
  3809 ;; Registers used:
  3810 ;;		None
  3811 ;; Tracked objects:
  3812 ;;		On entry : 17F/20
  3813 ;;		On exit  : 17F/20
  3814 ;;		Unchanged: FFE80/0
  3815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3816 ;;      Params:         0       0       0       0       0
  3817 ;;      Locals:         0       0       0       0       0
  3818 ;;      Temps:          0       0       0       0       0
  3819 ;;      Totals:         0       0       0       0       0
  3820 ;;Total ram usage:        0 bytes
  3821 ;; Hardware stack levels used:    1
  3822 ;; Hardware stack levels required when called:    2
  3823 ;; This function calls:
  3824 ;;		Nothing
  3825 ;; This function is called by:
  3826 ;;		_main
  3827 ;; This function uses a non-reentrant model
  3828 ;;
  3829  0583                     _timer1_interrupt_config:	
  3830                           
  3831                           ;common.c: 202: GIE = 1;
  3832                           
  3833                           ; Regs used in _timer1_interrupt_config: []
  3834  0583  178B               	bsf	11,7
  3835                           
  3836                           ;common.c: 203: PEIE = 1;
  3837  0584  170B               	bsf	11,6
  3838  0585  0008               	return
  3839  0586                     __end_of_timer1_interrupt_config:	
  3840                           
  3841                           	psect	text953
  3842  0550                     __ptext953:	
  3843 ;; =============== function _timer1_interrupt_config ends ============
  3844                           
  3845                           
  3846 ;; *************** function _timer1_config *****************
  3847 ;; Defined at:
  3848 ;;		line 189 in file "D:\develop\190625\AK7030-OTP\common.c"
  3849 ;; Parameters:    Size  Location     Type
  3850 ;;		None
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;		None
  3853 ;; Return value:  Size  Location     Type
  3854 ;;		None               void
  3855 ;; Registers used:
  3856 ;;		wreg
  3857 ;; Tracked objects:
  3858 ;;		On entry : 17F/40
  3859 ;;		On exit  : 17F/20
  3860 ;;		Unchanged: FFE80/0
  3861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3862 ;;      Params:         0       0       0       0       0
  3863 ;;      Locals:         0       0       0       0       0
  3864 ;;      Temps:          0       0       0       0       0
  3865 ;;      Totals:         0       0       0       0       0
  3866 ;;Total ram usage:        0 bytes
  3867 ;; Hardware stack levels used:    1
  3868 ;; Hardware stack levels required when called:    2
  3869 ;; This function calls:
  3870 ;;		Nothing
  3871 ;; This function is called by:
  3872 ;;		_main
  3873 ;; This function uses a non-reentrant model
  3874 ;;
  3875  0550                     _timer1_config:	
  3876                           
  3877                           ;common.c: 191: TMR1H=0xCF;
  3878                           
  3879                           ; Regs used in _timer1_config: [wreg]
  3880  0550  30CF               	movlw	207
  3881  0551  1303               	bcf	3,6	;RP1=0, select bank0
  3882  0552  008F               	movwf	15	;volatile
  3883                           
  3884                           ;common.c: 192: TMR1L=0x2C;
  3885  0553  302C               	movlw	44
  3886  0554  008E               	movwf	14	;volatile
  3887                           
  3888                           ;common.c: 193: T1CON=0xE1;
  3889  0555  30E1               	movlw	225
  3890  0556  0090               	movwf	16	;volatile
  3891                           
  3892                           ;common.c: 194: TMR1IE=1;
  3893  0557  1683               	bsf	3,5	;RP0=1, select bank1
  3894  0558  140C               	bsf	12,0
  3895  0559  0008               	return
  3896  055A                     __end_of_timer1_config:	
  3897                           
  3898                           	psect	text954
  3899  0562                     __ptext954:	
  3900 ;; =============== function _timer1_config ends ============
  3901                           
  3902                           
  3903 ;; *************** function _clock_config *****************
  3904 ;; Defined at:
  3905 ;;		line 181 in file "D:\develop\190625\AK7030-OTP\common.c"
  3906 ;; Parameters:    Size  Location     Type
  3907 ;;		None
  3908 ;; Auto vars:     Size  Location     Type
  3909 ;;		None
  3910 ;; Return value:  Size  Location     Type
  3911 ;;		None               void
  3912 ;; Registers used:
  3913 ;;		wreg, status,2
  3914 ;; Tracked objects:
  3915 ;;		On entry : 17F/20
  3916 ;;		On exit  : 17F/40
  3917 ;;		Unchanged: FFE80/0
  3918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3919 ;;      Params:         0       0       0       0       0
  3920 ;;      Locals:         0       0       0       0       0
  3921 ;;      Temps:          0       0       0       0       0
  3922 ;;      Totals:         0       0       0       0       0
  3923 ;;Total ram usage:        0 bytes
  3924 ;; Hardware stack levels used:    1
  3925 ;; Hardware stack levels required when called:    2
  3926 ;; This function calls:
  3927 ;;		Nothing
  3928 ;; This function is called by:
  3929 ;;		_main
  3930 ;; This function uses a non-reentrant model
  3931 ;;
  3932  0562                     _clock_config:	
  3933                           
  3934                           ;common.c: 183: CLKPR = 0x80;
  3935                           
  3936                           ; Regs used in _clock_config: [wreg+status,2]
  3937  0562  3080               	movlw	128
  3938  0563  1283               	bcf	3,5	;RP0=0, select bank2
  3939  0564  1703               	bsf	3,6	;RP1=1, select bank2
  3940  0565  0088               	movwf	8	;volatile
  3941                           
  3942                           ;common.c: 184: CLKPR = 0x00;
  3943  0566  0188               	clrf	8	;volatile
  3944  0567                     l1534:	
  3945                           ;common.c: 185: while(CLKPCE);
  3946                           
  3947  0567  1F88               	btfss	8,7
  3948  0568  0008               	return
  3949  0569  2D67               	goto	l1534
  3950  056A                     __end_of_clock_config:	
  3951                           
  3952                           	psect	text955
  3953  0588                     __ptext955:	
  3954 ;; =============== function _clock_config ends ============
  3955                           
  3956                           
  3957 ;; *************** function _reset *****************
  3958 ;; Defined at:
  3959 ;;		line 306 in file "D:\develop\190625\AK7030-OTP\main.c"
  3960 ;; Parameters:    Size  Location     Type
  3961 ;;		None
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;		None
  3964 ;; Return value:  Size  Location     Type
  3965 ;;		None               void
  3966 ;; Registers used:
  3967 ;;		None
  3968 ;; Tracked objects:
  3969 ;;		On entry : 40/20
  3970 ;;		On exit  : 40/20
  3971 ;;		Unchanged: FFFFFFBF/0
  3972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3973 ;;      Params:         0       0       0       0       0
  3974 ;;      Locals:         0       0       0       0       0
  3975 ;;      Temps:          0       0       0       0       0
  3976 ;;      Totals:         0       0       0       0       0
  3977 ;;Total ram usage:        0 bytes
  3978 ;; Hardware stack levels used:    1
  3979 ;; Hardware stack levels required when called:    2
  3980 ;; This function calls:
  3981 ;;		Nothing
  3982 ;; This function is called by:
  3983 ;;		_main
  3984 ;; This function uses a non-reentrant model
  3985 ;;
  3986  0588                     _reset:	
  3987  0588                     l725:	
  3988                           ; Regs used in _reset: []
  3989                           ;main.c: 308: while(1);
  3990                           
  3991  0588  2D88               	goto	l725
  3992                           
  3993                           	psect	text956
  3994  057F                     __ptext956:	
  3995  057F                     __end_of_reset:	
  3996                           
  3997 ;; =============== function _reset ends ============
  3998 ;; *************** function _selectAdChannel *****************
  3999 ;; Defined at:
  4000 ;;		line 295 in file "D:\develop\190625\AK7030-OTP\main.c"
  4001 ;; Parameters:    Size  Location     Type
  4002 ;;		None
  4003 ;; Auto vars:     Size  Location     Type
  4004 ;;		None
  4005 ;; Return value:  Size  Location     Type
  4006 ;;		None               void
  4007 ;; Registers used:
  4008 ;;		None
  4009 ;; Tracked objects:
  4010 ;;		On entry : 17F/0
  4011 ;;		On exit  : 17F/20
  4012 ;;		Unchanged: FFE80/0
  4013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4014 ;;      Params:         0       0       0       0       0
  4015 ;;      Locals:         0       0       0       0       0
  4016 ;;      Temps:          0       0       0       0       0
  4017 ;;      Totals:         0       0       0       0       0
  4018 ;;Total ram usage:        0 bytes
  4019 ;; Hardware stack levels used:    1
  4020 ;; Hardware stack levels required when called:    2
  4021 ;; This function calls:
  4022 ;;		Nothing
  4023 ;; This function is called by:
  4024 ;;		_main
  4025 ;; This function uses a non-reentrant model
  4026 ;;
  4027  057F                     _selectAdChannel:	
  4028                           
  4029                           ;main.c: 297: TRISB0 = 1;
  4030                           
  4031                           ; Regs used in _selectAdChannel: []
  4032  057F  1683               	bsf	3,5	;RP0=1, select bank1
  4033  0580  1406               	bsf	6,0
  4034                           
  4035                           ;main.c: 298: TRISB1 = 1;
  4036  0581  1486               	bsf	6,1
  4037  0582  0008               	return
  4038  0583                     __end_of_selectAdChannel:	
  4039                           
  4040                           	psect	text957
  4041  04C3                     __ptext957:	
  4042 ;; =============== function _selectAdChannel ends ============
  4043                           
  4044                           
  4045 ;; *************** function _pwm_start *****************
  4046 ;; Defined at:
  4047 ;;		line 243 in file "D:\develop\190625\AK7030-OTP\main.c"
  4048 ;; Parameters:    Size  Location     Type
  4049 ;;  ucPulseWidth    1    wreg     unsigned char 
  4050 ;; Auto vars:     Size  Location     Type
  4051 ;;  ucPulseWidth    1    0[BANK0 ] unsigned char 
  4052 ;; Return value:  Size  Location     Type
  4053 ;;		None               void
  4054 ;; Registers used:
  4055 ;;		wreg, status,2, status,0
  4056 ;; Tracked objects:
  4057 ;;		On entry : 60/0
  4058 ;;		On exit  : 60/0
  4059 ;;		Unchanged: FFF9F/0
  4060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4061 ;;      Params:         0       0       0       0       0
  4062 ;;      Locals:         0       1       0       0       0
  4063 ;;      Temps:          0       0       0       0       0
  4064 ;;      Totals:         0       1       0       0       0
  4065 ;;Total ram usage:        1 bytes
  4066 ;; Hardware stack levels used:    1
  4067 ;; Hardware stack levels required when called:    2
  4068 ;; This function calls:
  4069 ;;		Nothing
  4070 ;; This function is called by:
  4071 ;;		_main
  4072 ;; This function uses a non-reentrant model
  4073 ;;
  4074  04C3                     _pwm_start:	
  4075                           
  4076                           ; Regs used in _pwm_start: [wreg+status,2+status,0]
  4077                           ;pwm_start@ucPulseWidth stored from wreg
  4078  04C3  00A0               	movwf	pwm_start@ucPulseWidth
  4079                           
  4080                           ;main.c: 245: CCP1CON&= 0xf0;
  4081  04C4  30F0               	movlw	240
  4082  04C5  0597               	andwf	23,f	;volatile
  4083                           
  4084                           ;main.c: 247: T2CON=0x04;
  4085  04C6  3004               	movlw	4
  4086  04C7  0092               	movwf	18	;volatile
  4087                           
  4088                           ;main.c: 248: PR2 = 99;
  4089  04C8  3063               	movlw	99
  4090  04C9  1683               	bsf	3,5	;RP0=1, select bank1
  4091  04CA  0092               	movwf	18	;volatile
  4092                           
  4093                           ;main.c: 249: CCPR1L = ucPulseWidth;
  4094  04CB  1283               	bcf	3,5	;RP0=0, select bank0
  4095  04CC  0820               	movf	pwm_start@ucPulseWidth,w
  4096  04CD  0095               	movwf	21	;volatile
  4097                           
  4098                           ;main.c: 250: CCP1CON=0x00;
  4099  04CE  0197               	clrf	23	;volatile
  4100                           
  4101                           ;main.c: 252: TRISB2=0;
  4102  04CF  1683               	bsf	3,5	;RP0=1, select bank1
  4103  04D0  300C               	movlw	12
  4104  04D1  1106               	bcf	6,2
  4105                           
  4106                           ;main.c: 253: PBOD2 = 0;
  4107  04D2  1703               	bsf	3,6	;RP1=1, select bank3
  4108  04D3  1108               	bcf	8,2
  4109                           
  4110                           ;main.c: 255: CCP1CON|= 0x0c;
  4111  04D4  1283               	bcf	3,5	;RP0=0, select bank0
  4112  04D5  1303               	bcf	3,6	;RP1=0, select bank0
  4113  04D6  0497               	iorwf	23,f	;volatile
  4114  04D7  0008               	return
  4115  04D8                     __end_of_pwm_start:	
  4116                           
  4117                           	psect	text965
  4118  0575                     __ptext965:	
  4119 ;; =============== function _initPB3 ends ============
  4120                           
  4121                           
  4122 ;; *************** function _clearThreeHoursTimer *****************
  4123 ;; Defined at:
  4124 ;;		line 384 in file "D:\develop\190625\AK7030-OTP\common.c"
  4125 ;; Parameters:    Size  Location     Type
  4126 ;;		None
  4127 ;; Auto vars:     Size  Location     Type
  4128 ;;		None
  4129 ;; Return value:  Size  Location     Type
  4130 ;;		None               void
  4131 ;; Registers used:
  4132 ;;		status,2
  4133 ;; Tracked objects:
  4134 ;;		On entry : 60/0
  4135 ;;		On exit  : 60/20
  4136 ;;		Unchanged: FFF9F/0
  4137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4138 ;;      Params:         0       0       0       0       0
  4139 ;;      Locals:         0       0       0       0       0
  4140 ;;      Temps:          0       0       0       0       0
  4141 ;;      Totals:         0       0       0       0       0
  4142 ;;Total ram usage:        0 bytes
  4143 ;; Hardware stack levels used:    1
  4144 ;; Hardware stack levels required when called:    2
  4145 ;; This function calls:
  4146 ;;		Nothing
  4147 ;; This function is called by:
  4148 ;;		_main
  4149 ;; This function uses a non-reentrant model
  4150 ;;
  4151  0575                     _clearThreeHoursTimer:	
  4152                           
  4153                           ;common.c: 385: uiSmallTimer = 0;
  4154                           
  4155                           ; Regs used in _clearThreeHoursTimer: [status,2]
  4156  0575  1683               	bsf	3,5	;RP0=1, select bank1
  4157  0576  01A4               	clrf	_uiSmallTimer^(0+128)
  4158  0577  01A5               	clrf	(_uiSmallTimer+1)^(0+128)
  4159                           
  4160                           ;common.c: 386: bSmallTimerStartFlag = 0;
  4161  0578  01B6               	clrf	_bSmallTimerStartFlag^(0+128)
  4162  0579  0008               	return
  4163  057A                     __end_of_clearThreeHoursTimer:	
  4164                           
  4165                           	psect	text966
  4166  057A                     __ptext966:	
  4167 ;; =============== function _clearThreeHoursTimer ends ============
  4168                           
  4169                           
  4170 ;; *************** function _clearTwelveHoursTimer *****************
  4171 ;; Defined at:
  4172 ;;		line 377 in file "D:\develop\190625\AK7030-OTP\common.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;		None
  4175 ;; Auto vars:     Size  Location     Type
  4176 ;;		None
  4177 ;; Return value:  Size  Location     Type
  4178 ;;		None               void
  4179 ;; Registers used:
  4180 ;;		status,2
  4181 ;; Tracked objects:
  4182 ;;		On entry : 60/0
  4183 ;;		On exit  : 60/20
  4184 ;;		Unchanged: FFF9F/0
  4185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4186 ;;      Params:         0       0       0       0       0
  4187 ;;      Locals:         0       0       0       0       0
  4188 ;;      Temps:          0       0       0       0       0
  4189 ;;      Totals:         0       0       0       0       0
  4190 ;;Total ram usage:        0 bytes
  4191 ;; Hardware stack levels used:    1
  4192 ;; Hardware stack levels required when called:    2
  4193 ;; This function calls:
  4194 ;;		Nothing
  4195 ;; This function is called by:
  4196 ;;		_main
  4197 ;; This function uses a non-reentrant model
  4198 ;;
  4199  057A                     _clearTwelveHoursTimer:	
  4200                           
  4201                           ;common.c: 378: uiBigTimer = 0;
  4202                           
  4203                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  4204  057A  1683               	bsf	3,5	;RP0=1, select bank1
  4205  057B  01A0               	clrf	_uiBigTimer^(0+128)
  4206  057C  01A1               	clrf	(_uiBigTimer+1)^(0+128)
  4207                           
  4208                           ;common.c: 379: bBigTimerStartFlag = 0;
  4209  057D  01B4               	clrf	_bBigTimerStartFlag^(0+128)
  4210  057E  0008               	return
  4211  057F                     __end_of_clearTwelveHoursTimer:	
  4212                           
  4213                           	psect	text967
  4214  0320                     __ptext967:	
  4215 ;; =============== function _clearTwelveHoursTimer ends ============
  4216                           
  4217                           
  4218 ;; *************** function _ISR *****************
  4219 ;; Defined at:
  4220 ;;		line 534 in file "D:\develop\190625\AK7030-OTP\common.c"
  4221 ;; Parameters:    Size  Location     Type
  4222 ;;		None
  4223 ;; Auto vars:     Size  Location     Type
  4224 ;;		None
  4225 ;; Return value:  Size  Location     Type
  4226 ;;		None               void
  4227 ;; Registers used:
  4228 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4229 ;; Tracked objects:
  4230 ;;		On entry : 0/0
  4231 ;;		On exit  : 60/0
  4232 ;;		Unchanged: FFE00/0
  4233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4234 ;;      Params:         0       0       0       0       0
  4235 ;;      Locals:         0       0       0       0       0
  4236 ;;      Temps:          4       0       0       0       0
  4237 ;;      Totals:         4       0       0       0       0
  4238 ;;Total ram usage:        4 bytes
  4239 ;; Hardware stack levels used:    1
  4240 ;; Hardware stack levels required when called:    1
  4241 ;; This function calls:
  4242 ;;		i1_setAD_ConvertFlag
  4243 ;;		_adc_get
  4244 ;;		_vPutSampleDataIntoTable
  4245 ;; This function is called by:
  4246 ;;		Interrupt level 1
  4247 ;; This function uses a non-reentrant model
  4248 ;;
  4249  0320                     _ISR:	
  4250                           
  4251                           ;common.c: 535: static unsigned char ucTimer1sCnt = 0;
  4252                           ;common.c: 537: if(TMR1IF == 1)
  4253  0320  1C0C               	btfss	12,0
  4254  0321  2B5D               	goto	i1l3618
  4255                           
  4256                           ;common.c: 538: {
  4257                           ;common.c: 539: TMR1IF = 0 ;
  4258  0322  100C               	bcf	12,0
  4259                           
  4260                           ;common.c: 540: timer.timer10msStopWatch++;
  4261  0323  1683               	bsf	3,5	;RP0=1, select bank1
  4262  0324  3064               	movlw	100
  4263  0325  0AB9               	incf	_timer^(0+128),f
  4264                           
  4265                           ;common.c: 541: ucTimer1sCnt++;
  4266  0326  0AB2               	incf	ISR@ucTimer1sCnt^(0+128),f
  4267                           
  4268                           ;common.c: 543: if(ucTimer1sCnt >= 100)
  4269  0327  0232               	subwf	ISR@ucTimer1sCnt^(0+128),w
  4270  0328  1C03               	skipc
  4271  0329  2B5D               	goto	i1l3618
  4272                           
  4273                           ;common.c: 544: {
  4274                           ;common.c: 545: ucTimer1sCnt = 0;
  4275  032A  01B2               	clrf	ISR@ucTimer1sCnt^(0+128)
  4276                           
  4277                           ;common.c: 546: if(uiBigTimer > 0)
  4278  032B  0821               	movf	(_uiBigTimer+1)^(0+128),w
  4279  032C  0420               	iorwf	_uiBigTimer^(0+128),w
  4280  032D  1903               	skipnz
  4281  032E  2B35               	goto	i1l1649
  4282                           
  4283                           ;common.c: 547: uiBigTimer--;
  4284  032F  3001               	movlw	1
  4285  0330  02A0               	subwf	_uiBigTimer^(0+128),f
  4286  0331  3000               	movlw	0
  4287  0332  1C03               	skipc
  4288  0333  03A1               	decf	(_uiBigTimer+1)^(0+128),f
  4289  0334  02A1               	subwf	(_uiBigTimer+1)^(0+128),f
  4290  0335                     i1l1649:	
  4291                           
  4292                           ;common.c: 549: if(uiSmallTimer)
  4293  0335  0825               	movf	(_uiSmallTimer+1)^(0+128),w
  4294  0336  0424               	iorwf	_uiSmallTimer^(0+128),w
  4295  0337  1903               	skipnz
  4296  0338  2B3F               	goto	i1l1650
  4297                           
  4298                           ;common.c: 550: uiSmallTimer--;
  4299  0339  3001               	movlw	1
  4300  033A  02A4               	subwf	_uiSmallTimer^(0+128),f
  4301  033B  3000               	movlw	0
  4302  033C  1C03               	skipc
  4303  033D  03A5               	decf	(_uiSmallTimer+1)^(0+128),f
  4304  033E  02A5               	subwf	(_uiSmallTimer+1)^(0+128),f
  4305  033F                     i1l1650:	
  4306                           
  4307                           ;common.c: 552: if(uiTwentySecondsTimer)
  4308  033F  0829               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  4309  0340  0428               	iorwf	_uiTwentySecondsTimer^(0+128),w
  4310  0341  1903               	skipnz
  4311  0342  2B49               	goto	i1l1651
  4312                           
  4313                           ;common.c: 553: uiTwentySecondsTimer--;
  4314  0343  3001               	movlw	1
  4315  0344  02A8               	subwf	_uiTwentySecondsTimer^(0+128),f
  4316  0345  3000               	movlw	0
  4317  0346  1C03               	skipc
  4318  0347  03A9               	decf	(_uiTwentySecondsTimer+1)^(0+128),f
  4319  0348  02A9               	subwf	(_uiTwentySecondsTimer+1)^(0+128),f
  4320  0349                     i1l1651:	
  4321                           
  4322                           ;common.c: 555: if(uiTwentyMinTimer)
  4323  0349  0827               	movf	(_uiTwentyMinTimer+1)^(0+128),w
  4324  034A  0426               	iorwf	_uiTwentyMinTimer^(0+128),w
  4325  034B  1903               	skipnz
  4326  034C  2B53               	goto	i1l1652
  4327                           
  4328                           ;common.c: 556: uiTwentyMinTimer--;
  4329  034D  3001               	movlw	1
  4330  034E  02A6               	subwf	_uiTwentyMinTimer^(0+128),f
  4331  034F  3000               	movlw	0
  4332  0350  1C03               	skipc
  4333  0351  03A7               	decf	(_uiTwentyMinTimer+1)^(0+128),f
  4334  0352  02A7               	subwf	(_uiTwentyMinTimer+1)^(0+128),f
  4335  0353                     i1l1652:	
  4336                           
  4337                           ;common.c: 558: if( uiOneHourTimer )
  4338  0353  0823               	movf	(_uiOneHourTimer+1)^(0+128),w
  4339  0354  0422               	iorwf	_uiOneHourTimer^(0+128),w
  4340  0355  1903               	skipnz
  4341  0356  2B5D               	goto	i1l3618
  4342                           
  4343                           ;common.c: 559: uiOneHourTimer--;
  4344  0357  3001               	movlw	1
  4345  0358  02A2               	subwf	_uiOneHourTimer^(0+128),f
  4346  0359  3000               	movlw	0
  4347  035A  1C03               	skipc
  4348  035B  03A3               	decf	(_uiOneHourTimer+1)^(0+128),f
  4349  035C  02A3               	subwf	(_uiOneHourTimer+1)^(0+128),f
  4350  035D                     i1l3618:	
  4351                           
  4352                           ;common.c: 560: }
  4353                           ;common.c: 561: }
  4354                           ;common.c: 563: if(ADIF)
  4355  035D  1283               	bcf	3,5	;RP0=0, select bank0
  4356  035E  1D0D               	btfss	13,2
  4357  035F  2B7A               	goto	i1l1657
  4358  0360  3001               	movlw	1
  4359                           
  4360                           ;common.c: 564: {
  4361                           ;common.c: 566: ADIF=0;
  4362  0361  110D               	bcf	13,2
  4363                           
  4364                           ;common.c: 567: setAD_ConvertFlag(1);
  4365  0362  23EF  118A         	fcall	i1_setAD_ConvertFlag
  4366                           
  4367                           ;common.c: 569: if(sampleChannelSelect == 12)
  4368  0364  1283               	bcf	3,5	;RP0=0, select bank0
  4369  0365  086E               	movf	_sampleChannelSelect,w
  4370  0366  3A0C               	xorlw	12
  4371  0367  1D03               	skipz
  4372  0368  2B71               	goto	i1l3628
  4373                           
  4374                           ;common.c: 570: {
  4375                           ;common.c: 573: vPutSampleDataIntoTable(adc_get(),12);
  4376  0369  2387  118A         	fcall	_adc_get
  4377  036B  0871               	movf	?_adc_get+1,w
  4378  036C  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4379  036D  0870               	movf	?_adc_get,w
  4380  036E  00F4               	movwf	?_vPutSampleDataIntoTable
  4381  036F  300C               	movlw	12
  4382  0370  2B78               	goto	L15
  4383  0371                     i1l3628:	
  4384                           ;common.c: 577: }
  4385                           
  4386                           
  4387                           ;common.c: 578: else
  4388                           ;common.c: 579: {
  4389                           ;common.c: 583: vPutSampleDataIntoTable(adc_get(),13);
  4390  0371  2387  118A         	fcall	_adc_get
  4391  0373  0871               	movf	?_adc_get+1,w
  4392  0374  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4393  0375  0870               	movf	?_adc_get,w
  4394  0376  00F4               	movwf	?_vPutSampleDataIntoTable
  4395  0377  300D               	movlw	13
  4396  0378                     L15:	
  4397  0378  00F6               	movwf	?_vPutSampleDataIntoTable+2
  4398  0379  2392               	fcall	_vPutSampleDataIntoTable
  4399  037A                     i1l1657:	
  4400  037A  087C               	movf	??_ISR+3,w
  4401  037B  1283               	bcf	3,5	;RP0=0, select bank0
  4402  037C  1303               	bcf	3,6	;RP1=0, select bank0
  4403  037D  00FF               	movwf	127
  4404  037E  087B               	movf	??_ISR+2,w
  4405  037F  008A               	movwf	10
  4406  0380  087A               	movf	??_ISR+1,w
  4407  0381  0084               	movwf	4
  4408  0382  0E79               	swapf	??_ISR^(0+-128),w
  4409  0383  0083               	movwf	3
  4410  0384  0EFE               	swapf	126,f
  4411  0385  0E7E               	swapf	126,w
  4412  0386  0009               	retfie
  4413  0387                     __end_of_ISR:	
  4414  0387                     __ptext969:	
  4415 ;; =============== function i1_setAD_ConvertFlag ends ============
  4416                           
  4417                           
  4418 ;; *************** function _adc_get *****************
  4419 ;; Defined at:
  4420 ;;		line 105 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;		None
  4423 ;; Auto vars:     Size  Location     Type
  4424 ;;  val             2    2[COMMON] unsigned int 
  4425 ;; Return value:  Size  Location     Type
  4426 ;;                  2    0[COMMON] unsigned int 
  4427 ;; Registers used:
  4428 ;;		wreg
  4429 ;; Tracked objects:
  4430 ;;		On entry : 60/0
  4431 ;;		On exit  : 60/20
  4432 ;;		Unchanged: FFF9F/0
  4433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4434 ;;      Params:         2       0       0       0       0
  4435 ;;      Locals:         2       0       0       0       0
  4436 ;;      Temps:          0       0       0       0       0
  4437 ;;      Totals:         4       0       0       0       0
  4438 ;;Total ram usage:        4 bytes
  4439 ;; Hardware stack levels used:    1
  4440 ;; This function calls:
  4441 ;;		Nothing
  4442 ;; This function is called by:
  4443 ;;		_ISR
  4444 ;; This function uses a non-reentrant model
  4445 ;;
  4446  0387                     _adc_get:	
  4447                           
  4448                           ;periph.c: 106: unsigned int val;
  4449                           ;periph.c: 107: val = (ADRESH<<8) | ADRESL;
  4450                           
  4451                           ; Regs used in _adc_get: [wreg]
  4452  0387  081E               	movf	30,w	;volatile
  4453  0388  00F3               	movwf	adc_get@val+1
  4454  0389  01F2               	clrf	adc_get@val
  4455  038A  1683               	bsf	3,5	;RP0=1, select bank1
  4456  038B  081E               	movf	30,w	;volatile
  4457  038C  04F2               	iorwf	adc_get@val,f
  4458                           
  4459                           ;periph.c: 108: return val;
  4460  038D  0873               	movf	adc_get@val+1,w
  4461  038E  00F1               	movwf	?_adc_get+1
  4462  038F  0872               	movf	adc_get@val,w
  4463  0390  00F0               	movwf	?_adc_get
  4464  0391  0008               	return
  4465  0392                     __end_of_adc_get:	
  4466  0392                     __ptext970:	
  4467 ;; =============== function _adc_get ends ============
  4468                           
  4469                           
  4470 ;; *************** function _vPutSampleDataIntoTable *****************
  4471 ;; Defined at:
  4472 ;;		line 106 in file "D:\develop\190625\AK7030-OTP\common.c"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;  uiSampleData    2    4[COMMON] unsigned int 
  4475 ;;  channel         1    6[COMMON] unsigned char 
  4476 ;; Auto vars:     Size  Location     Type
  4477 ;;  i               2    7[COMMON] int 
  4478 ;; Return value:  Size  Location     Type
  4479 ;;		None               void
  4480 ;; Registers used:
  4481 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4482 ;; Tracked objects:
  4483 ;;		On entry : 60/20
  4484 ;;		On exit  : 0/0
  4485 ;;		Unchanged: FFE00/0
  4486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4487 ;;      Params:         3       0       0       0       0
  4488 ;;      Locals:         2       0       0       0       0
  4489 ;;      Temps:          0       0       0       0       0
  4490 ;;      Totals:         5       0       0       0       0
  4491 ;;Total ram usage:        5 bytes
  4492 ;; Hardware stack levels used:    1
  4493 ;; This function calls:
  4494 ;;		Nothing
  4495 ;; This function is called by:
  4496 ;;		_ISR
  4497 ;; This function uses a non-reentrant model
  4498 ;;
  4499  0392                     _vPutSampleDataIntoTable:	
  4500                           
  4501                           ;common.c: 108: static unsigned char ucChannelFirstLength = 0;
  4502                           ;common.c: 110: static unsigned char ucChannelFourthLength = 0;
  4503                           ;common.c: 112: static unsigned char ucChannelFourteenthLength = 0;
  4504                           ;common.c: 114: if(channel == 12)
  4505                           
  4506                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1]
  4507  0392  0876               	movf	vPutSampleDataIntoTable@channel,w
  4508  0393  3A0C               	xorlw	12
  4509  0394  1D03               	skipz
  4510  0395  2BA6               	goto	i1l3540
  4511                           
  4512                           ;common.c: 115: {
  4513                           ;common.c: 116: if(ucChannelFirstLength < 20)
  4514  0396  3014               	movlw	20
  4515  0397  027D               	subwf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4516  0398  1803               	skipnc
  4517  0399  2BA0               	goto	i1l3536
  4518                           
  4519                           ;common.c: 117: {
  4520                           ;common.c: 118: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  4521  039A  1003               	clrc
  4522  039B  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4523  039C  3E90               	addlw	_uiSampleChannelFirst& (0+255)
  4524  039D  23FC               	fcall	PL3	;call to abstracted procedure
  4525                           
  4526                           ;common.c: 120: ucChannelFirstLength++;
  4527  039E  0AFD               	incf	vPutSampleDataIntoTable@ucChannelFirstLength,f
  4528                           
  4529                           ;common.c: 121: }
  4530  039F  0008               	return
  4531  03A0                     i1l3536:	
  4532                           
  4533                           ;common.c: 122: else
  4534                           ;common.c: 123: {
  4535                           ;common.c: 124: ucChannelFirstLength = 0;
  4536  03A0  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  4537                           
  4538                           ;common.c: 126: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  4539  03A1  1003               	clrc
  4540  03A2  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4541  03A3  3E90               	addlw	_uiSampleChannelFirst& (0+255)
  4542  03A4  23FC               	fcall	PL3	;call to abstracted procedure
  4543  03A5  0008               	return
  4544  03A6                     i1l3540:	
  4545                           
  4546                           ;common.c: 129: else if(channel == 13)
  4547  03A6  0876               	movf	vPutSampleDataIntoTable@channel,w
  4548  03A7  3A0D               	xorlw	13
  4549  03A8  1D03               	skipz
  4550  03A9  2BB9               	goto	i1l3552
  4551                           
  4552                           ;common.c: 130: {
  4553                           ;common.c: 131: if(ucChannelFourthLength < 20)
  4554  03AA  3014               	movlw	20
  4555  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  4556  03AC  026D               	subwf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4557  03AD  1803               	skipnc
  4558  03AE  2BB4               	goto	i1l3548
  4559                           
  4560                           ;common.c: 132: {
  4561                           ;common.c: 133: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  4562  03AF  1003               	clrc
  4563  03B0  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4564  03B1  23F3               	fcall	PL2	;call to abstracted procedure
  4565                           
  4566                           ;common.c: 135: ucChannelFourthLength++;
  4567  03B2  0AED               	incf	vPutSampleDataIntoTable@ucChannelFourthLength,f
  4568                           
  4569                           ;common.c: 136: }
  4570  03B3  0008               	return
  4571  03B4                     i1l3548:	
  4572                           
  4573                           ;common.c: 137: else
  4574                           ;common.c: 138: {
  4575                           ;common.c: 139: ucChannelFourthLength = 0;
  4576  03B4  01ED               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  4577                           
  4578                           ;common.c: 141: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  4579  03B5  1003               	clrc
  4580  03B6  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4581  03B7  23F3               	fcall	PL2	;call to abstracted procedure
  4582  03B8  0008               	return
  4583  03B9                     i1l3552:	
  4584                           
  4585                           ;common.c: 144: else if(channel == 14)
  4586  03B9  0876               	movf	vPutSampleDataIntoTable@channel,w
  4587  03BA  3A0E               	xorlw	14
  4588  03BB  1D03               	skipz
  4589  03BC  2BCD               	goto	i1l3564
  4590                           
  4591                           ;common.c: 145: {
  4592                           ;common.c: 146: if(ucChannelFourteenthLength < 20)
  4593  03BD  3014               	movlw	20
  4594  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  4595  03BF  026C               	subwf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4596  03C0  1803               	skipnc
  4597  03C1  2BC8               	goto	i1l3560
  4598                           
  4599                           ;common.c: 147: {
  4600                           ;common.c: 148: uiSampleChannelFourteenth[ucChannelFourteenthLength] = uiSampleData;
  4601  03C2  1003               	clrc
  4602  03C3  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4603  03C4  3EB8               	addlw	_uiSampleChannelFourteenth& (0+255)
  4604  03C5  23FC               	fcall	PL3	;call to abstracted procedure
  4605                           
  4606                           ;common.c: 150: ucChannelFourteenthLength++;
  4607  03C6  0AEC               	incf	vPutSampleDataIntoTable@ucChannelFourteenthLength,f
  4608                           
  4609                           ;common.c: 151: }
  4610  03C7  0008               	return
  4611  03C8                     i1l3560:	
  4612                           
  4613                           ;common.c: 152: else
  4614                           ;common.c: 153: {
  4615                           ;common.c: 154: ucChannelFourteenthLength = 0;
  4616  03C8  01EC               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4617                           
  4618                           ;common.c: 156: uiSampleChannelFourth[ucChannelFourteenthLength] = uiSampleData;
  4619  03C9  1003               	clrc
  4620  03CA  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4621  03CB  23F3               	fcall	PL2	;call to abstracted procedure
  4622  03CC  0008               	return
  4623  03CD                     i1l3564:	
  4624                           
  4625                           ;common.c: 159: else
  4626                           ;common.c: 160: {
  4627                           ;common.c: 161: ucChannelFirstLength = 0;
  4628  03CD  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  4629                           
  4630                           ;common.c: 163: ucChannelFourthLength = 0;
  4631  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  4632  03CF  01ED               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  4633                           
  4634                           ;common.c: 165: ucChannelFourteenthLength = 0;
  4635  03D0  01EC               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4636                           
  4637                           ;common.c: 167: for(int i = 0;i < 20; i++)
  4638  03D1  01F7               	clrf	vPutSampleDataIntoTable@i
  4639  03D2  01F8               	clrf	vPutSampleDataIntoTable@i+1
  4640  03D3                     i1l3570:	
  4641                           
  4642                           ;common.c: 168: {
  4643                           ;common.c: 169: uiSampleChannelFirst[i] = 0;
  4644  03D3  1003               	clrc
  4645  03D4  0D77               	rlf	vPutSampleDataIntoTable@i,w
  4646  03D5  3E90               	addlw	_uiSampleChannelFirst& (0+255)
  4647  03D6  0084               	movwf	4
  4648  03D7  1783               	bsf	3,7	;select IRP bank3
  4649                           
  4650                           ;common.c: 171: uiSampleChannelFourth[i] = 0;
  4651  03D8  2404  118A         	fcall	PL5	;call to abstracted procedure
  4652  03DA  1383               	bcf	3,7	;select IRP bank1
  4653                           
  4654                           ;common.c: 173: uiSampleChannelFourth[i] = 0;
  4655  03DB  2404  118A         	fcall	PL5	;call to abstracted procedure
  4656  03DD  0180               	clrf	0
  4657  03DE  0A84               	incf	4,f
  4658  03DF  0180               	clrf	0
  4659  03E0  0AF7               	incf	vPutSampleDataIntoTable@i,f
  4660  03E1  1903               	skipnz
  4661  03E2  0AF8               	incf	vPutSampleDataIntoTable@i+1,f
  4662  03E3  0878               	movf	vPutSampleDataIntoTable@i+1,w
  4663  03E4  3A80               	xorlw	128
  4664  03E5  00FF               	movwf	127
  4665  03E6  3080               	movlw	128
  4666  03E7  027F               	subwf	127,w
  4667  03E8  1D03               	skipz
  4668  03E9  2BEC               	goto	u118_25
  4669  03EA  3014               	movlw	20
  4670  03EB  0277               	subwf	vPutSampleDataIntoTable@i,w
  4671  03EC                     u118_25:	
  4672  03EC  1803               	btfsc	3,0
  4673  03ED  0008               	return
  4674  03EE  2BD3               	goto	i1l3570
  4675  03EF                     __end_of_vPutSampleDataIntoTable:	
  4676  03EF                     __ptext968:	
  4677 ;; =============== function _ISR ends ============
  4678                           
  4679                           
  4680 ;; *************** function i1_setAD_ConvertFlag *****************
  4681 ;; Defined at:
  4682 ;;		line 215 in file "D:\develop\190625\AK7030-OTP\common.c"
  4683 ;; Parameters:    Size  Location     Type
  4684 ;;  setAD_Conver    1    wreg     unsigned char 
  4685 ;; Auto vars:     Size  Location     Type
  4686 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  4687 ;; Return value:  Size  Location     Type
  4688 ;;		None               void
  4689 ;; Registers used:
  4690 ;;		wreg
  4691 ;; Tracked objects:
  4692 ;;		On entry : 60/0
  4693 ;;		On exit  : 60/20
  4694 ;;		Unchanged: FFF9F/0
  4695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4696 ;;      Params:         0       0       0       0       0
  4697 ;;      Locals:         1       0       0       0       0
  4698 ;;      Temps:          0       0       0       0       0
  4699 ;;      Totals:         1       0       0       0       0
  4700 ;;Total ram usage:        1 bytes
  4701 ;; Hardware stack levels used:    1
  4702 ;; This function calls:
  4703 ;;		Nothing
  4704 ;; This function is called by:
  4705 ;;		_ISR
  4706 ;; This function uses a non-reentrant model
  4707 ;;
  4708  03EF                     i1_setAD_ConvertFlag:	
  4709                           
  4710                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  4711                           ;i1setAD_ConvertFlag@flag stored from wreg
  4712  03EF  00F0               	movwf	i1setAD_ConvertFlag@flag
  4713                           
  4714                           ;common.c: 216: adc_convert_flag = flag;
  4715  03F0  1683               	bsf	3,5	;RP0=1, select bank1
  4716  03F1  00B3               	movwf	_adc_convert_flag^(0+128)
  4717  03F2  0008               	return
  4718  03F3                     __end_ofi1_setAD_ConvertFlag:	
  4719  03F3                     PL2:	
  4720  03F3  3EBF               	addlw	_uiSampleChannelFourth& (0+255)
  4721  03F4  0084               	movwf	4
  4722  03F5  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  4723  03F6  1383               	bcf	3,7	;select IRP bank1
  4724  03F7  0080               	movwf	0
  4725  03F8  0A84               	incf	4,f
  4726  03F9  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  4727  03FA  0080               	movwf	0
  4728  03FB  0008               	return
  4729  03FC                     PL3:	
  4730  03FC  0084               	movwf	4
  4731  03FD  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  4732  03FE  1783               	bsf	3,7	;select IRP bank3
  4733  03FF  0080               	movwf	0
  4734  0400  0A84               	incf	4,f
  4735  0401  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  4736  0402  0080               	movwf	0
  4737  0403  0008               	return
  4738  0404                     PL5:	
  4739  0404  0180               	clrf	0
  4740  0405  0A84               	incf	4,f
  4741  0406  0180               	clrf	0
  4742  0407  1003               	clrc
  4743  0408  0D77               	rlf	vPutSampleDataIntoTable@i,w
  4744  0409  3EBF               	addlw	_uiSampleChannelFourth& (0+255)
  4745  040A  0084               	movwf	4
  4746  040B  0008               	return
  4747                           
  4748                           	psect	intentry
  4749  0004                     __pintentry:	
  4750                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4751                           
  4752  0004                     interrupt_function:	
  4753  007E                     saved_w	set	btemp
  4754  0004  00FE               	movwf	btemp
  4755  0005  0E03               	swapf	3,w
  4756  0006  00F9               	movwf	??_ISR
  4757  0007  0804               	movf	4,w
  4758  0008  00FA               	movwf	??_ISR+1
  4759  0009  080A               	movf	10,w
  4760  000A  00FB               	movwf	??_ISR+2
  4761  000B  1283               	bcf	3,5	;RP0=0, select bank0
  4762  000C  1303               	bcf	3,6	;RP1=0, select bank0
  4763  000D  087F               	movf	btemp+1,w
  4764  000E  00FC               	movwf	??_ISR+3
  4765  000F  118A  2B20         	ljmp	_ISR
  4766                           
  4767                           	psect	text971
  4768  0000                     __ptext971:	
  4769 ;; =============== function _vPutSampleDataIntoTable ends ============
  4770                           
  4771  007E                     btemp	set	126	;btemp
  4772  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sun Nov 03 21:58:25 2019

                                  ??_clock_config 0020                               ?_startOneHoursTimer 0020  
                                              _GO 00F9                                                fsr 0004  
                        ?_timer1_interrupt_config 0070                                               l700 0487  
                                             l710 0000                                               l705 04A9  
                                             l713 0000                                               l722 0000  
                                             l716 0000                                               l725 0588  
                                             l719 0000                                               l680 046C  
                                             l745 0262                                               l690 047C  
                                             l762 0075                                               l685 0499  
                                             l749 0000                                               l695 04A1  
                                             _GIE 005F                                               _PB2 0032  
                                             _PB3 0033                                               _PB4 0034  
                                             _PB5 0035                                               _PR2 0092  
                                             _ISR 0320                                               fsr0 0004  
                                             indf 0000                            ??_startThreeHoursTimer 0022  
                                            ?_ISR 0070                              ??_startOneHoursTimer 0022  
                              __size_of_AD_Sample 0015                                              l2310 0000  
                                            l2304 0000                                              l3300 0000  
                                            l1540 0000                                              l1508 0000  
                                            l3302 0000                                              l3310 0000  
                                            l1534 0567                                              l1543 0000  
                                            l3304 0000                                              l3312 0000  
                                            l3320 0000                                              l1552 0000  
                                            l1537 0000                                              l3306 0000  
                                            l3314 0000                                              l3322 0000  
                                            l3330 0000                                              l1642 0000  
                                            l1546 0000                                              l1555 0000  
                                            l3308 0000                                              l3316 0000  
                                            l3324 0000                                              l3340 0000  
                                            l3332 0000                                              l3420 0000  
                                            l3500 029E                                              l1581 0000  
                                            l1549 0000                                              l3318 0000  
                                            l3326 0000                                              l3342 0000  
                                            l3334 0000                                              l3350 0000  
                                            l3406 0000                                              l3414 0000  
                                            l3422 0000                                              l3510 02E1  
                                            l1584 0000                                              l3336 0000  
                                            l3328 0000                                              l3344 0000  
                                            l3352 0000                                              l3360 0000  
                                            l3408 0000                                              l3416 0000  
                                            l3432 0000                                              l3440 0000  
                                            l3520 0000                                              l3512 0000  
                                            l1593 0000                                              l3338 0000  
                                            l3346 0000                                              l3354 0000  
                                            l3362 0000                                              l3522 0000  
                                            l3506 02DF                                              l3348 0000  
                                            l3364 0000                                              l3356 0000  
                                            l3444 0000                                              l3508 029F  
                                            l3700 0000                                              l3358 0000  
                                            l3366 0456                                              l3374 0000  
                                            l3390 0000                                              l3438 0000  
                                            l3446 0000                                              l3462 0000  
                                            l3470 0000                                              l3710 0000  
                                            l3702 0000                                              l3368 0000  
                                            l3376 0000                                              l3456 0000  
                                            l3464 0000                                              l3480 0000  
                                            l3640 0000                                              l3704 0000  
                                            l3800 00C0                                              l3720 0000  
                                            l3298 0000                                              l3394 0000  
                                            l3490 0000                                              l3642 0000  
                                            l3650 0000                                              l3706 0000  
                                            l3810 00D5                                              l3730 0035  
                                            l3722 0000                                              l3388 0000  
                                            l3396 0000                                              l3468 0000  
                                            l3492 0000                                              l3580 0000  
                                            l3636 0000                                              l3644 0000  
                                            l3708 0000                                              l3900 01B7  
                                            l3820 0000                                              l3732 0000  
                                            l3724 0000                                              l3716 0000  
                                            l3486 0276                                              l3590 0000  
                                            l3582 0000                                              l3638 0000  
                                            l3646 0000                                              l3654 0000  
                                            l3662 0000                                              l3670 0000  
                                            l3830 0000                                              l3822 0000  
                                            l3814 0000                                              l3750 005E  
                                            l3734 0000                                              l3726 0000  
                                            l3718 0000                                              l3488 0000  
                                            l3576 0000                                              l3840 0114  
                                            l3824 0000                                              l3816 00DC  
                                            l3808 00D3                                              l3760 0000  
                                            l3744 0052                                              l3728 0000  
                                            l3594 043E                                              l3586 0000  
                                            l3690 023A                                              l3682 021D  
                                            l3674 0000                                              l3666 0000  
                                            l3850 0000                                              l3842 0000  
                                            l3826 0000                                              l3818 0000  
                                            l3770 0000                                              l3762 0076  
                                            l3754 006B                                              l3906 01B9  
                                            l3738 0000                                              l3692 023C  
                                            l3684 0222                                              l3676 01FF  
                                            l3668 0000                                              l3860 0148  
                                            l3852 0000                                              l3844 0119  
                                            l3828 00F4                                              l3780 0096  
                                            l3772 0000                                              l3764 0000  
                                            l3756 006D                                              l3748 0000  
                                            l3870 016C                                              l3862 014D  
                                            l3846 011C                                              l3790 00AD  
                                            l3782 009C                                              l3774 0000  
                                            l3766 0000                                              l3696 0246  
                                            l3688 022F                                              l3880 018C  
                                            l3872 016F                                              l3784 009E  
                                            l3776 0000                                              l3768 0000  
                                            l3698 0000                                              l3890 0000  
                                            l3874 0176                                              l3866 0000  
                                            l3794 0000                                              l3778 0000  
                                            l3884 0198                                              l3876 017A  
                                            l3796 00B4                                              l3788 00AB  
                                            l3894 01AD                                              l3886 0000  
                                            l3878 0000                                              l3798 0000  
                                            _ADIE 046A                                              l3896 01AF  
                                            l3888 019C                                              _ADIF 006A  
                                            _ADON 00F8                     startTwelveHourTimer@uiSetTime 0020  
                                            u1075 0299                                              u1085 02C0  
                                            u1095 02AC                                              u1345 0206  
                                            u1355 020E                                              _PEIE 005E  
                                            _main 0013                                              btemp 007E  
                                            start 0011                           ?_getAdOriginalCh12Value 0056  
                         ?_getAdOriginalCh13Value 0056                        ??_isFinishedTwentyMinTimer 0020  
                                           ??_ISR 0079                                 ??_setPinInitVaule 0021  
                      __end_of_isPermitSampleTime 0570                               _sampleChannelSelect 006E  
                                           ?_main 0070                                             _CLKPR 0108  
                                           _T1CON 0010                                             _T2CON 0012  
                                 __end_of_adc_get 0392                                             _PBOD2 0C42  
                                           _TMR1H 000F                                             _TMR1L 000E  
                           setAD_ConvertFlag@flag 0020                                 ??_selectAdChannel 0020  
                                 __end_of_initPB3 046F                                   __end_of_initPB4 047F  
                                 __end_of_initPB5 048A                           _vPutSampleDataIntoTable 0392  
                                 __end_of_initPin 0463                                             _reset 0588  
                                           _timer 00B9                                             pclath 000A  
                             main@uiTimerThreeP5s 00AE                                             status 0003  
                  __end_of_getAdOriginalCh12Value 026F                                             wtemp0 007E  
                  __end_of_getAdOriginalCh13Value 01E8                     __size_of_startTwelveHourTimer 0013  
                            __end_of_clrSampeTime 0588                                      __end_of_main 01DE  
                          __size_of_adc_test_init 0015                                 __end_of_AD_Sample 0441  
                                          ??_main 0064                                     main@ucChValue 0064  
                                   main@ucDelay1s 00AA                                            _ADCON0 001F  
                                          _ADCON1 009F                              __end_of_clock_config 056A  
                                          _ADRESH 001E                                            _ADRESL 009E  
                                          _CCPR1L 0015                                            ?_reset 0070  
                                          _CLKPCE 0847                                            i1l2313 0000  
                                          i1l1650 033F                                            i1l1651 0349  
                                          i1l1652 0353                                            i1l1549 0000  
                                          i1l3600 0000                                            i1l1657 037A  
                                          i1l1649 0335                                            i1l3602 0000  
                                          i1l3540 03A6                                            i1l3550 0000  
                                          i1l3534 0000                                            i1l3630 0000  
                                          i1l3622 0000                                            i1l3606 0000  
                                          i1l3560 03C8                                            i1l3552 03B9  
                                          i1l3536 03A0                                            i1l3528 0000  
                                          i1l3624 0000                                            i1l3570 03D3  
                                          i1l3562 0000                                            i1l3546 0000  
                                          i1l3538 0000                                            i1l3634 0000  
                                          i1l3618 035D                                            i1l3572 0000  
                                          i1l3564 03CD                                            i1l3548 03B4  
                                          i1l3628 0371                                            i1l3574 0000  
                                          i1l3558 0000                                            i1l3596 0000  
                                          u118_25 03EC                                            _TMR1IE 0460  
                                          _TMR1IF 0060                                 _getAD_ConvertFlag 0423  
                               _setAD_ConvertFlag 0427                                            _TRISB0 0430  
                                          _TRISB1 0431                                            _TRISB2 0432  
                                          _TRISB3 0433                                            _TRISB4 0434  
                                          _TRISB5 0435                                ?_getAD_ConvertFlag 0070  
                                          _Filter 026F                                ?_setAD_ConvertFlag 0070  
                     ??_isFinishedThreeHoursTimer 0020                     __size_of_clearThreeHoursTimer 0005  
                          __size_of_calPulseWidth 007C                                         ??_adc_get 0072  
                             ??_getAD_ConvertFlag 0020                               ??_setAD_ConvertFlag 0020  
                                          _setPB3 0492                                            _setPB4 049B  
                                          _setPB5 04A3                       __end_of_clearTwentyMinTimer 0575  
                                          clrloop 055B                                  Filter@filter_buf 0026  
                                       ??_initPB3 0020                                         ??_initPB4 0020  
                                       ??_initPB5 0020                                  Filter@filter_sum 0050  
                                       ??_initPin 0021                         ??_vPutSampleDataIntoTable 0077  
                                          saved_w 007E                           ??_clearTwelveHoursTimer 0020  
                     ?_process_AD_Converter_Value 0070                                     _adc_test_init 0441  
                       __end_of_getAD_ConvertFlag 0427                         __end_of_setAD_ConvertFlag 042C  
                              __size_of_adc_start 0003                          _initPB2_AsHighResistence 046F  
                __size_of_isFinishedOneHoursTimer 000B                  __end_of_isFinishedTwentyMinTimer 0550  
                                  __pcstackCOMMON 0070                            calPulseWidth@bInitFlag 00BA  
                                    __pidataBANK0 0000                                 main@uiTimerOneP5s 00AC  
                                   __end_of_reset 057F                                 main@uiTimerTwoP5s 00B0  
                            _uiSampleChannelFirst 0190                    vPutSampleDataIntoTable@channel 0076  
                       _isFinishedThreeHoursTimer 052F                             __end_of_timer1_config 055A  
                  calPulseWidth@ucThreeTimesValue 005C                                    ?_adc_test_init 0020  
                     __end_of_startTwentyMinTimer 0524                                     _calPulseWidth 01E8  
     vPutSampleDataIntoTable@ucChannelFirstLength 007D                                           ??_reset 0020  
                __size_of_timer1_interrupt_config 0003                             __size_of_clrSampeTime 0002  
                                      __pbssBANK0 0069                                        __pbssBANK1 00A0  
                                      __pbssBANK3 0190                      __size_ofi1_setAD_ConvertFlag 0004  
                                 _setPinInitVaule 048A                                        adc_get@val 0072  
                                _uiTwentyMinTimer 00A6                   __end_of_vPutSampleDataIntoTable 03EF  
                                         ?_Filter 0020                                        __pmaintext 0013  
                                 _selectAdChannel 057F                                        __pintentry 0004  
                                         _CCP1CON 0017                                           ?_setPB3 0070  
                                         ?_setPB4 0070                                           ?_setPB5 0070  
                           __size_of_clock_config 0008                                      _clrSampeTime 0586  
                               __end_of_adc_start 0459                              _uiTwentySecondsTimer 00A8  
                              _isPermitSampleTime 056A                                    ?_calPulseWidth 0070  
                                         Filter@i 0055                                           Filter@j 0054  
                              __size_of_pwm_start 0015                       __size_of_startOneHoursTimer 0013  
                   __size_of_startThreeHoursTimer 0013                        __size_of_getAD_ConvertFlag 0004  
                      __size_of_setAD_ConvertFlag 0005                                    main@ucTimerP3s 00BD  
                                  main@ucTimerP5s 00BE                               ?_isPermitSampleTime 0070  
                                 __size_of_Filter 0097                                        _uiBigTimer 00A0  
                                    setPB3@bValue 0020                                      setPB4@bValue 0020  
                                    _clock_config 0562                                      setPB5@bValue 0020  
                                         _adc_get 0387                                   __size_of_setPB3 0009  
                                 __size_of_setPB4 0008                                   __size_of_setPB5 0008  
                            ??_isPermitSampleTime 0020                      __end_of_startTwelveHourTimer 0511  
                                   initPB3@bValue 0020                                     initPB4@bValue 0020  
                                       _AD_Sample 042C                                           _initPB3 0463  
                                         _initPB4 0474                                           _initPB5 047F  
                                    __size_of_ISR 0067                                     initPB5@bValue 0020  
                                         _initPin 0459                              _bSmallTimerStartFlag 00B6  
                                 ??_adc_test_init 0021                 __size_of_isFinishedTwentyMinTimer 000B  
                       ?_isFinishedTwentyMinTimer 0070                           __end_of_setPinInitVaule 0492  
                            end_of_initialization 04C0                                 Filter@filter_temp 004E  
                        calPulseWidth@ucHalfValue 005D                             pwm_start@ucPulseWidth 0020  
                         __end_of_selectAdChannel 0583                           _isFinishedOneHoursTimer 0524  
                               __end_of_pwm_start 04D8                                        ?_AD_Sample 0070  
                    ??_isFinishedTwelveHoursTimer 0020                                         Filter@cir 0052  
                             _bTwentyMinStartFlag 00B7                                  _adc_convert_flag 00B3  
                                 ??_calPulseWidth 0058                      __end_of_clearThreeHoursTimer 057A  
                  __size_of_clearTwelveHoursTimer 0005                           _timer1_interrupt_config 0583  
                   __end_of_clearTwelveHoursTimer 057F                        ??_initPB2_AsHighResistence 0020  
              __size_of_isFinishedThreeHoursTimer 000B                                        main@ucStep 006B  
                                  __end_of_Filter 0306                     startTwentyMinTimer@uiSetValue 0020  
             __size_of_isFinishedTwelveHoursTimer 000B                          vPutSampleDataIntoTable@i 0077  
                             i1_setAD_ConvertFlag 03EF                                    __end_of_setPB3 049B  
                                  __end_of_setPB4 04A3                                    __end_of_setPB5 04AB  
                                main@ucPulseWidth 0066                               start_initialization 04AB  
                                     __end_of_ISR 0387                             _uiSampleChannelFourth 00BF  
                        ??_getAdOriginalCh12Value 0058                                  ?_setPinInitVaule 0070  
                        ??_getAdOriginalCh13Value 0058                      __size_of_clearTwentyMinTimer 0005  
                       ??_isFinishedOneHoursTimer 0020                              ?i1_setAD_ConvertFlag 0070  
                            _startTwelveHourTimer 04FE                 __end_of_isFinishedThreeHoursTimer 053A  
                                ?_selectAdChannel 0070                                          ??_Filter 0022  
                                     __pdataBANK0 006E                                          ??_setPB3 0020  
                                        ??_setPB4 0020                                          ??_setPB5 0020  
                        ?_vPutSampleDataIntoTable 0074                                       ??_AD_Sample 0020  
                       ??_timer1_interrupt_config 0020                                       __pbssCOMMON 007D  
                                   __pcstackBANK0 0020                                         _adc_start 0456  
                           ??i1_setAD_ConvertFlag 0070                                   main@uiCh13Value 0067  
                           ?_startTwelveHourTimer 0020                         calPulseWidth@ucPulseWidth 0061  
                    __size_of_startTwentyMinTimer 0013                            __size_of_timer1_config 000A  
                            _clearThreeHoursTimer 0575                      __end_of_startThreeHoursTimer 04FE  
                                       __ptext930 01DE                                         __ptext931 040C  
                                       __ptext940 04D8                                         __ptext932 0264  
                                       __ptext941 052F                                         __ptext933 048A  
                                       __ptext950 0456                                         __ptext942 04EB  
                                       __ptext934 0459                                         __ptext951 0441  
                                       __ptext943 053A                                         __ptext935 042C  
                                       __ptext960 047F                                         __ptext952 0583  
                                       __ptext944 04FE                                         __ptext936 0427  
                                       __ptext961 049B                                         __ptext953 0550  
                                       __ptext945 0570                                         __ptext937 0423  
                                       __ptext929 01E8                                         __ptext970 0392  
                                       __ptext962 0474                                         __ptext954 0562  
                                       __ptext946 0545                                         __ptext938 026F  
                                       __ptext971 0000                                         __ptext963 0492  
                                       __ptext955 0588                                         __ptext947 0586  
                                       __ptext939 0524                                         __ptext964 0463  
                                       __ptext956 057F                                         __ptext948 056A  
                                       __ptext965 0575                                         __ptext957 04C3  
                                       __ptext949 0511                                         __ptext966 057A  
                                       __ptext958 046F                                         __ptext967 0320  
                                       __ptext959 04A3                                         __ptext968 03EF  
                                       __ptext969 0387                                 main@cTimerP5s_790 00BB  
                               main@cTimerP5s_796 00BC                                          ?_adc_get 0070  
                 __end_of_isFinishedOneHoursTimer 052F                __end_of_isFinishedTwelveHoursTimer 0545  
                      _isFinishedTwelveHoursTimer 053A                                          ?_initPB3 0070  
                                        ?_initPB4 0070                                          ?_initPB5 0070  
                                 ISR@ucTimer1sCnt 00B2                                          ?_initPin 0070  
                      __end_of_startOneHoursTimer 04EB                  __end_of_initPB2_AsHighResistence 0474  
                       _uiSampleChannelFourteenth 01B8                                        ?_adc_start 0070  
                 __size_of_getAdOriginalCh12Value 000B                   __size_of_getAdOriginalCh13Value 000A  
                                  __size_of_reset FFF7                                 interrupt_function 0004  
                         calPulseWidth@ucGapValue 005E                   __end_of_timer1_interrupt_config 0586  
                           ?_clearThreeHoursTimer 0070                              adc_test_init@channel 0022  
             vPutSampleDataIntoTable@uiSampleData 0074                           calPulseWidth@uiGapValue 005A  
    vPutSampleDataIntoTable@ucChannelFourthLength 006D                       __size_of_isPermitSampleTime 0006  
                                       _pwm_start 04C3                                      _uiSmallTimer 00A4  
                           __end_of_adc_test_init 0456                           calPulseWidth@uiOldValue 0069  
                         calPulseWidth@uiNewValue 0062                                     _timer1_config 0550  
                    ??_process_AD_Converter_Value 0023                            ??_startTwelveHourTimer 0022  
                          _getAdOriginalCh12Value 0264                            _getAdOriginalCh13Value 01DE  
                             _clearTwentyMinTimer 0570                       startOneHoursTimer@uiSetTime 0020  
                                __size_of_adc_get 000B               __size_of_process_AD_Converter_Value 0017  
                                      ?_pwm_start 0070                          _isFinishedTwentyMinTimer 0545  
vPutSampleDataIntoTable@ucChannelFourteenthLength 006C                                  __size_of_initPB3 000C  
                                __size_of_initPB4 000B                                  __size_of_initPB5 000B  
                                __size_of_initPin 000A                                    Filter@tmpValue 0020  
                                  ?_timer1_config 0070                             __end_of_calPulseWidth 0264  
                            ?_clearTwentyMinTimer 0070                                       ??_adc_start 0020  
                            _startThreeHoursTimer 04EB                             _clearTwelveHoursTimer 057A  
                                  _uiOneHourTimer 00A2                                     __size_of_main 01CB  
                                        clear_ram 055A                            ??_clearThreeHoursTimer 0020  
               __size_of_initPB2_AsHighResistence 0005                         ?_initPB2_AsHighResistence 0070  
                          _bOneHourTimerStartFlag 00B5                                     ?_clrSampeTime 0070  
                             _startTwentyMinTimer 0511                                       _sampleTimes 00B8  
                           ??_clearTwentyMinTimer 0020                             ?_startThreeHoursTimer 0020  
                __size_of_vPutSampleDataIntoTable 005D                                          intlevel1 0000  
                    calPulseWidth@uiChannel2Value 005F                              ?_startTwentyMinTimer 0020  
                        __size_of_setPinInitVaule 0008                        ?_isFinishedThreeHoursTimer 0070  
                                   ?_clock_config 0070                          __size_of_selectAdChannel 0004  
                   startThreeHoursTimer@uiSetTime 0020                           i1setAD_ConvertFlag@flag 0070  
                                     ??_pwm_start 0020                                    ??_clrSampeTime 0020  
                     ?_isFinishedTwelveHoursTimer 0070                                _bBigTimerStartFlag 00B4  
                                 ??_timer1_config 0020                       __end_ofi1_setAD_ConvertFlag 03F3  
              __end_of_process_AD_Converter_Value 0423                        _process_AD_Converter_Value 040C  
                        ?_isFinishedOneHoursTimer 0070                            ?_clearTwelveHoursTimer 0070  
                                adc_test_init@ref 0020                             ??_startTwentyMinTimer 0022  
                              _startOneHoursTimer 04D8  
