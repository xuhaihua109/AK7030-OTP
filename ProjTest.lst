

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Wed Mar 27 19:37:30 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,delta=2
    14                           	psect	swtext1,local,class=CONST,delta=2
    15                           	psect	text488,local,class=CODE,delta=2
    16                           	psect	text494,local,class=CODE,delta=2
    17                           	psect	text495,local,class=CODE,delta=2
    18                           	psect	text496,local,class=CODE,delta=2
    19                           	psect	text497,local,class=CODE,delta=2
    20                           	psect	text498,local,class=CODE,delta=2
    21                           	psect	text499,local,class=CODE,delta=2
    22                           	psect	text500,local,class=CODE,delta=2
    23                           	psect	text501,local,class=CODE,delta=2
    24                           	psect	text502,local,class=CODE,delta=2
    25                           	psect	text503,local,class=CODE,delta=2
    26                           	psect	text505,local,class=CODE,delta=2
    27                           	psect	text506,local,class=CODE,delta=2
    28                           	psect	text507,local,class=CODE,delta=2
    29                           	psect	text508,local,class=CODE,delta=2
    30                           	psect	text509,local,class=CODE,delta=2
    31                           	psect	text510,local,class=CODE,delta=2
    32                           	psect	text511,local,class=CODE,delta=2
    33                           	psect	text512,local,class=CODE,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text515,local,class=CODE,delta=2
    36                           	psect	pa_nodes,global,class=CODE,delta=2
    37                           	dabs	1,0x7E,2
    38  000A                     	;#
    39                           
    40                           	psect	config
    41  2000  2FFF               	dw	12287	;#
    42  2001  3FDE               	dw	16350	;#
    43  2002  3FF8               	dw	16376	;#
    44                           
    45                           	psect	idataBANK0
    46  0000                     __pidataBANK0:	
    47  001F                     _ADCON0	set	31
    48  001E                     _ADRESH	set	30
    49  001B                     _OP1CON0	set	27
    50  001C                     _OP1CON1	set	28
    51  001D                     _OP1CON2	set	29
    52  0010                     _T1CON	set	16
    53  000F                     _TMR1H	set	15
    54  000E                     _TMR1L	set	14
    55  006A                     _ADIF	set	106
    56  00F8                     _ADON	set	248
    57  005F                     _GIE	set	95
    58  00F9                     _GO	set	249
    59  0028                     _PA0	set	40
    60  0029                     _PA1	set	41
    61  002A                     _PA2	set	42
    62  002B                     _PA3	set	43
    63  0032                     _PB2	set	50
    64  005E                     _PEIE	set	94
    65  0060                     _TMR1IF	set	96
    66  009F                     _ADCON1	set	159
    67  009E                     _ADRESL	set	158
    68  0087                     _DACCON	set	135
    69  0088                     _DACR0	set	136
    70  009B                     _OP2CON0	set	155
    71  009C                     _OP2CON1	set	156
    72  009D                     _OP2CON2	set	157
    73  046A                     _ADIE	set	1130
    74  0460                     _TMR1IE	set	1120
    75  0428                     _TRISA0	set	1064
    76  0429                     _TRISA1	set	1065
    77  042A                     _TRISA2	set	1066
    78  042B                     _TRISA3	set	1067
    79  042E                     _TRISA6	set	1070
    80  042F                     _TRISA7	set	1071
    81  0430                     _TRISB0	set	1072
    82  0431                     _TRISB1	set	1073
    83  0432                     _TRISB2	set	1074
    84  0433                     _TRISB3	set	1075
    85  0434                     _TRISB4	set	1076
    86  0435                     _TRISB5	set	1077
    87  0436                     _TRISB6	set	1078
    88  0437                     _TRISB7	set	1079
    89  0108                     _CLKPR	set	264
    90  0847                     _CLKPCE	set	2119
    91                           
    92                           	psect	cinit
    93  01F9                     start_initialization:	
    94  01F9  3020               	movlw	low __pbssBANK0
    95                           
    96                           ; Clear objects allocated to COMMON
    97  01FA  01F6               	clrf	__pbssCOMMON& (0+127)
    98  01FB  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
    99  01FC  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   100  01FD  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   101  01FE  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   102                           
   103                           ; Clear objects allocated to BANK0
   104  01FF  1383               	bcf	3,7	;select IRP bank0
   105  0200  0084               	movwf	4
   106  0201  3041               	movlw	low (__pbssBANK0+33)
   107  0202  118A  2228         	fcall	clear_ram
   108                           
   109                           ;initializer for _sampleChannelSelect
   110  0204  300D               	movlw	13
   111  0205  00C6               	movwf	__pdataBANK0& (0+127)
   112  0206                     end_of_initialization:	
   113                           ;End of C runtime variable initialization code
   114                           
   115  0206  0183               	clrf	3
   116  0207  118A  280D         	ljmp	_main	;jump to C main() function
   117                           
   118                           	psect	bssCOMMON
   119  0076                     __pbssCOMMON:	
   120  0076                     _uiBigTimer:	
   121  0076                     	ds	2
   122  0078                     ISR@ucTimer1sCnt:	
   123  0078                     	ds	1
   124  0079                     _adc_convert_flag:	
   125  0079                     	ds	1
   126  007A                     _timer:	
   127  007A                     	ds	1
   128                           
   129                           	psect	bssBANK0
   130  0020                     __pbssBANK0:	
   131  0020                     _buffer_Sample_AD_Value:	
   132  0020                     	ds	12
   133  002C                     _adc_original_CH12_value:	
   134  002C                     	ds	2
   135  002E                     _adc_original_CH13_value:	
   136  002E                     	ds	2
   137  0030                     _adc_original_value:	
   138  0030                     	ds	2
   139  0032                     _multiFilterMaxValue:	
   140  0032                     	ds	2
   141  0034                     _multiFilterMinValue:	
   142  0034                     	ds	2
   143  0036                     _uiSmallTimer:	
   144  0036                     	ds	2
   145  0038                     _sampleTimes:	
   146  0038                     	ds	1
   147  0039                     main@ampStep:	
   148  0039                     	ds	1
   149  003A                     main@tDA_timer:	
   150  003A                     	ds	1
   151  003B                     main@ucBigTimerActionFlag:	
   152  003B                     	ds	1
   153  003C                     main@ucCheckBatteryCnt:	
   154  003C                     	ds	1
   155  003D                     main@ucConfirmTimer1S:	
   156  003D                     	ds	1
   157  003E                     main@ucConfirmTimerZptS:	
   158  003E                     	ds	1
   159  003F                     main@ucInit:	
   160  003F                     	ds	1
   161  0040                     main@ucInstalledBatteryCnt:	
   162  0040                     	ds	1
   163                           
   164                           	psect	dataBANK0
   165  0046                     __pdataBANK0:	
   166  0046                     _sampleChannelSelect:	
   167  0046                     	ds	1
   168                           
   169                           	psect	clrtext
   170  0228                     clear_ram:	
   171                           ;	Called with FSR containing the base address, and
   172                           ;	W with the last address+1
   173                           
   174  0228  0064               	clrwdt	;clear the watchdog before getting into this loop
   175  0229                     clrloop:	
   176  0229  0180               	clrf	0	;clear RAM location pointed to by FSR
   177  022A  0A84               	incf	4,f	;increment pointer
   178  022B  0604               	xorwf	4,w	;XOR with final address
   179  022C  1903               	btfsc	3,2	;have we reached the end yet?
   180  022D  3400               	retlw	0	;all done for this memory range, return
   181  022E  0604               	xorwf	4,w	;XOR again to restore value
   182  022F  2A29               	goto	clrloop	;do the next byte
   183                           
   184                           	psect	cstackCOMMON
   185  0070                     __pcstackCOMMON:	
   186  0070                     ?_clock_config:	
   187  0070                     ?_timer1_config:	
   188                           ; 0 bytes @ 0x0
   189                           
   190  0070                     ?_timer1_interrupt_config:	
   191                           ; 0 bytes @ 0x0
   192                           
   193  0070                     ?_dac_init:	
   194                           ; 0 bytes @ 0x0
   195                           
   196  0070                     ?_op1_init:	
   197                           ; 0 bytes @ 0x0
   198                           
   199  0070                     ?_op2_init:	
   200                           ; 0 bytes @ 0x0
   201                           
   202  0070                     ?_adc_start:	
   203                           ; 0 bytes @ 0x0
   204                           
   205  0070                     ?_clrSampeTime:	
   206                           ; 0 bytes @ 0x0
   207                           
   208  0070                     ?_process_AD_Converter_Value:	
   209                           ; 0 bytes @ 0x0
   210                           
   211  0070                     ?_clearBigTimer:	
   212                           ; 0 bytes @ 0x0
   213                           
   214  0070                     ?_clearSmallTimer:	
   215                           ; 0 bytes @ 0x0
   216                           
   217  0070                     ?_startBigTimer:	
   218                           ; 0 bytes @ 0x0
   219                           
   220  0070                     ?_startSmallTimer:	
   221                           ; 0 bytes @ 0x0
   222                           
   223  0070                     ?_AD_Sample:	
   224                           ; 0 bytes @ 0x0
   225                           
   226  0070                     ?_setAdcSampleChannel:	
   227                           ; 0 bytes @ 0x0
   228                           
   229  0070                     ?_main:	
   230                           ; 0 bytes @ 0x0
   231                           
   232  0070                     ?_setAD_ConvertFlag:	
   233                           ; 0 bytes @ 0x0
   234                           
   235  0070                     ?_ISR:	
   236                           ; 0 bytes @ 0x0
   237                           
   238  0070                     ?i1_setAD_ConvertFlag:	
   239                           ; 0 bytes @ 0x0
   240                           
   241  0070                     ??i1_setAD_ConvertFlag:	
   242                           ; 0 bytes @ 0x0
   243                           
   244  0070                     ?_isPermitSampleTime:	
   245                           ; 0 bytes @ 0x0
   246                           
   247  0070                     ?_isFinishedBigTimer:	
   248                           ; 1 bytes @ 0x0
   249                           
   250  0070                     ?_isFinishedSmallTimer:	
   251                           ; 1 bytes @ 0x0
   252                           
   253  0070                     ?_getAD_ConvertFlag:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  0070                     ?_adc_get:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0070                     i1setAD_ConvertFlag@flag:	
   260                           ; 2 bytes @ 0x0
   261                           
   262                           
   263                           ; 1 bytes @ 0x0
   264  0070                     	ds	2
   265  0072                     ??_adc_get:	
   266  0072                     adc_get@val:	
   267                           ; 0 bytes @ 0x2
   268                           
   269                           
   270                           ; 2 bytes @ 0x2
   271  0072                     	ds	2
   272  0074                     ??_ISR:	
   273                           
   274                           ; 0 bytes @ 0x4
   275  0074                     	ds	2
   276                           
   277                           	psect	cstackBANK0
   278  0041                     __pcstackBANK0:	
   279  0041                     ??_clock_config:	
   280  0041                     ??_timer1_config:	
   281                           ; 0 bytes @ 0x0
   282                           
   283  0041                     ??_timer1_interrupt_config:	
   284                           ; 0 bytes @ 0x0
   285                           
   286  0041                     ?_adc_test_init:	
   287                           ; 0 bytes @ 0x0
   288                           
   289  0041                     ??_dac_init:	
   290                           ; 0 bytes @ 0x0
   291                           
   292  0041                     ??_op1_init:	
   293                           ; 0 bytes @ 0x0
   294                           
   295  0041                     ??_op2_init:	
   296                           ; 0 bytes @ 0x0
   297                           
   298  0041                     ??_adc_start:	
   299                           ; 0 bytes @ 0x0
   300                           
   301  0041                     ??_isPermitSampleTime:	
   302                           ; 0 bytes @ 0x0
   303                           
   304  0041                     ??_clrSampeTime:	
   305                           ; 0 bytes @ 0x0
   306                           
   307  0041                     ??_clearBigTimer:	
   308                           ; 0 bytes @ 0x0
   309                           
   310  0041                     ??_clearSmallTimer:	
   311                           ; 0 bytes @ 0x0
   312                           
   313  0041                     ??_startBigTimer:	
   314                           ; 0 bytes @ 0x0
   315                           
   316  0041                     ??_startSmallTimer:	
   317                           ; 0 bytes @ 0x0
   318                           
   319  0041                     ??_isFinishedBigTimer:	
   320                           ; 0 bytes @ 0x0
   321                           
   322  0041                     ??_isFinishedSmallTimer:	
   323                           ; 0 bytes @ 0x0
   324                           
   325  0041                     ??_setAdcSampleChannel:	
   326                           ; 0 bytes @ 0x0
   327                           
   328  0041                     ??_getAD_ConvertFlag:	
   329                           ; 0 bytes @ 0x0
   330                           
   331  0041                     ??_setAD_ConvertFlag:	
   332                           ; 0 bytes @ 0x0
   333                           
   334  0041                     ?_getAdOriginalCh12Value:	
   335                           ; 0 bytes @ 0x0
   336                           
   337  0041                     ?_getAdOriginalCh13Value:	
   338                           ; 2 bytes @ 0x0
   339                           
   340  0041                     ?_getAdOriginalValue:	
   341                           ; 2 bytes @ 0x0
   342                           
   343  0041                     setAD_ConvertFlag@flag:	
   344                           ; 2 bytes @ 0x0
   345                           
   346  0041                     adc_test_init@ref:	
   347                           ; 1 bytes @ 0x0
   348                           
   349                           
   350                           ; 1 bytes @ 0x0
   351  0041                     	ds	1
   352  0042                     ??_adc_test_init:	
   353  0042                     setAdcSampleChannel@ucChannel:	
   354                           ; 0 bytes @ 0x1
   355                           
   356                           
   357                           ; 1 bytes @ 0x1
   358  0042                     	ds	1
   359  0043                     ??_getAdOriginalCh12Value:	
   360  0043                     ??_getAdOriginalCh13Value:	
   361                           ; 0 bytes @ 0x2
   362                           
   363  0043                     ??_AD_Sample:	
   364                           ; 0 bytes @ 0x2
   365                           
   366  0043                     ??_getAdOriginalValue:	
   367                           ; 0 bytes @ 0x2
   368                           
   369  0043                     adc_test_init@channel:	
   370                           ; 0 bytes @ 0x2
   371                           
   372                           
   373                           ; 1 bytes @ 0x2
   374  0043                     	ds	2
   375  0045                     AD_Sample@index:	
   376                           
   377                           ; 1 bytes @ 0x4
   378  0045                     	ds	1
   379  0046                     ??_process_AD_Converter_Value:	
   380  0046                     ??_main:	
   381                           ; 0 bytes @ 0x5
   382                           
   383                           
   384                           	psect	maintext
   385  000D                     __pmaintext:	
   386                           ; 0 bytes @ 0x5
   387 ;;Data sizes: Strings 0, constant 0, data 1, bss 38, persistent 0 stack 0
   388 ;;Auto spaces:   Size  Autos    Used
   389 ;; COMMON          14      6      11
   390 ;; BANK0           80      5      39
   391 ;; BANK1           80      0       0
   392 ;; BANK3           96      0       0
   393 ;; BANK2           96      0       0
   394 ;;
   395 ;; Pointer list with targets:
   396 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   397 ;;
   398 ;; ?_getAdOriginalCh13Value	unsigned int  size(1) Largest target is 0
   399 ;;
   400 ;; ?_getAdOriginalCh12Value	unsigned int  size(1) Largest target is 0
   401 ;;
   402 ;; ?_getAdOriginalValue	unsigned int  size(1) Largest target is 0
   403 ;;
   404 ;;
   405 ;; Critical Paths under _main in COMMON
   406 ;;
   407 ;;   None.
   408 ;;
   409 ;; Critical Paths under _ISR in COMMON
   410 ;;
   411 ;;   _ISR->_adc_get
   412 ;;
   413 ;; Critical Paths under _main in BANK0
   414 ;;
   415 ;;   _process_AD_Converter_Value->_AD_Sample
   416 ;;   _AD_Sample->_getAdOriginalValue
   417 ;;
   418 ;; Critical Paths under _ISR in BANK0
   419 ;;
   420 ;;   None.
   421 ;;
   422 ;; Critical Paths under _main in BANK1
   423 ;;
   424 ;;   None.
   425 ;;
   426 ;; Critical Paths under _ISR in BANK1
   427 ;;
   428 ;;   None.
   429 ;;
   430 ;; Critical Paths under _main in BANK3
   431 ;;
   432 ;;   None.
   433 ;;
   434 ;; Critical Paths under _ISR in BANK3
   435 ;;
   436 ;;   None.
   437 ;;
   438 ;; Critical Paths under _main in BANK2
   439 ;;
   440 ;;   None.
   441 ;;
   442 ;; Critical Paths under _ISR in BANK2
   443 ;;
   444 ;;   None.
   445 ;;
   446 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   447 ;;
   448 ;;
   449 ;;Call Graph Tables:
   450 ;;
   451 ;; ---------------------------------------------------------------------------------
   452 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   453 ;; ---------------------------------------------------------------------------------
   454 ;; (0) _main                                                 0     0      0     156
   455 ;;                       _clock_config
   456 ;;                      _timer1_config
   457 ;;            _timer1_interrupt_config
   458 ;;                      _adc_test_init
   459 ;;                           _dac_init
   460 ;;                           _op1_init
   461 ;;                           _op2_init
   462 ;;                          _adc_start
   463 ;;                 _isPermitSampleTime
   464 ;;                       _clrSampeTime
   465 ;;         _process_AD_Converter_Value
   466 ;;                      _clearBigTimer
   467 ;;                    _clearSmallTimer
   468 ;;             _getAdOriginalCh12Value
   469 ;;             _getAdOriginalCh13Value
   470 ;;                      _startBigTimer
   471 ;;                    _startSmallTimer
   472 ;;                 _isFinishedBigTimer
   473 ;;               _isFinishedSmallTimer
   474 ;; ---------------------------------------------------------------------------------
   475 ;; (1) _process_AD_Converter_Value                           0     0      0     112
   476 ;;                  _getAD_ConvertFlag
   477 ;;                  _setAD_ConvertFlag
   478 ;;                          _AD_Sample
   479 ;;                _setAdcSampleChannel
   480 ;;                          _adc_start
   481 ;; ---------------------------------------------------------------------------------
   482 ;; (2) _AD_Sample                                            3     3      0      68
   483 ;;                                              2 BANK0      3     3      0
   484 ;;                 _getAdOriginalValue
   485 ;; ---------------------------------------------------------------------------------
   486 ;; (2) _setAdcSampleChannel                                  2     2      0      22
   487 ;;                                              0 BANK0      2     2      0
   488 ;; ---------------------------------------------------------------------------------
   489 ;; (3) _getAdOriginalValue                                   2     0      2       0
   490 ;;                                              0 BANK0      2     0      2
   491 ;; ---------------------------------------------------------------------------------
   492 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   493 ;;                                              0 BANK0      1     1      0
   494 ;; ---------------------------------------------------------------------------------
   495 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   496 ;; ---------------------------------------------------------------------------------
   497 ;; (1) _isFinishedSmallTimer                                 0     0      0       0
   498 ;; ---------------------------------------------------------------------------------
   499 ;; (1) _isFinishedBigTimer                                   0     0      0       0
   500 ;; ---------------------------------------------------------------------------------
   501 ;; (1) _startSmallTimer                                      0     0      0       0
   502 ;; ---------------------------------------------------------------------------------
   503 ;; (1) _startBigTimer                                        0     0      0       0
   504 ;; ---------------------------------------------------------------------------------
   505 ;; (1) _getAdOriginalCh13Value                               2     0      2       0
   506 ;;                                              0 BANK0      2     0      2
   507 ;; ---------------------------------------------------------------------------------
   508 ;; (1) _getAdOriginalCh12Value                               2     0      2       0
   509 ;;                                              0 BANK0      2     0      2
   510 ;; ---------------------------------------------------------------------------------
   511 ;; (1) _clearSmallTimer                                      0     0      0       0
   512 ;; ---------------------------------------------------------------------------------
   513 ;; (1) _clearBigTimer                                        0     0      0       0
   514 ;; ---------------------------------------------------------------------------------
   515 ;; (1) _clrSampeTime                                         0     0      0       0
   516 ;; ---------------------------------------------------------------------------------
   517 ;; (1) _isPermitSampleTime                                   0     0      0       0
   518 ;; ---------------------------------------------------------------------------------
   519 ;; (2) _adc_start                                            0     0      0       0
   520 ;; ---------------------------------------------------------------------------------
   521 ;; (1) _op2_init                                             0     0      0       0
   522 ;; ---------------------------------------------------------------------------------
   523 ;; (1) _op1_init                                             0     0      0       0
   524 ;; ---------------------------------------------------------------------------------
   525 ;; (1) _dac_init                                             0     0      0       0
   526 ;; ---------------------------------------------------------------------------------
   527 ;; (1) _adc_test_init                                        3     2      1      44
   528 ;;                                              0 BANK0      3     2      1
   529 ;; ---------------------------------------------------------------------------------
   530 ;; (1) _timer1_interrupt_config                              0     0      0       0
   531 ;; ---------------------------------------------------------------------------------
   532 ;; (1) _timer1_config                                        0     0      0       0
   533 ;; ---------------------------------------------------------------------------------
   534 ;; (1) _clock_config                                         0     0      0       0
   535 ;; ---------------------------------------------------------------------------------
   536 ;; Estimated maximum stack depth 3
   537 ;; ---------------------------------------------------------------------------------
   538 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   539 ;; ---------------------------------------------------------------------------------
   540 ;; (4) _ISR                                                  2     2      0      97
   541 ;;                                              4 COMMON     2     2      0
   542 ;;                i1_setAD_ConvertFlag
   543 ;;                            _adc_get
   544 ;; ---------------------------------------------------------------------------------
   545 ;; (5) i1_setAD_ConvertFlag                                  1     1      0      73
   546 ;;                                              0 COMMON     1     1      0
   547 ;; ---------------------------------------------------------------------------------
   548 ;; (5) _adc_get                                              4     2      2      24
   549 ;;                                              0 COMMON     4     2      2
   550 ;; ---------------------------------------------------------------------------------
   551 ;; Estimated maximum stack depth 5
   552 ;; ---------------------------------------------------------------------------------
   553 ;; Call Graph Graphs:
   554 ;; _main (ROOT)
   555 ;;   _clock_config
   556 ;;   _timer1_config
   557 ;;   _timer1_interrupt_config
   558 ;;   _adc_test_init
   559 ;;   _dac_init
   560 ;;   _op1_init
   561 ;;   _op2_init
   562 ;;   _adc_start
   563 ;;   _isPermitSampleTime
   564 ;;   _clrSampeTime
   565 ;;   _process_AD_Converter_Value
   566 ;;     _getAD_ConvertFlag
   567 ;;     _setAD_ConvertFlag
   568 ;;     _AD_Sample
   569 ;;       _getAdOriginalValue
   570 ;;     _setAdcSampleChannel
   571 ;;     _adc_start
   572 ;;   _clearBigTimer
   573 ;;   _clearSmallTimer
   574 ;;   _getAdOriginalCh12Value
   575 ;;   _getAdOriginalCh13Value
   576 ;;   _startBigTimer
   577 ;;   _startSmallTimer
   578 ;;   _isFinishedBigTimer
   579 ;;   _isFinishedSmallTimer
   580 ;;
   581 ;; _ISR (ROOT)
   582 ;;   i1_setAD_ConvertFlag
   583 ;;   _adc_get
   584 ;;
   585 ;; Address spaces:
   586 ;;Name               Size   Autos  Total    Cost      Usage
   587 ;;BANK3               60      0       0      10        0.0%
   588 ;;BITBANK3            60      0       0       9        0.0%
   589 ;;SFR3                 0      0       0       4        0.0%
   590 ;;BITSFR3              0      0       0       4        0.0%
   591 ;;BANK2               60      0       0      12        0.0%
   592 ;;BITBANK2            60      0       0      11        0.0%
   593 ;;SFR2                 0      0       0       5        0.0%
   594 ;;BITSFR2              0      0       0       5        0.0%
   595 ;;SFR1                 0      0       0       2        0.0%
   596 ;;BITSFR1              0      0       0       2        0.0%
   597 ;;BANK1               50      0       0       8        0.0%
   598 ;;BITBANK1            50      0       0       7        0.0%
   599 ;;CODE                 0      0       0       0        0.0%
   600 ;;DATA                 0      0      39       6        0.0%
   601 ;;ABS                  0      0      32       3        0.0%
   602 ;;NULL                 0      0       0       0        0.0%
   603 ;;STACK                0      0       7       2        0.0%
   604 ;;BANK0               50      5      27       5       48.8%
   605 ;;BITBANK0            50      0       0       4        0.0%
   606 ;;SFR0                 0      0       0       1        0.0%
   607 ;;BITSFR0              0      0       0       1        0.0%
   608 ;;COMMON               E      6       B       1       78.6%
   609 ;;BITCOMMON            E      0       0       0        0.0%
   610                           
   611                           
   612 ;; *************** function _main *****************
   613 ;; Defined at:
   614 ;;		line 84 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\main.c"
   615 ;; Parameters:    Size  Location     Type
   616 ;;		None
   617 ;; Auto vars:     Size  Location     Type
   618 ;;		None
   619 ;; Return value:  Size  Location     Type
   620 ;;		None               void
   621 ;; Registers used:
   622 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   623 ;; Tracked objects:
   624 ;;		On entry : 17F/0
   625 ;;		On exit  : 60/0
   626 ;;		Unchanged: FFE00/0
   627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   628 ;;      Params:         0       0       0       0       0
   629 ;;      Locals:         0       0       0       0       0
   630 ;;      Temps:          0       0       0       0       0
   631 ;;      Totals:         0       0       0       0       0
   632 ;;Total ram usage:        0 bytes
   633 ;; Hardware stack levels required when called:    5
   634 ;; This function calls:
   635 ;;		_clock_config
   636 ;;		_timer1_config
   637 ;;		_timer1_interrupt_config
   638 ;;		_adc_test_init
   639 ;;		_dac_init
   640 ;;		_op1_init
   641 ;;		_op2_init
   642 ;;		_adc_start
   643 ;;		_isPermitSampleTime
   644 ;;		_clrSampeTime
   645 ;;		_process_AD_Converter_Value
   646 ;;		_clearBigTimer
   647 ;;		_clearSmallTimer
   648 ;;		_getAdOriginalCh12Value
   649 ;;		_getAdOriginalCh13Value
   650 ;;		_startBigTimer
   651 ;;		_startSmallTimer
   652 ;;		_isFinishedBigTimer
   653 ;;		_isFinishedSmallTimer
   654 ;; This function is called by:
   655 ;;		Startup code after reset
   656 ;; This function uses a non-reentrant model
   657 ;;
   658  000D                     _main:	
   659                           
   660                           ;main.c: 85: enum step
   661                           ;main.c: 86: {
   662                           ;main.c: 87: SENSE_PB2_INPUT_VOLTAGE = 0,
   663                           ;main.c: 88: SENSE_PB2_DURATION_ONE_SECOND,
   664                           ;main.c: 89: SENSE_PB2_INPUT_VOLTAGE__AGAIN,
   665                           ;main.c: 90: SENSE_PB2_DURATION__SECOND,
   666                           ;main.c: 91: SET_PA2_VALUE,
   667                           ;main.c: 92: ADC1_VALUE_MEET_CONDITION,
   668                           ;main.c: 93: PROCESS_AD_VALUE,
   669                           ;main.c: 94: WAIT_SET_TIME_FINISHED,
   670                           ;main.c: 95: SET_TIME_BE_FINISHED,
   671                           ;main.c: 96: CHECKING_PULL_OUT_BATTERY,
   672                           ;main.c: 97: CHECKING_INSTALLED_BATTERY,
   673                           ;main.c: 98: };
   674                           ;main.c: 100: enum workTimerType
   675                           ;main.c: 101: {
   676                           
   677                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   678  000D  1683               	bsf	3,5	;RP0=1, select bank1
   679  000E  1005               	bcf	5,0
   680                           
   681                           ;main.c: 119: TRISA1 = 0;
   682  000F  1085               	bcf	5,1
   683                           
   684                           ;main.c: 120: TRISA3 = 0;
   685  0010  1185               	bcf	5,3
   686                           
   687                           ;main.c: 121: TRISA2 = 0;
   688  0011  1105               	bcf	5,2
   689                           
   690                           ;main.c: 122: TRISA6 = 0;
   691  0012  1305               	bcf	5,6
   692                           
   693                           ;main.c: 123: PA2 = 1;
   694  0013  1283               	bcf	3,5	;RP0=0, select bank0
   695  0014  1505               	bsf	5,2
   696                           
   697                           ;main.c: 124: PA0 = 1;
   698  0015  1405               	bsf	5,0
   699                           
   700                           ;main.c: 126: TRISB2 = 1;
   701  0016  1683               	bsf	3,5	;RP0=1, select bank1
   702  0017  1506               	bsf	6,2
   703                           
   704                           ;main.c: 128: TRISB1 = 1;
   705  0018  1486               	bsf	6,1
   706                           
   707                           ;main.c: 129: TRISB0 = 1;
   708  0019  1406               	bsf	6,0
   709                           
   710                           ;main.c: 131: clock_config();
   711  001A  118A  2230  118A   	fcall	_clock_config
   712                           
   713                           ;main.c: 132: timer1_config();
   714  001D  118A  2215  118A   	fcall	_timer1_config
   715                           
   716                           ;main.c: 133: timer1_interrupt_config();
   717  0020  118A  2266  118A   	fcall	_timer1_interrupt_config
   718                           
   719                           ;main.c: 135: adc_test_init(13,3);
   720  0023  3003               	movlw	3
   721  0024  1283               	bcf	3,5	;RP0=0, select bank0
   722  0025  00C1               	movwf	?_adc_test_init
   723  0026  300D               	movlw	13
   724  0027  118A  21E5  118A   	fcall	_adc_test_init
   725                           
   726                           ;main.c: 137: dac_init();
   727  002A  118A  225B  118A   	fcall	_dac_init
   728                           
   729                           ;main.c: 138: op1_init();
   730  002D  118A  2209  118A   	fcall	_op1_init
   731                           
   732                           ;main.c: 139: op2_init();
   733  0030  118A  221F  118A   	fcall	_op2_init
   734                           
   735                           ;main.c: 142: adc_start();
   736  0033  118A  2168  118A   	fcall	_adc_start
   737                           
   738                           ;main.c: 155: switch(ampStep)
   739  0036  28D6               	goto	l3119
   740  0037                     l3127:	
   741                           
   742                           ;main.c: 158: {
   743                           ;main.c: 159: ucBigTimerActionFlag = 0;
   744  0037  01BB               	clrf	main@ucBigTimerActionFlag
   745                           
   746                           ;main.c: 160: clearBigTimer();
   747  0038  118A  2263  118A   	fcall	_clearBigTimer
   748                           
   749                           ;main.c: 161: clearSmallTimer();
   750  003B  118A  2260  118A   	fcall	_clearSmallTimer
   751  003E                     L1:	
   752                           
   753                           ;main.c: 162: if(!PB2)
   754  003E  1906               	btfsc	6,2
   755  003F  28D6               	goto	l3119
   756  0040                     l3135:	
   757                           
   758                           ;main.c: 163: ampStep++;
   759  0040  0AB9               	incf	main@ampStep,f
   760  0041  28D6               	goto	l3119
   761  0042                     l685:	
   762                           ;main.c: 165: }
   763                           ;main.c: 167: case SENSE_PB2_DURATION_ONE_SECOND:
   764                           
   765                           
   766                           ;main.c: 168: {
   767                           ;main.c: 169: static unsigned char ucConfirmTimer1S = 0;
   768                           ;main.c: 170: if(!PB2)
   769  0042  1906               	btfsc	6,2
   770  0043  2846               	goto	l3139
   771                           
   772                           ;main.c: 171: {
   773                           ;main.c: 172: ucConfirmTimer1S++;
   774  0044  0ABD               	incf	main@ucConfirmTimer1S,f
   775                           
   776                           ;main.c: 173: }
   777  0045  2847               	goto	l3141
   778  0046                     l3139:	
   779                           
   780                           ;main.c: 174: else
   781                           ;main.c: 175: {
   782                           ;main.c: 176: ucConfirmTimer1S = 0;
   783  0046  01BD               	clrf	main@ucConfirmTimer1S
   784  0047                     l3141:	
   785                           
   786                           ;main.c: 177: }
   787                           ;main.c: 179: if(ucConfirmTimer1S >= 10)
   788  0047  300A               	movlw	10
   789  0048  023D               	subwf	main@ucConfirmTimer1S,w
   790  0049  1C03               	skipc
   791  004A  28D6               	goto	l3119
   792                           
   793                           ;main.c: 180: {
   794                           ;main.c: 181: ucConfirmTimer1S = 0;
   795  004B  01BD               	clrf	main@ucConfirmTimer1S
   796  004C  2840               	goto	l3135
   797  004D                     l691:	
   798                           ;main.c: 186: }
   799                           ;main.c: 188: case SENSE_PB2_INPUT_VOLTAGE__AGAIN:
   800                           
   801                           
   802                           ;main.c: 189: {
   803                           ;main.c: 190: if(!PB2)
   804  004D  283E               	goto	L1
   805  004E                     l693:	
   806                           ;main.c: 193: }
   807                           ;main.c: 195: case SENSE_PB2_DURATION__SECOND:
   808                           
   809                           
   810                           ;main.c: 196: {
   811                           ;main.c: 197: static unsigned char ucConfirmTimerZptS = 0;
   812                           ;main.c: 198: if(!PB2)
   813  004E  1906               	btfsc	6,2
   814  004F  2852               	goto	l3151
   815                           
   816                           ;main.c: 199: {
   817                           ;main.c: 200: ucConfirmTimerZptS++;
   818  0050  0ABE               	incf	main@ucConfirmTimerZptS,f
   819                           
   820                           ;main.c: 201: }
   821  0051  2853               	goto	l3153
   822  0052                     l3151:	
   823                           
   824                           ;main.c: 202: else
   825                           ;main.c: 203: {
   826                           ;main.c: 204: ucConfirmTimerZptS = 0;
   827  0052  01BE               	clrf	main@ucConfirmTimerZptS
   828  0053                     l3153:	
   829                           
   830                           ;main.c: 205: }
   831                           ;main.c: 207: if(ucConfirmTimerZptS >= 10)
   832  0053  300A               	movlw	10
   833  0054  023E               	subwf	main@ucConfirmTimerZptS,w
   834  0055  1C03               	skipc
   835  0056  28D6               	goto	l3119
   836                           
   837                           ;main.c: 208: {
   838                           ;main.c: 209: ucConfirmTimerZptS = 0;
   839  0057  01BE               	clrf	main@ucConfirmTimerZptS
   840  0058  2840               	goto	l3135
   841  0059                     l699:	
   842                           ;main.c: 214: }
   843                           ;main.c: 216: case SET_PA2_VALUE:
   844                           
   845                           
   846                           ;main.c: 217: {
   847                           ;main.c: 218: PA2 = 0;
   848  0059  1105               	bcf	5,2
   849  005A  2840               	goto	l3135
   850  005B                     l3161:	
   851                           
   852                           ;main.c: 227: ucConFirmationTime++;
   853  005B  118A  2251  118A   	fcall	_getAdOriginalCh12Value
   854  005E  28D6               	goto	l3119
   855  005F                     l3165:	
   856                           
   857                           ;main.c: 234: {
   858                           ;main.c: 235: static unsigned char ucInit = 0;
   859                           ;main.c: 236: if(getAdOriginalCh13Value() > 36)
   860  005F  118A  224C  118A   	fcall	_getAdOriginalCh13Value
   861  0062  3000               	movlw	0
   862  0063  0242               	subwf	?_getAdOriginalCh13Value+1,w
   863  0064  3025               	movlw	37
   864  0065  1903               	skipnz
   865  0066  0241               	subwf	?_getAdOriginalCh13Value,w
   866  0067  1C03               	skipc
   867  0068  2878               	goto	l3177
   868  0069                     L3:	
   869                           
   870                           ;main.c: 237: {
   871                           ;main.c: 238: ucInit = 1;
   872  0069  01BF               	clrf	main@ucInit
   873  006A  0ABF               	incf	main@ucInit,f
   874                           
   875                           ;main.c: 239: PA0 = 0;
   876  006B  1005               	bcf	5,0
   877                           
   878                           ;main.c: 240: PA1 = 1;
   879  006C  1485               	bsf	5,1
   880                           
   881                           ;main.c: 241: PA3 = 1;
   882  006D  1585               	bsf	5,3
   883                           
   884                           ;main.c: 242: tDA_timer = BIG_TIMER_WORK;
   885  006E  01BA               	clrf	main@tDA_timer
   886                           
   887                           ;main.c: 244: if(!ucBigTimerActionFlag)
   888  006F  08BB               	movf	main@ucBigTimerActionFlag,f
   889  0070  1D03               	skipz
   890  0071  2840               	goto	l3135
   891                           
   892                           ;main.c: 245: {
   893                           ;main.c: 246: startBigTimer();
   894  0072  118A  2247  118A   	fcall	_startBigTimer
   895                           
   896                           ;main.c: 247: ucBigTimerActionFlag = 1;
   897  0075  01BB               	clrf	main@ucBigTimerActionFlag
   898  0076  0ABB               	incf	main@ucBigTimerActionFlag,f
   899  0077  2840               	goto	l3135
   900  0078                     l3177:	
   901                           
   902                           ;main.c: 250: else if(getAdOriginalCh13Value() <31)
   903  0078  118A  224C  118A   	fcall	_getAdOriginalCh13Value
   904  007B  3000               	movlw	0
   905  007C  0242               	subwf	?_getAdOriginalCh13Value+1,w
   906  007D  301F               	movlw	31
   907  007E  1903               	skipnz
   908  007F  0241               	subwf	?_getAdOriginalCh13Value,w
   909  0080  1803               	skipnc
   910  0081  288D               	goto	l3183
   911                           
   912                           ;main.c: 251: {
   913                           ;main.c: 252: ucInit = 1;
   914  0082  01BF               	clrf	main@ucInit
   915  0083  0ABF               	incf	main@ucInit,f
   916                           
   917                           ;main.c: 253: PA0 = 1;
   918  0084  1405               	bsf	5,0
   919                           
   920                           ;main.c: 254: PA1 = 0;
   921  0085  1085               	bcf	5,1
   922                           
   923                           ;main.c: 255: PA3 = 0;
   924  0086  1185               	bcf	5,3
   925                           
   926                           ;main.c: 259: ucSetSmallActionFlag = 1;
   927  0087  01BA               	clrf	main@tDA_timer
   928  0088  0ABA               	incf	main@tDA_timer,f
   929                           
   930                           ;main.c: 261: startSmallTimer();
   931  0089  118A  2242  118A   	fcall	_startSmallTimer
   932                           
   933                           ;main.c: 262: }
   934  008C  2840               	goto	l3135
   935  008D                     l3183:	
   936                           
   937                           ;main.c: 263: else
   938                           ;main.c: 264: {
   939                           ;main.c: 265: if(!ucInit)
   940  008D  08BF               	movf	main@ucInit,f
   941  008E  1D03               	skipz
   942  008F  2840               	goto	l3135
   943  0090  2869               	goto	L3
   944  0091                     l3197:	
   945                           ;main.c: 273: if(!ucBigTimerActionFlag)
   946                           
   947                           ;main.c: 271: tDA_timer = BIG_TIMER_WORK;
   948                           
   949                           ;main.c: 270: PA3 = 1;
   950                           
   951                           ;main.c: 269: PA1 = 1;
   952                           
   953                           ;main.c: 268: PA0 = 0;
   954                           
   955                           ;main.c: 266: {
   956                           ;main.c: 267: ucInit = 1;
   957                           
   958                           
   959                           ;main.c: 291: {
   960                           ;main.c: 292: if(!isFinishedBigTimer())
   961  0091  118A  223D  118A   	fcall	_isFinishedBigTimer
   962  0094  3800               	iorlw	0
   963  0095  1D03               	skipz
   964  0096  2840               	goto	l3135
   965  0097                     l3199:	
   966                           
   967                           ;main.c: 293: {
   968                           ;main.c: 294: ampStep = ADC1_VALUE_MEET_CONDITION;
   969  0097  3005               	movlw	5
   970  0098  00B9               	movwf	main@ampStep
   971                           
   972                           ;main.c: 295: }
   973  0099  28D6               	goto	l3119
   974  009A                     l3203:	
   975                           
   976                           ;main.c: 304: {
   977                           ;main.c: 305: if((ucBigTimerActionFlag == 1) && isFinishedBigTimer())
   978  009A  0B3B               	decfsz	main@ucBigTimerActionFlag,w
   979  009B  28A2               	goto	l3209
   980  009C  118A  223D  118A   	fcall	_isFinishedBigTimer
   981  009F  3A00               	xorlw	0
   982  00A0  1D03               	btfss	3,2
   983  00A1  2840               	goto	l3135
   984  00A2                     l3209:	
   985                           
   986                           ;main.c: 309: else if(!isFinishedSmallTimer())
   987  00A2  118A  2238  118A   	fcall	_isFinishedSmallTimer
   988  00A5  3800               	iorlw	0
   989  00A6  1D03               	skipz
   990  00A7  2840               	goto	l3135
   991                           
   992                           ;main.c: 315: ucSetSmallActionFlag = 0;
   993  00A8  118A  224C  118A   	fcall	_getAdOriginalCh13Value
   994  00AB  3000               	movlw	0
   995  00AC  0242               	subwf	?_getAdOriginalCh13Value+1,w
   996  00AD  3025               	movlw	37
   997  00AE  1903               	skipnz
   998  00AF  0241               	subwf	?_getAdOriginalCh13Value,w
   999  00B0  1803               	btfsc	3,0
  1000  00B1  2897               	goto	l3199
  1001  00B2  28D6               	goto	l3119
  1002  00B3                     l3219:	
  1003  00B3  083A               	movf	main@tDA_timer,w
  1004                           
  1005                           ; Switch size 1, requested type "space"
  1006                           ; Number of cases is 2, Range of values is 0 to 1
  1007                           ; switch strategies available:
  1008                           ; Name         Instructions Cycles
  1009                           ; simple_byte            7     4 (average)
  1010                           ; direct_byte           11     7 (fixed)
  1011                           ; jumptable            260     6 (fixed)
  1012                           ; rangetable             6     6 (fixed)
  1013                           ; spacedrange           10     9 (fixed)
  1014                           ; locatedrange           2     3 (fixed)
  1015                           ;	Chosen strategy is simple_byte
  1016  00B4  3A00               	xorlw	0	; case 0
  1017  00B5  1903               	skipnz
  1018  00B6  2891               	goto	l3197
  1019  00B7  3A01               	xorlw	1	; case 1
  1020  00B8  1903               	skipnz
  1021  00B9  289A               	goto	l3203
  1022  00BA  28F1               	goto	l680
  1023  00BB                     l728:	
  1024                           ;main.c: 332: }
  1025                           ;main.c: 334: case SET_TIME_BE_FINISHED:
  1026                           
  1027                           
  1028                           ;main.c: 335: {
  1029                           ;main.c: 336: PA2 = 1;
  1030  00BB  1505               	bsf	5,2
  1031                           
  1032                           ;main.c: 337: PA0 = 0;
  1033  00BC  1005               	bcf	5,0
  1034                           
  1035                           ;main.c: 338: PA1 = 0;
  1036  00BD  1085               	bcf	5,1
  1037                           
  1038                           ;main.c: 342: ucSetSmallActionFlag = 0;
  1039  00BE  1185               	bcf	5,3
  1040  00BF  2840               	goto	l3135
  1041  00C0                     l729:	
  1042                           ;main.c: 346: }
  1043                           ;main.c: 348: case CHECKING_PULL_OUT_BATTERY:
  1044                           
  1045                           
  1046                           ;main.c: 349: {
  1047                           ;main.c: 350: static unsigned char ucCheckBatteryCnt = 0;
  1048                           ;main.c: 351: if(PB2)
  1049  00C0  1D06               	btfss	6,2
  1050  00C1  28C4               	goto	l3225
  1051                           
  1052                           ;main.c: 352: ucCheckBatteryCnt++;
  1053  00C2  0ABC               	incf	main@ucCheckBatteryCnt,f
  1054  00C3  28C5               	goto	l3227
  1055  00C4                     l3225:	
  1056                           
  1057                           ;main.c: 353: else
  1058                           ;main.c: 354: ucCheckBatteryCnt = 0;
  1059  00C4  01BC               	clrf	main@ucCheckBatteryCnt
  1060  00C5                     l3227:	
  1061                           
  1062                           ;main.c: 356: if(ucCheckBatteryCnt > 2)
  1063  00C5  3003               	movlw	3
  1064  00C6  023C               	subwf	main@ucCheckBatteryCnt,w
  1065  00C7  1C03               	skipc
  1066  00C8  28D6               	goto	l3119
  1067                           
  1068                           ;main.c: 357: {
  1069                           ;main.c: 358: ucCheckBatteryCnt = 0;
  1070  00C9  01BC               	clrf	main@ucCheckBatteryCnt
  1071  00CA  2840               	goto	l3135
  1072  00CB                     l735:	
  1073                           ;main.c: 362: }
  1074                           ;main.c: 364: case CHECKING_INSTALLED_BATTERY:
  1075                           
  1076                           
  1077                           ;main.c: 365: {
  1078                           ;main.c: 366: static unsigned char ucInstalledBatteryCnt = 0;
  1079                           ;main.c: 367: if(!PB2)
  1080  00CB  1906               	btfsc	6,2
  1081  00CC  28CF               	goto	l3235
  1082                           
  1083                           ;main.c: 368: ucInstalledBatteryCnt++;
  1084  00CD  0AC0               	incf	main@ucInstalledBatteryCnt,f
  1085  00CE  28D0               	goto	l3237
  1086  00CF                     l3235:	
  1087                           
  1088                           ;main.c: 369: else
  1089                           ;main.c: 370: ucInstalledBatteryCnt = 0;
  1090  00CF  01C0               	clrf	main@ucInstalledBatteryCnt
  1091  00D0                     l3237:	
  1092                           
  1093                           ;main.c: 372: if(ucInstalledBatteryCnt > 10)
  1094  00D0  300B               	movlw	11
  1095  00D1  0240               	subwf	main@ucInstalledBatteryCnt,w
  1096  00D2  1C03               	skipc
  1097  00D3  28D6               	goto	l3119
  1098                           
  1099                           ;main.c: 373: {
  1100                           ;main.c: 374: ucInstalledBatteryCnt = 0;
  1101  00D4  01C0               	clrf	main@ucInstalledBatteryCnt
  1102                           
  1103                           ;main.c: 375: ampStep = SENSE_PB2_INPUT_VOLTAGE;
  1104  00D5  01B9               	clrf	main@ampStep
  1105  00D6                     l3119:	
  1106  00D6  0064               	clrwdt	;#
  1107                           
  1108                           ;main.c: 150: if(isPermitSampleTime())
  1109  00D7  118A  2256  118A   	fcall	_isPermitSampleTime
  1110  00DA  3A00               	xorlw	0
  1111  00DB  1903               	skipnz
  1112  00DC  28D6               	goto	l3119
  1113                           
  1114                           ;main.c: 151: {
  1115                           ;main.c: 152: clrSampeTime();
  1116  00DD  118A  2269  118A   	fcall	_clrSampeTime
  1117                           
  1118                           ;main.c: 153: process_AD_Converter_Value();
  1119  00E0  118A  20F2  118A   	fcall	_process_AD_Converter_Value
  1120  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  1121  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  1122  00E5  0839               	movf	main@ampStep,w
  1123                           
  1124                           ; Switch size 1, requested type "space"
  1125                           ; Number of cases is 11, Range of values is 0 to 10
  1126                           ; switch strategies available:
  1127                           ; Name         Instructions Cycles
  1128                           ; direct_byte           29     7 (fixed)
  1129                           ; simple_byte           34    18 (average)
  1130                           ; jumptable            260     6 (fixed)
  1131                           ; rangetable            15     6 (fixed)
  1132                           ; spacedrange           28     9 (fixed)
  1133                           ; locatedrange          11     3 (fixed)
  1134                           ;	Chosen strategy is direct_byte
  1135  00E6  0084               	movwf	4
  1136  00E7  300B               	movlw	11
  1137  00E8  0204               	subwf	4,w
  1138  00E9  1803               	skipnc
  1139  00EA  28D6               	goto	l3119
  1140  00EB  3001               	movlw	high S3293
  1141  00EC  008A               	movwf	10
  1142  00ED  1003               	clrc
  1143  00EE  0D04               	rlf	4,w
  1144  00EF  3ECF               	addlw	low S3293
  1145  00F0  0082               	movwf	2
  1146  00F1                     l680:	
  1147  00F1  28D6               	goto	l3119
  1148  00F2                     __end_of_main:	
  1149                           
  1150                           	psect	swtext1
  1151  01CF                     __pswtext1:	
  1152  01CF                     S3293:	
  1153  01CF  118A  2837         	ljmp	l3127
  1154  01D1  118A  2842         	ljmp	l685
  1155  01D3  118A  284D         	ljmp	l691
  1156  01D5  118A  284E         	ljmp	l693
  1157  01D7  118A  2859         	ljmp	l699
  1158  01D9  118A  285B         	ljmp	l3161
  1159  01DB  118A  285F         	ljmp	l3165
  1160  01DD  118A  28B3         	ljmp	l3219
  1161  01DF  118A  28BB         	ljmp	l728
  1162  01E1  118A  28C0         	ljmp	l729
  1163  01E3  118A  28CB         	ljmp	l735
  1164                           
  1165                           	psect	text488
  1166  00F2                     __ptext488:	
  1167 ;; =============== function _main ends ============
  1168                           
  1169                           
  1170 ;; *************** function _process_AD_Converter_Value *****************
  1171 ;; Defined at:
  1172 ;;		line 94 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;		None
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;		None
  1177 ;; Return value:  Size  Location     Type
  1178 ;;		None               void
  1179 ;; Registers used:
  1180 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1181 ;; Tracked objects:
  1182 ;;		On entry : 0/0
  1183 ;;		On exit  : 0/0
  1184 ;;		Unchanged: FFE9F/0
  1185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1186 ;;      Params:         0       0       0       0       0
  1187 ;;      Locals:         0       0       0       0       0
  1188 ;;      Temps:          0       0       0       0       0
  1189 ;;      Totals:         0       0       0       0       0
  1190 ;;Total ram usage:        0 bytes
  1191 ;; Hardware stack levels used:    1
  1192 ;; Hardware stack levels required when called:    4
  1193 ;; This function calls:
  1194 ;;		_getAD_ConvertFlag
  1195 ;;		_setAD_ConvertFlag
  1196 ;;		_AD_Sample
  1197 ;;		_setAdcSampleChannel
  1198 ;;		_adc_start
  1199 ;; This function is called by:
  1200 ;;		_main
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203  00F2                     _process_AD_Converter_Value:	
  1204                           
  1205                           ;common.c: 65: return adc_convert_flag;
  1206                           
  1207                           ; Regs used in _getAD_ConvertFlag: [wreg]
  1208                           
  1209                           ;common.c: 95: if(getAD_ConvertFlag())
  1210                           
  1211                           ; Regs used in _process_AD_Converter_Value: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1212  00F2  0879               	movf	_adc_convert_flag,w
  1213  00F3  3A00               	xorlw	0
  1214  00F4  1903               	skipnz
  1215  00F5  0008               	return
  1216                           
  1217                           ;common.c: 96: {
  1218                           ;common.c: 97: setAD_ConvertFlag(0);
  1219  00F6  3000               	movlw	0
  1220  00F7  2101  118A         	fcall	_setAD_ConvertFlag
  1221                           
  1222                           ;common.c: 98: AD_Sample();
  1223  00F9  2106  118A         	fcall	_AD_Sample
  1224                           
  1225                           ;common.c: 99: setAdcSampleChannel(sampleChannelSelect);
  1226  00FB  0846               	movf	_sampleChannelSelect,w
  1227  00FC  216B  118A         	fcall	_setAdcSampleChannel
  1228                           
  1229                           ;common.c: 100: adc_start();
  1230  00FE  2968               	ljmp	l2947
  1231  00FF                     __end_of_process_AD_Converter_Value:	
  1232  00FF                     __ptext493:	
  1233 ;; =============== function _setAD_ConvertFlag ends ============
  1234                           
  1235                           
  1236 ;; *************** function _getAD_ConvertFlag *****************
  1237 ;; Defined at:
  1238 ;;		line 64 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;		None
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;		None
  1243 ;; Return value:  Size  Location     Type
  1244 ;;                  1    wreg      unsigned char 
  1245 ;; Registers used:
  1246 ;;		wreg
  1247 ;; Tracked objects:
  1248 ;;		On entry : 0/0
  1249 ;;		On exit  : 0/0
  1250 ;;		Unchanged: FFFFF/0
  1251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1252 ;;      Params:         0       0       0       0       0
  1253 ;;      Locals:         0       0       0       0       0
  1254 ;;      Temps:          0       0       0       0       0
  1255 ;;      Totals:         0       0       0       0       0
  1256 ;;Total ram usage:        0 bytes
  1257 ;; Hardware stack levels used:    1
  1258 ;; Hardware stack levels required when called:    2
  1259 ;; This function calls:
  1260 ;;		Nothing
  1261 ;; This function is called by:
  1262 ;;		_process_AD_Converter_Value
  1263 ;; This function uses a non-reentrant model
  1264 ;;
  1265  00FF                     _getAD_ConvertFlag:	
  1266                           
  1267                           ;common.c: 65: return adc_convert_flag;
  1268                           
  1269                           ; Regs used in _getAD_ConvertFlag: [wreg]
  1270  00FF  0879               	movf	_adc_convert_flag,w
  1271  0100  0008               	return
  1272  0101                     __end_of_getAD_ConvertFlag:	
  1273  0101                     __ptext492:	
  1274 ;; =============== function _getAdOriginalValue ends ============
  1275                           
  1276                           
  1277 ;; *************** function _setAD_ConvertFlag *****************
  1278 ;; Defined at:
  1279 ;;		line 70 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;  flag            1    wreg     unsigned char 
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;  flag            1    0[BANK0 ] unsigned char 
  1284 ;; Return value:  Size  Location     Type
  1285 ;;		None               void
  1286 ;; Registers used:
  1287 ;;		wreg
  1288 ;; Tracked objects:
  1289 ;;		On entry : 0/0
  1290 ;;		On exit  : 60/0
  1291 ;;		Unchanged: FFF9F/0
  1292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1293 ;;      Params:         0       0       0       0       0
  1294 ;;      Locals:         0       1       0       0       0
  1295 ;;      Temps:          0       0       0       0       0
  1296 ;;      Totals:         0       1       0       0       0
  1297 ;;Total ram usage:        1 bytes
  1298 ;; Hardware stack levels used:    1
  1299 ;; Hardware stack levels required when called:    2
  1300 ;; This function calls:
  1301 ;;		Nothing
  1302 ;; This function is called by:
  1303 ;;		_process_AD_Converter_Value
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306  0101                     _setAD_ConvertFlag:	
  1307                           
  1308                           ; Regs used in _setAD_ConvertFlag: [wreg]
  1309                           ;setAD_ConvertFlag@flag stored from wreg
  1310  0101  1283               	bcf	3,5	;RP0=0, select bank0
  1311  0102  1303               	bcf	3,6	;RP1=0, select bank0
  1312  0103  00C1               	movwf	setAD_ConvertFlag@flag
  1313                           
  1314                           ;common.c: 71: adc_convert_flag = flag;
  1315  0104  00F9               	movwf	_adc_convert_flag
  1316  0105  0008               	return
  1317  0106                     __end_of_setAD_ConvertFlag:	
  1318  0106                     __ptext489:	
  1319 ;; =============== function _process_AD_Converter_Value ends ============
  1320                           
  1321                           
  1322 ;; *************** function _AD_Sample *****************
  1323 ;; Defined at:
  1324 ;;		line 114 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;		None
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;  index           1    4[BANK0 ] unsigned char 
  1329 ;; Return value:  Size  Location     Type
  1330 ;;		None               void
  1331 ;; Registers used:
  1332 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1333 ;; Tracked objects:
  1334 ;;		On entry : 60/0
  1335 ;;		On exit  : 60/0
  1336 ;;		Unchanged: FFE9F/0
  1337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1338 ;;      Params:         0       0       0       0       0
  1339 ;;      Locals:         0       1       0       0       0
  1340 ;;      Temps:          0       2       0       0       0
  1341 ;;      Totals:         0       3       0       0       0
  1342 ;;Total ram usage:        3 bytes
  1343 ;; Hardware stack levels used:    1
  1344 ;; Hardware stack levels required when called:    3
  1345 ;; This function calls:
  1346 ;;		_getAdOriginalValue
  1347 ;; This function is called by:
  1348 ;;		_process_AD_Converter_Value
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351  0106                     _AD_Sample:	
  1352                           
  1353                           ;common.c: 115: if(sampleTimes < 6)
  1354                           
  1355                           ; Regs used in _AD_Sample: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1356  0106  3006               	movlw	6
  1357  0107  0238               	subwf	_sampleTimes,w
  1358  0108  1803               	skipnc
  1359  0109  0008               	return
  1360                           
  1361                           ;common.c: 116: {
  1362                           ;common.c: 118: buffer_Sample_AD_Value[sampleTimes] = getAdOriginalValue();
  1363  010A  2163  118A         	fcall	_getAdOriginalValue
  1364  010C  1003               	clrc
  1365  010D  0D38               	rlf	_sampleTimes,w
  1366  010E  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  1367  010F  0084               	movwf	4
  1368  0110  0841               	movf	?_getAdOriginalValue,w
  1369  0111  1383               	bcf	3,7	;select IRP bank0
  1370  0112  0080               	movwf	0
  1371  0113  0A84               	incf	4,f
  1372  0114  0842               	movf	?_getAdOriginalValue+1,w
  1373  0115  0080               	movwf	0
  1374                           
  1375                           ;common.c: 120: if(sampleTimes == 0)
  1376  0116  08B8               	movf	_sampleTimes,f
  1377  0117  1D03               	skipz
  1378  0118  2921               	goto	l3059
  1379                           
  1380                           ;common.c: 121: {
  1381                           ;common.c: 122: multiFilterMaxValue = buffer_Sample_AD_Value[0];
  1382  0119  0821               	movf	_buffer_Sample_AD_Value+1,w
  1383  011A  00B3               	movwf	_multiFilterMaxValue+1
  1384  011B  0820               	movf	_buffer_Sample_AD_Value,w
  1385  011C  00B2               	movwf	_multiFilterMaxValue
  1386                           
  1387                           ;common.c: 123: multiFilterMinValue = buffer_Sample_AD_Value[0];
  1388  011D  0821               	movf	_buffer_Sample_AD_Value+1,w
  1389  011E  00B5               	movwf	_multiFilterMinValue+1
  1390  011F  0820               	movf	_buffer_Sample_AD_Value,w
  1391  0120  00B4               	movwf	_multiFilterMinValue
  1392  0121                     l3059:	
  1393                           
  1394                           ;common.c: 124: }
  1395                           ;common.c: 126: if(multiFilterMaxValue < buffer_Sample_AD_Value[sampleTimes])
  1396  0121  2173  118A         	fcall	PL2	;call to abstracted procedure
  1397  0123  0233               	subwf	_multiFilterMaxValue+1,w
  1398  0124  1D03               	skipz
  1399  0125  2928               	goto	u525
  1400  0126  0843               	movf	??_AD_Sample,w
  1401  0127  0232               	subwf	_multiFilterMaxValue,w
  1402  0128                     u525:	
  1403  0128  1803               	skipnc
  1404  0129  2933               	goto	l1440
  1405                           
  1406                           ;common.c: 127: {
  1407                           ;common.c: 128: multiFilterMaxValue = buffer_Sample_AD_Value[sampleTimes];
  1408  012A  1003               	clrc
  1409  012B  0D38               	rlf	_sampleTimes,w
  1410  012C  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  1411  012D  0084               	movwf	4
  1412  012E  0800               	movf	0,w
  1413  012F  00B2               	movwf	_multiFilterMaxValue
  1414  0130  0A84               	incf	4,f
  1415  0131  0800               	movf	0,w
  1416  0132  00B3               	movwf	_multiFilterMaxValue+1
  1417  0133                     l1440:	
  1418                           
  1419                           ;common.c: 129: }
  1420                           ;common.c: 130: if(multiFilterMinValue > buffer_Sample_AD_Value[sampleTimes])
  1421  0133  2173  118A         	fcall	PL2	;call to abstracted procedure
  1422  0135  0835               	movf	_multiFilterMinValue+1,w
  1423  0136  0244               	subwf	??_AD_Sample+1,w
  1424  0137  1D03               	skipz
  1425  0138  293B               	goto	u535
  1426  0139  0834               	movf	_multiFilterMinValue,w
  1427  013A  0243               	subwf	??_AD_Sample,w
  1428  013B                     u535:	
  1429  013B  1803               	skipnc
  1430  013C  2946               	goto	l3065
  1431                           
  1432                           ;common.c: 131: {
  1433                           ;common.c: 132: multiFilterMinValue = buffer_Sample_AD_Value[sampleTimes];
  1434  013D  1003               	clrc
  1435  013E  0D38               	rlf	_sampleTimes,w
  1436  013F  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  1437  0140  0084               	movwf	4
  1438  0141  0800               	movf	0,w
  1439  0142  00B4               	movwf	_multiFilterMinValue
  1440  0143  0A84               	incf	4,f
  1441  0144  0800               	movf	0,w
  1442  0145  00B5               	movwf	_multiFilterMinValue+1
  1443  0146                     l3065:	
  1444  0146  3006               	movlw	6
  1445                           
  1446                           ;common.c: 137: sampleTimes++;
  1447  0147  0AB8               	incf	_sampleTimes,f
  1448                           
  1449                           ;common.c: 139: if(sampleTimes >= 6)
  1450  0148  0238               	subwf	_sampleTimes,w
  1451  0149  1C03               	skipc
  1452  014A  0008               	return
  1453                           
  1454                           ;common.c: 140: {
  1455                           ;common.c: 141: sampleTimes = 0;
  1456  014B  01B8               	clrf	_sampleTimes
  1457                           
  1458                           ;common.c: 144: {
  1459                           ;common.c: 146: sampleCH13Value = ((multiFilterSumValue - multiFilterMaxValue - multiFil
      +                          terMinValue))>> 2;
  1460  014C  0846               	movf	_sampleChannelSelect,w
  1461  014D  3A0D               	xorlw	13
  1462  014E  1D03               	skipz
  1463  014F  2953               	goto	l3077
  1464                           
  1465                           ;common.c: 147: sampleChannelSelect = 1;
  1466  0150  01C6               	clrf	_sampleChannelSelect
  1467  0151  0AC6               	incf	_sampleChannelSelect,f
  1468                           
  1469                           ;common.c: 148: }
  1470  0152  2955               	goto	l3081
  1471  0153                     l3077:	
  1472                           
  1473                           ;common.c: 152: sampleChannelSelect = 13;
  1474  0153  300D               	movlw	13
  1475  0154  00C6               	movwf	_sampleChannelSelect
  1476  0155                     l3081:	
  1477                           ;common.c: 153: }
  1478                           
  1479                           
  1480                           ;common.c: 158: }
  1481                           ;common.c: 160: for(unsigned char index = 0; index < 6;index++)
  1482  0155  01C5               	clrf	AD_Sample@index
  1483  0156                     l3087:	
  1484                           
  1485                           ;common.c: 161: buffer_Sample_AD_Value[index] = 0;
  1486  0156  1003               	clrc
  1487  0157  0D45               	rlf	AD_Sample@index,w
  1488  0158  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  1489  0159  0084               	movwf	4
  1490  015A  3006               	movlw	6
  1491  015B  0180               	clrf	0
  1492  015C  0A84               	incf	4,f
  1493  015D  0180               	clrf	0
  1494  015E  0AC5               	incf	AD_Sample@index,f
  1495  015F  0245               	subwf	AD_Sample@index,w
  1496  0160  1803               	btfsc	3,0
  1497  0161  0008               	return
  1498  0162  2956               	goto	l3087
  1499  0163                     __end_of_AD_Sample:	
  1500  0163                     __ptext491:	
  1501 ;; =============== function _setAdcSampleChannel ends ============
  1502                           
  1503                           
  1504 ;; *************** function _getAdOriginalValue *****************
  1505 ;; Defined at:
  1506 ;;		line 76 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;		None
  1509 ;; Auto vars:     Size  Location     Type
  1510 ;;		None
  1511 ;; Return value:  Size  Location     Type
  1512 ;;                  2    0[BANK0 ] unsigned int 
  1513 ;; Registers used:
  1514 ;;		wreg
  1515 ;; Tracked objects:
  1516 ;;		On entry : 60/0
  1517 ;;		On exit  : 60/0
  1518 ;;		Unchanged: FFF9F/0
  1519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1520 ;;      Params:         0       2       0       0       0
  1521 ;;      Locals:         0       0       0       0       0
  1522 ;;      Temps:          0       0       0       0       0
  1523 ;;      Totals:         0       2       0       0       0
  1524 ;;Total ram usage:        2 bytes
  1525 ;; Hardware stack levels used:    1
  1526 ;; Hardware stack levels required when called:    2
  1527 ;; This function calls:
  1528 ;;		Nothing
  1529 ;; This function is called by:
  1530 ;;		_AD_Sample
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533  0163                     _getAdOriginalValue:	
  1534                           
  1535                           ;common.c: 77: return adc_original_value;
  1536                           
  1537                           ; Regs used in _getAdOriginalValue: [wreg]
  1538  0163  0831               	movf	_adc_original_value+1,w
  1539  0164  00C2               	movwf	?_getAdOriginalValue+1
  1540  0165  0830               	movf	_adc_original_value,w
  1541  0166  00C1               	movwf	?_getAdOriginalValue
  1542  0167  0008               	return
  1543  0168                     __end_of_getAdOriginalValue:	
  1544  0168                     __ptext504:	
  1545 ;; =============== function _isPermitSampleTime ends ============
  1546                           
  1547                           
  1548 ;; *************** function _adc_start *****************
  1549 ;; Defined at:
  1550 ;;		line 99 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\periph.c"
  1551 ;; Parameters:    Size  Location     Type
  1552 ;;		None
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;		None
  1555 ;; Return value:  Size  Location     Type
  1556 ;;		None               void
  1557 ;; Registers used:
  1558 ;;		None
  1559 ;; Tracked objects:
  1560 ;;		On entry : 40/20
  1561 ;;		On exit  : 60/0
  1562 ;;		Unchanged: FFF9F/0
  1563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1564 ;;      Params:         0       0       0       0       0
  1565 ;;      Locals:         0       0       0       0       0
  1566 ;;      Temps:          0       0       0       0       0
  1567 ;;      Totals:         0       0       0       0       0
  1568 ;;Total ram usage:        0 bytes
  1569 ;; Hardware stack levels used:    1
  1570 ;; Hardware stack levels required when called:    2
  1571 ;; This function calls:
  1572 ;;		Nothing
  1573 ;; This function is called by:
  1574 ;;		_main
  1575 ;;		_process_AD_Converter_Value
  1576 ;; This function uses a non-reentrant model
  1577 ;;
  1578  0168                     _adc_start:	
  1579  0168                     l2947:	
  1580                           ; Regs used in _adc_start: []
  1581                           
  1582                           
  1583                           ;periph.c: 100: GO=1;
  1584  0168  1283               	bcf	3,5	;RP0=0, select bank0
  1585  0169  149F               	bsf	31,1
  1586  016A  0008               	return
  1587  016B                     __end_of_adc_start:	
  1588  016B                     __ptext490:	
  1589 ;; =============== function _AD_Sample ends ============
  1590                           
  1591                           
  1592 ;; *************** function _setAdcSampleChannel *****************
  1593 ;; Defined at:
  1594 ;;		line 94 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\periph.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;  ucChannel       1    wreg     unsigned char 
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;  ucChannel       1    1[BANK0 ] unsigned char 
  1599 ;; Return value:  Size  Location     Type
  1600 ;;		None               void
  1601 ;; Registers used:
  1602 ;;		wreg, status,2, status,0
  1603 ;; Tracked objects:
  1604 ;;		On entry : 60/0
  1605 ;;		On exit  : 60/0
  1606 ;;		Unchanged: FFF9F/0
  1607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1608 ;;      Params:         0       0       0       0       0
  1609 ;;      Locals:         0       1       0       0       0
  1610 ;;      Temps:          0       1       0       0       0
  1611 ;;      Totals:         0       2       0       0       0
  1612 ;;Total ram usage:        2 bytes
  1613 ;; Hardware stack levels used:    1
  1614 ;; Hardware stack levels required when called:    2
  1615 ;; This function calls:
  1616 ;;		Nothing
  1617 ;; This function is called by:
  1618 ;;		_process_AD_Converter_Value
  1619 ;; This function uses a non-reentrant model
  1620 ;;
  1621  016B                     _setAdcSampleChannel:	
  1622                           
  1623                           ; Regs used in _setAdcSampleChannel: [wreg+status,2+status,0]
  1624                           ;setAdcSampleChannel@ucChannel stored from wreg
  1625  016B  00C2               	movwf	setAdcSampleChannel@ucChannel
  1626                           
  1627                           ;periph.c: 95: ADCON0|=ucChannel<<2;
  1628  016C  00C1               	movwf	??_setAdcSampleChannel
  1629  016D  1003               	clrc
  1630  016E  0DC1               	rlf	??_setAdcSampleChannel,f
  1631  016F  1003               	clrc
  1632  0170  0D41               	rlf	??_setAdcSampleChannel,w
  1633  0171  049F               	iorwf	31,f	;volatile
  1634  0172  0008               	return
  1635  0173                     __end_of_setAdcSampleChannel:	
  1636  0173                     PL2:	
  1637  0173  1003               	clrc
  1638  0174  0D38               	rlf	_sampleTimes,w
  1639  0175  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  1640  0176  0084               	movwf	4
  1641  0177  0800               	movf	0,w
  1642  0178  00C3               	movwf	??_AD_Sample
  1643  0179  0A84               	incf	4,f
  1644  017A  0800               	movf	0,w
  1645  017B  00C4               	movwf	??_AD_Sample+1
  1646  017C  0008               	return
  1647                           
  1648                           	psect	text494
  1649  0238                     __ptext494:	
  1650 ;; =============== function _getAD_ConvertFlag ends ============
  1651                           
  1652                           
  1653 ;; *************** function _isFinishedSmallTimer *****************
  1654 ;; Defined at:
  1655 ;;		line 226 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;		None
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;		None
  1660 ;; Return value:  Size  Location     Type
  1661 ;;                  1    wreg      unsigned char 
  1662 ;; Registers used:
  1663 ;;		wreg, status,2, status,0
  1664 ;; Tracked objects:
  1665 ;;		On entry : 60/0
  1666 ;;		On exit  : 60/0
  1667 ;;		Unchanged: FFF9F/0
  1668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1669 ;;      Params:         0       0       0       0       0
  1670 ;;      Locals:         0       0       0       0       0
  1671 ;;      Temps:          0       0       0       0       0
  1672 ;;      Totals:         0       0       0       0       0
  1673 ;;Total ram usage:        0 bytes
  1674 ;; Hardware stack levels used:    1
  1675 ;; Hardware stack levels required when called:    2
  1676 ;; This function calls:
  1677 ;;		Nothing
  1678 ;; This function is called by:
  1679 ;;		_main
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682  0238                     _isFinishedSmallTimer:	
  1683                           
  1684                           ;common.c: 227: if(uiSmallTimer == 0)
  1685                           
  1686                           ; Regs used in _isFinishedSmallTimer: [wreg+status,2+status,0]
  1687  0238  0837               	movf	_uiSmallTimer+1,w
  1688  0239  0436               	iorwf	_uiSmallTimer,w
  1689  023A  1903               	btfsc	3,2
  1690                           
  1691                           ;common.c: 228: return 1;
  1692  023B  3401               	retlw	1
  1693                           
  1694                           ;common.c: 229: else
  1695                           ;common.c: 230: return 0;
  1696  023C  3400               	retlw	0
  1697  023D                     __end_of_isFinishedSmallTimer:	
  1698                           
  1699                           	psect	text495
  1700  023D                     __ptext495:	
  1701 ;; =============== function _isFinishedSmallTimer ends ============
  1702                           
  1703                           
  1704 ;; *************** function _isFinishedBigTimer *****************
  1705 ;; Defined at:
  1706 ;;		line 218 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  1707 ;; Parameters:    Size  Location     Type
  1708 ;;		None
  1709 ;; Auto vars:     Size  Location     Type
  1710 ;;		None
  1711 ;; Return value:  Size  Location     Type
  1712 ;;                  1    wreg      unsigned char 
  1713 ;; Registers used:
  1714 ;;		wreg, status,2, status,0
  1715 ;; Tracked objects:
  1716 ;;		On entry : 60/0
  1717 ;;		On exit  : 60/0
  1718 ;;		Unchanged: FFF9F/0
  1719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1720 ;;      Params:         0       0       0       0       0
  1721 ;;      Locals:         0       0       0       0       0
  1722 ;;      Temps:          0       0       0       0       0
  1723 ;;      Totals:         0       0       0       0       0
  1724 ;;Total ram usage:        0 bytes
  1725 ;; Hardware stack levels used:    1
  1726 ;; Hardware stack levels required when called:    2
  1727 ;; This function calls:
  1728 ;;		Nothing
  1729 ;; This function is called by:
  1730 ;;		_main
  1731 ;; This function uses a non-reentrant model
  1732 ;;
  1733  023D                     _isFinishedBigTimer:	
  1734                           
  1735                           ;common.c: 219: if(uiBigTimer == 0)
  1736                           
  1737                           ; Regs used in _isFinishedBigTimer: [wreg+status,2+status,0]
  1738  023D  0877               	movf	_uiBigTimer+1,w
  1739  023E  0476               	iorwf	_uiBigTimer,w
  1740  023F  1903               	btfsc	3,2
  1741                           
  1742                           ;common.c: 220: return 1;
  1743  0240  3401               	retlw	1
  1744                           
  1745                           ;common.c: 221: else
  1746                           ;common.c: 222: return 0;
  1747  0241  3400               	retlw	0
  1748  0242                     __end_of_isFinishedBigTimer:	
  1749                           
  1750                           	psect	text496
  1751  0242                     __ptext496:	
  1752 ;; =============== function _isFinishedBigTimer ends ============
  1753                           
  1754                           
  1755 ;; *************** function _startSmallTimer *****************
  1756 ;; Defined at:
  1757 ;;		line 208 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;		None
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;		None
  1762 ;; Return value:  Size  Location     Type
  1763 ;;		None               void
  1764 ;; Registers used:
  1765 ;;		wreg
  1766 ;; Tracked objects:
  1767 ;;		On entry : 60/0
  1768 ;;		On exit  : 60/0
  1769 ;;		Unchanged: FFF9F/0
  1770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1771 ;;      Params:         0       0       0       0       0
  1772 ;;      Locals:         0       0       0       0       0
  1773 ;;      Temps:          0       0       0       0       0
  1774 ;;      Totals:         0       0       0       0       0
  1775 ;;Total ram usage:        0 bytes
  1776 ;; Hardware stack levels used:    1
  1777 ;; Hardware stack levels required when called:    2
  1778 ;; This function calls:
  1779 ;;		Nothing
  1780 ;; This function is called by:
  1781 ;;		_main
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784  0242                     _startSmallTimer:	
  1785                           
  1786                           ;common.c: 209: uiSmallTimer = 3600;
  1787                           
  1788                           ; Regs used in _startSmallTimer: [wreg]
  1789  0242  3010               	movlw	16
  1790  0243  00B6               	movwf	_uiSmallTimer
  1791  0244  300E               	movlw	14
  1792  0245  00B7               	movwf	_uiSmallTimer+1
  1793  0246  0008               	return
  1794  0247                     __end_of_startSmallTimer:	
  1795                           
  1796                           	psect	text497
  1797  0247                     __ptext497:	
  1798 ;; =============== function _startSmallTimer ends ============
  1799                           
  1800                           
  1801 ;; *************** function _startBigTimer *****************
  1802 ;; Defined at:
  1803 ;;		line 186 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;		None
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;		None
  1808 ;; Return value:  Size  Location     Type
  1809 ;;		None               void
  1810 ;; Registers used:
  1811 ;;		wreg
  1812 ;; Tracked objects:
  1813 ;;		On entry : 60/0
  1814 ;;		On exit  : 60/0
  1815 ;;		Unchanged: FFF9F/0
  1816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1817 ;;      Params:         0       0       0       0       0
  1818 ;;      Locals:         0       0       0       0       0
  1819 ;;      Temps:          0       0       0       0       0
  1820 ;;      Totals:         0       0       0       0       0
  1821 ;;Total ram usage:        0 bytes
  1822 ;; Hardware stack levels used:    1
  1823 ;; Hardware stack levels required when called:    2
  1824 ;; This function calls:
  1825 ;;		Nothing
  1826 ;; This function is called by:
  1827 ;;		_main
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830  0247                     _startBigTimer:	
  1831                           
  1832                           ;common.c: 187: uiBigTimer = 32400;
  1833                           
  1834                           ; Regs used in _startBigTimer: [wreg]
  1835  0247  3090               	movlw	144
  1836  0248  00F6               	movwf	_uiBigTimer
  1837  0249  307E               	movlw	126
  1838  024A  00F7               	movwf	_uiBigTimer+1
  1839  024B  0008               	return
  1840  024C                     __end_of_startBigTimer:	
  1841                           
  1842                           	psect	text498
  1843  024C                     __ptext498:	
  1844 ;; =============== function _startBigTimer ends ============
  1845                           
  1846                           
  1847 ;; *************** function _getAdOriginalCh13Value *****************
  1848 ;; Defined at:
  1849 ;;		line 87 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;		None
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;		None
  1854 ;; Return value:  Size  Location     Type
  1855 ;;                  2    0[BANK0 ] unsigned int 
  1856 ;; Registers used:
  1857 ;;		wreg
  1858 ;; Tracked objects:
  1859 ;;		On entry : 60/0
  1860 ;;		On exit  : 60/0
  1861 ;;		Unchanged: FFF9F/0
  1862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1863 ;;      Params:         0       2       0       0       0
  1864 ;;      Locals:         0       0       0       0       0
  1865 ;;      Temps:          0       0       0       0       0
  1866 ;;      Totals:         0       2       0       0       0
  1867 ;;Total ram usage:        2 bytes
  1868 ;; Hardware stack levels used:    1
  1869 ;; Hardware stack levels required when called:    2
  1870 ;; This function calls:
  1871 ;;		Nothing
  1872 ;; This function is called by:
  1873 ;;		_main
  1874 ;; This function uses a non-reentrant model
  1875 ;;
  1876  024C                     _getAdOriginalCh13Value:	
  1877                           
  1878                           ;common.c: 88: return adc_original_CH13_value;
  1879                           
  1880                           ; Regs used in _getAdOriginalCh13Value: [wreg]
  1881  024C  082F               	movf	_adc_original_CH13_value+1,w
  1882  024D  00C2               	movwf	?_getAdOriginalCh13Value+1
  1883  024E  082E               	movf	_adc_original_CH13_value,w
  1884  024F  00C1               	movwf	?_getAdOriginalCh13Value
  1885  0250  0008               	return
  1886  0251                     __end_of_getAdOriginalCh13Value:	
  1887                           
  1888                           	psect	text499
  1889  0251                     __ptext499:	
  1890 ;; =============== function _getAdOriginalCh13Value ends ============
  1891                           
  1892                           
  1893 ;; *************** function _getAdOriginalCh12Value *****************
  1894 ;; Defined at:
  1895 ;;		line 81 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;		None
  1898 ;; Auto vars:     Size  Location     Type
  1899 ;;		None
  1900 ;; Return value:  Size  Location     Type
  1901 ;;                  2    0[BANK0 ] unsigned int 
  1902 ;; Registers used:
  1903 ;;		wreg
  1904 ;; Tracked objects:
  1905 ;;		On entry : 60/0
  1906 ;;		On exit  : 60/0
  1907 ;;		Unchanged: FFF9F/0
  1908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1909 ;;      Params:         0       2       0       0       0
  1910 ;;      Locals:         0       0       0       0       0
  1911 ;;      Temps:          0       0       0       0       0
  1912 ;;      Totals:         0       2       0       0       0
  1913 ;;Total ram usage:        2 bytes
  1914 ;; Hardware stack levels used:    1
  1915 ;; Hardware stack levels required when called:    2
  1916 ;; This function calls:
  1917 ;;		Nothing
  1918 ;; This function is called by:
  1919 ;;		_main
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922  0251                     _getAdOriginalCh12Value:	
  1923                           
  1924                           ;common.c: 82: return adc_original_CH12_value;
  1925                           
  1926                           ; Regs used in _getAdOriginalCh12Value: [wreg]
  1927  0251  082D               	movf	_adc_original_CH12_value+1,w
  1928  0252  00C2               	movwf	?_getAdOriginalCh12Value+1
  1929  0253  082C               	movf	_adc_original_CH12_value,w
  1930  0254  00C1               	movwf	?_getAdOriginalCh12Value
  1931  0255  0008               	return
  1932  0256                     __end_of_getAdOriginalCh12Value:	
  1933                           
  1934                           	psect	text500
  1935  0260                     __ptext500:	
  1936 ;; =============== function _getAdOriginalCh12Value ends ============
  1937                           
  1938                           
  1939 ;; *************** function _clearSmallTimer *****************
  1940 ;; Defined at:
  1941 ;;		line 202 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;		None
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;		None
  1946 ;; Return value:  Size  Location     Type
  1947 ;;		None               void
  1948 ;; Registers used:
  1949 ;;		status,2
  1950 ;; Tracked objects:
  1951 ;;		On entry : 60/0
  1952 ;;		On exit  : 60/0
  1953 ;;		Unchanged: FFF9F/0
  1954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1955 ;;      Params:         0       0       0       0       0
  1956 ;;      Locals:         0       0       0       0       0
  1957 ;;      Temps:          0       0       0       0       0
  1958 ;;      Totals:         0       0       0       0       0
  1959 ;;Total ram usage:        0 bytes
  1960 ;; Hardware stack levels used:    1
  1961 ;; Hardware stack levels required when called:    2
  1962 ;; This function calls:
  1963 ;;		Nothing
  1964 ;; This function is called by:
  1965 ;;		_main
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968  0260                     _clearSmallTimer:	
  1969                           
  1970                           ;common.c: 203: uiSmallTimer = 0;
  1971                           
  1972                           ; Regs used in _clearSmallTimer: [status,2]
  1973  0260  01B6               	clrf	_uiSmallTimer
  1974  0261  01B7               	clrf	_uiSmallTimer+1
  1975  0262  0008               	return
  1976  0263                     __end_of_clearSmallTimer:	
  1977                           
  1978                           	psect	text501
  1979  0263                     __ptext501:	
  1980 ;; =============== function _clearSmallTimer ends ============
  1981                           
  1982                           
  1983 ;; *************** function _clearBigTimer *****************
  1984 ;; Defined at:
  1985 ;;		line 196 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  1986 ;; Parameters:    Size  Location     Type
  1987 ;;		None
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;		None
  1990 ;; Return value:  Size  Location     Type
  1991 ;;		None               void
  1992 ;; Registers used:
  1993 ;;		status,2
  1994 ;; Tracked objects:
  1995 ;;		On entry : 60/0
  1996 ;;		On exit  : 60/0
  1997 ;;		Unchanged: FFF9F/0
  1998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1999 ;;      Params:         0       0       0       0       0
  2000 ;;      Locals:         0       0       0       0       0
  2001 ;;      Temps:          0       0       0       0       0
  2002 ;;      Totals:         0       0       0       0       0
  2003 ;;Total ram usage:        0 bytes
  2004 ;; Hardware stack levels used:    1
  2005 ;; Hardware stack levels required when called:    2
  2006 ;; This function calls:
  2007 ;;		Nothing
  2008 ;; This function is called by:
  2009 ;;		_main
  2010 ;; This function uses a non-reentrant model
  2011 ;;
  2012  0263                     _clearBigTimer:	
  2013                           
  2014                           ;common.c: 197: uiBigTimer = 0;
  2015                           
  2016                           ; Regs used in _clearBigTimer: [status,2]
  2017  0263  01F6               	clrf	_uiBigTimer
  2018  0264  01F7               	clrf	_uiBigTimer+1
  2019  0265  0008               	return
  2020  0266                     __end_of_clearBigTimer:	
  2021                           
  2022                           	psect	text502
  2023  0269                     __ptext502:	
  2024 ;; =============== function _clearBigTimer ends ============
  2025                           
  2026                           
  2027 ;; *************** function _clrSampeTime *****************
  2028 ;; Defined at:
  2029 ;;		line 244 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;		None
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;		None
  2034 ;; Return value:  Size  Location     Type
  2035 ;;		None               void
  2036 ;; Registers used:
  2037 ;;		status,2
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: FFFFF/0
  2042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2043 ;;      Params:         0       0       0       0       0
  2044 ;;      Locals:         0       0       0       0       0
  2045 ;;      Temps:          0       0       0       0       0
  2046 ;;      Totals:         0       0       0       0       0
  2047 ;;Total ram usage:        0 bytes
  2048 ;; Hardware stack levels used:    1
  2049 ;; Hardware stack levels required when called:    2
  2050 ;; This function calls:
  2051 ;;		Nothing
  2052 ;; This function is called by:
  2053 ;;		_main
  2054 ;; This function uses a non-reentrant model
  2055 ;;
  2056  0269                     _clrSampeTime:	
  2057                           
  2058                           ;common.c: 245: timer.timer10msStopWatch = 0;
  2059                           
  2060                           ; Regs used in _clrSampeTime: [status,2]
  2061  0269  01FA               	clrf	_timer
  2062  026A  0008               	return
  2063  026B                     __end_of_clrSampeTime:	
  2064                           
  2065                           	psect	text503
  2066  0256                     __ptext503:	
  2067 ;; =============== function _clrSampeTime ends ============
  2068                           
  2069                           
  2070 ;; *************** function _isPermitSampleTime *****************
  2071 ;; Defined at:
  2072 ;;		line 234 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;		None
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;		None
  2077 ;; Return value:  Size  Location     Type
  2078 ;;                  1    wreg      unsigned char 
  2079 ;; Registers used:
  2080 ;;		wreg
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: FFFFF/0
  2085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2086 ;;      Params:         0       0       0       0       0
  2087 ;;      Locals:         0       0       0       0       0
  2088 ;;      Temps:          0       0       0       0       0
  2089 ;;      Totals:         0       0       0       0       0
  2090 ;;Total ram usage:        0 bytes
  2091 ;; Hardware stack levels used:    1
  2092 ;; Hardware stack levels required when called:    2
  2093 ;; This function calls:
  2094 ;;		Nothing
  2095 ;; This function is called by:
  2096 ;;		_main
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099  0256                     _isPermitSampleTime:	
  2100                           
  2101                           ;common.c: 235: if(timer.timer10msStopWatch > 10)
  2102                           
  2103                           ; Regs used in _isPermitSampleTime: [wreg]
  2104  0256  300B               	movlw	11
  2105  0257  027A               	subwf	_timer,w
  2106  0258  1803               	btfsc	3,0
  2107                           
  2108                           ;common.c: 236: {
  2109                           ;common.c: 237: return 1;
  2110  0259  3401               	retlw	1
  2111                           
  2112                           ;common.c: 239: else
  2113                           ;common.c: 240: return 0;
  2114  025A  3400               	retlw	0
  2115  025B                     __end_of_isPermitSampleTime:	
  2116                           
  2117                           	psect	text505
  2118  021F                     __ptext505:	
  2119 ;; =============== function _adc_start ends ============
  2120                           
  2121                           
  2122 ;; *************** function _op2_init *****************
  2123 ;; Defined at:
  2124 ;;		line 45 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\periph.c"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;		None
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;		None
  2129 ;; Return value:  Size  Location     Type
  2130 ;;		None               void
  2131 ;; Registers used:
  2132 ;;		wreg, status,2
  2133 ;; Tracked objects:
  2134 ;;		On entry : 17F/20
  2135 ;;		On exit  : 17F/20
  2136 ;;		Unchanged: FFE80/0
  2137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2138 ;;      Params:         0       0       0       0       0
  2139 ;;      Locals:         0       0       0       0       0
  2140 ;;      Temps:          0       0       0       0       0
  2141 ;;      Totals:         0       0       0       0       0
  2142 ;;Total ram usage:        0 bytes
  2143 ;; Hardware stack levels used:    1
  2144 ;; Hardware stack levels required when called:    2
  2145 ;; This function calls:
  2146 ;;		Nothing
  2147 ;; This function is called by:
  2148 ;;		_main
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151  021F                     _op2_init:	
  2152                           
  2153                           ;periph.c: 52: OP2CON1=0x00;
  2154                           
  2155                           ; Regs used in _op2_init: [wreg+status,2]
  2156  021F  019C               	clrf	28	;volatile
  2157                           
  2158                           ;periph.c: 54: OP2CON2=0xA0;
  2159  0220  30A0               	movlw	160
  2160  0221  009D               	movwf	29	;volatile
  2161                           
  2162                           ;periph.c: 55: OP2CON0=0x80;
  2163  0222  3080               	movlw	128
  2164  0223  009B               	movwf	27	;volatile
  2165                           
  2166                           ;periph.c: 58: TRISA7=0;
  2167  0224  1385               	bcf	5,7
  2168                           
  2169                           ;periph.c: 59: TRISB6=1;
  2170  0225  1706               	bsf	6,6
  2171                           
  2172                           ;periph.c: 60: TRISB7 = 1;
  2173  0226  1786               	bsf	6,7
  2174  0227  0008               	return
  2175  0228                     __end_of_op2_init:	
  2176                           
  2177                           	psect	text506
  2178  0209                     __ptext506:	
  2179 ;; =============== function _op2_init ends ============
  2180                           
  2181                           
  2182 ;; *************** function _op1_init *****************
  2183 ;; Defined at:
  2184 ;;		line 26 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\periph.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;		None
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;		None
  2189 ;; Return value:  Size  Location     Type
  2190 ;;		None               void
  2191 ;; Registers used:
  2192 ;;		wreg
  2193 ;; Tracked objects:
  2194 ;;		On entry : 17F/20
  2195 ;;		On exit  : 17F/20
  2196 ;;		Unchanged: FFE80/0
  2197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2198 ;;      Params:         0       0       0       0       0
  2199 ;;      Locals:         0       0       0       0       0
  2200 ;;      Temps:          0       0       0       0       0
  2201 ;;      Totals:         0       0       0       0       0
  2202 ;;Total ram usage:        0 bytes
  2203 ;; Hardware stack levels used:    1
  2204 ;; Hardware stack levels required when called:    2
  2205 ;; This function calls:
  2206 ;;		Nothing
  2207 ;; This function is called by:
  2208 ;;		_main
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211  0209                     _op1_init:	
  2212                           
  2213                           ;periph.c: 33: OP1CON1=0x02;
  2214                           
  2215                           ; Regs used in _op1_init: [wreg]
  2216  0209  3002               	movlw	2
  2217  020A  1283               	bcf	3,5	;RP0=0, select bank0
  2218  020B  009C               	movwf	28	;volatile
  2219                           
  2220                           ;periph.c: 34: OP1CON2=0xA0;
  2221  020C  30A0               	movlw	160
  2222  020D  009D               	movwf	29	;volatile
  2223                           
  2224                           ;periph.c: 35: OP1CON0=0x80;
  2225  020E  3080               	movlw	128
  2226  020F  009B               	movwf	27	;volatile
  2227                           
  2228                           ;periph.c: 38: TRISB3=1;
  2229  0210  1683               	bsf	3,5	;RP0=1, select bank1
  2230  0211  1586               	bsf	6,3
  2231                           
  2232                           ;periph.c: 39: TRISB4=1;
  2233  0212  1606               	bsf	6,4
  2234                           
  2235                           ;periph.c: 40: TRISB5=0;
  2236  0213  1286               	bcf	6,5
  2237  0214  0008               	return
  2238  0215                     __end_of_op1_init:	
  2239                           
  2240                           	psect	text507
  2241  025B                     __ptext507:	
  2242 ;; =============== function _op1_init ends ============
  2243                           
  2244                           
  2245 ;; *************** function _dac_init *****************
  2246 ;; Defined at:
  2247 ;;		line 14 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\periph.c"
  2248 ;; Parameters:    Size  Location     Type
  2249 ;;		None
  2250 ;; Auto vars:     Size  Location     Type
  2251 ;;		None
  2252 ;; Return value:  Size  Location     Type
  2253 ;;		None               void
  2254 ;; Registers used:
  2255 ;;		wreg
  2256 ;; Tracked objects:
  2257 ;;		On entry : 17F/20
  2258 ;;		On exit  : 17F/20
  2259 ;;		Unchanged: FFE80/0
  2260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2261 ;;      Params:         0       0       0       0       0
  2262 ;;      Locals:         0       0       0       0       0
  2263 ;;      Temps:          0       0       0       0       0
  2264 ;;      Totals:         0       0       0       0       0
  2265 ;;Total ram usage:        0 bytes
  2266 ;; Hardware stack levels used:    1
  2267 ;; Hardware stack levels required when called:    2
  2268 ;; This function calls:
  2269 ;;		Nothing
  2270 ;; This function is called by:
  2271 ;;		_main
  2272 ;; This function uses a non-reentrant model
  2273 ;;
  2274  025B                     _dac_init:	
  2275                           
  2276                           ;periph.c: 15: DACCON|=2;
  2277                           
  2278                           ; Regs used in _dac_init: [wreg]
  2279  025B  1487               	bsf	7,1	;volatile
  2280                           
  2281                           ;periph.c: 17: DACR0=0x19;
  2282  025C  3019               	movlw	25
  2283  025D  0088               	movwf	8	;volatile
  2284                           
  2285                           ;periph.c: 18: DACCON|=(1)<<2;
  2286  025E  1507               	bsf	7,2	;volatile
  2287  025F  0008               	return
  2288  0260                     __end_of_dac_init:	
  2289                           
  2290                           	psect	text508
  2291  01E5                     __ptext508:	
  2292 ;; =============== function _dac_init ends ============
  2293                           
  2294                           
  2295 ;; *************** function _adc_test_init *****************
  2296 ;; Defined at:
  2297 ;;		line 85 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\periph.c"
  2298 ;; Parameters:    Size  Location     Type
  2299 ;;  channel         1    wreg     unsigned char 
  2300 ;;  ref             1    0[BANK0 ] unsigned char 
  2301 ;; Auto vars:     Size  Location     Type
  2302 ;;  channel         1    2[BANK0 ] unsigned char 
  2303 ;; Return value:  Size  Location     Type
  2304 ;;		None               void
  2305 ;; Registers used:
  2306 ;;		wreg, status,2, status,0
  2307 ;; Tracked objects:
  2308 ;;		On entry : 17F/0
  2309 ;;		On exit  : 17F/20
  2310 ;;		Unchanged: FFE80/0
  2311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2312 ;;      Params:         0       1       0       0       0
  2313 ;;      Locals:         0       1       0       0       0
  2314 ;;      Temps:          0       1       0       0       0
  2315 ;;      Totals:         0       3       0       0       0
  2316 ;;Total ram usage:        3 bytes
  2317 ;; Hardware stack levels used:    1
  2318 ;; Hardware stack levels required when called:    2
  2319 ;; This function calls:
  2320 ;;		Nothing
  2321 ;; This function is called by:
  2322 ;;		_main
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325  01E5                     _adc_test_init:	
  2326                           
  2327                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  2328                           ;adc_test_init@channel stored from wreg
  2329  01E5  00C3               	movwf	adc_test_init@channel
  2330                           
  2331                           ;periph.c: 86: ADCON0|=channel<<2;
  2332  01E6  00C2               	movwf	??_adc_test_init
  2333  01E7  1003               	clrc
  2334  01E8  0DC2               	rlf	??_adc_test_init,f
  2335  01E9  1003               	clrc
  2336  01EA  0D42               	rlf	??_adc_test_init,w
  2337  01EB  049F               	iorwf	31,f	;volatile
  2338                           
  2339                           ;periph.c: 87: ADCON1|=ref<<6;
  2340  01EC  0841               	movf	adc_test_init@ref,w
  2341  01ED  00C2               	movwf	??_adc_test_init
  2342  01EE  0CC2               	rrf	??_adc_test_init,f
  2343  01EF  0CC2               	rrf	??_adc_test_init,f
  2344  01F0  0C42               	rrf	??_adc_test_init,w
  2345  01F1  39C0               	andlw	192
  2346  01F2  1683               	bsf	3,5	;RP0=1, select bank1
  2347  01F3  049F               	iorwf	31,f	;volatile
  2348                           
  2349                           ;periph.c: 88: ADON=1;
  2350  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  2351  01F5  141F               	bsf	31,0
  2352                           
  2353                           ;periph.c: 89: ADIE=1;
  2354  01F6  1683               	bsf	3,5	;RP0=1, select bank1
  2355  01F7  150D               	bsf	13,2
  2356  01F8  0008               	return
  2357  01F9                     __end_of_adc_test_init:	
  2358                           
  2359                           	psect	text509
  2360  0266                     __ptext509:	
  2361 ;; =============== function _adc_test_init ends ============
  2362                           
  2363                           
  2364 ;; *************** function _timer1_interrupt_config *****************
  2365 ;; Defined at:
  2366 ;;		line 56 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;		None
  2369 ;; Auto vars:     Size  Location     Type
  2370 ;;		None
  2371 ;; Return value:  Size  Location     Type
  2372 ;;		None               void
  2373 ;; Registers used:
  2374 ;;		None
  2375 ;; Tracked objects:
  2376 ;;		On entry : 17F/20
  2377 ;;		On exit  : 17F/20
  2378 ;;		Unchanged: FFE80/0
  2379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2380 ;;      Params:         0       0       0       0       0
  2381 ;;      Locals:         0       0       0       0       0
  2382 ;;      Temps:          0       0       0       0       0
  2383 ;;      Totals:         0       0       0       0       0
  2384 ;;Total ram usage:        0 bytes
  2385 ;; Hardware stack levels used:    1
  2386 ;; Hardware stack levels required when called:    2
  2387 ;; This function calls:
  2388 ;;		Nothing
  2389 ;; This function is called by:
  2390 ;;		_main
  2391 ;; This function uses a non-reentrant model
  2392 ;;
  2393  0266                     _timer1_interrupt_config:	
  2394                           
  2395                           ;common.c: 57: GIE = 1;
  2396                           
  2397                           ; Regs used in _timer1_interrupt_config: []
  2398  0266  178B               	bsf	11,7
  2399                           
  2400                           ;common.c: 58: PEIE = 1;
  2401  0267  170B               	bsf	11,6
  2402  0268  0008               	return
  2403  0269                     __end_of_timer1_interrupt_config:	
  2404                           
  2405                           	psect	text510
  2406  0215                     __ptext510:	
  2407 ;; =============== function _timer1_interrupt_config ends ============
  2408                           
  2409                           
  2410 ;; *************** function _timer1_config *****************
  2411 ;; Defined at:
  2412 ;;		line 44 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;		None
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;		None
  2417 ;; Return value:  Size  Location     Type
  2418 ;;		None               void
  2419 ;; Registers used:
  2420 ;;		wreg
  2421 ;; Tracked objects:
  2422 ;;		On entry : 17F/40
  2423 ;;		On exit  : 17F/20
  2424 ;;		Unchanged: FFE80/0
  2425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2426 ;;      Params:         0       0       0       0       0
  2427 ;;      Locals:         0       0       0       0       0
  2428 ;;      Temps:          0       0       0       0       0
  2429 ;;      Totals:         0       0       0       0       0
  2430 ;;Total ram usage:        0 bytes
  2431 ;; Hardware stack levels used:    1
  2432 ;; Hardware stack levels required when called:    2
  2433 ;; This function calls:
  2434 ;;		Nothing
  2435 ;; This function is called by:
  2436 ;;		_main
  2437 ;; This function uses a non-reentrant model
  2438 ;;
  2439  0215                     _timer1_config:	
  2440                           
  2441                           ;common.c: 46: TMR1H=0xCF;
  2442                           
  2443                           ; Regs used in _timer1_config: [wreg]
  2444  0215  30CF               	movlw	207
  2445  0216  1303               	bcf	3,6	;RP1=0, select bank0
  2446  0217  008F               	movwf	15	;volatile
  2447                           
  2448                           ;common.c: 47: TMR1L=0x2C;
  2449  0218  302C               	movlw	44
  2450  0219  008E               	movwf	14	;volatile
  2451                           
  2452                           ;common.c: 48: T1CON=0xE1;
  2453  021A  30E1               	movlw	225
  2454  021B  0090               	movwf	16	;volatile
  2455                           
  2456                           ;common.c: 49: TMR1IE=1;
  2457  021C  1683               	bsf	3,5	;RP0=1, select bank1
  2458  021D  140C               	bsf	12,0
  2459  021E  0008               	return
  2460  021F                     __end_of_timer1_config:	
  2461                           
  2462                           	psect	text511
  2463  0230                     __ptext511:	
  2464 ;; =============== function _timer1_config ends ============
  2465                           
  2466                           
  2467 ;; *************** function _clock_config *****************
  2468 ;; Defined at:
  2469 ;;		line 36 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;		None
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;		None
  2474 ;; Return value:  Size  Location     Type
  2475 ;;		None               void
  2476 ;; Registers used:
  2477 ;;		wreg, status,2
  2478 ;; Tracked objects:
  2479 ;;		On entry : 17F/20
  2480 ;;		On exit  : 17F/40
  2481 ;;		Unchanged: FFE80/0
  2482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2483 ;;      Params:         0       0       0       0       0
  2484 ;;      Locals:         0       0       0       0       0
  2485 ;;      Temps:          0       0       0       0       0
  2486 ;;      Totals:         0       0       0       0       0
  2487 ;;Total ram usage:        0 bytes
  2488 ;; Hardware stack levels used:    1
  2489 ;; Hardware stack levels required when called:    2
  2490 ;; This function calls:
  2491 ;;		Nothing
  2492 ;; This function is called by:
  2493 ;;		_main
  2494 ;; This function uses a non-reentrant model
  2495 ;;
  2496  0230                     _clock_config:	
  2497                           
  2498                           ;common.c: 38: CLKPR = 0x80;
  2499                           
  2500                           ; Regs used in _clock_config: [wreg+status,2]
  2501  0230  3080               	movlw	128
  2502  0231  1283               	bcf	3,5	;RP0=0, select bank2
  2503  0232  1703               	bsf	3,6	;RP1=1, select bank2
  2504  0233  0088               	movwf	8	;volatile
  2505                           
  2506                           ;common.c: 39: CLKPR = 0x00;
  2507  0234  0188               	clrf	8	;volatile
  2508  0235                     l1407:	
  2509                           ;common.c: 40: while(CLKPCE);
  2510                           
  2511  0235  1F88               	btfss	8,7
  2512  0236  0008               	return
  2513  0237  2A35               	goto	l1407
  2514  0238                     __end_of_clock_config:	
  2515                           
  2516                           	psect	text512
  2517  017D                     __ptext512:	
  2518 ;; =============== function _clock_config ends ============
  2519                           
  2520                           
  2521 ;; *************** function _ISR *****************
  2522 ;; Defined at:
  2523 ;;		line 249 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;		None
  2526 ;; Auto vars:     Size  Location     Type
  2527 ;;		None
  2528 ;; Return value:  Size  Location     Type
  2529 ;;		None               void
  2530 ;; Registers used:
  2531 ;;		wreg, status,2, status,0, pclath, cstack
  2532 ;; Tracked objects:
  2533 ;;		On entry : 0/0
  2534 ;;		On exit  : 60/0
  2535 ;;		Unchanged: FFF9F/0
  2536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2537 ;;      Params:         0       0       0       0       0
  2538 ;;      Locals:         0       0       0       0       0
  2539 ;;      Temps:          2       0       0       0       0
  2540 ;;      Totals:         2       0       0       0       0
  2541 ;;Total ram usage:        2 bytes
  2542 ;; Hardware stack levels used:    1
  2543 ;; Hardware stack levels required when called:    1
  2544 ;; This function calls:
  2545 ;;		i1_setAD_ConvertFlag
  2546 ;;		_adc_get
  2547 ;; This function is called by:
  2548 ;;		Interrupt level 1
  2549 ;; This function uses a non-reentrant model
  2550 ;;
  2551  017D                     _ISR:	
  2552                           
  2553                           ;common.c: 250: static unsigned char ucTimer1sCnt = 0;
  2554                           ;common.c: 252: if(TMR1IF == 1)
  2555  017D  1283               	bcf	3,5	;RP0=0, select bank0
  2556  017E  1303               	bcf	3,6	;RP1=0, select bank0
  2557  017F  1C0C               	btfss	12,0
  2558  0180  299D               	goto	i1l3031
  2559  0181  3064               	movlw	100
  2560                           
  2561                           ;common.c: 253: {
  2562                           ;common.c: 254: TMR1IF = 0 ;
  2563  0182  100C               	bcf	12,0
  2564                           
  2565                           ;common.c: 255: timer.timer10msStopWatch++;
  2566  0183  0AFA               	incf	_timer,f
  2567                           
  2568                           ;common.c: 256: ucTimer1sCnt++;
  2569  0184  0AF8               	incf	ISR@ucTimer1sCnt,f
  2570                           
  2571                           ;common.c: 258: if(ucTimer1sCnt >= 100)
  2572  0185  0278               	subwf	ISR@ucTimer1sCnt,w
  2573  0186  1C03               	skipc
  2574  0187  299D               	goto	i1l3031
  2575                           
  2576                           ;common.c: 259: {
  2577                           ;common.c: 260: ucTimer1sCnt = 0;
  2578  0188  01F8               	clrf	ISR@ucTimer1sCnt
  2579                           
  2580                           ;common.c: 261: if(uiBigTimer > 0)
  2581  0189  0877               	movf	_uiBigTimer+1,w
  2582  018A  0476               	iorwf	_uiBigTimer,w
  2583  018B  1903               	skipnz
  2584  018C  2993               	goto	i1l1495
  2585                           
  2586                           ;common.c: 262: uiBigTimer--;
  2587  018D  3001               	movlw	1
  2588  018E  02F6               	subwf	_uiBigTimer,f
  2589  018F  3000               	movlw	0
  2590  0190  1C03               	skipc
  2591  0191  03F7               	decf	_uiBigTimer+1,f
  2592  0192  02F7               	subwf	_uiBigTimer+1,f
  2593  0193                     i1l1495:	
  2594                           
  2595                           ;common.c: 264: if(uiSmallTimer)
  2596  0193  0837               	movf	_uiSmallTimer+1,w
  2597  0194  0436               	iorwf	_uiSmallTimer,w
  2598  0195  1903               	skipnz
  2599  0196  299D               	goto	i1l3031
  2600                           
  2601                           ;common.c: 265: uiSmallTimer--;
  2602  0197  3001               	movlw	1
  2603  0198  02B6               	subwf	_uiSmallTimer,f
  2604  0199  3000               	movlw	0
  2605  019A  1C03               	skipc
  2606  019B  03B7               	decf	_uiSmallTimer+1,f
  2607  019C  02B7               	subwf	_uiSmallTimer+1,f
  2608  019D                     i1l3031:	
  2609                           
  2610                           ;common.c: 266: }
  2611                           ;common.c: 267: }
  2612                           ;common.c: 269: if(ADIF)
  2613  019D  1D0D               	btfss	13,2
  2614  019E  29BA               	goto	i1l1500
  2615  019F  3001               	movlw	1
  2616                           
  2617                           ;common.c: 270: {
  2618                           ;common.c: 271: ADIF=0;
  2619  01A0  110D               	bcf	13,2
  2620                           
  2621                           ;common.c: 272: setAD_ConvertFlag(1);
  2622  01A1  21CC  118A         	fcall	i1_setAD_ConvertFlag
  2623                           
  2624                           ;common.c: 273: adc_original_value = adc_get();
  2625  01A3  21C1  118A         	fcall	_adc_get
  2626  01A5  0871               	movf	?_adc_get+1,w
  2627  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  2628  01A7  00B1               	movwf	_adc_original_value+1
  2629  01A8  0870               	movf	?_adc_get,w
  2630  01A9  00B0               	movwf	_adc_original_value
  2631                           
  2632                           ;common.c: 274: if(sampleChannelSelect == 1)
  2633  01AA  0B46               	decfsz	_sampleChannelSelect,w
  2634  01AB  29B4               	goto	i1l3043
  2635                           
  2636                           ;common.c: 275: adc_original_CH12_value = adc_get();
  2637  01AC  21C1  118A         	fcall	_adc_get
  2638  01AE  0871               	movf	?_adc_get+1,w
  2639  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  2640  01B0  00AD               	movwf	_adc_original_CH12_value+1
  2641  01B1  0870               	movf	?_adc_get,w
  2642  01B2  00AC               	movwf	_adc_original_CH12_value
  2643  01B3  29BA               	goto	i1l1500
  2644  01B4                     i1l3043:	
  2645                           
  2646                           ;common.c: 276: else
  2647                           ;common.c: 277: adc_original_CH13_value = adc_get();
  2648  01B4  21C1               	fcall	_adc_get
  2649  01B5  0871               	movf	?_adc_get+1,w
  2650  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  2651  01B7  00AF               	movwf	_adc_original_CH13_value+1
  2652  01B8  0870               	movf	?_adc_get,w
  2653  01B9  00AE               	movwf	_adc_original_CH13_value
  2654  01BA                     i1l1500:	
  2655  01BA  0875               	movf	??_ISR+1,w
  2656  01BB  008A               	movwf	10
  2657  01BC  0E74               	swapf	??_ISR^(0+-128),w
  2658  01BD  0083               	movwf	3
  2659  01BE  0EFE               	swapf	126,f
  2660  01BF  0E7E               	swapf	126,w
  2661  01C0  0009               	retfie
  2662  01C1                     __end_of_ISR:	
  2663  01C1                     __ptext514:	
  2664 ;; =============== function i1_setAD_ConvertFlag ends ============
  2665                           
  2666                           
  2667 ;; *************** function _adc_get *****************
  2668 ;; Defined at:
  2669 ;;		line 104 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\periph.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;		None
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;  val             2    2[COMMON] unsigned int 
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  2    0[COMMON] unsigned int 
  2676 ;; Registers used:
  2677 ;;		wreg
  2678 ;; Tracked objects:
  2679 ;;		On entry : 60/0
  2680 ;;		On exit  : 60/20
  2681 ;;		Unchanged: FFF9F/0
  2682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2683 ;;      Params:         2       0       0       0       0
  2684 ;;      Locals:         2       0       0       0       0
  2685 ;;      Temps:          0       0       0       0       0
  2686 ;;      Totals:         4       0       0       0       0
  2687 ;;Total ram usage:        4 bytes
  2688 ;; Hardware stack levels used:    1
  2689 ;; This function calls:
  2690 ;;		Nothing
  2691 ;; This function is called by:
  2692 ;;		_ISR
  2693 ;; This function uses a non-reentrant model
  2694 ;;
  2695  01C1                     _adc_get:	
  2696                           
  2697                           ;periph.c: 105: unsigned int val;
  2698                           ;periph.c: 106: val = (ADRESH<<8) | ADRESL;
  2699                           
  2700                           ; Regs used in _adc_get: [wreg]
  2701  01C1  081E               	movf	30,w	;volatile
  2702  01C2  00F3               	movwf	adc_get@val+1
  2703  01C3  01F2               	clrf	adc_get@val
  2704  01C4  1683               	bsf	3,5	;RP0=1, select bank1
  2705  01C5  081E               	movf	30,w	;volatile
  2706  01C6  04F2               	iorwf	adc_get@val,f
  2707                           
  2708                           ;periph.c: 107: return val;
  2709  01C7  0873               	movf	adc_get@val+1,w
  2710  01C8  00F1               	movwf	?_adc_get+1
  2711  01C9  0872               	movf	adc_get@val,w
  2712  01CA  00F0               	movwf	?_adc_get
  2713  01CB  0008               	return
  2714  01CC                     __end_of_adc_get:	
  2715  01CC                     __ptext513:	
  2716 ;; =============== function _ISR ends ============
  2717                           
  2718                           
  2719 ;; *************** function i1_setAD_ConvertFlag *****************
  2720 ;; Defined at:
  2721 ;;		line 70 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  2722 ;; Parameters:    Size  Location     Type
  2723 ;;  setAD_Conver    1    wreg     unsigned char 
  2724 ;; Auto vars:     Size  Location     Type
  2725 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  2726 ;; Return value:  Size  Location     Type
  2727 ;;		None               void
  2728 ;; Registers used:
  2729 ;;		wreg
  2730 ;; Tracked objects:
  2731 ;;		On entry : 60/0
  2732 ;;		On exit  : 60/0
  2733 ;;		Unchanged: FFF9F/0
  2734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2735 ;;      Params:         0       0       0       0       0
  2736 ;;      Locals:         1       0       0       0       0
  2737 ;;      Temps:          0       0       0       0       0
  2738 ;;      Totals:         1       0       0       0       0
  2739 ;;Total ram usage:        1 bytes
  2740 ;; Hardware stack levels used:    1
  2741 ;; This function calls:
  2742 ;;		Nothing
  2743 ;; This function is called by:
  2744 ;;		_ISR
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747  01CC                     i1_setAD_ConvertFlag:	
  2748                           
  2749                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  2750                           ;i1setAD_ConvertFlag@flag stored from wreg
  2751  01CC  00F0               	movwf	i1setAD_ConvertFlag@flag
  2752                           
  2753                           ;common.c: 71: adc_convert_flag = flag;
  2754  01CD  00F9               	movwf	_adc_convert_flag
  2755  01CE  0008               	return
  2756  01CF                     __end_ofi1_setAD_ConvertFlag:	
  2757                           
  2758                           	psect	intentry
  2759  0004                     __pintentry:	
  2760                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  2761                           
  2762  0004                     interrupt_function:	
  2763  007E                     saved_w	set	btemp
  2764  0004  00FE               	movwf	btemp
  2765  0005  0E03               	swapf	3,w
  2766  0006  00F4               	movwf	??_ISR
  2767  0007  080A               	movf	10,w
  2768  0008  00F5               	movwf	??_ISR+1
  2769  0009  118A  297D         	ljmp	_ISR
  2770                           
  2771                           	psect	text515
  2772  0000                     __ptext515:	
  2773 ;; =============== function _adc_get ends ============
  2774                           
  2775  007E                     btemp	set	126	;btemp
  2776  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Wed Mar 27 19:37:30 2019

                     ??_clock_config 0041                                    pc 0002  
                                 _GO 00F9                                   fsr 0004  
                ?_getAdOriginalValue 0041             ?_timer1_interrupt_config 0070  
                                l735 00CB                                  l728 00BB  
                                l680 00F1                                  l729 00C0  
                                l691 004D                                  l693 004E  
                                l685 0042                                  l699 0059  
                                _PA0 0028                                  _PA1 0029  
                                _GIE 005F                                  _PA2 002A  
                                _PA3 002B                                  _PB2 0032  
                                _ISR 017D                                  u525 0128  
                                u535 013B                                  fsr0 0004  
                                indf 0000             main@ucBigTimerActionFlag 003B  
                      _startBigTimer 0247                                 S3293 01CF  
                        main@ampStep 0039                                 ?_ISR 0070  
                 __size_of_AD_Sample 005D                                 l1410 0000  
                               l2131 0000                                 l3003 0000  
                               l1413 0000                                 l2125 0000  
                               l3013 0000                                 l3101 0000  
                               l1422 0000                                 l2142 0000  
                               l1407 0235                                 l1431 0000  
                               l3007 0000                                 l3111 0000  
                               l3103 0000                                 l1416 0000  
                               l2128 0000                                 l1440 0133  
                               l2145 0000                                 l1425 0000  
                               l3009 0000                                 l3121 0000  
                               l3113 0000                                 l3105 0000  
                               l2139 0000                                 l1419 0000  
                               l3051 0000                                 l3203 009A  
                               l3131 0000                                 l3115 0000  
                               l3107 0000                                 l1428 0000  
                               l1461 0000                                 l3205 0000  
                               l3141 0047                                 l3133 0000  
                               l3125 0000                                 l3117 0000  
                               l3109 0000                                 l1470 0000  
                               l3071 0000                                 l3055 0000  
                               l3151 0052                                 l3135 0040  
                               l3127 0037                                 l3119 00D6  
                               l1464 0000                                 l3081 0155  
                               l3065 0146                                 l3225 00C4  
                               l3209 00A2                                 l3161 005B  
                               l3153 0053                                 l3129 0000  
                               l1467 0000                                 l3091 0000  
                               l3067 0000                                 l3059 0121  
                               l3235 00CF                                 l3227 00C5  
                               l3219 00B3                                 l3171 0000  
                               l3139 0046                                 l3077 0153  
                               l3093 0000                                 l3237 00D0  
                               l3181 0000                                 l3165 005F  
                               l3087 0156                                 l3183 008D  
                               l3175 0000                                 l1488 0000  
                               l3089 0000                                 l3097 0000  
                               l3169 0000                                 l3177 0078  
                               l3099 0000                                 l3187 0000  
                               l3197 0091                                 l3189 0000  
                               l2911 0000                                 l3199 0097  
                               l2905 0000                                 l2913 0000  
                               l2921 0000                                 l2907 0000  
                               l2915 0000                                 l2923 0000  
                               l2931 0000                                 l2909 0000  
                               l2917 0000                                 l2925 0000  
                               l2933 0000                                 l2941 0000  
                               l2919 0000                                 l2927 0000  
                               l2943 0000                                 l2935 0000  
                               l2929 0000                                 l2945 0000  
                               l2937 0000                                 l2961 0000  
                               l2939 0000                                 l2947 0168  
                               l2963 0000                                 l2971 0000  
                               l2949 0000                                 l2965 0000  
                               l2967 0000                                 l2975 0000  
                               l2991 0000                                 l2977 0000  
                               l2979 0000                                 _ADIE 046A  
                               _ADIF 006A                                 _ADON 00F8  
                               _PEIE 005E                 ??_getAdOriginalValue 0043  
             ??_isFinishedSmallTimer 0041                                 _main 000D  
                  ??_startSmallTimer 0041                                 btemp 007E  
                               start 000B              ?_getAdOriginalCh12Value 0041  
            ?_getAdOriginalCh13Value 0041                                ??_ISR 0074  
         __end_of_isPermitSampleTime 025B                  _sampleChannelSelect 0046  
                              ?_main 0070                                _DACR0 0088  
                              _CLKPR 0108                                _T1CON 0010  
                    __end_of_adc_get 01CC                                _TMR1H 000F  
                              _TMR1L 000E                       ?_startBigTimer 0070  
              setAD_ConvertFlag@flag 0041                        main@tDA_timer 003A  
                              _timer 007A                                pclath 000A  
                              status 0003       __end_of_getAdOriginalCh12Value 0256  
                              wtemp0 007E       __end_of_getAdOriginalCh13Value 0251  
              __end_of_clearBigTimer 0266                 __end_of_clrSampeTime 026B  
         __end_of_isFinishedBigTimer 0242                         __end_of_main 00F2  
             __size_of_adc_test_init 0014                    __end_of_AD_Sample 0163  
           __size_of_clearSmallTimer 0003            main@ucInstalledBatteryCnt 0040  
                             ??_main 0046                               _ADCON0 001F  
                             _ADCON1 009F                 __end_of_clock_config 0238  
                             _DACCON 0087                               _ADRESH 001E  
                             _ADRESL 009E                               _CLKPCE 0847  
                             i1l1500 01BA                               i1l3021 0000  
                             i1l1422 0000                               i1l3031 019D  
                             i1l3015 0000                               i1l3041 0000  
                             i1l3025 0000                               i1l3043 01B4  
                             i1l3035 0000                               i1l3019 0000  
                             i1l2148 0000                               i1l3045 0000  
                             i1l3037 0000                               i1l3039 0000  
                             i1l3049 0000                               i1l1495 0193  
                   __end_of_dac_init 0260                               _TMR1IE 0460  
                             _TMR1IF 0060                    _getAD_ConvertFlag 00FF  
                  _setAD_ConvertFlag 0101                               _TRISA0 0428  
                             _TRISA1 0429                               _TRISB0 0430  
                             _TRISA2 042A                               _TRISB1 0431  
                             _TRISA3 042B                               _TRISB2 0432  
                             _TRISB3 0433                               _TRISB4 0434  
                             _TRISA6 042E                               _TRISB5 0435  
                             _TRISA7 042F                               _TRISB6 0436  
                             _TRISB7 0437                   ?_getAD_ConvertFlag 0070  
                 ?_setAD_ConvertFlag 0070                     __end_of_op1_init 0215  
                   __end_of_op2_init 0228               main@ucConfirmTimerZptS 003E  
                          ??_adc_get 0072                  ??_getAD_ConvertFlag 0041  
                ??_setAD_ConvertFlag 0041                               clrloop 0229  
                    ??_startBigTimer 0041         __size_of_setAdcSampleChannel 0008  
                             saved_w 007E          ?_process_AD_Converter_Value 0070  
                      _adc_test_init 01E5            __end_of_getAD_ConvertFlag 0101  
          __end_of_setAD_ConvertFlag 0106                   __size_of_adc_start 0003  
                     __pcstackCOMMON 0070                         __pidataBANK0 0000  
            _adc_original_CH12_value 002C                      _startSmallTimer 0242  
            _adc_original_CH13_value 002E                    ??_clearSmallTimer 0041  
              __end_of_timer1_config 021F                       ?_adc_test_init 0041  
   __size_of_timer1_interrupt_config 0003                __size_of_clrSampeTime 0002  
                         __pbssBANK0 0020         __size_ofi1_setAD_ConvertFlag 0003  
                         adc_get@val 0072                           __pmaintext 000D  
                         __pintentry 0004                            ?_dac_init 0070  
              __size_of_clock_config 0008                              _OP1CON0 001B  
                            _OP1CON1 001C                              _OP1CON2 001D  
                            _OP2CON0 009B                              _OP2CON1 009C  
                            _OP2CON2 009D                         _clrSampeTime 0269  
                  __end_of_adc_start 016B                            ?_op1_init 0070  
                          ?_op2_init 0070                   _isPermitSampleTime 0256  
             _buffer_Sample_AD_Value 0020                   _adc_original_value 0030  
         __size_of_getAD_ConvertFlag 0002           __size_of_setAD_ConvertFlag 0005  
        __size_of_getAdOriginalValue 0005                  ?_isPermitSampleTime 0070  
      __size_of_isFinishedSmallTimer 0005                           _uiBigTimer 0076  
                       _clock_config 0230                              _adc_get 01C1  
            __end_of_startSmallTimer 0247                  _multiFilterMaxValue 0032  
                _multiFilterMinValue 0034                 ??_isPermitSampleTime 0041  
                 _isFinishedBigTimer 023D                           ??_dac_init 0041  
                          _AD_Sample 0106                         __size_of_ISR 0044  
                    ??_adc_test_init 0042                           ??_op1_init 0041  
                         ??_op2_init 0041                  ?_isFinishedBigTimer 0070  
               end_of_initialization 0206                  _setAdcSampleChannel 016B  
               ??_isFinishedBigTimer 0041                           ?_AD_Sample 0070  
             __size_of_clearBigTimer 0003                     _adc_convert_flag 0079  
               ?_setAdcSampleChannel 0070              _timer1_interrupt_config 0266  
                     AD_Sample@index 0045                           main@ucInit 003F  
                    _clearSmallTimer 0260                     ?_startSmallTimer 0070  
                i1_setAD_ConvertFlag 01CC                ??_setAdcSampleChannel 0041  
              __end_of_startBigTimer 024C                  start_initialization 01F9  
                        __end_of_ISR 01C1             ??_getAdOriginalCh12Value 0043  
           ??_getAdOriginalCh13Value 0043                 ?i1_setAD_ConvertFlag 0070  
                      _clearBigTimer 0263                main@ucCheckBatteryCnt 003C  
                        __pdataBANK0 0046                          ??_AD_Sample 0043  
          ??_timer1_interrupt_config 0041                          __pbssCOMMON 0076  
                  __size_of_dac_init 0005                        __pcstackBANK0 0041  
                          _adc_start 0168                    __size_of_op1_init 000C  
                  __size_of_op2_init 0009                ??i1_setAD_ConvertFlag 0070  
                     ?_clearBigTimer 0070              __end_of_clearSmallTimer 0263  
             __size_of_timer1_config 000A                            __ptext500 0260  
                          __ptext501 0263                            __ptext510 0215  
                          __ptext502 0269                            __ptext511 0230  
                          __ptext503 0256                            __ptext512 017D  
                          __ptext504 0168                            __ptext513 01CC  
                          __ptext505 021F                            __ptext514 01C1  
                          __ptext506 0209                            __ptext515 0000  
                          __ptext507 025B                            __ptext508 01E5  
                          __ptext509 0266                            __ptext490 016B  
                          __ptext491 0163                            __ptext492 0101  
                          __ptext493 00FF                            __ptext494 0238  
                          __ptext495 023D                            __ptext496 0242  
                          __ptext488 00F2                            __ptext497 0247  
                          __ptext489 0106                            __ptext498 024C  
                          __ptext499 0251                             ?_adc_get 0070  
       __end_of_isFinishedSmallTimer 023D                            __pswtext1 01CF  
                    ISR@ucTimer1sCnt 0078           __end_of_getAdOriginalValue 0168  
                         ?_adc_start 0070      __size_of_getAdOriginalCh12Value 0005  
    __size_of_getAdOriginalCh13Value 0005                    interrupt_function 0004  
    __end_of_timer1_interrupt_config 0269                 adc_test_init@channel 0043  
        __size_of_isPermitSampleTime 0005                         _uiSmallTimer 0036  
              __end_of_adc_test_init 01F9                        _timer1_config 0215  
       ??_process_AD_Converter_Value 0046                      ??_clearBigTimer 0041  
                   ?_clearSmallTimer 0070                 main@ucConfirmTimer1S 003D  
             _getAdOriginalCh12Value 0251          __size_of_isFinishedBigTimer 0005  
             _getAdOriginalCh13Value 024C                     __size_of_adc_get 000B  
__size_of_process_AD_Converter_Value 000D                             _dac_init 025B  
                     ?_timer1_config 0070                             _op1_init 0209  
                           _op2_init 021F                          ??_adc_start 0041  
                      __size_of_main 00E5                 _isFinishedSmallTimer 0238  
                           clear_ram 0228          __end_of_setAdcSampleChannel 0173  
                      ?_clrSampeTime 0070                          _sampleTimes 0038  
           __size_of_startSmallTimer 0005                             intlevel1 0000  
              ?_isFinishedSmallTimer 0070         setAdcSampleChannel@ucChannel 0042  
             __size_of_startBigTimer 0005                        ?_clock_config 0070  
            i1setAD_ConvertFlag@flag 0070                       ??_clrSampeTime 0041  
                    ??_timer1_config 0041          __end_ofi1_setAD_ConvertFlag 01CF  
 __end_of_process_AD_Converter_Value 00FF           _process_AD_Converter_Value 00F2  
                   adc_test_init@ref 0041                   _getAdOriginalValue 0163  
