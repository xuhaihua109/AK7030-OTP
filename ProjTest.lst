

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Fri Nov 01 11:40:45 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,delta=2
    15                           	psect	text835,local,class=CODE,delta=2
    16                           	psect	text836,local,class=CODE,delta=2
    17                           	psect	text838,local,class=CODE,delta=2
    18                           	psect	text839,local,class=CODE,delta=2
    19                           	psect	text844,local,class=CODE,delta=2
    20                           	psect	text845,local,class=CODE,delta=2
    21                           	psect	text846,local,class=CODE,delta=2
    22                           	psect	text847,local,class=CODE,delta=2
    23                           	psect	text848,local,class=CODE,delta=2
    24                           	psect	text849,local,class=CODE,delta=2
    25                           	psect	text850,local,class=CODE,delta=2
    26                           	psect	text851,local,class=CODE,delta=2
    27                           	psect	text852,local,class=CODE,delta=2
    28                           	psect	text853,local,class=CODE,delta=2
    29                           	psect	text854,local,class=CODE,delta=2
    30                           	psect	text857,local,class=CODE,delta=2
    31                           	psect	text858,local,class=CODE,delta=2
    32                           	psect	text859,local,class=CODE,delta=2
    33                           	psect	text860,local,class=CODE,delta=2
    34                           	psect	text861,local,class=CODE,delta=2
    35                           	psect	text862,local,class=CODE,delta=2
    36                           	psect	text863,local,class=CODE,delta=2
    37                           	psect	text871,local,class=CODE,delta=2
    38                           	psect	text872,local,class=CODE,delta=2
    39                           	psect	text873,local,class=CODE,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	text877,local,class=CODE,delta=2
    42                           	psect	pa_nodes,global,class=CODE,delta=2
    43                           	dabs	1,0x7E,2
    44  000A                     	;#
    45                           
    46                           	psect	config
    47  2000  0FFF               	dw	4095	;#
    48  2001  3FDE               	dw	16350	;#
    49  2002  3FF8               	dw	16376	;#
    50                           
    51                           	psect	idataBANK0
    52  0000                     __pidataBANK0:	
    53  001F                     _ADCON0	set	31
    54  001E                     _ADRESH	set	30
    55  0017                     _CCP1CON	set	23
    56  0015                     _CCPR1L	set	21
    57  0010                     _T1CON	set	16
    58  0012                     _T2CON	set	18
    59  000F                     _TMR1H	set	15
    60  000E                     _TMR1L	set	14
    61  006A                     _ADIF	set	106
    62  00F8                     _ADON	set	248
    63  005F                     _GIE	set	95
    64  00F9                     _GO	set	249
    65  0032                     _PB2	set	50
    66  0033                     _PB3	set	51
    67  0034                     _PB4	set	52
    68  0035                     _PB5	set	53
    69  005E                     _PEIE	set	94
    70  0060                     _TMR1IF	set	96
    71  009F                     _ADCON1	set	159
    72  009E                     _ADRESL	set	158
    73  0092                     _PR2	set	146
    74  046A                     _ADIE	set	1130
    75  0460                     _TMR1IE	set	1120
    76  0430                     _TRISB0	set	1072
    77  0431                     _TRISB1	set	1073
    78  0432                     _TRISB2	set	1074
    79  0433                     _TRISB3	set	1075
    80  0434                     _TRISB4	set	1076
    81  0435                     _TRISB5	set	1077
    82  0108                     _CLKPR	set	264
    83  0847                     _CLKPCE	set	2119
    84  0C42                     _PBOD2	set	3138
    85                           
    86                           	psect	cinit
    87  0444                     start_initialization:	
    88  0444  3056               	movlw	low __pbssBANK0
    89                           
    90                           ; Clear objects allocated to COMMON
    91  0445  01FD               	clrf	__pbssCOMMON& (0+127)
    92                           
    93                           ; Clear objects allocated to BANK0
    94  0446  1383               	bcf	3,7	;select IRP bank0
    95  0447  0084               	movwf	4
    96  0448  306F               	movlw	low (__pbssBANK0+25)
    97  0449  118A  24CC  118A   	fcall	clear_ram
    98                           
    99                           ; Clear objects allocated to BANK1
   100  044C  30A0               	movlw	low __pbssBANK1
   101  044D  0084               	movwf	4
   102  044E  30EE               	movlw	low (__pbssBANK1+78)
   103  044F  118A  24CC         	fcall	clear_ram
   104                           
   105                           ;initializer for _sampleChannelSelect
   106  0451  300C               	movlw	12
   107  0452  00EF               	movwf	__pdataBANK0& (0+127)
   108  0453                     end_of_initialization:	
   109                           ;End of C runtime variable initialization code
   110                           
   111  0453  0183               	clrf	3
   112  0454  118A  2813         	ljmp	_main	;jump to C main() function
   113                           
   114                           	psect	bssCOMMON
   115  007D                     __pbssCOMMON:	
   116  007D                     vPutSampleDataIntoTable@ucChannelFirstLength:	
   117  007D                     	ds	1
   118                           
   119                           	psect	bssBANK0
   120  0056                     __pbssBANK0:	
   121  0056                     _uiBigTimer:	
   122  0056                     	ds	2
   123  0058                     _uiOneHourTimer:	
   124  0058                     	ds	2
   125  005A                     _uiSmallTimer:	
   126  005A                     	ds	2
   127  005C                     _uiTwentyMinTimer:	
   128  005C                     	ds	2
   129  005E                     main@uiTimerOneP5s:	
   130  005E                     	ds	2
   131  0060                     ISR@ucTimer1sCnt:	
   132  0060                     	ds	1
   133  0061                     _adc_convert_flag:	
   134  0061                     	ds	1
   135  0062                     _bBigTimerStartFlag:	
   136  0062                     	ds	1
   137  0063                     _bOneHourTimerStartFlag:	
   138  0063                     	ds	1
   139  0064                     _bSmallTimerStartFlag:	
   140  0064                     	ds	1
   141  0065                     _bTwentyMinStartFlag:	
   142  0065                     	ds	1
   143  0066                     _sampleTimes:	
   144  0066                     	ds	1
   145  0067                     _timer:	
   146  0067                     	ds	1
   147  0068                     main@cTimerP5s_792:	
   148  0068                     	ds	1
   149  0069                     main@cTimerP5s_797:	
   150  0069                     	ds	1
   151  006A                     main@ucStep:	
   152  006A                     	ds	1
   153  006B                     main@ucTimerP3s:	
   154  006B                     	ds	1
   155  006C                     main@ucTimerP5s:	
   156  006C                     	ds	1
   157  006D                     vPutSampleDataIntoTable@ucChannelFourteenthLength:	
   158  006D                     	ds	1
   159  006E                     vPutSampleDataIntoTable@ucChannelFourthLength:	
   160  006E                     	ds	1
   161                           
   162                           	psect	dataBANK0
   163  006F                     __pdataBANK0:	
   164  006F                     _sampleChannelSelect:	
   165  006F                     	ds	1
   166                           
   167                           	psect	bssBANK1
   168  00A0                     __pbssBANK1:	
   169  00A0                     _uiTwentySecondsTimer:	
   170  00A0                     	ds	2
   171  00A2                     main@uiTimerThreeP5s:	
   172  00A2                     	ds	2
   173  00A4                     main@uiTimerTwoP5s:	
   174  00A4                     	ds	2
   175  00A6                     _uiSampleChannelFirst:	
   176  00A6                     	ds	24
   177  00BE                     _uiSampleChannelFourteenth:	
   178  00BE                     	ds	24
   179  00D6                     _uiSampleChannelFourth:	
   180  00D6                     	ds	24
   181                           
   182                           	psect	clrtext
   183  04CC                     clear_ram:	
   184                           ;	Called with FSR containing the base address, and
   185                           ;	W with the last address+1
   186                           
   187  04CC  0064               	clrwdt	;clear the watchdog before getting into this loop
   188  04CD                     clrloop:	
   189  04CD  0180               	clrf	0	;clear RAM location pointed to by FSR
   190  04CE  0A84               	incf	4,f	;increment pointer
   191  04CF  0604               	xorwf	4,w	;XOR with final address
   192  04D0  1903               	btfsc	3,2	;have we reached the end yet?
   193  04D1  3400               	retlw	0	;all done for this memory range, return
   194  04D2  0604               	xorwf	4,w	;XOR again to restore value
   195  04D3  2CCD               	goto	clrloop	;do the next byte
   196                           
   197                           	psect	cstackCOMMON
   198  0070                     __pcstackCOMMON:	
   199  0070                     ?_clearTwelveHoursTimer:	
   200  0070                     ?_clearThreeHoursTimer:	
   201                           ; 0 bytes @ 0x0
   202                           
   203  0070                     ?_clock_config:	
   204                           ; 0 bytes @ 0x0
   205                           
   206  0070                     ?_timer1_config:	
   207                           ; 0 bytes @ 0x0
   208                           
   209  0070                     ?_timer1_interrupt_config:	
   210                           ; 0 bytes @ 0x0
   211                           
   212  0070                     ?_adc_start:	
   213                           ; 0 bytes @ 0x0
   214                           
   215  0070                     ?_process_AD_Converter_Value:	
   216                           ; 0 bytes @ 0x0
   217                           
   218  0070                     ?_clrSampeTime:	
   219                           ; 0 bytes @ 0x0
   220                           
   221  0070                     ?_clearTwentyMinTimer:	
   222                           ; 0 bytes @ 0x0
   223                           
   224  0070                     ?_AD_Sample:	
   225                           ; 0 bytes @ 0x0
   226                           
   227  0070                     ?_initPB3:	
   228                           ; 0 bytes @ 0x0
   229                           
   230  0070                     ?_setPB3:	
   231                           ; 0 bytes @ 0x0
   232                           
   233  0070                     ?_initPB4:	
   234                           ; 0 bytes @ 0x0
   235                           
   236  0070                     ?_setPB4:	
   237                           ; 0 bytes @ 0x0
   238                           
   239  0070                     ?_initPB5:	
   240                           ; 0 bytes @ 0x0
   241                           
   242  0070                     ?_setPB5:	
   243                           ; 0 bytes @ 0x0
   244                           
   245  0070                     ?_initPB2_AsHighResistence:	
   246                           ; 0 bytes @ 0x0
   247                           
   248  0070                     ?_pwm_start:	
   249                           ; 0 bytes @ 0x0
   250                           
   251  0070                     ?_pwm_config:	
   252                           ; 0 bytes @ 0x0
   253                           
   254  0070                     ?_initPin:	
   255                           ; 0 bytes @ 0x0
   256                           
   257  0070                     ?_setPinInitVaule:	
   258                           ; 0 bytes @ 0x0
   259                           
   260  0070                     ?_selectAdChannel:	
   261                           ; 0 bytes @ 0x0
   262                           
   263  0070                     ?_reset:	
   264                           ; 0 bytes @ 0x0
   265                           
   266  0070                     ?_setAD_ConvertFlag:	
   267                           ; 0 bytes @ 0x0
   268                           
   269  0070                     ?_ISR:	
   270                           ; 0 bytes @ 0x0
   271                           
   272  0070                     ?i1_setAD_ConvertFlag:	
   273                           ; 0 bytes @ 0x0
   274                           
   275  0070                     ??i1_setAD_ConvertFlag:	
   276                           ; 0 bytes @ 0x0
   277                           
   278  0070                     ?_isPermitSampleTime:	
   279                           ; 0 bytes @ 0x0
   280                           
   281  0070                     ?_isFinishedTwentyMinTimer:	
   282                           ; 1 bytes @ 0x0
   283                           
   284  0070                     ?_isFinishedTwelveHoursTimer:	
   285                           ; 1 bytes @ 0x0
   286                           
   287  0070                     ?_isFinishedThreeHoursTimer:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0070                     ?_isFinishedOneHoursTimer:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0070                     ?_calPulseWidth:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0070                     ?_getAD_ConvertFlag:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0070                     ?_adc_get:	
   300                           ; 1 bytes @ 0x0
   301                           
   302  0070                     ?_main:	
   303                           ; 2 bytes @ 0x0
   304                           
   305  0070                     i1setAD_ConvertFlag@flag:	
   306                           ; 2 bytes @ 0x0
   307                           
   308                           
   309                           ; 1 bytes @ 0x0
   310  0070                     	ds	2
   311  0072                     ??_adc_get:	
   312  0072                     adc_get@val:	
   313                           ; 0 bytes @ 0x2
   314                           
   315                           
   316                           ; 2 bytes @ 0x2
   317  0072                     	ds	2
   318  0074                     ?_vPutSampleDataIntoTable:	
   319  0074                     vPutSampleDataIntoTable@uiSampleData:	
   320                           ; 0 bytes @ 0x4
   321                           
   322                           
   323                           ; 2 bytes @ 0x4
   324  0074                     	ds	2
   325  0076                     vPutSampleDataIntoTable@channel:	
   326                           
   327                           ; 1 bytes @ 0x6
   328  0076                     	ds	1
   329  0077                     ??_vPutSampleDataIntoTable:	
   330  0077                     vPutSampleDataIntoTable@i:	
   331                           ; 0 bytes @ 0x7
   332                           
   333                           
   334                           ; 2 bytes @ 0x7
   335  0077                     	ds	2
   336  0079                     ??_ISR:	
   337                           
   338                           ; 0 bytes @ 0x9
   339  0079                     	ds	4
   340                           
   341                           	psect	cstackBANK0
   342  0020                     __pcstackBANK0:	
   343  0020                     ??_clearTwelveHoursTimer:	
   344  0020                     ??_clearThreeHoursTimer:	
   345                           ; 0 bytes @ 0x0
   346                           
   347  0020                     ??_clock_config:	
   348                           ; 0 bytes @ 0x0
   349                           
   350  0020                     ??_timer1_config:	
   351                           ; 0 bytes @ 0x0
   352                           
   353  0020                     ??_timer1_interrupt_config:	
   354                           ; 0 bytes @ 0x0
   355                           
   356  0020                     ?_adc_test_init:	
   357                           ; 0 bytes @ 0x0
   358                           
   359  0020                     ??_adc_start:	
   360                           ; 0 bytes @ 0x0
   361                           
   362  0020                     ?_startTwentyMinTimer:	
   363                           ; 0 bytes @ 0x0
   364                           
   365  0020                     ??_isPermitSampleTime:	
   366                           ; 0 bytes @ 0x0
   367                           
   368  0020                     ??_clrSampeTime:	
   369                           ; 0 bytes @ 0x0
   370                           
   371  0020                     ??_isFinishedTwentyMinTimer:	
   372                           ; 0 bytes @ 0x0
   373                           
   374  0020                     ??_clearTwentyMinTimer:	
   375                           ; 0 bytes @ 0x0
   376                           
   377  0020                     ?_startTwelveHourTimer:	
   378                           ; 0 bytes @ 0x0
   379                           
   380  0020                     ??_isFinishedTwelveHoursTimer:	
   381                           ; 0 bytes @ 0x0
   382                           
   383  0020                     ?_startThreeHoursTimer:	
   384                           ; 0 bytes @ 0x0
   385                           
   386  0020                     ??_isFinishedThreeHoursTimer:	
   387                           ; 0 bytes @ 0x0
   388                           
   389  0020                     ?_startOneHoursTimer:	
   390                           ; 0 bytes @ 0x0
   391                           
   392  0020                     ??_isFinishedOneHoursTimer:	
   393                           ; 0 bytes @ 0x0
   394                           
   395  0020                     ??_AD_Sample:	
   396                           ; 0 bytes @ 0x0
   397                           
   398  0020                     ??_initPB3:	
   399                           ; 0 bytes @ 0x0
   400                           
   401  0020                     ??_setPB3:	
   402                           ; 0 bytes @ 0x0
   403                           
   404  0020                     ??_initPB4:	
   405                           ; 0 bytes @ 0x0
   406                           
   407  0020                     ??_setPB4:	
   408                           ; 0 bytes @ 0x0
   409                           
   410  0020                     ??_initPB5:	
   411                           ; 0 bytes @ 0x0
   412                           
   413  0020                     ??_setPB5:	
   414                           ; 0 bytes @ 0x0
   415                           
   416  0020                     ??_initPB2_AsHighResistence:	
   417                           ; 0 bytes @ 0x0
   418                           
   419  0020                     ??_pwm_start:	
   420                           ; 0 bytes @ 0x0
   421                           
   422  0020                     ??_pwm_config:	
   423                           ; 0 bytes @ 0x0
   424                           
   425  0020                     ??_selectAdChannel:	
   426                           ; 0 bytes @ 0x0
   427                           
   428  0020                     ??_reset:	
   429                           ; 0 bytes @ 0x0
   430                           
   431  0020                     ??_getAD_ConvertFlag:	
   432                           ; 0 bytes @ 0x0
   433                           
   434  0020                     ??_setAD_ConvertFlag:	
   435                           ; 0 bytes @ 0x0
   436                           
   437  0020                     ?_Filter:	
   438                           ; 0 bytes @ 0x0
   439                           
   440  0020                     initPB3@bValue:	
   441                           ; 2 bytes @ 0x0
   442                           
   443  0020                     setPB3@bValue:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0020                     initPB4@bValue:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0020                     setPB4@bValue:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0020                     initPB5@bValue:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0020                     setPB5@bValue:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0020                     pwm_start@ucCCP1CON_Value:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0020                     pwm_config@state:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0020                     setAD_ConvertFlag@flag:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  0020                     adc_test_init@ref:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0020                     startTwelveHourTimer@uiSetTime:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  0020                     startThreeHoursTimer@uiSetTime:	
   474                           ; 2 bytes @ 0x0
   475                           
   476  0020                     startOneHoursTimer@uiSetTime:	
   477                           ; 2 bytes @ 0x0
   478                           
   479  0020                     startTwentyMinTimer@uiSetValue:	
   480                           ; 2 bytes @ 0x0
   481                           
   482                           
   483                           ; 2 bytes @ 0x0
   484  0020                     	ds	1
   485  0021                     ??_adc_test_init:	
   486  0021                     ??_initPin:	
   487                           ; 0 bytes @ 0x1
   488                           
   489  0021                     ??_setPinInitVaule:	
   490                           ; 0 bytes @ 0x1
   491                           
   492  0021                     pwm_start@ucGetLowestTwoValue:	
   493                           ; 0 bytes @ 0x1
   494                           
   495                           
   496                           ; 1 bytes @ 0x1
   497  0021                     	ds	1
   498  0022                     ??_startTwentyMinTimer:	
   499  0022                     ??_startTwelveHourTimer:	
   500                           ; 0 bytes @ 0x2
   501                           
   502  0022                     ??_startThreeHoursTimer:	
   503                           ; 0 bytes @ 0x2
   504                           
   505  0022                     ??_startOneHoursTimer:	
   506                           ; 0 bytes @ 0x2
   507                           
   508  0022                     ??_Filter:	
   509                           ; 0 bytes @ 0x2
   510                           
   511  0022                     pwm_start@ucGeHighestSixValue:	
   512                           ; 0 bytes @ 0x2
   513                           
   514  0022                     adc_test_init@channel:	
   515                           ; 1 bytes @ 0x2
   516                           
   517                           
   518                           ; 1 bytes @ 0x2
   519  0022                     	ds	1
   520  0023                     ??_process_AD_Converter_Value:	
   521  0023                     pwm_start@ucConvertRealPulseWidth:	
   522                           ; 0 bytes @ 0x3
   523                           
   524                           
   525                           ; 1 bytes @ 0x3
   526  0023                     	ds	1
   527  0024                     pwm_start@ucPulseWidth:	
   528                           
   529                           ; 1 bytes @ 0x4
   530  0024                     	ds	2
   531  0026                     Filter@filter_buf:	
   532                           
   533                           ; 24 bytes @ 0x6
   534  0026                     	ds	24
   535  003E                     Filter@filter_temp:	
   536                           
   537                           ; 2 bytes @ 0x1E
   538  003E                     	ds	2
   539  0040                     Filter@filter_sum:	
   540                           
   541                           ; 2 bytes @ 0x20
   542  0040                     	ds	2
   543  0042                     Filter@tmpValue:	
   544                           
   545                           ; 1 bytes @ 0x22
   546  0042                     	ds	1
   547  0043                     Filter@cir:	
   548                           
   549                           ; 2 bytes @ 0x23
   550  0043                     	ds	2
   551  0045                     Filter@j:	
   552                           
   553                           ; 1 bytes @ 0x25
   554  0045                     	ds	1
   555  0046                     Filter@i:	
   556                           
   557                           ; 1 bytes @ 0x26
   558  0046                     	ds	1
   559  0047                     ?_getAdOriginalCh12Value:	
   560  0047                     ?_getAdOriginalCh13Value:	
   561                           ; 2 bytes @ 0x27
   562                           
   563                           
   564                           ; 2 bytes @ 0x27
   565  0047                     	ds	2
   566  0049                     ??_getAdOriginalCh12Value:	
   567  0049                     ??_getAdOriginalCh13Value:	
   568                           ; 0 bytes @ 0x29
   569                           
   570  0049                     ??_calPulseWidth:	
   571                           ; 0 bytes @ 0x29
   572                           
   573  0049                     calPulseWidth@uiGapValue:	
   574                           ; 0 bytes @ 0x29
   575                           
   576                           
   577                           ; 2 bytes @ 0x29
   578  0049                     	ds	2
   579  004B                     calPulseWidth@ucThreeTimesValue:	
   580                           
   581                           ; 1 bytes @ 0x2B
   582  004B                     	ds	1
   583  004C                     calPulseWidth@ucHalfValue:	
   584                           
   585                           ; 1 bytes @ 0x2C
   586  004C                     	ds	1
   587  004D                     calPulseWidth@ucPulseWidth:	
   588                           
   589                           ; 1 bytes @ 0x2D
   590  004D                     	ds	1
   591  004E                     calPulseWidth@ucGapValue:	
   592                           
   593                           ; 1 bytes @ 0x2E
   594  004E                     	ds	1
   595  004F                     calPulseWidth@uiChannel2Value:	
   596                           
   597                           ; 2 bytes @ 0x2F
   598  004F                     	ds	2
   599  0051                     ??_main:	
   600  0051                     main@ucChValue:	
   601                           ; 0 bytes @ 0x31
   602                           
   603                           
   604                           ; 2 bytes @ 0x31
   605  0051                     	ds	2
   606  0053                     main@ucPulseWidth:	
   607                           
   608                           ; 1 bytes @ 0x33
   609  0053                     	ds	1
   610  0054                     main@uiCh13Value:	
   611                           
   612                           ; 2 bytes @ 0x34
   613  0054                     	ds	2
   614                           
   615                           	psect	maintext
   616  0013                     __pmaintext:	
   617 ;;Data sizes: Strings 0, constant 0, data 1, bss 104, persistent 0 stack 0
   618 ;;Auto spaces:   Size  Autos    Used
   619 ;; COMMON          14     13      14
   620 ;; BANK0           80     54      80
   621 ;; BANK1           80      0      78
   622 ;; BANK3           96      0       0
   623 ;; BANK2           96      0       0
   624 ;;
   625 ;; Pointer list with targets:
   626 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   627 ;;
   628 ;; ?_getAdOriginalCh13Value	unsigned int  size(1) Largest target is 0
   629 ;;
   630 ;; ?_getAdOriginalCh12Value	unsigned int  size(1) Largest target is 0
   631 ;;
   632 ;; ?_Filter	unsigned int  size(1) Largest target is 0
   633 ;;
   634 ;; Filter@tmpValue	PTR int  size(1) Largest target is 24
   635 ;;		 -> uiSampleChannelFourteenth(BANK1[24]), uiSampleChannelFourth(BANK1[24]), uiSampleChannelFirst(BANK1[24]), 
   636 ;;
   637 ;;
   638 ;; Critical Paths under _main in COMMON
   639 ;;
   640 ;;   None.
   641 ;;
   642 ;; Critical Paths under _ISR in COMMON
   643 ;;
   644 ;;   _ISR->_vPutSampleDataIntoTable
   645 ;;   _vPutSampleDataIntoTable->_adc_get
   646 ;;
   647 ;; Critical Paths under _main in BANK0
   648 ;;
   649 ;;   _main->_calPulseWidth
   650 ;;   _calPulseWidth->_getAdOriginalCh12Value
   651 ;;   _getAdOriginalCh13Value->_Filter
   652 ;;   _process_AD_Converter_Value->_adc_test_init
   653 ;;   _getAdOriginalCh12Value->_Filter
   654 ;;   _setPinInitVaule->_setPB3
   655 ;;   _setPinInitVaule->_setPB4
   656 ;;   _setPinInitVaule->_setPB5
   657 ;;   _initPin->_initPB3
   658 ;;   _initPin->_initPB4
   659 ;;   _initPin->_initPB5
   660 ;;
   661 ;; Critical Paths under _ISR in BANK0
   662 ;;
   663 ;;   None.
   664 ;;
   665 ;; Critical Paths under _main in BANK1
   666 ;;
   667 ;;   None.
   668 ;;
   669 ;; Critical Paths under _ISR in BANK1
   670 ;;
   671 ;;   None.
   672 ;;
   673 ;; Critical Paths under _main in BANK3
   674 ;;
   675 ;;   None.
   676 ;;
   677 ;; Critical Paths under _ISR in BANK3
   678 ;;
   679 ;;   None.
   680 ;;
   681 ;; Critical Paths under _main in BANK2
   682 ;;
   683 ;;   None.
   684 ;;
   685 ;; Critical Paths under _ISR in BANK2
   686 ;;
   687 ;;   None.
   688 ;;
   689 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   690 ;;
   691 ;;
   692 ;;Call Graph Tables:
   693 ;;
   694 ;; ---------------------------------------------------------------------------------
   695 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   696 ;; ---------------------------------------------------------------------------------
   697 ;; (0) _main                                                 5     5      0    2194
   698 ;;                                             49 BANK0      5     5      0
   699 ;;                            _initPin
   700 ;;                    _setPinInitVaule
   701 ;;                    _selectAdChannel
   702 ;;                       _clock_config
   703 ;;                      _timer1_config
   704 ;;            _timer1_interrupt_config
   705 ;;                      _adc_test_init
   706 ;;                          _adc_start
   707 ;;                _startTwentyMinTimer
   708 ;;         _process_AD_Converter_Value
   709 ;;                 _isPermitSampleTime
   710 ;;                       _clrSampeTime
   711 ;;           _isFinishedTwentyMinTimer
   712 ;;             _getAdOriginalCh13Value
   713 ;;                      _calPulseWidth
   714 ;;                          _pwm_start
   715 ;;                             _setPB3
   716 ;;                             _setPB4
   717 ;;                             _setPB5
   718 ;;                _clearTwentyMinTimer
   719 ;;               _startTwelveHourTimer
   720 ;;         _isFinishedTwelveHoursTimer
   721 ;;              _clearTwelveHoursTimer
   722 ;;               _startThreeHoursTimer
   723 ;;          _isFinishedThreeHoursTimer
   724 ;;               _clearThreeHoursTimer
   725 ;;                 _startOneHoursTimer
   726 ;;            _isFinishedOneHoursTimer
   727 ;;                              _reset
   728 ;;                         _pwm_config
   729 ;; ---------------------------------------------------------------------------------
   730 ;; (1) _calPulseWidth                                        8     8      0     832
   731 ;;                                             41 BANK0      8     8      0
   732 ;;             _getAdOriginalCh12Value
   733 ;; ---------------------------------------------------------------------------------
   734 ;; (1) _getAdOriginalCh13Value                               2     0      2     620
   735 ;;                                             39 BANK0      2     0      2
   736 ;;                             _Filter
   737 ;; ---------------------------------------------------------------------------------
   738 ;; (1) _process_AD_Converter_Value                           0     0      0      66
   739 ;;                  _getAD_ConvertFlag
   740 ;;                  _setAD_ConvertFlag
   741 ;;                          _AD_Sample
   742 ;;                      _adc_test_init
   743 ;;                          _adc_start
   744 ;; ---------------------------------------------------------------------------------
   745 ;; (2) _getAdOriginalCh12Value                               2     0      2     620
   746 ;;                                             39 BANK0      2     0      2
   747 ;;                             _Filter
   748 ;; ---------------------------------------------------------------------------------
   749 ;; (1) _setPinInitVaule                                      0     0      0      66
   750 ;;                             _setPB3
   751 ;;                             _setPB4
   752 ;;                             _setPB5
   753 ;; ---------------------------------------------------------------------------------
   754 ;; (1) _initPin                                              0     0      0      66
   755 ;;           _initPB2_AsHighResistence
   756 ;;                            _initPB3
   757 ;;                            _initPB4
   758 ;;                            _initPB5
   759 ;; ---------------------------------------------------------------------------------
   760 ;; (2) _AD_Sample                                            0     0      0       0
   761 ;; ---------------------------------------------------------------------------------
   762 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   763 ;;                                              0 BANK0      1     1      0
   764 ;; ---------------------------------------------------------------------------------
   765 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   766 ;; ---------------------------------------------------------------------------------
   767 ;; (3) _Filter                                              39    37      2     620
   768 ;;                                              0 BANK0     39    37      2
   769 ;; ---------------------------------------------------------------------------------
   770 ;; (1) _isFinishedOneHoursTimer                              0     0      0       0
   771 ;; ---------------------------------------------------------------------------------
   772 ;; (1) _startOneHoursTimer                                   2     0      2      22
   773 ;;                                              0 BANK0      2     0      2
   774 ;; ---------------------------------------------------------------------------------
   775 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   776 ;; ---------------------------------------------------------------------------------
   777 ;; (1) _startThreeHoursTimer                                 2     0      2      22
   778 ;;                                              0 BANK0      2     0      2
   779 ;; ---------------------------------------------------------------------------------
   780 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   781 ;; ---------------------------------------------------------------------------------
   782 ;; (1) _startTwelveHourTimer                                 2     0      2      22
   783 ;;                                              0 BANK0      2     0      2
   784 ;; ---------------------------------------------------------------------------------
   785 ;; (1) _clearTwentyMinTimer                                  0     0      0       0
   786 ;; ---------------------------------------------------------------------------------
   787 ;; (1) _isFinishedTwentyMinTimer                             0     0      0       0
   788 ;; ---------------------------------------------------------------------------------
   789 ;; (1) _clrSampeTime                                         0     0      0       0
   790 ;; ---------------------------------------------------------------------------------
   791 ;; (1) _isPermitSampleTime                                   0     0      0       0
   792 ;; ---------------------------------------------------------------------------------
   793 ;; (1) _startTwentyMinTimer                                  2     0      2      22
   794 ;;                                              0 BANK0      2     0      2
   795 ;; ---------------------------------------------------------------------------------
   796 ;; (2) _adc_start                                            0     0      0       0
   797 ;; ---------------------------------------------------------------------------------
   798 ;; (2) _adc_test_init                                        3     2      1      44
   799 ;;                                              0 BANK0      3     2      1
   800 ;; ---------------------------------------------------------------------------------
   801 ;; (1) _timer1_interrupt_config                              0     0      0       0
   802 ;; ---------------------------------------------------------------------------------
   803 ;; (1) _timer1_config                                        0     0      0       0
   804 ;; ---------------------------------------------------------------------------------
   805 ;; (1) _clock_config                                         0     0      0       0
   806 ;; ---------------------------------------------------------------------------------
   807 ;; (1) _reset                                                0     0      0       0
   808 ;; ---------------------------------------------------------------------------------
   809 ;; (1) _selectAdChannel                                      0     0      0       0
   810 ;; ---------------------------------------------------------------------------------
   811 ;; (1) _pwm_config                                           1     1      0      22
   812 ;;                                              0 BANK0      1     1      0
   813 ;; ---------------------------------------------------------------------------------
   814 ;; (1) _pwm_start                                            5     5      0     210
   815 ;;                                              0 BANK0      5     5      0
   816 ;; ---------------------------------------------------------------------------------
   817 ;; (2) _initPB2_AsHighResistence                             0     0      0       0
   818 ;; ---------------------------------------------------------------------------------
   819 ;; (1) _setPB5                                               1     1      0      22
   820 ;;                                              0 BANK0      1     1      0
   821 ;; ---------------------------------------------------------------------------------
   822 ;; (2) _initPB5                                              1     1      0      22
   823 ;;                                              0 BANK0      1     1      0
   824 ;; ---------------------------------------------------------------------------------
   825 ;; (1) _setPB4                                               1     1      0      22
   826 ;;                                              0 BANK0      1     1      0
   827 ;; ---------------------------------------------------------------------------------
   828 ;; (2) _initPB4                                              1     1      0      22
   829 ;;                                              0 BANK0      1     1      0
   830 ;; ---------------------------------------------------------------------------------
   831 ;; (1) _setPB3                                               1     1      0      22
   832 ;;                                              0 BANK0      1     1      0
   833 ;; ---------------------------------------------------------------------------------
   834 ;; (2) _initPB3                                              1     1      0      22
   835 ;;                                              0 BANK0      1     1      0
   836 ;; ---------------------------------------------------------------------------------
   837 ;; (1) _clearThreeHoursTimer                                 0     0      0       0
   838 ;; ---------------------------------------------------------------------------------
   839 ;; (1) _clearTwelveHoursTimer                                0     0      0       0
   840 ;; ---------------------------------------------------------------------------------
   841 ;; Estimated maximum stack depth 3
   842 ;; ---------------------------------------------------------------------------------
   843 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   844 ;; ---------------------------------------------------------------------------------
   845 ;; (4) _ISR                                                  4     4      0     407
   846 ;;                                              9 COMMON     4     4      0
   847 ;;                i1_setAD_ConvertFlag
   848 ;;                            _adc_get
   849 ;;            _vPutSampleDataIntoTable
   850 ;; ---------------------------------------------------------------------------------
   851 ;; (5) i1_setAD_ConvertFlag                                  1     1      0      73
   852 ;;                                              0 COMMON     1     1      0
   853 ;; ---------------------------------------------------------------------------------
   854 ;; (5) _adc_get                                              4     2      2      24
   855 ;;                                              0 COMMON     4     2      2
   856 ;; ---------------------------------------------------------------------------------
   857 ;; (5) _vPutSampleDataIntoTable                              5     2      3     310
   858 ;;                                              4 COMMON     5     2      3
   859 ;;                            _adc_get (ARG)
   860 ;; ---------------------------------------------------------------------------------
   861 ;; Estimated maximum stack depth 5
   862 ;; ---------------------------------------------------------------------------------
   863 ;; Call Graph Graphs:
   864 ;; _main (ROOT)
   865 ;;   _initPin
   866 ;;     _initPB2_AsHighResistence
   867 ;;     _initPB3
   868 ;;     _initPB4
   869 ;;     _initPB5
   870 ;;   _setPinInitVaule
   871 ;;     _setPB3
   872 ;;     _setPB4
   873 ;;     _setPB5
   874 ;;   _selectAdChannel
   875 ;;   _clock_config
   876 ;;   _timer1_config
   877 ;;   _timer1_interrupt_config
   878 ;;   _adc_test_init
   879 ;;   _adc_start
   880 ;;   _startTwentyMinTimer
   881 ;;   _process_AD_Converter_Value
   882 ;;     _getAD_ConvertFlag
   883 ;;     _setAD_ConvertFlag
   884 ;;     _AD_Sample
   885 ;;     _adc_test_init
   886 ;;     _adc_start
   887 ;;   _isPermitSampleTime
   888 ;;   _clrSampeTime
   889 ;;   _isFinishedTwentyMinTimer
   890 ;;   _getAdOriginalCh13Value
   891 ;;     _Filter
   892 ;;   _calPulseWidth
   893 ;;     _getAdOriginalCh12Value
   894 ;;       _Filter
   895 ;;   _pwm_start
   896 ;;   _setPB3
   897 ;;   _setPB4
   898 ;;   _setPB5
   899 ;;   _clearTwentyMinTimer
   900 ;;   _startTwelveHourTimer
   901 ;;   _isFinishedTwelveHoursTimer
   902 ;;   _clearTwelveHoursTimer
   903 ;;   _startThreeHoursTimer
   904 ;;   _isFinishedThreeHoursTimer
   905 ;;   _clearThreeHoursTimer
   906 ;;   _startOneHoursTimer
   907 ;;   _isFinishedOneHoursTimer
   908 ;;   _reset
   909 ;;   _pwm_config
   910 ;;
   911 ;; _ISR (ROOT)
   912 ;;   i1_setAD_ConvertFlag
   913 ;;   _adc_get
   914 ;;   _vPutSampleDataIntoTable
   915 ;;     _adc_get (ARG)
   916 ;;
   917 ;; Address spaces:
   918 ;;Name               Size   Autos  Total    Cost      Usage
   919 ;;BANK3               60      0       0      10        0.0%
   920 ;;BITBANK3            60      0       0       9        0.0%
   921 ;;SFR3                 0      0       0       4        0.0%
   922 ;;BITSFR3              0      0       0       4        0.0%
   923 ;;BANK2               60      0       0      12        0.0%
   924 ;;BITBANK2            60      0       0      11        0.0%
   925 ;;SFR2                 0      0       0       5        0.0%
   926 ;;BITSFR2              0      0       0       5        0.0%
   927 ;;SFR1                 0      0       0       2        0.0%
   928 ;;BITSFR1              0      0       0       2        0.0%
   929 ;;BANK1               50      0      4E       8       97.5%
   930 ;;BITBANK1            50      0       0       7        0.0%
   931 ;;CODE                 0      0       0       0        0.0%
   932 ;;DATA                 0      0      B3       6        0.0%
   933 ;;ABS                  0      0      AC       3        0.0%
   934 ;;NULL                 0      0       0       0        0.0%
   935 ;;STACK                0      0       7       2        0.0%
   936 ;;BANK0               50     36      50       5      100.0%
   937 ;;BITBANK0            50      0       0       4        0.0%
   938 ;;SFR0                 0      0       0       1        0.0%
   939 ;;BITSFR0              0      0       0       1        0.0%
   940 ;;COMMON               E      D       E       1      100.0%
   941 ;;BITCOMMON            E      0       0       0        0.0%
   942                           
   943                           
   944 ;; *************** function _main *****************
   945 ;; Defined at:
   946 ;;		line 594 in file "D:\develop\190625\AK7030-OTP\main.c"
   947 ;; Parameters:    Size  Location     Type
   948 ;;		None
   949 ;; Auto vars:     Size  Location     Type
   950 ;;  ucChValue       2   49[BANK0 ] unsigned int 
   951 ;;  uiCh13Value     2   52[BANK0 ] unsigned int 
   952 ;;  ucPulseWidth    1   51[BANK0 ] unsigned char 
   953 ;; Return value:  Size  Location     Type
   954 ;;                  2  746[COMMON] int 
   955 ;; Registers used:
   956 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   957 ;; Tracked objects:
   958 ;;		On entry : 17F/0
   959 ;;		On exit  : 60/0
   960 ;;		Unchanged: FFE00/0
   961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   962 ;;      Params:         0       0       0       0       0
   963 ;;      Locals:         0       5       0       0       0
   964 ;;      Temps:          0       0       0       0       0
   965 ;;      Totals:         0       5       0       0       0
   966 ;;Total ram usage:        5 bytes
   967 ;; Hardware stack levels required when called:    5
   968 ;; This function calls:
   969 ;;		_initPin
   970 ;;		_setPinInitVaule
   971 ;;		_selectAdChannel
   972 ;;		_clock_config
   973 ;;		_timer1_config
   974 ;;		_timer1_interrupt_config
   975 ;;		_adc_test_init
   976 ;;		_adc_start
   977 ;;		_startTwentyMinTimer
   978 ;;		_process_AD_Converter_Value
   979 ;;		_isPermitSampleTime
   980 ;;		_clrSampeTime
   981 ;;		_isFinishedTwentyMinTimer
   982 ;;		_getAdOriginalCh13Value
   983 ;;		_calPulseWidth
   984 ;;		_pwm_start
   985 ;;		_setPB3
   986 ;;		_setPB4
   987 ;;		_setPB5
   988 ;;		_clearTwentyMinTimer
   989 ;;		_startTwelveHourTimer
   990 ;;		_isFinishedTwelveHoursTimer
   991 ;;		_clearTwelveHoursTimer
   992 ;;		_startThreeHoursTimer
   993 ;;		_isFinishedThreeHoursTimer
   994 ;;		_clearThreeHoursTimer
   995 ;;		_startOneHoursTimer
   996 ;;		_isFinishedOneHoursTimer
   997 ;;		_reset
   998 ;;		_pwm_config
   999 ;; This function is called by:
  1000 ;;		Startup code after reset
  1001 ;; This function uses a non-reentrant model
  1002 ;;
  1003  0013                     _main:	
  1004                           
  1005                           ;main.c: 605: initPin();
  1006                           
  1007                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1008  0013  118A  23C2  118A   	fcall	_initPin
  1009                           
  1010                           ;main.c: 606: setPinInitVaule();
  1011  0016  118A  2422  118A   	fcall	_setPinInitVaule
  1012                           
  1013                           ;main.c: 607: selectAdChannel();
  1014  0019  118A  24E5  118A   	fcall	_selectAdChannel
  1015                           
  1016                           ;main.c: 609: clock_config();
  1017  001C  118A  24D4  118A   	fcall	_clock_config
  1018                           
  1019                           ;main.c: 610: timer1_config();
  1020  001F  118A  24C2  118A   	fcall	_timer1_config
  1021                           
  1022                           ;main.c: 611: timer1_interrupt_config();
  1023  0022  118A  24F1  118A   	fcall	_timer1_interrupt_config
  1024                           
  1025                           ;main.c: 613: adc_test_init(12,3);
  1026  0025  3003               	movlw	3
  1027  0026  1283               	bcf	3,5	;RP0=0, select bank0
  1028  0027  00A0               	movwf	?_adc_test_init
  1029  0028  300C               	movlw	12
  1030  0029  118A  23AA  118A   	fcall	_adc_test_init
  1031                           
  1032                           ;main.c: 620: adc_start();
  1033  002C  118A  23BF  118A   	fcall	_adc_start
  1034                           
  1035                           ;main.c: 627: startTwentyMinTimer( 60 );
  1036  002F  303C               	movlw	60
  1037  0030  00A0               	movwf	?_startTwentyMinTimer
  1038  0031  01A1               	clrf	?_startTwentyMinTimer+1
  1039  0032  118A  2480  118A   	fcall	_startTwentyMinTimer
  1040  0035                     l3713:	
  1041  0035  0064               	clrwdt	;#
  1042                           
  1043                           ;main.c: 634: process_AD_Converter_Value();
  1044  0036  118A  2379  118A   	fcall	_process_AD_Converter_Value
  1045                           
  1046                           ;main.c: 636: if( isPermitSampleTime() )
  1047  0039  118A  24DC  118A   	fcall	_isPermitSampleTime
  1048  003C  3A00               	xorlw	0
  1049  003D  1903               	skipnz
  1050  003E  2835               	goto	l3713
  1051                           
  1052                           ;main.c: 637: {
  1053                           ;main.c: 640: clrSampeTime();
  1054  003F  118A  24F4  118A   	fcall	_clrSampeTime
  1055                           
  1056                           ;main.c: 648: enum systemStep {
  1057                           ;main.c: 649: INIT_STEP = 0,
  1058                           ;main.c: 650: START_UP_PWM_STEP,
  1059                           ;main.c: 651: CHECK_10_HOUR_TIMER_STEP,
  1060                           ;main.c: 652: STARTUP_3_HOUR_TIMER_STEP,
  1061                           ;main.c: 653: CHECK_3_HOUR_TIMER_STEP,
  1062                           ;main.c: 654: STARTUP_1_HOUR_TIMER_STEP,
  1063                           ;main.c: 655: CHECK_1_HOUR_TIMER_STEP,
  1064                           ;main.c: 656: READY_FOR_RESET_STEP = 99,
  1065                           ;main.c: 657: MEET_RESET_CONDITION_STEP,
  1066                           ;main.c: 658: RESET_STEP,
  1067                           ;main.c: 659: };
  1068                           ;main.c: 661: static enum systemStep ucStep = INIT_STEP;
  1069                           ;main.c: 663: switch(ucStep)
  1070  0042  2991               	goto	l3875
  1071  0043                     l3721:	
  1072                           
  1073                           ;main.c: 667: {
  1074                           ;main.c: 672: static unsigned char ucTimerP3s = 0;
  1075                           ;main.c: 674: if( isFinishedTwentyMinTimer() )
  1076  0043  118A  24B8  118A   	fcall	_isFinishedTwentyMinTimer
  1077  0046  3A00               	xorlw	0
  1078  0047  1903               	skipnz
  1079  0048  284D               	goto	l3727
  1080                           
  1081                           ;main.c: 675: {
  1082                           ;main.c: 676: ucStep = READY_FOR_RESET_STEP;
  1083  0049  3063               	movlw	99
  1084  004A  00EA               	movwf	main@ucStep
  1085                           
  1086                           ;main.c: 677: ucTimerP3s = 0;
  1087  004B  01EB               	clrf	main@ucTimerP3s
  1088                           
  1089                           ;main.c: 678: }
  1090  004C  2835               	goto	l3713
  1091  004D                     l3727:	
  1092                           
  1093                           ;main.c: 679: else
  1094                           ;main.c: 680: {
  1095                           ;main.c: 681: if( getAdOriginalCh13Value() > 90 )
  1096  004D  118A  21B3  118A   	fcall	_getAdOriginalCh13Value
  1097  0050  3000               	movlw	0
  1098  0051  0248               	subwf	?_getAdOriginalCh13Value+1,w
  1099  0052  305B               	movlw	91
  1100  0053  1903               	skipnz
  1101  0054  0247               	subwf	?_getAdOriginalCh13Value,w
  1102  0055  1C03               	skipc
  1103  0056  2859               	goto	l3731
  1104                           
  1105                           ;main.c: 682: {
  1106                           ;main.c: 683: ucTimerP3s++;
  1107  0057  0AEB               	incf	main@ucTimerP3s,f
  1108                           
  1109                           ;main.c: 684: }
  1110  0058  285A               	goto	l3733
  1111  0059                     l3731:	
  1112                           
  1113                           ;main.c: 685: else
  1114                           ;main.c: 686: ucTimerP3s = 0;
  1115  0059  01EB               	clrf	main@ucTimerP3s
  1116  005A                     l3733:	
  1117                           
  1118                           ;main.c: 688: if( ucTimerP3s >= 3)
  1119  005A  3003               	movlw	3
  1120  005B  026B               	subwf	main@ucTimerP3s,w
  1121  005C  1C03               	skipc
  1122  005D  2835               	goto	l3713
  1123                           
  1124                           ;main.c: 689: {
  1125                           ;main.c: 690: ucTimerP3s = 0;
  1126  005E  01EB               	clrf	main@ucTimerP3s
  1127                           
  1128                           ;main.c: 691: ucStep = START_UP_PWM_STEP;
  1129  005F  01EA               	clrf	main@ucStep
  1130  0060  0AEA               	incf	main@ucStep,f
  1131  0061                     l756:	
  1132                           
  1133                           ;main.c: 692: }
  1134                           ;main.c: 694: }
  1135                           ;main.c: 698: break;
  1136  0061  2835               	goto	l3713
  1137  0062                     l3739:	
  1138                           
  1139                           ;main.c: 708: ucPulseWidth = calPulseWidth();
  1140  0062  118A  21BA  118A   	fcall	_calPulseWidth
  1141  0065  00D3               	movwf	main@ucPulseWidth
  1142                           
  1143                           ;main.c: 710: pwm_start( ucPulseWidth );
  1144  0066  0853               	movf	main@ucPulseWidth,w
  1145  0067  118A  23F3  118A   	fcall	_pwm_start
  1146                           
  1147                           ;main.c: 712: setPB3(0);
  1148  006A  3000               	movlw	0
  1149  006B  118A  242A  118A   	fcall	_setPB3
  1150                           
  1151                           ;main.c: 713: setPB4(1);
  1152  006E  3001               	movlw	1
  1153  006F  118A  2434  118A   	fcall	_setPB4
  1154                           
  1155                           ;main.c: 714: setPB5(0);
  1156  0072  3000               	movlw	0
  1157  0073  118A  243C  118A   	fcall	_setPB5
  1158                           
  1159                           ;main.c: 715: clearTwentyMinTimer();
  1160  0076  118A  24E1  118A   	fcall	_clearTwentyMinTimer
  1161                           
  1162                           ;main.c: 716: startTwelveHourTimer( 240);
  1163  0079  30F0               	movlw	240
  1164  007A  00A0               	movwf	?_startTwelveHourTimer
  1165  007B  01A1               	clrf	?_startTwelveHourTimer+1
  1166  007C  118A  2472  118A   	fcall	_startTwelveHourTimer
  1167                           
  1168                           ;main.c: 717: ucStep = CHECK_10_HOUR_TIMER_STEP;
  1169  007F  3002               	movlw	2
  1170  0080  298D               	goto	L7
  1171  0081                     l3757:	
  1172                           ;main.c: 718: break;
  1173                           
  1174                           
  1175                           ;main.c: 722: {
  1176                           ;main.c: 727: static unsigned char ucTimerP5s = 0;
  1177                           ;main.c: 729: if( isFinishedTwelveHoursTimer () )
  1178  0081  118A  24AE  118A   	fcall	_isFinishedTwelveHoursTimer
  1179  0084  3A00               	xorlw	0
  1180  0085  1903               	skipnz
  1181  0086  2889               	goto	l3761
  1182  0087                     l3759:	
  1183                           
  1184                           ;main.c: 730: ucStep = READY_FOR_RESET_STEP;
  1185  0087  3063               	movlw	99
  1186  0088  298D               	goto	L7
  1187  0089                     l3761:	
  1188                           
  1189                           ;main.c: 731: else
  1190                           ;main.c: 732: {
  1191                           ;main.c: 733: if( getAdOriginalCh13Value() < 200 )
  1192  0089  118A  21B3  118A   	fcall	_getAdOriginalCh13Value
  1193  008C  3000               	movlw	0
  1194  008D  0248               	subwf	?_getAdOriginalCh13Value+1,w
  1195  008E  30C8               	movlw	200
  1196  008F  1903               	skipnz
  1197  0090  0247               	subwf	?_getAdOriginalCh13Value,w
  1198  0091  1803               	skipnc
  1199  0092  2895               	goto	l3765
  1200                           
  1201                           ;main.c: 734: ucTimerP5s++;
  1202  0093  0AEC               	incf	main@ucTimerP5s,f
  1203  0094  2896               	goto	l3767
  1204  0095                     l3765:	
  1205                           
  1206                           ;main.c: 735: else
  1207                           ;main.c: 736: ucTimerP5s = 0;
  1208  0095  01EC               	clrf	main@ucTimerP5s
  1209  0096                     l3767:	
  1210                           
  1211                           ;main.c: 738: if( ucTimerP5s > 5)
  1212  0096  3006               	movlw	6
  1213  0097  026C               	subwf	main@ucTimerP5s,w
  1214  0098  1C03               	skipc
  1215  0099  2835               	goto	l3713
  1216  009A  3003               	movlw	3
  1217                           
  1218                           ;main.c: 739: {
  1219                           ;main.c: 740: ucTimerP5s = 0;
  1220  009B  01EC               	clrf	main@ucTimerP5s
  1221                           
  1222                           ;main.c: 741: ucStep = STARTUP_3_HOUR_TIMER_STEP;
  1223  009C  298D               	goto	L7
  1224  009D                     l3773:	
  1225                           
  1226                           ;main.c: 749: {
  1227                           ;main.c: 750: clearTwelveHoursTimer();
  1228  009D  118A  24ED  118A   	fcall	_clearTwelveHoursTimer
  1229                           
  1230                           ;main.c: 751: startThreeHoursTimer(180);
  1231  00A0  30B4               	movlw	180
  1232  00A1  00A0               	movwf	?_startThreeHoursTimer
  1233  00A2  01A1               	clrf	?_startThreeHoursTimer+1
  1234  00A3  118A  2464  118A   	fcall	_startThreeHoursTimer
  1235                           
  1236                           ;main.c: 752: ucStep = CHECK_3_HOUR_TIMER_STEP;
  1237  00A6  3004               	movlw	4
  1238  00A7  298D               	goto	L7
  1239  00A8                     l3777:	
  1240                           ;main.c: 753: break;
  1241                           
  1242                           
  1243                           ;main.c: 757: {
  1244                           ;main.c: 758: static unsigned char ucTimerP5s = 0;
  1245                           ;main.c: 760: if( isFinishedThreeHoursTimer() )
  1246  00A8  118A  24A4  118A   	fcall	_isFinishedThreeHoursTimer
  1247  00AB  3A00               	xorlw	0
  1248  00AC  1D03               	btfss	3,2
  1249  00AD  2887               	goto	l3759
  1250                           
  1251                           ;main.c: 762: else
  1252                           ;main.c: 763: {
  1253                           ;main.c: 764: if( getAdOriginalCh13Value() < 85 )
  1254  00AE  118A  21B3  118A   	fcall	_getAdOriginalCh13Value
  1255  00B1  3000               	movlw	0
  1256  00B2  0248               	subwf	?_getAdOriginalCh13Value+1,w
  1257  00B3  3055               	movlw	85
  1258  00B4  1903               	skipnz
  1259  00B5  0247               	subwf	?_getAdOriginalCh13Value,w
  1260  00B6  1803               	skipnc
  1261  00B7  28BA               	goto	l3785
  1262                           
  1263                           ;main.c: 765: ucTimerP5s++;
  1264  00B8  0AE8               	incf	main@cTimerP5s_792,f
  1265  00B9  28BB               	goto	l3787
  1266  00BA                     l3785:	
  1267                           
  1268                           ;main.c: 766: else
  1269                           ;main.c: 767: ucTimerP5s = 0;
  1270  00BA  01E8               	clrf	main@cTimerP5s_792
  1271  00BB                     l3787:	
  1272                           
  1273                           ;main.c: 769: if( ucTimerP5s > 5)
  1274  00BB  3006               	movlw	6
  1275  00BC  0268               	subwf	main@cTimerP5s_792,w
  1276  00BD  1C03               	skipc
  1277  00BE  2835               	goto	l3713
  1278  00BF  3005               	movlw	5
  1279                           
  1280                           ;main.c: 770: {
  1281                           ;main.c: 771: ucTimerP5s = 0;
  1282  00C0  01E8               	clrf	main@cTimerP5s_792
  1283                           
  1284                           ;main.c: 772: ucStep = STARTUP_1_HOUR_TIMER_STEP;
  1285  00C1  298D               	goto	L7
  1286  00C2                     l3793:	
  1287                           
  1288                           ;main.c: 779: {
  1289                           ;main.c: 780: clearThreeHoursTimer();
  1290  00C2  118A  24E9  118A   	fcall	_clearThreeHoursTimer
  1291                           
  1292                           ;main.c: 781: startOneHoursTimer( 120 );
  1293  00C5  3078               	movlw	120
  1294  00C6  00A0               	movwf	?_startOneHoursTimer
  1295  00C7  01A1               	clrf	?_startOneHoursTimer+1
  1296  00C8  118A  2456  118A   	fcall	_startOneHoursTimer
  1297                           
  1298                           ;main.c: 782: setPB3(1);
  1299  00CB  3001               	movlw	1
  1300  00CC  118A  242A  118A   	fcall	_setPB3
  1301                           
  1302                           ;main.c: 783: setPB4(0);
  1303  00CF  3000               	movlw	0
  1304  00D0  118A  2434  118A   	fcall	_setPB4
  1305                           
  1306                           ;main.c: 784: setPB5(1);
  1307  00D3  3001               	movlw	1
  1308  00D4  118A  243C  118A   	fcall	_setPB5
  1309                           
  1310                           ;main.c: 785: ucStep = CHECK_1_HOUR_TIMER_STEP;
  1311  00D7  3006               	movlw	6
  1312  00D8  298D               	goto	L7
  1313  00D9                     l3805:	
  1314                           ;main.c: 786: break;
  1315                           
  1316                           
  1317                           ;main.c: 790: {
  1318                           ;main.c: 795: static unsigned int uiTimerOneP5s = 0;
  1319                           ;main.c: 796: static unsigned int uiTimerTwoP5s = 0;
  1320                           ;main.c: 797: static unsigned int uiTimerThreeP5s = 0;
  1321                           ;main.c: 799: unsigned int uiCh13Value = getAdOriginalCh13Value();
  1322  00D9  118A  21B3  118A   	fcall	_getAdOriginalCh13Value
  1323  00DC  0848               	movf	?_getAdOriginalCh13Value+1,w
  1324  00DD  00D5               	movwf	main@uiCh13Value+1
  1325  00DE  0847               	movf	?_getAdOriginalCh13Value,w
  1326  00DF  00D4               	movwf	main@uiCh13Value
  1327                           
  1328                           ;main.c: 802: if( isFinishedOneHoursTimer() )
  1329  00E0  118A  249A  118A   	fcall	_isFinishedOneHoursTimer
  1330  00E3  3A00               	xorlw	0
  1331  00E4  1D03               	btfss	3,2
  1332  00E5  2887               	goto	l3759
  1333                           
  1334                           ;main.c: 804: else
  1335                           ;main.c: 805: {
  1336                           ;main.c: 806: if( uiCh13Value > 100 )
  1337  00E6  3000               	movlw	0
  1338  00E7  0255               	subwf	main@uiCh13Value+1,w
  1339  00E8  3065               	movlw	101
  1340  00E9  1903               	skipnz
  1341  00EA  0254               	subwf	main@uiCh13Value,w
  1342  00EB  1C03               	skipc
  1343  00EC  28FD               	goto	l3821
  1344                           
  1345                           ;main.c: 807: {
  1346                           ;main.c: 808: if( uiTimerOneP5s <= 5 )
  1347  00ED  3000               	movlw	0
  1348  00EE  025F               	subwf	main@uiTimerOneP5s+1,w
  1349  00EF  3006               	movlw	6
  1350  00F0  1903               	skipnz
  1351  00F1  025E               	subwf	main@uiTimerOneP5s,w
  1352  00F2  1803               	skipnc
  1353  00F3  28F7               	goto	l3817
  1354                           
  1355                           ;main.c: 809: uiTimerOneP5s++;
  1356  00F4  0ADE               	incf	main@uiTimerOneP5s,f
  1357  00F5  1903               	skipnz
  1358  00F6  0ADF               	incf	main@uiTimerOneP5s+1,f
  1359  00F7                     l3817:	
  1360                           
  1361                           ;main.c: 810: uiTimerTwoP5s = 0;
  1362  00F7  1683               	bsf	3,5	;RP0=1, select bank1
  1363  00F8  01A4               	clrf	main@uiTimerTwoP5s^(0+128)
  1364  00F9  01A5               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1365                           
  1366                           ;main.c: 811: uiTimerThreeP5s = 0;
  1367  00FA  01A2               	clrf	main@uiTimerThreeP5s^(0+128)
  1368  00FB  01A3               	clrf	(main@uiTimerThreeP5s+1)^(0+128)
  1369                           
  1370                           ;main.c: 812: }
  1371  00FC  28FF               	goto	l3823
  1372  00FD                     l3821:	
  1373                           
  1374                           ;main.c: 813: else
  1375                           ;main.c: 814: {
  1376                           ;main.c: 815: uiTimerOneP5s = 0;
  1377  00FD  01DE               	clrf	main@uiTimerOneP5s
  1378  00FE  01DF               	clrf	main@uiTimerOneP5s+1
  1379  00FF                     l3823:	
  1380                           
  1381                           ;main.c: 816: }
  1382                           ;main.c: 819: if(uiTimerOneP5s > 5)
  1383  00FF  3000               	movlw	0
  1384  0100  1283               	bcf	3,5	;RP0=0, select bank0
  1385  0101  025F               	subwf	main@uiTimerOneP5s+1,w
  1386  0102  3006               	movlw	6
  1387  0103  1903               	skipnz
  1388  0104  025E               	subwf	main@uiTimerOneP5s,w
  1389                           
  1390                           ;main.c: 820: {
  1391                           ;main.c: 821: setPB3(0);
  1392  0105  3000               	movlw	0
  1393  0106  1C03               	skipc
  1394  0107  2919               	goto	L8
  1395  0108  118A  242A  118A   	fcall	_setPB3
  1396                           
  1397                           ;main.c: 822: setPB4(1);
  1398  010B  3001               	movlw	1
  1399  010C  118A  2434  118A   	fcall	_setPB4
  1400                           
  1401                           ;main.c: 823: setPB5(0);
  1402  010F  3000               	movlw	0
  1403  0110  118A  243C  118A   	fcall	_setPB5
  1404                           
  1405                           ;main.c: 825: uiTimerOneP5s = 0;
  1406  0113  01DE               	clrf	main@uiTimerOneP5s
  1407  0114  01DF               	clrf	main@uiTimerOneP5s+1
  1408                           
  1409                           ;main.c: 826: uiTimerTwoP5s = 0;
  1410  0115  1683               	bsf	3,5	;RP0=1, select bank1
  1411  0116  01A4               	clrf	main@uiTimerTwoP5s^(0+128)
  1412  0117  01A5               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1413                           
  1414                           ;main.c: 827: }
  1415  0118  2835               	goto	l3713
  1416  0119                     L8:	
  1417                           ;main.c: 828: else
  1418                           ;main.c: 829: {
  1419                           ;main.c: 830: if( uiCh13Value < 90 )
  1420                           
  1421  0119  0255               	subwf	main@uiCh13Value+1,w
  1422  011A  305A               	movlw	90
  1423  011B  1903               	skipnz
  1424  011C  0254               	subwf	main@uiCh13Value,w
  1425  011D  1803               	skipnc
  1426  011E  292B               	goto	l3837
  1427                           
  1428                           ;main.c: 831: {
  1429                           ;main.c: 832: if( uiTimerTwoP5s <= 5)
  1430  011F  3000               	movlw	0
  1431  0120  1683               	bsf	3,5	;RP0=1, select bank1
  1432  0121  0225               	subwf	(main@uiTimerTwoP5s+1)^(0+128),w
  1433  0122  3006               	movlw	6
  1434  0123  1903               	skipnz
  1435  0124  0224               	subwf	main@uiTimerTwoP5s^(0+128),w
  1436  0125  1803               	skipnc
  1437  0126  2930               	goto	l3839
  1438                           
  1439                           ;main.c: 833: uiTimerTwoP5s++;
  1440  0127  0AA4               	incf	main@uiTimerTwoP5s^(0+128),f
  1441  0128  1903               	skipnz
  1442  0129  0AA5               	incf	(main@uiTimerTwoP5s+1)^(0+128),f
  1443  012A  2930               	goto	l3839
  1444  012B                     l3837:	
  1445                           
  1446                           ;main.c: 835: else
  1447                           ;main.c: 836: {
  1448                           ;main.c: 837: uiTimerTwoP5s = 0;
  1449  012B  1683               	bsf	3,5	;RP0=1, select bank1
  1450  012C  01A4               	clrf	main@uiTimerTwoP5s^(0+128)
  1451  012D  01A5               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1452                           
  1453                           ;main.c: 838: uiTimerThreeP5s = 0;
  1454  012E  01A2               	clrf	main@uiTimerThreeP5s^(0+128)
  1455  012F  01A3               	clrf	(main@uiTimerThreeP5s+1)^(0+128)
  1456  0130                     l3839:	
  1457                           
  1458                           ;main.c: 839: }
  1459                           ;main.c: 841: if(uiTimerTwoP5s > 5)
  1460  0130  3000               	movlw	0
  1461  0131  0225               	subwf	(main@uiTimerTwoP5s+1)^(0+128),w
  1462  0132  3006               	movlw	6
  1463  0133  1903               	skipnz
  1464  0134  0224               	subwf	main@uiTimerTwoP5s^(0+128),w
  1465  0135  1C03               	skipc
  1466  0136  2835               	goto	l3713
  1467                           
  1468                           ;main.c: 842: {
  1469                           ;main.c: 843: setPB3(1);
  1470  0137  3001               	movlw	1
  1471  0138  118A  242A  118A   	fcall	_setPB3
  1472                           
  1473                           ;main.c: 844: setPB4(0);
  1474  013B  3000               	movlw	0
  1475  013C  118A  2434  118A   	fcall	_setPB4
  1476                           
  1477                           ;main.c: 845: setPB5(1);
  1478  013F  3001               	movlw	1
  1479  0140  118A  243C  118A   	fcall	_setPB5
  1480                           
  1481                           ;main.c: 847: if(uiCh13Value < 25)
  1482  0143  3000               	movlw	0
  1483  0144  0255               	subwf	main@uiCh13Value+1,w
  1484  0145  3019               	movlw	25
  1485  0146  1903               	skipnz
  1486  0147  0254               	subwf	main@uiCh13Value,w
  1487  0148  1803               	skipnc
  1488  0149  294F               	goto	l3847
  1489                           
  1490                           ;main.c: 848: uiTimerThreeP5s++;
  1491  014A  1683               	bsf	3,5	;RP0=1, select bank1
  1492  014B  0AA2               	incf	main@uiTimerThreeP5s^(0+128),f
  1493  014C  1903               	skipnz
  1494  014D  0AA3               	incf	(main@uiTimerThreeP5s+1)^(0+128),f
  1495  014E  2952               	goto	l3849
  1496  014F                     l3847:	
  1497                           
  1498                           ;main.c: 849: else
  1499                           ;main.c: 850: uiTimerThreeP5s = 0;
  1500  014F  1683               	bsf	3,5	;RP0=1, select bank1
  1501  0150  01A2               	clrf	main@uiTimerThreeP5s^(0+128)
  1502  0151  01A3               	clrf	(main@uiTimerThreeP5s+1)^(0+128)
  1503  0152                     l3849:	
  1504                           
  1505                           ;main.c: 852: if(uiTimerThreeP5s > 5)
  1506  0152  3000               	movlw	0
  1507  0153  0223               	subwf	(main@uiTimerThreeP5s+1)^(0+128),w
  1508  0154  3006               	movlw	6
  1509  0155  1903               	skipnz
  1510  0156  0222               	subwf	main@uiTimerThreeP5s^(0+128),w
  1511  0157  1C03               	skipc
  1512  0158  2835               	goto	l3713
  1513  0159                     l3851:	
  1514                           
  1515                           ;main.c: 853: reset();
  1516  0159  118A  24F6  118A   	fcall	_reset
  1517  015C  2835               	goto	l3713
  1518  015D                     l3853:	
  1519                           
  1520                           ;main.c: 862: {
  1521                           ;main.c: 863: setPB3(0);
  1522  015D  3000               	movlw	0
  1523  015E  118A  242A  118A   	fcall	_setPB3
  1524                           
  1525                           ;main.c: 864: setPB4(0);
  1526  0161  3000               	movlw	0
  1527  0162  118A  2434  118A   	fcall	_setPB4
  1528                           
  1529                           ;main.c: 865: setPB5(1);
  1530  0165  3001               	movlw	1
  1531  0166  118A  243C  118A   	fcall	_setPB5
  1532                           
  1533                           ;main.c: 866: pwm_config(0);
  1534  0169  3000               	movlw	0
  1535  016A  118A  248E  118A   	fcall	_pwm_config
  1536                           
  1537                           ;main.c: 867: pwm_start(60);
  1538  016D  303C               	movlw	60
  1539  016E  118A  23F3  118A   	fcall	_pwm_start
  1540                           
  1541                           ;main.c: 868: pwm_config(1);
  1542  0171  3001               	movlw	1
  1543  0172  118A  248E  118A   	fcall	_pwm_config
  1544                           
  1545                           ;main.c: 869: ucStep = MEET_RESET_CONDITION_STEP;
  1546  0175  3064               	movlw	100
  1547  0176  298D               	goto	L7
  1548  0177                     l3857:	
  1549                           ;main.c: 870: break;
  1550                           
  1551                           
  1552                           ;main.c: 874: {
  1553                           ;main.c: 875: static unsigned char ucTimerP5s = 0;
  1554                           ;main.c: 876: unsigned int ucChValue = getAdOriginalCh13Value();
  1555  0177  118A  21B3  118A   	fcall	_getAdOriginalCh13Value
  1556  017A  0848               	movf	?_getAdOriginalCh13Value+1,w
  1557  017B  00D2               	movwf	main@ucChValue+1
  1558  017C  0847               	movf	?_getAdOriginalCh13Value,w
  1559  017D  00D1               	movwf	main@ucChValue
  1560                           
  1561                           ;main.c: 878: if( ucChValue > 50 )
  1562  017E  3000               	movlw	0
  1563  017F  0252               	subwf	main@ucChValue+1,w
  1564  0180  3033               	movlw	51
  1565  0181  1903               	skipnz
  1566  0182  0251               	subwf	main@ucChValue,w
  1567  0183  1C03               	skipc
  1568  0184  2987               	goto	l3863
  1569                           
  1570                           ;main.c: 879: ucTimerP5s++;
  1571  0185  0AE9               	incf	main@cTimerP5s_797,f
  1572  0186  2988               	goto	l3865
  1573  0187                     l3863:	
  1574                           
  1575                           ;main.c: 880: else
  1576                           ;main.c: 881: ucTimerP5s = 0;
  1577  0187  01E9               	clrf	main@cTimerP5s_797
  1578  0188                     l3865:	
  1579                           
  1580                           ;main.c: 883: if(ucTimerP5s > 5)
  1581  0188  3006               	movlw	6
  1582  0189  0269               	subwf	main@cTimerP5s_797,w
  1583  018A  1C03               	skipc
  1584  018B  2835               	goto	l3713
  1585                           
  1586                           ;main.c: 884: ucStep = RESET_STEP;
  1587  018C  3065               	movlw	101
  1588  018D                     L7:	
  1589  018D  00EA               	movwf	main@ucStep
  1590  018E  2835               	goto	l3713
  1591  018F                     l3869:	
  1592                           
  1593                           ;main.c: 889: {
  1594                           ;main.c: 890: ucStep = INIT_STEP;
  1595  018F  01EA               	clrf	main@ucStep
  1596  0190  2959               	goto	l3851
  1597  0191                     l3875:	
  1598  0191  086A               	movf	main@ucStep,w
  1599                           
  1600                           ; Switch size 1, requested type "space"
  1601                           ; Number of cases is 10, Range of values is 0 to 101
  1602                           ; switch strategies available:
  1603                           ; Name         Instructions Cycles
  1604                           ; simple_byte           31    16 (average)
  1605                           ; direct_byte          211     7 (fixed)
  1606                           ; jumptable            260     6 (fixed)
  1607                           ; rangetable           106     6 (fixed)
  1608                           ; spacedrange          210     9 (fixed)
  1609                           ; locatedrange         102     3 (fixed)
  1610                           ;	Chosen strategy is simple_byte
  1611  0192  3A00               	xorlw	0	; case 0
  1612  0193  1903               	skipnz
  1613  0194  2843               	goto	l3721
  1614  0195  3A01               	xorlw	1	; case 1
  1615  0196  1903               	skipnz
  1616  0197  2862               	goto	l3739
  1617  0198  3A03               	xorlw	3	; case 2
  1618  0199  1903               	skipnz
  1619  019A  2881               	goto	l3757
  1620  019B  3A01               	xorlw	1	; case 3
  1621  019C  1903               	skipnz
  1622  019D  289D               	goto	l3773
  1623  019E  3A07               	xorlw	7	; case 4
  1624  019F  1903               	skipnz
  1625  01A0  28A8               	goto	l3777
  1626  01A1  3A01               	xorlw	1	; case 5
  1627  01A2  1903               	skipnz
  1628  01A3  28C2               	goto	l3793
  1629  01A4  3A03               	xorlw	3	; case 6
  1630  01A5  1903               	skipnz
  1631  01A6  28D9               	goto	l3805
  1632  01A7  3A65               	xorlw	101	; case 99
  1633  01A8  1903               	skipnz
  1634  01A9  295D               	goto	l3853
  1635  01AA  3A07               	xorlw	7	; case 100
  1636  01AB  1903               	skipnz
  1637  01AC  2977               	goto	l3857
  1638  01AD  3A01               	xorlw	1	; case 101
  1639  01AE  1903               	skipnz
  1640  01AF  298F               	goto	l3869
  1641  01B0  2861               	goto	l756
  1642  01B1  118A  2811         	ljmp	start
  1643  01B3                     __end_of_main:	
  1644                           
  1645                           	psect	text835
  1646  01B3                     __ptext835:	
  1647 ;; =============== function _calPulseWidth ends ============
  1648                           
  1649                           
  1650 ;; *************** function _getAdOriginalCh13Value *****************
  1651 ;; Defined at:
  1652 ;;		line 238 in file "D:\develop\190625\AK7030-OTP\common.c"
  1653 ;; Parameters:    Size  Location     Type
  1654 ;;		None
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;		None
  1657 ;; Return value:  Size  Location     Type
  1658 ;;                  2   39[BANK0 ] unsigned int 
  1659 ;; Registers used:
  1660 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1661 ;; Tracked objects:
  1662 ;;		On entry : 60/0
  1663 ;;		On exit  : 160/0
  1664 ;;		Unchanged: FFE00/0
  1665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1666 ;;      Params:         0       2       0       0       0
  1667 ;;      Locals:         0       0       0       0       0
  1668 ;;      Temps:          0       0       0       0       0
  1669 ;;      Totals:         0       2       0       0       0
  1670 ;;Total ram usage:        2 bytes
  1671 ;; Hardware stack levels used:    1
  1672 ;; Hardware stack levels required when called:    3
  1673 ;; This function calls:
  1674 ;;		_Filter
  1675 ;; This function is called by:
  1676 ;;		_main
  1677 ;; This function uses a non-reentrant model
  1678 ;;
  1679  01B3                     _getAdOriginalCh13Value:	
  1680                           
  1681                           ;common.c: 240: return Filter(uiSampleChannelFourth);
  1682                           
  1683                           ; Regs used in _getAdOriginalCh13Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  1684  01B3  30D6               	movlw	_uiSampleChannelFourth& (0+255)
  1685  01B4  21F2               	fcall	_Filter
  1686  01B5  0821               	movf	?_Filter+1,w
  1687  01B6  00C8               	movwf	?_getAdOriginalCh13Value+1
  1688  01B7  0820               	movf	?_Filter,w
  1689  01B8  00C7               	movwf	?_getAdOriginalCh13Value
  1690  01B9  0008               	return
  1691  01BA                     __end_of_getAdOriginalCh13Value:	
  1692  01BA                     __ptext834:	
  1693 ;; =============== function _main ends ============
  1694                           
  1695                           
  1696 ;; *************** function _calPulseWidth *****************
  1697 ;; Defined at:
  1698 ;;		line 526 in file "D:\develop\190625\AK7030-OTP\main.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;		None
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;  uiGapValue      2   41[BANK0 ] unsigned int 
  1703 ;;  ucGapValue      1   46[BANK0 ] unsigned char 
  1704 ;;  ucHalfValue     1   44[BANK0 ] unsigned char 
  1705 ;;  ucThreeTimes    1   43[BANK0 ] unsigned char 
  1706 ;;  uiChannel2Va    2   47[BANK0 ] unsigned int 
  1707 ;;  ucPulseWidth    1   45[BANK0 ] unsigned char 
  1708 ;; Return value:  Size  Location     Type
  1709 ;;                  1    wreg      unsigned char 
  1710 ;; Registers used:
  1711 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1712 ;; Tracked objects:
  1713 ;;		On entry : 60/0
  1714 ;;		On exit  : 160/0
  1715 ;;		Unchanged: FFE00/0
  1716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1717 ;;      Params:         0       0       0       0       0
  1718 ;;      Locals:         0       8       0       0       0
  1719 ;;      Temps:          0       0       0       0       0
  1720 ;;      Totals:         0       8       0       0       0
  1721 ;;Total ram usage:        8 bytes
  1722 ;; Hardware stack levels used:    1
  1723 ;; Hardware stack levels required when called:    4
  1724 ;; This function calls:
  1725 ;;		_getAdOriginalCh12Value
  1726 ;; This function is called by:
  1727 ;;		_main
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730  01BA                     _calPulseWidth:	
  1731                           
  1732                           ;main.c: 531: unsigned int uiChannel2Value = getAdOriginalCh12Value();
  1733                           
  1734                           ; Regs used in _calPulseWidth: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1735  01BA  21EB  118A         	fcall	_getAdOriginalCh12Value
  1736  01BC  0848               	movf	?_getAdOriginalCh12Value+1,w
  1737  01BD  00D0               	movwf	calPulseWidth@uiChannel2Value+1
  1738  01BE  0847               	movf	?_getAdOriginalCh12Value,w
  1739  01BF  00CF               	movwf	calPulseWidth@uiChannel2Value
  1740                           
  1741                           ;main.c: 533: if( uiChannel2Value >= 332 )
  1742  01C0  3001               	movlw	1
  1743  01C1  0250               	subwf	calPulseWidth@uiChannel2Value+1,w
  1744  01C2  304C               	movlw	76
  1745  01C3  1903               	skipnz
  1746  01C4  024F               	subwf	calPulseWidth@uiChannel2Value,w
  1747  01C5  1C03               	skipc
  1748  01C6  29C9               	goto	l3677
  1749                           
  1750                           ;main.c: 534: ucPulseWidth = 100;
  1751  01C7  3064               	movlw	100
  1752  01C8  29E9               	goto	L9
  1753  01C9                     l3677:	
  1754                           
  1755                           ;main.c: 535: else if( uiChannel2Value <= 312)
  1756  01C9  3001               	movlw	1
  1757  01CA  0250               	subwf	calPulseWidth@uiChannel2Value+1,w
  1758  01CB  3039               	movlw	57
  1759  01CC  1903               	skipnz
  1760  01CD  024F               	subwf	calPulseWidth@uiChannel2Value,w
  1761  01CE  1803               	skipnc
  1762  01CF  29D2               	goto	l3681
  1763                           
  1764                           ;main.c: 536: ucPulseWidth = 30;
  1765  01D0  301E               	movlw	30
  1766  01D1  29E9               	goto	L9
  1767  01D2                     l3681:	
  1768                           
  1769                           ;main.c: 541: unsigned char ucGapValue = 0;
  1770  01D2  01CE               	clrf	calPulseWidth@ucGapValue
  1771                           
  1772                           ;main.c: 543: unsigned char ucThreeTimesValue = 0;
  1773  01D3  01CB               	clrf	calPulseWidth@ucThreeTimesValue
  1774                           
  1775                           ;main.c: 544: unsigned char ucHalfValue = 0;
  1776  01D4  01CC               	clrf	calPulseWidth@ucHalfValue
  1777                           
  1778                           ;main.c: 546: uiGapValue = uiChannel2Value - 312;
  1779  01D5  0850               	movf	calPulseWidth@uiChannel2Value+1,w
  1780  01D6  00CA               	movwf	calPulseWidth@uiGapValue+1
  1781  01D7  084F               	movf	calPulseWidth@uiChannel2Value,w
  1782  01D8  00C9               	movwf	calPulseWidth@uiGapValue
  1783  01D9  30C8               	movlw	200
  1784  01DA  07C9               	addwf	calPulseWidth@uiGapValue,f
  1785  01DB  1803               	skipnc
  1786  01DC  0ACA               	incf	calPulseWidth@uiGapValue+1,f
  1787  01DD  30FE               	movlw	254
  1788  01DE  07CA               	addwf	calPulseWidth@uiGapValue+1,f
  1789                           
  1790                           ;main.c: 548: ucGapValue = uiGapValue;
  1791  01DF  0849               	movf	calPulseWidth@uiGapValue,w
  1792  01E0  00CE               	movwf	calPulseWidth@ucGapValue
  1793                           
  1794                           ;main.c: 550: ucThreeTimesValue = ucGapValue*3;
  1795  01E1  074E               	addwf	calPulseWidth@ucGapValue,w
  1796  01E2  074E               	addwf	calPulseWidth@ucGapValue,w
  1797  01E3  00CB               	movwf	calPulseWidth@ucThreeTimesValue
  1798                           
  1799                           ;main.c: 552: ucHalfValue = ucGapValue >> 1;
  1800  01E4  1003               	clrc
  1801  01E5  0C4E               	rrf	calPulseWidth@ucGapValue,w
  1802  01E6  00CC               	movwf	calPulseWidth@ucHalfValue
  1803                           
  1804                           ;main.c: 554: ucPulseWidth = 30 + ucThreeTimesValue + ucHalfValue;
  1805  01E7  074B               	addwf	calPulseWidth@ucThreeTimesValue,w
  1806  01E8  3E1E               	addlw	30
  1807  01E9                     L9:	
  1808  01E9  00CD               	movwf	calPulseWidth@ucPulseWidth
  1809                           
  1810                           ;main.c: 556: }
  1811                           ;main.c: 560: return ucPulseWidth;
  1812  01EA  0008               	return
  1813  01EB                     __end_of_calPulseWidth:	
  1814  01EB                     __ptext837:	
  1815 ;; =============== function _process_AD_Converter_Value ends ============
  1816                           
  1817                           
  1818 ;; *************** function _getAdOriginalCh12Value *****************
  1819 ;; Defined at:
  1820 ;;		line 226 in file "D:\develop\190625\AK7030-OTP\common.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;		None
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;		None
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  2   39[BANK0 ] unsigned int 
  1827 ;; Registers used:
  1828 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1829 ;; Tracked objects:
  1830 ;;		On entry : 60/0
  1831 ;;		On exit  : 160/0
  1832 ;;		Unchanged: FFE00/0
  1833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1834 ;;      Params:         0       2       0       0       0
  1835 ;;      Locals:         0       0       0       0       0
  1836 ;;      Temps:          0       0       0       0       0
  1837 ;;      Totals:         0       2       0       0       0
  1838 ;;Total ram usage:        2 bytes
  1839 ;; Hardware stack levels used:    1
  1840 ;; Hardware stack levels required when called:    3
  1841 ;; This function calls:
  1842 ;;		_Filter
  1843 ;; This function is called by:
  1844 ;;		_calPulseWidth
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847  01EB                     _getAdOriginalCh12Value:	
  1848                           
  1849                           ;common.c: 229: return Filter(uiSampleChannelFirst);
  1850                           
  1851                           ; Regs used in _getAdOriginalCh12Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  1852  01EB  30A6               	movlw	_uiSampleChannelFirst& (0+255)
  1853  01EC  21F2               	fcall	_Filter
  1854  01ED  0821               	movf	?_Filter+1,w
  1855  01EE  00C8               	movwf	?_getAdOriginalCh12Value+1
  1856  01EF  0820               	movf	?_Filter,w
  1857  01F0  00C7               	movwf	?_getAdOriginalCh12Value
  1858  01F1  0008               	return
  1859  01F2                     __end_of_getAdOriginalCh12Value:	
  1860  01F2                     __ptext843:	
  1861 ;; =============== function _getAD_ConvertFlag ends ============
  1862                           
  1863                           
  1864 ;; *************** function _Filter *****************
  1865 ;; Defined at:
  1866 ;;		line 60 in file "D:\develop\190625\AK7030-OTP\common.c"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;  tmpValue        1    wreg     PTR int 
  1869 ;;		 -> uiSampleChannelFourteenth(24), uiSampleChannelFourth(24), uiSampleChannelFirst(24), 
  1870 ;; Auto vars:     Size  Location     Type
  1871 ;;  tmpValue        1   34[BANK0 ] PTR int 
  1872 ;;		 -> uiSampleChannelFourteenth(24), uiSampleChannelFourth(24), uiSampleChannelFirst(24), 
  1873 ;;  cir             2   35[BANK0 ] int 
  1874 ;;  filter_buf     24    6[BANK0 ] unsigned int [12]
  1875 ;;  filter_sum      2   32[BANK0 ] unsigned int 
  1876 ;;  filter_temp     2   30[BANK0 ] unsigned int 
  1877 ;;  i               1   38[BANK0 ] unsigned char 
  1878 ;;  j               1   37[BANK0 ] unsigned char 
  1879 ;; Return value:  Size  Location     Type
  1880 ;;                  2    0[BANK0 ] unsigned int 
  1881 ;; Registers used:
  1882 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1883 ;; Tracked objects:
  1884 ;;		On entry : 60/0
  1885 ;;		On exit  : 160/0
  1886 ;;		Unchanged: FFE00/0
  1887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1888 ;;      Params:         0       2       0       0       0
  1889 ;;      Locals:         0      33       0       0       0
  1890 ;;      Temps:          0       4       0       0       0
  1891 ;;      Totals:         0      39       0       0       0
  1892 ;;Total ram usage:       39 bytes
  1893 ;; Hardware stack levels used:    1
  1894 ;; Hardware stack levels required when called:    2
  1895 ;; This function calls:
  1896 ;;		Nothing
  1897 ;; This function is called by:
  1898 ;;		_getAdOriginalCh12Value
  1899 ;;		_getAdOriginalCh13Value
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902  01F2                     _Filter:	
  1903                           
  1904                           ; Regs used in _Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  1905                           ;Filter@tmpValue stored from wreg
  1906  01F2  00C2               	movwf	Filter@tmpValue
  1907  01F3  01C5               	clrf	Filter@j
  1908                           
  1909                           ;common.c: 64: unsigned int filter_temp = 0, filter_sum = 0;
  1910  01F4  01BE               	clrf	Filter@filter_temp
  1911  01F5  01BF               	clrf	Filter@filter_temp+1
  1912  01F6  01C0               	clrf	Filter@filter_sum
  1913  01F7  01C1               	clrf	Filter@filter_sum+1
  1914                           
  1915                           ;common.c: 66: unsigned int filter_buf[12];
  1916                           ;common.c: 68: for(int cir = 0;cir < 12; cir++)
  1917  01F8  01C3               	clrf	Filter@cir
  1918  01F9  01C4               	clrf	Filter@cir+1
  1919  01FA                     l3487:	
  1920                           
  1921                           ;common.c: 69: filter_buf[cir] = *tmpValue++;
  1922  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  1923  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  1924  01FC  0842               	movf	Filter@tmpValue,w
  1925  01FD  2280  118A         	fcall	PL3	;call to abstracted procedure
  1926  01FF  1003               	clrc
  1927  0200  0D43               	rlf	Filter@cir,w
  1928  0201  2288  118A         	fcall	PL4	;call to abstracted procedure
  1929  0203  0AC2               	incf	Filter@tmpValue,f
  1930  0204  0AC2               	incf	Filter@tmpValue,f
  1931  0205  0AC3               	incf	Filter@cir,f
  1932  0206  1903               	skipnz
  1933  0207  0AC4               	incf	Filter@cir+1,f
  1934  0208  0844               	movf	Filter@cir+1,w
  1935  0209  3A80               	xorlw	128
  1936  020A  00FF               	movwf	127
  1937  020B  3080               	movlw	128
  1938  020C  027F               	subwf	127,w
  1939  020D  1D03               	skipz
  1940  020E  2A11               	goto	u1065
  1941  020F  300C               	movlw	12
  1942  0210  0243               	subwf	Filter@cir,w
  1943  0211                     u1065:	
  1944  0211  1C03               	skipc
  1945  0212  29FA               	goto	l3487
  1946                           
  1947                           ;common.c: 72: for(j = 0; j < 12 - 1; j++)
  1948  0213  1283               	bcf	3,5	;RP0=0, select bank0
  1949  0214  1303               	bcf	3,6	;RP1=0, select bank0
  1950  0215  01C5               	clrf	Filter@j
  1951  0216                     l3501:	
  1952                           
  1953                           ;common.c: 73: {
  1954                           ;common.c: 74: for(i = 0; i < 12 - 1 - j; i++)
  1955  0216  01C6               	clrf	Filter@i
  1956  0217                     l3509:	
  1957  0217  01A3               	clrf	??_Filter+1
  1958  0218  0845               	movf	Filter@j,w
  1959  0219  3C0B               	sublw	11
  1960  021A  00A2               	movwf	??_Filter
  1961  021B  1C03               	skipc
  1962  021C  03A3               	decf	??_Filter+1,f
  1963  021D  0823               	movf	??_Filter+1,w
  1964  021E  3A80               	xorlw	128
  1965  021F  3C80               	sublw	128
  1966  0220  1D03               	skipz
  1967  0221  2A24               	goto	u1085
  1968  0222  0822               	movf	??_Filter,w
  1969  0223  0246               	subwf	Filter@i,w
  1970  0224                     u1085:	
  1971  0224  1803               	btfsc	3,0
  1972  0225  2A59               	goto	l3511
  1973                           
  1974                           ;common.c: 75: {
  1975                           ;common.c: 76: if(filter_buf[i] > filter_buf[i + 1])
  1976  0226  1283               	bcf	3,5	;RP0=0, select bank0
  1977  0227  1303               	bcf	3,6	;RP1=0, select bank0
  1978  0228  1003               	clrc
  1979  0229  0D46               	rlf	Filter@i,w
  1980  022A  3E26               	addlw	Filter@filter_buf& (0+255)
  1981  022B  2280  118A         	fcall	PL3	;call to abstracted procedure
  1982  022D  2290  118A         	fcall	PL6	;call to abstracted procedure
  1983  022F  0800               	movf	0,w
  1984  0230  00A4               	movwf	??_Filter+2
  1985  0231  0A84               	incf	4,f
  1986  0232  0800               	movf	0,w
  1987  0233  00A5               	movwf	??_Filter+3
  1988  0234  0823               	movf	??_Filter+1,w
  1989  0235  0225               	subwf	??_Filter+3,w
  1990  0236  1D03               	skipz
  1991  0237  2A3A               	goto	u1075
  1992  0238  0822               	movf	??_Filter,w
  1993  0239  0224               	subwf	??_Filter+2,w
  1994  023A                     u1075:	
  1995  023A  1803               	skipnc
  1996  023B  2A57               	goto	l3507
  1997                           
  1998                           ;common.c: 77: {
  1999                           ;common.c: 79: filter_temp = filter_buf[i];
  2000  023C  1003               	clrc
  2001  023D  0D46               	rlf	Filter@i,w
  2002  023E  3E26               	addlw	Filter@filter_buf& (0+255)
  2003  023F  0084               	movwf	4
  2004  0240  0800               	movf	0,w
  2005  0241  00BE               	movwf	Filter@filter_temp
  2006  0242  0A84               	incf	4,f
  2007  0243  0800               	movf	0,w
  2008  0244  00BF               	movwf	Filter@filter_temp+1
  2009                           
  2010                           ;common.c: 81: filter_buf[i] = filter_buf[i + 1];
  2011  0245  2290  118A         	fcall	PL6	;call to abstracted procedure
  2012  0247  0800               	movf	0,w
  2013  0248  00A2               	movwf	??_Filter
  2014  0249  0A84               	incf	4,f
  2015  024A  0800               	movf	0,w
  2016  024B  00A3               	movwf	??_Filter+1
  2017  024C  1003               	clrc
  2018  024D  0D46               	rlf	Filter@i,w
  2019  024E  2288  118A         	fcall	PL4	;call to abstracted procedure
  2020                           
  2021                           ;common.c: 83: filter_buf[i + 1] = filter_temp;
  2022  0250  2290  118A         	fcall	PL6	;call to abstracted procedure
  2023  0252  083E               	movf	Filter@filter_temp,w
  2024  0253  0080               	movwf	0
  2025  0254  0A84               	incf	4,f
  2026  0255  083F               	movf	Filter@filter_temp+1,w
  2027  0256  0080               	movwf	0
  2028  0257                     l3507:	
  2029  0257  0AC6               	incf	Filter@i,f
  2030  0258  2A17               	goto	l3509
  2031  0259                     l3511:	
  2032  0259  1283               	bcf	3,5	;RP0=0, select bank0
  2033  025A  300B               	movlw	11
  2034  025B  1303               	bcf	3,6	;RP1=0, select bank0
  2035  025C  0AC5               	incf	Filter@j,f
  2036  025D  0245               	subwf	Filter@j,w
  2037  025E  1C03               	skipc
  2038  025F  2A16               	goto	l3501
  2039                           
  2040                           ;common.c: 84: }
  2041                           ;common.c: 85: }
  2042                           ;common.c: 86: }
  2043                           ;common.c: 88: for(i = 2; i < 12 - 2; i++)
  2044  0260  3002               	movlw	2
  2045  0261  00C6               	movwf	Filter@i
  2046                           
  2047                           ;common.c: 89: {
  2048                           ;common.c: 90: filter_sum += filter_buf[i];
  2049  0262  1003               	clrc
  2050  0263                     L12:	
  2051  0263  0D46               	rlf	Filter@i,w
  2052  0264  3E26               	addlw	Filter@filter_buf& (0+255)
  2053  0265  2280  118A         	fcall	PL3	;call to abstracted procedure
  2054  0267  0822               	movf	??_Filter,w
  2055  0268  07C0               	addwf	Filter@filter_sum,f
  2056  0269  1803               	skipnc
  2057  026A  0AC1               	incf	Filter@filter_sum+1,f
  2058  026B  0823               	movf	??_Filter+1,w
  2059  026C  07C1               	addwf	Filter@filter_sum+1,f
  2060  026D  300A               	movlw	10
  2061  026E  0AC6               	incf	Filter@i,f
  2062  026F  0246               	subwf	Filter@i,w
  2063  0270  1C03               	skipc
  2064  0271  2A63               	goto	L12
  2065                           
  2066                           ;common.c: 91: }
  2067                           ;common.c: 93: return (filter_sum >> 3);
  2068  0272  0841               	movf	Filter@filter_sum+1,w
  2069  0273  00A1               	movwf	?_Filter+1
  2070  0274  0840               	movf	Filter@filter_sum,w
  2071  0275  00A0               	movwf	?_Filter
  2072  0276  1003               	clrc
  2073  0277  0CA1               	rrf	?_Filter+1,f
  2074  0278  0CA0               	rrf	?_Filter,f
  2075  0279  1003               	clrc
  2076  027A  0CA1               	rrf	?_Filter+1,f
  2077  027B  0CA0               	rrf	?_Filter,f
  2078  027C  1003               	clrc
  2079  027D  0CA1               	rrf	?_Filter+1,f
  2080  027E  0CA0               	rrf	?_Filter,f
  2081  027F  0008               	return
  2082  0280                     __end_of_Filter:	
  2083  0280                     PL3:	
  2084  0280  0084               	movwf	4
  2085  0281  1383               	bcf	3,7	;select IRP bank0
  2086  0282  0800               	movf	0,w
  2087  0283  00A2               	movwf	??_Filter
  2088  0284  0A84               	incf	4,f
  2089  0285  0800               	movf	0,w
  2090  0286  00A3               	movwf	??_Filter+1
  2091  0287  0008               	return
  2092  0288                     PL4:	
  2093  0288  3E26               	addlw	Filter@filter_buf& (0+255)
  2094  0289  0084               	movwf	4
  2095  028A  0822               	movf	??_Filter,w
  2096  028B  0080               	movwf	0
  2097  028C  0A84               	incf	4,f
  2098  028D  0823               	movf	??_Filter+1,w
  2099  028E  0080               	movwf	0
  2100  028F  0008               	return
  2101  0290                     PL6:	
  2102  0290  1003               	clrc
  2103  0291  0D46               	rlf	Filter@i,w
  2104  0292  3E02               	addlw	2
  2105  0293  3E26               	addlw	Filter@filter_buf& (0+255)
  2106  0294  0084               	movwf	4
  2107  0295  0008               	return
  2108                           
  2109                           	psect	text836
  2110  0379                     __ptext836:	
  2111 ;; =============== function _getAdOriginalCh13Value ends ============
  2112                           
  2113                           
  2114 ;; *************** function _process_AD_Converter_Value *****************
  2115 ;; Defined at:
  2116 ;;		line 260 in file "D:\develop\190625\AK7030-OTP\common.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;		None
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;		None
  2121 ;; Return value:  Size  Location     Type
  2122 ;;		None               void
  2123 ;; Registers used:
  2124 ;;		wreg, status,2, status,0, pclath, cstack
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 60/0
  2128 ;;		Unchanged: FFF9F/0
  2129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2130 ;;      Params:         0       0       0       0       0
  2131 ;;      Locals:         0       0       0       0       0
  2132 ;;      Temps:          0       0       0       0       0
  2133 ;;      Totals:         0       0       0       0       0
  2134 ;;Total ram usage:        0 bytes
  2135 ;; Hardware stack levels used:    1
  2136 ;; Hardware stack levels required when called:    3
  2137 ;; This function calls:
  2138 ;;		_getAD_ConvertFlag
  2139 ;;		_setAD_ConvertFlag
  2140 ;;		_AD_Sample
  2141 ;;		_adc_test_init
  2142 ;;		_adc_start
  2143 ;; This function is called by:
  2144 ;;		_main
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147  0379                     _process_AD_Converter_Value:	
  2148                           
  2149                           ;common.c: 261: if(getAD_ConvertFlag())
  2150                           
  2151                           ; Regs used in _process_AD_Converter_Value: [wreg+status,2+status,0+pclath+cstack]
  2152  0379  238F  118A         	fcall	_getAD_ConvertFlag
  2153  037B  3A00               	xorlw	0
  2154  037C  1903               	skipnz
  2155  037D  0008               	return
  2156                           
  2157                           ;common.c: 262: {
  2158                           ;common.c: 263: setAD_ConvertFlag(0);
  2159  037E  3000               	movlw	0
  2160  037F  2393  118A         	fcall	_setAD_ConvertFlag
  2161                           
  2162                           ;common.c: 264: AD_Sample();
  2163  0381  2396  118A         	fcall	_AD_Sample
  2164                           
  2165                           ;common.c: 265: if(12 == sampleChannelSelect)
  2166  0383  086F               	movf	_sampleChannelSelect,w
  2167  0384  3A0C               	xorlw	12
  2168                           
  2169                           ;common.c: 266: adc_test_init(12,3);
  2170  0385  3003               	movlw	3
  2171  0386  00A0               	movwf	?_adc_test_init
  2172  0387  1D03               	skipz
  2173  0388  2B8B               	goto	L11
  2174  0389  300C               	movlw	12
  2175  038A  2B8C               	goto	L10
  2176  038B                     L11:	
  2177                           ;common.c: 269: else
  2178                           ;common.c: 270: adc_test_init(13,3);
  2179                           
  2180  038B  300D               	movlw	13
  2181  038C                     L10:	
  2182  038C  23AA  118A         	fcall	_adc_test_init
  2183                           
  2184                           ;common.c: 272: adc_start();
  2185  038E  2BBF               	ljmp	l3367
  2186  038F                     __end_of_process_AD_Converter_Value:	
  2187  038F                     __ptext842:	
  2188 ;; =============== function _setAD_ConvertFlag ends ============
  2189                           
  2190                           
  2191 ;; *************** function _getAD_ConvertFlag *****************
  2192 ;; Defined at:
  2193 ;;		line 209 in file "D:\develop\190625\AK7030-OTP\common.c"
  2194 ;; Parameters:    Size  Location     Type
  2195 ;;		None
  2196 ;; Auto vars:     Size  Location     Type
  2197 ;;		None
  2198 ;; Return value:  Size  Location     Type
  2199 ;;                  1    wreg      unsigned char 
  2200 ;; Registers used:
  2201 ;;		wreg
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 60/0
  2205 ;;		Unchanged: FFF9F/0
  2206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2207 ;;      Params:         0       0       0       0       0
  2208 ;;      Locals:         0       0       0       0       0
  2209 ;;      Temps:          0       0       0       0       0
  2210 ;;      Totals:         0       0       0       0       0
  2211 ;;Total ram usage:        0 bytes
  2212 ;; Hardware stack levels used:    1
  2213 ;; Hardware stack levels required when called:    2
  2214 ;; This function calls:
  2215 ;;		Nothing
  2216 ;; This function is called by:
  2217 ;;		_process_AD_Converter_Value
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220  038F                     _getAD_ConvertFlag:	
  2221                           
  2222                           ;common.c: 210: return adc_convert_flag;
  2223                           
  2224                           ; Regs used in _getAD_ConvertFlag: [wreg]
  2225  038F  1283               	bcf	3,5	;RP0=0, select bank0
  2226  0390  1303               	bcf	3,6	;RP1=0, select bank0
  2227  0391  0861               	movf	_adc_convert_flag,w
  2228  0392  0008               	return
  2229  0393                     __end_of_getAD_ConvertFlag:	
  2230  0393                     __ptext841:	
  2231 ;; =============== function _AD_Sample ends ============
  2232                           
  2233                           
  2234 ;; *************** function _setAD_ConvertFlag *****************
  2235 ;; Defined at:
  2236 ;;		line 215 in file "D:\develop\190625\AK7030-OTP\common.c"
  2237 ;; Parameters:    Size  Location     Type
  2238 ;;  flag            1    wreg     unsigned char 
  2239 ;; Auto vars:     Size  Location     Type
  2240 ;;  flag            1    0[BANK0 ] unsigned char 
  2241 ;; Return value:  Size  Location     Type
  2242 ;;		None               void
  2243 ;; Registers used:
  2244 ;;		wreg
  2245 ;; Tracked objects:
  2246 ;;		On entry : 60/0
  2247 ;;		On exit  : 60/0
  2248 ;;		Unchanged: FFF9F/0
  2249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2250 ;;      Params:         0       0       0       0       0
  2251 ;;      Locals:         0       1       0       0       0
  2252 ;;      Temps:          0       0       0       0       0
  2253 ;;      Totals:         0       1       0       0       0
  2254 ;;Total ram usage:        1 bytes
  2255 ;; Hardware stack levels used:    1
  2256 ;; Hardware stack levels required when called:    2
  2257 ;; This function calls:
  2258 ;;		Nothing
  2259 ;; This function is called by:
  2260 ;;		_process_AD_Converter_Value
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263  0393                     _setAD_ConvertFlag:	
  2264                           
  2265                           ; Regs used in _setAD_ConvertFlag: [wreg]
  2266                           ;setAD_ConvertFlag@flag stored from wreg
  2267  0393  00A0               	movwf	setAD_ConvertFlag@flag
  2268                           
  2269                           ;common.c: 216: adc_convert_flag = flag;
  2270  0394  00E1               	movwf	_adc_convert_flag
  2271  0395  0008               	return
  2272  0396                     __end_of_setAD_ConvertFlag:	
  2273  0396                     __ptext840:	
  2274 ;; =============== function _initPin ends ============
  2275                           
  2276                           
  2277 ;; *************** function _AD_Sample *****************
  2278 ;; Defined at:
  2279 ;;		line 286 in file "D:\develop\190625\AK7030-OTP\common.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;		None
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;		None
  2284 ;; Return value:  Size  Location     Type
  2285 ;;		None               void
  2286 ;; Registers used:
  2287 ;;		wreg, status,2, status,0
  2288 ;; Tracked objects:
  2289 ;;		On entry : 60/0
  2290 ;;		On exit  : 60/0
  2291 ;;		Unchanged: FFF9F/0
  2292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2293 ;;      Params:         0       0       0       0       0
  2294 ;;      Locals:         0       0       0       0       0
  2295 ;;      Temps:          0       0       0       0       0
  2296 ;;      Totals:         0       0       0       0       0
  2297 ;;Total ram usage:        0 bytes
  2298 ;; Hardware stack levels used:    1
  2299 ;; Hardware stack levels required when called:    2
  2300 ;; This function calls:
  2301 ;;		Nothing
  2302 ;; This function is called by:
  2303 ;;		_process_AD_Converter_Value
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306  0396                     _AD_Sample:	
  2307                           
  2308                           ;common.c: 287: if(sampleTimes < 12)
  2309                           
  2310                           ; Regs used in _AD_Sample: [wreg+status,2+status,0]
  2311  0396  300C               	movlw	12
  2312  0397  0266               	subwf	_sampleTimes,w
  2313  0398  1803               	skipnc
  2314  0399  0008               	return
  2315  039A  300C               	movlw	12
  2316                           
  2317                           ;common.c: 288: {
  2318                           ;common.c: 309: sampleTimes++;
  2319  039B  0AE6               	incf	_sampleTimes,f
  2320                           
  2321                           ;common.c: 311: if(sampleTimes >= 12)
  2322  039C  0266               	subwf	_sampleTimes,w
  2323  039D  1C03               	skipc
  2324  039E  0008               	return
  2325                           
  2326                           ;common.c: 312: {
  2327                           ;common.c: 313: sampleTimes = 0;
  2328  039F  01E6               	clrf	_sampleTimes
  2329                           
  2330                           ;common.c: 315: if(sampleChannelSelect == 12)
  2331  03A0  086F               	movf	_sampleChannelSelect,w
  2332  03A1  3A0C               	xorlw	12
  2333  03A2  1D03               	skipz
  2334  03A3  2BA7               	goto	l3597
  2335                           
  2336                           ;common.c: 316: {
  2337                           ;common.c: 319: sampleChannelSelect = 13;
  2338  03A4  300D               	movlw	13
  2339  03A5  00EF               	movwf	_sampleChannelSelect
  2340                           
  2341                           ;common.c: 320: }
  2342  03A6  0008               	return
  2343  03A7                     l3597:	
  2344                           
  2345                           ;common.c: 331: else
  2346                           ;common.c: 332: {
  2347                           ;common.c: 334: sampleChannelSelect = 12;
  2348  03A7  300C               	movlw	12
  2349  03A8  00EF               	movwf	_sampleChannelSelect
  2350  03A9  0008               	return
  2351  03AA                     __end_of_AD_Sample:	
  2352  03AA                     __ptext856:	
  2353 ;; =============== function _adc_start ends ============
  2354                           
  2355                           
  2356 ;; *************** function _adc_test_init *****************
  2357 ;; Defined at:
  2358 ;;		line 85 in file "D:\develop\190625\AK7030-OTP\periph.c"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;  channel         1    wreg     unsigned char 
  2361 ;;  ref             1    0[BANK0 ] unsigned char 
  2362 ;; Auto vars:     Size  Location     Type
  2363 ;;  channel         1    2[BANK0 ] unsigned char 
  2364 ;; Return value:  Size  Location     Type
  2365 ;;		None               void
  2366 ;; Registers used:
  2367 ;;		wreg, status,2, status,0
  2368 ;; Tracked objects:
  2369 ;;		On entry : 60/0
  2370 ;;		On exit  : 60/20
  2371 ;;		Unchanged: FFF9F/0
  2372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2373 ;;      Params:         0       1       0       0       0
  2374 ;;      Locals:         0       1       0       0       0
  2375 ;;      Temps:          0       1       0       0       0
  2376 ;;      Totals:         0       3       0       0       0
  2377 ;;Total ram usage:        3 bytes
  2378 ;; Hardware stack levels used:    1
  2379 ;; Hardware stack levels required when called:    2
  2380 ;; This function calls:
  2381 ;;		Nothing
  2382 ;; This function is called by:
  2383 ;;		_main
  2384 ;;		_process_AD_Converter_Value
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387  03AA                     _adc_test_init:	
  2388                           
  2389                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  2390                           ;adc_test_init@channel stored from wreg
  2391  03AA  00A2               	movwf	adc_test_init@channel
  2392                           
  2393                           ;periph.c: 86: ADCON0 = 0x00;
  2394  03AB  019F               	clrf	31	;volatile
  2395                           
  2396                           ;periph.c: 87: ADCON0|=channel<<2;
  2397  03AC  00A1               	movwf	??_adc_test_init
  2398  03AD  1003               	clrc
  2399  03AE  0DA1               	rlf	??_adc_test_init,f
  2400  03AF  1003               	clrc
  2401  03B0  0D21               	rlf	??_adc_test_init,w
  2402  03B1  049F               	iorwf	31,f	;volatile
  2403                           
  2404                           ;periph.c: 88: ADCON1|=ref<<6;
  2405  03B2  0820               	movf	adc_test_init@ref,w
  2406  03B3  00A1               	movwf	??_adc_test_init
  2407  03B4  0CA1               	rrf	??_adc_test_init,f
  2408  03B5  0CA1               	rrf	??_adc_test_init,f
  2409  03B6  0C21               	rrf	??_adc_test_init,w
  2410  03B7  39C0               	andlw	192
  2411  03B8  1683               	bsf	3,5	;RP0=1, select bank1
  2412  03B9  049F               	iorwf	31,f	;volatile
  2413                           
  2414                           ;periph.c: 89: ADON=1;
  2415  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  2416  03BB  141F               	bsf	31,0
  2417                           
  2418                           ;periph.c: 90: ADIE=1;
  2419  03BC  1683               	bsf	3,5	;RP0=1, select bank1
  2420  03BD  150D               	bsf	13,2
  2421  03BE  0008               	return
  2422  03BF                     __end_of_adc_test_init:	
  2423  03BF                     __ptext855:	
  2424 ;; =============== function _startTwentyMinTimer ends ============
  2425                           
  2426                           
  2427 ;; *************** function _adc_start *****************
  2428 ;; Defined at:
  2429 ;;		line 100 in file "D:\develop\190625\AK7030-OTP\periph.c"
  2430 ;; Parameters:    Size  Location     Type
  2431 ;;		None
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;		None
  2434 ;; Return value:  Size  Location     Type
  2435 ;;		None               void
  2436 ;; Registers used:
  2437 ;;		None
  2438 ;; Tracked objects:
  2439 ;;		On entry : 60/20
  2440 ;;		On exit  : 60/0
  2441 ;;		Unchanged: FFF9F/0
  2442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2443 ;;      Params:         0       0       0       0       0
  2444 ;;      Locals:         0       0       0       0       0
  2445 ;;      Temps:          0       0       0       0       0
  2446 ;;      Totals:         0       0       0       0       0
  2447 ;;Total ram usage:        0 bytes
  2448 ;; Hardware stack levels used:    1
  2449 ;; Hardware stack levels required when called:    2
  2450 ;; This function calls:
  2451 ;;		Nothing
  2452 ;; This function is called by:
  2453 ;;		_main
  2454 ;;		_process_AD_Converter_Value
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457  03BF                     _adc_start:	
  2458  03BF                     l3367:	
  2459                           ; Regs used in _adc_start: []
  2460                           
  2461                           
  2462                           ;periph.c: 101: GO=1;
  2463  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  2464  03C0  149F               	bsf	31,1
  2465  03C1  0008               	return
  2466  03C2                     __end_of_adc_start:	
  2467                           
  2468                           	psect	text838
  2469  0422                     __ptext838:	
  2470 ;; =============== function _getAdOriginalCh12Value ends ============
  2471                           
  2472                           
  2473 ;; *************** function _setPinInitVaule *****************
  2474 ;; Defined at:
  2475 ;;		line 333 in file "D:\develop\190625\AK7030-OTP\main.c"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;		None
  2478 ;; Auto vars:     Size  Location     Type
  2479 ;;		None
  2480 ;; Return value:  Size  Location     Type
  2481 ;;		None               void
  2482 ;; Registers used:
  2483 ;;		wreg, status,2, status,0, pclath, cstack
  2484 ;; Tracked objects:
  2485 ;;		On entry : 17F/20
  2486 ;;		On exit  : 17F/0
  2487 ;;		Unchanged: FFE80/0
  2488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2489 ;;      Params:         0       0       0       0       0
  2490 ;;      Locals:         0       0       0       0       0
  2491 ;;      Temps:          0       0       0       0       0
  2492 ;;      Totals:         0       0       0       0       0
  2493 ;;Total ram usage:        0 bytes
  2494 ;; Hardware stack levels used:    1
  2495 ;; Hardware stack levels required when called:    3
  2496 ;; This function calls:
  2497 ;;		_setPB3
  2498 ;;		_setPB4
  2499 ;;		_setPB5
  2500 ;; This function is called by:
  2501 ;;		_main
  2502 ;; This function uses a non-reentrant model
  2503 ;;
  2504  0422                     _setPinInitVaule:	
  2505                           
  2506                           ;main.c: 335: setPB3(1);
  2507                           
  2508                           ; Regs used in _setPinInitVaule: [wreg+status,2+status,0+pclath+cstack]
  2509  0422  3001               	movlw	1
  2510  0423  242A  118A         	fcall	_setPB3
  2511                           
  2512                           ;main.c: 336: setPB4(0);
  2513  0425  3000               	movlw	0
  2514  0426  2434  118A         	fcall	_setPB4
  2515                           
  2516                           ;main.c: 337: setPB5(1);
  2517  0428  3001               	movlw	1
  2518  0429  2C3C               	ljmp	_setPB5
  2519  042A                     __end_of_setPinInitVaule:	
  2520  042A                     __ptext869:	
  2521 ;; =============== function _initPB4 ends ============
  2522                           
  2523                           
  2524 ;; *************** function _setPB3 *****************
  2525 ;; Defined at:
  2526 ;;		line 144 in file "D:\develop\190625\AK7030-OTP\main.c"
  2527 ;; Parameters:    Size  Location     Type
  2528 ;;  bValue          1    wreg     unsigned char 
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;  bValue          1    0[BANK0 ] unsigned char 
  2531 ;; Return value:  Size  Location     Type
  2532 ;;		None               void
  2533 ;; Registers used:
  2534 ;;		wreg
  2535 ;; Tracked objects:
  2536 ;;		On entry : 0/60
  2537 ;;		On exit  : 60/0
  2538 ;;		Unchanged: FFF9F/0
  2539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2540 ;;      Params:         0       0       0       0       0
  2541 ;;      Locals:         0       1       0       0       0
  2542 ;;      Temps:          0       0       0       0       0
  2543 ;;      Totals:         0       1       0       0       0
  2544 ;;Total ram usage:        1 bytes
  2545 ;; Hardware stack levels used:    1
  2546 ;; Hardware stack levels required when called:    2
  2547 ;; This function calls:
  2548 ;;		Nothing
  2549 ;; This function is called by:
  2550 ;;		_setPinInitVaule
  2551 ;;		_main
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554  042A                     _setPB3:	
  2555                           
  2556                           ; Regs used in _setPB3: [wreg]
  2557                           ;setPB3@bValue stored from wreg
  2558  042A  1283               	bcf	3,5	;RP0=0, select bank0
  2559  042B  1303               	bcf	3,6	;RP1=0, select bank0
  2560  042C  00A0               	movwf	setPB3@bValue
  2561                           
  2562                           ;main.c: 145: if( bValue )
  2563  042D  0820               	movf	setPB3@bValue,w
  2564  042E  1903               	btfsc	3,2
  2565  042F  2C32               	goto	l685
  2566                           
  2567                           ;main.c: 147: PB3 = 1;
  2568  0430  1586               	bsf	6,3
  2569  0431  0008               	return
  2570  0432                     l685:	
  2571                           
  2572                           ;main.c: 151: else
  2573                           ;main.c: 153: PB3= 0;
  2574  0432  1186               	bcf	6,3
  2575  0433  0008               	return
  2576  0434                     __end_of_setPB3:	
  2577  0434                     __ptext867:	
  2578 ;; =============== function _initPB5 ends ============
  2579                           
  2580                           
  2581 ;; *************** function _setPB4 *****************
  2582 ;; Defined at:
  2583 ;;		line 179 in file "D:\develop\190625\AK7030-OTP\main.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;  bValue          1    wreg     unsigned char 
  2586 ;; Auto vars:     Size  Location     Type
  2587 ;;  bValue          1    0[BANK0 ] unsigned char 
  2588 ;; Return value:  Size  Location     Type
  2589 ;;		None               void
  2590 ;; Registers used:
  2591 ;;		wreg
  2592 ;; Tracked objects:
  2593 ;;		On entry : 60/0
  2594 ;;		On exit  : 60/0
  2595 ;;		Unchanged: FFF9F/0
  2596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2597 ;;      Params:         0       0       0       0       0
  2598 ;;      Locals:         0       1       0       0       0
  2599 ;;      Temps:          0       0       0       0       0
  2600 ;;      Totals:         0       1       0       0       0
  2601 ;;Total ram usage:        1 bytes
  2602 ;; Hardware stack levels used:    1
  2603 ;; Hardware stack levels required when called:    2
  2604 ;; This function calls:
  2605 ;;		Nothing
  2606 ;; This function is called by:
  2607 ;;		_setPinInitVaule
  2608 ;;		_main
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611  0434                     _setPB4:	
  2612                           
  2613                           ; Regs used in _setPB4: [wreg]
  2614                           ;setPB4@bValue stored from wreg
  2615  0434  00A0               	movwf	setPB4@bValue
  2616                           
  2617                           ;main.c: 180: if( bValue )
  2618  0435  0820               	movf	setPB4@bValue,w
  2619  0436  1903               	btfsc	3,2
  2620  0437  2C3A               	goto	l695
  2621                           
  2622                           ;main.c: 182: PB4 = 1;
  2623  0438  1606               	bsf	6,4
  2624  0439  0008               	return
  2625  043A                     l695:	
  2626                           
  2627                           ;main.c: 186: else
  2628                           ;main.c: 188: PB4= 0;
  2629  043A  1206               	bcf	6,4
  2630  043B  0008               	return
  2631  043C                     __end_of_setPB4:	
  2632  043C                     __ptext865:	
  2633 ;; =============== function _initPB2_AsHighResistence ends ============
  2634                           
  2635                           
  2636 ;; *************** function _setPB5 *****************
  2637 ;; Defined at:
  2638 ;;		line 213 in file "D:\develop\190625\AK7030-OTP\main.c"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;  bValue          1    wreg     unsigned char 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;  bValue          1    0[BANK0 ] unsigned char 
  2643 ;; Return value:  Size  Location     Type
  2644 ;;		None               void
  2645 ;; Registers used:
  2646 ;;		wreg
  2647 ;; Tracked objects:
  2648 ;;		On entry : 60/0
  2649 ;;		On exit  : 60/0
  2650 ;;		Unchanged: FFF9F/0
  2651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2652 ;;      Params:         0       0       0       0       0
  2653 ;;      Locals:         0       1       0       0       0
  2654 ;;      Temps:          0       0       0       0       0
  2655 ;;      Totals:         0       1       0       0       0
  2656 ;;Total ram usage:        1 bytes
  2657 ;; Hardware stack levels used:    1
  2658 ;; Hardware stack levels required when called:    2
  2659 ;; This function calls:
  2660 ;;		Nothing
  2661 ;; This function is called by:
  2662 ;;		_setPinInitVaule
  2663 ;;		_main
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666  043C                     _setPB5:	
  2667                           
  2668                           ; Regs used in _setPB5: [wreg]
  2669                           ;setPB5@bValue stored from wreg
  2670  043C  00A0               	movwf	setPB5@bValue
  2671                           
  2672                           ;main.c: 214: if( bValue )
  2673  043D  0820               	movf	setPB5@bValue,w
  2674  043E  1903               	btfsc	3,2
  2675  043F  2C42               	goto	l705
  2676                           
  2677                           ;main.c: 216: PB5 = 1;
  2678  0440  1686               	bsf	6,5
  2679  0441  0008               	return
  2680  0442                     l705:	
  2681                           
  2682                           ;main.c: 220: else
  2683                           ;main.c: 222: PB5= 0;
  2684  0442  1286               	bcf	6,5
  2685  0443  0008               	return
  2686  0444                     __end_of_setPB5:	
  2687                           
  2688                           	psect	text839
  2689  03C2                     __ptext839:	
  2690 ;; =============== function _setPinInitVaule ends ============
  2691                           
  2692                           
  2693 ;; *************** function _initPin *****************
  2694 ;; Defined at:
  2695 ;;		line 317 in file "D:\develop\190625\AK7030-OTP\main.c"
  2696 ;; Parameters:    Size  Location     Type
  2697 ;;		None
  2698 ;; Auto vars:     Size  Location     Type
  2699 ;;		None
  2700 ;; Return value:  Size  Location     Type
  2701 ;;		None               void
  2702 ;; Registers used:
  2703 ;;		wreg, status,2, status,0, pclath, cstack
  2704 ;; Tracked objects:
  2705 ;;		On entry : 17F/0
  2706 ;;		On exit  : 17F/20
  2707 ;;		Unchanged: FFE80/0
  2708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2709 ;;      Params:         0       0       0       0       0
  2710 ;;      Locals:         0       0       0       0       0
  2711 ;;      Temps:          0       0       0       0       0
  2712 ;;      Totals:         0       0       0       0       0
  2713 ;;Total ram usage:        0 bytes
  2714 ;; Hardware stack levels used:    1
  2715 ;; Hardware stack levels required when called:    3
  2716 ;; This function calls:
  2717 ;;		_initPB2_AsHighResistence
  2718 ;;		_initPB3
  2719 ;;		_initPB4
  2720 ;;		_initPB5
  2721 ;; This function is called by:
  2722 ;;		_main
  2723 ;; This function uses a non-reentrant model
  2724 ;;
  2725  03C2                     _initPin:	
  2726                           
  2727                           ;main.c: 319: initPB2_AsHighResistence();
  2728                           
  2729                           ; Regs used in _initPin: [wreg+status,2+status,0+pclath+cstack]
  2730  03C2  23D8  118A         	fcall	_initPB2_AsHighResistence
  2731                           
  2732                           ;main.c: 321: initPB3(0);
  2733  03C4  3000               	movlw	0
  2734  03C5  23CC  118A         	fcall	_initPB3
  2735                           
  2736                           ;main.c: 323: initPB4(0);
  2737  03C7  3000               	movlw	0
  2738  03C8  23DD  118A         	fcall	_initPB4
  2739                           
  2740                           ;main.c: 325: initPB5(0);
  2741  03CA  3000               	movlw	0
  2742  03CB  2BE8               	ljmp	_initPB5
  2743  03CC                     __end_of_initPin:	
  2744  03CC                     __ptext870:	
  2745 ;; =============== function _setPB3 ends ============
  2746                           
  2747                           
  2748 ;; *************** function _initPB3 *****************
  2749 ;; Defined at:
  2750 ;;		line 127 in file "D:\develop\190625\AK7030-OTP\main.c"
  2751 ;; Parameters:    Size  Location     Type
  2752 ;;  bValue          1    wreg     unsigned char 
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;  bValue          1    0[BANK0 ] unsigned char 
  2755 ;; Return value:  Size  Location     Type
  2756 ;;		None               void
  2757 ;; Registers used:
  2758 ;;		wreg
  2759 ;; Tracked objects:
  2760 ;;		On entry : 17F/60
  2761 ;;		On exit  : 17F/20
  2762 ;;		Unchanged: FFE80/0
  2763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2764 ;;      Params:         0       0       0       0       0
  2765 ;;      Locals:         0       1       0       0       0
  2766 ;;      Temps:          0       0       0       0       0
  2767 ;;      Totals:         0       1       0       0       0
  2768 ;;Total ram usage:        1 bytes
  2769 ;; Hardware stack levels used:    1
  2770 ;; Hardware stack levels required when called:    2
  2771 ;; This function calls:
  2772 ;;		Nothing
  2773 ;; This function is called by:
  2774 ;;		_initPin
  2775 ;; This function uses a non-reentrant model
  2776 ;;
  2777  03CC                     _initPB3:	
  2778                           
  2779                           ; Regs used in _initPB3: [wreg]
  2780                           ;initPB3@bValue stored from wreg
  2781  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  2782  03CD  1303               	bcf	3,6	;RP1=0, select bank0
  2783  03CE  00A0               	movwf	initPB3@bValue
  2784                           
  2785                           ;main.c: 128: if( bValue )
  2786  03CF  0820               	movf	initPB3@bValue,w
  2787  03D0  1903               	btfsc	3,2
  2788  03D1  2BD5               	goto	l680
  2789                           
  2790                           ;main.c: 130: TRISB3 = 1;
  2791  03D2  1683               	bsf	3,5	;RP0=1, select bank1
  2792  03D3  1586               	bsf	6,3
  2793  03D4  0008               	return
  2794  03D5                     l680:	
  2795                           
  2796                           ;main.c: 134: else
  2797                           ;main.c: 136: TRISB3 = 0;
  2798  03D5  1683               	bsf	3,5	;RP0=1, select bank1
  2799  03D6  1186               	bcf	6,3
  2800  03D7  0008               	return
  2801  03D8                     __end_of_initPB3:	
  2802  03D8                     __ptext864:	
  2803 ;; =============== function _pwm_start ends ============
  2804                           
  2805                           
  2806 ;; *************** function _initPB2_AsHighResistence *****************
  2807 ;; Defined at:
  2808 ;;		line 230 in file "D:\develop\190625\AK7030-OTP\main.c"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;		None
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;		None
  2813 ;; Return value:  Size  Location     Type
  2814 ;;		None               void
  2815 ;; Registers used:
  2816 ;;		None
  2817 ;; Tracked objects:
  2818 ;;		On entry : 17F/0
  2819 ;;		On exit  : 17F/60
  2820 ;;		Unchanged: FFE80/0
  2821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2822 ;;      Params:         0       0       0       0       0
  2823 ;;      Locals:         0       0       0       0       0
  2824 ;;      Temps:          0       0       0       0       0
  2825 ;;      Totals:         0       0       0       0       0
  2826 ;;Total ram usage:        0 bytes
  2827 ;; Hardware stack levels used:    1
  2828 ;; Hardware stack levels required when called:    2
  2829 ;; This function calls:
  2830 ;;		Nothing
  2831 ;; This function is called by:
  2832 ;;		_initPin
  2833 ;; This function uses a non-reentrant model
  2834 ;;
  2835  03D8                     _initPB2_AsHighResistence:	
  2836                           
  2837                           ;main.c: 232: PB2 = 1;
  2838                           
  2839                           ; Regs used in _initPB2_AsHighResistence: []
  2840  03D8  1506               	bsf	6,2
  2841                           
  2842                           ;main.c: 233: PBOD2 = 1;
  2843  03D9  1683               	bsf	3,5	;RP0=1, select bank3
  2844  03DA  1703               	bsf	3,6	;RP1=1, select bank3
  2845  03DB  1508               	bsf	8,2
  2846  03DC  0008               	return
  2847  03DD                     __end_of_initPB2_AsHighResistence:	
  2848  03DD                     __ptext868:	
  2849 ;; =============== function _setPB4 ends ============
  2850                           
  2851                           
  2852 ;; *************** function _initPB4 *****************
  2853 ;; Defined at:
  2854 ;;		line 162 in file "D:\develop\190625\AK7030-OTP\main.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;  bValue          1    wreg     unsigned char 
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;  bValue          1    0[BANK0 ] unsigned char 
  2859 ;; Return value:  Size  Location     Type
  2860 ;;		None               void
  2861 ;; Registers used:
  2862 ;;		wreg
  2863 ;; Tracked objects:
  2864 ;;		On entry : 17F/20
  2865 ;;		On exit  : 17F/20
  2866 ;;		Unchanged: FFE80/0
  2867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2868 ;;      Params:         0       0       0       0       0
  2869 ;;      Locals:         0       1       0       0       0
  2870 ;;      Temps:          0       0       0       0       0
  2871 ;;      Totals:         0       1       0       0       0
  2872 ;;Total ram usage:        1 bytes
  2873 ;; Hardware stack levels used:    1
  2874 ;; Hardware stack levels required when called:    2
  2875 ;; This function calls:
  2876 ;;		Nothing
  2877 ;; This function is called by:
  2878 ;;		_initPin
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881  03DD                     _initPB4:	
  2882                           
  2883                           ; Regs used in _initPB4: [wreg]
  2884                           ;initPB4@bValue stored from wreg
  2885  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  2886  03DE  00A0               	movwf	initPB4@bValue
  2887                           
  2888                           ;main.c: 163: if( bValue )
  2889  03DF  0820               	movf	initPB4@bValue,w
  2890  03E0  1903               	btfsc	3,2
  2891  03E1  2BE5               	goto	l690
  2892                           
  2893                           ;main.c: 165: TRISB4 = 1;
  2894  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  2895  03E3  1606               	bsf	6,4
  2896  03E4  0008               	return
  2897  03E5                     l690:	
  2898                           
  2899                           ;main.c: 169: else
  2900                           ;main.c: 171: TRISB4= 0;
  2901  03E5  1683               	bsf	3,5	;RP0=1, select bank1
  2902  03E6  1206               	bcf	6,4
  2903  03E7  0008               	return
  2904  03E8                     __end_of_initPB4:	
  2905  03E8                     __ptext866:	
  2906 ;; =============== function _setPB5 ends ============
  2907                           
  2908                           
  2909 ;; *************** function _initPB5 *****************
  2910 ;; Defined at:
  2911 ;;		line 196 in file "D:\develop\190625\AK7030-OTP\main.c"
  2912 ;; Parameters:    Size  Location     Type
  2913 ;;  bValue          1    wreg     unsigned char 
  2914 ;; Auto vars:     Size  Location     Type
  2915 ;;  bValue          1    0[BANK0 ] unsigned char 
  2916 ;; Return value:  Size  Location     Type
  2917 ;;		None               void
  2918 ;; Registers used:
  2919 ;;		wreg
  2920 ;; Tracked objects:
  2921 ;;		On entry : 17F/20
  2922 ;;		On exit  : 17F/20
  2923 ;;		Unchanged: FFE80/0
  2924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2925 ;;      Params:         0       0       0       0       0
  2926 ;;      Locals:         0       1       0       0       0
  2927 ;;      Temps:          0       0       0       0       0
  2928 ;;      Totals:         0       1       0       0       0
  2929 ;;Total ram usage:        1 bytes
  2930 ;; Hardware stack levels used:    1
  2931 ;; Hardware stack levels required when called:    2
  2932 ;; This function calls:
  2933 ;;		Nothing
  2934 ;; This function is called by:
  2935 ;;		_initPin
  2936 ;; This function uses a non-reentrant model
  2937 ;;
  2938  03E8                     _initPB5:	
  2939                           
  2940                           ; Regs used in _initPB5: [wreg]
  2941                           ;initPB5@bValue stored from wreg
  2942  03E8  1283               	bcf	3,5	;RP0=0, select bank0
  2943  03E9  00A0               	movwf	initPB5@bValue
  2944                           
  2945                           ;main.c: 197: if( bValue )
  2946  03EA  0820               	movf	initPB5@bValue,w
  2947  03EB  1903               	btfsc	3,2
  2948  03EC  2BF0               	goto	l700
  2949                           
  2950                           ;main.c: 199: TRISB5 = 1;
  2951  03ED  1683               	bsf	3,5	;RP0=1, select bank1
  2952  03EE  1686               	bsf	6,5
  2953  03EF  0008               	return
  2954  03F0                     l700:	
  2955                           
  2956                           ;main.c: 203: else
  2957                           ;main.c: 205: TRISB5= 0;
  2958  03F0  1683               	bsf	3,5	;RP0=1, select bank1
  2959  03F1  1286               	bcf	6,5
  2960  03F2  0008               	return
  2961  03F3                     __end_of_initPB5:	
  2962                           
  2963                           	psect	text844
  2964  049A                     __ptext844:	
  2965 ;; =============== function _Filter ends ============
  2966                           
  2967                           
  2968 ;; *************** function _isFinishedOneHoursTimer *****************
  2969 ;; Defined at:
  2970 ;;		line 507 in file "D:\develop\190625\AK7030-OTP\common.c"
  2971 ;; Parameters:    Size  Location     Type
  2972 ;;		None
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;		None
  2975 ;; Return value:  Size  Location     Type
  2976 ;;                  1    wreg      unsigned char 
  2977 ;; Registers used:
  2978 ;;		wreg, status,2, status,0
  2979 ;; Tracked objects:
  2980 ;;		On entry : 160/0
  2981 ;;		On exit  : 160/0
  2982 ;;		Unchanged: FFE9F/0
  2983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2984 ;;      Params:         0       0       0       0       0
  2985 ;;      Locals:         0       0       0       0       0
  2986 ;;      Temps:          0       0       0       0       0
  2987 ;;      Totals:         0       0       0       0       0
  2988 ;;Total ram usage:        0 bytes
  2989 ;; Hardware stack levels used:    1
  2990 ;; Hardware stack levels required when called:    2
  2991 ;; This function calls:
  2992 ;;		Nothing
  2993 ;; This function is called by:
  2994 ;;		_main
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997  049A                     _isFinishedOneHoursTimer:	
  2998                           
  2999                           ;common.c: 508: if((uiOneHourTimer == 0) && bOneHourTimerStartFlag)
  3000                           
  3001                           ; Regs used in _isFinishedOneHoursTimer: [wreg+status,2+status,0]
  3002  049A  0859               	movf	_uiOneHourTimer+1,w
  3003  049B  0458               	iorwf	_uiOneHourTimer,w
  3004  049C  1D03               	skipz
  3005  049D  3400               	retlw	0
  3006  049E  0863               	movf	_bOneHourTimerStartFlag,w
  3007  049F  1903               	btfsc	3,2
  3008  04A0  3400               	retlw	0
  3009  04A1  3001               	movlw	1
  3010                           
  3011                           ;common.c: 509: {
  3012                           ;common.c: 510: bOneHourTimerStartFlag = 0;
  3013  04A2  01E3               	clrf	_bOneHourTimerStartFlag
  3014                           
  3015                           ;common.c: 511: return 1;
  3016  04A3  0008               	return
  3017  04A4                     __end_of_isFinishedOneHoursTimer:	
  3018                           ;common.c: 513: else
  3019                           ;common.c: 514: return 0;
  3020                           
  3021                           
  3022                           	psect	text845
  3023  0456                     __ptext845:	
  3024 ;; =============== function _isFinishedOneHoursTimer ends ============
  3025                           
  3026                           
  3027 ;; *************** function _startOneHoursTimer *****************
  3028 ;; Defined at:
  3029 ;;		line 424 in file "D:\develop\190625\AK7030-OTP\common.c"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;		None
  3034 ;; Return value:  Size  Location     Type
  3035 ;;		None               void
  3036 ;; Registers used:
  3037 ;;		wreg, status,2, status,0
  3038 ;; Tracked objects:
  3039 ;;		On entry : 60/0
  3040 ;;		On exit  : 60/0
  3041 ;;		Unchanged: FFF9F/0
  3042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3043 ;;      Params:         0       2       0       0       0
  3044 ;;      Locals:         0       0       0       0       0
  3045 ;;      Temps:          0       0       0       0       0
  3046 ;;      Totals:         0       2       0       0       0
  3047 ;;Total ram usage:        2 bytes
  3048 ;; Hardware stack levels used:    1
  3049 ;; Hardware stack levels required when called:    2
  3050 ;; This function calls:
  3051 ;;		Nothing
  3052 ;; This function is called by:
  3053 ;;		_main
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056  0456                     _startOneHoursTimer:	
  3057                           
  3058                           ;common.c: 425: if(( 0 == uiOneHourTimer ) && ( 0 == bOneHourTimerStartFlag ))
  3059                           
  3060                           ; Regs used in _startOneHoursTimer: [wreg+status,2+status,0]
  3061  0456  0859               	movf	_uiOneHourTimer+1,w
  3062  0457  0458               	iorwf	_uiOneHourTimer,w
  3063  0458  1D03               	skipz
  3064  0459  0008               	return
  3065  045A  08E3               	movf	_bOneHourTimerStartFlag,f
  3066  045B  1D03               	skipz
  3067  045C  0008               	return
  3068                           
  3069                           ;common.c: 426: {
  3070                           ;common.c: 427: uiOneHourTimer = uiSetTime;
  3071  045D  0821               	movf	startOneHoursTimer@uiSetTime+1,w
  3072  045E  00D9               	movwf	_uiOneHourTimer+1
  3073  045F  0820               	movf	startOneHoursTimer@uiSetTime,w
  3074  0460  00D8               	movwf	_uiOneHourTimer
  3075                           
  3076                           ;common.c: 428: bOneHourTimerStartFlag = 1;
  3077  0461  01E3               	clrf	_bOneHourTimerStartFlag
  3078  0462  0AE3               	incf	_bOneHourTimerStartFlag,f
  3079  0463  0008               	return
  3080  0464                     __end_of_startOneHoursTimer:	
  3081                           
  3082                           	psect	text846
  3083  04A4                     __ptext846:	
  3084 ;; =============== function _startOneHoursTimer ends ============
  3085                           
  3086                           
  3087 ;; *************** function _isFinishedThreeHoursTimer *****************
  3088 ;; Defined at:
  3089 ;;		line 494 in file "D:\develop\190625\AK7030-OTP\common.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;		None
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;		None
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  1    wreg      unsigned char 
  3096 ;; Registers used:
  3097 ;;		wreg, status,2, status,0
  3098 ;; Tracked objects:
  3099 ;;		On entry : 60/0
  3100 ;;		On exit  : 60/0
  3101 ;;		Unchanged: FFF9F/0
  3102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3103 ;;      Params:         0       0       0       0       0
  3104 ;;      Locals:         0       0       0       0       0
  3105 ;;      Temps:          0       0       0       0       0
  3106 ;;      Totals:         0       0       0       0       0
  3107 ;;Total ram usage:        0 bytes
  3108 ;; Hardware stack levels used:    1
  3109 ;; Hardware stack levels required when called:    2
  3110 ;; This function calls:
  3111 ;;		Nothing
  3112 ;; This function is called by:
  3113 ;;		_main
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116  04A4                     _isFinishedThreeHoursTimer:	
  3117                           
  3118                           ;common.c: 495: if((uiSmallTimer == 0) && bSmallTimerStartFlag)
  3119                           
  3120                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  3121  04A4  085B               	movf	_uiSmallTimer+1,w
  3122  04A5  045A               	iorwf	_uiSmallTimer,w
  3123  04A6  1D03               	skipz
  3124  04A7  3400               	retlw	0
  3125  04A8  0864               	movf	_bSmallTimerStartFlag,w
  3126  04A9  1903               	btfsc	3,2
  3127  04AA  3400               	retlw	0
  3128  04AB  3001               	movlw	1
  3129                           
  3130                           ;common.c: 496: {
  3131                           ;common.c: 497: bSmallTimerStartFlag = 0;
  3132  04AC  01E4               	clrf	_bSmallTimerStartFlag
  3133                           
  3134                           ;common.c: 498: return 1;
  3135  04AD  0008               	return
  3136  04AE                     __end_of_isFinishedThreeHoursTimer:	
  3137                           ;common.c: 500: else
  3138                           ;common.c: 501: return 0;
  3139                           
  3140                           
  3141                           	psect	text847
  3142  0464                     __ptext847:	
  3143 ;; =============== function _isFinishedThreeHoursTimer ends ============
  3144                           
  3145                           
  3146 ;; *************** function _startThreeHoursTimer *****************
  3147 ;; Defined at:
  3148 ;;		line 411 in file "D:\develop\190625\AK7030-OTP\common.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;		None
  3153 ;; Return value:  Size  Location     Type
  3154 ;;		None               void
  3155 ;; Registers used:
  3156 ;;		wreg, status,2, status,0
  3157 ;; Tracked objects:
  3158 ;;		On entry : 60/0
  3159 ;;		On exit  : 60/0
  3160 ;;		Unchanged: FFF9F/0
  3161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3162 ;;      Params:         0       2       0       0       0
  3163 ;;      Locals:         0       0       0       0       0
  3164 ;;      Temps:          0       0       0       0       0
  3165 ;;      Totals:         0       2       0       0       0
  3166 ;;Total ram usage:        2 bytes
  3167 ;; Hardware stack levels used:    1
  3168 ;; Hardware stack levels required when called:    2
  3169 ;; This function calls:
  3170 ;;		Nothing
  3171 ;; This function is called by:
  3172 ;;		_main
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175  0464                     _startThreeHoursTimer:	
  3176                           
  3177                           ;common.c: 412: if(( 0 == uiSmallTimer ) && ( 0 == bSmallTimerStartFlag ))
  3178                           
  3179                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  3180  0464  085B               	movf	_uiSmallTimer+1,w
  3181  0465  045A               	iorwf	_uiSmallTimer,w
  3182  0466  1D03               	skipz
  3183  0467  0008               	return
  3184  0468  08E4               	movf	_bSmallTimerStartFlag,f
  3185  0469  1D03               	skipz
  3186  046A  0008               	return
  3187                           
  3188                           ;common.c: 413: {
  3189                           ;common.c: 414: uiSmallTimer = uiSetTime;
  3190  046B  0821               	movf	startThreeHoursTimer@uiSetTime+1,w
  3191  046C  00DB               	movwf	_uiSmallTimer+1
  3192  046D  0820               	movf	startThreeHoursTimer@uiSetTime,w
  3193  046E  00DA               	movwf	_uiSmallTimer
  3194                           
  3195                           ;common.c: 415: bSmallTimerStartFlag = 1;
  3196  046F  01E4               	clrf	_bSmallTimerStartFlag
  3197  0470  0AE4               	incf	_bSmallTimerStartFlag,f
  3198  0471  0008               	return
  3199  0472                     __end_of_startThreeHoursTimer:	
  3200                           
  3201                           	psect	text848
  3202  04AE                     __ptext848:	
  3203 ;; =============== function _startThreeHoursTimer ends ============
  3204                           
  3205                           
  3206 ;; *************** function _isFinishedTwelveHoursTimer *****************
  3207 ;; Defined at:
  3208 ;;		line 483 in file "D:\develop\190625\AK7030-OTP\common.c"
  3209 ;; Parameters:    Size  Location     Type
  3210 ;;		None
  3211 ;; Auto vars:     Size  Location     Type
  3212 ;;		None
  3213 ;; Return value:  Size  Location     Type
  3214 ;;                  1    wreg      unsigned char 
  3215 ;; Registers used:
  3216 ;;		wreg, status,2, status,0
  3217 ;; Tracked objects:
  3218 ;;		On entry : 60/0
  3219 ;;		On exit  : 60/0
  3220 ;;		Unchanged: FFF9F/0
  3221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3222 ;;      Params:         0       0       0       0       0
  3223 ;;      Locals:         0       0       0       0       0
  3224 ;;      Temps:          0       0       0       0       0
  3225 ;;      Totals:         0       0       0       0       0
  3226 ;;Total ram usage:        0 bytes
  3227 ;; Hardware stack levels used:    1
  3228 ;; Hardware stack levels required when called:    2
  3229 ;; This function calls:
  3230 ;;		Nothing
  3231 ;; This function is called by:
  3232 ;;		_main
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235  04AE                     _isFinishedTwelveHoursTimer:	
  3236                           
  3237                           ;common.c: 484: if(( uiBigTimer == 0 ) && bBigTimerStartFlag )
  3238                           
  3239                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  3240  04AE  0857               	movf	_uiBigTimer+1,w
  3241  04AF  0456               	iorwf	_uiBigTimer,w
  3242  04B0  1D03               	skipz
  3243  04B1  3400               	retlw	0
  3244  04B2  0862               	movf	_bBigTimerStartFlag,w
  3245  04B3  1903               	btfsc	3,2
  3246  04B4  3400               	retlw	0
  3247  04B5  3001               	movlw	1
  3248                           
  3249                           ;common.c: 485: {
  3250                           ;common.c: 486: bBigTimerStartFlag = 0;
  3251  04B6  01E2               	clrf	_bBigTimerStartFlag
  3252                           
  3253                           ;common.c: 487: return 1;
  3254  04B7  0008               	return
  3255  04B8                     __end_of_isFinishedTwelveHoursTimer:	
  3256                           ;common.c: 489: else
  3257                           ;common.c: 490: return 0;
  3258                           
  3259                           
  3260                           	psect	text849
  3261  0472                     __ptext849:	
  3262 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  3263                           
  3264                           
  3265 ;; *************** function _startTwelveHourTimer *****************
  3266 ;; Defined at:
  3267 ;;		line 363 in file "D:\develop\190625\AK7030-OTP\common.c"
  3268 ;; Parameters:    Size  Location     Type
  3269 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  3270 ;; Auto vars:     Size  Location     Type
  3271 ;;		None
  3272 ;; Return value:  Size  Location     Type
  3273 ;;		None               void
  3274 ;; Registers used:
  3275 ;;		wreg, status,2, status,0
  3276 ;; Tracked objects:
  3277 ;;		On entry : 160/0
  3278 ;;		On exit  : 160/0
  3279 ;;		Unchanged: FFE9F/0
  3280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3281 ;;      Params:         0       2       0       0       0
  3282 ;;      Locals:         0       0       0       0       0
  3283 ;;      Temps:          0       0       0       0       0
  3284 ;;      Totals:         0       2       0       0       0
  3285 ;;Total ram usage:        2 bytes
  3286 ;; Hardware stack levels used:    1
  3287 ;; Hardware stack levels required when called:    2
  3288 ;; This function calls:
  3289 ;;		Nothing
  3290 ;; This function is called by:
  3291 ;;		_main
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294  0472                     _startTwelveHourTimer:	
  3295                           
  3296                           ;common.c: 364: if((0 == uiBigTimer) && ( 0 == bBigTimerStartFlag))
  3297                           
  3298                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  3299  0472  0857               	movf	_uiBigTimer+1,w
  3300  0473  0456               	iorwf	_uiBigTimer,w
  3301  0474  1D03               	skipz
  3302  0475  0008               	return
  3303  0476  08E2               	movf	_bBigTimerStartFlag,f
  3304  0477  1D03               	skipz
  3305  0478  0008               	return
  3306                           
  3307                           ;common.c: 365: {
  3308                           ;common.c: 366: uiBigTimer = uiSetTime;
  3309  0479  0821               	movf	startTwelveHourTimer@uiSetTime+1,w
  3310  047A  00D7               	movwf	_uiBigTimer+1
  3311  047B  0820               	movf	startTwelveHourTimer@uiSetTime,w
  3312  047C  00D6               	movwf	_uiBigTimer
  3313                           
  3314                           ;common.c: 367: bBigTimerStartFlag = 1;
  3315  047D  01E2               	clrf	_bBigTimerStartFlag
  3316  047E  0AE2               	incf	_bBigTimerStartFlag,f
  3317  047F  0008               	return
  3318  0480                     __end_of_startTwelveHourTimer:	
  3319                           
  3320                           	psect	text850
  3321  04E1                     __ptext850:	
  3322 ;; =============== function _startTwelveHourTimer ends ============
  3323                           
  3324                           
  3325 ;; *************** function _clearTwentyMinTimer *****************
  3326 ;; Defined at:
  3327 ;;		line 404 in file "D:\develop\190625\AK7030-OTP\common.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;		None
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;		None
  3332 ;; Return value:  Size  Location     Type
  3333 ;;		None               void
  3334 ;; Registers used:
  3335 ;;		status,2
  3336 ;; Tracked objects:
  3337 ;;		On entry : 160/0
  3338 ;;		On exit  : 160/0
  3339 ;;		Unchanged: FFE9F/0
  3340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3341 ;;      Params:         0       0       0       0       0
  3342 ;;      Locals:         0       0       0       0       0
  3343 ;;      Temps:          0       0       0       0       0
  3344 ;;      Totals:         0       0       0       0       0
  3345 ;;Total ram usage:        0 bytes
  3346 ;; Hardware stack levels used:    1
  3347 ;; Hardware stack levels required when called:    2
  3348 ;; This function calls:
  3349 ;;		Nothing
  3350 ;; This function is called by:
  3351 ;;		_main
  3352 ;; This function uses a non-reentrant model
  3353 ;;
  3354  04E1                     _clearTwentyMinTimer:	
  3355                           
  3356                           ;common.c: 405: uiTwentyMinTimer = 0;
  3357                           
  3358                           ; Regs used in _clearTwentyMinTimer: [status,2]
  3359  04E1  01DC               	clrf	_uiTwentyMinTimer
  3360  04E2  01DD               	clrf	_uiTwentyMinTimer+1
  3361                           
  3362                           ;common.c: 406: bTwentyMinStartFlag = 0;
  3363  04E3  01E5               	clrf	_bTwentyMinStartFlag
  3364  04E4  0008               	return
  3365  04E5                     __end_of_clearTwentyMinTimer:	
  3366                           
  3367                           	psect	text851
  3368  04B8                     __ptext851:	
  3369 ;; =============== function _clearTwentyMinTimer ends ============
  3370                           
  3371                           
  3372 ;; *************** function _isFinishedTwentyMinTimer *****************
  3373 ;; Defined at:
  3374 ;;		line 459 in file "D:\develop\190625\AK7030-OTP\common.c"
  3375 ;; Parameters:    Size  Location     Type
  3376 ;;		None
  3377 ;; Auto vars:     Size  Location     Type
  3378 ;;		None
  3379 ;; Return value:  Size  Location     Type
  3380 ;;                  1    wreg      unsigned char 
  3381 ;; Registers used:
  3382 ;;		wreg, status,2, status,0
  3383 ;; Tracked objects:
  3384 ;;		On entry : 60/0
  3385 ;;		On exit  : 60/0
  3386 ;;		Unchanged: FFF9F/0
  3387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3388 ;;      Params:         0       0       0       0       0
  3389 ;;      Locals:         0       0       0       0       0
  3390 ;;      Temps:          0       0       0       0       0
  3391 ;;      Totals:         0       0       0       0       0
  3392 ;;Total ram usage:        0 bytes
  3393 ;; Hardware stack levels used:    1
  3394 ;; Hardware stack levels required when called:    2
  3395 ;; This function calls:
  3396 ;;		Nothing
  3397 ;; This function is called by:
  3398 ;;		_main
  3399 ;; This function uses a non-reentrant model
  3400 ;;
  3401  04B8                     _isFinishedTwentyMinTimer:	
  3402                           
  3403                           ;common.c: 460: if(( 0 == uiTwentyMinTimer ) && bTwentyMinStartFlag )
  3404                           
  3405                           ; Regs used in _isFinishedTwentyMinTimer: [wreg+status,2+status,0]
  3406  04B8  085D               	movf	_uiTwentyMinTimer+1,w
  3407  04B9  045C               	iorwf	_uiTwentyMinTimer,w
  3408  04BA  1D03               	skipz
  3409  04BB  3400               	retlw	0
  3410  04BC  0865               	movf	_bTwentyMinStartFlag,w
  3411  04BD  1903               	btfsc	3,2
  3412  04BE  3400               	retlw	0
  3413  04BF  3001               	movlw	1
  3414                           
  3415                           ;common.c: 461: {
  3416                           ;common.c: 462: bTwentyMinStartFlag = 0;
  3417  04C0  01E5               	clrf	_bTwentyMinStartFlag
  3418                           
  3419                           ;common.c: 463: return 1;
  3420  04C1  0008               	return
  3421  04C2                     __end_of_isFinishedTwentyMinTimer:	
  3422                           ;common.c: 465: else
  3423                           ;common.c: 466: return 0;
  3424                           
  3425                           
  3426                           	psect	text852
  3427  04F4                     __ptext852:	
  3428 ;; =============== function _isFinishedTwentyMinTimer ends ============
  3429                           
  3430                           
  3431 ;; *************** function _clrSampeTime *****************
  3432 ;; Defined at:
  3433 ;;		line 529 in file "D:\develop\190625\AK7030-OTP\common.c"
  3434 ;; Parameters:    Size  Location     Type
  3435 ;;		None
  3436 ;; Auto vars:     Size  Location     Type
  3437 ;;		None
  3438 ;; Return value:  Size  Location     Type
  3439 ;;		None               void
  3440 ;; Registers used:
  3441 ;;		status,2
  3442 ;; Tracked objects:
  3443 ;;		On entry : 60/0
  3444 ;;		On exit  : 60/0
  3445 ;;		Unchanged: FFF9F/0
  3446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3447 ;;      Params:         0       0       0       0       0
  3448 ;;      Locals:         0       0       0       0       0
  3449 ;;      Temps:          0       0       0       0       0
  3450 ;;      Totals:         0       0       0       0       0
  3451 ;;Total ram usage:        0 bytes
  3452 ;; Hardware stack levels used:    1
  3453 ;; Hardware stack levels required when called:    2
  3454 ;; This function calls:
  3455 ;;		Nothing
  3456 ;; This function is called by:
  3457 ;;		_main
  3458 ;; This function uses a non-reentrant model
  3459 ;;
  3460  04F4                     _clrSampeTime:	
  3461                           
  3462                           ;common.c: 530: timer.timer10msStopWatch = 0;
  3463                           
  3464                           ; Regs used in _clrSampeTime: [status,2]
  3465  04F4  01E7               	clrf	_timer
  3466  04F5  0008               	return
  3467  04F6                     __end_of_clrSampeTime:	
  3468                           
  3469                           	psect	text853
  3470  04DC                     __ptext853:	
  3471 ;; =============== function _clrSampeTime ends ============
  3472                           
  3473                           
  3474 ;; *************** function _isPermitSampleTime *****************
  3475 ;; Defined at:
  3476 ;;		line 519 in file "D:\develop\190625\AK7030-OTP\common.c"
  3477 ;; Parameters:    Size  Location     Type
  3478 ;;		None
  3479 ;; Auto vars:     Size  Location     Type
  3480 ;;		None
  3481 ;; Return value:  Size  Location     Type
  3482 ;;                  1    wreg      unsigned char 
  3483 ;; Registers used:
  3484 ;;		wreg
  3485 ;; Tracked objects:
  3486 ;;		On entry : 60/0
  3487 ;;		On exit  : 60/0
  3488 ;;		Unchanged: FFF9F/0
  3489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3490 ;;      Params:         0       0       0       0       0
  3491 ;;      Locals:         0       0       0       0       0
  3492 ;;      Temps:          0       0       0       0       0
  3493 ;;      Totals:         0       0       0       0       0
  3494 ;;Total ram usage:        0 bytes
  3495 ;; Hardware stack levels used:    1
  3496 ;; Hardware stack levels required when called:    2
  3497 ;; This function calls:
  3498 ;;		Nothing
  3499 ;; This function is called by:
  3500 ;;		_main
  3501 ;; This function uses a non-reentrant model
  3502 ;;
  3503  04DC                     _isPermitSampleTime:	
  3504                           
  3505                           ;common.c: 520: if(timer.timer10msStopWatch >= 10)
  3506                           
  3507                           ; Regs used in _isPermitSampleTime: [wreg]
  3508  04DC  300A               	movlw	10
  3509  04DD  0267               	subwf	_timer,w
  3510  04DE  1803               	btfsc	3,0
  3511                           
  3512                           ;common.c: 521: {
  3513                           ;common.c: 522: return 1;
  3514  04DF  3401               	retlw	1
  3515                           
  3516                           ;common.c: 524: else
  3517                           ;common.c: 525: return 0;
  3518  04E0  3400               	retlw	0
  3519  04E1                     __end_of_isPermitSampleTime:	
  3520                           
  3521                           	psect	text854
  3522  0480                     __ptext854:	
  3523 ;; =============== function _isPermitSampleTime ends ============
  3524                           
  3525                           
  3526 ;; *************** function _startTwentyMinTimer *****************
  3527 ;; Defined at:
  3528 ;;		line 449 in file "D:\develop\190625\AK7030-OTP\common.c"
  3529 ;; Parameters:    Size  Location     Type
  3530 ;;  uiSetValue      2    0[BANK0 ] unsigned int 
  3531 ;; Auto vars:     Size  Location     Type
  3532 ;;		None
  3533 ;; Return value:  Size  Location     Type
  3534 ;;		None               void
  3535 ;; Registers used:
  3536 ;;		wreg, status,2, status,0
  3537 ;; Tracked objects:
  3538 ;;		On entry : 17F/0
  3539 ;;		On exit  : 17F/0
  3540 ;;		Unchanged: FFE80/0
  3541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3542 ;;      Params:         0       2       0       0       0
  3543 ;;      Locals:         0       0       0       0       0
  3544 ;;      Temps:          0       0       0       0       0
  3545 ;;      Totals:         0       2       0       0       0
  3546 ;;Total ram usage:        2 bytes
  3547 ;; Hardware stack levels used:    1
  3548 ;; Hardware stack levels required when called:    2
  3549 ;; This function calls:
  3550 ;;		Nothing
  3551 ;; This function is called by:
  3552 ;;		_main
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555  0480                     _startTwentyMinTimer:	
  3556                           
  3557                           ;common.c: 450: if(( 0 == uiTwentyMinTimer) && ( 0 == bTwentyMinStartFlag))
  3558                           
  3559                           ; Regs used in _startTwentyMinTimer: [wreg+status,2+status,0]
  3560  0480  085D               	movf	_uiTwentyMinTimer+1,w
  3561  0481  045C               	iorwf	_uiTwentyMinTimer,w
  3562  0482  1D03               	skipz
  3563  0483  0008               	return
  3564  0484  08E5               	movf	_bTwentyMinStartFlag,f
  3565  0485  1D03               	skipz
  3566  0486  0008               	return
  3567                           
  3568                           ;common.c: 451: {
  3569                           ;common.c: 452: uiTwentyMinTimer = uiSetValue;
  3570  0487  0821               	movf	startTwentyMinTimer@uiSetValue+1,w
  3571  0488  00DD               	movwf	_uiTwentyMinTimer+1
  3572  0489  0820               	movf	startTwentyMinTimer@uiSetValue,w
  3573  048A  00DC               	movwf	_uiTwentyMinTimer
  3574                           
  3575                           ;common.c: 453: bTwentyMinStartFlag = 1;
  3576  048B  01E5               	clrf	_bTwentyMinStartFlag
  3577  048C  0AE5               	incf	_bTwentyMinStartFlag,f
  3578  048D  0008               	return
  3579  048E                     __end_of_startTwentyMinTimer:	
  3580                           
  3581                           	psect	text857
  3582  04F1                     __ptext857:	
  3583 ;; =============== function _adc_test_init ends ============
  3584                           
  3585                           
  3586 ;; *************** function _timer1_interrupt_config *****************
  3587 ;; Defined at:
  3588 ;;		line 201 in file "D:\develop\190625\AK7030-OTP\common.c"
  3589 ;; Parameters:    Size  Location     Type
  3590 ;;		None
  3591 ;; Auto vars:     Size  Location     Type
  3592 ;;		None
  3593 ;; Return value:  Size  Location     Type
  3594 ;;		None               void
  3595 ;; Registers used:
  3596 ;;		None
  3597 ;; Tracked objects:
  3598 ;;		On entry : 17F/20
  3599 ;;		On exit  : 17F/20
  3600 ;;		Unchanged: FFE80/0
  3601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3602 ;;      Params:         0       0       0       0       0
  3603 ;;      Locals:         0       0       0       0       0
  3604 ;;      Temps:          0       0       0       0       0
  3605 ;;      Totals:         0       0       0       0       0
  3606 ;;Total ram usage:        0 bytes
  3607 ;; Hardware stack levels used:    1
  3608 ;; Hardware stack levels required when called:    2
  3609 ;; This function calls:
  3610 ;;		Nothing
  3611 ;; This function is called by:
  3612 ;;		_main
  3613 ;; This function uses a non-reentrant model
  3614 ;;
  3615  04F1                     _timer1_interrupt_config:	
  3616                           
  3617                           ;common.c: 202: GIE = 1;
  3618                           
  3619                           ; Regs used in _timer1_interrupt_config: []
  3620  04F1  178B               	bsf	11,7
  3621                           
  3622                           ;common.c: 203: PEIE = 1;
  3623  04F2  170B               	bsf	11,6
  3624  04F3  0008               	return
  3625  04F4                     __end_of_timer1_interrupt_config:	
  3626                           
  3627                           	psect	text858
  3628  04C2                     __ptext858:	
  3629 ;; =============== function _timer1_interrupt_config ends ============
  3630                           
  3631                           
  3632 ;; *************** function _timer1_config *****************
  3633 ;; Defined at:
  3634 ;;		line 189 in file "D:\develop\190625\AK7030-OTP\common.c"
  3635 ;; Parameters:    Size  Location     Type
  3636 ;;		None
  3637 ;; Auto vars:     Size  Location     Type
  3638 ;;		None
  3639 ;; Return value:  Size  Location     Type
  3640 ;;		None               void
  3641 ;; Registers used:
  3642 ;;		wreg
  3643 ;; Tracked objects:
  3644 ;;		On entry : 17F/40
  3645 ;;		On exit  : 17F/20
  3646 ;;		Unchanged: FFE80/0
  3647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3648 ;;      Params:         0       0       0       0       0
  3649 ;;      Locals:         0       0       0       0       0
  3650 ;;      Temps:          0       0       0       0       0
  3651 ;;      Totals:         0       0       0       0       0
  3652 ;;Total ram usage:        0 bytes
  3653 ;; Hardware stack levels used:    1
  3654 ;; Hardware stack levels required when called:    2
  3655 ;; This function calls:
  3656 ;;		Nothing
  3657 ;; This function is called by:
  3658 ;;		_main
  3659 ;; This function uses a non-reentrant model
  3660 ;;
  3661  04C2                     _timer1_config:	
  3662                           
  3663                           ;common.c: 191: TMR1H=0xCF;
  3664                           
  3665                           ; Regs used in _timer1_config: [wreg]
  3666  04C2  30CF               	movlw	207
  3667  04C3  1303               	bcf	3,6	;RP1=0, select bank0
  3668  04C4  008F               	movwf	15	;volatile
  3669                           
  3670                           ;common.c: 192: TMR1L=0x2C;
  3671  04C5  302C               	movlw	44
  3672  04C6  008E               	movwf	14	;volatile
  3673                           
  3674                           ;common.c: 193: T1CON=0xE1;
  3675  04C7  30E1               	movlw	225
  3676  04C8  0090               	movwf	16	;volatile
  3677                           
  3678                           ;common.c: 194: TMR1IE=1;
  3679  04C9  1683               	bsf	3,5	;RP0=1, select bank1
  3680  04CA  140C               	bsf	12,0
  3681  04CB  0008               	return
  3682  04CC                     __end_of_timer1_config:	
  3683                           
  3684                           	psect	text859
  3685  04D4                     __ptext859:	
  3686 ;; =============== function _timer1_config ends ============
  3687                           
  3688                           
  3689 ;; *************** function _clock_config *****************
  3690 ;; Defined at:
  3691 ;;		line 181 in file "D:\develop\190625\AK7030-OTP\common.c"
  3692 ;; Parameters:    Size  Location     Type
  3693 ;;		None
  3694 ;; Auto vars:     Size  Location     Type
  3695 ;;		None
  3696 ;; Return value:  Size  Location     Type
  3697 ;;		None               void
  3698 ;; Registers used:
  3699 ;;		wreg, status,2
  3700 ;; Tracked objects:
  3701 ;;		On entry : 17F/20
  3702 ;;		On exit  : 17F/40
  3703 ;;		Unchanged: FFE80/0
  3704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3705 ;;      Params:         0       0       0       0       0
  3706 ;;      Locals:         0       0       0       0       0
  3707 ;;      Temps:          0       0       0       0       0
  3708 ;;      Totals:         0       0       0       0       0
  3709 ;;Total ram usage:        0 bytes
  3710 ;; Hardware stack levels used:    1
  3711 ;; Hardware stack levels required when called:    2
  3712 ;; This function calls:
  3713 ;;		Nothing
  3714 ;; This function is called by:
  3715 ;;		_main
  3716 ;; This function uses a non-reentrant model
  3717 ;;
  3718  04D4                     _clock_config:	
  3719                           
  3720                           ;common.c: 183: CLKPR = 0x80;
  3721                           
  3722                           ; Regs used in _clock_config: [wreg+status,2]
  3723  04D4  3080               	movlw	128
  3724  04D5  1283               	bcf	3,5	;RP0=0, select bank2
  3725  04D6  1703               	bsf	3,6	;RP1=1, select bank2
  3726  04D7  0088               	movwf	8	;volatile
  3727                           
  3728                           ;common.c: 184: CLKPR = 0x00;
  3729  04D8  0188               	clrf	8	;volatile
  3730  04D9                     l1523:	
  3731                           ;common.c: 185: while(CLKPCE);
  3732                           
  3733  04D9  1F88               	btfss	8,7
  3734  04DA  0008               	return
  3735  04DB  2CD9               	goto	l1523
  3736  04DC                     __end_of_clock_config:	
  3737                           
  3738                           	psect	text860
  3739  04F6                     __ptext860:	
  3740 ;; =============== function _clock_config ends ============
  3741                           
  3742                           
  3743 ;; *************** function _reset *****************
  3744 ;; Defined at:
  3745 ;;		line 355 in file "D:\develop\190625\AK7030-OTP\main.c"
  3746 ;; Parameters:    Size  Location     Type
  3747 ;;		None
  3748 ;; Auto vars:     Size  Location     Type
  3749 ;;		None
  3750 ;; Return value:  Size  Location     Type
  3751 ;;		None               void
  3752 ;; Registers used:
  3753 ;;		None
  3754 ;; Tracked objects:
  3755 ;;		On entry : 40/20
  3756 ;;		On exit  : 40/20
  3757 ;;		Unchanged: FFFFFFBF/0
  3758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3759 ;;      Params:         0       0       0       0       0
  3760 ;;      Locals:         0       0       0       0       0
  3761 ;;      Temps:          0       0       0       0       0
  3762 ;;      Totals:         0       0       0       0       0
  3763 ;;Total ram usage:        0 bytes
  3764 ;; Hardware stack levels used:    1
  3765 ;; Hardware stack levels required when called:    2
  3766 ;; This function calls:
  3767 ;;		Nothing
  3768 ;; This function is called by:
  3769 ;;		_main
  3770 ;; This function uses a non-reentrant model
  3771 ;;
  3772  04F6                     _reset:	
  3773  04F6                     l734:	
  3774                           ; Regs used in _reset: []
  3775                           ;main.c: 357: while(1);
  3776                           
  3777  04F6  2CF6               	goto	l734
  3778                           
  3779                           	psect	text861
  3780  04E5                     __ptext861:	
  3781  04E5                     __end_of_reset:	
  3782                           
  3783 ;; =============== function _reset ends ============
  3784 ;; *************** function _selectAdChannel *****************
  3785 ;; Defined at:
  3786 ;;		line 344 in file "D:\develop\190625\AK7030-OTP\main.c"
  3787 ;; Parameters:    Size  Location     Type
  3788 ;;		None
  3789 ;; Auto vars:     Size  Location     Type
  3790 ;;		None
  3791 ;; Return value:  Size  Location     Type
  3792 ;;		None               void
  3793 ;; Registers used:
  3794 ;;		None
  3795 ;; Tracked objects:
  3796 ;;		On entry : 17F/0
  3797 ;;		On exit  : 17F/20
  3798 ;;		Unchanged: FFE80/0
  3799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3800 ;;      Params:         0       0       0       0       0
  3801 ;;      Locals:         0       0       0       0       0
  3802 ;;      Temps:          0       0       0       0       0
  3803 ;;      Totals:         0       0       0       0       0
  3804 ;;Total ram usage:        0 bytes
  3805 ;; Hardware stack levels used:    1
  3806 ;; Hardware stack levels required when called:    2
  3807 ;; This function calls:
  3808 ;;		Nothing
  3809 ;; This function is called by:
  3810 ;;		_main
  3811 ;; This function uses a non-reentrant model
  3812 ;;
  3813  04E5                     _selectAdChannel:	
  3814                           
  3815                           ;main.c: 346: TRISB0 = 1;
  3816                           
  3817                           ; Regs used in _selectAdChannel: []
  3818  04E5  1683               	bsf	3,5	;RP0=1, select bank1
  3819  04E6  1406               	bsf	6,0
  3820                           
  3821                           ;main.c: 347: TRISB1 = 1;
  3822  04E7  1486               	bsf	6,1
  3823  04E8  0008               	return
  3824  04E9                     __end_of_selectAdChannel:	
  3825                           
  3826                           	psect	text862
  3827  048E                     __ptext862:	
  3828 ;; =============== function _selectAdChannel ends ============
  3829                           
  3830                           
  3831 ;; *************** function _pwm_config *****************
  3832 ;; Defined at:
  3833 ;;		line 303 in file "D:\develop\190625\AK7030-OTP\main.c"
  3834 ;; Parameters:    Size  Location     Type
  3835 ;;  state           1    wreg     unsigned char 
  3836 ;; Auto vars:     Size  Location     Type
  3837 ;;  state           1    0[BANK0 ] unsigned char 
  3838 ;; Return value:  Size  Location     Type
  3839 ;;		None               void
  3840 ;; Registers used:
  3841 ;;		wreg, status,2, status,0
  3842 ;; Tracked objects:
  3843 ;;		On entry : 0/0
  3844 ;;		On exit  : 60/0
  3845 ;;		Unchanged: FFF9F/0
  3846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3847 ;;      Params:         0       0       0       0       0
  3848 ;;      Locals:         0       1       0       0       0
  3849 ;;      Temps:          0       0       0       0       0
  3850 ;;      Totals:         0       1       0       0       0
  3851 ;;Total ram usage:        1 bytes
  3852 ;; Hardware stack levels used:    1
  3853 ;; Hardware stack levels required when called:    2
  3854 ;; This function calls:
  3855 ;;		Nothing
  3856 ;; This function is called by:
  3857 ;;		_main
  3858 ;; This function uses a non-reentrant model
  3859 ;;
  3860  048E                     _pwm_config:	
  3861                           
  3862                           ; Regs used in _pwm_config: [wreg+status,2+status,0]
  3863                           ;pwm_config@state stored from wreg
  3864  048E  1283               	bcf	3,5	;RP0=0, select bank0
  3865  048F  1303               	bcf	3,6	;RP1=0, select bank0
  3866  0490  00A0               	movwf	pwm_config@state
  3867                           
  3868                           ;main.c: 305: if( state )
  3869  0491  0820               	movf	pwm_config@state,w
  3870  0492  1903               	btfsc	3,2
  3871  0493  2C97               	goto	l3343
  3872                           
  3873                           ;main.c: 306: CCP1CON|= 0x0c;
  3874  0494  300C               	movlw	12
  3875  0495  0497               	iorwf	23,f	;volatile
  3876  0496  0008               	return
  3877  0497                     l3343:	
  3878                           
  3879                           ;main.c: 307: else
  3880                           ;main.c: 308: CCP1CON&= 0xf0;
  3881  0497  30F0               	movlw	240
  3882  0498  0597               	andwf	23,f	;volatile
  3883  0499  0008               	return
  3884  049A                     __end_of_pwm_config:	
  3885                           
  3886                           	psect	text863
  3887  03F3                     __ptext863:	
  3888 ;; =============== function _pwm_config ends ============
  3889                           
  3890                           
  3891 ;; *************** function _pwm_start *****************
  3892 ;; Defined at:
  3893 ;;		line 242 in file "D:\develop\190625\AK7030-OTP\main.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;  ucPulseWidth    1    wreg     unsigned char 
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;  ucPulseWidth    1    4[BANK0 ] unsigned char 
  3898 ;;  ucConvertRea    1    3[BANK0 ] unsigned char 
  3899 ;;  ucGeHighestS    1    2[BANK0 ] unsigned char 
  3900 ;;  ucGetLowestT    1    1[BANK0 ] unsigned char 
  3901 ;;  ucCCP1CON_Va    1    0[BANK0 ] unsigned char 
  3902 ;; Return value:  Size  Location     Type
  3903 ;;		None               void
  3904 ;; Registers used:
  3905 ;;		wreg, status,2, status,0
  3906 ;; Tracked objects:
  3907 ;;		On entry : 60/0
  3908 ;;		On exit  : 60/60
  3909 ;;		Unchanged: FFF9F/0
  3910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3911 ;;      Params:         0       0       0       0       0
  3912 ;;      Locals:         0       5       0       0       0
  3913 ;;      Temps:          0       0       0       0       0
  3914 ;;      Totals:         0       5       0       0       0
  3915 ;;Total ram usage:        5 bytes
  3916 ;; Hardware stack levels used:    1
  3917 ;; Hardware stack levels required when called:    2
  3918 ;; This function calls:
  3919 ;;		Nothing
  3920 ;; This function is called by:
  3921 ;;		_main
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924  03F3                     _pwm_start:	
  3925                           
  3926                           ; Regs used in _pwm_start: [wreg+status,2+status,0]
  3927                           ;pwm_start@ucPulseWidth stored from wreg
  3928  03F3  00A4               	movwf	pwm_start@ucPulseWidth
  3929                           
  3930                           ;main.c: 247: unsigned char ucGetLowestTwoValue = 0,ucGeHighestSixValue = 0;
  3931  03F4  01A1               	clrf	pwm_start@ucGetLowestTwoValue
  3932  03F5  01A2               	clrf	pwm_start@ucGeHighestSixValue
  3933                           
  3934                           ;main.c: 249: unsigned char ucCCP1CON_Value = 0;
  3935  03F6  01A0               	clrf	pwm_start@ucCCP1CON_Value
  3936                           
  3937                           ;main.c: 255: ucConvertRealPulseWidth = ucPulseWidth << 1;
  3938  03F7  1003               	clrc
  3939  03F8  0D24               	rlf	pwm_start@ucPulseWidth,w
  3940  03F9  00A3               	movwf	pwm_start@ucConvertRealPulseWidth
  3941                           
  3942                           ;main.c: 261: ucGetLowestTwoValue = ucConvertRealPulseWidth & 0x03;
  3943  03FA  00A1               	movwf	pwm_start@ucGetLowestTwoValue
  3944  03FB  3003               	movlw	3
  3945  03FC  05A1               	andwf	pwm_start@ucGetLowestTwoValue,f
  3946                           
  3947                           ;main.c: 267: ucCCP1CON_Value = ucGetLowestTwoValue << 4;
  3948  03FD  0E21               	swapf	pwm_start@ucGetLowestTwoValue,w
  3949  03FE  39F0               	andlw	240
  3950  03FF  00A0               	movwf	pwm_start@ucCCP1CON_Value
  3951                           
  3952                           ;main.c: 281: if( ucPulseWidth <= 30)
  3953  0400  301F               	movlw	31
  3954  0401  0224               	subwf	pwm_start@ucPulseWidth,w
  3955  0402  1803               	skipnc
  3956  0403  2C06               	goto	l3323
  3957                           
  3958                           ;main.c: 282: ucGeHighestSixValue = 0x19;
  3959  0404  3019               	movlw	25
  3960  0405  2C11               	goto	L13
  3961  0406                     l3323:	
  3962                           
  3963                           ;main.c: 283: else if((ucPulseWidth > 30) &&(ucPulseWidth < 90))
  3964  0406  301F               	movlw	31
  3965  0407  0224               	subwf	pwm_start@ucPulseWidth,w
  3966  0408  1C03               	skipc
  3967  0409  2C10               	goto	l3329
  3968  040A  305A               	movlw	90
  3969  040B  0224               	subwf	pwm_start@ucPulseWidth,w
  3970  040C  1803               	skipnc
  3971  040D  2C10               	goto	l3329
  3972                           
  3973                           ;main.c: 284: ucGeHighestSixValue = 0x25;
  3974  040E  3025               	movlw	37
  3975  040F  2C11               	goto	L13
  3976  0410                     l3329:	
  3977                           
  3978                           ;main.c: 285: else
  3979                           ;main.c: 286: ucGeHighestSixValue = 0x3F;;
  3980  0410  303F               	movlw	63
  3981  0411                     L13:	
  3982  0411  00A2               	movwf	pwm_start@ucGeHighestSixValue
  3983                           
  3984                           ;main.c: 289: T2CON=0x04;
  3985  0412  3004               	movlw	4
  3986  0413  0092               	movwf	18	;volatile
  3987                           
  3988                           ;main.c: 290: PR2 = 49;
  3989  0414  3031               	movlw	49
  3990  0415  1683               	bsf	3,5	;RP0=1, select bank1
  3991  0416  0092               	movwf	18	;volatile
  3992                           
  3993                           ;main.c: 291: CCPR1L = ucGeHighestSixValue;
  3994  0417  1283               	bcf	3,5	;RP0=0, select bank0
  3995  0418  0822               	movf	pwm_start@ucGeHighestSixValue,w
  3996  0419  0095               	movwf	21	;volatile
  3997                           
  3998                           ;main.c: 292: CCP1CON=0x00;
  3999  041A  0197               	clrf	23	;volatile
  4000                           
  4001                           ;main.c: 293: CCP1CON = CCP1CON | ucCCP1CON_Value;
  4002  041B  0820               	movf	pwm_start@ucCCP1CON_Value,w
  4003  041C  0497               	iorwf	23,f	;volatile
  4004                           
  4005                           ;main.c: 295: TRISB2=0;
  4006  041D  1683               	bsf	3,5	;RP0=1, select bank1
  4007  041E  1106               	bcf	6,2
  4008                           
  4009                           ;main.c: 296: PBOD2 = 0;
  4010  041F  1703               	bsf	3,6	;RP1=1, select bank3
  4011  0420  1108               	bcf	8,2
  4012  0421  0008               	return
  4013  0422                     __end_of_pwm_start:	
  4014                           
  4015                           	psect	text871
  4016  04E9                     __ptext871:	
  4017 ;; =============== function _initPB3 ends ============
  4018                           
  4019                           
  4020 ;; *************** function _clearThreeHoursTimer *****************
  4021 ;; Defined at:
  4022 ;;		line 384 in file "D:\develop\190625\AK7030-OTP\common.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;		None
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;		None
  4027 ;; Return value:  Size  Location     Type
  4028 ;;		None               void
  4029 ;; Registers used:
  4030 ;;		status,2
  4031 ;; Tracked objects:
  4032 ;;		On entry : 60/0
  4033 ;;		On exit  : 60/0
  4034 ;;		Unchanged: FFF9F/0
  4035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4036 ;;      Params:         0       0       0       0       0
  4037 ;;      Locals:         0       0       0       0       0
  4038 ;;      Temps:          0       0       0       0       0
  4039 ;;      Totals:         0       0       0       0       0
  4040 ;;Total ram usage:        0 bytes
  4041 ;; Hardware stack levels used:    1
  4042 ;; Hardware stack levels required when called:    2
  4043 ;; This function calls:
  4044 ;;		Nothing
  4045 ;; This function is called by:
  4046 ;;		_main
  4047 ;; This function uses a non-reentrant model
  4048 ;;
  4049  04E9                     _clearThreeHoursTimer:	
  4050                           
  4051                           ;common.c: 385: uiSmallTimer = 0;
  4052                           
  4053                           ; Regs used in _clearThreeHoursTimer: [status,2]
  4054  04E9  01DA               	clrf	_uiSmallTimer
  4055  04EA  01DB               	clrf	_uiSmallTimer+1
  4056                           
  4057                           ;common.c: 386: bSmallTimerStartFlag = 0;
  4058  04EB  01E4               	clrf	_bSmallTimerStartFlag
  4059  04EC  0008               	return
  4060  04ED                     __end_of_clearThreeHoursTimer:	
  4061                           
  4062                           	psect	text872
  4063  04ED                     __ptext872:	
  4064 ;; =============== function _clearThreeHoursTimer ends ============
  4065                           
  4066                           
  4067 ;; *************** function _clearTwelveHoursTimer *****************
  4068 ;; Defined at:
  4069 ;;		line 377 in file "D:\develop\190625\AK7030-OTP\common.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;		None
  4072 ;; Auto vars:     Size  Location     Type
  4073 ;;		None
  4074 ;; Return value:  Size  Location     Type
  4075 ;;		None               void
  4076 ;; Registers used:
  4077 ;;		status,2
  4078 ;; Tracked objects:
  4079 ;;		On entry : 60/0
  4080 ;;		On exit  : 60/0
  4081 ;;		Unchanged: FFF9F/0
  4082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4083 ;;      Params:         0       0       0       0       0
  4084 ;;      Locals:         0       0       0       0       0
  4085 ;;      Temps:          0       0       0       0       0
  4086 ;;      Totals:         0       0       0       0       0
  4087 ;;Total ram usage:        0 bytes
  4088 ;; Hardware stack levels used:    1
  4089 ;; Hardware stack levels required when called:    2
  4090 ;; This function calls:
  4091 ;;		Nothing
  4092 ;; This function is called by:
  4093 ;;		_main
  4094 ;; This function uses a non-reentrant model
  4095 ;;
  4096  04ED                     _clearTwelveHoursTimer:	
  4097                           
  4098                           ;common.c: 378: uiBigTimer = 0;
  4099                           
  4100                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  4101  04ED  01D6               	clrf	_uiBigTimer
  4102  04EE  01D7               	clrf	_uiBigTimer+1
  4103                           
  4104                           ;common.c: 379: bBigTimerStartFlag = 0;
  4105  04EF  01E2               	clrf	_bBigTimerStartFlag
  4106  04F0  0008               	return
  4107  04F1                     __end_of_clearTwelveHoursTimer:	
  4108                           
  4109                           	psect	text873
  4110  0296                     __ptext873:	
  4111 ;; =============== function _clearTwelveHoursTimer ends ============
  4112                           
  4113                           
  4114 ;; *************** function _ISR *****************
  4115 ;; Defined at:
  4116 ;;		line 534 in file "D:\develop\190625\AK7030-OTP\common.c"
  4117 ;; Parameters:    Size  Location     Type
  4118 ;;		None
  4119 ;; Auto vars:     Size  Location     Type
  4120 ;;		None
  4121 ;; Return value:  Size  Location     Type
  4122 ;;		None               void
  4123 ;; Registers used:
  4124 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4125 ;; Tracked objects:
  4126 ;;		On entry : 0/0
  4127 ;;		On exit  : 60/0
  4128 ;;		Unchanged: FFE00/0
  4129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4130 ;;      Params:         0       0       0       0       0
  4131 ;;      Locals:         0       0       0       0       0
  4132 ;;      Temps:          4       0       0       0       0
  4133 ;;      Totals:         4       0       0       0       0
  4134 ;;Total ram usage:        4 bytes
  4135 ;; Hardware stack levels used:    1
  4136 ;; Hardware stack levels required when called:    1
  4137 ;; This function calls:
  4138 ;;		i1_setAD_ConvertFlag
  4139 ;;		_adc_get
  4140 ;;		_vPutSampleDataIntoTable
  4141 ;; This function is called by:
  4142 ;;		Interrupt level 1
  4143 ;; This function uses a non-reentrant model
  4144 ;;
  4145  0296                     _ISR:	
  4146                           
  4147                           ;common.c: 535: static unsigned char ucTimer1sCnt = 0;
  4148                           ;common.c: 537: if(TMR1IF == 1)
  4149  0296  1C0C               	btfss	12,0
  4150  0297  2AD4               	goto	i1l3621
  4151  0298  3064               	movlw	100
  4152                           
  4153                           ;common.c: 538: {
  4154                           ;common.c: 539: TMR1IF = 0 ;
  4155  0299  100C               	bcf	12,0
  4156                           
  4157                           ;common.c: 540: timer.timer10msStopWatch++;
  4158  029A  0AE7               	incf	_timer,f
  4159                           
  4160                           ;common.c: 541: ucTimer1sCnt++;
  4161  029B  0AE0               	incf	ISR@ucTimer1sCnt,f
  4162                           
  4163                           ;common.c: 543: if(ucTimer1sCnt >= 100)
  4164  029C  0260               	subwf	ISR@ucTimer1sCnt,w
  4165  029D  1C03               	skipc
  4166  029E  2AD4               	goto	i1l3621
  4167                           
  4168                           ;common.c: 544: {
  4169                           ;common.c: 545: ucTimer1sCnt = 0;
  4170  029F  01E0               	clrf	ISR@ucTimer1sCnt
  4171                           
  4172                           ;common.c: 546: if(uiBigTimer > 0)
  4173  02A0  0857               	movf	_uiBigTimer+1,w
  4174  02A1  0456               	iorwf	_uiBigTimer,w
  4175  02A2  1903               	skipnz
  4176  02A3  2AAA               	goto	i1l1638
  4177                           
  4178                           ;common.c: 547: uiBigTimer--;
  4179  02A4  3001               	movlw	1
  4180  02A5  02D6               	subwf	_uiBigTimer,f
  4181  02A6  3000               	movlw	0
  4182  02A7  1C03               	skipc
  4183  02A8  03D7               	decf	_uiBigTimer+1,f
  4184  02A9  02D7               	subwf	_uiBigTimer+1,f
  4185  02AA                     i1l1638:	
  4186                           
  4187                           ;common.c: 549: if(uiSmallTimer)
  4188  02AA  085B               	movf	_uiSmallTimer+1,w
  4189  02AB  045A               	iorwf	_uiSmallTimer,w
  4190  02AC  1903               	skipnz
  4191  02AD  2AB4               	goto	i1l1639
  4192                           
  4193                           ;common.c: 550: uiSmallTimer--;
  4194  02AE  3001               	movlw	1
  4195  02AF  02DA               	subwf	_uiSmallTimer,f
  4196  02B0  3000               	movlw	0
  4197  02B1  1C03               	skipc
  4198  02B2  03DB               	decf	_uiSmallTimer+1,f
  4199  02B3  02DB               	subwf	_uiSmallTimer+1,f
  4200  02B4                     i1l1639:	
  4201                           
  4202                           ;common.c: 552: if(uiTwentySecondsTimer)
  4203  02B4  1683               	bsf	3,5	;RP0=1, select bank1
  4204  02B5  0821               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  4205  02B6  0420               	iorwf	_uiTwentySecondsTimer^(0+128),w
  4206  02B7  1903               	skipnz
  4207  02B8  2ABF               	goto	i1l1640
  4208                           
  4209                           ;common.c: 553: uiTwentySecondsTimer--;
  4210  02B9  3001               	movlw	1
  4211  02BA  02A0               	subwf	_uiTwentySecondsTimer^(0+128),f
  4212  02BB  3000               	movlw	0
  4213  02BC  1C03               	skipc
  4214  02BD  03A1               	decf	(_uiTwentySecondsTimer+1)^(0+128),f
  4215  02BE  02A1               	subwf	(_uiTwentySecondsTimer+1)^(0+128),f
  4216  02BF                     i1l1640:	
  4217                           
  4218                           ;common.c: 555: if(uiTwentyMinTimer)
  4219  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  4220  02C0  085D               	movf	_uiTwentyMinTimer+1,w
  4221  02C1  045C               	iorwf	_uiTwentyMinTimer,w
  4222  02C2  1903               	skipnz
  4223  02C3  2ACA               	goto	i1l1641
  4224                           
  4225                           ;common.c: 556: uiTwentyMinTimer--;
  4226  02C4  3001               	movlw	1
  4227  02C5  02DC               	subwf	_uiTwentyMinTimer,f
  4228  02C6  3000               	movlw	0
  4229  02C7  1C03               	skipc
  4230  02C8  03DD               	decf	_uiTwentyMinTimer+1,f
  4231  02C9  02DD               	subwf	_uiTwentyMinTimer+1,f
  4232  02CA                     i1l1641:	
  4233                           
  4234                           ;common.c: 558: if( uiOneHourTimer )
  4235  02CA  0859               	movf	_uiOneHourTimer+1,w
  4236  02CB  0458               	iorwf	_uiOneHourTimer,w
  4237  02CC  1903               	skipnz
  4238  02CD  2AD4               	goto	i1l3621
  4239                           
  4240                           ;common.c: 559: uiOneHourTimer--;
  4241  02CE  3001               	movlw	1
  4242  02CF  02D8               	subwf	_uiOneHourTimer,f
  4243  02D0  3000               	movlw	0
  4244  02D1  1C03               	skipc
  4245  02D2  03D9               	decf	_uiOneHourTimer+1,f
  4246  02D3  02D9               	subwf	_uiOneHourTimer+1,f
  4247  02D4                     i1l3621:	
  4248                           
  4249                           ;common.c: 560: }
  4250                           ;common.c: 561: }
  4251                           ;common.c: 563: if(ADIF)
  4252  02D4  1D0D               	btfss	13,2
  4253  02D5  2AEF               	goto	i1l1646
  4254  02D6  3001               	movlw	1
  4255                           
  4256                           ;common.c: 564: {
  4257                           ;common.c: 566: ADIF=0;
  4258  02D7  110D               	bcf	13,2
  4259                           
  4260                           ;common.c: 567: setAD_ConvertFlag(1);
  4261  02D8  2366  118A         	fcall	i1_setAD_ConvertFlag
  4262                           
  4263                           ;common.c: 569: if(sampleChannelSelect == 12)
  4264  02DA  086F               	movf	_sampleChannelSelect,w
  4265  02DB  3A0C               	xorlw	12
  4266  02DC  1D03               	skipz
  4267  02DD  2AE6               	goto	i1l3631
  4268                           
  4269                           ;common.c: 570: {
  4270                           ;common.c: 573: vPutSampleDataIntoTable(adc_get(),12);
  4271  02DE  22FC  118A         	fcall	_adc_get
  4272  02E0  0871               	movf	?_adc_get+1,w
  4273  02E1  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4274  02E2  0870               	movf	?_adc_get,w
  4275  02E3  00F4               	movwf	?_vPutSampleDataIntoTable
  4276  02E4  300C               	movlw	12
  4277  02E5  2AED               	goto	L14
  4278  02E6                     i1l3631:	
  4279                           ;common.c: 577: }
  4280                           
  4281                           
  4282                           ;common.c: 578: else
  4283                           ;common.c: 579: {
  4284                           ;common.c: 583: vPutSampleDataIntoTable(adc_get(),13);
  4285  02E6  22FC  118A         	fcall	_adc_get
  4286  02E8  0871               	movf	?_adc_get+1,w
  4287  02E9  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4288  02EA  0870               	movf	?_adc_get,w
  4289  02EB  00F4               	movwf	?_vPutSampleDataIntoTable
  4290  02EC  300D               	movlw	13
  4291  02ED                     L14:	
  4292  02ED  00F6               	movwf	?_vPutSampleDataIntoTable+2
  4293  02EE  2307               	fcall	_vPutSampleDataIntoTable
  4294  02EF                     i1l1646:	
  4295  02EF  087C               	movf	??_ISR+3,w
  4296  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  4297  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  4298  02F2  00FF               	movwf	127
  4299  02F3  087B               	movf	??_ISR+2,w
  4300  02F4  008A               	movwf	10
  4301  02F5  087A               	movf	??_ISR+1,w
  4302  02F6  0084               	movwf	4
  4303  02F7  0E79               	swapf	??_ISR^(0+-128),w
  4304  02F8  0083               	movwf	3
  4305  02F9  0EFE               	swapf	126,f
  4306  02FA  0E7E               	swapf	126,w
  4307  02FB  0009               	retfie
  4308  02FC                     __end_of_ISR:	
  4309  02FC                     __ptext875:	
  4310 ;; =============== function i1_setAD_ConvertFlag ends ============
  4311                           
  4312                           
  4313 ;; *************** function _adc_get *****************
  4314 ;; Defined at:
  4315 ;;		line 105 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4316 ;; Parameters:    Size  Location     Type
  4317 ;;		None
  4318 ;; Auto vars:     Size  Location     Type
  4319 ;;  val             2    2[COMMON] unsigned int 
  4320 ;; Return value:  Size  Location     Type
  4321 ;;                  2    0[COMMON] unsigned int 
  4322 ;; Registers used:
  4323 ;;		wreg
  4324 ;; Tracked objects:
  4325 ;;		On entry : 60/0
  4326 ;;		On exit  : 60/20
  4327 ;;		Unchanged: FFF9F/0
  4328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4329 ;;      Params:         2       0       0       0       0
  4330 ;;      Locals:         2       0       0       0       0
  4331 ;;      Temps:          0       0       0       0       0
  4332 ;;      Totals:         4       0       0       0       0
  4333 ;;Total ram usage:        4 bytes
  4334 ;; Hardware stack levels used:    1
  4335 ;; This function calls:
  4336 ;;		Nothing
  4337 ;; This function is called by:
  4338 ;;		_ISR
  4339 ;; This function uses a non-reentrant model
  4340 ;;
  4341  02FC                     _adc_get:	
  4342                           
  4343                           ;periph.c: 106: unsigned int val;
  4344                           ;periph.c: 107: val = (ADRESH<<8) | ADRESL;
  4345                           
  4346                           ; Regs used in _adc_get: [wreg]
  4347  02FC  081E               	movf	30,w	;volatile
  4348  02FD  00F3               	movwf	adc_get@val+1
  4349  02FE  01F2               	clrf	adc_get@val
  4350  02FF  1683               	bsf	3,5	;RP0=1, select bank1
  4351  0300  081E               	movf	30,w	;volatile
  4352  0301  04F2               	iorwf	adc_get@val,f
  4353                           
  4354                           ;periph.c: 108: return val;
  4355  0302  0873               	movf	adc_get@val+1,w
  4356  0303  00F1               	movwf	?_adc_get+1
  4357  0304  0872               	movf	adc_get@val,w
  4358  0305  00F0               	movwf	?_adc_get
  4359  0306  0008               	return
  4360  0307                     __end_of_adc_get:	
  4361  0307                     __ptext876:	
  4362 ;; =============== function _adc_get ends ============
  4363                           
  4364                           
  4365 ;; *************** function _vPutSampleDataIntoTable *****************
  4366 ;; Defined at:
  4367 ;;		line 106 in file "D:\develop\190625\AK7030-OTP\common.c"
  4368 ;; Parameters:    Size  Location     Type
  4369 ;;  uiSampleData    2    4[COMMON] unsigned int 
  4370 ;;  channel         1    6[COMMON] unsigned char 
  4371 ;; Auto vars:     Size  Location     Type
  4372 ;;  i               2    7[COMMON] int 
  4373 ;; Return value:  Size  Location     Type
  4374 ;;		None               void
  4375 ;; Registers used:
  4376 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4377 ;; Tracked objects:
  4378 ;;		On entry : 60/20
  4379 ;;		On exit  : 0/0
  4380 ;;		Unchanged: FFE00/0
  4381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4382 ;;      Params:         3       0       0       0       0
  4383 ;;      Locals:         2       0       0       0       0
  4384 ;;      Temps:          0       0       0       0       0
  4385 ;;      Totals:         5       0       0       0       0
  4386 ;;Total ram usage:        5 bytes
  4387 ;; Hardware stack levels used:    1
  4388 ;; This function calls:
  4389 ;;		Nothing
  4390 ;; This function is called by:
  4391 ;;		_ISR
  4392 ;; This function uses a non-reentrant model
  4393 ;;
  4394  0307                     _vPutSampleDataIntoTable:	
  4395                           
  4396                           ;common.c: 108: static unsigned char ucChannelFirstLength = 0;
  4397                           ;common.c: 110: static unsigned char ucChannelFourthLength = 0;
  4398                           ;common.c: 112: static unsigned char ucChannelFourteenthLength = 0;
  4399                           ;common.c: 114: if(channel == 12)
  4400                           
  4401                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1]
  4402  0307  0876               	movf	vPutSampleDataIntoTable@channel,w
  4403  0308  3A0C               	xorlw	12
  4404  0309  1D03               	skipz
  4405  030A  2B1B               	goto	i1l3543
  4406                           
  4407                           ;common.c: 115: {
  4408                           ;common.c: 116: if(ucChannelFirstLength < 12)
  4409  030B  300C               	movlw	12
  4410  030C  027D               	subwf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4411  030D  1803               	skipnc
  4412  030E  2B15               	goto	i1l3539
  4413                           
  4414                           ;common.c: 117: {
  4415                           ;common.c: 118: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  4416  030F  1003               	clrc
  4417  0310  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4418  0311  3EA6               	addlw	_uiSampleChannelFirst& (0+255)
  4419  0312  2369               	fcall	PL2	;call to abstracted procedure
  4420                           
  4421                           ;common.c: 120: ucChannelFirstLength++;
  4422  0313  0AFD               	incf	vPutSampleDataIntoTable@ucChannelFirstLength,f
  4423                           
  4424                           ;common.c: 121: }
  4425  0314  0008               	return
  4426  0315                     i1l3539:	
  4427                           
  4428                           ;common.c: 122: else
  4429                           ;common.c: 123: {
  4430                           ;common.c: 124: ucChannelFirstLength = 0;
  4431  0315  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  4432                           
  4433                           ;common.c: 126: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  4434  0316  1003               	clrc
  4435  0317  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4436  0318  3EA6               	addlw	_uiSampleChannelFirst& (0+255)
  4437  0319  2369               	fcall	PL2	;call to abstracted procedure
  4438  031A  0008               	return
  4439  031B                     i1l3543:	
  4440                           
  4441                           ;common.c: 129: else if(channel == 13)
  4442  031B  0876               	movf	vPutSampleDataIntoTable@channel,w
  4443  031C  3A0D               	xorlw	13
  4444  031D  1D03               	skipz
  4445  031E  2B30               	goto	i1l3555
  4446                           
  4447                           ;common.c: 130: {
  4448                           ;common.c: 131: if(ucChannelFourthLength < 12)
  4449  031F  300C               	movlw	12
  4450  0320  1283               	bcf	3,5	;RP0=0, select bank0
  4451  0321  026E               	subwf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4452  0322  1803               	skipnc
  4453  0323  2B2A               	goto	i1l3551
  4454                           
  4455                           ;common.c: 132: {
  4456                           ;common.c: 133: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  4457  0324  1003               	clrc
  4458  0325  0D6E               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4459  0326  3ED6               	addlw	_uiSampleChannelFourth& (0+255)
  4460  0327  2369               	fcall	PL2	;call to abstracted procedure
  4461                           
  4462                           ;common.c: 135: ucChannelFourthLength++;
  4463  0328  0AEE               	incf	vPutSampleDataIntoTable@ucChannelFourthLength,f
  4464                           
  4465                           ;common.c: 136: }
  4466  0329  0008               	return
  4467  032A                     i1l3551:	
  4468                           
  4469                           ;common.c: 137: else
  4470                           ;common.c: 138: {
  4471                           ;common.c: 139: ucChannelFourthLength = 0;
  4472  032A  01EE               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  4473                           
  4474                           ;common.c: 141: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  4475  032B  1003               	clrc
  4476  032C  0D6E               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4477  032D  3ED6               	addlw	_uiSampleChannelFourth& (0+255)
  4478  032E  2369               	fcall	PL2	;call to abstracted procedure
  4479  032F  0008               	return
  4480  0330                     i1l3555:	
  4481                           
  4482                           ;common.c: 144: else if(channel == 14)
  4483  0330  0876               	movf	vPutSampleDataIntoTable@channel,w
  4484  0331  3A0E               	xorlw	14
  4485  0332  1D03               	skipz
  4486  0333  2B45               	goto	i1l3567
  4487                           
  4488                           ;common.c: 145: {
  4489                           ;common.c: 146: if(ucChannelFourteenthLength < 12)
  4490  0334  300C               	movlw	12
  4491  0335  1283               	bcf	3,5	;RP0=0, select bank0
  4492  0336  026D               	subwf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4493  0337  1803               	skipnc
  4494  0338  2B3F               	goto	i1l3563
  4495                           
  4496                           ;common.c: 147: {
  4497                           ;common.c: 148: uiSampleChannelFourteenth[ucChannelFourteenthLength] = uiSampleData;
  4498  0339  1003               	clrc
  4499  033A  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4500  033B  3EBE               	addlw	_uiSampleChannelFourteenth& (0+255)
  4501  033C  2369               	fcall	PL2	;call to abstracted procedure
  4502                           
  4503                           ;common.c: 150: ucChannelFourteenthLength++;
  4504  033D  0AED               	incf	vPutSampleDataIntoTable@ucChannelFourteenthLength,f
  4505                           
  4506                           ;common.c: 151: }
  4507  033E  0008               	return
  4508  033F                     i1l3563:	
  4509                           
  4510                           ;common.c: 152: else
  4511                           ;common.c: 153: {
  4512                           ;common.c: 154: ucChannelFourteenthLength = 0;
  4513  033F  01ED               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4514                           
  4515                           ;common.c: 156: uiSampleChannelFourth[ucChannelFourteenthLength] = uiSampleData;
  4516  0340  1003               	clrc
  4517  0341  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4518  0342  3ED6               	addlw	_uiSampleChannelFourth& (0+255)
  4519  0343  2369               	fcall	PL2	;call to abstracted procedure
  4520  0344  0008               	return
  4521  0345                     i1l3567:	
  4522                           
  4523                           ;common.c: 159: else
  4524                           ;common.c: 160: {
  4525                           ;common.c: 161: ucChannelFirstLength = 0;
  4526  0345  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  4527                           
  4528                           ;common.c: 163: ucChannelFourthLength = 0;
  4529  0346  1283               	bcf	3,5	;RP0=0, select bank0
  4530  0347  01EE               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  4531                           
  4532                           ;common.c: 165: ucChannelFourteenthLength = 0;
  4533  0348  01ED               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4534                           
  4535                           ;common.c: 167: for(int i = 0;i < 12; i++)
  4536  0349  01F7               	clrf	vPutSampleDataIntoTable@i
  4537  034A  01F8               	clrf	vPutSampleDataIntoTable@i+1
  4538  034B                     i1l3573:	
  4539                           
  4540                           ;common.c: 168: {
  4541                           ;common.c: 169: uiSampleChannelFirst[i] = 0;
  4542  034B  1003               	clrc
  4543  034C  0D77               	rlf	vPutSampleDataIntoTable@i,w
  4544  034D  3EA6               	addlw	_uiSampleChannelFirst& (0+255)
  4545  034E  0084               	movwf	4
  4546  034F  1383               	bcf	3,7	;select IRP bank1
  4547  0350  0180               	clrf	0
  4548                           
  4549                           ;common.c: 171: uiSampleChannelFourth[i] = 0;
  4550  0351  2371  118A         	fcall	PL5	;call to abstracted procedure
  4551                           
  4552                           ;common.c: 173: uiSampleChannelFourth[i] = 0;
  4553  0353  2371  118A         	fcall	PL5	;call to abstracted procedure
  4554  0355  0A84               	incf	4,f
  4555  0356  0180               	clrf	0
  4556  0357  0AF7               	incf	vPutSampleDataIntoTable@i,f
  4557  0358  1903               	skipnz
  4558  0359  0AF8               	incf	vPutSampleDataIntoTable@i+1,f
  4559  035A  0878               	movf	vPutSampleDataIntoTable@i+1,w
  4560  035B  3A80               	xorlw	128
  4561  035C  00FF               	movwf	127
  4562  035D  3080               	movlw	128
  4563  035E  027F               	subwf	127,w
  4564  035F  1D03               	skipz
  4565  0360  2B63               	goto	u117_25
  4566  0361  300C               	movlw	12
  4567  0362  0277               	subwf	vPutSampleDataIntoTable@i,w
  4568  0363                     u117_25:	
  4569  0363  1803               	btfsc	3,0
  4570  0364  0008               	return
  4571  0365  2B4B               	goto	i1l3573
  4572  0366                     __end_of_vPutSampleDataIntoTable:	
  4573  0366                     __ptext874:	
  4574 ;; =============== function _ISR ends ============
  4575                           
  4576                           
  4577 ;; *************** function i1_setAD_ConvertFlag *****************
  4578 ;; Defined at:
  4579 ;;		line 215 in file "D:\develop\190625\AK7030-OTP\common.c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;  setAD_Conver    1    wreg     unsigned char 
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  4584 ;; Return value:  Size  Location     Type
  4585 ;;		None               void
  4586 ;; Registers used:
  4587 ;;		wreg
  4588 ;; Tracked objects:
  4589 ;;		On entry : 60/0
  4590 ;;		On exit  : 60/0
  4591 ;;		Unchanged: FFF9F/0
  4592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4593 ;;      Params:         0       0       0       0       0
  4594 ;;      Locals:         1       0       0       0       0
  4595 ;;      Temps:          0       0       0       0       0
  4596 ;;      Totals:         1       0       0       0       0
  4597 ;;Total ram usage:        1 bytes
  4598 ;; Hardware stack levels used:    1
  4599 ;; This function calls:
  4600 ;;		Nothing
  4601 ;; This function is called by:
  4602 ;;		_ISR
  4603 ;; This function uses a non-reentrant model
  4604 ;;
  4605  0366                     i1_setAD_ConvertFlag:	
  4606                           
  4607                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  4608                           ;i1setAD_ConvertFlag@flag stored from wreg
  4609  0366  00F0               	movwf	i1setAD_ConvertFlag@flag
  4610                           
  4611                           ;common.c: 216: adc_convert_flag = flag;
  4612  0367  00E1               	movwf	_adc_convert_flag
  4613  0368  0008               	return
  4614  0369                     __end_ofi1_setAD_ConvertFlag:	
  4615  0369                     PL2:	
  4616  0369  0084               	movwf	4
  4617  036A  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  4618  036B  1383               	bcf	3,7	;select IRP bank1
  4619  036C  0080               	movwf	0
  4620  036D  0A84               	incf	4,f
  4621  036E  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  4622  036F  0080               	movwf	0
  4623  0370  0008               	return
  4624  0371                     PL5:	
  4625  0371  0A84               	incf	4,f
  4626  0372  0180               	clrf	0
  4627  0373  1003               	clrc
  4628  0374  0D77               	rlf	vPutSampleDataIntoTable@i,w
  4629  0375  3ED6               	addlw	_uiSampleChannelFourth& (0+255)
  4630  0376  0084               	movwf	4
  4631  0377  0180               	clrf	0
  4632  0378  0008               	return
  4633                           
  4634                           	psect	intentry
  4635  0004                     __pintentry:	
  4636                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4637                           
  4638  0004                     interrupt_function:	
  4639  007E                     saved_w	set	btemp
  4640  0004  00FE               	movwf	btemp
  4641  0005  0E03               	swapf	3,w
  4642  0006  00F9               	movwf	??_ISR
  4643  0007  0804               	movf	4,w
  4644  0008  00FA               	movwf	??_ISR+1
  4645  0009  080A               	movf	10,w
  4646  000A  00FB               	movwf	??_ISR+2
  4647  000B  1283               	bcf	3,5	;RP0=0, select bank0
  4648  000C  1303               	bcf	3,6	;RP1=0, select bank0
  4649  000D  087F               	movf	btemp+1,w
  4650  000E  00FC               	movwf	??_ISR+3
  4651  000F  118A  2A96         	ljmp	_ISR
  4652                           
  4653                           	psect	text877
  4654  0000                     __ptext877:	
  4655 ;; =============== function _vPutSampleDataIntoTable ends ============
  4656                           
  4657  007E                     btemp	set	126	;btemp
  4658  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri Nov 01 11:40:45 2019

                                  ??_clock_config 0020                               ?_startOneHoursTimer 0020  
                                              _GO 00F9                                                fsr 0004  
                        ?_timer1_interrupt_config 0070                                               l700 03F0  
                                             l710 0000                                               l705 0442  
                                             l731 0000                                               l717 0000  
                                             l725 0000                                               l734 04F6  
                                             l680 03D5                                               l728 0000  
                                             l744 0000                                               l690 03E5  
                                             l756 0061                                               l685 0432  
                                             l695 043A                                               _GIE 005F  
                                             _PB2 0032                                               _PB3 0033  
                                             _PB4 0034                                               _PB5 0035  
                                             _PR2 0092                                               _ISR 0296  
                                             fsr0 0004                                               indf 0000  
                          ??_startThreeHoursTimer 0022                                              ?_ISR 0070  
                            ??_startOneHoursTimer 0022                                __size_of_AD_Sample 0014  
                                            l1523 04D9                                              l1532 0000  
                                            l3301 0000                                              l1541 0000  
                                            l1526 0000                                              l3303 0000  
                                            l3311 0000                                              l1631 0000  
                                            l1535 0000                                              l1544 0000  
                                            l3305 0000                                              l3313 0000  
                                            l1529 0000                                              l1570 0000  
                                            l1538 0000                                              l3331 0000  
                                            l3323 0406                                              l3315 0000  
                                            l3307 0000                                              l1573 0000  
                                            l3333 0000                                              l3317 0000  
                                            l3309 0000                                              l3341 0000  
                                            l2293 0000                                              l3421 0000  
                                            l3501 0216                                              l1582 0000  
                                            l3335 0000                                              l3319 0000  
                                            l3343 0497                                              l3351 0000  
                                            l3407 0000                                              l3415 0000  
                                            l3423 0000                                              l3511 0259  
                                            l3281 0000                                              l3337 0000  
                                            l3329 0410                                              l3345 0000  
                                            l3353 0000                                              l3361 0000  
                                            l3409 0000                                              l3417 0000  
                                            l3433 0000                                              l3441 0000  
                                            l1497 0000                                              l3521 0000  
                                            l3513 0000                                              l3283 0000  
                                            l3291 0000                                              l3339 0000  
                                            l3347 0000                                              l3355 0000  
                                            l3363 0000                                              l2299 0000  
                                            l3523 0000                                              l3507 0257  
                                            l3277 0000                                              l3285 0000  
                                            l3293 0000                                              l3349 0000  
                                            l3365 0000                                              l3357 0000  
                                            l3445 0000                                              l3509 0217  
                                            l3701 0000                                              l3279 0000  
                                            l3287 0000                                              l3295 0000  
                                            l3359 0000                                              l3367 03BF  
                                            l3375 0000                                              l3391 0000  
                                            l3439 0000                                              l3447 0000  
                                            l3463 0000                                              l3471 0000  
                                            l3527 0000                                              l3711 0000  
                                            l3703 0000                                              l3289 0000  
                                            l3297 0000                                              l3369 0000  
                                            l3377 0000                                              l3457 0000  
                                            l3465 0000                                              l3481 0000  
                                            l3641 0000                                              l3801 0000  
                                            l3721 0043                                              l3713 0035  
                                            l3705 0000                                              l3299 0000  
                                            l3395 0000                                              l3491 0000  
                                            l3643 0000                                              l3803 0000  
                                            l3731 0059                                              l3715 0000  
                                            l3707 0000                                              l3389 0000  
                                            l3397 0000                                              l3469 0000  
                                            l3493 0000                                              l3645 0000  
                                            l3653 0000                                              l3821 00FD  
                                            l3805 00D9                                              l3741 0000  
                                            l3733 005A                                              l3725 0000  
                                            l3717 0000                                              l3709 0000  
                                            l3487 01FA                                              l3583 0000  
                                            l3639 0000                                              l3647 0000  
                                            l3671 0000                                              l3823 00FF  
                                            l3807 0000                                              l3751 0000  
                                            l3743 0000                                              l3727 004D  
                                            l3489 0000                                              l3593 0000  
                                            l3585 0000                                              l3649 0000  
                                            l3657 0000                                              l3665 0000  
                                            l3681 01D2                                              l3673 0000  
                                            l3817 00F7                                              l3761 0089  
                                            l3753 0000                                              l3745 0000  
                                            l3737 0000                                              l3579 0000  
                                            l3691 0000                                              l3683 0000  
                                            l3851 0159                                              l3843 0000  
                                            l3827 0000                                              l3819 0000  
                                            l3771 0000                                              l3755 0000  
                                            l3747 0000                                              l3739 0062  
                                            l3597 03A7                                              l3589 0000  
                                            l3693 0000                                              l3685 0000  
                                            l3677 01C9                                              l3669 0000  
                                            l3853 015D                                              l3837 012B  
                                            l3829 0000                                              l3773 009D  
                                            l3765 0095                                              l3757 0081  
                                            l3749 0000                                              l3687 0000  
                                            l3863 0187                                              l3855 0000  
                                            l3847 014F                                              l3839 0130  
                                            l3791 0000                                              l3775 0000  
                                            l3767 0096                                              l3759 0087  
                                            l3689 0000                                              l3865 0188  
                                            l3857 0177                                              l3849 0152  
                                            l3793 00C2                                              l3785 00BA  
                                            l3777 00A8                                              l3859 0000  
                                            l3795 0000                                              l3787 00BB  
                                            l3875 0191                                              l3699 0000  
                                            l3869 018F                                              l3797 0000  
                                            l3799 0000                                              _ADIE 046A  
                                            _ADIF 006A                                              _ADON 00F8  
                   startTwelveHourTimer@uiSetTime 0020                                              u1065 0211  
                                            u1075 023A                                              u1085 0224  
                    pwm_start@ucGetLowestTwoValue 0021                                              _PEIE 005E  
                                            _main 0013                                              btemp 007E  
                                            start 0011                           ?_getAdOriginalCh12Value 0047  
                         ?_getAdOriginalCh13Value 0047                        ??_isFinishedTwentyMinTimer 0020  
                                           ??_ISR 0079                                 ??_setPinInitVaule 0021  
                      __end_of_isPermitSampleTime 04E1                               _sampleChannelSelect 006F  
                                           ?_main 0070                                             _CLKPR 0108  
                                           _T1CON 0010                                             _T2CON 0012  
                                 __end_of_adc_get 0307                                             _PBOD2 0C42  
                                           _TMR1H 000F                                             _TMR1L 000E  
                           setAD_ConvertFlag@flag 0020                                 ??_selectAdChannel 0020  
                                 __end_of_initPB3 03D8                                   __end_of_initPB4 03E8  
                                 __end_of_initPB5 03F3                           _vPutSampleDataIntoTable 0307  
                                 __end_of_initPin 03CC                                             _reset 04F6  
                                           _timer 0067                                   pwm_config@state 0020  
                                           pclath 000A                               main@uiTimerThreeP5s 00A2  
                                           status 0003                    __end_of_getAdOriginalCh12Value 01F2  
                                           wtemp0 007E                    __end_of_getAdOriginalCh13Value 01BA  
                   __size_of_startTwelveHourTimer 000E                              __end_of_clrSampeTime 04F6  
                                    __end_of_main 01B3                            __size_of_adc_test_init 0015  
                               __end_of_AD_Sample 03AA                                            ??_main 0051  
                                   main@ucChValue 0051                                            _ADCON0 001F  
                                          _ADCON1 009F                              __end_of_clock_config 04DC  
                                          _ADRESH 001E                                            _ADRESL 009E  
                                          _CCPR1L 0015                                            ?_reset 0070  
                                          _CLKPCE 0847                                            i1l2302 0000  
                                          i1l1640 02BF                                            i1l1641 02CA  
                                          i1l1538 0000                                            i1l1646 02EF  
                                          i1l1638 02AA                                            i1l1639 02B4  
                                          i1l3531 0000                                            i1l3603 0000  
                                          i1l3541 0000                                            i1l3605 0000  
                                          i1l3621 02D4                                            i1l3551 032A  
                                          i1l3543 031B                                            i1l3631 02E6  
                                          i1l3561 0000                                            i1l3553 0000  
                                          i1l3537 0000                                            i1l3633 0000  
                                          i1l3625 0000                                            i1l3609 0000  
                                          i1l3563 033F                                            i1l3555 0330  
                                          i1l3539 0315                                            i1l3627 0000  
                                          i1l3573 034B                                            i1l3565 0000  
                                          i1l3549 0000                                            i1l3637 0000  
                                          i1l3575 0000                                            i1l3567 0345  
                                          i1l3577 0000                                            i1l3599 0000  
                                          u117_25 0363                                            _TMR1IE 0460  
                                          _TMR1IF 0060                                 _getAD_ConvertFlag 038F  
                               _setAD_ConvertFlag 0393                                            _TRISB0 0430  
                                          _TRISB1 0431                                            _TRISB2 0432  
                                          _TRISB3 0433                                            _TRISB4 0434  
                                          _TRISB5 0435                                ?_getAD_ConvertFlag 0070  
                                          _Filter 01F2                                ?_setAD_ConvertFlag 0070  
                     ??_isFinishedThreeHoursTimer 0020                     __size_of_clearThreeHoursTimer 0004  
                          __size_of_calPulseWidth 0031                                         ??_adc_get 0072  
                             ??_getAD_ConvertFlag 0020                               ??_setAD_ConvertFlag 0020  
                                          _setPB3 042A                                            _setPB4 0434  
                                          _setPB5 043C                       __end_of_clearTwentyMinTimer 04E5  
                                          clrloop 04CD                                  Filter@filter_buf 0026  
                                       ??_initPB3 0020                                         ??_initPB4 0020  
                                       ??_initPB5 0020                                  Filter@filter_sum 0040  
                                       ??_initPin 0021                         ??_vPutSampleDataIntoTable 0077  
                                          saved_w 007E                           ??_clearTwelveHoursTimer 0020  
                pwm_start@ucConvertRealPulseWidth 0023                       ?_process_AD_Converter_Value 0070  
                                   _adc_test_init 03AA                         __end_of_getAD_ConvertFlag 0393  
                       __end_of_setAD_ConvertFlag 0396                                __size_of_adc_start 0003  
                        _initPB2_AsHighResistence 03D8                  __size_of_isFinishedOneHoursTimer 000A  
                __end_of_isFinishedTwentyMinTimer 04C2                                    __pcstackCOMMON 0070  
                                    __pidataBANK0 0000                                 main@uiTimerOneP5s 005E  
                                   __end_of_reset 04E5                                 main@uiTimerTwoP5s 00A4  
                            _uiSampleChannelFirst 00A6                    vPutSampleDataIntoTable@channel 0076  
                       _isFinishedThreeHoursTimer 04A4                             __end_of_timer1_config 04CC  
                  calPulseWidth@ucThreeTimesValue 004B                                    ?_adc_test_init 0020  
                     __end_of_startTwentyMinTimer 048E                                     _calPulseWidth 01BA  
     vPutSampleDataIntoTable@ucChannelFirstLength 007D                                           ??_reset 0020  
                __size_of_timer1_interrupt_config 0003                             __size_of_clrSampeTime 0002  
                                      __pbssBANK0 0056                                        __pbssBANK1 00A0  
                    __size_ofi1_setAD_ConvertFlag 0003                                   _setPinInitVaule 0422  
                                      adc_get@val 0072                                  _uiTwentyMinTimer 005C  
                 __end_of_vPutSampleDataIntoTable 0366                                           ?_Filter 0020  
                                      __pmaintext 0013                                   _selectAdChannel 04E5  
                                      __pintentry 0004                                           _CCP1CON 0017  
                                         ?_setPB3 0070                                           ?_setPB4 0070  
                                         ?_setPB5 0070                             __size_of_clock_config 0008  
                                    _clrSampeTime 04F4                                 __end_of_adc_start 03C2  
                            _uiTwentySecondsTimer 00A0                                _isPermitSampleTime 04DC  
                                  ?_calPulseWidth 0070                                           Filter@i 0046  
                                         Filter@j 0045                                __size_of_pwm_start 002F  
                     __size_of_startOneHoursTimer 000E                     __size_of_startThreeHoursTimer 000E  
                      __size_of_getAD_ConvertFlag 0004                        __size_of_setAD_ConvertFlag 0003  
                                  main@ucTimerP3s 006B                                    main@ucTimerP5s 006C  
                             ?_isPermitSampleTime 0070                                   __size_of_Filter 008E  
                                      _uiBigTimer 0056                                      setPB3@bValue 0020  
                                    setPB4@bValue 0020                                      _clock_config 04D4  
                                    setPB5@bValue 0020                                           _adc_get 02FC  
                                 __size_of_setPB3 000A                                   __size_of_setPB4 0008  
                                 __size_of_setPB5 0008                              ??_isPermitSampleTime 0020  
                    __end_of_startTwelveHourTimer 0480                                     initPB3@bValue 0020  
                                   initPB4@bValue 0020                                         _AD_Sample 0396  
                                         _initPB3 03CC                                           _initPB4 03DD  
                                         _initPB5 03E8                                      __size_of_ISR 0066  
                                   initPB5@bValue 0020                                           _initPin 03C2  
                            _bSmallTimerStartFlag 0064                                   ??_adc_test_init 0021  
               __size_of_isFinishedTwentyMinTimer 000A                         ?_isFinishedTwentyMinTimer 0070  
                         __end_of_setPinInitVaule 042A                              end_of_initialization 0453  
                               Filter@filter_temp 003E                          calPulseWidth@ucHalfValue 004C  
                           pwm_start@ucPulseWidth 0024                           __end_of_selectAdChannel 04E9  
                         _isFinishedOneHoursTimer 049A                                 __end_of_pwm_start 0422  
                                      ?_AD_Sample 0070                      ??_isFinishedTwelveHoursTimer 0020  
                                       Filter@cir 0043                               _bTwentyMinStartFlag 0065  
                                _adc_convert_flag 0061                                   ??_calPulseWidth 0049  
                                      _pwm_config 048E                      __end_of_clearThreeHoursTimer 04ED  
                  __size_of_clearTwelveHoursTimer 0004                           _timer1_interrupt_config 04F1  
                   __end_of_clearTwelveHoursTimer 04F1                        ??_initPB2_AsHighResistence 0020  
              __size_of_isFinishedThreeHoursTimer 000A                                        main@ucStep 006A  
                                  __end_of_Filter 0280                     startTwentyMinTimer@uiSetValue 0020  
             __size_of_isFinishedTwelveHoursTimer 000A                          vPutSampleDataIntoTable@i 0077  
                             i1_setAD_ConvertFlag 0366                                    __end_of_setPB3 0434  
                                  __end_of_setPB4 043C                                    __end_of_setPB5 0444  
                                main@ucPulseWidth 0053                               start_initialization 0444  
                                     __end_of_ISR 02FC                             _uiSampleChannelFourth 00D6  
                        ??_getAdOriginalCh12Value 0049                                  ?_setPinInitVaule 0070  
                        ??_getAdOriginalCh13Value 0049                      __size_of_clearTwentyMinTimer 0004  
                       ??_isFinishedOneHoursTimer 0020                              ?i1_setAD_ConvertFlag 0070  
                            _startTwelveHourTimer 0472                 __end_of_isFinishedThreeHoursTimer 04AE  
                                ?_selectAdChannel 0070                                          ??_Filter 0022  
                                     __pdataBANK0 006F                                          ??_setPB3 0020  
                                        ??_setPB4 0020                                          ??_setPB5 0020  
                        ?_vPutSampleDataIntoTable 0074                                       ??_AD_Sample 0020  
                       ??_timer1_interrupt_config 0020                                       __pbssCOMMON 007D  
                                   __pcstackBANK0 0020                                       ?_pwm_config 0070  
                                       _adc_start 03BF                             ??i1_setAD_ConvertFlag 0070  
                                 main@uiCh13Value 0054                             ?_startTwelveHourTimer 0020  
                       calPulseWidth@ucPulseWidth 004D                      __size_of_startTwentyMinTimer 000E  
                          __size_of_timer1_config 000A                              _clearThreeHoursTimer 04E9  
                    __end_of_startThreeHoursTimer 0472                                         __ptext840 0396  
                                       __ptext841 0393                                         __ptext850 04E1  
                                       __ptext842 038F                                         __ptext834 01BA  
                                       __ptext851 04B8                                         __ptext843 01F2  
                                       __ptext835 01B3                                         __ptext860 04F6  
                                       __ptext852 04F4                                         __ptext844 049A  
                                       __ptext836 0379                                         __ptext861 04E5  
                                       __ptext853 04DC                                         __ptext845 0456  
                                       __ptext837 01EB                                         __ptext870 03CC  
                                       __ptext862 048E                                         __ptext854 0480  
                                       __ptext846 04A4                                         __ptext838 0422  
                                       __ptext871 04E9                                         __ptext863 03F3  
                                       __ptext855 03BF                                         __ptext847 0464  
                                       __ptext839 03C2                                         __ptext872 04ED  
                                       __ptext864 03D8                                         __ptext856 03AA  
                                       __ptext848 04AE                                         __ptext873 0296  
                                       __ptext865 043C                                         __ptext857 04F1  
                                       __ptext849 0472                                         __ptext874 0366  
                                       __ptext866 03E8                                         __ptext858 04C2  
                                       __ptext875 02FC                                         __ptext867 0434  
                                       __ptext859 04D4                                         __ptext876 0307  
                                       __ptext868 03DD                                         __ptext877 0000  
                                       __ptext869 042A                                 main@cTimerP5s_792 0068  
                               main@cTimerP5s_797 0069                                          ?_adc_get 0070  
                 __end_of_isFinishedOneHoursTimer 04A4                __end_of_isFinishedTwelveHoursTimer 04B8  
                      _isFinishedTwelveHoursTimer 04AE                                          ?_initPB3 0070  
                                        ?_initPB4 0070                                          ?_initPB5 0070  
                                 ISR@ucTimer1sCnt 0060                                          ?_initPin 0070  
                      __end_of_startOneHoursTimer 0464                  __end_of_initPB2_AsHighResistence 03DD  
                       _uiSampleChannelFourteenth 00BE                                        ?_adc_start 0070  
                 __size_of_getAdOriginalCh12Value 0007                   __size_of_getAdOriginalCh13Value 0007  
                                  __size_of_reset FFEF                                 interrupt_function 0004  
                         calPulseWidth@ucGapValue 004E                   __end_of_timer1_interrupt_config 04F4  
                           ?_clearThreeHoursTimer 0070                               __size_of_pwm_config 000C  
                            adc_test_init@channel 0022               vPutSampleDataIntoTable@uiSampleData 0074  
                         calPulseWidth@uiGapValue 0049      vPutSampleDataIntoTable@ucChannelFourthLength 006E  
                     __size_of_isPermitSampleTime 0005                                         _pwm_start 03F3  
                                    _uiSmallTimer 005A                             __end_of_adc_test_init 03BF  
                                   _timer1_config 04C2                      ??_process_AD_Converter_Value 0023  
                          ??_startTwelveHourTimer 0022                          pwm_start@ucCCP1CON_Value 0020  
                          _getAdOriginalCh12Value 01EB                            _getAdOriginalCh13Value 01B3  
                             _clearTwentyMinTimer 04E1                       startOneHoursTimer@uiSetTime 0020  
                                __size_of_adc_get 000B               __size_of_process_AD_Converter_Value 0016  
                                      ?_pwm_start 0070                          _isFinishedTwentyMinTimer 04B8  
vPutSampleDataIntoTable@ucChannelFourteenthLength 006D                                  __size_of_initPB3 000C  
                                __size_of_initPB4 000B                                  __size_of_initPB5 000B  
                                __size_of_initPin 000A                                    Filter@tmpValue 0042  
                                  ?_timer1_config 0070                             __end_of_calPulseWidth 01EB  
                            ?_clearTwentyMinTimer 0070                                       ??_adc_start 0020  
                            _startThreeHoursTimer 0464                             _clearTwelveHoursTimer 04ED  
                                  _uiOneHourTimer 0058                                     __size_of_main 01A0  
                                        clear_ram 04CC                            ??_clearThreeHoursTimer 0020  
               __size_of_initPB2_AsHighResistence 0005                         ?_initPB2_AsHighResistence 0070  
                          _bOneHourTimerStartFlag 0063                                     ?_clrSampeTime 0070  
                             _startTwentyMinTimer 0480                                      ??_pwm_config 0020  
                                     _sampleTimes 0066                             ??_clearTwentyMinTimer 0020  
                           ?_startThreeHoursTimer 0020                  __size_of_vPutSampleDataIntoTable 005F  
                                        intlevel1 0000                      calPulseWidth@uiChannel2Value 004F  
                            ?_startTwentyMinTimer 0020                          __size_of_setPinInitVaule 0008  
                      ?_isFinishedThreeHoursTimer 0070                                     ?_clock_config 0070  
                              __end_of_pwm_config 049A                          __size_of_selectAdChannel 0004  
                   startThreeHoursTimer@uiSetTime 0020                           i1setAD_ConvertFlag@flag 0070  
                                     ??_pwm_start 0020                                    ??_clrSampeTime 0020  
                     ?_isFinishedTwelveHoursTimer 0070                                _bBigTimerStartFlag 0062  
                                 ??_timer1_config 0020                       __end_ofi1_setAD_ConvertFlag 0369  
              __end_of_process_AD_Converter_Value 038F                        _process_AD_Converter_Value 0379  
                        ?_isFinishedOneHoursTimer 0070                            ?_clearTwelveHoursTimer 0070  
                                adc_test_init@ref 0020                             ??_startTwentyMinTimer 0022  
                              _startOneHoursTimer 0456                      pwm_start@ucGeHighestSixValue 0022  
