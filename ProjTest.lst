

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Thu Dec 20 15:53:09 2018

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,delta=2
    14                           	psect	swtext1,local,class=CONST,delta=2
    15                           	psect	text498,local,class=CODE,delta=2
    16                           	psect	text503,local,class=CODE,delta=2
    17                           	psect	text504,local,class=CODE,delta=2
    18                           	psect	text505,local,class=CODE,delta=2
    19                           	psect	text506,local,class=CODE,delta=2
    20                           	psect	text507,local,class=CODE,delta=2
    21                           	psect	text508,local,class=CODE,delta=2
    22                           	psect	text509,local,class=CODE,delta=2
    23                           	psect	text510,local,class=CODE,delta=2
    24                           	psect	text511,local,class=CODE,delta=2
    25                           	psect	text512,local,class=CODE,delta=2
    26                           	psect	text514,local,class=CODE,delta=2
    27                           	psect	text515,local,class=CODE,delta=2
    28                           	psect	text516,local,class=CODE,delta=2
    29                           	psect	text517,local,class=CODE,delta=2
    30                           	psect	text518,local,class=CODE,delta=2
    31                           	psect	text519,local,class=CODE,delta=2
    32                           	psect	text520,local,class=CODE,delta=2
    33                           	psect	text521,local,class=CODE,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text524,local,class=CODE,delta=2
    36                           	psect	pa_nodes,global,class=CODE,delta=2
    37                           	dabs	1,0x7E,2
    38  000A                     	;#
    39                           
    40                           	psect	config
    41  2000  2FFF               	dw	12287	;#
    42  2001  3FDE               	dw	16350	;#
    43  2002  3FF8               	dw	16376	;#
    44                           
    45                           	psect	idataBANK0
    46  0000                     __pidataBANK0:	
    47  001F                     _ADCON0	set	31
    48  001E                     _ADRESH	set	30
    49  001B                     _OP1CON0	set	27
    50  001C                     _OP1CON1	set	28
    51  001D                     _OP1CON2	set	29
    52  0010                     _T1CON	set	16
    53  000F                     _TMR1H	set	15
    54  000E                     _TMR1L	set	14
    55  006A                     _ADIF	set	106
    56  00F8                     _ADON	set	248
    57  005F                     _GIE	set	95
    58  00F9                     _GO	set	249
    59  0028                     _PA0	set	40
    60  0029                     _PA1	set	41
    61  002A                     _PA2	set	42
    62  002B                     _PA3	set	43
    63  0032                     _PB2	set	50
    64  005E                     _PEIE	set	94
    65  0060                     _TMR1IF	set	96
    66  009F                     _ADCON1	set	159
    67  009E                     _ADRESL	set	158
    68  0087                     _DACCON	set	135
    69  0088                     _DACR0	set	136
    70  009B                     _OP2CON0	set	155
    71  009C                     _OP2CON1	set	156
    72  009D                     _OP2CON2	set	157
    73  046A                     _ADIE	set	1130
    74  0460                     _TMR1IE	set	1120
    75  0428                     _TRISA0	set	1064
    76  0429                     _TRISA1	set	1065
    77  042A                     _TRISA2	set	1066
    78  042B                     _TRISA3	set	1067
    79  042F                     _TRISA7	set	1071
    80  0430                     _TRISB0	set	1072
    81  0431                     _TRISB1	set	1073
    82  0432                     _TRISB2	set	1074
    83  0433                     _TRISB3	set	1075
    84  0434                     _TRISB4	set	1076
    85  0435                     _TRISB5	set	1077
    86  0436                     _TRISB6	set	1078
    87  0437                     _TRISB7	set	1079
    88  0108                     _CLKPR	set	264
    89  0847                     _CLKPCE	set	2119
    90                           
    91                           	psect	cinit
    92  01F6                     start_initialization:	
    93  01F6  3020               	movlw	low __pbssBANK0
    94                           
    95                           ; Clear objects allocated to COMMON
    96  01F7  01F6               	clrf	__pbssCOMMON& (0+127)
    97  01F8  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
    98  01F9  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
    99  01FA  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   100  01FB  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   101                           
   102                           ; Clear objects allocated to BANK0
   103  01FC  1383               	bcf	3,7	;select IRP bank0
   104  01FD  0084               	movwf	4
   105  01FE  3040               	movlw	low (__pbssBANK0+32)
   106  01FF  118A  2225         	fcall	clear_ram
   107                           
   108                           ;initializer for _sampleChannelSelect
   109  0201  300D               	movlw	13
   110  0202  00C5               	movwf	__pdataBANK0& (0+127)
   111  0203                     end_of_initialization:	
   112                           ;End of C runtime variable initialization code
   113                           
   114  0203  0183               	clrf	3
   115  0204  118A  280D         	ljmp	_main	;jump to C main() function
   116                           
   117                           	psect	bssCOMMON
   118  0076                     __pbssCOMMON:	
   119  0076                     _uiBigTimer:	
   120  0076                     	ds	2
   121  0078                     ISR@ucTimer1sCnt:	
   122  0078                     	ds	1
   123  0079                     _adc_convert_flag:	
   124  0079                     	ds	1
   125  007A                     _timer:	
   126  007A                     	ds	1
   127                           
   128                           	psect	bssBANK0
   129  0020                     __pbssBANK0:	
   130  0020                     _buffer_Sample_AD_Value:	
   131  0020                     	ds	12
   132  002C                     _adc_original_CH13_value:	
   133  002C                     	ds	2
   134  002E                     _adc_original_value:	
   135  002E                     	ds	2
   136  0030                     _multiFilterMaxValue:	
   137  0030                     	ds	2
   138  0032                     _multiFilterMinValue:	
   139  0032                     	ds	2
   140  0034                     _uiSmallTimer:	
   141  0034                     	ds	2
   142  0036                     _sampleTimes:	
   143  0036                     	ds	1
   144  0037                     main@ampStep:	
   145  0037                     	ds	1
   146  0038                     main@tDA_timer:	
   147  0038                     	ds	1
   148  0039                     main@ucBigTimerActionFlag:	
   149  0039                     	ds	1
   150  003A                     main@ucCheckBatteryCnt:	
   151  003A                     	ds	1
   152  003B                     main@ucConfirmTimer1S:	
   153  003B                     	ds	1
   154  003C                     main@ucConfirmTimerZptS:	
   155  003C                     	ds	1
   156  003D                     main@ucInit:	
   157  003D                     	ds	1
   158  003E                     main@ucInstalledBatteryCnt:	
   159  003E                     	ds	1
   160  003F                     main@ucWaitTime1S:	
   161  003F                     	ds	1
   162                           
   163                           	psect	dataBANK0
   164  0045                     __pdataBANK0:	
   165  0045                     _sampleChannelSelect:	
   166  0045                     	ds	1
   167                           
   168                           	psect	clrtext
   169  0225                     clear_ram:	
   170                           ;	Called with FSR containing the base address, and
   171                           ;	W with the last address+1
   172                           
   173  0225  0064               	clrwdt	;clear the watchdog before getting into this loop
   174  0226                     clrloop:	
   175  0226  0180               	clrf	0	;clear RAM location pointed to by FSR
   176  0227  0A84               	incf	4,f	;increment pointer
   177  0228  0604               	xorwf	4,w	;XOR with final address
   178  0229  1903               	btfsc	3,2	;have we reached the end yet?
   179  022A  3400               	retlw	0	;all done for this memory range, return
   180  022B  0604               	xorwf	4,w	;XOR again to restore value
   181  022C  2A26               	goto	clrloop	;do the next byte
   182                           
   183                           	psect	cstackCOMMON
   184  0070                     __pcstackCOMMON:	
   185  0070                     ?_clock_config:	
   186  0070                     ?_timer1_config:	
   187                           ; 0 bytes @ 0x0
   188                           
   189  0070                     ?_timer1_interrupt_config:	
   190                           ; 0 bytes @ 0x0
   191                           
   192  0070                     ?_dac_init:	
   193                           ; 0 bytes @ 0x0
   194                           
   195  0070                     ?_op1_init:	
   196                           ; 0 bytes @ 0x0
   197                           
   198  0070                     ?_op2_init:	
   199                           ; 0 bytes @ 0x0
   200                           
   201  0070                     ?_adc_start:	
   202                           ; 0 bytes @ 0x0
   203                           
   204  0070                     ?_clrSampeTime:	
   205                           ; 0 bytes @ 0x0
   206                           
   207  0070                     ?_process_AD_Converter_Value:	
   208                           ; 0 bytes @ 0x0
   209                           
   210  0070                     ?_clearBigTimer:	
   211                           ; 0 bytes @ 0x0
   212                           
   213  0070                     ?_clearSmallTimer:	
   214                           ; 0 bytes @ 0x0
   215                           
   216  0070                     ?_setDAC0_ChannelValue:	
   217                           ; 0 bytes @ 0x0
   218                           
   219  0070                     ?_startBigTimer:	
   220                           ; 0 bytes @ 0x0
   221                           
   222  0070                     ?_startSmallTimer:	
   223                           ; 0 bytes @ 0x0
   224                           
   225  0070                     ?_AD_Sample:	
   226                           ; 0 bytes @ 0x0
   227                           
   228  0070                     ?_main:	
   229                           ; 0 bytes @ 0x0
   230                           
   231  0070                     ?_setAD_ConvertFlag:	
   232                           ; 0 bytes @ 0x0
   233                           
   234  0070                     ?_ISR:	
   235                           ; 0 bytes @ 0x0
   236                           
   237  0070                     ?i1_setAD_ConvertFlag:	
   238                           ; 0 bytes @ 0x0
   239                           
   240  0070                     ??i1_setAD_ConvertFlag:	
   241                           ; 0 bytes @ 0x0
   242                           
   243  0070                     ?_isPermitSampleTime:	
   244                           ; 0 bytes @ 0x0
   245                           
   246  0070                     ?_isFinishedBigTimer:	
   247                           ; 1 bytes @ 0x0
   248                           
   249  0070                     ?_isFinishedSmallTimer:	
   250                           ; 1 bytes @ 0x0
   251                           
   252  0070                     ?_getAD_ConvertFlag:	
   253                           ; 1 bytes @ 0x0
   254                           
   255  0070                     ?_adc_get:	
   256                           ; 1 bytes @ 0x0
   257                           
   258  0070                     i1setAD_ConvertFlag@flag:	
   259                           ; 2 bytes @ 0x0
   260                           
   261                           
   262                           ; 1 bytes @ 0x0
   263  0070                     	ds	2
   264  0072                     ??_adc_get:	
   265  0072                     adc_get@val:	
   266                           ; 0 bytes @ 0x2
   267                           
   268                           
   269                           ; 2 bytes @ 0x2
   270  0072                     	ds	2
   271  0074                     ??_ISR:	
   272                           
   273                           ; 0 bytes @ 0x4
   274  0074                     	ds	2
   275                           
   276                           	psect	cstackBANK0
   277  0040                     __pcstackBANK0:	
   278  0040                     ??_clock_config:	
   279  0040                     ??_timer1_config:	
   280                           ; 0 bytes @ 0x0
   281                           
   282  0040                     ??_timer1_interrupt_config:	
   283                           ; 0 bytes @ 0x0
   284                           
   285  0040                     ?_adc_test_init:	
   286                           ; 0 bytes @ 0x0
   287                           
   288  0040                     ??_dac_init:	
   289                           ; 0 bytes @ 0x0
   290                           
   291  0040                     ??_op1_init:	
   292                           ; 0 bytes @ 0x0
   293                           
   294  0040                     ??_op2_init:	
   295                           ; 0 bytes @ 0x0
   296                           
   297  0040                     ??_adc_start:	
   298                           ; 0 bytes @ 0x0
   299                           
   300  0040                     ??_isPermitSampleTime:	
   301                           ; 0 bytes @ 0x0
   302                           
   303  0040                     ??_clrSampeTime:	
   304                           ; 0 bytes @ 0x0
   305                           
   306  0040                     ??_clearBigTimer:	
   307                           ; 0 bytes @ 0x0
   308                           
   309  0040                     ??_clearSmallTimer:	
   310                           ; 0 bytes @ 0x0
   311                           
   312  0040                     ??_setDAC0_ChannelValue:	
   313                           ; 0 bytes @ 0x0
   314                           
   315  0040                     ??_startBigTimer:	
   316                           ; 0 bytes @ 0x0
   317                           
   318  0040                     ??_startSmallTimer:	
   319                           ; 0 bytes @ 0x0
   320                           
   321  0040                     ??_isFinishedBigTimer:	
   322                           ; 0 bytes @ 0x0
   323                           
   324  0040                     ??_isFinishedSmallTimer:	
   325                           ; 0 bytes @ 0x0
   326                           
   327  0040                     ??_getAD_ConvertFlag:	
   328                           ; 0 bytes @ 0x0
   329                           
   330  0040                     ??_setAD_ConvertFlag:	
   331                           ; 0 bytes @ 0x0
   332                           
   333  0040                     ?_getAdOriginalCh13Value:	
   334                           ; 0 bytes @ 0x0
   335                           
   336  0040                     ?_getAdOriginalValue:	
   337                           ; 2 bytes @ 0x0
   338                           
   339  0040                     setAD_ConvertFlag@flag:	
   340                           ; 2 bytes @ 0x0
   341                           
   342  0040                     setDAC0_ChannelValue@ucValue:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0040                     adc_test_init@ref:	
   346                           ; 1 bytes @ 0x0
   347                           
   348                           
   349                           ; 1 bytes @ 0x0
   350  0040                     	ds	1
   351  0041                     ??_adc_test_init:	
   352                           
   353                           ; 0 bytes @ 0x1
   354  0041                     	ds	1
   355  0042                     ??_getAdOriginalCh13Value:	
   356  0042                     ??_AD_Sample:	
   357                           ; 0 bytes @ 0x2
   358                           
   359  0042                     ??_getAdOriginalValue:	
   360                           ; 0 bytes @ 0x2
   361                           
   362  0042                     adc_test_init@channel:	
   363                           ; 0 bytes @ 0x2
   364                           
   365                           
   366                           ; 1 bytes @ 0x2
   367  0042                     	ds	2
   368  0044                     AD_Sample@index:	
   369                           
   370                           ; 1 bytes @ 0x4
   371  0044                     	ds	1
   372  0045                     ??_process_AD_Converter_Value:	
   373  0045                     ??_main:	
   374                           ; 0 bytes @ 0x5
   375                           
   376                           
   377                           	psect	maintext
   378  000D                     __pmaintext:	
   379                           ; 0 bytes @ 0x5
   380 ;;Data sizes: Strings 0, constant 0, data 1, bss 37, persistent 0 stack 0
   381 ;;Auto spaces:   Size  Autos    Used
   382 ;; COMMON          14      6      11
   383 ;; BANK0           80      5      38
   384 ;; BANK1           80      0       0
   385 ;; BANK3           96      0       0
   386 ;; BANK2           96      0       0
   387 ;;
   388 ;; Pointer list with targets:
   389 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   390 ;;
   391 ;; ?_getAdOriginalCh13Value	unsigned int  size(1) Largest target is 0
   392 ;;
   393 ;; ?_getAdOriginalValue	unsigned int  size(1) Largest target is 0
   394 ;;
   395 ;;
   396 ;; Critical Paths under _main in COMMON
   397 ;;
   398 ;;   None.
   399 ;;
   400 ;; Critical Paths under _ISR in COMMON
   401 ;;
   402 ;;   _ISR->_adc_get
   403 ;;
   404 ;; Critical Paths under _main in BANK0
   405 ;;
   406 ;;   _process_AD_Converter_Value->_AD_Sample
   407 ;;   _AD_Sample->_getAdOriginalValue
   408 ;;
   409 ;; Critical Paths under _ISR in BANK0
   410 ;;
   411 ;;   None.
   412 ;;
   413 ;; Critical Paths under _main in BANK1
   414 ;;
   415 ;;   None.
   416 ;;
   417 ;; Critical Paths under _ISR in BANK1
   418 ;;
   419 ;;   None.
   420 ;;
   421 ;; Critical Paths under _main in BANK3
   422 ;;
   423 ;;   None.
   424 ;;
   425 ;; Critical Paths under _ISR in BANK3
   426 ;;
   427 ;;   None.
   428 ;;
   429 ;; Critical Paths under _main in BANK2
   430 ;;
   431 ;;   None.
   432 ;;
   433 ;; Critical Paths under _ISR in BANK2
   434 ;;
   435 ;;   None.
   436 ;;
   437 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   438 ;;
   439 ;;
   440 ;;Call Graph Tables:
   441 ;;
   442 ;; ---------------------------------------------------------------------------------
   443 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   444 ;; ---------------------------------------------------------------------------------
   445 ;; (0) _main                                                 0     0      0     156
   446 ;;                       _clock_config
   447 ;;                      _timer1_config
   448 ;;            _timer1_interrupt_config
   449 ;;                      _adc_test_init
   450 ;;                           _dac_init
   451 ;;                           _op1_init
   452 ;;                           _op2_init
   453 ;;                          _adc_start
   454 ;;                 _isPermitSampleTime
   455 ;;                       _clrSampeTime
   456 ;;         _process_AD_Converter_Value
   457 ;;                      _clearBigTimer
   458 ;;                    _clearSmallTimer
   459 ;;             _getAdOriginalCh13Value
   460 ;;               _setDAC0_ChannelValue
   461 ;;                      _startBigTimer
   462 ;;                    _startSmallTimer
   463 ;;                 _isFinishedBigTimer
   464 ;;               _isFinishedSmallTimer
   465 ;; ---------------------------------------------------------------------------------
   466 ;; (1) _process_AD_Converter_Value                           0     0      0      90
   467 ;;                  _getAD_ConvertFlag
   468 ;;                  _setAD_ConvertFlag
   469 ;;                          _AD_Sample
   470 ;;                          _adc_start
   471 ;; ---------------------------------------------------------------------------------
   472 ;; (2) _AD_Sample                                            3     3      0      68
   473 ;;                                              2 BANK0      3     3      0
   474 ;;                 _getAdOriginalValue
   475 ;; ---------------------------------------------------------------------------------
   476 ;; (3) _getAdOriginalValue                                   2     0      2       0
   477 ;;                                              0 BANK0      2     0      2
   478 ;; ---------------------------------------------------------------------------------
   479 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   480 ;;                                              0 BANK0      1     1      0
   481 ;; ---------------------------------------------------------------------------------
   482 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   483 ;; ---------------------------------------------------------------------------------
   484 ;; (1) _isFinishedSmallTimer                                 0     0      0       0
   485 ;; ---------------------------------------------------------------------------------
   486 ;; (1) _isFinishedBigTimer                                   0     0      0       0
   487 ;; ---------------------------------------------------------------------------------
   488 ;; (1) _startSmallTimer                                      0     0      0       0
   489 ;; ---------------------------------------------------------------------------------
   490 ;; (1) _startBigTimer                                        0     0      0       0
   491 ;; ---------------------------------------------------------------------------------
   492 ;; (1) _setDAC0_ChannelValue                                 1     1      0      22
   493 ;;                                              0 BANK0      1     1      0
   494 ;; ---------------------------------------------------------------------------------
   495 ;; (1) _getAdOriginalCh13Value                               2     0      2       0
   496 ;;                                              0 BANK0      2     0      2
   497 ;; ---------------------------------------------------------------------------------
   498 ;; (1) _clearSmallTimer                                      0     0      0       0
   499 ;; ---------------------------------------------------------------------------------
   500 ;; (1) _clearBigTimer                                        0     0      0       0
   501 ;; ---------------------------------------------------------------------------------
   502 ;; (1) _clrSampeTime                                         0     0      0       0
   503 ;; ---------------------------------------------------------------------------------
   504 ;; (1) _isPermitSampleTime                                   0     0      0       0
   505 ;; ---------------------------------------------------------------------------------
   506 ;; (2) _adc_start                                            0     0      0       0
   507 ;; ---------------------------------------------------------------------------------
   508 ;; (1) _op2_init                                             0     0      0       0
   509 ;; ---------------------------------------------------------------------------------
   510 ;; (1) _op1_init                                             0     0      0       0
   511 ;; ---------------------------------------------------------------------------------
   512 ;; (1) _dac_init                                             0     0      0       0
   513 ;; ---------------------------------------------------------------------------------
   514 ;; (1) _adc_test_init                                        3     2      1      44
   515 ;;                                              0 BANK0      3     2      1
   516 ;; ---------------------------------------------------------------------------------
   517 ;; (1) _timer1_interrupt_config                              0     0      0       0
   518 ;; ---------------------------------------------------------------------------------
   519 ;; (1) _timer1_config                                        0     0      0       0
   520 ;; ---------------------------------------------------------------------------------
   521 ;; (1) _clock_config                                         0     0      0       0
   522 ;; ---------------------------------------------------------------------------------
   523 ;; Estimated maximum stack depth 3
   524 ;; ---------------------------------------------------------------------------------
   525 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   526 ;; ---------------------------------------------------------------------------------
   527 ;; (4) _ISR                                                  2     2      0      97
   528 ;;                                              4 COMMON     2     2      0
   529 ;;                i1_setAD_ConvertFlag
   530 ;;                            _adc_get
   531 ;; ---------------------------------------------------------------------------------
   532 ;; (5) i1_setAD_ConvertFlag                                  1     1      0      73
   533 ;;                                              0 COMMON     1     1      0
   534 ;; ---------------------------------------------------------------------------------
   535 ;; (5) _adc_get                                              4     2      2      24
   536 ;;                                              0 COMMON     4     2      2
   537 ;; ---------------------------------------------------------------------------------
   538 ;; Estimated maximum stack depth 5
   539 ;; ---------------------------------------------------------------------------------
   540 ;; Call Graph Graphs:
   541 ;; _main (ROOT)
   542 ;;   _clock_config
   543 ;;   _timer1_config
   544 ;;   _timer1_interrupt_config
   545 ;;   _adc_test_init
   546 ;;   _dac_init
   547 ;;   _op1_init
   548 ;;   _op2_init
   549 ;;   _adc_start
   550 ;;   _isPermitSampleTime
   551 ;;   _clrSampeTime
   552 ;;   _process_AD_Converter_Value
   553 ;;     _getAD_ConvertFlag
   554 ;;     _setAD_ConvertFlag
   555 ;;     _AD_Sample
   556 ;;       _getAdOriginalValue
   557 ;;     _adc_start
   558 ;;   _clearBigTimer
   559 ;;   _clearSmallTimer
   560 ;;   _getAdOriginalCh13Value
   561 ;;   _setDAC0_ChannelValue
   562 ;;   _startBigTimer
   563 ;;   _startSmallTimer
   564 ;;   _isFinishedBigTimer
   565 ;;   _isFinishedSmallTimer
   566 ;;
   567 ;; _ISR (ROOT)
   568 ;;   i1_setAD_ConvertFlag
   569 ;;   _adc_get
   570 ;;
   571 ;; Address spaces:
   572 ;;Name               Size   Autos  Total    Cost      Usage
   573 ;;BANK3               60      0       0      10        0.0%
   574 ;;BITBANK3            60      0       0       9        0.0%
   575 ;;SFR3                 0      0       0       4        0.0%
   576 ;;BITSFR3              0      0       0       4        0.0%
   577 ;;BANK2               60      0       0      12        0.0%
   578 ;;BITBANK2            60      0       0      11        0.0%
   579 ;;SFR2                 0      0       0       5        0.0%
   580 ;;BITSFR2              0      0       0       5        0.0%
   581 ;;SFR1                 0      0       0       2        0.0%
   582 ;;BITSFR1              0      0       0       2        0.0%
   583 ;;BANK1               50      0       0       8        0.0%
   584 ;;BITBANK1            50      0       0       7        0.0%
   585 ;;CODE                 0      0       0       0        0.0%
   586 ;;DATA                 0      0      38       6        0.0%
   587 ;;ABS                  0      0      31       3        0.0%
   588 ;;NULL                 0      0       0       0        0.0%
   589 ;;STACK                0      0       7       2        0.0%
   590 ;;BANK0               50      5      26       5       47.5%
   591 ;;BITBANK0            50      0       0       4        0.0%
   592 ;;SFR0                 0      0       0       1        0.0%
   593 ;;BITSFR0              0      0       0       1        0.0%
   594 ;;COMMON               E      6       B       1       78.6%
   595 ;;BITCOMMON            E      0       0       0        0.0%
   596                           
   597                           
   598 ;; *************** function _main *****************
   599 ;; Defined at:
   600 ;;		line 84 in file "C:\sw_dev\AK7030-OTP\main.c"
   601 ;; Parameters:    Size  Location     Type
   602 ;;		None
   603 ;; Auto vars:     Size  Location     Type
   604 ;;		None
   605 ;; Return value:  Size  Location     Type
   606 ;;		None               void
   607 ;; Registers used:
   608 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   609 ;; Tracked objects:
   610 ;;		On entry : 17F/0
   611 ;;		On exit  : 60/0
   612 ;;		Unchanged: FFE00/0
   613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   614 ;;      Params:         0       0       0       0       0
   615 ;;      Locals:         0       0       0       0       0
   616 ;;      Temps:          0       0       0       0       0
   617 ;;      Totals:         0       0       0       0       0
   618 ;;Total ram usage:        0 bytes
   619 ;; Hardware stack levels required when called:    5
   620 ;; This function calls:
   621 ;;		_clock_config
   622 ;;		_timer1_config
   623 ;;		_timer1_interrupt_config
   624 ;;		_adc_test_init
   625 ;;		_dac_init
   626 ;;		_op1_init
   627 ;;		_op2_init
   628 ;;		_adc_start
   629 ;;		_isPermitSampleTime
   630 ;;		_clrSampeTime
   631 ;;		_process_AD_Converter_Value
   632 ;;		_clearBigTimer
   633 ;;		_clearSmallTimer
   634 ;;		_getAdOriginalCh13Value
   635 ;;		_setDAC0_ChannelValue
   636 ;;		_startBigTimer
   637 ;;		_startSmallTimer
   638 ;;		_isFinishedBigTimer
   639 ;;		_isFinishedSmallTimer
   640 ;; This function is called by:
   641 ;;		Startup code after reset
   642 ;; This function uses a non-reentrant model
   643 ;;
   644  000D                     _main:	
   645                           
   646                           ;main.c: 85: enum step
   647                           ;main.c: 86: {
   648                           ;main.c: 87: SENSE_PB2_INPUT_VOLTAGE = 0,
   649                           ;main.c: 88: SENSE_PB2_DURATION_ONE_SECOND,
   650                           ;main.c: 89: SENSE_PB2_INPUT_VOLTAGE__AGAIN,
   651                           ;main.c: 90: SENSE_PB2_DURATION__SECOND,
   652                           ;main.c: 91: SET_PA2_VALUE,
   653                           ;main.c: 92: PROCESS_AD_VALUE,
   654                           ;main.c: 93: WAIT_SET_TIME_FINISHED,
   655                           ;main.c: 94: SET_TIME_BE_FINISHED,
   656                           ;main.c: 95: CHECKING_PULL_OUT_BATTERY,
   657                           ;main.c: 96: CHECKING_INSTALLED_BATTERY,
   658                           ;main.c: 97: };
   659                           ;main.c: 99: enum workTimerType
   660                           ;main.c: 100: {
   661                           ;main.c: 101: BIG_TIMER_WORK = 0,
   662                           
   663                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   664  000D  1683               	bsf	3,5	;RP0=1, select bank1
   665  000E  1005               	bcf	5,0
   666                           
   667                           ;main.c: 112: TRISA1 = 0;
   668  000F  1085               	bcf	5,1
   669                           
   670                           ;main.c: 113: TRISA3 = 0;
   671  0010  1185               	bcf	5,3
   672                           
   673                           ;main.c: 114: TRISA2 = 0;
   674  0011  1105               	bcf	5,2
   675                           
   676                           ;main.c: 115: PA2 = 1;
   677  0012  1283               	bcf	3,5	;RP0=0, select bank0
   678  0013  1505               	bsf	5,2
   679                           
   680                           ;main.c: 116: PA0 = 1;
   681  0014  1405               	bsf	5,0
   682                           
   683                           ;main.c: 118: TRISB2 = 1;
   684  0015  1683               	bsf	3,5	;RP0=1, select bank1
   685  0016  1506               	bsf	6,2
   686                           
   687                           ;main.c: 120: TRISB1 = 1;
   688  0017  1486               	bsf	6,1
   689                           
   690                           ;main.c: 121: TRISB0 = 1;
   691  0018  1406               	bsf	6,0
   692                           
   693                           ;main.c: 123: clock_config();
   694  0019  118A  222D  118A   	fcall	_clock_config
   695                           
   696                           ;main.c: 124: timer1_config();
   697  001C  118A  2212  118A   	fcall	_timer1_config
   698                           
   699                           ;main.c: 125: timer1_interrupt_config();
   700  001F  118A  2263  118A   	fcall	_timer1_interrupt_config
   701                           
   702                           ;main.c: 127: adc_test_init(13,3);
   703  0022  3003               	movlw	3
   704  0023  1283               	bcf	3,5	;RP0=0, select bank0
   705  0024  00C0               	movwf	?_adc_test_init
   706  0025  300D               	movlw	13
   707  0026  118A  21E2  118A   	fcall	_adc_test_init
   708                           
   709                           ;main.c: 129: dac_init();
   710  0029  118A  2254  118A   	fcall	_dac_init
   711                           
   712                           ;main.c: 130: op1_init();
   713  002C  118A  2206  118A   	fcall	_op1_init
   714                           
   715                           ;main.c: 131: op2_init();
   716  002F  118A  221C  118A   	fcall	_op2_init
   717                           
   718                           ;main.c: 134: adc_start();
   719  0032  118A  2115  118A   	fcall	_adc_start
   720                           
   721                           ;main.c: 147: switch(ampStep)
   722  0035  28E8               	goto	l3118
   723  0036                     l3126:	
   724                           
   725                           ;main.c: 150: {
   726                           ;main.c: 151: ucBigTimerActionFlag = 0;
   727  0036  01B9               	clrf	main@ucBigTimerActionFlag
   728                           
   729                           ;main.c: 152: clearBigTimer();
   730  0037  118A  2260  118A   	fcall	_clearBigTimer
   731                           
   732                           ;main.c: 153: clearSmallTimer();
   733  003A  118A  225D  118A   	fcall	_clearSmallTimer
   734  003D                     L1:	
   735                           
   736                           ;main.c: 154: if(!PB2)
   737  003D  1906               	btfsc	6,2
   738  003E  28E8               	goto	l3118
   739  003F                     l3134:	
   740                           
   741                           ;main.c: 155: ampStep++;
   742  003F  1283               	bcf	3,5	;RP0=0, select bank0
   743  0040  0AB7               	incf	main@ampStep,f
   744  0041  28E8               	goto	l3118
   745  0042                     l679:	
   746                           ;main.c: 157: }
   747                           ;main.c: 159: case SENSE_PB2_DURATION_ONE_SECOND:
   748                           
   749                           
   750                           ;main.c: 160: {
   751                           ;main.c: 161: static unsigned char ucConfirmTimer1S = 0;
   752                           ;main.c: 162: if(!PB2)
   753  0042  1906               	btfsc	6,2
   754  0043  2846               	goto	l3138
   755                           
   756                           ;main.c: 163: {
   757                           ;main.c: 164: ucConfirmTimer1S++;
   758  0044  0ABB               	incf	main@ucConfirmTimer1S,f
   759                           
   760                           ;main.c: 165: }
   761  0045  2847               	goto	l3140
   762  0046                     l3138:	
   763                           
   764                           ;main.c: 166: else
   765                           ;main.c: 167: {
   766                           ;main.c: 168: ucConfirmTimer1S = 0;
   767  0046  01BB               	clrf	main@ucConfirmTimer1S
   768  0047                     l3140:	
   769                           
   770                           ;main.c: 169: }
   771                           ;main.c: 171: if(ucConfirmTimer1S >= 10)
   772  0047  300A               	movlw	10
   773  0048  023B               	subwf	main@ucConfirmTimer1S,w
   774  0049  1C03               	skipc
   775  004A  28E8               	goto	l3118
   776                           
   777                           ;main.c: 172: {
   778                           ;main.c: 173: ucConfirmTimer1S = 0;
   779  004B  01BB               	clrf	main@ucConfirmTimer1S
   780  004C  283F               	goto	l3134
   781  004D                     l685:	
   782                           ;main.c: 178: }
   783                           ;main.c: 180: case SENSE_PB2_INPUT_VOLTAGE__AGAIN:
   784                           
   785                           
   786                           ;main.c: 181: {
   787                           ;main.c: 182: if(!PB2)
   788  004D  283D               	goto	L1
   789  004E                     l687:	
   790                           ;main.c: 185: }
   791                           ;main.c: 187: case SENSE_PB2_DURATION__SECOND:
   792                           
   793                           
   794                           ;main.c: 188: {
   795                           ;main.c: 189: static unsigned char ucConfirmTimerZptS = 0;
   796                           ;main.c: 190: if(!PB2)
   797  004E  1906               	btfsc	6,2
   798  004F  2852               	goto	l3150
   799                           
   800                           ;main.c: 191: {
   801                           ;main.c: 192: ucConfirmTimerZptS++;
   802  0050  0ABC               	incf	main@ucConfirmTimerZptS,f
   803                           
   804                           ;main.c: 193: }
   805  0051  2853               	goto	l3152
   806  0052                     l3150:	
   807                           
   808                           ;main.c: 194: else
   809                           ;main.c: 195: {
   810                           ;main.c: 196: ucConfirmTimerZptS = 0;
   811  0052  01BC               	clrf	main@ucConfirmTimerZptS
   812  0053                     l3152:	
   813                           
   814                           ;main.c: 197: }
   815                           ;main.c: 199: if(ucConfirmTimerZptS >= 3)
   816  0053  3003               	movlw	3
   817  0054  023C               	subwf	main@ucConfirmTimerZptS,w
   818  0055  1C03               	skipc
   819  0056  28E8               	goto	l3118
   820                           
   821                           ;main.c: 200: {
   822                           ;main.c: 201: ucConfirmTimerZptS = 0;
   823  0057  01BC               	clrf	main@ucConfirmTimerZptS
   824  0058  283F               	goto	l3134
   825  0059                     l693:	
   826                           ;main.c: 206: }
   827                           ;main.c: 208: case SET_PA2_VALUE:
   828                           
   829                           
   830                           ;main.c: 209: {
   831                           ;main.c: 210: PA2 = 0;
   832  0059  1105               	bcf	5,2
   833  005A  283F               	goto	l3134
   834  005B                     l3160:	
   835                           
   836                           ;main.c: 216: {
   837                           ;main.c: 217: static unsigned char ucInit = 0;
   838                           ;main.c: 218: if(getAdOriginalCh13Value() > 40)
   839  005B  118A  224A  118A   	fcall	_getAdOriginalCh13Value
   840  005E  3000               	movlw	0
   841  005F  0241               	subwf	?_getAdOriginalCh13Value+1,w
   842  0060  3029               	movlw	41
   843  0061  1903               	skipnz
   844  0062  0240               	subwf	?_getAdOriginalCh13Value,w
   845  0063  1C03               	skipc
   846  0064  2879               	goto	l3174
   847  0065                     L3:	
   848  0065  301B               	movlw	27
   849                           
   850                           ;main.c: 219: {
   851                           ;main.c: 220: ucInit = 1;
   852  0066  01BD               	clrf	main@ucInit
   853  0067  0ABD               	incf	main@ucInit,f
   854                           
   855                           ;main.c: 221: PA0 = 0;
   856  0068  1005               	bcf	5,0
   857                           
   858                           ;main.c: 222: PA1 = 1;
   859  0069  1485               	bsf	5,1
   860                           
   861                           ;main.c: 223: PA3 = 0;
   862  006A  1185               	bcf	5,3
   863                           
   864                           ;main.c: 224: tDA_timer = BIG_TIMER_WORK;
   865  006B  01B8               	clrf	main@tDA_timer
   866                           
   867                           ;main.c: 225: setDAC0_ChannelValue(27);
   868  006C  118A  2259  118A   	fcall	_setDAC0_ChannelValue
   869                           
   870                           ;main.c: 226: if(!ucBigTimerActionFlag)
   871  006F  1283               	bcf	3,5	;RP0=0, select bank0
   872  0070  08B9               	movf	main@ucBigTimerActionFlag,f
   873  0071  1D03               	skipz
   874  0072  283F               	goto	l3134
   875                           
   876                           ;main.c: 227: {
   877                           ;main.c: 228: startBigTimer();
   878  0073  118A  2245  118A   	fcall	_startBigTimer
   879                           
   880                           ;main.c: 229: ucBigTimerActionFlag = 1;
   881  0076  01B9               	clrf	main@ucBigTimerActionFlag
   882  0077  0AB9               	incf	main@ucBigTimerActionFlag,f
   883  0078  283F               	goto	l3134
   884  0079                     l3174:	
   885                           
   886                           ;main.c: 232: else if(getAdOriginalCh13Value() <35)
   887  0079  118A  224A  118A   	fcall	_getAdOriginalCh13Value
   888  007C  3000               	movlw	0
   889  007D  0241               	subwf	?_getAdOriginalCh13Value+1,w
   890  007E  3023               	movlw	35
   891  007F  1903               	skipnz
   892  0080  0240               	subwf	?_getAdOriginalCh13Value,w
   893  0081  1803               	skipnc
   894  0082  2892               	goto	l3180
   895  0083  3019               	movlw	25
   896                           
   897                           ;main.c: 233: {
   898                           ;main.c: 234: ucInit = 1;
   899  0084  01BD               	clrf	main@ucInit
   900  0085  0ABD               	incf	main@ucInit,f
   901                           
   902                           ;main.c: 235: PA0 = 1;
   903  0086  1405               	bsf	5,0
   904                           
   905                           ;main.c: 236: PA1 = 0;
   906  0087  1085               	bcf	5,1
   907                           
   908                           ;main.c: 237: PA3 = 0;
   909  0088  1185               	bcf	5,3
   910                           
   911                           ;main.c: 238: tDA_timer = SMALL_TIMER_WORK;
   912  0089  01B8               	clrf	main@tDA_timer
   913  008A  0AB8               	incf	main@tDA_timer,f
   914                           
   915                           ;main.c: 239: setDAC0_ChannelValue(25);
   916  008B  118A  2259  118A   	fcall	_setDAC0_ChannelValue
   917                           
   918                           ;main.c: 240: startSmallTimer();
   919  008E  118A  2235  118A   	fcall	_startSmallTimer
   920                           
   921                           ;main.c: 241: }
   922  0091  283F               	goto	l3134
   923  0092                     l3180:	
   924                           
   925                           ;main.c: 242: else
   926                           ;main.c: 243: {
   927                           ;main.c: 244: if(!ucInit)
   928  0092  08BD               	movf	main@ucInit,f
   929  0093  1D03               	skipz
   930  0094  283F               	goto	l3134
   931  0095  2865               	goto	L3
   932  0096                     l706:	
   933                           ;main.c: 267: {
   934                           ;main.c: 268: case BIG_TIMER_WORK:
   935                           
   936                           ;main.c: 252: if(!ucBigTimerActionFlag)
   937                           
   938                           ;main.c: 251: setDAC0_ChannelValue(27);
   939                           
   940                           ;main.c: 250: tDA_timer = BIG_TIMER_WORK;
   941                           
   942                           ;main.c: 249: PA3 = 0;
   943                           
   944                           ;main.c: 248: PA1 = 1;
   945                           
   946                           ;main.c: 247: PA0 = 0;
   947                           
   948                           ;main.c: 245: {
   949                           ;main.c: 246: ucInit = 1;
   950                           
   951                           
   952                           ;main.c: 269: {
   953                           ;main.c: 270: if(!PA3)
   954  0096  1985               	btfsc	5,3
   955  0097  289D               	goto	l3202
   956  0098  300A               	movlw	10
   957                           
   958                           ;main.c: 271: {
   959                           ;main.c: 272: ucWaitTime1S++;
   960  0099  0ABF               	incf	main@ucWaitTime1S,f
   961                           
   962                           ;main.c: 273: if(ucWaitTime1S >= 10)
   963  009A  023F               	subwf	main@ucWaitTime1S,w
   964  009B  1803               	btfsc	3,0
   965                           
   966                           ;main.c: 274: PA3 = 1;
   967  009C  1585               	bsf	5,3
   968  009D                     l3202:	
   969                           
   970                           ;main.c: 275: }
   971                           ;main.c: 277: if(!isFinishedBigTimer())
   972  009D  118A  2240  118A   	fcall	_isFinishedBigTimer
   973  00A0  3800               	iorlw	0
   974  00A1  1D03               	skipz
   975  00A2  283F               	goto	l3134
   976  00A3                     l3204:	
   977                           
   978                           ;main.c: 278: {
   979                           ;main.c: 279: ampStep = PROCESS_AD_VALUE;
   980  00A3  3005               	movlw	5
   981  00A4  00B7               	movwf	main@ampStep
   982                           
   983                           ;main.c: 280: }
   984  00A5  28E8               	goto	l3118
   985  00A6                     l3208:	
   986                           
   987                           ;main.c: 289: {
   988                           ;main.c: 290: if((ucBigTimerActionFlag == 1) && isFinishedBigTimer())
   989  00A6  0B39               	decfsz	main@ucBigTimerActionFlag,w
   990  00A7  28AE               	goto	l3214
   991  00A8  118A  2240  118A   	fcall	_isFinishedBigTimer
   992  00AB  3A00               	xorlw	0
   993  00AC  1D03               	btfss	3,2
   994  00AD  283F               	goto	l3134
   995  00AE                     l3214:	
   996                           
   997                           ;main.c: 294: else if(!isFinishedSmallTimer())
   998  00AE  118A  223B  118A   	fcall	_isFinishedSmallTimer
   999  00B1  3800               	iorlw	0
  1000  00B2  1D03               	skipz
  1001  00B3  283F               	goto	l3134
  1002                           
  1003                           ;main.c: 295: {
  1004                           ;main.c: 296: if(getAdOriginalCh13Value() > 40)
  1005  00B4  118A  224A  118A   	fcall	_getAdOriginalCh13Value
  1006  00B7  3000               	movlw	0
  1007  00B8  0241               	subwf	?_getAdOriginalCh13Value+1,w
  1008  00B9  3029               	movlw	41
  1009  00BA  1903               	skipnz
  1010  00BB  0240               	subwf	?_getAdOriginalCh13Value,w
  1011  00BC  1C03               	skipc
  1012  00BD  28E8               	goto	l3118
  1013                           
  1014                           ;main.c: 297: {
  1015                           ;main.c: 298: ucWaitTime1S = 0;
  1016  00BE  01BF               	clrf	main@ucWaitTime1S
  1017  00BF  28A3               	goto	l3204
  1018  00C0                     l3226:	
  1019  00C0  0838               	movf	main@tDA_timer,w
  1020                           
  1021                           ; Switch size 1, requested type "space"
  1022                           ; Number of cases is 2, Range of values is 0 to 1
  1023                           ; switch strategies available:
  1024                           ; Name         Instructions Cycles
  1025                           ; simple_byte            7     4 (average)
  1026                           ; direct_byte           11     7 (fixed)
  1027                           ; jumptable            260     6 (fixed)
  1028                           ; rangetable             6     6 (fixed)
  1029                           ; spacedrange           10     9 (fixed)
  1030                           ; locatedrange           2     3 (fixed)
  1031                           ;	Chosen strategy is simple_byte
  1032  00C1  3A00               	xorlw	0	; case 0
  1033  00C2  1903               	skipnz
  1034  00C3  2896               	goto	l706
  1035  00C4  3A01               	xorlw	1	; case 1
  1036  00C5  1903               	skipnz
  1037  00C6  28A6               	goto	l3208
  1038  00C7  2903               	goto	l674
  1039  00C8                     l719:	
  1040                           ;main.c: 314: }
  1041                           ;main.c: 316: case SET_TIME_BE_FINISHED:
  1042                           
  1043  00C8  3019               	movlw	25
  1044                           
  1045                           ;main.c: 317: {
  1046                           ;main.c: 318: PA2 = 1;
  1047  00C9  1505               	bsf	5,2
  1048                           
  1049                           ;main.c: 319: PA0 = 0;
  1050  00CA  1005               	bcf	5,0
  1051                           
  1052                           ;main.c: 320: PA1 = 0;
  1053  00CB  1085               	bcf	5,1
  1054                           
  1055                           ;main.c: 321: PA3 = 0;
  1056  00CC  1185               	bcf	5,3
  1057                           
  1058                           ;main.c: 322: ucWaitTime1S = 0;
  1059  00CD  01BF               	clrf	main@ucWaitTime1S
  1060                           
  1061                           ;main.c: 323: setDAC0_ChannelValue(25);
  1062  00CE  118A  2259  118A   	fcall	_setDAC0_ChannelValue
  1063  00D1  283F               	goto	l3134
  1064  00D2                     l720:	
  1065                           ;main.c: 326: }
  1066                           ;main.c: 328: case CHECKING_PULL_OUT_BATTERY:
  1067                           
  1068                           
  1069                           ;main.c: 329: {
  1070                           ;main.c: 330: static unsigned char ucCheckBatteryCnt = 0;
  1071                           ;main.c: 331: if(PB2)
  1072  00D2  1D06               	btfss	6,2
  1073  00D3  28D6               	goto	l3236
  1074                           
  1075                           ;main.c: 332: ucCheckBatteryCnt++;
  1076  00D4  0ABA               	incf	main@ucCheckBatteryCnt,f
  1077  00D5  28D7               	goto	l3238
  1078  00D6                     l3236:	
  1079                           
  1080                           ;main.c: 333: else
  1081                           ;main.c: 334: ucCheckBatteryCnt = 0;
  1082  00D6  01BA               	clrf	main@ucCheckBatteryCnt
  1083  00D7                     l3238:	
  1084                           
  1085                           ;main.c: 336: if(ucCheckBatteryCnt > 2)
  1086  00D7  3003               	movlw	3
  1087  00D8  023A               	subwf	main@ucCheckBatteryCnt,w
  1088  00D9  1C03               	skipc
  1089  00DA  28E8               	goto	l3118
  1090                           
  1091                           ;main.c: 337: {
  1092                           ;main.c: 338: ucCheckBatteryCnt = 0;
  1093  00DB  01BA               	clrf	main@ucCheckBatteryCnt
  1094  00DC  283F               	goto	l3134
  1095  00DD                     l726:	
  1096                           ;main.c: 342: }
  1097                           ;main.c: 344: case CHECKING_INSTALLED_BATTERY:
  1098                           
  1099                           
  1100                           ;main.c: 345: {
  1101                           ;main.c: 346: static unsigned char ucInstalledBatteryCnt = 0;
  1102                           ;main.c: 347: if(!PB2)
  1103  00DD  1906               	btfsc	6,2
  1104  00DE  28E1               	goto	l3246
  1105                           
  1106                           ;main.c: 348: ucInstalledBatteryCnt++;
  1107  00DF  0ABE               	incf	main@ucInstalledBatteryCnt,f
  1108  00E0  28E2               	goto	l3248
  1109  00E1                     l3246:	
  1110                           
  1111                           ;main.c: 349: else
  1112                           ;main.c: 350: ucInstalledBatteryCnt = 0;
  1113  00E1  01BE               	clrf	main@ucInstalledBatteryCnt
  1114  00E2                     l3248:	
  1115                           
  1116                           ;main.c: 352: if(ucInstalledBatteryCnt > 10)
  1117  00E2  300B               	movlw	11
  1118  00E3  023E               	subwf	main@ucInstalledBatteryCnt,w
  1119  00E4  1C03               	skipc
  1120  00E5  28E8               	goto	l3118
  1121                           
  1122                           ;main.c: 353: {
  1123                           ;main.c: 354: ucInstalledBatteryCnt = 0;
  1124  00E6  01BE               	clrf	main@ucInstalledBatteryCnt
  1125                           
  1126                           ;main.c: 355: ampStep = SENSE_PB2_INPUT_VOLTAGE;
  1127  00E7  01B7               	clrf	main@ampStep
  1128  00E8                     l3118:	
  1129  00E8  0064               	clrwdt	;#
  1130                           
  1131                           ;main.c: 142: if(isPermitSampleTime())
  1132  00E9  118A  224F  118A   	fcall	_isPermitSampleTime
  1133  00EC  3A00               	xorlw	0
  1134  00ED  1903               	skipnz
  1135  00EE  28E8               	goto	l3118
  1136                           
  1137                           ;main.c: 143: {
  1138                           ;main.c: 144: clrSampeTime();
  1139  00EF  118A  2266  118A   	fcall	_clrSampeTime
  1140                           
  1141                           ;main.c: 145: process_AD_Converter_Value();
  1142  00F2  118A  2104  118A   	fcall	_process_AD_Converter_Value
  1143  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  1144  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  1145  00F7  0837               	movf	main@ampStep,w
  1146                           
  1147                           ; Switch size 1, requested type "space"
  1148                           ; Number of cases is 10, Range of values is 0 to 9
  1149                           ; switch strategies available:
  1150                           ; Name         Instructions Cycles
  1151                           ; direct_byte           27     7 (fixed)
  1152                           ; simple_byte           31    16 (average)
  1153                           ; jumptable            260     6 (fixed)
  1154                           ; rangetable            14     6 (fixed)
  1155                           ; spacedrange           26     9 (fixed)
  1156                           ; locatedrange          10     3 (fixed)
  1157                           ;	Chosen strategy is direct_byte
  1158  00F8  0084               	movwf	4
  1159  00F9  300A               	movlw	10
  1160  00FA  0204               	subwf	4,w
  1161  00FB  1803               	skipnc
  1162  00FC  28E8               	goto	l3118
  1163  00FD  3001               	movlw	high S3304
  1164  00FE  008A               	movwf	10
  1165  00FF  1003               	clrc
  1166  0100  0D04               	rlf	4,w
  1167  0101  3ECE               	addlw	low S3304
  1168  0102  0082               	movwf	2
  1169  0103                     l674:	
  1170  0103  28E8               	goto	l3118
  1171  0104                     __end_of_main:	
  1172                           
  1173                           	psect	swtext1
  1174  01CE                     __pswtext1:	
  1175  01CE                     S3304:	
  1176  01CE  118A  2836         	ljmp	l3126
  1177  01D0  118A  2842         	ljmp	l679
  1178  01D2  118A  284D         	ljmp	l685
  1179  01D4  118A  284E         	ljmp	l687
  1180  01D6  118A  2859         	ljmp	l693
  1181  01D8  118A  285B         	ljmp	l3160
  1182  01DA  118A  28C0         	ljmp	l3226
  1183  01DC  118A  28C8         	ljmp	l719
  1184  01DE  118A  28D2         	ljmp	l720
  1185  01E0  118A  28DD         	ljmp	l726
  1186                           
  1187                           	psect	text498
  1188  0104                     __ptext498:	
  1189 ;; =============== function _main ends ============
  1190                           
  1191                           
  1192 ;; *************** function _process_AD_Converter_Value *****************
  1193 ;; Defined at:
  1194 ;;		line 94 in file "C:\sw_dev\AK7030-OTP\common.c"
  1195 ;; Parameters:    Size  Location     Type
  1196 ;;		None
  1197 ;; Auto vars:     Size  Location     Type
  1198 ;;		None
  1199 ;; Return value:  Size  Location     Type
  1200 ;;		None               void
  1201 ;; Registers used:
  1202 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1203 ;; Tracked objects:
  1204 ;;		On entry : 0/0
  1205 ;;		On exit  : 0/0
  1206 ;;		Unchanged: FFE9F/0
  1207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1208 ;;      Params:         0       0       0       0       0
  1209 ;;      Locals:         0       0       0       0       0
  1210 ;;      Temps:          0       0       0       0       0
  1211 ;;      Totals:         0       0       0       0       0
  1212 ;;Total ram usage:        0 bytes
  1213 ;; Hardware stack levels used:    1
  1214 ;; Hardware stack levels required when called:    4
  1215 ;; This function calls:
  1216 ;;		_getAD_ConvertFlag
  1217 ;;		_setAD_ConvertFlag
  1218 ;;		_AD_Sample
  1219 ;;		_adc_start
  1220 ;; This function is called by:
  1221 ;;		_main
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224  0104                     _process_AD_Converter_Value:	
  1225                           
  1226                           ;common.c: 65: return adc_convert_flag;
  1227                           
  1228                           ; Regs used in _getAD_ConvertFlag: [wreg]
  1229                           
  1230                           ;common.c: 95: if(getAD_ConvertFlag())
  1231                           
  1232                           ; Regs used in _process_AD_Converter_Value: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1233  0104  0879               	movf	_adc_convert_flag,w
  1234  0105  3A00               	xorlw	0
  1235  0106  1903               	skipnz
  1236  0107  0008               	return
  1237                           
  1238                           ;common.c: 96: {
  1239                           ;common.c: 97: setAD_ConvertFlag(0);
  1240  0108  3000               	movlw	0
  1241  0109  2110  118A         	fcall	_setAD_ConvertFlag
  1242                           
  1243                           ;common.c: 98: AD_Sample();
  1244  010B  2118  118A         	fcall	_AD_Sample
  1245                           
  1246                           ;common.c: 100: adc_start();
  1247  010D  2915               	ljmp	l2952
  1248  010E                     __end_of_process_AD_Converter_Value:	
  1249  010E                     __ptext502:	
  1250 ;; =============== function _setAD_ConvertFlag ends ============
  1251                           
  1252                           
  1253 ;; *************** function _getAD_ConvertFlag *****************
  1254 ;; Defined at:
  1255 ;;		line 64 in file "C:\sw_dev\AK7030-OTP\common.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;		None
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;		None
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      unsigned char 
  1262 ;; Registers used:
  1263 ;;		wreg
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: FFFFF/0
  1268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1269 ;;      Params:         0       0       0       0       0
  1270 ;;      Locals:         0       0       0       0       0
  1271 ;;      Temps:          0       0       0       0       0
  1272 ;;      Totals:         0       0       0       0       0
  1273 ;;Total ram usage:        0 bytes
  1274 ;; Hardware stack levels used:    1
  1275 ;; Hardware stack levels required when called:    2
  1276 ;; This function calls:
  1277 ;;		Nothing
  1278 ;; This function is called by:
  1279 ;;		_process_AD_Converter_Value
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282  010E                     _getAD_ConvertFlag:	
  1283                           
  1284                           ;common.c: 65: return adc_convert_flag;
  1285                           
  1286                           ; Regs used in _getAD_ConvertFlag: [wreg]
  1287  010E  0879               	movf	_adc_convert_flag,w
  1288  010F  0008               	return
  1289  0110                     __end_of_getAD_ConvertFlag:	
  1290  0110                     __ptext501:	
  1291 ;; =============== function _getAdOriginalValue ends ============
  1292                           
  1293                           
  1294 ;; *************** function _setAD_ConvertFlag *****************
  1295 ;; Defined at:
  1296 ;;		line 70 in file "C:\sw_dev\AK7030-OTP\common.c"
  1297 ;; Parameters:    Size  Location     Type
  1298 ;;  flag            1    wreg     unsigned char 
  1299 ;; Auto vars:     Size  Location     Type
  1300 ;;  flag            1    0[BANK0 ] unsigned char 
  1301 ;; Return value:  Size  Location     Type
  1302 ;;		None               void
  1303 ;; Registers used:
  1304 ;;		wreg
  1305 ;; Tracked objects:
  1306 ;;		On entry : 0/0
  1307 ;;		On exit  : 60/0
  1308 ;;		Unchanged: FFF9F/0
  1309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1310 ;;      Params:         0       0       0       0       0
  1311 ;;      Locals:         0       1       0       0       0
  1312 ;;      Temps:          0       0       0       0       0
  1313 ;;      Totals:         0       1       0       0       0
  1314 ;;Total ram usage:        1 bytes
  1315 ;; Hardware stack levels used:    1
  1316 ;; Hardware stack levels required when called:    2
  1317 ;; This function calls:
  1318 ;;		Nothing
  1319 ;; This function is called by:
  1320 ;;		_process_AD_Converter_Value
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323  0110                     _setAD_ConvertFlag:	
  1324                           
  1325                           ; Regs used in _setAD_ConvertFlag: [wreg]
  1326                           ;setAD_ConvertFlag@flag stored from wreg
  1327  0110  1283               	bcf	3,5	;RP0=0, select bank0
  1328  0111  1303               	bcf	3,6	;RP1=0, select bank0
  1329  0112  00C0               	movwf	setAD_ConvertFlag@flag
  1330                           
  1331                           ;common.c: 71: adc_convert_flag = flag;
  1332  0113  00F9               	movwf	_adc_convert_flag
  1333  0114  0008               	return
  1334  0115                     __end_of_setAD_ConvertFlag:	
  1335  0115                     __ptext513:	
  1336 ;; =============== function _isPermitSampleTime ends ============
  1337                           
  1338                           
  1339 ;; *************** function _adc_start *****************
  1340 ;; Defined at:
  1341 ;;		line 99 in file "C:\sw_dev\AK7030-OTP\periph.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;		None
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;		None
  1346 ;; Return value:  Size  Location     Type
  1347 ;;		None               void
  1348 ;; Registers used:
  1349 ;;		None
  1350 ;; Tracked objects:
  1351 ;;		On entry : 40/20
  1352 ;;		On exit  : 60/0
  1353 ;;		Unchanged: FFF9F/0
  1354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1355 ;;      Params:         0       0       0       0       0
  1356 ;;      Locals:         0       0       0       0       0
  1357 ;;      Temps:          0       0       0       0       0
  1358 ;;      Totals:         0       0       0       0       0
  1359 ;;Total ram usage:        0 bytes
  1360 ;; Hardware stack levels used:    1
  1361 ;; Hardware stack levels required when called:    2
  1362 ;; This function calls:
  1363 ;;		Nothing
  1364 ;; This function is called by:
  1365 ;;		_main
  1366 ;;		_process_AD_Converter_Value
  1367 ;; This function uses a non-reentrant model
  1368 ;;
  1369  0115                     _adc_start:	
  1370  0115                     l2952:	
  1371                           ; Regs used in _adc_start: []
  1372                           
  1373                           
  1374                           ;periph.c: 100: GO=1;
  1375  0115  1283               	bcf	3,5	;RP0=0, select bank0
  1376  0116  149F               	bsf	31,1
  1377  0117  0008               	return
  1378  0118                     __end_of_adc_start:	
  1379  0118                     __ptext499:	
  1380 ;; =============== function _process_AD_Converter_Value ends ============
  1381                           
  1382                           
  1383 ;; *************** function _AD_Sample *****************
  1384 ;; Defined at:
  1385 ;;		line 114 in file "C:\sw_dev\AK7030-OTP\common.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;		None
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;  index           1    4[BANK0 ] unsigned char 
  1390 ;; Return value:  Size  Location     Type
  1391 ;;		None               void
  1392 ;; Registers used:
  1393 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1394 ;; Tracked objects:
  1395 ;;		On entry : 60/0
  1396 ;;		On exit  : 60/0
  1397 ;;		Unchanged: FFE9F/0
  1398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1399 ;;      Params:         0       0       0       0       0
  1400 ;;      Locals:         0       1       0       0       0
  1401 ;;      Temps:          0       2       0       0       0
  1402 ;;      Totals:         0       3       0       0       0
  1403 ;;Total ram usage:        3 bytes
  1404 ;; Hardware stack levels used:    1
  1405 ;; Hardware stack levels required when called:    3
  1406 ;; This function calls:
  1407 ;;		_getAdOriginalValue
  1408 ;; This function is called by:
  1409 ;;		_process_AD_Converter_Value
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412  0118                     _AD_Sample:	
  1413                           
  1414                           ;common.c: 115: if(sampleTimes < 6)
  1415                           
  1416                           ; Regs used in _AD_Sample: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1417  0118  3006               	movlw	6
  1418  0119  0236               	subwf	_sampleTimes,w
  1419  011A  1803               	skipnc
  1420  011B  0008               	return
  1421                           
  1422                           ;common.c: 116: {
  1423                           ;common.c: 118: buffer_Sample_AD_Value[sampleTimes] = getAdOriginalValue();
  1424  011C  2170  118A         	fcall	_getAdOriginalValue
  1425  011E  1003               	clrc
  1426  011F  0D36               	rlf	_sampleTimes,w
  1427  0120  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  1428  0121  0084               	movwf	4
  1429  0122  0840               	movf	?_getAdOriginalValue,w
  1430  0123  1383               	bcf	3,7	;select IRP bank0
  1431  0124  0080               	movwf	0
  1432  0125  0A84               	incf	4,f
  1433  0126  0841               	movf	?_getAdOriginalValue+1,w
  1434  0127  0080               	movwf	0
  1435                           
  1436                           ;common.c: 120: if(sampleTimes == 0)
  1437  0128  08B6               	movf	_sampleTimes,f
  1438  0129  1D03               	skipz
  1439  012A  2933               	goto	l3060
  1440                           
  1441                           ;common.c: 121: {
  1442                           ;common.c: 122: multiFilterMaxValue = buffer_Sample_AD_Value[0];
  1443  012B  0821               	movf	_buffer_Sample_AD_Value+1,w
  1444  012C  00B1               	movwf	_multiFilterMaxValue+1
  1445  012D  0820               	movf	_buffer_Sample_AD_Value,w
  1446  012E  00B0               	movwf	_multiFilterMaxValue
  1447                           
  1448                           ;common.c: 123: multiFilterMinValue = buffer_Sample_AD_Value[0];
  1449  012F  0821               	movf	_buffer_Sample_AD_Value+1,w
  1450  0130  00B3               	movwf	_multiFilterMinValue+1
  1451  0131  0820               	movf	_buffer_Sample_AD_Value,w
  1452  0132  00B2               	movwf	_multiFilterMinValue
  1453  0133                     l3060:	
  1454                           
  1455                           ;common.c: 124: }
  1456                           ;common.c: 126: if(multiFilterMaxValue < buffer_Sample_AD_Value[sampleTimes])
  1457  0133  2175  118A         	fcall	PL2	;call to abstracted procedure
  1458  0135  0231               	subwf	_multiFilterMaxValue+1,w
  1459  0136  1D03               	skipz
  1460  0137  293A               	goto	u545
  1461  0138  0842               	movf	??_AD_Sample,w
  1462  0139  0230               	subwf	_multiFilterMaxValue,w
  1463  013A                     u545:	
  1464  013A  1803               	skipnc
  1465  013B  2945               	goto	l1429
  1466                           
  1467                           ;common.c: 127: {
  1468                           ;common.c: 128: multiFilterMaxValue = buffer_Sample_AD_Value[sampleTimes];
  1469  013C  1003               	clrc
  1470  013D  0D36               	rlf	_sampleTimes,w
  1471  013E  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  1472  013F  0084               	movwf	4
  1473  0140  0800               	movf	0,w
  1474  0141  00B0               	movwf	_multiFilterMaxValue
  1475  0142  0A84               	incf	4,f
  1476  0143  0800               	movf	0,w
  1477  0144  00B1               	movwf	_multiFilterMaxValue+1
  1478  0145                     l1429:	
  1479                           
  1480                           ;common.c: 129: }
  1481                           ;common.c: 130: if(multiFilterMinValue > buffer_Sample_AD_Value[sampleTimes])
  1482  0145  2175  118A         	fcall	PL2	;call to abstracted procedure
  1483  0147  0833               	movf	_multiFilterMinValue+1,w
  1484  0148  0243               	subwf	??_AD_Sample+1,w
  1485  0149  1D03               	skipz
  1486  014A  294D               	goto	u555
  1487  014B  0832               	movf	_multiFilterMinValue,w
  1488  014C  0242               	subwf	??_AD_Sample,w
  1489  014D                     u555:	
  1490  014D  1803               	skipnc
  1491  014E  2958               	goto	l3066
  1492                           
  1493                           ;common.c: 131: {
  1494                           ;common.c: 132: multiFilterMinValue = buffer_Sample_AD_Value[sampleTimes];
  1495  014F  1003               	clrc
  1496  0150  0D36               	rlf	_sampleTimes,w
  1497  0151  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  1498  0152  0084               	movwf	4
  1499  0153  0800               	movf	0,w
  1500  0154  00B2               	movwf	_multiFilterMinValue
  1501  0155  0A84               	incf	4,f
  1502  0156  0800               	movf	0,w
  1503  0157  00B3               	movwf	_multiFilterMinValue+1
  1504  0158                     l3066:	
  1505  0158  3006               	movlw	6
  1506                           
  1507                           ;common.c: 137: sampleTimes++;
  1508  0159  0AB6               	incf	_sampleTimes,f
  1509                           
  1510                           ;common.c: 139: if(sampleTimes >= 6)
  1511  015A  0236               	subwf	_sampleTimes,w
  1512  015B  1C03               	skipc
  1513  015C  0008               	return
  1514                           
  1515                           ;common.c: 140: {
  1516                           ;common.c: 141: sampleTimes = 0;
  1517  015D  01B6               	clrf	_sampleTimes
  1518                           
  1519                           ;common.c: 144: {
  1520                           ;common.c: 146: sampleCH13Value = ((multiFilterSumValue - multiFilterMaxValue - multiFil
      +                          terMinValue))>> 2;
  1521  015E  0845               	movf	_sampleChannelSelect,w
  1522  015F  3A0D               	xorlw	13
  1523                           
  1524                           ;common.c: 147: sampleChannelSelect = 13;
  1525  0160  300D               	movlw	13
  1526  0161  00C5               	movwf	_sampleChannelSelect
  1527                           
  1528                           ;common.c: 158: }
  1529                           ;common.c: 160: for(unsigned char index = 0; index < 6;index++)
  1530                           
  1531                           ;common.c: 148: }
  1532  0162  01C4               	clrf	AD_Sample@index
  1533  0163                     l3088:	
  1534                           
  1535                           ;common.c: 161: buffer_Sample_AD_Value[index] = 0;
  1536  0163  1003               	clrc
  1537  0164  0D44               	rlf	AD_Sample@index,w
  1538  0165  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  1539  0166  0084               	movwf	4
  1540  0167  3006               	movlw	6
  1541  0168  0180               	clrf	0
  1542  0169  0A84               	incf	4,f
  1543  016A  0180               	clrf	0
  1544  016B  0AC4               	incf	AD_Sample@index,f
  1545  016C  0244               	subwf	AD_Sample@index,w
  1546  016D  1803               	btfsc	3,0
  1547  016E  0008               	return
  1548  016F  2963               	goto	l3088
  1549  0170                     __end_of_AD_Sample:	
  1550  0170                     __ptext500:	
  1551 ;; =============== function _AD_Sample ends ============
  1552                           
  1553                           
  1554 ;; *************** function _getAdOriginalValue *****************
  1555 ;; Defined at:
  1556 ;;		line 76 in file "C:\sw_dev\AK7030-OTP\common.c"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;		None
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;		None
  1561 ;; Return value:  Size  Location     Type
  1562 ;;                  2    0[BANK0 ] unsigned int 
  1563 ;; Registers used:
  1564 ;;		wreg
  1565 ;; Tracked objects:
  1566 ;;		On entry : 60/0
  1567 ;;		On exit  : 60/0
  1568 ;;		Unchanged: FFF9F/0
  1569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1570 ;;      Params:         0       2       0       0       0
  1571 ;;      Locals:         0       0       0       0       0
  1572 ;;      Temps:          0       0       0       0       0
  1573 ;;      Totals:         0       2       0       0       0
  1574 ;;Total ram usage:        2 bytes
  1575 ;; Hardware stack levels used:    1
  1576 ;; Hardware stack levels required when called:    2
  1577 ;; This function calls:
  1578 ;;		Nothing
  1579 ;; This function is called by:
  1580 ;;		_AD_Sample
  1581 ;; This function uses a non-reentrant model
  1582 ;;
  1583  0170                     _getAdOriginalValue:	
  1584                           
  1585                           ;common.c: 77: return adc_original_value;
  1586                           
  1587                           ; Regs used in _getAdOriginalValue: [wreg]
  1588  0170  082F               	movf	_adc_original_value+1,w
  1589  0171  00C1               	movwf	?_getAdOriginalValue+1
  1590  0172  082E               	movf	_adc_original_value,w
  1591  0173  00C0               	movwf	?_getAdOriginalValue
  1592  0174  0008               	return
  1593  0175                     __end_of_getAdOriginalValue:	
  1594  0175                     PL2:	
  1595  0175  1003               	clrc
  1596  0176  0D36               	rlf	_sampleTimes,w
  1597  0177  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  1598  0178  0084               	movwf	4
  1599  0179  0800               	movf	0,w
  1600  017A  00C2               	movwf	??_AD_Sample
  1601  017B  0A84               	incf	4,f
  1602  017C  0800               	movf	0,w
  1603  017D  00C3               	movwf	??_AD_Sample+1
  1604  017E  0008               	return
  1605                           
  1606                           	psect	text503
  1607  023B                     __ptext503:	
  1608 ;; =============== function _getAD_ConvertFlag ends ============
  1609                           
  1610                           
  1611 ;; *************** function _isFinishedSmallTimer *****************
  1612 ;; Defined at:
  1613 ;;		line 226 in file "C:\sw_dev\AK7030-OTP\common.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;		None
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;		None
  1618 ;; Return value:  Size  Location     Type
  1619 ;;                  1    wreg      unsigned char 
  1620 ;; Registers used:
  1621 ;;		wreg, status,2, status,0
  1622 ;; Tracked objects:
  1623 ;;		On entry : 60/0
  1624 ;;		On exit  : 60/0
  1625 ;;		Unchanged: FFF9F/0
  1626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1627 ;;      Params:         0       0       0       0       0
  1628 ;;      Locals:         0       0       0       0       0
  1629 ;;      Temps:          0       0       0       0       0
  1630 ;;      Totals:         0       0       0       0       0
  1631 ;;Total ram usage:        0 bytes
  1632 ;; Hardware stack levels used:    1
  1633 ;; Hardware stack levels required when called:    2
  1634 ;; This function calls:
  1635 ;;		Nothing
  1636 ;; This function is called by:
  1637 ;;		_main
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640  023B                     _isFinishedSmallTimer:	
  1641                           
  1642                           ;common.c: 227: if(uiSmallTimer == 0)
  1643                           
  1644                           ; Regs used in _isFinishedSmallTimer: [wreg+status,2+status,0]
  1645  023B  0835               	movf	_uiSmallTimer+1,w
  1646  023C  0434               	iorwf	_uiSmallTimer,w
  1647  023D  1903               	btfsc	3,2
  1648                           
  1649                           ;common.c: 228: return 1;
  1650  023E  3401               	retlw	1
  1651                           
  1652                           ;common.c: 229: else
  1653                           ;common.c: 230: return 0;
  1654  023F  3400               	retlw	0
  1655  0240                     __end_of_isFinishedSmallTimer:	
  1656                           
  1657                           	psect	text504
  1658  0240                     __ptext504:	
  1659 ;; =============== function _isFinishedSmallTimer ends ============
  1660                           
  1661                           
  1662 ;; *************** function _isFinishedBigTimer *****************
  1663 ;; Defined at:
  1664 ;;		line 218 in file "C:\sw_dev\AK7030-OTP\common.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;		None
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;		None
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  1    wreg      unsigned char 
  1671 ;; Registers used:
  1672 ;;		wreg, status,2, status,0
  1673 ;; Tracked objects:
  1674 ;;		On entry : 60/0
  1675 ;;		On exit  : 60/0
  1676 ;;		Unchanged: FFF9F/0
  1677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1678 ;;      Params:         0       0       0       0       0
  1679 ;;      Locals:         0       0       0       0       0
  1680 ;;      Temps:          0       0       0       0       0
  1681 ;;      Totals:         0       0       0       0       0
  1682 ;;Total ram usage:        0 bytes
  1683 ;; Hardware stack levels used:    1
  1684 ;; Hardware stack levels required when called:    2
  1685 ;; This function calls:
  1686 ;;		Nothing
  1687 ;; This function is called by:
  1688 ;;		_main
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691  0240                     _isFinishedBigTimer:	
  1692                           
  1693                           ;common.c: 219: if(uiBigTimer == 0)
  1694                           
  1695                           ; Regs used in _isFinishedBigTimer: [wreg+status,2+status,0]
  1696  0240  0877               	movf	_uiBigTimer+1,w
  1697  0241  0476               	iorwf	_uiBigTimer,w
  1698  0242  1903               	btfsc	3,2
  1699                           
  1700                           ;common.c: 220: return 1;
  1701  0243  3401               	retlw	1
  1702                           
  1703                           ;common.c: 221: else
  1704                           ;common.c: 222: return 0;
  1705  0244  3400               	retlw	0
  1706  0245                     __end_of_isFinishedBigTimer:	
  1707                           
  1708                           	psect	text505
  1709  0235                     __ptext505:	
  1710 ;; =============== function _isFinishedBigTimer ends ============
  1711                           
  1712                           
  1713 ;; *************** function _startSmallTimer *****************
  1714 ;; Defined at:
  1715 ;;		line 208 in file "C:\sw_dev\AK7030-OTP\common.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;		None
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;		None
  1720 ;; Return value:  Size  Location     Type
  1721 ;;		None               void
  1722 ;; Registers used:
  1723 ;;		wreg
  1724 ;; Tracked objects:
  1725 ;;		On entry : 60/20
  1726 ;;		On exit  : 60/0
  1727 ;;		Unchanged: FFF9F/0
  1728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1729 ;;      Params:         0       0       0       0       0
  1730 ;;      Locals:         0       0       0       0       0
  1731 ;;      Temps:          0       0       0       0       0
  1732 ;;      Totals:         0       0       0       0       0
  1733 ;;Total ram usage:        0 bytes
  1734 ;; Hardware stack levels used:    1
  1735 ;; Hardware stack levels required when called:    2
  1736 ;; This function calls:
  1737 ;;		Nothing
  1738 ;; This function is called by:
  1739 ;;		_main
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742  0235                     _startSmallTimer:	
  1743                           
  1744                           ;common.c: 209: uiSmallTimer = 10800;
  1745                           
  1746                           ; Regs used in _startSmallTimer: [wreg]
  1747  0235  3030               	movlw	48
  1748  0236  1283               	bcf	3,5	;RP0=0, select bank0
  1749  0237  00B4               	movwf	_uiSmallTimer
  1750  0238  302A               	movlw	42
  1751  0239  00B5               	movwf	_uiSmallTimer+1
  1752  023A  0008               	return
  1753  023B                     __end_of_startSmallTimer:	
  1754                           
  1755                           	psect	text506
  1756  0245                     __ptext506:	
  1757 ;; =============== function _startSmallTimer ends ============
  1758                           
  1759                           
  1760 ;; *************** function _startBigTimer *****************
  1761 ;; Defined at:
  1762 ;;		line 186 in file "C:\sw_dev\AK7030-OTP\common.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;		None
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;		None
  1767 ;; Return value:  Size  Location     Type
  1768 ;;		None               void
  1769 ;; Registers used:
  1770 ;;		wreg
  1771 ;; Tracked objects:
  1772 ;;		On entry : 60/0
  1773 ;;		On exit  : 60/0
  1774 ;;		Unchanged: FFF9F/0
  1775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1776 ;;      Params:         0       0       0       0       0
  1777 ;;      Locals:         0       0       0       0       0
  1778 ;;      Temps:          0       0       0       0       0
  1779 ;;      Totals:         0       0       0       0       0
  1780 ;;Total ram usage:        0 bytes
  1781 ;; Hardware stack levels used:    1
  1782 ;; Hardware stack levels required when called:    2
  1783 ;; This function calls:
  1784 ;;		Nothing
  1785 ;; This function is called by:
  1786 ;;		_main
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789  0245                     _startBigTimer:	
  1790                           
  1791                           ;common.c: 187: uiBigTimer = 34200;
  1792                           
  1793                           ; Regs used in _startBigTimer: [wreg]
  1794  0245  3098               	movlw	152
  1795  0246  00F6               	movwf	_uiBigTimer
  1796  0247  3085               	movlw	133
  1797  0248  00F7               	movwf	_uiBigTimer+1
  1798  0249  0008               	return
  1799  024A                     __end_of_startBigTimer:	
  1800                           
  1801                           	psect	text507
  1802  0259                     __ptext507:	
  1803 ;; =============== function _startBigTimer ends ============
  1804                           
  1805                           
  1806 ;; *************** function _setDAC0_ChannelValue *****************
  1807 ;; Defined at:
  1808 ;;		line 181 in file "C:\sw_dev\AK7030-OTP\common.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;  ucValue         1    wreg     unsigned char 
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;  ucValue         1    0[BANK0 ] unsigned char 
  1813 ;; Return value:  Size  Location     Type
  1814 ;;		None               void
  1815 ;; Registers used:
  1816 ;;		wreg
  1817 ;; Tracked objects:
  1818 ;;		On entry : 60/0
  1819 ;;		On exit  : 60/20
  1820 ;;		Unchanged: FFF9F/0
  1821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1822 ;;      Params:         0       0       0       0       0
  1823 ;;      Locals:         0       1       0       0       0
  1824 ;;      Temps:          0       0       0       0       0
  1825 ;;      Totals:         0       1       0       0       0
  1826 ;;Total ram usage:        1 bytes
  1827 ;; Hardware stack levels used:    1
  1828 ;; Hardware stack levels required when called:    2
  1829 ;; This function calls:
  1830 ;;		Nothing
  1831 ;; This function is called by:
  1832 ;;		_main
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835  0259                     _setDAC0_ChannelValue:	
  1836                           
  1837                           ; Regs used in _setDAC0_ChannelValue: [wreg]
  1838                           ;setDAC0_ChannelValue@ucValue stored from wreg
  1839  0259  00C0               	movwf	setDAC0_ChannelValue@ucValue
  1840                           
  1841                           ;common.c: 182: DACR0=ucValue;
  1842  025A  1683               	bsf	3,5	;RP0=1, select bank1
  1843  025B  0088               	movwf	8	;volatile
  1844  025C  0008               	return
  1845  025D                     __end_of_setDAC0_ChannelValue:	
  1846                           
  1847                           	psect	text508
  1848  024A                     __ptext508:	
  1849 ;; =============== function _setDAC0_ChannelValue ends ============
  1850                           
  1851                           
  1852 ;; *************** function _getAdOriginalCh13Value *****************
  1853 ;; Defined at:
  1854 ;;		line 87 in file "C:\sw_dev\AK7030-OTP\common.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;		None
  1857 ;; Auto vars:     Size  Location     Type
  1858 ;;		None
  1859 ;; Return value:  Size  Location     Type
  1860 ;;                  2    0[BANK0 ] unsigned int 
  1861 ;; Registers used:
  1862 ;;		wreg
  1863 ;; Tracked objects:
  1864 ;;		On entry : 60/0
  1865 ;;		On exit  : 60/0
  1866 ;;		Unchanged: FFF9F/0
  1867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1868 ;;      Params:         0       2       0       0       0
  1869 ;;      Locals:         0       0       0       0       0
  1870 ;;      Temps:          0       0       0       0       0
  1871 ;;      Totals:         0       2       0       0       0
  1872 ;;Total ram usage:        2 bytes
  1873 ;; Hardware stack levels used:    1
  1874 ;; Hardware stack levels required when called:    2
  1875 ;; This function calls:
  1876 ;;		Nothing
  1877 ;; This function is called by:
  1878 ;;		_main
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881  024A                     _getAdOriginalCh13Value:	
  1882                           
  1883                           ;common.c: 88: return adc_original_CH13_value;
  1884                           
  1885                           ; Regs used in _getAdOriginalCh13Value: [wreg]
  1886  024A  082D               	movf	_adc_original_CH13_value+1,w
  1887  024B  00C1               	movwf	?_getAdOriginalCh13Value+1
  1888  024C  082C               	movf	_adc_original_CH13_value,w
  1889  024D  00C0               	movwf	?_getAdOriginalCh13Value
  1890  024E  0008               	return
  1891  024F                     __end_of_getAdOriginalCh13Value:	
  1892                           
  1893                           	psect	text509
  1894  025D                     __ptext509:	
  1895 ;; =============== function _getAdOriginalCh13Value ends ============
  1896                           
  1897                           
  1898 ;; *************** function _clearSmallTimer *****************
  1899 ;; Defined at:
  1900 ;;		line 202 in file "C:\sw_dev\AK7030-OTP\common.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;		None
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;		None
  1905 ;; Return value:  Size  Location     Type
  1906 ;;		None               void
  1907 ;; Registers used:
  1908 ;;		status,2
  1909 ;; Tracked objects:
  1910 ;;		On entry : 60/0
  1911 ;;		On exit  : 60/0
  1912 ;;		Unchanged: FFF9F/0
  1913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1914 ;;      Params:         0       0       0       0       0
  1915 ;;      Locals:         0       0       0       0       0
  1916 ;;      Temps:          0       0       0       0       0
  1917 ;;      Totals:         0       0       0       0       0
  1918 ;;Total ram usage:        0 bytes
  1919 ;; Hardware stack levels used:    1
  1920 ;; Hardware stack levels required when called:    2
  1921 ;; This function calls:
  1922 ;;		Nothing
  1923 ;; This function is called by:
  1924 ;;		_main
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927  025D                     _clearSmallTimer:	
  1928                           
  1929                           ;common.c: 203: uiSmallTimer = 0;
  1930                           
  1931                           ; Regs used in _clearSmallTimer: [status,2]
  1932  025D  01B4               	clrf	_uiSmallTimer
  1933  025E  01B5               	clrf	_uiSmallTimer+1
  1934  025F  0008               	return
  1935  0260                     __end_of_clearSmallTimer:	
  1936                           
  1937                           	psect	text510
  1938  0260                     __ptext510:	
  1939 ;; =============== function _clearSmallTimer ends ============
  1940                           
  1941                           
  1942 ;; *************** function _clearBigTimer *****************
  1943 ;; Defined at:
  1944 ;;		line 196 in file "C:\sw_dev\AK7030-OTP\common.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;		None
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;		None
  1949 ;; Return value:  Size  Location     Type
  1950 ;;		None               void
  1951 ;; Registers used:
  1952 ;;		status,2
  1953 ;; Tracked objects:
  1954 ;;		On entry : 60/0
  1955 ;;		On exit  : 60/0
  1956 ;;		Unchanged: FFF9F/0
  1957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1958 ;;      Params:         0       0       0       0       0
  1959 ;;      Locals:         0       0       0       0       0
  1960 ;;      Temps:          0       0       0       0       0
  1961 ;;      Totals:         0       0       0       0       0
  1962 ;;Total ram usage:        0 bytes
  1963 ;; Hardware stack levels used:    1
  1964 ;; Hardware stack levels required when called:    2
  1965 ;; This function calls:
  1966 ;;		Nothing
  1967 ;; This function is called by:
  1968 ;;		_main
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971  0260                     _clearBigTimer:	
  1972                           
  1973                           ;common.c: 197: uiBigTimer = 0;
  1974                           
  1975                           ; Regs used in _clearBigTimer: [status,2]
  1976  0260  01F6               	clrf	_uiBigTimer
  1977  0261  01F7               	clrf	_uiBigTimer+1
  1978  0262  0008               	return
  1979  0263                     __end_of_clearBigTimer:	
  1980                           
  1981                           	psect	text511
  1982  0266                     __ptext511:	
  1983 ;; =============== function _clearBigTimer ends ============
  1984                           
  1985                           
  1986 ;; *************** function _clrSampeTime *****************
  1987 ;; Defined at:
  1988 ;;		line 244 in file "C:\sw_dev\AK7030-OTP\common.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;		None
  1991 ;; Auto vars:     Size  Location     Type
  1992 ;;		None
  1993 ;; Return value:  Size  Location     Type
  1994 ;;		None               void
  1995 ;; Registers used:
  1996 ;;		status,2
  1997 ;; Tracked objects:
  1998 ;;		On entry : 0/0
  1999 ;;		On exit  : 0/0
  2000 ;;		Unchanged: FFFFF/0
  2001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2002 ;;      Params:         0       0       0       0       0
  2003 ;;      Locals:         0       0       0       0       0
  2004 ;;      Temps:          0       0       0       0       0
  2005 ;;      Totals:         0       0       0       0       0
  2006 ;;Total ram usage:        0 bytes
  2007 ;; Hardware stack levels used:    1
  2008 ;; Hardware stack levels required when called:    2
  2009 ;; This function calls:
  2010 ;;		Nothing
  2011 ;; This function is called by:
  2012 ;;		_main
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015  0266                     _clrSampeTime:	
  2016                           
  2017                           ;common.c: 245: timer.timer10msStopWatch = 0;
  2018                           
  2019                           ; Regs used in _clrSampeTime: [status,2]
  2020  0266  01FA               	clrf	_timer
  2021  0267  0008               	return
  2022  0268                     __end_of_clrSampeTime:	
  2023                           
  2024                           	psect	text512
  2025  024F                     __ptext512:	
  2026 ;; =============== function _clrSampeTime ends ============
  2027                           
  2028                           
  2029 ;; *************** function _isPermitSampleTime *****************
  2030 ;; Defined at:
  2031 ;;		line 234 in file "C:\sw_dev\AK7030-OTP\common.c"
  2032 ;; Parameters:    Size  Location     Type
  2033 ;;		None
  2034 ;; Auto vars:     Size  Location     Type
  2035 ;;		None
  2036 ;; Return value:  Size  Location     Type
  2037 ;;                  1    wreg      unsigned char 
  2038 ;; Registers used:
  2039 ;;		wreg
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: FFFFF/0
  2044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2045 ;;      Params:         0       0       0       0       0
  2046 ;;      Locals:         0       0       0       0       0
  2047 ;;      Temps:          0       0       0       0       0
  2048 ;;      Totals:         0       0       0       0       0
  2049 ;;Total ram usage:        0 bytes
  2050 ;; Hardware stack levels used:    1
  2051 ;; Hardware stack levels required when called:    2
  2052 ;; This function calls:
  2053 ;;		Nothing
  2054 ;; This function is called by:
  2055 ;;		_main
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058  024F                     _isPermitSampleTime:	
  2059                           
  2060                           ;common.c: 235: if(timer.timer10msStopWatch > 10)
  2061                           
  2062                           ; Regs used in _isPermitSampleTime: [wreg]
  2063  024F  300B               	movlw	11
  2064  0250  027A               	subwf	_timer,w
  2065  0251  1803               	btfsc	3,0
  2066                           
  2067                           ;common.c: 236: {
  2068                           ;common.c: 237: return 1;
  2069  0252  3401               	retlw	1
  2070                           
  2071                           ;common.c: 239: else
  2072                           ;common.c: 240: return 0;
  2073  0253  3400               	retlw	0
  2074  0254                     __end_of_isPermitSampleTime:	
  2075                           
  2076                           	psect	text514
  2077  021C                     __ptext514:	
  2078 ;; =============== function _adc_start ends ============
  2079                           
  2080                           
  2081 ;; *************** function _op2_init *****************
  2082 ;; Defined at:
  2083 ;;		line 45 in file "C:\sw_dev\AK7030-OTP\periph.c"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;		None
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;		None
  2088 ;; Return value:  Size  Location     Type
  2089 ;;		None               void
  2090 ;; Registers used:
  2091 ;;		wreg, status,2
  2092 ;; Tracked objects:
  2093 ;;		On entry : 17F/20
  2094 ;;		On exit  : 17F/20
  2095 ;;		Unchanged: FFE80/0
  2096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2097 ;;      Params:         0       0       0       0       0
  2098 ;;      Locals:         0       0       0       0       0
  2099 ;;      Temps:          0       0       0       0       0
  2100 ;;      Totals:         0       0       0       0       0
  2101 ;;Total ram usage:        0 bytes
  2102 ;; Hardware stack levels used:    1
  2103 ;; Hardware stack levels required when called:    2
  2104 ;; This function calls:
  2105 ;;		Nothing
  2106 ;; This function is called by:
  2107 ;;		_main
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110  021C                     _op2_init:	
  2111                           
  2112                           ;periph.c: 52: OP2CON1=0x00;
  2113                           
  2114                           ; Regs used in _op2_init: [wreg+status,2]
  2115  021C  019C               	clrf	28	;volatile
  2116                           
  2117                           ;periph.c: 54: OP2CON2=0xA0;
  2118  021D  30A0               	movlw	160
  2119  021E  009D               	movwf	29	;volatile
  2120                           
  2121                           ;periph.c: 55: OP2CON0=0x80;
  2122  021F  3080               	movlw	128
  2123  0220  009B               	movwf	27	;volatile
  2124                           
  2125                           ;periph.c: 58: TRISA7=0;
  2126  0221  1385               	bcf	5,7
  2127                           
  2128                           ;periph.c: 59: TRISB6=1;
  2129  0222  1706               	bsf	6,6
  2130                           
  2131                           ;periph.c: 60: TRISB7 = 1;
  2132  0223  1786               	bsf	6,7
  2133  0224  0008               	return
  2134  0225                     __end_of_op2_init:	
  2135                           
  2136                           	psect	text515
  2137  0206                     __ptext515:	
  2138 ;; =============== function _op2_init ends ============
  2139                           
  2140                           
  2141 ;; *************** function _op1_init *****************
  2142 ;; Defined at:
  2143 ;;		line 26 in file "C:\sw_dev\AK7030-OTP\periph.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;		None
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;		None
  2148 ;; Return value:  Size  Location     Type
  2149 ;;		None               void
  2150 ;; Registers used:
  2151 ;;		wreg
  2152 ;; Tracked objects:
  2153 ;;		On entry : 17F/20
  2154 ;;		On exit  : 17F/20
  2155 ;;		Unchanged: FFE80/0
  2156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2157 ;;      Params:         0       0       0       0       0
  2158 ;;      Locals:         0       0       0       0       0
  2159 ;;      Temps:          0       0       0       0       0
  2160 ;;      Totals:         0       0       0       0       0
  2161 ;;Total ram usage:        0 bytes
  2162 ;; Hardware stack levels used:    1
  2163 ;; Hardware stack levels required when called:    2
  2164 ;; This function calls:
  2165 ;;		Nothing
  2166 ;; This function is called by:
  2167 ;;		_main
  2168 ;; This function uses a non-reentrant model
  2169 ;;
  2170  0206                     _op1_init:	
  2171                           
  2172                           ;periph.c: 33: OP1CON1=0x02;
  2173                           
  2174                           ; Regs used in _op1_init: [wreg]
  2175  0206  3002               	movlw	2
  2176  0207  1283               	bcf	3,5	;RP0=0, select bank0
  2177  0208  009C               	movwf	28	;volatile
  2178                           
  2179                           ;periph.c: 34: OP1CON2=0xA0;
  2180  0209  30A0               	movlw	160
  2181  020A  009D               	movwf	29	;volatile
  2182                           
  2183                           ;periph.c: 35: OP1CON0=0x80;
  2184  020B  3080               	movlw	128
  2185  020C  009B               	movwf	27	;volatile
  2186                           
  2187                           ;periph.c: 38: TRISB3=1;
  2188  020D  1683               	bsf	3,5	;RP0=1, select bank1
  2189  020E  1586               	bsf	6,3
  2190                           
  2191                           ;periph.c: 39: TRISB4=1;
  2192  020F  1606               	bsf	6,4
  2193                           
  2194                           ;periph.c: 40: TRISB5=0;
  2195  0210  1286               	bcf	6,5
  2196  0211  0008               	return
  2197  0212                     __end_of_op1_init:	
  2198                           
  2199                           	psect	text516
  2200  0254                     __ptext516:	
  2201 ;; =============== function _op1_init ends ============
  2202                           
  2203                           
  2204 ;; *************** function _dac_init *****************
  2205 ;; Defined at:
  2206 ;;		line 14 in file "C:\sw_dev\AK7030-OTP\periph.c"
  2207 ;; Parameters:    Size  Location     Type
  2208 ;;		None
  2209 ;; Auto vars:     Size  Location     Type
  2210 ;;		None
  2211 ;; Return value:  Size  Location     Type
  2212 ;;		None               void
  2213 ;; Registers used:
  2214 ;;		wreg
  2215 ;; Tracked objects:
  2216 ;;		On entry : 17F/20
  2217 ;;		On exit  : 17F/20
  2218 ;;		Unchanged: FFE80/0
  2219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2220 ;;      Params:         0       0       0       0       0
  2221 ;;      Locals:         0       0       0       0       0
  2222 ;;      Temps:          0       0       0       0       0
  2223 ;;      Totals:         0       0       0       0       0
  2224 ;;Total ram usage:        0 bytes
  2225 ;; Hardware stack levels used:    1
  2226 ;; Hardware stack levels required when called:    2
  2227 ;; This function calls:
  2228 ;;		Nothing
  2229 ;; This function is called by:
  2230 ;;		_main
  2231 ;; This function uses a non-reentrant model
  2232 ;;
  2233  0254                     _dac_init:	
  2234                           
  2235                           ;periph.c: 15: DACCON|=2;
  2236                           
  2237                           ; Regs used in _dac_init: [wreg]
  2238  0254  1487               	bsf	7,1	;volatile
  2239                           
  2240                           ;periph.c: 17: DACR0=0x19;
  2241  0255  3019               	movlw	25
  2242  0256  0088               	movwf	8	;volatile
  2243                           
  2244                           ;periph.c: 18: DACCON|=(1)<<2;
  2245  0257  1507               	bsf	7,2	;volatile
  2246  0258  0008               	return
  2247  0259                     __end_of_dac_init:	
  2248                           
  2249                           	psect	text517
  2250  01E2                     __ptext517:	
  2251 ;; =============== function _dac_init ends ============
  2252                           
  2253                           
  2254 ;; *************** function _adc_test_init *****************
  2255 ;; Defined at:
  2256 ;;		line 85 in file "C:\sw_dev\AK7030-OTP\periph.c"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;  channel         1    wreg     unsigned char 
  2259 ;;  ref             1    0[BANK0 ] unsigned char 
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;  channel         1    2[BANK0 ] unsigned char 
  2262 ;; Return value:  Size  Location     Type
  2263 ;;		None               void
  2264 ;; Registers used:
  2265 ;;		wreg, status,2, status,0
  2266 ;; Tracked objects:
  2267 ;;		On entry : 17F/0
  2268 ;;		On exit  : 17F/20
  2269 ;;		Unchanged: FFE80/0
  2270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2271 ;;      Params:         0       1       0       0       0
  2272 ;;      Locals:         0       1       0       0       0
  2273 ;;      Temps:          0       1       0       0       0
  2274 ;;      Totals:         0       3       0       0       0
  2275 ;;Total ram usage:        3 bytes
  2276 ;; Hardware stack levels used:    1
  2277 ;; Hardware stack levels required when called:    2
  2278 ;; This function calls:
  2279 ;;		Nothing
  2280 ;; This function is called by:
  2281 ;;		_main
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284  01E2                     _adc_test_init:	
  2285                           
  2286                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  2287                           ;adc_test_init@channel stored from wreg
  2288  01E2  00C2               	movwf	adc_test_init@channel
  2289                           
  2290                           ;periph.c: 86: ADCON0|=channel<<2;
  2291  01E3  00C1               	movwf	??_adc_test_init
  2292  01E4  1003               	clrc
  2293  01E5  0DC1               	rlf	??_adc_test_init,f
  2294  01E6  1003               	clrc
  2295  01E7  0D41               	rlf	??_adc_test_init,w
  2296  01E8  049F               	iorwf	31,f	;volatile
  2297                           
  2298                           ;periph.c: 87: ADCON1|=ref<<6;
  2299  01E9  0840               	movf	adc_test_init@ref,w
  2300  01EA  00C1               	movwf	??_adc_test_init
  2301  01EB  0CC1               	rrf	??_adc_test_init,f
  2302  01EC  0CC1               	rrf	??_adc_test_init,f
  2303  01ED  0C41               	rrf	??_adc_test_init,w
  2304  01EE  39C0               	andlw	192
  2305  01EF  1683               	bsf	3,5	;RP0=1, select bank1
  2306  01F0  049F               	iorwf	31,f	;volatile
  2307                           
  2308                           ;periph.c: 88: ADON=1;
  2309  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  2310  01F2  141F               	bsf	31,0
  2311                           
  2312                           ;periph.c: 89: ADIE=1;
  2313  01F3  1683               	bsf	3,5	;RP0=1, select bank1
  2314  01F4  150D               	bsf	13,2
  2315  01F5  0008               	return
  2316  01F6                     __end_of_adc_test_init:	
  2317                           
  2318                           	psect	text518
  2319  0263                     __ptext518:	
  2320 ;; =============== function _adc_test_init ends ============
  2321                           
  2322                           
  2323 ;; *************** function _timer1_interrupt_config *****************
  2324 ;; Defined at:
  2325 ;;		line 56 in file "C:\sw_dev\AK7030-OTP\common.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;		None
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;		None
  2330 ;; Return value:  Size  Location     Type
  2331 ;;		None               void
  2332 ;; Registers used:
  2333 ;;		None
  2334 ;; Tracked objects:
  2335 ;;		On entry : 17F/20
  2336 ;;		On exit  : 17F/20
  2337 ;;		Unchanged: FFE80/0
  2338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2339 ;;      Params:         0       0       0       0       0
  2340 ;;      Locals:         0       0       0       0       0
  2341 ;;      Temps:          0       0       0       0       0
  2342 ;;      Totals:         0       0       0       0       0
  2343 ;;Total ram usage:        0 bytes
  2344 ;; Hardware stack levels used:    1
  2345 ;; Hardware stack levels required when called:    2
  2346 ;; This function calls:
  2347 ;;		Nothing
  2348 ;; This function is called by:
  2349 ;;		_main
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352  0263                     _timer1_interrupt_config:	
  2353                           
  2354                           ;common.c: 57: GIE = 1;
  2355                           
  2356                           ; Regs used in _timer1_interrupt_config: []
  2357  0263  178B               	bsf	11,7
  2358                           
  2359                           ;common.c: 58: PEIE = 1;
  2360  0264  170B               	bsf	11,6
  2361  0265  0008               	return
  2362  0266                     __end_of_timer1_interrupt_config:	
  2363                           
  2364                           	psect	text519
  2365  0212                     __ptext519:	
  2366 ;; =============== function _timer1_interrupt_config ends ============
  2367                           
  2368                           
  2369 ;; *************** function _timer1_config *****************
  2370 ;; Defined at:
  2371 ;;		line 44 in file "C:\sw_dev\AK7030-OTP\common.c"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;		None
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;		None
  2376 ;; Return value:  Size  Location     Type
  2377 ;;		None               void
  2378 ;; Registers used:
  2379 ;;		wreg
  2380 ;; Tracked objects:
  2381 ;;		On entry : 17F/40
  2382 ;;		On exit  : 17F/20
  2383 ;;		Unchanged: FFE80/0
  2384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2385 ;;      Params:         0       0       0       0       0
  2386 ;;      Locals:         0       0       0       0       0
  2387 ;;      Temps:          0       0       0       0       0
  2388 ;;      Totals:         0       0       0       0       0
  2389 ;;Total ram usage:        0 bytes
  2390 ;; Hardware stack levels used:    1
  2391 ;; Hardware stack levels required when called:    2
  2392 ;; This function calls:
  2393 ;;		Nothing
  2394 ;; This function is called by:
  2395 ;;		_main
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398  0212                     _timer1_config:	
  2399                           
  2400                           ;common.c: 46: TMR1H=0xCF;
  2401                           
  2402                           ; Regs used in _timer1_config: [wreg]
  2403  0212  30CF               	movlw	207
  2404  0213  1303               	bcf	3,6	;RP1=0, select bank0
  2405  0214  008F               	movwf	15	;volatile
  2406                           
  2407                           ;common.c: 47: TMR1L=0x2C;
  2408  0215  302C               	movlw	44
  2409  0216  008E               	movwf	14	;volatile
  2410                           
  2411                           ;common.c: 48: T1CON=0xE1;
  2412  0217  30E1               	movlw	225
  2413  0218  0090               	movwf	16	;volatile
  2414                           
  2415                           ;common.c: 49: TMR1IE=1;
  2416  0219  1683               	bsf	3,5	;RP0=1, select bank1
  2417  021A  140C               	bsf	12,0
  2418  021B  0008               	return
  2419  021C                     __end_of_timer1_config:	
  2420                           
  2421                           	psect	text520
  2422  022D                     __ptext520:	
  2423 ;; =============== function _timer1_config ends ============
  2424                           
  2425                           
  2426 ;; *************** function _clock_config *****************
  2427 ;; Defined at:
  2428 ;;		line 36 in file "C:\sw_dev\AK7030-OTP\common.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;		None
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;		None
  2433 ;; Return value:  Size  Location     Type
  2434 ;;		None               void
  2435 ;; Registers used:
  2436 ;;		wreg, status,2
  2437 ;; Tracked objects:
  2438 ;;		On entry : 17F/20
  2439 ;;		On exit  : 17F/40
  2440 ;;		Unchanged: FFE80/0
  2441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2442 ;;      Params:         0       0       0       0       0
  2443 ;;      Locals:         0       0       0       0       0
  2444 ;;      Temps:          0       0       0       0       0
  2445 ;;      Totals:         0       0       0       0       0
  2446 ;;Total ram usage:        0 bytes
  2447 ;; Hardware stack levels used:    1
  2448 ;; Hardware stack levels required when called:    2
  2449 ;; This function calls:
  2450 ;;		Nothing
  2451 ;; This function is called by:
  2452 ;;		_main
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455  022D                     _clock_config:	
  2456                           
  2457                           ;common.c: 38: CLKPR = 0x80;
  2458                           
  2459                           ; Regs used in _clock_config: [wreg+status,2]
  2460  022D  3080               	movlw	128
  2461  022E  1283               	bcf	3,5	;RP0=0, select bank2
  2462  022F  1703               	bsf	3,6	;RP1=1, select bank2
  2463  0230  0088               	movwf	8	;volatile
  2464                           
  2465                           ;common.c: 39: CLKPR = 0x00;
  2466  0231  0188               	clrf	8	;volatile
  2467  0232                     l1396:	
  2468                           ;common.c: 40: while(CLKPCE);
  2469                           
  2470  0232  1F88               	btfss	8,7
  2471  0233  0008               	return
  2472  0234  2A32               	goto	l1396
  2473  0235                     __end_of_clock_config:	
  2474                           
  2475                           	psect	text521
  2476  017F                     __ptext521:	
  2477 ;; =============== function _clock_config ends ============
  2478                           
  2479                           
  2480 ;; *************** function _ISR *****************
  2481 ;; Defined at:
  2482 ;;		line 249 in file "C:\sw_dev\AK7030-OTP\common.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;		None
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;		None
  2487 ;; Return value:  Size  Location     Type
  2488 ;;		None               void
  2489 ;; Registers used:
  2490 ;;		wreg, status,2, status,0, pclath, cstack
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 40/0
  2494 ;;		Unchanged: FFF9F/0
  2495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2496 ;;      Params:         0       0       0       0       0
  2497 ;;      Locals:         0       0       0       0       0
  2498 ;;      Temps:          2       0       0       0       0
  2499 ;;      Totals:         2       0       0       0       0
  2500 ;;Total ram usage:        2 bytes
  2501 ;; Hardware stack levels used:    1
  2502 ;; Hardware stack levels required when called:    1
  2503 ;; This function calls:
  2504 ;;		i1_setAD_ConvertFlag
  2505 ;;		_adc_get
  2506 ;; This function is called by:
  2507 ;;		Interrupt level 1
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510  017F                     _ISR:	
  2511                           
  2512                           ;common.c: 250: static unsigned char ucTimer1sCnt = 0;
  2513                           ;common.c: 252: if(TMR1IF == 1)
  2514  017F  1283               	bcf	3,5	;RP0=0, select bank0
  2515  0180  1303               	bcf	3,6	;RP1=0, select bank0
  2516  0181  1C0C               	btfss	12,0
  2517  0182  299F               	goto	i1l3032
  2518  0183  3064               	movlw	100
  2519                           
  2520                           ;common.c: 253: {
  2521                           ;common.c: 254: TMR1IF = 0 ;
  2522  0184  100C               	bcf	12,0
  2523                           
  2524                           ;common.c: 255: timer.timer10msStopWatch++;
  2525  0185  0AFA               	incf	_timer,f
  2526                           
  2527                           ;common.c: 256: ucTimer1sCnt++;
  2528  0186  0AF8               	incf	ISR@ucTimer1sCnt,f
  2529                           
  2530                           ;common.c: 258: if(ucTimer1sCnt >= 100)
  2531  0187  0278               	subwf	ISR@ucTimer1sCnt,w
  2532  0188  1C03               	skipc
  2533  0189  299F               	goto	i1l3032
  2534                           
  2535                           ;common.c: 259: {
  2536                           ;common.c: 260: ucTimer1sCnt = 0;
  2537  018A  01F8               	clrf	ISR@ucTimer1sCnt
  2538                           
  2539                           ;common.c: 261: if(uiBigTimer > 0)
  2540  018B  0877               	movf	_uiBigTimer+1,w
  2541  018C  0476               	iorwf	_uiBigTimer,w
  2542  018D  1903               	skipnz
  2543  018E  2995               	goto	i1l1484
  2544                           
  2545                           ;common.c: 262: uiBigTimer--;
  2546  018F  3001               	movlw	1
  2547  0190  02F6               	subwf	_uiBigTimer,f
  2548  0191  3000               	movlw	0
  2549  0192  1C03               	skipc
  2550  0193  03F7               	decf	_uiBigTimer+1,f
  2551  0194  02F7               	subwf	_uiBigTimer+1,f
  2552  0195                     i1l1484:	
  2553                           
  2554                           ;common.c: 264: if(uiSmallTimer)
  2555  0195  0835               	movf	_uiSmallTimer+1,w
  2556  0196  0434               	iorwf	_uiSmallTimer,w
  2557  0197  1903               	skipnz
  2558  0198  299F               	goto	i1l3032
  2559                           
  2560                           ;common.c: 265: uiSmallTimer--;
  2561  0199  3001               	movlw	1
  2562  019A  02B4               	subwf	_uiSmallTimer,f
  2563  019B  3000               	movlw	0
  2564  019C  1C03               	skipc
  2565  019D  03B5               	decf	_uiSmallTimer+1,f
  2566  019E  02B5               	subwf	_uiSmallTimer+1,f
  2567  019F                     i1l3032:	
  2568                           
  2569                           ;common.c: 266: }
  2570                           ;common.c: 267: }
  2571                           ;common.c: 269: if(ADIF)
  2572  019F  1D0D               	btfss	13,2
  2573  01A0  29B9               	goto	i1l1489
  2574  01A1  3001               	movlw	1
  2575                           
  2576                           ;common.c: 270: {
  2577                           ;common.c: 271: ADIF=0;
  2578  01A2  110D               	bcf	13,2
  2579                           
  2580                           ;common.c: 272: setAD_ConvertFlag(1);
  2581  01A3  21CB  118A         	fcall	i1_setAD_ConvertFlag
  2582                           
  2583                           ;common.c: 273: adc_original_value = adc_get();
  2584  01A5  21C0  118A         	fcall	_adc_get
  2585  01A7  0871               	movf	?_adc_get+1,w
  2586  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  2587  01A9  00AF               	movwf	_adc_original_value+1
  2588  01AA  0870               	movf	?_adc_get,w
  2589  01AB  00AE               	movwf	_adc_original_value
  2590                           
  2591                           ;common.c: 274: if(sampleChannelSelect == 12)
  2592  01AC  0845               	movf	_sampleChannelSelect,w
  2593  01AD  3A0C               	xorlw	12
  2594  01AE  1D03               	skipz
  2595  01AF  29B3               	goto	i1l3044
  2596                           
  2597                           ;common.c: 275: adc_original_CH12_value = adc_get();
  2598  01B0  21C0  118A         	fcall	_adc_get
  2599  01B2  29B9               	goto	i1l1489
  2600  01B3                     i1l3044:	
  2601                           
  2602                           ;common.c: 276: else
  2603                           ;common.c: 277: adc_original_CH13_value = adc_get();
  2604  01B3  21C0               	fcall	_adc_get
  2605  01B4  0871               	movf	?_adc_get+1,w
  2606  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  2607  01B6  00AD               	movwf	_adc_original_CH13_value+1
  2608  01B7  0870               	movf	?_adc_get,w
  2609  01B8  00AC               	movwf	_adc_original_CH13_value
  2610  01B9                     i1l1489:	
  2611  01B9  0875               	movf	??_ISR+1,w
  2612  01BA  008A               	movwf	10
  2613  01BB  0E74               	swapf	??_ISR^(0+-128),w
  2614  01BC  0083               	movwf	3
  2615  01BD  0EFE               	swapf	126,f
  2616  01BE  0E7E               	swapf	126,w
  2617  01BF  0009               	retfie
  2618  01C0                     __end_of_ISR:	
  2619  01C0                     __ptext523:	
  2620 ;; =============== function i1_setAD_ConvertFlag ends ============
  2621                           
  2622                           
  2623 ;; *************** function _adc_get *****************
  2624 ;; Defined at:
  2625 ;;		line 104 in file "C:\sw_dev\AK7030-OTP\periph.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;		None
  2628 ;; Auto vars:     Size  Location     Type
  2629 ;;  val             2    2[COMMON] unsigned int 
  2630 ;; Return value:  Size  Location     Type
  2631 ;;                  2    0[COMMON] unsigned int 
  2632 ;; Registers used:
  2633 ;;		wreg
  2634 ;; Tracked objects:
  2635 ;;		On entry : 60/0
  2636 ;;		On exit  : 60/20
  2637 ;;		Unchanged: FFF9F/0
  2638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2639 ;;      Params:         2       0       0       0       0
  2640 ;;      Locals:         2       0       0       0       0
  2641 ;;      Temps:          0       0       0       0       0
  2642 ;;      Totals:         4       0       0       0       0
  2643 ;;Total ram usage:        4 bytes
  2644 ;; Hardware stack levels used:    1
  2645 ;; This function calls:
  2646 ;;		Nothing
  2647 ;; This function is called by:
  2648 ;;		_ISR
  2649 ;; This function uses a non-reentrant model
  2650 ;;
  2651  01C0                     _adc_get:	
  2652                           
  2653                           ;periph.c: 105: unsigned int val;
  2654                           ;periph.c: 106: val = (ADRESH<<8) | ADRESL;
  2655                           
  2656                           ; Regs used in _adc_get: [wreg]
  2657  01C0  081E               	movf	30,w	;volatile
  2658  01C1  00F3               	movwf	adc_get@val+1
  2659  01C2  01F2               	clrf	adc_get@val
  2660  01C3  1683               	bsf	3,5	;RP0=1, select bank1
  2661  01C4  081E               	movf	30,w	;volatile
  2662  01C5  04F2               	iorwf	adc_get@val,f
  2663                           
  2664                           ;periph.c: 107: return val;
  2665  01C6  0873               	movf	adc_get@val+1,w
  2666  01C7  00F1               	movwf	?_adc_get+1
  2667  01C8  0872               	movf	adc_get@val,w
  2668  01C9  00F0               	movwf	?_adc_get
  2669  01CA  0008               	return
  2670  01CB                     __end_of_adc_get:	
  2671  01CB                     __ptext522:	
  2672 ;; =============== function _ISR ends ============
  2673                           
  2674                           
  2675 ;; *************** function i1_setAD_ConvertFlag *****************
  2676 ;; Defined at:
  2677 ;;		line 70 in file "C:\sw_dev\AK7030-OTP\common.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;  setAD_Conver    1    wreg     unsigned char 
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  2682 ;; Return value:  Size  Location     Type
  2683 ;;		None               void
  2684 ;; Registers used:
  2685 ;;		wreg
  2686 ;; Tracked objects:
  2687 ;;		On entry : 60/0
  2688 ;;		On exit  : 60/0
  2689 ;;		Unchanged: FFF9F/0
  2690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2691 ;;      Params:         0       0       0       0       0
  2692 ;;      Locals:         1       0       0       0       0
  2693 ;;      Temps:          0       0       0       0       0
  2694 ;;      Totals:         1       0       0       0       0
  2695 ;;Total ram usage:        1 bytes
  2696 ;; Hardware stack levels used:    1
  2697 ;; This function calls:
  2698 ;;		Nothing
  2699 ;; This function is called by:
  2700 ;;		_ISR
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703  01CB                     i1_setAD_ConvertFlag:	
  2704                           
  2705                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  2706                           ;i1setAD_ConvertFlag@flag stored from wreg
  2707  01CB  00F0               	movwf	i1setAD_ConvertFlag@flag
  2708                           
  2709                           ;common.c: 71: adc_convert_flag = flag;
  2710  01CC  00F9               	movwf	_adc_convert_flag
  2711  01CD  0008               	return
  2712  01CE                     __end_ofi1_setAD_ConvertFlag:	
  2713                           
  2714                           	psect	intentry
  2715  0004                     __pintentry:	
  2716                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  2717                           
  2718  0004                     interrupt_function:	
  2719  007E                     saved_w	set	btemp
  2720  0004  00FE               	movwf	btemp
  2721  0005  0E03               	swapf	3,w
  2722  0006  00F4               	movwf	??_ISR
  2723  0007  080A               	movf	10,w
  2724  0008  00F5               	movwf	??_ISR+1
  2725  0009  118A  297F         	ljmp	_ISR
  2726                           
  2727                           	psect	text524
  2728  0000                     __ptext524:	
  2729 ;; =============== function _adc_get ends ============
  2730                           
  2731  007E                     btemp	set	126	;btemp
  2732  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Thu Dec 20 15:53:09 2018

                     ??_clock_config 0040                                    pc 0002  
                                 _GO 00F9                                   fsr 0004  
                ?_getAdOriginalValue 0040             ?_timer1_interrupt_config 0070  
                                l720 00D2                                  l706 0096  
                                l726 00DD                                  l719 00C8  
                                l674 0103                                  l693 0059  
                                l685 004D                                  l687 004E  
                                l679 0042                                  _PA0 0028  
                                _PA1 0029                                  _GIE 005F  
                                _PA2 002A                                  _PA3 002B  
                                _PB2 0032                                  _ISR 017F  
                                u545 013A                                  u555 014D  
                                fsr0 0004                                  indf 0000  
           main@ucBigTimerActionFlag 0039                        _startBigTimer 0245  
                               S3304 01CE                          main@ampStep 0037  
                               ?_ISR 0070                   __size_of_AD_Sample 0058  
                               l2120 0000                                 l1402 0000  
                               l2114 0000                                 l3010 0000  
                               l1411 0000                                 l1420 0000  
                               l3012 0000                                 l3100 0000  
                               l1405 0000                                 l2117 0000  
                               l2134 0000                                 l3006 0000  
                               l1414 0000                                 l3110 0000  
                               l3102 0000                                 l2128 0000  
                               l1408 0000                                 l3120 0000  
                               l3112 0000                                 l3104 0000  
                               l1450 0000                                 l3210 0000  
                               l3202 009D                                 l3130 0000  
                               l3114 0000                                 l3106 0000  
                               l3060 0133                                 l3052 0000  
                               l3204 00A3                                 l3140 0047  
                               l3132 0000                                 l3124 0000  
                               l3116 0000                                 l3108 0000  
                               l1453 0000                                 l1429 0145  
                               l3230 0000                                 l3214 00AE  
                               l3150 0052                                 l3134 003F  
                               l3126 0036                                 l3118 00E8  
                               l1447 0000                                 l1456 0000  
                               l3072 0000                                 l3056 0000  
                               l3208 00A6                                 l3160 005B  
                               l3152 0053                                 l3128 0000  
                               l3090 0000                                 l3066 0158  
                               l3226 00C0                                 l3138 0046  
                               l1459 0000                                 l1396 0232  
                               l3092 0000                                 l3068 0000  
                               l3236 00D6                                 l3228 0000  
                               l3180 0092                                 l3172 0000  
                               l3164 0000                                 l1477 0000  
                               l3094 0000                                 l3246 00E1  
                               l3238 00D7                                 l3166 0000  
                               l3174 0079                                 l1399 0000  
                               l3088 0163                                 l3248 00E2  
                               l3184 0000                                 l3168 0000  
                               l3098 0000                                 l3186 0000  
                               l3178 0000                                 l3188 0000  
                               l2910 0000                                 l3198 0000  
                               l2912 0000                                 l2920 0000  
                               l2914 0000                                 l2922 0000  
                               l2930 0000                                 l2916 0000  
                               l2924 0000                                 l2932 0000  
                               l2940 0000                                 l2918 0000  
                               l2926 0000                                 l2934 0000  
                               l2950 0000                                 l2942 0000  
                               l2928 0000                                 l2936 0000  
                               l2944 0000                                 l2952 0115  
                               l2938 0000                                 l2946 0000  
                               l2954 0000                                 l2970 0000  
                               l2948 0000                                 l2972 0000  
                               l2980 0000                                 l2966 0000  
                               l2982 0000                                 l2968 0000  
                               l2976 0000                                 l2978 0000  
                               l2994 0000                                 _ADIE 046A  
                               _ADIF 006A                                 _ADON 00F8  
                               _PEIE 005E                 ??_getAdOriginalValue 0042  
             ??_isFinishedSmallTimer 0040                                 _main 000D  
                  ??_startSmallTimer 0040                                 btemp 007E  
                               start 000B              ?_getAdOriginalCh13Value 0040  
                              ??_ISR 0074           __end_of_isPermitSampleTime 0254  
                _sampleChannelSelect 0045                                ?_main 0070  
                              _DACR0 0088                                _CLKPR 0108  
                              _T1CON 0010                      __end_of_adc_get 01CB  
                              _TMR1H 000F                                _TMR1L 000E  
                     ?_startBigTimer 0070                setAD_ConvertFlag@flag 0040  
                      main@tDA_timer 0038                                _timer 007A  
                              pclath 000A                                status 0003  
                              wtemp0 007E       __end_of_getAdOriginalCh13Value 024F  
              __end_of_clearBigTimer 0263                 __end_of_clrSampeTime 0268  
         __end_of_isFinishedBigTimer 0245                         __end_of_main 0104  
             __size_of_adc_test_init 0014                    __end_of_AD_Sample 0170  
           __size_of_clearSmallTimer 0003                 _setDAC0_ChannelValue 0259  
          main@ucInstalledBatteryCnt 003E                               ??_main 0045  
                             _ADCON0 001F                               _ADCON1 009F  
               __end_of_clock_config 0235                               _DACCON 0087  
                             _ADRESH 001E                               _ADRESL 009E  
                             _CLKPCE 0847                               i1l1411 0000  
                             i1l3020 0000                               i1l3022 0000  
                             i1l3040 0000                               i1l3032 019F  
                             i1l3016 0000                               i1l2137 0000  
                             i1l3050 0000                               i1l3026 0000  
                             i1l3044 01B3                               i1l3036 0000  
                             i1l3046 0000                               i1l3038 0000  
                             i1l1484 0195                               i1l1489 01B9  
                   __end_of_dac_init 0259                               _TMR1IE 0460  
                             _TMR1IF 0060                    _getAD_ConvertFlag 010E  
                  _setAD_ConvertFlag 0110                               _TRISA0 0428  
                             _TRISA1 0429                               _TRISB0 0430  
                             _TRISA2 042A                               _TRISB1 0431  
                             _TRISA3 042B                               _TRISB2 0432  
                             _TRISB3 0433                               _TRISB4 0434  
                             _TRISB5 0435                               _TRISA7 042F  
                             _TRISB6 0436                               _TRISB7 0437  
                 ?_getAD_ConvertFlag 0070                   ?_setAD_ConvertFlag 0070  
                   __end_of_op1_init 0212                     __end_of_op2_init 0225  
             main@ucConfirmTimerZptS 003C                            ??_adc_get 0072  
                ??_getAD_ConvertFlag 0040                  ??_setAD_ConvertFlag 0040  
              ?_setDAC0_ChannelValue 0070                               clrloop 0226  
                    ??_startBigTimer 0040                               saved_w 007E  
        ?_process_AD_Converter_Value 0070                        _adc_test_init 01E2  
          __end_of_getAD_ConvertFlag 0110            __end_of_setAD_ConvertFlag 0115  
                 __size_of_adc_start 0003                       __pcstackCOMMON 0070  
                       __pidataBANK0 0000                      _startSmallTimer 0235  
            _adc_original_CH13_value 002C                    ??_clearSmallTimer 0040  
              __end_of_timer1_config 021C                       ?_adc_test_init 0040  
   __size_of_timer1_interrupt_config 0003                __size_of_clrSampeTime 0002  
                         __pbssBANK0 0020         __size_ofi1_setAD_ConvertFlag 0003  
                         adc_get@val 0072                           __pmaintext 000D  
             ??_setDAC0_ChannelValue 0040                           __pintentry 0004  
                          ?_dac_init 0070                __size_of_clock_config 0008  
                            _OP1CON0 001B                              _OP1CON1 001C  
                            _OP1CON2 001D                              _OP2CON0 009B  
                            _OP2CON1 009C                              _OP2CON2 009D  
                       _clrSampeTime 0266                    __end_of_adc_start 0118  
                          ?_op1_init 0070                            ?_op2_init 0070  
                 _isPermitSampleTime 024F               _buffer_Sample_AD_Value 0020  
                 _adc_original_value 002E           __size_of_getAD_ConvertFlag 0002  
         __size_of_setAD_ConvertFlag 0005          __size_of_getAdOriginalValue 0005  
                ?_isPermitSampleTime 0070        __size_of_isFinishedSmallTimer 0005  
                         _uiBigTimer 0076                         _clock_config 022D  
                            _adc_get 01C0              __end_of_startSmallTimer 023B  
                _multiFilterMaxValue 0030                  _multiFilterMinValue 0032  
               ??_isPermitSampleTime 0040                   _isFinishedBigTimer 0240  
                         ??_dac_init 0040                            _AD_Sample 0118  
                       __size_of_ISR 0041                      ??_adc_test_init 0041  
                         ??_op1_init 0040                           ??_op2_init 0040  
                ?_isFinishedBigTimer 0070                 end_of_initialization 0203  
               ??_isFinishedBigTimer 0040                           ?_AD_Sample 0070  
             __size_of_clearBigTimer 0003                     _adc_convert_flag 0079  
            _timer1_interrupt_config 0263                       AD_Sample@index 0044  
                         main@ucInit 003D                     main@ucWaitTime1S 003F  
                    _clearSmallTimer 025D                     ?_startSmallTimer 0070  
                i1_setAD_ConvertFlag 01CB                __end_of_startBigTimer 024A  
                start_initialization 01F6                          __end_of_ISR 01C0  
           ??_getAdOriginalCh13Value 0042                 ?i1_setAD_ConvertFlag 0070  
                      _clearBigTimer 0260                main@ucCheckBatteryCnt 003A  
                        __pdataBANK0 0045                          ??_AD_Sample 0042  
          ??_timer1_interrupt_config 0040                          __pbssCOMMON 0076  
                  __size_of_dac_init 0005                        __pcstackBANK0 0040  
                          _adc_start 0115                    __size_of_op1_init 000C  
                  __size_of_op2_init 0009                ??i1_setAD_ConvertFlag 0070  
                     ?_clearBigTimer 0070              __end_of_clearSmallTimer 0260  
             __size_of_timer1_config 000A                            __ptext500 0170  
                          __ptext501 0110                            __ptext510 0260  
                          __ptext502 010E                            __ptext511 0266  
                          __ptext503 023B                            __ptext520 022D  
                          __ptext512 024F                            __ptext504 0240  
                          __ptext521 017F                            __ptext513 0115  
                          __ptext505 0235                            __ptext522 01CB  
                          __ptext514 021C                            __ptext506 0245  
                          __ptext523 01C0                            __ptext515 0206  
                          __ptext507 0259                            __ptext524 0000  
                          __ptext516 0254                            __ptext508 024A  
                          __ptext517 01E2                            __ptext509 025D  
                          __ptext518 0263                            __ptext519 0212  
                          __ptext498 0104                            __ptext499 0118  
                           ?_adc_get 0070        __size_of_setDAC0_ChannelValue 0004  
       __end_of_isFinishedSmallTimer 0240                            __pswtext1 01CE  
                    ISR@ucTimer1sCnt 0078           __end_of_getAdOriginalValue 0175  
                         ?_adc_start 0070      __size_of_getAdOriginalCh13Value 0005  
                  interrupt_function 0004      __end_of_timer1_interrupt_config 0266  
               adc_test_init@channel 0042          __size_of_isPermitSampleTime 0005  
                       _uiSmallTimer 0034                __end_of_adc_test_init 01F6  
                      _timer1_config 0212         ??_process_AD_Converter_Value 0045  
                    ??_clearBigTimer 0040                     ?_clearSmallTimer 0070  
               main@ucConfirmTimer1S 003B          __size_of_isFinishedBigTimer 0005  
             _getAdOriginalCh13Value 024A                     __size_of_adc_get 000B  
__size_of_process_AD_Converter_Value 000A                             _dac_init 0254  
                     ?_timer1_config 0070                             _op1_init 0206  
                           _op2_init 021C                          ??_adc_start 0040  
                      __size_of_main 00F7                 _isFinishedSmallTimer 023B  
                           clear_ram 0225          setDAC0_ChannelValue@ucValue 0040  
                      ?_clrSampeTime 0070                          _sampleTimes 0036  
           __size_of_startSmallTimer 0006                             intlevel1 0000  
              ?_isFinishedSmallTimer 0070               __size_of_startBigTimer 0005  
                      ?_clock_config 0070              i1setAD_ConvertFlag@flag 0070  
                     ??_clrSampeTime 0040                      ??_timer1_config 0040  
        __end_ofi1_setAD_ConvertFlag 01CE   __end_of_process_AD_Converter_Value 010E  
         _process_AD_Converter_Value 0104         __end_of_setDAC0_ChannelValue 025D  
                   adc_test_init@ref 0040                   _getAdOriginalValue 0170  
