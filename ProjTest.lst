

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Sun Aug 18 22:41:52 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,delta=2
    16                           	psect	swtext1,local,class=CONST,delta=2
    17                           	psect	swtext2,local,class=CONST,delta=2
    18                           	psect	swtext3,local,class=CONST,delta=2
    19                           	psect	swtext4,local,class=CONST,delta=2
    20                           	psect	text879,local,class=CODE,delta=2
    21                           	psect	text880,local,class=CODE,delta=2
    22                           	psect	text883,local,class=CODE,delta=2
    23                           	psect	text889,local,class=CODE,delta=2
    24                           	psect	text890,local,class=CODE,delta=2
    25                           	psect	text891,local,class=CODE,delta=2
    26                           	psect	text892,local,class=CODE,delta=2
    27                           	psect	text893,local,class=CODE,delta=2
    28                           	psect	text894,local,class=CODE,delta=2
    29                           	psect	text895,local,class=CODE,delta=2
    30                           	psect	text896,local,class=CODE,delta=2
    31                           	psect	text897,local,class=CODE,delta=2
    32                           	psect	text898,local,class=CODE,delta=2
    33                           	psect	text899,local,class=CODE,delta=2
    34                           	psect	text901,local,class=CODE,delta=2
    35                           	psect	text902,local,class=CODE,delta=2
    36                           	psect	text903,local,class=CODE,delta=2
    37                           	psect	text905,local,class=CODE,delta=2
    38                           	psect	text906,local,class=CODE,delta=2
    39                           	psect	text907,local,class=CODE,delta=2
    40                           	psect	text908,local,class=CODE,delta=2
    41                           	psect	text909,local,class=CODE,delta=2
    42                           	psect	text910,local,class=CODE,delta=2
    43                           	psect	text911,local,class=CODE,delta=2
    44                           	psect	text912,local,class=CODE,delta=2
    45                           	psect	text913,local,class=CODE,delta=2
    46                           	psect	text914,local,class=CODE,delta=2
    47                           	psect	text915,local,class=CODE,delta=2
    48                           	psect	text919,local,class=CODE,delta=2
    49                           	psect	intentry,global,class=CODE,delta=2
    50                           	psect	text923,local,class=CODE,delta=2
    51                           	psect	pa_nodes,global,class=CODE,delta=2
    52                           	dabs	1,0x7E,2
    53  000A                     	;#
    54                           
    55                           	psect	config
    56  2000  2FFF               	dw	12287	;#
    57  2001  3FDE               	dw	16350	;#
    58  2002  3FF8               	dw	16376	;#
    59                           
    60                           	psect	idataBANK0
    61  0000                     __pidataBANK0:	
    62  001F                     _ADCON0	set	31
    63  001E                     _ADRESH	set	30
    64  001B                     _OP1CON0	set	27
    65  001C                     _OP1CON1	set	28
    66  001D                     _OP1CON2	set	29
    67  0010                     _T1CON	set	16
    68  000F                     _TMR1H	set	15
    69  000E                     _TMR1L	set	14
    70  006A                     _ADIF	set	106
    71  00F8                     _ADON	set	248
    72  005F                     _GIE	set	95
    73  00F9                     _GO	set	249
    74  0028                     _PA0	set	40
    75  0029                     _PA1	set	41
    76  002A                     _PA2	set	42
    77  002B                     _PA3	set	43
    78  002E                     _PA6	set	46
    79  0030                     _PB0	set	48
    80  0031                     _PB1	set	49
    81  0036                     _PB6	set	54
    82  0037                     _PB7	set	55
    83  005E                     _PEIE	set	94
    84  0060                     _TMR1IF	set	96
    85  009F                     _ADCON1	set	159
    86  009E                     _ADRESL	set	158
    87  0087                     _DACCON	set	135
    88  0088                     _DACR0	set	136
    89  009B                     _OP2CON0	set	155
    90  009C                     _OP2CON1	set	156
    91  009D                     _OP2CON2	set	157
    92  046A                     _ADIE	set	1130
    93  0460                     _TMR1IE	set	1120
    94  0428                     _TRISA0	set	1064
    95  0429                     _TRISA1	set	1065
    96  042A                     _TRISA2	set	1066
    97  042B                     _TRISA3	set	1067
    98  042E                     _TRISA6	set	1070
    99  042F                     _TRISA7	set	1071
   100  0430                     _TRISB0	set	1072
   101  0431                     _TRISB1	set	1073
   102  0432                     _TRISB2	set	1074
   103  0433                     _TRISB3	set	1075
   104  0434                     _TRISB4	set	1076
   105  0435                     _TRISB5	set	1077
   106  0436                     _TRISB6	set	1078
   107  0437                     _TRISB7	set	1079
   108  0108                     _CLKPR	set	264
   109  0847                     _CLKPCE	set	2119
   110  0C46                     _PBOD6	set	3142
   111  0C47                     _PBOD7	set	3143
   112                           
   113                           	psect	cinit
   114  0720                     start_initialization:	
   115  0720  3048               	movlw	low __pbssBANK0
   116                           
   117                           ; Clear objects allocated to COMMON
   118  0721  01FD               	clrf	__pbssCOMMON& (0+127)
   119                           
   120                           ; Clear objects allocated to BANK0
   121  0722  1383               	bcf	3,7	;select IRP bank0
   122  0723  0084               	movwf	4
   123  0724  306E               	movlw	low (__pbssBANK0+38)
   124  0725  158A  27DC  118A   	fcall	clear_ram
   125                           
   126                           ; Clear objects allocated to BANK1
   127  0728  30A0               	movlw	low __pbssBANK1
   128  0729  0084               	movwf	4
   129  072A  30EC               	movlw	low (__pbssBANK1+76)
   130  072B  158A  27DC  118A   	fcall	clear_ram
   131  072E  3090               	movlw	low __pbssBANK3
   132                           
   133                           ; Clear objects allocated to BANK3
   134  072F  1783               	bsf	3,7	;select IRP bank2
   135  0730  0084               	movwf	4
   136  0731  30A8               	movlw	low (__pbssBANK3+24)
   137  0732  158A  27DC         	fcall	clear_ram
   138                           
   139                           ;initializer for _sampleChannelSelect
   140  0734  300E               	movlw	14
   141  0735  00EE               	movwf	__pdataBANK0& (0+127)
   142  0736                     end_of_initialization:	
   143                           ;End of C runtime variable initialization code
   144                           
   145  0736  0183               	clrf	3
   146  0737  118A  2813         	ljmp	_main	;jump to C main() function
   147                           
   148                           	psect	bssCOMMON
   149  007D                     __pbssCOMMON:	
   150  007D                     vPutSampleDataIntoTable@ucChannelFirstLength:	
   151  007D                     	ds	1
   152                           
   153                           	psect	bssBANK0
   154  0048                     __pbssBANK0:	
   155  0048                     main@uiOldValue:	
   156  0048                     	ds	2
   157  004A                     _bBigTimerStartFlag:	
   158  004A                     	ds	1
   159  004B                     _bSmallTimerStartFlag:	
   160  004B                     	ds	1
   161  004C                     _bTwentyMinStartFlag:	
   162  004C                     	ds	1
   163  004D                     _bTwentySecStartFlag:	
   164  004D                     	ds	1
   165  004E                     _sampleTimes:	
   166  004E                     	ds	1
   167  004F                     main@bCheckTweHour:	
   168  004F                     	ds	1
   169  0050                     main@bInit20Min:	
   170  0050                     	ds	1
   171  0051                     main@bInitFlag:	
   172  0051                     	ds	1
   173  0052                     main@enumMainLoopStep:	
   174  0052                     	ds	1
   175  0053                     main@ucADC4_Step:	
   176  0053                     	ds	1
   177  0054                     main@ucChannel4Type:	
   178  0054                     	ds	1
   179  0055                     main@ucDelayPrefix4TimerP5s:	
   180  0055                     	ds	1
   181  0056                     main@ucLoaderStep:	
   182  0056                     	ds	1
   183  0057                     main@ucLoaderStep1:	
   184  0057                     	ds	1
   185  0058                     main@ucLoaderStep2:	
   186  0058                     	ds	1
   187  0059                     main@ucLoaderStep3:	
   188  0059                     	ds	1
   189  005A                     main@ucLoaderStep4:	
   190  005A                     	ds	1
   191  005B                     main@ucTimerADC1ZeroP5s:	
   192  005B                     	ds	1
   193  005C                     main@ucTimerDelay:	
   194  005C                     	ds	1
   195  005D                     main@ucTimerDelay1:	
   196  005D                     	ds	1
   197  005E                     main@ucTimerDelay2:	
   198  005E                     	ds	1
   199  005F                     main@ucTimerDelay3:	
   200  005F                     	ds	1
   201  0060                     main@ucTimerDelay4:	
   202  0060                     	ds	1
   203  0061                     main@ucTimerDelayP2sLess:	
   204  0061                     	ds	1
   205  0062                     main@ucTimerDelayP2sMore:	
   206  0062                     	ds	1
   207  0063                     main@ucTimerForDACR0_CNT1:	
   208  0063                     	ds	1
   209  0064                     main@ucTimerForDACR0_CNT1_f:	
   210  0064                     	ds	1
   211  0065                     main@ucTimerForDACR0_CNT2:	
   212  0065                     	ds	1
   213  0066                     main@ucTimerForDACR0_CNT2_f:	
   214  0066                     	ds	1
   215  0067                     main@ucTimerLessADC1ZeroP5s:	
   216  0067                     	ds	1
   217  0068                     main@ucTimerP5s:	
   218  0068                     	ds	1
   219  0069                     main@ucTimerRightP5s:	
   220  0069                     	ds	1
   221  006A                     main@ucTimerZeroPoint3s:	
   222  006A                     	ds	1
   223  006B                     main@ucTimerZeroPoint5s:	
   224  006B                     	ds	1
   225  006C                     vPutSampleDataIntoTable@ucChannelFourteenthLength:	
   226  006C                     	ds	1
   227  006D                     vPutSampleDataIntoTable@ucChannelFourthLength:	
   228  006D                     	ds	1
   229                           
   230                           	psect	dataBANK0
   231  006E                     __pdataBANK0:	
   232  006E                     _sampleChannelSelect:	
   233  006E                     	ds	1
   234                           
   235                           	psect	bssBANK1
   236  00A0                     __pbssBANK1:	
   237  00A0                     _uiBigTimer:	
   238  00A0                     	ds	2
   239  00A2                     _uiSmallTimer:	
   240  00A2                     	ds	2
   241  00A4                     _uiTwentyMinTimer:	
   242  00A4                     	ds	2
   243  00A6                     _uiTwentySecondsTimer:	
   244  00A6                     	ds	2
   245  00A8                     main@uiMaxValue:	
   246  00A8                     	ds	2
   247  00AA                     main@uiMinValue:	
   248  00AA                     	ds	2
   249  00AC                     ISR@ucTimer1sCnt:	
   250  00AC                     	ds	1
   251  00AD                     _adc_convert_flag:	
   252  00AD                     	ds	1
   253  00AE                     _timer:	
   254  00AE                     	ds	1
   255  00AF                     main@enumBranchStep:	
   256  00AF                     	ds	1
   257  00B0                     main@enumInteralStep:	
   258  00B0                     	ds	1
   259  00B1                     main@ucCheckTimerP2sLess:	
   260  00B1                     	ds	1
   261  00B2                     main@ucCheckTimerP2sMore:	
   262  00B2                     	ds	1
   263  00B3                     main@ucDelayPrefix6TimerP2s:	
   264  00B3                     	ds	1
   265  00B4                     main@ucFourthSuffix1TimerP3s:	
   266  00B4                     	ds	1
   267  00B5                     main@ucTimer1s:	
   268  00B5                     	ds	1
   269  00B6                     main@ucTimer20s:	
   270  00B6                     	ds	1
   271  00B7                     main@ucTimerLessX1P5s:	
   272  00B7                     	ds	1
   273  00B8                     main@ucTimerLessX2P5s:	
   274  00B8                     	ds	1
   275  00B9                     main@ucTimerP3s:	
   276  00B9                     	ds	1
   277  00BA                     main@ucTimerX1P5s:	
   278  00BA                     	ds	1
   279  00BB                     main@ucTimerX2P5s:	
   280  00BB                     	ds	1
   281  00BC                     _uiSampleChannelFirst:	
   282  00BC                     	ds	24
   283  00D4                     _uiSampleChannelFourth:	
   284  00D4                     	ds	24
   285                           
   286                           	psect	bssBANK3
   287  0190                     __pbssBANK3:	
   288  0190                     _uiSampleChannelFourteenth:	
   289  0190                     	ds	24
   290                           
   291                           	psect	clrtext
   292  0FDC                     clear_ram:	
   293                           ;	Called with FSR containing the base address, and
   294                           ;	W with the last address+1
   295                           
   296  0FDC  0064               	clrwdt	;clear the watchdog before getting into this loop
   297  0FDD                     clrloop:	
   298  0FDD  0180               	clrf	0	;clear RAM location pointed to by FSR
   299  0FDE  0A84               	incf	4,f	;increment pointer
   300  0FDF  0604               	xorwf	4,w	;XOR with final address
   301  0FE0  1903               	btfsc	3,2	;have we reached the end yet?
   302  0FE1  3400               	retlw	0	;all done for this memory range, return
   303  0FE2  0604               	xorwf	4,w	;XOR again to restore value
   304  0FE3  2FDD               	goto	clrloop	;do the next byte
   305                           
   306                           	psect	cstackCOMMON
   307  0070                     __pcstackCOMMON:	
   308  0070                     ?_clearTwelveHoursTimer:	
   309  0070                     ?_clearThreeHoursTimer:	
   310                           ; 0 bytes @ 0x0
   311                           
   312  0070                     ?_clearTwentySecondsTimer:	
   313                           ; 0 bytes @ 0x0
   314                           
   315  0070                     ?_clock_config:	
   316                           ; 0 bytes @ 0x0
   317                           
   318  0070                     ?_timer1_config:	
   319                           ; 0 bytes @ 0x0
   320                           
   321  0070                     ?_timer1_interrupt_config:	
   322                           ; 0 bytes @ 0x0
   323                           
   324  0070                     ?_dac_init:	
   325                           ; 0 bytes @ 0x0
   326                           
   327  0070                     ?_op1_init:	
   328                           ; 0 bytes @ 0x0
   329                           
   330  0070                     ?_op2_init:	
   331                           ; 0 bytes @ 0x0
   332                           
   333  0070                     ?_adc_start:	
   334                           ; 0 bytes @ 0x0
   335                           
   336  0070                     ?_process_AD_Converter_Value:	
   337                           ; 0 bytes @ 0x0
   338                           
   339  0070                     ?_clrSampeTime:	
   340                           ; 0 bytes @ 0x0
   341                           
   342  0070                     ?_clearTwentyMinTimer:	
   343                           ; 0 bytes @ 0x0
   344                           
   345  0070                     ?_startTwentySecondsTimer:	
   346                           ; 0 bytes @ 0x0
   347                           
   348  0070                     ?_AD_Sample:	
   349                           ; 0 bytes @ 0x0
   350                           
   351  0070                     ?_clearAllTimer:	
   352                           ; 0 bytes @ 0x0
   353                           
   354  0070                     ?_clearPinPortAndTimer:	
   355                           ; 0 bytes @ 0x0
   356                           
   357  0070                     ?_initPin:	
   358                           ; 0 bytes @ 0x0
   359                           
   360  0070                     ?_setPB0:	
   361                           ; 0 bytes @ 0x0
   362                           
   363  0070                     ?_setPB1:	
   364                           ; 0 bytes @ 0x0
   365                           
   366  0070                     ?_setPA0:	
   367                           ; 0 bytes @ 0x0
   368                           
   369  0070                     ?_setPA1:	
   370                           ; 0 bytes @ 0x0
   371                           
   372  0070                     ?_setPA2:	
   373                           ; 0 bytes @ 0x0
   374                           
   375  0070                     ?_setPA3:	
   376                           ; 0 bytes @ 0x0
   377                           
   378  0070                     ?_setPA6:	
   379                           ; 0 bytes @ 0x0
   380                           
   381  0070                     ?_main:	
   382                           ; 0 bytes @ 0x0
   383                           
   384  0070                     ?_setAD_ConvertFlag:	
   385                           ; 0 bytes @ 0x0
   386                           
   387  0070                     ?_ISR:	
   388                           ; 0 bytes @ 0x0
   389                           
   390  0070                     ?i1_setAD_ConvertFlag:	
   391                           ; 0 bytes @ 0x0
   392                           
   393  0070                     ??i1_setAD_ConvertFlag:	
   394                           ; 0 bytes @ 0x0
   395                           
   396  0070                     ?_isPermitSampleTime:	
   397                           ; 0 bytes @ 0x0
   398                           
   399  0070                     ?_isFinishedTwentyMinTimer:	
   400                           ; 1 bytes @ 0x0
   401                           
   402  0070                     ?_isFinishedTwelveHoursTimer:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0070                     ?_isFinishedTwentySecondsTimer:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0070                     ?_isFinishedThreeHoursTimer:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ?_getAD_ConvertFlag:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ?_adc_get:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     i1setAD_ConvertFlag@flag:	
   418                           ; 2 bytes @ 0x0
   419                           
   420                           
   421                           ; 1 bytes @ 0x0
   422  0070                     	ds	2
   423  0072                     ??_adc_get:	
   424  0072                     adc_get@val:	
   425                           ; 0 bytes @ 0x2
   426                           
   427                           
   428                           ; 2 bytes @ 0x2
   429  0072                     	ds	2
   430  0074                     ?_vPutSampleDataIntoTable:	
   431  0074                     vPutSampleDataIntoTable@uiSampleData:	
   432                           ; 0 bytes @ 0x4
   433                           
   434                           
   435                           ; 2 bytes @ 0x4
   436  0074                     	ds	2
   437  0076                     vPutSampleDataIntoTable@channel:	
   438                           
   439                           ; 1 bytes @ 0x6
   440  0076                     	ds	1
   441  0077                     ??_vPutSampleDataIntoTable:	
   442  0077                     vPutSampleDataIntoTable@i:	
   443                           ; 0 bytes @ 0x7
   444                           
   445                           
   446                           ; 2 bytes @ 0x7
   447  0077                     	ds	2
   448  0079                     ??_ISR:	
   449                           
   450                           ; 0 bytes @ 0x9
   451  0079                     	ds	4
   452                           
   453                           	psect	cstackBANK0
   454  0020                     __pcstackBANK0:	
   455  0020                     ??_clearTwelveHoursTimer:	
   456  0020                     ??_clearThreeHoursTimer:	
   457                           ; 0 bytes @ 0x0
   458                           
   459  0020                     ??_clearTwentySecondsTimer:	
   460                           ; 0 bytes @ 0x0
   461                           
   462  0020                     ??_clock_config:	
   463                           ; 0 bytes @ 0x0
   464                           
   465  0020                     ??_timer1_config:	
   466                           ; 0 bytes @ 0x0
   467                           
   468  0020                     ??_timer1_interrupt_config:	
   469                           ; 0 bytes @ 0x0
   470                           
   471  0020                     ?_adc_test_init:	
   472                           ; 0 bytes @ 0x0
   473                           
   474  0020                     ??_dac_init:	
   475                           ; 0 bytes @ 0x0
   476                           
   477  0020                     ??_op1_init:	
   478                           ; 0 bytes @ 0x0
   479                           
   480  0020                     ??_op2_init:	
   481                           ; 0 bytes @ 0x0
   482                           
   483  0020                     ??_adc_start:	
   484                           ; 0 bytes @ 0x0
   485                           
   486  0020                     ??_isPermitSampleTime:	
   487                           ; 0 bytes @ 0x0
   488                           
   489  0020                     ??_clrSampeTime:	
   490                           ; 0 bytes @ 0x0
   491                           
   492  0020                     ?_startTwentyMinTimer:	
   493                           ; 0 bytes @ 0x0
   494                           
   495  0020                     ??_clearTwentyMinTimer:	
   496                           ; 0 bytes @ 0x0
   497                           
   498  0020                     ??_isFinishedTwentyMinTimer:	
   499                           ; 0 bytes @ 0x0
   500                           
   501  0020                     ?_startTwelveHourTimer:	
   502                           ; 0 bytes @ 0x0
   503                           
   504  0020                     ??_isFinishedTwelveHoursTimer:	
   505                           ; 0 bytes @ 0x0
   506                           
   507  0020                     ??_startTwentySecondsTimer:	
   508                           ; 0 bytes @ 0x0
   509                           
   510  0020                     ??_isFinishedTwentySecondsTimer:	
   511                           ; 0 bytes @ 0x0
   512                           
   513  0020                     ?_startThreeHoursTimer:	
   514                           ; 0 bytes @ 0x0
   515                           
   516  0020                     ??_isFinishedThreeHoursTimer:	
   517                           ; 0 bytes @ 0x0
   518                           
   519  0020                     ??_AD_Sample:	
   520                           ; 0 bytes @ 0x0
   521                           
   522  0020                     ??_clearAllTimer:	
   523                           ; 0 bytes @ 0x0
   524                           
   525  0020                     ??_clearPinPortAndTimer:	
   526                           ; 0 bytes @ 0x0
   527                           
   528  0020                     ??_initPin:	
   529                           ; 0 bytes @ 0x0
   530                           
   531  0020                     ??_setPB0:	
   532                           ; 0 bytes @ 0x0
   533                           
   534  0020                     ??_setPB1:	
   535                           ; 0 bytes @ 0x0
   536                           
   537  0020                     ??_setPA0:	
   538                           ; 0 bytes @ 0x0
   539                           
   540  0020                     ??_setPA1:	
   541                           ; 0 bytes @ 0x0
   542                           
   543  0020                     ??_setPA2:	
   544                           ; 0 bytes @ 0x0
   545                           
   546  0020                     ??_setPA3:	
   547                           ; 0 bytes @ 0x0
   548                           
   549  0020                     ??_setPA6:	
   550                           ; 0 bytes @ 0x0
   551                           
   552  0020                     ??_getAD_ConvertFlag:	
   553                           ; 0 bytes @ 0x0
   554                           
   555  0020                     ??_setAD_ConvertFlag:	
   556                           ; 0 bytes @ 0x0
   557                           
   558  0020                     ?_Filter:	
   559                           ; 0 bytes @ 0x0
   560                           
   561  0020                     setPB0@bValue:	
   562                           ; 2 bytes @ 0x0
   563                           
   564  0020                     setPB1@bValue:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0020                     setPA0@bValue:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0020                     setPA1@bValue:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0020                     setPA2@bValue:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0020                     setPA3@bValue:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0020                     setPA6@bValue:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0020                     setAD_ConvertFlag@flag:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0020                     adc_test_init@ref:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0020                     Filter@tmpValue:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0020                     startTwelveHourTimer@uiSetTime:	
   592                           ; 2 bytes @ 0x0
   593                           
   594  0020                     startThreeHoursTimer@uiSetTime:	
   595                           ; 2 bytes @ 0x0
   596                           
   597  0020                     startTwentyMinTimer@uiSetValue:	
   598                           ; 2 bytes @ 0x0
   599                           
   600                           
   601                           ; 2 bytes @ 0x0
   602  0020                     	ds	1
   603  0021                     ??_adc_test_init:	
   604                           
   605                           ; 0 bytes @ 0x1
   606  0021                     	ds	1
   607  0022                     ??_startTwentyMinTimer:	
   608  0022                     ??_startTwelveHourTimer:	
   609                           ; 0 bytes @ 0x2
   610                           
   611  0022                     ??_startThreeHoursTimer:	
   612                           ; 0 bytes @ 0x2
   613                           
   614  0022                     ??_Filter:	
   615                           ; 0 bytes @ 0x2
   616                           
   617  0022                     adc_test_init@channel:	
   618                           ; 0 bytes @ 0x2
   619                           
   620                           
   621                           ; 1 bytes @ 0x2
   622  0022                     	ds	1
   623  0023                     ??_process_AD_Converter_Value:	
   624                           
   625                           ; 0 bytes @ 0x3
   626  0023                     	ds	3
   627  0026                     Filter@filter_buf:	
   628                           
   629                           ; 24 bytes @ 0x6
   630  0026                     	ds	24
   631  003E                     Filter@filter_temp:	
   632                           
   633                           ; 2 bytes @ 0x1E
   634  003E                     	ds	2
   635  0040                     Filter@filter_sum:	
   636                           
   637                           ; 2 bytes @ 0x20
   638  0040                     	ds	2
   639  0042                     Filter@cir:	
   640                           
   641                           ; 2 bytes @ 0x22
   642  0042                     	ds	2
   643  0044                     Filter@j:	
   644                           
   645                           ; 1 bytes @ 0x24
   646  0044                     	ds	1
   647  0045                     Filter@i:	
   648                           
   649                           ; 1 bytes @ 0x25
   650  0045                     	ds	1
   651  0046                     ?_getAdOriginalCh14Value:	
   652  0046                     ?_getAdOriginalCh1Value:	
   653                           ; 2 bytes @ 0x26
   654                           
   655  0046                     ?_getAdOriginaCh4Value:	
   656                           ; 2 bytes @ 0x26
   657                           
   658                           
   659                           ; 2 bytes @ 0x26
   660  0046                     	ds	2
   661  0048                     ??_getAdOriginalCh14Value:	
   662  0048                     ??_getAdOriginalCh1Value:	
   663                           ; 0 bytes @ 0x28
   664                           
   665  0048                     ??_getAdOriginaCh4Value:	
   666                           ; 0 bytes @ 0x28
   667                           
   668  0048                     ??_main:	
   669                           ; 0 bytes @ 0x28
   670                           
   671                           
   672                           	psect	maintext
   673  0013                     __pmaintext:	
   674                           ; 0 bytes @ 0x28
   675 ;;Data sizes: Strings 0, constant 0, data 1, bss 139, persistent 0 stack 0
   676 ;;Auto spaces:   Size  Autos    Used
   677 ;; COMMON          14     13      14
   678 ;; BANK0           80     40      79
   679 ;; BANK1           80      0      76
   680 ;; BANK3           96      0      24
   681 ;; BANK2           96      0       0
   682 ;;
   683 ;; Pointer list with targets:
   684 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   685 ;;
   686 ;; ?_getAdOriginalCh14Value	unsigned int  size(1) Largest target is 0
   687 ;;
   688 ;; ?_getAdOriginaCh4Value	unsigned int  size(1) Largest target is 0
   689 ;;
   690 ;; ?_getAdOriginalCh1Value	unsigned int  size(1) Largest target is 0
   691 ;;
   692 ;; ?_Filter	unsigned int  size(1) Largest target is 0
   693 ;;
   694 ;; Filter@tmpValue	PTR int  size(2) Largest target is 24
   695 ;;		 -> uiSampleChannelFourteenth(BANK3[24]), uiSampleChannelFourth(BANK1[24]), uiSampleChannelFirst(BANK1[24]), 
   696 ;;
   697 ;;
   698 ;; Critical Paths under _main in COMMON
   699 ;;
   700 ;;   None.
   701 ;;
   702 ;; Critical Paths under _ISR in COMMON
   703 ;;
   704 ;;   _ISR->_vPutSampleDataIntoTable
   705 ;;   _vPutSampleDataIntoTable->_adc_get
   706 ;;
   707 ;; Critical Paths under _main in BANK0
   708 ;;
   709 ;;   _main->_getAdOriginalCh14Value
   710 ;;   _main->_getAdOriginalCh1Value
   711 ;;   _main->_getAdOriginaCh4Value
   712 ;;   _getAdOriginaCh4Value->_Filter
   713 ;;   _getAdOriginalCh1Value->_Filter
   714 ;;   _getAdOriginalCh14Value->_Filter
   715 ;;   _process_AD_Converter_Value->_adc_test_init
   716 ;;
   717 ;; Critical Paths under _ISR in BANK0
   718 ;;
   719 ;;   None.
   720 ;;
   721 ;; Critical Paths under _main in BANK1
   722 ;;
   723 ;;   None.
   724 ;;
   725 ;; Critical Paths under _ISR in BANK1
   726 ;;
   727 ;;   None.
   728 ;;
   729 ;; Critical Paths under _main in BANK3
   730 ;;
   731 ;;   None.
   732 ;;
   733 ;; Critical Paths under _ISR in BANK3
   734 ;;
   735 ;;   None.
   736 ;;
   737 ;; Critical Paths under _main in BANK2
   738 ;;
   739 ;;   None.
   740 ;;
   741 ;; Critical Paths under _ISR in BANK2
   742 ;;
   743 ;;   None.
   744 ;;
   745 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   746 ;;
   747 ;;
   748 ;;Call Graph Tables:
   749 ;;
   750 ;; ---------------------------------------------------------------------------------
   751 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   752 ;; ---------------------------------------------------------------------------------
   753 ;; (0) _main                                                 0     0      0    2190
   754 ;;                            _initPin
   755 ;;                       _clock_config
   756 ;;                      _timer1_config
   757 ;;            _timer1_interrupt_config
   758 ;;                      _adc_test_init
   759 ;;                           _dac_init
   760 ;;                           _op1_init
   761 ;;                           _op2_init
   762 ;;                          _adc_start
   763 ;;         _process_AD_Converter_Value
   764 ;;                 _isPermitSampleTime
   765 ;;                       _clrSampeTime
   766 ;;             _getAdOriginalCh14Value
   767 ;;                _startTwentyMinTimer
   768 ;;                _clearTwentyMinTimer
   769 ;;           _isFinishedTwentyMinTimer
   770 ;;               _clearPinPortAndTimer
   771 ;;                             _setPA6
   772 ;;              _getAdOriginalCh1Value
   773 ;;               _startTwelveHourTimer
   774 ;;         _isFinishedTwelveHoursTimer
   775 ;;               _getAdOriginaCh4Value
   776 ;;                             _setPA2
   777 ;;                             _setPA3
   778 ;;                             _setPA0
   779 ;;                             _setPA1
   780 ;;                             _setPB0
   781 ;;            _startTwentySecondsTimer
   782 ;;       _isFinishedTwentySecondsTimer
   783 ;;            _clearTwentySecondsTimer
   784 ;;               _startThreeHoursTimer
   785 ;;          _isFinishedThreeHoursTimer
   786 ;;               _clearThreeHoursTimer
   787 ;;                             _setPB1
   788 ;;                      _clearAllTimer
   789 ;; ---------------------------------------------------------------------------------
   790 ;; (1) _clearPinPortAndTimer                                 0     0      0       0
   791 ;;                      _clearAllTimer
   792 ;; ---------------------------------------------------------------------------------
   793 ;; (1) _getAdOriginaCh4Value                                 2     0      2     620
   794 ;;                                             38 BANK0      2     0      2
   795 ;;                             _Filter
   796 ;; ---------------------------------------------------------------------------------
   797 ;; (1) _getAdOriginalCh1Value                                2     0      2     620
   798 ;;                                             38 BANK0      2     0      2
   799 ;;                             _Filter
   800 ;; ---------------------------------------------------------------------------------
   801 ;; (1) _getAdOriginalCh14Value                               2     0      2     620
   802 ;;                                             38 BANK0      2     0      2
   803 ;;                             _Filter
   804 ;; ---------------------------------------------------------------------------------
   805 ;; (1) _process_AD_Converter_Value                           0     0      0      66
   806 ;;                  _getAD_ConvertFlag
   807 ;;                  _setAD_ConvertFlag
   808 ;;                          _AD_Sample
   809 ;;                      _adc_test_init
   810 ;;                          _adc_start
   811 ;; ---------------------------------------------------------------------------------
   812 ;; (1) _clearAllTimer                                        0     0      0       0
   813 ;;              _clearTwelveHoursTimer
   814 ;;               _clearThreeHoursTimer
   815 ;;            _clearTwentySecondsTimer
   816 ;; ---------------------------------------------------------------------------------
   817 ;; (2) _AD_Sample                                            0     0      0       0
   818 ;; ---------------------------------------------------------------------------------
   819 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   820 ;;                                              0 BANK0      1     1      0
   821 ;; ---------------------------------------------------------------------------------
   822 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   823 ;; ---------------------------------------------------------------------------------
   824 ;; (2) _Filter                                              38    36      2     620
   825 ;;                                              0 BANK0     38    36      2
   826 ;; ---------------------------------------------------------------------------------
   827 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   828 ;; ---------------------------------------------------------------------------------
   829 ;; (1) _startThreeHoursTimer                                 2     0      2      22
   830 ;;                                              0 BANK0      2     0      2
   831 ;; ---------------------------------------------------------------------------------
   832 ;; (1) _isFinishedTwentySecondsTimer                         0     0      0       0
   833 ;; ---------------------------------------------------------------------------------
   834 ;; (1) _startTwentySecondsTimer                              0     0      0       0
   835 ;; ---------------------------------------------------------------------------------
   836 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   837 ;; ---------------------------------------------------------------------------------
   838 ;; (1) _startTwelveHourTimer                                 2     0      2      22
   839 ;;                                              0 BANK0      2     0      2
   840 ;; ---------------------------------------------------------------------------------
   841 ;; (1) _isFinishedTwentyMinTimer                             0     0      0       0
   842 ;; ---------------------------------------------------------------------------------
   843 ;; (1) _clearTwentyMinTimer                                  0     0      0       0
   844 ;; ---------------------------------------------------------------------------------
   845 ;; (1) _startTwentyMinTimer                                  2     0      2      22
   846 ;;                                              0 BANK0      2     0      2
   847 ;; ---------------------------------------------------------------------------------
   848 ;; (1) _clrSampeTime                                         0     0      0       0
   849 ;; ---------------------------------------------------------------------------------
   850 ;; (1) _isPermitSampleTime                                   0     0      0       0
   851 ;; ---------------------------------------------------------------------------------
   852 ;; (2) _adc_start                                            0     0      0       0
   853 ;; ---------------------------------------------------------------------------------
   854 ;; (1) _op2_init                                             0     0      0       0
   855 ;; ---------------------------------------------------------------------------------
   856 ;; (1) _op1_init                                             0     0      0       0
   857 ;; ---------------------------------------------------------------------------------
   858 ;; (1) _dac_init                                             0     0      0       0
   859 ;; ---------------------------------------------------------------------------------
   860 ;; (2) _adc_test_init                                        3     2      1      44
   861 ;;                                              0 BANK0      3     2      1
   862 ;; ---------------------------------------------------------------------------------
   863 ;; (1) _timer1_interrupt_config                              0     0      0       0
   864 ;; ---------------------------------------------------------------------------------
   865 ;; (1) _timer1_config                                        0     0      0       0
   866 ;; ---------------------------------------------------------------------------------
   867 ;; (1) _clock_config                                         0     0      0       0
   868 ;; ---------------------------------------------------------------------------------
   869 ;; (1) _setPA6                                               1     1      0      22
   870 ;;                                              0 BANK0      1     1      0
   871 ;; ---------------------------------------------------------------------------------
   872 ;; (1) _setPA3                                               1     1      0      22
   873 ;;                                              0 BANK0      1     1      0
   874 ;; ---------------------------------------------------------------------------------
   875 ;; (1) _setPA2                                               1     1      0      22
   876 ;;                                              0 BANK0      1     1      0
   877 ;; ---------------------------------------------------------------------------------
   878 ;; (1) _setPA1                                               1     1      0      22
   879 ;;                                              0 BANK0      1     1      0
   880 ;; ---------------------------------------------------------------------------------
   881 ;; (1) _setPA0                                               1     1      0      22
   882 ;;                                              0 BANK0      1     1      0
   883 ;; ---------------------------------------------------------------------------------
   884 ;; (1) _setPB1                                               1     1      0      22
   885 ;;                                              0 BANK0      1     1      0
   886 ;; ---------------------------------------------------------------------------------
   887 ;; (1) _setPB0                                               1     1      0      22
   888 ;;                                              0 BANK0      1     1      0
   889 ;; ---------------------------------------------------------------------------------
   890 ;; (1) _initPin                                              0     0      0       0
   891 ;; ---------------------------------------------------------------------------------
   892 ;; (2) _clearTwentySecondsTimer                              0     0      0       0
   893 ;; ---------------------------------------------------------------------------------
   894 ;; (2) _clearThreeHoursTimer                                 0     0      0       0
   895 ;; ---------------------------------------------------------------------------------
   896 ;; (2) _clearTwelveHoursTimer                                0     0      0       0
   897 ;; ---------------------------------------------------------------------------------
   898 ;; Estimated maximum stack depth 2
   899 ;; ---------------------------------------------------------------------------------
   900 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   901 ;; ---------------------------------------------------------------------------------
   902 ;; (4) _ISR                                                  4     4      0     407
   903 ;;                                              9 COMMON     4     4      0
   904 ;;                i1_setAD_ConvertFlag
   905 ;;                            _adc_get
   906 ;;            _vPutSampleDataIntoTable
   907 ;; ---------------------------------------------------------------------------------
   908 ;; (5) i1_setAD_ConvertFlag                                  1     1      0      73
   909 ;;                                              0 COMMON     1     1      0
   910 ;; ---------------------------------------------------------------------------------
   911 ;; (5) _adc_get                                              4     2      2      24
   912 ;;                                              0 COMMON     4     2      2
   913 ;; ---------------------------------------------------------------------------------
   914 ;; (5) _vPutSampleDataIntoTable                              5     2      3     310
   915 ;;                                              4 COMMON     5     2      3
   916 ;;                            _adc_get (ARG)
   917 ;; ---------------------------------------------------------------------------------
   918 ;; Estimated maximum stack depth 5
   919 ;; ---------------------------------------------------------------------------------
   920 ;; Call Graph Graphs:
   921 ;; _main (ROOT)
   922 ;;   _initPin
   923 ;;   _clock_config
   924 ;;   _timer1_config
   925 ;;   _timer1_interrupt_config
   926 ;;   _adc_test_init
   927 ;;   _dac_init
   928 ;;   _op1_init
   929 ;;   _op2_init
   930 ;;   _adc_start
   931 ;;   _process_AD_Converter_Value
   932 ;;     _getAD_ConvertFlag
   933 ;;     _setAD_ConvertFlag
   934 ;;     _AD_Sample
   935 ;;     _adc_test_init
   936 ;;     _adc_start
   937 ;;   _isPermitSampleTime
   938 ;;   _clrSampeTime
   939 ;;   _getAdOriginalCh14Value
   940 ;;     _Filter
   941 ;;   _startTwentyMinTimer
   942 ;;   _clearTwentyMinTimer
   943 ;;   _isFinishedTwentyMinTimer
   944 ;;   _clearPinPortAndTimer
   945 ;;     _clearAllTimer
   946 ;;       _clearTwelveHoursTimer
   947 ;;       _clearThreeHoursTimer
   948 ;;       _clearTwentySecondsTimer
   949 ;;   _setPA6
   950 ;;   _getAdOriginalCh1Value
   951 ;;     _Filter
   952 ;;   _startTwelveHourTimer
   953 ;;   _isFinishedTwelveHoursTimer
   954 ;;   _getAdOriginaCh4Value
   955 ;;     _Filter
   956 ;;   _setPA2
   957 ;;   _setPA3
   958 ;;   _setPA0
   959 ;;   _setPA1
   960 ;;   _setPB0
   961 ;;   _startTwentySecondsTimer
   962 ;;   _isFinishedTwentySecondsTimer
   963 ;;   _clearTwentySecondsTimer
   964 ;;   _startThreeHoursTimer
   965 ;;   _isFinishedThreeHoursTimer
   966 ;;   _clearThreeHoursTimer
   967 ;;   _setPB1
   968 ;;   _clearAllTimer
   969 ;;     _clearTwelveHoursTimer
   970 ;;     _clearThreeHoursTimer
   971 ;;     _clearTwentySecondsTimer
   972 ;;
   973 ;; _ISR (ROOT)
   974 ;;   i1_setAD_ConvertFlag
   975 ;;   _adc_get
   976 ;;   _vPutSampleDataIntoTable
   977 ;;     _adc_get (ARG)
   978 ;;
   979 ;; Address spaces:
   980 ;;Name               Size   Autos  Total    Cost      Usage
   981 ;;BANK3               60      0      18      10       25.0%
   982 ;;BITBANK3            60      0       0       9        0.0%
   983 ;;SFR3                 0      0       0       4        0.0%
   984 ;;BITSFR3              0      0       0       4        0.0%
   985 ;;BANK2               60      0       0      12        0.0%
   986 ;;BITBANK2            60      0       0      11        0.0%
   987 ;;SFR2                 0      0       0       5        0.0%
   988 ;;BITSFR2              0      0       0       5        0.0%
   989 ;;SFR1                 0      0       0       2        0.0%
   990 ;;BITSFR1              0      0       0       2        0.0%
   991 ;;BANK1               50      0      4C       8       95.0%
   992 ;;BITBANK1            50      0       0       7        0.0%
   993 ;;CODE                 0      0       0       0        0.0%
   994 ;;DATA                 0      0      C8       6        0.0%
   995 ;;ABS                  0      0      C1       3        0.0%
   996 ;;NULL                 0      0       0       0        0.0%
   997 ;;STACK                0      0       7       2        0.0%
   998 ;;BANK0               50     28      4F       5       98.8%
   999 ;;BITBANK0            50      0       0       4        0.0%
  1000 ;;SFR0                 0      0       0       1        0.0%
  1001 ;;BITSFR0              0      0       0       1        0.0%
  1002 ;;COMMON               E      D       E       1      100.0%
  1003 ;;BITCOMMON            E      0       0       0        0.0%
  1004                           
  1005                           
  1006 ;; *************** function _main *****************
  1007 ;; Defined at:
  1008 ;;		line 461 in file "D:\develop\190625\AK7030-OTP\main.c"
  1009 ;; Parameters:    Size  Location     Type
  1010 ;;		None
  1011 ;; Auto vars:     Size  Location     Type
  1012 ;;		None
  1013 ;; Return value:  Size  Location     Type
  1014 ;;		None               void
  1015 ;; Registers used:
  1016 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1017 ;; Tracked objects:
  1018 ;;		On entry : 17F/0
  1019 ;;		On exit  : 60/0
  1020 ;;		Unchanged: FFE00/0
  1021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1022 ;;      Params:         0       0       0       0       0
  1023 ;;      Locals:         0       0       0       0       0
  1024 ;;      Temps:          0       0       0       0       0
  1025 ;;      Totals:         0       0       0       0       0
  1026 ;;Total ram usage:        0 bytes
  1027 ;; Hardware stack levels required when called:    5
  1028 ;; This function calls:
  1029 ;;		_initPin
  1030 ;;		_clock_config
  1031 ;;		_timer1_config
  1032 ;;		_timer1_interrupt_config
  1033 ;;		_adc_test_init
  1034 ;;		_dac_init
  1035 ;;		_op1_init
  1036 ;;		_op2_init
  1037 ;;		_adc_start
  1038 ;;		_process_AD_Converter_Value
  1039 ;;		_isPermitSampleTime
  1040 ;;		_clrSampeTime
  1041 ;;		_getAdOriginalCh14Value
  1042 ;;		_startTwentyMinTimer
  1043 ;;		_clearTwentyMinTimer
  1044 ;;		_isFinishedTwentyMinTimer
  1045 ;;		_clearPinPortAndTimer
  1046 ;;		_setPA6
  1047 ;;		_getAdOriginalCh1Value
  1048 ;;		_startTwelveHourTimer
  1049 ;;		_isFinishedTwelveHoursTimer
  1050 ;;		_getAdOriginaCh4Value
  1051 ;;		_setPA2
  1052 ;;		_setPA3
  1053 ;;		_setPA0
  1054 ;;		_setPA1
  1055 ;;		_setPB0
  1056 ;;		_startTwentySecondsTimer
  1057 ;;		_isFinishedTwentySecondsTimer
  1058 ;;		_clearTwentySecondsTimer
  1059 ;;		_startThreeHoursTimer
  1060 ;;		_isFinishedThreeHoursTimer
  1061 ;;		_clearThreeHoursTimer
  1062 ;;		_setPB1
  1063 ;;		_clearAllTimer
  1064 ;; This function is called by:
  1065 ;;		Startup code after reset
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068  0013                     _main:	
  1069                           
  1070                           ;main.c: 467: enum setp_Adc4
  1071                           ;main.c: 468: {
  1072                           ;main.c: 469: ADC4_STEP_INIT = 0,
  1073                           ;main.c: 470: ADC4_STEP_FIRST,
  1074                           ;main.c: 471: ADC4_STEP_SECOND,
  1075                           ;main.c: 472: ADC4_STEP_THIRD,
  1076                           ;main.c: 473: ADC4_STEP_FOURTH_PREFIX1,
  1077                           ;main.c: 474: ADC4_STEP_FOURTH_PREFIX2,
  1078                           ;main.c: 475: ADC4_STEP_FOURTH_PREFIX3,
  1079                           ;main.c: 476: ADC4_STEP_FOURTH_PREFIX4,
  1080                           ;main.c: 477: ADC4_STEP_FOURTH_PREFIX5,
  1081                           ;main.c: 478: ADC4_STEP_FOURTH_PREFIX6,
  1082                           ;main.c: 479: ADC4_STEP_FOURTH,
  1083                           ;main.c: 480: ADC4_STEP_FOURTH_SUFFIX1,
  1084                           ;main.c: 481: ADC4_STEP_FOURTH_SUFFIX2,
  1085                           
  1086                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1087  0013  1683               	bsf	3,5	;RP0=1, select bank1
  1088  0014  1005               	bcf	5,0
  1089                           
  1090                           ;main.c: 502: TRISA1 = 0;
  1091  0015  1085               	bcf	5,1
  1092                           
  1093                           ;main.c: 503: TRISA2 = 0;
  1094  0016  1105               	bcf	5,2
  1095                           
  1096                           ;main.c: 504: TRISA3 = 0;
  1097  0017  1185               	bcf	5,3
  1098                           
  1099                           ;main.c: 505: TRISB0 = 0;
  1100  0018  1006               	bcf	6,0
  1101                           
  1102                           ;main.c: 506: TRISB1 = 0;
  1103  0019  1086               	bcf	6,1
  1104                           
  1105                           ;main.c: 507: TRISA6 = 0;
  1106  001A  1305               	bcf	5,6
  1107                           
  1108                           ;main.c: 509: TRISB7 = 0;
  1109  001B  1386               	bcf	6,7
  1110                           
  1111                           ;main.c: 510: TRISB6 = 0;
  1112  001C  1306               	bcf	6,6
  1113                           
  1114                           ;main.c: 513: initPin();
  1115  001D  118A  2775  118A   	fcall	_initPin
  1116                           
  1117                           ;main.c: 516: TRISB2 = 1;
  1118  0020  1303               	bcf	3,6	;RP1=0, select bank1
  1119  0021  1506               	bsf	6,2
  1120                           
  1121                           ;main.c: 519: TRISA7 = 1;
  1122  0022  1785               	bsf	5,7
  1123                           
  1124                           ;main.c: 521: TRISB4 = 1;
  1125  0023  1606               	bsf	6,4
  1126                           
  1127                           ;main.c: 523: clock_config();
  1128  0024  158A  27D4  118A   	fcall	_clock_config
  1129                           
  1130                           ;main.c: 524: timer1_config();
  1131  0027  158A  27F6  118A   	fcall	_timer1_config
  1132                           
  1133                           ;main.c: 525: timer1_interrupt_config();
  1134  002A  118A  27FC  118A   	fcall	_timer1_interrupt_config
  1135                           
  1136                           ;main.c: 527: adc_test_init(14,3);
  1137  002D  3003               	movlw	3
  1138  002E  1283               	bcf	3,5	;RP0=0, select bank0
  1139  002F  00A0               	movwf	?_adc_test_init
  1140  0030  300E               	movlw	14
  1141  0031  118A  26CA  118A   	fcall	_adc_test_init
  1142                           
  1143                           ;main.c: 529: dac_init();
  1144  0034  158A  2794  118A   	fcall	_dac_init
  1145                           
  1146                           ;main.c: 530: op1_init();
  1147  0037  118A  27F1  118A   	fcall	_op1_init
  1148                           
  1149                           ;main.c: 531: op2_init();
  1150  003A  158A  27A5  118A   	fcall	_op2_init
  1151                           
  1152                           ;main.c: 534: adc_start();
  1153  003D  118A  26DF  118A   	fcall	_adc_start
  1154  0040                     l4693:	
  1155  0040  0064               	clrwdt	;#
  1156                           
  1157                           ;main.c: 577: process_AD_Converter_Value();
  1158  0041  118A  2685  118A   	fcall	_process_AD_Converter_Value
  1159                           
  1160                           ;main.c: 579: if( isPermitSampleTime() )
  1161  0044  158A  2799  118A   	fcall	_isPermitSampleTime
  1162  0047  3A00               	xorlw	0
  1163  0048  1903               	skipnz
  1164  0049  2840               	goto	l4693
  1165                           
  1166                           ;main.c: 580: {
  1167                           ;main.c: 583: clrSampeTime();
  1168  004A  118A  2002  118A   	fcall	_clrSampeTime
  1169                           
  1170                           ;main.c: 598: switch(enumMainLoopStep)
  1171  004D  2CB2               	goto	l5367
  1172  004E                     l4701:	
  1173                           
  1174                           ;main.c: 601: {
  1175                           ;main.c: 606: static unsigned char ucTimerZeroPoint5s = 0;
  1176                           ;main.c: 607: if(getAdOriginalCh14Value() > 1950)
  1177  004E  118A  25CD  118A   	fcall	_getAdOriginalCh14Value
  1178  0051  3007               	movlw	7
  1179  0052  0247               	subwf	?_getAdOriginalCh14Value+1,w
  1180  0053  309F               	movlw	159
  1181  0054  1903               	skipnz
  1182  0055  0246               	subwf	?_getAdOriginalCh14Value,w
  1183  0056  1C03               	skipc
  1184  0057  285A               	goto	l4705
  1185                           
  1186                           ;main.c: 608: {
  1187                           ;main.c: 609: ucTimerZeroPoint5s++;
  1188  0058  0AEB               	incf	main@ucTimerZeroPoint5s,f
  1189                           
  1190                           ;main.c: 610: }
  1191  0059  2868               	goto	l4713
  1192  005A                     l4705:	
  1193                           
  1194                           ;main.c: 611: else
  1195                           ;main.c: 612: {
  1196                           ;main.c: 613: static unsigned char bInit20Min = 0;
  1197                           ;main.c: 614: if(!bInit20Min)
  1198  005A  08D0               	movf	main@bInit20Min,f
  1199  005B  1D03               	skipz
  1200  005C  2866               	goto	l4711
  1201  005D  30B0               	movlw	176
  1202                           
  1203                           ;main.c: 615: {
  1204                           ;main.c: 616: bInit20Min = 1;
  1205  005E  01D0               	clrf	main@bInit20Min
  1206  005F  0AD0               	incf	main@bInit20Min,f
  1207                           
  1208                           ;main.c: 617: startTwentyMinTimer(1200);
  1209  0060  00A0               	movwf	?_startTwentyMinTimer
  1210  0061  3004               	movlw	4
  1211  0062  00A1               	movwf	?_startTwentyMinTimer+1
  1212  0063  118A  2761  118A   	fcall	_startTwentyMinTimer
  1213  0066                     l4711:	
  1214                           
  1215                           ;main.c: 618: }
  1216                           ;main.c: 619: ucTimerZeroPoint5s = 0;
  1217  0066  1283               	bcf	3,5	;RP0=0, select bank0
  1218  0067  01EB               	clrf	main@ucTimerZeroPoint5s
  1219  0068                     l4713:	
  1220                           
  1221                           ;main.c: 620: }
  1222                           ;main.c: 622: if( ucTimerZeroPoint5s >= 5 )
  1223  0068  3005               	movlw	5
  1224  0069  026B               	subwf	main@ucTimerZeroPoint5s,w
  1225  006A  1C03               	skipc
  1226  006B  2872               	goto	l4721
  1227                           
  1228                           ;main.c: 623: {
  1229                           ;main.c: 624: ucTimerZeroPoint5s = 0;
  1230  006C  01EB               	clrf	main@ucTimerZeroPoint5s
  1231                           
  1232                           ;main.c: 625: clearTwentyMinTimer();
  1233  006D  158A  279F  118A   	fcall	_clearTwentyMinTimer
  1234                           
  1235                           ;main.c: 626: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  1236  0070  01D2               	clrf	main@enumMainLoopStep
  1237  0071  0AD2               	incf	main@enumMainLoopStep,f
  1238  0072                     l4721:	
  1239                           
  1240                           ;main.c: 627: }
  1241                           ;main.c: 629: if( isFinishedTwentyMinTimer() )
  1242  0072  118A  27E5  118A   	fcall	_isFinishedTwentyMinTimer
  1243  0075  3A00               	xorlw	0
  1244  0076  1903               	skipnz
  1245  0077  2840               	goto	l4693
  1246                           
  1247                           ;main.c: 630: {
  1248                           ;main.c: 631: enumMainLoopStep = MAIN_LOOP_STEP_12_HOUR_END;
  1249  0078  3009               	movlw	9
  1250  0079  1283               	bcf	3,5	;RP0=0, select bank0
  1251  007A  00D2               	movwf	main@enumMainLoopStep
  1252                           
  1253                           ;main.c: 632: ucTimerZeroPoint5s = 0;
  1254  007B  01EB               	clrf	main@ucTimerZeroPoint5s
  1255  007C                     l762:	
  1256                           
  1257                           ;main.c: 633: }
  1258                           ;main.c: 634: break;
  1259  007C  2840               	goto	l4693
  1260  007D                     l4727:	
  1261                           
  1262                           ;main.c: 638: {
  1263                           ;main.c: 643: static unsigned char ucTimerZeroPoint3s = 0;
  1264                           ;main.c: 646: if(getAdOriginalCh14Value() > 1950)
  1265  007D  118A  25CD  118A   	fcall	_getAdOriginalCh14Value
  1266  0080  3007               	movlw	7
  1267  0081  0247               	subwf	?_getAdOriginalCh14Value+1,w
  1268  0082  309F               	movlw	159
  1269  0083  1903               	skipnz
  1270  0084  0246               	subwf	?_getAdOriginalCh14Value,w
  1271  0085  1C03               	skipc
  1272  0086  288B               	goto	l4733
  1273                           
  1274                           ;main.c: 647: {
  1275                           ;main.c: 649: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
  1276  0087  3002               	movlw	2
  1277  0088  00D2               	movwf	main@enumMainLoopStep
  1278                           
  1279                           ;main.c: 651: ucTimerZeroPoint3s = 0;
  1280  0089  01EA               	clrf	main@ucTimerZeroPoint3s
  1281                           
  1282                           ;main.c: 653: }
  1283  008A  2840               	goto	l4693
  1284  008B                     l4733:	
  1285  008B  3003               	movlw	3
  1286                           
  1287                           ;main.c: 654: else
  1288                           ;main.c: 655: {
  1289                           ;main.c: 656: ucTimerZeroPoint3s++;
  1290  008C  0AEA               	incf	main@ucTimerZeroPoint3s,f
  1291                           
  1292                           ;main.c: 658: if(ucTimerZeroPoint3s >= 3)
  1293  008D  026A               	subwf	main@ucTimerZeroPoint3s,w
  1294  008E  1C03               	skipc
  1295  008F  2840               	goto	l4693
  1296                           
  1297                           ;main.c: 659: {
  1298                           ;main.c: 660: ucTimerZeroPoint3s = 0;
  1299  0090  01EA               	clrf	main@ucTimerZeroPoint3s
  1300                           
  1301                           ;main.c: 662: clearPinPortAndTimer();
  1302  0091  118A  26E2  118A   	fcall	_clearPinPortAndTimer
  1303  0094  2840               	goto	l4693
  1304  0095                     l4741:	
  1305                           
  1306                           ;main.c: 670: {
  1307                           ;main.c: 675: static unsigned char ucTimerP5s = 0;
  1308                           ;main.c: 678: setPA6(1);
  1309  0095  3001               	movlw	1
  1310  0096  158A  27ED  118A   	fcall	_setPA6
  1311                           
  1312                           ;main.c: 680: if(ucTimerP5s < 5)
  1313  0099  3005               	movlw	5
  1314  009A  0268               	subwf	main@ucTimerP5s,w
  1315  009B  1803               	skipnc
  1316  009C  289F               	goto	l4747
  1317                           
  1318                           ;main.c: 681: ucTimerP5s++;
  1319  009D  0AE8               	incf	main@ucTimerP5s,f
  1320  009E  2840               	goto	l4693
  1321  009F                     l4747:	
  1322  009F  3003               	movlw	3
  1323                           
  1324                           ;main.c: 682: else
  1325                           ;main.c: 683: {
  1326                           ;main.c: 684: ucTimerP5s = 0;
  1327  00A0  01E8               	clrf	main@ucTimerP5s
  1328                           
  1329                           ;main.c: 686: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  1330  00A1  2C12               	goto	L16
  1331  00A2                     l4751:	
  1332                           
  1333                           ;main.c: 693: {
  1334                           ;main.c: 698: static unsigned char ucTimerADC1ZeroP5s = 0;
  1335                           ;main.c: 700: static unsigned char ucTimerLessADC1ZeroP5s = 0;
  1336                           ;main.c: 702: static unsigned char ucTimerLessADC1ZeroP5sFlag = 0;
  1337                           ;main.c: 704: static unsigned char ucTimerRightP5s = 0;
  1338                           ;main.c: 706: if(getAdOriginalCh1Value() < 115)
  1339  00A2  118A  25C3  118A   	fcall	_getAdOriginalCh1Value
  1340  00A5  3000               	movlw	0
  1341  00A6  0247               	subwf	?_getAdOriginalCh1Value+1,w
  1342  00A7  3073               	movlw	115
  1343  00A8  1903               	skipnz
  1344  00A9  0246               	subwf	?_getAdOriginalCh1Value,w
  1345  00AA  1803               	skipnc
  1346  00AB  28AF               	goto	l4757
  1347                           
  1348                           ;main.c: 707: {
  1349                           ;main.c: 708: ucTimerADC1ZeroP5s = 0;
  1350  00AC  01DB               	clrf	main@ucTimerADC1ZeroP5s
  1351                           
  1352                           ;main.c: 710: ucTimerLessADC1ZeroP5s++;
  1353  00AD  0AE7               	incf	main@ucTimerLessADC1ZeroP5s,f
  1354                           
  1355                           ;main.c: 711: }
  1356  00AE  28B1               	goto	l4761
  1357  00AF                     l4757:	
  1358                           
  1359                           ;main.c: 712: else
  1360                           ;main.c: 713: {
  1361                           ;main.c: 714: ucTimerADC1ZeroP5s++;
  1362  00AF  0ADB               	incf	main@ucTimerADC1ZeroP5s,f
  1363                           
  1364                           ;main.c: 716: ucTimerLessADC1ZeroP5s = 0;
  1365  00B0  01E7               	clrf	main@ucTimerLessADC1ZeroP5s
  1366  00B1                     l4761:	
  1367                           
  1368                           ;main.c: 717: }
  1369                           ;main.c: 719: if(ucTimerADC1ZeroP5s >= 3)
  1370  00B1  3003               	movlw	3
  1371  00B2  025B               	subwf	main@ucTimerADC1ZeroP5s,w
  1372  00B3  1C03               	skipc
  1373  00B4  28B8               	goto	l4767
  1374  00B5  3004               	movlw	4
  1375                           
  1376                           ;main.c: 720: {
  1377                           ;main.c: 721: ucTimerADC1ZeroP5s = 0;
  1378  00B6  01DB               	clrf	main@ucTimerADC1ZeroP5s
  1379                           
  1380                           ;main.c: 722: enumMainLoopStep = MAIN_LOOP_STEP_FOURTH;
  1381  00B7  28D0               	goto	L2
  1382  00B8                     l4767:	
  1383                           ;main.c: 723: }
  1384                           
  1385                           
  1386                           ;main.c: 724: else if( ucTimerLessADC1ZeroP5s >= 3)
  1387  00B8  3003               	movlw	3
  1388  00B9  0267               	subwf	main@ucTimerLessADC1ZeroP5s,w
  1389  00BA  1C03               	skipc
  1390  00BB  28D1               	goto	l4781
  1391                           
  1392                           ;main.c: 725: {
  1393                           ;main.c: 727: if(getAdOriginalCh1Value() < 105)
  1394  00BC  118A  25C3  118A   	fcall	_getAdOriginalCh1Value
  1395  00BF  3000               	movlw	0
  1396  00C0  0247               	subwf	?_getAdOriginalCh1Value+1,w
  1397  00C1  3069               	movlw	105
  1398  00C2  1903               	skipnz
  1399  00C3  0246               	subwf	?_getAdOriginalCh1Value,w
  1400  00C4  1803               	skipnc
  1401  00C5  28C8               	goto	l4773
  1402                           
  1403                           ;main.c: 728: {
  1404                           ;main.c: 729: ucTimerRightP5s++;
  1405  00C6  0AE9               	incf	main@ucTimerRightP5s,f
  1406                           
  1407                           ;main.c: 730: }
  1408  00C7  28C9               	goto	l4775
  1409  00C8                     l4773:	
  1410                           
  1411                           ;main.c: 731: else
  1412                           ;main.c: 732: {
  1413                           ;main.c: 733: ucTimerRightP5s = 0;
  1414  00C8  01E9               	clrf	main@ucTimerRightP5s
  1415  00C9                     l4775:	
  1416                           
  1417                           ;main.c: 734: }
  1418                           ;main.c: 736: if(ucTimerRightP5s >= 3)
  1419  00C9  3003               	movlw	3
  1420  00CA  0269               	subwf	main@ucTimerRightP5s,w
  1421  00CB  1C03               	skipc
  1422  00CC  28D1               	goto	l4781
  1423  00CD  3008               	movlw	8
  1424                           
  1425                           ;main.c: 737: {
  1426                           ;main.c: 738: ucTimerLessADC1ZeroP5s = 0;
  1427  00CE  01E7               	clrf	main@ucTimerLessADC1ZeroP5s
  1428                           
  1429                           ;main.c: 739: ucTimerRightP5s = 0;
  1430  00CF  01E9               	clrf	main@ucTimerRightP5s
  1431  00D0                     L2:	
  1432                           ;main.c: 740: enumMainLoopStep = MAIN_LOOP_STEP_3_HOUR_BRANCH;
  1433                           
  1434  00D0  00D2               	movwf	main@enumMainLoopStep
  1435  00D1                     l4781:	
  1436                           ;main.c: 747: else
  1437                           ;main.c: 748: {
  1438                           ;main.c: 749: ;
  1439                           
  1440                           ;main.c: 741: }
  1441                           
  1442                           
  1443                           ;main.c: 750: }
  1444                           ;main.c: 752: if((MAIN_LOOP_STEP_3_HOUR_BRANCH == enumMainLoopStep) || (MAIN_LOOP_STEP_F
      +                          OURTH == enumMainLoopStep))
  1445  00D1  0852               	movf	main@enumMainLoopStep,w
  1446  00D2  3A08               	xorlw	8
  1447  00D3  1903               	skipnz
  1448  00D4  28D9               	goto	l4785
  1449  00D5  0852               	movf	main@enumMainLoopStep,w
  1450  00D6  3A04               	xorlw	4
  1451  00D7  1D03               	skipz
  1452  00D8  2840               	goto	l4693
  1453  00D9                     l4785:	
  1454                           
  1455                           ;main.c: 753: {
  1456                           ;main.c: 754: ucTimerRightP5s = 0;
  1457  00D9  01E9               	clrf	main@ucTimerRightP5s
  1458                           
  1459                           ;main.c: 755: ucTimerADC1ZeroP5s = 0;
  1460  00DA  01DB               	clrf	main@ucTimerADC1ZeroP5s
  1461                           
  1462                           ;main.c: 756: ucTimerLessADC1ZeroP5s = 0;
  1463  00DB  01E7               	clrf	main@ucTimerLessADC1ZeroP5s
  1464  00DC  2840               	goto	l4693
  1465  00DD                     l4787:	
  1466                           
  1467                           ;main.c: 764: {
  1468                           ;main.c: 770: startTwelveHourTimer(36000);
  1469  00DD  30A0               	movlw	160
  1470  00DE  00A0               	movwf	?_startTwelveHourTimer
  1471  00DF  308C               	movlw	140
  1472  00E0  00A1               	movwf	?_startTwelveHourTimer+1
  1473  00E1  118A  274D  118A   	fcall	_startTwelveHourTimer
  1474                           
  1475                           ;main.c: 771: enumMainLoopStep = MAIN_LOOP_STEP_FIFTH;
  1476  00E4  3005               	movlw	5
  1477  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  1478  00E6  00D2               	movwf	main@enumMainLoopStep
  1479                           
  1480                           ;main.c: 773: bCheckTweHour = 0;
  1481  00E7  01CF               	clrf	main@bCheckTweHour
  1482                           
  1483                           ;main.c: 775: break;
  1484  00E8  2840               	goto	l4693
  1485  00E9                     l4793:	
  1486                           
  1487                           ;main.c: 779: {
  1488                           ;main.c: 783: if(( isFinishedTwelveHoursTimer() && (! bCheckTweHour)))
  1489  00E9  118A  27D9  118A   	fcall	_isFinishedTwelveHoursTimer
  1490  00EC  3A00               	xorlw	0
  1491  00ED  1903               	skipnz
  1492  00EE  2BA0               	goto	l5247
  1493  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  1494  00F0  08CF               	movf	main@bCheckTweHour,f
  1495  00F1  1D03               	skipz
  1496  00F2  2BA0               	goto	l5247
  1497                           
  1498                           ;main.c: 784: {
  1499                           ;main.c: 785: enumMainLoopStep = MAIN_LOOP_STEP_12_HOUR_END;
  1500  00F3  3009               	movlw	9
  1501  00F4  00D2               	movwf	main@enumMainLoopStep
  1502                           
  1503                           ;main.c: 786: bCheckTweHour = 1;
  1504  00F5  01CF               	clrf	main@bCheckTweHour
  1505  00F6  0ACF               	incf	main@bCheckTweHour,f
  1506                           
  1507                           ;main.c: 787: }
  1508  00F7  2840               	goto	l4693
  1509  00F8                     l804:	
  1510                           ;main.c: 793: {
  1511                           ;main.c: 794: case ADC4_STEP_INIT:
  1512                           
  1513                           
  1514                           ;main.c: 795: {
  1515                           ;main.c: 800: ucADC4_Step = ADC4_STEP_FIRST;
  1516  00F8  01D3               	clrf	main@ucADC4_Step
  1517  00F9  0AD3               	incf	main@ucADC4_Step,f
  1518                           
  1519                           ;main.c: 801: break;
  1520  00FA  2840               	goto	l4693
  1521  00FB                     l4801:	
  1522                           
  1523                           ;main.c: 805: {
  1524                           ;main.c: 809: static unsigned int uiOldValue = 0, uiMinValue = 0, uiMaxValue = 0;
  1525                           ;main.c: 811: static unsigned char bInitFlag = 0;
  1526                           ;main.c: 813: if( 0 == bInitFlag)
  1527  00FB  08D1               	movf	main@bInitFlag,f
  1528  00FC  1D03               	skipz
  1529  00FD  2907               	goto	l4807
  1530                           
  1531                           ;main.c: 814: {
  1532                           ;main.c: 815: bInitFlag = 1;
  1533  00FE  01D1               	clrf	main@bInitFlag
  1534  00FF  0AD1               	incf	main@bInitFlag,f
  1535                           
  1536                           ;main.c: 816: uiOldValue = getAdOriginaCh4Value();
  1537  0100  118A  25B9  118A   	fcall	_getAdOriginaCh4Value
  1538  0103  0847               	movf	?_getAdOriginaCh4Value+1,w
  1539  0104  00C9               	movwf	main@uiOldValue+1
  1540  0105  0846               	movf	?_getAdOriginaCh4Value,w
  1541  0106  00C8               	movwf	main@uiOldValue
  1542  0107                     l4807:	
  1543                           
  1544                           ;main.c: 817: }
  1545                           ;main.c: 826: if(LESS_THAN_1911 == ucChannel4Type)
  1546  0107  08D4               	movf	main@ucChannel4Type,f
  1547  0108  1D03               	skipz
  1548  0109  290F               	goto	l4813
  1549                           
  1550                           ;main.c: 827: {
  1551                           ;main.c: 828: uiMinValue = 0;
  1552  010A  1683               	bsf	3,5	;RP0=1, select bank1
  1553  010B  308B               	movlw	139
  1554  010C  01AA               	clrf	main@uiMinValue^(0+128)
  1555  010D  01AB               	clrf	(main@uiMinValue+1)^(0+128)
  1556                           
  1557                           ;main.c: 829: uiMaxValue = 1931;
  1558  010E  2917               	goto	L17
  1559  010F                     l4813:	
  1560                           ;main.c: 830: }
  1561                           
  1562                           
  1563                           ;main.c: 831: else if(BETWEEN_1911_AND_2067 == ucChannel4Type)
  1564  010F  0B54               	decfsz	main@ucChannel4Type,w
  1565  0110  291A               	goto	l4817
  1566                           
  1567                           ;main.c: 832: {
  1568                           ;main.c: 833: uiMinValue = 1931 - 40;
  1569  0111  3063               	movlw	99
  1570  0112  1683               	bsf	3,5	;RP0=1, select bank1
  1571  0113  00AA               	movwf	main@uiMinValue^(0+128)
  1572  0114  3007               	movlw	7
  1573  0115  00AB               	movwf	(main@uiMinValue^(0+128)+1)
  1574                           
  1575                           ;main.c: 834: uiMaxValue = 2047;
  1576  0116  30FF               	movlw	255
  1577  0117                     L17:	
  1578  0117  00A8               	movwf	main@uiMaxValue^(0+128)
  1579  0118  3007               	movlw	7
  1580  0119  2933               	goto	L3
  1581  011A                     l4817:	
  1582                           ;main.c: 835: }
  1583                           
  1584                           
  1585                           ;main.c: 836: else if(BETWEEN_2067_AND_2204 == ucChannel4Type)
  1586  011A  0854               	movf	main@ucChannel4Type,w
  1587  011B  3A02               	xorlw	2
  1588  011C  1D03               	skipz
  1589  011D  2925               	goto	l4821
  1590                           
  1591                           ;main.c: 837: {
  1592                           ;main.c: 838: uiMinValue = 2047 - 40;
  1593  011E  30D7               	movlw	215
  1594  011F  1683               	bsf	3,5	;RP0=1, select bank1
  1595  0120  00AA               	movwf	main@uiMinValue^(0+128)
  1596  0121  3007               	movlw	7
  1597  0122  00AB               	movwf	(main@uiMinValue^(0+128)+1)
  1598                           
  1599                           ;main.c: 839: uiMaxValue = 2164;
  1600  0123  3074               	movlw	116
  1601  0124  2931               	goto	L18
  1602  0125                     l4821:	
  1603                           ;main.c: 840: }
  1604                           
  1605                           
  1606                           ;main.c: 841: else if(BETWEEN_2204_AND_2340 == ucChannel4Type)
  1607  0125  0854               	movf	main@ucChannel4Type,w
  1608  0126  3A03               	xorlw	3
  1609  0127  1D03               	skipz
  1610  0128  292B               	goto	l4825
  1611                           
  1612                           ;main.c: 842: {
  1613                           ;main.c: 843: uiMinValue = 2164 - 40;
  1614  0129  304C               	movlw	76
  1615  012A  292C               	goto	L20
  1616  012B                     l4825:	
  1617                           ;main.c: 845: }
  1618                           
  1619                           ;main.c: 844: uiMaxValue = 2281;
  1620                           
  1621                           
  1622                           ;main.c: 846: else
  1623                           ;main.c: 847: {
  1624                           ;main.c: 848: uiMinValue = 2281 - 40;
  1625  012B  30C1               	movlw	193
  1626  012C                     L20:	
  1627  012C  1683               	bsf	3,5	;RP0=1, select bank1
  1628  012D  00AA               	movwf	main@uiMinValue^(0+128)
  1629  012E  3008               	movlw	8
  1630  012F  00AB               	movwf	(main@uiMinValue^(0+128)+1)
  1631                           
  1632                           ;main.c: 849: uiMaxValue = 2281;
  1633  0130  30E9               	movlw	233
  1634  0131                     L18:	
  1635  0131  00A8               	movwf	main@uiMaxValue^(0+128)
  1636  0132  3008               	movlw	8
  1637  0133                     L3:	
  1638  0133  00A9               	movwf	(main@uiMaxValue^(0+128)+1)
  1639                           
  1640                           ;main.c: 850: }
  1641                           ;main.c: 853: if(( getAdOriginaCh4Value() < uiMinValue )
  1642                           ;main.c: 854: || (getAdOriginaCh4Value() > uiMaxValue ))
  1643  0134  118A  25B9  118A   	fcall	_getAdOriginaCh4Value
  1644  0137  1683               	bsf	3,5	;RP0=1, select bank1
  1645  0138  082B               	movf	(main@uiMinValue+1)^(0+128),w
  1646  0139  1283               	bcf	3,5	;RP0=0, select bank0
  1647  013A  0247               	subwf	?_getAdOriginaCh4Value+1,w
  1648  013B  1D03               	skipz
  1649  013C  2941               	goto	u2125
  1650  013D  1683               	bsf	3,5	;RP0=1, select bank1
  1651  013E  082A               	movf	main@uiMinValue^(0+128),w
  1652  013F  1283               	bcf	3,5	;RP0=0, select bank0
  1653  0140  0246               	subwf	?_getAdOriginaCh4Value,w
  1654  0141                     u2125:	
  1655  0141  1C03               	skipc
  1656  0142  2951               	goto	l4831
  1657  0143  118A  25B9  118A   	fcall	_getAdOriginaCh4Value
  1658  0146  0847               	movf	?_getAdOriginaCh4Value+1,w
  1659  0147  1683               	bsf	3,5	;RP0=1, select bank1
  1660  0148  0229               	subwf	(main@uiMaxValue+1)^(0+128),w
  1661  0149  1D03               	skipz
  1662  014A  294F               	goto	u2135
  1663  014B  1283               	bcf	3,5	;RP0=0, select bank0
  1664  014C  0846               	movf	?_getAdOriginaCh4Value,w
  1665  014D  1683               	bsf	3,5	;RP0=1, select bank1
  1666  014E  0228               	subwf	main@uiMaxValue^(0+128),w
  1667  014F                     u2135:	
  1668  014F  1803               	skipnc
  1669  0150  2958               	goto	l4833
  1670  0151                     l4831:	
  1671                           
  1672                           ;main.c: 855: {
  1673                           ;main.c: 856: uiOldValue = getAdOriginaCh4Value();
  1674  0151  118A  25B9  118A   	fcall	_getAdOriginaCh4Value
  1675  0154  0847               	movf	?_getAdOriginaCh4Value+1,w
  1676  0155  00C9               	movwf	main@uiOldValue+1
  1677  0156  0846               	movf	?_getAdOriginaCh4Value,w
  1678  0157  00C8               	movwf	main@uiOldValue
  1679  0158                     l4833:	
  1680                           
  1681                           ;main.c: 857: }
  1682                           ;main.c: 859: if( uiOldValue < 1931 )
  1683  0158  3007               	movlw	7
  1684  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1685  015A  0249               	subwf	main@uiOldValue+1,w
  1686  015B  308B               	movlw	139
  1687  015C  1903               	skipnz
  1688  015D  0248               	subwf	main@uiOldValue,w
  1689  015E  1803               	skipnc
  1690  015F  2962               	goto	l4837
  1691                           
  1692                           ;main.c: 860: ucChannel4Type = LESS_THAN_1911;
  1693  0160  01D4               	clrf	main@ucChannel4Type
  1694  0161  2980               	goto	l828
  1695  0162                     l4837:	
  1696                           
  1697                           ;main.c: 861: else if( uiOldValue < 2047 )
  1698  0162  3007               	movlw	7
  1699  0163  0249               	subwf	main@uiOldValue+1,w
  1700  0164  30FF               	movlw	255
  1701  0165  1903               	skipnz
  1702  0166  0248               	subwf	main@uiOldValue,w
  1703  0167  1803               	skipnc
  1704  0168  296C               	goto	l4841
  1705                           
  1706                           ;main.c: 862: ucChannel4Type = BETWEEN_1911_AND_2067;
  1707  0169  01D4               	clrf	main@ucChannel4Type
  1708  016A  0AD4               	incf	main@ucChannel4Type,f
  1709  016B  2980               	goto	l828
  1710  016C                     l4841:	
  1711                           
  1712                           ;main.c: 863: else if( uiOldValue < 2164 )
  1713  016C  3008               	movlw	8
  1714  016D  0249               	subwf	main@uiOldValue+1,w
  1715  016E  3074               	movlw	116
  1716  016F  1903               	skipnz
  1717  0170  0248               	subwf	main@uiOldValue,w
  1718  0171  1803               	skipnc
  1719  0172  2975               	goto	l4845
  1720                           
  1721                           ;main.c: 864: ucChannel4Type = BETWEEN_2067_AND_2204;
  1722  0173  3002               	movlw	2
  1723  0174  297F               	goto	L4
  1724  0175                     l4845:	
  1725                           
  1726                           ;main.c: 865: else if( uiOldValue < 2281 )
  1727  0175  3008               	movlw	8
  1728  0176  0249               	subwf	main@uiOldValue+1,w
  1729  0177  30E9               	movlw	233
  1730  0178  1903               	skipnz
  1731  0179  0248               	subwf	main@uiOldValue,w
  1732  017A  1803               	skipnc
  1733  017B  297E               	goto	l4849
  1734                           
  1735                           ;main.c: 866: ucChannel4Type = BETWEEN_2204_AND_2340;
  1736  017C  3003               	movlw	3
  1737  017D  297F               	goto	L4
  1738  017E                     l4849:	
  1739                           
  1740                           ;main.c: 867: else
  1741                           ;main.c: 868: ucChannel4Type = MORE_THAN_2340;
  1742  017E  3004               	movlw	4
  1743  017F                     L4:	
  1744  017F  00D4               	movwf	main@ucChannel4Type
  1745  0180                     l828:	
  1746                           
  1747                           ;main.c: 870: ucADC4_Step = ADC4_STEP_SECOND;
  1748  0180  3002               	movlw	2
  1749  0181  2B96               	goto	L14
  1750  0182                     l843:	
  1751                           ;main.c: 888: {
  1752                           ;main.c: 889: case 0:
  1753                           
  1754                           ;main.c: 871: break;
  1755                           
  1756                           
  1757                           ;main.c: 890: {
  1758                           ;main.c: 893: PB0 = 1;
  1759  0182  1406               	bsf	6,0
  1760  0183                     l4851:	
  1761                           
  1762                           ;main.c: 897: ucLoaderStep++;
  1763  0183  0AD6               	incf	main@ucLoaderStep,f
  1764                           
  1765                           ;main.c: 898: break;
  1766  0184  2840               	goto	l4693
  1767  0185                     l4853:	
  1768                           
  1769                           ;main.c: 902: {
  1770                           ;main.c: 903: if(ucTimerDelay >= 5)
  1771  0185  3005               	movlw	5
  1772  0186  025C               	subwf	main@ucTimerDelay,w
  1773  0187  1C03               	skipc
  1774  0188  298C               	goto	l4861
  1775                           
  1776                           ;main.c: 904: {
  1777                           ;main.c: 906: PA0 = 1;
  1778  0189  1405               	bsf	5,0
  1779  018A                     l4857:	
  1780                           
  1781                           ;main.c: 910: ucTimerDelay = 0;
  1782  018A  01DC               	clrf	main@ucTimerDelay
  1783  018B  2983               	goto	l4851
  1784  018C                     l4861:	
  1785                           
  1786                           ;main.c: 913: else
  1787                           ;main.c: 914: ucTimerDelay++;
  1788  018C  0ADC               	incf	main@ucTimerDelay,f
  1789  018D  2840               	goto	l4693
  1790  018E                     l4863:	
  1791                           
  1792                           ;main.c: 919: {
  1793                           ;main.c: 920: if(ucTimerDelay >= 5)
  1794  018E  3005               	movlw	5
  1795  018F  025C               	subwf	main@ucTimerDelay,w
  1796  0190  1C03               	skipc
  1797  0191  298C               	goto	l4861
  1798                           
  1799                           ;main.c: 921: {
  1800                           ;main.c: 923: PA1= 1;
  1801  0192  1485               	bsf	5,1
  1802  0193  298A               	goto	l4857
  1803  0194                     l4873:	
  1804                           
  1805                           ;main.c: 937: {
  1806                           ;main.c: 938: if(ucTimerDelay >= 5)
  1807  0194  3005               	movlw	5
  1808  0195  025C               	subwf	main@ucTimerDelay,w
  1809  0196  1C03               	skipc
  1810  0197  298C               	goto	l4861
  1811                           
  1812                           ;main.c: 939: {
  1813                           ;main.c: 941: PA2= 1;
  1814  0198  1505               	bsf	5,2
  1815  0199  298A               	goto	l4857
  1816  019A                     l4883:	
  1817                           
  1818                           ;main.c: 955: {
  1819                           ;main.c: 956: if(ucTimerDelay >= 5)
  1820  019A  3005               	movlw	5
  1821  019B  025C               	subwf	main@ucTimerDelay,w
  1822  019C  1C03               	skipc
  1823  019D  298C               	goto	l4861
  1824                           
  1825                           ;main.c: 957: {
  1826                           ;main.c: 959: PA3 = 1;
  1827  019E  1585               	bsf	5,3
  1828  019F  298A               	goto	l4857
  1829  01A0                     l4893:	
  1830                           
  1831                           ;main.c: 972: {
  1832                           ;main.c: 973: if(ucTimerDelay >= 5)
  1833  01A0  3005               	movlw	5
  1834  01A1  025C               	subwf	main@ucTimerDelay,w
  1835  01A2  1C03               	skipc
  1836  01A3  298C               	goto	l4861
  1837                           
  1838                           ;main.c: 974: {
  1839                           ;main.c: 976: PB0 = 0;
  1840  01A4  1006               	bcf	6,0
  1841                           
  1842                           ;main.c: 977: PA0 = 0;
  1843  01A5  1005               	bcf	5,0
  1844                           
  1845                           ;main.c: 978: PA1 = 0;
  1846  01A6  1085               	bcf	5,1
  1847                           
  1848                           ;main.c: 979: PA2 = 0;
  1849  01A7  1105               	bcf	5,2
  1850                           
  1851                           ;main.c: 980: PA3 = 0;
  1852  01A8  1185               	bcf	5,3
  1853  01A9  298A               	goto	l4857
  1854  01AA                     l4903:	
  1855                           
  1856                           ;main.c: 997: {
  1857                           ;main.c: 998: if(ucTimerDelay >= 1)
  1858  01AA  085C               	movf	main@ucTimerDelay,w
  1859  01AB  1903               	btfsc	3,2
  1860  01AC  298C               	goto	l4861
  1861                           
  1862                           ;main.c: 999: {
  1863                           ;main.c: 1000: ucTimerDelay = 0;
  1864  01AD  01DC               	clrf	main@ucTimerDelay
  1865                           
  1866                           ;main.c: 1002: ucLoaderStep = 0;
  1867  01AE  01D6               	clrf	main@ucLoaderStep
  1868  01AF                     l4907:	
  1869                           
  1870                           ;main.c: 1003: ucADC4_Step = ADC4_STEP_THIRD;
  1871  01AF  3003               	movlw	3
  1872  01B0  2B96               	goto	L14
  1873  01B1                     l4913:	
  1874                           ;main.c: 1004: }
  1875                           
  1876  01B1  0856               	movf	main@ucLoaderStep,w
  1877                           
  1878                           ; Switch size 1, requested type "space"
  1879                           ; Number of cases is 7, Range of values is 0 to 6
  1880                           ; switch strategies available:
  1881                           ; Name         Instructions Cycles
  1882                           ; direct_byte           21     7 (fixed)
  1883                           ; simple_byte           22    12 (average)
  1884                           ; jumptable            260     6 (fixed)
  1885                           ; rangetable            11     6 (fixed)
  1886                           ; spacedrange           20     9 (fixed)
  1887                           ; locatedrange           7     3 (fixed)
  1888                           ;	Chosen strategy is direct_byte
  1889  01B2  0084               	movwf	4
  1890  01B3  3007               	movlw	7
  1891  01B4  0204               	subwf	4,w
  1892  01B5  1803               	skipnc
  1893  01B6  2840               	goto	l4693
  1894  01B7  3007               	movlw	high S5657
  1895  01B8  008A               	movwf	10
  1896  01B9  1003               	clrc
  1897  01BA  0D04               	rlf	4,w
  1898  01BB  3E99               	addlw	low S5657
  1899  01BC  0082               	movwf	2
  1900  01BD                     l871:	
  1901                           ;main.c: 1023: {
  1902                           ;main.c: 1024: case 0:
  1903                           
  1904                           
  1905                           ;main.c: 1025: {
  1906                           ;main.c: 1027: PB0 = 1;
  1907  01BD  1406               	bsf	6,0
  1908  01BE                     l4915:	
  1909                           
  1910                           ;main.c: 1031: ucLoaderStep1++;
  1911  01BE  0AD7               	incf	main@ucLoaderStep1,f
  1912                           
  1913                           ;main.c: 1032: break;
  1914  01BF  2840               	goto	l4693
  1915  01C0                     l4917:	
  1916                           
  1917                           ;main.c: 1036: {
  1918                           ;main.c: 1037: if(ucTimerDelay1 >= 5)
  1919  01C0  3005               	movlw	5
  1920  01C1  025D               	subwf	main@ucTimerDelay1,w
  1921  01C2  1C03               	skipc
  1922  01C3  29C7               	goto	l4925
  1923                           
  1924                           ;main.c: 1038: {
  1925                           ;main.c: 1040: PA0 = 1;
  1926  01C4  1405               	bsf	5,0
  1927  01C5                     l4921:	
  1928                           
  1929                           ;main.c: 1044: ucTimerDelay1 = 0;
  1930  01C5  01DD               	clrf	main@ucTimerDelay1
  1931  01C6  29BE               	goto	l4915
  1932  01C7                     l4925:	
  1933                           
  1934                           ;main.c: 1047: else
  1935                           ;main.c: 1048: ucTimerDelay1++;
  1936  01C7  0ADD               	incf	main@ucTimerDelay1,f
  1937  01C8  2840               	goto	l4693
  1938  01C9                     l4927:	
  1939                           
  1940                           ;main.c: 1053: {
  1941                           ;main.c: 1054: if(ucTimerDelay1 >= 5)
  1942  01C9  3005               	movlw	5
  1943  01CA  025D               	subwf	main@ucTimerDelay1,w
  1944  01CB  1C03               	skipc
  1945  01CC  29C7               	goto	l4925
  1946                           
  1947                           ;main.c: 1055: {
  1948                           ;main.c: 1057: PA1= 1;
  1949  01CD  1485               	bsf	5,1
  1950  01CE  29C5               	goto	l4921
  1951  01CF                     l4937:	
  1952                           
  1953                           ;main.c: 1070: {
  1954                           ;main.c: 1071: if(ucTimerDelay1 >= 5)
  1955  01CF  3005               	movlw	5
  1956  01D0  025D               	subwf	main@ucTimerDelay1,w
  1957  01D1  1C03               	skipc
  1958  01D2  29C7               	goto	l4925
  1959                           
  1960                           ;main.c: 1072: {
  1961                           ;main.c: 1074: setPA2(1);
  1962  01D3  3001               	movlw	1
  1963  01D4  158A  27C4  118A   	fcall	_setPA2
  1964  01D7  29C5               	goto	l4921
  1965  01D8                     l4947:	
  1966                           
  1967                           ;main.c: 1084: {
  1968                           ;main.c: 1085: if(ucTimerDelay1 >= 5)
  1969  01D8  3005               	movlw	5
  1970  01D9  025D               	subwf	main@ucTimerDelay1,w
  1971  01DA  1C03               	skipc
  1972  01DB  29C7               	goto	l4925
  1973                           
  1974                           ;main.c: 1086: {
  1975                           ;main.c: 1088: setPA3(1);
  1976  01DC  3001               	movlw	1
  1977  01DD  158A  27CC  118A   	fcall	_setPA3
  1978  01E0  29C5               	goto	l4921
  1979  01E1                     l4957:	
  1980                           
  1981                           ;main.c: 1098: {
  1982                           ;main.c: 1099: if(ucTimerDelay1 >= 5)
  1983  01E1  3005               	movlw	5
  1984  01E2  025D               	subwf	main@ucTimerDelay1,w
  1985  01E3  1C03               	skipc
  1986  01E4  29C7               	goto	l4925
  1987                           
  1988                           ;main.c: 1100: {
  1989                           ;main.c: 1102: setPA0(0);
  1990  01E5  3000               	movlw	0
  1991  01E6  158A  27B4  118A   	fcall	_setPA0
  1992                           
  1993                           ;main.c: 1104: setPA1(0);
  1994  01E9  3000               	movlw	0
  1995  01EA  158A  27BC  118A   	fcall	_setPA1
  1996                           
  1997                           ;main.c: 1106: setPA2(0);
  1998  01ED  3000               	movlw	0
  1999  01EE  158A  27C4  118A   	fcall	_setPA2
  2000                           
  2001                           ;main.c: 1108: setPA3(0);
  2002  01F1  3000               	movlw	0
  2003  01F2  158A  27CC  118A   	fcall	_setPA3
  2004  01F5  29C5               	goto	l4921
  2005  01F6                     l4967:	
  2006                           
  2007                           ;main.c: 1118: {
  2008                           ;main.c: 1119: if(ucTimerDelay1 >= 1)
  2009  01F6  085D               	movf	main@ucTimerDelay1,w
  2010  01F7  1903               	btfsc	3,2
  2011  01F8  29C7               	goto	l4925
  2012                           
  2013                           ;main.c: 1120: {
  2014                           ;main.c: 1121: ucTimerDelay1 = 0;
  2015  01F9  01DD               	clrf	main@ucTimerDelay1
  2016                           
  2017                           ;main.c: 1123: ucLoaderStep1 = 0;
  2018  01FA  01D7               	clrf	main@ucLoaderStep1
  2019  01FB  29AF               	goto	l4907
  2020  01FC                     l4977:	
  2021  01FC  0857               	movf	main@ucLoaderStep1,w
  2022                           
  2023                           ; Switch size 1, requested type "space"
  2024                           ; Number of cases is 7, Range of values is 0 to 6
  2025                           ; switch strategies available:
  2026                           ; Name         Instructions Cycles
  2027                           ; direct_byte           21     7 (fixed)
  2028                           ; simple_byte           22    12 (average)
  2029                           ; jumptable            260     6 (fixed)
  2030                           ; rangetable            11     6 (fixed)
  2031                           ; spacedrange           20     9 (fixed)
  2032                           ; locatedrange           7     3 (fixed)
  2033                           ;	Chosen strategy is direct_byte
  2034  01FD  0084               	movwf	4
  2035  01FE  3007               	movlw	7
  2036  01FF  0204               	subwf	4,w
  2037  0200  1803               	skipnc
  2038  0201  2840               	goto	l4693
  2039  0202  3007               	movlw	high S5659
  2040  0203  008A               	movwf	10
  2041  0204  1003               	clrc
  2042  0205  0D04               	rlf	4,w
  2043  0206  3EA7               	addlw	low S5659
  2044  0207  0082               	movwf	2
  2045  0208                     l4979:	
  2046                           
  2047                           ;main.c: 1147: {
  2048                           ;main.c: 1149: setPB0(1);
  2049  0208  3001               	movlw	1
  2050  0209  158A  27E4  118A   	fcall	_setPB0
  2051                           
  2052                           ;main.c: 1151: setPA0(1);
  2053  020C  3001               	movlw	1
  2054  020D  158A  27B4  118A   	fcall	_setPA0
  2055  0210                     l4981:	
  2056                           
  2057                           ;main.c: 1152: ucLoaderStep2++;
  2058  0210  0AD8               	incf	main@ucLoaderStep2,f
  2059                           
  2060                           ;main.c: 1153: break;
  2061  0211  2840               	goto	l4693
  2062  0212                     l4983:	
  2063                           
  2064                           ;main.c: 1157: {
  2065                           ;main.c: 1158: if(ucTimerDelay2 >= 5)
  2066  0212  3005               	movlw	5
  2067  0213  025E               	subwf	main@ucTimerDelay2,w
  2068  0214  1C03               	skipc
  2069  0215  2A1C               	goto	l4991
  2070                           
  2071                           ;main.c: 1159: {
  2072                           ;main.c: 1161: setPA1(1);
  2073  0216  3001               	movlw	1
  2074  0217  158A  27BC  118A   	fcall	_setPA1
  2075  021A                     l4987:	
  2076                           
  2077                           ;main.c: 1162: ucTimerDelay2 = 0;
  2078  021A  01DE               	clrf	main@ucTimerDelay2
  2079  021B  2A10               	goto	l4981
  2080  021C                     l4991:	
  2081                           
  2082                           ;main.c: 1165: else
  2083                           ;main.c: 1166: ucTimerDelay2++;
  2084  021C  0ADE               	incf	main@ucTimerDelay2,f
  2085  021D  2840               	goto	l4693
  2086  021E                     l4993:	
  2087                           
  2088                           ;main.c: 1171: {
  2089                           ;main.c: 1172: if(ucTimerDelay2 >= 5)
  2090  021E  3005               	movlw	5
  2091  021F  025E               	subwf	main@ucTimerDelay2,w
  2092  0220  1C03               	skipc
  2093  0221  2A1C               	goto	l4991
  2094                           
  2095                           ;main.c: 1173: {
  2096                           ;main.c: 1175: setPA2(1);
  2097  0222  3001               	movlw	1
  2098  0223  158A  27C4  118A   	fcall	_setPA2
  2099  0226  2A1A               	goto	l4987
  2100  0227                     l5003:	
  2101                           
  2102                           ;main.c: 1185: {
  2103                           ;main.c: 1186: if(ucTimerDelay2 >= 5)
  2104  0227  3005               	movlw	5
  2105  0228  025E               	subwf	main@ucTimerDelay2,w
  2106  0229  1C03               	skipc
  2107  022A  2A1C               	goto	l4991
  2108                           
  2109                           ;main.c: 1187: {
  2110                           ;main.c: 1189: setPA3(1);
  2111  022B  3001               	movlw	1
  2112  022C  158A  27CC  118A   	fcall	_setPA3
  2113  022F  2A1A               	goto	l4987
  2114  0230                     l5013:	
  2115                           
  2116                           ;main.c: 1199: {
  2117                           ;main.c: 1200: if(ucTimerDelay2 >= 5)
  2118  0230  3005               	movlw	5
  2119  0231  025E               	subwf	main@ucTimerDelay2,w
  2120  0232  1C03               	skipc
  2121  0233  2A1C               	goto	l4991
  2122                           
  2123                           ;main.c: 1201: {
  2124                           ;main.c: 1204: setPA1(0);
  2125  0234  3000               	movlw	0
  2126  0235  158A  27BC  118A   	fcall	_setPA1
  2127                           
  2128                           ;main.c: 1206: setPA2(0);
  2129  0238  3000               	movlw	0
  2130  0239  158A  27C4  118A   	fcall	_setPA2
  2131                           
  2132                           ;main.c: 1208: setPA3(0);
  2133  023C  3000               	movlw	0
  2134  023D  158A  27CC  118A   	fcall	_setPA3
  2135  0240  2A1A               	goto	l4987
  2136  0241                     l5023:	
  2137                           
  2138                           ;main.c: 1218: {
  2139                           ;main.c: 1219: if(ucTimerDelay2 >= 1)
  2140  0241  085E               	movf	main@ucTimerDelay2,w
  2141  0242  1903               	btfsc	3,2
  2142  0243  2A1C               	goto	l4991
  2143                           
  2144                           ;main.c: 1220: {
  2145                           ;main.c: 1221: ucTimerDelay2 = 0;
  2146  0244  01DE               	clrf	main@ucTimerDelay2
  2147                           
  2148                           ;main.c: 1223: ucLoaderStep2 = 0;
  2149  0245  01D8               	clrf	main@ucLoaderStep2
  2150  0246  29AF               	goto	l4907
  2151  0247                     l5033:	
  2152  0247  0858               	movf	main@ucLoaderStep2,w
  2153                           
  2154                           ; Switch size 1, requested type "space"
  2155                           ; Number of cases is 6, Range of values is 0 to 5
  2156                           ; switch strategies available:
  2157                           ; Name         Instructions Cycles
  2158                           ; direct_byte           19     7 (fixed)
  2159                           ; simple_byte           19    10 (average)
  2160                           ; jumptable            260     6 (fixed)
  2161                           ; rangetable            10     6 (fixed)
  2162                           ; spacedrange           18     9 (fixed)
  2163                           ; locatedrange           6     3 (fixed)
  2164                           ;	Chosen strategy is direct_byte
  2165  0248  0084               	movwf	4
  2166  0249  3006               	movlw	6
  2167  024A  0204               	subwf	4,w
  2168  024B  1803               	skipnc
  2169  024C  2840               	goto	l4693
  2170  024D  3007               	movlw	high S5661
  2171  024E  008A               	movwf	10
  2172  024F  1003               	clrc
  2173  0250  0D04               	rlf	4,w
  2174  0251  3EB5               	addlw	low S5661
  2175  0252  0082               	movwf	2
  2176  0253                     l5035:	
  2177                           
  2178                           ;main.c: 1247: {
  2179                           ;main.c: 1249: setPB0(1);
  2180  0253  3001               	movlw	1
  2181  0254  158A  27E4  118A   	fcall	_setPB0
  2182                           
  2183                           ;main.c: 1251: setPA0(1);
  2184  0257  3001               	movlw	1
  2185  0258  158A  27B4  118A   	fcall	_setPA0
  2186                           
  2187                           ;main.c: 1253: setPA1(1);
  2188  025B  3001               	movlw	1
  2189  025C  158A  27BC  118A   	fcall	_setPA1
  2190  025F                     l5037:	
  2191                           
  2192                           ;main.c: 1254: ucLoaderStep3++;
  2193  025F  0AD9               	incf	main@ucLoaderStep3,f
  2194                           
  2195                           ;main.c: 1255: break;
  2196  0260  2840               	goto	l4693
  2197  0261                     l5039:	
  2198                           
  2199                           ;main.c: 1259: {
  2200                           ;main.c: 1260: if(ucTimerDelay3 >= 5)
  2201  0261  3005               	movlw	5
  2202  0262  025F               	subwf	main@ucTimerDelay3,w
  2203  0263  1C03               	skipc
  2204  0264  2A6B               	goto	l5047
  2205                           
  2206                           ;main.c: 1261: {
  2207                           ;main.c: 1263: setPA2(1);
  2208  0265  3001               	movlw	1
  2209  0266  158A  27C4  118A   	fcall	_setPA2
  2210  0269                     l5043:	
  2211                           
  2212                           ;main.c: 1264: ucTimerDelay3 = 0;
  2213  0269  01DF               	clrf	main@ucTimerDelay3
  2214  026A  2A5F               	goto	l5037
  2215  026B                     l5047:	
  2216                           
  2217                           ;main.c: 1267: else
  2218                           ;main.c: 1268: ucTimerDelay3++;
  2219  026B  0ADF               	incf	main@ucTimerDelay3,f
  2220  026C  2840               	goto	l4693
  2221  026D                     l5049:	
  2222                           
  2223                           ;main.c: 1273: {
  2224                           ;main.c: 1274: if(ucTimerDelay3 >= 5)
  2225  026D  3005               	movlw	5
  2226  026E  025F               	subwf	main@ucTimerDelay3,w
  2227  026F  1C03               	skipc
  2228  0270  2A6B               	goto	l5047
  2229                           
  2230                           ;main.c: 1275: {
  2231                           ;main.c: 1277: setPA3(1);
  2232  0271  3001               	movlw	1
  2233  0272  158A  27CC  118A   	fcall	_setPA3
  2234  0275  2A69               	goto	l5043
  2235  0276                     l5059:	
  2236                           
  2237                           ;main.c: 1288: {
  2238                           ;main.c: 1289: if(ucTimerDelay3 >= 5)
  2239  0276  3005               	movlw	5
  2240  0277  025F               	subwf	main@ucTimerDelay3,w
  2241  0278  1C03               	skipc
  2242  0279  2A6B               	goto	l5047
  2243                           
  2244                           ;main.c: 1290: {
  2245                           ;main.c: 1293: setPA2(0);
  2246  027A  3000               	movlw	0
  2247  027B  158A  27C4  118A   	fcall	_setPA2
  2248                           
  2249                           ;main.c: 1295: setPA3(0);
  2250  027E  3000               	movlw	0
  2251  027F  158A  27CC  118A   	fcall	_setPA3
  2252  0282  2A69               	goto	l5043
  2253  0283                     l5069:	
  2254                           
  2255                           ;main.c: 1305: {
  2256                           ;main.c: 1306: if(ucTimerDelay3 >= 1)
  2257  0283  085F               	movf	main@ucTimerDelay3,w
  2258  0284  1903               	btfsc	3,2
  2259  0285  2A6B               	goto	l5047
  2260                           
  2261                           ;main.c: 1307: {
  2262                           ;main.c: 1308: ucTimerDelay3 = 0;
  2263  0286  01DF               	clrf	main@ucTimerDelay3
  2264                           
  2265                           ;main.c: 1310: ucLoaderStep3 = 0;
  2266  0287  01D9               	clrf	main@ucLoaderStep3
  2267  0288  29AF               	goto	l4907
  2268  0289                     l5079:	
  2269  0289  0859               	movf	main@ucLoaderStep3,w
  2270                           
  2271                           ; Switch size 1, requested type "space"
  2272                           ; Number of cases is 5, Range of values is 0 to 4
  2273                           ; switch strategies available:
  2274                           ; Name         Instructions Cycles
  2275                           ; simple_byte           16     9 (average)
  2276                           ; direct_byte           17     7 (fixed)
  2277                           ; jumptable            260     6 (fixed)
  2278                           ; rangetable             9     6 (fixed)
  2279                           ; spacedrange           16     9 (fixed)
  2280                           ; locatedrange           5     3 (fixed)
  2281                           ;	Chosen strategy is simple_byte
  2282  028A  3A00               	xorlw	0	; case 0
  2283  028B  1903               	skipnz
  2284  028C  2A53               	goto	l5035
  2285  028D  3A01               	xorlw	1	; case 1
  2286  028E  1903               	skipnz
  2287  028F  2A61               	goto	l5039
  2288  0290  3A03               	xorlw	3	; case 2
  2289  0291  1903               	skipnz
  2290  0292  2A6D               	goto	l5049
  2291  0293  3A01               	xorlw	1	; case 3
  2292  0294  1903               	skipnz
  2293  0295  2A76               	goto	l5059
  2294  0296  3A07               	xorlw	7	; case 4
  2295  0297  1903               	skipnz
  2296  0298  2A83               	goto	l5069
  2297  0299  287C               	goto	l762
  2298  029A                     l5081:	
  2299                           
  2300                           ;main.c: 1334: {
  2301                           ;main.c: 1336: setPB0(1);
  2302  029A  3001               	movlw	1
  2303  029B  158A  27E4  118A   	fcall	_setPB0
  2304                           
  2305                           ;main.c: 1338: setPA0(1);
  2306  029E  3001               	movlw	1
  2307  029F  158A  27B4  118A   	fcall	_setPA0
  2308                           
  2309                           ;main.c: 1340: setPA1(1);
  2310  02A2  3001               	movlw	1
  2311  02A3  158A  27BC  118A   	fcall	_setPA1
  2312                           
  2313                           ;main.c: 1342: setPA2(1);
  2314  02A6  3001               	movlw	1
  2315  02A7  158A  27C4  118A   	fcall	_setPA2
  2316  02AA                     l5083:	
  2317                           
  2318                           ;main.c: 1343: ucLoaderStep4++;
  2319  02AA  0ADA               	incf	main@ucLoaderStep4,f
  2320                           
  2321                           ;main.c: 1344: break;
  2322  02AB  2840               	goto	l4693
  2323  02AC                     l5085:	
  2324                           
  2325                           ;main.c: 1348: {
  2326                           ;main.c: 1349: if(ucTimerDelay4 >= 5)
  2327  02AC  3005               	movlw	5
  2328  02AD  0260               	subwf	main@ucTimerDelay4,w
  2329  02AE  1C03               	skipc
  2330  02AF  2AB6               	goto	l5093
  2331                           
  2332                           ;main.c: 1350: {
  2333                           ;main.c: 1352: setPA3(1);
  2334  02B0  3001               	movlw	1
  2335  02B1                     L7:	
  2336  02B1  158A  27CC  118A   	fcall	_setPA3
  2337                           
  2338                           ;main.c: 1353: ucTimerDelay4 = 0;
  2339  02B4  01E0               	clrf	main@ucTimerDelay4
  2340  02B5  2AAA               	goto	l5083
  2341  02B6                     l5093:	
  2342                           
  2343                           ;main.c: 1356: else
  2344                           ;main.c: 1357: ucTimerDelay4++;
  2345  02B6  0AE0               	incf	main@ucTimerDelay4,f
  2346  02B7  2840               	goto	l4693
  2347  02B8                     l5095:	
  2348                           
  2349                           ;main.c: 1362: {
  2350                           ;main.c: 1363: if(ucTimerDelay4 >= 5)
  2351  02B8  3005               	movlw	5
  2352  02B9  0260               	subwf	main@ucTimerDelay4,w
  2353  02BA  1C03               	skipc
  2354  02BB  2AB6               	goto	l5093
  2355                           
  2356                           ;main.c: 1364: {
  2357                           ;main.c: 1366: setPA3(0);
  2358  02BC  3000               	movlw	0
  2359  02BD  2AB1               	goto	L7
  2360  02BE                     l5105:	
  2361                           
  2362                           ;main.c: 1376: {
  2363                           ;main.c: 1377: if(ucTimerDelay4 >= 1)
  2364  02BE  0860               	movf	main@ucTimerDelay4,w
  2365  02BF  1903               	btfsc	3,2
  2366  02C0  2AB6               	goto	l5093
  2367                           
  2368                           ;main.c: 1378: {
  2369                           ;main.c: 1379: ucTimerDelay4 = 0;
  2370  02C1  01E0               	clrf	main@ucTimerDelay4
  2371                           
  2372                           ;main.c: 1381: ucLoaderStep4 = 0;
  2373  02C2  01DA               	clrf	main@ucLoaderStep4
  2374  02C3  29AF               	goto	l4907
  2375  02C4                     l5115:	
  2376  02C4  085A               	movf	main@ucLoaderStep4,w
  2377                           
  2378                           ; Switch size 1, requested type "space"
  2379                           ; Number of cases is 4, Range of values is 0 to 3
  2380                           ; switch strategies available:
  2381                           ; Name         Instructions Cycles
  2382                           ; simple_byte           13     7 (average)
  2383                           ; direct_byte           15     7 (fixed)
  2384                           ; jumptable            260     6 (fixed)
  2385                           ; rangetable             8     6 (fixed)
  2386                           ; spacedrange           14     9 (fixed)
  2387                           ; locatedrange           4     3 (fixed)
  2388                           ;	Chosen strategy is simple_byte
  2389  02C5  3A00               	xorlw	0	; case 0
  2390  02C6  1903               	skipnz
  2391  02C7  2A9A               	goto	l5081
  2392  02C8  3A01               	xorlw	1	; case 1
  2393  02C9  1903               	skipnz
  2394  02CA  2AAC               	goto	l5085
  2395  02CB  3A03               	xorlw	3	; case 2
  2396  02CC  1903               	skipnz
  2397  02CD  2AB8               	goto	l5095
  2398  02CE  3A01               	xorlw	1	; case 3
  2399  02CF  1903               	skipnz
  2400  02D0  2ABE               	goto	l5105
  2401  02D1  287C               	goto	l762
  2402  02D2                     l5119:	
  2403  02D2  0854               	movf	main@ucChannel4Type,w
  2404                           
  2405                           ; Switch size 1, requested type "space"
  2406                           ; Number of cases is 5, Range of values is 0 to 4
  2407                           ; switch strategies available:
  2408                           ; Name         Instructions Cycles
  2409                           ; simple_byte           16     9 (average)
  2410                           ; direct_byte           17     7 (fixed)
  2411                           ; jumptable            260     6 (fixed)
  2412                           ; rangetable             9     6 (fixed)
  2413                           ; spacedrange           16     9 (fixed)
  2414                           ; locatedrange           5     3 (fixed)
  2415                           ;	Chosen strategy is simple_byte
  2416  02D3  3A00               	xorlw	0	; case 0
  2417  02D4  1903               	skipnz
  2418  02D5  29B1               	goto	l4913
  2419  02D6  3A01               	xorlw	1	; case 1
  2420  02D7  1903               	skipnz
  2421  02D8  29FC               	goto	l4977
  2422  02D9  3A03               	xorlw	3	; case 2
  2423  02DA  1903               	skipnz
  2424  02DB  2A47               	goto	l5033
  2425  02DC  3A01               	xorlw	1	; case 3
  2426  02DD  1903               	skipnz
  2427  02DE  2A89               	goto	l5079
  2428  02DF  3A07               	xorlw	7	; case 4
  2429  02E0  1903               	skipnz
  2430  02E1  2AC4               	goto	l5115
  2431  02E2  287C               	goto	l762
  2432  02E3                     l5121:	
  2433                           
  2434                           ;main.c: 1405: {
  2435                           ;main.c: 1409: static unsigned char ucTimerDelayP2sLess = 0;
  2436                           ;main.c: 1411: static unsigned char ucTimerDelayP2sMore = 0;
  2437                           ;main.c: 1413: if( getAdOriginalCh1Value() <= 220 )
  2438  02E3  118A  25C3  118A   	fcall	_getAdOriginalCh1Value
  2439  02E6  3000               	movlw	0
  2440  02E7  0247               	subwf	?_getAdOriginalCh1Value+1,w
  2441  02E8  30DD               	movlw	221
  2442  02E9  1903               	skipnz
  2443  02EA  0246               	subwf	?_getAdOriginalCh1Value,w
  2444  02EB  1803               	skipnc
  2445  02EC  2AF0               	goto	l5127
  2446                           
  2447                           ;main.c: 1414: {
  2448                           ;main.c: 1415: ucTimerDelayP2sLess++;
  2449  02ED  0AE1               	incf	main@ucTimerDelayP2sLess,f
  2450                           
  2451                           ;main.c: 1416: ucTimerDelayP2sMore = 0;
  2452  02EE  01E2               	clrf	main@ucTimerDelayP2sMore
  2453                           
  2454                           ;main.c: 1417: }
  2455  02EF  2AF2               	goto	l5131
  2456  02F0                     l5127:	
  2457                           
  2458                           ;main.c: 1418: else
  2459                           ;main.c: 1419: {
  2460                           ;main.c: 1420: ucTimerDelayP2sMore++;
  2461  02F0  0AE2               	incf	main@ucTimerDelayP2sMore,f
  2462                           
  2463                           ;main.c: 1421: ucTimerDelayP2sLess = 0;
  2464  02F1  01E1               	clrf	main@ucTimerDelayP2sLess
  2465  02F2                     l5131:	
  2466                           
  2467                           ;main.c: 1422: }
  2468                           ;main.c: 1424: if( ucTimerDelayP2sLess >= 2)
  2469  02F2  3002               	movlw	2
  2470  02F3  0261               	subwf	main@ucTimerDelayP2sLess,w
  2471  02F4  1C03               	skipc
  2472  02F5  2AFE               	goto	l5139
  2473                           
  2474                           ;main.c: 1425: {
  2475                           ;main.c: 1426: ucTimerDelayP2sLess = 0;
  2476  02F6  01E1               	clrf	main@ucTimerDelayP2sLess
  2477                           
  2478                           ;main.c: 1427: ucTimerDelayP2sMore = 0;
  2479  02F7  01E2               	clrf	main@ucTimerDelayP2sMore
  2480                           
  2481                           ;main.c: 1429: startTwentySecondsTimer();
  2482  02F8  118A  2788  118A   	fcall	_startTwentySecondsTimer
  2483                           
  2484                           ;main.c: 1431: ucADC4_Step = ADC4_STEP_FOURTH_PREFIX1;
  2485  02FB  3004               	movlw	4
  2486  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  2487  02FD  00D3               	movwf	main@ucADC4_Step
  2488  02FE                     l5139:	
  2489                           
  2490                           ;main.c: 1432: }
  2491                           ;main.c: 1434: if(ucTimerDelayP2sMore >= 2)
  2492  02FE  3002               	movlw	2
  2493  02FF  0262               	subwf	main@ucTimerDelayP2sMore,w
  2494  0300  1C03               	skipc
  2495  0301  2840               	goto	l4693
  2496                           
  2497                           ;main.c: 1435: {
  2498                           ;main.c: 1436: ucTimerDelayP2sMore = 0;
  2499  0302  01E2               	clrf	main@ucTimerDelayP2sMore
  2500                           
  2501                           ;main.c: 1437: ucTimerDelayP2sLess = 0;
  2502  0303  01E1               	clrf	main@ucTimerDelayP2sLess
  2503  0304                     l5143:	
  2504                           
  2505                           ;main.c: 1438: ucADC4_Step = ADC4_STEP_FOURTH_PREFIX2;
  2506  0304  3005               	movlw	5
  2507  0305  2B95               	goto	L21
  2508  0306                     l5145:	
  2509                           
  2510                           ;main.c: 1446: {
  2511                           ;main.c: 1450: if( !isFinishedTwentySecondsTimer() )
  2512  0306  118A  27CD  118A   	fcall	_isFinishedTwentySecondsTimer
  2513  0309  3800               	iorlw	0
  2514  030A  1903               	btfsc	3,2
  2515  030B  2B04               	goto	l5143
  2516                           
  2517                           ;main.c: 1452: else
  2518                           ;main.c: 1453: ucADC4_Step = ADC4_STEP_FOURTH_PREFIX3;
  2519  030C  3006               	movlw	6
  2520  030D  2B95               	goto	L21
  2521  030E                     l5151:	
  2522                           
  2523                           ;main.c: 1460: {
  2524                           ;main.c: 1464: static unsigned char ucTimerForDACR0_CNT1 = 0, ucTimerForDACR0_CNT2 = 0;
  2525                           ;main.c: 1466: static unsigned char ucTimerForDACR0_CNT1_f = 0, ucTimerForDACR0_CNT2_f =
      +                           0;
  2526                           ;main.c: 1468: if((getAdOriginalCh14Value() > 2800))
  2527  030E  118A  25CD  118A   	fcall	_getAdOriginalCh14Value
  2528  0311  300A               	movlw	10
  2529  0312  0247               	subwf	?_getAdOriginalCh14Value+1,w
  2530  0313  30F1               	movlw	241
  2531  0314  1903               	skipnz
  2532  0315  0246               	subwf	?_getAdOriginalCh14Value,w
  2533  0316  1C03               	skipc
  2534  0317  2B1B               	goto	l5157
  2535                           
  2536                           ;main.c: 1469: {
  2537                           ;main.c: 1470: ucTimerForDACR0_CNT1++;
  2538  0318  0AE3               	incf	main@ucTimerForDACR0_CNT1,f
  2539                           
  2540                           ;main.c: 1471: ucTimerForDACR0_CNT2 = 0;
  2541  0319  01E5               	clrf	main@ucTimerForDACR0_CNT2
  2542                           
  2543                           ;main.c: 1472: }
  2544  031A  2B1D               	goto	l5161
  2545  031B                     l5157:	
  2546                           
  2547                           ;main.c: 1473: else
  2548                           ;main.c: 1474: {
  2549                           ;main.c: 1475: ucTimerForDACR0_CNT2++;
  2550  031B  0AE5               	incf	main@ucTimerForDACR0_CNT2,f
  2551                           
  2552                           ;main.c: 1476: ucTimerForDACR0_CNT1 = 0;
  2553  031C  01E3               	clrf	main@ucTimerForDACR0_CNT1
  2554  031D                     l5161:	
  2555                           
  2556                           ;main.c: 1477: }
  2557                           ;main.c: 1479: if(ucTimerForDACR0_CNT1 >= 2)
  2558  031D  3002               	movlw	2
  2559  031E  0263               	subwf	main@ucTimerForDACR0_CNT1,w
  2560  031F  1C03               	skipc
  2561  0320  2B23               	goto	l5165
  2562                           
  2563                           ;main.c: 1480: ucTimerForDACR0_CNT1_f = 1;
  2564  0321  01E4               	clrf	main@ucTimerForDACR0_CNT1_f
  2565  0322  0AE4               	incf	main@ucTimerForDACR0_CNT1_f,f
  2566  0323                     l5165:	
  2567                           
  2568                           ;main.c: 1482: if(ucTimerForDACR0_CNT2 >= 2)
  2569  0323  3002               	movlw	2
  2570  0324  0265               	subwf	main@ucTimerForDACR0_CNT2,w
  2571  0325  1C03               	skipc
  2572  0326  2B29               	goto	l5169
  2573                           
  2574                           ;main.c: 1483: ucTimerForDACR0_CNT2_f = 1;
  2575  0327  01E6               	clrf	main@ucTimerForDACR0_CNT2_f
  2576  0328  0AE6               	incf	main@ucTimerForDACR0_CNT2_f,f
  2577  0329                     l5169:	
  2578                           
  2579                           ;main.c: 1485: if(ucTimerForDACR0_CNT1_f)
  2580  0329  0864               	movf	main@ucTimerForDACR0_CNT1_f,w
  2581  032A  1903               	btfsc	3,2
  2582  032B  2B2E               	goto	l5173
  2583                           
  2584                           ;main.c: 1486: {
  2585                           ;main.c: 1488: DACR0=0x0F;
  2586  032C  300F               	movlw	15
  2587  032D  2B32               	goto	L10
  2588  032E                     l5173:	
  2589                           ;main.c: 1493: }
  2590                           
  2591                           ;main.c: 1492: ucADC4_Step = ADC4_STEP_FOURTH;
  2592                           
  2593                           
  2594                           ;main.c: 1494: else if(ucTimerForDACR0_CNT2_f)
  2595  032E  0866               	movf	main@ucTimerForDACR0_CNT2_f,w
  2596  032F  1903               	btfsc	3,2
  2597  0330  2B37               	goto	l5177
  2598                           
  2599                           ;main.c: 1495: {
  2600                           ;main.c: 1497: DACR0=0x09;
  2601  0331  3009               	movlw	9
  2602  0332                     L10:	
  2603  0332  1683               	bsf	3,5	;RP0=1, select bank1
  2604  0333  0088               	movwf	8	;volatile
  2605                           
  2606                           ;main.c: 1501: ucADC4_Step = ADC4_STEP_FOURTH;
  2607  0334  300A               	movlw	10
  2608  0335  1283               	bcf	3,5	;RP0=0, select bank0
  2609  0336  00D3               	movwf	main@ucADC4_Step
  2610  0337                     l5177:	
  2611                           ;main.c: 1502: }
  2612                           
  2613                           
  2614                           ;main.c: 1506: }
  2615                           ;main.c: 1508: if(ADC4_STEP_FOURTH == ucADC4_Step)
  2616  0337  0853               	movf	main@ucADC4_Step,w
  2617  0338  3A0A               	xorlw	10
  2618  0339  1D03               	skipz
  2619  033A  2840               	goto	l4693
  2620                           
  2621                           ;main.c: 1509: {
  2622                           ;main.c: 1510: ucTimerForDACR0_CNT1 = 0;
  2623  033B  01E3               	clrf	main@ucTimerForDACR0_CNT1
  2624                           
  2625                           ;main.c: 1511: ucTimerForDACR0_CNT2 = 0;
  2626  033C  01E5               	clrf	main@ucTimerForDACR0_CNT2
  2627                           
  2628                           ;main.c: 1512: ucTimerForDACR0_CNT1_f = 0;
  2629  033D  01E4               	clrf	main@ucTimerForDACR0_CNT1_f
  2630                           
  2631                           ;main.c: 1513: ucTimerForDACR0_CNT2_f = 0;
  2632  033E  01E6               	clrf	main@ucTimerForDACR0_CNT2_f
  2633  033F  2840               	goto	l4693
  2634  0340                     l5181:	
  2635                           
  2636                           ;main.c: 1521: {
  2637                           ;main.c: 1525: clearTwentySecondsTimer();
  2638  0340  118A  2700  118A   	fcall	_clearTwentySecondsTimer
  2639                           
  2640                           ;main.c: 1527: setPA6(0);
  2641  0343  3000               	movlw	0
  2642  0344  158A  27ED  118A   	fcall	_setPA6
  2643                           
  2644                           ;main.c: 1529: PBOD6 = 0;
  2645  0347  1683               	bsf	3,5	;RP0=1, select bank3
  2646  0348  1703               	bsf	3,6	;RP1=1, select bank3
  2647  0349  1308               	bcf	8,6
  2648                           
  2649                           ;main.c: 1530: PB6 = 1;
  2650  034A  1283               	bcf	3,5	;RP0=0, select bank0
  2651  034B  3007               	movlw	7
  2652  034C  2B5A               	goto	L22
  2653  034D                     l5189:	
  2654                           ;main.c: 1536: break;
  2655                           
  2656                           ;main.c: 1535: ucADC4_Step = ADC4_STEP_FOURTH_PREFIX4;
  2657                           
  2658  034D  3005               	movlw	5
  2659                           
  2660                           ;main.c: 1542: {
  2661                           ;main.c: 1547: static unsigned char ucDelayPrefix4TimerP5s;
  2662                           ;main.c: 1549: ucDelayPrefix4TimerP5s++;
  2663  034E  0AD5               	incf	main@ucDelayPrefix4TimerP5s,f
  2664                           
  2665                           ;main.c: 1551: if( ucDelayPrefix4TimerP5s >= 5)
  2666  034F  0255               	subwf	main@ucDelayPrefix4TimerP5s,w
  2667  0350  1C03               	skipc
  2668  0351  2840               	goto	l4693
  2669  0352  3008               	movlw	8
  2670                           
  2671                           ;main.c: 1552: {
  2672                           ;main.c: 1553: ucDelayPrefix4TimerP5s = 0;
  2673  0353  01D5               	clrf	main@ucDelayPrefix4TimerP5s
  2674                           
  2675                           ;main.c: 1555: ucADC4_Step = ADC4_STEP_FOURTH_PREFIX5;
  2676  0354  2B96               	goto	L14
  2677  0355                     l991:	
  2678                           ;main.c: 1558: }
  2679                           ;main.c: 1560: case ADC4_STEP_FOURTH_PREFIX5:
  2680                           
  2681                           
  2682                           ;main.c: 1561: {
  2683                           ;main.c: 1567: PBOD6 = 1;
  2684  0355  1683               	bsf	3,5	;RP0=1, select bank3
  2685  0356  1703               	bsf	3,6	;RP1=1, select bank3
  2686  0357  1708               	bsf	8,6
  2687                           
  2688                           ;main.c: 1568: PB6 = 1;
  2689  0358  1283               	bcf	3,5	;RP0=0, select bank0
  2690  0359  3009               	movlw	9
  2691  035A                     L22:	
  2692  035A  1303               	bcf	3,6	;RP1=0, select bank0
  2693  035B  1706               	bsf	6,6
  2694                           
  2695                           ;main.c: 1573: ucADC4_Step = ADC4_STEP_FOURTH_PREFIX6;
  2696  035C  2B96               	goto	L14
  2697  035D                     l5199:	
  2698                           ;main.c: 1575: break;
  2699                           
  2700                           
  2701                           ;main.c: 1580: {
  2702                           ;main.c: 1581: static unsigned char ucDelayPrefix6TimerP2s;
  2703                           ;main.c: 1583: ucDelayPrefix6TimerP2s++;
  2704  035D  1683               	bsf	3,5	;RP0=1, select bank1
  2705  035E  3002               	movlw	2
  2706  035F  0AB3               	incf	main@ucDelayPrefix6TimerP2s^(0+128),f
  2707                           
  2708                           ;main.c: 1585: if( ucDelayPrefix6TimerP2s >= 2)
  2709  0360  0233               	subwf	main@ucDelayPrefix6TimerP2s^(0+128),w
  2710  0361  1C03               	skipc
  2711  0362  2840               	goto	l4693
  2712                           
  2713                           ;main.c: 1586: {
  2714                           ;main.c: 1587: ucDelayPrefix6TimerP2s = 0;
  2715  0363  01B3               	clrf	main@ucDelayPrefix6TimerP2s^(0+128)
  2716                           
  2717                           ;main.c: 1589: ucADC4_Step = ADC4_STEP_INIT;
  2718  0364  1283               	bcf	3,5	;RP0=0, select bank0
  2719  0365                     L15:	
  2720  0365  01D3               	clrf	main@ucADC4_Step
  2721                           
  2722                           ;main.c: 1591: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  2723  0366  01D2               	clrf	main@enumMainLoopStep
  2724  0367  0AD2               	incf	main@enumMainLoopStep,f
  2725  0368  2840               	goto	l4693
  2726  0369                     l5207:	
  2727                           
  2728                           ;main.c: 1598: {
  2729                           ;main.c: 1602: static unsigned char ucCheckTimerP2sLess = 0;
  2730                           ;main.c: 1604: static unsigned char ucCheckTimerP2sMore = 0;
  2731                           ;main.c: 1606: if( getAdOriginalCh1Value() < 85)
  2732  0369  118A  25C3  118A   	fcall	_getAdOriginalCh1Value
  2733  036C  3000               	movlw	0
  2734  036D  0247               	subwf	?_getAdOriginalCh1Value+1,w
  2735  036E  3055               	movlw	85
  2736  036F  1903               	skipnz
  2737  0370  0246               	subwf	?_getAdOriginalCh1Value,w
  2738  0371  1803               	skipnc
  2739  0372  2B77               	goto	l5213
  2740                           
  2741                           ;main.c: 1607: {
  2742                           ;main.c: 1608: ucCheckTimerP2sLess++;
  2743  0373  1683               	bsf	3,5	;RP0=1, select bank1
  2744  0374  0AB1               	incf	main@ucCheckTimerP2sLess^(0+128),f
  2745                           
  2746                           ;main.c: 1609: ucCheckTimerP2sMore = 0;
  2747  0375  01B2               	clrf	main@ucCheckTimerP2sMore^(0+128)
  2748                           
  2749                           ;main.c: 1610: }
  2750  0376  2B7A               	goto	l5217
  2751  0377                     l5213:	
  2752                           
  2753                           ;main.c: 1611: else
  2754                           ;main.c: 1612: {
  2755                           ;main.c: 1613: ucCheckTimerP2sMore++;
  2756  0377  1683               	bsf	3,5	;RP0=1, select bank1
  2757  0378  0AB2               	incf	main@ucCheckTimerP2sMore^(0+128),f
  2758                           
  2759                           ;main.c: 1614: ucCheckTimerP2sLess = 0;
  2760  0379  01B1               	clrf	main@ucCheckTimerP2sLess^(0+128)
  2761  037A                     l5217:	
  2762                           
  2763                           ;main.c: 1615: }
  2764                           ;main.c: 1617: if( ucCheckTimerP2sMore > 2)
  2765  037A  3003               	movlw	3
  2766  037B  0232               	subwf	main@ucCheckTimerP2sMore^(0+128),w
  2767  037C  1C03               	skipc
  2768  037D  2B84               	goto	l5223
  2769                           
  2770                           ;main.c: 1618: {
  2771                           ;main.c: 1619: ucCheckTimerP2sMore = 0;
  2772  037E  01B2               	clrf	main@ucCheckTimerP2sMore^(0+128)
  2773                           
  2774                           ;main.c: 1620: ucCheckTimerP2sLess = 0;
  2775  037F  01B1               	clrf	main@ucCheckTimerP2sLess^(0+128)
  2776                           
  2777                           ;main.c: 1622: ucADC4_Step = ADC4_STEP_INIT;
  2778  0380  1283               	bcf	3,5	;RP0=0, select bank0
  2779  0381  3003               	movlw	3
  2780  0382  01D3               	clrf	main@ucADC4_Step
  2781                           
  2782                           ;main.c: 1624: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  2783  0383  00D2               	movwf	main@enumMainLoopStep
  2784  0384                     l5223:	
  2785                           
  2786                           ;main.c: 1625: }
  2787                           ;main.c: 1627: if( ucCheckTimerP2sLess > 2)
  2788  0384  3003               	movlw	3
  2789  0385  1683               	bsf	3,5	;RP0=1, select bank1
  2790  0386  0231               	subwf	main@ucCheckTimerP2sLess^(0+128),w
  2791  0387  1C03               	skipc
  2792  0388  2840               	goto	l4693
  2793  0389  300B               	movlw	11
  2794                           
  2795                           ;main.c: 1628: {
  2796                           ;main.c: 1629: ucCheckTimerP2sMore = 0;
  2797  038A  01B2               	clrf	main@ucCheckTimerP2sMore^(0+128)
  2798                           
  2799                           ;main.c: 1630: ucCheckTimerP2sLess = 0;
  2800  038B  01B1               	clrf	main@ucCheckTimerP2sLess^(0+128)
  2801                           
  2802                           ;main.c: 1632: ucADC4_Step = ADC4_STEP_FOURTH_SUFFIX1;
  2803  038C  2B95               	goto	L21
  2804  038D                     l5229:	
  2805                           
  2806                           ;main.c: 1641: {
  2807                           ;main.c: 1645: static unsigned char ucFourthSuffix1TimerP3s = 0;
  2808                           ;main.c: 1647: ucFourthSuffix1TimerP3s++;
  2809  038D  1683               	bsf	3,5	;RP0=1, select bank1
  2810  038E  3004               	movlw	4
  2811  038F  0AB4               	incf	main@ucFourthSuffix1TimerP3s^(0+128),f
  2812                           
  2813                           ;main.c: 1649: if( ucFourthSuffix1TimerP3s > 3)
  2814  0390  0234               	subwf	main@ucFourthSuffix1TimerP3s^(0+128),w
  2815  0391  1C03               	skipc
  2816  0392  2840               	goto	l4693
  2817  0393  300C               	movlw	12
  2818                           
  2819                           ;main.c: 1650: {
  2820                           ;main.c: 1651: ucFourthSuffix1TimerP3s = 0;
  2821  0394  01B4               	clrf	main@ucFourthSuffix1TimerP3s^(0+128)
  2822  0395                     L21:	
  2823                           ;main.c: 1652: ucADC4_Step = ADC4_STEP_FOURTH_SUFFIX2;
  2824                           
  2825  0395  1283               	bcf	3,5	;RP0=0, select bank0
  2826  0396                     L14:	
  2827  0396  00D3               	movwf	main@ucADC4_Step
  2828  0397  2840               	goto	l4693
  2829  0398                     l5237:	
  2830                           
  2831                           ;main.c: 1659: {
  2832                           ;main.c: 1664: setPA6(0);
  2833  0398  3000               	movlw	0
  2834  0399  158A  27ED  118A   	fcall	_setPA6
  2835                           
  2836                           ;main.c: 1666: clearPinPortAndTimer();
  2837  039C  118A  26E2  118A   	fcall	_clearPinPortAndTimer
  2838  039F  2B65               	goto	L15
  2839  03A0                     l5247:	
  2840                           ;main.c: 1667: ucADC4_Step = ADC4_STEP_INIT;
  2841                           
  2842  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  2843  03A1  0853               	movf	main@ucADC4_Step,w
  2844                           
  2845                           ; Switch size 1, requested type "space"
  2846                           ; Number of cases is 13, Range of values is 0 to 12
  2847                           ; switch strategies available:
  2848                           ; Name         Instructions Cycles
  2849                           ; direct_byte           33     7 (fixed)
  2850                           ; simple_byte           40    21 (average)
  2851                           ; jumptable            260     6 (fixed)
  2852                           ; rangetable            17     6 (fixed)
  2853                           ; spacedrange           32     9 (fixed)
  2854                           ; locatedrange          13     3 (fixed)
  2855                           ;	Chosen strategy is direct_byte
  2856  03A2  0084               	movwf	4
  2857  03A3  300D               	movlw	13
  2858  03A4  0204               	subwf	4,w
  2859  03A5  1803               	skipnc
  2860  03A6  2840               	goto	l4693
  2861  03A7  3007               	movlw	high S5663
  2862  03A8  008A               	movwf	10
  2863  03A9  1003               	clrc
  2864  03AA  0D04               	rlf	4,w
  2865  03AB  3E06               	addlw	low S5663
  2866  03AC  0082               	movwf	2
  2867  03AD                     l1015:	
  2868                           ;main.c: 1696: {
  2869                           ;main.c: 1697: case HOUR_3_BRANCH_STEP_FIRST:
  2870                           
  2871                           
  2872                           ;main.c: 1698: {
  2873                           ;main.c: 1700: PB7 = 1;
  2874  03AD  1283               	bcf	3,5	;RP0=0, select bank0
  2875  03AE  1786               	bsf	6,7
  2876                           
  2877                           ;main.c: 1701: PBOD7 = 1;
  2878  03AF  1683               	bsf	3,5	;RP0=1, select bank3
  2879  03B0  3030               	movlw	48
  2880  03B1  1703               	bsf	3,6	;RP1=1, select bank3
  2881  03B2  1788               	bsf	8,7
  2882                           
  2883                           ;main.c: 1706: startThreeHoursTimer(10800);
  2884  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  2885  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  2886  03B5  00A0               	movwf	?_startThreeHoursTimer
  2887  03B6  302A               	movlw	42
  2888  03B7  00A1               	movwf	?_startThreeHoursTimer+1
  2889  03B8  118A  2739  118A   	fcall	_startThreeHoursTimer
  2890                           
  2891                           ;main.c: 1709: setPB0(1);
  2892  03BB  3001               	movlw	1
  2893  03BC  158A  27E4  118A   	fcall	_setPB0
  2894                           
  2895                           ;main.c: 1711: setPA0(1);
  2896  03BF  3001               	movlw	1
  2897  03C0  158A  27B4  118A   	fcall	_setPA0
  2898                           
  2899                           ;main.c: 1713: setPA1(1);
  2900  03C3  3001               	movlw	1
  2901  03C4  158A  27BC  118A   	fcall	_setPA1
  2902                           
  2903                           ;main.c: 1715: setPA2(1);
  2904  03C7  3001               	movlw	1
  2905  03C8  158A  27C4  118A   	fcall	_setPA2
  2906                           
  2907                           ;main.c: 1717: setPA3(1);
  2908  03CB  3001               	movlw	1
  2909  03CC  158A  27CC  118A   	fcall	_setPA3
  2910                           
  2911                           ;main.c: 1719: enumBranchStep = HOUR_3_BRANCH_STEP_SECOND;
  2912  03CF  1683               	bsf	3,5	;RP0=1, select bank1
  2913  03D0  01AF               	clrf	main@enumBranchStep^(0+128)
  2914  03D1  0AAF               	incf	main@enumBranchStep^(0+128),f
  2915                           
  2916                           ;main.c: 1720: break;
  2917  03D2  2840               	goto	l4693
  2918  03D3                     l5253:	
  2919                           
  2920                           ;main.c: 1724: {
  2921                           ;main.c: 1728: static unsigned char ucTimer20s = 0;
  2922                           ;main.c: 1730: if(ucTimer20s < 200)
  2923  03D3  30C8               	movlw	200
  2924  03D4  0236               	subwf	main@ucTimer20s^(0+128),w
  2925  03D5  1803               	skipnc
  2926  03D6  2BD9               	goto	l5257
  2927                           
  2928                           ;main.c: 1731: {
  2929                           ;main.c: 1732: ucTimer20s++;
  2930  03D7  0AB6               	incf	main@ucTimer20s^(0+128),f
  2931                           
  2932                           ;main.c: 1734: }
  2933  03D8  2840               	goto	l4693
  2934  03D9                     l5257:	
  2935  03D9  3002               	movlw	2
  2936                           
  2937                           ;main.c: 1735: else
  2938                           ;main.c: 1736: {
  2939                           ;main.c: 1738: ucTimer20s = 0;
  2940  03DA  01B6               	clrf	main@ucTimer20s^(0+128)
  2941                           
  2942                           ;main.c: 1740: enumBranchStep = HOUR_3_BRANCH_STEP_THIRD;
  2943  03DB  00AF               	movwf	main@enumBranchStep^(0+128)
  2944                           
  2945                           ;main.c: 1743: setPA6(0);
  2946  03DC  3000               	movlw	0
  2947  03DD  158A  27ED  118A   	fcall	_setPA6
  2948  03E0  2840               	goto	l4693
  2949  03E1                     l5263:	
  2950                           
  2951                           ;main.c: 1749: {
  2952                           ;main.c: 1753: if( (isFinishedTwelveHoursTimer()) || (isFinishedThreeHoursTimer()))
  2953  03E1  118A  27D9  118A   	fcall	_isFinishedTwelveHoursTimer
  2954  03E4  3800               	iorlw	0
  2955  03E5  1D03               	skipz
  2956  03E6  2BED               	goto	l5267
  2957  03E7  118A  27C1  118A   	fcall	_isFinishedThreeHoursTimer
  2958  03EA  3A00               	xorlw	0
  2959  03EB  1903               	skipnz
  2960  03EC  2BF0               	goto	l5271
  2961  03ED                     l5267:	
  2962                           
  2963                           ;main.c: 1754: {
  2964                           ;main.c: 1755: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2965  03ED  1683               	bsf	3,5	;RP0=1, select bank1
  2966  03EE  3009               	movlw	9
  2967  03EF  2C10               	goto	L23
  2968  03F0                     l5271:	
  2969                           ;main.c: 1757: }
  2970                           
  2971                           ;main.c: 1756: enumMainLoopStep = MAIN_LOOP_STEP_12_HOUR_END;
  2972                           
  2973                           
  2974                           ;main.c: 1758: else
  2975                           ;main.c: 1759: {
  2976                           ;main.c: 1760: static unsigned char ucTimerX1P5s = 0;
  2977                           ;main.c: 1762: static unsigned char ucTimerLessX1P5s = 0;
  2978                           ;main.c: 1764: if(getAdOriginalCh1Value() < 115)
  2979  03F0  118A  25C3  118A   	fcall	_getAdOriginalCh1Value
  2980  03F3  3000               	movlw	0
  2981  03F4  0247               	subwf	?_getAdOriginalCh1Value+1,w
  2982  03F5  3073               	movlw	115
  2983  03F6  1903               	skipnz
  2984  03F7  0246               	subwf	?_getAdOriginalCh1Value,w
  2985  03F8  1803               	skipnc
  2986  03F9  2BFE               	goto	l5277
  2987                           
  2988                           ;main.c: 1765: {
  2989                           ;main.c: 1766: ucTimerX1P5s = 0;
  2990  03FA  1683               	bsf	3,5	;RP0=1, select bank1
  2991  03FB  01BA               	clrf	main@ucTimerX1P5s^(0+128)
  2992                           
  2993                           ;main.c: 1767: ucTimerLessX1P5s++;
  2994  03FC  0AB7               	incf	main@ucTimerLessX1P5s^(0+128),f
  2995                           
  2996                           ;main.c: 1768: }
  2997  03FD  2C01               	goto	l5281
  2998  03FE                     l5277:	
  2999                           
  3000                           ;main.c: 1769: else
  3001                           ;main.c: 1770: {
  3002                           ;main.c: 1771: ucTimerX1P5s++;
  3003  03FE  1683               	bsf	3,5	;RP0=1, select bank1
  3004  03FF  0ABA               	incf	main@ucTimerX1P5s^(0+128),f
  3005                           
  3006                           ;main.c: 1772: ucTimerLessX1P5s = 0;
  3007  0400  01B7               	clrf	main@ucTimerLessX1P5s^(0+128)
  3008  0401                     l5281:	
  3009                           
  3010                           ;main.c: 1773: }
  3011                           ;main.c: 1775: if(ucTimerX1P5s >= 5)
  3012  0401  3005               	movlw	5
  3013  0402  023A               	subwf	main@ucTimerX1P5s^(0+128),w
  3014  0403  1C03               	skipc
  3015  0404  2C14               	goto	l5295
  3016                           
  3017                           ;main.c: 1776: {
  3018                           ;main.c: 1777: ucTimerX1P5s = 0;
  3019  0405  01BA               	clrf	main@ucTimerX1P5s^(0+128)
  3020                           
  3021                           ;main.c: 1781: PBOD7 = 0;
  3022  0406  1703               	bsf	3,6	;RP1=1, select bank3
  3023  0407  1388               	bcf	8,7
  3024                           
  3025                           ;main.c: 1782: PB7 = 0;
  3026  0408  1283               	bcf	3,5	;RP0=0, select bank0
  3027  0409  1303               	bcf	3,6	;RP1=0, select bank0
  3028  040A  1386               	bcf	6,7
  3029                           
  3030                           ;main.c: 1787: clearThreeHoursTimer();
  3031  040B  118A  26FA  118A   	fcall	_clearThreeHoursTimer
  3032                           
  3033                           ;main.c: 1789: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  3034  040E  1683               	bsf	3,5	;RP0=1, select bank1
  3035  040F  3002               	movlw	2
  3036  0410                     L23:	
  3037  0410  01AF               	clrf	main@enumBranchStep^(0+128)
  3038                           
  3039                           ;main.c: 1791: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
  3040  0411  1283               	bcf	3,5	;RP0=0, select bank0
  3041  0412                     L16:	
  3042  0412  00D2               	movwf	main@enumMainLoopStep
  3043                           
  3044                           ;main.c: 1792: }
  3045  0413  2840               	goto	l4693
  3046  0414                     l5295:	
  3047                           
  3048                           ;main.c: 1793: else if(ucTimerLessX1P5s >= 5)
  3049  0414  3005               	movlw	5
  3050  0415  0237               	subwf	main@ucTimerLessX1P5s^(0+128),w
  3051  0416  1C03               	skipc
  3052  0417  2840               	goto	l4693
  3053                           
  3054                           ;main.c: 1794: {
  3055                           ;main.c: 1795: static unsigned char ucTimerX2P5s = 0;
  3056                           ;main.c: 1797: static unsigned char ucTimerLessX2P5s = 0;
  3057                           ;main.c: 1799: if(getAdOriginalCh14Value() >= 1950)
  3058  0418  118A  25CD  118A   	fcall	_getAdOriginalCh14Value
  3059  041B  3007               	movlw	7
  3060  041C  0247               	subwf	?_getAdOriginalCh14Value+1,w
  3061  041D  309E               	movlw	158
  3062  041E  1903               	skipnz
  3063  041F  0246               	subwf	?_getAdOriginalCh14Value,w
  3064  0420  1C03               	skipc
  3065  0421  2C26               	goto	l5303
  3066                           
  3067                           ;main.c: 1800: {
  3068                           ;main.c: 1801: ucTimerX2P5s++;
  3069  0422  1683               	bsf	3,5	;RP0=1, select bank1
  3070  0423  0ABB               	incf	main@ucTimerX2P5s^(0+128),f
  3071                           
  3072                           ;main.c: 1802: ucTimerLessX2P5s = 0;
  3073  0424  01B8               	clrf	main@ucTimerLessX2P5s^(0+128)
  3074                           
  3075                           ;main.c: 1803: }
  3076  0425  2C29               	goto	l5307
  3077  0426                     l5303:	
  3078                           
  3079                           ;main.c: 1804: else
  3080                           ;main.c: 1805: {
  3081                           ;main.c: 1806: ucTimerX2P5s = 0;
  3082  0426  1683               	bsf	3,5	;RP0=1, select bank1
  3083  0427  01BB               	clrf	main@ucTimerX2P5s^(0+128)
  3084                           
  3085                           ;main.c: 1807: ucTimerLessX2P5s++;
  3086  0428  0AB8               	incf	main@ucTimerLessX2P5s^(0+128),f
  3087  0429                     l5307:	
  3088                           
  3089                           ;main.c: 1808: }
  3090                           ;main.c: 1810: if(ucTimerX2P5s >= 5)
  3091  0429  3005               	movlw	5
  3092  042A  023B               	subwf	main@ucTimerX2P5s^(0+128),w
  3093  042B  1C03               	skipc
  3094  042C  2C2F               	goto	l5311
  3095                           
  3096                           ;main.c: 1811: {
  3097                           ;main.c: 1812: ucTimerX2P5s = 0;
  3098  042D  01BB               	clrf	main@ucTimerX2P5s^(0+128)
  3099                           
  3100                           ;main.c: 1813: }
  3101  042E  2840               	goto	l4693
  3102  042F                     l5311:	
  3103                           
  3104                           ;main.c: 1814: else if(ucTimerLessX2P5s >= 5)
  3105  042F  3005               	movlw	5
  3106  0430  0238               	subwf	main@ucTimerLessX2P5s^(0+128),w
  3107  0431  1C03               	skipc
  3108  0432  2840               	goto	l4693
  3109                           
  3110                           ;main.c: 1815: {
  3111                           ;main.c: 1816: clearPinPortAndTimer();
  3112  0433  118A  26E2  118A   	fcall	_clearPinPortAndTimer
  3113                           
  3114                           ;main.c: 1817: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  3115  0436  01D2               	clrf	main@enumMainLoopStep
  3116  0437  0AD2               	incf	main@enumMainLoopStep,f
  3117                           
  3118                           ;main.c: 1818: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  3119  0438  1683               	bsf	3,5	;RP0=1, select bank1
  3120  0439  01AF               	clrf	main@enumBranchStep^(0+128)
  3121                           
  3122                           ;main.c: 1819: }
  3123  043A  2840               	goto	l4693
  3124  043B                     l5321:	
  3125  043B  1683               	bsf	3,5	;RP0=1, select bank1
  3126  043C  082F               	movf	main@enumBranchStep^(0+128),w
  3127                           
  3128                           ; Switch size 1, requested type "space"
  3129                           ; Number of cases is 3, Range of values is 0 to 2
  3130                           ; switch strategies available:
  3131                           ; Name         Instructions Cycles
  3132                           ; simple_byte           10     6 (average)
  3133                           ; direct_byte           13     7 (fixed)
  3134                           ; jumptable            260     6 (fixed)
  3135                           ; rangetable             7     6 (fixed)
  3136                           ; spacedrange           12     9 (fixed)
  3137                           ; locatedrange           3     3 (fixed)
  3138                           ;	Chosen strategy is simple_byte
  3139  043D  3A00               	xorlw	0	; case 0
  3140  043E  1903               	skipnz
  3141  043F  2BAD               	goto	l1015
  3142  0440  3A01               	xorlw	1	; case 1
  3143  0441  1903               	skipnz
  3144  0442  2BD3               	goto	l5253
  3145  0443  3A03               	xorlw	3	; case 2
  3146  0444  1903               	skipnz
  3147  0445  2BE1               	goto	l5263
  3148  0446  287C               	goto	l762
  3149  0447                     l5323:	
  3150                           
  3151                           ;main.c: 1860: {
  3152                           ;main.c: 1865: setPB0(0);
  3153  0447  3000               	movlw	0
  3154  0448  158A  27E4  118A   	fcall	_setPB0
  3155                           
  3156                           ;main.c: 1867: setPB1(0);
  3157  044B  3000               	movlw	0
  3158  044C  158A  27AC  118A   	fcall	_setPB1
  3159                           
  3160                           ;main.c: 1869: setPA0(0);
  3161  044F  3000               	movlw	0
  3162  0450  158A  27B4  118A   	fcall	_setPA0
  3163                           
  3164                           ;main.c: 1871: setPA1(0);
  3165  0453  3000               	movlw	0
  3166  0454  158A  27BC  118A   	fcall	_setPA1
  3167                           
  3168                           ;main.c: 1873: setPA2(0);
  3169  0457  3000               	movlw	0
  3170  0458  158A  27C4  118A   	fcall	_setPA2
  3171                           
  3172                           ;main.c: 1875: setPA3(0);
  3173  045B  3000               	movlw	0
  3174  045C  158A  27CC  118A   	fcall	_setPA3
  3175                           
  3176                           ;main.c: 1878: PBOD6 = 0;
  3177  045F  1683               	bsf	3,5	;RP0=1, select bank3
  3178  0460  1703               	bsf	3,6	;RP1=1, select bank3
  3179  0461  1308               	bcf	8,6
  3180                           
  3181                           ;main.c: 1879: PB6 = 1;
  3182  0462  1283               	bcf	3,5	;RP0=0, select bank0
  3183  0463  3000               	movlw	0
  3184  0464  1303               	bcf	3,6	;RP1=0, select bank0
  3185  0465  1706               	bsf	6,6
  3186                           
  3187                           ;main.c: 1885: setPA6(0);
  3188  0466  158A  27ED  118A   	fcall	_setPA6
  3189                           
  3190                           ;main.c: 1887: enumInteralStep = INTERNAL_SECOND_STEP;
  3191  0469  1683               	bsf	3,5	;RP0=1, select bank1
  3192  046A  01B0               	clrf	main@enumInteralStep^(0+128)
  3193  046B  0AB0               	incf	main@enumInteralStep^(0+128),f
  3194                           
  3195                           ;main.c: 1888: break;
  3196  046C  2840               	goto	l4693
  3197  046D                     l5331:	
  3198                           
  3199                           ;main.c: 1892: {
  3200                           ;main.c: 1896: static unsigned char ucTimer1s = 0;
  3201                           ;main.c: 1898: if(getAdOriginalCh14Value() <= 1000)
  3202  046D  118A  25CD  118A   	fcall	_getAdOriginalCh14Value
  3203  0470  3003               	movlw	3
  3204  0471  0247               	subwf	?_getAdOriginalCh14Value+1,w
  3205  0472  30E9               	movlw	233
  3206  0473  1903               	skipnz
  3207  0474  0246               	subwf	?_getAdOriginalCh14Value,w
  3208  0475  1803               	skipnc
  3209  0476  2C7A               	goto	l5335
  3210                           
  3211                           ;main.c: 1899: {
  3212                           ;main.c: 1900: ucTimer1s++;
  3213  0477  1683               	bsf	3,5	;RP0=1, select bank1
  3214  0478  0AB5               	incf	main@ucTimer1s^(0+128),f
  3215                           
  3216                           ;main.c: 1901: }
  3217  0479  2C7C               	goto	l5337
  3218  047A                     l5335:	
  3219                           
  3220                           ;main.c: 1902: else
  3221                           ;main.c: 1903: ucTimer1s = 0;
  3222  047A  1683               	bsf	3,5	;RP0=1, select bank1
  3223  047B  01B5               	clrf	main@ucTimer1s^(0+128)
  3224  047C                     l5337:	
  3225                           
  3226                           ;main.c: 1905: if(ucTimer1s >= 10)
  3227  047C  300A               	movlw	10
  3228  047D  0235               	subwf	main@ucTimer1s^(0+128),w
  3229  047E  1C03               	skipc
  3230  047F  2840               	goto	l4693
  3231                           
  3232                           ;main.c: 1906: {
  3233                           ;main.c: 1907: enumInteralStep = INTERNAL_THIRD_STEP;
  3234  0480  3002               	movlw	2
  3235  0481  00B0               	movwf	main@enumInteralStep^(0+128)
  3236                           
  3237                           ;main.c: 1908: ucTimer1s = 0;
  3238  0482  01B5               	clrf	main@ucTimer1s^(0+128)
  3239  0483  2840               	goto	l4693
  3240  0484                     l5343:	
  3241                           
  3242                           ;main.c: 1914: {
  3243                           ;main.c: 1918: static unsigned char ucTimerP3s = 0;
  3244                           ;main.c: 1920: if(getAdOriginalCh14Value() >= 1950)
  3245  0484  118A  25CD  118A   	fcall	_getAdOriginalCh14Value
  3246  0487  3007               	movlw	7
  3247  0488  0247               	subwf	?_getAdOriginalCh14Value+1,w
  3248  0489  309E               	movlw	158
  3249  048A  1903               	skipnz
  3250  048B  0246               	subwf	?_getAdOriginalCh14Value,w
  3251  048C  1C03               	skipc
  3252  048D  2C91               	goto	l5347
  3253                           
  3254                           ;main.c: 1921: {
  3255                           ;main.c: 1922: ucTimerP3s++;
  3256  048E  1683               	bsf	3,5	;RP0=1, select bank1
  3257  048F  0AB9               	incf	main@ucTimerP3s^(0+128),f
  3258                           
  3259                           ;main.c: 1923: }
  3260  0490  2C93               	goto	l5349
  3261  0491                     l5347:	
  3262                           
  3263                           ;main.c: 1924: else
  3264                           ;main.c: 1925: ucTimerP3s = 0;
  3265  0491  1683               	bsf	3,5	;RP0=1, select bank1
  3266  0492  01B9               	clrf	main@ucTimerP3s^(0+128)
  3267  0493                     l5349:	
  3268                           
  3269                           ;main.c: 1927: if(ucTimerP3s >= 3)
  3270  0493  3003               	movlw	3
  3271  0494  0239               	subwf	main@ucTimerP3s^(0+128),w
  3272  0495  1C03               	skipc
  3273  0496  2840               	goto	l4693
  3274                           
  3275                           ;main.c: 1928: {
  3276                           ;main.c: 1929: enumInteralStep = INTERNAL_FIRST_STEP;
  3277  0497  01B0               	clrf	main@enumInteralStep^(0+128)
  3278                           
  3279                           ;main.c: 1930: ucTimerP3s = 0;
  3280  0498  01B9               	clrf	main@ucTimerP3s^(0+128)
  3281                           
  3282                           ;main.c: 1932: clearAllTimer();
  3283  0499  118A  26EF  118A   	fcall	_clearAllTimer
  3284                           
  3285                           ;main.c: 1934: DACR0=0x0F;
  3286  049C  300F               	movlw	15
  3287  049D  1683               	bsf	3,5	;RP0=1, select bank1
  3288  049E  0088               	movwf	8	;volatile
  3289                           
  3290                           ;main.c: 1938: initPin();
  3291  049F  118A  2775  118A   	fcall	_initPin
  3292                           
  3293                           ;main.c: 1941: enumMainLoopStep = MAIN_LOOP_STEP_INIT;
  3294  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  3295  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  3296  04A4  01D2               	clrf	main@enumMainLoopStep
  3297  04A5                     l1067:	
  3298  04A5  2CA5               	goto	l1067
  3299  04A6                     l5363:	
  3300  04A6  1683               	bsf	3,5	;RP0=1, select bank1
  3301  04A7  0830               	movf	main@enumInteralStep^(0+128),w
  3302                           
  3303                           ; Switch size 1, requested type "space"
  3304                           ; Number of cases is 3, Range of values is 0 to 2
  3305                           ; switch strategies available:
  3306                           ; Name         Instructions Cycles
  3307                           ; simple_byte           10     6 (average)
  3308                           ; direct_byte           13     7 (fixed)
  3309                           ; jumptable            260     6 (fixed)
  3310                           ; rangetable             7     6 (fixed)
  3311                           ; spacedrange           12     9 (fixed)
  3312                           ; locatedrange           3     3 (fixed)
  3313                           ;	Chosen strategy is simple_byte
  3314  04A8  3A00               	xorlw	0	; case 0
  3315  04A9  1903               	skipnz
  3316  04AA  2C47               	goto	l5323
  3317  04AB  3A01               	xorlw	1	; case 1
  3318  04AC  1903               	skipnz
  3319  04AD  2C6D               	goto	l5331
  3320  04AE  3A03               	xorlw	3	; case 2
  3321  04AF  1903               	skipnz
  3322  04B0  2C84               	goto	l5343
  3323  04B1  287C               	goto	l762
  3324  04B2                     l5367:	
  3325  04B2  1283               	bcf	3,5	;RP0=0, select bank0
  3326  04B3  0852               	movf	main@enumMainLoopStep,w
  3327                           
  3328                           ; Switch size 1, requested type "space"
  3329                           ; Number of cases is 8, Range of values is 0 to 9
  3330                           ; switch strategies available:
  3331                           ; Name         Instructions Cycles
  3332                           ; simple_byte           25    13 (average)
  3333                           ; direct_byte           27     7 (fixed)
  3334                           ; jumptable            260     6 (fixed)
  3335                           ; rangetable            14     6 (fixed)
  3336                           ; spacedrange           26     9 (fixed)
  3337                           ; locatedrange          10     3 (fixed)
  3338                           ;	Chosen strategy is simple_byte
  3339  04B4  3A00               	xorlw	0	; case 0
  3340  04B5  1903               	skipnz
  3341  04B6  284E               	goto	l4701
  3342  04B7  3A01               	xorlw	1	; case 1
  3343  04B8  1903               	skipnz
  3344  04B9  287D               	goto	l4727
  3345  04BA  3A03               	xorlw	3	; case 2
  3346  04BB  1903               	skipnz
  3347  04BC  2895               	goto	l4741
  3348  04BD  3A01               	xorlw	1	; case 3
  3349  04BE  1903               	skipnz
  3350  04BF  28A2               	goto	l4751
  3351  04C0  3A07               	xorlw	7	; case 4
  3352  04C1  1903               	skipnz
  3353  04C2  28DD               	goto	l4787
  3354  04C3  3A01               	xorlw	1	; case 5
  3355  04C4  1903               	skipnz
  3356  04C5  28E9               	goto	l4793
  3357  04C6  3A0D               	xorlw	13	; case 8
  3358  04C7  1903               	skipnz
  3359  04C8  2C3B               	goto	l5321
  3360  04C9  3A01               	xorlw	1	; case 9
  3361  04CA  1903               	skipnz
  3362  04CB  2CA6               	goto	l5363
  3363  04CC  287C               	goto	l762
  3364  04CD  118A  2811         	ljmp	start
  3365  04CF                     __end_of_main:	
  3366                           
  3367                           	psect	swtext1
  3368  0799                     __pswtext1:	
  3369  0799                     S5657:	
  3370  0799  118A  2982         	ljmp	l843
  3371  079B  118A  2985         	ljmp	l4853
  3372  079D  118A  298E         	ljmp	l4863
  3373  079F  118A  2994         	ljmp	l4873
  3374  07A1  118A  299A         	ljmp	l4883
  3375  07A3  118A  29A0         	ljmp	l4893
  3376  07A5  118A  29AA         	ljmp	l4903
  3377                           
  3378                           	psect	swtext2
  3379  07A7                     __pswtext2:	
  3380  07A7                     S5659:	
  3381  07A7  118A  29BD         	ljmp	l871
  3382  07A9  118A  29C0         	ljmp	l4917
  3383  07AB  118A  29C9         	ljmp	l4927
  3384  07AD  118A  29CF         	ljmp	l4937
  3385  07AF  118A  29D8         	ljmp	l4947
  3386  07B1  118A  29E1         	ljmp	l4957
  3387  07B3  118A  29F6         	ljmp	l4967
  3388                           
  3389                           	psect	swtext3
  3390  07B5                     __pswtext3:	
  3391  07B5                     S5661:	
  3392  07B5  118A  2A08         	ljmp	l4979
  3393  07B7  118A  2A12         	ljmp	l4983
  3394  07B9  118A  2A1E         	ljmp	l4993
  3395  07BB  118A  2A27         	ljmp	l5003
  3396  07BD  118A  2A30         	ljmp	l5013
  3397  07BF  118A  2A41         	ljmp	l5023
  3398                           
  3399                           	psect	swtext4
  3400  0706                     __pswtext4:	
  3401  0706                     S5663:	
  3402  0706  118A  28F8         	ljmp	l804
  3403  0708  118A  28FB         	ljmp	l4801
  3404  070A  118A  2AD2         	ljmp	l5119
  3405  070C  118A  2AE3         	ljmp	l5121
  3406  070E  118A  2B06         	ljmp	l5145
  3407  0710  118A  2B0E         	ljmp	l5151
  3408  0712  118A  2B40         	ljmp	l5181
  3409  0714  118A  2B4D         	ljmp	l5189
  3410  0716  118A  2B55         	ljmp	l991
  3411  0718  118A  2B5D         	ljmp	l5199
  3412  071A  118A  2B69         	ljmp	l5207
  3413  071C  118A  2B8D         	ljmp	l5229
  3414  071E  118A  2B98         	ljmp	l5237
  3415                           
  3416                           	psect	text879
  3417  06E2                     __ptext879:	
  3418 ;; =============== function _main ends ============
  3419                           
  3420                           
  3421 ;; *************** function _clearPinPortAndTimer *****************
  3422 ;; Defined at:
  3423 ;;		line 104 in file "D:\develop\190625\AK7030-OTP\main.c"
  3424 ;; Parameters:    Size  Location     Type
  3425 ;;		None
  3426 ;; Auto vars:     Size  Location     Type
  3427 ;;		None
  3428 ;; Return value:  Size  Location     Type
  3429 ;;		None               void
  3430 ;; Registers used:
  3431 ;;		status,2, status,0, pclath, cstack
  3432 ;; Tracked objects:
  3433 ;;		On entry : 40/0
  3434 ;;		On exit  : 60/0
  3435 ;;		Unchanged: FFF9F/0
  3436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3437 ;;      Params:         0       0       0       0       0
  3438 ;;      Locals:         0       0       0       0       0
  3439 ;;      Temps:          0       0       0       0       0
  3440 ;;      Totals:         0       0       0       0       0
  3441 ;;Total ram usage:        0 bytes
  3442 ;; Hardware stack levels used:    1
  3443 ;; Hardware stack levels required when called:    4
  3444 ;; This function calls:
  3445 ;;		_clearAllTimer
  3446 ;; This function is called by:
  3447 ;;		_main
  3448 ;; This function uses a non-reentrant model
  3449 ;;
  3450  06E2                     _clearPinPortAndTimer:	
  3451                           
  3452                           ;main.c: 106: PB0 = 0;
  3453                           
  3454                           ; Regs used in _clearPinPortAndTimer: [status,2+status,0+pclath+cstack]
  3455  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  3456  06E3  1006               	bcf	6,0
  3457                           
  3458                           ;main.c: 107: PA0 = 0;
  3459  06E4  1005               	bcf	5,0
  3460                           
  3461                           ;main.c: 108: PA1 = 0;
  3462  06E5  1085               	bcf	5,1
  3463                           
  3464                           ;main.c: 109: PA2 = 0;
  3465  06E6  1105               	bcf	5,2
  3466                           
  3467                           ;main.c: 110: PA3 = 0;
  3468  06E7  1185               	bcf	5,3
  3469                           
  3470                           ;main.c: 113: PBOD7 = 0;
  3471  06E8  1683               	bsf	3,5	;RP0=1, select bank3
  3472  06E9  1703               	bsf	3,6	;RP1=1, select bank3
  3473  06EA  1388               	bcf	8,7
  3474                           
  3475                           ;main.c: 114: PB7 = 0;
  3476  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  3477  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  3478  06ED  1386               	bcf	6,7
  3479                           
  3480                           ;main.c: 115: clearAllTimer();
  3481  06EE  2EEF               	ljmp	l4637
  3482  06EF                     __end_of_clearPinPortAndTimer:	
  3483  06EF                     __ptext884:	
  3484 ;; =============== function _process_AD_Converter_Value ends ============
  3485                           
  3486                           
  3487 ;; *************** function _clearAllTimer *****************
  3488 ;; Defined at:
  3489 ;;		line 95 in file "D:\develop\190625\AK7030-OTP\main.c"
  3490 ;; Parameters:    Size  Location     Type
  3491 ;;		None
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;		None
  3494 ;; Return value:  Size  Location     Type
  3495 ;;		None               void
  3496 ;; Registers used:
  3497 ;;		status,2, status,0, pclath, cstack
  3498 ;; Tracked objects:
  3499 ;;		On entry : 40/20
  3500 ;;		On exit  : 60/0
  3501 ;;		Unchanged: FFF9F/0
  3502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3503 ;;      Params:         0       0       0       0       0
  3504 ;;      Locals:         0       0       0       0       0
  3505 ;;      Temps:          0       0       0       0       0
  3506 ;;      Totals:         0       0       0       0       0
  3507 ;;Total ram usage:        0 bytes
  3508 ;; Hardware stack levels used:    1
  3509 ;; Hardware stack levels required when called:    3
  3510 ;; This function calls:
  3511 ;;		_clearTwelveHoursTimer
  3512 ;;		_clearThreeHoursTimer
  3513 ;;		_clearTwentySecondsTimer
  3514 ;; This function is called by:
  3515 ;;		_clearPinPortAndTimer
  3516 ;;		_main
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519  06EF                     _clearAllTimer:	
  3520  06EF                     l4637:	
  3521                           ; Regs used in _clearAllTimer: [status,2+status,0+pclath+cstack]
  3522                           
  3523                           
  3524                           ;main.c: 96: clearTwelveHoursTimer();
  3525  06EF  26F4  118A         	fcall	_clearTwelveHoursTimer
  3526                           
  3527                           ;main.c: 97: clearThreeHoursTimer();
  3528  06F1  26FA  118A         	fcall	_clearThreeHoursTimer
  3529                           
  3530                           ;main.c: 98: clearTwentySecondsTimer();
  3531  06F3  2F00               	ljmp	l4289
  3532  06F4                     __end_of_clearAllTimer:	
  3533  06F4                     __ptext918:	
  3534 ;; =============== function _clearThreeHoursTimer ends ============
  3535                           
  3536                           
  3537 ;; *************** function _clearTwelveHoursTimer *****************
  3538 ;; Defined at:
  3539 ;;		line 374 in file "D:\develop\190625\AK7030-OTP\common.c"
  3540 ;; Parameters:    Size  Location     Type
  3541 ;;		None
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;		None
  3544 ;; Return value:  Size  Location     Type
  3545 ;;		None               void
  3546 ;; Registers used:
  3547 ;;		status,2
  3548 ;; Tracked objects:
  3549 ;;		On entry : 40/20
  3550 ;;		On exit  : 60/0
  3551 ;;		Unchanged: FFF9F/0
  3552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3553 ;;      Params:         0       0       0       0       0
  3554 ;;      Locals:         0       0       0       0       0
  3555 ;;      Temps:          0       0       0       0       0
  3556 ;;      Totals:         0       0       0       0       0
  3557 ;;Total ram usage:        0 bytes
  3558 ;; Hardware stack levels used:    1
  3559 ;; Hardware stack levels required when called:    2
  3560 ;; This function calls:
  3561 ;;		Nothing
  3562 ;; This function is called by:
  3563 ;;		_clearAllTimer
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566  06F4                     _clearTwelveHoursTimer:	
  3567                           
  3568                           ;common.c: 375: uiBigTimer = 0;
  3569                           
  3570                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  3571  06F4  1683               	bsf	3,5	;RP0=1, select bank1
  3572  06F5  01A0               	clrf	_uiBigTimer^(0+128)
  3573  06F6  01A1               	clrf	(_uiBigTimer+1)^(0+128)
  3574                           
  3575                           ;common.c: 376: bBigTimerStartFlag = 0;
  3576  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  3577  06F8  01CA               	clrf	_bBigTimerStartFlag
  3578  06F9  0008               	return
  3579  06FA                     __end_of_clearTwelveHoursTimer:	
  3580  06FA                     __ptext917:	
  3581 ;; =============== function _clearTwentySecondsTimer ends ============
  3582                           
  3583                           
  3584 ;; *************** function _clearThreeHoursTimer *****************
  3585 ;; Defined at:
  3586 ;;		line 381 in file "D:\develop\190625\AK7030-OTP\common.c"
  3587 ;; Parameters:    Size  Location     Type
  3588 ;;		None
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;		None
  3591 ;; Return value:  Size  Location     Type
  3592 ;;		None               void
  3593 ;; Registers used:
  3594 ;;		status,2
  3595 ;; Tracked objects:
  3596 ;;		On entry : 60/0
  3597 ;;		On exit  : 60/0
  3598 ;;		Unchanged: FFF9F/0
  3599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3600 ;;      Params:         0       0       0       0       0
  3601 ;;      Locals:         0       0       0       0       0
  3602 ;;      Temps:          0       0       0       0       0
  3603 ;;      Totals:         0       0       0       0       0
  3604 ;;Total ram usage:        0 bytes
  3605 ;; Hardware stack levels used:    1
  3606 ;; Hardware stack levels required when called:    2
  3607 ;; This function calls:
  3608 ;;		Nothing
  3609 ;; This function is called by:
  3610 ;;		_clearAllTimer
  3611 ;;		_main
  3612 ;; This function uses a non-reentrant model
  3613 ;;
  3614  06FA                     _clearThreeHoursTimer:	
  3615                           
  3616                           ;common.c: 382: uiSmallTimer = 0;
  3617                           
  3618                           ; Regs used in _clearThreeHoursTimer: [status,2]
  3619  06FA  1683               	bsf	3,5	;RP0=1, select bank1
  3620  06FB  01A2               	clrf	_uiSmallTimer^(0+128)
  3621  06FC  01A3               	clrf	(_uiSmallTimer+1)^(0+128)
  3622                           
  3623                           ;common.c: 383: bSmallTimerStartFlag = 0;
  3624  06FD  1283               	bcf	3,5	;RP0=0, select bank0
  3625  06FE  01CB               	clrf	_bSmallTimerStartFlag
  3626  06FF  0008               	return
  3627  0700                     __end_of_clearThreeHoursTimer:	
  3628  0700                     __ptext916:	
  3629 ;; =============== function _initPin ends ============
  3630                           
  3631                           
  3632 ;; *************** function _clearTwentySecondsTimer *****************
  3633 ;; Defined at:
  3634 ;;		line 387 in file "D:\develop\190625\AK7030-OTP\common.c"
  3635 ;; Parameters:    Size  Location     Type
  3636 ;;		None
  3637 ;; Auto vars:     Size  Location     Type
  3638 ;;		None
  3639 ;; Return value:  Size  Location     Type
  3640 ;;		None               void
  3641 ;; Registers used:
  3642 ;;		status,2
  3643 ;; Tracked objects:
  3644 ;;		On entry : 60/0
  3645 ;;		On exit  : 60/0
  3646 ;;		Unchanged: FFF9F/0
  3647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3648 ;;      Params:         0       0       0       0       0
  3649 ;;      Locals:         0       0       0       0       0
  3650 ;;      Temps:          0       0       0       0       0
  3651 ;;      Totals:         0       0       0       0       0
  3652 ;;Total ram usage:        0 bytes
  3653 ;; Hardware stack levels used:    1
  3654 ;; Hardware stack levels required when called:    2
  3655 ;; This function calls:
  3656 ;;		Nothing
  3657 ;; This function is called by:
  3658 ;;		_clearAllTimer
  3659 ;;		_main
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662  0700                     _clearTwentySecondsTimer:	
  3663  0700                     l4289:	
  3664                           ; Regs used in _clearTwentySecondsTimer: [status,2]
  3665                           
  3666                           
  3667                           ;common.c: 388: uiTwentySecondsTimer = 0;
  3668  0700  1683               	bsf	3,5	;RP0=1, select bank1
  3669  0701  01A6               	clrf	_uiTwentySecondsTimer^(0+128)
  3670  0702  01A7               	clrf	(_uiTwentySecondsTimer+1)^(0+128)
  3671                           
  3672                           ;common.c: 389: bTwentySecStartFlag = 0;
  3673  0703  1283               	bcf	3,5	;RP0=0, select bank0
  3674  0704  01CD               	clrf	_bTwentySecStartFlag
  3675  0705  0008               	return
  3676  0706                     __end_of_clearTwentySecondsTimer:	
  3677                           
  3678                           	psect	text880
  3679  05B9                     __ptext880:	
  3680 ;; =============== function _clearPinPortAndTimer ends ============
  3681                           
  3682                           
  3683 ;; *************** function _getAdOriginaCh4Value *****************
  3684 ;; Defined at:
  3685 ;;		line 235 in file "D:\develop\190625\AK7030-OTP\common.c"
  3686 ;; Parameters:    Size  Location     Type
  3687 ;;		None
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;		None
  3690 ;; Return value:  Size  Location     Type
  3691 ;;                  2   38[BANK0 ] unsigned int 
  3692 ;; Registers used:
  3693 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3694 ;; Tracked objects:
  3695 ;;		On entry : 40/0
  3696 ;;		On exit  : 160/0
  3697 ;;		Unchanged: FFE00/0
  3698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3699 ;;      Params:         0       2       0       0       0
  3700 ;;      Locals:         0       0       0       0       0
  3701 ;;      Temps:          0       0       0       0       0
  3702 ;;      Totals:         0       2       0       0       0
  3703 ;;Total ram usage:        2 bytes
  3704 ;; Hardware stack levels used:    1
  3705 ;; Hardware stack levels required when called:    3
  3706 ;; This function calls:
  3707 ;;		_Filter
  3708 ;; This function is called by:
  3709 ;;		_main
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712  05B9                     _getAdOriginaCh4Value:	
  3713                           
  3714                           ;common.c: 237: return Filter(uiSampleChannelFourth);
  3715                           
  3716                           ; Regs used in _getAdOriginaCh4Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  3717  05B9  30D4               	movlw	_uiSampleChannelFourth& (0+255)
  3718  05BA  1283               	bcf	3,5	;RP0=0, select bank0
  3719  05BB  00A0               	movwf	?_Filter
  3720  05BC  01A1               	clrf	?_Filter+1
  3721  05BD  25D8               	fcall	_Filter
  3722  05BE  0821               	movf	?_Filter+1,w
  3723  05BF  00C7               	movwf	?_getAdOriginaCh4Value+1
  3724  05C0  0820               	movf	?_Filter,w
  3725  05C1  00C6               	movwf	?_getAdOriginaCh4Value
  3726  05C2  0008               	return
  3727  05C3                     __end_of_getAdOriginaCh4Value:	
  3728  05C3                     __ptext881:	
  3729 ;; =============== function _getAdOriginaCh4Value ends ============
  3730                           
  3731                           
  3732 ;; *************** function _getAdOriginalCh1Value *****************
  3733 ;; Defined at:
  3734 ;;		line 223 in file "D:\develop\190625\AK7030-OTP\common.c"
  3735 ;; Parameters:    Size  Location     Type
  3736 ;;		None
  3737 ;; Auto vars:     Size  Location     Type
  3738 ;;		None
  3739 ;; Return value:  Size  Location     Type
  3740 ;;                  2   38[BANK0 ] unsigned int 
  3741 ;; Registers used:
  3742 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3743 ;; Tracked objects:
  3744 ;;		On entry : 40/0
  3745 ;;		On exit  : 160/0
  3746 ;;		Unchanged: FFE00/0
  3747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3748 ;;      Params:         0       2       0       0       0
  3749 ;;      Locals:         0       0       0       0       0
  3750 ;;      Temps:          0       0       0       0       0
  3751 ;;      Totals:         0       2       0       0       0
  3752 ;;Total ram usage:        2 bytes
  3753 ;; Hardware stack levels used:    1
  3754 ;; Hardware stack levels required when called:    3
  3755 ;; This function calls:
  3756 ;;		_Filter
  3757 ;; This function is called by:
  3758 ;;		_main
  3759 ;; This function uses a non-reentrant model
  3760 ;;
  3761  05C3                     _getAdOriginalCh1Value:	
  3762                           
  3763                           ;common.c: 226: return Filter(uiSampleChannelFirst);
  3764                           
  3765                           ; Regs used in _getAdOriginalCh1Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  3766  05C3  30BC               	movlw	_uiSampleChannelFirst& (0+255)
  3767  05C4  1283               	bcf	3,5	;RP0=0, select bank0
  3768  05C5  00A0               	movwf	?_Filter
  3769  05C6  01A1               	clrf	?_Filter+1
  3770  05C7  25D8               	fcall	_Filter
  3771  05C8  0821               	movf	?_Filter+1,w
  3772  05C9  00C7               	movwf	?_getAdOriginalCh1Value+1
  3773  05CA  0820               	movf	?_Filter,w
  3774  05CB  00C6               	movwf	?_getAdOriginalCh1Value
  3775  05CC  0008               	return
  3776  05CD                     __end_of_getAdOriginalCh1Value:	
  3777  05CD                     __ptext882:	
  3778 ;; =============== function _getAdOriginalCh1Value ends ============
  3779                           
  3780                           
  3781 ;; *************** function _getAdOriginalCh14Value *****************
  3782 ;; Defined at:
  3783 ;;		line 246 in file "D:\develop\190625\AK7030-OTP\common.c"
  3784 ;; Parameters:    Size  Location     Type
  3785 ;;		None
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;		None
  3788 ;; Return value:  Size  Location     Type
  3789 ;;                  2   38[BANK0 ] unsigned int 
  3790 ;; Registers used:
  3791 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3792 ;; Tracked objects:
  3793 ;;		On entry : 40/0
  3794 ;;		On exit  : 160/0
  3795 ;;		Unchanged: FFE00/0
  3796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3797 ;;      Params:         0       2       0       0       0
  3798 ;;      Locals:         0       0       0       0       0
  3799 ;;      Temps:          0       0       0       0       0
  3800 ;;      Totals:         0       2       0       0       0
  3801 ;;Total ram usage:        2 bytes
  3802 ;; Hardware stack levels used:    1
  3803 ;; Hardware stack levels required when called:    3
  3804 ;; This function calls:
  3805 ;;		_Filter
  3806 ;; This function is called by:
  3807 ;;		_main
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810  05CD                     _getAdOriginalCh14Value:	
  3811                           
  3812                           ;common.c: 248: return Filter(uiSampleChannelFourteenth);
  3813                           
  3814                           ; Regs used in _getAdOriginalCh14Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  3815  05CD  3090               	movlw	_uiSampleChannelFourteenth& (0+255)
  3816  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  3817  05CF  00A0               	movwf	?_Filter
  3818  05D0  3001               	movlw	1
  3819  05D1  00A1               	movwf	?_Filter+1
  3820  05D2  25D8               	fcall	_Filter
  3821  05D3  0821               	movf	?_Filter+1,w
  3822  05D4  00C7               	movwf	?_getAdOriginalCh14Value+1
  3823  05D5  0820               	movf	?_Filter,w
  3824  05D6  00C6               	movwf	?_getAdOriginalCh14Value
  3825  05D7  0008               	return
  3826  05D8                     __end_of_getAdOriginalCh14Value:	
  3827  05D8                     __ptext888:	
  3828 ;; =============== function _getAD_ConvertFlag ends ============
  3829                           
  3830                           
  3831 ;; *************** function _Filter *****************
  3832 ;; Defined at:
  3833 ;;		line 57 in file "D:\develop\190625\AK7030-OTP\common.c"
  3834 ;; Parameters:    Size  Location     Type
  3835 ;;  tmpValue        2    0[BANK0 ] PTR int 
  3836 ;;		 -> uiSampleChannelFourteenth(24), uiSampleChannelFourth(24), uiSampleChannelFirst(24), 
  3837 ;; Auto vars:     Size  Location     Type
  3838 ;;  cir             2   34[BANK0 ] int 
  3839 ;;  filter_buf     24    6[BANK0 ] unsigned int [12]
  3840 ;;  filter_sum      2   32[BANK0 ] unsigned int 
  3841 ;;  filter_temp     2   30[BANK0 ] unsigned int 
  3842 ;;  i               1   37[BANK0 ] unsigned char 
  3843 ;;  j               1   36[BANK0 ] unsigned char 
  3844 ;; Return value:  Size  Location     Type
  3845 ;;                  2    0[BANK0 ] unsigned int 
  3846 ;; Registers used:
  3847 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3848 ;; Tracked objects:
  3849 ;;		On entry : 60/0
  3850 ;;		On exit  : 160/0
  3851 ;;		Unchanged: FFE00/0
  3852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3853 ;;      Params:         0       2       0       0       0
  3854 ;;      Locals:         0      32       0       0       0
  3855 ;;      Temps:          0       4       0       0       0
  3856 ;;      Totals:         0      38       0       0       0
  3857 ;;Total ram usage:       38 bytes
  3858 ;; Hardware stack levels used:    1
  3859 ;; Hardware stack levels required when called:    2
  3860 ;; This function calls:
  3861 ;;		Nothing
  3862 ;; This function is called by:
  3863 ;;		_getAdOriginalCh1Value
  3864 ;;		_getAdOriginaCh4Value
  3865 ;;		_getAdOriginalCh14Value
  3866 ;; This function uses a non-reentrant model
  3867 ;;
  3868  05D8                     _Filter:	
  3869                           
  3870                           ; Regs used in _Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  3871  05D8  01C4               	clrf	Filter@j
  3872                           
  3873                           ;common.c: 61: unsigned int filter_temp = 0, filter_sum = 0;
  3874  05D9  01BE               	clrf	Filter@filter_temp
  3875  05DA  01BF               	clrf	Filter@filter_temp+1
  3876  05DB  01C0               	clrf	Filter@filter_sum
  3877  05DC  01C1               	clrf	Filter@filter_sum+1
  3878                           
  3879                           ;common.c: 63: unsigned int filter_buf[12];
  3880                           ;common.c: 65: for(int cir = 0;cir < 12; cir++)
  3881  05DD  01C2               	clrf	Filter@cir
  3882  05DE  01C3               	clrf	Filter@cir+1
  3883  05DF                     l4475:	
  3884                           
  3885                           ;common.c: 66: filter_buf[cir] = *tmpValue++;
  3886  05DF  1283               	bcf	3,5	;RP0=0, select bank0
  3887  05E0  1303               	bcf	3,6	;RP1=0, select bank0
  3888  05E1  0820               	movf	Filter@tmpValue,w
  3889  05E2  0084               	movwf	4
  3890  05E3  1783               	bsf	3,7
  3891  05E4  1C21               	btfss	Filter@tmpValue+1,0
  3892  05E5  1383               	bcf	3,7
  3893  05E6  0800               	movf	0,w
  3894  05E7  2679  118A         	fcall	PL5	;call to abstracted procedure
  3895  05E9  0D42               	rlf	Filter@cir,w
  3896  05EA  3E26               	addlw	Filter@filter_buf& (0+255)
  3897  05EB  0084               	movwf	4
  3898  05EC  0822               	movf	??_Filter,w
  3899  05ED  1383               	bcf	3,7	;select IRP bank0
  3900  05EE  0080               	movwf	0
  3901  05EF  0A84               	incf	4,f
  3902  05F0  0823               	movf	??_Filter+1,w
  3903  05F1  0080               	movwf	0
  3904  05F2  3002               	movlw	2
  3905  05F3  07A0               	addwf	Filter@tmpValue,f
  3906  05F4  1803               	skipnc
  3907  05F5  0AA1               	incf	Filter@tmpValue+1,f
  3908  05F6  0AC2               	incf	Filter@cir,f
  3909  05F7  1903               	skipnz
  3910  05F8  0AC3               	incf	Filter@cir+1,f
  3911  05F9  0843               	movf	Filter@cir+1,w
  3912  05FA  3A80               	xorlw	128
  3913  05FB  00FF               	movwf	127
  3914  05FC  3080               	movlw	128
  3915  05FD  027F               	subwf	127,w
  3916  05FE  1D03               	skipz
  3917  05FF  2E02               	goto	u1615
  3918  0600  300C               	movlw	12
  3919  0601  0242               	subwf	Filter@cir,w
  3920  0602                     u1615:	
  3921  0602  1C03               	skipc
  3922  0603  2DDF               	goto	l4475
  3923                           
  3924                           ;common.c: 69: for(j = 0; j < 12 - 1; j++)
  3925  0604  1283               	bcf	3,5	;RP0=0, select bank0
  3926  0605  1303               	bcf	3,6	;RP1=0, select bank0
  3927  0606  01C4               	clrf	Filter@j
  3928  0607                     l4489:	
  3929                           
  3930                           ;common.c: 70: {
  3931                           ;common.c: 71: for(i = 0; i < 12 - 1 - j; i++)
  3932  0607  01C5               	clrf	Filter@i
  3933  0608                     l4497:	
  3934  0608  01A3               	clrf	??_Filter+1
  3935  0609  0844               	movf	Filter@j,w
  3936  060A  3C0B               	sublw	11
  3937  060B  00A2               	movwf	??_Filter
  3938  060C  1C03               	skipc
  3939  060D  03A3               	decf	??_Filter+1,f
  3940  060E  0823               	movf	??_Filter+1,w
  3941  060F  3A80               	xorlw	128
  3942  0610  3C80               	sublw	128
  3943  0611  1D03               	skipz
  3944  0612  2E15               	goto	u1635
  3945  0613  0822               	movf	??_Filter,w
  3946  0614  0245               	subwf	Filter@i,w
  3947  0615                     u1635:	
  3948  0615  1803               	btfsc	3,0
  3949  0616  2E4A               	goto	l4499
  3950                           
  3951                           ;common.c: 72: {
  3952                           ;common.c: 73: if(filter_buf[i] > filter_buf[i + 1])
  3953  0617  1283               	bcf	3,5	;RP0=0, select bank0
  3954  0618  1303               	bcf	3,6	;RP1=0, select bank0
  3955  0619  1003               	clrc
  3956  061A  266F  118A         	fcall	PL3	;call to abstracted procedure
  3957  061C  267F  118A         	fcall	PL6	;call to abstracted procedure
  3958  061E  0800               	movf	0,w
  3959  061F  00A4               	movwf	??_Filter+2
  3960  0620  0A84               	incf	4,f
  3961  0621  0800               	movf	0,w
  3962  0622  00A5               	movwf	??_Filter+3
  3963  0623  0823               	movf	??_Filter+1,w
  3964  0624  0225               	subwf	??_Filter+3,w
  3965  0625  1D03               	skipz
  3966  0626  2E29               	goto	u1625
  3967  0627  0822               	movf	??_Filter,w
  3968  0628  0224               	subwf	??_Filter+2,w
  3969  0629                     u1625:	
  3970  0629  1803               	skipnc
  3971  062A  2E48               	goto	l4495
  3972                           
  3973                           ;common.c: 74: {
  3974                           ;common.c: 76: filter_temp = filter_buf[i];
  3975  062B  1003               	clrc
  3976  062C  0D45               	rlf	Filter@i,w
  3977  062D  3E26               	addlw	Filter@filter_buf& (0+255)
  3978  062E  0084               	movwf	4
  3979  062F  0800               	movf	0,w
  3980  0630  00BE               	movwf	Filter@filter_temp
  3981  0631  0A84               	incf	4,f
  3982  0632  0800               	movf	0,w
  3983  0633  00BF               	movwf	Filter@filter_temp+1
  3984                           
  3985                           ;common.c: 78: filter_buf[i] = filter_buf[i + 1];
  3986  0634  267F  118A         	fcall	PL6	;call to abstracted procedure
  3987  0636  0800               	movf	0,w
  3988  0637  2679  118A         	fcall	PL5	;call to abstracted procedure
  3989  0639  0D45               	rlf	Filter@i,w
  3990  063A  3E26               	addlw	Filter@filter_buf& (0+255)
  3991  063B  0084               	movwf	4
  3992  063C  0822               	movf	??_Filter,w
  3993  063D  0080               	movwf	0
  3994  063E  0A84               	incf	4,f
  3995  063F  0823               	movf	??_Filter+1,w
  3996  0640  0080               	movwf	0
  3997                           
  3998                           ;common.c: 80: filter_buf[i + 1] = filter_temp;
  3999  0641  267F  118A         	fcall	PL6	;call to abstracted procedure
  4000  0643  083E               	movf	Filter@filter_temp,w
  4001  0644  0080               	movwf	0
  4002  0645  0A84               	incf	4,f
  4003  0646  083F               	movf	Filter@filter_temp+1,w
  4004  0647  0080               	movwf	0
  4005  0648                     l4495:	
  4006  0648  0AC5               	incf	Filter@i,f
  4007  0649  2E08               	goto	l4497
  4008  064A                     l4499:	
  4009  064A  1283               	bcf	3,5	;RP0=0, select bank0
  4010  064B  300B               	movlw	11
  4011  064C  1303               	bcf	3,6	;RP1=0, select bank0
  4012  064D  0AC4               	incf	Filter@j,f
  4013  064E  0244               	subwf	Filter@j,w
  4014  064F  1C03               	skipc
  4015  0650  2E07               	goto	l4489
  4016                           
  4017                           ;common.c: 81: }
  4018                           ;common.c: 82: }
  4019                           ;common.c: 83: }
  4020                           ;common.c: 85: for(i = 2; i < 12 - 2; i++)
  4021  0651  3002               	movlw	2
  4022  0652  00C5               	movwf	Filter@i
  4023                           
  4024                           ;common.c: 86: {
  4025                           ;common.c: 87: filter_sum += filter_buf[i];
  4026  0653  1003               	clrc
  4027  0654                     L25:	
  4028  0654  266F  118A         	fcall	PL3	;call to abstracted procedure
  4029  0656  0822               	movf	??_Filter,w
  4030  0657  07C0               	addwf	Filter@filter_sum,f
  4031  0658  1803               	skipnc
  4032  0659  0AC1               	incf	Filter@filter_sum+1,f
  4033  065A  0823               	movf	??_Filter+1,w
  4034  065B  07C1               	addwf	Filter@filter_sum+1,f
  4035  065C  300A               	movlw	10
  4036  065D  0AC5               	incf	Filter@i,f
  4037  065E  0245               	subwf	Filter@i,w
  4038  065F  1C03               	skipc
  4039  0660  2E54               	goto	L25
  4040                           
  4041                           ;common.c: 88: }
  4042                           ;common.c: 90: return (filter_sum >> 3);
  4043  0661  0841               	movf	Filter@filter_sum+1,w
  4044  0662  00A1               	movwf	?_Filter+1
  4045  0663  0840               	movf	Filter@filter_sum,w
  4046  0664  00A0               	movwf	?_Filter
  4047  0665  1003               	clrc
  4048  0666  0CA1               	rrf	?_Filter+1,f
  4049  0667  0CA0               	rrf	?_Filter,f
  4050  0668  1003               	clrc
  4051  0669  0CA1               	rrf	?_Filter+1,f
  4052  066A  0CA0               	rrf	?_Filter,f
  4053  066B  1003               	clrc
  4054  066C  0CA1               	rrf	?_Filter+1,f
  4055  066D  0CA0               	rrf	?_Filter,f
  4056  066E  0008               	return
  4057  066F                     __end_of_Filter:	
  4058  066F                     PL3:	
  4059  066F  0D45               	rlf	Filter@i,w
  4060  0670  3E26               	addlw	Filter@filter_buf& (0+255)
  4061  0671  0084               	movwf	4
  4062  0672  1383               	bcf	3,7	;select IRP bank0
  4063  0673  0800               	movf	0,w
  4064  0674  00A2               	movwf	??_Filter
  4065  0675  0A84               	incf	4,f
  4066  0676  0800               	movf	0,w
  4067  0677  00A3               	movwf	??_Filter+1
  4068  0678  0008               	return
  4069  0679                     PL5:	
  4070  0679  00A2               	movwf	??_Filter
  4071  067A  0A84               	incf	4,f
  4072  067B  0800               	movf	0,w
  4073  067C  00A3               	movwf	??_Filter+1
  4074  067D  1003               	clrc
  4075  067E  0008               	return
  4076  067F                     PL6:	
  4077  067F  1003               	clrc
  4078  0680  0D45               	rlf	Filter@i,w
  4079  0681  3E02               	addlw	2
  4080  0682  3E26               	addlw	Filter@filter_buf& (0+255)
  4081  0683  0084               	movwf	4
  4082  0684  0008               	return
  4083                           
  4084                           	psect	text883
  4085  0685                     __ptext883:	
  4086 ;; =============== function _getAdOriginalCh14Value ends ============
  4087                           
  4088                           
  4089 ;; *************** function _process_AD_Converter_Value *****************
  4090 ;; Defined at:
  4091 ;;		line 257 in file "D:\develop\190625\AK7030-OTP\common.c"
  4092 ;; Parameters:    Size  Location     Type
  4093 ;;		None
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;		None
  4096 ;; Return value:  Size  Location     Type
  4097 ;;		None               void
  4098 ;; Registers used:
  4099 ;;		wreg, status,2, status,0, pclath, cstack
  4100 ;; Tracked objects:
  4101 ;;		On entry : 0/0
  4102 ;;		On exit  : 40/0
  4103 ;;		Unchanged: FFF9F/0
  4104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4105 ;;      Params:         0       0       0       0       0
  4106 ;;      Locals:         0       0       0       0       0
  4107 ;;      Temps:          0       0       0       0       0
  4108 ;;      Totals:         0       0       0       0       0
  4109 ;;Total ram usage:        0 bytes
  4110 ;; Hardware stack levels used:    1
  4111 ;; Hardware stack levels required when called:    3
  4112 ;; This function calls:
  4113 ;;		_getAD_ConvertFlag
  4114 ;;		_setAD_ConvertFlag
  4115 ;;		_AD_Sample
  4116 ;;		_adc_test_init
  4117 ;;		_adc_start
  4118 ;; This function is called by:
  4119 ;;		_main
  4120 ;; This function uses a non-reentrant model
  4121 ;;
  4122  0685                     _process_AD_Converter_Value:	
  4123                           
  4124                           ;common.c: 258: if(getAD_ConvertFlag())
  4125                           
  4126                           ; Regs used in _process_AD_Converter_Value: [wreg+status,2+status,0+pclath+cstack]
  4127  0685  26A3  118A         	fcall	_getAD_ConvertFlag
  4128  0687  3A00               	xorlw	0
  4129  0688  1903               	skipnz
  4130  0689  0008               	return
  4131                           
  4132                           ;common.c: 259: {
  4133                           ;common.c: 260: setAD_ConvertFlag(0);
  4134  068A  3000               	movlw	0
  4135  068B  26A7  118A         	fcall	_setAD_ConvertFlag
  4136                           
  4137                           ;common.c: 261: AD_Sample();
  4138  068D  26AC  118A         	fcall	_AD_Sample
  4139                           
  4140                           ;common.c: 262: if(5 == sampleChannelSelect)
  4141  068F  086E               	movf	_sampleChannelSelect,w
  4142  0690  3A05               	xorlw	5
  4143  0691  1D03               	skipz
  4144  0692  2E97               	goto	l4647
  4145                           
  4146                           ;common.c: 263: adc_test_init(5,3);
  4147  0693  3003               	movlw	3
  4148  0694  00A0               	movwf	?_adc_test_init
  4149  0695  3005               	movlw	5
  4150  0696  2EA0               	goto	L24
  4151  0697                     l4647:	
  4152                           
  4153                           ;common.c: 264: else if(1 == sampleChannelSelect)
  4154  0697  0B6E               	decfsz	_sampleChannelSelect,w
  4155  0698  2E9D               	goto	l4651
  4156                           
  4157                           ;common.c: 265: adc_test_init(1,3);
  4158  0699  3003               	movlw	3
  4159  069A  00A0               	movwf	?_adc_test_init
  4160  069B  3001               	movlw	1
  4161  069C  2EA0               	goto	L24
  4162  069D                     l4651:	
  4163                           
  4164                           ;common.c: 266: else
  4165                           ;common.c: 267: adc_test_init(14,3);
  4166  069D  3003               	movlw	3
  4167  069E  00A0               	movwf	?_adc_test_init
  4168  069F  300E               	movlw	14
  4169  06A0                     L24:	
  4170  06A0  26CA  118A         	fcall	_adc_test_init
  4171                           
  4172                           ;common.c: 269: adc_start();
  4173  06A2  2EDF               	ljmp	l4355
  4174  06A3                     __end_of_process_AD_Converter_Value:	
  4175  06A3                     __ptext887:	
  4176 ;; =============== function _setAD_ConvertFlag ends ============
  4177                           
  4178                           
  4179 ;; *************** function _getAD_ConvertFlag *****************
  4180 ;; Defined at:
  4181 ;;		line 206 in file "D:\develop\190625\AK7030-OTP\common.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;		None
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;		None
  4186 ;; Return value:  Size  Location     Type
  4187 ;;                  1    wreg      unsigned char 
  4188 ;; Registers used:
  4189 ;;		wreg
  4190 ;; Tracked objects:
  4191 ;;		On entry : 0/0
  4192 ;;		On exit  : 60/20
  4193 ;;		Unchanged: FFF9F/0
  4194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4195 ;;      Params:         0       0       0       0       0
  4196 ;;      Locals:         0       0       0       0       0
  4197 ;;      Temps:          0       0       0       0       0
  4198 ;;      Totals:         0       0       0       0       0
  4199 ;;Total ram usage:        0 bytes
  4200 ;; Hardware stack levels used:    1
  4201 ;; Hardware stack levels required when called:    2
  4202 ;; This function calls:
  4203 ;;		Nothing
  4204 ;; This function is called by:
  4205 ;;		_process_AD_Converter_Value
  4206 ;; This function uses a non-reentrant model
  4207 ;;
  4208  06A3                     _getAD_ConvertFlag:	
  4209                           
  4210                           ;common.c: 207: return adc_convert_flag;
  4211                           
  4212                           ; Regs used in _getAD_ConvertFlag: [wreg]
  4213  06A3  1683               	bsf	3,5	;RP0=1, select bank1
  4214  06A4  1303               	bcf	3,6	;RP1=0, select bank1
  4215  06A5  082D               	movf	_adc_convert_flag^(0+128),w
  4216  06A6  0008               	return
  4217  06A7                     __end_of_getAD_ConvertFlag:	
  4218  06A7                     __ptext886:	
  4219 ;; =============== function _AD_Sample ends ============
  4220                           
  4221                           
  4222 ;; *************** function _setAD_ConvertFlag *****************
  4223 ;; Defined at:
  4224 ;;		line 212 in file "D:\develop\190625\AK7030-OTP\common.c"
  4225 ;; Parameters:    Size  Location     Type
  4226 ;;  flag            1    wreg     unsigned char 
  4227 ;; Auto vars:     Size  Location     Type
  4228 ;;  flag            1    0[BANK0 ] unsigned char 
  4229 ;; Return value:  Size  Location     Type
  4230 ;;		None               void
  4231 ;; Registers used:
  4232 ;;		wreg
  4233 ;; Tracked objects:
  4234 ;;		On entry : 60/20
  4235 ;;		On exit  : 60/20
  4236 ;;		Unchanged: FFF9F/0
  4237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4238 ;;      Params:         0       0       0       0       0
  4239 ;;      Locals:         0       1       0       0       0
  4240 ;;      Temps:          0       0       0       0       0
  4241 ;;      Totals:         0       1       0       0       0
  4242 ;;Total ram usage:        1 bytes
  4243 ;; Hardware stack levels used:    1
  4244 ;; Hardware stack levels required when called:    2
  4245 ;; This function calls:
  4246 ;;		Nothing
  4247 ;; This function is called by:
  4248 ;;		_process_AD_Converter_Value
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251  06A7                     _setAD_ConvertFlag:	
  4252                           
  4253                           ; Regs used in _setAD_ConvertFlag: [wreg]
  4254                           ;setAD_ConvertFlag@flag stored from wreg
  4255  06A7  1283               	bcf	3,5	;RP0=0, select bank0
  4256  06A8  00A0               	movwf	setAD_ConvertFlag@flag
  4257                           
  4258                           ;common.c: 213: adc_convert_flag = flag;
  4259  06A9  1683               	bsf	3,5	;RP0=1, select bank1
  4260  06AA  00AD               	movwf	_adc_convert_flag^(0+128)
  4261  06AB  0008               	return
  4262  06AC                     __end_of_setAD_ConvertFlag:	
  4263  06AC                     __ptext885:	
  4264 ;; =============== function _clearAllTimer ends ============
  4265                           
  4266                           
  4267 ;; *************** function _AD_Sample *****************
  4268 ;; Defined at:
  4269 ;;		line 283 in file "D:\develop\190625\AK7030-OTP\common.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;		None
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;		None
  4274 ;; Return value:  Size  Location     Type
  4275 ;;		None               void
  4276 ;; Registers used:
  4277 ;;		wreg, status,2, status,0
  4278 ;; Tracked objects:
  4279 ;;		On entry : 60/20
  4280 ;;		On exit  : 60/0
  4281 ;;		Unchanged: FFF9F/0
  4282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4283 ;;      Params:         0       0       0       0       0
  4284 ;;      Locals:         0       0       0       0       0
  4285 ;;      Temps:          0       0       0       0       0
  4286 ;;      Totals:         0       0       0       0       0
  4287 ;;Total ram usage:        0 bytes
  4288 ;; Hardware stack levels used:    1
  4289 ;; Hardware stack levels required when called:    2
  4290 ;; This function calls:
  4291 ;;		Nothing
  4292 ;; This function is called by:
  4293 ;;		_process_AD_Converter_Value
  4294 ;; This function uses a non-reentrant model
  4295 ;;
  4296  06AC                     _AD_Sample:	
  4297                           
  4298                           ;common.c: 284: if(sampleTimes < 12)
  4299                           
  4300                           ; Regs used in _AD_Sample: [wreg+status,2+status,0]
  4301  06AC  300C               	movlw	12
  4302  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  4303  06AE  024E               	subwf	_sampleTimes,w
  4304  06AF  1803               	skipnc
  4305  06B0  0008               	return
  4306  06B1  300C               	movlw	12
  4307                           
  4308                           ;common.c: 285: {
  4309                           ;common.c: 306: sampleTimes++;
  4310  06B2  0ACE               	incf	_sampleTimes,f
  4311                           
  4312                           ;common.c: 308: if(sampleTimes >= 12)
  4313  06B3  024E               	subwf	_sampleTimes,w
  4314  06B4  1C03               	skipc
  4315  06B5  0008               	return
  4316                           
  4317                           ;common.c: 309: {
  4318                           ;common.c: 310: sampleTimes = 0;
  4319  06B6  01CE               	clrf	_sampleTimes
  4320                           
  4321                           ;common.c: 312: if(sampleChannelSelect == 14)
  4322  06B7  086E               	movf	_sampleChannelSelect,w
  4323  06B8  3A0E               	xorlw	14
  4324  06B9  1D03               	skipz
  4325  06BA  2EBE               	goto	l4585
  4326                           
  4327                           ;common.c: 313: {
  4328                           ;common.c: 316: sampleChannelSelect = 1;
  4329  06BB  01EE               	clrf	_sampleChannelSelect
  4330  06BC  0AEE               	incf	_sampleChannelSelect,f
  4331                           
  4332                           ;common.c: 317: }
  4333  06BD  0008               	return
  4334  06BE                     l4585:	
  4335                           
  4336                           ;common.c: 318: else if(sampleChannelSelect == 5)
  4337  06BE  086E               	movf	_sampleChannelSelect,w
  4338  06BF  3A05               	xorlw	5
  4339  06C0  1D03               	skipz
  4340  06C1  2EC5               	goto	l4589
  4341  06C2                     l4587:	
  4342                           
  4343                           ;common.c: 319: {
  4344                           ;common.c: 321: sampleChannelSelect = 14;
  4345  06C2  300E               	movlw	14
  4346  06C3  00EE               	movwf	_sampleChannelSelect
  4347                           
  4348                           ;common.c: 322: }
  4349  06C4  0008               	return
  4350  06C5                     l4589:	
  4351                           
  4352                           ;common.c: 323: else if(sampleChannelSelect == 1)
  4353  06C5  0B6E               	decfsz	_sampleChannelSelect,w
  4354  06C6  2EC2               	goto	l4587
  4355                           
  4356                           ;common.c: 324: {
  4357                           ;common.c: 326: sampleChannelSelect = 5;
  4358  06C7  3005               	movlw	5
  4359  06C8  00EE               	movwf	_sampleChannelSelect
  4360                           
  4361                           ;common.c: 327: }
  4362  06C9  0008               	return
  4363  06CA                     __end_of_AD_Sample:	
  4364  06CA                     __ptext904:	
  4365 ;; =============== function _dac_init ends ============
  4366                           
  4367                           
  4368 ;; *************** function _adc_test_init *****************
  4369 ;; Defined at:
  4370 ;;		line 85 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4371 ;; Parameters:    Size  Location     Type
  4372 ;;  channel         1    wreg     unsigned char 
  4373 ;;  ref             1    0[BANK0 ] unsigned char 
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;  channel         1    2[BANK0 ] unsigned char 
  4376 ;; Return value:  Size  Location     Type
  4377 ;;		None               void
  4378 ;; Registers used:
  4379 ;;		wreg, status,2, status,0
  4380 ;; Tracked objects:
  4381 ;;		On entry : 60/0
  4382 ;;		On exit  : 60/20
  4383 ;;		Unchanged: FFF9F/0
  4384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4385 ;;      Params:         0       1       0       0       0
  4386 ;;      Locals:         0       1       0       0       0
  4387 ;;      Temps:          0       1       0       0       0
  4388 ;;      Totals:         0       3       0       0       0
  4389 ;;Total ram usage:        3 bytes
  4390 ;; Hardware stack levels used:    1
  4391 ;; Hardware stack levels required when called:    2
  4392 ;; This function calls:
  4393 ;;		Nothing
  4394 ;; This function is called by:
  4395 ;;		_main
  4396 ;;		_process_AD_Converter_Value
  4397 ;; This function uses a non-reentrant model
  4398 ;;
  4399  06CA                     _adc_test_init:	
  4400                           
  4401                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  4402                           ;adc_test_init@channel stored from wreg
  4403  06CA  00A2               	movwf	adc_test_init@channel
  4404                           
  4405                           ;periph.c: 86: ADCON0 = 0x00;
  4406  06CB  019F               	clrf	31	;volatile
  4407                           
  4408                           ;periph.c: 87: ADCON0|=channel<<2;
  4409  06CC  00A1               	movwf	??_adc_test_init
  4410  06CD  1003               	clrc
  4411  06CE  0DA1               	rlf	??_adc_test_init,f
  4412  06CF  1003               	clrc
  4413  06D0  0D21               	rlf	??_adc_test_init,w
  4414  06D1  049F               	iorwf	31,f	;volatile
  4415                           
  4416                           ;periph.c: 88: ADCON1|=ref<<6;
  4417  06D2  0820               	movf	adc_test_init@ref,w
  4418  06D3  00A1               	movwf	??_adc_test_init
  4419  06D4  0CA1               	rrf	??_adc_test_init,f
  4420  06D5  0CA1               	rrf	??_adc_test_init,f
  4421  06D6  0C21               	rrf	??_adc_test_init,w
  4422  06D7  39C0               	andlw	192
  4423  06D8  1683               	bsf	3,5	;RP0=1, select bank1
  4424  06D9  049F               	iorwf	31,f	;volatile
  4425                           
  4426                           ;periph.c: 89: ADON=1;
  4427  06DA  1283               	bcf	3,5	;RP0=0, select bank0
  4428  06DB  141F               	bsf	31,0
  4429                           
  4430                           ;periph.c: 90: ADIE=1;
  4431  06DC  1683               	bsf	3,5	;RP0=1, select bank1
  4432  06DD  150D               	bsf	13,2
  4433  06DE  0008               	return
  4434  06DF                     __end_of_adc_test_init:	
  4435  06DF                     __ptext900:	
  4436 ;; =============== function _isPermitSampleTime ends ============
  4437                           
  4438                           
  4439 ;; *************** function _adc_start *****************
  4440 ;; Defined at:
  4441 ;;		line 100 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4442 ;; Parameters:    Size  Location     Type
  4443 ;;		None
  4444 ;; Auto vars:     Size  Location     Type
  4445 ;;		None
  4446 ;; Return value:  Size  Location     Type
  4447 ;;		None               void
  4448 ;; Registers used:
  4449 ;;		None
  4450 ;; Tracked objects:
  4451 ;;		On entry : 60/20
  4452 ;;		On exit  : 60/0
  4453 ;;		Unchanged: FFF9F/0
  4454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4455 ;;      Params:         0       0       0       0       0
  4456 ;;      Locals:         0       0       0       0       0
  4457 ;;      Temps:          0       0       0       0       0
  4458 ;;      Totals:         0       0       0       0       0
  4459 ;;Total ram usage:        0 bytes
  4460 ;; Hardware stack levels used:    1
  4461 ;; Hardware stack levels required when called:    2
  4462 ;; This function calls:
  4463 ;;		Nothing
  4464 ;; This function is called by:
  4465 ;;		_main
  4466 ;;		_process_AD_Converter_Value
  4467 ;; This function uses a non-reentrant model
  4468 ;;
  4469  06DF                     _adc_start:	
  4470  06DF                     l4355:	
  4471                           ; Regs used in _adc_start: []
  4472                           
  4473                           
  4474                           ;periph.c: 101: GO=1;
  4475  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  4476  06E0  149F               	bsf	31,1
  4477  06E1  0008               	return
  4478  06E2                     __end_of_adc_start:	
  4479                           
  4480                           	psect	text889
  4481  07C1                     __ptext889:	
  4482 ;; =============== function _Filter ends ============
  4483                           
  4484                           
  4485 ;; *************** function _isFinishedThreeHoursTimer *****************
  4486 ;; Defined at:
  4487 ;;		line 471 in file "D:\develop\190625\AK7030-OTP\common.c"
  4488 ;; Parameters:    Size  Location     Type
  4489 ;;		None
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;		None
  4492 ;; Return value:  Size  Location     Type
  4493 ;;                  1    wreg      unsigned char 
  4494 ;; Registers used:
  4495 ;;		wreg, status,2, status,0
  4496 ;; Tracked objects:
  4497 ;;		On entry : 40/20
  4498 ;;		On exit  : 40/0
  4499 ;;		Unchanged: FFF9F/0
  4500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4501 ;;      Params:         0       0       0       0       0
  4502 ;;      Locals:         0       0       0       0       0
  4503 ;;      Temps:          0       0       0       0       0
  4504 ;;      Totals:         0       0       0       0       0
  4505 ;;Total ram usage:        0 bytes
  4506 ;; Hardware stack levels used:    1
  4507 ;; Hardware stack levels required when called:    2
  4508 ;; This function calls:
  4509 ;;		Nothing
  4510 ;; This function is called by:
  4511 ;;		_main
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514  07C1                     _isFinishedThreeHoursTimer:	
  4515                           
  4516                           ;common.c: 472: if((uiSmallTimer == 0) && bSmallTimerStartFlag)
  4517                           
  4518                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  4519  07C1  1683               	bsf	3,5	;RP0=1, select bank1
  4520  07C2  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  4521  07C3  0422               	iorwf	_uiSmallTimer^(0+128),w
  4522  07C4  1D03               	skipz
  4523  07C5  3400               	retlw	0
  4524  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  4525  07C7  084B               	movf	_bSmallTimerStartFlag,w
  4526  07C8  1903               	btfsc	3,2
  4527  07C9  3400               	retlw	0
  4528  07CA  3001               	movlw	1
  4529                           
  4530                           ;common.c: 473: {
  4531                           ;common.c: 474: bSmallTimerStartFlag = 0;
  4532  07CB  01CB               	clrf	_bSmallTimerStartFlag
  4533                           
  4534                           ;common.c: 475: return 1;
  4535  07CC  0008               	return
  4536  07CD                     __end_of_isFinishedThreeHoursTimer:	
  4537                           ;common.c: 477: else
  4538                           ;common.c: 478: return 0;
  4539                           
  4540                           
  4541                           	psect	text890
  4542  0739                     __ptext890:	
  4543 ;; =============== function _isFinishedThreeHoursTimer ends ============
  4544                           
  4545                           
  4546 ;; *************** function _startThreeHoursTimer *****************
  4547 ;; Defined at:
  4548 ;;		line 401 in file "D:\develop\190625\AK7030-OTP\common.c"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  4551 ;; Auto vars:     Size  Location     Type
  4552 ;;		None
  4553 ;; Return value:  Size  Location     Type
  4554 ;;		None               void
  4555 ;; Registers used:
  4556 ;;		wreg, status,2, status,0
  4557 ;; Tracked objects:
  4558 ;;		On entry : 60/0
  4559 ;;		On exit  : 40/0
  4560 ;;		Unchanged: FFF9F/0
  4561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4562 ;;      Params:         0       2       0       0       0
  4563 ;;      Locals:         0       0       0       0       0
  4564 ;;      Temps:          0       0       0       0       0
  4565 ;;      Totals:         0       2       0       0       0
  4566 ;;Total ram usage:        2 bytes
  4567 ;; Hardware stack levels used:    1
  4568 ;; Hardware stack levels required when called:    2
  4569 ;; This function calls:
  4570 ;;		Nothing
  4571 ;; This function is called by:
  4572 ;;		_main
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575  0739                     _startThreeHoursTimer:	
  4576                           
  4577                           ;common.c: 402: if(( 0 == uiSmallTimer ) && ( 0 == bSmallTimerStartFlag ))
  4578                           
  4579                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  4580  0739  1683               	bsf	3,5	;RP0=1, select bank1
  4581  073A  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  4582  073B  0422               	iorwf	_uiSmallTimer^(0+128),w
  4583  073C  1D03               	skipz
  4584  073D  0008               	return
  4585  073E  1283               	bcf	3,5	;RP0=0, select bank0
  4586  073F  08CB               	movf	_bSmallTimerStartFlag,f
  4587  0740  1D03               	skipz
  4588  0741  0008               	return
  4589                           
  4590                           ;common.c: 403: {
  4591                           ;common.c: 404: uiSmallTimer = uiSetTime;
  4592  0742  0821               	movf	startThreeHoursTimer@uiSetTime+1,w
  4593  0743  1683               	bsf	3,5	;RP0=1, select bank1
  4594  0744  00A3               	movwf	(_uiSmallTimer+1)^(0+128)
  4595  0745  1283               	bcf	3,5	;RP0=0, select bank0
  4596  0746  0820               	movf	startThreeHoursTimer@uiSetTime,w
  4597  0747  1683               	bsf	3,5	;RP0=1, select bank1
  4598  0748  00A2               	movwf	_uiSmallTimer^(0+128)
  4599                           
  4600                           ;common.c: 405: bSmallTimerStartFlag = 1;
  4601  0749  1283               	bcf	3,5	;RP0=0, select bank0
  4602  074A  01CB               	clrf	_bSmallTimerStartFlag
  4603  074B  0ACB               	incf	_bSmallTimerStartFlag,f
  4604  074C  0008               	return
  4605  074D                     __end_of_startThreeHoursTimer:	
  4606                           
  4607                           	psect	text891
  4608  07CD                     __ptext891:	
  4609 ;; =============== function _startThreeHoursTimer ends ============
  4610                           
  4611                           
  4612 ;; *************** function _isFinishedTwentySecondsTimer *****************
  4613 ;; Defined at:
  4614 ;;		line 448 in file "D:\develop\190625\AK7030-OTP\common.c"
  4615 ;; Parameters:    Size  Location     Type
  4616 ;;		None
  4617 ;; Auto vars:     Size  Location     Type
  4618 ;;		None
  4619 ;; Return value:  Size  Location     Type
  4620 ;;                  1    wreg      unsigned char 
  4621 ;; Registers used:
  4622 ;;		wreg, status,2, status,0
  4623 ;; Tracked objects:
  4624 ;;		On entry : 60/0
  4625 ;;		On exit  : 40/0
  4626 ;;		Unchanged: FFF9F/0
  4627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4628 ;;      Params:         0       0       0       0       0
  4629 ;;      Locals:         0       0       0       0       0
  4630 ;;      Temps:          0       0       0       0       0
  4631 ;;      Totals:         0       0       0       0       0
  4632 ;;Total ram usage:        0 bytes
  4633 ;; Hardware stack levels used:    1
  4634 ;; Hardware stack levels required when called:    2
  4635 ;; This function calls:
  4636 ;;		Nothing
  4637 ;; This function is called by:
  4638 ;;		_main
  4639 ;; This function uses a non-reentrant model
  4640 ;;
  4641  07CD                     _isFinishedTwentySecondsTimer:	
  4642                           
  4643                           ;common.c: 449: if(( 0 == uiTwentySecondsTimer ) && bTwentySecStartFlag )
  4644                           
  4645                           ; Regs used in _isFinishedTwentySecondsTimer: [wreg+status,2+status,0]
  4646  07CD  1683               	bsf	3,5	;RP0=1, select bank1
  4647  07CE  0827               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  4648  07CF  0426               	iorwf	_uiTwentySecondsTimer^(0+128),w
  4649  07D0  1D03               	skipz
  4650  07D1  3400               	retlw	0
  4651  07D2  1283               	bcf	3,5	;RP0=0, select bank0
  4652  07D3  084D               	movf	_bTwentySecStartFlag,w
  4653  07D4  1903               	btfsc	3,2
  4654  07D5  3400               	retlw	0
  4655  07D6  3001               	movlw	1
  4656                           
  4657                           ;common.c: 450: {
  4658                           ;common.c: 451: bTwentySecStartFlag = 0;
  4659  07D7  01CD               	clrf	_bTwentySecStartFlag
  4660                           
  4661                           ;common.c: 452: return 1;
  4662  07D8  0008               	return
  4663  07D9                     __end_of_isFinishedTwentySecondsTimer:	
  4664                           ;common.c: 454: else
  4665                           ;common.c: 455: return 0;
  4666                           
  4667                           
  4668                           	psect	text892
  4669  0788                     __ptext892:	
  4670 ;; =============== function _isFinishedTwentySecondsTimer ends ============
  4671                           
  4672                           
  4673 ;; *************** function _startTwentySecondsTimer *****************
  4674 ;; Defined at:
  4675 ;;		line 415 in file "D:\develop\190625\AK7030-OTP\common.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;		None
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;		None
  4680 ;; Return value:  Size  Location     Type
  4681 ;;		None               void
  4682 ;; Registers used:
  4683 ;;		wreg, status,2, status,0
  4684 ;; Tracked objects:
  4685 ;;		On entry : 160/0
  4686 ;;		On exit  : 140/0
  4687 ;;		Unchanged: FFE9F/0
  4688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4689 ;;      Params:         0       0       0       0       0
  4690 ;;      Locals:         0       0       0       0       0
  4691 ;;      Temps:          0       0       0       0       0
  4692 ;;      Totals:         0       0       0       0       0
  4693 ;;Total ram usage:        0 bytes
  4694 ;; Hardware stack levels used:    1
  4695 ;; Hardware stack levels required when called:    2
  4696 ;; This function calls:
  4697 ;;		Nothing
  4698 ;; This function is called by:
  4699 ;;		_main
  4700 ;; This function uses a non-reentrant model
  4701 ;;
  4702  0788                     _startTwentySecondsTimer:	
  4703                           
  4704                           ;common.c: 416: if(( 0 == uiTwentySecondsTimer) && ( 0 == bTwentySecStartFlag))
  4705                           
  4706                           ; Regs used in _startTwentySecondsTimer: [wreg+status,2+status,0]
  4707  0788  1683               	bsf	3,5	;RP0=1, select bank1
  4708  0789  0827               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  4709  078A  0426               	iorwf	_uiTwentySecondsTimer^(0+128),w
  4710  078B  1D03               	skipz
  4711  078C  0008               	return
  4712  078D  1283               	bcf	3,5	;RP0=0, select bank0
  4713  078E  08CD               	movf	_bTwentySecStartFlag,f
  4714  078F  1D03               	skipz
  4715  0790  0008               	return
  4716                           
  4717                           ;common.c: 417: {
  4718                           ;common.c: 418: uiTwentySecondsTimer = 20;
  4719  0791  3014               	movlw	20
  4720  0792  1683               	bsf	3,5	;RP0=1, select bank1
  4721  0793  00A6               	movwf	_uiTwentySecondsTimer^(0+128)
  4722  0794  01A7               	clrf	(_uiTwentySecondsTimer+1)^(0+128)
  4723                           
  4724                           ;common.c: 419: bTwentySecStartFlag = 1;
  4725  0795  1283               	bcf	3,5	;RP0=0, select bank0
  4726  0796  01CD               	clrf	_bTwentySecStartFlag
  4727  0797  0ACD               	incf	_bTwentySecStartFlag,f
  4728  0798  0008               	return
  4729  0799                     __end_of_startTwentySecondsTimer:	
  4730                           
  4731                           	psect	text893
  4732  07D9                     __ptext893:	
  4733 ;; =============== function _startTwentySecondsTimer ends ============
  4734                           
  4735                           
  4736 ;; *************** function _isFinishedTwelveHoursTimer *****************
  4737 ;; Defined at:
  4738 ;;		line 460 in file "D:\develop\190625\AK7030-OTP\common.c"
  4739 ;; Parameters:    Size  Location     Type
  4740 ;;		None
  4741 ;; Auto vars:     Size  Location     Type
  4742 ;;		None
  4743 ;; Return value:  Size  Location     Type
  4744 ;;                  1    wreg      unsigned char 
  4745 ;; Registers used:
  4746 ;;		wreg, status,2, status,0
  4747 ;; Tracked objects:
  4748 ;;		On entry : 40/0
  4749 ;;		On exit  : 40/0
  4750 ;;		Unchanged: FFF9F/0
  4751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4752 ;;      Params:         0       0       0       0       0
  4753 ;;      Locals:         0       0       0       0       0
  4754 ;;      Temps:          0       0       0       0       0
  4755 ;;      Totals:         0       0       0       0       0
  4756 ;;Total ram usage:        0 bytes
  4757 ;; Hardware stack levels used:    1
  4758 ;; Hardware stack levels required when called:    2
  4759 ;; This function calls:
  4760 ;;		Nothing
  4761 ;; This function is called by:
  4762 ;;		_main
  4763 ;; This function uses a non-reentrant model
  4764 ;;
  4765  07D9                     _isFinishedTwelveHoursTimer:	
  4766                           
  4767                           ;common.c: 461: if(( uiBigTimer == 0 ) && bBigTimerStartFlag )
  4768                           
  4769                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  4770  07D9  1683               	bsf	3,5	;RP0=1, select bank1
  4771  07DA  0821               	movf	(_uiBigTimer+1)^(0+128),w
  4772  07DB  0420               	iorwf	_uiBigTimer^(0+128),w
  4773  07DC  1D03               	skipz
  4774  07DD  3400               	retlw	0
  4775  07DE  1283               	bcf	3,5	;RP0=0, select bank0
  4776  07DF  084A               	movf	_bBigTimerStartFlag,w
  4777  07E0  1903               	btfsc	3,2
  4778  07E1  3400               	retlw	0
  4779  07E2  3001               	movlw	1
  4780                           
  4781                           ;common.c: 462: {
  4782                           ;common.c: 463: bBigTimerStartFlag = 0;
  4783  07E3  01CA               	clrf	_bBigTimerStartFlag
  4784                           
  4785                           ;common.c: 464: return 1;
  4786  07E4  0008               	return
  4787  07E5                     __end_of_isFinishedTwelveHoursTimer:	
  4788                           ;common.c: 466: else
  4789                           ;common.c: 467: return 0;
  4790                           
  4791                           
  4792                           	psect	text894
  4793  074D                     __ptext894:	
  4794 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  4795                           
  4796                           
  4797 ;; *************** function _startTwelveHourTimer *****************
  4798 ;; Defined at:
  4799 ;;		line 360 in file "D:\develop\190625\AK7030-OTP\common.c"
  4800 ;; Parameters:    Size  Location     Type
  4801 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  4802 ;; Auto vars:     Size  Location     Type
  4803 ;;		None
  4804 ;; Return value:  Size  Location     Type
  4805 ;;		None               void
  4806 ;; Registers used:
  4807 ;;		wreg, status,2, status,0
  4808 ;; Tracked objects:
  4809 ;;		On entry : 60/0
  4810 ;;		On exit  : 40/0
  4811 ;;		Unchanged: FFF9F/0
  4812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4813 ;;      Params:         0       2       0       0       0
  4814 ;;      Locals:         0       0       0       0       0
  4815 ;;      Temps:          0       0       0       0       0
  4816 ;;      Totals:         0       2       0       0       0
  4817 ;;Total ram usage:        2 bytes
  4818 ;; Hardware stack levels used:    1
  4819 ;; Hardware stack levels required when called:    2
  4820 ;; This function calls:
  4821 ;;		Nothing
  4822 ;; This function is called by:
  4823 ;;		_main
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826  074D                     _startTwelveHourTimer:	
  4827                           
  4828                           ;common.c: 361: if((0 == uiBigTimer) && ( 0 == bBigTimerStartFlag))
  4829                           
  4830                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  4831  074D  1683               	bsf	3,5	;RP0=1, select bank1
  4832  074E  0821               	movf	(_uiBigTimer+1)^(0+128),w
  4833  074F  0420               	iorwf	_uiBigTimer^(0+128),w
  4834  0750  1D03               	skipz
  4835  0751  0008               	return
  4836  0752  1283               	bcf	3,5	;RP0=0, select bank0
  4837  0753  08CA               	movf	_bBigTimerStartFlag,f
  4838  0754  1D03               	skipz
  4839  0755  0008               	return
  4840                           
  4841                           ;common.c: 362: {
  4842                           ;common.c: 363: uiBigTimer = uiSetTime;
  4843  0756  0821               	movf	startTwelveHourTimer@uiSetTime+1,w
  4844  0757  1683               	bsf	3,5	;RP0=1, select bank1
  4845  0758  00A1               	movwf	(_uiBigTimer+1)^(0+128)
  4846  0759  1283               	bcf	3,5	;RP0=0, select bank0
  4847  075A  0820               	movf	startTwelveHourTimer@uiSetTime,w
  4848  075B  1683               	bsf	3,5	;RP0=1, select bank1
  4849  075C  00A0               	movwf	_uiBigTimer^(0+128)
  4850                           
  4851                           ;common.c: 364: bBigTimerStartFlag = 1;
  4852  075D  1283               	bcf	3,5	;RP0=0, select bank0
  4853  075E  01CA               	clrf	_bBigTimerStartFlag
  4854  075F  0ACA               	incf	_bBigTimerStartFlag,f
  4855  0760  0008               	return
  4856  0761                     __end_of_startTwelveHourTimer:	
  4857                           
  4858                           	psect	text895
  4859  07E5                     __ptext895:	
  4860 ;; =============== function _startTwelveHourTimer ends ============
  4861                           
  4862                           
  4863 ;; *************** function _isFinishedTwentyMinTimer *****************
  4864 ;; Defined at:
  4865 ;;		line 436 in file "D:\develop\190625\AK7030-OTP\common.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;		None
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;		None
  4870 ;; Return value:  Size  Location     Type
  4871 ;;                  1    wreg      unsigned char 
  4872 ;; Registers used:
  4873 ;;		wreg, status,2, status,0
  4874 ;; Tracked objects:
  4875 ;;		On entry : 160/0
  4876 ;;		On exit  : 140/0
  4877 ;;		Unchanged: FFE9F/0
  4878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4879 ;;      Params:         0       0       0       0       0
  4880 ;;      Locals:         0       0       0       0       0
  4881 ;;      Temps:          0       0       0       0       0
  4882 ;;      Totals:         0       0       0       0       0
  4883 ;;Total ram usage:        0 bytes
  4884 ;; Hardware stack levels used:    1
  4885 ;; Hardware stack levels required when called:    2
  4886 ;; This function calls:
  4887 ;;		Nothing
  4888 ;; This function is called by:
  4889 ;;		_main
  4890 ;; This function uses a non-reentrant model
  4891 ;;
  4892  07E5                     _isFinishedTwentyMinTimer:	
  4893                           
  4894                           ;common.c: 437: if(( 0 == uiTwentyMinTimer ) && bTwentyMinStartFlag )
  4895                           
  4896                           ; Regs used in _isFinishedTwentyMinTimer: [wreg+status,2+status,0]
  4897  07E5  1683               	bsf	3,5	;RP0=1, select bank1
  4898  07E6  0825               	movf	(_uiTwentyMinTimer+1)^(0+128),w
  4899  07E7  0424               	iorwf	_uiTwentyMinTimer^(0+128),w
  4900  07E8  1D03               	skipz
  4901  07E9  3400               	retlw	0
  4902  07EA  1283               	bcf	3,5	;RP0=0, select bank0
  4903  07EB  084C               	movf	_bTwentyMinStartFlag,w
  4904  07EC  1903               	btfsc	3,2
  4905  07ED  3400               	retlw	0
  4906  07EE  3001               	movlw	1
  4907                           
  4908                           ;common.c: 438: {
  4909                           ;common.c: 439: bTwentyMinStartFlag = 0;
  4910  07EF  01CC               	clrf	_bTwentyMinStartFlag
  4911                           
  4912                           ;common.c: 440: return 1;
  4913  07F0  0008               	return
  4914  07F1                     __end_of_isFinishedTwentyMinTimer:	
  4915                           ;common.c: 442: else
  4916                           ;common.c: 443: return 0;
  4917                           
  4918                           
  4919                           	psect	text896
  4920  0F9F                     __ptext896:	
  4921 ;; =============== function _isFinishedTwentyMinTimer ends ============
  4922                           
  4923                           
  4924 ;; *************** function _clearTwentyMinTimer *****************
  4925 ;; Defined at:
  4926 ;;		line 394 in file "D:\develop\190625\AK7030-OTP\common.c"
  4927 ;; Parameters:    Size  Location     Type
  4928 ;;		None
  4929 ;; Auto vars:     Size  Location     Type
  4930 ;;		None
  4931 ;; Return value:  Size  Location     Type
  4932 ;;		None               void
  4933 ;; Registers used:
  4934 ;;		status,2
  4935 ;; Tracked objects:
  4936 ;;		On entry : 160/0
  4937 ;;		On exit  : 160/0
  4938 ;;		Unchanged: FFE9F/0
  4939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4940 ;;      Params:         0       0       0       0       0
  4941 ;;      Locals:         0       0       0       0       0
  4942 ;;      Temps:          0       0       0       0       0
  4943 ;;      Totals:         0       0       0       0       0
  4944 ;;Total ram usage:        0 bytes
  4945 ;; Hardware stack levels used:    1
  4946 ;; Hardware stack levels required when called:    2
  4947 ;; This function calls:
  4948 ;;		Nothing
  4949 ;; This function is called by:
  4950 ;;		_main
  4951 ;; This function uses a non-reentrant model
  4952 ;;
  4953  0F9F                     _clearTwentyMinTimer:	
  4954                           
  4955                           ;common.c: 395: uiTwentyMinTimer = 0;
  4956                           
  4957                           ; Regs used in _clearTwentyMinTimer: [status,2]
  4958  0F9F  1683               	bsf	3,5	;RP0=1, select bank1
  4959  0FA0  01A4               	clrf	_uiTwentyMinTimer^(0+128)
  4960  0FA1  01A5               	clrf	(_uiTwentyMinTimer+1)^(0+128)
  4961                           
  4962                           ;common.c: 396: bTwentyMinStartFlag = 0;
  4963  0FA2  1283               	bcf	3,5	;RP0=0, select bank0
  4964  0FA3  01CC               	clrf	_bTwentyMinStartFlag
  4965  0FA4  0008               	return
  4966  0FA5                     __end_of_clearTwentyMinTimer:	
  4967                           
  4968                           	psect	text897
  4969  0761                     __ptext897:	
  4970 ;; =============== function _clearTwentyMinTimer ends ============
  4971                           
  4972                           
  4973 ;; *************** function _startTwentyMinTimer *****************
  4974 ;; Defined at:
  4975 ;;		line 426 in file "D:\develop\190625\AK7030-OTP\common.c"
  4976 ;; Parameters:    Size  Location     Type
  4977 ;;  uiSetValue      2    0[BANK0 ] unsigned int 
  4978 ;; Auto vars:     Size  Location     Type
  4979 ;;		None
  4980 ;; Return value:  Size  Location     Type
  4981 ;;		None               void
  4982 ;; Registers used:
  4983 ;;		wreg, status,2, status,0
  4984 ;; Tracked objects:
  4985 ;;		On entry : 160/0
  4986 ;;		On exit  : 140/0
  4987 ;;		Unchanged: FFE9F/0
  4988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4989 ;;      Params:         0       2       0       0       0
  4990 ;;      Locals:         0       0       0       0       0
  4991 ;;      Temps:          0       0       0       0       0
  4992 ;;      Totals:         0       2       0       0       0
  4993 ;;Total ram usage:        2 bytes
  4994 ;; Hardware stack levels used:    1
  4995 ;; Hardware stack levels required when called:    2
  4996 ;; This function calls:
  4997 ;;		Nothing
  4998 ;; This function is called by:
  4999 ;;		_main
  5000 ;; This function uses a non-reentrant model
  5001 ;;
  5002  0761                     _startTwentyMinTimer:	
  5003                           
  5004                           ;common.c: 427: if(( 0 == uiTwentyMinTimer) && ( 0 == bTwentyMinStartFlag))
  5005                           
  5006                           ; Regs used in _startTwentyMinTimer: [wreg+status,2+status,0]
  5007  0761  1683               	bsf	3,5	;RP0=1, select bank1
  5008  0762  0825               	movf	(_uiTwentyMinTimer+1)^(0+128),w
  5009  0763  0424               	iorwf	_uiTwentyMinTimer^(0+128),w
  5010  0764  1D03               	skipz
  5011  0765  0008               	return
  5012  0766  1283               	bcf	3,5	;RP0=0, select bank0
  5013  0767  08CC               	movf	_bTwentyMinStartFlag,f
  5014  0768  1D03               	skipz
  5015  0769  0008               	return
  5016                           
  5017                           ;common.c: 428: {
  5018                           ;common.c: 429: uiTwentyMinTimer = uiSetValue;
  5019  076A  0821               	movf	startTwentyMinTimer@uiSetValue+1,w
  5020  076B  1683               	bsf	3,5	;RP0=1, select bank1
  5021  076C  00A5               	movwf	(_uiTwentyMinTimer+1)^(0+128)
  5022  076D  1283               	bcf	3,5	;RP0=0, select bank0
  5023  076E  0820               	movf	startTwentyMinTimer@uiSetValue,w
  5024  076F  1683               	bsf	3,5	;RP0=1, select bank1
  5025  0770  00A4               	movwf	_uiTwentyMinTimer^(0+128)
  5026                           
  5027                           ;common.c: 430: bTwentyMinStartFlag = 1;
  5028  0771  1283               	bcf	3,5	;RP0=0, select bank0
  5029  0772  01CC               	clrf	_bTwentyMinStartFlag
  5030  0773  0ACC               	incf	_bTwentyMinStartFlag,f
  5031  0774  0008               	return
  5032  0775                     __end_of_startTwentyMinTimer:	
  5033                           
  5034                           	psect	text898
  5035  0002                     __ptext898:	
  5036 ;; =============== function _startTwentyMinTimer ends ============
  5037                           
  5038                           
  5039 ;; *************** function _clrSampeTime *****************
  5040 ;; Defined at:
  5041 ;;		line 492 in file "D:\develop\190625\AK7030-OTP\common.c"
  5042 ;; Parameters:    Size  Location     Type
  5043 ;;		None
  5044 ;; Auto vars:     Size  Location     Type
  5045 ;;		None
  5046 ;; Return value:  Size  Location     Type
  5047 ;;		None               void
  5048 ;; Registers used:
  5049 ;;		status,2
  5050 ;; Tracked objects:
  5051 ;;		On entry : 60/20
  5052 ;;		On exit  : 60/20
  5053 ;;		Unchanged: FFF9F/0
  5054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5055 ;;      Params:         0       0       0       0       0
  5056 ;;      Locals:         0       0       0       0       0
  5057 ;;      Temps:          0       0       0       0       0
  5058 ;;      Totals:         0       0       0       0       0
  5059 ;;Total ram usage:        0 bytes
  5060 ;; Hardware stack levels used:    1
  5061 ;; Hardware stack levels required when called:    2
  5062 ;; This function calls:
  5063 ;;		Nothing
  5064 ;; This function is called by:
  5065 ;;		_main
  5066 ;; This function uses a non-reentrant model
  5067 ;;
  5068  0002                     _clrSampeTime:	
  5069                           
  5070                           ;common.c: 493: timer.timer10msStopWatch = 0;
  5071                           
  5072                           ; Regs used in _clrSampeTime: [status,2]
  5073  0002  01AE               	clrf	_timer^(0+128)
  5074  0003  0008               	return
  5075  0004                     __end_of_clrSampeTime:	
  5076                           
  5077                           	psect	text899
  5078  0F99                     __ptext899:	
  5079 ;; =============== function _clrSampeTime ends ============
  5080                           
  5081                           
  5082 ;; *************** function _isPermitSampleTime *****************
  5083 ;; Defined at:
  5084 ;;		line 482 in file "D:\develop\190625\AK7030-OTP\common.c"
  5085 ;; Parameters:    Size  Location     Type
  5086 ;;		None
  5087 ;; Auto vars:     Size  Location     Type
  5088 ;;		None
  5089 ;; Return value:  Size  Location     Type
  5090 ;;                  1    wreg      unsigned char 
  5091 ;; Registers used:
  5092 ;;		wreg
  5093 ;; Tracked objects:
  5094 ;;		On entry : 40/0
  5095 ;;		On exit  : 60/20
  5096 ;;		Unchanged: FFF9F/0
  5097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5098 ;;      Params:         0       0       0       0       0
  5099 ;;      Locals:         0       0       0       0       0
  5100 ;;      Temps:          0       0       0       0       0
  5101 ;;      Totals:         0       0       0       0       0
  5102 ;;Total ram usage:        0 bytes
  5103 ;; Hardware stack levels used:    1
  5104 ;; Hardware stack levels required when called:    2
  5105 ;; This function calls:
  5106 ;;		Nothing
  5107 ;; This function is called by:
  5108 ;;		_main
  5109 ;; This function uses a non-reentrant model
  5110 ;;
  5111  0F99                     _isPermitSampleTime:	
  5112                           
  5113                           ;common.c: 483: if(timer.timer10msStopWatch >= 10)
  5114                           
  5115                           ; Regs used in _isPermitSampleTime: [wreg]
  5116  0F99  300A               	movlw	10
  5117  0F9A  1683               	bsf	3,5	;RP0=1, select bank1
  5118  0F9B  022E               	subwf	_timer^(0+128),w
  5119  0F9C  1803               	btfsc	3,0
  5120                           
  5121                           ;common.c: 484: {
  5122                           ;common.c: 485: return 1;
  5123  0F9D  3401               	retlw	1
  5124                           
  5125                           ;common.c: 487: else
  5126                           ;common.c: 488: return 0;
  5127  0F9E  3400               	retlw	0
  5128  0F9F                     __end_of_isPermitSampleTime:	
  5129                           
  5130                           	psect	text901
  5131  0FA5                     __ptext901:	
  5132 ;; =============== function _adc_start ends ============
  5133                           
  5134                           
  5135 ;; *************** function _op2_init *****************
  5136 ;; Defined at:
  5137 ;;		line 45 in file "D:\develop\190625\AK7030-OTP\periph.c"
  5138 ;; Parameters:    Size  Location     Type
  5139 ;;		None
  5140 ;; Auto vars:     Size  Location     Type
  5141 ;;		None
  5142 ;; Return value:  Size  Location     Type
  5143 ;;		None               void
  5144 ;; Registers used:
  5145 ;;		wreg
  5146 ;; Tracked objects:
  5147 ;;		On entry : 17F/20
  5148 ;;		On exit  : 17F/20
  5149 ;;		Unchanged: FFE80/0
  5150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5151 ;;      Params:         0       0       0       0       0
  5152 ;;      Locals:         0       0       0       0       0
  5153 ;;      Temps:          0       0       0       0       0
  5154 ;;      Totals:         0       0       0       0       0
  5155 ;;Total ram usage:        0 bytes
  5156 ;; Hardware stack levels used:    1
  5157 ;; Hardware stack levels required when called:    2
  5158 ;; This function calls:
  5159 ;;		Nothing
  5160 ;; This function is called by:
  5161 ;;		_main
  5162 ;; This function uses a non-reentrant model
  5163 ;;
  5164  0FA5                     _op2_init:	
  5165                           
  5166                           ;periph.c: 52: OP2CON1=0x14;
  5167                           
  5168                           ; Regs used in _op2_init: [wreg]
  5169  0FA5  3014               	movlw	20
  5170  0FA6  009C               	movwf	28	;volatile
  5171                           
  5172                           ;periph.c: 54: OP2CON2=0x10;
  5173  0FA7  3010               	movlw	16
  5174  0FA8  009D               	movwf	29	;volatile
  5175                           
  5176                           ;periph.c: 55: OP2CON0=0x80;
  5177  0FA9  3080               	movlw	128
  5178  0FAA  009B               	movwf	27	;volatile
  5179  0FAB  0008               	return
  5180  0FAC                     __end_of_op2_init:	
  5181                           
  5182                           	psect	text902
  5183  07F1                     __ptext902:	
  5184 ;; =============== function _op2_init ends ============
  5185                           
  5186                           
  5187 ;; *************** function _op1_init *****************
  5188 ;; Defined at:
  5189 ;;		line 26 in file "D:\develop\190625\AK7030-OTP\periph.c"
  5190 ;; Parameters:    Size  Location     Type
  5191 ;;		None
  5192 ;; Auto vars:     Size  Location     Type
  5193 ;;		None
  5194 ;; Return value:  Size  Location     Type
  5195 ;;		None               void
  5196 ;; Registers used:
  5197 ;;		wreg
  5198 ;; Tracked objects:
  5199 ;;		On entry : 17F/20
  5200 ;;		On exit  : 17F/20
  5201 ;;		Unchanged: FFE80/0
  5202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5203 ;;      Params:         0       0       0       0       0
  5204 ;;      Locals:         0       0       0       0       0
  5205 ;;      Temps:          0       0       0       0       0
  5206 ;;      Totals:         0       0       0       0       0
  5207 ;;Total ram usage:        0 bytes
  5208 ;; Hardware stack levels used:    1
  5209 ;; Hardware stack levels required when called:    2
  5210 ;; This function calls:
  5211 ;;		Nothing
  5212 ;; This function is called by:
  5213 ;;		_main
  5214 ;; This function uses a non-reentrant model
  5215 ;;
  5216  07F1                     _op1_init:	
  5217                           
  5218                           ;periph.c: 33: OP1CON1=0x02;
  5219                           
  5220                           ; Regs used in _op1_init: [wreg]
  5221  07F1  3002               	movlw	2
  5222  07F2  1283               	bcf	3,5	;RP0=0, select bank0
  5223  07F3  009C               	movwf	28	;volatile
  5224                           
  5225                           ;periph.c: 34: OP1CON2=0xA0;
  5226  07F4  30A0               	movlw	160
  5227  07F5  009D               	movwf	29	;volatile
  5228                           
  5229                           ;periph.c: 35: OP1CON0=0x80;
  5230  07F6  3080               	movlw	128
  5231  07F7  009B               	movwf	27	;volatile
  5232                           
  5233                           ;periph.c: 38: TRISB3=1;
  5234  07F8  1683               	bsf	3,5	;RP0=1, select bank1
  5235  07F9  1586               	bsf	6,3
  5236                           
  5237                           ;periph.c: 40: TRISB5=0;
  5238  07FA  1286               	bcf	6,5
  5239  07FB  0008               	return
  5240  07FC                     __end_of_op1_init:	
  5241                           
  5242                           	psect	text903
  5243  0F94                     __ptext903:	
  5244 ;; =============== function _op1_init ends ============
  5245                           
  5246                           
  5247 ;; *************** function _dac_init *****************
  5248 ;; Defined at:
  5249 ;;		line 14 in file "D:\develop\190625\AK7030-OTP\periph.c"
  5250 ;; Parameters:    Size  Location     Type
  5251 ;;		None
  5252 ;; Auto vars:     Size  Location     Type
  5253 ;;		None
  5254 ;; Return value:  Size  Location     Type
  5255 ;;		None               void
  5256 ;; Registers used:
  5257 ;;		wreg
  5258 ;; Tracked objects:
  5259 ;;		On entry : 17F/20
  5260 ;;		On exit  : 17F/20
  5261 ;;		Unchanged: FFE80/0
  5262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5263 ;;      Params:         0       0       0       0       0
  5264 ;;      Locals:         0       0       0       0       0
  5265 ;;      Temps:          0       0       0       0       0
  5266 ;;      Totals:         0       0       0       0       0
  5267 ;;Total ram usage:        0 bytes
  5268 ;; Hardware stack levels used:    1
  5269 ;; Hardware stack levels required when called:    2
  5270 ;; This function calls:
  5271 ;;		Nothing
  5272 ;; This function is called by:
  5273 ;;		_main
  5274 ;; This function uses a non-reentrant model
  5275 ;;
  5276  0F94                     _dac_init:	
  5277                           
  5278                           ;periph.c: 15: DACCON|=1;
  5279                           
  5280                           ; Regs used in _dac_init: [wreg]
  5281  0F94  1407               	bsf	7,0	;volatile
  5282                           
  5283                           ;periph.c: 17: DACR0=0x0F;
  5284  0F95  300F               	movlw	15
  5285  0F96  0088               	movwf	8	;volatile
  5286                           
  5287                           ;periph.c: 18: DACCON|=(1)<<2;
  5288  0F97  1507               	bsf	7,2	;volatile
  5289  0F98  0008               	return
  5290  0F99                     __end_of_dac_init:	
  5291                           
  5292                           	psect	text905
  5293  07FC                     __ptext905:	
  5294 ;; =============== function _adc_test_init ends ============
  5295                           
  5296                           
  5297 ;; *************** function _timer1_interrupt_config *****************
  5298 ;; Defined at:
  5299 ;;		line 198 in file "D:\develop\190625\AK7030-OTP\common.c"
  5300 ;; Parameters:    Size  Location     Type
  5301 ;;		None
  5302 ;; Auto vars:     Size  Location     Type
  5303 ;;		None
  5304 ;; Return value:  Size  Location     Type
  5305 ;;		None               void
  5306 ;; Registers used:
  5307 ;;		None
  5308 ;; Tracked objects:
  5309 ;;		On entry : 17F/20
  5310 ;;		On exit  : 17F/20
  5311 ;;		Unchanged: FFE80/0
  5312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5313 ;;      Params:         0       0       0       0       0
  5314 ;;      Locals:         0       0       0       0       0
  5315 ;;      Temps:          0       0       0       0       0
  5316 ;;      Totals:         0       0       0       0       0
  5317 ;;Total ram usage:        0 bytes
  5318 ;; Hardware stack levels used:    1
  5319 ;; Hardware stack levels required when called:    2
  5320 ;; This function calls:
  5321 ;;		Nothing
  5322 ;; This function is called by:
  5323 ;;		_main
  5324 ;; This function uses a non-reentrant model
  5325 ;;
  5326  07FC                     _timer1_interrupt_config:	
  5327                           
  5328                           ;common.c: 199: GIE = 1;
  5329                           
  5330                           ; Regs used in _timer1_interrupt_config: []
  5331  07FC  178B               	bsf	11,7
  5332                           
  5333                           ;common.c: 200: PEIE = 1;
  5334  07FD  170B               	bsf	11,6
  5335  07FE  0008               	return
  5336  07FF                     __end_of_timer1_interrupt_config:	
  5337                           
  5338                           	psect	text906
  5339  0FF6                     __ptext906:	
  5340 ;; =============== function _timer1_interrupt_config ends ============
  5341                           
  5342                           
  5343 ;; *************** function _timer1_config *****************
  5344 ;; Defined at:
  5345 ;;		line 186 in file "D:\develop\190625\AK7030-OTP\common.c"
  5346 ;; Parameters:    Size  Location     Type
  5347 ;;		None
  5348 ;; Auto vars:     Size  Location     Type
  5349 ;;		None
  5350 ;; Return value:  Size  Location     Type
  5351 ;;		None               void
  5352 ;; Registers used:
  5353 ;;		wreg
  5354 ;; Tracked objects:
  5355 ;;		On entry : 17F/40
  5356 ;;		On exit  : 17F/20
  5357 ;;		Unchanged: FFE80/0
  5358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5359 ;;      Params:         0       0       0       0       0
  5360 ;;      Locals:         0       0       0       0       0
  5361 ;;      Temps:          0       0       0       0       0
  5362 ;;      Totals:         0       0       0       0       0
  5363 ;;Total ram usage:        0 bytes
  5364 ;; Hardware stack levels used:    1
  5365 ;; Hardware stack levels required when called:    2
  5366 ;; This function calls:
  5367 ;;		Nothing
  5368 ;; This function is called by:
  5369 ;;		_main
  5370 ;; This function uses a non-reentrant model
  5371 ;;
  5372  0FF6                     _timer1_config:	
  5373                           
  5374                           ;common.c: 188: TMR1H=0xCF;
  5375                           
  5376                           ; Regs used in _timer1_config: [wreg]
  5377  0FF6  30CF               	movlw	207
  5378  0FF7  1303               	bcf	3,6	;RP1=0, select bank0
  5379  0FF8  008F               	movwf	15	;volatile
  5380                           
  5381                           ;common.c: 189: TMR1L=0x2C;
  5382  0FF9  302C               	movlw	44
  5383  0FFA  008E               	movwf	14	;volatile
  5384                           
  5385                           ;common.c: 190: T1CON=0xE1;
  5386  0FFB  30E1               	movlw	225
  5387  0FFC  0090               	movwf	16	;volatile
  5388                           
  5389                           ;common.c: 191: TMR1IE=1;
  5390  0FFD  1683               	bsf	3,5	;RP0=1, select bank1
  5391  0FFE  140C               	bsf	12,0
  5392  0FFF  0008               	return
  5393  1000                     __end_of_timer1_config:	
  5394                           
  5395                           	psect	text907
  5396  0FD4                     __ptext907:	
  5397 ;; =============== function _timer1_config ends ============
  5398                           
  5399                           
  5400 ;; *************** function _clock_config *****************
  5401 ;; Defined at:
  5402 ;;		line 178 in file "D:\develop\190625\AK7030-OTP\common.c"
  5403 ;; Parameters:    Size  Location     Type
  5404 ;;		None
  5405 ;; Auto vars:     Size  Location     Type
  5406 ;;		None
  5407 ;; Return value:  Size  Location     Type
  5408 ;;		None               void
  5409 ;; Registers used:
  5410 ;;		wreg, status,2
  5411 ;; Tracked objects:
  5412 ;;		On entry : 17F/20
  5413 ;;		On exit  : 17F/40
  5414 ;;		Unchanged: FFE80/0
  5415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5416 ;;      Params:         0       0       0       0       0
  5417 ;;      Locals:         0       0       0       0       0
  5418 ;;      Temps:          0       0       0       0       0
  5419 ;;      Totals:         0       0       0       0       0
  5420 ;;Total ram usage:        0 bytes
  5421 ;; Hardware stack levels used:    1
  5422 ;; Hardware stack levels required when called:    2
  5423 ;; This function calls:
  5424 ;;		Nothing
  5425 ;; This function is called by:
  5426 ;;		_main
  5427 ;; This function uses a non-reentrant model
  5428 ;;
  5429  0FD4                     _clock_config:	
  5430                           
  5431                           ;common.c: 180: CLKPR = 0x80;
  5432                           
  5433                           ; Regs used in _clock_config: [wreg+status,2]
  5434  0FD4  3080               	movlw	128
  5435  0FD5  1283               	bcf	3,5	;RP0=0, select bank2
  5436  0FD6  1703               	bsf	3,6	;RP1=1, select bank2
  5437  0FD7  0088               	movwf	8	;volatile
  5438                           
  5439                           ;common.c: 181: CLKPR = 0x00;
  5440  0FD8  0188               	clrf	8	;volatile
  5441  0FD9                     l1780:	
  5442                           ;common.c: 182: while(CLKPCE);
  5443                           
  5444  0FD9  1F88               	btfss	8,7
  5445  0FDA  0008               	return
  5446  0FDB  2FD9               	goto	l1780
  5447  0FDC                     __end_of_clock_config:	
  5448                           
  5449                           	psect	text908
  5450  0FED                     __ptext908:	
  5451 ;; =============== function _clock_config ends ============
  5452                           
  5453                           
  5454 ;; *************** function _setPA6 *****************
  5455 ;; Defined at:
  5456 ;;		line 281 in file "D:\develop\190625\AK7030-OTP\main.c"
  5457 ;; Parameters:    Size  Location     Type
  5458 ;;  bValue          1    wreg     unsigned char 
  5459 ;; Auto vars:     Size  Location     Type
  5460 ;;  bValue          1    0[BANK0 ] unsigned char 
  5461 ;; Return value:  Size  Location     Type
  5462 ;;		None               void
  5463 ;; Registers used:
  5464 ;;		wreg
  5465 ;; Tracked objects:
  5466 ;;		On entry : 40/0
  5467 ;;		On exit  : 60/0
  5468 ;;		Unchanged: FFF9F/0
  5469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5470 ;;      Params:         0       0       0       0       0
  5471 ;;      Locals:         0       1       0       0       0
  5472 ;;      Temps:          0       0       0       0       0
  5473 ;;      Totals:         0       1       0       0       0
  5474 ;;Total ram usage:        1 bytes
  5475 ;; Hardware stack levels used:    1
  5476 ;; Hardware stack levels required when called:    2
  5477 ;; This function calls:
  5478 ;;		Nothing
  5479 ;; This function is called by:
  5480 ;;		_main
  5481 ;; This function uses a non-reentrant model
  5482 ;;
  5483  0FED                     _setPA6:	
  5484                           
  5485                           ; Regs used in _setPA6: [wreg]
  5486                           ;setPA6@bValue stored from wreg
  5487  0FED  1283               	bcf	3,5	;RP0=0, select bank0
  5488  0FEE  00A0               	movwf	setPA6@bValue
  5489                           
  5490                           ;main.c: 282: if( bValue )
  5491  0FEF  0820               	movf	setPA6@bValue,w
  5492  0FF0  1903               	btfsc	3,2
  5493  0FF1  2FF4               	goto	l729
  5494                           
  5495                           ;main.c: 284: PA6 = 1;
  5496  0FF2  1705               	bsf	5,6
  5497  0FF3  0008               	return
  5498  0FF4                     l729:	
  5499                           
  5500                           ;main.c: 288: else
  5501                           ;main.c: 290: PA6= 0;
  5502  0FF4  1305               	bcf	5,6
  5503  0FF5  0008               	return
  5504  0FF6                     __end_of_setPA6:	
  5505                           
  5506                           	psect	text909
  5507  0FCC                     __ptext909:	
  5508 ;; =============== function _setPA6 ends ============
  5509                           
  5510                           
  5511 ;; *************** function _setPA3 *****************
  5512 ;; Defined at:
  5513 ;;		line 235 in file "D:\develop\190625\AK7030-OTP\main.c"
  5514 ;; Parameters:    Size  Location     Type
  5515 ;;  bValue          1    wreg     unsigned char 
  5516 ;; Auto vars:     Size  Location     Type
  5517 ;;  bValue          1    0[BANK0 ] unsigned char 
  5518 ;; Return value:  Size  Location     Type
  5519 ;;		None               void
  5520 ;; Registers used:
  5521 ;;		wreg
  5522 ;; Tracked objects:
  5523 ;;		On entry : 60/0
  5524 ;;		On exit  : 60/0
  5525 ;;		Unchanged: FFF9F/0
  5526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5527 ;;      Params:         0       0       0       0       0
  5528 ;;      Locals:         0       1       0       0       0
  5529 ;;      Temps:          0       0       0       0       0
  5530 ;;      Totals:         0       1       0       0       0
  5531 ;;Total ram usage:        1 bytes
  5532 ;; Hardware stack levels used:    1
  5533 ;; Hardware stack levels required when called:    2
  5534 ;; This function calls:
  5535 ;;		Nothing
  5536 ;; This function is called by:
  5537 ;;		_main
  5538 ;; This function uses a non-reentrant model
  5539 ;;
  5540  0FCC                     _setPA3:	
  5541                           
  5542                           ; Regs used in _setPA3: [wreg]
  5543                           ;setPA3@bValue stored from wreg
  5544  0FCC  00A0               	movwf	setPA3@bValue
  5545                           
  5546                           ;main.c: 236: if( bValue )
  5547  0FCD  0820               	movf	setPA3@bValue,w
  5548  0FCE  1903               	btfsc	3,2
  5549  0FCF  2FD2               	goto	l719
  5550                           
  5551                           ;main.c: 238: PA3 = 1;
  5552  0FD0  1585               	bsf	5,3
  5553  0FD1  0008               	return
  5554  0FD2                     l719:	
  5555                           
  5556                           ;main.c: 242: else
  5557                           ;main.c: 244: PA3 = 0;
  5558  0FD2  1185               	bcf	5,3
  5559  0FD3  0008               	return
  5560  0FD4                     __end_of_setPA3:	
  5561                           
  5562                           	psect	text910
  5563  0FC4                     __ptext910:	
  5564 ;; =============== function _setPA3 ends ============
  5565                           
  5566                           
  5567 ;; *************** function _setPA2 *****************
  5568 ;; Defined at:
  5569 ;;		line 218 in file "D:\develop\190625\AK7030-OTP\main.c"
  5570 ;; Parameters:    Size  Location     Type
  5571 ;;  bValue          1    wreg     unsigned char 
  5572 ;; Auto vars:     Size  Location     Type
  5573 ;;  bValue          1    0[BANK0 ] unsigned char 
  5574 ;; Return value:  Size  Location     Type
  5575 ;;		None               void
  5576 ;; Registers used:
  5577 ;;		wreg
  5578 ;; Tracked objects:
  5579 ;;		On entry : 60/0
  5580 ;;		On exit  : 60/0
  5581 ;;		Unchanged: FFF9F/0
  5582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5583 ;;      Params:         0       0       0       0       0
  5584 ;;      Locals:         0       1       0       0       0
  5585 ;;      Temps:          0       0       0       0       0
  5586 ;;      Totals:         0       1       0       0       0
  5587 ;;Total ram usage:        1 bytes
  5588 ;; Hardware stack levels used:    1
  5589 ;; Hardware stack levels required when called:    2
  5590 ;; This function calls:
  5591 ;;		Nothing
  5592 ;; This function is called by:
  5593 ;;		_main
  5594 ;; This function uses a non-reentrant model
  5595 ;;
  5596  0FC4                     _setPA2:	
  5597                           
  5598                           ; Regs used in _setPA2: [wreg]
  5599                           ;setPA2@bValue stored from wreg
  5600  0FC4  00A0               	movwf	setPA2@bValue
  5601                           
  5602                           ;main.c: 219: if( bValue )
  5603  0FC5  0820               	movf	setPA2@bValue,w
  5604  0FC6  1903               	btfsc	3,2
  5605  0FC7  2FCA               	goto	l714
  5606                           
  5607                           ;main.c: 221: PA2 = 1;
  5608  0FC8  1505               	bsf	5,2
  5609  0FC9  0008               	return
  5610  0FCA                     l714:	
  5611                           
  5612                           ;main.c: 225: else
  5613                           ;main.c: 227: PA2 = 0;
  5614  0FCA  1105               	bcf	5,2
  5615  0FCB  0008               	return
  5616  0FCC                     __end_of_setPA2:	
  5617                           
  5618                           	psect	text911
  5619  0FBC                     __ptext911:	
  5620 ;; =============== function _setPA2 ends ============
  5621                           
  5622                           
  5623 ;; *************** function _setPA1 *****************
  5624 ;; Defined at:
  5625 ;;		line 200 in file "D:\develop\190625\AK7030-OTP\main.c"
  5626 ;; Parameters:    Size  Location     Type
  5627 ;;  bValue          1    wreg     unsigned char 
  5628 ;; Auto vars:     Size  Location     Type
  5629 ;;  bValue          1    0[BANK0 ] unsigned char 
  5630 ;; Return value:  Size  Location     Type
  5631 ;;		None               void
  5632 ;; Registers used:
  5633 ;;		wreg
  5634 ;; Tracked objects:
  5635 ;;		On entry : 60/0
  5636 ;;		On exit  : 60/0
  5637 ;;		Unchanged: FFF9F/0
  5638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5639 ;;      Params:         0       0       0       0       0
  5640 ;;      Locals:         0       1       0       0       0
  5641 ;;      Temps:          0       0       0       0       0
  5642 ;;      Totals:         0       1       0       0       0
  5643 ;;Total ram usage:        1 bytes
  5644 ;; Hardware stack levels used:    1
  5645 ;; Hardware stack levels required when called:    2
  5646 ;; This function calls:
  5647 ;;		Nothing
  5648 ;; This function is called by:
  5649 ;;		_main
  5650 ;; This function uses a non-reentrant model
  5651 ;;
  5652  0FBC                     _setPA1:	
  5653                           
  5654                           ; Regs used in _setPA1: [wreg]
  5655                           ;setPA1@bValue stored from wreg
  5656  0FBC  00A0               	movwf	setPA1@bValue
  5657                           
  5658                           ;main.c: 201: if( bValue )
  5659  0FBD  0820               	movf	setPA1@bValue,w
  5660  0FBE  1903               	btfsc	3,2
  5661  0FBF  2FC2               	goto	l709
  5662                           
  5663                           ;main.c: 203: PA1 = 1;
  5664  0FC0  1485               	bsf	5,1
  5665  0FC1  0008               	return
  5666  0FC2                     l709:	
  5667                           
  5668                           ;main.c: 207: else
  5669                           ;main.c: 209: PA1 = 0;
  5670  0FC2  1085               	bcf	5,1
  5671  0FC3  0008               	return
  5672  0FC4                     __end_of_setPA1:	
  5673                           
  5674                           	psect	text912
  5675  0FB4                     __ptext912:	
  5676 ;; =============== function _setPA1 ends ============
  5677                           
  5678                           
  5679 ;; *************** function _setPA0 *****************
  5680 ;; Defined at:
  5681 ;;		line 183 in file "D:\develop\190625\AK7030-OTP\main.c"
  5682 ;; Parameters:    Size  Location     Type
  5683 ;;  bValue          1    wreg     unsigned char 
  5684 ;; Auto vars:     Size  Location     Type
  5685 ;;  bValue          1    0[BANK0 ] unsigned char 
  5686 ;; Return value:  Size  Location     Type
  5687 ;;		None               void
  5688 ;; Registers used:
  5689 ;;		wreg
  5690 ;; Tracked objects:
  5691 ;;		On entry : 60/0
  5692 ;;		On exit  : 60/0
  5693 ;;		Unchanged: FFF9F/0
  5694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5695 ;;      Params:         0       0       0       0       0
  5696 ;;      Locals:         0       1       0       0       0
  5697 ;;      Temps:          0       0       0       0       0
  5698 ;;      Totals:         0       1       0       0       0
  5699 ;;Total ram usage:        1 bytes
  5700 ;; Hardware stack levels used:    1
  5701 ;; Hardware stack levels required when called:    2
  5702 ;; This function calls:
  5703 ;;		Nothing
  5704 ;; This function is called by:
  5705 ;;		_main
  5706 ;; This function uses a non-reentrant model
  5707 ;;
  5708  0FB4                     _setPA0:	
  5709                           
  5710                           ; Regs used in _setPA0: [wreg]
  5711                           ;setPA0@bValue stored from wreg
  5712  0FB4  00A0               	movwf	setPA0@bValue
  5713                           
  5714                           ;main.c: 184: if( bValue )
  5715  0FB5  0820               	movf	setPA0@bValue,w
  5716  0FB6  1903               	btfsc	3,2
  5717  0FB7  2FBA               	goto	l704
  5718                           
  5719                           ;main.c: 186: PA0 = 1;
  5720  0FB8  1405               	bsf	5,0
  5721  0FB9  0008               	return
  5722  0FBA                     l704:	
  5723                           
  5724                           ;main.c: 190: else
  5725                           ;main.c: 192: PA0 = 0;
  5726  0FBA  1005               	bcf	5,0
  5727  0FBB  0008               	return
  5728  0FBC                     __end_of_setPA0:	
  5729                           
  5730                           	psect	text913
  5731  0FAC                     __ptext913:	
  5732 ;; =============== function _setPA0 ends ============
  5733                           
  5734                           
  5735 ;; *************** function _setPB1 *****************
  5736 ;; Defined at:
  5737 ;;		line 166 in file "D:\develop\190625\AK7030-OTP\main.c"
  5738 ;; Parameters:    Size  Location     Type
  5739 ;;  bValue          1    wreg     unsigned char 
  5740 ;; Auto vars:     Size  Location     Type
  5741 ;;  bValue          1    0[BANK0 ] unsigned char 
  5742 ;; Return value:  Size  Location     Type
  5743 ;;		None               void
  5744 ;; Registers used:
  5745 ;;		wreg
  5746 ;; Tracked objects:
  5747 ;;		On entry : 60/0
  5748 ;;		On exit  : 60/0
  5749 ;;		Unchanged: FFF9F/0
  5750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5751 ;;      Params:         0       0       0       0       0
  5752 ;;      Locals:         0       1       0       0       0
  5753 ;;      Temps:          0       0       0       0       0
  5754 ;;      Totals:         0       1       0       0       0
  5755 ;;Total ram usage:        1 bytes
  5756 ;; Hardware stack levels used:    1
  5757 ;; Hardware stack levels required when called:    2
  5758 ;; This function calls:
  5759 ;;		Nothing
  5760 ;; This function is called by:
  5761 ;;		_main
  5762 ;; This function uses a non-reentrant model
  5763 ;;
  5764  0FAC                     _setPB1:	
  5765                           
  5766                           ; Regs used in _setPB1: [wreg]
  5767                           ;setPB1@bValue stored from wreg
  5768  0FAC  00A0               	movwf	setPB1@bValue
  5769                           
  5770                           ;main.c: 167: if( bValue )
  5771  0FAD  0820               	movf	setPB1@bValue,w
  5772  0FAE  1903               	btfsc	3,2
  5773  0FAF  2FB2               	goto	l699
  5774                           
  5775                           ;main.c: 169: PB1 = 1;
  5776  0FB0  1486               	bsf	6,1
  5777  0FB1  0008               	return
  5778  0FB2                     l699:	
  5779                           
  5780                           ;main.c: 173: else
  5781                           ;main.c: 175: PB1 = 0;
  5782  0FB2  1086               	bcf	6,1
  5783  0FB3  0008               	return
  5784  0FB4                     __end_of_setPB1:	
  5785                           
  5786                           	psect	text914
  5787  0FE4                     __ptext914:	
  5788 ;; =============== function _setPB1 ends ============
  5789                           
  5790                           
  5791 ;; *************** function _setPB0 *****************
  5792 ;; Defined at:
  5793 ;;		line 149 in file "D:\develop\190625\AK7030-OTP\main.c"
  5794 ;; Parameters:    Size  Location     Type
  5795 ;;  bValue          1    wreg     unsigned char 
  5796 ;; Auto vars:     Size  Location     Type
  5797 ;;  bValue          1    0[BANK0 ] unsigned char 
  5798 ;; Return value:  Size  Location     Type
  5799 ;;		None               void
  5800 ;; Registers used:
  5801 ;;		wreg
  5802 ;; Tracked objects:
  5803 ;;		On entry : 40/0
  5804 ;;		On exit  : 60/0
  5805 ;;		Unchanged: FFF9F/0
  5806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5807 ;;      Params:         0       0       0       0       0
  5808 ;;      Locals:         0       1       0       0       0
  5809 ;;      Temps:          0       0       0       0       0
  5810 ;;      Totals:         0       1       0       0       0
  5811 ;;Total ram usage:        1 bytes
  5812 ;; Hardware stack levels used:    1
  5813 ;; Hardware stack levels required when called:    2
  5814 ;; This function calls:
  5815 ;;		Nothing
  5816 ;; This function is called by:
  5817 ;;		_main
  5818 ;; This function uses a non-reentrant model
  5819 ;;
  5820  0FE4                     _setPB0:	
  5821                           
  5822                           ; Regs used in _setPB0: [wreg]
  5823                           ;setPB0@bValue stored from wreg
  5824  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  5825  0FE5  00A0               	movwf	setPB0@bValue
  5826                           
  5827                           ;main.c: 150: if( bValue )
  5828  0FE6  0820               	movf	setPB0@bValue,w
  5829  0FE7  1903               	btfsc	3,2
  5830  0FE8  2FEB               	goto	l694
  5831                           
  5832                           ;main.c: 152: PB0 = 1;
  5833  0FE9  1406               	bsf	6,0
  5834  0FEA  0008               	return
  5835  0FEB                     l694:	
  5836                           
  5837                           ;main.c: 156: else
  5838                           ;main.c: 158: PB0 = 0;
  5839  0FEB  1006               	bcf	6,0
  5840  0FEC  0008               	return
  5841  0FED                     __end_of_setPB0:	
  5842                           
  5843                           	psect	text915
  5844  0775                     __ptext915:	
  5845 ;; =============== function _setPB0 ends ============
  5846                           
  5847                           
  5848 ;; *************** function _initPin *****************
  5849 ;; Defined at:
  5850 ;;		line 123 in file "D:\develop\190625\AK7030-OTP\main.c"
  5851 ;; Parameters:    Size  Location     Type
  5852 ;;		None
  5853 ;; Auto vars:     Size  Location     Type
  5854 ;;		None
  5855 ;; Return value:  Size  Location     Type
  5856 ;;		None               void
  5857 ;; Registers used:
  5858 ;;		None
  5859 ;; Tracked objects:
  5860 ;;		On entry : 160/20
  5861 ;;		On exit  : 160/60
  5862 ;;		Unchanged: FFE9F/0
  5863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5864 ;;      Params:         0       0       0       0       0
  5865 ;;      Locals:         0       0       0       0       0
  5866 ;;      Temps:          0       0       0       0       0
  5867 ;;      Totals:         0       0       0       0       0
  5868 ;;Total ram usage:        0 bytes
  5869 ;; Hardware stack levels used:    1
  5870 ;; Hardware stack levels required when called:    2
  5871 ;; This function calls:
  5872 ;;		Nothing
  5873 ;; This function is called by:
  5874 ;;		_main
  5875 ;; This function uses a non-reentrant model
  5876 ;;
  5877  0775                     _initPin:	
  5878                           
  5879                           ;main.c: 125: PB6 = 1;
  5880                           
  5881                           ; Regs used in _initPin: []
  5882  0775  1283               	bcf	3,5	;RP0=0, select bank0
  5883  0776  1706               	bsf	6,6
  5884                           
  5885                           ;main.c: 126: PBOD6 = 1;
  5886  0777  1683               	bsf	3,5	;RP0=1, select bank3
  5887  0778  1703               	bsf	3,6	;RP1=1, select bank3
  5888  0779  1708               	bsf	8,6
  5889                           
  5890                           ;main.c: 130: PA0 = 0;
  5891  077A  1283               	bcf	3,5	;RP0=0, select bank0
  5892  077B  1303               	bcf	3,6	;RP1=0, select bank0
  5893  077C  1005               	bcf	5,0
  5894                           
  5895                           ;main.c: 131: PA1 = 0;
  5896  077D  1085               	bcf	5,1
  5897                           
  5898                           ;main.c: 132: PA2 = 0;
  5899  077E  1105               	bcf	5,2
  5900                           
  5901                           ;main.c: 133: PA3 = 0;
  5902  077F  1185               	bcf	5,3
  5903                           
  5904                           ;main.c: 134: PB0 = 0;
  5905  0780  1006               	bcf	6,0
  5906                           
  5907                           ;main.c: 135: PB1 = 1;
  5908  0781  1486               	bsf	6,1
  5909                           
  5910                           ;main.c: 136: PA6 = 0;
  5911  0782  1305               	bcf	5,6
  5912                           
  5913                           ;main.c: 138: PB7 = 0;
  5914  0783  1386               	bcf	6,7
  5915                           
  5916                           ;main.c: 139: PBOD7 = 0;
  5917  0784  1683               	bsf	3,5	;RP0=1, select bank3
  5918  0785  1703               	bsf	3,6	;RP1=1, select bank3
  5919  0786  1388               	bcf	8,7
  5920  0787  0008               	return
  5921  0788                     __end_of_initPin:	
  5922                           
  5923                           	psect	text919
  5924  04CF                     __ptext919:	
  5925 ;; =============== function _clearTwelveHoursTimer ends ============
  5926                           
  5927                           
  5928 ;; *************** function _ISR *****************
  5929 ;; Defined at:
  5930 ;;		line 497 in file "D:\develop\190625\AK7030-OTP\common.c"
  5931 ;; Parameters:    Size  Location     Type
  5932 ;;		None
  5933 ;; Auto vars:     Size  Location     Type
  5934 ;;		None
  5935 ;; Return value:  Size  Location     Type
  5936 ;;		None               void
  5937 ;; Registers used:
  5938 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5939 ;; Tracked objects:
  5940 ;;		On entry : 0/0
  5941 ;;		On exit  : 60/0
  5942 ;;		Unchanged: FFE00/0
  5943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5944 ;;      Params:         0       0       0       0       0
  5945 ;;      Locals:         0       0       0       0       0
  5946 ;;      Temps:          4       0       0       0       0
  5947 ;;      Totals:         4       0       0       0       0
  5948 ;;Total ram usage:        4 bytes
  5949 ;; Hardware stack levels used:    1
  5950 ;; Hardware stack levels required when called:    1
  5951 ;; This function calls:
  5952 ;;		i1_setAD_ConvertFlag
  5953 ;;		_adc_get
  5954 ;;		_vPutSampleDataIntoTable
  5955 ;; This function is called by:
  5956 ;;		Interrupt level 1
  5957 ;; This function uses a non-reentrant model
  5958 ;;
  5959  04CF                     _ISR:	
  5960                           
  5961                           ;common.c: 498: static unsigned char ucTimer1sCnt = 0;
  5962                           ;common.c: 500: if(TMR1IF == 1)
  5963  04CF  1C0C               	btfss	12,0
  5964  04D0  2D02               	goto	i1l4615
  5965                           
  5966                           ;common.c: 501: {
  5967                           ;common.c: 502: TMR1IF = 0 ;
  5968  04D1  100C               	bcf	12,0
  5969                           
  5970                           ;common.c: 503: timer.timer10msStopWatch++;
  5971  04D2  1683               	bsf	3,5	;RP0=1, select bank1
  5972  04D3  3064               	movlw	100
  5973  04D4  0AAE               	incf	_timer^(0+128),f
  5974                           
  5975                           ;common.c: 504: ucTimer1sCnt++;
  5976  04D5  0AAC               	incf	ISR@ucTimer1sCnt^(0+128),f
  5977                           
  5978                           ;common.c: 506: if(ucTimer1sCnt >= 100)
  5979  04D6  022C               	subwf	ISR@ucTimer1sCnt^(0+128),w
  5980  04D7  1C03               	skipc
  5981  04D8  2D02               	goto	i1l4615
  5982                           
  5983                           ;common.c: 507: {
  5984                           ;common.c: 508: ucTimer1sCnt = 0;
  5985  04D9  01AC               	clrf	ISR@ucTimer1sCnt^(0+128)
  5986                           
  5987                           ;common.c: 509: if(uiBigTimer > 0)
  5988  04DA  0821               	movf	(_uiBigTimer+1)^(0+128),w
  5989  04DB  0420               	iorwf	_uiBigTimer^(0+128),w
  5990  04DC  1903               	skipnz
  5991  04DD  2CE4               	goto	i1l1889
  5992                           
  5993                           ;common.c: 510: uiBigTimer--;
  5994  04DE  3001               	movlw	1
  5995  04DF  02A0               	subwf	_uiBigTimer^(0+128),f
  5996  04E0  3000               	movlw	0
  5997  04E1  1C03               	skipc
  5998  04E2  03A1               	decf	(_uiBigTimer+1)^(0+128),f
  5999  04E3  02A1               	subwf	(_uiBigTimer+1)^(0+128),f
  6000  04E4                     i1l1889:	
  6001                           
  6002                           ;common.c: 512: if(uiSmallTimer)
  6003  04E4  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  6004  04E5  0422               	iorwf	_uiSmallTimer^(0+128),w
  6005  04E6  1903               	skipnz
  6006  04E7  2CEE               	goto	i1l1890
  6007                           
  6008                           ;common.c: 513: uiSmallTimer--;
  6009  04E8  3001               	movlw	1
  6010  04E9  02A2               	subwf	_uiSmallTimer^(0+128),f
  6011  04EA  3000               	movlw	0
  6012  04EB  1C03               	skipc
  6013  04EC  03A3               	decf	(_uiSmallTimer+1)^(0+128),f
  6014  04ED  02A3               	subwf	(_uiSmallTimer+1)^(0+128),f
  6015  04EE                     i1l1890:	
  6016                           
  6017                           ;common.c: 515: if(uiTwentySecondsTimer)
  6018  04EE  0827               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  6019  04EF  0426               	iorwf	_uiTwentySecondsTimer^(0+128),w
  6020  04F0  1903               	skipnz
  6021  04F1  2CF8               	goto	i1l1891
  6022                           
  6023                           ;common.c: 516: uiTwentySecondsTimer--;
  6024  04F2  3001               	movlw	1
  6025  04F3  02A6               	subwf	_uiTwentySecondsTimer^(0+128),f
  6026  04F4  3000               	movlw	0
  6027  04F5  1C03               	skipc
  6028  04F6  03A7               	decf	(_uiTwentySecondsTimer+1)^(0+128),f
  6029  04F7  02A7               	subwf	(_uiTwentySecondsTimer+1)^(0+128),f
  6030  04F8                     i1l1891:	
  6031                           
  6032                           ;common.c: 518: if(uiTwentyMinTimer)
  6033  04F8  0825               	movf	(_uiTwentyMinTimer+1)^(0+128),w
  6034  04F9  0424               	iorwf	_uiTwentyMinTimer^(0+128),w
  6035  04FA  1903               	skipnz
  6036  04FB  2D02               	goto	i1l4615
  6037                           
  6038                           ;common.c: 519: uiTwentyMinTimer--;
  6039  04FC  3001               	movlw	1
  6040  04FD  02A4               	subwf	_uiTwentyMinTimer^(0+128),f
  6041  04FE  3000               	movlw	0
  6042  04FF  1C03               	skipc
  6043  0500  03A5               	decf	(_uiTwentyMinTimer+1)^(0+128),f
  6044  0501  02A5               	subwf	(_uiTwentyMinTimer+1)^(0+128),f
  6045  0502                     i1l4615:	
  6046                           
  6047                           ;common.c: 520: }
  6048                           ;common.c: 521: }
  6049                           ;common.c: 523: if(ADIF)
  6050  0502  1283               	bcf	3,5	;RP0=0, select bank0
  6051  0503  1D0D               	btfss	13,2
  6052  0504  2D2A               	goto	i1l1898
  6053  0505  3001               	movlw	1
  6054                           
  6055                           ;common.c: 524: {
  6056                           ;common.c: 525: ADIF=0;
  6057  0506  110D               	bcf	13,2
  6058                           
  6059                           ;common.c: 526: setAD_ConvertFlag(1);
  6060  0507  25A5  118A         	fcall	i1_setAD_ConvertFlag
  6061                           
  6062                           ;common.c: 528: if(sampleChannelSelect == 5)
  6063  0509  1283               	bcf	3,5	;RP0=0, select bank0
  6064  050A  086E               	movf	_sampleChannelSelect,w
  6065  050B  3A05               	xorlw	5
  6066  050C  1D03               	skipz
  6067  050D  2D16               	goto	i1l4625
  6068                           
  6069                           ;common.c: 529: {
  6070                           ;common.c: 532: vPutSampleDataIntoTable(adc_get(),5);
  6071  050E  2537  118A         	fcall	_adc_get
  6072  0510  0871               	movf	?_adc_get+1,w
  6073  0511  00F5               	movwf	?_vPutSampleDataIntoTable+1
  6074  0512  0870               	movf	?_adc_get,w
  6075  0513  00F4               	movwf	?_vPutSampleDataIntoTable
  6076  0514  3005               	movlw	5
  6077  0515  2D28               	goto	L26
  6078  0516                     i1l4625:	
  6079                           ;common.c: 536: }
  6080                           
  6081                           
  6082                           ;common.c: 537: else if(sampleChannelSelect == 1)
  6083  0516  0B6E               	decfsz	_sampleChannelSelect,w
  6084  0517  2D21               	goto	i1l4629
  6085                           
  6086                           ;common.c: 538: {
  6087                           ;common.c: 540: vPutSampleDataIntoTable(adc_get(),1);
  6088  0518  2537  118A         	fcall	_adc_get
  6089  051A  0871               	movf	?_adc_get+1,w
  6090  051B  00F5               	movwf	?_vPutSampleDataIntoTable+1
  6091  051C  0870               	movf	?_adc_get,w
  6092  051D  00F4               	movwf	?_vPutSampleDataIntoTable
  6093  051E  01F6               	clrf	?_vPutSampleDataIntoTable+2
  6094  051F  0AF6               	incf	?_vPutSampleDataIntoTable+2,f
  6095  0520  2D29               	goto	L27
  6096  0521                     i1l4629:	
  6097                           ;common.c: 545: }
  6098                           
  6099                           
  6100                           ;common.c: 546: else
  6101                           ;common.c: 547: {
  6102                           ;common.c: 551: vPutSampleDataIntoTable(adc_get(),14);
  6103  0521  2537  118A         	fcall	_adc_get
  6104  0523  0871               	movf	?_adc_get+1,w
  6105  0524  00F5               	movwf	?_vPutSampleDataIntoTable+1
  6106  0525  0870               	movf	?_adc_get,w
  6107  0526  00F4               	movwf	?_vPutSampleDataIntoTable
  6108  0527  300E               	movlw	14
  6109  0528                     L26:	
  6110  0528  00F6               	movwf	?_vPutSampleDataIntoTable+2
  6111  0529                     L27:	
  6112  0529  2542               	fcall	_vPutSampleDataIntoTable
  6113  052A                     i1l1898:	
  6114  052A  087C               	movf	??_ISR+3,w
  6115  052B  1283               	bcf	3,5	;RP0=0, select bank0
  6116  052C  1303               	bcf	3,6	;RP1=0, select bank0
  6117  052D  00FF               	movwf	127
  6118  052E  087B               	movf	??_ISR+2,w
  6119  052F  008A               	movwf	10
  6120  0530  087A               	movf	??_ISR+1,w
  6121  0531  0084               	movwf	4
  6122  0532  0E79               	swapf	??_ISR^(0+-128),w
  6123  0533  0083               	movwf	3
  6124  0534  0EFE               	swapf	126,f
  6125  0535  0E7E               	swapf	126,w
  6126  0536  0009               	retfie
  6127  0537                     __end_of_ISR:	
  6128  0537                     __ptext921:	
  6129 ;; =============== function i1_setAD_ConvertFlag ends ============
  6130                           
  6131                           
  6132 ;; *************** function _adc_get *****************
  6133 ;; Defined at:
  6134 ;;		line 105 in file "D:\develop\190625\AK7030-OTP\periph.c"
  6135 ;; Parameters:    Size  Location     Type
  6136 ;;		None
  6137 ;; Auto vars:     Size  Location     Type
  6138 ;;  val             2    2[COMMON] unsigned int 
  6139 ;; Return value:  Size  Location     Type
  6140 ;;                  2    0[COMMON] unsigned int 
  6141 ;; Registers used:
  6142 ;;		wreg
  6143 ;; Tracked objects:
  6144 ;;		On entry : 60/0
  6145 ;;		On exit  : 60/20
  6146 ;;		Unchanged: FFF9F/0
  6147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6148 ;;      Params:         2       0       0       0       0
  6149 ;;      Locals:         2       0       0       0       0
  6150 ;;      Temps:          0       0       0       0       0
  6151 ;;      Totals:         4       0       0       0       0
  6152 ;;Total ram usage:        4 bytes
  6153 ;; Hardware stack levels used:    1
  6154 ;; This function calls:
  6155 ;;		Nothing
  6156 ;; This function is called by:
  6157 ;;		_ISR
  6158 ;; This function uses a non-reentrant model
  6159 ;;
  6160  0537                     _adc_get:	
  6161                           
  6162                           ;periph.c: 106: unsigned int val;
  6163                           ;periph.c: 107: val = (ADRESH<<8) | ADRESL;
  6164                           
  6165                           ; Regs used in _adc_get: [wreg]
  6166  0537  081E               	movf	30,w	;volatile
  6167  0538  00F3               	movwf	adc_get@val+1
  6168  0539  01F2               	clrf	adc_get@val
  6169  053A  1683               	bsf	3,5	;RP0=1, select bank1
  6170  053B  081E               	movf	30,w	;volatile
  6171  053C  04F2               	iorwf	adc_get@val,f
  6172                           
  6173                           ;periph.c: 108: return val;
  6174  053D  0873               	movf	adc_get@val+1,w
  6175  053E  00F1               	movwf	?_adc_get+1
  6176  053F  0872               	movf	adc_get@val,w
  6177  0540  00F0               	movwf	?_adc_get
  6178  0541  0008               	return
  6179  0542                     __end_of_adc_get:	
  6180  0542                     __ptext922:	
  6181 ;; =============== function _adc_get ends ============
  6182                           
  6183                           
  6184 ;; *************** function _vPutSampleDataIntoTable *****************
  6185 ;; Defined at:
  6186 ;;		line 103 in file "D:\develop\190625\AK7030-OTP\common.c"
  6187 ;; Parameters:    Size  Location     Type
  6188 ;;  uiSampleData    2    4[COMMON] unsigned int 
  6189 ;;  channel         1    6[COMMON] unsigned char 
  6190 ;; Auto vars:     Size  Location     Type
  6191 ;;  i               2    7[COMMON] int 
  6192 ;; Return value:  Size  Location     Type
  6193 ;;		None               void
  6194 ;; Registers used:
  6195 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  6196 ;; Tracked objects:
  6197 ;;		On entry : 60/20
  6198 ;;		On exit  : 0/0
  6199 ;;		Unchanged: FFE00/0
  6200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6201 ;;      Params:         3       0       0       0       0
  6202 ;;      Locals:         2       0       0       0       0
  6203 ;;      Temps:          0       0       0       0       0
  6204 ;;      Totals:         5       0       0       0       0
  6205 ;;Total ram usage:        5 bytes
  6206 ;; Hardware stack levels used:    1
  6207 ;; This function calls:
  6208 ;;		Nothing
  6209 ;; This function is called by:
  6210 ;;		_ISR
  6211 ;; This function uses a non-reentrant model
  6212 ;;
  6213  0542                     _vPutSampleDataIntoTable:	
  6214                           
  6215                           ;common.c: 105: static unsigned char ucChannelFirstLength = 0;
  6216                           ;common.c: 107: static unsigned char ucChannelFourthLength = 0;
  6217                           ;common.c: 109: static unsigned char ucChannelFourteenthLength = 0;
  6218                           ;common.c: 111: if(channel == 1)
  6219                           
  6220                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1]
  6221  0542  0B76               	decfsz	vPutSampleDataIntoTable@channel,w
  6222  0543  2D54               	goto	i1l4531
  6223                           
  6224                           ;common.c: 112: {
  6225                           ;common.c: 113: if(ucChannelFirstLength < 12)
  6226  0544  300C               	movlw	12
  6227  0545  027D               	subwf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  6228  0546  1803               	skipnc
  6229  0547  2D4E               	goto	i1l4527
  6230                           
  6231                           ;common.c: 114: {
  6232                           ;common.c: 115: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  6233  0548  1003               	clrc
  6234  0549  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  6235  054A  3EBC               	addlw	_uiSampleChannelFirst& (0+255)
  6236  054B  25A9               	fcall	PL2	;call to abstracted procedure
  6237                           
  6238                           ;common.c: 117: ucChannelFirstLength++;
  6239  054C  0AFD               	incf	vPutSampleDataIntoTable@ucChannelFirstLength,f
  6240                           
  6241                           ;common.c: 118: }
  6242  054D  0008               	return
  6243  054E                     i1l4527:	
  6244                           
  6245                           ;common.c: 119: else
  6246                           ;common.c: 120: {
  6247                           ;common.c: 121: ucChannelFirstLength = 0;
  6248  054E  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  6249                           
  6250                           ;common.c: 123: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  6251  054F  1003               	clrc
  6252  0550  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  6253  0551  3EBC               	addlw	_uiSampleChannelFirst& (0+255)
  6254  0552  25A9               	fcall	PL2	;call to abstracted procedure
  6255  0553  0008               	return
  6256  0554                     i1l4531:	
  6257                           
  6258                           ;common.c: 126: else if(channel == 5)
  6259  0554  0876               	movf	vPutSampleDataIntoTable@channel,w
  6260  0555  3A05               	xorlw	5
  6261  0556  1D03               	skipz
  6262  0557  2D69               	goto	i1l4543
  6263                           
  6264                           ;common.c: 127: {
  6265                           ;common.c: 128: if(ucChannelFourthLength < 12)
  6266  0558  300C               	movlw	12
  6267  0559  1283               	bcf	3,5	;RP0=0, select bank0
  6268  055A  026D               	subwf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  6269  055B  1803               	skipnc
  6270  055C  2D63               	goto	i1l4539
  6271                           
  6272                           ;common.c: 129: {
  6273                           ;common.c: 130: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  6274  055D  1003               	clrc
  6275  055E  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  6276  055F  3ED4               	addlw	_uiSampleChannelFourth& (0+255)
  6277  0560  25A9               	fcall	PL2	;call to abstracted procedure
  6278                           
  6279                           ;common.c: 132: ucChannelFourthLength++;
  6280  0561  0AED               	incf	vPutSampleDataIntoTable@ucChannelFourthLength,f
  6281                           
  6282                           ;common.c: 133: }
  6283  0562  0008               	return
  6284  0563                     i1l4539:	
  6285                           
  6286                           ;common.c: 134: else
  6287                           ;common.c: 135: {
  6288                           ;common.c: 136: ucChannelFourthLength = 0;
  6289  0563  01ED               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  6290                           
  6291                           ;common.c: 138: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  6292  0564  1003               	clrc
  6293  0565  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  6294  0566  3ED4               	addlw	_uiSampleChannelFourth& (0+255)
  6295  0567  25A9               	fcall	PL2	;call to abstracted procedure
  6296  0568  0008               	return
  6297  0569                     i1l4543:	
  6298                           
  6299                           ;common.c: 141: else if(channel == 14)
  6300  0569  0876               	movf	vPutSampleDataIntoTable@channel,w
  6301  056A  3A0E               	xorlw	14
  6302  056B  1D03               	skipz
  6303  056C  2D84               	goto	i1l4555
  6304                           
  6305                           ;common.c: 142: {
  6306                           ;common.c: 143: if(ucChannelFourteenthLength < 12)
  6307  056D  300C               	movlw	12
  6308  056E  1283               	bcf	3,5	;RP0=0, select bank0
  6309  056F  026C               	subwf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  6310  0570  1803               	skipnc
  6311  0571  2D7E               	goto	i1l4551
  6312                           
  6313                           ;common.c: 144: {
  6314                           ;common.c: 145: uiSampleChannelFourteenth[ucChannelFourteenthLength] = uiSampleData;
  6315  0572  1003               	clrc
  6316  0573  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  6317  0574  3E90               	addlw	_uiSampleChannelFourteenth& (0+255)
  6318  0575  0084               	movwf	4
  6319  0576  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  6320  0577  1783               	bsf	3,7	;select IRP bank3
  6321  0578  0080               	movwf	0
  6322  0579  0A84               	incf	4,f
  6323  057A  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  6324  057B  0080               	movwf	0
  6325                           
  6326                           ;common.c: 147: ucChannelFourteenthLength++;
  6327  057C  0AEC               	incf	vPutSampleDataIntoTable@ucChannelFourteenthLength,f
  6328                           
  6329                           ;common.c: 148: }
  6330  057D  0008               	return
  6331  057E                     i1l4551:	
  6332                           
  6333                           ;common.c: 149: else
  6334                           ;common.c: 150: {
  6335                           ;common.c: 151: ucChannelFourteenthLength = 0;
  6336  057E  01EC               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  6337                           
  6338                           ;common.c: 153: uiSampleChannelFourth[ucChannelFourteenthLength] = uiSampleData;
  6339  057F  1003               	clrc
  6340  0580  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  6341  0581  3ED4               	addlw	_uiSampleChannelFourth& (0+255)
  6342  0582  25A9               	fcall	PL2	;call to abstracted procedure
  6343  0583  0008               	return
  6344  0584                     i1l4555:	
  6345                           
  6346                           ;common.c: 156: else
  6347                           ;common.c: 157: {
  6348                           ;common.c: 158: ucChannelFirstLength = 0;
  6349  0584  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  6350                           
  6351                           ;common.c: 160: ucChannelFourthLength = 0;
  6352  0585  1283               	bcf	3,5	;RP0=0, select bank0
  6353  0586  01ED               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  6354                           
  6355                           ;common.c: 162: ucChannelFourteenthLength = 0;
  6356  0587  01EC               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  6357                           
  6358                           ;common.c: 164: for(int i = 0;i < 12; i++)
  6359  0588  01F7               	clrf	vPutSampleDataIntoTable@i
  6360  0589  01F8               	clrf	vPutSampleDataIntoTable@i+1
  6361  058A                     i1l4561:	
  6362                           
  6363                           ;common.c: 165: {
  6364                           ;common.c: 166: uiSampleChannelFirst[i] = 0;
  6365  058A  1003               	clrc
  6366  058B  0D77               	rlf	vPutSampleDataIntoTable@i,w
  6367  058C  3EBC               	addlw	_uiSampleChannelFirst& (0+255)
  6368  058D  0084               	movwf	4
  6369  058E  1383               	bcf	3,7	;select IRP bank1
  6370  058F  0180               	clrf	0
  6371                           
  6372                           ;common.c: 168: uiSampleChannelFourth[i] = 0;
  6373  0590  25B1  118A         	fcall	PL4	;call to abstracted procedure
  6374                           
  6375                           ;common.c: 170: uiSampleChannelFourth[i] = 0;
  6376  0592  25B1  118A         	fcall	PL4	;call to abstracted procedure
  6377  0594  0A84               	incf	4,f
  6378  0595  0180               	clrf	0
  6379  0596  0AF7               	incf	vPutSampleDataIntoTable@i,f
  6380  0597  1903               	skipnz
  6381  0598  0AF8               	incf	vPutSampleDataIntoTable@i+1,f
  6382  0599  0878               	movf	vPutSampleDataIntoTable@i+1,w
  6383  059A  3A80               	xorlw	128
  6384  059B  00FF               	movwf	127
  6385  059C  3080               	movlw	128
  6386  059D  027F               	subwf	127,w
  6387  059E  1D03               	skipz
  6388  059F  2DA2               	goto	u172_25
  6389  05A0  300C               	movlw	12
  6390  05A1  0277               	subwf	vPutSampleDataIntoTable@i,w
  6391  05A2                     u172_25:	
  6392  05A2  1803               	btfsc	3,0
  6393  05A3  0008               	return
  6394  05A4  2D8A               	goto	i1l4561
  6395  05A5                     __end_of_vPutSampleDataIntoTable:	
  6396  05A5                     __ptext920:	
  6397 ;; =============== function _ISR ends ============
  6398                           
  6399                           
  6400 ;; *************** function i1_setAD_ConvertFlag *****************
  6401 ;; Defined at:
  6402 ;;		line 212 in file "D:\develop\190625\AK7030-OTP\common.c"
  6403 ;; Parameters:    Size  Location     Type
  6404 ;;  setAD_Conver    1    wreg     unsigned char 
  6405 ;; Auto vars:     Size  Location     Type
  6406 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  6407 ;; Return value:  Size  Location     Type
  6408 ;;		None               void
  6409 ;; Registers used:
  6410 ;;		wreg
  6411 ;; Tracked objects:
  6412 ;;		On entry : 60/0
  6413 ;;		On exit  : 60/20
  6414 ;;		Unchanged: FFF9F/0
  6415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6416 ;;      Params:         0       0       0       0       0
  6417 ;;      Locals:         1       0       0       0       0
  6418 ;;      Temps:          0       0       0       0       0
  6419 ;;      Totals:         1       0       0       0       0
  6420 ;;Total ram usage:        1 bytes
  6421 ;; Hardware stack levels used:    1
  6422 ;; This function calls:
  6423 ;;		Nothing
  6424 ;; This function is called by:
  6425 ;;		_ISR
  6426 ;; This function uses a non-reentrant model
  6427 ;;
  6428  05A5                     i1_setAD_ConvertFlag:	
  6429                           
  6430                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  6431                           ;i1setAD_ConvertFlag@flag stored from wreg
  6432  05A5  00F0               	movwf	i1setAD_ConvertFlag@flag
  6433                           
  6434                           ;common.c: 213: adc_convert_flag = flag;
  6435  05A6  1683               	bsf	3,5	;RP0=1, select bank1
  6436  05A7  00AD               	movwf	_adc_convert_flag^(0+128)
  6437  05A8  0008               	return
  6438  05A9                     __end_ofi1_setAD_ConvertFlag:	
  6439  05A9                     PL2:	
  6440  05A9  0084               	movwf	4
  6441  05AA  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  6442  05AB  1383               	bcf	3,7	;select IRP bank1
  6443  05AC  0080               	movwf	0
  6444  05AD  0A84               	incf	4,f
  6445  05AE  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  6446  05AF  0080               	movwf	0
  6447  05B0  0008               	return
  6448  05B1                     PL4:	
  6449  05B1  0A84               	incf	4,f
  6450  05B2  0180               	clrf	0
  6451  05B3  1003               	clrc
  6452  05B4  0D77               	rlf	vPutSampleDataIntoTable@i,w
  6453  05B5  3ED4               	addlw	_uiSampleChannelFourth& (0+255)
  6454  05B6  0084               	movwf	4
  6455  05B7  0180               	clrf	0
  6456  05B8  0008               	return
  6457                           
  6458                           	psect	intentry
  6459  0004                     __pintentry:	
  6460                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6461                           
  6462  0004                     interrupt_function:	
  6463  007E                     saved_w	set	btemp
  6464  0004  00FE               	movwf	btemp
  6465  0005  0E03               	swapf	3,w
  6466  0006  00F9               	movwf	??_ISR
  6467  0007  0804               	movf	4,w
  6468  0008  00FA               	movwf	??_ISR+1
  6469  0009  080A               	movf	10,w
  6470  000A  00FB               	movwf	??_ISR+2
  6471  000B  1283               	bcf	3,5	;RP0=0, select bank0
  6472  000C  1303               	bcf	3,6	;RP1=0, select bank0
  6473  000D  087F               	movf	btemp+1,w
  6474  000E  00FC               	movwf	??_ISR+3
  6475  000F  118A  2CCF         	ljmp	_ISR
  6476                           
  6477                           	psect	text923
  6478  0000                     __ptext923:	
  6479 ;; =============== function _vPutSampleDataIntoTable ends ============
  6480                           
  6481  007E                     btemp	set	126	;btemp
  6482  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sun Aug 18 22:41:52 2019

                                  ??_clock_config 0020                                                 pc 0002  
                                              _GO 00F9                                                fsr 0004  
                        ?_timer1_interrupt_config 0070                                               l704 0FBA  
                                             l714 0FCA                                               l804 00F8  
                                             l709 0FC2                                               l719 0FD2  
                                             l729 0FF4                                               l762 007C  
                                             l691 0000                                               l843 0182  
                                             l828 0180                                               l685 0000  
                                             l694 0FEB                                               l871 01BD  
                                             l688 0000                                               l699 0FB2  
                                             l991 0355                                               _PA0 0028  
                                             _PA1 0029                                               _GIE 005F  
                                             _PB0 0030                                               _PA2 002A  
                                             _PB1 0031                                               _PA3 002B  
                                             _PA6 002E                                               _PB6 0036  
                                             _PB7 0037                                               _ISR 04CF  
                                             fsr0 0004                                               indf 0000  
                          ??_startThreeHoursTimer 0022                                              S5661 07B5  
                                            S5663 0706                                              S5657 0799  
                                            S5659 07A7                                              ?_ISR 0070  
                              __size_of_AD_Sample 001E                            ?_getAdOriginalCh1Value 0046  
                                            l1015 03AD                                              l1067 04A5  
                                            l1801 0000                                              l2531 0000  
                                            l5003 0227                                              l1804 0000  
                                            l4301 0000                                              l5013 0230  
                                            l2534 0000                                              l4303 0000  
                                            l4311 0000                                              l2551 0000  
                                            l5023 0241                                              l1833 0000  
                                            l4305 0000                                              l4313 0000  
                                            l4321 0000                                              l2545 0000  
                                            l2537 0000                                              l5201 0000  
                                            l5121 02E3                                              l5105 02BE  
                                            l5033 0247                                              l5025 0000  
                                            l1842 0000                                              l1754 0000  
                                            l4307 0000                                              l4315 0000  
                                            l4323 0000                                              l4331 0000  
                                            l4403 0000                                              l4411 0000  
                                            l5211 0000                                              l5131 02F2  
                                            l5115 02C4                                              l5107 0000  
                                            l5043 0269                                              l5035 0253  
                                            l1836 0000                                              l1780 0FD9  
                                            l4309 0000                                              l4317 0000  
                                            l4325 0000                                              l4333 0000  
                                            l4341 0000                                              l4405 0000  
                                            l4421 0000                                              l4501 0000  
                                            l5301 0000                                              l5221 0000  
                                            l5213 0377                                              l5125 0000  
                                            l5037 025F                                              l1839 0000  
                                            l4319 0000                                              l1783 0000  
                                            l4327 0000                                              l4335 0000  
                                            l4343 0000                                              l4351 0000  
                                            l4511 0000                                              l5311 042F  
                                            l5303 0426                                              l5231 0000  
                                            l5223 0384                                              l5215 0000  
                                            l5207 0369                                              l5151 030E  
                                            l5143 0304                                              l5135 0000  
                                            l5127 02F0                                              l5119 02D2  
                                            l5071 0000                                              l5047 026B  
                                            l5039 0261                                              l1792 0000  
                                            l4329 0000                                              l4337 0000  
                                            l4345 0000                                              l4353 0000  
                                            l4409 0000                                              l4433 0000  
                                            l5321 043B                                              l5305 0000  
                                            l5241 0000                                              l5217 037A  
                                            l5161 031D                                              l5145 0306  
                                            l5137 0000                                              l5129 0000  
                                            l5081 029A                                              l5049 026D  
                                            l1786 0000                                              l1882 0000  
                                            l4291 0000                                              l4339 0000  
                                            l4347 0000                                              l4355 06DF  
                                            l4371 0000                                              l4427 0000  
                                            l4435 0000                                              l4451 0000  
                                            l4515 0000                                              l1795 0000  
                                            l5331 046D                                              l5323 0447  
                                            l5315 0000                                              l5307 0429  
                                            l5251 0000                                              l5235 0000  
                                            l5227 0000                                              l5171 0000  
                                            l5155 0000                                              l5139 02FE  
                                            l5083 02AA                                              l5059 0276  
                                            l4285 0000                                              l4293 0000  
                                            l1789 0000                                              l4349 0000  
                                            l4357 0000                                              l4381 0000  
                                            l4429 0000                                              l4445 0000  
                                            l4453 0000                                              l4509 0000  
                                            l5341 0000                                              l5325 0000  
                                            l5317 0000                                              l5261 0000  
                                            l5253 03D3                                              l5237 0398  
                                            l5229 038D                                              l5181 0340  
                                            l5173 032E                                              l5165 0323  
                                            l5157 031B                                              l5093 02B6  
                                            l5085 02AC                                              l5069 0283  
                                            l4701 004E                                              l1798 0000  
                                            l4287 0000                                              l4295 0000  
                                            l5343 0484                                              l5335 047A  
                                            l5327 0000                                              l5271 03F0  
                                            l5263 03E1                                              l5239 0000  
                                            l5191 0000                                              l5183 0000  
                                            l5175 0000                                              l5159 0000  
                                            l5095 02B8                                              l5079 0289  
                                            l5247 03A0                                              l4711 0066  
                                            l4289 0700                                              l4297 0000  
                                            l4369 0000                                              l4377 0000  
                                            l4385 0000                                              l4457 0000  
                                            l4481 0000                                              l5353 0000  
                                            l5337 047C                                              l5329 0000  
                                            l5281 0401                                              l5257 03D9  
                                            l5249 0000                                              l5185 0000  
                                            l5177 0337                                              l5169 0329  
                                            l4801 00FB                                              l4721 0072  
                                            l4713 0068                                              l4705 005A  
                                            l4299 0000                                              l4379 0000  
                                            l4387 0000                                              l4459 0000  
                                            l4475 05DF                                              l4571 0000  
                                            l4651 069D                                              l4643 0000  
                                            l5363 04A6                                              l5355 0000  
                                            l5347 0491                                              l5291 0000  
                                            l5275 0000                                              l5267 03ED  
                                            l5259 0000                                              l5195 0000  
                                            l5187 0000                                              l4811 0000  
                                            l4731 0000                                              l4397 0000  
                                            l4477 0000                                              l4469 0000  
                                            l4581 0000                                              l4573 0000  
                                            l4637 06EF                                              l5357 0000  
                                            l5349 0493                                              l5293 0000  
                                            l5285 0000                                              l5277 03FE  
                                            l5269 0000                                              l5197 0000  
                                            l5189 034D                                              l4821 0125  
                                            l4813 010F                                              l4805 0000  
                                            l4741 0095                                              l4733 008B  
                                            l4725 0000                                              l4717 0000  
                                            l4709 0000                                              l4495 0648  
                                            l4479 0000                                              l4567 0000  
                                            l4591 0000                                              l4647 0697  
                                            l4639 0000                                              l4655 0000  
                                            l4663 0000                                              l5359 0000  
                                            l5287 0000                                              l5295 0414  
                                            l5279 0000                                              l5199 035D  
                                            l4903 01AA                                              l4831 0151  
                                            l4815 0000                                              l4807 0107  
                                            l4751 00A2                                              l4743 0000  
                                            l4735 0000                                              l4727 007D  
                                            l4719 0000                                              l5367 04B2  
                                            l4671 0000                                              l4497 0608  
                                            l4489 0607                                              l4585 06BE  
                                            l4577 0000                                              l4649 0000  
                                            l5289 0000                                              l4921 01C5  
                                            l4913 01B1                                              l4905 0000  
                                            l4841 016C                                              l4833 0158  
                                            l4825 012B                                              l4817 011A  
                                            l4761 00B1                                              l4681 0000  
                                            l4673 0000                                              l4499 064A  
                                            l4587 06C2                                              l4659 0000  
                                            l4667 0000                                              l4915 01BE  
                                            l4907 01AF                                              l4851 0183  
                                            l4755 0000                                              l4747 009F  
                                            l4739 0000                                              l4691 0000  
                                            l4683 0000                                              l4675 0000  
                                            l4589 06C5                                              l4669 0000  
                                            l4925 01C7                                              l4917 01C0  
                                            l4861 018C                                              l4853 0185  
                                            l4845 0175                                              l4837 0162  
                                            l4773 00C8                                              l4781 00D1  
                                            l4765 0000                                              l4757 00AF  
                                            l4749 0000                                              l4693 0040  
                                            l4685 0000                                              l4677 0000  
                                            l4927 01C9                                              l4863 018E  
                                            l4791 0000                                              l4775 00C9  
                                            l4767 00B8                                              l4759 0000  
                                            l4695 0000                                              l4687 0000  
                                            l4679 0000                                              _ADIE 046A  
                                            _ADIF 006A                                              l4937 01CF  
                                            l4873 0194                                              l4857 018A  
                                            l4849 017E                                              l4793 00E9  
                                            l4785 00D9                                              l4697 0000  
                                            l4689 0000                                              l4947 01D8  
                                            l4883 019A                                              l4787 00DD  
                                            l4779 0000                                              l4981 0210  
                                            l4957 01E1                                              l4893 01A0  
                                            l4789 0000                                              l4991 021C  
                                            l4983 0212                                              l4967 01F6  
                                            l4799 0000                                              l4993 021E  
                                            l4977 01FC                                              l4969 0000  
                                            l4987 021A                                              l4979 0208  
                                            _ADON 00F8                     startTwelveHourTimer@uiSetTime 0020  
                                            u2125 0141                                              u2135 014F  
                                            u1615 0602                                              u1625 0629  
                                            u1635 0615                                              _PEIE 005E  
                                            _main 0013                                              btemp 007E  
                         _clearTwentySecondsTimer 0700                                              start 0011  
                         ?_getAdOriginalCh14Value 0046                                 main@ucTimerDelay1 005D  
                               main@ucTimerDelay2 005E                                 main@ucTimerDelay3 005F  
                               main@ucTimerDelay4 0060                        ??_isFinishedTwentyMinTimer 0020  
                                           ??_ISR 0079                        __end_of_isPermitSampleTime 0F9F  
                                   main@bInitFlag 0051                               _sampleChannelSelect 006E  
                          ??_getAdOriginaCh4Value 0048                                             ?_main 0070  
                                           _DACR0 0088                                             _CLKPR 0108  
                                           _T1CON 0010                                   __end_of_adc_get 0542  
                                           _PBOD6 0C46                                             _PBOD7 0C47  
                                           _TMR1H 000F                                             _TMR1L 000E  
                           setAD_ConvertFlag@flag 0020                           _vPutSampleDataIntoTable 0542  
                                 __end_of_initPin 0788                                             _timer 00AE  
                                           pclath 000A                                             status 0003  
                                           wtemp0 007E                    __end_of_getAdOriginalCh14Value 05D8  
                   __size_of_startTwelveHourTimer 0014                              __end_of_clrSampeTime 0004  
                           __end_of_clearAllTimer 06F4                                      __end_of_main 04CF  
                          __size_of_adc_test_init 0015                                 __end_of_AD_Sample 06CA  
                                  main@bInit20Min 0050                                            ??_main 0048  
                            _clearPinPortAndTimer 06E2                                            _ADCON0 001F  
                                          _ADCON1 009F                              __end_of_clock_config 0FDC  
                                          _DACCON 0087                                            _ADRESH 001E  
                                          _ADRESL 009E                                            _CLKPCE 0847  
                                          i1l2554 0000                                            i1l4521 0000  
                                          i1l4601 0000                                            i1l1890 04EE  
                                          i1l4531 0554                                            i1l1795 0000  
                                          i1l1891 04F8                                            i1l4541 0000  
                                          i1l4525 0000                                            i1l4621 0000  
                                          i1l4605 0000                                            i1l4551 057E  
                                          i1l4543 0569                                            i1l4527 054E  
                                          i1l4519 0000                                            i1l4631 0000  
                                          i1l4615 0502                                            i1l4561 058A  
                                          i1l4553 0000                                            i1l4537 0000  
                                          i1l4529 0000                                            i1l4625 0516  
                                          i1l1889 04E4                                            i1l1898 052A  
                                          i1l4563 0000                                            i1l4555 0584  
                                          i1l4539 0563                                            i1l4635 0000  
                                          i1l4627 0000                                            i1l4619 0000  
                                          i1l4565 0000                                            i1l4549 0000  
                                          i1l4629 0521                                            i1l4595 0000  
                                          i1l4599 0000                                            u172_25 05A2  
                                __end_of_dac_init 0F99                         ??_clearTwentySecondsTimer 0020  
                                          _TMR1IE 0460                                            _TMR1IF 0060  
                               _getAD_ConvertFlag 06A3                                 _setAD_ConvertFlag 06A7  
                                          _TRISA0 0428                                            _TRISA1 0429  
                                          _TRISB0 0430                                            _TRISA2 042A  
                                          _TRISB1 0431                                            _TRISA3 042B  
                                          _TRISB2 0432                                            _TRISB3 0433  
                                          _TRISB4 0434                                            _TRISA6 042E  
                                          _TRISB5 0435                                            _TRISA7 042F  
                                          _TRISB6 0436                                            _TRISB7 0437  
                                   main@ucTimer1s 00B5                                ?_getAD_ConvertFlag 0070  
                                          _Filter 05D8                                ?_setAD_ConvertFlag 0070  
                                __end_of_op1_init 07FC                                  __end_of_op2_init 0FAC  
                     ??_isFinishedThreeHoursTimer 0020                     __size_of_clearThreeHoursTimer 0006  
                                       ??_adc_get 0072                               ??_getAD_ConvertFlag 0020  
                             ??_setAD_ConvertFlag 0020                                            _setPA0 0FB4  
                                          _setPA1 0FBC                                            _setPB0 0FE4  
                                          _setPA2 0FC4                                            _setPB1 0FAC  
                                          _setPA3 0FCC                                            _setPA6 0FED  
                     __end_of_clearTwentyMinTimer 0FA5                                            clrloop 0FDD  
                                Filter@filter_buf 0026                                  Filter@filter_sum 0040  
                                       ??_initPin 0020                           main@ucTimerDelayP2sLess 0061  
                         main@ucTimerDelayP2sMore 0062                         ??_vPutSampleDataIntoTable 0077  
                           ?_clearPinPortAndTimer 0070                                            saved_w 007E  
                         ??_clearTwelveHoursTimer 0020                       ?_process_AD_Converter_Value 0070  
                                   _adc_test_init 06CA                  __size_of_startTwentySecondsTimer 0011  
                       __end_of_getAD_ConvertFlag 06A7                         __end_of_setAD_ConvertFlag 06AC  
                              __size_of_adc_start 0003                  __end_of_isFinishedTwentyMinTimer 07F1  
                                  __pcstackCOMMON 0070                                      __pidataBANK0 0000  
                 __end_of_clearTwentySecondsTimer 0706                              _uiSampleChannelFirst 00BC  
                  vPutSampleDataIntoTable@channel 0076                               main@ucTimerRightP5s 0069  
                       _isFinishedThreeHoursTimer 07C1                           ??_getAdOriginalCh1Value 0048  
                           __end_of_timer1_config 1000                                    ?_adc_test_init 0020  
                     __end_of_startTwentyMinTimer 0775       vPutSampleDataIntoTable@ucChannelFirstLength 007D  
                __size_of_timer1_interrupt_config 0003                             __size_of_clrSampeTime 0002  
                                      __pbssBANK0 0048                                        __pbssBANK1 00A0  
                                      __pbssBANK3 0190                      __size_ofi1_setAD_ConvertFlag 0004  
                                      adc_get@val 0072                                  _uiTwentyMinTimer 00A4  
                 __end_of_vPutSampleDataIntoTable 05A5                                           ?_Filter 0020  
                                      __pmaintext 0013                                        __pintentry 0004  
                             main@enumInteralStep 00B0                                           ?_setPA0 0070  
                                         ?_setPA1 0070                                           ?_setPA2 0070  
                                         ?_setPB0 0070                                           ?_setPA3 0070  
                                         ?_setPB1 0070                                           ?_setPA6 0070  
                                       ?_dac_init 0070                            ??_clearPinPortAndTimer 0020  
                           __size_of_clock_config 0008                                           _OP1CON0 001B  
                                         _OP1CON1 001C                                           _OP1CON2 001D  
                                         _OP2CON0 009B                                           _OP2CON1 009C  
                                         _OP2CON2 009D                                      _clrSampeTime 0002  
                               __end_of_adc_start 06E2                              _uiTwentySecondsTimer 00A6  
                                       ?_op1_init 0070                                         ?_op2_init 0070  
                              _isPermitSampleTime 0F99                                           Filter@i 0045  
                                         Filter@j 0044                     __size_of_startThreeHoursTimer 0014  
                      __size_of_getAD_ConvertFlag 0004                        __size_of_setAD_ConvertFlag 0005  
                                  main@ucTimer20s 00B6                                    main@ucTimerP3s 00B9  
                                  main@ucTimerP5s 0068                               ?_isPermitSampleTime 0070  
                                  main@uiMaxValue 00A8                                    main@uiMinValue 00AA  
                                    setPA0@bValue 0020                                    main@uiOldValue 0048  
                                    setPA1@bValue 0020                                   __size_of_Filter 0097  
                                    setPA2@bValue 0020                                      setPB0@bValue 0020  
                                      _uiBigTimer 00A0                                      setPA3@bValue 0020  
                                    setPB1@bValue 0020                                      setPA6@bValue 0020  
                                    _clock_config 0FD4                                           _adc_get 0537  
                                 __size_of_setPA0 0008                                   __size_of_setPA1 0008  
                                 __size_of_setPB0 0009                                   __size_of_setPA2 0008  
                                 __size_of_setPB1 0008                                   __size_of_setPA3 0008  
                                 __size_of_setPA6 0009              __end_of_isFinishedTwentySecondsTimer 07D9  
           __size_of_isFinishedTwentySecondsTimer 000C                      _isFinishedTwentySecondsTimer 07CD  
                            ??_isPermitSampleTime 0020                      __end_of_startTwelveHourTimer 0761  
                                      ??_dac_init 0020                                         _AD_Sample 06AC  
                                    __size_of_ISR 0068                                           _initPin 0775  
                            _bSmallTimerStartFlag 004B                     __size_of_getAdOriginaCh4Value 000A  
                                 ??_adc_test_init 0021                 __size_of_isFinishedTwentyMinTimer 000C  
                                      ??_op1_init 0020                                        ??_op2_init 0020  
                       ?_isFinishedTwentyMinTimer 0070                           _startTwentySecondsTimer 0788  
                            end_of_initialization 0736                                 Filter@filter_temp 003E  
                                main@ucLoaderStep 0056                                        ?_AD_Sample 0070  
                   ?_isFinishedTwentySecondsTimer 0070                              main@enumMainLoopStep 0052  
                              main@ucChannel4Type 0054                      ??_isFinishedTwelveHoursTimer 0020  
                                       Filter@cir 0042                               _bTwentyMinStartFlag 004C  
                                _adc_convert_flag 00AD                            __size_of_clearAllTimer 0005  
                    __end_of_clearThreeHoursTimer 0700                            main@ucTimerADC1ZeroP5s 005B  
                  __size_of_clearTwelveHoursTimer 0006                           _timer1_interrupt_config 07FC  
                   __end_of_clearTwelveHoursTimer 06FA                          main@ucTimerForDACR0_CNT1 0063  
                        main@ucTimerForDACR0_CNT2 0065                __size_of_isFinishedThreeHoursTimer 000C  
                                main@ucTimerX1P5s 00BA                                  main@ucTimerX2P5s 00BB  
                          main@ucTimerZeroPoint3s 006A                            main@ucTimerZeroPoint5s 006B  
                                main@ucTimerDelay 005C                                    __end_of_Filter 066F  
                                 main@ucADC4_Step 0053                               _bTwentySecStartFlag 004D  
                   startTwentyMinTimer@uiSetValue 0020               __size_of_isFinishedTwelveHoursTimer 000C  
                        vPutSampleDataIntoTable@i 0077                               i1_setAD_ConvertFlag 05A5  
                                  __end_of_setPA0 0FBC                                    __end_of_setPA1 0FC4  
                                  __end_of_setPB0 0FED                                    __end_of_setPA2 0FCC  
                                  __end_of_setPB1 0FB4                                    __end_of_setPA3 0FD4  
                                  __end_of_setPA6 0FF6                         ??_startTwentySecondsTimer 0020  
                             start_initialization 0720                                       __end_of_ISR 0537  
                            main@ucTimerLessX1P5s 00B7                              main@ucTimerLessX2P5s 00B8  
                           _uiSampleChannelFourth 00D4                          ?_clearTwentySecondsTimer 0070  
                  __size_of_getAdOriginalCh1Value 000A                     __end_of_getAdOriginalCh1Value 05CD  
                        ??_getAdOriginalCh14Value 0048                      __size_of_clearTwentyMinTimer 0006  
                            ?i1_setAD_ConvertFlag 0070                              _startTwelveHourTimer 074D  
               __end_of_isFinishedThreeHoursTimer 07CD                                main@enumBranchStep 00AF  
                                        ??_Filter 0022                                     _clearAllTimer 06EF  
                                     __pdataBANK0 006E                                          ??_setPA0 0020  
                                        ??_setPA1 0020                                          ??_setPA2 0020  
                                        ??_setPB0 0020                                          ??_setPA3 0020  
                                        ??_setPB1 0020                                          ??_setPA6 0020  
                        ?_vPutSampleDataIntoTable 0074                        main@ucDelayPrefix4TimerP5s 0055  
                                     ??_AD_Sample 0020                         ??_timer1_interrupt_config 0020  
                      main@ucDelayPrefix6TimerP2s 00B3                                       __pbssCOMMON 007D  
                               __size_of_dac_init 0005                                     __pcstackBANK0 0020  
                  ??_isFinishedTwentySecondsTimer 0020                                         _adc_start 06DF  
                               __size_of_op1_init 000B                                 __size_of_op2_init 0007  
                           ??i1_setAD_ConvertFlag 0070                             ?_startTwelveHourTimer 0020  
                 __end_of_startTwentySecondsTimer 0799                      __size_of_startTwentyMinTimer 0014  
                                  ?_clearAllTimer 0070                            __size_of_timer1_config 000A  
                            _clearThreeHoursTimer 06FA                      __end_of_startThreeHoursTimer 074D  
                                       __ptext900 06DF                                         __ptext901 0FA5  
                                       __ptext910 0FC4                                         __ptext902 07F1  
                                       __ptext911 0FBC                                         __ptext903 0F94  
                                       __ptext920 05A5                                         __ptext912 0FB4  
                                       __ptext904 06CA                                         __ptext921 0537  
                                       __ptext913 0FAC                                         __ptext905 07FC  
                                       __ptext922 0542                                         __ptext914 0FE4  
                                       __ptext906 0FF6                                         __ptext923 0000  
                                       __ptext915 0775                                         __ptext907 0FD4  
                                       __ptext916 0700                                         __ptext908 0FED  
                                       __ptext917 06FA                                         __ptext909 0FCC  
                                       __ptext918 06F4                                         __ptext919 04CF  
                                       __ptext880 05B9                                         __ptext881 05C3  
                                       __ptext890 0739                                         __ptext882 05CD  
                                       __ptext891 07CD                                         __ptext883 0685  
                                       __ptext892 0788                                         __ptext884 06EF  
                                       __ptext893 07D9                                         __ptext885 06AC  
                                       __ptext894 074D                                         __ptext886 06A7  
                                       __ptext895 07E5                                         __ptext887 06A3  
                                       __ptext879 06E2                                         __ptext896 0F9F  
                                       __ptext888 05D8                                         __ptext897 0761  
                                       __ptext889 07C1                                         __ptext898 0002  
                                       __ptext899 0F99                                          ?_adc_get 0070  
                                       __pswtext1 0799                                         __pswtext2 07A7  
                                       __pswtext3 07B5                                         __pswtext4 0706  
              __end_of_isFinishedTwelveHoursTimer 07E5                        _isFinishedTwelveHoursTimer 07D9  
                                 ISR@ucTimer1sCnt 00AC                                          ?_initPin 0070  
                   __size_of_clearPinPortAndTimer 000D                         _uiSampleChannelFourteenth 0190  
                                      ?_adc_start 0070                   __size_of_getAdOriginalCh14Value 000B  
                               interrupt_function 0004                      __end_of_getAdOriginaCh4Value 05C3  
                 __end_of_timer1_interrupt_config 07FF                        main@ucTimerLessADC1ZeroP5s 0067  
                           ?_clearThreeHoursTimer 0070                              adc_test_init@channel 0022  
             vPutSampleDataIntoTable@uiSampleData 0074      vPutSampleDataIntoTable@ucChannelFourthLength 006D  
                     __size_of_isPermitSampleTime 0006                                      _uiSmallTimer 00A2  
                           __end_of_adc_test_init 06DF                                     _timer1_config 0FF6  
                    ??_process_AD_Converter_Value 0023                            ??_startTwelveHourTimer 0022  
                                 ??_clearAllTimer 0020                       main@ucFourthSuffix1TimerP3s 00B4  
                          _getAdOriginalCh14Value 05CD                               _clearTwentyMinTimer 0F9F  
                                __size_of_adc_get 000B               __size_of_process_AD_Converter_Value 001E  
                                        _dac_init 0F94                          _isFinishedTwentyMinTimer 07E5  
vPutSampleDataIntoTable@ucChannelFourteenthLength 006C                        main@ucTimerForDACR0_CNT1_f 0064  
                      main@ucTimerForDACR0_CNT2_f 0066                                  __size_of_initPin 0013  
                                  Filter@tmpValue 0020                                    ?_timer1_config 0070  
                                        _op1_init 07F1                                          _op2_init 0FA5  
                            ?_clearTwentyMinTimer 0070                                       ??_adc_start 0020  
                            _startThreeHoursTimer 0739                             _clearTwelveHoursTimer 06F4  
                                   __size_of_main 04BC                                          clear_ram 0FDC  
                          ??_clearThreeHoursTimer 0020                  __size_of_clearTwentySecondsTimer 0006  
                                   ?_clrSampeTime 0070                               _startTwentyMinTimer 0761  
                            _getAdOriginaCh4Value 05B9                                       _sampleTimes 004E  
                           ??_clearTwentyMinTimer 0020                             ?_startThreeHoursTimer 0020  
                __size_of_vPutSampleDataIntoTable 0063                                          intlevel1 0000  
                           _getAdOriginalCh1Value 05C3                              ?_startTwentyMinTimer 0020  
                      ?_isFinishedThreeHoursTimer 0070                                 main@ucLoaderStep1 0057  
                               main@ucLoaderStep2 0058                                 main@ucLoaderStep3 0059  
                               main@ucLoaderStep4 005A                                     ?_clock_config 0070  
                        ?_startTwentySecondsTimer 0070                     startThreeHoursTimer@uiSetTime 0020  
                         i1setAD_ConvertFlag@flag 0070                                    ??_clrSampeTime 0020  
                     ?_isFinishedTwelveHoursTimer 0070                                _bBigTimerStartFlag 004A  
                           ?_getAdOriginaCh4Value 0046                                   ??_timer1_config 0020  
                               main@bCheckTweHour 004F                       __end_ofi1_setAD_ConvertFlag 05A9  
              __end_of_process_AD_Converter_Value 06A3                        _process_AD_Converter_Value 0685  
                          ?_clearTwelveHoursTimer 0070                           main@ucCheckTimerP2sLess 00B1  
                         main@ucCheckTimerP2sMore 00B2                                  adc_test_init@ref 0020  
                           ??_startTwentyMinTimer 0022                      __end_of_clearPinPortAndTimer 06EF  
