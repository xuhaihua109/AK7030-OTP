

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Sun Oct 27 23:33:09 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,delta=2
    15                           	psect	text787,local,class=CODE,delta=2
    16                           	psect	text788,local,class=CODE,delta=2
    17                           	psect	text789,local,class=CODE,delta=2
    18                           	psect	text790,local,class=CODE,delta=2
    19                           	psect	text795,local,class=CODE,delta=2
    20                           	psect	text796,local,class=CODE,delta=2
    21                           	psect	text797,local,class=CODE,delta=2
    22                           	psect	text798,local,class=CODE,delta=2
    23                           	psect	text799,local,class=CODE,delta=2
    24                           	psect	text800,local,class=CODE,delta=2
    25                           	psect	text801,local,class=CODE,delta=2
    26                           	psect	text802,local,class=CODE,delta=2
    27                           	psect	text803,local,class=CODE,delta=2
    28                           	psect	text804,local,class=CODE,delta=2
    29                           	psect	text805,local,class=CODE,delta=2
    30                           	psect	text808,local,class=CODE,delta=2
    31                           	psect	text809,local,class=CODE,delta=2
    32                           	psect	text810,local,class=CODE,delta=2
    33                           	psect	text811,local,class=CODE,delta=2
    34                           	psect	text812,local,class=CODE,delta=2
    35                           	psect	text813,local,class=CODE,delta=2
    36                           	psect	text814,local,class=CODE,delta=2
    37                           	psect	text822,local,class=CODE,delta=2
    38                           	psect	text823,local,class=CODE,delta=2
    39                           	psect	text824,local,class=CODE,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	text828,local,class=CODE,delta=2
    42                           	psect	pa_nodes,global,class=CODE,delta=2
    43                           	dabs	1,0x7E,2
    44  000A                     	;#
    45                           
    46                           	psect	config
    47  2000  2FFF               	dw	12287	;#
    48  2001  3FDE               	dw	16350	;#
    49  2002  3FF8               	dw	16376	;#
    50                           
    51                           	psect	idataBANK0
    52  0000                     __pidataBANK0:	
    53  001F                     _ADCON0	set	31
    54  001E                     _ADRESH	set	30
    55  0017                     _CCP1CON	set	23
    56  0015                     _CCPR1L	set	21
    57  0010                     _T1CON	set	16
    58  0012                     _T2CON	set	18
    59  000F                     _TMR1H	set	15
    60  000E                     _TMR1L	set	14
    61  006A                     _ADIF	set	106
    62  00F8                     _ADON	set	248
    63  005F                     _GIE	set	95
    64  00F9                     _GO	set	249
    65  0032                     _PB2	set	50
    66  0033                     _PB3	set	51
    67  0034                     _PB4	set	52
    68  0035                     _PB5	set	53
    69  005E                     _PEIE	set	94
    70  0060                     _TMR1IF	set	96
    71  009F                     _ADCON1	set	159
    72  009E                     _ADRESL	set	158
    73  0092                     _PR2	set	146
    74  0096                     _PWMCON1	set	150
    75  046A                     _ADIE	set	1130
    76  0460                     _TMR1IE	set	1120
    77  0430                     _TRISB0	set	1072
    78  0431                     _TRISB1	set	1073
    79  0432                     _TRISB2	set	1074
    80  0433                     _TRISB3	set	1075
    81  0434                     _TRISB4	set	1076
    82  0435                     _TRISB5	set	1077
    83  0108                     _CLKPR	set	264
    84  0847                     _CLKPCE	set	2119
    85  0C42                     _PBOD2	set	3138
    86                           
    87                           	psect	cinit
    88  03BA                     start_initialization:	
    89  03BA  3049               	movlw	low __pbssBANK0
    90                           
    91                           ; Clear objects allocated to COMMON
    92  03BB  01FD               	clrf	__pbssCOMMON& (0+127)
    93                           
    94                           ; Clear objects allocated to BANK0
    95  03BC  1383               	bcf	3,7	;select IRP bank0
    96  03BD  0084               	movwf	4
    97  03BE  3069               	movlw	low (__pbssBANK0+32)
    98  03BF  118A  2447  118A   	fcall	clear_ram
    99                           
   100                           ; Clear objects allocated to BANK1
   101  03C2  30A0               	movlw	low __pbssBANK1
   102  03C3  0084               	movwf	4
   103  03C4  30E8               	movlw	low (__pbssBANK1+72)
   104  03C5  118A  2447         	fcall	clear_ram
   105                           
   106                           ;initializer for _sampleChannelSelect
   107  03C7  300C               	movlw	12
   108  03C8  00E9               	movwf	__pdataBANK0& (0+127)
   109  03C9                     end_of_initialization:	
   110                           ;End of C runtime variable initialization code
   111                           
   112  03C9  0183               	clrf	3
   113  03CA  118A  2813         	ljmp	_main	;jump to C main() function
   114                           
   115                           	psect	bssCOMMON
   116  007D                     __pbssCOMMON:	
   117  007D                     vPutSampleDataIntoTable@ucChannelFirstLength:	
   118  007D                     	ds	1
   119                           
   120                           	psect	bssBANK0
   121  0049                     __pbssBANK0:	
   122  0049                     _uiBigTimer:	
   123  0049                     	ds	2
   124  004B                     _uiOneHourTimer:	
   125  004B                     	ds	2
   126  004D                     _uiSmallTimer:	
   127  004D                     	ds	2
   128  004F                     _uiTwentyMinTimer:	
   129  004F                     	ds	2
   130  0051                     _uiTwentySecondsTimer:	
   131  0051                     	ds	2
   132  0053                     main@uiTimerOneP5s:	
   133  0053                     	ds	2
   134  0055                     main@uiTimerP5s:	
   135  0055                     	ds	2
   136  0057                     main@uiTimerTwoP5s:	
   137  0057                     	ds	2
   138  0059                     ISR@ucTimer1sCnt:	
   139  0059                     	ds	1
   140  005A                     _adc_convert_flag:	
   141  005A                     	ds	1
   142  005B                     _bBigTimerStartFlag:	
   143  005B                     	ds	1
   144  005C                     _bOneHourTimerStartFlag:	
   145  005C                     	ds	1
   146  005D                     _bSmallTimerStartFlag:	
   147  005D                     	ds	1
   148  005E                     _bTwentyMinStartFlag:	
   149  005E                     	ds	1
   150  005F                     _sampleTimes:	
   151  005F                     	ds	1
   152  0060                     _timer:	
   153  0060                     	ds	1
   154  0061                     main@cTimerP5s_776:	
   155  0061                     	ds	1
   156  0062                     main@cTimerP5s_780:	
   157  0062                     	ds	1
   158  0063                     main@ucDebug1:	
   159  0063                     	ds	1
   160  0064                     main@ucDebug2:	
   161  0064                     	ds	1
   162  0065                     main@ucStep:	
   163  0065                     	ds	1
   164  0066                     main@ucTimerP5s:	
   165  0066                     	ds	1
   166  0067                     vPutSampleDataIntoTable@ucChannelFourteenthLength:	
   167  0067                     	ds	1
   168  0068                     vPutSampleDataIntoTable@ucChannelFourthLength:	
   169  0068                     	ds	1
   170                           
   171                           	psect	dataBANK0
   172  0069                     __pdataBANK0:	
   173  0069                     _sampleChannelSelect:	
   174  0069                     	ds	1
   175                           
   176                           	psect	bssBANK1
   177  00A0                     __pbssBANK1:	
   178  00A0                     _uiSampleChannelFirst:	
   179  00A0                     	ds	24
   180  00B8                     _uiSampleChannelFourteenth:	
   181  00B8                     	ds	24
   182  00D0                     _uiSampleChannelFourth:	
   183  00D0                     	ds	24
   184                           
   185                           	psect	clrtext
   186  0447                     clear_ram:	
   187                           ;	Called with FSR containing the base address, and
   188                           ;	W with the last address+1
   189                           
   190  0447  0064               	clrwdt	;clear the watchdog before getting into this loop
   191  0448                     clrloop:	
   192  0448  0180               	clrf	0	;clear RAM location pointed to by FSR
   193  0449  0A84               	incf	4,f	;increment pointer
   194  044A  0604               	xorwf	4,w	;XOR with final address
   195  044B  1903               	btfsc	3,2	;have we reached the end yet?
   196  044C  3400               	retlw	0	;all done for this memory range, return
   197  044D  0604               	xorwf	4,w	;XOR again to restore value
   198  044E  2C48               	goto	clrloop	;do the next byte
   199                           
   200                           	psect	cstackCOMMON
   201  0070                     __pcstackCOMMON:	
   202  0070                     ?_clearTwelveHoursTimer:	
   203  0070                     ?_clearThreeHoursTimer:	
   204                           ; 0 bytes @ 0x0
   205                           
   206  0070                     ?_clock_config:	
   207                           ; 0 bytes @ 0x0
   208                           
   209  0070                     ?_timer1_config:	
   210                           ; 0 bytes @ 0x0
   211                           
   212  0070                     ?_timer1_interrupt_config:	
   213                           ; 0 bytes @ 0x0
   214                           
   215  0070                     ?_adc_start:	
   216                           ; 0 bytes @ 0x0
   217                           
   218  0070                     ?_process_AD_Converter_Value:	
   219                           ; 0 bytes @ 0x0
   220                           
   221  0070                     ?_clrSampeTime:	
   222                           ; 0 bytes @ 0x0
   223                           
   224  0070                     ?_clearTwentyMinTimer:	
   225                           ; 0 bytes @ 0x0
   226                           
   227  0070                     ?_AD_Sample:	
   228                           ; 0 bytes @ 0x0
   229                           
   230  0070                     ?_initPB3:	
   231                           ; 0 bytes @ 0x0
   232                           
   233  0070                     ?_setPB3:	
   234                           ; 0 bytes @ 0x0
   235                           
   236  0070                     ?_initPB4:	
   237                           ; 0 bytes @ 0x0
   238                           
   239  0070                     ?_setPB4:	
   240                           ; 0 bytes @ 0x0
   241                           
   242  0070                     ?_initPB5:	
   243                           ; 0 bytes @ 0x0
   244                           
   245  0070                     ?_setPB5:	
   246                           ; 0 bytes @ 0x0
   247                           
   248  0070                     ?_initPB2_AsHighResistence:	
   249                           ; 0 bytes @ 0x0
   250                           
   251  0070                     ?_pwm_start:	
   252                           ; 0 bytes @ 0x0
   253                           
   254  0070                     ?_initPin:	
   255                           ; 0 bytes @ 0x0
   256                           
   257  0070                     ?_setPinInitVaule:	
   258                           ; 0 bytes @ 0x0
   259                           
   260  0070                     ?_selectAdChannel:	
   261                           ; 0 bytes @ 0x0
   262                           
   263  0070                     ?_setPulseWidth:	
   264                           ; 0 bytes @ 0x0
   265                           
   266  0070                     ?_reset:	
   267                           ; 0 bytes @ 0x0
   268                           
   269  0070                     ?_main:	
   270                           ; 0 bytes @ 0x0
   271                           
   272  0070                     ?_setAD_ConvertFlag:	
   273                           ; 0 bytes @ 0x0
   274                           
   275  0070                     ?_ISR:	
   276                           ; 0 bytes @ 0x0
   277                           
   278  0070                     ?i1_setAD_ConvertFlag:	
   279                           ; 0 bytes @ 0x0
   280                           
   281  0070                     ??i1_setAD_ConvertFlag:	
   282                           ; 0 bytes @ 0x0
   283                           
   284  0070                     ?_isPermitSampleTime:	
   285                           ; 0 bytes @ 0x0
   286                           
   287  0070                     ?_isFinishedTwentyMinTimer:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0070                     ?_isFinishedTwelveHoursTimer:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0070                     ?_isFinishedThreeHoursTimer:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0070                     ?_isFinishedOneHoursTimer:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0070                     ?_getAD_ConvertFlag:	
   300                           ; 1 bytes @ 0x0
   301                           
   302  0070                     ?_adc_get:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0070                     i1setAD_ConvertFlag@flag:	
   306                           ; 2 bytes @ 0x0
   307                           
   308                           
   309                           ; 1 bytes @ 0x0
   310  0070                     	ds	2
   311  0072                     ??_adc_get:	
   312  0072                     adc_get@val:	
   313                           ; 0 bytes @ 0x2
   314                           
   315                           
   316                           ; 2 bytes @ 0x2
   317  0072                     	ds	2
   318  0074                     ?_vPutSampleDataIntoTable:	
   319  0074                     vPutSampleDataIntoTable@uiSampleData:	
   320                           ; 0 bytes @ 0x4
   321                           
   322                           
   323                           ; 2 bytes @ 0x4
   324  0074                     	ds	2
   325  0076                     vPutSampleDataIntoTable@channel:	
   326                           
   327                           ; 1 bytes @ 0x6
   328  0076                     	ds	1
   329  0077                     ??_vPutSampleDataIntoTable:	
   330  0077                     vPutSampleDataIntoTable@i:	
   331                           ; 0 bytes @ 0x7
   332                           
   333                           
   334                           ; 2 bytes @ 0x7
   335  0077                     	ds	2
   336  0079                     ??_ISR:	
   337                           
   338                           ; 0 bytes @ 0x9
   339  0079                     	ds	4
   340                           
   341                           	psect	cstackBANK0
   342  0020                     __pcstackBANK0:	
   343  0020                     ??_clearTwelveHoursTimer:	
   344  0020                     ??_clearThreeHoursTimer:	
   345                           ; 0 bytes @ 0x0
   346                           
   347  0020                     ??_clock_config:	
   348                           ; 0 bytes @ 0x0
   349                           
   350  0020                     ??_timer1_config:	
   351                           ; 0 bytes @ 0x0
   352                           
   353  0020                     ??_timer1_interrupt_config:	
   354                           ; 0 bytes @ 0x0
   355                           
   356  0020                     ?_adc_test_init:	
   357                           ; 0 bytes @ 0x0
   358                           
   359  0020                     ??_adc_start:	
   360                           ; 0 bytes @ 0x0
   361                           
   362  0020                     ?_startTwentyMinTimer:	
   363                           ; 0 bytes @ 0x0
   364                           
   365  0020                     ??_isPermitSampleTime:	
   366                           ; 0 bytes @ 0x0
   367                           
   368  0020                     ??_clrSampeTime:	
   369                           ; 0 bytes @ 0x0
   370                           
   371  0020                     ??_isFinishedTwentyMinTimer:	
   372                           ; 0 bytes @ 0x0
   373                           
   374  0020                     ??_clearTwentyMinTimer:	
   375                           ; 0 bytes @ 0x0
   376                           
   377  0020                     ?_startTwelveHourTimer:	
   378                           ; 0 bytes @ 0x0
   379                           
   380  0020                     ??_isFinishedTwelveHoursTimer:	
   381                           ; 0 bytes @ 0x0
   382                           
   383  0020                     ?_startThreeHoursTimer:	
   384                           ; 0 bytes @ 0x0
   385                           
   386  0020                     ??_isFinishedThreeHoursTimer:	
   387                           ; 0 bytes @ 0x0
   388                           
   389  0020                     ?_startOneHoursTimer:	
   390                           ; 0 bytes @ 0x0
   391                           
   392  0020                     ??_isFinishedOneHoursTimer:	
   393                           ; 0 bytes @ 0x0
   394                           
   395  0020                     ??_AD_Sample:	
   396                           ; 0 bytes @ 0x0
   397                           
   398  0020                     ??_initPB3:	
   399                           ; 0 bytes @ 0x0
   400                           
   401  0020                     ??_setPB3:	
   402                           ; 0 bytes @ 0x0
   403                           
   404  0020                     ??_initPB4:	
   405                           ; 0 bytes @ 0x0
   406                           
   407  0020                     ??_setPB4:	
   408                           ; 0 bytes @ 0x0
   409                           
   410  0020                     ??_initPB5:	
   411                           ; 0 bytes @ 0x0
   412                           
   413  0020                     ??_setPB5:	
   414                           ; 0 bytes @ 0x0
   415                           
   416  0020                     ??_initPB2_AsHighResistence:	
   417                           ; 0 bytes @ 0x0
   418                           
   419  0020                     ??_pwm_start:	
   420                           ; 0 bytes @ 0x0
   421                           
   422  0020                     ??_selectAdChannel:	
   423                           ; 0 bytes @ 0x0
   424                           
   425  0020                     ??_setPulseWidth:	
   426                           ; 0 bytes @ 0x0
   427                           
   428  0020                     ??_reset:	
   429                           ; 0 bytes @ 0x0
   430                           
   431  0020                     ??_getAD_ConvertFlag:	
   432                           ; 0 bytes @ 0x0
   433                           
   434  0020                     ??_setAD_ConvertFlag:	
   435                           ; 0 bytes @ 0x0
   436                           
   437  0020                     ?_Filter:	
   438                           ; 0 bytes @ 0x0
   439                           
   440  0020                     initPB3@bValue:	
   441                           ; 2 bytes @ 0x0
   442                           
   443  0020                     setPB3@bValue:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0020                     initPB4@bValue:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0020                     setPB4@bValue:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0020                     initPB5@bValue:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0020                     setPB5@bValue:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0020                     setAD_ConvertFlag@flag:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0020                     adc_test_init@ref:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0020                     startTwelveHourTimer@uiSetTime:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  0020                     startThreeHoursTimer@uiSetTime:	
   468                           ; 2 bytes @ 0x0
   469                           
   470  0020                     startOneHoursTimer@uiSetTime:	
   471                           ; 2 bytes @ 0x0
   472                           
   473  0020                     startTwentyMinTimer@uiSetValue:	
   474                           ; 2 bytes @ 0x0
   475                           
   476                           
   477                           ; 2 bytes @ 0x0
   478  0020                     	ds	1
   479  0021                     ??_adc_test_init:	
   480  0021                     ??_initPin:	
   481                           ; 0 bytes @ 0x1
   482                           
   483  0021                     ??_setPinInitVaule:	
   484                           ; 0 bytes @ 0x1
   485                           
   486                           
   487                           ; 0 bytes @ 0x1
   488  0021                     	ds	1
   489  0022                     ??_startTwentyMinTimer:	
   490  0022                     ??_startTwelveHourTimer:	
   491                           ; 0 bytes @ 0x2
   492                           
   493  0022                     ??_startThreeHoursTimer:	
   494                           ; 0 bytes @ 0x2
   495                           
   496  0022                     ??_startOneHoursTimer:	
   497                           ; 0 bytes @ 0x2
   498                           
   499  0022                     ??_Filter:	
   500                           ; 0 bytes @ 0x2
   501                           
   502  0022                     adc_test_init@channel:	
   503                           ; 0 bytes @ 0x2
   504                           
   505                           
   506                           ; 1 bytes @ 0x2
   507  0022                     	ds	1
   508  0023                     ??_process_AD_Converter_Value:	
   509                           
   510                           ; 0 bytes @ 0x3
   511  0023                     	ds	3
   512  0026                     Filter@filter_buf:	
   513                           
   514                           ; 24 bytes @ 0x6
   515  0026                     	ds	24
   516  003E                     Filter@filter_temp:	
   517                           
   518                           ; 2 bytes @ 0x1E
   519  003E                     	ds	2
   520  0040                     Filter@filter_sum:	
   521                           
   522                           ; 2 bytes @ 0x20
   523  0040                     	ds	2
   524  0042                     Filter@tmpValue:	
   525                           
   526                           ; 1 bytes @ 0x22
   527  0042                     	ds	1
   528  0043                     Filter@cir:	
   529                           
   530                           ; 2 bytes @ 0x23
   531  0043                     	ds	2
   532  0045                     Filter@j:	
   533                           
   534                           ; 1 bytes @ 0x25
   535  0045                     	ds	1
   536  0046                     Filter@i:	
   537                           
   538                           ; 1 bytes @ 0x26
   539  0046                     	ds	1
   540  0047                     ?_getAdOriginalCh13Value:	
   541                           
   542                           ; 2 bytes @ 0x27
   543  0047                     	ds	2
   544  0049                     ??_getAdOriginalCh13Value:	
   545  0049                     ??_main:	
   546                           ; 0 bytes @ 0x29
   547                           
   548                           
   549                           	psect	maintext
   550  0013                     __pmaintext:	
   551                           ; 0 bytes @ 0x29
   552 ;;Data sizes: Strings 0, constant 0, data 1, bss 105, persistent 0 stack 0
   553 ;;Auto spaces:   Size  Autos    Used
   554 ;; COMMON          14     13      14
   555 ;; BANK0           80     41      74
   556 ;; BANK1           80      0      72
   557 ;; BANK3           96      0       0
   558 ;; BANK2           96      0       0
   559 ;;
   560 ;; Pointer list with targets:
   561 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   562 ;;
   563 ;; ?_getAdOriginalCh13Value	unsigned int  size(1) Largest target is 0
   564 ;;
   565 ;; ?_Filter	unsigned int  size(1) Largest target is 0
   566 ;;
   567 ;; Filter@tmpValue	PTR int  size(1) Largest target is 24
   568 ;;		 -> uiSampleChannelFourteenth(BANK1[24]), uiSampleChannelFourth(BANK1[24]), uiSampleChannelFirst(BANK1[24]), 
   569 ;;
   570 ;;
   571 ;; Critical Paths under _main in COMMON
   572 ;;
   573 ;;   None.
   574 ;;
   575 ;; Critical Paths under _ISR in COMMON
   576 ;;
   577 ;;   _ISR->_vPutSampleDataIntoTable
   578 ;;   _vPutSampleDataIntoTable->_adc_get
   579 ;;
   580 ;; Critical Paths under _main in BANK0
   581 ;;
   582 ;;   _main->_getAdOriginalCh13Value
   583 ;;   _getAdOriginalCh13Value->_Filter
   584 ;;   _process_AD_Converter_Value->_adc_test_init
   585 ;;   _setPinInitVaule->_setPB3
   586 ;;   _setPinInitVaule->_setPB4
   587 ;;   _setPinInitVaule->_setPB5
   588 ;;   _initPin->_initPB3
   589 ;;   _initPin->_initPB4
   590 ;;   _initPin->_initPB5
   591 ;;
   592 ;; Critical Paths under _ISR in BANK0
   593 ;;
   594 ;;   None.
   595 ;;
   596 ;; Critical Paths under _main in BANK1
   597 ;;
   598 ;;   None.
   599 ;;
   600 ;; Critical Paths under _ISR in BANK1
   601 ;;
   602 ;;   None.
   603 ;;
   604 ;; Critical Paths under _main in BANK3
   605 ;;
   606 ;;   None.
   607 ;;
   608 ;; Critical Paths under _ISR in BANK3
   609 ;;
   610 ;;   None.
   611 ;;
   612 ;; Critical Paths under _main in BANK2
   613 ;;
   614 ;;   None.
   615 ;;
   616 ;; Critical Paths under _ISR in BANK2
   617 ;;
   618 ;;   None.
   619 ;;
   620 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   621 ;;
   622 ;;
   623 ;;Call Graph Tables:
   624 ;;
   625 ;; ---------------------------------------------------------------------------------
   626 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   627 ;; ---------------------------------------------------------------------------------
   628 ;; (0) _main                                                 0     0      0    1016
   629 ;;                            _initPin
   630 ;;                    _setPinInitVaule
   631 ;;                    _selectAdChannel
   632 ;;                       _clock_config
   633 ;;                      _timer1_config
   634 ;;            _timer1_interrupt_config
   635 ;;                      _adc_test_init
   636 ;;                          _adc_start
   637 ;;                _startTwentyMinTimer
   638 ;;         _process_AD_Converter_Value
   639 ;;                 _isPermitSampleTime
   640 ;;                       _clrSampeTime
   641 ;;           _isFinishedTwentyMinTimer
   642 ;;             _getAdOriginalCh13Value
   643 ;;                             _setPB3
   644 ;;                          _pwm_start
   645 ;;                      _setPulseWidth
   646 ;;                             _setPB4
   647 ;;                             _setPB5
   648 ;;                _clearTwentyMinTimer
   649 ;;               _startTwelveHourTimer
   650 ;;         _isFinishedTwelveHoursTimer
   651 ;;              _clearTwelveHoursTimer
   652 ;;               _startThreeHoursTimer
   653 ;;          _isFinishedThreeHoursTimer
   654 ;;               _clearThreeHoursTimer
   655 ;;                 _startOneHoursTimer
   656 ;;            _isFinishedOneHoursTimer
   657 ;;                              _reset
   658 ;; ---------------------------------------------------------------------------------
   659 ;; (1) _getAdOriginalCh13Value                               2     0      2     620
   660 ;;                                             39 BANK0      2     0      2
   661 ;;                             _Filter
   662 ;; ---------------------------------------------------------------------------------
   663 ;; (1) _process_AD_Converter_Value                           0     0      0      66
   664 ;;                  _getAD_ConvertFlag
   665 ;;                  _setAD_ConvertFlag
   666 ;;                          _AD_Sample
   667 ;;                      _adc_test_init
   668 ;;                          _adc_start
   669 ;; ---------------------------------------------------------------------------------
   670 ;; (1) _setPinInitVaule                                      0     0      0      66
   671 ;;                             _setPB3
   672 ;;                             _setPB4
   673 ;;                             _setPB5
   674 ;; ---------------------------------------------------------------------------------
   675 ;; (1) _initPin                                              0     0      0      66
   676 ;;           _initPB2_AsHighResistence
   677 ;;                            _initPB3
   678 ;;                            _initPB4
   679 ;;                            _initPB5
   680 ;; ---------------------------------------------------------------------------------
   681 ;; (2) _AD_Sample                                            0     0      0       0
   682 ;; ---------------------------------------------------------------------------------
   683 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   684 ;;                                              0 BANK0      1     1      0
   685 ;; ---------------------------------------------------------------------------------
   686 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   687 ;; ---------------------------------------------------------------------------------
   688 ;; (2) _Filter                                              39    37      2     620
   689 ;;                                              0 BANK0     39    37      2
   690 ;; ---------------------------------------------------------------------------------
   691 ;; (1) _isFinishedOneHoursTimer                              0     0      0       0
   692 ;; ---------------------------------------------------------------------------------
   693 ;; (1) _startOneHoursTimer                                   2     0      2      22
   694 ;;                                              0 BANK0      2     0      2
   695 ;; ---------------------------------------------------------------------------------
   696 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   697 ;; ---------------------------------------------------------------------------------
   698 ;; (1) _startThreeHoursTimer                                 2     0      2      22
   699 ;;                                              0 BANK0      2     0      2
   700 ;; ---------------------------------------------------------------------------------
   701 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   702 ;; ---------------------------------------------------------------------------------
   703 ;; (1) _startTwelveHourTimer                                 2     0      2      22
   704 ;;                                              0 BANK0      2     0      2
   705 ;; ---------------------------------------------------------------------------------
   706 ;; (1) _clearTwentyMinTimer                                  0     0      0       0
   707 ;; ---------------------------------------------------------------------------------
   708 ;; (1) _isFinishedTwentyMinTimer                             0     0      0       0
   709 ;; ---------------------------------------------------------------------------------
   710 ;; (1) _clrSampeTime                                         0     0      0       0
   711 ;; ---------------------------------------------------------------------------------
   712 ;; (1) _isPermitSampleTime                                   0     0      0       0
   713 ;; ---------------------------------------------------------------------------------
   714 ;; (1) _startTwentyMinTimer                                  2     0      2      22
   715 ;;                                              0 BANK0      2     0      2
   716 ;; ---------------------------------------------------------------------------------
   717 ;; (2) _adc_start                                            0     0      0       0
   718 ;; ---------------------------------------------------------------------------------
   719 ;; (2) _adc_test_init                                        3     2      1      44
   720 ;;                                              0 BANK0      3     2      1
   721 ;; ---------------------------------------------------------------------------------
   722 ;; (1) _timer1_interrupt_config                              0     0      0       0
   723 ;; ---------------------------------------------------------------------------------
   724 ;; (1) _timer1_config                                        0     0      0       0
   725 ;; ---------------------------------------------------------------------------------
   726 ;; (1) _clock_config                                         0     0      0       0
   727 ;; ---------------------------------------------------------------------------------
   728 ;; (1) _reset                                                0     0      0       0
   729 ;; ---------------------------------------------------------------------------------
   730 ;; (1) _setPulseWidth                                        0     0      0       0
   731 ;; ---------------------------------------------------------------------------------
   732 ;; (1) _selectAdChannel                                      0     0      0       0
   733 ;; ---------------------------------------------------------------------------------
   734 ;; (1) _pwm_start                                            0     0      0       0
   735 ;; ---------------------------------------------------------------------------------
   736 ;; (2) _initPB2_AsHighResistence                             0     0      0       0
   737 ;; ---------------------------------------------------------------------------------
   738 ;; (1) _setPB5                                               1     1      0      22
   739 ;;                                              0 BANK0      1     1      0
   740 ;; ---------------------------------------------------------------------------------
   741 ;; (2) _initPB5                                              1     1      0      22
   742 ;;                                              0 BANK0      1     1      0
   743 ;; ---------------------------------------------------------------------------------
   744 ;; (1) _setPB4                                               1     1      0      22
   745 ;;                                              0 BANK0      1     1      0
   746 ;; ---------------------------------------------------------------------------------
   747 ;; (2) _initPB4                                              1     1      0      22
   748 ;;                                              0 BANK0      1     1      0
   749 ;; ---------------------------------------------------------------------------------
   750 ;; (1) _setPB3                                               1     1      0      22
   751 ;;                                              0 BANK0      1     1      0
   752 ;; ---------------------------------------------------------------------------------
   753 ;; (2) _initPB3                                              1     1      0      22
   754 ;;                                              0 BANK0      1     1      0
   755 ;; ---------------------------------------------------------------------------------
   756 ;; (1) _clearThreeHoursTimer                                 0     0      0       0
   757 ;; ---------------------------------------------------------------------------------
   758 ;; (1) _clearTwelveHoursTimer                                0     0      0       0
   759 ;; ---------------------------------------------------------------------------------
   760 ;; Estimated maximum stack depth 2
   761 ;; ---------------------------------------------------------------------------------
   762 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   763 ;; ---------------------------------------------------------------------------------
   764 ;; (3) _ISR                                                  4     4      0     407
   765 ;;                                              9 COMMON     4     4      0
   766 ;;                i1_setAD_ConvertFlag
   767 ;;                            _adc_get
   768 ;;            _vPutSampleDataIntoTable
   769 ;; ---------------------------------------------------------------------------------
   770 ;; (4) i1_setAD_ConvertFlag                                  1     1      0      73
   771 ;;                                              0 COMMON     1     1      0
   772 ;; ---------------------------------------------------------------------------------
   773 ;; (4) _adc_get                                              4     2      2      24
   774 ;;                                              0 COMMON     4     2      2
   775 ;; ---------------------------------------------------------------------------------
   776 ;; (4) _vPutSampleDataIntoTable                              5     2      3     310
   777 ;;                                              4 COMMON     5     2      3
   778 ;;                            _adc_get (ARG)
   779 ;; ---------------------------------------------------------------------------------
   780 ;; Estimated maximum stack depth 4
   781 ;; ---------------------------------------------------------------------------------
   782 ;; Call Graph Graphs:
   783 ;; _main (ROOT)
   784 ;;   _initPin
   785 ;;     _initPB2_AsHighResistence
   786 ;;     _initPB3
   787 ;;     _initPB4
   788 ;;     _initPB5
   789 ;;   _setPinInitVaule
   790 ;;     _setPB3
   791 ;;     _setPB4
   792 ;;     _setPB5
   793 ;;   _selectAdChannel
   794 ;;   _clock_config
   795 ;;   _timer1_config
   796 ;;   _timer1_interrupt_config
   797 ;;   _adc_test_init
   798 ;;   _adc_start
   799 ;;   _startTwentyMinTimer
   800 ;;   _process_AD_Converter_Value
   801 ;;     _getAD_ConvertFlag
   802 ;;     _setAD_ConvertFlag
   803 ;;     _AD_Sample
   804 ;;     _adc_test_init
   805 ;;     _adc_start
   806 ;;   _isPermitSampleTime
   807 ;;   _clrSampeTime
   808 ;;   _isFinishedTwentyMinTimer
   809 ;;   _getAdOriginalCh13Value
   810 ;;     _Filter
   811 ;;   _setPB3
   812 ;;   _pwm_start
   813 ;;   _setPulseWidth
   814 ;;   _setPB4
   815 ;;   _setPB5
   816 ;;   _clearTwentyMinTimer
   817 ;;   _startTwelveHourTimer
   818 ;;   _isFinishedTwelveHoursTimer
   819 ;;   _clearTwelveHoursTimer
   820 ;;   _startThreeHoursTimer
   821 ;;   _isFinishedThreeHoursTimer
   822 ;;   _clearThreeHoursTimer
   823 ;;   _startOneHoursTimer
   824 ;;   _isFinishedOneHoursTimer
   825 ;;   _reset
   826 ;;
   827 ;; _ISR (ROOT)
   828 ;;   i1_setAD_ConvertFlag
   829 ;;   _adc_get
   830 ;;   _vPutSampleDataIntoTable
   831 ;;     _adc_get (ARG)
   832 ;;
   833 ;; Address spaces:
   834 ;;Name               Size   Autos  Total    Cost      Usage
   835 ;;BANK3               60      0       0      10        0.0%
   836 ;;BITBANK3            60      0       0       9        0.0%
   837 ;;SFR3                 0      0       0       4        0.0%
   838 ;;BITSFR3              0      0       0       4        0.0%
   839 ;;BANK2               60      0       0      12        0.0%
   840 ;;BITBANK2            60      0       0      11        0.0%
   841 ;;SFR2                 0      0       0       5        0.0%
   842 ;;BITSFR2              0      0       0       5        0.0%
   843 ;;SFR1                 0      0       0       2        0.0%
   844 ;;BITSFR1              0      0       0       2        0.0%
   845 ;;BANK1               50      0      48       8       90.0%
   846 ;;BITBANK1            50      0       0       7        0.0%
   847 ;;CODE                 0      0       0       0        0.0%
   848 ;;DATA                 0      0      A6       6        0.0%
   849 ;;ABS                  0      0      A0       3        0.0%
   850 ;;NULL                 0      0       0       0        0.0%
   851 ;;STACK                0      0       6       2        0.0%
   852 ;;BANK0               50     29      4A       5       92.5%
   853 ;;BITBANK0            50      0       0       4        0.0%
   854 ;;SFR0                 0      0       0       1        0.0%
   855 ;;BITSFR0              0      0       0       1        0.0%
   856 ;;COMMON               E      D       E       1      100.0%
   857 ;;BITCOMMON            E      0       0       0        0.0%
   858                           
   859                           
   860 ;; *************** function _main *****************
   861 ;; Defined at:
   862 ;;		line 497 in file "D:\develop\190625\AK7030-OTP\main.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;		None
   865 ;; Auto vars:     Size  Location     Type
   866 ;;		None
   867 ;; Return value:  Size  Location     Type
   868 ;;		None               void
   869 ;; Registers used:
   870 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   871 ;; Tracked objects:
   872 ;;		On entry : 17F/0
   873 ;;		On exit  : 60/0
   874 ;;		Unchanged: FFE00/0
   875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   876 ;;      Params:         0       0       0       0       0
   877 ;;      Locals:         0       0       0       0       0
   878 ;;      Temps:          0       0       0       0       0
   879 ;;      Totals:         0       0       0       0       0
   880 ;;Total ram usage:        0 bytes
   881 ;; Hardware stack levels required when called:    4
   882 ;; This function calls:
   883 ;;		_initPin
   884 ;;		_setPinInitVaule
   885 ;;		_selectAdChannel
   886 ;;		_clock_config
   887 ;;		_timer1_config
   888 ;;		_timer1_interrupt_config
   889 ;;		_adc_test_init
   890 ;;		_adc_start
   891 ;;		_startTwentyMinTimer
   892 ;;		_process_AD_Converter_Value
   893 ;;		_isPermitSampleTime
   894 ;;		_clrSampeTime
   895 ;;		_isFinishedTwentyMinTimer
   896 ;;		_getAdOriginalCh13Value
   897 ;;		_setPB3
   898 ;;		_pwm_start
   899 ;;		_setPulseWidth
   900 ;;		_setPB4
   901 ;;		_setPB5
   902 ;;		_clearTwentyMinTimer
   903 ;;		_startTwelveHourTimer
   904 ;;		_isFinishedTwelveHoursTimer
   905 ;;		_clearTwelveHoursTimer
   906 ;;		_startThreeHoursTimer
   907 ;;		_isFinishedThreeHoursTimer
   908 ;;		_clearThreeHoursTimer
   909 ;;		_startOneHoursTimer
   910 ;;		_isFinishedOneHoursTimer
   911 ;;		_reset
   912 ;; This function is called by:
   913 ;;		Startup code after reset
   914 ;; This function uses a non-reentrant model
   915 ;;
   916  0013                     _main:	
   917                           
   918                           ;main.c: 504: static unsigned char ucWaitTime1S = 0;
   919                           ;main.c: 506: static unsigned char ucWaitTimeO3s = 0;
   920                           ;main.c: 508: static unsigned char ucSmallTimerActionFlag = 0;
   921                           ;main.c: 510: static unsigned char ucSetSmallActionFlag = 0;
   922                           ;main.c: 512: static unsigned char bCheckTweHour = 0;
   923                           ;main.c: 514: static unsigned char bCheckTheHour = 0;
   924                           ;main.c: 530: initPin();
   925                           
   926                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   927  0013  118A  2368  118A   	fcall	_initPin
   928                           
   929                           ;main.c: 531: setPinInitVaule();
   930  0016  118A  2399  118A   	fcall	_setPinInitVaule
   931                           
   932                           ;main.c: 532: selectAdChannel();
   933  0019  118A  2460  118A   	fcall	_selectAdChannel
   934                           
   935                           ;main.c: 542: clock_config();
   936  001C  118A  244F  118A   	fcall	_clock_config
   937                           
   938                           ;main.c: 543: timer1_config();
   939  001F  118A  243D  118A   	fcall	_timer1_config
   940                           
   941                           ;main.c: 544: timer1_interrupt_config();
   942  0022  118A  246C  118A   	fcall	_timer1_interrupt_config
   943                           
   944                           ;main.c: 546: adc_test_init(12,3);
   945  0025  3003               	movlw	3
   946  0026  1283               	bcf	3,5	;RP0=0, select bank0
   947  0027  00A0               	movwf	?_adc_test_init
   948  0028  300C               	movlw	12
   949  0029  118A  2350  118A   	fcall	_adc_test_init
   950                           
   951                           ;main.c: 553: adc_start();
   952  002C  118A  2365  118A   	fcall	_adc_start
   953                           
   954                           ;main.c: 563: startTwentyMinTimer( 1200 );
   955  002F  30B0               	movlw	176
   956  0030  00A0               	movwf	?_startTwentyMinTimer
   957  0031  3004               	movlw	4
   958  0032  00A1               	movwf	?_startTwentyMinTimer+1
   959  0033  118A  2407  118A   	fcall	_startTwentyMinTimer
   960                           
   961                           ;main.c: 590: static unsigned char ucStep = 0;
   962                           ;main.c: 591: switch(ucStep)
   963  0036  2962               	goto	l3596
   964  0037                     l3604:	
   965                           
   966                           ;main.c: 594: {
   967                           ;main.c: 595: static unsigned char ucTimerP3s = 0;
   968                           ;main.c: 597: if( isFinishedTwentyMinTimer() )
   969  0037  118A  2433  118A   	fcall	_isFinishedTwentyMinTimer
   970  003A  3A00               	xorlw	0
   971  003B  1D03               	btfss	3,2
   972  003C  2962               	goto	l3596
   973                           
   974                           ;main.c: 602: {
   975                           ;main.c: 603: ucTimerP3s++;
   976  003D  118A  2274  118A   	fcall	_getAdOriginalCh13Value
   977  0040  300A               	movlw	10
   978                           
   979                           ;main.c: 609: static unsigned char ucDebug1 = 0;
   980                           ;main.c: 611: static unsigned char ucDebug2 = 0;
   981                           ;main.c: 613: ucDebug1++;
   982  0041  0AE3               	incf	main@ucDebug1,f
   983                           
   984                           ;main.c: 615: if( ucDebug1 < 10 )
   985  0042  0263               	subwf	main@ucDebug1,w
   986  0043  1803               	skipnc
   987  0044  284A               	goto	l3618
   988                           
   989                           ;main.c: 616: setPB3(1);
   990  0045  3001               	movlw	1
   991  0046  118A  23A1  118A   	fcall	_setPB3
   992  0049  2858               	goto	l3626
   993  004A                     l3618:	
   994                           
   995                           ;main.c: 617: else if((ucDebug1 > 10) && ( ucDebug1 < 20))
   996  004A  300B               	movlw	11
   997  004B  0263               	subwf	main@ucDebug1,w
   998  004C  1C03               	skipc
   999  004D  2857               	goto	l3624
  1000  004E  3014               	movlw	20
  1001  004F  0263               	subwf	main@ucDebug1,w
  1002  0050  1803               	skipnc
  1003  0051  2857               	goto	l3624
  1004                           
  1005                           ;main.c: 618: {
  1006                           ;main.c: 619: setPB3(0);
  1007  0052  3000               	movlw	0
  1008  0053  118A  23A1  118A   	fcall	_setPB3
  1009                           
  1010                           ;main.c: 620: }
  1011  0056  2858               	goto	l3626
  1012  0057                     l3624:	
  1013                           
  1014                           ;main.c: 621: else
  1015                           ;main.c: 622: {
  1016                           ;main.c: 623: ucDebug1 = 0;
  1017  0057  01E3               	clrf	main@ucDebug1
  1018  0058                     l3626:	
  1019  0058  3097               	movlw	151
  1020                           
  1021                           ;main.c: 624: }
  1022                           ;main.c: 626: ucDebug2++;
  1023  0059  0AE4               	incf	main@ucDebug2,f
  1024                           
  1025                           ;main.c: 627: if(ucDebug2 > 150)
  1026  005A  0264               	subwf	main@ucDebug2,w
  1027  005B  2960               	goto	L1
  1028  005C                     l3632:	
  1029                           
  1030                           ;main.c: 634: {
  1031                           ;main.c: 635: pwm_start();
  1032  005C  118A  23CC  118A   	fcall	_pwm_start
  1033                           
  1034                           ;main.c: 636: setPulseWidth();
  1035  005F  118A  2472  118A   	fcall	_setPulseWidth
  1036                           
  1037                           ;main.c: 637: setPB3(0);
  1038  0062  3000               	movlw	0
  1039  0063  118A  23A1  118A   	fcall	_setPB3
  1040                           
  1041                           ;main.c: 638: setPB4(1);
  1042  0066  3001               	movlw	1
  1043  0067  118A  23AA  118A   	fcall	_setPB4
  1044                           
  1045                           ;main.c: 639: setPB5(0);
  1046  006A  3000               	movlw	0
  1047  006B  118A  23B2  118A   	fcall	_setPB5
  1048                           
  1049                           ;main.c: 640: clearTwentyMinTimer();
  1050  006E  118A  245C  118A   	fcall	_clearTwentyMinTimer
  1051                           
  1052                           ;main.c: 641: startTwelveHourTimer( 36000);
  1053  0071  30A0               	movlw	160
  1054  0072  00A0               	movwf	?_startTwelveHourTimer
  1055  0073  308C               	movlw	140
  1056  0074  00A1               	movwf	?_startTwelveHourTimer+1
  1057  0075  118A  23F9  118A   	fcall	_startTwelveHourTimer
  1058  0078  2961               	goto	l3630
  1059  0079                     l3646:	
  1060                           
  1061                           ;main.c: 647: {
  1062                           ;main.c: 648: static unsigned char ucTimerP5s = 0;
  1063                           ;main.c: 650: if( isFinishedTwelveHoursTimer () )
  1064  0079  118A  2429  118A   	fcall	_isFinishedTwelveHoursTimer
  1065  007C  3A00               	xorlw	0
  1066  007D  1903               	skipnz
  1067  007E  2882               	goto	l3650
  1068  007F                     l3648:	
  1069                           
  1070                           ;main.c: 651: ucStep = 99;
  1071  007F  3063               	movlw	99
  1072  0080  00E5               	movwf	main@ucStep
  1073  0081  2962               	goto	l3596
  1074  0082                     l3650:	
  1075                           
  1076                           ;main.c: 652: else
  1077                           ;main.c: 653: {
  1078                           ;main.c: 654: if( getAdOriginalCh13Value() < 200 )
  1079  0082  118A  2274  118A   	fcall	_getAdOriginalCh13Value
  1080  0085  3000               	movlw	0
  1081  0086  0248               	subwf	?_getAdOriginalCh13Value+1,w
  1082  0087  30C8               	movlw	200
  1083  0088  1903               	skipnz
  1084  0089  0247               	subwf	?_getAdOriginalCh13Value,w
  1085  008A  1803               	skipnc
  1086  008B  288E               	goto	l3654
  1087                           
  1088                           ;main.c: 655: ucTimerP5s++;
  1089  008C  0AE6               	incf	main@ucTimerP5s,f
  1090  008D  288F               	goto	l3656
  1091  008E                     l3654:	
  1092                           
  1093                           ;main.c: 656: else
  1094                           ;main.c: 657: ucTimerP5s = 0;
  1095  008E  01E6               	clrf	main@ucTimerP5s
  1096  008F                     l3656:	
  1097                           
  1098                           ;main.c: 659: if( ucTimerP5s > 5)
  1099  008F  3006               	movlw	6
  1100  0090  0266               	subwf	main@ucTimerP5s,w
  1101  0091  1C03               	skipc
  1102  0092  2962               	goto	l3596
  1103                           
  1104                           ;main.c: 660: {
  1105                           ;main.c: 661: ucTimerP5s = 0;
  1106  0093  01E6               	clrf	main@ucTimerP5s
  1107  0094  2962               	goto	l3596
  1108  0095                     l3660:	
  1109                           
  1110                           ;main.c: 669: {
  1111                           ;main.c: 670: clearTwelveHoursTimer();
  1112  0095  118A  2468  118A   	fcall	_clearTwelveHoursTimer
  1113                           
  1114                           ;main.c: 671: startThreeHoursTimer(10800);
  1115  0098  3030               	movlw	48
  1116  0099  00A0               	movwf	?_startThreeHoursTimer
  1117  009A  302A               	movlw	42
  1118  009B  00A1               	movwf	?_startThreeHoursTimer+1
  1119  009C  118A  23EB  118A   	fcall	_startThreeHoursTimer
  1120  009F  2961               	goto	l3630
  1121  00A0                     l3666:	
  1122                           
  1123                           ;main.c: 677: {
  1124                           ;main.c: 678: static unsigned char ucTimerP5s = 0;
  1125                           ;main.c: 680: if( isFinishedThreeHoursTimer() )
  1126  00A0  118A  241F  118A   	fcall	_isFinishedThreeHoursTimer
  1127  00A3  3A00               	xorlw	0
  1128  00A4  1D03               	btfss	3,2
  1129  00A5  287F               	goto	l3648
  1130                           
  1131                           ;main.c: 682: else
  1132                           ;main.c: 683: {
  1133                           ;main.c: 684: if( getAdOriginalCh13Value() < 85 )
  1134  00A6  118A  2274  118A   	fcall	_getAdOriginalCh13Value
  1135  00A9  3000               	movlw	0
  1136  00AA  0248               	subwf	?_getAdOriginalCh13Value+1,w
  1137  00AB  3055               	movlw	85
  1138  00AC  1903               	skipnz
  1139  00AD  0247               	subwf	?_getAdOriginalCh13Value,w
  1140  00AE  1803               	skipnc
  1141  00AF  28B2               	goto	l3674
  1142                           
  1143                           ;main.c: 685: ucTimerP5s++;
  1144  00B0  0AE1               	incf	main@cTimerP5s_776,f
  1145  00B1  28B3               	goto	l3676
  1146  00B2                     l3674:	
  1147                           
  1148                           ;main.c: 686: else
  1149                           ;main.c: 687: ucTimerP5s = 0;
  1150  00B2  01E1               	clrf	main@cTimerP5s_776
  1151  00B3                     l3676:	
  1152                           
  1153                           ;main.c: 689: if( ucTimerP5s > 5)
  1154  00B3  3006               	movlw	6
  1155  00B4  0261               	subwf	main@cTimerP5s_776,w
  1156  00B5  1C03               	skipc
  1157  00B6  2962               	goto	l3596
  1158                           
  1159                           ;main.c: 690: {
  1160                           ;main.c: 691: ucTimerP5s = 0;
  1161  00B7  01E1               	clrf	main@cTimerP5s_776
  1162  00B8  2961               	goto	l3630
  1163  00B9                     l3682:	
  1164                           
  1165                           ;main.c: 699: {
  1166                           ;main.c: 700: clearThreeHoursTimer();
  1167  00B9  118A  2464  118A   	fcall	_clearThreeHoursTimer
  1168                           
  1169                           ;main.c: 701: startOneHoursTimer( 3600 );
  1170  00BC  3010               	movlw	16
  1171  00BD  00A0               	movwf	?_startOneHoursTimer
  1172  00BE  300E               	movlw	14
  1173  00BF  00A1               	movwf	?_startOneHoursTimer+1
  1174  00C0  118A  23DD  118A   	fcall	_startOneHoursTimer
  1175                           
  1176                           ;main.c: 702: setPB3(1);
  1177  00C3  3001               	movlw	1
  1178  00C4  118A  23A1  118A   	fcall	_setPB3
  1179                           
  1180                           ;main.c: 703: setPB4(0);
  1181  00C7  3000               	movlw	0
  1182  00C8  118A  23AA  118A   	fcall	_setPB4
  1183                           
  1184                           ;main.c: 704: setPB5(1);
  1185  00CB  3001               	movlw	1
  1186  00CC  118A  23B2  118A   	fcall	_setPB5
  1187  00CF  2961               	goto	l3630
  1188  00D0                     l3694:	
  1189                           
  1190                           ;main.c: 710: {
  1191                           ;main.c: 711: static unsigned int uiTimerOneP5s = 0;
  1192                           ;main.c: 712: static unsigned int uiTimerTwoP5s = 0;
  1193                           ;main.c: 715: if( isFinishedOneHoursTimer() )
  1194  00D0  118A  2415  118A   	fcall	_isFinishedOneHoursTimer
  1195  00D3  3A00               	xorlw	0
  1196  00D4  1D03               	btfss	3,2
  1197  00D5  287F               	goto	l3648
  1198                           
  1199                           ;main.c: 717: else
  1200                           ;main.c: 718: {
  1201                           ;main.c: 719: if( getAdOriginalCh13Value() > 100 )
  1202  00D6  118A  2274  118A   	fcall	_getAdOriginalCh13Value
  1203  00D9  3000               	movlw	0
  1204  00DA  0248               	subwf	?_getAdOriginalCh13Value+1,w
  1205  00DB  3065               	movlw	101
  1206  00DC  1903               	skipnz
  1207  00DD  0247               	subwf	?_getAdOriginalCh13Value,w
  1208  00DE  1C03               	skipc
  1209  00DF  28E6               	goto	l3704
  1210                           
  1211                           ;main.c: 720: {
  1212                           ;main.c: 721: uiTimerOneP5s++;
  1213  00E0  0AD3               	incf	main@uiTimerOneP5s,f
  1214  00E1  1903               	skipnz
  1215  00E2  0AD4               	incf	main@uiTimerOneP5s+1,f
  1216                           
  1217                           ;main.c: 722: uiTimerTwoP5s = 0;
  1218  00E3  01D7               	clrf	main@uiTimerTwoP5s
  1219  00E4  01D8               	clrf	main@uiTimerTwoP5s+1
  1220                           
  1221                           ;main.c: 723: }
  1222  00E5  28E8               	goto	l3706
  1223  00E6                     l3704:	
  1224                           
  1225                           ;main.c: 724: else
  1226                           ;main.c: 725: uiTimerOneP5s = 0;
  1227  00E6  01D3               	clrf	main@uiTimerOneP5s
  1228  00E7  01D4               	clrf	main@uiTimerOneP5s+1
  1229  00E8                     l3706:	
  1230                           
  1231                           ;main.c: 727: if(uiTimerOneP5s > 5)
  1232  00E8  3000               	movlw	0
  1233  00E9  0254               	subwf	main@uiTimerOneP5s+1,w
  1234  00EA  3006               	movlw	6
  1235  00EB  1903               	skipnz
  1236  00EC  0253               	subwf	main@uiTimerOneP5s,w
  1237  00ED  1C03               	skipc
  1238  00EE  2900               	goto	l3716
  1239                           
  1240                           ;main.c: 728: {
  1241                           ;main.c: 729: setPB3(0);
  1242  00EF  3000               	movlw	0
  1243  00F0  118A  23A1  118A   	fcall	_setPB3
  1244                           
  1245                           ;main.c: 730: setPB4(1);
  1246  00F3  3001               	movlw	1
  1247  00F4  118A  23AA  118A   	fcall	_setPB4
  1248                           
  1249                           ;main.c: 731: setPB5(0);
  1250  00F7  3000               	movlw	0
  1251  00F8  118A  23B2  118A   	fcall	_setPB5
  1252                           
  1253                           ;main.c: 733: uiTimerOneP5s = 0;
  1254  00FB  01D3               	clrf	main@uiTimerOneP5s
  1255  00FC  01D4               	clrf	main@uiTimerOneP5s+1
  1256                           
  1257                           ;main.c: 734: uiTimerTwoP5s = 0;
  1258  00FD  01D7               	clrf	main@uiTimerTwoP5s
  1259  00FE  01D8               	clrf	main@uiTimerTwoP5s+1
  1260  00FF  2961               	goto	l3630
  1261  0100                     l3716:	
  1262                           
  1263                           ;main.c: 737: else
  1264                           ;main.c: 738: {
  1265                           ;main.c: 739: if( getAdOriginalCh13Value() < 25 )
  1266  0100  118A  2274  118A   	fcall	_getAdOriginalCh13Value
  1267  0103  3000               	movlw	0
  1268  0104  0248               	subwf	?_getAdOriginalCh13Value+1,w
  1269  0105  3019               	movlw	25
  1270  0106  1903               	skipnz
  1271  0107  0247               	subwf	?_getAdOriginalCh13Value,w
  1272  0108  1803               	skipnc
  1273  0109  290E               	goto	l3720
  1274                           
  1275                           ;main.c: 740: uiTimerTwoP5s++;
  1276  010A  0AD7               	incf	main@uiTimerTwoP5s,f
  1277  010B  1903               	skipnz
  1278  010C  0AD8               	incf	main@uiTimerTwoP5s+1,f
  1279  010D  2910               	goto	l3722
  1280  010E                     l3720:	
  1281                           
  1282                           ;main.c: 741: else
  1283                           ;main.c: 742: uiTimerTwoP5s = 0;
  1284  010E  01D7               	clrf	main@uiTimerTwoP5s
  1285  010F  01D8               	clrf	main@uiTimerTwoP5s+1
  1286  0110                     l3722:	
  1287                           
  1288                           ;main.c: 744: if(uiTimerTwoP5s > 5)
  1289  0110  3000               	movlw	0
  1290  0111  0258               	subwf	main@uiTimerTwoP5s+1,w
  1291  0112  3006               	movlw	6
  1292  0113  1903               	skipnz
  1293  0114  0257               	subwf	main@uiTimerTwoP5s,w
  1294  0115  1C03               	skipc
  1295  0116  2962               	goto	l3596
  1296  0117                     l3724:	
  1297                           
  1298                           ;main.c: 745: reset();
  1299  0117  118A  2471  118A   	fcall	_reset
  1300  011A  2962               	goto	l3596
  1301  011B                     l3726:	
  1302                           
  1303                           ;main.c: 752: {
  1304                           ;main.c: 753: static unsigned int uiTimerP5s = 0;
  1305                           ;main.c: 754: if( getAdOriginalCh13Value() < 25 )
  1306  011B  118A  2274  118A   	fcall	_getAdOriginalCh13Value
  1307  011E  3000               	movlw	0
  1308  011F  0248               	subwf	?_getAdOriginalCh13Value+1,w
  1309  0120  3019               	movlw	25
  1310  0121  1903               	skipnz
  1311  0122  0247               	subwf	?_getAdOriginalCh13Value,w
  1312  0123  1803               	skipnc
  1313  0124  2929               	goto	l3730
  1314                           
  1315                           ;main.c: 755: uiTimerP5s++;
  1316  0125  0AD5               	incf	main@uiTimerP5s,f
  1317  0126  1903               	skipnz
  1318  0127  0AD6               	incf	main@uiTimerP5s+1,f
  1319  0128  292B               	goto	l3732
  1320  0129                     l3730:	
  1321                           
  1322                           ;main.c: 756: else
  1323                           ;main.c: 757: uiTimerP5s = 0;
  1324  0129  01D5               	clrf	main@uiTimerP5s
  1325  012A  01D6               	clrf	main@uiTimerP5s+1
  1326  012B                     l3732:	
  1327                           
  1328                           ;main.c: 759: if(uiTimerP5s > 5)
  1329  012B  3000               	movlw	0
  1330  012C  0256               	subwf	main@uiTimerP5s+1,w
  1331  012D  3006               	movlw	6
  1332  012E  1903               	skipnz
  1333  012F  0255               	subwf	main@uiTimerP5s,w
  1334  0130  1C03               	skipc
  1335  0131  2962               	goto	l3596
  1336  0132  3001               	movlw	1
  1337                           
  1338                           ;main.c: 760: {
  1339                           ;main.c: 761: uiTimerP5s = 0;
  1340  0133  01D5               	clrf	main@uiTimerP5s
  1341  0134  01D6               	clrf	main@uiTimerP5s+1
  1342                           
  1343                           ;main.c: 762: setPB3(1);
  1344  0135  118A  23A1  118A   	fcall	_setPB3
  1345                           
  1346                           ;main.c: 763: setPB4(0);
  1347  0138  3000               	movlw	0
  1348  0139  118A  23AA  118A   	fcall	_setPB4
  1349                           
  1350                           ;main.c: 764: setPB5(1);
  1351  013C  3001               	movlw	1
  1352  013D  118A  23B2  118A   	fcall	_setPB5
  1353  0140  287F               	goto	l3648
  1354  0141                     l3744:	
  1355                           
  1356                           ;main.c: 774: {
  1357                           ;main.c: 775: setPB3(0);
  1358  0141  3000               	movlw	0
  1359  0142  118A  23A1  118A   	fcall	_setPB3
  1360                           
  1361                           ;main.c: 776: setPB4(0);
  1362  0145  3000               	movlw	0
  1363  0146  118A  23AA  118A   	fcall	_setPB4
  1364                           
  1365                           ;main.c: 777: setPB5(1);
  1366  0149  3001               	movlw	1
  1367  014A  118A  23B2  118A   	fcall	_setPB5
  1368                           
  1369                           ;main.c: 778: setPulseWidth();
  1370  014D  118A  2472  118A   	fcall	_setPulseWidth
  1371  0150  2961               	goto	l3630
  1372  0151                     l3750:	
  1373                           
  1374                           ;main.c: 784: {
  1375                           ;main.c: 785: static unsigned char ucTimerP5s = 0;
  1376                           ;main.c: 786: if( getAdOriginalCh13Value() >50 )
  1377  0151  118A  2274  118A   	fcall	_getAdOriginalCh13Value
  1378  0154  3000               	movlw	0
  1379  0155  0248               	subwf	?_getAdOriginalCh13Value+1,w
  1380  0156  3033               	movlw	51
  1381  0157  1903               	skipnz
  1382  0158  0247               	subwf	?_getAdOriginalCh13Value,w
  1383  0159  1C03               	skipc
  1384  015A  295D               	goto	l3754
  1385                           
  1386                           ;main.c: 787: ucTimerP5s++;
  1387  015B  0AE2               	incf	main@cTimerP5s_780,f
  1388  015C  295E               	goto	l3756
  1389  015D                     l3754:	
  1390                           
  1391                           ;main.c: 788: else
  1392                           ;main.c: 789: ucTimerP5s = 0;
  1393  015D  01E2               	clrf	main@cTimerP5s_780
  1394  015E                     l3756:	
  1395                           
  1396                           ;main.c: 791: if(ucTimerP5s > 5)
  1397  015E  3006               	movlw	6
  1398  015F  0262               	subwf	main@cTimerP5s_780,w
  1399  0160                     L1:	
  1400  0160  1803               	btfsc	3,0
  1401  0161                     l3630:	
  1402                           
  1403                           ;main.c: 628: ucStep++;
  1404  0161  0AE5               	incf	main@ucStep,f
  1405  0162                     l3596:	
  1406  0162  0064               	clrwdt	;#
  1407                           
  1408                           ;main.c: 570: process_AD_Converter_Value();
  1409  0163  118A  231F  118A   	fcall	_process_AD_Converter_Value
  1410                           
  1411                           ;main.c: 572: if( isPermitSampleTime() )
  1412  0166  118A  2457  118A   	fcall	_isPermitSampleTime
  1413  0169  3A00               	xorlw	0
  1414  016A  1903               	skipnz
  1415  016B  2962               	goto	l3596
  1416                           
  1417                           ;main.c: 573: {
  1418                           ;main.c: 576: clrSampeTime();
  1419  016C  118A  246F  118A   	fcall	_clrSampeTime
  1420  016F  0865               	movf	main@ucStep,w
  1421                           
  1422                           ; Switch size 1, requested type "space"
  1423                           ; Number of cases is 11, Range of values is 0 to 101
  1424                           ; switch strategies available:
  1425                           ; Name         Instructions Cycles
  1426                           ; simple_byte           34    18 (average)
  1427                           ; direct_byte          211     7 (fixed)
  1428                           ; jumptable            260     6 (fixed)
  1429                           ; rangetable           106     6 (fixed)
  1430                           ; spacedrange          210     9 (fixed)
  1431                           ; locatedrange         102     3 (fixed)
  1432                           ;	Chosen strategy is simple_byte
  1433  0170  3A00               	xorlw	0	; case 0
  1434  0171  1903               	skipnz
  1435  0172  2837               	goto	l3604
  1436  0173  3A01               	xorlw	1	; case 1
  1437  0174  1903               	skipnz
  1438  0175  285C               	goto	l3632
  1439  0176  3A03               	xorlw	3	; case 2
  1440  0177  1903               	skipnz
  1441  0178  2879               	goto	l3646
  1442  0179  3A01               	xorlw	1	; case 3
  1443  017A  1903               	skipnz
  1444  017B  2895               	goto	l3660
  1445  017C  3A07               	xorlw	7	; case 4
  1446  017D  1903               	skipnz
  1447  017E  28A0               	goto	l3666
  1448  017F  3A01               	xorlw	1	; case 5
  1449  0180  1903               	skipnz
  1450  0181  28B9               	goto	l3682
  1451  0182  3A03               	xorlw	3	; case 6
  1452  0183  1903               	skipnz
  1453  0184  28D0               	goto	l3694
  1454  0185  3A01               	xorlw	1	; case 7
  1455  0186  1903               	skipnz
  1456  0187  291B               	goto	l3726
  1457  0188  3A64               	xorlw	100	; case 99
  1458  0189  1903               	skipnz
  1459  018A  2941               	goto	l3744
  1460  018B  3A07               	xorlw	7	; case 100
  1461  018C  1903               	skipnz
  1462  018D  2951               	goto	l3750
  1463  018E  3A01               	xorlw	1	; case 101
  1464  018F  1903               	skipnz
  1465  0190  2917               	goto	l3724
  1466  0191  2992               	goto	l750
  1467  0192                     l750:	
  1468  0192  2962               	goto	l3596
  1469  0193                     __end_of_main:	
  1470                           
  1471                           	psect	text787
  1472  0274                     __ptext787:	
  1473 ;; =============== function _main ends ============
  1474                           
  1475                           
  1476 ;; *************** function _getAdOriginalCh13Value *****************
  1477 ;; Defined at:
  1478 ;;		line 238 in file "D:\develop\190625\AK7030-OTP\common.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;		None
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;		None
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  2   39[BANK0 ] unsigned int 
  1485 ;; Registers used:
  1486 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1487 ;; Tracked objects:
  1488 ;;		On entry : 60/0
  1489 ;;		On exit  : 160/0
  1490 ;;		Unchanged: FFE00/0
  1491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1492 ;;      Params:         0       2       0       0       0
  1493 ;;      Locals:         0       0       0       0       0
  1494 ;;      Temps:          0       0       0       0       0
  1495 ;;      Totals:         0       2       0       0       0
  1496 ;;Total ram usage:        2 bytes
  1497 ;; Hardware stack levels used:    1
  1498 ;; Hardware stack levels required when called:    3
  1499 ;; This function calls:
  1500 ;;		_Filter
  1501 ;; This function is called by:
  1502 ;;		_main
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505  0274                     _getAdOriginalCh13Value:	
  1506                           
  1507                           ;common.c: 240: return Filter(uiSampleChannelFourth);
  1508                           
  1509                           ; Regs used in _getAdOriginalCh13Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  1510  0274  30D0               	movlw	_uiSampleChannelFourth& (0+255)
  1511  0275  227B               	fcall	_Filter
  1512  0276  0821               	movf	?_Filter+1,w
  1513  0277  00C8               	movwf	?_getAdOriginalCh13Value+1
  1514  0278  0820               	movf	?_Filter,w
  1515  0279  00C7               	movwf	?_getAdOriginalCh13Value
  1516  027A  0008               	return
  1517  027B                     __end_of_getAdOriginalCh13Value:	
  1518  027B                     __ptext794:	
  1519 ;; =============== function _getAD_ConvertFlag ends ============
  1520                           
  1521                           
  1522 ;; *************** function _Filter *****************
  1523 ;; Defined at:
  1524 ;;		line 60 in file "D:\develop\190625\AK7030-OTP\common.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;  tmpValue        1    wreg     PTR int 
  1527 ;;		 -> uiSampleChannelFourteenth(24), uiSampleChannelFourth(24), uiSampleChannelFirst(24), 
  1528 ;; Auto vars:     Size  Location     Type
  1529 ;;  tmpValue        1   34[BANK0 ] PTR int 
  1530 ;;		 -> uiSampleChannelFourteenth(24), uiSampleChannelFourth(24), uiSampleChannelFirst(24), 
  1531 ;;  cir             2   35[BANK0 ] int 
  1532 ;;  filter_buf     24    6[BANK0 ] unsigned int [12]
  1533 ;;  filter_sum      2   32[BANK0 ] unsigned int 
  1534 ;;  filter_temp     2   30[BANK0 ] unsigned int 
  1535 ;;  i               1   38[BANK0 ] unsigned char 
  1536 ;;  j               1   37[BANK0 ] unsigned char 
  1537 ;; Return value:  Size  Location     Type
  1538 ;;                  2    0[BANK0 ] unsigned int 
  1539 ;; Registers used:
  1540 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1541 ;; Tracked objects:
  1542 ;;		On entry : 60/0
  1543 ;;		On exit  : 160/0
  1544 ;;		Unchanged: FFE00/0
  1545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1546 ;;      Params:         0       2       0       0       0
  1547 ;;      Locals:         0      33       0       0       0
  1548 ;;      Temps:          0       4       0       0       0
  1549 ;;      Totals:         0      39       0       0       0
  1550 ;;Total ram usage:       39 bytes
  1551 ;; Hardware stack levels used:    1
  1552 ;; Hardware stack levels required when called:    2
  1553 ;; This function calls:
  1554 ;;		Nothing
  1555 ;; This function is called by:
  1556 ;;		_getAdOriginalCh13Value
  1557 ;; This function uses a non-reentrant model
  1558 ;;
  1559  027B                     _Filter:	
  1560                           
  1561                           ; Regs used in _Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  1562                           ;Filter@tmpValue stored from wreg
  1563  027B  00C2               	movwf	Filter@tmpValue
  1564  027C  01C5               	clrf	Filter@j
  1565                           
  1566                           ;common.c: 64: unsigned int filter_temp = 0, filter_sum = 0;
  1567  027D  01BE               	clrf	Filter@filter_temp
  1568  027E  01BF               	clrf	Filter@filter_temp+1
  1569  027F  01C0               	clrf	Filter@filter_sum
  1570  0280  01C1               	clrf	Filter@filter_sum+1
  1571                           
  1572                           ;common.c: 66: unsigned int filter_buf[12];
  1573                           ;common.c: 68: for(int cir = 0;cir < 12; cir++)
  1574  0281  01C3               	clrf	Filter@cir
  1575  0282  01C4               	clrf	Filter@cir+1
  1576  0283                     l3404:	
  1577                           
  1578                           ;common.c: 69: filter_buf[cir] = *tmpValue++;
  1579  0283  1283               	bcf	3,5	;RP0=0, select bank0
  1580  0284  1303               	bcf	3,6	;RP1=0, select bank0
  1581  0285  0842               	movf	Filter@tmpValue,w
  1582  0286  2309  118A         	fcall	PL3	;call to abstracted procedure
  1583  0288  1003               	clrc
  1584  0289  0D43               	rlf	Filter@cir,w
  1585  028A  2311  118A         	fcall	PL4	;call to abstracted procedure
  1586  028C  0AC2               	incf	Filter@tmpValue,f
  1587  028D  0AC2               	incf	Filter@tmpValue,f
  1588  028E  0AC3               	incf	Filter@cir,f
  1589  028F  1903               	skipnz
  1590  0290  0AC4               	incf	Filter@cir+1,f
  1591  0291  0844               	movf	Filter@cir+1,w
  1592  0292  3A80               	xorlw	128
  1593  0293  00FF               	movwf	127
  1594  0294  3080               	movlw	128
  1595  0295  027F               	subwf	127,w
  1596  0296  1D03               	skipz
  1597  0297  2A9A               	goto	u965
  1598  0298  300C               	movlw	12
  1599  0299  0243               	subwf	Filter@cir,w
  1600  029A                     u965:	
  1601  029A  1C03               	skipc
  1602  029B  2A83               	goto	l3404
  1603                           
  1604                           ;common.c: 72: for(j = 0; j < 12 - 1; j++)
  1605  029C  1283               	bcf	3,5	;RP0=0, select bank0
  1606  029D  1303               	bcf	3,6	;RP1=0, select bank0
  1607  029E  01C5               	clrf	Filter@j
  1608  029F                     l3418:	
  1609                           
  1610                           ;common.c: 73: {
  1611                           ;common.c: 74: for(i = 0; i < 12 - 1 - j; i++)
  1612  029F  01C6               	clrf	Filter@i
  1613  02A0                     l3426:	
  1614  02A0  01A3               	clrf	??_Filter+1
  1615  02A1  0845               	movf	Filter@j,w
  1616  02A2  3C0B               	sublw	11
  1617  02A3  00A2               	movwf	??_Filter
  1618  02A4  1C03               	skipc
  1619  02A5  03A3               	decf	??_Filter+1,f
  1620  02A6  0823               	movf	??_Filter+1,w
  1621  02A7  3A80               	xorlw	128
  1622  02A8  3C80               	sublw	128
  1623  02A9  1D03               	skipz
  1624  02AA  2AAD               	goto	u985
  1625  02AB  0822               	movf	??_Filter,w
  1626  02AC  0246               	subwf	Filter@i,w
  1627  02AD                     u985:	
  1628  02AD  1803               	btfsc	3,0
  1629  02AE  2AE2               	goto	l3428
  1630                           
  1631                           ;common.c: 75: {
  1632                           ;common.c: 76: if(filter_buf[i] > filter_buf[i + 1])
  1633  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  1634  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  1635  02B1  1003               	clrc
  1636  02B2  0D46               	rlf	Filter@i,w
  1637  02B3  3E26               	addlw	Filter@filter_buf& (0+255)
  1638  02B4  2309  118A         	fcall	PL3	;call to abstracted procedure
  1639  02B6  2319  118A         	fcall	PL6	;call to abstracted procedure
  1640  02B8  0800               	movf	0,w
  1641  02B9  00A4               	movwf	??_Filter+2
  1642  02BA  0A84               	incf	4,f
  1643  02BB  0800               	movf	0,w
  1644  02BC  00A5               	movwf	??_Filter+3
  1645  02BD  0823               	movf	??_Filter+1,w
  1646  02BE  0225               	subwf	??_Filter+3,w
  1647  02BF  1D03               	skipz
  1648  02C0  2AC3               	goto	u975
  1649  02C1  0822               	movf	??_Filter,w
  1650  02C2  0224               	subwf	??_Filter+2,w
  1651  02C3                     u975:	
  1652  02C3  1803               	skipnc
  1653  02C4  2AE0               	goto	l3424
  1654                           
  1655                           ;common.c: 77: {
  1656                           ;common.c: 79: filter_temp = filter_buf[i];
  1657  02C5  1003               	clrc
  1658  02C6  0D46               	rlf	Filter@i,w
  1659  02C7  3E26               	addlw	Filter@filter_buf& (0+255)
  1660  02C8  0084               	movwf	4
  1661  02C9  0800               	movf	0,w
  1662  02CA  00BE               	movwf	Filter@filter_temp
  1663  02CB  0A84               	incf	4,f
  1664  02CC  0800               	movf	0,w
  1665  02CD  00BF               	movwf	Filter@filter_temp+1
  1666                           
  1667                           ;common.c: 81: filter_buf[i] = filter_buf[i + 1];
  1668  02CE  2319  118A         	fcall	PL6	;call to abstracted procedure
  1669  02D0  0800               	movf	0,w
  1670  02D1  00A2               	movwf	??_Filter
  1671  02D2  0A84               	incf	4,f
  1672  02D3  0800               	movf	0,w
  1673  02D4  00A3               	movwf	??_Filter+1
  1674  02D5  1003               	clrc
  1675  02D6  0D46               	rlf	Filter@i,w
  1676  02D7  2311  118A         	fcall	PL4	;call to abstracted procedure
  1677                           
  1678                           ;common.c: 83: filter_buf[i + 1] = filter_temp;
  1679  02D9  2319  118A         	fcall	PL6	;call to abstracted procedure
  1680  02DB  083E               	movf	Filter@filter_temp,w
  1681  02DC  0080               	movwf	0
  1682  02DD  0A84               	incf	4,f
  1683  02DE  083F               	movf	Filter@filter_temp+1,w
  1684  02DF  0080               	movwf	0
  1685  02E0                     l3424:	
  1686  02E0  0AC6               	incf	Filter@i,f
  1687  02E1  2AA0               	goto	l3426
  1688  02E2                     l3428:	
  1689  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  1690  02E3  300B               	movlw	11
  1691  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  1692  02E5  0AC5               	incf	Filter@j,f
  1693  02E6  0245               	subwf	Filter@j,w
  1694  02E7  1C03               	skipc
  1695  02E8  2A9F               	goto	l3418
  1696                           
  1697                           ;common.c: 84: }
  1698                           ;common.c: 85: }
  1699                           ;common.c: 86: }
  1700                           ;common.c: 88: for(i = 2; i < 12 - 2; i++)
  1701  02E9  3002               	movlw	2
  1702  02EA  00C6               	movwf	Filter@i
  1703                           
  1704                           ;common.c: 89: {
  1705                           ;common.c: 90: filter_sum += filter_buf[i];
  1706  02EB  1003               	clrc
  1707  02EC                     L4:	
  1708  02EC  0D46               	rlf	Filter@i,w
  1709  02ED  3E26               	addlw	Filter@filter_buf& (0+255)
  1710  02EE  2309  118A         	fcall	PL3	;call to abstracted procedure
  1711  02F0  0822               	movf	??_Filter,w
  1712  02F1  07C0               	addwf	Filter@filter_sum,f
  1713  02F2  1803               	skipnc
  1714  02F3  0AC1               	incf	Filter@filter_sum+1,f
  1715  02F4  0823               	movf	??_Filter+1,w
  1716  02F5  07C1               	addwf	Filter@filter_sum+1,f
  1717  02F6  300A               	movlw	10
  1718  02F7  0AC6               	incf	Filter@i,f
  1719  02F8  0246               	subwf	Filter@i,w
  1720  02F9  1C03               	skipc
  1721  02FA  2AEC               	goto	L4
  1722                           
  1723                           ;common.c: 91: }
  1724                           ;common.c: 93: return (filter_sum >> 3);
  1725  02FB  0841               	movf	Filter@filter_sum+1,w
  1726  02FC  00A1               	movwf	?_Filter+1
  1727  02FD  0840               	movf	Filter@filter_sum,w
  1728  02FE  00A0               	movwf	?_Filter
  1729  02FF  1003               	clrc
  1730  0300  0CA1               	rrf	?_Filter+1,f
  1731  0301  0CA0               	rrf	?_Filter,f
  1732  0302  1003               	clrc
  1733  0303  0CA1               	rrf	?_Filter+1,f
  1734  0304  0CA0               	rrf	?_Filter,f
  1735  0305  1003               	clrc
  1736  0306  0CA1               	rrf	?_Filter+1,f
  1737  0307  0CA0               	rrf	?_Filter,f
  1738  0308  0008               	return
  1739  0309                     __end_of_Filter:	
  1740  0309                     PL3:	
  1741  0309  0084               	movwf	4
  1742  030A  1383               	bcf	3,7	;select IRP bank0
  1743  030B  0800               	movf	0,w
  1744  030C  00A2               	movwf	??_Filter
  1745  030D  0A84               	incf	4,f
  1746  030E  0800               	movf	0,w
  1747  030F  00A3               	movwf	??_Filter+1
  1748  0310  0008               	return
  1749  0311                     PL4:	
  1750  0311  3E26               	addlw	Filter@filter_buf& (0+255)
  1751  0312  0084               	movwf	4
  1752  0313  0822               	movf	??_Filter,w
  1753  0314  0080               	movwf	0
  1754  0315  0A84               	incf	4,f
  1755  0316  0823               	movf	??_Filter+1,w
  1756  0317  0080               	movwf	0
  1757  0318  0008               	return
  1758  0319                     PL6:	
  1759  0319  1003               	clrc
  1760  031A  0D46               	rlf	Filter@i,w
  1761  031B  3E02               	addlw	2
  1762  031C  3E26               	addlw	Filter@filter_buf& (0+255)
  1763  031D  0084               	movwf	4
  1764  031E  0008               	return
  1765                           
  1766                           	psect	text788
  1767  031F                     __ptext788:	
  1768 ;; =============== function _getAdOriginalCh13Value ends ============
  1769                           
  1770                           
  1771 ;; *************** function _process_AD_Converter_Value *****************
  1772 ;; Defined at:
  1773 ;;		line 260 in file "D:\develop\190625\AK7030-OTP\common.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;		None
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;		None
  1778 ;; Return value:  Size  Location     Type
  1779 ;;		None               void
  1780 ;; Registers used:
  1781 ;;		wreg, status,2, status,0, pclath, cstack
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 60/0
  1785 ;;		Unchanged: FFF9F/0
  1786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1787 ;;      Params:         0       0       0       0       0
  1788 ;;      Locals:         0       0       0       0       0
  1789 ;;      Temps:          0       0       0       0       0
  1790 ;;      Totals:         0       0       0       0       0
  1791 ;;Total ram usage:        0 bytes
  1792 ;; Hardware stack levels used:    1
  1793 ;; Hardware stack levels required when called:    3
  1794 ;; This function calls:
  1795 ;;		_getAD_ConvertFlag
  1796 ;;		_setAD_ConvertFlag
  1797 ;;		_AD_Sample
  1798 ;;		_adc_test_init
  1799 ;;		_adc_start
  1800 ;; This function is called by:
  1801 ;;		_main
  1802 ;; This function uses a non-reentrant model
  1803 ;;
  1804  031F                     _process_AD_Converter_Value:	
  1805                           
  1806                           ;common.c: 261: if(getAD_ConvertFlag())
  1807                           
  1808                           ; Regs used in _process_AD_Converter_Value: [wreg+status,2+status,0+pclath+cstack]
  1809  031F  2335  118A         	fcall	_getAD_ConvertFlag
  1810  0321  3A00               	xorlw	0
  1811  0322  1903               	skipnz
  1812  0323  0008               	return
  1813                           
  1814                           ;common.c: 262: {
  1815                           ;common.c: 263: setAD_ConvertFlag(0);
  1816  0324  3000               	movlw	0
  1817  0325  2339  118A         	fcall	_setAD_ConvertFlag
  1818                           
  1819                           ;common.c: 264: AD_Sample();
  1820  0327  233C  118A         	fcall	_AD_Sample
  1821                           
  1822                           ;common.c: 265: if(12 == sampleChannelSelect)
  1823  0329  0869               	movf	_sampleChannelSelect,w
  1824  032A  3A0C               	xorlw	12
  1825                           
  1826                           ;common.c: 266: adc_test_init(12,3);
  1827  032B  3003               	movlw	3
  1828  032C  00A0               	movwf	?_adc_test_init
  1829  032D  1D03               	skipz
  1830  032E  2B31               	goto	L3
  1831  032F  300C               	movlw	12
  1832  0330  2B32               	goto	L2
  1833  0331                     L3:	
  1834                           ;common.c: 269: else
  1835                           ;common.c: 270: adc_test_init(13,3);
  1836                           
  1837  0331  300D               	movlw	13
  1838  0332                     L2:	
  1839  0332  2350  118A         	fcall	_adc_test_init
  1840                           
  1841                           ;common.c: 272: adc_start();
  1842  0334  2B65               	ljmp	l3284
  1843  0335                     __end_of_process_AD_Converter_Value:	
  1844  0335                     __ptext793:	
  1845 ;; =============== function _setAD_ConvertFlag ends ============
  1846                           
  1847                           
  1848 ;; *************** function _getAD_ConvertFlag *****************
  1849 ;; Defined at:
  1850 ;;		line 209 in file "D:\develop\190625\AK7030-OTP\common.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;		None
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;		None
  1855 ;; Return value:  Size  Location     Type
  1856 ;;                  1    wreg      unsigned char 
  1857 ;; Registers used:
  1858 ;;		wreg
  1859 ;; Tracked objects:
  1860 ;;		On entry : 0/0
  1861 ;;		On exit  : 60/0
  1862 ;;		Unchanged: FFF9F/0
  1863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1864 ;;      Params:         0       0       0       0       0
  1865 ;;      Locals:         0       0       0       0       0
  1866 ;;      Temps:          0       0       0       0       0
  1867 ;;      Totals:         0       0       0       0       0
  1868 ;;Total ram usage:        0 bytes
  1869 ;; Hardware stack levels used:    1
  1870 ;; Hardware stack levels required when called:    2
  1871 ;; This function calls:
  1872 ;;		Nothing
  1873 ;; This function is called by:
  1874 ;;		_process_AD_Converter_Value
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877  0335                     _getAD_ConvertFlag:	
  1878                           
  1879                           ;common.c: 210: return adc_convert_flag;
  1880                           
  1881                           ; Regs used in _getAD_ConvertFlag: [wreg]
  1882  0335  1283               	bcf	3,5	;RP0=0, select bank0
  1883  0336  1303               	bcf	3,6	;RP1=0, select bank0
  1884  0337  085A               	movf	_adc_convert_flag,w
  1885  0338  0008               	return
  1886  0339                     __end_of_getAD_ConvertFlag:	
  1887  0339                     __ptext792:	
  1888 ;; =============== function _AD_Sample ends ============
  1889                           
  1890                           
  1891 ;; *************** function _setAD_ConvertFlag *****************
  1892 ;; Defined at:
  1893 ;;		line 215 in file "D:\develop\190625\AK7030-OTP\common.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;  flag            1    wreg     unsigned char 
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;  flag            1    0[BANK0 ] unsigned char 
  1898 ;; Return value:  Size  Location     Type
  1899 ;;		None               void
  1900 ;; Registers used:
  1901 ;;		wreg
  1902 ;; Tracked objects:
  1903 ;;		On entry : 60/0
  1904 ;;		On exit  : 60/0
  1905 ;;		Unchanged: FFF9F/0
  1906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1907 ;;      Params:         0       0       0       0       0
  1908 ;;      Locals:         0       1       0       0       0
  1909 ;;      Temps:          0       0       0       0       0
  1910 ;;      Totals:         0       1       0       0       0
  1911 ;;Total ram usage:        1 bytes
  1912 ;; Hardware stack levels used:    1
  1913 ;; Hardware stack levels required when called:    2
  1914 ;; This function calls:
  1915 ;;		Nothing
  1916 ;; This function is called by:
  1917 ;;		_process_AD_Converter_Value
  1918 ;; This function uses a non-reentrant model
  1919 ;;
  1920  0339                     _setAD_ConvertFlag:	
  1921                           
  1922                           ; Regs used in _setAD_ConvertFlag: [wreg]
  1923                           ;setAD_ConvertFlag@flag stored from wreg
  1924  0339  00A0               	movwf	setAD_ConvertFlag@flag
  1925                           
  1926                           ;common.c: 216: adc_convert_flag = flag;
  1927  033A  00DA               	movwf	_adc_convert_flag
  1928  033B  0008               	return
  1929  033C                     __end_of_setAD_ConvertFlag:	
  1930  033C                     __ptext791:	
  1931 ;; =============== function _initPin ends ============
  1932                           
  1933                           
  1934 ;; *************** function _AD_Sample *****************
  1935 ;; Defined at:
  1936 ;;		line 286 in file "D:\develop\190625\AK7030-OTP\common.c"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;		None
  1939 ;; Auto vars:     Size  Location     Type
  1940 ;;		None
  1941 ;; Return value:  Size  Location     Type
  1942 ;;		None               void
  1943 ;; Registers used:
  1944 ;;		wreg, status,2, status,0
  1945 ;; Tracked objects:
  1946 ;;		On entry : 60/0
  1947 ;;		On exit  : 60/0
  1948 ;;		Unchanged: FFF9F/0
  1949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1950 ;;      Params:         0       0       0       0       0
  1951 ;;      Locals:         0       0       0       0       0
  1952 ;;      Temps:          0       0       0       0       0
  1953 ;;      Totals:         0       0       0       0       0
  1954 ;;Total ram usage:        0 bytes
  1955 ;; Hardware stack levels used:    1
  1956 ;; Hardware stack levels required when called:    2
  1957 ;; This function calls:
  1958 ;;		Nothing
  1959 ;; This function is called by:
  1960 ;;		_process_AD_Converter_Value
  1961 ;; This function uses a non-reentrant model
  1962 ;;
  1963  033C                     _AD_Sample:	
  1964                           
  1965                           ;common.c: 287: if(sampleTimes < 12)
  1966                           
  1967                           ; Regs used in _AD_Sample: [wreg+status,2+status,0]
  1968  033C  300C               	movlw	12
  1969  033D  025F               	subwf	_sampleTimes,w
  1970  033E  1803               	skipnc
  1971  033F  0008               	return
  1972  0340  300C               	movlw	12
  1973                           
  1974                           ;common.c: 288: {
  1975                           ;common.c: 309: sampleTimes++;
  1976  0341  0ADF               	incf	_sampleTimes,f
  1977                           
  1978                           ;common.c: 311: if(sampleTimes >= 12)
  1979  0342  025F               	subwf	_sampleTimes,w
  1980  0343  1C03               	skipc
  1981  0344  0008               	return
  1982                           
  1983                           ;common.c: 312: {
  1984                           ;common.c: 313: sampleTimes = 0;
  1985  0345  01DF               	clrf	_sampleTimes
  1986                           
  1987                           ;common.c: 315: if(sampleChannelSelect == 12)
  1988  0346  0869               	movf	_sampleChannelSelect,w
  1989  0347  3A0C               	xorlw	12
  1990  0348  1D03               	skipz
  1991  0349  2B4D               	goto	l3514
  1992                           
  1993                           ;common.c: 316: {
  1994                           ;common.c: 319: sampleChannelSelect = 13;
  1995  034A  300D               	movlw	13
  1996  034B  00E9               	movwf	_sampleChannelSelect
  1997                           
  1998                           ;common.c: 320: }
  1999  034C  0008               	return
  2000  034D                     l3514:	
  2001                           
  2002                           ;common.c: 331: else
  2003                           ;common.c: 332: {
  2004                           ;common.c: 334: sampleChannelSelect = 12;
  2005  034D  300C               	movlw	12
  2006  034E  00E9               	movwf	_sampleChannelSelect
  2007  034F  0008               	return
  2008  0350                     __end_of_AD_Sample:	
  2009  0350                     __ptext807:	
  2010 ;; =============== function _adc_start ends ============
  2011                           
  2012                           
  2013 ;; *************** function _adc_test_init *****************
  2014 ;; Defined at:
  2015 ;;		line 85 in file "D:\develop\190625\AK7030-OTP\periph.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;  channel         1    wreg     unsigned char 
  2018 ;;  ref             1    0[BANK0 ] unsigned char 
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;  channel         1    2[BANK0 ] unsigned char 
  2021 ;; Return value:  Size  Location     Type
  2022 ;;		None               void
  2023 ;; Registers used:
  2024 ;;		wreg, status,2, status,0
  2025 ;; Tracked objects:
  2026 ;;		On entry : 60/0
  2027 ;;		On exit  : 60/20
  2028 ;;		Unchanged: FFF9F/0
  2029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2030 ;;      Params:         0       1       0       0       0
  2031 ;;      Locals:         0       1       0       0       0
  2032 ;;      Temps:          0       1       0       0       0
  2033 ;;      Totals:         0       3       0       0       0
  2034 ;;Total ram usage:        3 bytes
  2035 ;; Hardware stack levels used:    1
  2036 ;; Hardware stack levels required when called:    2
  2037 ;; This function calls:
  2038 ;;		Nothing
  2039 ;; This function is called by:
  2040 ;;		_main
  2041 ;;		_process_AD_Converter_Value
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044  0350                     _adc_test_init:	
  2045                           
  2046                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  2047                           ;adc_test_init@channel stored from wreg
  2048  0350  00A2               	movwf	adc_test_init@channel
  2049                           
  2050                           ;periph.c: 86: ADCON0 = 0x00;
  2051  0351  019F               	clrf	31	;volatile
  2052                           
  2053                           ;periph.c: 87: ADCON0|=channel<<2;
  2054  0352  00A1               	movwf	??_adc_test_init
  2055  0353  1003               	clrc
  2056  0354  0DA1               	rlf	??_adc_test_init,f
  2057  0355  1003               	clrc
  2058  0356  0D21               	rlf	??_adc_test_init,w
  2059  0357  049F               	iorwf	31,f	;volatile
  2060                           
  2061                           ;periph.c: 88: ADCON1|=ref<<6;
  2062  0358  0820               	movf	adc_test_init@ref,w
  2063  0359  00A1               	movwf	??_adc_test_init
  2064  035A  0CA1               	rrf	??_adc_test_init,f
  2065  035B  0CA1               	rrf	??_adc_test_init,f
  2066  035C  0C21               	rrf	??_adc_test_init,w
  2067  035D  39C0               	andlw	192
  2068  035E  1683               	bsf	3,5	;RP0=1, select bank1
  2069  035F  049F               	iorwf	31,f	;volatile
  2070                           
  2071                           ;periph.c: 89: ADON=1;
  2072  0360  1283               	bcf	3,5	;RP0=0, select bank0
  2073  0361  141F               	bsf	31,0
  2074                           
  2075                           ;periph.c: 90: ADIE=1;
  2076  0362  1683               	bsf	3,5	;RP0=1, select bank1
  2077  0363  150D               	bsf	13,2
  2078  0364  0008               	return
  2079  0365                     __end_of_adc_test_init:	
  2080  0365                     __ptext806:	
  2081 ;; =============== function _startTwentyMinTimer ends ============
  2082                           
  2083                           
  2084 ;; *************** function _adc_start *****************
  2085 ;; Defined at:
  2086 ;;		line 100 in file "D:\develop\190625\AK7030-OTP\periph.c"
  2087 ;; Parameters:    Size  Location     Type
  2088 ;;		None
  2089 ;; Auto vars:     Size  Location     Type
  2090 ;;		None
  2091 ;; Return value:  Size  Location     Type
  2092 ;;		None               void
  2093 ;; Registers used:
  2094 ;;		None
  2095 ;; Tracked objects:
  2096 ;;		On entry : 60/20
  2097 ;;		On exit  : 60/0
  2098 ;;		Unchanged: FFF9F/0
  2099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2100 ;;      Params:         0       0       0       0       0
  2101 ;;      Locals:         0       0       0       0       0
  2102 ;;      Temps:          0       0       0       0       0
  2103 ;;      Totals:         0       0       0       0       0
  2104 ;;Total ram usage:        0 bytes
  2105 ;; Hardware stack levels used:    1
  2106 ;; Hardware stack levels required when called:    2
  2107 ;; This function calls:
  2108 ;;		Nothing
  2109 ;; This function is called by:
  2110 ;;		_main
  2111 ;;		_process_AD_Converter_Value
  2112 ;; This function uses a non-reentrant model
  2113 ;;
  2114  0365                     _adc_start:	
  2115  0365                     l3284:	
  2116                           ; Regs used in _adc_start: []
  2117                           
  2118                           
  2119                           ;periph.c: 101: GO=1;
  2120  0365  1283               	bcf	3,5	;RP0=0, select bank0
  2121  0366  149F               	bsf	31,1
  2122  0367  0008               	return
  2123  0368                     __end_of_adc_start:	
  2124                           
  2125                           	psect	text789
  2126  0399                     __ptext789:	
  2127 ;; =============== function _process_AD_Converter_Value ends ============
  2128                           
  2129                           
  2130 ;; *************** function _setPinInitVaule *****************
  2131 ;; Defined at:
  2132 ;;		line 306 in file "D:\develop\190625\AK7030-OTP\main.c"
  2133 ;; Parameters:    Size  Location     Type
  2134 ;;		None
  2135 ;; Auto vars:     Size  Location     Type
  2136 ;;		None
  2137 ;; Return value:  Size  Location     Type
  2138 ;;		None               void
  2139 ;; Registers used:
  2140 ;;		wreg, status,2, status,0, pclath, cstack
  2141 ;; Tracked objects:
  2142 ;;		On entry : 17F/20
  2143 ;;		On exit  : 17F/0
  2144 ;;		Unchanged: FFE80/0
  2145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2146 ;;      Params:         0       0       0       0       0
  2147 ;;      Locals:         0       0       0       0       0
  2148 ;;      Temps:          0       0       0       0       0
  2149 ;;      Totals:         0       0       0       0       0
  2150 ;;Total ram usage:        0 bytes
  2151 ;; Hardware stack levels used:    1
  2152 ;; Hardware stack levels required when called:    3
  2153 ;; This function calls:
  2154 ;;		_setPB3
  2155 ;;		_setPB4
  2156 ;;		_setPB5
  2157 ;; This function is called by:
  2158 ;;		_main
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161  0399                     _setPinInitVaule:	
  2162                           
  2163                           ;main.c: 308: setPB3(1);
  2164                           
  2165                           ; Regs used in _setPinInitVaule: [wreg+status,2+status,0+pclath+cstack]
  2166  0399  3001               	movlw	1
  2167  039A  23A1  118A         	fcall	_setPB3
  2168                           
  2169                           ;main.c: 309: setPB4(0);
  2170  039C  3000               	movlw	0
  2171  039D  23AA  118A         	fcall	_setPB4
  2172                           
  2173                           ;main.c: 310: setPB5(1);
  2174  039F  3001               	movlw	1
  2175  03A0  2BB2               	ljmp	_setPB5
  2176  03A1                     __end_of_setPinInitVaule:	
  2177  03A1                     __ptext820:	
  2178 ;; =============== function _initPB4 ends ============
  2179                           
  2180                           
  2181 ;; *************** function _setPB3 *****************
  2182 ;; Defined at:
  2183 ;;		line 143 in file "D:\develop\190625\AK7030-OTP\main.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;  bValue          1    wreg     unsigned char 
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;  bValue          1    0[BANK0 ] unsigned char 
  2188 ;; Return value:  Size  Location     Type
  2189 ;;		None               void
  2190 ;; Registers used:
  2191 ;;		wreg
  2192 ;; Tracked objects:
  2193 ;;		On entry : 40/0
  2194 ;;		On exit  : 60/0
  2195 ;;		Unchanged: FFF9F/0
  2196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2197 ;;      Params:         0       0       0       0       0
  2198 ;;      Locals:         0       1       0       0       0
  2199 ;;      Temps:          0       0       0       0       0
  2200 ;;      Totals:         0       1       0       0       0
  2201 ;;Total ram usage:        1 bytes
  2202 ;; Hardware stack levels used:    1
  2203 ;; Hardware stack levels required when called:    2
  2204 ;; This function calls:
  2205 ;;		Nothing
  2206 ;; This function is called by:
  2207 ;;		_setPinInitVaule
  2208 ;;		_main
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211  03A1                     _setPB3:	
  2212                           
  2213                           ; Regs used in _setPB3: [wreg]
  2214                           ;setPB3@bValue stored from wreg
  2215  03A1  1283               	bcf	3,5	;RP0=0, select bank0
  2216  03A2  00A0               	movwf	setPB3@bValue
  2217                           
  2218                           ;main.c: 144: if( bValue )
  2219  03A3  0820               	movf	setPB3@bValue,w
  2220  03A4  1903               	btfsc	3,2
  2221  03A5  2BA8               	goto	l685
  2222                           
  2223                           ;main.c: 146: PB3 = 1;
  2224  03A6  1586               	bsf	6,3
  2225  03A7  0008               	return
  2226  03A8                     l685:	
  2227                           
  2228                           ;main.c: 150: else
  2229                           ;main.c: 152: PB3= 0;
  2230  03A8  1186               	bcf	6,3
  2231  03A9  0008               	return
  2232  03AA                     __end_of_setPB3:	
  2233  03AA                     __ptext818:	
  2234 ;; =============== function _initPB5 ends ============
  2235                           
  2236                           
  2237 ;; *************** function _setPB4 *****************
  2238 ;; Defined at:
  2239 ;;		line 178 in file "D:\develop\190625\AK7030-OTP\main.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;  bValue          1    wreg     unsigned char 
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;  bValue          1    0[BANK0 ] unsigned char 
  2244 ;; Return value:  Size  Location     Type
  2245 ;;		None               void
  2246 ;; Registers used:
  2247 ;;		wreg
  2248 ;; Tracked objects:
  2249 ;;		On entry : 60/0
  2250 ;;		On exit  : 60/0
  2251 ;;		Unchanged: FFF9F/0
  2252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2253 ;;      Params:         0       0       0       0       0
  2254 ;;      Locals:         0       1       0       0       0
  2255 ;;      Temps:          0       0       0       0       0
  2256 ;;      Totals:         0       1       0       0       0
  2257 ;;Total ram usage:        1 bytes
  2258 ;; Hardware stack levels used:    1
  2259 ;; Hardware stack levels required when called:    2
  2260 ;; This function calls:
  2261 ;;		Nothing
  2262 ;; This function is called by:
  2263 ;;		_setPinInitVaule
  2264 ;;		_main
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267  03AA                     _setPB4:	
  2268                           
  2269                           ; Regs used in _setPB4: [wreg]
  2270                           ;setPB4@bValue stored from wreg
  2271  03AA  00A0               	movwf	setPB4@bValue
  2272                           
  2273                           ;main.c: 179: if( bValue )
  2274  03AB  0820               	movf	setPB4@bValue,w
  2275  03AC  1903               	btfsc	3,2
  2276  03AD  2BB0               	goto	l695
  2277                           
  2278                           ;main.c: 181: PB4 = 1;
  2279  03AE  1606               	bsf	6,4
  2280  03AF  0008               	return
  2281  03B0                     l695:	
  2282                           
  2283                           ;main.c: 185: else
  2284                           ;main.c: 187: PB4= 0;
  2285  03B0  1206               	bcf	6,4
  2286  03B1  0008               	return
  2287  03B2                     __end_of_setPB4:	
  2288  03B2                     __ptext816:	
  2289 ;; =============== function _initPB2_AsHighResistence ends ============
  2290                           
  2291                           
  2292 ;; *************** function _setPB5 *****************
  2293 ;; Defined at:
  2294 ;;		line 212 in file "D:\develop\190625\AK7030-OTP\main.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;  bValue          1    wreg     unsigned char 
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;  bValue          1    0[BANK0 ] unsigned char 
  2299 ;; Return value:  Size  Location     Type
  2300 ;;		None               void
  2301 ;; Registers used:
  2302 ;;		wreg
  2303 ;; Tracked objects:
  2304 ;;		On entry : 60/0
  2305 ;;		On exit  : 60/0
  2306 ;;		Unchanged: FFF9F/0
  2307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2308 ;;      Params:         0       0       0       0       0
  2309 ;;      Locals:         0       1       0       0       0
  2310 ;;      Temps:          0       0       0       0       0
  2311 ;;      Totals:         0       1       0       0       0
  2312 ;;Total ram usage:        1 bytes
  2313 ;; Hardware stack levels used:    1
  2314 ;; Hardware stack levels required when called:    2
  2315 ;; This function calls:
  2316 ;;		Nothing
  2317 ;; This function is called by:
  2318 ;;		_setPinInitVaule
  2319 ;;		_main
  2320 ;; This function uses a non-reentrant model
  2321 ;;
  2322  03B2                     _setPB5:	
  2323                           
  2324                           ; Regs used in _setPB5: [wreg]
  2325                           ;setPB5@bValue stored from wreg
  2326  03B2  00A0               	movwf	setPB5@bValue
  2327                           
  2328                           ;main.c: 213: if( bValue )
  2329  03B3  0820               	movf	setPB5@bValue,w
  2330  03B4  1903               	btfsc	3,2
  2331  03B5  2BB8               	goto	l705
  2332                           
  2333                           ;main.c: 215: PB5 = 1;
  2334  03B6  1686               	bsf	6,5
  2335  03B7  0008               	return
  2336  03B8                     l705:	
  2337                           
  2338                           ;main.c: 219: else
  2339                           ;main.c: 221: PB5= 0;
  2340  03B8  1286               	bcf	6,5
  2341  03B9  0008               	return
  2342  03BA                     __end_of_setPB5:	
  2343                           
  2344                           	psect	text790
  2345  0368                     __ptext790:	
  2346 ;; =============== function _setPinInitVaule ends ============
  2347                           
  2348                           
  2349 ;; *************** function _initPin *****************
  2350 ;; Defined at:
  2351 ;;		line 290 in file "D:\develop\190625\AK7030-OTP\main.c"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;		None
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;		None
  2356 ;; Return value:  Size  Location     Type
  2357 ;;		None               void
  2358 ;; Registers used:
  2359 ;;		wreg, status,2, status,0, pclath, cstack
  2360 ;; Tracked objects:
  2361 ;;		On entry : 17F/0
  2362 ;;		On exit  : 17F/20
  2363 ;;		Unchanged: FFE80/0
  2364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2365 ;;      Params:         0       0       0       0       0
  2366 ;;      Locals:         0       0       0       0       0
  2367 ;;      Temps:          0       0       0       0       0
  2368 ;;      Totals:         0       0       0       0       0
  2369 ;;Total ram usage:        0 bytes
  2370 ;; Hardware stack levels used:    1
  2371 ;; Hardware stack levels required when called:    3
  2372 ;; This function calls:
  2373 ;;		_initPB2_AsHighResistence
  2374 ;;		_initPB3
  2375 ;;		_initPB4
  2376 ;;		_initPB5
  2377 ;; This function is called by:
  2378 ;;		_main
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381  0368                     _initPin:	
  2382                           
  2383                           ;main.c: 292: initPB2_AsHighResistence();
  2384                           
  2385                           ; Regs used in _initPin: [wreg+status,2+status,0+pclath+cstack]
  2386  0368  237E  118A         	fcall	_initPB2_AsHighResistence
  2387                           
  2388                           ;main.c: 294: initPB3(0);
  2389  036A  3000               	movlw	0
  2390  036B  2372  118A         	fcall	_initPB3
  2391                           
  2392                           ;main.c: 296: initPB4(0);
  2393  036D  3000               	movlw	0
  2394  036E  2383  118A         	fcall	_initPB4
  2395                           
  2396                           ;main.c: 298: initPB5(0);
  2397  0370  3000               	movlw	0
  2398  0371  2B8E               	ljmp	_initPB5
  2399  0372                     __end_of_initPin:	
  2400  0372                     __ptext821:	
  2401 ;; =============== function _setPB3 ends ============
  2402                           
  2403                           
  2404 ;; *************** function _initPB3 *****************
  2405 ;; Defined at:
  2406 ;;		line 126 in file "D:\develop\190625\AK7030-OTP\main.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;  bValue          1    wreg     unsigned char 
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;  bValue          1    0[BANK0 ] unsigned char 
  2411 ;; Return value:  Size  Location     Type
  2412 ;;		None               void
  2413 ;; Registers used:
  2414 ;;		wreg
  2415 ;; Tracked objects:
  2416 ;;		On entry : 17F/60
  2417 ;;		On exit  : 17F/20
  2418 ;;		Unchanged: FFE80/0
  2419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2420 ;;      Params:         0       0       0       0       0
  2421 ;;      Locals:         0       1       0       0       0
  2422 ;;      Temps:          0       0       0       0       0
  2423 ;;      Totals:         0       1       0       0       0
  2424 ;;Total ram usage:        1 bytes
  2425 ;; Hardware stack levels used:    1
  2426 ;; Hardware stack levels required when called:    2
  2427 ;; This function calls:
  2428 ;;		Nothing
  2429 ;; This function is called by:
  2430 ;;		_initPin
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433  0372                     _initPB3:	
  2434                           
  2435                           ; Regs used in _initPB3: [wreg]
  2436                           ;initPB3@bValue stored from wreg
  2437  0372  1283               	bcf	3,5	;RP0=0, select bank0
  2438  0373  1303               	bcf	3,6	;RP1=0, select bank0
  2439  0374  00A0               	movwf	initPB3@bValue
  2440                           
  2441                           ;main.c: 127: if( bValue )
  2442  0375  0820               	movf	initPB3@bValue,w
  2443  0376  1903               	btfsc	3,2
  2444  0377  2B7B               	goto	l680
  2445                           
  2446                           ;main.c: 129: TRISB3 = 1;
  2447  0378  1683               	bsf	3,5	;RP0=1, select bank1
  2448  0379  1586               	bsf	6,3
  2449  037A  0008               	return
  2450  037B                     l680:	
  2451                           
  2452                           ;main.c: 133: else
  2453                           ;main.c: 135: TRISB3 = 0;
  2454  037B  1683               	bsf	3,5	;RP0=1, select bank1
  2455  037C  1186               	bcf	6,3
  2456  037D  0008               	return
  2457  037E                     __end_of_initPB3:	
  2458  037E                     __ptext815:	
  2459 ;; =============== function _pwm_start ends ============
  2460                           
  2461                           
  2462 ;; *************** function _initPB2_AsHighResistence *****************
  2463 ;; Defined at:
  2464 ;;		line 229 in file "D:\develop\190625\AK7030-OTP\main.c"
  2465 ;; Parameters:    Size  Location     Type
  2466 ;;		None
  2467 ;; Auto vars:     Size  Location     Type
  2468 ;;		None
  2469 ;; Return value:  Size  Location     Type
  2470 ;;		None               void
  2471 ;; Registers used:
  2472 ;;		None
  2473 ;; Tracked objects:
  2474 ;;		On entry : 17F/0
  2475 ;;		On exit  : 17F/60
  2476 ;;		Unchanged: FFE80/0
  2477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2478 ;;      Params:         0       0       0       0       0
  2479 ;;      Locals:         0       0       0       0       0
  2480 ;;      Temps:          0       0       0       0       0
  2481 ;;      Totals:         0       0       0       0       0
  2482 ;;Total ram usage:        0 bytes
  2483 ;; Hardware stack levels used:    1
  2484 ;; Hardware stack levels required when called:    2
  2485 ;; This function calls:
  2486 ;;		Nothing
  2487 ;; This function is called by:
  2488 ;;		_initPin
  2489 ;; This function uses a non-reentrant model
  2490 ;;
  2491  037E                     _initPB2_AsHighResistence:	
  2492                           
  2493                           ;main.c: 231: PB2 = 1;
  2494                           
  2495                           ; Regs used in _initPB2_AsHighResistence: []
  2496  037E  1506               	bsf	6,2
  2497                           
  2498                           ;main.c: 232: PBOD2 = 1;
  2499  037F  1683               	bsf	3,5	;RP0=1, select bank3
  2500  0380  1703               	bsf	3,6	;RP1=1, select bank3
  2501  0381  1508               	bsf	8,2
  2502  0382  0008               	return
  2503  0383                     __end_of_initPB2_AsHighResistence:	
  2504  0383                     __ptext819:	
  2505 ;; =============== function _setPB4 ends ============
  2506                           
  2507                           
  2508 ;; *************** function _initPB4 *****************
  2509 ;; Defined at:
  2510 ;;		line 161 in file "D:\develop\190625\AK7030-OTP\main.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;  bValue          1    wreg     unsigned char 
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;  bValue          1    0[BANK0 ] unsigned char 
  2515 ;; Return value:  Size  Location     Type
  2516 ;;		None               void
  2517 ;; Registers used:
  2518 ;;		wreg
  2519 ;; Tracked objects:
  2520 ;;		On entry : 17F/20
  2521 ;;		On exit  : 17F/20
  2522 ;;		Unchanged: FFE80/0
  2523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2524 ;;      Params:         0       0       0       0       0
  2525 ;;      Locals:         0       1       0       0       0
  2526 ;;      Temps:          0       0       0       0       0
  2527 ;;      Totals:         0       1       0       0       0
  2528 ;;Total ram usage:        1 bytes
  2529 ;; Hardware stack levels used:    1
  2530 ;; Hardware stack levels required when called:    2
  2531 ;; This function calls:
  2532 ;;		Nothing
  2533 ;; This function is called by:
  2534 ;;		_initPin
  2535 ;; This function uses a non-reentrant model
  2536 ;;
  2537  0383                     _initPB4:	
  2538                           
  2539                           ; Regs used in _initPB4: [wreg]
  2540                           ;initPB4@bValue stored from wreg
  2541  0383  1283               	bcf	3,5	;RP0=0, select bank0
  2542  0384  00A0               	movwf	initPB4@bValue
  2543                           
  2544                           ;main.c: 162: if( bValue )
  2545  0385  0820               	movf	initPB4@bValue,w
  2546  0386  1903               	btfsc	3,2
  2547  0387  2B8B               	goto	l690
  2548                           
  2549                           ;main.c: 164: TRISB4 = 1;
  2550  0388  1683               	bsf	3,5	;RP0=1, select bank1
  2551  0389  1606               	bsf	6,4
  2552  038A  0008               	return
  2553  038B                     l690:	
  2554                           
  2555                           ;main.c: 168: else
  2556                           ;main.c: 170: TRISB4= 0;
  2557  038B  1683               	bsf	3,5	;RP0=1, select bank1
  2558  038C  1206               	bcf	6,4
  2559  038D  0008               	return
  2560  038E                     __end_of_initPB4:	
  2561  038E                     __ptext817:	
  2562 ;; =============== function _setPB5 ends ============
  2563                           
  2564                           
  2565 ;; *************** function _initPB5 *****************
  2566 ;; Defined at:
  2567 ;;		line 195 in file "D:\develop\190625\AK7030-OTP\main.c"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;  bValue          1    wreg     unsigned char 
  2570 ;; Auto vars:     Size  Location     Type
  2571 ;;  bValue          1    0[BANK0 ] unsigned char 
  2572 ;; Return value:  Size  Location     Type
  2573 ;;		None               void
  2574 ;; Registers used:
  2575 ;;		wreg
  2576 ;; Tracked objects:
  2577 ;;		On entry : 17F/20
  2578 ;;		On exit  : 17F/20
  2579 ;;		Unchanged: FFE80/0
  2580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2581 ;;      Params:         0       0       0       0       0
  2582 ;;      Locals:         0       1       0       0       0
  2583 ;;      Temps:          0       0       0       0       0
  2584 ;;      Totals:         0       1       0       0       0
  2585 ;;Total ram usage:        1 bytes
  2586 ;; Hardware stack levels used:    1
  2587 ;; Hardware stack levels required when called:    2
  2588 ;; This function calls:
  2589 ;;		Nothing
  2590 ;; This function is called by:
  2591 ;;		_initPin
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594  038E                     _initPB5:	
  2595                           
  2596                           ; Regs used in _initPB5: [wreg]
  2597                           ;initPB5@bValue stored from wreg
  2598  038E  1283               	bcf	3,5	;RP0=0, select bank0
  2599  038F  00A0               	movwf	initPB5@bValue
  2600                           
  2601                           ;main.c: 196: if( bValue )
  2602  0390  0820               	movf	initPB5@bValue,w
  2603  0391  1903               	btfsc	3,2
  2604  0392  2B96               	goto	l700
  2605                           
  2606                           ;main.c: 198: TRISB5 = 1;
  2607  0393  1683               	bsf	3,5	;RP0=1, select bank1
  2608  0394  1686               	bsf	6,5
  2609  0395  0008               	return
  2610  0396                     l700:	
  2611                           
  2612                           ;main.c: 202: else
  2613                           ;main.c: 204: TRISB5= 0;
  2614  0396  1683               	bsf	3,5	;RP0=1, select bank1
  2615  0397  1286               	bcf	6,5
  2616  0398  0008               	return
  2617  0399                     __end_of_initPB5:	
  2618                           
  2619                           	psect	text795
  2620  0415                     __ptext795:	
  2621 ;; =============== function _Filter ends ============
  2622                           
  2623                           
  2624 ;; *************** function _isFinishedOneHoursTimer *****************
  2625 ;; Defined at:
  2626 ;;		line 507 in file "D:\develop\190625\AK7030-OTP\common.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;		None
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;		None
  2631 ;; Return value:  Size  Location     Type
  2632 ;;                  1    wreg      unsigned char 
  2633 ;; Registers used:
  2634 ;;		wreg, status,2, status,0
  2635 ;; Tracked objects:
  2636 ;;		On entry : 60/0
  2637 ;;		On exit  : 60/0
  2638 ;;		Unchanged: FFF9F/0
  2639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2640 ;;      Params:         0       0       0       0       0
  2641 ;;      Locals:         0       0       0       0       0
  2642 ;;      Temps:          0       0       0       0       0
  2643 ;;      Totals:         0       0       0       0       0
  2644 ;;Total ram usage:        0 bytes
  2645 ;; Hardware stack levels used:    1
  2646 ;; Hardware stack levels required when called:    2
  2647 ;; This function calls:
  2648 ;;		Nothing
  2649 ;; This function is called by:
  2650 ;;		_main
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653  0415                     _isFinishedOneHoursTimer:	
  2654                           
  2655                           ;common.c: 508: if((uiOneHourTimer == 0) && bOneHourTimerStartFlag)
  2656                           
  2657                           ; Regs used in _isFinishedOneHoursTimer: [wreg+status,2+status,0]
  2658  0415  084C               	movf	_uiOneHourTimer+1,w
  2659  0416  044B               	iorwf	_uiOneHourTimer,w
  2660  0417  1D03               	skipz
  2661  0418  3400               	retlw	0
  2662  0419  085C               	movf	_bOneHourTimerStartFlag,w
  2663  041A  1903               	btfsc	3,2
  2664  041B  3400               	retlw	0
  2665  041C  3001               	movlw	1
  2666                           
  2667                           ;common.c: 509: {
  2668                           ;common.c: 510: bOneHourTimerStartFlag = 0;
  2669  041D  01DC               	clrf	_bOneHourTimerStartFlag
  2670                           
  2671                           ;common.c: 511: return 1;
  2672  041E  0008               	return
  2673  041F                     __end_of_isFinishedOneHoursTimer:	
  2674                           ;common.c: 513: else
  2675                           ;common.c: 514: return 0;
  2676                           
  2677                           
  2678                           	psect	text796
  2679  03DD                     __ptext796:	
  2680 ;; =============== function _isFinishedOneHoursTimer ends ============
  2681                           
  2682                           
  2683 ;; *************** function _startOneHoursTimer *****************
  2684 ;; Defined at:
  2685 ;;		line 424 in file "D:\develop\190625\AK7030-OTP\common.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;		None
  2690 ;; Return value:  Size  Location     Type
  2691 ;;		None               void
  2692 ;; Registers used:
  2693 ;;		wreg, status,2, status,0
  2694 ;; Tracked objects:
  2695 ;;		On entry : 60/0
  2696 ;;		On exit  : 60/0
  2697 ;;		Unchanged: FFF9F/0
  2698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2699 ;;      Params:         0       2       0       0       0
  2700 ;;      Locals:         0       0       0       0       0
  2701 ;;      Temps:          0       0       0       0       0
  2702 ;;      Totals:         0       2       0       0       0
  2703 ;;Total ram usage:        2 bytes
  2704 ;; Hardware stack levels used:    1
  2705 ;; Hardware stack levels required when called:    2
  2706 ;; This function calls:
  2707 ;;		Nothing
  2708 ;; This function is called by:
  2709 ;;		_main
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712  03DD                     _startOneHoursTimer:	
  2713                           
  2714                           ;common.c: 425: if(( 0 == uiOneHourTimer ) && ( 0 == bOneHourTimerStartFlag ))
  2715                           
  2716                           ; Regs used in _startOneHoursTimer: [wreg+status,2+status,0]
  2717  03DD  084C               	movf	_uiOneHourTimer+1,w
  2718  03DE  044B               	iorwf	_uiOneHourTimer,w
  2719  03DF  1D03               	skipz
  2720  03E0  0008               	return
  2721  03E1  08DC               	movf	_bOneHourTimerStartFlag,f
  2722  03E2  1D03               	skipz
  2723  03E3  0008               	return
  2724                           
  2725                           ;common.c: 426: {
  2726                           ;common.c: 427: uiOneHourTimer = uiSetTime;
  2727  03E4  0821               	movf	startOneHoursTimer@uiSetTime+1,w
  2728  03E5  00CC               	movwf	_uiOneHourTimer+1
  2729  03E6  0820               	movf	startOneHoursTimer@uiSetTime,w
  2730  03E7  00CB               	movwf	_uiOneHourTimer
  2731                           
  2732                           ;common.c: 428: bOneHourTimerStartFlag = 1;
  2733  03E8  01DC               	clrf	_bOneHourTimerStartFlag
  2734  03E9  0ADC               	incf	_bOneHourTimerStartFlag,f
  2735  03EA  0008               	return
  2736  03EB                     __end_of_startOneHoursTimer:	
  2737                           
  2738                           	psect	text797
  2739  041F                     __ptext797:	
  2740 ;; =============== function _startOneHoursTimer ends ============
  2741                           
  2742                           
  2743 ;; *************** function _isFinishedThreeHoursTimer *****************
  2744 ;; Defined at:
  2745 ;;		line 494 in file "D:\develop\190625\AK7030-OTP\common.c"
  2746 ;; Parameters:    Size  Location     Type
  2747 ;;		None
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;		None
  2750 ;; Return value:  Size  Location     Type
  2751 ;;                  1    wreg      unsigned char 
  2752 ;; Registers used:
  2753 ;;		wreg, status,2, status,0
  2754 ;; Tracked objects:
  2755 ;;		On entry : 60/0
  2756 ;;		On exit  : 60/0
  2757 ;;		Unchanged: FFF9F/0
  2758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2759 ;;      Params:         0       0       0       0       0
  2760 ;;      Locals:         0       0       0       0       0
  2761 ;;      Temps:          0       0       0       0       0
  2762 ;;      Totals:         0       0       0       0       0
  2763 ;;Total ram usage:        0 bytes
  2764 ;; Hardware stack levels used:    1
  2765 ;; Hardware stack levels required when called:    2
  2766 ;; This function calls:
  2767 ;;		Nothing
  2768 ;; This function is called by:
  2769 ;;		_main
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772  041F                     _isFinishedThreeHoursTimer:	
  2773                           
  2774                           ;common.c: 495: if((uiSmallTimer == 0) && bSmallTimerStartFlag)
  2775                           
  2776                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  2777  041F  084E               	movf	_uiSmallTimer+1,w
  2778  0420  044D               	iorwf	_uiSmallTimer,w
  2779  0421  1D03               	skipz
  2780  0422  3400               	retlw	0
  2781  0423  085D               	movf	_bSmallTimerStartFlag,w
  2782  0424  1903               	btfsc	3,2
  2783  0425  3400               	retlw	0
  2784  0426  3001               	movlw	1
  2785                           
  2786                           ;common.c: 496: {
  2787                           ;common.c: 497: bSmallTimerStartFlag = 0;
  2788  0427  01DD               	clrf	_bSmallTimerStartFlag
  2789                           
  2790                           ;common.c: 498: return 1;
  2791  0428  0008               	return
  2792  0429                     __end_of_isFinishedThreeHoursTimer:	
  2793                           ;common.c: 500: else
  2794                           ;common.c: 501: return 0;
  2795                           
  2796                           
  2797                           	psect	text798
  2798  03EB                     __ptext798:	
  2799 ;; =============== function _isFinishedThreeHoursTimer ends ============
  2800                           
  2801                           
  2802 ;; *************** function _startThreeHoursTimer *****************
  2803 ;; Defined at:
  2804 ;;		line 411 in file "D:\develop\190625\AK7030-OTP\common.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;		None
  2809 ;; Return value:  Size  Location     Type
  2810 ;;		None               void
  2811 ;; Registers used:
  2812 ;;		wreg, status,2, status,0
  2813 ;; Tracked objects:
  2814 ;;		On entry : 60/0
  2815 ;;		On exit  : 60/0
  2816 ;;		Unchanged: FFF9F/0
  2817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2818 ;;      Params:         0       2       0       0       0
  2819 ;;      Locals:         0       0       0       0       0
  2820 ;;      Temps:          0       0       0       0       0
  2821 ;;      Totals:         0       2       0       0       0
  2822 ;;Total ram usage:        2 bytes
  2823 ;; Hardware stack levels used:    1
  2824 ;; Hardware stack levels required when called:    2
  2825 ;; This function calls:
  2826 ;;		Nothing
  2827 ;; This function is called by:
  2828 ;;		_main
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831  03EB                     _startThreeHoursTimer:	
  2832                           
  2833                           ;common.c: 412: if(( 0 == uiSmallTimer ) && ( 0 == bSmallTimerStartFlag ))
  2834                           
  2835                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  2836  03EB  084E               	movf	_uiSmallTimer+1,w
  2837  03EC  044D               	iorwf	_uiSmallTimer,w
  2838  03ED  1D03               	skipz
  2839  03EE  0008               	return
  2840  03EF  08DD               	movf	_bSmallTimerStartFlag,f
  2841  03F0  1D03               	skipz
  2842  03F1  0008               	return
  2843                           
  2844                           ;common.c: 413: {
  2845                           ;common.c: 414: uiSmallTimer = uiSetTime;
  2846  03F2  0821               	movf	startThreeHoursTimer@uiSetTime+1,w
  2847  03F3  00CE               	movwf	_uiSmallTimer+1
  2848  03F4  0820               	movf	startThreeHoursTimer@uiSetTime,w
  2849  03F5  00CD               	movwf	_uiSmallTimer
  2850                           
  2851                           ;common.c: 415: bSmallTimerStartFlag = 1;
  2852  03F6  01DD               	clrf	_bSmallTimerStartFlag
  2853  03F7  0ADD               	incf	_bSmallTimerStartFlag,f
  2854  03F8  0008               	return
  2855  03F9                     __end_of_startThreeHoursTimer:	
  2856                           
  2857                           	psect	text799
  2858  0429                     __ptext799:	
  2859 ;; =============== function _startThreeHoursTimer ends ============
  2860                           
  2861                           
  2862 ;; *************** function _isFinishedTwelveHoursTimer *****************
  2863 ;; Defined at:
  2864 ;;		line 483 in file "D:\develop\190625\AK7030-OTP\common.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;		None
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;		None
  2869 ;; Return value:  Size  Location     Type
  2870 ;;                  1    wreg      unsigned char 
  2871 ;; Registers used:
  2872 ;;		wreg, status,2, status,0
  2873 ;; Tracked objects:
  2874 ;;		On entry : 60/0
  2875 ;;		On exit  : 60/0
  2876 ;;		Unchanged: FFF9F/0
  2877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2878 ;;      Params:         0       0       0       0       0
  2879 ;;      Locals:         0       0       0       0       0
  2880 ;;      Temps:          0       0       0       0       0
  2881 ;;      Totals:         0       0       0       0       0
  2882 ;;Total ram usage:        0 bytes
  2883 ;; Hardware stack levels used:    1
  2884 ;; Hardware stack levels required when called:    2
  2885 ;; This function calls:
  2886 ;;		Nothing
  2887 ;; This function is called by:
  2888 ;;		_main
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891  0429                     _isFinishedTwelveHoursTimer:	
  2892                           
  2893                           ;common.c: 484: if(( uiBigTimer == 0 ) && bBigTimerStartFlag )
  2894                           
  2895                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  2896  0429  084A               	movf	_uiBigTimer+1,w
  2897  042A  0449               	iorwf	_uiBigTimer,w
  2898  042B  1D03               	skipz
  2899  042C  3400               	retlw	0
  2900  042D  085B               	movf	_bBigTimerStartFlag,w
  2901  042E  1903               	btfsc	3,2
  2902  042F  3400               	retlw	0
  2903  0430  3001               	movlw	1
  2904                           
  2905                           ;common.c: 485: {
  2906                           ;common.c: 486: bBigTimerStartFlag = 0;
  2907  0431  01DB               	clrf	_bBigTimerStartFlag
  2908                           
  2909                           ;common.c: 487: return 1;
  2910  0432  0008               	return
  2911  0433                     __end_of_isFinishedTwelveHoursTimer:	
  2912                           ;common.c: 489: else
  2913                           ;common.c: 490: return 0;
  2914                           
  2915                           
  2916                           	psect	text800
  2917  03F9                     __ptext800:	
  2918 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  2919                           
  2920                           
  2921 ;; *************** function _startTwelveHourTimer *****************
  2922 ;; Defined at:
  2923 ;;		line 363 in file "D:\develop\190625\AK7030-OTP\common.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;		None
  2928 ;; Return value:  Size  Location     Type
  2929 ;;		None               void
  2930 ;; Registers used:
  2931 ;;		wreg, status,2, status,0
  2932 ;; Tracked objects:
  2933 ;;		On entry : 60/0
  2934 ;;		On exit  : 60/0
  2935 ;;		Unchanged: FFF9F/0
  2936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2937 ;;      Params:         0       2       0       0       0
  2938 ;;      Locals:         0       0       0       0       0
  2939 ;;      Temps:          0       0       0       0       0
  2940 ;;      Totals:         0       2       0       0       0
  2941 ;;Total ram usage:        2 bytes
  2942 ;; Hardware stack levels used:    1
  2943 ;; Hardware stack levels required when called:    2
  2944 ;; This function calls:
  2945 ;;		Nothing
  2946 ;; This function is called by:
  2947 ;;		_main
  2948 ;; This function uses a non-reentrant model
  2949 ;;
  2950  03F9                     _startTwelveHourTimer:	
  2951                           
  2952                           ;common.c: 364: if((0 == uiBigTimer) && ( 0 == bBigTimerStartFlag))
  2953                           
  2954                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  2955  03F9  084A               	movf	_uiBigTimer+1,w
  2956  03FA  0449               	iorwf	_uiBigTimer,w
  2957  03FB  1D03               	skipz
  2958  03FC  0008               	return
  2959  03FD  08DB               	movf	_bBigTimerStartFlag,f
  2960  03FE  1D03               	skipz
  2961  03FF  0008               	return
  2962                           
  2963                           ;common.c: 365: {
  2964                           ;common.c: 366: uiBigTimer = uiSetTime;
  2965  0400  0821               	movf	startTwelveHourTimer@uiSetTime+1,w
  2966  0401  00CA               	movwf	_uiBigTimer+1
  2967  0402  0820               	movf	startTwelveHourTimer@uiSetTime,w
  2968  0403  00C9               	movwf	_uiBigTimer
  2969                           
  2970                           ;common.c: 367: bBigTimerStartFlag = 1;
  2971  0404  01DB               	clrf	_bBigTimerStartFlag
  2972  0405  0ADB               	incf	_bBigTimerStartFlag,f
  2973  0406  0008               	return
  2974  0407                     __end_of_startTwelveHourTimer:	
  2975                           
  2976                           	psect	text801
  2977  045C                     __ptext801:	
  2978 ;; =============== function _startTwelveHourTimer ends ============
  2979                           
  2980                           
  2981 ;; *************** function _clearTwentyMinTimer *****************
  2982 ;; Defined at:
  2983 ;;		line 404 in file "D:\develop\190625\AK7030-OTP\common.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;		None
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;		None
  2988 ;; Return value:  Size  Location     Type
  2989 ;;		None               void
  2990 ;; Registers used:
  2991 ;;		status,2
  2992 ;; Tracked objects:
  2993 ;;		On entry : 60/0
  2994 ;;		On exit  : 60/0
  2995 ;;		Unchanged: FFF9F/0
  2996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2997 ;;      Params:         0       0       0       0       0
  2998 ;;      Locals:         0       0       0       0       0
  2999 ;;      Temps:          0       0       0       0       0
  3000 ;;      Totals:         0       0       0       0       0
  3001 ;;Total ram usage:        0 bytes
  3002 ;; Hardware stack levels used:    1
  3003 ;; Hardware stack levels required when called:    2
  3004 ;; This function calls:
  3005 ;;		Nothing
  3006 ;; This function is called by:
  3007 ;;		_main
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010  045C                     _clearTwentyMinTimer:	
  3011                           
  3012                           ;common.c: 405: uiTwentyMinTimer = 0;
  3013                           
  3014                           ; Regs used in _clearTwentyMinTimer: [status,2]
  3015  045C  01CF               	clrf	_uiTwentyMinTimer
  3016  045D  01D0               	clrf	_uiTwentyMinTimer+1
  3017                           
  3018                           ;common.c: 406: bTwentyMinStartFlag = 0;
  3019  045E  01DE               	clrf	_bTwentyMinStartFlag
  3020  045F  0008               	return
  3021  0460                     __end_of_clearTwentyMinTimer:	
  3022                           
  3023                           	psect	text802
  3024  0433                     __ptext802:	
  3025 ;; =============== function _clearTwentyMinTimer ends ============
  3026                           
  3027                           
  3028 ;; *************** function _isFinishedTwentyMinTimer *****************
  3029 ;; Defined at:
  3030 ;;		line 459 in file "D:\develop\190625\AK7030-OTP\common.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;		None
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;		None
  3035 ;; Return value:  Size  Location     Type
  3036 ;;                  1    wreg      unsigned char 
  3037 ;; Registers used:
  3038 ;;		wreg, status,2, status,0
  3039 ;; Tracked objects:
  3040 ;;		On entry : 60/0
  3041 ;;		On exit  : 60/0
  3042 ;;		Unchanged: FFF9F/0
  3043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3044 ;;      Params:         0       0       0       0       0
  3045 ;;      Locals:         0       0       0       0       0
  3046 ;;      Temps:          0       0       0       0       0
  3047 ;;      Totals:         0       0       0       0       0
  3048 ;;Total ram usage:        0 bytes
  3049 ;; Hardware stack levels used:    1
  3050 ;; Hardware stack levels required when called:    2
  3051 ;; This function calls:
  3052 ;;		Nothing
  3053 ;; This function is called by:
  3054 ;;		_main
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057  0433                     _isFinishedTwentyMinTimer:	
  3058                           
  3059                           ;common.c: 460: if(( 0 == uiTwentyMinTimer ) && bTwentyMinStartFlag )
  3060                           
  3061                           ; Regs used in _isFinishedTwentyMinTimer: [wreg+status,2+status,0]
  3062  0433  0850               	movf	_uiTwentyMinTimer+1,w
  3063  0434  044F               	iorwf	_uiTwentyMinTimer,w
  3064  0435  1D03               	skipz
  3065  0436  3400               	retlw	0
  3066  0437  085E               	movf	_bTwentyMinStartFlag,w
  3067  0438  1903               	btfsc	3,2
  3068  0439  3400               	retlw	0
  3069  043A  3001               	movlw	1
  3070                           
  3071                           ;common.c: 461: {
  3072                           ;common.c: 462: bTwentyMinStartFlag = 0;
  3073  043B  01DE               	clrf	_bTwentyMinStartFlag
  3074                           
  3075                           ;common.c: 463: return 1;
  3076  043C  0008               	return
  3077  043D                     __end_of_isFinishedTwentyMinTimer:	
  3078                           ;common.c: 465: else
  3079                           ;common.c: 466: return 0;
  3080                           
  3081                           
  3082                           	psect	text803
  3083  046F                     __ptext803:	
  3084 ;; =============== function _isFinishedTwentyMinTimer ends ============
  3085                           
  3086                           
  3087 ;; *************** function _clrSampeTime *****************
  3088 ;; Defined at:
  3089 ;;		line 529 in file "D:\develop\190625\AK7030-OTP\common.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;		None
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;		None
  3094 ;; Return value:  Size  Location     Type
  3095 ;;		None               void
  3096 ;; Registers used:
  3097 ;;		status,2
  3098 ;; Tracked objects:
  3099 ;;		On entry : 60/0
  3100 ;;		On exit  : 60/0
  3101 ;;		Unchanged: FFF9F/0
  3102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3103 ;;      Params:         0       0       0       0       0
  3104 ;;      Locals:         0       0       0       0       0
  3105 ;;      Temps:          0       0       0       0       0
  3106 ;;      Totals:         0       0       0       0       0
  3107 ;;Total ram usage:        0 bytes
  3108 ;; Hardware stack levels used:    1
  3109 ;; Hardware stack levels required when called:    2
  3110 ;; This function calls:
  3111 ;;		Nothing
  3112 ;; This function is called by:
  3113 ;;		_main
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116  046F                     _clrSampeTime:	
  3117                           
  3118                           ;common.c: 530: timer.timer10msStopWatch = 0;
  3119                           
  3120                           ; Regs used in _clrSampeTime: [status,2]
  3121  046F  01E0               	clrf	_timer
  3122  0470  0008               	return
  3123  0471                     __end_of_clrSampeTime:	
  3124                           
  3125                           	psect	text804
  3126  0457                     __ptext804:	
  3127 ;; =============== function _clrSampeTime ends ============
  3128                           
  3129                           
  3130 ;; *************** function _isPermitSampleTime *****************
  3131 ;; Defined at:
  3132 ;;		line 519 in file "D:\develop\190625\AK7030-OTP\common.c"
  3133 ;; Parameters:    Size  Location     Type
  3134 ;;		None
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;		None
  3137 ;; Return value:  Size  Location     Type
  3138 ;;                  1    wreg      unsigned char 
  3139 ;; Registers used:
  3140 ;;		wreg
  3141 ;; Tracked objects:
  3142 ;;		On entry : 60/0
  3143 ;;		On exit  : 60/0
  3144 ;;		Unchanged: FFF9F/0
  3145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3146 ;;      Params:         0       0       0       0       0
  3147 ;;      Locals:         0       0       0       0       0
  3148 ;;      Temps:          0       0       0       0       0
  3149 ;;      Totals:         0       0       0       0       0
  3150 ;;Total ram usage:        0 bytes
  3151 ;; Hardware stack levels used:    1
  3152 ;; Hardware stack levels required when called:    2
  3153 ;; This function calls:
  3154 ;;		Nothing
  3155 ;; This function is called by:
  3156 ;;		_main
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159  0457                     _isPermitSampleTime:	
  3160                           
  3161                           ;common.c: 520: if(timer.timer10msStopWatch >= 10)
  3162                           
  3163                           ; Regs used in _isPermitSampleTime: [wreg]
  3164  0457  300A               	movlw	10
  3165  0458  0260               	subwf	_timer,w
  3166  0459  1803               	btfsc	3,0
  3167                           
  3168                           ;common.c: 521: {
  3169                           ;common.c: 522: return 1;
  3170  045A  3401               	retlw	1
  3171                           
  3172                           ;common.c: 524: else
  3173                           ;common.c: 525: return 0;
  3174  045B  3400               	retlw	0
  3175  045C                     __end_of_isPermitSampleTime:	
  3176                           
  3177                           	psect	text805
  3178  0407                     __ptext805:	
  3179 ;; =============== function _isPermitSampleTime ends ============
  3180                           
  3181                           
  3182 ;; *************** function _startTwentyMinTimer *****************
  3183 ;; Defined at:
  3184 ;;		line 449 in file "D:\develop\190625\AK7030-OTP\common.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;  uiSetValue      2    0[BANK0 ] unsigned int 
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;		None
  3189 ;; Return value:  Size  Location     Type
  3190 ;;		None               void
  3191 ;; Registers used:
  3192 ;;		wreg, status,2, status,0
  3193 ;; Tracked objects:
  3194 ;;		On entry : 17F/0
  3195 ;;		On exit  : 17F/0
  3196 ;;		Unchanged: FFE80/0
  3197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3198 ;;      Params:         0       2       0       0       0
  3199 ;;      Locals:         0       0       0       0       0
  3200 ;;      Temps:          0       0       0       0       0
  3201 ;;      Totals:         0       2       0       0       0
  3202 ;;Total ram usage:        2 bytes
  3203 ;; Hardware stack levels used:    1
  3204 ;; Hardware stack levels required when called:    2
  3205 ;; This function calls:
  3206 ;;		Nothing
  3207 ;; This function is called by:
  3208 ;;		_main
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211  0407                     _startTwentyMinTimer:	
  3212                           
  3213                           ;common.c: 450: if(( 0 == uiTwentyMinTimer) && ( 0 == bTwentyMinStartFlag))
  3214                           
  3215                           ; Regs used in _startTwentyMinTimer: [wreg+status,2+status,0]
  3216  0407  0850               	movf	_uiTwentyMinTimer+1,w
  3217  0408  044F               	iorwf	_uiTwentyMinTimer,w
  3218  0409  1D03               	skipz
  3219  040A  0008               	return
  3220  040B  08DE               	movf	_bTwentyMinStartFlag,f
  3221  040C  1D03               	skipz
  3222  040D  0008               	return
  3223                           
  3224                           ;common.c: 451: {
  3225                           ;common.c: 452: uiTwentyMinTimer = uiSetValue;
  3226  040E  0821               	movf	startTwentyMinTimer@uiSetValue+1,w
  3227  040F  00D0               	movwf	_uiTwentyMinTimer+1
  3228  0410  0820               	movf	startTwentyMinTimer@uiSetValue,w
  3229  0411  00CF               	movwf	_uiTwentyMinTimer
  3230                           
  3231                           ;common.c: 453: bTwentyMinStartFlag = 1;
  3232  0412  01DE               	clrf	_bTwentyMinStartFlag
  3233  0413  0ADE               	incf	_bTwentyMinStartFlag,f
  3234  0414  0008               	return
  3235  0415                     __end_of_startTwentyMinTimer:	
  3236                           
  3237                           	psect	text808
  3238  046C                     __ptext808:	
  3239 ;; =============== function _adc_test_init ends ============
  3240                           
  3241                           
  3242 ;; *************** function _timer1_interrupt_config *****************
  3243 ;; Defined at:
  3244 ;;		line 201 in file "D:\develop\190625\AK7030-OTP\common.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;		None
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;		None
  3249 ;; Return value:  Size  Location     Type
  3250 ;;		None               void
  3251 ;; Registers used:
  3252 ;;		None
  3253 ;; Tracked objects:
  3254 ;;		On entry : 17F/20
  3255 ;;		On exit  : 17F/20
  3256 ;;		Unchanged: FFE80/0
  3257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3258 ;;      Params:         0       0       0       0       0
  3259 ;;      Locals:         0       0       0       0       0
  3260 ;;      Temps:          0       0       0       0       0
  3261 ;;      Totals:         0       0       0       0       0
  3262 ;;Total ram usage:        0 bytes
  3263 ;; Hardware stack levels used:    1
  3264 ;; Hardware stack levels required when called:    2
  3265 ;; This function calls:
  3266 ;;		Nothing
  3267 ;; This function is called by:
  3268 ;;		_main
  3269 ;; This function uses a non-reentrant model
  3270 ;;
  3271  046C                     _timer1_interrupt_config:	
  3272                           
  3273                           ;common.c: 202: GIE = 1;
  3274                           
  3275                           ; Regs used in _timer1_interrupt_config: []
  3276  046C  178B               	bsf	11,7
  3277                           
  3278                           ;common.c: 203: PEIE = 1;
  3279  046D  170B               	bsf	11,6
  3280  046E  0008               	return
  3281  046F                     __end_of_timer1_interrupt_config:	
  3282                           
  3283                           	psect	text809
  3284  043D                     __ptext809:	
  3285 ;; =============== function _timer1_interrupt_config ends ============
  3286                           
  3287                           
  3288 ;; *************** function _timer1_config *****************
  3289 ;; Defined at:
  3290 ;;		line 189 in file "D:\develop\190625\AK7030-OTP\common.c"
  3291 ;; Parameters:    Size  Location     Type
  3292 ;;		None
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;		None
  3295 ;; Return value:  Size  Location     Type
  3296 ;;		None               void
  3297 ;; Registers used:
  3298 ;;		wreg
  3299 ;; Tracked objects:
  3300 ;;		On entry : 17F/40
  3301 ;;		On exit  : 17F/20
  3302 ;;		Unchanged: FFE80/0
  3303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3304 ;;      Params:         0       0       0       0       0
  3305 ;;      Locals:         0       0       0       0       0
  3306 ;;      Temps:          0       0       0       0       0
  3307 ;;      Totals:         0       0       0       0       0
  3308 ;;Total ram usage:        0 bytes
  3309 ;; Hardware stack levels used:    1
  3310 ;; Hardware stack levels required when called:    2
  3311 ;; This function calls:
  3312 ;;		Nothing
  3313 ;; This function is called by:
  3314 ;;		_main
  3315 ;; This function uses a non-reentrant model
  3316 ;;
  3317  043D                     _timer1_config:	
  3318                           
  3319                           ;common.c: 191: TMR1H=0xCF;
  3320                           
  3321                           ; Regs used in _timer1_config: [wreg]
  3322  043D  30CF               	movlw	207
  3323  043E  1303               	bcf	3,6	;RP1=0, select bank0
  3324  043F  008F               	movwf	15	;volatile
  3325                           
  3326                           ;common.c: 192: TMR1L=0x2C;
  3327  0440  302C               	movlw	44
  3328  0441  008E               	movwf	14	;volatile
  3329                           
  3330                           ;common.c: 193: T1CON=0xE1;
  3331  0442  30E1               	movlw	225
  3332  0443  0090               	movwf	16	;volatile
  3333                           
  3334                           ;common.c: 194: TMR1IE=1;
  3335  0444  1683               	bsf	3,5	;RP0=1, select bank1
  3336  0445  140C               	bsf	12,0
  3337  0446  0008               	return
  3338  0447                     __end_of_timer1_config:	
  3339                           
  3340                           	psect	text810
  3341  044F                     __ptext810:	
  3342 ;; =============== function _timer1_config ends ============
  3343                           
  3344                           
  3345 ;; *************** function _clock_config *****************
  3346 ;; Defined at:
  3347 ;;		line 181 in file "D:\develop\190625\AK7030-OTP\common.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;		None
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;		None
  3352 ;; Return value:  Size  Location     Type
  3353 ;;		None               void
  3354 ;; Registers used:
  3355 ;;		wreg, status,2
  3356 ;; Tracked objects:
  3357 ;;		On entry : 17F/20
  3358 ;;		On exit  : 17F/40
  3359 ;;		Unchanged: FFE80/0
  3360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3361 ;;      Params:         0       0       0       0       0
  3362 ;;      Locals:         0       0       0       0       0
  3363 ;;      Temps:          0       0       0       0       0
  3364 ;;      Totals:         0       0       0       0       0
  3365 ;;Total ram usage:        0 bytes
  3366 ;; Hardware stack levels used:    1
  3367 ;; Hardware stack levels required when called:    2
  3368 ;; This function calls:
  3369 ;;		Nothing
  3370 ;; This function is called by:
  3371 ;;		_main
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374  044F                     _clock_config:	
  3375                           
  3376                           ;common.c: 183: CLKPR = 0x80;
  3377                           
  3378                           ; Regs used in _clock_config: [wreg+status,2]
  3379  044F  3080               	movlw	128
  3380  0450  1283               	bcf	3,5	;RP0=0, select bank2
  3381  0451  1703               	bsf	3,6	;RP1=1, select bank2
  3382  0452  0088               	movwf	8	;volatile
  3383                           
  3384                           ;common.c: 184: CLKPR = 0x00;
  3385  0453  0188               	clrf	8	;volatile
  3386  0454                     l1532:	
  3387                           ;common.c: 185: while(CLKPCE);
  3388                           
  3389  0454  1F88               	btfss	8,7
  3390  0455  0008               	return
  3391  0456  2C54               	goto	l1532
  3392  0457                     __end_of_clock_config:	
  3393                           
  3394                           	psect	text811
  3395  0471                     __ptext811:	
  3396 ;; =============== function _clock_config ends ============
  3397                           
  3398                           
  3399 ;; *************** function _reset *****************
  3400 ;; Defined at:
  3401 ;;		line 336 in file "D:\develop\190625\AK7030-OTP\main.c"
  3402 ;; Parameters:    Size  Location     Type
  3403 ;;		None
  3404 ;; Auto vars:     Size  Location     Type
  3405 ;;		None
  3406 ;; Return value:  Size  Location     Type
  3407 ;;		None               void
  3408 ;; Registers used:
  3409 ;;		None
  3410 ;; Tracked objects:
  3411 ;;		On entry : 60/0
  3412 ;;		On exit  : 60/0
  3413 ;;		Unchanged: FFFFFF9F/0
  3414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3415 ;;      Params:         0       0       0       0       0
  3416 ;;      Locals:         0       0       0       0       0
  3417 ;;      Temps:          0       0       0       0       0
  3418 ;;      Totals:         0       0       0       0       0
  3419 ;;Total ram usage:        0 bytes
  3420 ;; Hardware stack levels used:    1
  3421 ;; Hardware stack levels required when called:    2
  3422 ;; This function calls:
  3423 ;;		Nothing
  3424 ;; This function is called by:
  3425 ;;		_main
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428  0471                     _reset:	
  3429  0471                     l731:	
  3430                           ; Regs used in _reset: []
  3431                           ;main.c: 338: while(1);
  3432                           
  3433  0471  2C71               	goto	l731
  3434                           
  3435                           	psect	text812
  3436  0472                     __ptext812:	
  3437  0472                     __end_of_reset:	
  3438                           
  3439 ;; =============== function _reset ends ============
  3440 ;; *************** function _setPulseWidth *****************
  3441 ;; Defined at:
  3442 ;;		line 327 in file "D:\develop\190625\AK7030-OTP\main.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;		None
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;		None
  3447 ;; Return value:  Size  Location     Type
  3448 ;;		None               void
  3449 ;; Registers used:
  3450 ;;		None
  3451 ;; Tracked objects:
  3452 ;;		On entry : 60/0
  3453 ;;		On exit  : 60/0
  3454 ;;		Unchanged: FFFFFF9F/0
  3455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3456 ;;      Params:         0       0       0       0       0
  3457 ;;      Locals:         0       0       0       0       0
  3458 ;;      Temps:          0       0       0       0       0
  3459 ;;      Totals:         0       0       0       0       0
  3460 ;;Total ram usage:        0 bytes
  3461 ;; Hardware stack levels used:    1
  3462 ;; Hardware stack levels required when called:    2
  3463 ;; This function calls:
  3464 ;;		Nothing
  3465 ;; This function is called by:
  3466 ;;		_main
  3467 ;; This function uses a non-reentrant model
  3468 ;;
  3469  0472                     _setPulseWidth:	
  3470                           
  3471                           ; Regs used in _setPulseWidth: []
  3472  0472  0008               	return
  3473  0473                     __end_of_setPulseWidth:	
  3474                           
  3475                           	psect	text813
  3476  0460                     __ptext813:	
  3477 ;; =============== function _setPulseWidth ends ============
  3478                           
  3479                           
  3480 ;; *************** function _selectAdChannel *****************
  3481 ;; Defined at:
  3482 ;;		line 317 in file "D:\develop\190625\AK7030-OTP\main.c"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;		None
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;		None
  3487 ;; Return value:  Size  Location     Type
  3488 ;;		None               void
  3489 ;; Registers used:
  3490 ;;		None
  3491 ;; Tracked objects:
  3492 ;;		On entry : 17F/0
  3493 ;;		On exit  : 17F/20
  3494 ;;		Unchanged: FFE80/0
  3495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3496 ;;      Params:         0       0       0       0       0
  3497 ;;      Locals:         0       0       0       0       0
  3498 ;;      Temps:          0       0       0       0       0
  3499 ;;      Totals:         0       0       0       0       0
  3500 ;;Total ram usage:        0 bytes
  3501 ;; Hardware stack levels used:    1
  3502 ;; Hardware stack levels required when called:    2
  3503 ;; This function calls:
  3504 ;;		Nothing
  3505 ;; This function is called by:
  3506 ;;		_main
  3507 ;; This function uses a non-reentrant model
  3508 ;;
  3509  0460                     _selectAdChannel:	
  3510                           
  3511                           ;main.c: 319: TRISB0 = 1;
  3512                           
  3513                           ; Regs used in _selectAdChannel: []
  3514  0460  1683               	bsf	3,5	;RP0=1, select bank1
  3515  0461  1406               	bsf	6,0
  3516                           
  3517                           ;main.c: 320: TRISB1 = 1;
  3518  0462  1486               	bsf	6,1
  3519  0463  0008               	return
  3520  0464                     __end_of_selectAdChannel:	
  3521                           
  3522                           	psect	text814
  3523  03CC                     __ptext814:	
  3524 ;; =============== function _selectAdChannel ends ============
  3525                           
  3526                           
  3527 ;; *************** function _pwm_start *****************
  3528 ;; Defined at:
  3529 ;;		line 272 in file "D:\develop\190625\AK7030-OTP\main.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;		None
  3532 ;; Auto vars:     Size  Location     Type
  3533 ;;		None
  3534 ;; Return value:  Size  Location     Type
  3535 ;;		None               void
  3536 ;; Registers used:
  3537 ;;		wreg, status,2, status,0
  3538 ;; Tracked objects:
  3539 ;;		On entry : 60/0
  3540 ;;		On exit  : 60/0
  3541 ;;		Unchanged: FFF9F/0
  3542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3543 ;;      Params:         0       0       0       0       0
  3544 ;;      Locals:         0       0       0       0       0
  3545 ;;      Temps:          0       0       0       0       0
  3546 ;;      Totals:         0       0       0       0       0
  3547 ;;Total ram usage:        0 bytes
  3548 ;; Hardware stack levels used:    1
  3549 ;; Hardware stack levels required when called:    2
  3550 ;; This function calls:
  3551 ;;		Nothing
  3552 ;; This function is called by:
  3553 ;;		_main
  3554 ;; This function uses a non-reentrant model
  3555 ;;
  3556  03CC                     _pwm_start:	
  3557                           
  3558                           ;main.c: 275: CCP1CON = 0x10 ;
  3559                           
  3560                           ; Regs used in _pwm_start: [wreg+status,2+status,0]
  3561  03CC  3010               	movlw	16
  3562  03CD  0097               	movwf	23	;volatile
  3563                           
  3564                           ;main.c: 276: PR2 = 4 ;
  3565  03CE  3004               	movlw	4
  3566  03CF  1683               	bsf	3,5	;RP0=1, select bank1
  3567  03D0  0092               	movwf	18	;volatile
  3568                           
  3569                           ;main.c: 277: T2CON = 0x04 ;
  3570  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  3571  03D2  0092               	movwf	18	;volatile
  3572                           
  3573                           ;main.c: 278: CCPR1L = 0x02 ;
  3574  03D3  3002               	movlw	2
  3575  03D4  0095               	movwf	21	;volatile
  3576                           
  3577                           ;main.c: 279: PWMCON1 = 0x55;
  3578  03D5  3055               	movlw	85
  3579  03D6  1683               	bsf	3,5	;RP0=1, select bank1
  3580  03D7  0096               	movwf	22	;volatile
  3581  03D8  300E               	movlw	14
  3582                           
  3583                           ;main.c: 281: TRISB2=0;
  3584  03D9  1106               	bcf	6,2
  3585                           
  3586                           ;main.c: 283: CCP1CON |= 0x0e ;
  3587  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  3588  03DB  0497               	iorwf	23,f	;volatile
  3589  03DC  0008               	return
  3590  03DD                     __end_of_pwm_start:	
  3591                           
  3592                           	psect	text822
  3593  0464                     __ptext822:	
  3594 ;; =============== function _initPB3 ends ============
  3595                           
  3596                           
  3597 ;; *************** function _clearThreeHoursTimer *****************
  3598 ;; Defined at:
  3599 ;;		line 384 in file "D:\develop\190625\AK7030-OTP\common.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;		None
  3602 ;; Auto vars:     Size  Location     Type
  3603 ;;		None
  3604 ;; Return value:  Size  Location     Type
  3605 ;;		None               void
  3606 ;; Registers used:
  3607 ;;		status,2
  3608 ;; Tracked objects:
  3609 ;;		On entry : 60/0
  3610 ;;		On exit  : 60/0
  3611 ;;		Unchanged: FFF9F/0
  3612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3613 ;;      Params:         0       0       0       0       0
  3614 ;;      Locals:         0       0       0       0       0
  3615 ;;      Temps:          0       0       0       0       0
  3616 ;;      Totals:         0       0       0       0       0
  3617 ;;Total ram usage:        0 bytes
  3618 ;; Hardware stack levels used:    1
  3619 ;; Hardware stack levels required when called:    2
  3620 ;; This function calls:
  3621 ;;		Nothing
  3622 ;; This function is called by:
  3623 ;;		_main
  3624 ;; This function uses a non-reentrant model
  3625 ;;
  3626  0464                     _clearThreeHoursTimer:	
  3627                           
  3628                           ;common.c: 385: uiSmallTimer = 0;
  3629                           
  3630                           ; Regs used in _clearThreeHoursTimer: [status,2]
  3631  0464  01CD               	clrf	_uiSmallTimer
  3632  0465  01CE               	clrf	_uiSmallTimer+1
  3633                           
  3634                           ;common.c: 386: bSmallTimerStartFlag = 0;
  3635  0466  01DD               	clrf	_bSmallTimerStartFlag
  3636  0467  0008               	return
  3637  0468                     __end_of_clearThreeHoursTimer:	
  3638                           
  3639                           	psect	text823
  3640  0468                     __ptext823:	
  3641 ;; =============== function _clearThreeHoursTimer ends ============
  3642                           
  3643                           
  3644 ;; *************** function _clearTwelveHoursTimer *****************
  3645 ;; Defined at:
  3646 ;;		line 377 in file "D:\develop\190625\AK7030-OTP\common.c"
  3647 ;; Parameters:    Size  Location     Type
  3648 ;;		None
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;		None
  3651 ;; Return value:  Size  Location     Type
  3652 ;;		None               void
  3653 ;; Registers used:
  3654 ;;		status,2
  3655 ;; Tracked objects:
  3656 ;;		On entry : 60/0
  3657 ;;		On exit  : 60/0
  3658 ;;		Unchanged: FFF9F/0
  3659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3660 ;;      Params:         0       0       0       0       0
  3661 ;;      Locals:         0       0       0       0       0
  3662 ;;      Temps:          0       0       0       0       0
  3663 ;;      Totals:         0       0       0       0       0
  3664 ;;Total ram usage:        0 bytes
  3665 ;; Hardware stack levels used:    1
  3666 ;; Hardware stack levels required when called:    2
  3667 ;; This function calls:
  3668 ;;		Nothing
  3669 ;; This function is called by:
  3670 ;;		_main
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673  0468                     _clearTwelveHoursTimer:	
  3674                           
  3675                           ;common.c: 378: uiBigTimer = 0;
  3676                           
  3677                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  3678  0468  01C9               	clrf	_uiBigTimer
  3679  0469  01CA               	clrf	_uiBigTimer+1
  3680                           
  3681                           ;common.c: 379: bBigTimerStartFlag = 0;
  3682  046A  01DB               	clrf	_bBigTimerStartFlag
  3683  046B  0008               	return
  3684  046C                     __end_of_clearTwelveHoursTimer:	
  3685                           
  3686                           	psect	text824
  3687  0193                     __ptext824:	
  3688 ;; =============== function _clearTwelveHoursTimer ends ============
  3689                           
  3690                           
  3691 ;; *************** function _ISR *****************
  3692 ;; Defined at:
  3693 ;;		line 534 in file "D:\develop\190625\AK7030-OTP\common.c"
  3694 ;; Parameters:    Size  Location     Type
  3695 ;;		None
  3696 ;; Auto vars:     Size  Location     Type
  3697 ;;		None
  3698 ;; Return value:  Size  Location     Type
  3699 ;;		None               void
  3700 ;; Registers used:
  3701 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3702 ;; Tracked objects:
  3703 ;;		On entry : 0/0
  3704 ;;		On exit  : 60/0
  3705 ;;		Unchanged: FFE00/0
  3706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3707 ;;      Params:         0       0       0       0       0
  3708 ;;      Locals:         0       0       0       0       0
  3709 ;;      Temps:          4       0       0       0       0
  3710 ;;      Totals:         4       0       0       0       0
  3711 ;;Total ram usage:        4 bytes
  3712 ;; Hardware stack levels used:    1
  3713 ;; Hardware stack levels required when called:    1
  3714 ;; This function calls:
  3715 ;;		i1_setAD_ConvertFlag
  3716 ;;		_adc_get
  3717 ;;		_vPutSampleDataIntoTable
  3718 ;; This function is called by:
  3719 ;;		Interrupt level 1
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722  0193                     _ISR:	
  3723                           
  3724                           ;common.c: 535: static unsigned char ucTimer1sCnt = 0;
  3725                           ;common.c: 537: if(TMR1IF == 1)
  3726  0193  1C0C               	btfss	12,0
  3727  0194  29CF               	goto	i1l3538
  3728  0195  3064               	movlw	100
  3729                           
  3730                           ;common.c: 538: {
  3731                           ;common.c: 539: TMR1IF = 0 ;
  3732  0196  100C               	bcf	12,0
  3733                           
  3734                           ;common.c: 540: timer.timer10msStopWatch++;
  3735  0197  0AE0               	incf	_timer,f
  3736                           
  3737                           ;common.c: 541: ucTimer1sCnt++;
  3738  0198  0AD9               	incf	ISR@ucTimer1sCnt,f
  3739                           
  3740                           ;common.c: 543: if(ucTimer1sCnt >= 100)
  3741  0199  0259               	subwf	ISR@ucTimer1sCnt,w
  3742  019A  1C03               	skipc
  3743  019B  29CF               	goto	i1l3538
  3744                           
  3745                           ;common.c: 544: {
  3746                           ;common.c: 545: ucTimer1sCnt = 0;
  3747  019C  01D9               	clrf	ISR@ucTimer1sCnt
  3748                           
  3749                           ;common.c: 546: if(uiBigTimer > 0)
  3750  019D  084A               	movf	_uiBigTimer+1,w
  3751  019E  0449               	iorwf	_uiBigTimer,w
  3752  019F  1903               	skipnz
  3753  01A0  29A7               	goto	i1l1647
  3754                           
  3755                           ;common.c: 547: uiBigTimer--;
  3756  01A1  3001               	movlw	1
  3757  01A2  02C9               	subwf	_uiBigTimer,f
  3758  01A3  3000               	movlw	0
  3759  01A4  1C03               	skipc
  3760  01A5  03CA               	decf	_uiBigTimer+1,f
  3761  01A6  02CA               	subwf	_uiBigTimer+1,f
  3762  01A7                     i1l1647:	
  3763                           
  3764                           ;common.c: 549: if(uiSmallTimer)
  3765  01A7  084E               	movf	_uiSmallTimer+1,w
  3766  01A8  044D               	iorwf	_uiSmallTimer,w
  3767  01A9  1903               	skipnz
  3768  01AA  29B1               	goto	i1l1648
  3769                           
  3770                           ;common.c: 550: uiSmallTimer--;
  3771  01AB  3001               	movlw	1
  3772  01AC  02CD               	subwf	_uiSmallTimer,f
  3773  01AD  3000               	movlw	0
  3774  01AE  1C03               	skipc
  3775  01AF  03CE               	decf	_uiSmallTimer+1,f
  3776  01B0  02CE               	subwf	_uiSmallTimer+1,f
  3777  01B1                     i1l1648:	
  3778                           
  3779                           ;common.c: 552: if(uiTwentySecondsTimer)
  3780  01B1  0852               	movf	_uiTwentySecondsTimer+1,w
  3781  01B2  0451               	iorwf	_uiTwentySecondsTimer,w
  3782  01B3  1903               	skipnz
  3783  01B4  29BB               	goto	i1l1649
  3784                           
  3785                           ;common.c: 553: uiTwentySecondsTimer--;
  3786  01B5  3001               	movlw	1
  3787  01B6  02D1               	subwf	_uiTwentySecondsTimer,f
  3788  01B7  3000               	movlw	0
  3789  01B8  1C03               	skipc
  3790  01B9  03D2               	decf	_uiTwentySecondsTimer+1,f
  3791  01BA  02D2               	subwf	_uiTwentySecondsTimer+1,f
  3792  01BB                     i1l1649:	
  3793                           
  3794                           ;common.c: 555: if(uiTwentyMinTimer)
  3795  01BB  0850               	movf	_uiTwentyMinTimer+1,w
  3796  01BC  044F               	iorwf	_uiTwentyMinTimer,w
  3797  01BD  1903               	skipnz
  3798  01BE  29C5               	goto	i1l1650
  3799                           
  3800                           ;common.c: 556: uiTwentyMinTimer--;
  3801  01BF  3001               	movlw	1
  3802  01C0  02CF               	subwf	_uiTwentyMinTimer,f
  3803  01C1  3000               	movlw	0
  3804  01C2  1C03               	skipc
  3805  01C3  03D0               	decf	_uiTwentyMinTimer+1,f
  3806  01C4  02D0               	subwf	_uiTwentyMinTimer+1,f
  3807  01C5                     i1l1650:	
  3808                           
  3809                           ;common.c: 558: if( uiOneHourTimer )
  3810  01C5  084C               	movf	_uiOneHourTimer+1,w
  3811  01C6  044B               	iorwf	_uiOneHourTimer,w
  3812  01C7  1903               	skipnz
  3813  01C8  29CF               	goto	i1l3538
  3814                           
  3815                           ;common.c: 559: uiOneHourTimer--;
  3816  01C9  3001               	movlw	1
  3817  01CA  02CB               	subwf	_uiOneHourTimer,f
  3818  01CB  3000               	movlw	0
  3819  01CC  1C03               	skipc
  3820  01CD  03CC               	decf	_uiOneHourTimer+1,f
  3821  01CE  02CC               	subwf	_uiOneHourTimer+1,f
  3822  01CF                     i1l3538:	
  3823                           
  3824                           ;common.c: 560: }
  3825                           ;common.c: 561: }
  3826                           ;common.c: 563: if(ADIF)
  3827  01CF  1D0D               	btfss	13,2
  3828  01D0  29EA               	goto	i1l1655
  3829  01D1  3001               	movlw	1
  3830                           
  3831                           ;common.c: 564: {
  3832                           ;common.c: 566: ADIF=0;
  3833  01D2  110D               	bcf	13,2
  3834                           
  3835                           ;common.c: 567: setAD_ConvertFlag(1);
  3836  01D3  2261  118A         	fcall	i1_setAD_ConvertFlag
  3837                           
  3838                           ;common.c: 569: if(sampleChannelSelect == 12)
  3839  01D5  0869               	movf	_sampleChannelSelect,w
  3840  01D6  3A0C               	xorlw	12
  3841  01D7  1D03               	skipz
  3842  01D8  29E1               	goto	i1l3548
  3843                           
  3844                           ;common.c: 570: {
  3845                           ;common.c: 573: vPutSampleDataIntoTable(adc_get(),12);
  3846  01D9  21F7  118A         	fcall	_adc_get
  3847  01DB  0871               	movf	?_adc_get+1,w
  3848  01DC  00F5               	movwf	?_vPutSampleDataIntoTable+1
  3849  01DD  0870               	movf	?_adc_get,w
  3850  01DE  00F4               	movwf	?_vPutSampleDataIntoTable
  3851  01DF  300C               	movlw	12
  3852  01E0  29E8               	goto	L5
  3853  01E1                     i1l3548:	
  3854                           ;common.c: 577: }
  3855                           
  3856                           
  3857                           ;common.c: 578: else
  3858                           ;common.c: 579: {
  3859                           ;common.c: 583: vPutSampleDataIntoTable(adc_get(),13);
  3860  01E1  21F7  118A         	fcall	_adc_get
  3861  01E3  0871               	movf	?_adc_get+1,w
  3862  01E4  00F5               	movwf	?_vPutSampleDataIntoTable+1
  3863  01E5  0870               	movf	?_adc_get,w
  3864  01E6  00F4               	movwf	?_vPutSampleDataIntoTable
  3865  01E7  300D               	movlw	13
  3866  01E8                     L5:	
  3867  01E8  00F6               	movwf	?_vPutSampleDataIntoTable+2
  3868  01E9  2202               	fcall	_vPutSampleDataIntoTable
  3869  01EA                     i1l1655:	
  3870  01EA  087C               	movf	??_ISR+3,w
  3871  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  3872  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  3873  01ED  00FF               	movwf	127
  3874  01EE  087B               	movf	??_ISR+2,w
  3875  01EF  008A               	movwf	10
  3876  01F0  087A               	movf	??_ISR+1,w
  3877  01F1  0084               	movwf	4
  3878  01F2  0E79               	swapf	??_ISR^(0+-128),w
  3879  01F3  0083               	movwf	3
  3880  01F4  0EFE               	swapf	126,f
  3881  01F5  0E7E               	swapf	126,w
  3882  01F6  0009               	retfie
  3883  01F7                     __end_of_ISR:	
  3884  01F7                     __ptext826:	
  3885 ;; =============== function i1_setAD_ConvertFlag ends ============
  3886                           
  3887                           
  3888 ;; *************** function _adc_get *****************
  3889 ;; Defined at:
  3890 ;;		line 105 in file "D:\develop\190625\AK7030-OTP\periph.c"
  3891 ;; Parameters:    Size  Location     Type
  3892 ;;		None
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;  val             2    2[COMMON] unsigned int 
  3895 ;; Return value:  Size  Location     Type
  3896 ;;                  2    0[COMMON] unsigned int 
  3897 ;; Registers used:
  3898 ;;		wreg
  3899 ;; Tracked objects:
  3900 ;;		On entry : 60/0
  3901 ;;		On exit  : 60/20
  3902 ;;		Unchanged: FFF9F/0
  3903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3904 ;;      Params:         2       0       0       0       0
  3905 ;;      Locals:         2       0       0       0       0
  3906 ;;      Temps:          0       0       0       0       0
  3907 ;;      Totals:         4       0       0       0       0
  3908 ;;Total ram usage:        4 bytes
  3909 ;; Hardware stack levels used:    1
  3910 ;; This function calls:
  3911 ;;		Nothing
  3912 ;; This function is called by:
  3913 ;;		_ISR
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916  01F7                     _adc_get:	
  3917                           
  3918                           ;periph.c: 106: unsigned int val;
  3919                           ;periph.c: 107: val = (ADRESH<<8) | ADRESL;
  3920                           
  3921                           ; Regs used in _adc_get: [wreg]
  3922  01F7  081E               	movf	30,w	;volatile
  3923  01F8  00F3               	movwf	adc_get@val+1
  3924  01F9  01F2               	clrf	adc_get@val
  3925  01FA  1683               	bsf	3,5	;RP0=1, select bank1
  3926  01FB  081E               	movf	30,w	;volatile
  3927  01FC  04F2               	iorwf	adc_get@val,f
  3928                           
  3929                           ;periph.c: 108: return val;
  3930  01FD  0873               	movf	adc_get@val+1,w
  3931  01FE  00F1               	movwf	?_adc_get+1
  3932  01FF  0872               	movf	adc_get@val,w
  3933  0200  00F0               	movwf	?_adc_get
  3934  0201  0008               	return
  3935  0202                     __end_of_adc_get:	
  3936  0202                     __ptext827:	
  3937 ;; =============== function _adc_get ends ============
  3938                           
  3939                           
  3940 ;; *************** function _vPutSampleDataIntoTable *****************
  3941 ;; Defined at:
  3942 ;;		line 106 in file "D:\develop\190625\AK7030-OTP\common.c"
  3943 ;; Parameters:    Size  Location     Type
  3944 ;;  uiSampleData    2    4[COMMON] unsigned int 
  3945 ;;  channel         1    6[COMMON] unsigned char 
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;  i               2    7[COMMON] int 
  3948 ;; Return value:  Size  Location     Type
  3949 ;;		None               void
  3950 ;; Registers used:
  3951 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3952 ;; Tracked objects:
  3953 ;;		On entry : 60/20
  3954 ;;		On exit  : 0/0
  3955 ;;		Unchanged: FFE00/0
  3956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3957 ;;      Params:         3       0       0       0       0
  3958 ;;      Locals:         2       0       0       0       0
  3959 ;;      Temps:          0       0       0       0       0
  3960 ;;      Totals:         5       0       0       0       0
  3961 ;;Total ram usage:        5 bytes
  3962 ;; Hardware stack levels used:    1
  3963 ;; This function calls:
  3964 ;;		Nothing
  3965 ;; This function is called by:
  3966 ;;		_ISR
  3967 ;; This function uses a non-reentrant model
  3968 ;;
  3969  0202                     _vPutSampleDataIntoTable:	
  3970                           
  3971                           ;common.c: 108: static unsigned char ucChannelFirstLength = 0;
  3972                           ;common.c: 110: static unsigned char ucChannelFourthLength = 0;
  3973                           ;common.c: 112: static unsigned char ucChannelFourteenthLength = 0;
  3974                           ;common.c: 114: if(channel == 12)
  3975                           
  3976                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1]
  3977  0202  0876               	movf	vPutSampleDataIntoTable@channel,w
  3978  0203  3A0C               	xorlw	12
  3979  0204  1D03               	skipz
  3980  0205  2A16               	goto	i1l3460
  3981                           
  3982                           ;common.c: 115: {
  3983                           ;common.c: 116: if(ucChannelFirstLength < 12)
  3984  0206  300C               	movlw	12
  3985  0207  027D               	subwf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  3986  0208  1803               	skipnc
  3987  0209  2A10               	goto	i1l3456
  3988                           
  3989                           ;common.c: 117: {
  3990                           ;common.c: 118: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  3991  020A  1003               	clrc
  3992  020B  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  3993  020C  3EA0               	addlw	_uiSampleChannelFirst& (0+255)
  3994  020D  2264               	fcall	PL2	;call to abstracted procedure
  3995                           
  3996                           ;common.c: 120: ucChannelFirstLength++;
  3997  020E  0AFD               	incf	vPutSampleDataIntoTable@ucChannelFirstLength,f
  3998                           
  3999                           ;common.c: 121: }
  4000  020F  0008               	return
  4001  0210                     i1l3456:	
  4002                           
  4003                           ;common.c: 122: else
  4004                           ;common.c: 123: {
  4005                           ;common.c: 124: ucChannelFirstLength = 0;
  4006  0210  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  4007                           
  4008                           ;common.c: 126: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  4009  0211  1003               	clrc
  4010  0212  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4011  0213  3EA0               	addlw	_uiSampleChannelFirst& (0+255)
  4012  0214  2264               	fcall	PL2	;call to abstracted procedure
  4013  0215  0008               	return
  4014  0216                     i1l3460:	
  4015                           
  4016                           ;common.c: 129: else if(channel == 13)
  4017  0216  0876               	movf	vPutSampleDataIntoTable@channel,w
  4018  0217  3A0D               	xorlw	13
  4019  0218  1D03               	skipz
  4020  0219  2A2B               	goto	i1l3472
  4021                           
  4022                           ;common.c: 130: {
  4023                           ;common.c: 131: if(ucChannelFourthLength < 12)
  4024  021A  300C               	movlw	12
  4025  021B  1283               	bcf	3,5	;RP0=0, select bank0
  4026  021C  0268               	subwf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4027  021D  1803               	skipnc
  4028  021E  2A25               	goto	i1l3468
  4029                           
  4030                           ;common.c: 132: {
  4031                           ;common.c: 133: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  4032  021F  1003               	clrc
  4033  0220  0D68               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4034  0221  3ED0               	addlw	_uiSampleChannelFourth& (0+255)
  4035  0222  2264               	fcall	PL2	;call to abstracted procedure
  4036                           
  4037                           ;common.c: 135: ucChannelFourthLength++;
  4038  0223  0AE8               	incf	vPutSampleDataIntoTable@ucChannelFourthLength,f
  4039                           
  4040                           ;common.c: 136: }
  4041  0224  0008               	return
  4042  0225                     i1l3468:	
  4043                           
  4044                           ;common.c: 137: else
  4045                           ;common.c: 138: {
  4046                           ;common.c: 139: ucChannelFourthLength = 0;
  4047  0225  01E8               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  4048                           
  4049                           ;common.c: 141: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  4050  0226  1003               	clrc
  4051  0227  0D68               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4052  0228  3ED0               	addlw	_uiSampleChannelFourth& (0+255)
  4053  0229  2264               	fcall	PL2	;call to abstracted procedure
  4054  022A  0008               	return
  4055  022B                     i1l3472:	
  4056                           
  4057                           ;common.c: 144: else if(channel == 14)
  4058  022B  0876               	movf	vPutSampleDataIntoTable@channel,w
  4059  022C  3A0E               	xorlw	14
  4060  022D  1D03               	skipz
  4061  022E  2A40               	goto	i1l3484
  4062                           
  4063                           ;common.c: 145: {
  4064                           ;common.c: 146: if(ucChannelFourteenthLength < 12)
  4065  022F  300C               	movlw	12
  4066  0230  1283               	bcf	3,5	;RP0=0, select bank0
  4067  0231  0267               	subwf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4068  0232  1803               	skipnc
  4069  0233  2A3A               	goto	i1l3480
  4070                           
  4071                           ;common.c: 147: {
  4072                           ;common.c: 148: uiSampleChannelFourteenth[ucChannelFourteenthLength] = uiSampleData;
  4073  0234  1003               	clrc
  4074  0235  0D67               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4075  0236  3EB8               	addlw	_uiSampleChannelFourteenth& (0+255)
  4076  0237  2264               	fcall	PL2	;call to abstracted procedure
  4077                           
  4078                           ;common.c: 150: ucChannelFourteenthLength++;
  4079  0238  0AE7               	incf	vPutSampleDataIntoTable@ucChannelFourteenthLength,f
  4080                           
  4081                           ;common.c: 151: }
  4082  0239  0008               	return
  4083  023A                     i1l3480:	
  4084                           
  4085                           ;common.c: 152: else
  4086                           ;common.c: 153: {
  4087                           ;common.c: 154: ucChannelFourteenthLength = 0;
  4088  023A  01E7               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4089                           
  4090                           ;common.c: 156: uiSampleChannelFourth[ucChannelFourteenthLength] = uiSampleData;
  4091  023B  1003               	clrc
  4092  023C  0D67               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4093  023D  3ED0               	addlw	_uiSampleChannelFourth& (0+255)
  4094  023E  2264               	fcall	PL2	;call to abstracted procedure
  4095  023F  0008               	return
  4096  0240                     i1l3484:	
  4097                           
  4098                           ;common.c: 159: else
  4099                           ;common.c: 160: {
  4100                           ;common.c: 161: ucChannelFirstLength = 0;
  4101  0240  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  4102                           
  4103                           ;common.c: 163: ucChannelFourthLength = 0;
  4104  0241  1283               	bcf	3,5	;RP0=0, select bank0
  4105  0242  01E8               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  4106                           
  4107                           ;common.c: 165: ucChannelFourteenthLength = 0;
  4108  0243  01E7               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4109                           
  4110                           ;common.c: 167: for(int i = 0;i < 12; i++)
  4111  0244  01F7               	clrf	vPutSampleDataIntoTable@i
  4112  0245  01F8               	clrf	vPutSampleDataIntoTable@i+1
  4113  0246                     i1l3490:	
  4114                           
  4115                           ;common.c: 168: {
  4116                           ;common.c: 169: uiSampleChannelFirst[i] = 0;
  4117  0246  1003               	clrc
  4118  0247  0D77               	rlf	vPutSampleDataIntoTable@i,w
  4119  0248  3EA0               	addlw	_uiSampleChannelFirst& (0+255)
  4120  0249  0084               	movwf	4
  4121  024A  1383               	bcf	3,7	;select IRP bank1
  4122  024B  0180               	clrf	0
  4123                           
  4124                           ;common.c: 171: uiSampleChannelFourth[i] = 0;
  4125  024C  226C  118A         	fcall	PL5	;call to abstracted procedure
  4126                           
  4127                           ;common.c: 173: uiSampleChannelFourth[i] = 0;
  4128  024E  226C  118A         	fcall	PL5	;call to abstracted procedure
  4129  0250  0A84               	incf	4,f
  4130  0251  0180               	clrf	0
  4131  0252  0AF7               	incf	vPutSampleDataIntoTable@i,f
  4132  0253  1903               	skipnz
  4133  0254  0AF8               	incf	vPutSampleDataIntoTable@i+1,f
  4134  0255  0878               	movf	vPutSampleDataIntoTable@i+1,w
  4135  0256  3A80               	xorlw	128
  4136  0257  00FF               	movwf	127
  4137  0258  3080               	movlw	128
  4138  0259  027F               	subwf	127,w
  4139  025A  1D03               	skipz
  4140  025B  2A5E               	goto	u107_25
  4141  025C  300C               	movlw	12
  4142  025D  0277               	subwf	vPutSampleDataIntoTable@i,w
  4143  025E                     u107_25:	
  4144  025E  1803               	btfsc	3,0
  4145  025F  0008               	return
  4146  0260  2A46               	goto	i1l3490
  4147  0261                     __end_of_vPutSampleDataIntoTable:	
  4148  0261                     __ptext825:	
  4149 ;; =============== function _ISR ends ============
  4150                           
  4151                           
  4152 ;; *************** function i1_setAD_ConvertFlag *****************
  4153 ;; Defined at:
  4154 ;;		line 215 in file "D:\develop\190625\AK7030-OTP\common.c"
  4155 ;; Parameters:    Size  Location     Type
  4156 ;;  setAD_Conver    1    wreg     unsigned char 
  4157 ;; Auto vars:     Size  Location     Type
  4158 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  4159 ;; Return value:  Size  Location     Type
  4160 ;;		None               void
  4161 ;; Registers used:
  4162 ;;		wreg
  4163 ;; Tracked objects:
  4164 ;;		On entry : 60/0
  4165 ;;		On exit  : 60/0
  4166 ;;		Unchanged: FFF9F/0
  4167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4168 ;;      Params:         0       0       0       0       0
  4169 ;;      Locals:         1       0       0       0       0
  4170 ;;      Temps:          0       0       0       0       0
  4171 ;;      Totals:         1       0       0       0       0
  4172 ;;Total ram usage:        1 bytes
  4173 ;; Hardware stack levels used:    1
  4174 ;; This function calls:
  4175 ;;		Nothing
  4176 ;; This function is called by:
  4177 ;;		_ISR
  4178 ;; This function uses a non-reentrant model
  4179 ;;
  4180  0261                     i1_setAD_ConvertFlag:	
  4181                           
  4182                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  4183                           ;i1setAD_ConvertFlag@flag stored from wreg
  4184  0261  00F0               	movwf	i1setAD_ConvertFlag@flag
  4185                           
  4186                           ;common.c: 216: adc_convert_flag = flag;
  4187  0262  00DA               	movwf	_adc_convert_flag
  4188  0263  0008               	return
  4189  0264                     __end_ofi1_setAD_ConvertFlag:	
  4190  0264                     PL2:	
  4191  0264  0084               	movwf	4
  4192  0265  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  4193  0266  1383               	bcf	3,7	;select IRP bank1
  4194  0267  0080               	movwf	0
  4195  0268  0A84               	incf	4,f
  4196  0269  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  4197  026A  0080               	movwf	0
  4198  026B  0008               	return
  4199  026C                     PL5:	
  4200  026C  0A84               	incf	4,f
  4201  026D  0180               	clrf	0
  4202  026E  1003               	clrc
  4203  026F  0D77               	rlf	vPutSampleDataIntoTable@i,w
  4204  0270  3ED0               	addlw	_uiSampleChannelFourth& (0+255)
  4205  0271  0084               	movwf	4
  4206  0272  0180               	clrf	0
  4207  0273  0008               	return
  4208                           
  4209                           	psect	intentry
  4210  0004                     __pintentry:	
  4211                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4212                           
  4213  0004                     interrupt_function:	
  4214  007E                     saved_w	set	btemp
  4215  0004  00FE               	movwf	btemp
  4216  0005  0E03               	swapf	3,w
  4217  0006  00F9               	movwf	??_ISR
  4218  0007  0804               	movf	4,w
  4219  0008  00FA               	movwf	??_ISR+1
  4220  0009  080A               	movf	10,w
  4221  000A  00FB               	movwf	??_ISR+2
  4222  000B  1283               	bcf	3,5	;RP0=0, select bank0
  4223  000C  1303               	bcf	3,6	;RP1=0, select bank0
  4224  000D  087F               	movf	btemp+1,w
  4225  000E  00FC               	movwf	??_ISR+3
  4226  000F  118A  2993         	ljmp	_ISR
  4227                           
  4228                           	psect	text828
  4229  0000                     __ptext828:	
  4230 ;; =============== function _vPutSampleDataIntoTable ends ============
  4231                           
  4232  007E                     btemp	set	126	;btemp
  4233  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sun Oct 27 23:33:09 2019

                                  ??_clock_config 0020                               ?_startOneHoursTimer 0020  
                                              _GO 00F9                                                fsr 0004  
                        ?_timer1_interrupt_config 0070                                               l700 0396  
                                             l710 0000                                               l705 03B8  
                                             l722 0000                                               l731 0471  
                                             l716 0000                                               l725 0000  
                                             l750 0192                                               l719 0000  
                                             l680 037B                                               l728 0000  
                                             l690 038B                                               l685 03A8  
                                             l695 03B0                                               _GIE 005F  
                                             _PB2 0032                                               _PB3 0033  
                                             _PB4 0034                                               _PB5 0035  
                                             _PR2 0092                                               _ISR 0193  
                                             u965 029A                                               u975 02C3  
                                             u985 02AD                                               fsr0 0004  
                                             indf 0000                            ??_startThreeHoursTimer 0022  
                                            ?_ISR 0070                              ??_startOneHoursTimer 0022  
                              __size_of_AD_Sample 0014                                              l2302 0000  
                                            l1506 0000                                              l1532 0454  
                                            l2308 0000                                              l1541 0000  
                                            l3230 0000                                              l1535 0000  
                                            l3232 0000                                              l3240 0000  
                                            l1640 0000                                              l3312 0000  
                                            l1544 0000                                              l1553 0000  
                                            l3226 0000                                              l3234 0000  
                                            l3242 0000                                              l3250 0000  
                                            l1538 0000                                              l3306 0000  
                                            l3314 0000                                              l3410 0000  
                                            l1547 0000                                              l3228 0000  
                                            l3236 0000                                              l3244 0000  
                                            l3252 0000                                              l3260 0000  
                                            l3308 0000                                              l3324 0000  
                                            l3332 0000                                              l3340 0000  
                                            l3404 0283                                              l3500 0000  
                                            l1582 0000                                              l3238 0000  
                                            l3246 0000                                              l3254 0000  
                                            l3262 0000                                              l3270 0000  
                                            l3326 0000                                              l3334 0000  
                                            l3350 0000                                              l3430 0000  
                                            l3406 0000                                              l3510 0000  
                                            l3502 0000                                              l1591 0000  
                                            l3248 0000                                              l3256 0000  
                                            l3264 0000                                              l3272 0000  
                                            l3280 0000                                              l3440 0000  
                                            l3424 02E0                                              l3408 0000  
                                            l3600 0000                                              l3258 0000  
                                            l3266 0000                                              l3282 0000  
                                            l3274 0000                                              l3338 0000  
                                            l3362 0000                                              l3426 02A0  
                                            l3418 029F                                              l3514 034D  
                                            l3506 0000                                              l1579 0000  
                                            l3268 0000                                              l3276 0000  
                                            l3284 0365                                              l3292 0000  
                                            l3356 0000                                              l3364 0000  
                                            l3380 0000                                              l3444 0000  
                                            l3428 02E2                                              l3612 0000  
                                            l3604 0037                                              l3278 0000  
                                            l3286 0000                                              l3294 0000  
                                            l3358 0000                                              l3374 0000  
                                            l3382 0000                                              l3438 0000  
                                            l3710 0000                                              l3702 0000  
                                            l3630 0161                                              l3614 0000  
                                            l3560 0000                                              l3720 010E  
                                            l3712 0000                                              l3704 00E6  
                                            l3640 0000                                              l3632 005C  
                                            l3624 0057                                              l3386 0000  
                                            l3562 0000                                              l3570 0000  
                                            l3730 0129                                              l3722 0110  
                                            l3706 00E8                                              l3650 0082  
                                            l3642 0000                                              l3634 0000  
                                            l3626 0058                                              l3618 004A  
                                            l3388 0000                                              l3556 0000  
                                            l3564 0000                                              l3740 0000  
                                            l3732 012B                                              l3724 0117  
                                            l3716 0100                                              l3660 0095  
                                            l3636 0000                                              l3628 0000  
                                            l3398 0000                                              l3558 0000  
                                            l3566 0000                                              l3750 0151  
                                            l3726 011B                                              l3662 0000  
                                            l3654 008E                                              l3646 0079  
                                            l3638 0000                                              l3590 0000  
                                            l3582 0000                                              l3496 0000  
                                            l3744 0141                                              l3736 0000  
                                            l3656 008F                                              l3648 007F  
                                            l3592 0000                                              l3584 0000  
                                            l3578 0000                                              l3754 015D  
                                            l3746 0000                                              l3738 0000  
                                            l3690 0000                                              l3682 00B9  
                                            l3674 00B2                                              l3666 00A0  
                                            l3594 0000                                              l3586 0000  
                                            l3756 015E                                              l3684 0000  
                                            l3676 00B3                                              l3596 0162  
                                            l3588 0000                                              l3694 00D0  
                                            l3686 0000                                              l3598 0000  
                                            l3688 0000                                              _ADIE 046A  
                                            _ADIF 006A                                              _ADON 00F8  
                   startTwelveHourTimer@uiSetTime 0020                                              _PEIE 005E  
                                            _main 0013                                              btemp 007E  
                                            start 0011                           ?_getAdOriginalCh13Value 0047  
                      ??_isFinishedTwentyMinTimer 0020                                             ??_ISR 0079  
                               ??_setPinInitVaule 0021                        __end_of_isPermitSampleTime 045C  
                             _sampleChannelSelect 0069                                      main@ucDebug1 0063  
                                    main@ucDebug2 0064                                             ?_main 0070  
                                           _CLKPR 0108                                             _T1CON 0010  
                                           _T2CON 0012                                   __end_of_adc_get 0202  
                                           _PBOD2 0C42                                             _TMR1H 000F  
                                           _TMR1L 000E                             setAD_ConvertFlag@flag 0020  
                               ??_selectAdChannel 0020                                   __end_of_initPB3 037E  
                                 __end_of_initPB4 038E                                   __end_of_initPB5 0399  
                         _vPutSampleDataIntoTable 0202                                   __end_of_initPin 0372  
                                           _reset 0471                                             _timer 0060  
                                           pclath 000A                                             status 0003  
                                           wtemp0 007E                    __end_of_getAdOriginalCh13Value 027B  
                   __size_of_startTwelveHourTimer 000E                              __end_of_clrSampeTime 0471  
                                    __end_of_main 0193                            __size_of_adc_test_init 0015  
                               __end_of_AD_Sample 0350                                            ??_main 0049  
                                          _ADCON0 001F                                            _ADCON1 009F  
                            __end_of_clock_config 0457                                            _ADRESH 001E  
                                          _ADRESL 009E                                            _CCPR1L 0015  
                                          ?_reset 0070                                            _CLKPCE 0847  
                                          i1l2311 0000                                            i1l1650 01C5  
                                          i1l1547 0000                                            i1l1655 01EA  
                                          i1l1647 01A7                                            i1l1648 01B1  
                                          i1l3520 0000                                            i1l1649 01BB  
                                          i1l3522 0000                                            i1l3460 0216  
                                          i1l3516 0000                                            i1l3470 0000  
                                          i1l3454 0000                                            i1l3550 0000  
                                          i1l3542 0000                                            i1l3526 0000  
                                          i1l3480 023A                                            i1l3472 022B  
                                          i1l3456 0210                                            i1l3448 0000  
                                          i1l3544 0000                                            i1l3490 0246  
                                          i1l3482 0000                                            i1l3466 0000  
                                          i1l3458 0000                                            i1l3554 0000  
                                          i1l3538 01CF                                            i1l3492 0000  
                                          i1l3484 0240                                            i1l3468 0225  
                                          i1l3548 01E1                                            u107_25 025E  
                                          i1l3494 0000                                            i1l3478 0000  
                                          _TMR1IE 0460                                            _TMR1IF 0060  
                               _getAD_ConvertFlag 0335                                 _setAD_ConvertFlag 0339  
                                          _TRISB0 0430                                            _TRISB1 0431  
                                          _TRISB2 0432                                            _TRISB3 0433  
                                          _TRISB4 0434                                            _TRISB5 0435  
                           __end_of_setPulseWidth 0473                                ?_getAD_ConvertFlag 0070  
                                          _Filter 027B                                ?_setAD_ConvertFlag 0070  
                     ??_isFinishedThreeHoursTimer 0020                     __size_of_clearThreeHoursTimer 0004  
                                       ??_adc_get 0072                               ??_getAD_ConvertFlag 0020  
                             ??_setAD_ConvertFlag 0020                                            _setPB3 03A1  
                                          _setPB4 03AA                                            _setPB5 03B2  
                     __end_of_clearTwentyMinTimer 0460                                            clrloop 0448  
                                Filter@filter_buf 0026                                         ??_initPB3 0020  
                                       ??_initPB4 0020                                         ??_initPB5 0020  
                                Filter@filter_sum 0040                                         ??_initPin 0021  
                       ??_vPutSampleDataIntoTable 0077                                            saved_w 007E  
                         ??_clearTwelveHoursTimer 0020                       ?_process_AD_Converter_Value 0070  
                                   _adc_test_init 0350                         __end_of_getAD_ConvertFlag 0339  
                       __end_of_setAD_ConvertFlag 033C                                __size_of_adc_start 0003  
                        _initPB2_AsHighResistence 037E                  __size_of_isFinishedOneHoursTimer 000A  
                __end_of_isFinishedTwentyMinTimer 043D                                    __pcstackCOMMON 0070  
                                    __pidataBANK0 0000                                 main@uiTimerOneP5s 0053  
                                   __end_of_reset 0472                                 main@uiTimerTwoP5s 0057  
                            _uiSampleChannelFirst 00A0                    vPutSampleDataIntoTable@channel 0076  
                       _isFinishedThreeHoursTimer 041F                             __end_of_timer1_config 0447  
                                  ?_adc_test_init 0020                       __end_of_startTwentyMinTimer 0415  
     vPutSampleDataIntoTable@ucChannelFirstLength 007D                                           ??_reset 0020  
                __size_of_timer1_interrupt_config 0003                             __size_of_clrSampeTime 0002  
                                      __pbssBANK0 0049                                        __pbssBANK1 00A0  
                    __size_ofi1_setAD_ConvertFlag 0003                                   _setPinInitVaule 0399  
                                      adc_get@val 0072                                  _uiTwentyMinTimer 004F  
                 __end_of_vPutSampleDataIntoTable 0261                                           ?_Filter 0020  
                                      __pmaintext 0013                                   _selectAdChannel 0460  
                                      __pintentry 0004                                           _CCP1CON 0017  
                                         ?_setPB3 0070                                           ?_setPB4 0070  
                                         ?_setPB5 0070                             __size_of_clock_config 0008  
                                    _clrSampeTime 046F                                 __end_of_adc_start 0368  
                            _uiTwentySecondsTimer 0051                                _isPermitSampleTime 0457  
                                         _PWMCON1 0096                                           Filter@i 0046  
                                         Filter@j 0045                                __size_of_pwm_start 0011  
                     __size_of_startOneHoursTimer 000E                     __size_of_startThreeHoursTimer 000E  
                      __size_of_getAD_ConvertFlag 0004                        __size_of_setAD_ConvertFlag 0003  
                                  main@ucTimerP5s 0066                               ?_isPermitSampleTime 0070  
                                 __size_of_Filter 008E                                        _uiBigTimer 0049  
                                    setPB3@bValue 0020                                      setPB4@bValue 0020  
                                    _clock_config 044F                                      setPB5@bValue 0020  
                                  main@uiTimerP5s 0055                                           _adc_get 01F7  
                                 __size_of_setPB3 0009                                   __size_of_setPB4 0008  
                                 __size_of_setPB5 0008                              ??_isPermitSampleTime 0020  
                    __end_of_startTwelveHourTimer 0407                                     initPB3@bValue 0020  
                                   initPB4@bValue 0020                                         _AD_Sample 033C  
                                         _initPB3 0372                                           _initPB4 0383  
                                         _initPB5 038E                                      __size_of_ISR 0064  
                                   initPB5@bValue 0020                                           _initPin 0368  
                            _bSmallTimerStartFlag 005D                                   ??_adc_test_init 0021  
               __size_of_isFinishedTwentyMinTimer 000A                         ?_isFinishedTwentyMinTimer 0070  
                         __end_of_setPinInitVaule 03A1                              end_of_initialization 03C9  
                               Filter@filter_temp 003E                           __end_of_selectAdChannel 0464  
                         _isFinishedOneHoursTimer 0415                                 __end_of_pwm_start 03DD  
                                      ?_AD_Sample 0070                      ??_isFinishedTwelveHoursTimer 0020  
                                       Filter@cir 0043                               _bTwentyMinStartFlag 005E  
                                _adc_convert_flag 005A                      __end_of_clearThreeHoursTimer 0468  
                  __size_of_clearTwelveHoursTimer 0004                           _timer1_interrupt_config 046C  
                   __end_of_clearTwelveHoursTimer 046C                        ??_initPB2_AsHighResistence 0020  
              __size_of_isFinishedThreeHoursTimer 000A                                        main@ucStep 0065  
                                  __end_of_Filter 0309                     startTwentyMinTimer@uiSetValue 0020  
             __size_of_isFinishedTwelveHoursTimer 000A                          vPutSampleDataIntoTable@i 0077  
                             i1_setAD_ConvertFlag 0261                                    __end_of_setPB3 03AA  
                                  __end_of_setPB4 03B2                                    __end_of_setPB5 03BA  
                          __size_of_setPulseWidth 0001                               start_initialization 03BA  
                                     __end_of_ISR 01F7                             _uiSampleChannelFourth 00D0  
                                ?_setPinInitVaule 0070                          ??_getAdOriginalCh13Value 0049  
                    __size_of_clearTwentyMinTimer 0004                         ??_isFinishedOneHoursTimer 0020  
                            ?i1_setAD_ConvertFlag 0070                              _startTwelveHourTimer 03F9  
               __end_of_isFinishedThreeHoursTimer 0429                                  ?_selectAdChannel 0070  
                                        ??_Filter 0022                                       __pdataBANK0 0069  
                                        ??_setPB3 0020                                          ??_setPB4 0020  
                                        ??_setPB5 0020                          ?_vPutSampleDataIntoTable 0074  
                                     ??_AD_Sample 0020                         ??_timer1_interrupt_config 0020  
                                     __pbssCOMMON 007D                                     __pcstackBANK0 0020  
                                       _adc_start 0365                             ??i1_setAD_ConvertFlag 0070  
                           ?_startTwelveHourTimer 0020                      __size_of_startTwentyMinTimer 000E  
                                   _setPulseWidth 0472                            __size_of_timer1_config 000A  
                            _clearThreeHoursTimer 0464                      __end_of_startThreeHoursTimer 03F9  
                                       __ptext800 03F9                                         __ptext801 045C  
                                       __ptext810 044F                                         __ptext802 0433  
                                       __ptext811 0471                                         __ptext803 046F  
                                       __ptext820 03A1                                         __ptext812 0472  
                                       __ptext804 0457                                         __ptext821 0372  
                                       __ptext813 0460                                         __ptext805 0407  
                                       __ptext822 0464                                         __ptext814 03CC  
                                       __ptext806 0365                                         __ptext823 0468  
                                       __ptext815 037E                                         __ptext807 0350  
                                       __ptext824 0193                                         __ptext816 03B2  
                                       __ptext808 046C                                         __ptext825 0261  
                                       __ptext817 038E                                         __ptext809 043D  
                                       __ptext826 01F7                                         __ptext818 03AA  
                                       __ptext827 0202                                         __ptext819 0383  
                                       __ptext828 0000                                         __ptext790 0368  
                                       __ptext791 033C                                         __ptext792 0339  
                                       __ptext793 0335                                         __ptext794 027B  
                                       __ptext795 0415                                         __ptext787 0274  
                                       __ptext796 03DD                                         __ptext788 031F  
                                       __ptext797 041F                                         __ptext789 0399  
                                       __ptext798 03EB                                         __ptext799 0429  
                               main@cTimerP5s_780 0062                                 main@cTimerP5s_776 0061  
                                        ?_adc_get 0070                   __end_of_isFinishedOneHoursTimer 041F  
              __end_of_isFinishedTwelveHoursTimer 0433                        _isFinishedTwelveHoursTimer 0429  
                                        ?_initPB3 0070                                          ?_initPB4 0070  
                                        ?_initPB5 0070                                   ISR@ucTimer1sCnt 0059  
                                        ?_initPin 0070                        __end_of_startOneHoursTimer 03EB  
                __end_of_initPB2_AsHighResistence 0383                         _uiSampleChannelFourteenth 00B8  
                                      ?_adc_start 0070                   __size_of_getAdOriginalCh13Value 0007  
                                  __size_of_reset 0001                                 interrupt_function 0004  
                                  ?_setPulseWidth 0070                   __end_of_timer1_interrupt_config 046F  
                           ?_clearThreeHoursTimer 0070                              adc_test_init@channel 0022  
             vPutSampleDataIntoTable@uiSampleData 0074      vPutSampleDataIntoTable@ucChannelFourthLength 0068  
                     __size_of_isPermitSampleTime 0005                                         _pwm_start 03CC  
                                    _uiSmallTimer 004D                             __end_of_adc_test_init 0365  
                                   _timer1_config 043D                      ??_process_AD_Converter_Value 0023  
                          ??_startTwelveHourTimer 0022                            _getAdOriginalCh13Value 0274  
                             _clearTwentyMinTimer 045C                       startOneHoursTimer@uiSetTime 0020  
                                __size_of_adc_get 000B               __size_of_process_AD_Converter_Value 0016  
                                      ?_pwm_start 0070                          _isFinishedTwentyMinTimer 0433  
vPutSampleDataIntoTable@ucChannelFourteenthLength 0067                                  __size_of_initPB3 000C  
                                __size_of_initPB4 000B                                  __size_of_initPB5 000B  
                                __size_of_initPin 000A                                    Filter@tmpValue 0042  
                                  ?_timer1_config 0070                              ?_clearTwentyMinTimer 0070  
                                     ??_adc_start 0020                              _startThreeHoursTimer 03EB  
                           _clearTwelveHoursTimer 0468                                    _uiOneHourTimer 004B  
                                 ??_setPulseWidth 0020                                     __size_of_main 0180  
                                        clear_ram 0447                            ??_clearThreeHoursTimer 0020  
               __size_of_initPB2_AsHighResistence 0005                         ?_initPB2_AsHighResistence 0070  
                          _bOneHourTimerStartFlag 005C                                     ?_clrSampeTime 0070  
                             _startTwentyMinTimer 0407                                       _sampleTimes 005F  
                           ??_clearTwentyMinTimer 0020                             ?_startThreeHoursTimer 0020  
                __size_of_vPutSampleDataIntoTable 005F                                          intlevel1 0000  
                            ?_startTwentyMinTimer 0020                          __size_of_setPinInitVaule 0008  
                      ?_isFinishedThreeHoursTimer 0070                                     ?_clock_config 0070  
                        __size_of_selectAdChannel 0004                     startThreeHoursTimer@uiSetTime 0020  
                         i1setAD_ConvertFlag@flag 0070                                       ??_pwm_start 0020  
                                  ??_clrSampeTime 0020                       ?_isFinishedTwelveHoursTimer 0070  
                              _bBigTimerStartFlag 005B                                   ??_timer1_config 0020  
                     __end_ofi1_setAD_ConvertFlag 0264                __end_of_process_AD_Converter_Value 0335  
                      _process_AD_Converter_Value 031F                          ?_isFinishedOneHoursTimer 0070  
                          ?_clearTwelveHoursTimer 0070                                  adc_test_init@ref 0020  
                           ??_startTwentyMinTimer 0022                                _startOneHoursTimer 03DD  
