

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Tue Apr 02 18:49:05 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,delta=2
    14                           	psect	swtext1,local,class=CONST,delta=2
    15                           	psect	text470,local,class=CODE,delta=2
    16                           	psect	text475,local,class=CODE,delta=2
    17                           	psect	text476,local,class=CODE,delta=2
    18                           	psect	text477,local,class=CODE,delta=2
    19                           	psect	text478,local,class=CODE,delta=2
    20                           	psect	text479,local,class=CODE,delta=2
    21                           	psect	text480,local,class=CODE,delta=2
    22                           	psect	text481,local,class=CODE,delta=2
    23                           	psect	text482,local,class=CODE,delta=2
    24                           	psect	text483,local,class=CODE,delta=2
    25                           	psect	text484,local,class=CODE,delta=2
    26                           	psect	text486,local,class=CODE,delta=2
    27                           	psect	text487,local,class=CODE,delta=2
    28                           	psect	text488,local,class=CODE,delta=2
    29                           	psect	text490,local,class=CODE,delta=2
    30                           	psect	text491,local,class=CODE,delta=2
    31                           	psect	text492,local,class=CODE,delta=2
    32                           	psect	text493,local,class=CODE,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	text496,local,class=CODE,delta=2
    35                           	psect	pa_nodes,global,class=CODE,delta=2
    36                           	dabs	1,0x7E,2
    37  000A                     	;#
    38                           
    39                           	psect	config
    40  2000  2FFF               	dw	12287	;#
    41  2001  3FDE               	dw	16350	;#
    42  2002  3FF8               	dw	16376	;#
    43                           
    44                           	psect	idataBANK0
    45  0000                     __pidataBANK0:	
    46  001F                     _ADCON0	set	31
    47  001E                     _ADRESH	set	30
    48  001B                     _OP1CON0	set	27
    49  001C                     _OP1CON1	set	28
    50  001D                     _OP1CON2	set	29
    51  0010                     _T1CON	set	16
    52  000F                     _TMR1H	set	15
    53  000E                     _TMR1L	set	14
    54  006A                     _ADIF	set	106
    55  00F8                     _ADON	set	248
    56  005F                     _GIE	set	95
    57  00F9                     _GO	set	249
    58  0028                     _PA0	set	40
    59  0029                     _PA1	set	41
    60  002A                     _PA2	set	42
    61  002B                     _PA3	set	43
    62  002E                     _PA6	set	46
    63  0032                     _PB2	set	50
    64  005E                     _PEIE	set	94
    65  0060                     _TMR1IF	set	96
    66  009F                     _ADCON1	set	159
    67  009E                     _ADRESL	set	158
    68  0087                     _DACCON	set	135
    69  0088                     _DACR0	set	136
    70  009B                     _OP2CON0	set	155
    71  009C                     _OP2CON1	set	156
    72  009D                     _OP2CON2	set	157
    73  046A                     _ADIE	set	1130
    74  0460                     _TMR1IE	set	1120
    75  0428                     _TRISA0	set	1064
    76  0429                     _TRISA1	set	1065
    77  042A                     _TRISA2	set	1066
    78  042B                     _TRISA3	set	1067
    79  042E                     _TRISA6	set	1070
    80  042F                     _TRISA7	set	1071
    81  0431                     _TRISB1	set	1073
    82  0432                     _TRISB2	set	1074
    83  0433                     _TRISB3	set	1075
    84  0434                     _TRISB4	set	1076
    85  0435                     _TRISB5	set	1077
    86  0436                     _TRISB6	set	1078
    87  0437                     _TRISB7	set	1079
    88  0108                     _CLKPR	set	264
    89  0847                     _CLKPCE	set	2119
    90  0C3E                     _PAOD6	set	3134
    91                           
    92                           	psect	cinit
    93  0216                     start_initialization:	
    94  0216  3020               	movlw	low __pbssBANK0
    95                           
    96                           ; Clear objects allocated to COMMON
    97  0217  01F6               	clrf	__pbssCOMMON& (0+127)
    98  0218  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
    99  0219  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   100  021A  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   101  021B  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   102                           
   103                           ; Clear objects allocated to BANK0
   104  021C  1383               	bcf	3,7	;select IRP bank0
   105  021D  0084               	movwf	4
   106  021E  3042               	movlw	low (__pbssBANK0+34)
   107  021F  118A  2245         	fcall	clear_ram
   108                           
   109                           ;initializer for _sampleChannelSelect
   110  0221  300D               	movlw	13
   111  0222  00C7               	movwf	__pdataBANK0& (0+127)
   112  0223                     end_of_initialization:	
   113                           ;End of C runtime variable initialization code
   114                           
   115  0223  0183               	clrf	3
   116  0224  118A  280D         	ljmp	_main	;jump to C main() function
   117                           
   118                           	psect	bssCOMMON
   119  0076                     __pbssCOMMON:	
   120  0076                     _uiBigTimer:	
   121  0076                     	ds	2
   122  0078                     ISR@ucTimer1sCnt:	
   123  0078                     	ds	1
   124  0079                     _adc_convert_flag:	
   125  0079                     	ds	1
   126  007A                     _timer:	
   127  007A                     	ds	1
   128                           
   129                           	psect	bssBANK0
   130  0020                     __pbssBANK0:	
   131  0020                     _buffer_Sample_AD_Value:	
   132  0020                     	ds	12
   133  002C                     _adc_original_CH13_value:	
   134  002C                     	ds	2
   135  002E                     _adc_original_CH1_value:	
   136  002E                     	ds	2
   137  0030                     _adc_original_value:	
   138  0030                     	ds	2
   139  0032                     _multiFilterMaxValue:	
   140  0032                     	ds	2
   141  0034                     _multiFilterMinValue:	
   142  0034                     	ds	2
   143  0036                     _uiSmallTimer:	
   144  0036                     	ds	2
   145  0038                     _sampleTimes:	
   146  0038                     	ds	1
   147  0039                     main@ampStep:	
   148  0039                     	ds	1
   149  003A                     main@tDA_timer:	
   150  003A                     	ds	1
   151  003B                     main@ucBigTimerActionFlag:	
   152  003B                     	ds	1
   153  003C                     main@ucCheckBatteryCnt:	
   154  003C                     	ds	1
   155  003D                     main@ucConFirmationTime:	
   156  003D                     	ds	1
   157  003E                     main@ucConfirmTimer1S:	
   158  003E                     	ds	1
   159  003F                     main@ucConfirmTimerZptS:	
   160  003F                     	ds	1
   161  0040                     main@ucInit:	
   162  0040                     	ds	1
   163  0041                     main@ucInstalledBatteryCnt:	
   164  0041                     	ds	1
   165                           
   166                           	psect	dataBANK0
   167  0047                     __pdataBANK0:	
   168  0047                     _sampleChannelSelect:	
   169  0047                     	ds	1
   170                           
   171                           	psect	clrtext
   172  0245                     clear_ram:	
   173                           ;	Called with FSR containing the base address, and
   174                           ;	W with the last address+1
   175                           
   176  0245  0064               	clrwdt	;clear the watchdog before getting into this loop
   177  0246                     clrloop:	
   178  0246  0180               	clrf	0	;clear RAM location pointed to by FSR
   179  0247  0A84               	incf	4,f	;increment pointer
   180  0248  0604               	xorwf	4,w	;XOR with final address
   181  0249  1903               	btfsc	3,2	;have we reached the end yet?
   182  024A  3400               	retlw	0	;all done for this memory range, return
   183  024B  0604               	xorwf	4,w	;XOR again to restore value
   184  024C  2A46               	goto	clrloop	;do the next byte
   185                           
   186                           	psect	cstackCOMMON
   187  0070                     __pcstackCOMMON:	
   188  0070                     ?_clock_config:	
   189  0070                     ?_timer1_config:	
   190                           ; 0 bytes @ 0x0
   191                           
   192  0070                     ?_timer1_interrupt_config:	
   193                           ; 0 bytes @ 0x0
   194                           
   195  0070                     ?_dac_init:	
   196                           ; 0 bytes @ 0x0
   197                           
   198  0070                     ?_op1_init:	
   199                           ; 0 bytes @ 0x0
   200                           
   201  0070                     ?_op2_init:	
   202                           ; 0 bytes @ 0x0
   203                           
   204  0070                     ?_adc_start:	
   205                           ; 0 bytes @ 0x0
   206                           
   207  0070                     ?_clrSampeTime:	
   208                           ; 0 bytes @ 0x0
   209                           
   210  0070                     ?_process_AD_Converter_Value:	
   211                           ; 0 bytes @ 0x0
   212                           
   213  0070                     ?_clearBigTimer:	
   214                           ; 0 bytes @ 0x0
   215                           
   216  0070                     ?_clearSmallTimer:	
   217                           ; 0 bytes @ 0x0
   218                           
   219  0070                     ?_startBigTimer:	
   220                           ; 0 bytes @ 0x0
   221                           
   222  0070                     ?_startSmallTimer:	
   223                           ; 0 bytes @ 0x0
   224                           
   225  0070                     ?_AD_Sample:	
   226                           ; 0 bytes @ 0x0
   227                           
   228  0070                     ?_main:	
   229                           ; 0 bytes @ 0x0
   230                           
   231  0070                     ?_setAD_ConvertFlag:	
   232                           ; 0 bytes @ 0x0
   233                           
   234  0070                     ?_ISR:	
   235                           ; 0 bytes @ 0x0
   236                           
   237  0070                     ?i1_setAD_ConvertFlag:	
   238                           ; 0 bytes @ 0x0
   239                           
   240  0070                     ??i1_setAD_ConvertFlag:	
   241                           ; 0 bytes @ 0x0
   242                           
   243  0070                     ?_isPermitSampleTime:	
   244                           ; 0 bytes @ 0x0
   245                           
   246  0070                     ?_isFinishedBigTimer:	
   247                           ; 1 bytes @ 0x0
   248                           
   249  0070                     ?_isFinishedSmallTimer:	
   250                           ; 1 bytes @ 0x0
   251                           
   252  0070                     ?_getAD_ConvertFlag:	
   253                           ; 1 bytes @ 0x0
   254                           
   255  0070                     ?_adc_get:	
   256                           ; 1 bytes @ 0x0
   257                           
   258  0070                     i1setAD_ConvertFlag@flag:	
   259                           ; 2 bytes @ 0x0
   260                           
   261                           
   262                           ; 1 bytes @ 0x0
   263  0070                     	ds	2
   264  0072                     ??_adc_get:	
   265  0072                     adc_get@val:	
   266                           ; 0 bytes @ 0x2
   267                           
   268                           
   269                           ; 2 bytes @ 0x2
   270  0072                     	ds	2
   271  0074                     ??_ISR:	
   272                           
   273                           ; 0 bytes @ 0x4
   274  0074                     	ds	2
   275                           
   276                           	psect	cstackBANK0
   277  0042                     __pcstackBANK0:	
   278  0042                     ??_clock_config:	
   279  0042                     ??_timer1_config:	
   280                           ; 0 bytes @ 0x0
   281                           
   282  0042                     ??_timer1_interrupt_config:	
   283                           ; 0 bytes @ 0x0
   284                           
   285  0042                     ?_adc_test_init:	
   286                           ; 0 bytes @ 0x0
   287                           
   288  0042                     ??_dac_init:	
   289                           ; 0 bytes @ 0x0
   290                           
   291  0042                     ??_op1_init:	
   292                           ; 0 bytes @ 0x0
   293                           
   294  0042                     ??_op2_init:	
   295                           ; 0 bytes @ 0x0
   296                           
   297  0042                     ??_adc_start:	
   298                           ; 0 bytes @ 0x0
   299                           
   300  0042                     ??_isPermitSampleTime:	
   301                           ; 0 bytes @ 0x0
   302                           
   303  0042                     ??_clrSampeTime:	
   304                           ; 0 bytes @ 0x0
   305                           
   306  0042                     ??_clearBigTimer:	
   307                           ; 0 bytes @ 0x0
   308                           
   309  0042                     ??_clearSmallTimer:	
   310                           ; 0 bytes @ 0x0
   311                           
   312  0042                     ??_startBigTimer:	
   313                           ; 0 bytes @ 0x0
   314                           
   315  0042                     ??_startSmallTimer:	
   316                           ; 0 bytes @ 0x0
   317                           
   318  0042                     ??_isFinishedBigTimer:	
   319                           ; 0 bytes @ 0x0
   320                           
   321  0042                     ??_isFinishedSmallTimer:	
   322                           ; 0 bytes @ 0x0
   323                           
   324  0042                     ??_getAD_ConvertFlag:	
   325                           ; 0 bytes @ 0x0
   326                           
   327  0042                     ??_setAD_ConvertFlag:	
   328                           ; 0 bytes @ 0x0
   329                           
   330  0042                     ?_getAdOriginalCh1Value:	
   331                           ; 0 bytes @ 0x0
   332                           
   333  0042                     ?_getAdOriginalCh13Value:	
   334                           ; 2 bytes @ 0x0
   335                           
   336  0042                     ?_getAdOriginalValue:	
   337                           ; 2 bytes @ 0x0
   338                           
   339  0042                     setAD_ConvertFlag@flag:	
   340                           ; 2 bytes @ 0x0
   341                           
   342  0042                     adc_test_init@ref:	
   343                           ; 1 bytes @ 0x0
   344                           
   345                           
   346                           ; 1 bytes @ 0x0
   347  0042                     	ds	1
   348  0043                     ??_adc_test_init:	
   349                           
   350                           ; 0 bytes @ 0x1
   351  0043                     	ds	1
   352  0044                     ??_getAdOriginalCh1Value:	
   353  0044                     ??_getAdOriginalCh13Value:	
   354                           ; 0 bytes @ 0x2
   355                           
   356  0044                     ??_AD_Sample:	
   357                           ; 0 bytes @ 0x2
   358                           
   359  0044                     ??_getAdOriginalValue:	
   360                           ; 0 bytes @ 0x2
   361                           
   362  0044                     adc_test_init@channel:	
   363                           ; 0 bytes @ 0x2
   364                           
   365                           
   366                           ; 1 bytes @ 0x2
   367  0044                     	ds	2
   368  0046                     AD_Sample@index:	
   369                           
   370                           ; 1 bytes @ 0x4
   371  0046                     	ds	1
   372  0047                     ??_process_AD_Converter_Value:	
   373  0047                     ??_main:	
   374                           ; 0 bytes @ 0x5
   375                           
   376                           
   377                           	psect	maintext
   378  000D                     __pmaintext:	
   379                           ; 0 bytes @ 0x5
   380 ;;Data sizes: Strings 0, constant 0, data 1, bss 39, persistent 0 stack 0
   381 ;;Auto spaces:   Size  Autos    Used
   382 ;; COMMON          14      6      11
   383 ;; BANK0           80      5      40
   384 ;; BANK1           80      0       0
   385 ;; BANK3           96      0       0
   386 ;; BANK2           96      0       0
   387 ;;
   388 ;; Pointer list with targets:
   389 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   390 ;;
   391 ;; ?_getAdOriginalCh13Value	unsigned int  size(1) Largest target is 0
   392 ;;
   393 ;; ?_getAdOriginalCh1Value	unsigned int  size(1) Largest target is 0
   394 ;;
   395 ;; ?_getAdOriginalValue	unsigned int  size(1) Largest target is 0
   396 ;;
   397 ;;
   398 ;; Critical Paths under _main in COMMON
   399 ;;
   400 ;;   None.
   401 ;;
   402 ;; Critical Paths under _ISR in COMMON
   403 ;;
   404 ;;   _ISR->_adc_get
   405 ;;
   406 ;; Critical Paths under _main in BANK0
   407 ;;
   408 ;;   _process_AD_Converter_Value->_AD_Sample
   409 ;;   _AD_Sample->_getAdOriginalValue
   410 ;;
   411 ;; Critical Paths under _ISR in BANK0
   412 ;;
   413 ;;   None.
   414 ;;
   415 ;; Critical Paths under _main in BANK1
   416 ;;
   417 ;;   None.
   418 ;;
   419 ;; Critical Paths under _ISR in BANK1
   420 ;;
   421 ;;   None.
   422 ;;
   423 ;; Critical Paths under _main in BANK3
   424 ;;
   425 ;;   None.
   426 ;;
   427 ;; Critical Paths under _ISR in BANK3
   428 ;;
   429 ;;   None.
   430 ;;
   431 ;; Critical Paths under _main in BANK2
   432 ;;
   433 ;;   None.
   434 ;;
   435 ;; Critical Paths under _ISR in BANK2
   436 ;;
   437 ;;   None.
   438 ;;
   439 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   440 ;;
   441 ;;
   442 ;;Call Graph Tables:
   443 ;;
   444 ;; ---------------------------------------------------------------------------------
   445 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   446 ;; ---------------------------------------------------------------------------------
   447 ;; (0) _main                                                 0     0      0     178
   448 ;;                       _clock_config
   449 ;;                      _timer1_config
   450 ;;            _timer1_interrupt_config
   451 ;;                      _adc_test_init
   452 ;;                           _dac_init
   453 ;;                           _op1_init
   454 ;;                           _op2_init
   455 ;;                          _adc_start
   456 ;;                 _isPermitSampleTime
   457 ;;                       _clrSampeTime
   458 ;;         _process_AD_Converter_Value
   459 ;;                      _clearBigTimer
   460 ;;                    _clearSmallTimer
   461 ;;              _getAdOriginalCh1Value
   462 ;;             _getAdOriginalCh13Value
   463 ;;                      _startBigTimer
   464 ;;                    _startSmallTimer
   465 ;;                 _isFinishedBigTimer
   466 ;;               _isFinishedSmallTimer
   467 ;; ---------------------------------------------------------------------------------
   468 ;; (1) _process_AD_Converter_Value                           0     0      0     134
   469 ;;                  _getAD_ConvertFlag
   470 ;;                  _setAD_ConvertFlag
   471 ;;                          _AD_Sample
   472 ;;                      _adc_test_init
   473 ;;                          _adc_start
   474 ;; ---------------------------------------------------------------------------------
   475 ;; (2) _AD_Sample                                            3     3      0      68
   476 ;;                                              2 BANK0      3     3      0
   477 ;;                 _getAdOriginalValue
   478 ;; ---------------------------------------------------------------------------------
   479 ;; (3) _getAdOriginalValue                                   2     0      2       0
   480 ;;                                              0 BANK0      2     0      2
   481 ;; ---------------------------------------------------------------------------------
   482 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   483 ;;                                              0 BANK0      1     1      0
   484 ;; ---------------------------------------------------------------------------------
   485 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   486 ;; ---------------------------------------------------------------------------------
   487 ;; (1) _isFinishedSmallTimer                                 0     0      0       0
   488 ;; ---------------------------------------------------------------------------------
   489 ;; (1) _isFinishedBigTimer                                   0     0      0       0
   490 ;; ---------------------------------------------------------------------------------
   491 ;; (1) _startSmallTimer                                      0     0      0       0
   492 ;; ---------------------------------------------------------------------------------
   493 ;; (1) _startBigTimer                                        0     0      0       0
   494 ;; ---------------------------------------------------------------------------------
   495 ;; (1) _getAdOriginalCh13Value                               2     0      2       0
   496 ;;                                              0 BANK0      2     0      2
   497 ;; ---------------------------------------------------------------------------------
   498 ;; (1) _getAdOriginalCh1Value                                2     0      2       0
   499 ;;                                              0 BANK0      2     0      2
   500 ;; ---------------------------------------------------------------------------------
   501 ;; (1) _clearSmallTimer                                      0     0      0       0
   502 ;; ---------------------------------------------------------------------------------
   503 ;; (1) _clearBigTimer                                        0     0      0       0
   504 ;; ---------------------------------------------------------------------------------
   505 ;; (1) _clrSampeTime                                         0     0      0       0
   506 ;; ---------------------------------------------------------------------------------
   507 ;; (1) _isPermitSampleTime                                   0     0      0       0
   508 ;; ---------------------------------------------------------------------------------
   509 ;; (2) _adc_start                                            0     0      0       0
   510 ;; ---------------------------------------------------------------------------------
   511 ;; (1) _op2_init                                             0     0      0       0
   512 ;; ---------------------------------------------------------------------------------
   513 ;; (1) _op1_init                                             0     0      0       0
   514 ;; ---------------------------------------------------------------------------------
   515 ;; (1) _dac_init                                             0     0      0       0
   516 ;; ---------------------------------------------------------------------------------
   517 ;; (2) _adc_test_init                                        3     2      1      44
   518 ;;                                              0 BANK0      3     2      1
   519 ;; ---------------------------------------------------------------------------------
   520 ;; (1) _timer1_interrupt_config                              0     0      0       0
   521 ;; ---------------------------------------------------------------------------------
   522 ;; (1) _timer1_config                                        0     0      0       0
   523 ;; ---------------------------------------------------------------------------------
   524 ;; (1) _clock_config                                         0     0      0       0
   525 ;; ---------------------------------------------------------------------------------
   526 ;; Estimated maximum stack depth 3
   527 ;; ---------------------------------------------------------------------------------
   528 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   529 ;; ---------------------------------------------------------------------------------
   530 ;; (4) _ISR                                                  2     2      0      97
   531 ;;                                              4 COMMON     2     2      0
   532 ;;                i1_setAD_ConvertFlag
   533 ;;                            _adc_get
   534 ;; ---------------------------------------------------------------------------------
   535 ;; (5) i1_setAD_ConvertFlag                                  1     1      0      73
   536 ;;                                              0 COMMON     1     1      0
   537 ;; ---------------------------------------------------------------------------------
   538 ;; (5) _adc_get                                              4     2      2      24
   539 ;;                                              0 COMMON     4     2      2
   540 ;; ---------------------------------------------------------------------------------
   541 ;; Estimated maximum stack depth 5
   542 ;; ---------------------------------------------------------------------------------
   543 ;; Call Graph Graphs:
   544 ;; _main (ROOT)
   545 ;;   _clock_config
   546 ;;   _timer1_config
   547 ;;   _timer1_interrupt_config
   548 ;;   _adc_test_init
   549 ;;   _dac_init
   550 ;;   _op1_init
   551 ;;   _op2_init
   552 ;;   _adc_start
   553 ;;   _isPermitSampleTime
   554 ;;   _clrSampeTime
   555 ;;   _process_AD_Converter_Value
   556 ;;     _getAD_ConvertFlag
   557 ;;     _setAD_ConvertFlag
   558 ;;     _AD_Sample
   559 ;;       _getAdOriginalValue
   560 ;;     _adc_test_init
   561 ;;     _adc_start
   562 ;;   _clearBigTimer
   563 ;;   _clearSmallTimer
   564 ;;   _getAdOriginalCh1Value
   565 ;;   _getAdOriginalCh13Value
   566 ;;   _startBigTimer
   567 ;;   _startSmallTimer
   568 ;;   _isFinishedBigTimer
   569 ;;   _isFinishedSmallTimer
   570 ;;
   571 ;; _ISR (ROOT)
   572 ;;   i1_setAD_ConvertFlag
   573 ;;   _adc_get
   574 ;;
   575 ;; Address spaces:
   576 ;;Name               Size   Autos  Total    Cost      Usage
   577 ;;BANK3               60      0       0      10        0.0%
   578 ;;BITBANK3            60      0       0       9        0.0%
   579 ;;SFR3                 0      0       0       4        0.0%
   580 ;;BITSFR3              0      0       0       4        0.0%
   581 ;;BANK2               60      0       0      12        0.0%
   582 ;;BITBANK2            60      0       0      11        0.0%
   583 ;;SFR2                 0      0       0       5        0.0%
   584 ;;BITSFR2              0      0       0       5        0.0%
   585 ;;SFR1                 0      0       0       2        0.0%
   586 ;;BITSFR1              0      0       0       2        0.0%
   587 ;;BANK1               50      0       0       8        0.0%
   588 ;;BITBANK1            50      0       0       7        0.0%
   589 ;;CODE                 0      0       0       0        0.0%
   590 ;;DATA                 0      0      3A       6        0.0%
   591 ;;ABS                  0      0      33       3        0.0%
   592 ;;NULL                 0      0       0       0        0.0%
   593 ;;STACK                0      0       7       2        0.0%
   594 ;;BANK0               50      5      28       5       50.0%
   595 ;;BITBANK0            50      0       0       4        0.0%
   596 ;;SFR0                 0      0       0       1        0.0%
   597 ;;BITSFR0              0      0       0       1        0.0%
   598 ;;COMMON               E      6       B       1       78.6%
   599 ;;BITCOMMON            E      0       0       0        0.0%
   600                           
   601                           
   602 ;; *************** function _main *****************
   603 ;; Defined at:
   604 ;;		line 84 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\main.c"
   605 ;; Parameters:    Size  Location     Type
   606 ;;		None
   607 ;; Auto vars:     Size  Location     Type
   608 ;;		None
   609 ;; Return value:  Size  Location     Type
   610 ;;		None               void
   611 ;; Registers used:
   612 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   613 ;; Tracked objects:
   614 ;;		On entry : 17F/0
   615 ;;		On exit  : 60/0
   616 ;;		Unchanged: FFE00/0
   617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   618 ;;      Params:         0       0       0       0       0
   619 ;;      Locals:         0       0       0       0       0
   620 ;;      Temps:          0       0       0       0       0
   621 ;;      Totals:         0       0       0       0       0
   622 ;;Total ram usage:        0 bytes
   623 ;; Hardware stack levels required when called:    5
   624 ;; This function calls:
   625 ;;		_clock_config
   626 ;;		_timer1_config
   627 ;;		_timer1_interrupt_config
   628 ;;		_adc_test_init
   629 ;;		_dac_init
   630 ;;		_op1_init
   631 ;;		_op2_init
   632 ;;		_adc_start
   633 ;;		_isPermitSampleTime
   634 ;;		_clrSampeTime
   635 ;;		_process_AD_Converter_Value
   636 ;;		_clearBigTimer
   637 ;;		_clearSmallTimer
   638 ;;		_getAdOriginalCh1Value
   639 ;;		_getAdOriginalCh13Value
   640 ;;		_startBigTimer
   641 ;;		_startSmallTimer
   642 ;;		_isFinishedBigTimer
   643 ;;		_isFinishedSmallTimer
   644 ;; This function is called by:
   645 ;;		Startup code after reset
   646 ;; This function uses a non-reentrant model
   647 ;;
   648  000D                     _main:	
   649                           
   650                           ;main.c: 85: enum step
   651                           ;main.c: 86: {
   652                           ;main.c: 87: SENSE_PB2_INPUT_VOLTAGE = 0,
   653                           ;main.c: 88: SENSE_PB2_DURATION_ONE_SECOND,
   654                           ;main.c: 89: SENSE_PB2_INPUT_VOLTAGE__AGAIN,
   655                           ;main.c: 90: SENSE_PB2_DURATION__SECOND,
   656                           ;main.c: 91: SET_PA2_VALUE,
   657                           ;main.c: 92: ADC1_VALUE_MEET_CONDITION,
   658                           ;main.c: 93: PROCESS_AD_VALUE,
   659                           ;main.c: 94: WAIT_SET_TIME_FINISHED,
   660                           ;main.c: 95: SET_TIME_BE_FINISHED,
   661                           ;main.c: 96: CHECKING_PULL_OUT_BATTERY,
   662                           ;main.c: 97: CHECKING_INSTALLED_BATTERY,
   663                           ;main.c: 98: };
   664                           ;main.c: 100: enum workTimerType
   665                           ;main.c: 101: {
   666                           
   667                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   668  000D  1683               	bsf	3,5	;RP0=1, select bank1
   669  000E  1005               	bcf	5,0
   670                           
   671                           ;main.c: 119: TRISA1 = 0;
   672  000F  1085               	bcf	5,1
   673                           
   674                           ;main.c: 120: TRISA3 = 0;
   675  0010  1185               	bcf	5,3
   676                           
   677                           ;main.c: 121: TRISA2 = 0;
   678  0011  1105               	bcf	5,2
   679                           
   680                           ;main.c: 122: TRISA6 = 0;
   681  0012  1305               	bcf	5,6
   682                           
   683                           ;main.c: 123: PA2 = 1;
   684  0013  1283               	bcf	3,5	;RP0=0, select bank0
   685  0014  1505               	bsf	5,2
   686                           
   687                           ;main.c: 124: PA0 = 1;
   688  0015  1405               	bsf	5,0
   689                           
   690                           ;main.c: 126: TRISB2 = 1;
   691  0016  1683               	bsf	3,5	;RP0=1, select bank1
   692  0017  1506               	bsf	6,2
   693                           
   694                           ;main.c: 128: TRISB1 = 1;
   695  0018  1486               	bsf	6,1
   696                           
   697                           ;main.c: 129: TRISB4 = 1;
   698  0019  1606               	bsf	6,4
   699                           
   700                           ;main.c: 131: clock_config();
   701  001A  118A  224D  118A   	fcall	_clock_config
   702                           
   703                           ;main.c: 132: timer1_config();
   704  001D  118A  2232  118A   	fcall	_timer1_config
   705                           
   706                           ;main.c: 133: timer1_interrupt_config();
   707  0020  118A  2283  118A   	fcall	_timer1_interrupt_config
   708                           
   709                           ;main.c: 135: adc_test_init(13,3);
   710  0023  3003               	movlw	3
   711  0024  1283               	bcf	3,5	;RP0=0, select bank0
   712  0025  00C2               	movwf	?_adc_test_init
   713  0026  300D               	movlw	13
   714  0027  118A  218B  118A   	fcall	_adc_test_init
   715                           
   716                           ;main.c: 137: dac_init();
   717  002A  118A  2278  118A   	fcall	_dac_init
   718                           
   719                           ;main.c: 138: op1_init();
   720  002D  118A  2226  118A   	fcall	_op1_init
   721                           
   722                           ;main.c: 139: op2_init();
   723  0030  118A  223C  118A   	fcall	_op2_init
   724                           
   725                           ;main.c: 142: adc_start();
   726  0033  118A  21A0  118A   	fcall	_adc_start
   727                           
   728                           ;main.c: 155: switch(ampStep)
   729  0036  28F1               	goto	l3151
   730  0037                     l3159:	
   731                           
   732                           ;main.c: 158: {
   733                           ;main.c: 159: ucBigTimerActionFlag = 0;
   734  0037  01BB               	clrf	main@ucBigTimerActionFlag
   735                           
   736                           ;main.c: 160: clearBigTimer();
   737  0038  118A  2280  118A   	fcall	_clearBigTimer
   738                           
   739                           ;main.c: 161: clearSmallTimer();
   740  003B  118A  227D  118A   	fcall	_clearSmallTimer
   741  003E                     L1:	
   742                           
   743                           ;main.c: 162: if(!PB2)
   744  003E  1906               	btfsc	6,2
   745  003F  28F1               	goto	l3151
   746  0040                     l3167:	
   747                           
   748                           ;main.c: 163: ampStep++;
   749  0040  0AB9               	incf	main@ampStep,f
   750  0041  28F1               	goto	l3151
   751  0042                     l687:	
   752                           ;main.c: 165: }
   753                           ;main.c: 167: case SENSE_PB2_DURATION_ONE_SECOND:
   754                           
   755                           
   756                           ;main.c: 168: {
   757                           ;main.c: 169: static unsigned char ucConfirmTimer1S = 0;
   758                           ;main.c: 170: if(!PB2)
   759  0042  1906               	btfsc	6,2
   760  0043  2846               	goto	l3171
   761                           
   762                           ;main.c: 171: {
   763                           ;main.c: 172: ucConfirmTimer1S++;
   764  0044  0ABE               	incf	main@ucConfirmTimer1S,f
   765                           
   766                           ;main.c: 173: }
   767  0045  2847               	goto	l3173
   768  0046                     l3171:	
   769                           
   770                           ;main.c: 174: else
   771                           ;main.c: 175: {
   772                           ;main.c: 176: ucConfirmTimer1S = 0;
   773  0046  01BE               	clrf	main@ucConfirmTimer1S
   774  0047                     l3173:	
   775                           
   776                           ;main.c: 177: }
   777                           ;main.c: 179: if(ucConfirmTimer1S >= 10)
   778  0047  300A               	movlw	10
   779  0048  023E               	subwf	main@ucConfirmTimer1S,w
   780  0049  1C03               	skipc
   781  004A  28F1               	goto	l3151
   782                           
   783                           ;main.c: 180: {
   784                           ;main.c: 181: ucConfirmTimer1S = 0;
   785  004B  01BE               	clrf	main@ucConfirmTimer1S
   786  004C  2840               	goto	l3167
   787  004D                     l693:	
   788                           ;main.c: 186: }
   789                           ;main.c: 188: case SENSE_PB2_INPUT_VOLTAGE__AGAIN:
   790                           
   791                           
   792                           ;main.c: 189: {
   793                           ;main.c: 190: if(!PB2)
   794  004D  283E               	goto	L1
   795  004E                     l695:	
   796                           ;main.c: 193: }
   797                           ;main.c: 195: case SENSE_PB2_DURATION__SECOND:
   798                           
   799                           
   800                           ;main.c: 196: {
   801                           ;main.c: 197: static unsigned char ucConfirmTimerZptS = 0;
   802                           ;main.c: 198: if(!PB2)
   803  004E  1906               	btfsc	6,2
   804  004F  2852               	goto	l3183
   805                           
   806                           ;main.c: 199: {
   807                           ;main.c: 200: ucConfirmTimerZptS++;
   808  0050  0ABF               	incf	main@ucConfirmTimerZptS,f
   809                           
   810                           ;main.c: 201: }
   811  0051  2853               	goto	l3185
   812  0052                     l3183:	
   813                           
   814                           ;main.c: 202: else
   815                           ;main.c: 203: {
   816                           ;main.c: 204: ucConfirmTimerZptS = 0;
   817  0052  01BF               	clrf	main@ucConfirmTimerZptS
   818  0053                     l3185:	
   819                           
   820                           ;main.c: 205: }
   821                           ;main.c: 207: if(ucConfirmTimerZptS >= 10)
   822  0053  300A               	movlw	10
   823  0054  023F               	subwf	main@ucConfirmTimerZptS,w
   824  0055  1C03               	skipc
   825  0056  28F1               	goto	l3151
   826                           
   827                           ;main.c: 208: {
   828                           ;main.c: 209: ucConfirmTimerZptS = 0;
   829  0057  01BF               	clrf	main@ucConfirmTimerZptS
   830  0058  2840               	goto	l3167
   831  0059                     l701:	
   832                           ;main.c: 214: }
   833                           ;main.c: 216: case SET_PA2_VALUE:
   834                           
   835                           
   836                           ;main.c: 217: {
   837                           ;main.c: 218: PA2 = 0;
   838  0059  1105               	bcf	5,2
   839  005A  2840               	goto	l3167
   840  005B                     l3193:	
   841                           
   842                           ;main.c: 224: {
   843                           ;main.c: 225: static unsigned char ucConFirmationTime = 0;
   844                           ;main.c: 226: if(getAdOriginalCh1Value() >= 2341)
   845  005B  118A  226E  118A   	fcall	_getAdOriginalCh1Value
   846  005E  3009               	movlw	9
   847  005F  0243               	subwf	?_getAdOriginalCh1Value+1,w
   848  0060  3025               	movlw	37
   849  0061  1903               	skipnz
   850  0062  0242               	subwf	?_getAdOriginalCh1Value,w
   851  0063  1C03               	skipc
   852  0064  2872               	goto	l3199
   853                           
   854                           ;main.c: 227: {
   855                           ;main.c: 228: if(ucConFirmationTime < 5)
   856  0065  3005               	movlw	5
   857  0066  023D               	subwf	main@ucConFirmationTime,w
   858  0067  1803               	skipnc
   859  0068  286B               	goto	l706
   860                           
   861                           ;main.c: 229: ucConFirmationTime++;
   862  0069  0ABD               	incf	main@ucConFirmationTime,f
   863  006A  2840               	goto	l3167
   864  006B                     l706:	
   865                           
   866                           ;main.c: 230: else
   867                           ;main.c: 231: {
   868                           ;main.c: 232: PAOD6 = 1;
   869  006B  1683               	bsf	3,5	;RP0=1, select bank3
   870  006C  1703               	bsf	3,6	;RP1=1, select bank3
   871  006D  1707               	bsf	7,6
   872                           
   873                           ;main.c: 233: PA6 = 1;
   874  006E  1283               	bcf	3,5	;RP0=0, select bank0
   875  006F  1303               	bcf	3,6	;RP1=0, select bank0
   876  0070  1705               	bsf	5,6
   877  0071  2840               	goto	l3167
   878  0072                     l3199:	
   879                           
   880                           ;main.c: 236: else
   881                           ;main.c: 237: {
   882                           ;main.c: 238: ucConFirmationTime = 0;
   883  0072  01BD               	clrf	main@ucConFirmationTime
   884                           
   885                           ;main.c: 239: PAOD6 = 0;
   886  0073  1683               	bsf	3,5	;RP0=1, select bank3
   887  0074  1703               	bsf	3,6	;RP1=1, select bank3
   888  0075  1307               	bcf	7,6
   889                           
   890                           ;main.c: 240: PA6 = 0;
   891  0076  1283               	bcf	3,5	;RP0=0, select bank0
   892  0077  1303               	bcf	3,6	;RP1=0, select bank0
   893  0078  1305               	bcf	5,6
   894  0079  2840               	goto	l3167
   895  007A                     l3207:	
   896                           
   897                           ;main.c: 248: {
   898                           ;main.c: 249: static unsigned char ucInit = 0;
   899                           ;main.c: 250: if(getAdOriginalCh13Value() > 36)
   900  007A  118A  2269  118A   	fcall	_getAdOriginalCh13Value
   901  007D  3000               	movlw	0
   902  007E  0243               	subwf	?_getAdOriginalCh13Value+1,w
   903  007F  3025               	movlw	37
   904  0080  1903               	skipnz
   905  0081  0242               	subwf	?_getAdOriginalCh13Value,w
   906  0082  1C03               	skipc
   907  0083  2893               	goto	l3219
   908  0084                     L3:	
   909                           
   910                           ;main.c: 251: {
   911                           ;main.c: 252: ucInit = 1;
   912  0084  01C0               	clrf	main@ucInit
   913  0085  0AC0               	incf	main@ucInit,f
   914                           
   915                           ;main.c: 253: PA0 = 0;
   916  0086  1005               	bcf	5,0
   917                           
   918                           ;main.c: 254: PA1 = 1;
   919  0087  1485               	bsf	5,1
   920                           
   921                           ;main.c: 255: PA3 = 1;
   922  0088  1585               	bsf	5,3
   923                           
   924                           ;main.c: 256: tDA_timer = BIG_TIMER_WORK;
   925  0089  01BA               	clrf	main@tDA_timer
   926                           
   927                           ;main.c: 258: if(!ucBigTimerActionFlag)
   928  008A  08BB               	movf	main@ucBigTimerActionFlag,f
   929  008B  1D03               	skipz
   930  008C  2840               	goto	l3167
   931                           
   932                           ;main.c: 259: {
   933                           ;main.c: 260: startBigTimer();
   934  008D  118A  2264  118A   	fcall	_startBigTimer
   935                           
   936                           ;main.c: 261: ucBigTimerActionFlag = 1;
   937  0090  01BB               	clrf	main@ucBigTimerActionFlag
   938  0091  0ABB               	incf	main@ucBigTimerActionFlag,f
   939  0092  2840               	goto	l3167
   940  0093                     l3219:	
   941                           
   942                           ;main.c: 264: else if(getAdOriginalCh13Value() <31)
   943  0093  118A  2269  118A   	fcall	_getAdOriginalCh13Value
   944  0096  3000               	movlw	0
   945  0097  0243               	subwf	?_getAdOriginalCh13Value+1,w
   946  0098  301F               	movlw	31
   947  0099  1903               	skipnz
   948  009A  0242               	subwf	?_getAdOriginalCh13Value,w
   949  009B  1803               	skipnc
   950  009C  28A8               	goto	l3225
   951                           
   952                           ;main.c: 265: {
   953                           ;main.c: 266: ucInit = 1;
   954  009D  01C0               	clrf	main@ucInit
   955  009E  0AC0               	incf	main@ucInit,f
   956                           
   957                           ;main.c: 267: PA0 = 1;
   958  009F  1405               	bsf	5,0
   959                           
   960                           ;main.c: 268: PA1 = 0;
   961  00A0  1085               	bcf	5,1
   962                           
   963                           ;main.c: 269: PA3 = 0;
   964  00A1  1185               	bcf	5,3
   965                           
   966                           ;main.c: 273: ucSetSmallActionFlag = 1;
   967  00A2  01BA               	clrf	main@tDA_timer
   968  00A3  0ABA               	incf	main@tDA_timer,f
   969                           
   970                           ;main.c: 275: startSmallTimer();
   971  00A4  118A  225F  118A   	fcall	_startSmallTimer
   972                           
   973                           ;main.c: 276: }
   974  00A7  2840               	goto	l3167
   975  00A8                     l3225:	
   976                           
   977                           ;main.c: 277: else
   978                           ;main.c: 278: {
   979                           ;main.c: 279: if(!ucInit)
   980  00A8  08C0               	movf	main@ucInit,f
   981  00A9  1D03               	skipz
   982  00AA  2840               	goto	l3167
   983  00AB  2884               	goto	L3
   984  00AC                     l3239:	
   985                           ;main.c: 287: if(!ucBigTimerActionFlag)
   986                           
   987                           ;main.c: 285: tDA_timer = BIG_TIMER_WORK;
   988                           
   989                           ;main.c: 284: PA3 = 1;
   990                           
   991                           ;main.c: 283: PA1 = 1;
   992                           
   993                           ;main.c: 282: PA0 = 0;
   994                           
   995                           ;main.c: 280: {
   996                           ;main.c: 281: ucInit = 1;
   997                           
   998                           
   999                           ;main.c: 305: {
  1000                           ;main.c: 306: if(!isFinishedBigTimer())
  1001  00AC  118A  225A  118A   	fcall	_isFinishedBigTimer
  1002  00AF  3800               	iorlw	0
  1003  00B0  1D03               	skipz
  1004  00B1  2840               	goto	l3167
  1005  00B2                     l3241:	
  1006                           
  1007                           ;main.c: 307: {
  1008                           ;main.c: 308: ampStep = ADC1_VALUE_MEET_CONDITION;
  1009  00B2  3005               	movlw	5
  1010  00B3  00B9               	movwf	main@ampStep
  1011                           
  1012                           ;main.c: 309: }
  1013  00B4  28F1               	goto	l3151
  1014  00B5                     l3245:	
  1015                           
  1016                           ;main.c: 318: {
  1017                           ;main.c: 319: if((ucBigTimerActionFlag == 1) && isFinishedBigTimer())
  1018  00B5  0B3B               	decfsz	main@ucBigTimerActionFlag,w
  1019  00B6  28BD               	goto	l3251
  1020  00B7  118A  225A  118A   	fcall	_isFinishedBigTimer
  1021  00BA  3A00               	xorlw	0
  1022  00BB  1D03               	btfss	3,2
  1023  00BC  2840               	goto	l3167
  1024  00BD                     l3251:	
  1025                           
  1026                           ;main.c: 323: else if(!isFinishedSmallTimer())
  1027  00BD  118A  2255  118A   	fcall	_isFinishedSmallTimer
  1028  00C0  3800               	iorlw	0
  1029  00C1  1D03               	skipz
  1030  00C2  2840               	goto	l3167
  1031                           
  1032                           ;main.c: 329: ucSetSmallActionFlag = 0;
  1033  00C3  118A  2269  118A   	fcall	_getAdOriginalCh13Value
  1034  00C6  3000               	movlw	0
  1035  00C7  0243               	subwf	?_getAdOriginalCh13Value+1,w
  1036  00C8  3025               	movlw	37
  1037  00C9  1903               	skipnz
  1038  00CA  0242               	subwf	?_getAdOriginalCh13Value,w
  1039  00CB  1803               	btfsc	3,0
  1040  00CC  28B2               	goto	l3241
  1041  00CD  28F1               	goto	l3151
  1042  00CE                     l3261:	
  1043  00CE  083A               	movf	main@tDA_timer,w
  1044                           
  1045                           ; Switch size 1, requested type "space"
  1046                           ; Number of cases is 2, Range of values is 0 to 1
  1047                           ; switch strategies available:
  1048                           ; Name         Instructions Cycles
  1049                           ; simple_byte            7     4 (average)
  1050                           ; direct_byte           11     7 (fixed)
  1051                           ; jumptable            260     6 (fixed)
  1052                           ; rangetable             6     6 (fixed)
  1053                           ; spacedrange           10     9 (fixed)
  1054                           ; locatedrange           2     3 (fixed)
  1055                           ;	Chosen strategy is simple_byte
  1056  00CF  3A00               	xorlw	0	; case 0
  1057  00D0  1903               	skipnz
  1058  00D1  28AC               	goto	l3239
  1059  00D2  3A01               	xorlw	1	; case 1
  1060  00D3  1903               	skipnz
  1061  00D4  28B5               	goto	l3245
  1062  00D5  290C               	goto	l682
  1063  00D6                     l732:	
  1064                           ;main.c: 346: }
  1065                           ;main.c: 348: case SET_TIME_BE_FINISHED:
  1066                           
  1067                           
  1068                           ;main.c: 349: {
  1069                           ;main.c: 350: PA2 = 1;
  1070  00D6  1505               	bsf	5,2
  1071                           
  1072                           ;main.c: 351: PA0 = 0;
  1073  00D7  1005               	bcf	5,0
  1074                           
  1075                           ;main.c: 352: PA1 = 0;
  1076  00D8  1085               	bcf	5,1
  1077                           
  1078                           ;main.c: 356: ucSetSmallActionFlag = 0;
  1079  00D9  1185               	bcf	5,3
  1080  00DA  2840               	goto	l3167
  1081  00DB                     l733:	
  1082                           ;main.c: 360: }
  1083                           ;main.c: 362: case CHECKING_PULL_OUT_BATTERY:
  1084                           
  1085                           
  1086                           ;main.c: 363: {
  1087                           ;main.c: 364: static unsigned char ucCheckBatteryCnt = 0;
  1088                           ;main.c: 365: if(PB2)
  1089  00DB  1D06               	btfss	6,2
  1090  00DC  28DF               	goto	l3267
  1091                           
  1092                           ;main.c: 366: ucCheckBatteryCnt++;
  1093  00DD  0ABC               	incf	main@ucCheckBatteryCnt,f
  1094  00DE  28E0               	goto	l3269
  1095  00DF                     l3267:	
  1096                           
  1097                           ;main.c: 367: else
  1098                           ;main.c: 368: ucCheckBatteryCnt = 0;
  1099  00DF  01BC               	clrf	main@ucCheckBatteryCnt
  1100  00E0                     l3269:	
  1101                           
  1102                           ;main.c: 370: if(ucCheckBatteryCnt > 2)
  1103  00E0  3003               	movlw	3
  1104  00E1  023C               	subwf	main@ucCheckBatteryCnt,w
  1105  00E2  1C03               	skipc
  1106  00E3  28F1               	goto	l3151
  1107                           
  1108                           ;main.c: 371: {
  1109                           ;main.c: 372: ucCheckBatteryCnt = 0;
  1110  00E4  01BC               	clrf	main@ucCheckBatteryCnt
  1111  00E5  2840               	goto	l3167
  1112  00E6                     l739:	
  1113                           ;main.c: 376: }
  1114                           ;main.c: 378: case CHECKING_INSTALLED_BATTERY:
  1115                           
  1116                           
  1117                           ;main.c: 379: {
  1118                           ;main.c: 380: static unsigned char ucInstalledBatteryCnt = 0;
  1119                           ;main.c: 381: if(!PB2)
  1120  00E6  1906               	btfsc	6,2
  1121  00E7  28EA               	goto	l3277
  1122                           
  1123                           ;main.c: 382: ucInstalledBatteryCnt++;
  1124  00E8  0AC1               	incf	main@ucInstalledBatteryCnt,f
  1125  00E9  28EB               	goto	l3279
  1126  00EA                     l3277:	
  1127                           
  1128                           ;main.c: 383: else
  1129                           ;main.c: 384: ucInstalledBatteryCnt = 0;
  1130  00EA  01C1               	clrf	main@ucInstalledBatteryCnt
  1131  00EB                     l3279:	
  1132                           
  1133                           ;main.c: 386: if(ucInstalledBatteryCnt > 10)
  1134  00EB  300B               	movlw	11
  1135  00EC  0241               	subwf	main@ucInstalledBatteryCnt,w
  1136  00ED  1C03               	skipc
  1137  00EE  28F1               	goto	l3151
  1138                           
  1139                           ;main.c: 387: {
  1140                           ;main.c: 388: ucInstalledBatteryCnt = 0;
  1141  00EF  01C1               	clrf	main@ucInstalledBatteryCnt
  1142                           
  1143                           ;main.c: 389: ampStep = SENSE_PB2_INPUT_VOLTAGE;
  1144  00F0  01B9               	clrf	main@ampStep
  1145  00F1                     l3151:	
  1146  00F1  0064               	clrwdt	;#
  1147                           
  1148                           ;main.c: 150: if(isPermitSampleTime())
  1149  00F2  118A  2273  118A   	fcall	_isPermitSampleTime
  1150  00F5  3A00               	xorlw	0
  1151  00F6  1903               	skipnz
  1152  00F7  28F1               	goto	l3151
  1153                           
  1154                           ;main.c: 151: {
  1155                           ;main.c: 152: clrSampeTime();
  1156  00F8  118A  2286  118A   	fcall	_clrSampeTime
  1157                           
  1158                           ;main.c: 153: process_AD_Converter_Value();
  1159  00FB  118A  210D  118A   	fcall	_process_AD_Converter_Value
  1160  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  1161  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  1162  0100  0839               	movf	main@ampStep,w
  1163                           
  1164                           ; Switch size 1, requested type "space"
  1165                           ; Number of cases is 11, Range of values is 0 to 10
  1166                           ; switch strategies available:
  1167                           ; Name         Instructions Cycles
  1168                           ; direct_byte           29     7 (fixed)
  1169                           ; simple_byte           34    18 (average)
  1170                           ; jumptable            260     6 (fixed)
  1171                           ; rangetable            15     6 (fixed)
  1172                           ; spacedrange           28     9 (fixed)
  1173                           ; locatedrange          11     3 (fixed)
  1174                           ;	Chosen strategy is direct_byte
  1175  0101  0084               	movwf	4
  1176  0102  300B               	movlw	11
  1177  0103  0204               	subwf	4,w
  1178  0104  1803               	skipnc
  1179  0105  28F1               	goto	l3151
  1180  0106  3002               	movlw	high S3335
  1181  0107  008A               	movwf	10
  1182  0108  1003               	clrc
  1183  0109  0D04               	rlf	4,w
  1184  010A  3E00               	addlw	low S3335
  1185  010B  0082               	movwf	2
  1186  010C                     l682:	
  1187  010C  28F1               	goto	l3151
  1188  010D                     __end_of_main:	
  1189                           
  1190                           	psect	swtext1
  1191  0200                     __pswtext1:	
  1192  0200                     S3335:	
  1193  0200  118A  2837         	ljmp	l3159
  1194  0202  118A  2842         	ljmp	l687
  1195  0204  118A  284D         	ljmp	l693
  1196  0206  118A  284E         	ljmp	l695
  1197  0208  118A  2859         	ljmp	l701
  1198  020A  118A  285B         	ljmp	l3193
  1199  020C  118A  287A         	ljmp	l3207
  1200  020E  118A  28CE         	ljmp	l3261
  1201  0210  118A  28D6         	ljmp	l732
  1202  0212  118A  28DB         	ljmp	l733
  1203  0214  118A  28E6         	ljmp	l739
  1204                           
  1205                           	psect	text470
  1206  010D                     __ptext470:	
  1207 ;; =============== function _main ends ============
  1208                           
  1209                           
  1210 ;; *************** function _process_AD_Converter_Value *****************
  1211 ;; Defined at:
  1212 ;;		line 94 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;		None
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;		None
  1217 ;; Return value:  Size  Location     Type
  1218 ;;		None               void
  1219 ;; Registers used:
  1220 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: FFE9F/0
  1225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1226 ;;      Params:         0       0       0       0       0
  1227 ;;      Locals:         0       0       0       0       0
  1228 ;;      Temps:          0       0       0       0       0
  1229 ;;      Totals:         0       0       0       0       0
  1230 ;;Total ram usage:        0 bytes
  1231 ;; Hardware stack levels used:    1
  1232 ;; Hardware stack levels required when called:    4
  1233 ;; This function calls:
  1234 ;;		_getAD_ConvertFlag
  1235 ;;		_setAD_ConvertFlag
  1236 ;;		_AD_Sample
  1237 ;;		_adc_test_init
  1238 ;;		_adc_start
  1239 ;; This function is called by:
  1240 ;;		_main
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243  010D                     _process_AD_Converter_Value:	
  1244                           
  1245                           ;common.c: 65: return adc_convert_flag;
  1246                           
  1247                           ; Regs used in _getAD_ConvertFlag: [wreg]
  1248                           
  1249                           ;common.c: 95: if(getAD_ConvertFlag())
  1250                           
  1251                           ; Regs used in _process_AD_Converter_Value: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1252  010D  0879               	movf	_adc_convert_flag,w
  1253  010E  3A00               	xorlw	0
  1254  010F  1903               	skipnz
  1255  0110  0008               	return
  1256                           
  1257                           ;common.c: 96: {
  1258                           ;common.c: 97: setAD_ConvertFlag(0);
  1259  0111  3000               	movlw	0
  1260  0112  2124  118A         	fcall	_setAD_ConvertFlag
  1261                           
  1262                           ;common.c: 98: AD_Sample();
  1263  0114  2129  118A         	fcall	_AD_Sample
  1264                           
  1265                           ;common.c: 99: if(1 == sampleChannelSelect)
  1266  0116  0B47               	decfsz	_sampleChannelSelect,w
  1267  0117  291C               	goto	l3131
  1268                           
  1269                           ;common.c: 100: adc_test_init(1,3);
  1270  0118  3003               	movlw	3
  1271  0119  00C2               	movwf	?_adc_test_init
  1272  011A  3001               	movlw	1
  1273  011B  291F               	goto	L4
  1274  011C                     l3131:	
  1275                           
  1276                           ;common.c: 101: else
  1277                           ;common.c: 102: adc_test_init(13,3);
  1278  011C  3003               	movlw	3
  1279  011D  00C2               	movwf	?_adc_test_init
  1280  011E  300D               	movlw	13
  1281  011F                     L4:	
  1282  011F  218B  118A         	fcall	_adc_test_init
  1283                           
  1284                           ;common.c: 104: adc_start();
  1285  0121  29A0               	ljmp	l2977
  1286  0122                     __end_of_process_AD_Converter_Value:	
  1287  0122                     __ptext474:	
  1288 ;; =============== function _setAD_ConvertFlag ends ============
  1289                           
  1290                           
  1291 ;; *************** function _getAD_ConvertFlag *****************
  1292 ;; Defined at:
  1293 ;;		line 64 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  1294 ;; Parameters:    Size  Location     Type
  1295 ;;		None
  1296 ;; Auto vars:     Size  Location     Type
  1297 ;;		None
  1298 ;; Return value:  Size  Location     Type
  1299 ;;                  1    wreg      unsigned char 
  1300 ;; Registers used:
  1301 ;;		wreg
  1302 ;; Tracked objects:
  1303 ;;		On entry : 0/0
  1304 ;;		On exit  : 0/0
  1305 ;;		Unchanged: FFFFF/0
  1306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1307 ;;      Params:         0       0       0       0       0
  1308 ;;      Locals:         0       0       0       0       0
  1309 ;;      Temps:          0       0       0       0       0
  1310 ;;      Totals:         0       0       0       0       0
  1311 ;;Total ram usage:        0 bytes
  1312 ;; Hardware stack levels used:    1
  1313 ;; Hardware stack levels required when called:    2
  1314 ;; This function calls:
  1315 ;;		Nothing
  1316 ;; This function is called by:
  1317 ;;		_process_AD_Converter_Value
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320  0122                     _getAD_ConvertFlag:	
  1321                           
  1322                           ;common.c: 65: return adc_convert_flag;
  1323                           
  1324                           ; Regs used in _getAD_ConvertFlag: [wreg]
  1325  0122  0879               	movf	_adc_convert_flag,w
  1326  0123  0008               	return
  1327  0124                     __end_of_getAD_ConvertFlag:	
  1328  0124                     __ptext473:	
  1329 ;; =============== function _getAdOriginalValue ends ============
  1330                           
  1331                           
  1332 ;; *************** function _setAD_ConvertFlag *****************
  1333 ;; Defined at:
  1334 ;;		line 70 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;  flag            1    wreg     unsigned char 
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;  flag            1    0[BANK0 ] unsigned char 
  1339 ;; Return value:  Size  Location     Type
  1340 ;;		None               void
  1341 ;; Registers used:
  1342 ;;		wreg
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 60/0
  1346 ;;		Unchanged: FFF9F/0
  1347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1348 ;;      Params:         0       0       0       0       0
  1349 ;;      Locals:         0       1       0       0       0
  1350 ;;      Temps:          0       0       0       0       0
  1351 ;;      Totals:         0       1       0       0       0
  1352 ;;Total ram usage:        1 bytes
  1353 ;; Hardware stack levels used:    1
  1354 ;; Hardware stack levels required when called:    2
  1355 ;; This function calls:
  1356 ;;		Nothing
  1357 ;; This function is called by:
  1358 ;;		_process_AD_Converter_Value
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361  0124                     _setAD_ConvertFlag:	
  1362                           
  1363                           ; Regs used in _setAD_ConvertFlag: [wreg]
  1364                           ;setAD_ConvertFlag@flag stored from wreg
  1365  0124  1283               	bcf	3,5	;RP0=0, select bank0
  1366  0125  1303               	bcf	3,6	;RP1=0, select bank0
  1367  0126  00C2               	movwf	setAD_ConvertFlag@flag
  1368                           
  1369                           ;common.c: 71: adc_convert_flag = flag;
  1370  0127  00F9               	movwf	_adc_convert_flag
  1371  0128  0008               	return
  1372  0129                     __end_of_setAD_ConvertFlag:	
  1373  0129                     __ptext471:	
  1374 ;; =============== function _process_AD_Converter_Value ends ============
  1375                           
  1376                           
  1377 ;; *************** function _AD_Sample *****************
  1378 ;; Defined at:
  1379 ;;		line 118 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;		None
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;  index           1    4[BANK0 ] unsigned char 
  1384 ;; Return value:  Size  Location     Type
  1385 ;;		None               void
  1386 ;; Registers used:
  1387 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1388 ;; Tracked objects:
  1389 ;;		On entry : 60/0
  1390 ;;		On exit  : 60/0
  1391 ;;		Unchanged: FFE9F/0
  1392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1393 ;;      Params:         0       0       0       0       0
  1394 ;;      Locals:         0       1       0       0       0
  1395 ;;      Temps:          0       2       0       0       0
  1396 ;;      Totals:         0       3       0       0       0
  1397 ;;Total ram usage:        3 bytes
  1398 ;; Hardware stack levels used:    1
  1399 ;; Hardware stack levels required when called:    3
  1400 ;; This function calls:
  1401 ;;		_getAdOriginalValue
  1402 ;; This function is called by:
  1403 ;;		_process_AD_Converter_Value
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406  0129                     _AD_Sample:	
  1407                           
  1408                           ;common.c: 119: if(sampleTimes < 6)
  1409                           
  1410                           ; Regs used in _AD_Sample: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1411  0129  3006               	movlw	6
  1412  012A  0238               	subwf	_sampleTimes,w
  1413  012B  1803               	skipnc
  1414  012C  0008               	return
  1415                           
  1416                           ;common.c: 120: {
  1417                           ;common.c: 122: buffer_Sample_AD_Value[sampleTimes] = getAdOriginalValue();
  1418  012D  2186  118A         	fcall	_getAdOriginalValue
  1419  012F  1003               	clrc
  1420  0130  0D38               	rlf	_sampleTimes,w
  1421  0131  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  1422  0132  0084               	movwf	4
  1423  0133  0842               	movf	?_getAdOriginalValue,w
  1424  0134  1383               	bcf	3,7	;select IRP bank0
  1425  0135  0080               	movwf	0
  1426  0136  0A84               	incf	4,f
  1427  0137  0843               	movf	?_getAdOriginalValue+1,w
  1428  0138  0080               	movwf	0
  1429                           
  1430                           ;common.c: 124: if(sampleTimes == 0)
  1431  0139  08B8               	movf	_sampleTimes,f
  1432  013A  1D03               	skipz
  1433  013B  2944               	goto	l3087
  1434                           
  1435                           ;common.c: 125: {
  1436                           ;common.c: 126: multiFilterMaxValue = buffer_Sample_AD_Value[0];
  1437  013C  0821               	movf	_buffer_Sample_AD_Value+1,w
  1438  013D  00B3               	movwf	_multiFilterMaxValue+1
  1439  013E  0820               	movf	_buffer_Sample_AD_Value,w
  1440  013F  00B2               	movwf	_multiFilterMaxValue
  1441                           
  1442                           ;common.c: 127: multiFilterMinValue = buffer_Sample_AD_Value[0];
  1443  0140  0821               	movf	_buffer_Sample_AD_Value+1,w
  1444  0141  00B5               	movwf	_multiFilterMinValue+1
  1445  0142  0820               	movf	_buffer_Sample_AD_Value,w
  1446  0143  00B4               	movwf	_multiFilterMinValue
  1447  0144                     l3087:	
  1448                           
  1449                           ;common.c: 128: }
  1450                           ;common.c: 130: if(multiFilterMaxValue < buffer_Sample_AD_Value[sampleTimes])
  1451  0144  21A3  118A         	fcall	PL2	;call to abstracted procedure
  1452  0146  0233               	subwf	_multiFilterMaxValue+1,w
  1453  0147  1D03               	skipz
  1454  0148  294B               	goto	u555
  1455  0149  0844               	movf	??_AD_Sample,w
  1456  014A  0232               	subwf	_multiFilterMaxValue,w
  1457  014B                     u555:	
  1458  014B  1803               	skipnc
  1459  014C  2956               	goto	l1448
  1460                           
  1461                           ;common.c: 131: {
  1462                           ;common.c: 132: multiFilterMaxValue = buffer_Sample_AD_Value[sampleTimes];
  1463  014D  1003               	clrc
  1464  014E  0D38               	rlf	_sampleTimes,w
  1465  014F  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  1466  0150  0084               	movwf	4
  1467  0151  0800               	movf	0,w
  1468  0152  00B2               	movwf	_multiFilterMaxValue
  1469  0153  0A84               	incf	4,f
  1470  0154  0800               	movf	0,w
  1471  0155  00B3               	movwf	_multiFilterMaxValue+1
  1472  0156                     l1448:	
  1473                           
  1474                           ;common.c: 133: }
  1475                           ;common.c: 134: if(multiFilterMinValue > buffer_Sample_AD_Value[sampleTimes])
  1476  0156  21A3  118A         	fcall	PL2	;call to abstracted procedure
  1477  0158  0835               	movf	_multiFilterMinValue+1,w
  1478  0159  0245               	subwf	??_AD_Sample+1,w
  1479  015A  1D03               	skipz
  1480  015B  295E               	goto	u565
  1481  015C  0834               	movf	_multiFilterMinValue,w
  1482  015D  0244               	subwf	??_AD_Sample,w
  1483  015E                     u565:	
  1484  015E  1803               	skipnc
  1485  015F  2969               	goto	l3093
  1486                           
  1487                           ;common.c: 135: {
  1488                           ;common.c: 136: multiFilterMinValue = buffer_Sample_AD_Value[sampleTimes];
  1489  0160  1003               	clrc
  1490  0161  0D38               	rlf	_sampleTimes,w
  1491  0162  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  1492  0163  0084               	movwf	4
  1493  0164  0800               	movf	0,w
  1494  0165  00B4               	movwf	_multiFilterMinValue
  1495  0166  0A84               	incf	4,f
  1496  0167  0800               	movf	0,w
  1497  0168  00B5               	movwf	_multiFilterMinValue+1
  1498  0169                     l3093:	
  1499  0169  3006               	movlw	6
  1500                           
  1501                           ;common.c: 141: sampleTimes++;
  1502  016A  0AB8               	incf	_sampleTimes,f
  1503                           
  1504                           ;common.c: 143: if(sampleTimes >= 6)
  1505  016B  0238               	subwf	_sampleTimes,w
  1506  016C  1C03               	skipc
  1507  016D  0008               	return
  1508                           
  1509                           ;common.c: 144: {
  1510                           ;common.c: 145: sampleTimes = 0;
  1511  016E  01B8               	clrf	_sampleTimes
  1512                           
  1513                           ;common.c: 148: {
  1514                           ;common.c: 150: sampleCH13Value = ((multiFilterSumValue - multiFilterMaxValue - multiFil
      +                          terMinValue))>> 2;
  1515  016F  0847               	movf	_sampleChannelSelect,w
  1516  0170  3A0D               	xorlw	13
  1517  0171  1D03               	skipz
  1518  0172  2976               	goto	l3105
  1519                           
  1520                           ;common.c: 151: sampleChannelSelect = 1;
  1521  0173  01C7               	clrf	_sampleChannelSelect
  1522  0174  0AC7               	incf	_sampleChannelSelect,f
  1523                           
  1524                           ;common.c: 152: }
  1525  0175  2978               	goto	l3109
  1526  0176                     l3105:	
  1527                           
  1528                           ;common.c: 156: sampleChannelSelect = 13;
  1529  0176  300D               	movlw	13
  1530  0177  00C7               	movwf	_sampleChannelSelect
  1531  0178                     l3109:	
  1532                           ;common.c: 157: }
  1533                           
  1534                           
  1535                           ;common.c: 162: }
  1536                           ;common.c: 164: for(unsigned char index = 0; index < 6;index++)
  1537  0178  01C6               	clrf	AD_Sample@index
  1538  0179                     l3115:	
  1539                           
  1540                           ;common.c: 165: buffer_Sample_AD_Value[index] = 0;
  1541  0179  1003               	clrc
  1542  017A  0D46               	rlf	AD_Sample@index,w
  1543  017B  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  1544  017C  0084               	movwf	4
  1545  017D  3006               	movlw	6
  1546  017E  0180               	clrf	0
  1547  017F  0A84               	incf	4,f
  1548  0180  0180               	clrf	0
  1549  0181  0AC6               	incf	AD_Sample@index,f
  1550  0182  0246               	subwf	AD_Sample@index,w
  1551  0183  1803               	btfsc	3,0
  1552  0184  0008               	return
  1553  0185  2979               	goto	l3115
  1554  0186                     __end_of_AD_Sample:	
  1555  0186                     __ptext472:	
  1556 ;; =============== function _AD_Sample ends ============
  1557                           
  1558                           
  1559 ;; *************** function _getAdOriginalValue *****************
  1560 ;; Defined at:
  1561 ;;		line 76 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;		None
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;		None
  1566 ;; Return value:  Size  Location     Type
  1567 ;;                  2    0[BANK0 ] unsigned int 
  1568 ;; Registers used:
  1569 ;;		wreg
  1570 ;; Tracked objects:
  1571 ;;		On entry : 60/0
  1572 ;;		On exit  : 60/0
  1573 ;;		Unchanged: FFF9F/0
  1574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1575 ;;      Params:         0       2       0       0       0
  1576 ;;      Locals:         0       0       0       0       0
  1577 ;;      Temps:          0       0       0       0       0
  1578 ;;      Totals:         0       2       0       0       0
  1579 ;;Total ram usage:        2 bytes
  1580 ;; Hardware stack levels used:    1
  1581 ;; Hardware stack levels required when called:    2
  1582 ;; This function calls:
  1583 ;;		Nothing
  1584 ;; This function is called by:
  1585 ;;		_AD_Sample
  1586 ;; This function uses a non-reentrant model
  1587 ;;
  1588  0186                     _getAdOriginalValue:	
  1589                           
  1590                           ;common.c: 77: return adc_original_value;
  1591                           
  1592                           ; Regs used in _getAdOriginalValue: [wreg]
  1593  0186  0831               	movf	_adc_original_value+1,w
  1594  0187  00C3               	movwf	?_getAdOriginalValue+1
  1595  0188  0830               	movf	_adc_original_value,w
  1596  0189  00C2               	movwf	?_getAdOriginalValue
  1597  018A  0008               	return
  1598  018B                     __end_of_getAdOriginalValue:	
  1599  018B                     __ptext489:	
  1600 ;; =============== function _dac_init ends ============
  1601                           
  1602                           
  1603 ;; *************** function _adc_test_init *****************
  1604 ;; Defined at:
  1605 ;;		line 85 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\periph.c"
  1606 ;; Parameters:    Size  Location     Type
  1607 ;;  channel         1    wreg     unsigned char 
  1608 ;;  ref             1    0[BANK0 ] unsigned char 
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;  channel         1    2[BANK0 ] unsigned char 
  1611 ;; Return value:  Size  Location     Type
  1612 ;;		None               void
  1613 ;; Registers used:
  1614 ;;		wreg, status,2, status,0
  1615 ;; Tracked objects:
  1616 ;;		On entry : 60/0
  1617 ;;		On exit  : 60/20
  1618 ;;		Unchanged: FFF9F/0
  1619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1620 ;;      Params:         0       1       0       0       0
  1621 ;;      Locals:         0       1       0       0       0
  1622 ;;      Temps:          0       1       0       0       0
  1623 ;;      Totals:         0       3       0       0       0
  1624 ;;Total ram usage:        3 bytes
  1625 ;; Hardware stack levels used:    1
  1626 ;; Hardware stack levels required when called:    2
  1627 ;; This function calls:
  1628 ;;		Nothing
  1629 ;; This function is called by:
  1630 ;;		_main
  1631 ;;		_process_AD_Converter_Value
  1632 ;; This function uses a non-reentrant model
  1633 ;;
  1634  018B                     _adc_test_init:	
  1635                           
  1636                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  1637                           ;adc_test_init@channel stored from wreg
  1638  018B  00C4               	movwf	adc_test_init@channel
  1639                           
  1640                           ;periph.c: 86: ADCON0 = 0x00;
  1641  018C  019F               	clrf	31	;volatile
  1642                           
  1643                           ;periph.c: 87: ADCON0|=channel<<2;
  1644  018D  00C3               	movwf	??_adc_test_init
  1645  018E  1003               	clrc
  1646  018F  0DC3               	rlf	??_adc_test_init,f
  1647  0190  1003               	clrc
  1648  0191  0D43               	rlf	??_adc_test_init,w
  1649  0192  049F               	iorwf	31,f	;volatile
  1650                           
  1651                           ;periph.c: 88: ADCON1|=ref<<6;
  1652  0193  0842               	movf	adc_test_init@ref,w
  1653  0194  00C3               	movwf	??_adc_test_init
  1654  0195  0CC3               	rrf	??_adc_test_init,f
  1655  0196  0CC3               	rrf	??_adc_test_init,f
  1656  0197  0C43               	rrf	??_adc_test_init,w
  1657  0198  39C0               	andlw	192
  1658  0199  1683               	bsf	3,5	;RP0=1, select bank1
  1659  019A  049F               	iorwf	31,f	;volatile
  1660                           
  1661                           ;periph.c: 89: ADON=1;
  1662  019B  1283               	bcf	3,5	;RP0=0, select bank0
  1663  019C  141F               	bsf	31,0
  1664                           
  1665                           ;periph.c: 90: ADIE=1;
  1666  019D  1683               	bsf	3,5	;RP0=1, select bank1
  1667  019E  150D               	bsf	13,2
  1668  019F  0008               	return
  1669  01A0                     __end_of_adc_test_init:	
  1670  01A0                     __ptext485:	
  1671 ;; =============== function _isPermitSampleTime ends ============
  1672                           
  1673                           
  1674 ;; *************** function _adc_start *****************
  1675 ;; Defined at:
  1676 ;;		line 100 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\periph.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;		None
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;		None
  1681 ;; Return value:  Size  Location     Type
  1682 ;;		None               void
  1683 ;; Registers used:
  1684 ;;		None
  1685 ;; Tracked objects:
  1686 ;;		On entry : 60/20
  1687 ;;		On exit  : 60/0
  1688 ;;		Unchanged: FFF9F/0
  1689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1690 ;;      Params:         0       0       0       0       0
  1691 ;;      Locals:         0       0       0       0       0
  1692 ;;      Temps:          0       0       0       0       0
  1693 ;;      Totals:         0       0       0       0       0
  1694 ;;Total ram usage:        0 bytes
  1695 ;; Hardware stack levels used:    1
  1696 ;; Hardware stack levels required when called:    2
  1697 ;; This function calls:
  1698 ;;		Nothing
  1699 ;; This function is called by:
  1700 ;;		_main
  1701 ;;		_process_AD_Converter_Value
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704  01A0                     _adc_start:	
  1705  01A0                     l2977:	
  1706                           ; Regs used in _adc_start: []
  1707                           
  1708                           
  1709                           ;periph.c: 101: GO=1;
  1710  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  1711  01A1  149F               	bsf	31,1
  1712  01A2  0008               	return
  1713  01A3                     __end_of_adc_start:	
  1714  01A3                     PL2:	
  1715  01A3  1003               	clrc
  1716  01A4  0D38               	rlf	_sampleTimes,w
  1717  01A5  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  1718  01A6  0084               	movwf	4
  1719  01A7  0800               	movf	0,w
  1720  01A8  00C4               	movwf	??_AD_Sample
  1721  01A9  0A84               	incf	4,f
  1722  01AA  0800               	movf	0,w
  1723  01AB  00C5               	movwf	??_AD_Sample+1
  1724  01AC  0008               	return
  1725                           
  1726                           	psect	text475
  1727  0255                     __ptext475:	
  1728 ;; =============== function _getAD_ConvertFlag ends ============
  1729                           
  1730                           
  1731 ;; *************** function _isFinishedSmallTimer *****************
  1732 ;; Defined at:
  1733 ;;		line 230 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;		None
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;		None
  1738 ;; Return value:  Size  Location     Type
  1739 ;;                  1    wreg      unsigned char 
  1740 ;; Registers used:
  1741 ;;		wreg, status,2, status,0
  1742 ;; Tracked objects:
  1743 ;;		On entry : 60/0
  1744 ;;		On exit  : 60/0
  1745 ;;		Unchanged: FFF9F/0
  1746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1747 ;;      Params:         0       0       0       0       0
  1748 ;;      Locals:         0       0       0       0       0
  1749 ;;      Temps:          0       0       0       0       0
  1750 ;;      Totals:         0       0       0       0       0
  1751 ;;Total ram usage:        0 bytes
  1752 ;; Hardware stack levels used:    1
  1753 ;; Hardware stack levels required when called:    2
  1754 ;; This function calls:
  1755 ;;		Nothing
  1756 ;; This function is called by:
  1757 ;;		_main
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760  0255                     _isFinishedSmallTimer:	
  1761                           
  1762                           ;common.c: 231: if(uiSmallTimer == 0)
  1763                           
  1764                           ; Regs used in _isFinishedSmallTimer: [wreg+status,2+status,0]
  1765  0255  0837               	movf	_uiSmallTimer+1,w
  1766  0256  0436               	iorwf	_uiSmallTimer,w
  1767  0257  1903               	btfsc	3,2
  1768                           
  1769                           ;common.c: 232: return 1;
  1770  0258  3401               	retlw	1
  1771                           
  1772                           ;common.c: 233: else
  1773                           ;common.c: 234: return 0;
  1774  0259  3400               	retlw	0
  1775  025A                     __end_of_isFinishedSmallTimer:	
  1776                           
  1777                           	psect	text476
  1778  025A                     __ptext476:	
  1779 ;; =============== function _isFinishedSmallTimer ends ============
  1780                           
  1781                           
  1782 ;; *************** function _isFinishedBigTimer *****************
  1783 ;; Defined at:
  1784 ;;		line 222 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;		None
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;		None
  1789 ;; Return value:  Size  Location     Type
  1790 ;;                  1    wreg      unsigned char 
  1791 ;; Registers used:
  1792 ;;		wreg, status,2, status,0
  1793 ;; Tracked objects:
  1794 ;;		On entry : 60/0
  1795 ;;		On exit  : 60/0
  1796 ;;		Unchanged: FFF9F/0
  1797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1798 ;;      Params:         0       0       0       0       0
  1799 ;;      Locals:         0       0       0       0       0
  1800 ;;      Temps:          0       0       0       0       0
  1801 ;;      Totals:         0       0       0       0       0
  1802 ;;Total ram usage:        0 bytes
  1803 ;; Hardware stack levels used:    1
  1804 ;; Hardware stack levels required when called:    2
  1805 ;; This function calls:
  1806 ;;		Nothing
  1807 ;; This function is called by:
  1808 ;;		_main
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811  025A                     _isFinishedBigTimer:	
  1812                           
  1813                           ;common.c: 223: if(uiBigTimer == 0)
  1814                           
  1815                           ; Regs used in _isFinishedBigTimer: [wreg+status,2+status,0]
  1816  025A  0877               	movf	_uiBigTimer+1,w
  1817  025B  0476               	iorwf	_uiBigTimer,w
  1818  025C  1903               	btfsc	3,2
  1819                           
  1820                           ;common.c: 224: return 1;
  1821  025D  3401               	retlw	1
  1822                           
  1823                           ;common.c: 225: else
  1824                           ;common.c: 226: return 0;
  1825  025E  3400               	retlw	0
  1826  025F                     __end_of_isFinishedBigTimer:	
  1827                           
  1828                           	psect	text477
  1829  025F                     __ptext477:	
  1830 ;; =============== function _isFinishedBigTimer ends ============
  1831                           
  1832                           
  1833 ;; *************** function _startSmallTimer *****************
  1834 ;; Defined at:
  1835 ;;		line 212 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;		None
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;		None
  1840 ;; Return value:  Size  Location     Type
  1841 ;;		None               void
  1842 ;; Registers used:
  1843 ;;		wreg
  1844 ;; Tracked objects:
  1845 ;;		On entry : 60/0
  1846 ;;		On exit  : 60/0
  1847 ;;		Unchanged: FFF9F/0
  1848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1849 ;;      Params:         0       0       0       0       0
  1850 ;;      Locals:         0       0       0       0       0
  1851 ;;      Temps:          0       0       0       0       0
  1852 ;;      Totals:         0       0       0       0       0
  1853 ;;Total ram usage:        0 bytes
  1854 ;; Hardware stack levels used:    1
  1855 ;; Hardware stack levels required when called:    2
  1856 ;; This function calls:
  1857 ;;		Nothing
  1858 ;; This function is called by:
  1859 ;;		_main
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862  025F                     _startSmallTimer:	
  1863                           
  1864                           ;common.c: 213: uiSmallTimer = 3600;
  1865                           
  1866                           ; Regs used in _startSmallTimer: [wreg]
  1867  025F  3010               	movlw	16
  1868  0260  00B6               	movwf	_uiSmallTimer
  1869  0261  300E               	movlw	14
  1870  0262  00B7               	movwf	_uiSmallTimer+1
  1871  0263  0008               	return
  1872  0264                     __end_of_startSmallTimer:	
  1873                           
  1874                           	psect	text478
  1875  0264                     __ptext478:	
  1876 ;; =============== function _startSmallTimer ends ============
  1877                           
  1878                           
  1879 ;; *************** function _startBigTimer *****************
  1880 ;; Defined at:
  1881 ;;		line 190 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  1882 ;; Parameters:    Size  Location     Type
  1883 ;;		None
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;		None
  1886 ;; Return value:  Size  Location     Type
  1887 ;;		None               void
  1888 ;; Registers used:
  1889 ;;		wreg
  1890 ;; Tracked objects:
  1891 ;;		On entry : 60/0
  1892 ;;		On exit  : 60/0
  1893 ;;		Unchanged: FFF9F/0
  1894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1895 ;;      Params:         0       0       0       0       0
  1896 ;;      Locals:         0       0       0       0       0
  1897 ;;      Temps:          0       0       0       0       0
  1898 ;;      Totals:         0       0       0       0       0
  1899 ;;Total ram usage:        0 bytes
  1900 ;; Hardware stack levels used:    1
  1901 ;; Hardware stack levels required when called:    2
  1902 ;; This function calls:
  1903 ;;		Nothing
  1904 ;; This function is called by:
  1905 ;;		_main
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908  0264                     _startBigTimer:	
  1909                           
  1910                           ;common.c: 191: uiBigTimer = 32400;
  1911                           
  1912                           ; Regs used in _startBigTimer: [wreg]
  1913  0264  3090               	movlw	144
  1914  0265  00F6               	movwf	_uiBigTimer
  1915  0266  307E               	movlw	126
  1916  0267  00F7               	movwf	_uiBigTimer+1
  1917  0268  0008               	return
  1918  0269                     __end_of_startBigTimer:	
  1919                           
  1920                           	psect	text479
  1921  0269                     __ptext479:	
  1922 ;; =============== function _startBigTimer ends ============
  1923                           
  1924                           
  1925 ;; *************** function _getAdOriginalCh13Value *****************
  1926 ;; Defined at:
  1927 ;;		line 87 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;		None
  1930 ;; Auto vars:     Size  Location     Type
  1931 ;;		None
  1932 ;; Return value:  Size  Location     Type
  1933 ;;                  2    0[BANK0 ] unsigned int 
  1934 ;; Registers used:
  1935 ;;		wreg
  1936 ;; Tracked objects:
  1937 ;;		On entry : 60/0
  1938 ;;		On exit  : 60/0
  1939 ;;		Unchanged: FFF9F/0
  1940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1941 ;;      Params:         0       2       0       0       0
  1942 ;;      Locals:         0       0       0       0       0
  1943 ;;      Temps:          0       0       0       0       0
  1944 ;;      Totals:         0       2       0       0       0
  1945 ;;Total ram usage:        2 bytes
  1946 ;; Hardware stack levels used:    1
  1947 ;; Hardware stack levels required when called:    2
  1948 ;; This function calls:
  1949 ;;		Nothing
  1950 ;; This function is called by:
  1951 ;;		_main
  1952 ;; This function uses a non-reentrant model
  1953 ;;
  1954  0269                     _getAdOriginalCh13Value:	
  1955                           
  1956                           ;common.c: 88: return adc_original_CH13_value;
  1957                           
  1958                           ; Regs used in _getAdOriginalCh13Value: [wreg]
  1959  0269  082D               	movf	_adc_original_CH13_value+1,w
  1960  026A  00C3               	movwf	?_getAdOriginalCh13Value+1
  1961  026B  082C               	movf	_adc_original_CH13_value,w
  1962  026C  00C2               	movwf	?_getAdOriginalCh13Value
  1963  026D  0008               	return
  1964  026E                     __end_of_getAdOriginalCh13Value:	
  1965                           
  1966                           	psect	text480
  1967  026E                     __ptext480:	
  1968 ;; =============== function _getAdOriginalCh13Value ends ============
  1969                           
  1970                           
  1971 ;; *************** function _getAdOriginalCh1Value *****************
  1972 ;; Defined at:
  1973 ;;		line 81 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;		None
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;		None
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  2    0[BANK0 ] unsigned int 
  1980 ;; Registers used:
  1981 ;;		wreg
  1982 ;; Tracked objects:
  1983 ;;		On entry : 60/0
  1984 ;;		On exit  : 60/0
  1985 ;;		Unchanged: FFF9F/0
  1986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1987 ;;      Params:         0       2       0       0       0
  1988 ;;      Locals:         0       0       0       0       0
  1989 ;;      Temps:          0       0       0       0       0
  1990 ;;      Totals:         0       2       0       0       0
  1991 ;;Total ram usage:        2 bytes
  1992 ;; Hardware stack levels used:    1
  1993 ;; Hardware stack levels required when called:    2
  1994 ;; This function calls:
  1995 ;;		Nothing
  1996 ;; This function is called by:
  1997 ;;		_main
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000  026E                     _getAdOriginalCh1Value:	
  2001                           
  2002                           ;common.c: 82: return adc_original_CH1_value;
  2003                           
  2004                           ; Regs used in _getAdOriginalCh1Value: [wreg]
  2005  026E  082F               	movf	_adc_original_CH1_value+1,w
  2006  026F  00C3               	movwf	?_getAdOriginalCh1Value+1
  2007  0270  082E               	movf	_adc_original_CH1_value,w
  2008  0271  00C2               	movwf	?_getAdOriginalCh1Value
  2009  0272  0008               	return
  2010  0273                     __end_of_getAdOriginalCh1Value:	
  2011                           
  2012                           	psect	text481
  2013  027D                     __ptext481:	
  2014 ;; =============== function _getAdOriginalCh1Value ends ============
  2015                           
  2016                           
  2017 ;; *************** function _clearSmallTimer *****************
  2018 ;; Defined at:
  2019 ;;		line 206 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;		None
  2022 ;; Auto vars:     Size  Location     Type
  2023 ;;		None
  2024 ;; Return value:  Size  Location     Type
  2025 ;;		None               void
  2026 ;; Registers used:
  2027 ;;		status,2
  2028 ;; Tracked objects:
  2029 ;;		On entry : 60/0
  2030 ;;		On exit  : 60/0
  2031 ;;		Unchanged: FFF9F/0
  2032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2033 ;;      Params:         0       0       0       0       0
  2034 ;;      Locals:         0       0       0       0       0
  2035 ;;      Temps:          0       0       0       0       0
  2036 ;;      Totals:         0       0       0       0       0
  2037 ;;Total ram usage:        0 bytes
  2038 ;; Hardware stack levels used:    1
  2039 ;; Hardware stack levels required when called:    2
  2040 ;; This function calls:
  2041 ;;		Nothing
  2042 ;; This function is called by:
  2043 ;;		_main
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046  027D                     _clearSmallTimer:	
  2047                           
  2048                           ;common.c: 207: uiSmallTimer = 0;
  2049                           
  2050                           ; Regs used in _clearSmallTimer: [status,2]
  2051  027D  01B6               	clrf	_uiSmallTimer
  2052  027E  01B7               	clrf	_uiSmallTimer+1
  2053  027F  0008               	return
  2054  0280                     __end_of_clearSmallTimer:	
  2055                           
  2056                           	psect	text482
  2057  0280                     __ptext482:	
  2058 ;; =============== function _clearSmallTimer ends ============
  2059                           
  2060                           
  2061 ;; *************** function _clearBigTimer *****************
  2062 ;; Defined at:
  2063 ;;		line 200 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;		None
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;		None
  2068 ;; Return value:  Size  Location     Type
  2069 ;;		None               void
  2070 ;; Registers used:
  2071 ;;		status,2
  2072 ;; Tracked objects:
  2073 ;;		On entry : 60/0
  2074 ;;		On exit  : 60/0
  2075 ;;		Unchanged: FFF9F/0
  2076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2077 ;;      Params:         0       0       0       0       0
  2078 ;;      Locals:         0       0       0       0       0
  2079 ;;      Temps:          0       0       0       0       0
  2080 ;;      Totals:         0       0       0       0       0
  2081 ;;Total ram usage:        0 bytes
  2082 ;; Hardware stack levels used:    1
  2083 ;; Hardware stack levels required when called:    2
  2084 ;; This function calls:
  2085 ;;		Nothing
  2086 ;; This function is called by:
  2087 ;;		_main
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090  0280                     _clearBigTimer:	
  2091                           
  2092                           ;common.c: 201: uiBigTimer = 0;
  2093                           
  2094                           ; Regs used in _clearBigTimer: [status,2]
  2095  0280  01F6               	clrf	_uiBigTimer
  2096  0281  01F7               	clrf	_uiBigTimer+1
  2097  0282  0008               	return
  2098  0283                     __end_of_clearBigTimer:	
  2099                           
  2100                           	psect	text483
  2101  0286                     __ptext483:	
  2102 ;; =============== function _clearBigTimer ends ============
  2103                           
  2104                           
  2105 ;; *************** function _clrSampeTime *****************
  2106 ;; Defined at:
  2107 ;;		line 248 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  2108 ;; Parameters:    Size  Location     Type
  2109 ;;		None
  2110 ;; Auto vars:     Size  Location     Type
  2111 ;;		None
  2112 ;; Return value:  Size  Location     Type
  2113 ;;		None               void
  2114 ;; Registers used:
  2115 ;;		status,2
  2116 ;; Tracked objects:
  2117 ;;		On entry : 0/0
  2118 ;;		On exit  : 0/0
  2119 ;;		Unchanged: FFFFF/0
  2120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2121 ;;      Params:         0       0       0       0       0
  2122 ;;      Locals:         0       0       0       0       0
  2123 ;;      Temps:          0       0       0       0       0
  2124 ;;      Totals:         0       0       0       0       0
  2125 ;;Total ram usage:        0 bytes
  2126 ;; Hardware stack levels used:    1
  2127 ;; Hardware stack levels required when called:    2
  2128 ;; This function calls:
  2129 ;;		Nothing
  2130 ;; This function is called by:
  2131 ;;		_main
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134  0286                     _clrSampeTime:	
  2135                           
  2136                           ;common.c: 249: timer.timer10msStopWatch = 0;
  2137                           
  2138                           ; Regs used in _clrSampeTime: [status,2]
  2139  0286  01FA               	clrf	_timer
  2140  0287  0008               	return
  2141  0288                     __end_of_clrSampeTime:	
  2142                           
  2143                           	psect	text484
  2144  0273                     __ptext484:	
  2145 ;; =============== function _clrSampeTime ends ============
  2146                           
  2147                           
  2148 ;; *************** function _isPermitSampleTime *****************
  2149 ;; Defined at:
  2150 ;;		line 238 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  2151 ;; Parameters:    Size  Location     Type
  2152 ;;		None
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;		None
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  1    wreg      unsigned char 
  2157 ;; Registers used:
  2158 ;;		wreg
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: FFFFF/0
  2163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2164 ;;      Params:         0       0       0       0       0
  2165 ;;      Locals:         0       0       0       0       0
  2166 ;;      Temps:          0       0       0       0       0
  2167 ;;      Totals:         0       0       0       0       0
  2168 ;;Total ram usage:        0 bytes
  2169 ;; Hardware stack levels used:    1
  2170 ;; Hardware stack levels required when called:    2
  2171 ;; This function calls:
  2172 ;;		Nothing
  2173 ;; This function is called by:
  2174 ;;		_main
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177  0273                     _isPermitSampleTime:	
  2178                           
  2179                           ;common.c: 239: if(timer.timer10msStopWatch > 10)
  2180                           
  2181                           ; Regs used in _isPermitSampleTime: [wreg]
  2182  0273  300B               	movlw	11
  2183  0274  027A               	subwf	_timer,w
  2184  0275  1803               	btfsc	3,0
  2185                           
  2186                           ;common.c: 240: {
  2187                           ;common.c: 241: return 1;
  2188  0276  3401               	retlw	1
  2189                           
  2190                           ;common.c: 243: else
  2191                           ;common.c: 244: return 0;
  2192  0277  3400               	retlw	0
  2193  0278                     __end_of_isPermitSampleTime:	
  2194                           
  2195                           	psect	text486
  2196  023C                     __ptext486:	
  2197 ;; =============== function _adc_start ends ============
  2198                           
  2199                           
  2200 ;; *************** function _op2_init *****************
  2201 ;; Defined at:
  2202 ;;		line 45 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\periph.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;		None
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;		None
  2207 ;; Return value:  Size  Location     Type
  2208 ;;		None               void
  2209 ;; Registers used:
  2210 ;;		wreg, status,2
  2211 ;; Tracked objects:
  2212 ;;		On entry : 17F/20
  2213 ;;		On exit  : 17F/20
  2214 ;;		Unchanged: FFE80/0
  2215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2216 ;;      Params:         0       0       0       0       0
  2217 ;;      Locals:         0       0       0       0       0
  2218 ;;      Temps:          0       0       0       0       0
  2219 ;;      Totals:         0       0       0       0       0
  2220 ;;Total ram usage:        0 bytes
  2221 ;; Hardware stack levels used:    1
  2222 ;; Hardware stack levels required when called:    2
  2223 ;; This function calls:
  2224 ;;		Nothing
  2225 ;; This function is called by:
  2226 ;;		_main
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229  023C                     _op2_init:	
  2230                           
  2231                           ;periph.c: 52: OP2CON1=0x00;
  2232                           
  2233                           ; Regs used in _op2_init: [wreg+status,2]
  2234  023C  019C               	clrf	28	;volatile
  2235                           
  2236                           ;periph.c: 54: OP2CON2=0xA0;
  2237  023D  30A0               	movlw	160
  2238  023E  009D               	movwf	29	;volatile
  2239                           
  2240                           ;periph.c: 55: OP2CON0=0x80;
  2241  023F  3080               	movlw	128
  2242  0240  009B               	movwf	27	;volatile
  2243                           
  2244                           ;periph.c: 58: TRISA7=0;
  2245  0241  1385               	bcf	5,7
  2246                           
  2247                           ;periph.c: 59: TRISB6=1;
  2248  0242  1706               	bsf	6,6
  2249                           
  2250                           ;periph.c: 60: TRISB7 = 1;
  2251  0243  1786               	bsf	6,7
  2252  0244  0008               	return
  2253  0245                     __end_of_op2_init:	
  2254                           
  2255                           	psect	text487
  2256  0226                     __ptext487:	
  2257 ;; =============== function _op2_init ends ============
  2258                           
  2259                           
  2260 ;; *************** function _op1_init *****************
  2261 ;; Defined at:
  2262 ;;		line 26 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\periph.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;		None
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;		None
  2267 ;; Return value:  Size  Location     Type
  2268 ;;		None               void
  2269 ;; Registers used:
  2270 ;;		wreg
  2271 ;; Tracked objects:
  2272 ;;		On entry : 17F/20
  2273 ;;		On exit  : 17F/20
  2274 ;;		Unchanged: FFE80/0
  2275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2276 ;;      Params:         0       0       0       0       0
  2277 ;;      Locals:         0       0       0       0       0
  2278 ;;      Temps:          0       0       0       0       0
  2279 ;;      Totals:         0       0       0       0       0
  2280 ;;Total ram usage:        0 bytes
  2281 ;; Hardware stack levels used:    1
  2282 ;; Hardware stack levels required when called:    2
  2283 ;; This function calls:
  2284 ;;		Nothing
  2285 ;; This function is called by:
  2286 ;;		_main
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289  0226                     _op1_init:	
  2290                           
  2291                           ;periph.c: 33: OP1CON1=0x02;
  2292                           
  2293                           ; Regs used in _op1_init: [wreg]
  2294  0226  3002               	movlw	2
  2295  0227  1283               	bcf	3,5	;RP0=0, select bank0
  2296  0228  009C               	movwf	28	;volatile
  2297                           
  2298                           ;periph.c: 34: OP1CON2=0xA0;
  2299  0229  30A0               	movlw	160
  2300  022A  009D               	movwf	29	;volatile
  2301                           
  2302                           ;periph.c: 35: OP1CON0=0x80;
  2303  022B  3080               	movlw	128
  2304  022C  009B               	movwf	27	;volatile
  2305                           
  2306                           ;periph.c: 38: TRISB3=1;
  2307  022D  1683               	bsf	3,5	;RP0=1, select bank1
  2308  022E  1586               	bsf	6,3
  2309                           
  2310                           ;periph.c: 39: TRISB4=1;
  2311  022F  1606               	bsf	6,4
  2312                           
  2313                           ;periph.c: 40: TRISB5=0;
  2314  0230  1286               	bcf	6,5
  2315  0231  0008               	return
  2316  0232                     __end_of_op1_init:	
  2317                           
  2318                           	psect	text488
  2319  0278                     __ptext488:	
  2320 ;; =============== function _op1_init ends ============
  2321                           
  2322                           
  2323 ;; *************** function _dac_init *****************
  2324 ;; Defined at:
  2325 ;;		line 14 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\periph.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;		None
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;		None
  2330 ;; Return value:  Size  Location     Type
  2331 ;;		None               void
  2332 ;; Registers used:
  2333 ;;		wreg
  2334 ;; Tracked objects:
  2335 ;;		On entry : 17F/20
  2336 ;;		On exit  : 17F/20
  2337 ;;		Unchanged: FFE80/0
  2338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2339 ;;      Params:         0       0       0       0       0
  2340 ;;      Locals:         0       0       0       0       0
  2341 ;;      Temps:          0       0       0       0       0
  2342 ;;      Totals:         0       0       0       0       0
  2343 ;;Total ram usage:        0 bytes
  2344 ;; Hardware stack levels used:    1
  2345 ;; Hardware stack levels required when called:    2
  2346 ;; This function calls:
  2347 ;;		Nothing
  2348 ;; This function is called by:
  2349 ;;		_main
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352  0278                     _dac_init:	
  2353                           
  2354                           ;periph.c: 15: DACCON|=2;
  2355                           
  2356                           ; Regs used in _dac_init: [wreg]
  2357  0278  1487               	bsf	7,1	;volatile
  2358                           
  2359                           ;periph.c: 17: DACR0=0x19;
  2360  0279  3019               	movlw	25
  2361  027A  0088               	movwf	8	;volatile
  2362                           
  2363                           ;periph.c: 18: DACCON|=(1)<<2;
  2364  027B  1507               	bsf	7,2	;volatile
  2365  027C  0008               	return
  2366  027D                     __end_of_dac_init:	
  2367                           
  2368                           	psect	text490
  2369  0283                     __ptext490:	
  2370 ;; =============== function _adc_test_init ends ============
  2371                           
  2372                           
  2373 ;; *************** function _timer1_interrupt_config *****************
  2374 ;; Defined at:
  2375 ;;		line 56 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;		None
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;		None
  2380 ;; Return value:  Size  Location     Type
  2381 ;;		None               void
  2382 ;; Registers used:
  2383 ;;		None
  2384 ;; Tracked objects:
  2385 ;;		On entry : 17F/20
  2386 ;;		On exit  : 17F/20
  2387 ;;		Unchanged: FFE80/0
  2388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2389 ;;      Params:         0       0       0       0       0
  2390 ;;      Locals:         0       0       0       0       0
  2391 ;;      Temps:          0       0       0       0       0
  2392 ;;      Totals:         0       0       0       0       0
  2393 ;;Total ram usage:        0 bytes
  2394 ;; Hardware stack levels used:    1
  2395 ;; Hardware stack levels required when called:    2
  2396 ;; This function calls:
  2397 ;;		Nothing
  2398 ;; This function is called by:
  2399 ;;		_main
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402  0283                     _timer1_interrupt_config:	
  2403                           
  2404                           ;common.c: 57: GIE = 1;
  2405                           
  2406                           ; Regs used in _timer1_interrupt_config: []
  2407  0283  178B               	bsf	11,7
  2408                           
  2409                           ;common.c: 58: PEIE = 1;
  2410  0284  170B               	bsf	11,6
  2411  0285  0008               	return
  2412  0286                     __end_of_timer1_interrupt_config:	
  2413                           
  2414                           	psect	text491
  2415  0232                     __ptext491:	
  2416 ;; =============== function _timer1_interrupt_config ends ============
  2417                           
  2418                           
  2419 ;; *************** function _timer1_config *****************
  2420 ;; Defined at:
  2421 ;;		line 44 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;		None
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;		None
  2426 ;; Return value:  Size  Location     Type
  2427 ;;		None               void
  2428 ;; Registers used:
  2429 ;;		wreg
  2430 ;; Tracked objects:
  2431 ;;		On entry : 17F/40
  2432 ;;		On exit  : 17F/20
  2433 ;;		Unchanged: FFE80/0
  2434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2435 ;;      Params:         0       0       0       0       0
  2436 ;;      Locals:         0       0       0       0       0
  2437 ;;      Temps:          0       0       0       0       0
  2438 ;;      Totals:         0       0       0       0       0
  2439 ;;Total ram usage:        0 bytes
  2440 ;; Hardware stack levels used:    1
  2441 ;; Hardware stack levels required when called:    2
  2442 ;; This function calls:
  2443 ;;		Nothing
  2444 ;; This function is called by:
  2445 ;;		_main
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448  0232                     _timer1_config:	
  2449                           
  2450                           ;common.c: 46: TMR1H=0xCF;
  2451                           
  2452                           ; Regs used in _timer1_config: [wreg]
  2453  0232  30CF               	movlw	207
  2454  0233  1303               	bcf	3,6	;RP1=0, select bank0
  2455  0234  008F               	movwf	15	;volatile
  2456                           
  2457                           ;common.c: 47: TMR1L=0x2C;
  2458  0235  302C               	movlw	44
  2459  0236  008E               	movwf	14	;volatile
  2460                           
  2461                           ;common.c: 48: T1CON=0xE1;
  2462  0237  30E1               	movlw	225
  2463  0238  0090               	movwf	16	;volatile
  2464                           
  2465                           ;common.c: 49: TMR1IE=1;
  2466  0239  1683               	bsf	3,5	;RP0=1, select bank1
  2467  023A  140C               	bsf	12,0
  2468  023B  0008               	return
  2469  023C                     __end_of_timer1_config:	
  2470                           
  2471                           	psect	text492
  2472  024D                     __ptext492:	
  2473 ;; =============== function _timer1_config ends ============
  2474                           
  2475                           
  2476 ;; *************** function _clock_config *****************
  2477 ;; Defined at:
  2478 ;;		line 36 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;		None
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;		None
  2483 ;; Return value:  Size  Location     Type
  2484 ;;		None               void
  2485 ;; Registers used:
  2486 ;;		wreg, status,2
  2487 ;; Tracked objects:
  2488 ;;		On entry : 17F/20
  2489 ;;		On exit  : 17F/40
  2490 ;;		Unchanged: FFE80/0
  2491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2492 ;;      Params:         0       0       0       0       0
  2493 ;;      Locals:         0       0       0       0       0
  2494 ;;      Temps:          0       0       0       0       0
  2495 ;;      Totals:         0       0       0       0       0
  2496 ;;Total ram usage:        0 bytes
  2497 ;; Hardware stack levels used:    1
  2498 ;; Hardware stack levels required when called:    2
  2499 ;; This function calls:
  2500 ;;		Nothing
  2501 ;; This function is called by:
  2502 ;;		_main
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505  024D                     _clock_config:	
  2506                           
  2507                           ;common.c: 38: CLKPR = 0x80;
  2508                           
  2509                           ; Regs used in _clock_config: [wreg+status,2]
  2510  024D  3080               	movlw	128
  2511  024E  1283               	bcf	3,5	;RP0=0, select bank2
  2512  024F  1703               	bsf	3,6	;RP1=1, select bank2
  2513  0250  0088               	movwf	8	;volatile
  2514                           
  2515                           ;common.c: 39: CLKPR = 0x00;
  2516  0251  0188               	clrf	8	;volatile
  2517  0252                     l1413:	
  2518                           ;common.c: 40: while(CLKPCE);
  2519                           
  2520  0252  1F88               	btfss	8,7
  2521  0253  0008               	return
  2522  0254  2A52               	goto	l1413
  2523  0255                     __end_of_clock_config:	
  2524                           
  2525                           	psect	text493
  2526  01AD                     __ptext493:	
  2527 ;; =============== function _clock_config ends ============
  2528                           
  2529                           
  2530 ;; *************** function _ISR *****************
  2531 ;; Defined at:
  2532 ;;		line 253 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;		None
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;		None
  2537 ;; Return value:  Size  Location     Type
  2538 ;;		None               void
  2539 ;; Registers used:
  2540 ;;		wreg, status,2, status,0, pclath, cstack
  2541 ;; Tracked objects:
  2542 ;;		On entry : 0/0
  2543 ;;		On exit  : 60/0
  2544 ;;		Unchanged: FFF9F/0
  2545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2546 ;;      Params:         0       0       0       0       0
  2547 ;;      Locals:         0       0       0       0       0
  2548 ;;      Temps:          2       0       0       0       0
  2549 ;;      Totals:         2       0       0       0       0
  2550 ;;Total ram usage:        2 bytes
  2551 ;; Hardware stack levels used:    1
  2552 ;; Hardware stack levels required when called:    1
  2553 ;; This function calls:
  2554 ;;		i1_setAD_ConvertFlag
  2555 ;;		_adc_get
  2556 ;; This function is called by:
  2557 ;;		Interrupt level 1
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560  01AD                     _ISR:	
  2561                           
  2562                           ;common.c: 254: static unsigned char ucTimer1sCnt = 0;
  2563                           ;common.c: 256: if(TMR1IF == 1)
  2564  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  2565  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  2566  01AF  1C0C               	btfss	12,0
  2567  01B0  29CD               	goto	i1l3059
  2568  01B1  3064               	movlw	100
  2569                           
  2570                           ;common.c: 257: {
  2571                           ;common.c: 258: TMR1IF = 0 ;
  2572  01B2  100C               	bcf	12,0
  2573                           
  2574                           ;common.c: 259: timer.timer10msStopWatch++;
  2575  01B3  0AFA               	incf	_timer,f
  2576                           
  2577                           ;common.c: 260: ucTimer1sCnt++;
  2578  01B4  0AF8               	incf	ISR@ucTimer1sCnt,f
  2579                           
  2580                           ;common.c: 262: if(ucTimer1sCnt >= 100)
  2581  01B5  0278               	subwf	ISR@ucTimer1sCnt,w
  2582  01B6  1C03               	skipc
  2583  01B7  29CD               	goto	i1l3059
  2584                           
  2585                           ;common.c: 263: {
  2586                           ;common.c: 264: ucTimer1sCnt = 0;
  2587  01B8  01F8               	clrf	ISR@ucTimer1sCnt
  2588                           
  2589                           ;common.c: 265: if(uiBigTimer > 0)
  2590  01B9  0877               	movf	_uiBigTimer+1,w
  2591  01BA  0476               	iorwf	_uiBigTimer,w
  2592  01BB  1903               	skipnz
  2593  01BC  29C3               	goto	i1l1503
  2594                           
  2595                           ;common.c: 266: uiBigTimer--;
  2596  01BD  3001               	movlw	1
  2597  01BE  02F6               	subwf	_uiBigTimer,f
  2598  01BF  3000               	movlw	0
  2599  01C0  1C03               	skipc
  2600  01C1  03F7               	decf	_uiBigTimer+1,f
  2601  01C2  02F7               	subwf	_uiBigTimer+1,f
  2602  01C3                     i1l1503:	
  2603                           
  2604                           ;common.c: 268: if(uiSmallTimer)
  2605  01C3  0837               	movf	_uiSmallTimer+1,w
  2606  01C4  0436               	iorwf	_uiSmallTimer,w
  2607  01C5  1903               	skipnz
  2608  01C6  29CD               	goto	i1l3059
  2609                           
  2610                           ;common.c: 269: uiSmallTimer--;
  2611  01C7  3001               	movlw	1
  2612  01C8  02B6               	subwf	_uiSmallTimer,f
  2613  01C9  3000               	movlw	0
  2614  01CA  1C03               	skipc
  2615  01CB  03B7               	decf	_uiSmallTimer+1,f
  2616  01CC  02B7               	subwf	_uiSmallTimer+1,f
  2617  01CD                     i1l3059:	
  2618                           
  2619                           ;common.c: 270: }
  2620                           ;common.c: 271: }
  2621                           ;common.c: 273: if(ADIF)
  2622  01CD  1D0D               	btfss	13,2
  2623  01CE  29EA               	goto	i1l1508
  2624  01CF  3001               	movlw	1
  2625                           
  2626                           ;common.c: 274: {
  2627                           ;common.c: 275: ADIF=0;
  2628  01D0  110D               	bcf	13,2
  2629                           
  2630                           ;common.c: 276: setAD_ConvertFlag(1);
  2631  01D1  21FC  118A         	fcall	i1_setAD_ConvertFlag
  2632                           
  2633                           ;common.c: 277: adc_original_value = adc_get();
  2634  01D3  21F1  118A         	fcall	_adc_get
  2635  01D5  0871               	movf	?_adc_get+1,w
  2636  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  2637  01D7  00B1               	movwf	_adc_original_value+1
  2638  01D8  0870               	movf	?_adc_get,w
  2639  01D9  00B0               	movwf	_adc_original_value
  2640                           
  2641                           ;common.c: 278: if(sampleChannelSelect == 1)
  2642  01DA  0B47               	decfsz	_sampleChannelSelect,w
  2643  01DB  29E4               	goto	i1l3071
  2644                           
  2645                           ;common.c: 279: adc_original_CH1_value = adc_get();
  2646  01DC  21F1  118A         	fcall	_adc_get
  2647  01DE  0871               	movf	?_adc_get+1,w
  2648  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  2649  01E0  00AF               	movwf	_adc_original_CH1_value+1
  2650  01E1  0870               	movf	?_adc_get,w
  2651  01E2  00AE               	movwf	_adc_original_CH1_value
  2652  01E3  29EA               	goto	i1l1508
  2653  01E4                     i1l3071:	
  2654                           
  2655                           ;common.c: 280: else
  2656                           ;common.c: 281: adc_original_CH13_value = adc_get();
  2657  01E4  21F1               	fcall	_adc_get
  2658  01E5  0871               	movf	?_adc_get+1,w
  2659  01E6  1283               	bcf	3,5	;RP0=0, select bank0
  2660  01E7  00AD               	movwf	_adc_original_CH13_value+1
  2661  01E8  0870               	movf	?_adc_get,w
  2662  01E9  00AC               	movwf	_adc_original_CH13_value
  2663  01EA                     i1l1508:	
  2664  01EA  0875               	movf	??_ISR+1,w
  2665  01EB  008A               	movwf	10
  2666  01EC  0E74               	swapf	??_ISR^(0+-128),w
  2667  01ED  0083               	movwf	3
  2668  01EE  0EFE               	swapf	126,f
  2669  01EF  0E7E               	swapf	126,w
  2670  01F0  0009               	retfie
  2671  01F1                     __end_of_ISR:	
  2672  01F1                     __ptext495:	
  2673 ;; =============== function i1_setAD_ConvertFlag ends ============
  2674                           
  2675                           
  2676 ;; *************** function _adc_get *****************
  2677 ;; Defined at:
  2678 ;;		line 105 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\periph.c"
  2679 ;; Parameters:    Size  Location     Type
  2680 ;;		None
  2681 ;; Auto vars:     Size  Location     Type
  2682 ;;  val             2    2[COMMON] unsigned int 
  2683 ;; Return value:  Size  Location     Type
  2684 ;;                  2    0[COMMON] unsigned int 
  2685 ;; Registers used:
  2686 ;;		wreg
  2687 ;; Tracked objects:
  2688 ;;		On entry : 60/0
  2689 ;;		On exit  : 60/20
  2690 ;;		Unchanged: FFF9F/0
  2691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2692 ;;      Params:         2       0       0       0       0
  2693 ;;      Locals:         2       0       0       0       0
  2694 ;;      Temps:          0       0       0       0       0
  2695 ;;      Totals:         4       0       0       0       0
  2696 ;;Total ram usage:        4 bytes
  2697 ;; Hardware stack levels used:    1
  2698 ;; This function calls:
  2699 ;;		Nothing
  2700 ;; This function is called by:
  2701 ;;		_ISR
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704  01F1                     _adc_get:	
  2705                           
  2706                           ;periph.c: 106: unsigned int val;
  2707                           ;periph.c: 107: val = (ADRESH<<8) | ADRESL;
  2708                           
  2709                           ; Regs used in _adc_get: [wreg]
  2710  01F1  081E               	movf	30,w	;volatile
  2711  01F2  00F3               	movwf	adc_get@val+1
  2712  01F3  01F2               	clrf	adc_get@val
  2713  01F4  1683               	bsf	3,5	;RP0=1, select bank1
  2714  01F5  081E               	movf	30,w	;volatile
  2715  01F6  04F2               	iorwf	adc_get@val,f
  2716                           
  2717                           ;periph.c: 108: return val;
  2718  01F7  0873               	movf	adc_get@val+1,w
  2719  01F8  00F1               	movwf	?_adc_get+1
  2720  01F9  0872               	movf	adc_get@val,w
  2721  01FA  00F0               	movwf	?_adc_get
  2722  01FB  0008               	return
  2723  01FC                     __end_of_adc_get:	
  2724  01FC                     __ptext494:	
  2725 ;; =============== function _ISR ends ============
  2726                           
  2727                           
  2728 ;; *************** function i1_setAD_ConvertFlag *****************
  2729 ;; Defined at:
  2730 ;;		line 70 in file "C:\dev1\AK730_Second_PRJ\AK7030-OTP\common.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;  setAD_Conver    1    wreg     unsigned char 
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  2735 ;; Return value:  Size  Location     Type
  2736 ;;		None               void
  2737 ;; Registers used:
  2738 ;;		wreg
  2739 ;; Tracked objects:
  2740 ;;		On entry : 60/0
  2741 ;;		On exit  : 60/0
  2742 ;;		Unchanged: FFF9F/0
  2743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2744 ;;      Params:         0       0       0       0       0
  2745 ;;      Locals:         1       0       0       0       0
  2746 ;;      Temps:          0       0       0       0       0
  2747 ;;      Totals:         1       0       0       0       0
  2748 ;;Total ram usage:        1 bytes
  2749 ;; Hardware stack levels used:    1
  2750 ;; This function calls:
  2751 ;;		Nothing
  2752 ;; This function is called by:
  2753 ;;		_ISR
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756  01FC                     i1_setAD_ConvertFlag:	
  2757                           
  2758                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  2759                           ;i1setAD_ConvertFlag@flag stored from wreg
  2760  01FC  00F0               	movwf	i1setAD_ConvertFlag@flag
  2761                           
  2762                           ;common.c: 71: adc_convert_flag = flag;
  2763  01FD  00F9               	movwf	_adc_convert_flag
  2764  01FE  0008               	return
  2765  01FF                     __end_ofi1_setAD_ConvertFlag:	
  2766                           
  2767                           	psect	intentry
  2768  0004                     __pintentry:	
  2769                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  2770                           
  2771  0004                     interrupt_function:	
  2772  007E                     saved_w	set	btemp
  2773  0004  00FE               	movwf	btemp
  2774  0005  0E03               	swapf	3,w
  2775  0006  00F4               	movwf	??_ISR
  2776  0007  080A               	movf	10,w
  2777  0008  00F5               	movwf	??_ISR+1
  2778  0009  118A  29AD         	ljmp	_ISR
  2779                           
  2780                           	psect	text496
  2781  0000                     __ptext496:	
  2782 ;; =============== function _adc_get ends ============
  2783                           
  2784  007E                     btemp	set	126	;btemp
  2785  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Tue Apr 02 18:49:05 2019

                     ??_clock_config 0042                                    pc 0002  
                                 _GO 00F9                                   fsr 0004  
                ?_getAdOriginalValue 0042             ?_timer1_interrupt_config 0070  
                                l701 0059                                  l706 006B  
                                l732 00D6                                  l733 00DB  
                                l682 010C                                  l739 00E6  
                                l693 004D                                  l695 004E  
                                l687 0042                                  _PA0 0028  
                                _PA1 0029                                  _GIE 005F  
                                _PA2 002A                                  _PA3 002B  
                                _PB2 0032                                  _PA6 002E  
                                _ISR 01AD                                  u555 014B  
                                u565 015E                                  fsr0 0004  
                                indf 0000             main@ucBigTimerActionFlag 003B  
                      _startBigTimer 0264                                 S3335 0200  
                        main@ampStep 0039                                 ?_ISR 0070  
                 __size_of_AD_Sample 005D               ?_getAdOriginalCh1Value 0042  
                               l3001 0000                                 l1413 0252  
                               l2141 0000                                 l3005 0000  
                               l3021 0000                                 l1422 0000  
                               l2135 0000                                 l3007 0000  
                               l1431 0000                                 l1416 0000  
                               l3009 0000                                 l1425 0000  
                               l3033 0000                                 l3105 0176  
                               l3121 0000                                 l3201 0000  
                               l2138 0000                                 l1434 0000  
                               l1419 0000                                 l2155 0000  
                               l3115 0179                                 l3131 011C  
                               l3211 0000                                 l3203 0000  
                               l1428 0000                                 l2149 0000  
                               l1437 0000                                 l3037 0000  
                               l3117 0000                                 l3109 0178  
                               l3125 0000                                 l3213 0000  
                               l3141 0000                                 l3039 0000  
                               l3119 0000                                 l3127 0000  
                               l3231 0000                                 l3223 0000  
                               l3207 007A                                 l3151 00F1  
                               l3143 0000                                 l3135 0000  
                               l1472 0000                                 l1448 0156  
                               l3129 0000                                 l3241 00B2  
                               l3225 00A8                                 l3217 0000  
                               l3161 0000                                 l3153 0000  
                               l3145 0000                                 l3137 0000  
                               l1475 0000                                 l3083 0000  
                               l3251 00BD                                 l3219 0093  
                               l3171 0046                                 l3163 0000  
                               l3147 0000                                 l3139 0000  
                               l1469 0000                                 l3093 0169  
                               l3261 00CE                                 l3245 00B5  
                               l3229 0000                                 l3173 0047  
                               l3165 0000                                 l3157 0000  
                               l3149 0000                                 l1478 0000  
                               l3095 0000                                 l3087 0144  
                               l3079 0000                                 l3247 0000  
                               l3239 00AC                                 l3183 0052  
                               l3167 0040                                 l3159 0037  
                               l1496 0000                                 l3193 005B  
                               l3185 0053                                 l3099 0000  
                               l3267 00DF                                 l3277 00EA  
                               l3269 00E0                                 l3279 00EB  
                               l3199 0072                                 l2931 0000  
                               l2933 0000                                 l2941 0000  
                               l2935 0000                                 l2943 0000  
                               l2951 0000                                 l2937 0000  
                               l2945 0000                                 l2953 0000  
                               l2961 0000                                 l2939 0000  
                               l2947 0000                                 l2955 0000  
                               l2963 0000                                 l2971 0000  
                               l2949 0000                                 l2957 0000  
                               l2973 0000                                 l2965 0000  
                               l2959 0000                                 l2975 0000  
                               l2967 0000                                 l2991 0000  
                               l2969 0000                                 l2977 01A0  
                               l2993 0000                                 l2979 0000  
                               l2995 0000                                 l2997 0000  
                               _ADIE 046A                                 _ADIF 006A  
                               _ADON 00F8                                 _PEIE 005E  
               ??_getAdOriginalValue 0044               ??_isFinishedSmallTimer 0042  
                               _main 000D                    ??_startSmallTimer 0042  
                               btemp 007E                                 start 000B  
            ?_getAdOriginalCh13Value 0042                                ??_ISR 0074  
         __end_of_isPermitSampleTime 0278                  _sampleChannelSelect 0047  
                              ?_main 0070                                _DACR0 0088  
                              _CLKPR 0108                                _T1CON 0010  
                    __end_of_adc_get 01FC                                _PAOD6 0C3E  
                              _TMR1H 000F                                _TMR1L 000E  
                     ?_startBigTimer 0070                setAD_ConvertFlag@flag 0042  
                      main@tDA_timer 003A                                _timer 007A  
                              pclath 000A               main@ucConFirmationTime 003D  
                              status 0003                                wtemp0 007E  
     __end_of_getAdOriginalCh13Value 026E                __end_of_clearBigTimer 0283  
               __end_of_clrSampeTime 0288           __end_of_isFinishedBigTimer 025F  
                       __end_of_main 010D               __size_of_adc_test_init 0015  
                  __end_of_AD_Sample 0186             __size_of_clearSmallTimer 0003  
          main@ucInstalledBatteryCnt 0041                               ??_main 0047  
                             _ADCON0 001F                               _ADCON1 009F  
               __end_of_clock_config 0255                               _DACCON 0087  
                             _ADRESH 001E                               _ADRESL 009E  
                             _CLKPCE 0847                               i1l1503 01C3  
                             i1l3043 0000                               i1l1428 0000  
                             i1l1508 01EA                               i1l3053 0000  
                             i1l2158 0000                               i1l3071 01E4  
                             i1l3063 0000                               i1l3047 0000  
                             i1l3073 0000                               i1l3065 0000  
                             i1l3049 0000                               i1l3067 0000  
                             i1l3059 01CD                               i1l3077 0000  
                             i1l3069 0000                     __end_of_dac_init 027D  
                             _TMR1IE 0460                               _TMR1IF 0060  
                  _getAD_ConvertFlag 0122                    _setAD_ConvertFlag 0124  
                             _TRISA0 0428                               _TRISA1 0429  
                             _TRISA2 042A                               _TRISB1 0431  
                             _TRISA3 042B                               _TRISB2 0432  
                             _TRISB3 0433                               _TRISB4 0434  
                             _TRISA6 042E                               _TRISB5 0435  
                             _TRISA7 042F                               _TRISB6 0436  
                             _TRISB7 0437                   ?_getAD_ConvertFlag 0070  
                 ?_setAD_ConvertFlag 0070                     __end_of_op1_init 0232  
                   __end_of_op2_init 0245               main@ucConfirmTimerZptS 003F  
                          ??_adc_get 0072                  ??_getAD_ConvertFlag 0042  
                ??_setAD_ConvertFlag 0042                               clrloop 0246  
                    ??_startBigTimer 0042                               saved_w 007E  
        ?_process_AD_Converter_Value 0070                        _adc_test_init 018B  
          __end_of_getAD_ConvertFlag 0124            __end_of_setAD_ConvertFlag 0129  
                 __size_of_adc_start 0003                       __pcstackCOMMON 0070  
                       __pidataBANK0 0000                      _startSmallTimer 025F  
            _adc_original_CH13_value 002C              ??_getAdOriginalCh1Value 0044  
                  ??_clearSmallTimer 0042                __end_of_timer1_config 023C  
                     ?_adc_test_init 0042     __size_of_timer1_interrupt_config 0003  
              __size_of_clrSampeTime 0002                           __pbssBANK0 0020  
       __size_ofi1_setAD_ConvertFlag 0003                           adc_get@val 0072  
                         __pmaintext 000D                           __pintentry 0004  
                          ?_dac_init 0070                __size_of_clock_config 0008  
                            _OP1CON0 001B                              _OP1CON1 001C  
                            _OP1CON2 001D                              _OP2CON0 009B  
                            _OP2CON1 009C                              _OP2CON2 009D  
                       _clrSampeTime 0286                    __end_of_adc_start 01A3  
                          ?_op1_init 0070                            ?_op2_init 0070  
                 _isPermitSampleTime 0273               _buffer_Sample_AD_Value 0020  
                 _adc_original_value 0030           __size_of_getAD_ConvertFlag 0002  
         __size_of_setAD_ConvertFlag 0005          __size_of_getAdOriginalValue 0005  
                ?_isPermitSampleTime 0070        __size_of_isFinishedSmallTimer 0005  
                         _uiBigTimer 0076                         _clock_config 024D  
                            _adc_get 01F1              __end_of_startSmallTimer 0264  
                _multiFilterMaxValue 0032                  _multiFilterMinValue 0034  
               ??_isPermitSampleTime 0042                   _isFinishedBigTimer 025A  
                         ??_dac_init 0042                            _AD_Sample 0129  
                       __size_of_ISR 0044                      ??_adc_test_init 0043  
                         ??_op1_init 0042                           ??_op2_init 0042  
                ?_isFinishedBigTimer 0070                 end_of_initialization 0223  
               ??_isFinishedBigTimer 0042                           ?_AD_Sample 0070  
             __size_of_clearBigTimer 0003                     _adc_convert_flag 0079  
            _timer1_interrupt_config 0283                       AD_Sample@index 0046  
                         main@ucInit 0040                      _clearSmallTimer 027D  
                   ?_startSmallTimer 0070                  i1_setAD_ConvertFlag 01FC  
              __end_of_startBigTimer 0269                  start_initialization 0216  
                        __end_of_ISR 01F1       __size_of_getAdOriginalCh1Value 0005  
           ??_getAdOriginalCh13Value 0044        __end_of_getAdOriginalCh1Value 0273  
               ?i1_setAD_ConvertFlag 0070                        _clearBigTimer 0280  
              main@ucCheckBatteryCnt 003C                          __pdataBANK0 0047  
                        ??_AD_Sample 0044            ??_timer1_interrupt_config 0042  
                        __pbssCOMMON 0076                    __size_of_dac_init 0005  
                      __pcstackBANK0 0042                            _adc_start 01A0  
                  __size_of_op1_init 000C                    __size_of_op2_init 0009  
              ??i1_setAD_ConvertFlag 0070                       ?_clearBigTimer 0070  
            __end_of_clearSmallTimer 0280               __size_of_timer1_config 000A  
                          __ptext470 010D                            __ptext471 0129  
                          __ptext480 026E                            __ptext472 0186  
                          __ptext481 027D                            __ptext473 0124  
                          __ptext490 0283                            __ptext482 0280  
                          __ptext474 0122                            __ptext491 0232  
                          __ptext483 0286                            __ptext475 0255  
                          __ptext492 024D                            __ptext484 0273  
                          __ptext476 025A                            __ptext493 01AD  
                          __ptext485 01A0                            __ptext477 025F  
                          __ptext494 01FC                            __ptext486 023C  
                          __ptext478 0264                            __ptext495 01F1  
                          __ptext487 0226                            __ptext479 0269  
                          __ptext496 0000                            __ptext488 0278  
                          __ptext489 018B                             ?_adc_get 0070  
             _adc_original_CH1_value 002E         __end_of_isFinishedSmallTimer 025A  
                          __pswtext1 0200                      ISR@ucTimer1sCnt 0078  
         __end_of_getAdOriginalValue 018B                           ?_adc_start 0070  
    __size_of_getAdOriginalCh13Value 0005                    interrupt_function 0004  
    __end_of_timer1_interrupt_config 0286                 adc_test_init@channel 0044  
        __size_of_isPermitSampleTime 0005                         _uiSmallTimer 0036  
              __end_of_adc_test_init 01A0                        _timer1_config 0232  
       ??_process_AD_Converter_Value 0047                      ??_clearBigTimer 0042  
                   ?_clearSmallTimer 0070                 main@ucConfirmTimer1S 003E  
        __size_of_isFinishedBigTimer 0005               _getAdOriginalCh13Value 0269  
                   __size_of_adc_get 000B  __size_of_process_AD_Converter_Value 0015  
                           _dac_init 0278                       ?_timer1_config 0070  
                           _op1_init 0226                             _op2_init 023C  
                        ??_adc_start 0042                        __size_of_main 0100  
               _isFinishedSmallTimer 0255                             clear_ram 0245  
                      ?_clrSampeTime 0070                          _sampleTimes 0038  
           __size_of_startSmallTimer 0005                             intlevel1 0000  
              _getAdOriginalCh1Value 026E                ?_isFinishedSmallTimer 0070  
             __size_of_startBigTimer 0005                        ?_clock_config 0070  
            i1setAD_ConvertFlag@flag 0070                       ??_clrSampeTime 0042  
                    ??_timer1_config 0042          __end_ofi1_setAD_ConvertFlag 01FF  
 __end_of_process_AD_Converter_Value 0122           _process_AD_Converter_Value 010D  
                   adc_test_init@ref 0042                   _getAdOriginalValue 0186  
