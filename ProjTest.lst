

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Fri Dec 20 10:42:43 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,delta=2
    16                           	psect	text1427,local,class=CODE,delta=2
    17                           	psect	text1428,local,class=CODE,delta=2
    18                           	psect	text1429,local,class=CODE,delta=2
    19                           	psect	text1430,local,class=CODE,delta=2
    20                           	psect	text1431,local,class=CODE,delta=2
    21                           	psect	text1436,local,class=CODE,delta=2
    22                           	psect	text1437,local,class=CODE,delta=2
    23                           	psect	text1438,local,class=CODE,delta=2
    24                           	psect	text1439,local,class=CODE,delta=2
    25                           	psect	text1440,local,class=CODE,delta=2
    26                           	psect	text1441,local,class=CODE,delta=2
    27                           	psect	text1442,local,class=CODE,delta=2
    28                           	psect	text1443,local,class=CODE,delta=2
    29                           	psect	text1444,local,class=CODE,delta=2
    30                           	psect	text1445,local,class=CODE,delta=2
    31                           	psect	text1447,local,class=CODE,delta=2
    32                           	psect	text1449,local,class=CODE,delta=2
    33                           	psect	text1450,local,class=CODE,delta=2
    34                           	psect	text1451,local,class=CODE,delta=2
    35                           	psect	text1452,local,class=CODE,delta=2
    36                           	psect	text1453,local,class=CODE,delta=2
    37                           	psect	text1458,local,class=CODE,delta=2
    38                           	psect	text1459,local,class=CODE,delta=2
    39                           	psect	text1460,local,class=CODE,delta=2
    40                           	psect	text1468,local,class=CODE,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	text1475,local,class=CODE,delta=2
    43                           	psect	pa_nodes,global,class=CODE,delta=2
    44                           	dabs	1,0x1E0,16
    45                           	dabs	1,0x7E,2
    46  000A                     	;#
    47                           
    48                           	psect	config
    49  2000  0FFF               	dw	4095	;#
    50  2001  3FDE               	dw	16350	;#
    51  2002  3F78               	dw	16248	;#
    52                           
    53                           	psect	idataBANK0
    54  0000                     __pidataBANK0:	
    55  01E0                     _key	set	480	;_key
    56  001F                     _ADCON0	set	31
    57  001E                     _ADRESH	set	30
    58  0017                     _CCP1CON	set	23
    59  0015                     _CCPR1L	set	21
    60  001B                     _OP1CON0	set	27
    61  001C                     _OP1CON1	set	28
    62  001D                     _OP1CON2	set	29
    63  0010                     _T1CON	set	16
    64  0012                     _T2CON	set	18
    65  000F                     _TMR1H	set	15
    66  000E                     _TMR1L	set	14
    67  006A                     _ADIF	set	106
    68  00F8                     _ADON	set	248
    69  005F                     _GIE	set	95
    70  00F9                     _GO	set	249
    71  0030                     _PB0	set	48
    72  0031                     _PB1	set	49
    73  0032                     _PB2	set	50
    74  0033                     _PB3	set	51
    75  005E                     _PEIE	set	94
    76  0060                     _TMR1IF	set	96
    77  009F                     _ADCON1	set	159
    78  009E                     _ADRESL	set	158
    79  0092                     _PR2	set	146
    80  046A                     _ADIE	set	1130
    81  0460                     _TMR1IE	set	1120
    82  0430                     _TRISB0	set	1072
    83  0431                     _TRISB1	set	1073
    84  0432                     _TRISB2	set	1074
    85  0433                     _TRISB3	set	1075
    86  0434                     _TRISB4	set	1076
    87  0435                     _TRISB5	set	1077
    88  0108                     _CLKPR	set	264
    89  0847                     _CLKPCE	set	2119
    90  0C42                     _PBOD2	set	3138
    91  0C78                     _SRAM_MAP	set	3192
    92                           
    93                           	psect	cinit
    94  057F                     start_initialization:	
    95  057F  3043               	movlw	low __pbssBANK0
    96                           
    97                           ; Clear objects allocated to COMMON
    98  0580  01FD               	clrf	__pbssCOMMON& (0+127)
    99                           
   100                           ; Clear objects allocated to BANK0
   101  0581  1383               	bcf	3,7	;select IRP bank0
   102  0582  0084               	movwf	4
   103  0583  3065               	movlw	low (__pbssBANK0+34)
   104  0584  118A  2615  118A   	fcall	clear_ram
   105                           
   106                           ; Clear objects allocated to BANK1
   107  0587  30A0               	movlw	low __pbssBANK1
   108  0588  0084               	movwf	4
   109  0589  30BD               	movlw	low (__pbssBANK1+29)
   110  058A  118A  2615         	fcall	clear_ram
   111                           
   112                           ;initializer for _sampleChannelSelect
   113  058C  3002               	movlw	2
   114  058D  00E5               	movwf	__pdataBANK0& (0+127)
   115                           
   116                           ;initializer for vPutSampleDataIntoTable@uiInitWidth
   117  058E  304B               	movlw	75
   118  058F  00E6               	movwf	(__pdataBANK0+1)& (0+127)
   119  0590                     end_of_initialization:	
   120                           ;End of C runtime variable initialization code
   121                           
   122  0590  0183               	clrf	3
   123  0591  118A  2A41         	ljmp	_main	;jump to C main() function
   124                           
   125                           	psect	bssCOMMON
   126  007D                     __pbssCOMMON:	
   127  007D                     vPutSampleDataIntoTable@ucCh12Length:	
   128  007D                     	ds	1
   129                           
   130                           	psect	bssBANK0
   131  0043                     __pbssBANK0:	
   132  0043                     _ad_offset:	
   133  0043                     	ds	2
   134  0045                     _uiBigTimer:	
   135  0045                     	ds	2
   136  0047                     _uiOneHourTimer:	
   137  0047                     	ds	2
   138  0049                     _uiSmallTimer:	
   139  0049                     	ds	2
   140  004B                     _uiTwentyMinTimer:	
   141  004B                     	ds	2
   142  004D                     _uiTwentySecondsTimer:	
   143  004D                     	ds	2
   144  004F                     vPutSampleDataIntoTable@uiCalWidthArray1:	
   145  004F                     	ds	2
   146  0051                     vPutSampleDataIntoTable@uiCalWidthArray2:	
   147  0051                     	ds	2
   148  0053                     vPutSampleDataIntoTable@uiCalWidthArray3:	
   149  0053                     	ds	2
   150  0055                     vPutSampleDataIntoTable@uiCalWidthArray4:	
   151  0055                     	ds	2
   152  0057                     vPutSampleDataIntoTable@uiCalWidthCnt:	
   153  0057                     	ds	2
   154  0059                     ISR@ucTimer1sCnt:	
   155  0059                     	ds	1
   156  005A                     _adc_convert_flag:	
   157  005A                     	ds	1
   158  005B                     _bBigTimerStartFlag:	
   159  005B                     	ds	1
   160  005C                     _bOneHourTimerStartFlag:	
   161  005C                     	ds	1
   162  005D                     _bSmallTimerStartFlag:	
   163  005D                     	ds	1
   164  005E                     _bTwentyMinStartFlag:	
   165  005E                     	ds	1
   166  005F                     _bWaitResetFlag:	
   167  005F                     	ds	1
   168  0060                     _sampleTimes:	
   169  0060                     	ds	1
   170  0061                     _timer:	
   171  0061                     	ds	1
   172  0062                     vPutSampleDataIntoTable@ucCh13Length:	
   173  0062                     	ds	1
   174  0063                     vPutSampleDataIntoTable@ucChannelFourteenthLength:	
   175  0063                     	ds	1
   176  0064                     vPutSampleDataIntoTable@ucInitFlag:	
   177  0064                     	ds	1
   178                           
   179                           	psect	dataBANK0
   180  0065                     __pdataBANK0:	
   181  0065                     _sampleChannelSelect:	
   182  0065                     	ds	1
   183  0066                     vPutSampleDataIntoTable@uiInitWidth:	
   184  0066                     	ds	1
   185                           
   186                           	psect	bssBANK1
   187  00A0                     __pbssBANK1:	
   188  00A0                     main@ucDelay1s:	
   189  00A0                     	ds	2
   190  00A2                     main@uiTimerOneP5s:	
   191  00A2                     	ds	2
   192  00A4                     main@uiTimerTwoP5s:	
   193  00A4                     	ds	2
   194  00A6                     main@cTimerP5s_795:	
   195  00A6                     	ds	1
   196  00A7                     main@cTimerP5s_801:	
   197  00A7                     	ds	1
   198  00A8                     main@ucStep:	
   199  00A8                     	ds	1
   200  00A9                     main@ucTimerP3s:	
   201  00A9                     	ds	1
   202  00AA                     main@ucTimerP5s:	
   203  00AA                     	ds	1
   204  00AB                     _uiSampleCh12:	
   205  00AB                     	ds	6
   206  00B1                     _uiSampleCh13:	
   207  00B1                     	ds	6
   208  00B7                     _uiSampleChannelFourteenth:	
   209  00B7                     	ds	6
   210                           
   211                           	psect	clrtext
   212  0615                     clear_ram:	
   213                           ;	Called with FSR containing the base address, and
   214                           ;	W with the last address+1
   215                           
   216  0615  0064               	clrwdt	;clear the watchdog before getting into this loop
   217  0616                     clrloop:	
   218  0616  0180               	clrf	0	;clear RAM location pointed to by FSR
   219  0617  0A84               	incf	4,f	;increment pointer
   220  0618  0604               	xorwf	4,w	;XOR with final address
   221  0619  1903               	btfsc	3,2	;have we reached the end yet?
   222  061A  3400               	retlw	0	;all done for this memory range, return
   223  061B  0604               	xorwf	4,w	;XOR again to restore value
   224  061C  2E16               	goto	clrloop	;do the next byte
   225                           
   226                           	psect	cstackBANK1
   227  00BD                     __pcstackBANK1:	
   228  00BD                     ??_clearTwelveHoursTimer:	
   229  00BD                     ??_clearThreeHoursTimer:	
   230                           ; 0 bytes @ 0x0
   231                           
   232  00BD                     ??_clearOneHoursTimer:	
   233                           ; 0 bytes @ 0x0
   234                           
   235  00BD                     ??_clearTwentyMinTimer:	
   236                           ; 0 bytes @ 0x0
   237                           
   238  00BD                     ??_clock_config:	
   239                           ; 0 bytes @ 0x0
   240                           
   241  00BD                     ??_timer1_config:	
   242                           ; 0 bytes @ 0x0
   243                           
   244  00BD                     ??_timer1_interrupt_config:	
   245                           ; 0 bytes @ 0x0
   246                           
   247  00BD                     ??_op1_init:	
   248                           ; 0 bytes @ 0x0
   249                           
   250  00BD                     ??_uid_get:	
   251                           ; 0 bytes @ 0x0
   252                           
   253  00BD                     ?_adc_test_init:	
   254                           ; 0 bytes @ 0x0
   255                           
   256  00BD                     ?_startTwentyMinTimer:	
   257                           ; 0 bytes @ 0x0
   258                           
   259  00BD                     ??_adc_start:	
   260                           ; 0 bytes @ 0x0
   261                           
   262  00BD                     ??_isPermitSampleTime:	
   263                           ; 0 bytes @ 0x0
   264                           
   265  00BD                     ??_clrSampeTime:	
   266                           ; 0 bytes @ 0x0
   267                           
   268  00BD                     ??_isFinishedTwentyMinTimer:	
   269                           ; 0 bytes @ 0x0
   270                           
   271  00BD                     ?_startTwelveHourTimer:	
   272                           ; 0 bytes @ 0x0
   273                           
   274  00BD                     ??_isFinishedTwelveHoursTimer:	
   275                           ; 0 bytes @ 0x0
   276                           
   277  00BD                     ?_startThreeHoursTimer:	
   278                           ; 0 bytes @ 0x0
   279                           
   280  00BD                     ??_isFinishedThreeHoursTimer:	
   281                           ; 0 bytes @ 0x0
   282                           
   283  00BD                     ?_startOneHoursTimer:	
   284                           ; 0 bytes @ 0x0
   285                           
   286  00BD                     ??_isFinishedOneHoursTimer:	
   287                           ; 0 bytes @ 0x0
   288                           
   289  00BD                     ??_setWaitResetFlag:	
   290                           ; 0 bytes @ 0x0
   291                           
   292  00BD                     ??_AD_Sample:	
   293                           ; 0 bytes @ 0x0
   294                           
   295  00BD                     ??_initPB3:	
   296                           ; 0 bytes @ 0x0
   297                           
   298  00BD                     ??_setPB3:	
   299                           ; 0 bytes @ 0x0
   300                           
   301  00BD                     ??_initPB4:	
   302                           ; 0 bytes @ 0x0
   303                           
   304  00BD                     ??_setPB4:	
   305                           ; 0 bytes @ 0x0
   306                           
   307  00BD                     ??_initPB5:	
   308                           ; 0 bytes @ 0x0
   309                           
   310  00BD                     ??_setPB5:	
   311                           ; 0 bytes @ 0x0
   312                           
   313  00BD                     ??_initPB2_AsHighResistence:	
   314                           ; 0 bytes @ 0x0
   315                           
   316  00BD                     ?_pwm_start:	
   317                           ; 0 bytes @ 0x0
   318                           
   319  00BD                     ??_selectAdChannel:	
   320                           ; 0 bytes @ 0x0
   321                           
   322  00BD                     ??_reset:	
   323                           ; 0 bytes @ 0x0
   324                           
   325  00BD                     ??_resetAllTimer:	
   326                           ; 0 bytes @ 0x0
   327                           
   328  00BD                     ??_getAD_ConvertFlag:	
   329                           ; 0 bytes @ 0x0
   330                           
   331  00BD                     ??_setAD_ConvertFlag:	
   332                           ; 0 bytes @ 0x0
   333                           
   334  00BD                     ?_FilterCh13:	
   335                           ; 0 bytes @ 0x0
   336                           
   337  00BD                     initPB3@bValue:	
   338                           ; 2 bytes @ 0x0
   339                           
   340  00BD                     setPB3@bValue:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  00BD                     initPB4@bValue:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  00BD                     setPB4@bValue:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  00BD                     initPB5@bValue:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  00BD                     setPB5@bValue:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  00BD                     pwm_start@ucPulseFrequency:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  00BD                     setWaitResetFlag@bValue:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  00BD                     setAD_ConvertFlag@flag:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  00BD                     adc_test_init@ref:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  00BD                     startTwelveHourTimer@uiSetTime:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  00BD                     startThreeHoursTimer@uiSetTime:	
   371                           ; 2 bytes @ 0x0
   372                           
   373  00BD                     startOneHoursTimer@uiSetTime:	
   374                           ; 2 bytes @ 0x0
   375                           
   376  00BD                     startTwentyMinTimer@uiSetValue:	
   377                           ; 2 bytes @ 0x0
   378                           
   379                           
   380                           ; 2 bytes @ 0x0
   381  00BD                     	ds	1
   382  00BE                     ??_adc_test_init:	
   383  00BE                     ??_pwm_start:	
   384                           ; 0 bytes @ 0x1
   385                           
   386  00BE                     ??_initPin:	
   387                           ; 0 bytes @ 0x1
   388                           
   389  00BE                     ??_setPinInitVaule:	
   390                           ; 0 bytes @ 0x1
   391                           
   392  00BE                     pwm_start@ucPulseWidth:	
   393                           ; 0 bytes @ 0x1
   394                           
   395                           
   396                           ; 1 bytes @ 0x1
   397  00BE                     	ds	1
   398  00BF                     ??_startTwentyMinTimer:	
   399  00BF                     ??_startTwelveHourTimer:	
   400                           ; 0 bytes @ 0x2
   401                           
   402  00BF                     ??_startThreeHoursTimer:	
   403                           ; 0 bytes @ 0x2
   404                           
   405  00BF                     ??_startOneHoursTimer:	
   406                           ; 0 bytes @ 0x2
   407                           
   408  00BF                     ??_FilterCh13:	
   409                           ; 0 bytes @ 0x2
   410                           
   411  00BF                     adc_test_init@channel:	
   412                           ; 0 bytes @ 0x2
   413                           
   414                           
   415                           ; 1 bytes @ 0x2
   416  00BF                     	ds	1
   417  00C0                     ??_process_AD_Converter_Value:	
   418                           
   419                           ; 0 bytes @ 0x3
   420  00C0                     	ds	3
   421  00C3                     FilterCh13@tmpValue:	
   422                           
   423                           ; 1 bytes @ 0x6
   424  00C3                     	ds	1
   425  00C4                     FilterCh13@filter_temp:	
   426                           
   427                           ; 2 bytes @ 0x7
   428  00C4                     	ds	2
   429  00C6                     FilterCh13@filter_sum:	
   430                           
   431                           ; 2 bytes @ 0x9
   432  00C6                     	ds	2
   433  00C8                     FilterCh13@filter_buf:	
   434                           
   435                           ; 6 bytes @ 0xB
   436  00C8                     	ds	6
   437  00CE                     FilterCh13@cir:	
   438                           
   439                           ; 2 bytes @ 0x11
   440  00CE                     	ds	2
   441  00D0                     FilterCh13@j:	
   442                           
   443                           ; 1 bytes @ 0x13
   444  00D0                     	ds	1
   445  00D1                     FilterCh13@i:	
   446                           
   447                           ; 1 bytes @ 0x14
   448  00D1                     	ds	1
   449  00D2                     ?_getAdOriginalCh13Value:	
   450                           
   451                           ; 2 bytes @ 0x15
   452  00D2                     	ds	2
   453  00D4                     ??_getAdOriginalCh13Value:	
   454  00D4                     ??_main:	
   455                           ; 0 bytes @ 0x17
   456                           
   457                           
   458                           ; 0 bytes @ 0x17
   459  00D4                     	ds	1
   460  00D5                     main@ucChValue:	
   461                           
   462                           ; 2 bytes @ 0x18
   463  00D5                     	ds	2
   464  00D7                     main@uiCh13Value:	
   465                           
   466                           ; 2 bytes @ 0x1A
   467  00D7                     	ds	2
   468                           
   469                           	psect	cstackCOMMON
   470  0070                     __pcstackCOMMON:	
   471  0070                     ?_clearTwelveHoursTimer:	
   472  0070                     ?_clearThreeHoursTimer:	
   473                           ; 0 bytes @ 0x0
   474                           
   475  0070                     ?_clearOneHoursTimer:	
   476                           ; 0 bytes @ 0x0
   477                           
   478  0070                     ?_clearTwentyMinTimer:	
   479                           ; 0 bytes @ 0x0
   480                           
   481  0070                     ?_clock_config:	
   482                           ; 0 bytes @ 0x0
   483                           
   484  0070                     ?_timer1_config:	
   485                           ; 0 bytes @ 0x0
   486                           
   487  0070                     ?_timer1_interrupt_config:	
   488                           ; 0 bytes @ 0x0
   489                           
   490  0070                     ?_op1_init:	
   491                           ; 0 bytes @ 0x0
   492                           
   493  0070                     ?_uid_get:	
   494                           ; 0 bytes @ 0x0
   495                           
   496  0070                     ?_adc_start:	
   497                           ; 0 bytes @ 0x0
   498                           
   499  0070                     ?_process_AD_Converter_Value:	
   500                           ; 0 bytes @ 0x0
   501                           
   502  0070                     ?_clrSampeTime:	
   503                           ; 0 bytes @ 0x0
   504                           
   505  0070                     ?_setWaitResetFlag:	
   506                           ; 0 bytes @ 0x0
   507                           
   508  0070                     ?_AD_Sample:	
   509                           ; 0 bytes @ 0x0
   510                           
   511  0070                     ?_initPB3:	
   512                           ; 0 bytes @ 0x0
   513                           
   514  0070                     ?_setPB3:	
   515                           ; 0 bytes @ 0x0
   516                           
   517  0070                     ?_initPB4:	
   518                           ; 0 bytes @ 0x0
   519                           
   520  0070                     ?_setPB4:	
   521                           ; 0 bytes @ 0x0
   522                           
   523  0070                     ?_initPB5:	
   524                           ; 0 bytes @ 0x0
   525                           
   526  0070                     ?_setPB5:	
   527                           ; 0 bytes @ 0x0
   528                           
   529  0070                     ?_initPB2_AsHighResistence:	
   530                           ; 0 bytes @ 0x0
   531                           
   532  0070                     ?_initPin:	
   533                           ; 0 bytes @ 0x0
   534                           
   535  0070                     ?_setPinInitVaule:	
   536                           ; 0 bytes @ 0x0
   537                           
   538  0070                     ?_selectAdChannel:	
   539                           ; 0 bytes @ 0x0
   540                           
   541  0070                     ?_reset:	
   542                           ; 0 bytes @ 0x0
   543                           
   544  0070                     ?_resetAllTimer:	
   545                           ; 0 bytes @ 0x0
   546                           
   547  0070                     ??_getWaitResetFlag:	
   548                           ; 0 bytes @ 0x0
   549                           
   550  0070                     ?_setPWM_Width:	
   551                           ; 0 bytes @ 0x0
   552                           
   553  0070                     ??_setPWM_Width:	
   554                           ; 0 bytes @ 0x0
   555                           
   556  0070                     ?_setAD_ConvertFlag:	
   557                           ; 0 bytes @ 0x0
   558                           
   559  0070                     ?_ISR:	
   560                           ; 0 bytes @ 0x0
   561                           
   562  0070                     ?i1_setAD_ConvertFlag:	
   563                           ; 0 bytes @ 0x0
   564                           
   565  0070                     ??i1_setAD_ConvertFlag:	
   566                           ; 0 bytes @ 0x0
   567                           
   568  0070                     ?_isPermitSampleTime:	
   569                           ; 0 bytes @ 0x0
   570                           
   571  0070                     ?_isFinishedTwentyMinTimer:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ?_isFinishedTwelveHoursTimer:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_isFinishedThreeHoursTimer:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ?_isFinishedOneHoursTimer:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?_getWaitResetFlag:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ?_getAD_ConvertFlag:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?_adc_get:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     ?_main:	
   593                           ; 2 bytes @ 0x0
   594                           
   595  0070                     ?_Filter:	
   596                           ; 2 bytes @ 0x0
   597                           
   598  0070                     setPWM_Width@ucWidth:	
   599                           ; 2 bytes @ 0x0
   600                           
   601  0070                     i1setAD_ConvertFlag@flag:	
   602                           ; 1 bytes @ 0x0
   603                           
   604                           
   605                           ; 1 bytes @ 0x0
   606  0070                     	ds	2
   607  0072                     ??_adc_get:	
   608  0072                     ??_Filter:	
   609                           ; 0 bytes @ 0x2
   610                           
   611  0072                     adc_get@val:	
   612                           ; 0 bytes @ 0x2
   613                           
   614                           
   615                           ; 2 bytes @ 0x2
   616  0072                     	ds	4
   617  0076                     ?_vPutSampleDataIntoTable:	
   618  0076                     vPutSampleDataIntoTable@uiSampleData:	
   619                           ; 0 bytes @ 0x6
   620                           
   621                           
   622                           ; 2 bytes @ 0x6
   623  0076                     	ds	2
   624  0078                     vPutSampleDataIntoTable@channel:	
   625                           
   626                           ; 1 bytes @ 0x8
   627  0078                     	ds	1
   628  0079                     vPutSampleDataIntoTable@uiDeviationValue:	
   629                           
   630                           ; 2 bytes @ 0x9
   631  0079                     	ds	2
   632  007B                     vPutSampleDataIntoTable@i:	
   633                           
   634                           ; 2 bytes @ 0xB
   635  007B                     	ds	2
   636                           
   637                           	psect	cstackBANK0
   638  0020                     __pcstackBANK0:	
   639  0020                     Filter@filter_temp:	
   640                           
   641                           ; 2 bytes @ 0x0
   642  0020                     	ds	2
   643  0022                     Filter@filter_sum:	
   644                           
   645                           ; 2 bytes @ 0x2
   646  0022                     	ds	2
   647  0024                     Filter@tmpValue:	
   648                           
   649                           ; 1 bytes @ 0x4
   650  0024                     	ds	1
   651  0025                     Filter@filter_buf:	
   652                           
   653                           ; 6 bytes @ 0x5
   654  0025                     	ds	6
   655  002B                     Filter@cir:	
   656                           
   657                           ; 2 bytes @ 0xB
   658  002B                     	ds	2
   659  002D                     Filter@j:	
   660                           
   661                           ; 1 bytes @ 0xD
   662  002D                     	ds	1
   663  002E                     Filter@i:	
   664                           
   665                           ; 1 bytes @ 0xE
   666  002E                     	ds	1
   667  002F                     ??_vPutSampleDataIntoTable:	
   668                           
   669                           ; 0 bytes @ 0xF
   670  002F                     	ds	16
   671  003F                     ??_ISR:	
   672                           
   673                           ; 0 bytes @ 0x1F
   674  003F                     	ds	4
   675                           
   676                           	psect	maintext
   677  0241                     __pmaintext:	
   678 ;;Data sizes: Strings 0, constant 0, data 2, bss 64, persistent 0 stack 0
   679 ;;Auto spaces:   Size  Autos    Used
   680 ;; COMMON          14     13      14
   681 ;; BANK0           80     35      71
   682 ;; BANK1           80     28      57
   683 ;; BANK3           80      0       0
   684 ;; BANK2           96      0       0
   685 ;;
   686 ;; Pointer list with targets:
   687 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   688 ;;
   689 ;; ?_getAdOriginalCh13Value	unsigned int  size(1) Largest target is 0
   690 ;;
   691 ;; ?_Filter	unsigned int  size(1) Largest target is 0
   692 ;;
   693 ;; ?_FilterCh13	unsigned int  size(1) Largest target is 0
   694 ;;
   695 ;; Filter@tmpValue	PTR unsigned int  size(1) Largest target is 6
   696 ;;		 -> uiSampleChannelFourteenth(BANK1[6]), uiSampleCh12(BANK1[6]), 
   697 ;;
   698 ;; FilterCh13@tmpValue	PTR unsigned int  size(1) Largest target is 6
   699 ;;		 -> uiSampleCh13(BANK1[6]), 
   700 ;;
   701 ;;
   702 ;; Critical Paths under _main in COMMON
   703 ;;
   704 ;;   None.
   705 ;;
   706 ;; Critical Paths under _ISR in COMMON
   707 ;;
   708 ;;   _ISR->_vPutSampleDataIntoTable
   709 ;;   _vPutSampleDataIntoTable->_Filter
   710 ;;
   711 ;; Critical Paths under _main in BANK0
   712 ;;
   713 ;;   None.
   714 ;;
   715 ;; Critical Paths under _ISR in BANK0
   716 ;;
   717 ;;   _ISR->_vPutSampleDataIntoTable
   718 ;;   _vPutSampleDataIntoTable->_Filter
   719 ;;
   720 ;; Critical Paths under _main in BANK1
   721 ;;
   722 ;;   _main->_getAdOriginalCh13Value
   723 ;;   _getAdOriginalCh13Value->_FilterCh13
   724 ;;   _process_AD_Converter_Value->_adc_test_init
   725 ;;   _setPinInitVaule->_setPB3
   726 ;;   _setPinInitVaule->_setPB4
   727 ;;   _setPinInitVaule->_setPB5
   728 ;;   _initPin->_initPB3
   729 ;;   _initPin->_initPB4
   730 ;;   _initPin->_initPB5
   731 ;;
   732 ;; Critical Paths under _ISR in BANK1
   733 ;;
   734 ;;   None.
   735 ;;
   736 ;; Critical Paths under _main in BANK3
   737 ;;
   738 ;;   None.
   739 ;;
   740 ;; Critical Paths under _ISR in BANK3
   741 ;;
   742 ;;   None.
   743 ;;
   744 ;; Critical Paths under _main in BANK2
   745 ;;
   746 ;;   None.
   747 ;;
   748 ;; Critical Paths under _ISR in BANK2
   749 ;;
   750 ;;   None.
   751 ;;
   752 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   753 ;;
   754 ;;
   755 ;;Call Graph Tables:
   756 ;;
   757 ;; ---------------------------------------------------------------------------------
   758 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   759 ;; ---------------------------------------------------------------------------------
   760 ;; (0) _main                                                 5     5      0    1665
   761 ;;                                             23 BANK1      5     5      0
   762 ;;                            _initPin
   763 ;;                    _setPinInitVaule
   764 ;;                    _selectAdChannel
   765 ;;                       _clock_config
   766 ;;                      _timer1_config
   767 ;;            _timer1_interrupt_config
   768 ;;                           _op1_init
   769 ;;                            _uid_get
   770 ;;                      _adc_test_init
   771 ;;                _startTwentyMinTimer
   772 ;;                          _adc_start
   773 ;;         _process_AD_Converter_Value
   774 ;;                 _isPermitSampleTime
   775 ;;                       _clrSampeTime
   776 ;;           _isFinishedTwentyMinTimer
   777 ;;             _getAdOriginalCh13Value
   778 ;;                          _pwm_start
   779 ;;                             _setPB3
   780 ;;                             _setPB4
   781 ;;                             _setPB5
   782 ;;                _clearTwentyMinTimer
   783 ;;               _startTwelveHourTimer
   784 ;;         _isFinishedTwelveHoursTimer
   785 ;;              _clearTwelveHoursTimer
   786 ;;               _startThreeHoursTimer
   787 ;;          _isFinishedThreeHoursTimer
   788 ;;               _clearThreeHoursTimer
   789 ;;                 _startOneHoursTimer
   790 ;;            _isFinishedOneHoursTimer
   791 ;;                      _resetAllTimer
   792 ;;                   _setWaitResetFlag
   793 ;;                              _reset
   794 ;; ---------------------------------------------------------------------------------
   795 ;; (1) _getAdOriginalCh13Value                               2     0      2     915
   796 ;;                                             21 BANK1      2     0      2
   797 ;;                         _FilterCh13
   798 ;; ---------------------------------------------------------------------------------
   799 ;; (1) _process_AD_Converter_Value                           0     0      0      93
   800 ;;                  _getAD_ConvertFlag
   801 ;;                  _setAD_ConvertFlag
   802 ;;                          _AD_Sample
   803 ;;                      _adc_test_init
   804 ;;                          _adc_start
   805 ;; ---------------------------------------------------------------------------------
   806 ;; (1) _resetAllTimer                                        0     0      0       0
   807 ;;              _clearTwelveHoursTimer
   808 ;;               _clearThreeHoursTimer
   809 ;;                 _clearOneHoursTimer
   810 ;;                _clearTwentyMinTimer
   811 ;; ---------------------------------------------------------------------------------
   812 ;; (1) _setPinInitVaule                                      0     0      0      93
   813 ;;                             _setPB3
   814 ;;                             _setPB4
   815 ;;                             _setPB5
   816 ;; ---------------------------------------------------------------------------------
   817 ;; (1) _initPin                                              0     0      0      93
   818 ;;           _initPB2_AsHighResistence
   819 ;;                            _initPB3
   820 ;;                            _initPB4
   821 ;;                            _initPB5
   822 ;; ---------------------------------------------------------------------------------
   823 ;; (2) _AD_Sample                                            0     0      0       0
   824 ;; ---------------------------------------------------------------------------------
   825 ;; (2) _setAD_ConvertFlag                                    1     1      0      31
   826 ;;                                              0 BANK1      1     1      0
   827 ;; ---------------------------------------------------------------------------------
   828 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   829 ;; ---------------------------------------------------------------------------------
   830 ;; (2) _FilterCh13                                          21    19      2     915
   831 ;;                                              0 BANK1     21    19      2
   832 ;; ---------------------------------------------------------------------------------
   833 ;; (1) _setWaitResetFlag                                     1     1      0      31
   834 ;;                                              0 BANK1      1     1      0
   835 ;; ---------------------------------------------------------------------------------
   836 ;; (1) _isFinishedOneHoursTimer                              0     0      0       0
   837 ;; ---------------------------------------------------------------------------------
   838 ;; (1) _startOneHoursTimer                                   2     0      2      31
   839 ;;                                              0 BANK1      2     0      2
   840 ;; ---------------------------------------------------------------------------------
   841 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   842 ;; ---------------------------------------------------------------------------------
   843 ;; (1) _startThreeHoursTimer                                 2     0      2      31
   844 ;;                                              0 BANK1      2     0      2
   845 ;; ---------------------------------------------------------------------------------
   846 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   847 ;; ---------------------------------------------------------------------------------
   848 ;; (1) _startTwelveHourTimer                                 2     0      2      31
   849 ;;                                              0 BANK1      2     0      2
   850 ;; ---------------------------------------------------------------------------------
   851 ;; (1) _isFinishedTwentyMinTimer                             0     0      0       0
   852 ;; ---------------------------------------------------------------------------------
   853 ;; (1) _clrSampeTime                                         0     0      0       0
   854 ;; ---------------------------------------------------------------------------------
   855 ;; (1) _isPermitSampleTime                                   0     0      0       0
   856 ;; ---------------------------------------------------------------------------------
   857 ;; (2) _adc_start                                            0     0      0       0
   858 ;; ---------------------------------------------------------------------------------
   859 ;; (1) _startTwentyMinTimer                                  2     0      2      31
   860 ;;                                              0 BANK1      2     0      2
   861 ;; ---------------------------------------------------------------------------------
   862 ;; (2) _adc_test_init                                        3     2      1      62
   863 ;;                                              0 BANK1      3     2      1
   864 ;; ---------------------------------------------------------------------------------
   865 ;; (1) _uid_get                                              0     0      0       0
   866 ;; ---------------------------------------------------------------------------------
   867 ;; (1) _op1_init                                             0     0      0       0
   868 ;; ---------------------------------------------------------------------------------
   869 ;; (1) _timer1_interrupt_config                              0     0      0       0
   870 ;; ---------------------------------------------------------------------------------
   871 ;; (1) _timer1_config                                        0     0      0       0
   872 ;; ---------------------------------------------------------------------------------
   873 ;; (1) _clock_config                                         0     0      0       0
   874 ;; ---------------------------------------------------------------------------------
   875 ;; (2) _clearTwentyMinTimer                                  0     0      0       0
   876 ;; ---------------------------------------------------------------------------------
   877 ;; (2) _clearOneHoursTimer                                   0     0      0       0
   878 ;; ---------------------------------------------------------------------------------
   879 ;; (2) _clearThreeHoursTimer                                 0     0      0       0
   880 ;; ---------------------------------------------------------------------------------
   881 ;; (2) _clearTwelveHoursTimer                                0     0      0       0
   882 ;; ---------------------------------------------------------------------------------
   883 ;; (1) _reset                                                0     0      0       0
   884 ;; ---------------------------------------------------------------------------------
   885 ;; (1) _selectAdChannel                                      0     0      0       0
   886 ;; ---------------------------------------------------------------------------------
   887 ;; (1) _pwm_start                                            2     1      1      62
   888 ;;                                              0 BANK1      2     1      1
   889 ;; ---------------------------------------------------------------------------------
   890 ;; (2) _initPB2_AsHighResistence                             0     0      0       0
   891 ;; ---------------------------------------------------------------------------------
   892 ;; (1) _setPB5                                               1     1      0      31
   893 ;;                                              0 BANK1      1     1      0
   894 ;; ---------------------------------------------------------------------------------
   895 ;; (2) _initPB5                                              1     1      0      31
   896 ;;                                              0 BANK1      1     1      0
   897 ;; ---------------------------------------------------------------------------------
   898 ;; (1) _setPB4                                               1     1      0      31
   899 ;;                                              0 BANK1      1     1      0
   900 ;; ---------------------------------------------------------------------------------
   901 ;; (2) _initPB4                                              1     1      0      31
   902 ;;                                              0 BANK1      1     1      0
   903 ;; ---------------------------------------------------------------------------------
   904 ;; (1) _setPB3                                               1     1      0      31
   905 ;;                                              0 BANK1      1     1      0
   906 ;; ---------------------------------------------------------------------------------
   907 ;; (2) _initPB3                                              1     1      0      31
   908 ;;                                              0 BANK1      1     1      0
   909 ;; ---------------------------------------------------------------------------------
   910 ;; Estimated maximum stack depth 2
   911 ;; ---------------------------------------------------------------------------------
   912 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   913 ;; ---------------------------------------------------------------------------------
   914 ;; (3) _ISR                                                  4     4      0    1108
   915 ;;                                             31 BANK0      4     4      0
   916 ;;                i1_setAD_ConvertFlag
   917 ;;                            _adc_get
   918 ;;            _vPutSampleDataIntoTable
   919 ;; ---------------------------------------------------------------------------------
   920 ;; (4) _vPutSampleDataIntoTable                             25    22      3    1010
   921 ;;                                              6 COMMON     7     4      3
   922 ;;                                             15 BANK0     16    16      0
   923 ;;                             _Filter
   924 ;;                   _getWaitResetFlag
   925 ;;                       _setPWM_Width
   926 ;;                            _adc_get (ARG)
   927 ;; ---------------------------------------------------------------------------------
   928 ;; (4) i1_setAD_ConvertFlag                                  1     1      0      73
   929 ;;                                              0 COMMON     1     1      0
   930 ;; ---------------------------------------------------------------------------------
   931 ;; (4) _adc_get                                              4     2      2      25
   932 ;;                                              0 COMMON     4     2      2
   933 ;; ---------------------------------------------------------------------------------
   934 ;; (5) _Filter                                              21    19      2     620
   935 ;;                                              0 COMMON     6     4      2
   936 ;;                                              0 BANK0     15    15      0
   937 ;; ---------------------------------------------------------------------------------
   938 ;; (5) _setPWM_Width                                         1     1      0      33
   939 ;;                                              0 COMMON     1     1      0
   940 ;; ---------------------------------------------------------------------------------
   941 ;; (5) _getWaitResetFlag                                     0     0      0       0
   942 ;; ---------------------------------------------------------------------------------
   943 ;; Estimated maximum stack depth 5
   944 ;; ---------------------------------------------------------------------------------
   945 ;; Call Graph Graphs:
   946 ;; _main (ROOT)
   947 ;;   _initPin
   948 ;;     _initPB2_AsHighResistence
   949 ;;     _initPB3
   950 ;;     _initPB4
   951 ;;     _initPB5
   952 ;;   _setPinInitVaule
   953 ;;     _setPB3
   954 ;;     _setPB4
   955 ;;     _setPB5
   956 ;;   _selectAdChannel
   957 ;;   _clock_config
   958 ;;   _timer1_config
   959 ;;   _timer1_interrupt_config
   960 ;;   _op1_init
   961 ;;   _uid_get
   962 ;;   _adc_test_init
   963 ;;   _startTwentyMinTimer
   964 ;;   _adc_start
   965 ;;   _process_AD_Converter_Value
   966 ;;     _getAD_ConvertFlag
   967 ;;     _setAD_ConvertFlag
   968 ;;     _AD_Sample
   969 ;;     _adc_test_init
   970 ;;     _adc_start
   971 ;;   _isPermitSampleTime
   972 ;;   _clrSampeTime
   973 ;;   _isFinishedTwentyMinTimer
   974 ;;   _getAdOriginalCh13Value
   975 ;;     _FilterCh13
   976 ;;   _pwm_start
   977 ;;   _setPB3
   978 ;;   _setPB4
   979 ;;   _setPB5
   980 ;;   _clearTwentyMinTimer
   981 ;;   _startTwelveHourTimer
   982 ;;   _isFinishedTwelveHoursTimer
   983 ;;   _clearTwelveHoursTimer
   984 ;;   _startThreeHoursTimer
   985 ;;   _isFinishedThreeHoursTimer
   986 ;;   _clearThreeHoursTimer
   987 ;;   _startOneHoursTimer
   988 ;;   _isFinishedOneHoursTimer
   989 ;;   _resetAllTimer
   990 ;;     _clearTwelveHoursTimer
   991 ;;     _clearThreeHoursTimer
   992 ;;     _clearOneHoursTimer
   993 ;;     _clearTwentyMinTimer
   994 ;;   _setWaitResetFlag
   995 ;;   _reset
   996 ;;
   997 ;; _ISR (ROOT)
   998 ;;   i1_setAD_ConvertFlag
   999 ;;   _adc_get
  1000 ;;   _vPutSampleDataIntoTable
  1001 ;;     _Filter
  1002 ;;     _getWaitResetFlag
  1003 ;;     _setPWM_Width
  1004 ;;     _adc_get (ARG)
  1005 ;;
  1006 ;; Address spaces:
  1007 ;;Name               Size   Autos  Total    Cost      Usage
  1008 ;;BANK3               50      0       0      10        0.0%
  1009 ;;BITBANK3            50      0       0       9        0.0%
  1010 ;;SFR3                 0      0       0       4        0.0%
  1011 ;;BITSFR3              0      0       0       4        0.0%
  1012 ;;BANK2               60      0       0      12        0.0%
  1013 ;;BITBANK2            60      0       0      11        0.0%
  1014 ;;SFR2                 0      0       0       5        0.0%
  1015 ;;BITSFR2              0      0       0       5        0.0%
  1016 ;;SFR1                 0      0       0       2        0.0%
  1017 ;;BITSFR1              0      0       0       2        0.0%
  1018 ;;BANK1               50     1C      39       8       71.3%
  1019 ;;BITBANK1            50      0       0       7        0.0%
  1020 ;;CODE                 0      0       0       0        0.0%
  1021 ;;DATA                 0      0      96       6        0.0%
  1022 ;;ABS                  0      0      8E       3        0.0%
  1023 ;;NULL                 0      0       0       0        0.0%
  1024 ;;STACK                0      0       8       2        0.0%
  1025 ;;BANK0               50     23      47       5       88.8%
  1026 ;;BITBANK0            50      0       0       4        0.0%
  1027 ;;SFR0                 0      0       0       1        0.0%
  1028 ;;BITSFR0              0      0       0       1        0.0%
  1029 ;;COMMON               E      D       E       1      100.0%
  1030 ;;BITCOMMON            E      0       0       0        0.0%
  1031                           
  1032                           
  1033 ;; *************** function _main *****************
  1034 ;; Defined at:
  1035 ;;		line 529 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;		None
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;  ucChValue       2   24[BANK1 ] unsigned int 
  1040 ;;  uiCh13Value     2   26[BANK1 ] unsigned int 
  1041 ;; Return value:  Size  Location     Type
  1042 ;;                  2  738[COMMON] int 
  1043 ;; Registers used:
  1044 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1045 ;; Tracked objects:
  1046 ;;		On entry : 17F/0
  1047 ;;		On exit  : 60/20
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1050 ;;      Params:         0       0       0       0       0
  1051 ;;      Locals:         0       0       4       0       0
  1052 ;;      Temps:          0       0       1       0       0
  1053 ;;      Totals:         0       0       5       0       0
  1054 ;;Total ram usage:        5 bytes
  1055 ;; Hardware stack levels required when called:    5
  1056 ;; This function calls:
  1057 ;;		_initPin
  1058 ;;		_setPinInitVaule
  1059 ;;		_selectAdChannel
  1060 ;;		_clock_config
  1061 ;;		_timer1_config
  1062 ;;		_timer1_interrupt_config
  1063 ;;		_op1_init
  1064 ;;		_uid_get
  1065 ;;		_adc_test_init
  1066 ;;		_startTwentyMinTimer
  1067 ;;		_adc_start
  1068 ;;		_process_AD_Converter_Value
  1069 ;;		_isPermitSampleTime
  1070 ;;		_clrSampeTime
  1071 ;;		_isFinishedTwentyMinTimer
  1072 ;;		_getAdOriginalCh13Value
  1073 ;;		_pwm_start
  1074 ;;		_setPB3
  1075 ;;		_setPB4
  1076 ;;		_setPB5
  1077 ;;		_clearTwentyMinTimer
  1078 ;;		_startTwelveHourTimer
  1079 ;;		_isFinishedTwelveHoursTimer
  1080 ;;		_clearTwelveHoursTimer
  1081 ;;		_startThreeHoursTimer
  1082 ;;		_isFinishedThreeHoursTimer
  1083 ;;		_clearThreeHoursTimer
  1084 ;;		_startOneHoursTimer
  1085 ;;		_isFinishedOneHoursTimer
  1086 ;;		_resetAllTimer
  1087 ;;		_setWaitResetFlag
  1088 ;;		_reset
  1089 ;; This function is called by:
  1090 ;;		Startup code after reset
  1091 ;; This function uses a non-reentrant model
  1092 ;;
  1093  0241                     _main:	
  1094                           
  1095                           ;main.c: 530: enum systemStep {
  1096                           ;main.c: 531: INIT_STEP = 0,
  1097                           ;main.c: 532: START_UP_PWM_STEP,
  1098                           ;main.c: 533: CHECK_10_HOUR_TIMER_STEP,
  1099                           ;main.c: 534: STARTUP_3_HOUR_TIMER_STEP,
  1100                           ;main.c: 535: CHECK_3_HOUR_TIMER_STEP,
  1101                           ;main.c: 536: STARTUP_1_HOUR_TIMER_STEP,
  1102                           ;main.c: 537: CHECK_1_HOUR_TIMER_STEP,
  1103                           ;main.c: 538: READY_FOR_RESET_STEP = 99,
  1104                           ;main.c: 539: DELAY_ONE_SECOND_FOR_PWM,
  1105                           ;main.c: 540: MEET_RESET_CONDITION_STEP,
  1106                           ;main.c: 541: RESET_STEP,
  1107                           ;main.c: 542: };
  1108                           ;main.c: 544: static enum systemStep ucStep = INIT_STEP;
  1109                           
  1110                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1111  0241  118A  2510  118A   	fcall	_initPin
  1112                           
  1113                           ;main.c: 558: setPinInitVaule();
  1114  0244  118A  24E7  118A   	fcall	_setPinInitVaule
  1115                           
  1116                           ;main.c: 559: selectAdChannel();
  1117  0247  118A  2636  118A   	fcall	_selectAdChannel
  1118                           
  1119                           ;main.c: 561: clock_config();
  1120  024A  118A  2625  118A   	fcall	_clock_config
  1121                           
  1122                           ;main.c: 562: timer1_config();
  1123  024D  118A  260B  118A   	fcall	_timer1_config
  1124                           
  1125                           ;main.c: 563: timer1_interrupt_config();
  1126  0250  118A  263A  118A   	fcall	_timer1_interrupt_config
  1127                           
  1128                           ;main.c: 564: op1_init();
  1129  0253  118A  261D  118A   	fcall	_op1_init
  1130                           
  1131                           ;main.c: 566: uid_get();
  1132  0256  118A  2551  118A   	fcall	_uid_get
  1133  0259  3002               	movlw	2
  1134                           
  1135                           ;main.c: 568: adc_test_init(2,0);
  1136  025A  1303               	bcf	3,6	;RP1=0, select bank1
  1137  025B  01BD               	clrf	?_adc_test_init^(0+128)
  1138  025C  118A  24C7  118A   	fcall	_adc_test_init
  1139                           
  1140                           ;main.c: 574: startTwentyMinTimer( 1200 );
  1141  025F  30B0               	movlw	176
  1142  0260  00BD               	movwf	?_startTwentyMinTimer^(0+128)
  1143  0261  3004               	movlw	4
  1144  0262  00BE               	movwf	(?_startTwentyMinTimer^(0+128)+1)
  1145  0263  118A  25CC  118A   	fcall	_startTwentyMinTimer
  1146                           
  1147                           ;main.c: 575: _delay(1000);
  1148  0266  30F9               	movlw	249
  1149  0267  1683               	bsf	3,5	;RP0=1, select bank1
  1150  0268  00D4               	movwf	??_main^(0+128)
  1151  0269                     u2217:	
  1152  0269  0064               	clrwdt
  1153  026A  0BD4               	decfsz	??_main^(0+128),f
  1154  026B  2A69               	goto	u2217
  1155  026C  2A6D               	nop2	;nop
  1156  026D  0064               	clrwdt
  1157                           
  1158                           ;main.c: 576: adc_start();
  1159  026E  118A  24E3  118A   	fcall	_adc_start
  1160                           
  1161                           ;main.c: 610: switch(ucStep)
  1162  0271  2BBA               	goto	l4310
  1163  0272                     l4318:	
  1164                           
  1165                           ;main.c: 614: {
  1166                           ;main.c: 619: static unsigned char ucTimerP3s = 0;
  1167                           ;main.c: 621: if( isFinishedTwentyMinTimer() )
  1168  0272  118A  2600  118A   	fcall	_isFinishedTwentyMinTimer
  1169  0275  3A00               	xorlw	0
  1170  0276  1903               	skipnz
  1171  0277  2A7D               	goto	l4324
  1172                           
  1173                           ;main.c: 622: {
  1174                           ;main.c: 623: ucStep = READY_FOR_RESET_STEP;
  1175  0278  3063               	movlw	99
  1176  0279  1683               	bsf	3,5	;RP0=1, select bank1
  1177  027A  00A8               	movwf	main@ucStep^(0+128)
  1178                           
  1179                           ;main.c: 624: ucTimerP3s = 0;
  1180  027B  01A9               	clrf	main@ucTimerP3s^(0+128)
  1181                           
  1182                           ;main.c: 625: }
  1183  027C  2BBA               	goto	l4310
  1184  027D                     l4324:	
  1185                           
  1186                           ;main.c: 626: else
  1187                           ;main.c: 627: {
  1188                           ;main.c: 628: if( getAdOriginalCh13Value() > 145)
  1189  027D  118A  23EC  118A   	fcall	_getAdOriginalCh13Value
  1190  0280  3000               	movlw	0
  1191  0281  0253               	subwf	(?_getAdOriginalCh13Value+1)^(0+128),w
  1192  0282  3092               	movlw	146
  1193  0283  1903               	skipnz
  1194  0284  0252               	subwf	?_getAdOriginalCh13Value^(0+128),w
  1195  0285  1C03               	skipc
  1196  0286  2A89               	goto	l4328
  1197                           
  1198                           ;main.c: 629: {
  1199                           ;main.c: 630: ucTimerP3s++;
  1200  0287  0AA9               	incf	main@ucTimerP3s^(0+128),f
  1201                           
  1202                           ;main.c: 631: }
  1203  0288  2A8A               	goto	l4330
  1204  0289                     l4328:	
  1205                           
  1206                           ;main.c: 632: else
  1207                           ;main.c: 633: ucTimerP3s = 0;
  1208  0289  01A9               	clrf	main@ucTimerP3s^(0+128)
  1209  028A                     l4330:	
  1210                           
  1211                           ;main.c: 635: if( ucTimerP3s >= 30)
  1212  028A  301E               	movlw	30
  1213  028B  0229               	subwf	main@ucTimerP3s^(0+128),w
  1214  028C  1C03               	skipc
  1215  028D  2BBA               	goto	l4310
  1216                           
  1217                           ;main.c: 636: {
  1218                           ;main.c: 637: ucTimerP3s = 0;
  1219  028E  01A9               	clrf	main@ucTimerP3s^(0+128)
  1220  028F                     l4334:	
  1221                           
  1222                           ;main.c: 638: ucStep = START_UP_PWM_STEP;
  1223  028F  1683               	bsf	3,5	;RP0=1, select bank1
  1224  0290  01A8               	clrf	main@ucStep^(0+128)
  1225  0291  0AA8               	incf	main@ucStep^(0+128),f
  1226  0292  2BBA               	goto	l4310
  1227  0293                     l4336:	
  1228                           
  1229                           ;main.c: 649: {
  1230                           ;main.c: 654: pwm_start(150,249);
  1231  0293  30F9               	movlw	249
  1232  0294  00BD               	movwf	?_pwm_start^(0+128)
  1233  0295  3096               	movlw	150
  1234  0296  118A  2569  118A   	fcall	_pwm_start
  1235                           
  1236                           ;main.c: 656: setPB3(0);
  1237  0299  3000               	movlw	0
  1238  029A  118A  24EF  118A   	fcall	_setPB3
  1239                           
  1240                           ;main.c: 657: setPB4(1);
  1241  029D  3001               	movlw	1
  1242  029E  118A  24FA  118A   	fcall	_setPB4
  1243                           
  1244                           ;main.c: 658: setPB5(0);
  1245  02A1  3000               	movlw	0
  1246  02A2  118A  2505  118A   	fcall	_setPB5
  1247                           
  1248                           ;main.c: 659: clearTwentyMinTimer();
  1249  02A5  118A  254D  118A   	fcall	_clearTwentyMinTimer
  1250                           
  1251                           ;main.c: 660: startTwelveHourTimer( 36000);
  1252  02A8  30A0               	movlw	160
  1253  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  1254  02AA  00BD               	movwf	?_startTwelveHourTimer^(0+128)
  1255  02AB  308C               	movlw	140
  1256  02AC  00BE               	movwf	(?_startTwelveHourTimer^(0+128)+1)
  1257  02AD  118A  25B9  118A   	fcall	_startTwelveHourTimer
  1258                           
  1259                           ;main.c: 661: ucStep = CHECK_10_HOUR_TIMER_STEP;
  1260  02B0  3002               	movlw	2
  1261  02B1  2B8D               	goto	L9
  1262  02B2                     l4344:	
  1263                           ;main.c: 662: break;
  1264                           
  1265                           
  1266                           ;main.c: 666: {
  1267                           ;main.c: 671: static unsigned char ucTimerP5s = 0;
  1268                           ;main.c: 673: if( isFinishedTwelveHoursTimer () )
  1269  02B2  118A  25F5  118A   	fcall	_isFinishedTwelveHoursTimer
  1270  02B5  3A00               	xorlw	0
  1271  02B6  1903               	skipnz
  1272  02B7  2ABA               	goto	l4348
  1273  02B8                     l4346:	
  1274                           
  1275                           ;main.c: 674: ucStep = READY_FOR_RESET_STEP;
  1276  02B8  3063               	movlw	99
  1277  02B9  2B8D               	goto	L9
  1278  02BA                     l4348:	
  1279                           
  1280                           ;main.c: 675: else
  1281                           ;main.c: 676: {
  1282                           ;main.c: 677: if( getAdOriginalCh13Value() < 322)
  1283  02BA  118A  23EC  118A   	fcall	_getAdOriginalCh13Value
  1284  02BD  3001               	movlw	1
  1285  02BE  0253               	subwf	(?_getAdOriginalCh13Value+1)^(0+128),w
  1286  02BF  3042               	movlw	66
  1287  02C0  1903               	skipnz
  1288  02C1  0252               	subwf	?_getAdOriginalCh13Value^(0+128),w
  1289  02C2  1803               	skipnc
  1290  02C3  2AC6               	goto	l4352
  1291                           
  1292                           ;main.c: 678: ucTimerP5s++;
  1293  02C4  0AAA               	incf	main@ucTimerP5s^(0+128),f
  1294  02C5  2AC7               	goto	l4354
  1295  02C6                     l4352:	
  1296                           
  1297                           ;main.c: 679: else
  1298                           ;main.c: 680: ucTimerP5s = 0;
  1299  02C6  01AA               	clrf	main@ucTimerP5s^(0+128)
  1300  02C7                     l4354:	
  1301                           
  1302                           ;main.c: 682: if( ucTimerP5s >= 10)
  1303  02C7  300A               	movlw	10
  1304  02C8  022A               	subwf	main@ucTimerP5s^(0+128),w
  1305  02C9  1C03               	skipc
  1306  02CA  2BBA               	goto	l4310
  1307  02CB  3003               	movlw	3
  1308                           
  1309                           ;main.c: 683: {
  1310                           ;main.c: 684: ucTimerP5s = 0;
  1311  02CC  01AA               	clrf	main@ucTimerP5s^(0+128)
  1312                           
  1313                           ;main.c: 685: ucStep = STARTUP_3_HOUR_TIMER_STEP;
  1314  02CD  2BB4               	goto	L8
  1315  02CE                     l4360:	
  1316                           
  1317                           ;main.c: 693: {
  1318                           ;main.c: 694: clearTwelveHoursTimer();
  1319  02CE  118A  253F  118A   	fcall	_clearTwelveHoursTimer
  1320                           
  1321                           ;main.c: 695: startThreeHoursTimer(10800);
  1322  02D1  3030               	movlw	48
  1323  02D2  1683               	bsf	3,5	;RP0=1, select bank1
  1324  02D3  00BD               	movwf	?_startThreeHoursTimer^(0+128)
  1325  02D4  302A               	movlw	42
  1326  02D5  00BE               	movwf	(?_startThreeHoursTimer^(0+128)+1)
  1327  02D6  118A  25A6  118A   	fcall	_startThreeHoursTimer
  1328                           
  1329                           ;main.c: 696: ucStep = CHECK_3_HOUR_TIMER_STEP;
  1330  02D9  3004               	movlw	4
  1331  02DA  2B8D               	goto	L9
  1332  02DB                     l4364:	
  1333                           ;main.c: 697: break;
  1334                           
  1335                           
  1336                           ;main.c: 701: {
  1337                           ;main.c: 702: static unsigned char ucTimerP5s = 0;
  1338                           ;main.c: 704: if( isFinishedThreeHoursTimer() )
  1339  02DB  118A  25EA  118A   	fcall	_isFinishedThreeHoursTimer
  1340  02DE  3A00               	xorlw	0
  1341  02DF  1D03               	btfss	3,2
  1342  02E0  2AB8               	goto	l4346
  1343                           
  1344                           ;main.c: 706: else
  1345                           ;main.c: 707: {
  1346                           ;main.c: 708: if( getAdOriginalCh13Value() < 105)
  1347  02E1  118A  23EC  118A   	fcall	_getAdOriginalCh13Value
  1348  02E4  3000               	movlw	0
  1349  02E5  0253               	subwf	(?_getAdOriginalCh13Value+1)^(0+128),w
  1350  02E6  3069               	movlw	105
  1351  02E7  1903               	skipnz
  1352  02E8  0252               	subwf	?_getAdOriginalCh13Value^(0+128),w
  1353  02E9  1803               	skipnc
  1354  02EA  2AED               	goto	l4372
  1355                           
  1356                           ;main.c: 709: ucTimerP5s++;
  1357  02EB  0AA6               	incf	main@cTimerP5s_795^(0+128),f
  1358  02EC  2AEE               	goto	l4374
  1359  02ED                     l4372:	
  1360                           
  1361                           ;main.c: 710: else
  1362                           ;main.c: 711: ucTimerP5s = 0;
  1363  02ED  01A6               	clrf	main@cTimerP5s_795^(0+128)
  1364  02EE                     l4374:	
  1365                           
  1366                           ;main.c: 713: if( ucTimerP5s >= 10)
  1367  02EE  300A               	movlw	10
  1368  02EF  0226               	subwf	main@cTimerP5s_795^(0+128),w
  1369  02F0  1C03               	skipc
  1370  02F1  2BBA               	goto	l4310
  1371  02F2  3005               	movlw	5
  1372                           
  1373                           ;main.c: 714: {
  1374                           ;main.c: 715: ucTimerP5s = 0;
  1375  02F3  01A6               	clrf	main@cTimerP5s_795^(0+128)
  1376                           
  1377                           ;main.c: 716: ucStep = STARTUP_1_HOUR_TIMER_STEP;
  1378  02F4  2BB4               	goto	L8
  1379  02F5                     l4380:	
  1380                           
  1381                           ;main.c: 723: {
  1382                           ;main.c: 724: clearThreeHoursTimer();
  1383  02F5  118A  2544  118A   	fcall	_clearThreeHoursTimer
  1384                           
  1385                           ;main.c: 725: startOneHoursTimer( 3600 );
  1386  02F8  3010               	movlw	16
  1387  02F9  1683               	bsf	3,5	;RP0=1, select bank1
  1388  02FA  00BD               	movwf	?_startOneHoursTimer^(0+128)
  1389  02FB  300E               	movlw	14
  1390  02FC  00BE               	movwf	(?_startOneHoursTimer^(0+128)+1)
  1391  02FD  118A  2593  118A   	fcall	_startOneHoursTimer
  1392                           
  1393                           ;main.c: 726: setPB3(1);
  1394  0300  3001               	movlw	1
  1395  0301  118A  24EF  118A   	fcall	_setPB3
  1396                           
  1397                           ;main.c: 727: setPB4(0);
  1398  0304  3000               	movlw	0
  1399  0305  118A  24FA  118A   	fcall	_setPB4
  1400                           
  1401                           ;main.c: 728: setPB5(1);
  1402  0308  3001               	movlw	1
  1403  0309  118A  2505  118A   	fcall	_setPB5
  1404                           
  1405                           ;main.c: 729: ucStep = CHECK_1_HOUR_TIMER_STEP;
  1406  030C  3006               	movlw	6
  1407  030D  2B8D               	goto	L9
  1408  030E                     l4392:	
  1409                           ;main.c: 730: break;
  1410                           
  1411                           
  1412                           ;main.c: 734: {
  1413                           ;main.c: 739: static unsigned int uiTimerOneP5s = 0;
  1414                           ;main.c: 740: static unsigned int uiTimerTwoP5s = 0;
  1415                           ;main.c: 741: static unsigned int uiTimerThreeP5s = 0;
  1416                           ;main.c: 743: unsigned int uiCh13Value = getAdOriginalCh13Value();
  1417  030E  118A  23EC  118A   	fcall	_getAdOriginalCh13Value
  1418  0311  0853               	movf	(?_getAdOriginalCh13Value+1)^(0+128),w
  1419  0312  00D8               	movwf	(main@uiCh13Value+1)^(0+128)
  1420  0313  0852               	movf	?_getAdOriginalCh13Value^(0+128),w
  1421  0314  00D7               	movwf	main@uiCh13Value^(0+128)
  1422                           
  1423                           ;main.c: 746: if( isFinishedOneHoursTimer() )
  1424  0315  118A  25DF  118A   	fcall	_isFinishedOneHoursTimer
  1425  0318  3A00               	xorlw	0
  1426  0319  1D03               	btfss	3,2
  1427  031A  2AB8               	goto	l4346
  1428                           
  1429                           ;main.c: 748: else
  1430                           ;main.c: 749: {
  1431                           ;main.c: 750: if( uiCh13Value > 105)
  1432  031B  3000               	movlw	0
  1433  031C  1683               	bsf	3,5	;RP0=1, select bank1
  1434  031D  0258               	subwf	(main@uiCh13Value+1)^(0+128),w
  1435  031E  306A               	movlw	106
  1436  031F  1903               	skipnz
  1437  0320  0257               	subwf	main@uiCh13Value^(0+128),w
  1438  0321  1C03               	skipc
  1439  0322  2B30               	goto	l4406
  1440                           
  1441                           ;main.c: 751: {
  1442                           ;main.c: 752: if( uiTimerOneP5s <= 10 )
  1443  0323  3000               	movlw	0
  1444  0324  0223               	subwf	(main@uiTimerOneP5s+1)^(0+128),w
  1445  0325  300B               	movlw	11
  1446  0326  1903               	skipnz
  1447  0327  0222               	subwf	main@uiTimerOneP5s^(0+128),w
  1448  0328  1803               	skipnc
  1449  0329  2B2D               	goto	l4404
  1450                           
  1451                           ;main.c: 753: uiTimerOneP5s++;
  1452  032A  0AA2               	incf	main@uiTimerOneP5s^(0+128),f
  1453  032B  1903               	skipnz
  1454  032C  0AA3               	incf	(main@uiTimerOneP5s+1)^(0+128),f
  1455  032D                     l4404:	
  1456                           
  1457                           ;main.c: 755: uiTimerThreeP5s = 0;
  1458  032D  01A4               	clrf	main@uiTimerTwoP5s^(0+128)
  1459  032E  01A5               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1460                           
  1461                           ;main.c: 756: }
  1462  032F  2B32               	goto	l4408
  1463  0330                     l4406:	
  1464                           
  1465                           ;main.c: 757: else
  1466                           ;main.c: 758: {
  1467                           ;main.c: 759: uiTimerOneP5s = 0;
  1468  0330  01A2               	clrf	main@uiTimerOneP5s^(0+128)
  1469  0331  01A3               	clrf	(main@uiTimerOneP5s+1)^(0+128)
  1470  0332                     l4408:	
  1471                           
  1472                           ;main.c: 760: }
  1473                           ;main.c: 763: if(uiTimerOneP5s > 10)
  1474  0332  3000               	movlw	0
  1475  0333  0223               	subwf	(main@uiTimerOneP5s+1)^(0+128),w
  1476  0334  300B               	movlw	11
  1477  0335  1903               	skipnz
  1478  0336  0222               	subwf	main@uiTimerOneP5s^(0+128),w
  1479                           
  1480                           ;main.c: 764: {
  1481                           ;main.c: 765: setPB3(0);
  1482  0337  3000               	movlw	0
  1483  0338  1C03               	skipc
  1484  0339  2B4E               	goto	L11
  1485  033A  118A  24EF  118A   	fcall	_setPB3
  1486                           
  1487                           ;main.c: 766: setPB4(1);
  1488  033D  3001               	movlw	1
  1489  033E  118A  24FA  118A   	fcall	_setPB4
  1490                           
  1491                           ;main.c: 767: setPB5(0);
  1492  0341  3000               	movlw	0
  1493  0342  118A  2505  118A   	fcall	_setPB5
  1494                           
  1495                           ;main.c: 769: uiTimerOneP5s = 0;
  1496  0345  1683               	bsf	3,5	;RP0=1, select bank1
  1497  0346  01A2               	clrf	main@uiTimerOneP5s^(0+128)
  1498  0347  01A3               	clrf	(main@uiTimerOneP5s+1)^(0+128)
  1499                           
  1500                           ;main.c: 770: uiTimerTwoP5s = 0;
  1501  0348  01A4               	clrf	main@uiTimerTwoP5s^(0+128)
  1502  0349  01A5               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1503                           
  1504                           ;main.c: 772: resetAllTimer();
  1505  034A  118A  2538  118A   	fcall	_resetAllTimer
  1506  034D  2A8F               	goto	l4334
  1507  034E                     L11:	
  1508                           ;main.c: 776: else
  1509                           ;main.c: 777: {
  1510                           ;main.c: 778: if( uiCh13Value < 105)
  1511                           
  1512  034E  0258               	subwf	(main@uiCh13Value+1)^(0+128),w
  1513  034F  3069               	movlw	105
  1514  0350  1903               	skipnz
  1515  0351  0257               	subwf	main@uiCh13Value^(0+128),w
  1516  0352  1803               	skipnc
  1517  0353  2B5F               	goto	l4426
  1518                           
  1519                           ;main.c: 779: {
  1520                           ;main.c: 781: if( uiTimerTwoP5s <= 10)
  1521  0354  3000               	movlw	0
  1522  0355  0225               	subwf	(main@uiTimerTwoP5s+1)^(0+128),w
  1523  0356  300B               	movlw	11
  1524  0357  1903               	skipnz
  1525  0358  0224               	subwf	main@uiTimerTwoP5s^(0+128),w
  1526  0359  1803               	skipnc
  1527  035A  2B61               	goto	l4428
  1528                           
  1529                           ;main.c: 782: uiTimerTwoP5s++;
  1530  035B  0AA4               	incf	main@uiTimerTwoP5s^(0+128),f
  1531  035C  1903               	skipnz
  1532  035D  0AA5               	incf	(main@uiTimerTwoP5s+1)^(0+128),f
  1533  035E  2B61               	goto	l4428
  1534  035F                     l4426:	
  1535                           
  1536                           ;main.c: 787: uiTimerThreeP5s = 0;
  1537  035F  01A4               	clrf	main@uiTimerTwoP5s^(0+128)
  1538  0360  01A5               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1539  0361                     l4428:	
  1540                           
  1541                           ;main.c: 788: }
  1542                           ;main.c: 790: if(uiTimerTwoP5s > 10)
  1543  0361  3000               	movlw	0
  1544  0362  0225               	subwf	(main@uiTimerTwoP5s+1)^(0+128),w
  1545  0363  300B               	movlw	11
  1546  0364  1903               	skipnz
  1547  0365  0224               	subwf	main@uiTimerTwoP5s^(0+128),w
  1548  0366  1C03               	skipc
  1549  0367  2BBA               	goto	l4310
  1550                           
  1551                           ;main.c: 791: {
  1552                           ;main.c: 792: setPB3(1);
  1553  0368  3001               	movlw	1
  1554  0369  118A  24EF  118A   	fcall	_setPB3
  1555                           
  1556                           ;main.c: 793: setPB4(0);
  1557  036C  3000               	movlw	0
  1558  036D  118A  24FA  118A   	fcall	_setPB4
  1559                           
  1560                           ;main.c: 794: setPB5(1);
  1561  0370  3001               	movlw	1
  1562  0371  118A  2505  118A   	fcall	_setPB5
  1563  0374  2BBA               	goto	l4310
  1564  0375                     l4432:	
  1565                           
  1566                           ;main.c: 813: {
  1567                           ;main.c: 814: setPB3(0);
  1568  0375  3000               	movlw	0
  1569  0376  118A  24EF  118A   	fcall	_setPB3
  1570                           
  1571                           ;main.c: 815: setPB4(0);
  1572  0379  3000               	movlw	0
  1573  037A  118A  24FA  118A   	fcall	_setPB4
  1574                           
  1575                           ;main.c: 816: setPB5(1);
  1576  037D  3001               	movlw	1
  1577  037E  118A  2505  118A   	fcall	_setPB5
  1578                           
  1579                           ;main.c: 819: setWaitResetFlag(1);
  1580  0381  3001               	movlw	1
  1581  0382  118A  262D  118A   	fcall	_setWaitResetFlag
  1582                           
  1583                           ;main.c: 820: pwm_start(150,249);
  1584  0385  30F9               	movlw	249
  1585  0386  1683               	bsf	3,5	;RP0=1, select bank1
  1586  0387  00BD               	movwf	?_pwm_start^(0+128)
  1587  0388  3096               	movlw	150
  1588  0389  118A  2569  118A   	fcall	_pwm_start
  1589                           
  1590                           ;main.c: 826: ucStep = DELAY_ONE_SECOND_FOR_PWM;
  1591  038C  3064               	movlw	100
  1592  038D                     L9:	
  1593  038D  1683               	bsf	3,5	;RP0=1, select bank1
  1594  038E  2BB4               	goto	L8
  1595  038F                     l4436:	
  1596                           ;main.c: 827: break;
  1597                           
  1598                           
  1599                           ;main.c: 831: {
  1600                           ;main.c: 832: static unsigned ucDelay1s = 0;
  1601                           ;main.c: 833: if(ucDelay1s <= 50)
  1602  038F  3000               	movlw	0
  1603  0390  0221               	subwf	(main@ucDelay1s+1)^(0+128),w
  1604  0391  3033               	movlw	51
  1605  0392  1903               	skipnz
  1606  0393  0220               	subwf	main@ucDelay1s^(0+128),w
  1607  0394  1803               	skipnc
  1608  0395  2B9A               	goto	l4440
  1609                           
  1610                           ;main.c: 834: ucDelay1s++;
  1611  0396  0AA0               	incf	main@ucDelay1s^(0+128),f
  1612  0397  1903               	skipnz
  1613  0398  0AA1               	incf	(main@ucDelay1s+1)^(0+128),f
  1614  0399  2BBA               	goto	l4310
  1615  039A                     l4440:	
  1616  039A  3065               	movlw	101
  1617                           
  1618                           ;main.c: 835: else
  1619                           ;main.c: 836: {
  1620                           ;main.c: 837: ucDelay1s = 0;
  1621  039B  01A0               	clrf	main@ucDelay1s^(0+128)
  1622  039C  01A1               	clrf	(main@ucDelay1s+1)^(0+128)
  1623                           
  1624                           ;main.c: 838: ucStep = MEET_RESET_CONDITION_STEP;
  1625  039D  2BB4               	goto	L8
  1626  039E                     l4444:	
  1627                           
  1628                           ;main.c: 848: {
  1629                           ;main.c: 849: static unsigned char ucTimerP5s = 0;
  1630                           ;main.c: 850: unsigned int ucChValue = getAdOriginalCh13Value();
  1631  039E  118A  23EC  118A   	fcall	_getAdOriginalCh13Value
  1632  03A1  0853               	movf	(?_getAdOriginalCh13Value+1)^(0+128),w
  1633  03A2  00D6               	movwf	(main@ucChValue+1)^(0+128)
  1634  03A3  0852               	movf	?_getAdOriginalCh13Value^(0+128),w
  1635  03A4  00D5               	movwf	main@ucChValue^(0+128)
  1636                           
  1637                           ;main.c: 852: if( ucChValue > 81)
  1638  03A5  3000               	movlw	0
  1639  03A6  0256               	subwf	(main@ucChValue+1)^(0+128),w
  1640  03A7  3052               	movlw	82
  1641  03A8  1903               	skipnz
  1642  03A9  0255               	subwf	main@ucChValue^(0+128),w
  1643  03AA  1C03               	skipc
  1644  03AB  2BAE               	goto	l4450
  1645                           
  1646                           ;main.c: 853: ucTimerP5s++;
  1647  03AC  0AA7               	incf	main@cTimerP5s_801^(0+128),f
  1648  03AD  2BAF               	goto	l4452
  1649  03AE                     l4450:	
  1650                           
  1651                           ;main.c: 854: else
  1652                           ;main.c: 855: ucTimerP5s = 0;
  1653  03AE  01A7               	clrf	main@cTimerP5s_801^(0+128)
  1654  03AF                     l4452:	
  1655                           
  1656                           ;main.c: 857: if(ucTimerP5s >= 50)
  1657  03AF  3032               	movlw	50
  1658  03B0  0227               	subwf	main@cTimerP5s_801^(0+128),w
  1659  03B1  1C03               	skipc
  1660  03B2  2BBA               	goto	l4310
  1661                           
  1662                           ;main.c: 858: ucStep = RESET_STEP;
  1663  03B3  3066               	movlw	102
  1664  03B4                     L8:	
  1665  03B4  00A8               	movwf	main@ucStep^(0+128)
  1666  03B5  2BBA               	goto	l4310
  1667  03B6                     l4456:	
  1668                           
  1669                           ;main.c: 863: {
  1670                           ;main.c: 864: ucStep = INIT_STEP;
  1671  03B6  01A8               	clrf	main@ucStep^(0+128)
  1672                           
  1673                           ;main.c: 865: reset();
  1674  03B7  118A  263F  118A   	fcall	_reset
  1675  03BA                     l4310:	
  1676                           ;main.c: 866: break;
  1677                           
  1678  03BA  0064               	clrwdt	;#
  1679                           
  1680                           ;main.c: 589: process_AD_Converter_Value();
  1681  03BB  118A  2491  118A   	fcall	_process_AD_Converter_Value
  1682                           
  1683                           ;main.c: 591: if( isPermitSampleTime() )
  1684  03BE  118A  2632  118A   	fcall	_isPermitSampleTime
  1685  03C1  3A00               	xorlw	0
  1686  03C2  1903               	skipnz
  1687  03C3  2BBA               	goto	l4310
  1688                           
  1689                           ;main.c: 592: {
  1690                           ;main.c: 595: clrSampeTime();
  1691  03C4  118A  263D  118A   	fcall	_clrSampeTime
  1692  03C7  1683               	bsf	3,5	;RP0=1, select bank1
  1693  03C8  0828               	movf	main@ucStep^(0+128),w
  1694                           
  1695                           ; Switch size 1, requested type "space"
  1696                           ; Number of cases is 11, Range of values is 0 to 102
  1697                           ; switch strategies available:
  1698                           ; Name         Instructions Cycles
  1699                           ; simple_byte           34    18 (average)
  1700                           ; direct_byte          213     7 (fixed)
  1701                           ; jumptable            260     6 (fixed)
  1702                           ; rangetable           107     6 (fixed)
  1703                           ; spacedrange          212     9 (fixed)
  1704                           ; locatedrange         103     3 (fixed)
  1705                           ;	Chosen strategy is simple_byte
  1706  03C9  3A00               	xorlw	0	; case 0
  1707  03CA  1903               	skipnz
  1708  03CB  2A72               	goto	l4318
  1709  03CC  3A01               	xorlw	1	; case 1
  1710  03CD  1903               	skipnz
  1711  03CE  2A93               	goto	l4336
  1712  03CF  3A03               	xorlw	3	; case 2
  1713  03D0  1903               	skipnz
  1714  03D1  2AB2               	goto	l4344
  1715  03D2  3A01               	xorlw	1	; case 3
  1716  03D3  1903               	skipnz
  1717  03D4  2ACE               	goto	l4360
  1718  03D5  3A07               	xorlw	7	; case 4
  1719  03D6  1903               	skipnz
  1720  03D7  2ADB               	goto	l4364
  1721  03D8  3A01               	xorlw	1	; case 5
  1722  03D9  1903               	skipnz
  1723  03DA  2AF5               	goto	l4380
  1724  03DB  3A03               	xorlw	3	; case 6
  1725  03DC  1903               	skipnz
  1726  03DD  2B0E               	goto	l4392
  1727  03DE  3A65               	xorlw	101	; case 99
  1728  03DF  1903               	skipnz
  1729  03E0  2B75               	goto	l4432
  1730  03E1  3A07               	xorlw	7	; case 100
  1731  03E2  1903               	skipnz
  1732  03E3  2B8F               	goto	l4436
  1733  03E4  3A01               	xorlw	1	; case 101
  1734  03E5  1903               	skipnz
  1735  03E6  2B9E               	goto	l4444
  1736  03E7  3A03               	xorlw	3	; case 102
  1737  03E8  1903               	skipnz
  1738  03E9  2BB6               	goto	l4456
  1739  03EA  2BEB               	goto	l742
  1740  03EB                     l742:	
  1741  03EB  2BBA               	goto	l4310
  1742  03EC                     __end_of_main:	
  1743                           
  1744                           	psect	text1427
  1745  03EC                     __ptext1427:	
  1746 ;; =============== function _main ends ============
  1747                           
  1748                           
  1749 ;; *************** function _getAdOriginalCh13Value *****************
  1750 ;; Defined at:
  1751 ;;		line 397 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;		None
  1754 ;; Auto vars:     Size  Location     Type
  1755 ;;		None
  1756 ;; Return value:  Size  Location     Type
  1757 ;;                  2   21[BANK1 ] unsigned int 
  1758 ;; Registers used:
  1759 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1760 ;; Tracked objects:
  1761 ;;		On entry : 40/0
  1762 ;;		On exit  : 160/20
  1763 ;;		Unchanged: FFE00/0
  1764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1765 ;;      Params:         0       0       2       0       0
  1766 ;;      Locals:         0       0       0       0       0
  1767 ;;      Temps:          0       0       0       0       0
  1768 ;;      Totals:         0       0       2       0       0
  1769 ;;Total ram usage:        2 bytes
  1770 ;; Hardware stack levels used:    1
  1771 ;; Hardware stack levels required when called:    4
  1772 ;; This function calls:
  1773 ;;		_FilterCh13
  1774 ;; This function is called by:
  1775 ;;		_main
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778  03EC                     _getAdOriginalCh13Value:	
  1779                           
  1780                           ;common.c: 399: return FilterCh13(uiSampleCh13);
  1781                           
  1782                           ; Regs used in _getAdOriginalCh13Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  1783  03EC  30B1               	movlw	_uiSampleCh13& (0+255)
  1784  03ED  23F3               	fcall	_FilterCh13
  1785  03EE  083E               	movf	(?_FilterCh13+1)^(0+128),w
  1786  03EF  00D3               	movwf	(?_getAdOriginalCh13Value+1)^(0+128)
  1787  03F0  083D               	movf	?_FilterCh13^(0+128),w
  1788  03F1  00D2               	movwf	?_getAdOriginalCh13Value^(0+128)
  1789  03F2  0008               	return
  1790  03F3                     __end_of_getAdOriginalCh13Value:	
  1791  03F3                     __ptext1435:	
  1792 ;; =============== function _getAD_ConvertFlag ends ============
  1793                           
  1794                           
  1795 ;; *************** function _FilterCh13 *****************
  1796 ;; Defined at:
  1797 ;;		line 76 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;  tmpValue        1    wreg     PTR unsigned int 
  1800 ;;		 -> uiSampleCh13(6), 
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;  tmpValue        1    6[BANK1 ] PTR unsigned int 
  1803 ;;		 -> uiSampleCh13(6), 
  1804 ;;  cir             2   17[BANK1 ] int 
  1805 ;;  filter_buf      6   11[BANK1 ] unsigned int [3]
  1806 ;;  filter_sum      2    9[BANK1 ] unsigned int 
  1807 ;;  filter_temp     2    7[BANK1 ] unsigned int 
  1808 ;;  i               1   20[BANK1 ] unsigned char 
  1809 ;;  j               1   19[BANK1 ] unsigned char 
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  2    0[BANK1 ] unsigned int 
  1812 ;; Registers used:
  1813 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1814 ;; Tracked objects:
  1815 ;;		On entry : 40/0
  1816 ;;		On exit  : 160/20
  1817 ;;		Unchanged: FFE00/0
  1818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1819 ;;      Params:         0       0       2       0       0
  1820 ;;      Locals:         0       0      15       0       0
  1821 ;;      Temps:          0       0       4       0       0
  1822 ;;      Totals:         0       0      21       0       0
  1823 ;;Total ram usage:       21 bytes
  1824 ;; Hardware stack levels used:    1
  1825 ;; Hardware stack levels required when called:    3
  1826 ;; This function calls:
  1827 ;;		Nothing
  1828 ;; This function is called by:
  1829 ;;		_getAdOriginalCh13Value
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832  03F3                     _FilterCh13:	
  1833                           
  1834                           ; Regs used in _FilterCh13: [wreg-fsr0h+status,2+status,0+btemp+1]
  1835                           ;FilterCh13@tmpValue stored from wreg
  1836  03F3  1683               	bsf	3,5	;RP0=1, select bank1
  1837  03F4  00C3               	movwf	FilterCh13@tmpValue^(0+128)
  1838  03F5  01D0               	clrf	FilterCh13@j^(0+128)
  1839                           
  1840                           ;common.c: 79: unsigned int filter_temp = 0, filter_sum = 0;
  1841  03F6  01C4               	clrf	FilterCh13@filter_temp^(0+128)
  1842  03F7  01C5               	clrf	(FilterCh13@filter_temp+1)^(0+128)
  1843  03F8  01C6               	clrf	FilterCh13@filter_sum^(0+128)
  1844  03F9  01C7               	clrf	(FilterCh13@filter_sum+1)^(0+128)
  1845                           
  1846                           ;common.c: 81: unsigned int filter_buf[3];
  1847                           ;common.c: 83: for(int cir = 0;cir < 3; cir++)
  1848  03FA  01CE               	clrf	FilterCh13@cir^(0+128)
  1849  03FB  01CF               	clrf	(FilterCh13@cir+1)^(0+128)
  1850  03FC                     l4208:	
  1851                           
  1852                           ;common.c: 84: filter_buf[cir] = *tmpValue++;
  1853  03FC  1683               	bsf	3,5	;RP0=1, select bank1
  1854  03FD  1303               	bcf	3,6	;RP1=0, select bank1
  1855  03FE  0843               	movf	FilterCh13@tmpValue^(0+128),w
  1856  03FF  0084               	movwf	4
  1857  0400  1383               	bcf	3,7	;select IRP bank0
  1858  0401  247C  118A         	fcall	PL5	;call to abstracted procedure
  1859  0403  0D4E               	rlf	FilterCh13@cir^(0+128),w
  1860  0404  2483  118A         	fcall	PL6	;call to abstracted procedure
  1861  0406  0AC3               	incf	FilterCh13@tmpValue^(0+128),f
  1862  0407  0AC3               	incf	FilterCh13@tmpValue^(0+128),f
  1863  0408  0ACE               	incf	FilterCh13@cir^(0+128),f
  1864  0409  1903               	skipnz
  1865  040A  0ACF               	incf	(FilterCh13@cir+1)^(0+128),f
  1866  040B  084F               	movf	(FilterCh13@cir+1)^(0+128),w
  1867  040C  3A80               	xorlw	128
  1868  040D  00FF               	movwf	127
  1869  040E  3080               	movlw	128
  1870  040F  027F               	subwf	127,w
  1871  0410  1D03               	skipz
  1872  0411  2C14               	goto	u1915
  1873  0412  3003               	movlw	3
  1874  0413  024E               	subwf	FilterCh13@cir^(0+128),w
  1875  0414                     u1915:	
  1876  0414  1C03               	skipc
  1877  0415  2BFC               	goto	l4208
  1878                           
  1879                           ;common.c: 88: for(j = 0; j < 3 - 1; j++)
  1880  0416  1683               	bsf	3,5	;RP0=1, select bank1
  1881  0417  1303               	bcf	3,6	;RP1=0, select bank1
  1882  0418  01D0               	clrf	FilterCh13@j^(0+128)
  1883                           
  1884                           ;common.c: 89: {
  1885                           ;common.c: 90: for(i = 0; i < 3 - 1 - j; i++)
  1886  0419  01D1               	clrf	FilterCh13@i^(0+128)
  1887  041A                     l4230:	
  1888  041A  01C0               	clrf	(??_FilterCh13^(0+128)+1)
  1889  041B  0850               	movf	FilterCh13@j^(0+128),w
  1890  041C  3C02               	sublw	2
  1891  041D  00BF               	movwf	??_FilterCh13^(0+128)
  1892  041E  1C03               	skipc
  1893  041F  03C0               	decf	(??_FilterCh13^(0+128)+1),f
  1894  0420  0840               	movf	(??_FilterCh13+1)^(0+128),w
  1895  0421  3A80               	xorlw	128
  1896  0422  3C80               	sublw	128
  1897  0423  1D03               	skipz
  1898  0424  2C27               	goto	u1935
  1899  0425  083F               	movf	??_FilterCh13^(0+128),w
  1900  0426  0251               	subwf	FilterCh13@i^(0+128),w
  1901  0427                     u1935:	
  1902  0427  1803               	btfsc	3,0
  1903  0428  2C56               	goto	l4232
  1904                           
  1905                           ;common.c: 91: {
  1906                           ;common.c: 92: if(filter_buf[i] > filter_buf[i + 1])
  1907  0429  1683               	bsf	3,5	;RP0=1, select bank1
  1908  042A  1303               	bcf	3,6	;RP1=0, select bank1
  1909  042B  1003               	clrc
  1910  042C  2472  118A         	fcall	PL4	;call to abstracted procedure
  1911  042E  248B  118A         	fcall	PL8	;call to abstracted procedure
  1912  0430  0800               	movf	0,w
  1913  0431  00C1               	movwf	(??_FilterCh13+2)^(0+128)
  1914  0432  0A84               	incf	4,f
  1915  0433  0800               	movf	0,w
  1916  0434  00C2               	movwf	((??_FilterCh13+2)^(0+128)+1)
  1917  0435  0840               	movf	(??_FilterCh13+1)^(0+128),w
  1918  0436  0242               	subwf	(??_FilterCh13+3)^(0+128),w
  1919  0437  1D03               	skipz
  1920  0438  2C3B               	goto	u1925
  1921  0439  083F               	movf	??_FilterCh13^(0+128),w
  1922  043A  0241               	subwf	(??_FilterCh13+2)^(0+128),w
  1923  043B                     u1925:	
  1924  043B  1803               	skipnc
  1925  043C  2C54               	goto	l4228
  1926                           
  1927                           ;common.c: 93: {
  1928                           ;common.c: 95: filter_temp = filter_buf[i];
  1929  043D  1003               	clrc
  1930  043E  0D51               	rlf	FilterCh13@i^(0+128),w
  1931  043F  3EC8               	addlw	FilterCh13@filter_buf& (0+255)
  1932  0440  0084               	movwf	4
  1933  0441  0800               	movf	0,w
  1934  0442  00C4               	movwf	FilterCh13@filter_temp^(0+128)
  1935  0443  0A84               	incf	4,f
  1936  0444  0800               	movf	0,w
  1937  0445  00C5               	movwf	(FilterCh13@filter_temp+1)^(0+128)
  1938                           
  1939                           ;common.c: 97: filter_buf[i] = filter_buf[i + 1];
  1940  0446  248B  118A         	fcall	PL8	;call to abstracted procedure
  1941  0448  247C  118A         	fcall	PL5	;call to abstracted procedure
  1942  044A  0D51               	rlf	FilterCh13@i^(0+128),w
  1943  044B  2483  118A         	fcall	PL6	;call to abstracted procedure
  1944                           
  1945                           ;common.c: 99: filter_buf[i + 1] = filter_temp;
  1946  044D  248B  118A         	fcall	PL8	;call to abstracted procedure
  1947  044F  0844               	movf	FilterCh13@filter_temp^(0+128),w
  1948  0450  0080               	movwf	0
  1949  0451  0A84               	incf	4,f
  1950  0452  0845               	movf	(FilterCh13@filter_temp+1)^(0+128),w
  1951  0453  0080               	movwf	0
  1952  0454                     l4228:	
  1953  0454  0AD1               	incf	FilterCh13@i^(0+128),f
  1954  0455  2C1A               	goto	l4230
  1955  0456                     l4232:	
  1956  0456  1683               	bsf	3,5	;RP0=1, select bank1
  1957  0457  3002               	movlw	2
  1958  0458  1303               	bcf	3,6	;RP1=0, select bank1
  1959  0459  0AD0               	incf	FilterCh13@j^(0+128),f
  1960  045A  0250               	subwf	FilterCh13@j^(0+128),w
  1961                           
  1962                           ;common.c: 100: }
  1963                           ;common.c: 101: }
  1964                           ;common.c: 102: }
  1965                           ;common.c: 104: for(i = 1; i < 3 - 1; i++)
  1966  045B  01D1               	clrf	FilterCh13@i^(0+128)
  1967  045C  1C03               	skipc
  1968  045D  2C1A               	goto	l4230
  1969  045E  0AD1               	incf	FilterCh13@i^(0+128),f
  1970                           
  1971                           ;common.c: 105: {
  1972                           ;common.c: 106: filter_sum += filter_buf[i];
  1973  045F  1003               	clrc
  1974  0460                     L14:	
  1975  0460  2472  118A         	fcall	PL4	;call to abstracted procedure
  1976  0462  083F               	movf	??_FilterCh13^(0+128),w
  1977  0463  07C6               	addwf	FilterCh13@filter_sum^(0+128),f
  1978  0464  1803               	skipnc
  1979  0465  0AC7               	incf	(FilterCh13@filter_sum+1)^(0+128),f
  1980  0466  0840               	movf	(??_FilterCh13+1)^(0+128),w
  1981  0467  07C7               	addwf	(FilterCh13@filter_sum+1)^(0+128),f
  1982  0468  3002               	movlw	2
  1983  0469  0AD1               	incf	FilterCh13@i^(0+128),f
  1984  046A  0251               	subwf	FilterCh13@i^(0+128),w
  1985  046B  1C03               	skipc
  1986  046C  2C60               	goto	L14
  1987                           
  1988                           ;common.c: 107: }
  1989                           ;common.c: 110: return (filter_sum >> 0 );
  1990  046D  0847               	movf	(FilterCh13@filter_sum+1)^(0+128),w
  1991  046E  00BE               	movwf	(?_FilterCh13+1)^(0+128)
  1992  046F  0846               	movf	FilterCh13@filter_sum^(0+128),w
  1993  0470  00BD               	movwf	?_FilterCh13^(0+128)
  1994  0471  0008               	return
  1995  0472                     __end_of_FilterCh13:	
  1996  0472                     PL4:	
  1997  0472  0D51               	rlf	FilterCh13@i^(0+128),w
  1998  0473  3EC8               	addlw	FilterCh13@filter_buf& (0+255)
  1999  0474  0084               	movwf	4
  2000  0475  1383               	bcf	3,7	;select IRP bank1
  2001  0476  0800               	movf	0,w
  2002  0477  00BF               	movwf	??_FilterCh13^(0+128)
  2003  0478  0A84               	incf	4,f
  2004  0479  0800               	movf	0,w
  2005  047A  00C0               	movwf	(??_FilterCh13^(0+128)+1)
  2006  047B  0008               	return
  2007  047C                     PL5:	
  2008  047C  0800               	movf	0,w
  2009  047D  00BF               	movwf	??_FilterCh13^(0+128)
  2010  047E  0A84               	incf	4,f
  2011  047F  0800               	movf	0,w
  2012  0480  00C0               	movwf	(??_FilterCh13^(0+128)+1)
  2013  0481  1003               	clrc
  2014  0482  0008               	return
  2015  0483                     PL6:	
  2016  0483  3EC8               	addlw	FilterCh13@filter_buf& (0+255)
  2017  0484  0084               	movwf	4
  2018  0485  083F               	movf	??_FilterCh13^(0+128),w
  2019  0486  0080               	movwf	0
  2020  0487  0A84               	incf	4,f
  2021  0488  0840               	movf	(??_FilterCh13+1)^(0+128),w
  2022  0489  0080               	movwf	0
  2023  048A  0008               	return
  2024  048B                     PL8:	
  2025  048B  1003               	clrc
  2026  048C  0D51               	rlf	FilterCh13@i^(0+128),w
  2027  048D  3E02               	addlw	2
  2028  048E  3EC8               	addlw	FilterCh13@filter_buf& (0+255)
  2029  048F  0084               	movwf	4
  2030  0490  0008               	return
  2031                           
  2032                           	psect	text1428
  2033  0491                     __ptext1428:	
  2034 ;; =============== function _getAdOriginalCh13Value ends ============
  2035                           
  2036                           
  2037 ;; *************** function _process_AD_Converter_Value *****************
  2038 ;; Defined at:
  2039 ;;		line 419 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2040 ;; Parameters:    Size  Location     Type
  2041 ;;		None
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;		None
  2044 ;; Return value:  Size  Location     Type
  2045 ;;		None               void
  2046 ;; Registers used:
  2047 ;;		wreg, status,2, status,0, pclath, cstack
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/0
  2050 ;;		On exit  : 60/0
  2051 ;;		Unchanged: FFF9F/0
  2052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2053 ;;      Params:         0       0       0       0       0
  2054 ;;      Locals:         0       0       0       0       0
  2055 ;;      Temps:          0       0       0       0       0
  2056 ;;      Totals:         0       0       0       0       0
  2057 ;;Total ram usage:        0 bytes
  2058 ;; Hardware stack levels used:    1
  2059 ;; Hardware stack levels required when called:    4
  2060 ;; This function calls:
  2061 ;;		_getAD_ConvertFlag
  2062 ;;		_setAD_ConvertFlag
  2063 ;;		_AD_Sample
  2064 ;;		_adc_test_init
  2065 ;;		_adc_start
  2066 ;; This function is called by:
  2067 ;;		_main
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070  0491                     _process_AD_Converter_Value:	
  2071                           
  2072                           ;common.c: 420: if(getAD_ConvertFlag())
  2073                           
  2074                           ; Regs used in _process_AD_Converter_Value: [wreg+status,2+status,0+pclath+cstack]
  2075  0491  24AA  118A         	fcall	_getAD_ConvertFlag
  2076  0493  3A00               	xorlw	0
  2077  0494  1903               	skipnz
  2078  0495  0008               	return
  2079                           
  2080                           ;common.c: 421: {
  2081                           ;common.c: 422: setAD_ConvertFlag(0);
  2082  0496  3000               	movlw	0
  2083  0497  24AE  118A         	fcall	_setAD_ConvertFlag
  2084                           
  2085                           ;common.c: 423: AD_Sample();
  2086  0499  24B3  118A         	fcall	_AD_Sample
  2087                           
  2088                           ;common.c: 424: if(2 == sampleChannelSelect)
  2089  049B  0865               	movf	_sampleChannelSelect,w
  2090  049C  3A02               	xorlw	2
  2091                           
  2092                           ;common.c: 425: adc_test_init(2,3);
  2093  049D  3003               	movlw	3
  2094  049E  1D03               	skipz
  2095  049F  2CA4               	goto	L13
  2096  04A0  1683               	bsf	3,5	;RP0=1, select bank1
  2097  04A1  00BD               	movwf	?_adc_test_init^(0+128)
  2098  04A2  3002               	movlw	2
  2099  04A3  2CA7               	goto	L12
  2100  04A4                     L13:	
  2101                           ;common.c: 426: else
  2102                           ;common.c: 427: adc_test_init(1,3);
  2103                           
  2104  04A4  1683               	bsf	3,5	;RP0=1, select bank1
  2105  04A5  00BD               	movwf	?_adc_test_init^(0+128)
  2106  04A6  3001               	movlw	1
  2107  04A7                     L12:	
  2108  04A7  24C7  118A         	fcall	_adc_test_init
  2109                           
  2110                           ;common.c: 428: adc_start();
  2111  04A9  2CE3               	ljmp	l4096
  2112  04AA                     __end_of_process_AD_Converter_Value:	
  2113  04AA                     __ptext1434:	
  2114 ;; =============== function _setAD_ConvertFlag ends ============
  2115                           
  2116                           
  2117 ;; *************** function _getAD_ConvertFlag *****************
  2118 ;; Defined at:
  2119 ;;		line 368 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;		None
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;		None
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  1    wreg      unsigned char 
  2126 ;; Registers used:
  2127 ;;		wreg
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 60/0
  2131 ;;		Unchanged: FFF9F/0
  2132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2133 ;;      Params:         0       0       0       0       0
  2134 ;;      Locals:         0       0       0       0       0
  2135 ;;      Temps:          0       0       0       0       0
  2136 ;;      Totals:         0       0       0       0       0
  2137 ;;Total ram usage:        0 bytes
  2138 ;; Hardware stack levels used:    1
  2139 ;; Hardware stack levels required when called:    3
  2140 ;; This function calls:
  2141 ;;		Nothing
  2142 ;; This function is called by:
  2143 ;;		_process_AD_Converter_Value
  2144 ;; This function uses a non-reentrant model
  2145 ;;
  2146  04AA                     _getAD_ConvertFlag:	
  2147                           
  2148                           ;common.c: 369: return adc_convert_flag;
  2149                           
  2150                           ; Regs used in _getAD_ConvertFlag: [wreg]
  2151  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  2152  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  2153  04AC  085A               	movf	_adc_convert_flag,w
  2154  04AD  0008               	return
  2155  04AE                     __end_of_getAD_ConvertFlag:	
  2156  04AE                     __ptext1433:	
  2157 ;; =============== function _AD_Sample ends ============
  2158                           
  2159                           
  2160 ;; *************** function _setAD_ConvertFlag *****************
  2161 ;; Defined at:
  2162 ;;		line 374 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;  flag            1    wreg     unsigned char 
  2165 ;; Auto vars:     Size  Location     Type
  2166 ;;  flag            1    0[BANK1 ] unsigned char 
  2167 ;; Return value:  Size  Location     Type
  2168 ;;		None               void
  2169 ;; Registers used:
  2170 ;;		wreg
  2171 ;; Tracked objects:
  2172 ;;		On entry : 60/0
  2173 ;;		On exit  : 60/0
  2174 ;;		Unchanged: FFF9F/0
  2175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2176 ;;      Params:         0       0       0       0       0
  2177 ;;      Locals:         0       0       1       0       0
  2178 ;;      Temps:          0       0       0       0       0
  2179 ;;      Totals:         0       0       1       0       0
  2180 ;;Total ram usage:        1 bytes
  2181 ;; Hardware stack levels used:    1
  2182 ;; Hardware stack levels required when called:    3
  2183 ;; This function calls:
  2184 ;;		Nothing
  2185 ;; This function is called by:
  2186 ;;		_process_AD_Converter_Value
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189  04AE                     _setAD_ConvertFlag:	
  2190                           
  2191                           ; Regs used in _setAD_ConvertFlag: [wreg]
  2192                           ;setAD_ConvertFlag@flag stored from wreg
  2193  04AE  1683               	bsf	3,5	;RP0=1, select bank1
  2194  04AF  00BD               	movwf	setAD_ConvertFlag@flag^(0+128)
  2195                           
  2196                           ;common.c: 375: adc_convert_flag = flag;
  2197  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  2198  04B1  00DA               	movwf	_adc_convert_flag
  2199  04B2  0008               	return
  2200  04B3                     __end_of_setAD_ConvertFlag:	
  2201  04B3                     __ptext1432:	
  2202 ;; =============== function _initPin ends ============
  2203                           
  2204                           
  2205 ;; *************** function _AD_Sample *****************
  2206 ;; Defined at:
  2207 ;;		line 442 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2208 ;; Parameters:    Size  Location     Type
  2209 ;;		None
  2210 ;; Auto vars:     Size  Location     Type
  2211 ;;		None
  2212 ;; Return value:  Size  Location     Type
  2213 ;;		None               void
  2214 ;; Registers used:
  2215 ;;		wreg, status,2, status,0
  2216 ;; Tracked objects:
  2217 ;;		On entry : 60/0
  2218 ;;		On exit  : 60/0
  2219 ;;		Unchanged: FFF9F/0
  2220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2221 ;;      Params:         0       0       0       0       0
  2222 ;;      Locals:         0       0       0       0       0
  2223 ;;      Temps:          0       0       0       0       0
  2224 ;;      Totals:         0       0       0       0       0
  2225 ;;Total ram usage:        0 bytes
  2226 ;; Hardware stack levels used:    1
  2227 ;; Hardware stack levels required when called:    3
  2228 ;; This function calls:
  2229 ;;		Nothing
  2230 ;; This function is called by:
  2231 ;;		_process_AD_Converter_Value
  2232 ;; This function uses a non-reentrant model
  2233 ;;
  2234  04B3                     _AD_Sample:	
  2235                           
  2236                           ;common.c: 443: if(sampleTimes < 3)
  2237                           
  2238                           ; Regs used in _AD_Sample: [wreg+status,2+status,0]
  2239  04B3  3003               	movlw	3
  2240  04B4  0260               	subwf	_sampleTimes,w
  2241  04B5  1803               	skipnc
  2242  04B6  0008               	return
  2243  04B7  3003               	movlw	3
  2244                           
  2245                           ;common.c: 444: {
  2246                           ;common.c: 445: sampleTimes++;
  2247  04B8  0AE0               	incf	_sampleTimes,f
  2248                           
  2249                           ;common.c: 447: if(sampleTimes >= 3)
  2250  04B9  0260               	subwf	_sampleTimes,w
  2251  04BA  1C03               	skipc
  2252  04BB  0008               	return
  2253                           
  2254                           ;common.c: 448: {
  2255                           ;common.c: 449: sampleTimes = 0;
  2256  04BC  01E0               	clrf	_sampleTimes
  2257                           
  2258                           ;common.c: 451: if(sampleChannelSelect == 2)
  2259  04BD  0865               	movf	_sampleChannelSelect,w
  2260  04BE  3A02               	xorlw	2
  2261  04BF  1D03               	skipz
  2262  04C0  2CC4               	goto	l4268
  2263                           
  2264                           ;common.c: 452: {
  2265                           ;common.c: 453: sampleChannelSelect = 1;
  2266  04C1  01E5               	clrf	_sampleChannelSelect
  2267  04C2  0AE5               	incf	_sampleChannelSelect,f
  2268                           
  2269                           ;common.c: 454: }
  2270  04C3  0008               	return
  2271  04C4                     l4268:	
  2272                           
  2273                           ;common.c: 456: else
  2274                           ;common.c: 457: {
  2275                           ;common.c: 458: sampleChannelSelect = 2;
  2276  04C4  3002               	movlw	2
  2277  04C5  00E5               	movwf	_sampleChannelSelect
  2278  04C6  0008               	return
  2279  04C7                     __end_of_AD_Sample:	
  2280  04C7                     __ptext1448:	
  2281 ;; =============== function _startTwentyMinTimer ends ============
  2282                           
  2283                           
  2284 ;; *************** function _adc_test_init *****************
  2285 ;; Defined at:
  2286 ;;		line 122 in file "D:\develop\AK7030-good\AK7030-OTP\periph.c"
  2287 ;; Parameters:    Size  Location     Type
  2288 ;;  channel         1    wreg     unsigned char 
  2289 ;;  ref             1    0[BANK1 ] unsigned char 
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;  channel         1    2[BANK1 ] unsigned char 
  2292 ;; Return value:  Size  Location     Type
  2293 ;;		None               void
  2294 ;; Registers used:
  2295 ;;		wreg, status,2, status,0
  2296 ;; Tracked objects:
  2297 ;;		On entry : 60/20
  2298 ;;		On exit  : 60/20
  2299 ;;		Unchanged: FFF9F/0
  2300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2301 ;;      Params:         0       0       1       0       0
  2302 ;;      Locals:         0       0       1       0       0
  2303 ;;      Temps:          0       0       1       0       0
  2304 ;;      Totals:         0       0       3       0       0
  2305 ;;Total ram usage:        3 bytes
  2306 ;; Hardware stack levels used:    1
  2307 ;; Hardware stack levels required when called:    3
  2308 ;; This function calls:
  2309 ;;		Nothing
  2310 ;; This function is called by:
  2311 ;;		_main
  2312 ;;		_process_AD_Converter_Value
  2313 ;; This function uses a non-reentrant model
  2314 ;;
  2315  04C7                     _adc_test_init:	
  2316                           
  2317                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  2318                           ;adc_test_init@channel stored from wreg
  2319  04C7  00BF               	movwf	adc_test_init@channel^(0+128)
  2320                           
  2321                           ;periph.c: 123: ADCON0 = 0x40;
  2322  04C8  3040               	movlw	64
  2323  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  2324  04CA  009F               	movwf	31	;volatile
  2325                           
  2326                           ;periph.c: 124: ADCON0|=channel<<2;
  2327  04CB  1683               	bsf	3,5	;RP0=1, select bank1
  2328  04CC  083F               	movf	adc_test_init@channel^(0+128),w
  2329  04CD  00BE               	movwf	??_adc_test_init^(0+128)
  2330  04CE  1003               	clrc
  2331  04CF  0DBE               	rlf	??_adc_test_init^(0+128),f
  2332  04D0  1003               	clrc
  2333  04D1  0D3E               	rlf	??_adc_test_init^(0+128),w
  2334  04D2  1283               	bcf	3,5	;RP0=0, select bank0
  2335  04D3  049F               	iorwf	31,f	;volatile
  2336                           
  2337                           ;periph.c: 125: ADCON1 = 0x35;
  2338  04D4  3035               	movlw	53
  2339  04D5  1683               	bsf	3,5	;RP0=1, select bank1
  2340  04D6  009F               	movwf	31	;volatile
  2341                           
  2342                           ;periph.c: 126: ADCON1|=ref<<6;
  2343  04D7  083D               	movf	adc_test_init@ref^(0+128),w
  2344  04D8  00BE               	movwf	??_adc_test_init^(0+128)
  2345  04D9  0CBE               	rrf	??_adc_test_init^(0+128),f
  2346  04DA  0CBE               	rrf	??_adc_test_init^(0+128),f
  2347  04DB  0C3E               	rrf	??_adc_test_init^(0+128),w
  2348  04DC  39C0               	andlw	192
  2349  04DD  049F               	iorwf	31,f	;volatile
  2350                           
  2351                           ;periph.c: 127: ADON=1;
  2352  04DE  1283               	bcf	3,5	;RP0=0, select bank0
  2353  04DF  141F               	bsf	31,0
  2354                           
  2355                           ;periph.c: 128: ADIE=1;
  2356  04E0  1683               	bsf	3,5	;RP0=1, select bank1
  2357  04E1  150D               	bsf	13,2
  2358  04E2  0008               	return
  2359  04E3                     __end_of_adc_test_init:	
  2360  04E3                     __ptext1446:	
  2361 ;; =============== function _isPermitSampleTime ends ============
  2362                           
  2363                           
  2364 ;; *************** function _adc_start *****************
  2365 ;; Defined at:
  2366 ;;		line 138 in file "D:\develop\AK7030-good\AK7030-OTP\periph.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;		None
  2369 ;; Auto vars:     Size  Location     Type
  2370 ;;		None
  2371 ;; Return value:  Size  Location     Type
  2372 ;;		None               void
  2373 ;; Registers used:
  2374 ;;		None
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 60/0
  2378 ;;		Unchanged: FFF9F/0
  2379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2380 ;;      Params:         0       0       0       0       0
  2381 ;;      Locals:         0       0       0       0       0
  2382 ;;      Temps:          0       0       0       0       0
  2383 ;;      Totals:         0       0       0       0       0
  2384 ;;Total ram usage:        0 bytes
  2385 ;; Hardware stack levels used:    1
  2386 ;; Hardware stack levels required when called:    3
  2387 ;; This function calls:
  2388 ;;		Nothing
  2389 ;; This function is called by:
  2390 ;;		_main
  2391 ;;		_process_AD_Converter_Value
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394  04E3                     _adc_start:	
  2395  04E3                     l4096:	
  2396                           ; Regs used in _adc_start: []
  2397                           
  2398                           
  2399                           ;periph.c: 139: GO=1;
  2400  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  2401  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  2402  04E5  149F               	bsf	31,1
  2403  04E6  0008               	return
  2404  04E7                     __end_of_adc_start:	
  2405                           
  2406                           	psect	text1429
  2407  0538                     __ptext1429:	
  2408 ;; =============== function _process_AD_Converter_Value ends ============
  2409                           
  2410                           
  2411 ;; *************** function _resetAllTimer *****************
  2412 ;; Defined at:
  2413 ;;		line 494 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2414 ;; Parameters:    Size  Location     Type
  2415 ;;		None
  2416 ;; Auto vars:     Size  Location     Type
  2417 ;;		None
  2418 ;; Return value:  Size  Location     Type
  2419 ;;		None               void
  2420 ;; Registers used:
  2421 ;;		status,2, status,0, pclath, cstack
  2422 ;; Tracked objects:
  2423 ;;		On entry : 160/20
  2424 ;;		On exit  : 160/0
  2425 ;;		Unchanged: FFE9F/0
  2426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2427 ;;      Params:         0       0       0       0       0
  2428 ;;      Locals:         0       0       0       0       0
  2429 ;;      Temps:          0       0       0       0       0
  2430 ;;      Totals:         0       0       0       0       0
  2431 ;;Total ram usage:        0 bytes
  2432 ;; Hardware stack levels used:    1
  2433 ;; Hardware stack levels required when called:    4
  2434 ;; This function calls:
  2435 ;;		_clearTwelveHoursTimer
  2436 ;;		_clearThreeHoursTimer
  2437 ;;		_clearOneHoursTimer
  2438 ;;		_clearTwentyMinTimer
  2439 ;; This function is called by:
  2440 ;;		_main
  2441 ;; This function uses a non-reentrant model
  2442 ;;
  2443  0538                     _resetAllTimer:	
  2444                           
  2445                           ;main.c: 495: clearTwelveHoursTimer();
  2446                           
  2447                           ; Regs used in _resetAllTimer: [status,2+status,0+pclath+cstack]
  2448  0538  253F  118A         	fcall	_clearTwelveHoursTimer
  2449                           
  2450                           ;main.c: 496: clearThreeHoursTimer();
  2451  053A  2544  118A         	fcall	_clearThreeHoursTimer
  2452                           
  2453                           ;main.c: 497: clearOneHoursTimer();
  2454  053C  2549  118A         	fcall	_clearOneHoursTimer
  2455                           
  2456                           ;main.c: 498: clearTwentyMinTimer();
  2457  053E  2D4D               	ljmp	l4056
  2458  053F                     __end_of_resetAllTimer:	
  2459  053F                     __ptext1457:	
  2460 ;; =============== function _clearThreeHoursTimer ends ============
  2461                           
  2462                           
  2463 ;; *************** function _clearTwelveHoursTimer *****************
  2464 ;; Defined at:
  2465 ;;		line 485 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2466 ;; Parameters:    Size  Location     Type
  2467 ;;		None
  2468 ;; Auto vars:     Size  Location     Type
  2469 ;;		None
  2470 ;; Return value:  Size  Location     Type
  2471 ;;		None               void
  2472 ;; Registers used:
  2473 ;;		status,2
  2474 ;; Tracked objects:
  2475 ;;		On entry : 40/20
  2476 ;;		On exit  : 60/0
  2477 ;;		Unchanged: FFF9F/0
  2478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2479 ;;      Params:         0       0       0       0       0
  2480 ;;      Locals:         0       0       0       0       0
  2481 ;;      Temps:          0       0       0       0       0
  2482 ;;      Totals:         0       0       0       0       0
  2483 ;;Total ram usage:        0 bytes
  2484 ;; Hardware stack levels used:    1
  2485 ;; Hardware stack levels required when called:    3
  2486 ;; This function calls:
  2487 ;;		Nothing
  2488 ;; This function is called by:
  2489 ;;		_resetAllTimer
  2490 ;;		_main
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493  053F                     _clearTwelveHoursTimer:	
  2494                           
  2495                           ;common.c: 486: uiBigTimer = 0;
  2496                           
  2497                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  2498  053F  1283               	bcf	3,5	;RP0=0, select bank0
  2499  0540  01C5               	clrf	_uiBigTimer
  2500  0541  01C6               	clrf	_uiBigTimer+1
  2501                           
  2502                           ;common.c: 487: bBigTimerStartFlag = 0;
  2503  0542  01DB               	clrf	_bBigTimerStartFlag
  2504  0543  0008               	return
  2505  0544                     __end_of_clearTwelveHoursTimer:	
  2506  0544                     __ptext1456:	
  2507 ;; =============== function _clearOneHoursTimer ends ============
  2508                           
  2509                           
  2510 ;; *************** function _clearThreeHoursTimer *****************
  2511 ;; Defined at:
  2512 ;;		line 492 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;		None
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;		None
  2517 ;; Return value:  Size  Location     Type
  2518 ;;		None               void
  2519 ;; Registers used:
  2520 ;;		status,2
  2521 ;; Tracked objects:
  2522 ;;		On entry : 40/20
  2523 ;;		On exit  : 60/0
  2524 ;;		Unchanged: FFF9F/0
  2525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2526 ;;      Params:         0       0       0       0       0
  2527 ;;      Locals:         0       0       0       0       0
  2528 ;;      Temps:          0       0       0       0       0
  2529 ;;      Totals:         0       0       0       0       0
  2530 ;;Total ram usage:        0 bytes
  2531 ;; Hardware stack levels used:    1
  2532 ;; Hardware stack levels required when called:    3
  2533 ;; This function calls:
  2534 ;;		Nothing
  2535 ;; This function is called by:
  2536 ;;		_resetAllTimer
  2537 ;;		_main
  2538 ;; This function uses a non-reentrant model
  2539 ;;
  2540  0544                     _clearThreeHoursTimer:	
  2541                           
  2542                           ;common.c: 493: uiSmallTimer = 0;
  2543                           
  2544                           ; Regs used in _clearThreeHoursTimer: [status,2]
  2545  0544  1283               	bcf	3,5	;RP0=0, select bank0
  2546  0545  01C9               	clrf	_uiSmallTimer
  2547  0546  01CA               	clrf	_uiSmallTimer+1
  2548                           
  2549                           ;common.c: 494: bSmallTimerStartFlag = 0;
  2550  0547  01DD               	clrf	_bSmallTimerStartFlag
  2551  0548  0008               	return
  2552  0549                     __end_of_clearThreeHoursTimer:	
  2553  0549                     __ptext1455:	
  2554 ;; =============== function _clearTwentyMinTimer ends ============
  2555                           
  2556                           
  2557 ;; *************** function _clearOneHoursTimer *****************
  2558 ;; Defined at:
  2559 ;;		line 498 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2560 ;; Parameters:    Size  Location     Type
  2561 ;;		None
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;		None
  2564 ;; Return value:  Size  Location     Type
  2565 ;;		None               void
  2566 ;; Registers used:
  2567 ;;		status,2
  2568 ;; Tracked objects:
  2569 ;;		On entry : 160/0
  2570 ;;		On exit  : 160/0
  2571 ;;		Unchanged: FFE9F/0
  2572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2573 ;;      Params:         0       0       0       0       0
  2574 ;;      Locals:         0       0       0       0       0
  2575 ;;      Temps:          0       0       0       0       0
  2576 ;;      Totals:         0       0       0       0       0
  2577 ;;Total ram usage:        0 bytes
  2578 ;; Hardware stack levels used:    1
  2579 ;; Hardware stack levels required when called:    3
  2580 ;; This function calls:
  2581 ;;		Nothing
  2582 ;; This function is called by:
  2583 ;;		_resetAllTimer
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586  0549                     _clearOneHoursTimer:	
  2587                           
  2588                           ;common.c: 499: uiOneHourTimer = 0;
  2589                           
  2590                           ; Regs used in _clearOneHoursTimer: [status,2]
  2591  0549  01C7               	clrf	_uiOneHourTimer
  2592  054A  01C8               	clrf	_uiOneHourTimer+1
  2593                           
  2594                           ;common.c: 500: bOneHourTimerStartFlag = 0;
  2595  054B  01DC               	clrf	_bOneHourTimerStartFlag
  2596  054C  0008               	return
  2597  054D                     __end_of_clearOneHoursTimer:	
  2598  054D                     __ptext1454:	
  2599 ;; =============== function _clock_config ends ============
  2600                           
  2601                           
  2602 ;; *************** function _clearTwentyMinTimer *****************
  2603 ;; Defined at:
  2604 ;;		line 505 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;		None
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;		None
  2609 ;; Return value:  Size  Location     Type
  2610 ;;		None               void
  2611 ;; Registers used:
  2612 ;;		status,2
  2613 ;; Tracked objects:
  2614 ;;		On entry : 60/0
  2615 ;;		On exit  : 60/0
  2616 ;;		Unchanged: FFF9F/0
  2617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2618 ;;      Params:         0       0       0       0       0
  2619 ;;      Locals:         0       0       0       0       0
  2620 ;;      Temps:          0       0       0       0       0
  2621 ;;      Totals:         0       0       0       0       0
  2622 ;;Total ram usage:        0 bytes
  2623 ;; Hardware stack levels used:    1
  2624 ;; Hardware stack levels required when called:    3
  2625 ;; This function calls:
  2626 ;;		Nothing
  2627 ;; This function is called by:
  2628 ;;		_resetAllTimer
  2629 ;;		_main
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632  054D                     _clearTwentyMinTimer:	
  2633  054D                     l4056:	
  2634                           ; Regs used in _clearTwentyMinTimer: [status,2]
  2635                           
  2636                           
  2637                           ;common.c: 506: uiTwentyMinTimer = 0;
  2638  054D  01CB               	clrf	_uiTwentyMinTimer
  2639  054E  01CC               	clrf	_uiTwentyMinTimer+1
  2640                           
  2641                           ;common.c: 507: bTwentyMinStartFlag = 0;
  2642  054F  01DE               	clrf	_bTwentyMinStartFlag
  2643  0550  0008               	return
  2644  0551                     __end_of_clearTwentyMinTimer:	
  2645                           
  2646                           	psect	text1430
  2647  04E7                     __ptext1430:	
  2648 ;; =============== function _resetAllTimer ends ============
  2649                           
  2650                           
  2651 ;; *************** function _setPinInitVaule *****************
  2652 ;; Defined at:
  2653 ;;		line 285 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;		None
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;		None
  2658 ;; Return value:  Size  Location     Type
  2659 ;;		None               void
  2660 ;; Registers used:
  2661 ;;		wreg, status,2, status,0, pclath, cstack
  2662 ;; Tracked objects:
  2663 ;;		On entry : 17F/20
  2664 ;;		On exit  : 17F/0
  2665 ;;		Unchanged: FFE80/0
  2666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2667 ;;      Params:         0       0       0       0       0
  2668 ;;      Locals:         0       0       0       0       0
  2669 ;;      Temps:          0       0       0       0       0
  2670 ;;      Totals:         0       0       0       0       0
  2671 ;;Total ram usage:        0 bytes
  2672 ;; Hardware stack levels used:    1
  2673 ;; Hardware stack levels required when called:    4
  2674 ;; This function calls:
  2675 ;;		_setPB3
  2676 ;;		_setPB4
  2677 ;;		_setPB5
  2678 ;; This function is called by:
  2679 ;;		_main
  2680 ;; This function uses a non-reentrant model
  2681 ;;
  2682  04E7                     _setPinInitVaule:	
  2683                           
  2684                           ;main.c: 287: setPB3(1);
  2685                           
  2686                           ; Regs used in _setPinInitVaule: [wreg+status,2+status,0+pclath+cstack]
  2687  04E7  3001               	movlw	1
  2688  04E8  24EF  118A         	fcall	_setPB3
  2689                           
  2690                           ;main.c: 288: setPB4(0);
  2691  04EA  3000               	movlw	0
  2692  04EB  24FA  118A         	fcall	_setPB4
  2693                           
  2694                           ;main.c: 289: setPB5(1);
  2695  04ED  3001               	movlw	1
  2696  04EE  2D05               	ljmp	_setPB5
  2697  04EF                     __end_of_setPinInitVaule:	
  2698  04EF                     __ptext1466:	
  2699 ;; =============== function _initPB4 ends ============
  2700                           
  2701                           
  2702 ;; *************** function _setPB3 *****************
  2703 ;; Defined at:
  2704 ;;		line 135 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;  bValue          1    wreg     unsigned char 
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;  bValue          1    0[BANK1 ] unsigned char 
  2709 ;; Return value:  Size  Location     Type
  2710 ;;		None               void
  2711 ;; Registers used:
  2712 ;;		wreg
  2713 ;; Tracked objects:
  2714 ;;		On entry : 40/0
  2715 ;;		On exit  : 60/0
  2716 ;;		Unchanged: FFF9F/0
  2717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2718 ;;      Params:         0       0       0       0       0
  2719 ;;      Locals:         0       0       1       0       0
  2720 ;;      Temps:          0       0       0       0       0
  2721 ;;      Totals:         0       0       1       0       0
  2722 ;;Total ram usage:        1 bytes
  2723 ;; Hardware stack levels used:    1
  2724 ;; Hardware stack levels required when called:    3
  2725 ;; This function calls:
  2726 ;;		Nothing
  2727 ;; This function is called by:
  2728 ;;		_setPinInitVaule
  2729 ;;		_main
  2730 ;; This function uses a non-reentrant model
  2731 ;;
  2732  04EF                     _setPB3:	
  2733                           
  2734                           ; Regs used in _setPB3: [wreg]
  2735                           ;setPB3@bValue stored from wreg
  2736  04EF  1683               	bsf	3,5	;RP0=1, select bank1
  2737  04F0  00BD               	movwf	setPB3@bValue^(0+128)
  2738                           
  2739                           ;main.c: 136: if( bValue )
  2740  04F1  083D               	movf	setPB3@bValue^(0+128),w
  2741  04F2  1903               	btfsc	3,2
  2742  04F3  2CF7               	goto	l690
  2743                           
  2744                           ;main.c: 139: PB0 = 1;
  2745  04F4  1283               	bcf	3,5	;RP0=0, select bank0
  2746  04F5  1406               	bsf	6,0
  2747  04F6  0008               	return
  2748  04F7                     l690:	
  2749                           
  2750                           ;main.c: 143: else
  2751                           ;main.c: 146: PB0 = 0;
  2752  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  2753  04F8  1006               	bcf	6,0
  2754  04F9  0008               	return
  2755  04FA                     __end_of_setPB3:	
  2756  04FA                     __ptext1464:	
  2757 ;; =============== function _initPB5 ends ============
  2758                           
  2759                           
  2760 ;; *************** function _setPB4 *****************
  2761 ;; Defined at:
  2762 ;;		line 174 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;  bValue          1    wreg     unsigned char 
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;  bValue          1    0[BANK1 ] unsigned char 
  2767 ;; Return value:  Size  Location     Type
  2768 ;;		None               void
  2769 ;; Registers used:
  2770 ;;		wreg
  2771 ;; Tracked objects:
  2772 ;;		On entry : 60/0
  2773 ;;		On exit  : 60/0
  2774 ;;		Unchanged: FFF9F/0
  2775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2776 ;;      Params:         0       0       0       0       0
  2777 ;;      Locals:         0       0       1       0       0
  2778 ;;      Temps:          0       0       0       0       0
  2779 ;;      Totals:         0       0       1       0       0
  2780 ;;Total ram usage:        1 bytes
  2781 ;; Hardware stack levels used:    1
  2782 ;; Hardware stack levels required when called:    3
  2783 ;; This function calls:
  2784 ;;		Nothing
  2785 ;; This function is called by:
  2786 ;;		_setPinInitVaule
  2787 ;;		_main
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790  04FA                     _setPB4:	
  2791                           
  2792                           ; Regs used in _setPB4: [wreg]
  2793                           ;setPB4@bValue stored from wreg
  2794  04FA  1683               	bsf	3,5	;RP0=1, select bank1
  2795  04FB  00BD               	movwf	setPB4@bValue^(0+128)
  2796                           
  2797                           ;main.c: 175: if( bValue )
  2798  04FC  083D               	movf	setPB4@bValue^(0+128),w
  2799  04FD  1903               	btfsc	3,2
  2800  04FE  2D02               	goto	l700
  2801                           
  2802                           ;main.c: 178: PB3 = 1;
  2803  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  2804  0500  1586               	bsf	6,3
  2805  0501  0008               	return
  2806  0502                     l700:	
  2807                           
  2808                           ;main.c: 182: else
  2809                           ;main.c: 185: PB3 = 0;
  2810  0502  1283               	bcf	3,5	;RP0=0, select bank0
  2811  0503  1186               	bcf	6,3
  2812  0504  0008               	return
  2813  0505                     __end_of_setPB4:	
  2814  0505                     __ptext1462:	
  2815 ;; =============== function _initPB2_AsHighResistence ends ============
  2816                           
  2817                           
  2818 ;; *************** function _setPB5 *****************
  2819 ;; Defined at:
  2820 ;;		line 212 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;  bValue          1    wreg     unsigned char 
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;  bValue          1    0[BANK1 ] unsigned char 
  2825 ;; Return value:  Size  Location     Type
  2826 ;;		None               void
  2827 ;; Registers used:
  2828 ;;		wreg
  2829 ;; Tracked objects:
  2830 ;;		On entry : 60/0
  2831 ;;		On exit  : 60/0
  2832 ;;		Unchanged: FFF9F/0
  2833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2834 ;;      Params:         0       0       0       0       0
  2835 ;;      Locals:         0       0       1       0       0
  2836 ;;      Temps:          0       0       0       0       0
  2837 ;;      Totals:         0       0       1       0       0
  2838 ;;Total ram usage:        1 bytes
  2839 ;; Hardware stack levels used:    1
  2840 ;; Hardware stack levels required when called:    3
  2841 ;; This function calls:
  2842 ;;		Nothing
  2843 ;; This function is called by:
  2844 ;;		_setPinInitVaule
  2845 ;;		_main
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848  0505                     _setPB5:	
  2849                           
  2850                           ; Regs used in _setPB5: [wreg]
  2851                           ;setPB5@bValue stored from wreg
  2852  0505  1683               	bsf	3,5	;RP0=1, select bank1
  2853  0506  00BD               	movwf	setPB5@bValue^(0+128)
  2854                           
  2855                           ;main.c: 213: if( bValue )
  2856  0507  083D               	movf	setPB5@bValue^(0+128),w
  2857  0508  1903               	btfsc	3,2
  2858  0509  2D0D               	goto	l710
  2859                           
  2860                           ;main.c: 216: PB1 = 1;
  2861  050A  1283               	bcf	3,5	;RP0=0, select bank0
  2862  050B  1486               	bsf	6,1
  2863  050C  0008               	return
  2864  050D                     l710:	
  2865                           
  2866                           ;main.c: 221: else
  2867                           ;main.c: 224: PB1 = 0;
  2868  050D  1283               	bcf	3,5	;RP0=0, select bank0
  2869  050E  1086               	bcf	6,1
  2870  050F  0008               	return
  2871  0510                     __end_of_setPB5:	
  2872                           
  2873                           	psect	text1431
  2874  0510                     __ptext1431:	
  2875 ;; =============== function _setPinInitVaule ends ============
  2876                           
  2877                           
  2878 ;; *************** function _initPin *****************
  2879 ;; Defined at:
  2880 ;;		line 269 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2881 ;; Parameters:    Size  Location     Type
  2882 ;;		None
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;		None
  2885 ;; Return value:  Size  Location     Type
  2886 ;;		None               void
  2887 ;; Registers used:
  2888 ;;		wreg, status,2, status,0, pclath, cstack
  2889 ;; Tracked objects:
  2890 ;;		On entry : 17F/0
  2891 ;;		On exit  : 17F/20
  2892 ;;		Unchanged: FFE80/0
  2893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2894 ;;      Params:         0       0       0       0       0
  2895 ;;      Locals:         0       0       0       0       0
  2896 ;;      Temps:          0       0       0       0       0
  2897 ;;      Totals:         0       0       0       0       0
  2898 ;;Total ram usage:        0 bytes
  2899 ;; Hardware stack levels used:    1
  2900 ;; Hardware stack levels required when called:    4
  2901 ;; This function calls:
  2902 ;;		_initPB2_AsHighResistence
  2903 ;;		_initPB3
  2904 ;;		_initPB4
  2905 ;;		_initPB5
  2906 ;; This function is called by:
  2907 ;;		_main
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910  0510                     _initPin:	
  2911                           
  2912                           ;main.c: 271: initPB2_AsHighResistence();
  2913                           
  2914                           ; Regs used in _initPin: [wreg+status,2+status,0+pclath+cstack]
  2915  0510  2523  118A         	fcall	_initPB2_AsHighResistence
  2916                           
  2917                           ;main.c: 273: initPB3(0);
  2918  0512  3000               	movlw	0
  2919  0513  251A  118A         	fcall	_initPB3
  2920                           
  2921                           ;main.c: 275: initPB4(0);
  2922  0515  3000               	movlw	0
  2923  0516  2528  118A         	fcall	_initPB4
  2924                           
  2925                           ;main.c: 277: initPB5(0);
  2926  0518  3000               	movlw	0
  2927  0519  2D30               	ljmp	_initPB5
  2928  051A                     __end_of_initPin:	
  2929  051A                     __ptext1467:	
  2930 ;; =============== function _setPB3 ends ============
  2931                           
  2932                           
  2933 ;; *************** function _initPB3 *****************
  2934 ;; Defined at:
  2935 ;;		line 116 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2936 ;; Parameters:    Size  Location     Type
  2937 ;;  bValue          1    wreg     unsigned char 
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;  bValue          1    0[BANK1 ] unsigned char 
  2940 ;; Return value:  Size  Location     Type
  2941 ;;		None               void
  2942 ;; Registers used:
  2943 ;;		wreg
  2944 ;; Tracked objects:
  2945 ;;		On entry : 17F/60
  2946 ;;		On exit  : 17F/20
  2947 ;;		Unchanged: FFE80/0
  2948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2949 ;;      Params:         0       0       0       0       0
  2950 ;;      Locals:         0       0       1       0       0
  2951 ;;      Temps:          0       0       0       0       0
  2952 ;;      Totals:         0       0       1       0       0
  2953 ;;Total ram usage:        1 bytes
  2954 ;; Hardware stack levels used:    1
  2955 ;; Hardware stack levels required when called:    3
  2956 ;; This function calls:
  2957 ;;		Nothing
  2958 ;; This function is called by:
  2959 ;;		_initPin
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962  051A                     _initPB3:	
  2963                           
  2964                           ; Regs used in _initPB3: [wreg]
  2965                           ;initPB3@bValue stored from wreg
  2966  051A  1303               	bcf	3,6	;RP1=0, select bank1
  2967  051B  00BD               	movwf	initPB3@bValue^(0+128)
  2968                           
  2969                           ;main.c: 117: if( bValue )
  2970  051C  083D               	movf	initPB3@bValue^(0+128),w
  2971  051D  1903               	btfsc	3,2
  2972  051E  2D21               	goto	l685
  2973                           
  2974                           ;main.c: 120: TRISB0 = 1;
  2975  051F  1406               	bsf	6,0
  2976  0520  0008               	return
  2977  0521                     l685:	
  2978                           
  2979                           ;main.c: 124: else
  2980                           ;main.c: 127: TRISB0 = 0;
  2981  0521  1006               	bcf	6,0
  2982  0522  0008               	return
  2983  0523                     __end_of_initPB3:	
  2984  0523                     __ptext1461:	
  2985 ;; =============== function _pwm_start ends ============
  2986                           
  2987                           
  2988 ;; *************** function _initPB2_AsHighResistence *****************
  2989 ;; Defined at:
  2990 ;;		line 232 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;		None
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;		None
  2995 ;; Return value:  Size  Location     Type
  2996 ;;		None               void
  2997 ;; Registers used:
  2998 ;;		None
  2999 ;; Tracked objects:
  3000 ;;		On entry : 17F/0
  3001 ;;		On exit  : 17F/60
  3002 ;;		Unchanged: FFE80/0
  3003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3004 ;;      Params:         0       0       0       0       0
  3005 ;;      Locals:         0       0       0       0       0
  3006 ;;      Temps:          0       0       0       0       0
  3007 ;;      Totals:         0       0       0       0       0
  3008 ;;Total ram usage:        0 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; Hardware stack levels required when called:    3
  3011 ;; This function calls:
  3012 ;;		Nothing
  3013 ;; This function is called by:
  3014 ;;		_initPin
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017  0523                     _initPB2_AsHighResistence:	
  3018                           
  3019                           ;main.c: 234: PB2 = 1;
  3020                           
  3021                           ; Regs used in _initPB2_AsHighResistence: []
  3022  0523  1506               	bsf	6,2
  3023                           
  3024                           ;main.c: 235: PBOD2 = 1;
  3025  0524  1683               	bsf	3,5	;RP0=1, select bank3
  3026  0525  1703               	bsf	3,6	;RP1=1, select bank3
  3027  0526  1508               	bsf	8,2
  3028  0527  0008               	return
  3029  0528                     __end_of_initPB2_AsHighResistence:	
  3030  0528                     __ptext1465:	
  3031 ;; =============== function _setPB4 ends ============
  3032                           
  3033                           
  3034 ;; *************** function _initPB4 *****************
  3035 ;; Defined at:
  3036 ;;		line 155 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;  bValue          1    wreg     unsigned char 
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;  bValue          1    0[BANK1 ] unsigned char 
  3041 ;; Return value:  Size  Location     Type
  3042 ;;		None               void
  3043 ;; Registers used:
  3044 ;;		wreg
  3045 ;; Tracked objects:
  3046 ;;		On entry : 17F/20
  3047 ;;		On exit  : 17F/20
  3048 ;;		Unchanged: FFE80/0
  3049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3050 ;;      Params:         0       0       0       0       0
  3051 ;;      Locals:         0       0       1       0       0
  3052 ;;      Temps:          0       0       0       0       0
  3053 ;;      Totals:         0       0       1       0       0
  3054 ;;Total ram usage:        1 bytes
  3055 ;; Hardware stack levels used:    1
  3056 ;; Hardware stack levels required when called:    3
  3057 ;; This function calls:
  3058 ;;		Nothing
  3059 ;; This function is called by:
  3060 ;;		_initPin
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063  0528                     _initPB4:	
  3064                           
  3065                           ; Regs used in _initPB4: [wreg]
  3066                           ;initPB4@bValue stored from wreg
  3067  0528  00BD               	movwf	initPB4@bValue^(0+128)
  3068                           
  3069                           ;main.c: 156: if( bValue )
  3070  0529  083D               	movf	initPB4@bValue^(0+128),w
  3071  052A  1903               	btfsc	3,2
  3072  052B  2D2E               	goto	l695
  3073                           
  3074                           ;main.c: 159: TRISB3 = 1;
  3075  052C  1586               	bsf	6,3
  3076  052D  0008               	return
  3077  052E                     l695:	
  3078                           
  3079                           ;main.c: 163: else
  3080                           ;main.c: 166: TRISB3 = 0;
  3081  052E  1186               	bcf	6,3
  3082  052F  0008               	return
  3083  0530                     __end_of_initPB4:	
  3084  0530                     __ptext1463:	
  3085 ;; =============== function _setPB5 ends ============
  3086                           
  3087                           
  3088 ;; *************** function _initPB5 *****************
  3089 ;; Defined at:
  3090 ;;		line 193 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;  bValue          1    wreg     unsigned char 
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;  bValue          1    0[BANK1 ] unsigned char 
  3095 ;; Return value:  Size  Location     Type
  3096 ;;		None               void
  3097 ;; Registers used:
  3098 ;;		wreg
  3099 ;; Tracked objects:
  3100 ;;		On entry : 17F/20
  3101 ;;		On exit  : 17F/20
  3102 ;;		Unchanged: FFE80/0
  3103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3104 ;;      Params:         0       0       0       0       0
  3105 ;;      Locals:         0       0       1       0       0
  3106 ;;      Temps:          0       0       0       0       0
  3107 ;;      Totals:         0       0       1       0       0
  3108 ;;Total ram usage:        1 bytes
  3109 ;; Hardware stack levels used:    1
  3110 ;; Hardware stack levels required when called:    3
  3111 ;; This function calls:
  3112 ;;		Nothing
  3113 ;; This function is called by:
  3114 ;;		_initPin
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117  0530                     _initPB5:	
  3118                           
  3119                           ; Regs used in _initPB5: [wreg]
  3120                           ;initPB5@bValue stored from wreg
  3121  0530  00BD               	movwf	initPB5@bValue^(0+128)
  3122                           
  3123                           ;main.c: 194: if( bValue )
  3124  0531  083D               	movf	initPB5@bValue^(0+128),w
  3125  0532  1903               	btfsc	3,2
  3126  0533  2D36               	goto	l705
  3127                           
  3128                           ;main.c: 197: TRISB1 = 1;
  3129  0534  1486               	bsf	6,1
  3130  0535  0008               	return
  3131  0536                     l705:	
  3132                           
  3133                           ;main.c: 201: else
  3134                           ;main.c: 204: TRISB1= 0;
  3135  0536  1086               	bcf	6,1
  3136  0537  0008               	return
  3137  0538                     __end_of_initPB5:	
  3138                           
  3139                           	psect	text1436
  3140  062D                     __ptext1436:	
  3141 ;; =============== function _FilterCh13 ends ============
  3142                           
  3143                           
  3144 ;; *************** function _setWaitResetFlag *****************
  3145 ;; Defined at:
  3146 ;;		line 55 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;  bValue          1    wreg     unsigned char 
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;  bValue          1    0[BANK1 ] unsigned char 
  3151 ;; Return value:  Size  Location     Type
  3152 ;;		None               void
  3153 ;; Registers used:
  3154 ;;		wreg
  3155 ;; Tracked objects:
  3156 ;;		On entry : 60/0
  3157 ;;		On exit  : 60/0
  3158 ;;		Unchanged: FFF9F/0
  3159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3160 ;;      Params:         0       0       0       0       0
  3161 ;;      Locals:         0       0       1       0       0
  3162 ;;      Temps:          0       0       0       0       0
  3163 ;;      Totals:         0       0       1       0       0
  3164 ;;Total ram usage:        1 bytes
  3165 ;; Hardware stack levels used:    1
  3166 ;; Hardware stack levels required when called:    3
  3167 ;; This function calls:
  3168 ;;		Nothing
  3169 ;; This function is called by:
  3170 ;;		_main
  3171 ;; This function uses a non-reentrant model
  3172 ;;
  3173  062D                     _setWaitResetFlag:	
  3174                           
  3175                           ; Regs used in _setWaitResetFlag: [wreg]
  3176                           ;setWaitResetFlag@bValue stored from wreg
  3177  062D  1683               	bsf	3,5	;RP0=1, select bank1
  3178  062E  00BD               	movwf	setWaitResetFlag@bValue^(0+128)
  3179                           
  3180                           ;common.c: 56: bWaitResetFlag = bValue;
  3181  062F  1283               	bcf	3,5	;RP0=0, select bank0
  3182  0630  00DF               	movwf	_bWaitResetFlag
  3183  0631  0008               	return
  3184  0632                     __end_of_setWaitResetFlag:	
  3185                           
  3186                           	psect	text1437
  3187  05DF                     __ptext1437:	
  3188 ;; =============== function _setWaitResetFlag ends ============
  3189                           
  3190                           
  3191 ;; *************** function _isFinishedOneHoursTimer *****************
  3192 ;; Defined at:
  3193 ;;		line 608 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;		None
  3196 ;; Auto vars:     Size  Location     Type
  3197 ;;		None
  3198 ;; Return value:  Size  Location     Type
  3199 ;;                  1    wreg      unsigned char 
  3200 ;; Registers used:
  3201 ;;		wreg, status,2, status,0
  3202 ;; Tracked objects:
  3203 ;;		On entry : 160/20
  3204 ;;		On exit  : 160/0
  3205 ;;		Unchanged: FFE9F/0
  3206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3207 ;;      Params:         0       0       0       0       0
  3208 ;;      Locals:         0       0       0       0       0
  3209 ;;      Temps:          0       0       0       0       0
  3210 ;;      Totals:         0       0       0       0       0
  3211 ;;Total ram usage:        0 bytes
  3212 ;; Hardware stack levels used:    1
  3213 ;; Hardware stack levels required when called:    3
  3214 ;; This function calls:
  3215 ;;		Nothing
  3216 ;; This function is called by:
  3217 ;;		_main
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220  05DF                     _isFinishedOneHoursTimer:	
  3221                           
  3222                           ;common.c: 609: if((uiOneHourTimer == 0) && bOneHourTimerStartFlag)
  3223                           
  3224                           ; Regs used in _isFinishedOneHoursTimer: [wreg+status,2+status,0]
  3225  05DF  1283               	bcf	3,5	;RP0=0, select bank0
  3226  05E0  0848               	movf	_uiOneHourTimer+1,w
  3227  05E1  0447               	iorwf	_uiOneHourTimer,w
  3228  05E2  1D03               	skipz
  3229  05E3  3400               	retlw	0
  3230  05E4  085C               	movf	_bOneHourTimerStartFlag,w
  3231  05E5  1903               	btfsc	3,2
  3232  05E6  3400               	retlw	0
  3233  05E7  3001               	movlw	1
  3234                           
  3235                           ;common.c: 610: {
  3236                           ;common.c: 611: bOneHourTimerStartFlag = 0;
  3237  05E8  01DC               	clrf	_bOneHourTimerStartFlag
  3238                           
  3239                           ;common.c: 612: return 1;
  3240  05E9  0008               	return
  3241  05EA                     __end_of_isFinishedOneHoursTimer:	
  3242                           ;common.c: 614: else
  3243                           ;common.c: 615: return 0;
  3244                           
  3245                           
  3246                           	psect	text1438
  3247  0593                     __ptext1438:	
  3248 ;; =============== function _isFinishedOneHoursTimer ends ============
  3249                           
  3250                           
  3251 ;; *************** function _startOneHoursTimer *****************
  3252 ;; Defined at:
  3253 ;;		line 525 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;  uiSetTime       2    0[BANK1 ] unsigned int 
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;		None
  3258 ;; Return value:  Size  Location     Type
  3259 ;;		None               void
  3260 ;; Registers used:
  3261 ;;		wreg, status,2, status,0
  3262 ;; Tracked objects:
  3263 ;;		On entry : 60/20
  3264 ;;		On exit  : 60/0
  3265 ;;		Unchanged: FFF9F/0
  3266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3267 ;;      Params:         0       0       2       0       0
  3268 ;;      Locals:         0       0       0       0       0
  3269 ;;      Temps:          0       0       0       0       0
  3270 ;;      Totals:         0       0       2       0       0
  3271 ;;Total ram usage:        2 bytes
  3272 ;; Hardware stack levels used:    1
  3273 ;; Hardware stack levels required when called:    3
  3274 ;; This function calls:
  3275 ;;		Nothing
  3276 ;; This function is called by:
  3277 ;;		_main
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280  0593                     _startOneHoursTimer:	
  3281                           
  3282                           ;common.c: 526: if(( 0 == uiOneHourTimer ) && ( 0 == bOneHourTimerStartFlag ))
  3283                           
  3284                           ; Regs used in _startOneHoursTimer: [wreg+status,2+status,0]
  3285  0593  1283               	bcf	3,5	;RP0=0, select bank0
  3286  0594  0848               	movf	_uiOneHourTimer+1,w
  3287  0595  0447               	iorwf	_uiOneHourTimer,w
  3288  0596  1D03               	skipz
  3289  0597  0008               	return
  3290  0598  08DC               	movf	_bOneHourTimerStartFlag,f
  3291  0599  1D03               	skipz
  3292  059A  0008               	return
  3293                           
  3294                           ;common.c: 527: {
  3295                           ;common.c: 528: uiOneHourTimer = uiSetTime;
  3296  059B  1683               	bsf	3,5	;RP0=1, select bank1
  3297  059C  083E               	movf	(startOneHoursTimer@uiSetTime+1)^(0+128),w
  3298  059D  1283               	bcf	3,5	;RP0=0, select bank0
  3299  059E  00C8               	movwf	_uiOneHourTimer+1
  3300  059F  1683               	bsf	3,5	;RP0=1, select bank1
  3301  05A0  083D               	movf	startOneHoursTimer@uiSetTime^(0+128),w
  3302  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  3303  05A2  00C7               	movwf	_uiOneHourTimer
  3304                           
  3305                           ;common.c: 529: bOneHourTimerStartFlag = 1;
  3306  05A3  01DC               	clrf	_bOneHourTimerStartFlag
  3307  05A4  0ADC               	incf	_bOneHourTimerStartFlag,f
  3308  05A5  0008               	return
  3309  05A6                     __end_of_startOneHoursTimer:	
  3310                           
  3311                           	psect	text1439
  3312  05EA                     __ptext1439:	
  3313 ;; =============== function _startOneHoursTimer ends ============
  3314                           
  3315                           
  3316 ;; *************** function _isFinishedThreeHoursTimer *****************
  3317 ;; Defined at:
  3318 ;;		line 595 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3319 ;; Parameters:    Size  Location     Type
  3320 ;;		None
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;		None
  3323 ;; Return value:  Size  Location     Type
  3324 ;;                  1    wreg      unsigned char 
  3325 ;; Registers used:
  3326 ;;		wreg, status,2, status,0
  3327 ;; Tracked objects:
  3328 ;;		On entry : 40/20
  3329 ;;		On exit  : 60/0
  3330 ;;		Unchanged: FFF9F/0
  3331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3332 ;;      Params:         0       0       0       0       0
  3333 ;;      Locals:         0       0       0       0       0
  3334 ;;      Temps:          0       0       0       0       0
  3335 ;;      Totals:         0       0       0       0       0
  3336 ;;Total ram usage:        0 bytes
  3337 ;; Hardware stack levels used:    1
  3338 ;; Hardware stack levels required when called:    3
  3339 ;; This function calls:
  3340 ;;		Nothing
  3341 ;; This function is called by:
  3342 ;;		_main
  3343 ;; This function uses a non-reentrant model
  3344 ;;
  3345  05EA                     _isFinishedThreeHoursTimer:	
  3346                           
  3347                           ;common.c: 596: if((uiSmallTimer == 0) && bSmallTimerStartFlag)
  3348                           
  3349                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  3350  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  3351  05EB  084A               	movf	_uiSmallTimer+1,w
  3352  05EC  0449               	iorwf	_uiSmallTimer,w
  3353  05ED  1D03               	skipz
  3354  05EE  3400               	retlw	0
  3355  05EF  085D               	movf	_bSmallTimerStartFlag,w
  3356  05F0  1903               	btfsc	3,2
  3357  05F1  3400               	retlw	0
  3358  05F2  3001               	movlw	1
  3359                           
  3360                           ;common.c: 597: {
  3361                           ;common.c: 598: bSmallTimerStartFlag = 0;
  3362  05F3  01DD               	clrf	_bSmallTimerStartFlag
  3363                           
  3364                           ;common.c: 599: return 1;
  3365  05F4  0008               	return
  3366  05F5                     __end_of_isFinishedThreeHoursTimer:	
  3367                           ;common.c: 601: else
  3368                           ;common.c: 602: return 0;
  3369                           
  3370                           
  3371                           	psect	text1440
  3372  05A6                     __ptext1440:	
  3373 ;; =============== function _isFinishedThreeHoursTimer ends ============
  3374                           
  3375                           
  3376 ;; *************** function _startThreeHoursTimer *****************
  3377 ;; Defined at:
  3378 ;;		line 512 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3379 ;; Parameters:    Size  Location     Type
  3380 ;;  uiSetTime       2    0[BANK1 ] unsigned int 
  3381 ;; Auto vars:     Size  Location     Type
  3382 ;;		None
  3383 ;; Return value:  Size  Location     Type
  3384 ;;		None               void
  3385 ;; Registers used:
  3386 ;;		wreg, status,2, status,0
  3387 ;; Tracked objects:
  3388 ;;		On entry : 60/20
  3389 ;;		On exit  : 60/0
  3390 ;;		Unchanged: FFF9F/0
  3391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3392 ;;      Params:         0       0       2       0       0
  3393 ;;      Locals:         0       0       0       0       0
  3394 ;;      Temps:          0       0       0       0       0
  3395 ;;      Totals:         0       0       2       0       0
  3396 ;;Total ram usage:        2 bytes
  3397 ;; Hardware stack levels used:    1
  3398 ;; Hardware stack levels required when called:    3
  3399 ;; This function calls:
  3400 ;;		Nothing
  3401 ;; This function is called by:
  3402 ;;		_main
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405  05A6                     _startThreeHoursTimer:	
  3406                           
  3407                           ;common.c: 513: if(( 0 == uiSmallTimer ) && ( 0 == bSmallTimerStartFlag ))
  3408                           
  3409                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  3410  05A6  1283               	bcf	3,5	;RP0=0, select bank0
  3411  05A7  084A               	movf	_uiSmallTimer+1,w
  3412  05A8  0449               	iorwf	_uiSmallTimer,w
  3413  05A9  1D03               	skipz
  3414  05AA  0008               	return
  3415  05AB  08DD               	movf	_bSmallTimerStartFlag,f
  3416  05AC  1D03               	skipz
  3417  05AD  0008               	return
  3418                           
  3419                           ;common.c: 514: {
  3420                           ;common.c: 515: uiSmallTimer = uiSetTime;
  3421  05AE  1683               	bsf	3,5	;RP0=1, select bank1
  3422  05AF  083E               	movf	(startThreeHoursTimer@uiSetTime+1)^(0+128),w
  3423  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  3424  05B1  00CA               	movwf	_uiSmallTimer+1
  3425  05B2  1683               	bsf	3,5	;RP0=1, select bank1
  3426  05B3  083D               	movf	startThreeHoursTimer@uiSetTime^(0+128),w
  3427  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  3428  05B5  00C9               	movwf	_uiSmallTimer
  3429                           
  3430                           ;common.c: 516: bSmallTimerStartFlag = 1;
  3431  05B6  01DD               	clrf	_bSmallTimerStartFlag
  3432  05B7  0ADD               	incf	_bSmallTimerStartFlag,f
  3433  05B8  0008               	return
  3434  05B9                     __end_of_startThreeHoursTimer:	
  3435                           
  3436                           	psect	text1441
  3437  05F5                     __ptext1441:	
  3438 ;; =============== function _startThreeHoursTimer ends ============
  3439                           
  3440                           
  3441 ;; *************** function _isFinishedTwelveHoursTimer *****************
  3442 ;; Defined at:
  3443 ;;		line 584 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3444 ;; Parameters:    Size  Location     Type
  3445 ;;		None
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;		None
  3448 ;; Return value:  Size  Location     Type
  3449 ;;                  1    wreg      unsigned char 
  3450 ;; Registers used:
  3451 ;;		wreg, status,2, status,0
  3452 ;; Tracked objects:
  3453 ;;		On entry : 40/20
  3454 ;;		On exit  : 60/0
  3455 ;;		Unchanged: FFF9F/0
  3456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3457 ;;      Params:         0       0       0       0       0
  3458 ;;      Locals:         0       0       0       0       0
  3459 ;;      Temps:          0       0       0       0       0
  3460 ;;      Totals:         0       0       0       0       0
  3461 ;;Total ram usage:        0 bytes
  3462 ;; Hardware stack levels used:    1
  3463 ;; Hardware stack levels required when called:    3
  3464 ;; This function calls:
  3465 ;;		Nothing
  3466 ;; This function is called by:
  3467 ;;		_main
  3468 ;; This function uses a non-reentrant model
  3469 ;;
  3470  05F5                     _isFinishedTwelveHoursTimer:	
  3471                           
  3472                           ;common.c: 585: if(( uiBigTimer == 0 ) && bBigTimerStartFlag )
  3473                           
  3474                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  3475  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  3476  05F6  0846               	movf	_uiBigTimer+1,w
  3477  05F7  0445               	iorwf	_uiBigTimer,w
  3478  05F8  1D03               	skipz
  3479  05F9  3400               	retlw	0
  3480  05FA  085B               	movf	_bBigTimerStartFlag,w
  3481  05FB  1903               	btfsc	3,2
  3482  05FC  3400               	retlw	0
  3483  05FD  3001               	movlw	1
  3484                           
  3485                           ;common.c: 586: {
  3486                           ;common.c: 587: bBigTimerStartFlag = 0;
  3487  05FE  01DB               	clrf	_bBigTimerStartFlag
  3488                           
  3489                           ;common.c: 588: return 1;
  3490  05FF  0008               	return
  3491  0600                     __end_of_isFinishedTwelveHoursTimer:	
  3492                           ;common.c: 590: else
  3493                           ;common.c: 591: return 0;
  3494                           
  3495                           
  3496                           	psect	text1442
  3497  05B9                     __ptext1442:	
  3498 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  3499                           
  3500                           
  3501 ;; *************** function _startTwelveHourTimer *****************
  3502 ;; Defined at:
  3503 ;;		line 471 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3504 ;; Parameters:    Size  Location     Type
  3505 ;;  uiSetTime       2    0[BANK1 ] unsigned int 
  3506 ;; Auto vars:     Size  Location     Type
  3507 ;;		None
  3508 ;; Return value:  Size  Location     Type
  3509 ;;		None               void
  3510 ;; Registers used:
  3511 ;;		wreg, status,2, status,0
  3512 ;; Tracked objects:
  3513 ;;		On entry : 60/20
  3514 ;;		On exit  : 60/0
  3515 ;;		Unchanged: FFF9F/0
  3516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3517 ;;      Params:         0       0       2       0       0
  3518 ;;      Locals:         0       0       0       0       0
  3519 ;;      Temps:          0       0       0       0       0
  3520 ;;      Totals:         0       0       2       0       0
  3521 ;;Total ram usage:        2 bytes
  3522 ;; Hardware stack levels used:    1
  3523 ;; Hardware stack levels required when called:    3
  3524 ;; This function calls:
  3525 ;;		Nothing
  3526 ;; This function is called by:
  3527 ;;		_main
  3528 ;; This function uses a non-reentrant model
  3529 ;;
  3530  05B9                     _startTwelveHourTimer:	
  3531                           
  3532                           ;common.c: 472: if((0 == uiBigTimer) && ( 0 == bBigTimerStartFlag))
  3533                           
  3534                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  3535  05B9  1283               	bcf	3,5	;RP0=0, select bank0
  3536  05BA  0846               	movf	_uiBigTimer+1,w
  3537  05BB  0445               	iorwf	_uiBigTimer,w
  3538  05BC  1D03               	skipz
  3539  05BD  0008               	return
  3540  05BE  08DB               	movf	_bBigTimerStartFlag,f
  3541  05BF  1D03               	skipz
  3542  05C0  0008               	return
  3543                           
  3544                           ;common.c: 473: {
  3545                           ;common.c: 474: uiBigTimer = uiSetTime;
  3546  05C1  1683               	bsf	3,5	;RP0=1, select bank1
  3547  05C2  083E               	movf	(startTwelveHourTimer@uiSetTime+1)^(0+128),w
  3548  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  3549  05C4  00C6               	movwf	_uiBigTimer+1
  3550  05C5  1683               	bsf	3,5	;RP0=1, select bank1
  3551  05C6  083D               	movf	startTwelveHourTimer@uiSetTime^(0+128),w
  3552  05C7  1283               	bcf	3,5	;RP0=0, select bank0
  3553  05C8  00C5               	movwf	_uiBigTimer
  3554                           
  3555                           ;common.c: 475: bBigTimerStartFlag = 1;
  3556  05C9  01DB               	clrf	_bBigTimerStartFlag
  3557  05CA  0ADB               	incf	_bBigTimerStartFlag,f
  3558  05CB  0008               	return
  3559  05CC                     __end_of_startTwelveHourTimer:	
  3560                           
  3561                           	psect	text1443
  3562  0600                     __ptext1443:	
  3563 ;; =============== function _startTwelveHourTimer ends ============
  3564                           
  3565                           
  3566 ;; *************** function _isFinishedTwentyMinTimer *****************
  3567 ;; Defined at:
  3568 ;;		line 560 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3569 ;; Parameters:    Size  Location     Type
  3570 ;;		None
  3571 ;; Auto vars:     Size  Location     Type
  3572 ;;		None
  3573 ;; Return value:  Size  Location     Type
  3574 ;;                  1    wreg      unsigned char 
  3575 ;; Registers used:
  3576 ;;		wreg, status,2, status,0
  3577 ;; Tracked objects:
  3578 ;;		On entry : 40/20
  3579 ;;		On exit  : 60/0
  3580 ;;		Unchanged: FFF9F/0
  3581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3582 ;;      Params:         0       0       0       0       0
  3583 ;;      Locals:         0       0       0       0       0
  3584 ;;      Temps:          0       0       0       0       0
  3585 ;;      Totals:         0       0       0       0       0
  3586 ;;Total ram usage:        0 bytes
  3587 ;; Hardware stack levels used:    1
  3588 ;; Hardware stack levels required when called:    3
  3589 ;; This function calls:
  3590 ;;		Nothing
  3591 ;; This function is called by:
  3592 ;;		_main
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595  0600                     _isFinishedTwentyMinTimer:	
  3596                           
  3597                           ;common.c: 561: if(( 0 == uiTwentyMinTimer ) && bTwentyMinStartFlag )
  3598                           
  3599                           ; Regs used in _isFinishedTwentyMinTimer: [wreg+status,2+status,0]
  3600  0600  1283               	bcf	3,5	;RP0=0, select bank0
  3601  0601  084C               	movf	_uiTwentyMinTimer+1,w
  3602  0602  044B               	iorwf	_uiTwentyMinTimer,w
  3603  0603  1D03               	skipz
  3604  0604  3400               	retlw	0
  3605  0605  085E               	movf	_bTwentyMinStartFlag,w
  3606  0606  1903               	btfsc	3,2
  3607  0607  3400               	retlw	0
  3608  0608  3001               	movlw	1
  3609                           
  3610                           ;common.c: 562: {
  3611                           ;common.c: 563: bTwentyMinStartFlag = 0;
  3612  0609  01DE               	clrf	_bTwentyMinStartFlag
  3613                           
  3614                           ;common.c: 564: return 1;
  3615  060A  0008               	return
  3616  060B                     __end_of_isFinishedTwentyMinTimer:	
  3617                           ;common.c: 566: else
  3618                           ;common.c: 567: return 0;
  3619                           
  3620                           
  3621                           	psect	text1444
  3622  063D                     __ptext1444:	
  3623 ;; =============== function _isFinishedTwentyMinTimer ends ============
  3624                           
  3625                           
  3626 ;; *************** function _clrSampeTime *****************
  3627 ;; Defined at:
  3628 ;;		line 630 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;		None
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;		None
  3633 ;; Return value:  Size  Location     Type
  3634 ;;		None               void
  3635 ;; Registers used:
  3636 ;;		status,2
  3637 ;; Tracked objects:
  3638 ;;		On entry : 60/0
  3639 ;;		On exit  : 60/0
  3640 ;;		Unchanged: FFF9F/0
  3641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3642 ;;      Params:         0       0       0       0       0
  3643 ;;      Locals:         0       0       0       0       0
  3644 ;;      Temps:          0       0       0       0       0
  3645 ;;      Totals:         0       0       0       0       0
  3646 ;;Total ram usage:        0 bytes
  3647 ;; Hardware stack levels used:    1
  3648 ;; Hardware stack levels required when called:    3
  3649 ;; This function calls:
  3650 ;;		Nothing
  3651 ;; This function is called by:
  3652 ;;		_main
  3653 ;; This function uses a non-reentrant model
  3654 ;;
  3655  063D                     _clrSampeTime:	
  3656                           
  3657                           ;common.c: 631: timer.timer10msStopWatch = 0;
  3658                           
  3659                           ; Regs used in _clrSampeTime: [status,2]
  3660  063D  01E1               	clrf	_timer
  3661  063E  0008               	return
  3662  063F                     __end_of_clrSampeTime:	
  3663                           
  3664                           	psect	text1445
  3665  0632                     __ptext1445:	
  3666 ;; =============== function _clrSampeTime ends ============
  3667                           
  3668                           
  3669 ;; *************** function _isPermitSampleTime *****************
  3670 ;; Defined at:
  3671 ;;		line 620 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;		None
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;		None
  3676 ;; Return value:  Size  Location     Type
  3677 ;;                  1    wreg      unsigned char 
  3678 ;; Registers used:
  3679 ;;		wreg
  3680 ;; Tracked objects:
  3681 ;;		On entry : 60/0
  3682 ;;		On exit  : 60/0
  3683 ;;		Unchanged: FFF9F/0
  3684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3685 ;;      Params:         0       0       0       0       0
  3686 ;;      Locals:         0       0       0       0       0
  3687 ;;      Temps:          0       0       0       0       0
  3688 ;;      Totals:         0       0       0       0       0
  3689 ;;Total ram usage:        0 bytes
  3690 ;; Hardware stack levels used:    1
  3691 ;; Hardware stack levels required when called:    3
  3692 ;; This function calls:
  3693 ;;		Nothing
  3694 ;; This function is called by:
  3695 ;;		_main
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698  0632                     _isPermitSampleTime:	
  3699                           
  3700                           ;common.c: 621: if(timer.timer10msStopWatch >= 1)
  3701                           
  3702                           ; Regs used in _isPermitSampleTime: [wreg]
  3703  0632  0861               	movf	_timer,w
  3704  0633  1D03               	skipz
  3705                           
  3706                           ;common.c: 622: {
  3707                           ;common.c: 623: return 1;
  3708  0634  3401               	retlw	1
  3709                           
  3710                           ;common.c: 625: else
  3711                           ;common.c: 626: return 0;
  3712  0635  3400               	retlw	0
  3713  0636                     __end_of_isPermitSampleTime:	
  3714                           
  3715                           	psect	text1447
  3716  05CC                     __ptext1447:	
  3717 ;; =============== function _adc_start ends ============
  3718                           
  3719                           
  3720 ;; *************** function _startTwentyMinTimer *****************
  3721 ;; Defined at:
  3722 ;;		line 550 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;  uiSetValue      2    0[BANK1 ] unsigned int 
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;		None
  3727 ;; Return value:  Size  Location     Type
  3728 ;;		None               void
  3729 ;; Registers used:
  3730 ;;		wreg, status,2, status,0
  3731 ;; Tracked objects:
  3732 ;;		On entry : 17F/20
  3733 ;;		On exit  : 17F/0
  3734 ;;		Unchanged: FFE80/0
  3735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3736 ;;      Params:         0       0       2       0       0
  3737 ;;      Locals:         0       0       0       0       0
  3738 ;;      Temps:          0       0       0       0       0
  3739 ;;      Totals:         0       0       2       0       0
  3740 ;;Total ram usage:        2 bytes
  3741 ;; Hardware stack levels used:    1
  3742 ;; Hardware stack levels required when called:    3
  3743 ;; This function calls:
  3744 ;;		Nothing
  3745 ;; This function is called by:
  3746 ;;		_main
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749  05CC                     _startTwentyMinTimer:	
  3750                           
  3751                           ;common.c: 551: if(( 0 == uiTwentyMinTimer) && ( 0 == bTwentyMinStartFlag))
  3752                           
  3753                           ; Regs used in _startTwentyMinTimer: [wreg+status,2+status,0]
  3754  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  3755  05CD  084C               	movf	_uiTwentyMinTimer+1,w
  3756  05CE  044B               	iorwf	_uiTwentyMinTimer,w
  3757  05CF  1D03               	skipz
  3758  05D0  0008               	return
  3759  05D1  08DE               	movf	_bTwentyMinStartFlag,f
  3760  05D2  1D03               	skipz
  3761  05D3  0008               	return
  3762                           
  3763                           ;common.c: 552: {
  3764                           ;common.c: 553: uiTwentyMinTimer = uiSetValue;
  3765  05D4  1683               	bsf	3,5	;RP0=1, select bank1
  3766  05D5  083E               	movf	(startTwentyMinTimer@uiSetValue+1)^(0+128),w
  3767  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  3768  05D7  00CC               	movwf	_uiTwentyMinTimer+1
  3769  05D8  1683               	bsf	3,5	;RP0=1, select bank1
  3770  05D9  083D               	movf	startTwentyMinTimer@uiSetValue^(0+128),w
  3771  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  3772  05DB  00CB               	movwf	_uiTwentyMinTimer
  3773                           
  3774                           ;common.c: 554: bTwentyMinStartFlag = 1;
  3775  05DC  01DE               	clrf	_bTwentyMinStartFlag
  3776  05DD  0ADE               	incf	_bTwentyMinStartFlag,f
  3777  05DE  0008               	return
  3778  05DF                     __end_of_startTwentyMinTimer:	
  3779                           
  3780                           	psect	text1449
  3781  0551                     __ptext1449:	
  3782 ;; =============== function _adc_test_init ends ============
  3783                           
  3784                           
  3785 ;; *************** function _uid_get *****************
  3786 ;; Defined at:
  3787 ;;		line 31 in file "D:\develop\AK7030-good\AK7030-OTP\periph.c"
  3788 ;; Parameters:    Size  Location     Type
  3789 ;;		None
  3790 ;; Auto vars:     Size  Location     Type
  3791 ;;		None
  3792 ;; Return value:  Size  Location     Type
  3793 ;;		None               void
  3794 ;; Registers used:
  3795 ;;		wreg, status,2
  3796 ;; Tracked objects:
  3797 ;;		On entry : 17F/0
  3798 ;;		On exit  : 17F/60
  3799 ;;		Unchanged: FFE80/0
  3800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3801 ;;      Params:         0       0       0       0       0
  3802 ;;      Locals:         0       0       0       0       0
  3803 ;;      Temps:          0       0       0       0       0
  3804 ;;      Totals:         0       0       0       0       0
  3805 ;;Total ram usage:        0 bytes
  3806 ;; Hardware stack levels used:    1
  3807 ;; Hardware stack levels required when called:    3
  3808 ;; This function calls:
  3809 ;;		Nothing
  3810 ;; This function is called by:
  3811 ;;		_main
  3812 ;; This function uses a non-reentrant model
  3813 ;;
  3814  0551                     _uid_get:	
  3815                           
  3816                           ;periph.c: 33: SRAM_MAP = 1;
  3817                           
  3818                           ; Regs used in _uid_get: [wreg+status,2]
  3819  0551  1683               	bsf	3,5	;RP0=1, select bank3
  3820  0552  1703               	bsf	3,6	;RP1=1, select bank3
  3821  0553  140F               	bsf	15,0
  3822                           
  3823                           ;periph.c: 35: bgr_trim = key.u_1v2;
  3824  0554  0862               	movf	98,w	;volatile
  3825  0555  0863               	movf	99,w	;volatile
  3826                           
  3827                           ;periph.c: 36: ad_offset = key.otp_uid&0xff;
  3828  0556  0867               	movf	103,w	;volatile
  3829  0557  1283               	bcf	3,5	;RP0=0, select bank0
  3830  0558  1303               	bcf	3,6	;RP1=0, select bank0
  3831  0559  00C4               	movwf	_ad_offset+1	;volatile
  3832  055A  1683               	bsf	3,5	;RP0=1, select bank3
  3833  055B  1703               	bsf	3,6	;RP1=1, select bank3
  3834  055C  0866               	movf	102,w	;volatile
  3835  055D  1283               	bcf	3,5	;RP0=0, select bank0
  3836  055E  1303               	bcf	3,6	;RP1=0, select bank0
  3837  055F  00C3               	movwf	_ad_offset	;volatile
  3838  0560  30FF               	movlw	255
  3839  0561  05C3               	andwf	_ad_offset,f
  3840  0562  01C4               	clrf	_ad_offset+1
  3841                           
  3842                           ;periph.c: 38: ad_offset = 0;
  3843  0563  01C3               	clrf	_ad_offset
  3844  0564  01C4               	clrf	_ad_offset+1
  3845                           
  3846                           ;periph.c: 40: SRAM_MAP = 0;
  3847  0565  1683               	bsf	3,5	;RP0=1, select bank3
  3848  0566  1703               	bsf	3,6	;RP1=1, select bank3
  3849  0567  100F               	bcf	15,0
  3850  0568  0008               	return
  3851  0569                     __end_of_uid_get:	
  3852                           
  3853                           	psect	text1450
  3854  061D                     __ptext1450:	
  3855 ;; =============== function _uid_get ends ============
  3856                           
  3857                           
  3858 ;; *************** function _op1_init *****************
  3859 ;; Defined at:
  3860 ;;		line 63 in file "D:\develop\AK7030-good\AK7030-OTP\periph.c"
  3861 ;; Parameters:    Size  Location     Type
  3862 ;;		None
  3863 ;; Auto vars:     Size  Location     Type
  3864 ;;		None
  3865 ;; Return value:  Size  Location     Type
  3866 ;;		None               void
  3867 ;; Registers used:
  3868 ;;		wreg
  3869 ;; Tracked objects:
  3870 ;;		On entry : 17F/20
  3871 ;;		On exit  : 17F/0
  3872 ;;		Unchanged: FFE80/0
  3873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3874 ;;      Params:         0       0       0       0       0
  3875 ;;      Locals:         0       0       0       0       0
  3876 ;;      Temps:          0       0       0       0       0
  3877 ;;      Totals:         0       0       0       0       0
  3878 ;;Total ram usage:        0 bytes
  3879 ;; Hardware stack levels used:    1
  3880 ;; Hardware stack levels required when called:    3
  3881 ;; This function calls:
  3882 ;;		Nothing
  3883 ;; This function is called by:
  3884 ;;		_main
  3885 ;; This function uses a non-reentrant model
  3886 ;;
  3887  061D                     _op1_init:	
  3888                           
  3889                           ;periph.c: 70: OP1CON1=0x13;
  3890                           
  3891                           ; Regs used in _op1_init: [wreg]
  3892  061D  3013               	movlw	19
  3893  061E  1283               	bcf	3,5	;RP0=0, select bank0
  3894  061F  009C               	movwf	28	;volatile
  3895                           
  3896                           ;periph.c: 71: OP1CON2=0x10;
  3897  0620  3010               	movlw	16
  3898  0621  009D               	movwf	29	;volatile
  3899                           
  3900                           ;periph.c: 72: OP1CON0=0x90;
  3901  0622  3090               	movlw	144
  3902  0623  009B               	movwf	27	;volatile
  3903  0624  0008               	return
  3904  0625                     __end_of_op1_init:	
  3905                           
  3906                           	psect	text1451
  3907  063A                     __ptext1451:	
  3908 ;; =============== function _op1_init ends ============
  3909                           
  3910                           
  3911 ;; *************** function _timer1_interrupt_config *****************
  3912 ;; Defined at:
  3913 ;;		line 360 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;		None
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;		None
  3918 ;; Return value:  Size  Location     Type
  3919 ;;		None               void
  3920 ;; Registers used:
  3921 ;;		None
  3922 ;; Tracked objects:
  3923 ;;		On entry : 17F/20
  3924 ;;		On exit  : 17F/20
  3925 ;;		Unchanged: FFE80/0
  3926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3927 ;;      Params:         0       0       0       0       0
  3928 ;;      Locals:         0       0       0       0       0
  3929 ;;      Temps:          0       0       0       0       0
  3930 ;;      Totals:         0       0       0       0       0
  3931 ;;Total ram usage:        0 bytes
  3932 ;; Hardware stack levels used:    1
  3933 ;; Hardware stack levels required when called:    3
  3934 ;; This function calls:
  3935 ;;		Nothing
  3936 ;; This function is called by:
  3937 ;;		_main
  3938 ;; This function uses a non-reentrant model
  3939 ;;
  3940  063A                     _timer1_interrupt_config:	
  3941                           
  3942                           ;common.c: 361: GIE = 1;
  3943                           
  3944                           ; Regs used in _timer1_interrupt_config: []
  3945  063A  178B               	bsf	11,7
  3946                           
  3947                           ;common.c: 362: PEIE = 1;
  3948  063B  170B               	bsf	11,6
  3949  063C  0008               	return
  3950  063D                     __end_of_timer1_interrupt_config:	
  3951                           
  3952                           	psect	text1452
  3953  060B                     __ptext1452:	
  3954 ;; =============== function _timer1_interrupt_config ends ============
  3955                           
  3956                           
  3957 ;; *************** function _timer1_config *****************
  3958 ;; Defined at:
  3959 ;;		line 348 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3960 ;; Parameters:    Size  Location     Type
  3961 ;;		None
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;		None
  3964 ;; Return value:  Size  Location     Type
  3965 ;;		None               void
  3966 ;; Registers used:
  3967 ;;		wreg
  3968 ;; Tracked objects:
  3969 ;;		On entry : 17F/40
  3970 ;;		On exit  : 17F/20
  3971 ;;		Unchanged: FFE80/0
  3972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3973 ;;      Params:         0       0       0       0       0
  3974 ;;      Locals:         0       0       0       0       0
  3975 ;;      Temps:          0       0       0       0       0
  3976 ;;      Totals:         0       0       0       0       0
  3977 ;;Total ram usage:        0 bytes
  3978 ;; Hardware stack levels used:    1
  3979 ;; Hardware stack levels required when called:    3
  3980 ;; This function calls:
  3981 ;;		Nothing
  3982 ;; This function is called by:
  3983 ;;		_main
  3984 ;; This function uses a non-reentrant model
  3985 ;;
  3986  060B                     _timer1_config:	
  3987                           
  3988                           ;common.c: 350: TMR1H=0xCF;
  3989                           
  3990                           ; Regs used in _timer1_config: [wreg]
  3991  060B  30CF               	movlw	207
  3992  060C  1303               	bcf	3,6	;RP1=0, select bank0
  3993  060D  008F               	movwf	15	;volatile
  3994                           
  3995                           ;common.c: 351: TMR1L=0x2C;
  3996  060E  302C               	movlw	44
  3997  060F  008E               	movwf	14	;volatile
  3998                           
  3999                           ;common.c: 352: T1CON=0xE1;
  4000  0610  30E1               	movlw	225
  4001  0611  0090               	movwf	16	;volatile
  4002                           
  4003                           ;common.c: 353: TMR1IE=1;
  4004  0612  1683               	bsf	3,5	;RP0=1, select bank1
  4005  0613  140C               	bsf	12,0
  4006  0614  0008               	return
  4007  0615                     __end_of_timer1_config:	
  4008                           
  4009                           	psect	text1453
  4010  0625                     __ptext1453:	
  4011 ;; =============== function _timer1_config ends ============
  4012                           
  4013                           
  4014 ;; *************** function _clock_config *****************
  4015 ;; Defined at:
  4016 ;;		line 340 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  4017 ;; Parameters:    Size  Location     Type
  4018 ;;		None
  4019 ;; Auto vars:     Size  Location     Type
  4020 ;;		None
  4021 ;; Return value:  Size  Location     Type
  4022 ;;		None               void
  4023 ;; Registers used:
  4024 ;;		wreg, status,2
  4025 ;; Tracked objects:
  4026 ;;		On entry : 17F/20
  4027 ;;		On exit  : 17F/40
  4028 ;;		Unchanged: FFE80/0
  4029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4030 ;;      Params:         0       0       0       0       0
  4031 ;;      Locals:         0       0       0       0       0
  4032 ;;      Temps:          0       0       0       0       0
  4033 ;;      Totals:         0       0       0       0       0
  4034 ;;Total ram usage:        0 bytes
  4035 ;; Hardware stack levels used:    1
  4036 ;; Hardware stack levels required when called:    3
  4037 ;; This function calls:
  4038 ;;		Nothing
  4039 ;; This function is called by:
  4040 ;;		_main
  4041 ;; This function uses a non-reentrant model
  4042 ;;
  4043  0625                     _clock_config:	
  4044                           
  4045                           ;common.c: 342: CLKPR = 0x80;
  4046                           
  4047                           ; Regs used in _clock_config: [wreg+status,2]
  4048  0625  3080               	movlw	128
  4049  0626  1283               	bcf	3,5	;RP0=0, select bank2
  4050  0627  1703               	bsf	3,6	;RP1=1, select bank2
  4051  0628  0088               	movwf	8	;volatile
  4052                           
  4053                           ;common.c: 343: CLKPR = 0x00;
  4054  0629  0188               	clrf	8	;volatile
  4055  062A                     l1577:	
  4056                           ;common.c: 344: while(CLKPCE);
  4057                           
  4058  062A  1F88               	btfss	8,7
  4059  062B  0008               	return
  4060  062C  2E2A               	goto	l1577
  4061  062D                     __end_of_clock_config:	
  4062                           
  4063                           	psect	text1458
  4064  063F                     __ptext1458:	
  4065 ;; =============== function _clearTwelveHoursTimer ends ============
  4066                           
  4067                           
  4068 ;; *************** function _reset *****************
  4069 ;; Defined at:
  4070 ;;		line 307 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  4071 ;; Parameters:    Size  Location     Type
  4072 ;;		None
  4073 ;; Auto vars:     Size  Location     Type
  4074 ;;		None
  4075 ;; Return value:  Size  Location     Type
  4076 ;;		None               void
  4077 ;; Registers used:
  4078 ;;		None
  4079 ;; Tracked objects:
  4080 ;;		On entry : 60/20
  4081 ;;		On exit  : 60/20
  4082 ;;		Unchanged: FFFFFF9F/0
  4083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4084 ;;      Params:         0       0       0       0       0
  4085 ;;      Locals:         0       0       0       0       0
  4086 ;;      Temps:          0       0       0       0       0
  4087 ;;      Totals:         0       0       0       0       0
  4088 ;;Total ram usage:        0 bytes
  4089 ;; Hardware stack levels used:    1
  4090 ;; Hardware stack levels required when called:    3
  4091 ;; This function calls:
  4092 ;;		Nothing
  4093 ;; This function is called by:
  4094 ;;		_main
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097  063F                     _reset:	
  4098  063F                     l730:	
  4099                           ; Regs used in _reset: []
  4100                           ;main.c: 309: while(1);
  4101                           
  4102  063F  2E3F               	goto	l730
  4103                           
  4104                           	psect	text1459
  4105  0636                     __ptext1459:	
  4106  0636                     __end_of_reset:	
  4107                           
  4108 ;; =============== function _reset ends ============
  4109 ;; *************** function _selectAdChannel *****************
  4110 ;; Defined at:
  4111 ;;		line 296 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  4112 ;; Parameters:    Size  Location     Type
  4113 ;;		None
  4114 ;; Auto vars:     Size  Location     Type
  4115 ;;		None
  4116 ;; Return value:  Size  Location     Type
  4117 ;;		None               void
  4118 ;; Registers used:
  4119 ;;		None
  4120 ;; Tracked objects:
  4121 ;;		On entry : 17F/0
  4122 ;;		On exit  : 17F/20
  4123 ;;		Unchanged: FFE80/0
  4124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4125 ;;      Params:         0       0       0       0       0
  4126 ;;      Locals:         0       0       0       0       0
  4127 ;;      Temps:          0       0       0       0       0
  4128 ;;      Totals:         0       0       0       0       0
  4129 ;;Total ram usage:        0 bytes
  4130 ;; Hardware stack levels used:    1
  4131 ;; Hardware stack levels required when called:    3
  4132 ;; This function calls:
  4133 ;;		Nothing
  4134 ;; This function is called by:
  4135 ;;		_main
  4136 ;; This function uses a non-reentrant model
  4137 ;;
  4138  0636                     _selectAdChannel:	
  4139                           
  4140                           ;main.c: 298: TRISB4 = 1;
  4141                           
  4142                           ; Regs used in _selectAdChannel: []
  4143  0636  1683               	bsf	3,5	;RP0=1, select bank1
  4144  0637  1606               	bsf	6,4
  4145                           
  4146                           ;main.c: 299: TRISB5 = 1;
  4147  0638  1686               	bsf	6,5
  4148  0639  0008               	return
  4149  063A                     __end_of_selectAdChannel:	
  4150                           
  4151                           	psect	text1460
  4152  0569                     __ptext1460:	
  4153 ;; =============== function _selectAdChannel ends ============
  4154                           
  4155                           
  4156 ;; *************** function _pwm_start *****************
  4157 ;; Defined at:
  4158 ;;		line 244 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  4159 ;; Parameters:    Size  Location     Type
  4160 ;;  ucPulseWidth    1    wreg     unsigned char 
  4161 ;;  ucPulseFrequ    1    0[BANK1 ] unsigned char 
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;  ucPulseWidth    1    1[BANK1 ] unsigned char 
  4164 ;; Return value:  Size  Location     Type
  4165 ;;		None               void
  4166 ;; Registers used:
  4167 ;;		wreg, status,2, status,0
  4168 ;; Tracked objects:
  4169 ;;		On entry : 60/20
  4170 ;;		On exit  : 60/0
  4171 ;;		Unchanged: FFF9F/0
  4172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4173 ;;      Params:         0       0       1       0       0
  4174 ;;      Locals:         0       0       1       0       0
  4175 ;;      Temps:          0       0       0       0       0
  4176 ;;      Totals:         0       0       2       0       0
  4177 ;;Total ram usage:        2 bytes
  4178 ;; Hardware stack levels used:    1
  4179 ;; Hardware stack levels required when called:    3
  4180 ;; This function calls:
  4181 ;;		Nothing
  4182 ;; This function is called by:
  4183 ;;		_main
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186  0569                     _pwm_start:	
  4187                           
  4188                           ; Regs used in _pwm_start: [wreg+status,2+status,0]
  4189                           ;pwm_start@ucPulseWidth stored from wreg
  4190  0569  00BE               	movwf	pwm_start@ucPulseWidth^(0+128)
  4191                           
  4192                           ;main.c: 246: CCP1CON&= 0xf0;
  4193  056A  30F0               	movlw	240
  4194  056B  1283               	bcf	3,5	;RP0=0, select bank0
  4195  056C  0597               	andwf	23,f	;volatile
  4196                           
  4197                           ;main.c: 248: T2CON=0x04;
  4198  056D  3004               	movlw	4
  4199  056E  0092               	movwf	18	;volatile
  4200                           
  4201                           ;main.c: 249: PR2 = ucPulseFrequency;
  4202  056F  1683               	bsf	3,5	;RP0=1, select bank1
  4203  0570  083D               	movf	pwm_start@ucPulseFrequency^(0+128),w
  4204  0571  0092               	movwf	18	;volatile
  4205                           
  4206                           ;main.c: 250: CCPR1L = ucPulseWidth;
  4207  0572  083E               	movf	pwm_start@ucPulseWidth^(0+128),w
  4208  0573  1283               	bcf	3,5	;RP0=0, select bank0
  4209  0574  0095               	movwf	21	;volatile
  4210                           
  4211                           ;main.c: 251: CCP1CON=0x00;
  4212  0575  0197               	clrf	23	;volatile
  4213                           
  4214                           ;main.c: 253: TRISB2=0;
  4215  0576  1683               	bsf	3,5	;RP0=1, select bank1
  4216  0577  300C               	movlw	12
  4217  0578  1106               	bcf	6,2
  4218                           
  4219                           ;main.c: 254: PBOD2 = 0;
  4220  0579  1703               	bsf	3,6	;RP1=1, select bank3
  4221  057A  1108               	bcf	8,2
  4222                           
  4223                           ;main.c: 256: CCP1CON|= 0x0c;
  4224  057B  1283               	bcf	3,5	;RP0=0, select bank0
  4225  057C  1303               	bcf	3,6	;RP1=0, select bank0
  4226  057D  0497               	iorwf	23,f	;volatile
  4227  057E  0008               	return
  4228  057F                     __end_of_pwm_start:	
  4229                           
  4230                           	psect	text1468
  4231  0013                     __ptext1468:	
  4232 ;; =============== function _initPB3 ends ============
  4233                           
  4234                           
  4235 ;; *************** function _ISR *****************
  4236 ;; Defined at:
  4237 ;;		line 638 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;		None
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;		None
  4242 ;; Return value:  Size  Location     Type
  4243 ;;		None               void
  4244 ;; Registers used:
  4245 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 60/0
  4249 ;;		Unchanged: FFE00/0
  4250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4251 ;;      Params:         0       0       0       0       0
  4252 ;;      Locals:         0       0       0       0       0
  4253 ;;      Temps:          0       4       0       0       0
  4254 ;;      Totals:         0       4       0       0       0
  4255 ;;Total ram usage:        4 bytes
  4256 ;; Hardware stack levels used:    1
  4257 ;; Hardware stack levels required when called:    2
  4258 ;; This function calls:
  4259 ;;		i1_setAD_ConvertFlag
  4260 ;;		_adc_get
  4261 ;;		_vPutSampleDataIntoTable
  4262 ;; This function is called by:
  4263 ;;		Interrupt level 1
  4264 ;; This function uses a non-reentrant model
  4265 ;;
  4266  0013                     _ISR:	
  4267                           
  4268                           ;common.c: 639: static unsigned char ucTimer1sCnt = 0;
  4269                           ;common.c: 642: if(TMR1IF == 1)
  4270  0013  1C0C               	btfss	12,0
  4271  0014  284F               	goto	i1l3794
  4272  0015  3064               	movlw	100
  4273                           
  4274                           ;common.c: 643: {
  4275                           ;common.c: 644: TMR1IF = 0 ;
  4276  0016  100C               	bcf	12,0
  4277                           
  4278                           ;common.c: 645: timer.timer10msStopWatch++;
  4279  0017  0AE1               	incf	_timer,f
  4280                           
  4281                           ;common.c: 646: ucTimer1sCnt++;
  4282  0018  0AD9               	incf	ISR@ucTimer1sCnt,f
  4283                           
  4284                           ;common.c: 650: if(ucTimer1sCnt >= 100)
  4285  0019  0259               	subwf	ISR@ucTimer1sCnt,w
  4286  001A  1C03               	skipc
  4287  001B  284F               	goto	i1l3794
  4288                           
  4289                           ;common.c: 651: {
  4290                           ;common.c: 652: ucTimer1sCnt = 0;
  4291  001C  01D9               	clrf	ISR@ucTimer1sCnt
  4292                           
  4293                           ;common.c: 653: if(uiBigTimer > 0)
  4294  001D  0846               	movf	_uiBigTimer+1,w
  4295  001E  0445               	iorwf	_uiBigTimer,w
  4296  001F  1903               	skipnz
  4297  0020  2827               	goto	i1l1680
  4298                           
  4299                           ;common.c: 654: uiBigTimer--;
  4300  0021  3001               	movlw	1
  4301  0022  02C5               	subwf	_uiBigTimer,f
  4302  0023  3000               	movlw	0
  4303  0024  1C03               	skipc
  4304  0025  03C6               	decf	_uiBigTimer+1,f
  4305  0026  02C6               	subwf	_uiBigTimer+1,f
  4306  0027                     i1l1680:	
  4307                           
  4308                           ;common.c: 656: if(uiSmallTimer)
  4309  0027  084A               	movf	_uiSmallTimer+1,w
  4310  0028  0449               	iorwf	_uiSmallTimer,w
  4311  0029  1903               	skipnz
  4312  002A  2831               	goto	i1l1681
  4313                           
  4314                           ;common.c: 657: uiSmallTimer--;
  4315  002B  3001               	movlw	1
  4316  002C  02C9               	subwf	_uiSmallTimer,f
  4317  002D  3000               	movlw	0
  4318  002E  1C03               	skipc
  4319  002F  03CA               	decf	_uiSmallTimer+1,f
  4320  0030  02CA               	subwf	_uiSmallTimer+1,f
  4321  0031                     i1l1681:	
  4322                           
  4323                           ;common.c: 659: if(uiTwentySecondsTimer)
  4324  0031  084E               	movf	_uiTwentySecondsTimer+1,w
  4325  0032  044D               	iorwf	_uiTwentySecondsTimer,w
  4326  0033  1903               	skipnz
  4327  0034  283B               	goto	i1l1682
  4328                           
  4329                           ;common.c: 660: uiTwentySecondsTimer--;
  4330  0035  3001               	movlw	1
  4331  0036  02CD               	subwf	_uiTwentySecondsTimer,f
  4332  0037  3000               	movlw	0
  4333  0038  1C03               	skipc
  4334  0039  03CE               	decf	_uiTwentySecondsTimer+1,f
  4335  003A  02CE               	subwf	_uiTwentySecondsTimer+1,f
  4336  003B                     i1l1682:	
  4337                           
  4338                           ;common.c: 662: if(uiTwentyMinTimer)
  4339  003B  084C               	movf	_uiTwentyMinTimer+1,w
  4340  003C  044B               	iorwf	_uiTwentyMinTimer,w
  4341  003D  1903               	skipnz
  4342  003E  2845               	goto	i1l1683
  4343                           
  4344                           ;common.c: 663: uiTwentyMinTimer--;
  4345  003F  3001               	movlw	1
  4346  0040  02CB               	subwf	_uiTwentyMinTimer,f
  4347  0041  3000               	movlw	0
  4348  0042  1C03               	skipc
  4349  0043  03CC               	decf	_uiTwentyMinTimer+1,f
  4350  0044  02CC               	subwf	_uiTwentyMinTimer+1,f
  4351  0045                     i1l1683:	
  4352                           
  4353                           ;common.c: 665: if( uiOneHourTimer )
  4354  0045  0848               	movf	_uiOneHourTimer+1,w
  4355  0046  0447               	iorwf	_uiOneHourTimer,w
  4356  0047  1903               	skipnz
  4357  0048  284F               	goto	i1l3794
  4358                           
  4359                           ;common.c: 666: uiOneHourTimer--;
  4360  0049  3001               	movlw	1
  4361  004A  02C7               	subwf	_uiOneHourTimer,f
  4362  004B  3000               	movlw	0
  4363  004C  1C03               	skipc
  4364  004D  03C8               	decf	_uiOneHourTimer+1,f
  4365  004E  02C8               	subwf	_uiOneHourTimer+1,f
  4366  004F                     i1l3794:	
  4367                           
  4368                           ;common.c: 667: }
  4369                           ;common.c: 668: }
  4370                           ;common.c: 670: if(ADIF)
  4371  004F  1D0D               	btfss	13,2
  4372  0050  286B               	goto	i1l1688
  4373  0051  3001               	movlw	1
  4374                           
  4375                           ;common.c: 671: {
  4376                           ;common.c: 673: ADIF=0;
  4377  0052  110D               	bcf	13,2
  4378                           
  4379                           ;common.c: 674: setAD_ConvertFlag(1);
  4380  0053  208A  118A         	fcall	i1_setAD_ConvertFlag
  4381                           
  4382                           ;common.c: 676: if(sampleChannelSelect == 2)
  4383  0055  0865               	movf	_sampleChannelSelect,w
  4384  0056  3A02               	xorlw	2
  4385  0057  1D03               	skipz
  4386  0058  2862               	goto	i1l3804
  4387                           
  4388                           ;common.c: 677: {
  4389                           ;common.c: 680: vPutSampleDataIntoTable(adc_get(),2);
  4390  0059  2078  118A         	fcall	_adc_get
  4391  005B  0871               	movf	?_adc_get+1,w
  4392  005C  00F7               	movwf	?_vPutSampleDataIntoTable+1
  4393  005D  0870               	movf	?_adc_get,w
  4394  005E  00F6               	movwf	?_vPutSampleDataIntoTable
  4395  005F  3002               	movlw	2
  4396  0060  00F8               	movwf	?_vPutSampleDataIntoTable+2
  4397  0061  286A               	goto	L15
  4398  0062                     i1l3804:	
  4399                           ;common.c: 684: }
  4400                           
  4401                           
  4402                           ;common.c: 685: else
  4403                           ;common.c: 686: {
  4404                           ;common.c: 690: vPutSampleDataIntoTable(adc_get(),1);
  4405  0062  2078  118A         	fcall	_adc_get
  4406  0064  0871               	movf	?_adc_get+1,w
  4407  0065  00F7               	movwf	?_vPutSampleDataIntoTable+1
  4408  0066  0870               	movf	?_adc_get,w
  4409  0067  00F6               	movwf	?_vPutSampleDataIntoTable
  4410  0068  01F8               	clrf	?_vPutSampleDataIntoTable+2
  4411  0069  0AF8               	incf	?_vPutSampleDataIntoTable+2,f
  4412  006A                     L15:	
  4413  006A  208D               	fcall	_vPutSampleDataIntoTable
  4414  006B                     i1l1688:	
  4415  006B  1283               	bcf	3,5	;RP0=0, select bank0
  4416  006C  1303               	bcf	3,6	;RP1=0, select bank0
  4417  006D  0842               	movf	??_ISR+3,w
  4418  006E  00FF               	movwf	127
  4419  006F  0841               	movf	??_ISR+2,w
  4420  0070  008A               	movwf	10
  4421  0071  0840               	movf	??_ISR+1,w
  4422  0072  0084               	movwf	4
  4423  0073  0E3F               	swapf	??_ISR^0,w
  4424  0074  0083               	movwf	3
  4425  0075  0EFE               	swapf	126,f
  4426  0076  0E7E               	swapf	126,w
  4427  0077  0009               	retfie
  4428  0078                     __end_of_ISR:	
  4429  0078                     __ptext1471:	
  4430 ;; =============== function i1_setAD_ConvertFlag ends ============
  4431                           
  4432                           
  4433 ;; *************** function _adc_get *****************
  4434 ;; Defined at:
  4435 ;;		line 143 in file "D:\develop\AK7030-good\AK7030-OTP\periph.c"
  4436 ;; Parameters:    Size  Location     Type
  4437 ;;		None
  4438 ;; Auto vars:     Size  Location     Type
  4439 ;;  val             2    2[COMMON] unsigned int 
  4440 ;; Return value:  Size  Location     Type
  4441 ;;                  2    0[COMMON] unsigned int 
  4442 ;; Registers used:
  4443 ;;		wreg
  4444 ;; Tracked objects:
  4445 ;;		On entry : 60/0
  4446 ;;		On exit  : 60/0
  4447 ;;		Unchanged: FFF9F/0
  4448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4449 ;;      Params:         2       0       0       0       0
  4450 ;;      Locals:         2       0       0       0       0
  4451 ;;      Temps:          0       0       0       0       0
  4452 ;;      Totals:         4       0       0       0       0
  4453 ;;Total ram usage:        4 bytes
  4454 ;; Hardware stack levels used:    1
  4455 ;; This function calls:
  4456 ;;		Nothing
  4457 ;; This function is called by:
  4458 ;;		_ISR
  4459 ;; This function uses a non-reentrant model
  4460 ;;
  4461  0078                     _adc_get:	
  4462                           
  4463                           ;periph.c: 144: unsigned int val;
  4464                           ;periph.c: 145: val = (ADRESH<<8) | ADRESL;
  4465                           
  4466                           ; Regs used in _adc_get: [wreg]
  4467  0078  081E               	movf	30,w	;volatile
  4468  0079  00F3               	movwf	adc_get@val+1
  4469  007A  01F2               	clrf	adc_get@val
  4470  007B  1683               	bsf	3,5	;RP0=1, select bank1
  4471  007C  081E               	movf	30,w	;volatile
  4472  007D  04F2               	iorwf	adc_get@val,f
  4473                           
  4474                           ;periph.c: 147: val = val + ad_offset;
  4475  007E  1283               	bcf	3,5	;RP0=0, select bank0
  4476  007F  0843               	movf	_ad_offset,w
  4477  0080  07F2               	addwf	adc_get@val,f
  4478  0081  1803               	skipnc
  4479  0082  0AF3               	incf	adc_get@val+1,f
  4480  0083  0844               	movf	_ad_offset+1,w
  4481  0084  07F3               	addwf	adc_get@val+1,f
  4482                           
  4483                           ;periph.c: 148: return val;
  4484  0085  0873               	movf	adc_get@val+1,w
  4485  0086  00F1               	movwf	?_adc_get+1
  4486  0087  0872               	movf	adc_get@val,w
  4487  0088  00F0               	movwf	?_adc_get
  4488  0089  0008               	return
  4489  008A                     __end_of_adc_get:	
  4490  008A                     __ptext1470:	
  4491 ;; =============== function _vPutSampleDataIntoTable ends ============
  4492                           
  4493                           
  4494 ;; *************** function i1_setAD_ConvertFlag *****************
  4495 ;; Defined at:
  4496 ;;		line 374 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;  setAD_Conver    1    wreg     unsigned char 
  4499 ;; Auto vars:     Size  Location     Type
  4500 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  4501 ;; Return value:  Size  Location     Type
  4502 ;;		None               void
  4503 ;; Registers used:
  4504 ;;		wreg
  4505 ;; Tracked objects:
  4506 ;;		On entry : 60/0
  4507 ;;		On exit  : 60/0
  4508 ;;		Unchanged: FFF9F/0
  4509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4510 ;;      Params:         0       0       0       0       0
  4511 ;;      Locals:         1       0       0       0       0
  4512 ;;      Temps:          0       0       0       0       0
  4513 ;;      Totals:         1       0       0       0       0
  4514 ;;Total ram usage:        1 bytes
  4515 ;; Hardware stack levels used:    1
  4516 ;; This function calls:
  4517 ;;		Nothing
  4518 ;; This function is called by:
  4519 ;;		_ISR
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522  008A                     i1_setAD_ConvertFlag:	
  4523                           
  4524                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  4525                           ;i1setAD_ConvertFlag@flag stored from wreg
  4526  008A  00F0               	movwf	i1setAD_ConvertFlag@flag
  4527                           
  4528                           ;common.c: 375: adc_convert_flag = flag;
  4529  008B  00DA               	movwf	_adc_convert_flag
  4530  008C  0008               	return
  4531  008D                     __end_ofi1_setAD_ConvertFlag:	
  4532  008D                     __ptext1469:	
  4533 ;; =============== function _ISR ends ============
  4534                           
  4535                           
  4536 ;; *************** function _vPutSampleDataIntoTable *****************
  4537 ;; Defined at:
  4538 ;;		line 165 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  4539 ;; Parameters:    Size  Location     Type
  4540 ;;  uiSampleData    2    6[COMMON] unsigned int 
  4541 ;;  channel         1    8[COMMON] unsigned char 
  4542 ;; Auto vars:     Size  Location     Type
  4543 ;;  uiDeviationV    2    9[COMMON] unsigned int 
  4544 ;;  uiAbstractVa    2    0        unsigned int 
  4545 ;;  i               2   11[COMMON] int 
  4546 ;; Return value:  Size  Location     Type
  4547 ;;		None               void
  4548 ;; Registers used:
  4549 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4550 ;; Tracked objects:
  4551 ;;		On entry : 60/0
  4552 ;;		On exit  : 0/0
  4553 ;;		Unchanged: FFE00/0
  4554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4555 ;;      Params:         3       0       0       0       0
  4556 ;;      Locals:         4       0       0       0       0
  4557 ;;      Temps:          0      16       0       0       0
  4558 ;;      Totals:         7      16       0       0       0
  4559 ;;Total ram usage:       23 bytes
  4560 ;; Hardware stack levels used:    1
  4561 ;; Hardware stack levels required when called:    1
  4562 ;; This function calls:
  4563 ;;		_Filter
  4564 ;;		_getWaitResetFlag
  4565 ;;		_setPWM_Width
  4566 ;; This function is called by:
  4567 ;;		_ISR
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570  008D                     _vPutSampleDataIntoTable:	
  4571                           
  4572                           ;common.c: 167: static unsigned char ucCh12Length = 0;
  4573                           ;common.c: 169: static unsigned char ucCh13Length = 0;
  4574                           ;common.c: 171: static unsigned char ucChannelFourteenthLength = 0;
  4575                           ;common.c: 172: static unsigned int uiCalWidthArrayNew = 0;
  4576                           ;common.c: 173: static unsigned int uiCalWidthArrayOld = 0;
  4577                           ;common.c: 175: static unsigned int uiCalWidthArray1 = 0;
  4578                           ;common.c: 176: static unsigned int uiCalWidthArray2 = 0;
  4579                           ;common.c: 177: static unsigned int uiCalWidthArray3 = 0;
  4580                           ;common.c: 178: static unsigned int uiCalWidthArray4 = 0;
  4581                           
  4582                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  4583  008D  0878               	movf	vPutSampleDataIntoTable@channel,w
  4584  008E  3A02               	xorlw	2
  4585  008F  1D03               	skipz
  4586  0090  2949               	goto	i1l3716
  4587                           
  4588                           ;common.c: 183: {
  4589                           ;common.c: 184: if(ucCh12Length < 3)
  4590  0091  3003               	movlw	3
  4591  0092  027D               	subwf	vPutSampleDataIntoTable@ucCh12Length,w
  4592  0093  1803               	skipnc
  4593  0094  2943               	goto	i1l3712
  4594                           
  4595                           ;common.c: 185: {
  4596                           ;common.c: 186: uiSampleCh12[ucCh12Length] = uiSampleData;
  4597  0095  1003               	clrc
  4598  0096  0D7D               	rlf	vPutSampleDataIntoTable@ucCh12Length,w
  4599  0097  3EAB               	addlw	_uiSampleCh12& (0+255)
  4600  0098  221D  118A         	fcall	PL2	;call to abstracted procedure
  4601                           
  4602                           ;common.c: 188: ucCh12Length++;
  4603  009A  0AFD               	incf	vPutSampleDataIntoTable@ucCh12Length,f
  4604                           
  4605                           ;common.c: 190: if( 3 == ucCh12Length )
  4606  009B  087D               	movf	vPutSampleDataIntoTable@ucCh12Length,w
  4607  009C  3A03               	xorlw	3
  4608  009D  1D03               	skipz
  4609  009E  0008               	return
  4610  009F  30AB               	movlw	_uiSampleCh12& (0+255)
  4611                           
  4612                           ;common.c: 191: {
  4613                           ;common.c: 192: ucCh12Length = 0;
  4614  00A0  01FD               	clrf	vPutSampleDataIntoTable@ucCh12Length
  4615                           
  4616                           ;common.c: 196: static unsigned char bInitArrayFlag = 0;
  4617                           ;common.c: 198: static unsigned int uiCalWidthArray[1],uiCalWidthCnt = 0;
  4618                           ;common.c: 200: static unsigned char uiInitWidth = 75;
  4619                           ;common.c: 203: uiCalWidthArray1 = Filter(uiSampleCh12);
  4620  00A1  2195  118A         	fcall	_Filter
  4621  00A3  0871               	movf	?_Filter+1,w
  4622  00A4  00D0               	movwf	vPutSampleDataIntoTable@uiCalWidthArray1+1
  4623  00A5  0870               	movf	?_Filter,w
  4624  00A6  00CF               	movwf	vPutSampleDataIntoTable@uiCalWidthArray1
  4625                           
  4626                           ;common.c: 205: if( 0 == ucInitFlag)
  4627  00A7  08E4               	movf	vPutSampleDataIntoTable@ucInitFlag,f
  4628  00A8  1D03               	skipz
  4629  00A9  28B8               	goto	i1l3688
  4630                           
  4631                           ;common.c: 206: {
  4632                           ;common.c: 207: ucInitFlag = 1;
  4633  00AA  01E4               	clrf	vPutSampleDataIntoTable@ucInitFlag
  4634  00AB  0AE4               	incf	vPutSampleDataIntoTable@ucInitFlag,f
  4635                           
  4636                           ;common.c: 209: uiCalWidthArray2 = uiCalWidthArray1;
  4637  00AC  0850               	movf	vPutSampleDataIntoTable@uiCalWidthArray1+1,w
  4638  00AD  00D2               	movwf	vPutSampleDataIntoTable@uiCalWidthArray2+1
  4639  00AE  084F               	movf	vPutSampleDataIntoTable@uiCalWidthArray1,w
  4640  00AF  00D1               	movwf	vPutSampleDataIntoTable@uiCalWidthArray2
  4641                           
  4642                           ;common.c: 210: uiCalWidthArray3 = uiCalWidthArray1;
  4643  00B0  0850               	movf	vPutSampleDataIntoTable@uiCalWidthArray1+1,w
  4644  00B1  00D4               	movwf	vPutSampleDataIntoTable@uiCalWidthArray3+1
  4645  00B2  084F               	movf	vPutSampleDataIntoTable@uiCalWidthArray1,w
  4646  00B3  00D3               	movwf	vPutSampleDataIntoTable@uiCalWidthArray3
  4647                           
  4648                           ;common.c: 211: uiCalWidthArray4 = uiCalWidthArray1;
  4649  00B4  0850               	movf	vPutSampleDataIntoTable@uiCalWidthArray1+1,w
  4650  00B5  00D6               	movwf	vPutSampleDataIntoTable@uiCalWidthArray4+1
  4651  00B6  084F               	movf	vPutSampleDataIntoTable@uiCalWidthArray1,w
  4652  00B7  00D5               	movwf	vPutSampleDataIntoTable@uiCalWidthArray4
  4653  00B8                     i1l3688:	
  4654                           
  4655                           ;common.c: 228: uiDeviationValue = (uiCalWidthArray1 >> 2) + (uiCalWidthArray2 >> 2)
  4656                           ;common.c: 229: + (uiCalWidthArray3 >> 2) + (uiCalWidthArray4 >> 2) + uiCalWidthArray4 -
      +                           uiCalWidthArray3;
  4657  00B8  0856               	movf	vPutSampleDataIntoTable@uiCalWidthArray4+1,w
  4658  00B9  00B0               	movwf	??_vPutSampleDataIntoTable+1
  4659  00BA  0855               	movf	vPutSampleDataIntoTable@uiCalWidthArray4,w
  4660  00BB  00AF               	movwf	??_vPutSampleDataIntoTable
  4661  00BC  1003               	clrc
  4662  00BD  0CB0               	rrf	??_vPutSampleDataIntoTable+1,f
  4663  00BE  0CAF               	rrf	??_vPutSampleDataIntoTable,f
  4664  00BF  1003               	clrc
  4665  00C0  0CB0               	rrf	??_vPutSampleDataIntoTable+1,f
  4666  00C1  0CAF               	rrf	??_vPutSampleDataIntoTable,f
  4667  00C2  0854               	movf	vPutSampleDataIntoTable@uiCalWidthArray3+1,w
  4668  00C3  00B2               	movwf	??_vPutSampleDataIntoTable+3
  4669  00C4  0853               	movf	vPutSampleDataIntoTable@uiCalWidthArray3,w
  4670  00C5  00B1               	movwf	??_vPutSampleDataIntoTable+2
  4671  00C6  1003               	clrc
  4672  00C7  0CB2               	rrf	??_vPutSampleDataIntoTable+3,f
  4673  00C8  0CB1               	rrf	??_vPutSampleDataIntoTable+2,f
  4674  00C9  1003               	clrc
  4675  00CA  0CB2               	rrf	??_vPutSampleDataIntoTable+3,f
  4676  00CB  0CB1               	rrf	??_vPutSampleDataIntoTable+2,f
  4677  00CC  0852               	movf	vPutSampleDataIntoTable@uiCalWidthArray2+1,w
  4678  00CD  00B4               	movwf	??_vPutSampleDataIntoTable+5
  4679  00CE  0851               	movf	vPutSampleDataIntoTable@uiCalWidthArray2,w
  4680  00CF  00B3               	movwf	??_vPutSampleDataIntoTable+4
  4681  00D0  1003               	clrc
  4682  00D1  0CB4               	rrf	??_vPutSampleDataIntoTable+5,f
  4683  00D2  0CB3               	rrf	??_vPutSampleDataIntoTable+4,f
  4684  00D3  1003               	clrc
  4685  00D4  0CB4               	rrf	??_vPutSampleDataIntoTable+5,f
  4686  00D5  0CB3               	rrf	??_vPutSampleDataIntoTable+4,f
  4687  00D6  0850               	movf	vPutSampleDataIntoTable@uiCalWidthArray1+1,w
  4688  00D7  00B6               	movwf	??_vPutSampleDataIntoTable+7
  4689  00D8  084F               	movf	vPutSampleDataIntoTable@uiCalWidthArray1,w
  4690  00D9  00B5               	movwf	??_vPutSampleDataIntoTable+6
  4691  00DA  1003               	clrc
  4692  00DB  0CB6               	rrf	??_vPutSampleDataIntoTable+7,f
  4693  00DC  0CB5               	rrf	??_vPutSampleDataIntoTable+6,f
  4694  00DD  1003               	clrc
  4695  00DE  0CB6               	rrf	??_vPutSampleDataIntoTable+7,f
  4696  00DF  0CB5               	rrf	??_vPutSampleDataIntoTable+6,f
  4697  00E0  0833               	movf	??_vPutSampleDataIntoTable+4,w
  4698  00E1  0735               	addwf	??_vPutSampleDataIntoTable+6,w
  4699  00E2  00B7               	movwf	??_vPutSampleDataIntoTable+8
  4700  00E3  0834               	movf	??_vPutSampleDataIntoTable+5,w
  4701  00E4  1803               	skipnc
  4702  00E5  0A34               	incf	??_vPutSampleDataIntoTable+5,w
  4703  00E6  0736               	addwf	??_vPutSampleDataIntoTable+7,w
  4704  00E7  00B8               	movwf	??_vPutSampleDataIntoTable+9
  4705  00E8  0831               	movf	??_vPutSampleDataIntoTable+2,w
  4706  00E9  0737               	addwf	??_vPutSampleDataIntoTable+8,w
  4707  00EA  00B9               	movwf	??_vPutSampleDataIntoTable+10
  4708  00EB  0832               	movf	??_vPutSampleDataIntoTable+3,w
  4709  00EC  1803               	skipnc
  4710  00ED  0A32               	incf	??_vPutSampleDataIntoTable+3,w
  4711  00EE  0738               	addwf	??_vPutSampleDataIntoTable+9,w
  4712  00EF  00BA               	movwf	??_vPutSampleDataIntoTable+11
  4713  00F0  082F               	movf	??_vPutSampleDataIntoTable,w
  4714  00F1  0739               	addwf	??_vPutSampleDataIntoTable+10,w
  4715  00F2  00BB               	movwf	??_vPutSampleDataIntoTable+12
  4716  00F3  0830               	movf	??_vPutSampleDataIntoTable+1,w
  4717  00F4  1803               	skipnc
  4718  00F5  0A30               	incf	??_vPutSampleDataIntoTable+1,w
  4719  00F6  073A               	addwf	??_vPutSampleDataIntoTable+11,w
  4720  00F7  00BC               	movwf	??_vPutSampleDataIntoTable+13
  4721  00F8  0853               	movf	vPutSampleDataIntoTable@uiCalWidthArray3,w
  4722  00F9  023B               	subwf	??_vPutSampleDataIntoTable+12,w
  4723  00FA  00BD               	movwf	??_vPutSampleDataIntoTable+14
  4724  00FB  0854               	movf	vPutSampleDataIntoTable@uiCalWidthArray3+1,w
  4725  00FC  1C03               	skipc
  4726  00FD  0A54               	incf	vPutSampleDataIntoTable@uiCalWidthArray3+1,w
  4727  00FE  023C               	subwf	??_vPutSampleDataIntoTable+13,w
  4728  00FF  00BE               	movwf	??_vPutSampleDataIntoTable+15
  4729  0100  0855               	movf	vPutSampleDataIntoTable@uiCalWidthArray4,w
  4730  0101  073D               	addwf	??_vPutSampleDataIntoTable+14,w
  4731  0102  00F9               	movwf	vPutSampleDataIntoTable@uiDeviationValue
  4732  0103  0856               	movf	vPutSampleDataIntoTable@uiCalWidthArray4+1,w
  4733  0104  1803               	skipnc
  4734  0105  0A56               	incf	vPutSampleDataIntoTable@uiCalWidthArray4+1,w
  4735  0106  073E               	addwf	??_vPutSampleDataIntoTable+15,w
  4736  0107  00FA               	movwf	vPutSampleDataIntoTable@uiDeviationValue+1
  4737                           
  4738                           ;common.c: 233: if(uiCalWidthCnt>400)
  4739  0108  3001               	movlw	1
  4740  0109  0258               	subwf	vPutSampleDataIntoTable@uiCalWidthCnt+1,w
  4741  010A  3091               	movlw	145
  4742  010B  1903               	skipnz
  4743  010C  0257               	subwf	vPutSampleDataIntoTable@uiCalWidthCnt,w
  4744  010D  1C03               	skipc
  4745  010E  2913               	goto	i1l1553
  4746                           
  4747                           ;common.c: 234: uiDeviationValue =400;
  4748  010F  3090               	movlw	144
  4749  0110  00F9               	movwf	vPutSampleDataIntoTable@uiDeviationValue
  4750  0111  3001               	movlw	1
  4751  0112  00FA               	movwf	vPutSampleDataIntoTable@uiDeviationValue+1
  4752  0113                     i1l1553:	
  4753                           
  4754                           ;common.c: 236: uiCalWidthArray4 = uiCalWidthArray3;
  4755  0113  0854               	movf	vPutSampleDataIntoTable@uiCalWidthArray3+1,w
  4756  0114  00D6               	movwf	vPutSampleDataIntoTable@uiCalWidthArray4+1
  4757  0115  0853               	movf	vPutSampleDataIntoTable@uiCalWidthArray3,w
  4758  0116  00D5               	movwf	vPutSampleDataIntoTable@uiCalWidthArray4
  4759                           
  4760                           ;common.c: 237: uiCalWidthArray3 = uiCalWidthArray2;
  4761  0117  0852               	movf	vPutSampleDataIntoTable@uiCalWidthArray2+1,w
  4762  0118  00D4               	movwf	vPutSampleDataIntoTable@uiCalWidthArray3+1
  4763  0119  0851               	movf	vPutSampleDataIntoTable@uiCalWidthArray2,w
  4764  011A  00D3               	movwf	vPutSampleDataIntoTable@uiCalWidthArray3
  4765                           
  4766                           ;common.c: 241: uiCalWidthArrayOld=uiCalWidthArrayNew;
  4767  011B  0850               	movf	vPutSampleDataIntoTable@uiCalWidthArray1+1,w
  4768  011C  00D2               	movwf	vPutSampleDataIntoTable@uiCalWidthArray2+1
  4769  011D  084F               	movf	vPutSampleDataIntoTable@uiCalWidthArray1,w
  4770  011E  00D1               	movwf	vPutSampleDataIntoTable@uiCalWidthArray2
  4771                           
  4772                           ;common.c: 246: if(uiDeviationValue > (475))
  4773  011F  3001               	movlw	1
  4774  0120  027A               	subwf	vPutSampleDataIntoTable@uiDeviationValue+1,w
  4775  0121  30DC               	movlw	220
  4776  0122  1903               	skipnz
  4777  0123  0279               	subwf	vPutSampleDataIntoTable@uiDeviationValue,w
  4778  0124  1C03               	skipc
  4779  0125  2928               	goto	i1l3696
  4780                           
  4781                           ;common.c: 247: {
  4782                           ;common.c: 250: uiInitWidth++;
  4783  0126  0AE6               	incf	vPutSampleDataIntoTable@uiInitWidth,f
  4784                           
  4785                           ;common.c: 252: }
  4786  0127  292F               	goto	i1l3700
  4787  0128                     i1l3696:	
  4788                           
  4789                           ;common.c: 253: else if(uiDeviationValue < (475))
  4790  0128  3001               	movlw	1
  4791  0129  027A               	subwf	vPutSampleDataIntoTable@uiDeviationValue+1,w
  4792  012A  30DB               	movlw	219
  4793  012B  1903               	skipnz
  4794  012C  0279               	subwf	vPutSampleDataIntoTable@uiDeviationValue,w
  4795  012D  1C03               	btfss	3,0
  4796                           
  4797                           ;common.c: 254: {
  4798                           ;common.c: 257: uiInitWidth--;
  4799  012E  03E6               	decf	vPutSampleDataIntoTable@uiInitWidth,f
  4800  012F                     i1l3700:	
  4801                           ;common.c: 259: }
  4802                           
  4803                           
  4804                           ;common.c: 263: if(uiInitWidth > 249)
  4805  012F  30FA               	movlw	250
  4806  0130  0266               	subwf	vPutSampleDataIntoTable@uiInitWidth,w
  4807  0131  1C03               	skipc
  4808  0132  2935               	goto	i1l1558
  4809                           
  4810                           ;common.c: 264: uiInitWidth = 249;
  4811  0133  30F9               	movlw	249
  4812  0134  00E6               	movwf	vPutSampleDataIntoTable@uiInitWidth
  4813  0135                     i1l1558:	
  4814                           
  4815                           ;common.c: 266: if(uiInitWidth < 75)
  4816  0135  304B               	movlw	75
  4817  0136  0266               	subwf	vPutSampleDataIntoTable@uiInitWidth,w
  4818  0137  1803               	skipnc
  4819  0138  293B               	goto	i1l3706
  4820                           
  4821                           ;common.c: 267: uiInitWidth = 75;
  4822  0139  304B               	movlw	75
  4823  013A  00E6               	movwf	vPutSampleDataIntoTable@uiInitWidth
  4824  013B                     i1l3706:	
  4825                           
  4826                           ;common.c: 61: return bWaitResetFlag;
  4827                           
  4828                           ; Regs used in _getWaitResetFlag: [wreg]
  4829                           
  4830                           ;common.c: 271: if( 1 == getWaitResetFlag())
  4831  013B  085F               	movf	_bWaitResetFlag,w
  4832  013C  3A01               	xorlw	1
  4833  013D  1D03               	skipz
  4834  013E  2941               	goto	i1l3710
  4835                           
  4836                           ;common.c: 272: {
  4837                           ;common.c: 274: uiInitWidth = 150;
  4838  013F  3096               	movlw	150
  4839  0140  00E6               	movwf	vPutSampleDataIntoTable@uiInitWidth
  4840  0141                     i1l3710:	
  4841                           
  4842                           ;common.c: 275: }
  4843                           ;common.c: 276: setPWM_Width(uiInitWidth);
  4844  0141  0866               	movf	vPutSampleDataIntoTable@uiInitWidth,w
  4845  0142  2A1A               	ljmp	_setPWM_Width
  4846  0143                     i1l3712:	
  4847                           
  4848                           ;common.c: 281: else
  4849                           ;common.c: 282: {
  4850                           ;common.c: 283: ucCh12Length = 0;
  4851  0143  01FD               	clrf	vPutSampleDataIntoTable@ucCh12Length
  4852                           
  4853                           ;common.c: 285: uiSampleCh12[ucCh12Length] = uiSampleData;
  4854  0144  1003               	clrc
  4855  0145  0D7D               	rlf	vPutSampleDataIntoTable@ucCh12Length,w
  4856  0146  3EAB               	addlw	_uiSampleCh12& (0+255)
  4857  0147  221D               	fcall	PL2	;call to abstracted procedure
  4858  0148  0008               	return
  4859  0149                     i1l3716:	
  4860                           
  4861                           ;common.c: 288: else if(channel == 1)
  4862  0149  0B78               	decfsz	vPutSampleDataIntoTable@channel,w
  4863  014A  295B               	goto	i1l3728
  4864                           
  4865                           ;common.c: 289: {
  4866                           ;common.c: 290: if(ucCh13Length < 3)
  4867  014B  3003               	movlw	3
  4868  014C  0262               	subwf	vPutSampleDataIntoTable@ucCh13Length,w
  4869  014D  1803               	skipnc
  4870  014E  2955               	goto	i1l3724
  4871                           
  4872                           ;common.c: 291: {
  4873                           ;common.c: 292: uiSampleCh13[ucCh13Length] = uiSampleData;
  4874  014F  1003               	clrc
  4875  0150  0D62               	rlf	vPutSampleDataIntoTable@ucCh13Length,w
  4876  0151  3EB1               	addlw	_uiSampleCh13& (0+255)
  4877  0152  221D               	fcall	PL2	;call to abstracted procedure
  4878                           
  4879                           ;common.c: 294: ucCh13Length++;
  4880  0153  0AE2               	incf	vPutSampleDataIntoTable@ucCh13Length,f
  4881                           
  4882                           ;common.c: 295: }
  4883  0154  0008               	return
  4884  0155                     i1l3724:	
  4885                           
  4886                           ;common.c: 296: else
  4887                           ;common.c: 297: {
  4888                           ;common.c: 298: ucCh13Length = 0;
  4889  0155  01E2               	clrf	vPutSampleDataIntoTable@ucCh13Length
  4890                           
  4891                           ;common.c: 300: uiSampleCh13[ucCh13Length] = uiSampleData;
  4892  0156  1003               	clrc
  4893  0157  0D62               	rlf	vPutSampleDataIntoTable@ucCh13Length,w
  4894  0158  3EB1               	addlw	_uiSampleCh13& (0+255)
  4895  0159  221D               	fcall	PL2	;call to abstracted procedure
  4896  015A  0008               	return
  4897  015B                     i1l3728:	
  4898                           
  4899                           ;common.c: 303: else if(channel == 14)
  4900  015B  0878               	movf	vPutSampleDataIntoTable@channel,w
  4901  015C  3A0E               	xorlw	14
  4902  015D  1D03               	skipz
  4903  015E  296F               	goto	i1l3740
  4904                           
  4905                           ;common.c: 304: {
  4906                           ;common.c: 305: if(ucChannelFourteenthLength < 3)
  4907  015F  3003               	movlw	3
  4908  0160  0263               	subwf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4909  0161  1803               	skipnc
  4910  0162  2969               	goto	i1l3736
  4911                           
  4912                           ;common.c: 306: {
  4913                           ;common.c: 307: uiSampleChannelFourteenth[ucChannelFourteenthLength] = uiSampleData;
  4914  0163  1003               	clrc
  4915  0164  0D63               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4916  0165  3EB7               	addlw	_uiSampleChannelFourteenth& (0+255)
  4917  0166  221D               	fcall	PL2	;call to abstracted procedure
  4918                           
  4919                           ;common.c: 309: ucChannelFourteenthLength++;
  4920  0167  0AE3               	incf	vPutSampleDataIntoTable@ucChannelFourteenthLength,f
  4921                           
  4922                           ;common.c: 310: }
  4923  0168  0008               	return
  4924  0169                     i1l3736:	
  4925                           
  4926                           ;common.c: 311: else
  4927                           ;common.c: 312: {
  4928                           ;common.c: 313: ucChannelFourteenthLength = 0;
  4929  0169  01E3               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4930                           
  4931                           ;common.c: 315: uiSampleCh13[ucChannelFourteenthLength] = uiSampleData;
  4932  016A  1003               	clrc
  4933  016B  0D63               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4934  016C  3EB1               	addlw	_uiSampleCh13& (0+255)
  4935  016D  221D               	fcall	PL2	;call to abstracted procedure
  4936  016E  0008               	return
  4937  016F                     i1l3740:	
  4938                           
  4939                           ;common.c: 318: else
  4940                           ;common.c: 319: {
  4941                           ;common.c: 320: ucCh12Length = 0;
  4942  016F  01FD               	clrf	vPutSampleDataIntoTable@ucCh12Length
  4943                           
  4944                           ;common.c: 322: ucCh13Length = 0;
  4945  0170  01E2               	clrf	vPutSampleDataIntoTable@ucCh13Length
  4946                           
  4947                           ;common.c: 324: ucChannelFourteenthLength = 0;
  4948  0171  01E3               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4949                           
  4950                           ;common.c: 326: for(int i = 0;i < 3; i++)
  4951  0172  01FB               	clrf	vPutSampleDataIntoTable@i
  4952  0173  01FC               	clrf	vPutSampleDataIntoTable@i+1
  4953  0174                     i1l3746:	
  4954                           
  4955                           ;common.c: 327: {
  4956                           ;common.c: 328: uiSampleCh12[i] = 0;
  4957  0174  1003               	clrc
  4958  0175  0D7B               	rlf	vPutSampleDataIntoTable@i,w
  4959  0176  3EAB               	addlw	_uiSampleCh12& (0+255)
  4960  0177  0084               	movwf	4
  4961  0178  1383               	bcf	3,7	;select IRP bank1
  4962                           
  4963                           ;common.c: 330: uiSampleCh13[i] = 0;
  4964  0179  223B  118A         	fcall	PL10	;call to abstracted procedure
  4965  017B  3EB1               	addlw	_uiSampleCh13& (0+255)
  4966  017C  0084               	movwf	4
  4967                           
  4968                           ;common.c: 332: uiSampleChannelFourteenth[i] = 0;
  4969  017D  223B  118A         	fcall	PL10	;call to abstracted procedure
  4970  017F  3EB7               	addlw	_uiSampleChannelFourteenth& (0+255)
  4971  0180  0084               	movwf	4
  4972  0181  0180               	clrf	0
  4973  0182  0A84               	incf	4,f
  4974  0183  0180               	clrf	0
  4975  0184  0AFB               	incf	vPutSampleDataIntoTable@i,f
  4976  0185  1903               	skipnz
  4977  0186  0AFC               	incf	vPutSampleDataIntoTable@i+1,f
  4978  0187  087C               	movf	vPutSampleDataIntoTable@i+1,w
  4979  0188  3A80               	xorlw	128
  4980  0189  00FF               	movwf	127
  4981  018A  3080               	movlw	128
  4982  018B  027F               	subwf	127,w
  4983  018C  1D03               	skipz
  4984  018D  2990               	goto	u132_25
  4985  018E  3003               	movlw	3
  4986  018F  027B               	subwf	vPutSampleDataIntoTable@i,w
  4987  0190                     u132_25:	
  4988  0190  1803               	btfsc	3,0
  4989  0191  0008               	return
  4990  0192  2974               	goto	i1l3746
  4991  0193                     __end_of_vPutSampleDataIntoTable:	
  4992  0193                     __ptext1474:	
  4993 ;; =============== function _setPWM_Width ends ============
  4994                           
  4995                           
  4996 ;; *************** function _getWaitResetFlag *****************
  4997 ;; Defined at:
  4998 ;;		line 60 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  4999 ;; Parameters:    Size  Location     Type
  5000 ;;		None
  5001 ;; Auto vars:     Size  Location     Type
  5002 ;;		None
  5003 ;; Return value:  Size  Location     Type
  5004 ;;                  1    wreg      unsigned char 
  5005 ;; Registers used:
  5006 ;;		wreg
  5007 ;; Tracked objects:
  5008 ;;		On entry : 160/0
  5009 ;;		On exit  : 160/0
  5010 ;;		Unchanged: FFE9F/0
  5011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5012 ;;      Params:         0       0       0       0       0
  5013 ;;      Locals:         0       0       0       0       0
  5014 ;;      Temps:          0       0       0       0       0
  5015 ;;      Totals:         0       0       0       0       0
  5016 ;;Total ram usage:        0 bytes
  5017 ;; Hardware stack levels used:    1
  5018 ;; This function calls:
  5019 ;;		Nothing
  5020 ;; This function is called by:
  5021 ;;		_vPutSampleDataIntoTable
  5022 ;; This function uses a non-reentrant model
  5023 ;;
  5024  0193                     _getWaitResetFlag:	
  5025                           
  5026                           ;common.c: 61: return bWaitResetFlag;
  5027                           
  5028                           ; Regs used in _getWaitResetFlag: [wreg]
  5029  0193  085F               	movf	_bWaitResetFlag,w
  5030  0194  0008               	return
  5031  0195                     __end_of_getWaitResetFlag:	
  5032  0195                     __ptext1472:	
  5033 ;; =============== function _adc_get ends ============
  5034                           
  5035                           
  5036 ;; *************** function _Filter *****************
  5037 ;; Defined at:
  5038 ;;		line 117 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;  tmpValue        1    wreg     PTR unsigned int 
  5041 ;;		 -> uiSampleChannelFourteenth(6), uiSampleCh12(6), 
  5042 ;; Auto vars:     Size  Location     Type
  5043 ;;  tmpValue        1    4[BANK0 ] PTR unsigned int 
  5044 ;;		 -> uiSampleChannelFourteenth(6), uiSampleCh12(6), 
  5045 ;;  cir             2   11[BANK0 ] int 
  5046 ;;  filter_buf      6    5[BANK0 ] unsigned int [3]
  5047 ;;  filter_sum      2    2[BANK0 ] unsigned int 
  5048 ;;  filter_temp     2    0[BANK0 ] unsigned int 
  5049 ;;  i               1   14[BANK0 ] unsigned char 
  5050 ;;  j               1   13[BANK0 ] unsigned char 
  5051 ;; Return value:  Size  Location     Type
  5052 ;;                  2    0[COMMON] unsigned int 
  5053 ;; Registers used:
  5054 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5055 ;; Tracked objects:
  5056 ;;		On entry : 160/0
  5057 ;;		On exit  : 160/0
  5058 ;;		Unchanged: FFE00/0
  5059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5060 ;;      Params:         2       0       0       0       0
  5061 ;;      Locals:         0      15       0       0       0
  5062 ;;      Temps:          4       0       0       0       0
  5063 ;;      Totals:         6      15       0       0       0
  5064 ;;Total ram usage:       21 bytes
  5065 ;; Hardware stack levels used:    1
  5066 ;; This function calls:
  5067 ;;		Nothing
  5068 ;; This function is called by:
  5069 ;;		_vPutSampleDataIntoTable
  5070 ;; This function uses a non-reentrant model
  5071 ;;
  5072  0195                     _Filter:	
  5073                           
  5074                           ; Regs used in _Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  5075                           ;Filter@tmpValue stored from wreg
  5076  0195  00A4               	movwf	Filter@tmpValue
  5077  0196  01AD               	clrf	Filter@j
  5078                           
  5079                           ;common.c: 121: unsigned int filter_temp = 0, filter_sum = 0;
  5080  0197  01A0               	clrf	Filter@filter_temp
  5081  0198  01A1               	clrf	Filter@filter_temp+1
  5082  0199  01A2               	clrf	Filter@filter_sum
  5083  019A  01A3               	clrf	Filter@filter_sum+1
  5084                           
  5085                           ;common.c: 123: unsigned int filter_buf[3];
  5086                           ;common.c: 125: for(int cir = 0;cir < 3; cir++)
  5087  019B  01AB               	clrf	Filter@cir
  5088  019C  01AC               	clrf	Filter@cir+1
  5089  019D                     i1l3624:	
  5090                           
  5091                           ;common.c: 126: filter_buf[cir] = *tmpValue++;
  5092  019D  1283               	bcf	3,5	;RP0=0, select bank0
  5093  019E  1303               	bcf	3,6	;RP1=0, select bank0
  5094  019F  0824               	movf	Filter@tmpValue,w
  5095  01A0  2225  118A         	fcall	PL3	;call to abstracted procedure
  5096  01A2  1003               	clrc
  5097  01A3  0D2B               	rlf	Filter@cir,w
  5098  01A4  222D  118A         	fcall	PL7	;call to abstracted procedure
  5099  01A6  0AA4               	incf	Filter@tmpValue,f
  5100  01A7  0AA4               	incf	Filter@tmpValue,f
  5101  01A8  0AAB               	incf	Filter@cir,f
  5102  01A9  1903               	skipnz
  5103  01AA  0AAC               	incf	Filter@cir+1,f
  5104  01AB  082C               	movf	Filter@cir+1,w
  5105  01AC  3A80               	xorlw	128
  5106  01AD  00FF               	movwf	127
  5107  01AE  3080               	movlw	128
  5108  01AF  027F               	subwf	127,w
  5109  01B0  1D03               	skipz
  5110  01B1  29B4               	goto	u113_25
  5111  01B2  3003               	movlw	3
  5112  01B3  022B               	subwf	Filter@cir,w
  5113  01B4                     u113_25:	
  5114  01B4  1C03               	skipc
  5115  01B5  299D               	goto	i1l3624
  5116                           
  5117                           ;common.c: 130: for(j = 0; j < 3 - 1; j++)
  5118  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  5119  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  5120  01B8  01AD               	clrf	Filter@j
  5121                           
  5122                           ;common.c: 131: {
  5123                           ;common.c: 132: for(i = 0; i < 3 - 1 - j; i++)
  5124  01B9  01AE               	clrf	Filter@i
  5125  01BA                     i1l3646:	
  5126  01BA  01F3               	clrf	??_Filter+1
  5127  01BB  082D               	movf	Filter@j,w
  5128  01BC  3C02               	sublw	2
  5129  01BD  00F2               	movwf	??_Filter
  5130  01BE  1C03               	skipc
  5131  01BF  03F3               	decf	??_Filter+1,f
  5132  01C0  0873               	movf	??_Filter+1,w
  5133  01C1  3A80               	xorlw	128
  5134  01C2  3C80               	sublw	128
  5135  01C3  1D03               	skipz
  5136  01C4  29C7               	goto	u115_25
  5137  01C5  0872               	movf	??_Filter,w
  5138  01C6  022E               	subwf	Filter@i,w
  5139  01C7                     u115_25:	
  5140  01C7  1803               	btfsc	3,0
  5141  01C8  29FC               	goto	i1l3648
  5142                           
  5143                           ;common.c: 133: {
  5144                           ;common.c: 134: if(filter_buf[i] > filter_buf[i + 1])
  5145  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  5146  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  5147  01CB  1003               	clrc
  5148  01CC  0D2E               	rlf	Filter@i,w
  5149  01CD  3E25               	addlw	Filter@filter_buf& (0+255)
  5150  01CE  2225  118A         	fcall	PL3	;call to abstracted procedure
  5151  01D0  2235  118A         	fcall	PL9	;call to abstracted procedure
  5152  01D2  0800               	movf	0,w
  5153  01D3  00F4               	movwf	??_Filter+2
  5154  01D4  0A84               	incf	4,f
  5155  01D5  0800               	movf	0,w
  5156  01D6  00F5               	movwf	??_Filter+3
  5157  01D7  0873               	movf	??_Filter+1,w
  5158  01D8  0275               	subwf	??_Filter+3,w
  5159  01D9  1D03               	skipz
  5160  01DA  29DD               	goto	u114_25
  5161  01DB  0872               	movf	??_Filter,w
  5162  01DC  0274               	subwf	??_Filter+2,w
  5163  01DD                     u114_25:	
  5164  01DD  1803               	skipnc
  5165  01DE  29FA               	goto	i1l3644
  5166                           
  5167                           ;common.c: 135: {
  5168                           ;common.c: 137: filter_temp = filter_buf[i];
  5169  01DF  1003               	clrc
  5170  01E0  0D2E               	rlf	Filter@i,w
  5171  01E1  3E25               	addlw	Filter@filter_buf& (0+255)
  5172  01E2  0084               	movwf	4
  5173  01E3  0800               	movf	0,w
  5174  01E4  00A0               	movwf	Filter@filter_temp
  5175  01E5  0A84               	incf	4,f
  5176  01E6  0800               	movf	0,w
  5177  01E7  00A1               	movwf	Filter@filter_temp+1
  5178                           
  5179                           ;common.c: 139: filter_buf[i] = filter_buf[i + 1];
  5180  01E8  2235  118A         	fcall	PL9	;call to abstracted procedure
  5181  01EA  0800               	movf	0,w
  5182  01EB  00F2               	movwf	??_Filter
  5183  01EC  0A84               	incf	4,f
  5184  01ED  0800               	movf	0,w
  5185  01EE  00F3               	movwf	??_Filter+1
  5186  01EF  1003               	clrc
  5187  01F0  0D2E               	rlf	Filter@i,w
  5188  01F1  222D  118A         	fcall	PL7	;call to abstracted procedure
  5189                           
  5190                           ;common.c: 141: filter_buf[i + 1] = filter_temp;
  5191  01F3  2235  118A         	fcall	PL9	;call to abstracted procedure
  5192  01F5  0820               	movf	Filter@filter_temp,w
  5193  01F6  0080               	movwf	0
  5194  01F7  0A84               	incf	4,f
  5195  01F8  0821               	movf	Filter@filter_temp+1,w
  5196  01F9  0080               	movwf	0
  5197  01FA                     i1l3644:	
  5198  01FA  0AAE               	incf	Filter@i,f
  5199  01FB  29BA               	goto	i1l3646
  5200  01FC                     i1l3648:	
  5201  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  5202  01FD  3002               	movlw	2
  5203  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  5204  01FF  0AAD               	incf	Filter@j,f
  5205  0200  022D               	subwf	Filter@j,w
  5206                           
  5207                           ;common.c: 142: }
  5208                           ;common.c: 143: }
  5209                           ;common.c: 144: }
  5210                           ;common.c: 146: for(i = 1; i < 3 - 1; i++)
  5211  0201  01AE               	clrf	Filter@i
  5212  0202  1C03               	skipc
  5213  0203  29BA               	goto	i1l3646
  5214  0204  0AAE               	incf	Filter@i,f
  5215                           
  5216                           ;common.c: 147: {
  5217                           ;common.c: 148: filter_sum += filter_buf[i];
  5218  0205  1003               	clrc
  5219  0206                     L16:	
  5220  0206  0D2E               	rlf	Filter@i,w
  5221  0207  3E25               	addlw	Filter@filter_buf& (0+255)
  5222  0208  2225  118A         	fcall	PL3	;call to abstracted procedure
  5223  020A  0872               	movf	??_Filter,w
  5224  020B  07A2               	addwf	Filter@filter_sum,f
  5225  020C  1803               	skipnc
  5226  020D  0AA3               	incf	Filter@filter_sum+1,f
  5227  020E  0873               	movf	??_Filter+1,w
  5228  020F  07A3               	addwf	Filter@filter_sum+1,f
  5229  0210  3002               	movlw	2
  5230  0211  0AAE               	incf	Filter@i,f
  5231  0212  022E               	subwf	Filter@i,w
  5232  0213  1C03               	skipc
  5233  0214  2A06               	goto	L16
  5234                           
  5235                           ;common.c: 149: }
  5236                           ;common.c: 152: return (filter_sum );
  5237  0215  0823               	movf	Filter@filter_sum+1,w
  5238  0216  00F1               	movwf	?_Filter+1
  5239  0217  0822               	movf	Filter@filter_sum,w
  5240  0218  00F0               	movwf	?_Filter
  5241  0219  0008               	return
  5242  021A                     __end_of_Filter:	
  5243  021A                     __ptext1473:	
  5244 ;; =============== function _Filter ends ============
  5245                           
  5246                           
  5247 ;; *************** function _setPWM_Width *****************
  5248 ;; Defined at:
  5249 ;;		line 65 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  5250 ;; Parameters:    Size  Location     Type
  5251 ;;  ucWidth         1    wreg     unsigned char 
  5252 ;; Auto vars:     Size  Location     Type
  5253 ;;  ucWidth         1    0[COMMON] unsigned char 
  5254 ;; Return value:  Size  Location     Type
  5255 ;;		None               void
  5256 ;; Registers used:
  5257 ;;		wreg
  5258 ;; Tracked objects:
  5259 ;;		On entry : 160/0
  5260 ;;		On exit  : 160/0
  5261 ;;		Unchanged: FFE9F/0
  5262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5263 ;;      Params:         0       0       0       0       0
  5264 ;;      Locals:         1       0       0       0       0
  5265 ;;      Temps:          0       0       0       0       0
  5266 ;;      Totals:         1       0       0       0       0
  5267 ;;Total ram usage:        1 bytes
  5268 ;; Hardware stack levels used:    1
  5269 ;; This function calls:
  5270 ;;		Nothing
  5271 ;; This function is called by:
  5272 ;;		_vPutSampleDataIntoTable
  5273 ;; This function uses a non-reentrant model
  5274 ;;
  5275  021A                     _setPWM_Width:	
  5276                           
  5277                           ; Regs used in _setPWM_Width: [wreg]
  5278                           ;setPWM_Width@ucWidth stored from wreg
  5279  021A  00F0               	movwf	setPWM_Width@ucWidth
  5280                           
  5281                           ;common.c: 71: ucOldWidth = ucWidth;
  5282  021B  0095               	movwf	21	;volatile
  5283  021C  0008               	return
  5284  021D                     __end_of_setPWM_Width:	
  5285  021D                     PL2:	
  5286  021D  0084               	movwf	4
  5287  021E  0876               	movf	vPutSampleDataIntoTable@uiSampleData,w
  5288  021F  1383               	bcf	3,7	;select IRP bank1
  5289  0220  0080               	movwf	0
  5290  0221  0A84               	incf	4,f
  5291  0222  0877               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  5292  0223  0080               	movwf	0
  5293  0224  0008               	return
  5294  0225                     PL3:	
  5295  0225  0084               	movwf	4
  5296  0226  1383               	bcf	3,7	;select IRP bank0
  5297  0227  0800               	movf	0,w
  5298  0228  00F2               	movwf	??_Filter
  5299  0229  0A84               	incf	4,f
  5300  022A  0800               	movf	0,w
  5301  022B  00F3               	movwf	??_Filter+1
  5302  022C  0008               	return
  5303  022D                     PL7:	
  5304  022D  3E25               	addlw	Filter@filter_buf& (0+255)
  5305  022E  0084               	movwf	4
  5306  022F  0872               	movf	??_Filter,w
  5307  0230  0080               	movwf	0
  5308  0231  0A84               	incf	4,f
  5309  0232  0873               	movf	??_Filter+1,w
  5310  0233  0080               	movwf	0
  5311  0234  0008               	return
  5312  0235                     PL9:	
  5313  0235  1003               	clrc
  5314  0236  0D2E               	rlf	Filter@i,w
  5315  0237  3E02               	addlw	2
  5316  0238  3E25               	addlw	Filter@filter_buf& (0+255)
  5317  0239  0084               	movwf	4
  5318  023A  0008               	return
  5319  023B                     PL10:	
  5320  023B  0180               	clrf	0
  5321  023C  0A84               	incf	4,f
  5322  023D  0180               	clrf	0
  5323  023E  1003               	clrc
  5324  023F  0D7B               	rlf	vPutSampleDataIntoTable@i,w
  5325  0240  0008               	return
  5326                           
  5327                           	psect	intentry
  5328  0004                     __pintentry:	
  5329                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5330                           
  5331  0004                     interrupt_function:	
  5332  007E                     saved_w	set	btemp
  5333  0004  00FE               	movwf	btemp
  5334  0005  0E03               	swapf	3,w
  5335  0006  1283               	bcf	3,5	;RP0=0, select bank0
  5336  0007  1303               	bcf	3,6	;RP1=0, select bank0
  5337  0008  00BF               	movwf	??_ISR
  5338  0009  0804               	movf	4,w
  5339  000A  00C0               	movwf	??_ISR+1
  5340  000B  080A               	movf	10,w
  5341  000C  00C1               	movwf	??_ISR+2
  5342  000D  087F               	movf	btemp+1,w
  5343  000E  00C2               	movwf	??_ISR+3
  5344  000F  118A  2813         	ljmp	_ISR
  5345                           
  5346                           	psect	text1475
  5347  0000                     __ptext1475:	
  5348 ;; =============== function _getWaitResetFlag ends ============
  5349                           
  5350  007E                     btemp	set	126	;btemp
  5351  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri Dec 20 10:42:43 2019

                                  ??_clock_config 00BD                                 ?_getWaitResetFlag 0070  
                             ?_startOneHoursTimer 00BD                                                _GO 00F9  
                              ??_getWaitResetFlag 0070                                                fsr 0004  
                        ?_timer1_interrupt_config 0070                                               l700 0502  
                                             l710 050D                                               l705 0536  
                                             l721 0000                                               l730 063F  
                                             l715 0000                                               l724 0000  
                                             l718 0000                                               l742 03EB  
                                             l727 0000                                               l736 0000  
                                             l690 04F7                                               l685 0521  
                                             l695 052E                                               _GIE 005F  
                                             _PB0 0030                                               _PB1 0031  
                                             _PB2 0032                                               _PB3 0033  
                                             _PR2 0092                                               _ISR 0013  
                                             _key 01E0                                               fsr0 0004  
                                             indf 0000                            ??_startThreeHoursTimer 00BF  
                                            ?_ISR 0070                              ??_startOneHoursTimer 00BF  
                              __size_of_AD_Sample 0014                                              l1505 0000  
                                            l4010 0000                                              l4012 0000  
                                            l4020 0000                                              l4100 0000  
                                            l4006 0000                                              l4014 0000  
                                            l4022 0000                                              l4030 0000  
                                            l1630 0000                                              l4110 0000  
                                            l2335 0000                                              l4008 0000  
                                            l4016 0000                                              l4024 0000  
                                            l4040 0000                                              l4032 0000  
                                            l1624 0000                                              l2352 0000  
                                            l4112 0000                                              l4200 0000  
                                            l1633 0000                                              l2329 0000  
                                            l4018 0000                                              l4026 0000  
                                            l4042 0000                                              l4034 0000  
                                            l4050 0000                                              l2346 0000  
                                            l4210 0000                                              l4202 0000  
                                            l1627 0000                                              l1483 0000  
                                            l4028 0000                                              l4044 0000  
                                            l4036 0000                                              l4052 0000  
                                            l1580 0000                                              l4060 0000  
                                            l4116 0000                                              l4140 0000  
                                            l4212 0000                                              l4300 0000  
                                            l4046 0000                                              l4038 0000  
                                            l4054 0000                                              l4062 0000  
                                            l4070 0000                                              l4118 0000  
                                            l4134 0000                                              l4142 0000  
                                            l4230 041A                                              l4214 0000  
                                            l4310 03BA                                              l4302 0000  
                                            l1583 0000                                              l4048 0000  
                                            l4056 054D                                              l4064 0000  
                                            l4072 0000                                              l4080 0000  
                                            l4128 0000                                              l4136 0000  
                                            l4152 0000                                              l4160 0000  
                                            l4232 0456                                              l4208 03FC  
                                            l1592 0000                                              l4312 0000  
                                            l4304 0000                                              l1577 062A  
                                            l1673 0000                                              l4058 0000  
                                            l1586 0000                                              l4066 0000  
                                            l4074 0000                                              l4082 0000  
                                            l4242 0000                                              l4234 0000  
                                            l4250 0000                                              l4330 028A  
                                            l4322 0000                                              l4314 0000  
                                            l4306 0000                                              l4068 0000  
                                            l4076 0000                                              l4084 0000  
                                            l4164 0000                                              l4244 0000  
                                            l4228 0454                                              l4260 0000  
                                            l4412 0000                                              l4404 032D  
                                            l4340 0000                                              l4324 027D  
                                            l4308 0000                                              l1589 0000  
                                            l4086 0000                                              l4078 0000  
                                            l4094 0000                                              l4158 0000  
                                            l4166 0000                                              l4182 0000  
                                            l4190 0000                                              l4254 0000  
                                            l4270 0000                                              l1598 0000  
                                            l4414 0000                                              l4406 0330  
                                            l4342 0000                                              l4334 028F  
                                            l4318 0272                                              l4088 0000  
                                            l4096 04E3                                              l4176 0000  
                                            l4184 0000                                              l4264 0000  
                                            l4256 0000                                              l4272 0000  
                                            l4280 0000                                              l4440 039A  
                                            l4432 0375                                              l4416 0000  
                                            l4408 0332                                              l4360 02CE  
                                            l4352 02C6                                              l4344 02B2  
                                            l4336 0293                                              l4328 0289  
                                            l4098 0000                                              l4274 0000  
                                            l4282 0000                                              l4450 03AE  
                                            l4442 0000                                              l4434 0000  
                                            l4426 035F                                              l4362 0000  
                                            l4354 02C7                                              l4346 02B8  
                                            l4338 0000                                              l4188 0000  
                                            l4268 04C4                                              l4276 0000  
                                            l4452 03AF                                              l4444 039E  
                                            l4436 038F                                              l4428 0361  
                                            l4380 02F5                                              l4372 02ED  
                                            l4364 02DB                                              l4348 02BA  
                                            l4278 0000                                              l4286 0000  
                                            l4294 0000                                              l4446 0000  
                                            l4390 0000                                              l4382 0000  
                                            l4374 02EE                                              l4358 0000  
                                            l4456 03B6                                              l4392 030E  
                                            l4384 0000                                              l4458 0000  
                                            l4394 0000                                              l4386 0000  
                                            l4378 0000                                              l4298 0000  
                                            l4388 0000                                              _ADIE 046A  
                                            _ADIF 006A                                              _ADON 00F8  
                   startTwelveHourTimer@uiSetTime 00BD                                              u2217 0269  
                                            u1915 0414                                              u1925 043B  
                                            u1935 0427                                              _PEIE 005E  
                            FilterCh13@filter_buf 00C8                              FilterCh13@filter_sum 00C6  
                                            _main 0241                                              btemp 007E  
                                            start 0011                           ?_getAdOriginalCh13Value 00D2  
                      ??_isFinishedTwentyMinTimer 00BD                                             ??_ISR 003F  
                               ??_setPinInitVaule 00BE                        __end_of_isPermitSampleTime 0636  
                             _sampleChannelSelect 0065                                             ?_main 0070  
                                           _CLKPR 0108                                             _T1CON 0010  
                                           _T2CON 0012                                   __end_of_adc_get 008A  
                                           _PBOD2 0C42                                             _TMR1H 000F  
                                           _TMR1L 000E                             setAD_ConvertFlag@flag 00BD  
                               ??_selectAdChannel 00BD                             FilterCh13@filter_temp 00C4  
                                      _FilterCh13 03F3                                   __end_of_initPB3 0523  
                                 __end_of_initPB4 0530                                   __end_of_initPB5 0538  
                         _vPutSampleDataIntoTable 008D                                   __end_of_initPin 051A  
                                           _reset 063F                                             _timer 0061  
                                 __end_of_uid_get 0569                                             pclath 000A  
                                           status 0003                                             wtemp0 007E  
                  __end_of_getAdOriginalCh13Value 03F3                     __size_of_startTwelveHourTimer 0013  
                            __end_of_clrSampeTime 063F                                      __end_of_main 03EC  
                          __size_of_adc_test_init 001C                                 __end_of_AD_Sample 04C7  
                                          ??_main 00D4                               setPWM_Width@ucWidth 0070  
                                   main@ucChValue 00D5                                     main@ucDelay1s 00A0  
                                          _ADCON0 001F                                            _ADCON1 009F  
                            __end_of_clock_config 062D                                            _ADRESH 001E  
                                          _ADRESL 009E                                            _CCPR1L 0015  
                                          ?_reset 0070                                            _CLKPCE 0847  
                                          i1l1518 0000                                            i1l1553 0113  
                                          i1l2355 0000                                            i1l1492 0000  
                                          u113_25 01B4                                            i1l1486 0000  
                                          i1l1558 0135                                            i1l1592 0000  
                                          i1l1680 0027                                            i1l1681 0031  
                                          i1l1682 003B                                            i1l1683 0045  
                                          i1l3700 012F                                            u114_25 01DD  
                                          i1l3630 0000                                            i1l3710 0141  
                                          i1l3624 019D                                            i1l3712 0143  
                                          i1l3800 0000                                            i1l1688 006B  
                                          i1l3650 0000                                            i1l3626 0000  
                                          i1l3618 0000                                            i1l3810 0000  
                                          i1l3722 0000                                            i1l3714 0000  
                                          i1l3706 013B                                            i1l3564 0000  
                                          i1l3660 0000                                            i1l3644 01FA  
                                          i1l3628 0000                                            i1l3740 016F  
                                          i1l3724 0155                                            i1l3716 0149  
                                          i1l3804 0062                                            u115_25 01C7  
                                          i1l3646 01BA                                            i1l3806 0000  
                                          i1l3750 0000                                            i1l3734 0000  
                                          i1l3726 0000                                            i1l3718 0000  
                                          i1l3568 0000                                            i1l3648 01FC  
                                          i1l3736 0169                                            i1l3728 015B  
                                          i1l3680 0000                                            i1l3672 0000  
                                          i1l3658 0000                                            i1l3746 0174  
                                          i1l3738 0000                                            i1l3690 0000  
                                          i1l3674 0000                                            i1l3666 0000  
                                          i1l3748 0000                                            i1l3684 0000  
                                          i1l3772 0000                                            u132_25 0190  
                                          i1l3678 0000                                            i1l3782 0000  
                                          i1l3696 0128                                            i1l3688 00B8  
                                          i1l3776 0000                                            i1l3778 0000  
                                          i1l3794 004F                                            i1l3798 0000  
                           __end_of_resetAllTimer 053F                                            _TMR1IE 0460  
                                          _TMR1IF 0060                                 _getAD_ConvertFlag 04AA  
                               _setAD_ConvertFlag 04AE                                            _TRISB0 0430  
                                          _TRISB1 0431                                            _TRISB2 0432  
                                          _TRISB3 0433                                            _TRISB4 0434  
                                          _TRISB5 0435                                ?_getAD_ConvertFlag 0070  
                                          _Filter 0195                                ?_setAD_ConvertFlag 0070  
                                __end_of_op1_init 0625                       ??_isFinishedThreeHoursTimer 00BD  
                   __size_of_clearThreeHoursTimer 0005                                         ??_adc_get 0072  
                             ??_getAD_ConvertFlag 00BD                               ??_setAD_ConvertFlag 00BD  
                                          _setPB3 04EF                                            _setPB4 04FA  
                                          _setPB5 0505                       __end_of_clearTwentyMinTimer 0551  
                                          clrloop 0616                                  Filter@filter_buf 0025  
                                       ??_initPB3 00BD                                         ??_initPB4 00BD  
                                       ??_initPB5 00BD                                  Filter@filter_sum 0022  
                                       ??_initPin 00BE                         ??_vPutSampleDataIntoTable 002F  
                                          saved_w 007E                           ??_clearTwelveHoursTimer 00BD  
                                     ?_FilterCh13 00BD                                         ??_uid_get 00BD  
                        __end_of_setWaitResetFlag 0632                       ?_process_AD_Converter_Value 0070  
                                   _adc_test_init 04C7                         __end_of_getAD_ConvertFlag 04AE  
                       __end_of_setAD_ConvertFlag 04B3                                     ?_setPWM_Width 0070  
                              __size_of_adc_start 0004                          _initPB2_AsHighResistence 0523  
                __size_of_isFinishedOneHoursTimer 000B                  __end_of_isFinishedTwentyMinTimer 060B  
                                  __pcstackCOMMON 0070                                      __pidataBANK0 0000  
                               main@uiTimerOneP5s 00A2                                     __end_of_reset 0636  
                               main@uiTimerTwoP5s 00A4                            setWaitResetFlag@bValue 00BD  
         vPutSampleDataIntoTable@uiCalWidthArray1 004F           vPutSampleDataIntoTable@uiCalWidthArray2 0051  
         vPutSampleDataIntoTable@uiCalWidthArray3 0053           vPutSampleDataIntoTable@uiCalWidthArray4 0055  
                  vPutSampleDataIntoTable@channel 0078                         _isFinishedThreeHoursTimer 05EA  
                           __end_of_timer1_config 0615                         __size_of_getWaitResetFlag 0002  
                                  ?_adc_test_init 00BD                       __end_of_startTwentyMinTimer 05DF  
                                         ??_reset 00BD                  __size_of_timer1_interrupt_config 0003  
                           __size_of_clrSampeTime 0002                                        __pbssBANK0 0043  
                                      __pbssBANK1 00A0                                    ??_setPWM_Width 0070  
                    __size_ofi1_setAD_ConvertFlag 0003                                   _setPinInitVaule 04E7  
                                      adc_get@val 0072                                  _uiTwentyMinTimer 004B  
                 __end_of_vPutSampleDataIntoTable 0193                                           ?_Filter 0070  
                     __size_of_clearOneHoursTimer 0004                                        __pmaintext 0241  
             vPutSampleDataIntoTable@ucCh12Length 007D                               __size_of_FilterCh13 007F  
             vPutSampleDataIntoTable@ucCh13Length 0062           vPutSampleDataIntoTable@uiDeviationValue 0079  
                                 _selectAdChannel 0636                                        __pintentry 0004  
                                         _CCP1CON 0017                                        __ptext1430 04E7  
                                         ?_setPB3 0070                                        __ptext1431 0510  
                                         ?_setPB4 0070                                        __ptext1440 05A6  
                                      __ptext1432 04B3                                           ?_setPB5 0070  
                                      __ptext1441 05F5                                        __ptext1433 04AE  
                                      __ptext1450 061D                                        __ptext1442 05B9  
                                      __ptext1434 04AA                                        __ptext1451 063A  
                                      __ptext1443 0600                                        __ptext1435 03F3  
                                      __ptext1427 03EC                                        __ptext1460 0569  
                                      __ptext1452 060B                                        __ptext1444 063D  
                                      __ptext1436 062D                                        __ptext1428 0491  
                                      __ptext1461 0523                                        __ptext1453 0625  
                                      __ptext1445 0632                                        __ptext1437 05DF  
                                      __ptext1429 0538                                        __ptext1470 008A  
                                      __ptext1462 0505                                        __ptext1454 054D  
                                      __ptext1446 04E3                                        __ptext1438 0593  
                                      __ptext1471 0078                                        __ptext1463 0530  
                                      __ptext1455 0549                                        __ptext1447 05CC  
                                      __ptext1439 05EA                                        __ptext1472 0195  
                                      __ptext1464 04FA                                        __ptext1456 0544  
                                      __ptext1448 04C7                                        __ptext1473 021A  
                                      __ptext1465 0528                                        __ptext1457 053F  
                                      __ptext1449 0551                                        __ptext1474 0193  
                                      __ptext1466 04EF                                        __ptext1458 063F  
                                      __ptext1475 0000                                        __ptext1467 051A  
                                      __ptext1459 0636                                        __ptext1468 0013  
                                      __ptext1469 008D                             __size_of_clock_config 0008  
                                         _OP1CON0 001B                                           _OP1CON1 001C  
                                         _OP1CON2 001D                                      _clrSampeTime 063D  
                               __end_of_adc_start 04E7                              _uiTwentySecondsTimer 004D  
                                       ?_op1_init 0070                                _isPermitSampleTime 0632  
                                         Filter@i 002E                                           Filter@j 002D  
                              __size_of_pwm_start 0016                       __size_of_startOneHoursTimer 0013  
                   __size_of_startThreeHoursTimer 0013                        __size_of_getAD_ConvertFlag 0004  
                      __size_of_setAD_ConvertFlag 0005                                    main@ucTimerP3s 00A9  
                                  main@ucTimerP5s 00AA                               ?_isPermitSampleTime 0070  
                                 __size_of_Filter 0085                                        _uiBigTimer 0045  
                                    setPB3@bValue 00BD                                      setPB4@bValue 00BD  
                                    _clock_config 0625                                      setPB5@bValue 00BD  
                                         _adc_get 0078                                   __size_of_setPB3 000B  
                                 __size_of_setPB4 000B                                   __size_of_setPB5 000B  
                            ??_isPermitSampleTime 00BD                      __end_of_startTwelveHourTimer 05CC  
                                   initPB3@bValue 00BD                                     initPB4@bValue 00BD  
                                       _AD_Sample 04B3                                           _initPB3 051A  
                                         _initPB4 0528                                           _initPB5 0530  
                                    __size_of_ISR 0065                                     initPB5@bValue 00BD  
                                         _initPin 0510                              _bSmallTimerStartFlag 005D  
                                 ??_adc_test_init 00BE                                           _uid_get 0551  
               __size_of_isFinishedTwentyMinTimer 000B                                        ??_op1_init 00BD  
                       ?_isFinishedTwentyMinTimer 0070                           __end_of_setPinInitVaule 04EF  
                            end_of_initialization 0590                                 Filter@filter_temp 0020  
                           pwm_start@ucPulseWidth 00BE                           __end_of_selectAdChannel 063A  
                         _isFinishedOneHoursTimer 05DF                                 __end_of_pwm_start 057F  
                            __end_of_setPWM_Width 021D                                        ?_AD_Sample 0070  
                    ??_isFinishedTwelveHoursTimer 00BD                                         Filter@cir 002B  
                             _bTwentyMinStartFlag 005E                                  _adc_convert_flag 005A  
                                    ??_FilterCh13 00BF                                  _getWaitResetFlag 0193  
                    __end_of_clearThreeHoursTimer 0549                    __size_of_clearTwelveHoursTimer 0005  
                               ?_setWaitResetFlag 0070                           _timer1_interrupt_config 063A  
                   __end_of_clearTwelveHoursTimer 0544                        ??_initPB2_AsHighResistence 00BD  
                              ??_setWaitResetFlag 00BD                __size_of_isFinishedThreeHoursTimer 000B  
                                      main@ucStep 00A8                                    __end_of_Filter 021A  
                   startTwentyMinTimer@uiSetValue 00BD               __size_of_isFinishedTwelveHoursTimer 000B  
                              FilterCh13@tmpValue 00C3                                __end_of_FilterCh13 0472  
                        vPutSampleDataIntoTable@i 007B                               i1_setAD_ConvertFlag 008A  
                                  __end_of_setPB3 04FA                                    __end_of_setPB4 0505  
                                  __end_of_setPB5 0510                            __size_of_resetAllTimer 0007  
                             start_initialization 057F                                       __end_of_ISR 0078  
                                ?_setPinInitVaule 0070                          ??_getAdOriginalCh13Value 00D4  
                    __size_of_clearTwentyMinTimer 0004                         ??_isFinishedOneHoursTimer 00BD  
                            ?i1_setAD_ConvertFlag 0070                              _startTwelveHourTimer 05B9  
               __end_of_isFinishedThreeHoursTimer 05F5                                  ?_selectAdChannel 0070  
                                        ??_Filter 0072                 vPutSampleDataIntoTable@ucInitFlag 0064  
                                     __pdataBANK0 0065                                          ??_setPB3 00BD  
                                        ??_setPB4 00BD                                          ??_setPB5 00BD  
                        ?_vPutSampleDataIntoTable 0076                                       ??_AD_Sample 00BD  
                       ??_timer1_interrupt_config 00BD                                       __pbssCOMMON 007D  
                                   __pcstackBANK0 0020                                     __pcstackBANK1 00BD  
                                       _ad_offset 0043                                         _adc_start 04E3  
                               __size_of_op1_init 0008                             ??i1_setAD_ConvertFlag 0070  
                                 main@uiCh13Value 00D7                             ?_startTwelveHourTimer 00BD  
                                   _resetAllTimer 0538                        __end_of_clearOneHoursTimer 054D  
                    __size_of_startTwentyMinTimer 0013                            __size_of_timer1_config 000A  
                            _clearThreeHoursTimer 0544                             __size_of_setPWM_Width 0003  
                    __end_of_startThreeHoursTimer 05B9                                 main@cTimerP5s_801 00A7  
                               main@cTimerP5s_795 00A6                                          ?_adc_get 0070  
                 __end_of_isFinishedOneHoursTimer 05EA                __end_of_isFinishedTwelveHoursTimer 0600  
                      _isFinishedTwelveHoursTimer 05F5                                          ?_initPB3 0070  
                                        ?_initPB4 0070                                          ?_initPB5 0070  
                                 ISR@ucTimer1sCnt 0059                                          ?_initPin 0070  
                      __end_of_startOneHoursTimer 05A6                                          ?_uid_get 0070  
                __end_of_initPB2_AsHighResistence 0528                         _uiSampleChannelFourteenth 00B7  
                                      ?_adc_start 0070                   __size_of_getAdOriginalCh13Value 0007  
                                  __size_of_reset FFF7                                    ?_resetAllTimer 0070  
                               interrupt_function 0004                                      _setPWM_Width 021A  
                                  _bWaitResetFlag 005F                   __end_of_timer1_interrupt_config 063D  
                       pwm_start@ucPulseFrequency 00BD                          __end_of_getWaitResetFlag 0195  
                           ?_clearThreeHoursTimer 0070                                      _uiSampleCh12 00AB  
                                    _uiSampleCh13 00B1                              adc_test_init@channel 00BF  
                                        _SRAM_MAP 0C78               vPutSampleDataIntoTable@uiSampleData 0076  
                     __size_of_isPermitSampleTime 0004                                         _pwm_start 0569  
                                    _uiSmallTimer 0049              vPutSampleDataIntoTable@uiCalWidthCnt 0057  
                           __end_of_adc_test_init 04E3                                     _timer1_config 060B  
                    ??_process_AD_Converter_Value 00C0                            ??_startTwelveHourTimer 00BF  
                       __size_of_setWaitResetFlag 0005                            _getAdOriginalCh13Value 03EC  
                             _clearTwentyMinTimer 054D                       startOneHoursTimer@uiSetTime 00BD  
                                __size_of_adc_get 0012               __size_of_process_AD_Converter_Value 0019  
                                      ?_pwm_start 00BD                          _isFinishedTwentyMinTimer 0600  
vPutSampleDataIntoTable@ucChannelFourteenthLength 0063                                  __size_of_initPB3 0009  
                                __size_of_initPB4 0008                                  __size_of_initPB5 0008  
                                __size_of_initPin 000A                                    Filter@tmpValue 0024  
                                  ?_timer1_config 0070                                          _op1_init 061D  
                                __size_of_uid_get 0018                              ?_clearTwentyMinTimer 0070  
                                     ??_adc_start 00BD                                   ??_resetAllTimer 00BD  
                            _startThreeHoursTimer 05A6                             _clearTwelveHoursTimer 053F  
                                  _uiOneHourTimer 0047                                     __size_of_main 01AB  
              vPutSampleDataIntoTable@uiInitWidth 0066                                     FilterCh13@cir 00CE  
                                        clear_ram 0615                            ??_clearThreeHoursTimer 00BD  
               __size_of_initPB2_AsHighResistence 0005                         ?_initPB2_AsHighResistence 0070  
                          _bOneHourTimerStartFlag 005C                                     ?_clrSampeTime 0070  
                             _startTwentyMinTimer 05CC                                       _sampleTimes 0060  
                           ??_clearTwentyMinTimer 00BD                             ?_startThreeHoursTimer 00BD  
                __size_of_vPutSampleDataIntoTable 0106                                          intlevel1 0000  
                            ?_startTwentyMinTimer 00BD                          __size_of_setPinInitVaule 0008  
                      ?_isFinishedThreeHoursTimer 0070                                     ?_clock_config 0070  
                        __size_of_selectAdChannel 0004                                _clearOneHoursTimer 0549  
                   startThreeHoursTimer@uiSetTime 00BD                           i1setAD_ConvertFlag@flag 0070  
                                     ??_pwm_start 00BE                                    ??_clrSampeTime 00BD  
                     ?_isFinishedTwelveHoursTimer 0070                                _bBigTimerStartFlag 005B  
                                 ??_timer1_config 00BD                                       FilterCh13@i 00D1  
                                     FilterCh13@j 00D0                               ?_clearOneHoursTimer 0070  
                     __end_ofi1_setAD_ConvertFlag 008D                __end_of_process_AD_Converter_Value 04AA  
                      _process_AD_Converter_Value 0491                          ?_isFinishedOneHoursTimer 0070  
                          ?_clearTwelveHoursTimer 0070                                  adc_test_init@ref 00BD  
                           ??_startTwentyMinTimer 00BF                                _startOneHoursTimer 0593  
                            ??_clearOneHoursTimer 00BD                                  _setWaitResetFlag 062D  
