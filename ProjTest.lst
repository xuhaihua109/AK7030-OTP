

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Tue Jun 25 23:14:29 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,delta=2
    15                           	psect	swtext1,local,class=CONST,delta=2
    16                           	psect	swtext2,local,class=CONST,delta=2
    17                           	psect	swtext3,local,class=CONST,delta=2
    18                           	psect	text739,local,class=CODE,delta=2
    19                           	psect	text740,local,class=CODE,delta=2
    20                           	psect	text743,local,class=CODE,delta=2
    21                           	psect	text749,local,class=CODE,delta=2
    22                           	psect	text750,local,class=CODE,delta=2
    23                           	psect	text751,local,class=CODE,delta=2
    24                           	psect	text752,local,class=CODE,delta=2
    25                           	psect	text753,local,class=CODE,delta=2
    26                           	psect	text754,local,class=CODE,delta=2
    27                           	psect	text755,local,class=CODE,delta=2
    28                           	psect	text756,local,class=CODE,delta=2
    29                           	psect	text758,local,class=CODE,delta=2
    30                           	psect	text759,local,class=CODE,delta=2
    31                           	psect	text760,local,class=CODE,delta=2
    32                           	psect	text762,local,class=CODE,delta=2
    33                           	psect	text763,local,class=CODE,delta=2
    34                           	psect	text764,local,class=CODE,delta=2
    35                           	psect	text765,local,class=CODE,delta=2
    36                           	psect	text769,local,class=CODE,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text773,local,class=CODE,delta=2
    39                           	psect	pa_nodes,global,class=CODE,delta=2
    40                           	dabs	1,0x7E,2
    41  000A                     	;#
    42                           
    43                           	psect	config
    44  2000  2FFF               	dw	12287	;#
    45  2001  3FDE               	dw	16350	;#
    46  2002  3FF8               	dw	16376	;#
    47                           
    48                           	psect	idataBANK0
    49  0000                     __pidataBANK0:	
    50  001F                     _ADCON0	set	31
    51  001E                     _ADRESH	set	30
    52  001B                     _OP1CON0	set	27
    53  001C                     _OP1CON1	set	28
    54  001D                     _OP1CON2	set	29
    55  0010                     _T1CON	set	16
    56  000F                     _TMR1H	set	15
    57  000E                     _TMR1L	set	14
    58  006A                     _ADIF	set	106
    59  00F8                     _ADON	set	248
    60  005F                     _GIE	set	95
    61  00F9                     _GO	set	249
    62  0028                     _PA0	set	40
    63  0029                     _PA1	set	41
    64  002A                     _PA2	set	42
    65  002B                     _PA3	set	43
    66  002E                     _PA6	set	46
    67  002F                     _PA7	set	47
    68  0030                     _PB0	set	48
    69  0031                     _PB1	set	49
    70  0036                     _PB6	set	54
    71  005E                     _PEIE	set	94
    72  0060                     _TMR1IF	set	96
    73  009F                     _ADCON1	set	159
    74  009E                     _ADRESL	set	158
    75  0087                     _DACCON	set	135
    76  0088                     _DACR0	set	136
    77  009B                     _OP2CON0	set	155
    78  009C                     _OP2CON1	set	156
    79  009D                     _OP2CON2	set	157
    80  046A                     _ADIE	set	1130
    81  0460                     _TMR1IE	set	1120
    82  0428                     _TRISA0	set	1064
    83  0429                     _TRISA1	set	1065
    84  042A                     _TRISA2	set	1066
    85  042B                     _TRISA3	set	1067
    86  042E                     _TRISA6	set	1070
    87  042F                     _TRISA7	set	1071
    88  0430                     _TRISB0	set	1072
    89  0431                     _TRISB1	set	1073
    90  0432                     _TRISB2	set	1074
    91  0433                     _TRISB3	set	1075
    92  0434                     _TRISB4	set	1076
    93  0435                     _TRISB5	set	1077
    94  0436                     _TRISB6	set	1078
    95  0437                     _TRISB7	set	1079
    96  0108                     _CLKPR	set	264
    97  0847                     _CLKPCE	set	2119
    98  0C3F                     _PAOD7	set	3135
    99  0C46                     _PBOD6	set	3142
   100                           
   101                           	psect	cinit
   102  0589                     start_initialization:	
   103  0589  3049               	movlw	low __pbssBANK0
   104                           
   105                           ; Clear objects allocated to COMMON
   106  058A  01FD               	clrf	__pbssCOMMON& (0+127)
   107                           
   108                           ; Clear objects allocated to BANK0
   109  058B  1383               	bcf	3,7	;select IRP bank0
   110  058C  0084               	movwf	4
   111  058D  306F               	movlw	low (__pbssBANK0+38)
   112  058E  118A  25F4  118A   	fcall	clear_ram
   113                           
   114                           ; Clear objects allocated to BANK1
   115  0591  30A0               	movlw	low __pbssBANK1
   116  0592  0084               	movwf	4
   117  0593  30F0               	movlw	low (__pbssBANK1+80)
   118  0594  118A  25F4         	fcall	clear_ram
   119                           
   120                           ;initializer for _sampleChannelSelect
   121  0596  300E               	movlw	14
   122  0597  00EF               	movwf	__pdataBANK0& (0+127)
   123  0598                     end_of_initialization:	
   124                           ;End of C runtime variable initialization code
   125                           
   126  0598  0183               	clrf	3
   127  0599  118A  2813         	ljmp	_main	;jump to C main() function
   128                           
   129                           	psect	bssCOMMON
   130  007D                     __pbssCOMMON:	
   131  007D                     vPutSampleDataIntoTable@ucChannelFirstLength:	
   132  007D                     	ds	1
   133                           
   134                           	psect	bssBANK0
   135  0049                     __pbssBANK0:	
   136  0049                     _adc_convert_flag:	
   137  0049                     	ds	1
   138  004A                     _sampleTimes:	
   139  004A                     	ds	1
   140  004B                     main@cTimer1s_818:	
   141  004B                     	ds	1
   142  004C                     main@enumBranchStep:	
   143  004C                     	ds	1
   144  004D                     main@enumInteralStep:	
   145  004D                     	ds	1
   146  004E                     main@enumMainLoopStep:	
   147  004E                     	ds	1
   148  004F                     main@ucADC4_Step:	
   149  004F                     	ds	1
   150  0050                     main@ucChannel4Type:	
   151  0050                     	ds	1
   152  0051                     main@ucLoaderStep:	
   153  0051                     	ds	1
   154  0052                     main@ucLoaderStep1:	
   155  0052                     	ds	1
   156  0053                     main@ucLoaderStep2:	
   157  0053                     	ds	1
   158  0054                     main@ucLoaderStep3:	
   159  0054                     	ds	1
   160  0055                     main@ucLoaderStep4:	
   161  0055                     	ds	1
   162  0056                     main@ucTimer1s:	
   163  0056                     	ds	1
   164  0057                     main@ucTimer20s:	
   165  0057                     	ds	1
   166  0058                     main@ucTimerADC1ZeroP5s:	
   167  0058                     	ds	1
   168  0059                     main@ucTimerDelay:	
   169  0059                     	ds	1
   170  005A                     main@ucTimerDelay1:	
   171  005A                     	ds	1
   172  005B                     main@ucTimerDelay2:	
   173  005B                     	ds	1
   174  005C                     main@ucTimerDelay3:	
   175  005C                     	ds	1
   176  005D                     main@ucTimerDelay4:	
   177  005D                     	ds	1
   178  005E                     main@ucTimerDelayP5s:	
   179  005E                     	ds	1
   180  005F                     main@ucTimerLessADC1ZeroP5s:	
   181  005F                     	ds	1
   182  0060                     main@ucTimerLessX1P5s:	
   183  0060                     	ds	1
   184  0061                     main@ucTimerLessX2P5s:	
   185  0061                     	ds	1
   186  0062                     main@ucTimerP3s:	
   187  0062                     	ds	1
   188  0063                     main@ucTimerP5s:	
   189  0063                     	ds	1
   190  0064                     main@ucTimerPA6DelayP1s:	
   191  0064                     	ds	1
   192  0065                     main@ucTimerPB6DelayP1s:	
   193  0065                     	ds	1
   194  0066                     main@ucTimerPowerLed:	
   195  0066                     	ds	1
   196  0067                     main@ucTimerRightP5s:	
   197  0067                     	ds	1
   198  0068                     main@ucTimerSeond1s:	
   199  0068                     	ds	1
   200  0069                     main@ucTimerX1P5s:	
   201  0069                     	ds	1
   202  006A                     main@ucTimerX2P5s:	
   203  006A                     	ds	1
   204  006B                     main@ucTimerZeroPoint3s:	
   205  006B                     	ds	1
   206  006C                     main@ucTimerZeroPoint5s:	
   207  006C                     	ds	1
   208  006D                     vPutSampleDataIntoTable@ucChannelFourteenthLength:	
   209  006D                     	ds	1
   210  006E                     vPutSampleDataIntoTable@ucChannelFourthLength:	
   211  006E                     	ds	1
   212                           
   213                           	psect	dataBANK0
   214  006F                     __pdataBANK0:	
   215  006F                     _sampleChannelSelect:	
   216  006F                     	ds	1
   217                           
   218                           	psect	bssBANK1
   219  00A0                     __pbssBANK1:	
   220  00A0                     _uiBigTimer:	
   221  00A0                     	ds	2
   222  00A2                     _uiSmallTimer:	
   223  00A2                     	ds	2
   224  00A4                     _uiTwentySecondsTimer:	
   225  00A4                     	ds	2
   226  00A6                     ISR@ucTimer1sCnt:	
   227  00A6                     	ds	1
   228  00A7                     _timer:	
   229  00A7                     	ds	1
   230  00A8                     _uiSampleChannelFirst:	
   231  00A8                     	ds	24
   232  00C0                     _uiSampleChannelFourteenth:	
   233  00C0                     	ds	24
   234  00D8                     _uiSampleChannelFourth:	
   235  00D8                     	ds	24
   236                           
   237                           	psect	clrtext
   238  05F4                     clear_ram:	
   239                           ;	Called with FSR containing the base address, and
   240                           ;	W with the last address+1
   241                           
   242  05F4  0064               	clrwdt	;clear the watchdog before getting into this loop
   243  05F5                     clrloop:	
   244  05F5  0180               	clrf	0	;clear RAM location pointed to by FSR
   245  05F6  0A84               	incf	4,f	;increment pointer
   246  05F7  0604               	xorwf	4,w	;XOR with final address
   247  05F8  1903               	btfsc	3,2	;have we reached the end yet?
   248  05F9  3400               	retlw	0	;all done for this memory range, return
   249  05FA  0604               	xorwf	4,w	;XOR again to restore value
   250  05FB  2DF5               	goto	clrloop	;do the next byte
   251                           
   252                           	psect	cstackCOMMON
   253  0070                     __pcstackCOMMON:	
   254  0070                     ?_clearTwelveHoursTimer:	
   255  0070                     ?_clearThreeHoursTimer:	
   256                           ; 0 bytes @ 0x0
   257                           
   258  0070                     ?_clearTwentySecondsTimer:	
   259                           ; 0 bytes @ 0x0
   260                           
   261  0070                     ?_clock_config:	
   262                           ; 0 bytes @ 0x0
   263                           
   264  0070                     ?_timer1_config:	
   265                           ; 0 bytes @ 0x0
   266                           
   267  0070                     ?_timer1_interrupt_config:	
   268                           ; 0 bytes @ 0x0
   269                           
   270  0070                     ?_dac_init:	
   271                           ; 0 bytes @ 0x0
   272                           
   273  0070                     ?_op1_init:	
   274                           ; 0 bytes @ 0x0
   275                           
   276  0070                     ?_op2_init:	
   277                           ; 0 bytes @ 0x0
   278                           
   279  0070                     ?_adc_start:	
   280                           ; 0 bytes @ 0x0
   281                           
   282  0070                     ?_process_AD_Converter_Value:	
   283                           ; 0 bytes @ 0x0
   284                           
   285  0070                     ?_clrSampeTime:	
   286                           ; 0 bytes @ 0x0
   287                           
   288  0070                     ?_startTwentySecondsTimer:	
   289                           ; 0 bytes @ 0x0
   290                           
   291  0070                     ?_AD_Sample:	
   292                           ; 0 bytes @ 0x0
   293                           
   294  0070                     ?_clearAllTimer:	
   295                           ; 0 bytes @ 0x0
   296                           
   297  0070                     ?_clearPinPortAndTimer:	
   298                           ; 0 bytes @ 0x0
   299                           
   300  0070                     ?_initPin:	
   301                           ; 0 bytes @ 0x0
   302                           
   303  0070                     ?_main:	
   304                           ; 0 bytes @ 0x0
   305                           
   306  0070                     ?_setAD_ConvertFlag:	
   307                           ; 0 bytes @ 0x0
   308                           
   309  0070                     ?_ISR:	
   310                           ; 0 bytes @ 0x0
   311                           
   312  0070                     ?i1_setAD_ConvertFlag:	
   313                           ; 0 bytes @ 0x0
   314                           
   315  0070                     ??i1_setAD_ConvertFlag:	
   316                           ; 0 bytes @ 0x0
   317                           
   318  0070                     ?_isPermitSampleTime:	
   319                           ; 0 bytes @ 0x0
   320                           
   321  0070                     ?_isFinishedTwelveHoursTimer:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0070                     ?_isFinishedTwentySecondsTimer:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0070                     ?_isFinishedThreeHoursTimer:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0070                     ?_getAD_ConvertFlag:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ?_adc_get:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     i1setAD_ConvertFlag@flag:	
   337                           ; 2 bytes @ 0x0
   338                           
   339                           
   340                           ; 1 bytes @ 0x0
   341  0070                     	ds	2
   342  0072                     ??_adc_get:	
   343  0072                     adc_get@val:	
   344                           ; 0 bytes @ 0x2
   345                           
   346                           
   347                           ; 2 bytes @ 0x2
   348  0072                     	ds	2
   349  0074                     ?_vPutSampleDataIntoTable:	
   350  0074                     vPutSampleDataIntoTable@uiSampleData:	
   351                           ; 0 bytes @ 0x4
   352                           
   353                           
   354                           ; 2 bytes @ 0x4
   355  0074                     	ds	2
   356  0076                     vPutSampleDataIntoTable@channel:	
   357                           
   358                           ; 1 bytes @ 0x6
   359  0076                     	ds	1
   360  0077                     ??_vPutSampleDataIntoTable:	
   361  0077                     vPutSampleDataIntoTable@i:	
   362                           ; 0 bytes @ 0x7
   363                           
   364                           
   365                           ; 2 bytes @ 0x7
   366  0077                     	ds	2
   367  0079                     ??_ISR:	
   368                           
   369                           ; 0 bytes @ 0x9
   370  0079                     	ds	4
   371                           
   372                           	psect	cstackBANK0
   373  0020                     __pcstackBANK0:	
   374  0020                     ??_clearTwelveHoursTimer:	
   375  0020                     ??_clearThreeHoursTimer:	
   376                           ; 0 bytes @ 0x0
   377                           
   378  0020                     ??_clearTwentySecondsTimer:	
   379                           ; 0 bytes @ 0x0
   380                           
   381  0020                     ??_clock_config:	
   382                           ; 0 bytes @ 0x0
   383                           
   384  0020                     ??_timer1_config:	
   385                           ; 0 bytes @ 0x0
   386                           
   387  0020                     ??_timer1_interrupt_config:	
   388                           ; 0 bytes @ 0x0
   389                           
   390  0020                     ?_adc_test_init:	
   391                           ; 0 bytes @ 0x0
   392                           
   393  0020                     ??_dac_init:	
   394                           ; 0 bytes @ 0x0
   395                           
   396  0020                     ??_op1_init:	
   397                           ; 0 bytes @ 0x0
   398                           
   399  0020                     ??_op2_init:	
   400                           ; 0 bytes @ 0x0
   401                           
   402  0020                     ??_adc_start:	
   403                           ; 0 bytes @ 0x0
   404                           
   405  0020                     ??_isPermitSampleTime:	
   406                           ; 0 bytes @ 0x0
   407                           
   408  0020                     ??_clrSampeTime:	
   409                           ; 0 bytes @ 0x0
   410                           
   411  0020                     ?_startTwelveHourTimer:	
   412                           ; 0 bytes @ 0x0
   413                           
   414  0020                     ??_isFinishedTwelveHoursTimer:	
   415                           ; 0 bytes @ 0x0
   416                           
   417  0020                     ??_startTwentySecondsTimer:	
   418                           ; 0 bytes @ 0x0
   419                           
   420  0020                     ??_isFinishedTwentySecondsTimer:	
   421                           ; 0 bytes @ 0x0
   422                           
   423  0020                     ?_startThreeHoursTimer:	
   424                           ; 0 bytes @ 0x0
   425                           
   426  0020                     ??_isFinishedThreeHoursTimer:	
   427                           ; 0 bytes @ 0x0
   428                           
   429  0020                     ??_AD_Sample:	
   430                           ; 0 bytes @ 0x0
   431                           
   432  0020                     ??_clearAllTimer:	
   433                           ; 0 bytes @ 0x0
   434                           
   435  0020                     ??_clearPinPortAndTimer:	
   436                           ; 0 bytes @ 0x0
   437                           
   438  0020                     ??_initPin:	
   439                           ; 0 bytes @ 0x0
   440                           
   441  0020                     ??_getAD_ConvertFlag:	
   442                           ; 0 bytes @ 0x0
   443                           
   444  0020                     ??_setAD_ConvertFlag:	
   445                           ; 0 bytes @ 0x0
   446                           
   447  0020                     ?_Filter:	
   448                           ; 0 bytes @ 0x0
   449                           
   450  0020                     setAD_ConvertFlag@flag:	
   451                           ; 2 bytes @ 0x0
   452                           
   453  0020                     adc_test_init@ref:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0020                     startTwelveHourTimer@uiSetTime:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0020                     startThreeHoursTimer@uiSetTime:	
   460                           ; 2 bytes @ 0x0
   461                           
   462                           
   463                           ; 2 bytes @ 0x0
   464  0020                     	ds	1
   465  0021                     ??_adc_test_init:	
   466                           
   467                           ; 0 bytes @ 0x1
   468  0021                     	ds	1
   469  0022                     ??_startTwelveHourTimer:	
   470  0022                     ??_startThreeHoursTimer:	
   471                           ; 0 bytes @ 0x2
   472                           
   473  0022                     ??_Filter:	
   474                           ; 0 bytes @ 0x2
   475                           
   476  0022                     adc_test_init@channel:	
   477                           ; 0 bytes @ 0x2
   478                           
   479                           
   480                           ; 1 bytes @ 0x2
   481  0022                     	ds	1
   482  0023                     ??_process_AD_Converter_Value:	
   483                           
   484                           ; 0 bytes @ 0x3
   485  0023                     	ds	3
   486  0026                     Filter@filter_buf:	
   487                           
   488                           ; 24 bytes @ 0x6
   489  0026                     	ds	24
   490  003E                     Filter@filter_temp:	
   491                           
   492                           ; 2 bytes @ 0x1E
   493  003E                     	ds	2
   494  0040                     Filter@filter_sum:	
   495                           
   496                           ; 2 bytes @ 0x20
   497  0040                     	ds	2
   498  0042                     Filter@tmpValue:	
   499                           
   500                           ; 1 bytes @ 0x22
   501  0042                     	ds	1
   502  0043                     Filter@cir:	
   503                           
   504                           ; 2 bytes @ 0x23
   505  0043                     	ds	2
   506  0045                     Filter@j:	
   507                           
   508                           ; 1 bytes @ 0x25
   509  0045                     	ds	1
   510  0046                     Filter@i:	
   511                           
   512                           ; 1 bytes @ 0x26
   513  0046                     	ds	1
   514  0047                     ?_getAdOriginalCh14Value:	
   515  0047                     ?_getAdOriginalCh1Value:	
   516                           ; 2 bytes @ 0x27
   517                           
   518  0047                     ?_getAdOriginaCh4Value:	
   519                           ; 2 bytes @ 0x27
   520                           
   521                           
   522                           ; 2 bytes @ 0x27
   523  0047                     	ds	2
   524  0049                     ??_getAdOriginalCh14Value:	
   525  0049                     ??_getAdOriginalCh1Value:	
   526                           ; 0 bytes @ 0x29
   527                           
   528  0049                     ??_getAdOriginaCh4Value:	
   529                           ; 0 bytes @ 0x29
   530                           
   531  0049                     ??_main:	
   532                           ; 0 bytes @ 0x29
   533                           
   534                           
   535                           	psect	maintext
   536  0013                     __pmaintext:	
   537                           ; 0 bytes @ 0x29
   538 ;;Data sizes: Strings 0, constant 0, data 1, bss 119, persistent 0 stack 0
   539 ;;Auto spaces:   Size  Autos    Used
   540 ;; COMMON          14     13      14
   541 ;; BANK0           80     41      80
   542 ;; BANK1           80      0      80
   543 ;; BANK3           96      0       0
   544 ;; BANK2           96      0       0
   545 ;;
   546 ;; Pointer list with targets:
   547 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   548 ;;
   549 ;; ?_getAdOriginalCh14Value	unsigned int  size(1) Largest target is 0
   550 ;;
   551 ;; ?_getAdOriginaCh4Value	unsigned int  size(1) Largest target is 0
   552 ;;
   553 ;; ?_getAdOriginalCh1Value	unsigned int  size(1) Largest target is 0
   554 ;;
   555 ;; ?_Filter	unsigned int  size(1) Largest target is 0
   556 ;;
   557 ;; Filter@tmpValue	PTR int  size(1) Largest target is 24
   558 ;;		 -> uiSampleChannelFourteenth(BANK1[24]), uiSampleChannelFourth(BANK1[24]), uiSampleChannelFirst(BANK1[24]), 
   559 ;;
   560 ;;
   561 ;; Critical Paths under _main in COMMON
   562 ;;
   563 ;;   None.
   564 ;;
   565 ;; Critical Paths under _ISR in COMMON
   566 ;;
   567 ;;   _ISR->_vPutSampleDataIntoTable
   568 ;;   _vPutSampleDataIntoTable->_adc_get
   569 ;;
   570 ;; Critical Paths under _main in BANK0
   571 ;;
   572 ;;   _main->_getAdOriginalCh14Value
   573 ;;   _main->_getAdOriginalCh1Value
   574 ;;   _main->_getAdOriginaCh4Value
   575 ;;   _getAdOriginaCh4Value->_Filter
   576 ;;   _getAdOriginalCh1Value->_Filter
   577 ;;   _getAdOriginalCh14Value->_Filter
   578 ;;   _process_AD_Converter_Value->_adc_test_init
   579 ;;
   580 ;; Critical Paths under _ISR in BANK0
   581 ;;
   582 ;;   None.
   583 ;;
   584 ;; Critical Paths under _main in BANK1
   585 ;;
   586 ;;   None.
   587 ;;
   588 ;; Critical Paths under _ISR in BANK1
   589 ;;
   590 ;;   None.
   591 ;;
   592 ;; Critical Paths under _main in BANK3
   593 ;;
   594 ;;   None.
   595 ;;
   596 ;; Critical Paths under _ISR in BANK3
   597 ;;
   598 ;;   None.
   599 ;;
   600 ;; Critical Paths under _main in BANK2
   601 ;;
   602 ;;   None.
   603 ;;
   604 ;; Critical Paths under _ISR in BANK2
   605 ;;
   606 ;;   None.
   607 ;;
   608 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   609 ;;
   610 ;;
   611 ;;Call Graph Tables:
   612 ;;
   613 ;; ---------------------------------------------------------------------------------
   614 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   615 ;; ---------------------------------------------------------------------------------
   616 ;; (0) _main                                                 0     0      0    2014
   617 ;;                            _initPin
   618 ;;                       _clock_config
   619 ;;                      _timer1_config
   620 ;;            _timer1_interrupt_config
   621 ;;                      _adc_test_init
   622 ;;                           _dac_init
   623 ;;                           _op1_init
   624 ;;                           _op2_init
   625 ;;                          _adc_start
   626 ;;         _process_AD_Converter_Value
   627 ;;                 _isPermitSampleTime
   628 ;;                       _clrSampeTime
   629 ;;             _getAdOriginalCh14Value
   630 ;;               _clearPinPortAndTimer
   631 ;;              _getAdOriginalCh1Value
   632 ;;               _startTwelveHourTimer
   633 ;;         _isFinishedTwelveHoursTimer
   634 ;;            _startTwentySecondsTimer
   635 ;;               _getAdOriginaCh4Value
   636 ;;       _isFinishedTwentySecondsTimer
   637 ;;               _startThreeHoursTimer
   638 ;;          _isFinishedThreeHoursTimer
   639 ;;               _clearThreeHoursTimer
   640 ;;                      _clearAllTimer
   641 ;; ---------------------------------------------------------------------------------
   642 ;; (1) _clearPinPortAndTimer                                 0     0      0       0
   643 ;;                      _clearAllTimer
   644 ;; ---------------------------------------------------------------------------------
   645 ;; (1) _getAdOriginaCh4Value                                 2     0      2     620
   646 ;;                                             39 BANK0      2     0      2
   647 ;;                             _Filter
   648 ;; ---------------------------------------------------------------------------------
   649 ;; (1) _getAdOriginalCh1Value                                2     0      2     620
   650 ;;                                             39 BANK0      2     0      2
   651 ;;                             _Filter
   652 ;; ---------------------------------------------------------------------------------
   653 ;; (1) _getAdOriginalCh14Value                               2     0      2     620
   654 ;;                                             39 BANK0      2     0      2
   655 ;;                             _Filter
   656 ;; ---------------------------------------------------------------------------------
   657 ;; (1) _process_AD_Converter_Value                           0     0      0      66
   658 ;;                  _getAD_ConvertFlag
   659 ;;                  _setAD_ConvertFlag
   660 ;;                          _AD_Sample
   661 ;;                      _adc_test_init
   662 ;;                          _adc_start
   663 ;; ---------------------------------------------------------------------------------
   664 ;; (1) _clearAllTimer                                        0     0      0       0
   665 ;;              _clearTwelveHoursTimer
   666 ;;               _clearThreeHoursTimer
   667 ;;            _clearTwentySecondsTimer
   668 ;; ---------------------------------------------------------------------------------
   669 ;; (2) _AD_Sample                                            0     0      0       0
   670 ;; ---------------------------------------------------------------------------------
   671 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   672 ;;                                              0 BANK0      1     1      0
   673 ;; ---------------------------------------------------------------------------------
   674 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   675 ;; ---------------------------------------------------------------------------------
   676 ;; (2) _Filter                                              39    37      2     620
   677 ;;                                              0 BANK0     39    37      2
   678 ;; ---------------------------------------------------------------------------------
   679 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   680 ;; ---------------------------------------------------------------------------------
   681 ;; (1) _startThreeHoursTimer                                 2     0      2      22
   682 ;;                                              0 BANK0      2     0      2
   683 ;; ---------------------------------------------------------------------------------
   684 ;; (1) _isFinishedTwentySecondsTimer                         0     0      0       0
   685 ;; ---------------------------------------------------------------------------------
   686 ;; (1) _startTwentySecondsTimer                              0     0      0       0
   687 ;; ---------------------------------------------------------------------------------
   688 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   689 ;; ---------------------------------------------------------------------------------
   690 ;; (1) _startTwelveHourTimer                                 2     0      2      22
   691 ;;                                              0 BANK0      2     0      2
   692 ;; ---------------------------------------------------------------------------------
   693 ;; (1) _clrSampeTime                                         0     0      0       0
   694 ;; ---------------------------------------------------------------------------------
   695 ;; (1) _isPermitSampleTime                                   0     0      0       0
   696 ;; ---------------------------------------------------------------------------------
   697 ;; (2) _adc_start                                            0     0      0       0
   698 ;; ---------------------------------------------------------------------------------
   699 ;; (1) _op2_init                                             0     0      0       0
   700 ;; ---------------------------------------------------------------------------------
   701 ;; (1) _op1_init                                             0     0      0       0
   702 ;; ---------------------------------------------------------------------------------
   703 ;; (1) _dac_init                                             0     0      0       0
   704 ;; ---------------------------------------------------------------------------------
   705 ;; (2) _adc_test_init                                        3     2      1      44
   706 ;;                                              0 BANK0      3     2      1
   707 ;; ---------------------------------------------------------------------------------
   708 ;; (1) _timer1_interrupt_config                              0     0      0       0
   709 ;; ---------------------------------------------------------------------------------
   710 ;; (1) _timer1_config                                        0     0      0       0
   711 ;; ---------------------------------------------------------------------------------
   712 ;; (1) _clock_config                                         0     0      0       0
   713 ;; ---------------------------------------------------------------------------------
   714 ;; (1) _initPin                                              0     0      0       0
   715 ;; ---------------------------------------------------------------------------------
   716 ;; (2) _clearTwentySecondsTimer                              0     0      0       0
   717 ;; ---------------------------------------------------------------------------------
   718 ;; (2) _clearThreeHoursTimer                                 0     0      0       0
   719 ;; ---------------------------------------------------------------------------------
   720 ;; (2) _clearTwelveHoursTimer                                0     0      0       0
   721 ;; ---------------------------------------------------------------------------------
   722 ;; Estimated maximum stack depth 2
   723 ;; ---------------------------------------------------------------------------------
   724 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   725 ;; ---------------------------------------------------------------------------------
   726 ;; (4) _ISR                                                  4     4      0     407
   727 ;;                                              9 COMMON     4     4      0
   728 ;;                i1_setAD_ConvertFlag
   729 ;;                            _adc_get
   730 ;;            _vPutSampleDataIntoTable
   731 ;; ---------------------------------------------------------------------------------
   732 ;; (5) i1_setAD_ConvertFlag                                  1     1      0      73
   733 ;;                                              0 COMMON     1     1      0
   734 ;; ---------------------------------------------------------------------------------
   735 ;; (5) _adc_get                                              4     2      2      24
   736 ;;                                              0 COMMON     4     2      2
   737 ;; ---------------------------------------------------------------------------------
   738 ;; (5) _vPutSampleDataIntoTable                              5     2      3     310
   739 ;;                                              4 COMMON     5     2      3
   740 ;;                            _adc_get (ARG)
   741 ;; ---------------------------------------------------------------------------------
   742 ;; Estimated maximum stack depth 5
   743 ;; ---------------------------------------------------------------------------------
   744 ;; Call Graph Graphs:
   745 ;; _main (ROOT)
   746 ;;   _initPin
   747 ;;   _clock_config
   748 ;;   _timer1_config
   749 ;;   _timer1_interrupt_config
   750 ;;   _adc_test_init
   751 ;;   _dac_init
   752 ;;   _op1_init
   753 ;;   _op2_init
   754 ;;   _adc_start
   755 ;;   _process_AD_Converter_Value
   756 ;;     _getAD_ConvertFlag
   757 ;;     _setAD_ConvertFlag
   758 ;;     _AD_Sample
   759 ;;     _adc_test_init
   760 ;;     _adc_start
   761 ;;   _isPermitSampleTime
   762 ;;   _clrSampeTime
   763 ;;   _getAdOriginalCh14Value
   764 ;;     _Filter
   765 ;;   _clearPinPortAndTimer
   766 ;;     _clearAllTimer
   767 ;;       _clearTwelveHoursTimer
   768 ;;       _clearThreeHoursTimer
   769 ;;       _clearTwentySecondsTimer
   770 ;;   _getAdOriginalCh1Value
   771 ;;     _Filter
   772 ;;   _startTwelveHourTimer
   773 ;;   _isFinishedTwelveHoursTimer
   774 ;;   _startTwentySecondsTimer
   775 ;;   _getAdOriginaCh4Value
   776 ;;     _Filter
   777 ;;   _isFinishedTwentySecondsTimer
   778 ;;   _startThreeHoursTimer
   779 ;;   _isFinishedThreeHoursTimer
   780 ;;   _clearThreeHoursTimer
   781 ;;   _clearAllTimer
   782 ;;     _clearTwelveHoursTimer
   783 ;;     _clearThreeHoursTimer
   784 ;;     _clearTwentySecondsTimer
   785 ;;
   786 ;; _ISR (ROOT)
   787 ;;   i1_setAD_ConvertFlag
   788 ;;   _adc_get
   789 ;;   _vPutSampleDataIntoTable
   790 ;;     _adc_get (ARG)
   791 ;;
   792 ;; Address spaces:
   793 ;;Name               Size   Autos  Total    Cost      Usage
   794 ;;BANK3               60      0       0      10        0.0%
   795 ;;BITBANK3            60      0       0       9        0.0%
   796 ;;SFR3                 0      0       0       4        0.0%
   797 ;;BITSFR3              0      0       0       4        0.0%
   798 ;;BANK2               60      0       0      12        0.0%
   799 ;;BITBANK2            60      0       0      11        0.0%
   800 ;;SFR2                 0      0       0       5        0.0%
   801 ;;BITSFR2              0      0       0       5        0.0%
   802 ;;SFR1                 0      0       0       2        0.0%
   803 ;;BITSFR1              0      0       0       2        0.0%
   804 ;;BANK1               50      0      50       8      100.0%
   805 ;;BITBANK1            50      0       0       7        0.0%
   806 ;;CODE                 0      0       0       0        0.0%
   807 ;;DATA                 0      0      B5       6        0.0%
   808 ;;ABS                  0      0      AE       3        0.0%
   809 ;;NULL                 0      0       0       0        0.0%
   810 ;;STACK                0      0       7       2        0.0%
   811 ;;BANK0               50     29      50       5      100.0%
   812 ;;BITBANK0            50      0       0       4        0.0%
   813 ;;SFR0                 0      0       0       1        0.0%
   814 ;;BITSFR0              0      0       0       1        0.0%
   815 ;;COMMON               E      D       E       1      100.0%
   816 ;;BITCOMMON            E      0       0       0        0.0%
   817                           
   818                           
   819 ;; *************** function _main *****************
   820 ;; Defined at:
   821 ;;		line 129 in file "D:\develop\190625\AK7030-OTP\main.c"
   822 ;; Parameters:    Size  Location     Type
   823 ;;		None
   824 ;; Auto vars:     Size  Location     Type
   825 ;;		None
   826 ;; Return value:  Size  Location     Type
   827 ;;		None               void
   828 ;; Registers used:
   829 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   830 ;; Tracked objects:
   831 ;;		On entry : 17F/0
   832 ;;		On exit  : 60/0
   833 ;;		Unchanged: FFE00/0
   834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   835 ;;      Params:         0       0       0       0       0
   836 ;;      Locals:         0       0       0       0       0
   837 ;;      Temps:          0       0       0       0       0
   838 ;;      Totals:         0       0       0       0       0
   839 ;;Total ram usage:        0 bytes
   840 ;; Hardware stack levels required when called:    5
   841 ;; This function calls:
   842 ;;		_initPin
   843 ;;		_clock_config
   844 ;;		_timer1_config
   845 ;;		_timer1_interrupt_config
   846 ;;		_adc_test_init
   847 ;;		_dac_init
   848 ;;		_op1_init
   849 ;;		_op2_init
   850 ;;		_adc_start
   851 ;;		_process_AD_Converter_Value
   852 ;;		_isPermitSampleTime
   853 ;;		_clrSampeTime
   854 ;;		_getAdOriginalCh14Value
   855 ;;		_clearPinPortAndTimer
   856 ;;		_getAdOriginalCh1Value
   857 ;;		_startTwelveHourTimer
   858 ;;		_isFinishedTwelveHoursTimer
   859 ;;		_startTwentySecondsTimer
   860 ;;		_getAdOriginaCh4Value
   861 ;;		_isFinishedTwentySecondsTimer
   862 ;;		_startThreeHoursTimer
   863 ;;		_isFinishedThreeHoursTimer
   864 ;;		_clearThreeHoursTimer
   865 ;;		_clearAllTimer
   866 ;; This function is called by:
   867 ;;		Startup code after reset
   868 ;; This function uses a non-reentrant model
   869 ;;
   870  0013                     _main:	
   871                           
   872                           ;main.c: 130: enum setp_Adc4
   873                           ;main.c: 131: {
   874                           ;main.c: 132: ADC4_STEP_INIT = 0,
   875                           ;main.c: 133: ADC4_STEP_FIRST,
   876                           ;main.c: 134: ADC4_STEP_SECOND,
   877                           ;main.c: 135: ADC4_STEP_THIRD,
   878                           ;main.c: 136: ADC4_STEP_FOURTH,
   879                           ;main.c: 137: ADC4_STEP_FIFTH,
   880                           ;main.c: 138: ADC4_STEP_SIXTH,
   881                           ;main.c: 139: };
   882                           ;main.c: 142: static unsigned char ucWaitTime1S = 0;
   883                           ;main.c: 144: static unsigned char ucWaitTimeO3s = 0;
   884                           ;main.c: 146: static unsigned char ucSmallTimerActionFlag = 0;
   885                           ;main.c: 148: static unsigned char ucSetSmallActionFlag = 0;
   886                           
   887                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   888  0013  1683               	bsf	3,5	;RP0=1, select bank1
   889  0014  1005               	bcf	5,0
   890                           
   891                           ;main.c: 151: TRISA1 = 0;
   892  0015  1085               	bcf	5,1
   893                           
   894                           ;main.c: 152: TRISA2 = 0;
   895  0016  1105               	bcf	5,2
   896                           
   897                           ;main.c: 153: TRISA3 = 0;
   898  0017  1185               	bcf	5,3
   899                           
   900                           ;main.c: 154: TRISB0 = 0;
   901  0018  1006               	bcf	6,0
   902                           
   903                           ;main.c: 155: TRISB1 = 0;
   904  0019  1086               	bcf	6,1
   905                           
   906                           ;main.c: 156: TRISA6 = 0;
   907  001A  1305               	bcf	5,6
   908                           
   909                           ;main.c: 157: TRISA7 = 0;
   910  001B  1385               	bcf	5,7
   911                           
   912                           ;main.c: 158: TRISB6 = 0;
   913  001C  1306               	bcf	6,6
   914                           
   915                           ;main.c: 161: initPin();
   916  001D  118A  2576  118A   	fcall	_initPin
   917                           
   918                           ;main.c: 164: TRISB2 = 1;
   919  0020  1303               	bcf	3,6	;RP1=0, select bank1
   920  0021  1506               	bsf	6,2
   921                           
   922                           ;main.c: 166: TRISB7 = 1;
   923  0022  1786               	bsf	6,7
   924                           
   925                           ;main.c: 167: TRISB4 = 1;
   926  0023  1606               	bsf	6,4
   927                           
   928                           ;main.c: 169: clock_config();
   929  0024  118A  2604  118A   	fcall	_clock_config
   930                           
   931                           ;main.c: 170: timer1_config();
   932  0027  118A  25EA  118A   	fcall	_timer1_config
   933                           
   934                           ;main.c: 171: timer1_interrupt_config();
   935  002A  118A  262E  118A   	fcall	_timer1_interrupt_config
   936                           
   937                           ;main.c: 173: adc_test_init(14,3);
   938  002D  3003               	movlw	3
   939  002E  1283               	bcf	3,5	;RP0=0, select bank0
   940  002F  00A0               	movwf	?_adc_test_init
   941  0030  300E               	movlw	14
   942  0031  118A  2542  118A   	fcall	_adc_test_init
   943                           
   944                           ;main.c: 175: dac_init();
   945  0034  118A  2629  118A   	fcall	_dac_init
   946                           
   947                           ;main.c: 176: op1_init();
   948  0037  118A  25DF  118A   	fcall	_op1_init
   949                           
   950                           ;main.c: 177: op2_init();
   951  003A  118A  25FC  118A   	fcall	_op2_init
   952                           
   953                           ;main.c: 180: adc_start();
   954  003D  118A  2557  118A   	fcall	_adc_start
   955  0040                     l4206:	
   956  0040  0064               	clrwdt	;#
   957                           
   958                           ;main.c: 217: process_AD_Converter_Value();
   959  0041  118A  2500  118A   	fcall	_process_AD_Converter_Value
   960                           
   961                           ;main.c: 219: if(isPermitSampleTime())
   962  0044  118A  261E  118A   	fcall	_isPermitSampleTime
   963  0047  3A00               	xorlw	0
   964  0048  1903               	skipnz
   965  0049  2840               	goto	l4206
   966                           
   967                           ;main.c: 220: {
   968                           ;main.c: 221: clrSampeTime();
   969  004A  118A  2631  118A   	fcall	_clrSampeTime
   970                           
   971                           ;main.c: 223: if(ucTimerPowerLed < 30)
   972  004D  301E               	movlw	30
   973  004E  1283               	bcf	3,5	;RP0=0, select bank0
   974  004F  0266               	subwf	main@ucTimerPowerLed,w
   975  0050  1803               	skipnc
   976  0051  2854               	goto	l4218
   977                           
   978                           ;main.c: 224: {
   979                           ;main.c: 225: ucTimerPowerLed ++;
   980  0052  0AE6               	incf	main@ucTimerPowerLed,f
   981                           
   982                           ;main.c: 226: }
   983  0053  2B52               	goto	l4752
   984  0054                     l4218:	
   985                           
   986                           ;main.c: 227: else
   987                           ;main.c: 228: {
   988                           ;main.c: 229: ucTimerPowerLed = 0;
   989  0054  01E6               	clrf	main@ucTimerPowerLed
   990                           
   991                           ;main.c: 230: PB1 = 0;
   992  0055  1086               	bcf	6,1
   993  0056  2B52               	goto	l4752
   994  0057                     l4222:	
   995                           
   996                           ;main.c: 237: {
   997                           ;main.c: 238: static unsigned char ucTimerZeroPoint5s = 0;
   998                           ;main.c: 239: if(getAdOriginalCh14Value() > 1950)
   999  0057  118A  2454  118A   	fcall	_getAdOriginalCh14Value
  1000  005A  3007               	movlw	7
  1001  005B  0248               	subwf	?_getAdOriginalCh14Value+1,w
  1002  005C  309F               	movlw	159
  1003  005D  1903               	skipnz
  1004  005E  0247               	subwf	?_getAdOriginalCh14Value,w
  1005  005F  1C03               	skipc
  1006  0060  2863               	goto	l4226
  1007                           
  1008                           ;main.c: 240: {
  1009                           ;main.c: 241: ucTimerZeroPoint5s++;
  1010  0061  0AEC               	incf	main@ucTimerZeroPoint5s,f
  1011                           
  1012                           ;main.c: 242: }
  1013  0062  2864               	goto	l4228
  1014  0063                     l4226:	
  1015                           
  1016                           ;main.c: 243: else
  1017                           ;main.c: 244: ucTimerZeroPoint5s = 0;
  1018  0063  01EC               	clrf	main@ucTimerZeroPoint5s
  1019  0064                     l4228:	
  1020                           
  1021                           ;main.c: 246: if(ucTimerZeroPoint5s >= 5)
  1022  0064  3005               	movlw	5
  1023  0065  026C               	subwf	main@ucTimerZeroPoint5s,w
  1024  0066  1C03               	skipc
  1025  0067  2840               	goto	l4206
  1026                           
  1027                           ;main.c: 247: {
  1028                           ;main.c: 248: ucTimerZeroPoint5s = 0;
  1029  0068  01EC               	clrf	main@ucTimerZeroPoint5s
  1030  0069                     l4232:	
  1031                           
  1032                           ;main.c: 249: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  1033  0069  1283               	bcf	3,5	;RP0=0, select bank0
  1034  006A  01CE               	clrf	main@enumMainLoopStep
  1035  006B  0ACE               	incf	main@enumMainLoopStep,f
  1036  006C                     l710:	
  1037                           
  1038                           ;main.c: 250: }
  1039                           ;main.c: 251: break;
  1040  006C  2840               	goto	l4206
  1041  006D                     l4234:	
  1042                           
  1043                           ;main.c: 255: {
  1044                           ;main.c: 256: static unsigned char ucTimerZeroPoint3s = 0;
  1045                           ;main.c: 259: if(getAdOriginalCh14Value() > 1950)
  1046  006D  118A  2454  118A   	fcall	_getAdOriginalCh14Value
  1047  0070  3007               	movlw	7
  1048  0071  0248               	subwf	?_getAdOriginalCh14Value+1,w
  1049  0072  309F               	movlw	159
  1050  0073  1903               	skipnz
  1051  0074  0247               	subwf	?_getAdOriginalCh14Value,w
  1052  0075  1C03               	skipc
  1053  0076  287B               	goto	l4240
  1054                           
  1055                           ;main.c: 260: {
  1056                           ;main.c: 262: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
  1057  0077  3002               	movlw	2
  1058  0078  00CE               	movwf	main@enumMainLoopStep
  1059                           
  1060                           ;main.c: 264: ucTimerZeroPoint3s = 0;
  1061  0079  01EB               	clrf	main@ucTimerZeroPoint3s
  1062                           
  1063                           ;main.c: 265: }
  1064  007A  2840               	goto	l4206
  1065  007B                     l4240:	
  1066  007B  3003               	movlw	3
  1067                           
  1068                           ;main.c: 266: else
  1069                           ;main.c: 267: {
  1070                           ;main.c: 268: ucTimerZeroPoint3s++;
  1071  007C  0AEB               	incf	main@ucTimerZeroPoint3s,f
  1072                           
  1073                           ;main.c: 270: if(ucTimerZeroPoint3s >= 3)
  1074  007D  026B               	subwf	main@ucTimerZeroPoint3s,w
  1075  007E  1C03               	skipc
  1076  007F  2840               	goto	l4206
  1077                           
  1078                           ;main.c: 271: {
  1079                           ;main.c: 272: ucTimerZeroPoint3s = 0;
  1080  0080  01EB               	clrf	main@ucTimerZeroPoint3s
  1081                           
  1082                           ;main.c: 274: clearPinPortAndTimer();
  1083  0081  118A  255A  118A   	fcall	_clearPinPortAndTimer
  1084  0084  2840               	goto	l4206
  1085  0085                     l718:	
  1086                           ;main.c: 278: }
  1087                           ;main.c: 280: case MAIN_LOOP_STEP_SECOND:
  1088                           
  1089  0085  3005               	movlw	5
  1090                           
  1091                           ;main.c: 281: {
  1092                           ;main.c: 282: static unsigned char ucTimerP5s = 0;
  1093                           ;main.c: 284: PA6 = 1;
  1094  0086  1705               	bsf	5,6
  1095                           
  1096                           ;main.c: 286: if(ucTimerP5s < 5)
  1097  0087  0263               	subwf	main@ucTimerP5s,w
  1098  0088  1803               	skipnc
  1099  0089  288C               	goto	l4252
  1100                           
  1101                           ;main.c: 287: ucTimerP5s++;
  1102  008A  0AE3               	incf	main@ucTimerP5s,f
  1103  008B  2840               	goto	l4206
  1104  008C                     l4252:	
  1105  008C  3003               	movlw	3
  1106                           
  1107                           ;main.c: 288: else
  1108                           ;main.c: 289: {
  1109                           ;main.c: 290: ucTimerP5s = 0;
  1110  008D  01E3               	clrf	main@ucTimerP5s
  1111                           
  1112                           ;main.c: 292: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  1113  008E  2AD5               	goto	L4
  1114  008F                     l4256:	
  1115                           
  1116                           ;main.c: 299: {
  1117                           ;main.c: 300: static unsigned char ucTimerADC1ZeroP5s = 0;
  1118                           ;main.c: 302: static unsigned char ucTimerLessADC1ZeroP5s = 0;
  1119                           ;main.c: 304: static unsigned char ucTimerRightP5s = 0;
  1120                           ;main.c: 306: if(getAdOriginalCh1Value() < 130)
  1121  008F  118A  244D  118A   	fcall	_getAdOriginalCh1Value
  1122  0092  3000               	movlw	0
  1123  0093  0248               	subwf	?_getAdOriginalCh1Value+1,w
  1124  0094  3082               	movlw	130
  1125  0095  1903               	skipnz
  1126  0096  0247               	subwf	?_getAdOriginalCh1Value,w
  1127  0097  1803               	skipnc
  1128  0098  289C               	goto	l4262
  1129                           
  1130                           ;main.c: 307: {
  1131                           ;main.c: 308: ucTimerADC1ZeroP5s = 0;
  1132  0099  01D8               	clrf	main@ucTimerADC1ZeroP5s
  1133                           
  1134                           ;main.c: 310: ucTimerLessADC1ZeroP5s++;
  1135  009A  0ADF               	incf	main@ucTimerLessADC1ZeroP5s,f
  1136                           
  1137                           ;main.c: 311: }
  1138  009B  289E               	goto	l4266
  1139  009C                     l4262:	
  1140                           
  1141                           ;main.c: 312: else
  1142                           ;main.c: 313: {
  1143                           ;main.c: 314: ucTimerADC1ZeroP5s++;
  1144  009C  0AD8               	incf	main@ucTimerADC1ZeroP5s,f
  1145                           
  1146                           ;main.c: 316: ucTimerLessADC1ZeroP5s = 0;
  1147  009D  01DF               	clrf	main@ucTimerLessADC1ZeroP5s
  1148  009E                     l4266:	
  1149                           
  1150                           ;main.c: 317: }
  1151                           ;main.c: 319: if(ucTimerADC1ZeroP5s >= 5)
  1152  009E  3005               	movlw	5
  1153  009F  0258               	subwf	main@ucTimerADC1ZeroP5s,w
  1154  00A0  1C03               	skipc
  1155  00A1  28A5               	goto	l4272
  1156  00A2  3004               	movlw	4
  1157                           
  1158                           ;main.c: 320: {
  1159                           ;main.c: 321: ucTimerADC1ZeroP5s = 0;
  1160  00A3  01D8               	clrf	main@ucTimerADC1ZeroP5s
  1161                           
  1162                           ;main.c: 322: enumMainLoopStep = MAIN_LOOP_STEP_FOURTH;
  1163  00A4  28BD               	goto	L2
  1164  00A5                     l4272:	
  1165                           ;main.c: 323: }
  1166                           
  1167                           
  1168                           ;main.c: 324: else if( ucTimerLessADC1ZeroP5s >= 5)
  1169  00A5  3005               	movlw	5
  1170  00A6  025F               	subwf	main@ucTimerLessADC1ZeroP5s,w
  1171  00A7  1C03               	skipc
  1172  00A8  28BE               	goto	l4288
  1173                           
  1174                           ;main.c: 325: {
  1175                           ;main.c: 328: ucTimerLessADC1ZeroP5s = 0;
  1176  00A9  01DF               	clrf	main@ucTimerLessADC1ZeroP5s
  1177                           
  1178                           ;main.c: 330: if(getAdOriginalCh1Value() < 117)
  1179  00AA  118A  244D  118A   	fcall	_getAdOriginalCh1Value
  1180  00AD  3000               	movlw	0
  1181  00AE  0248               	subwf	?_getAdOriginalCh1Value+1,w
  1182  00AF  3075               	movlw	117
  1183  00B0  1903               	skipnz
  1184  00B1  0247               	subwf	?_getAdOriginalCh1Value,w
  1185  00B2  1803               	skipnc
  1186  00B3  28B6               	goto	l4280
  1187                           
  1188                           ;main.c: 331: {
  1189                           ;main.c: 332: ucTimerRightP5s++;
  1190  00B4  0AE7               	incf	main@ucTimerRightP5s,f
  1191                           
  1192                           ;main.c: 333: }
  1193  00B5  28B7               	goto	l4282
  1194  00B6                     l4280:	
  1195                           
  1196                           ;main.c: 334: else
  1197                           ;main.c: 335: {
  1198                           ;main.c: 336: ucTimerRightP5s = 0;
  1199  00B6  01E7               	clrf	main@ucTimerRightP5s
  1200  00B7                     l4282:	
  1201                           
  1202                           ;main.c: 337: }
  1203                           ;main.c: 339: if(ucTimerRightP5s >= 5)
  1204  00B7  3005               	movlw	5
  1205  00B8  0267               	subwf	main@ucTimerRightP5s,w
  1206  00B9  1C03               	skipc
  1207  00BA  28BE               	goto	l4288
  1208  00BB  3008               	movlw	8
  1209                           
  1210                           ;main.c: 340: {
  1211                           ;main.c: 341: ucTimerRightP5s = 0;
  1212  00BC  01E7               	clrf	main@ucTimerRightP5s
  1213  00BD                     L2:	
  1214                           ;main.c: 342: enumMainLoopStep = MAIN_LOOP_STEP_3_HOUR_BRANCH;
  1215                           
  1216  00BD  00CE               	movwf	main@enumMainLoopStep
  1217  00BE                     l4288:	
  1218                           ;main.c: 349: else
  1219                           ;main.c: 350: {
  1220                           ;main.c: 351: ;
  1221                           
  1222                           ;main.c: 343: }
  1223                           
  1224                           
  1225                           ;main.c: 352: }
  1226                           ;main.c: 354: if((MAIN_LOOP_STEP_3_HOUR_BRANCH == enumMainLoopStep) || (MAIN_LOOP_STEP_F
      +                          OURTH == enumMainLoopStep))
  1227  00BE  084E               	movf	main@enumMainLoopStep,w
  1228  00BF  3A08               	xorlw	8
  1229  00C0  1903               	skipnz
  1230  00C1  28C6               	goto	l4292
  1231  00C2  084E               	movf	main@enumMainLoopStep,w
  1232  00C3  3A04               	xorlw	4
  1233  00C4  1D03               	skipz
  1234  00C5  2840               	goto	l4206
  1235  00C6                     l4292:	
  1236                           
  1237                           ;main.c: 355: {
  1238                           ;main.c: 356: ucTimerRightP5s = 0;
  1239  00C6  01E7               	clrf	main@ucTimerRightP5s
  1240                           
  1241                           ;main.c: 357: ucTimerADC1ZeroP5s = 0;
  1242  00C7  01D8               	clrf	main@ucTimerADC1ZeroP5s
  1243                           
  1244                           ;main.c: 358: ucTimerLessADC1ZeroP5s = 0;
  1245  00C8  01DF               	clrf	main@ucTimerLessADC1ZeroP5s
  1246  00C9  2840               	goto	l4206
  1247  00CA                     l4294:	
  1248                           
  1249                           ;main.c: 366: {
  1250                           ;main.c: 368: startTwelveHourTimer(600);
  1251  00CA  3058               	movlw	88
  1252  00CB  00A0               	movwf	?_startTwelveHourTimer
  1253  00CC  3002               	movlw	2
  1254  00CD  00A1               	movwf	?_startTwelveHourTimer+1
  1255  00CE  118A  25C5  118A   	fcall	_startTwelveHourTimer
  1256                           
  1257                           ;main.c: 369: enumMainLoopStep = MAIN_LOOP_STEP_FIFTH;
  1258  00D1  3005               	movlw	5
  1259  00D2  28DA               	goto	L9
  1260  00D3                     l4298:	
  1261                           ;main.c: 371: break;
  1262                           
  1263                           
  1264                           ;main.c: 375: {
  1265                           ;main.c: 377: if(isFinishedTwelveHoursTimer())
  1266  00D3  118A  2618  118A   	fcall	_isFinishedTwelveHoursTimer
  1267  00D6  3A00               	xorlw	0
  1268  00D7  1903               	skipnz
  1269  00D8  2A7A               	goto	l4634
  1270  00D9                     l4300:	
  1271                           
  1272                           ;main.c: 378: {
  1273                           ;main.c: 379: enumMainLoopStep = MAIN_LOOP_STEP_12_HOUR_END;
  1274  00D9  3009               	movlw	9
  1275  00DA                     L9:	
  1276  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  1277  00DB  2AD5               	goto	L4
  1278  00DC                     l4302:	
  1279                           ;main.c: 380: }
  1280                           
  1281                           
  1282                           ;main.c: 388: {
  1283                           ;main.c: 389: startTwentySecondsTimer();
  1284  00DC  118A  2624  118A   	fcall	_startTwentySecondsTimer
  1285  00DF                     l4304:	
  1286                           
  1287                           ;main.c: 390: ucADC4_Step = ADC4_STEP_FIRST;
  1288  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  1289  00E0  01CF               	clrf	main@ucADC4_Step
  1290  00E1  0ACF               	incf	main@ucADC4_Step,f
  1291                           
  1292                           ;main.c: 391: break;
  1293  00E2  2840               	goto	l4206
  1294  00E3                     l4306:	
  1295                           
  1296                           ;main.c: 395: {
  1297                           ;main.c: 396: if(getAdOriginaCh4Value() < 1911)
  1298  00E3  118A  2446  118A   	fcall	_getAdOriginaCh4Value
  1299  00E6  3007               	movlw	7
  1300  00E7  0248               	subwf	?_getAdOriginaCh4Value+1,w
  1301  00E8  3077               	movlw	119
  1302  00E9  1903               	skipnz
  1303  00EA  0247               	subwf	?_getAdOriginaCh4Value,w
  1304  00EB  1803               	skipnc
  1305  00EC  28EF               	goto	l4310
  1306                           
  1307                           ;main.c: 397: ucChannel4Type = LESS_THAN_1911;
  1308  00ED  01D0               	clrf	main@ucChannel4Type
  1309  00EE  2916               	goto	l754
  1310  00EF                     l4310:	
  1311                           
  1312                           ;main.c: 398: else if(getAdOriginaCh4Value() < 2067)
  1313  00EF  118A  2446  118A   	fcall	_getAdOriginaCh4Value
  1314  00F2  3008               	movlw	8
  1315  00F3  0248               	subwf	?_getAdOriginaCh4Value+1,w
  1316  00F4  3013               	movlw	19
  1317  00F5  1903               	skipnz
  1318  00F6  0247               	subwf	?_getAdOriginaCh4Value,w
  1319  00F7  1803               	skipnc
  1320  00F8  28FC               	goto	l4314
  1321                           
  1322                           ;main.c: 399: ucChannel4Type = BETWEEN_1911_AND_2067;
  1323  00F9  01D0               	clrf	main@ucChannel4Type
  1324  00FA  0AD0               	incf	main@ucChannel4Type,f
  1325  00FB  2916               	goto	l754
  1326  00FC                     l4314:	
  1327                           
  1328                           ;main.c: 400: else if(getAdOriginaCh4Value() < 2204)
  1329  00FC  118A  2446  118A   	fcall	_getAdOriginaCh4Value
  1330  00FF  3008               	movlw	8
  1331  0100  0248               	subwf	?_getAdOriginaCh4Value+1,w
  1332  0101  309C               	movlw	156
  1333  0102  1903               	skipnz
  1334  0103  0247               	subwf	?_getAdOriginaCh4Value,w
  1335  0104  1803               	skipnc
  1336  0105  2908               	goto	l4318
  1337                           
  1338                           ;main.c: 401: ucChannel4Type = BETWEEN_2067_AND_2204;
  1339  0106  3002               	movlw	2
  1340  0107  2915               	goto	L5
  1341  0108                     l4318:	
  1342                           
  1343                           ;main.c: 402: else if(getAdOriginaCh4Value() < 2340)
  1344  0108  118A  2446  118A   	fcall	_getAdOriginaCh4Value
  1345  010B  3009               	movlw	9
  1346  010C  0248               	subwf	?_getAdOriginaCh4Value+1,w
  1347  010D  3024               	movlw	36
  1348  010E  1903               	skipnz
  1349  010F  0247               	subwf	?_getAdOriginaCh4Value,w
  1350  0110  1803               	skipnc
  1351  0111  2914               	goto	l4322
  1352                           
  1353                           ;main.c: 403: ucChannel4Type = BETWEEN_2204_AND_2340;
  1354  0112  3003               	movlw	3
  1355  0113  2915               	goto	L5
  1356  0114                     l4322:	
  1357                           
  1358                           ;main.c: 404: else
  1359                           ;main.c: 405: ucChannel4Type = MORE_THAN_2340;
  1360  0114  3004               	movlw	4
  1361  0115                     L5:	
  1362  0115  00D0               	movwf	main@ucChannel4Type
  1363  0116                     l754:	
  1364                           
  1365                           ;main.c: 407: ucADC4_Step = ADC4_STEP_SECOND;
  1366  0116  3002               	movlw	2
  1367  0117  2A62               	goto	L7
  1368  0118                     l769:	
  1369                           ;main.c: 422: {
  1370                           ;main.c: 423: case 0:
  1371                           
  1372                           ;main.c: 408: break;
  1373                           
  1374                           
  1375                           ;main.c: 424: {
  1376                           ;main.c: 425: PB0 = 1;
  1377  0118  1406               	bsf	6,0
  1378  0119                     l4324:	
  1379                           
  1380                           ;main.c: 426: ucLoaderStep++;
  1381  0119  0AD1               	incf	main@ucLoaderStep,f
  1382                           
  1383                           ;main.c: 427: break;
  1384  011A  2840               	goto	l4206
  1385  011B                     l4326:	
  1386                           
  1387                           ;main.c: 431: {
  1388                           ;main.c: 432: if(ucTimerDelay >= 5)
  1389  011B  3005               	movlw	5
  1390  011C  0259               	subwf	main@ucTimerDelay,w
  1391  011D  1C03               	skipc
  1392  011E  2922               	goto	l4334
  1393                           
  1394                           ;main.c: 433: {
  1395                           ;main.c: 434: PA0 = 1;
  1396  011F  1405               	bsf	5,0
  1397  0120                     l4330:	
  1398                           
  1399                           ;main.c: 435: ucTimerDelay = 0;
  1400  0120  01D9               	clrf	main@ucTimerDelay
  1401  0121  2919               	goto	l4324
  1402  0122                     l4334:	
  1403                           
  1404                           ;main.c: 438: else
  1405                           ;main.c: 439: ucTimerDelay++;
  1406  0122  0AD9               	incf	main@ucTimerDelay,f
  1407  0123  2840               	goto	l4206
  1408  0124                     l4336:	
  1409                           
  1410                           ;main.c: 444: {
  1411                           ;main.c: 445: if(ucTimerDelay >= 5)
  1412  0124  3005               	movlw	5
  1413  0125  0259               	subwf	main@ucTimerDelay,w
  1414  0126  1C03               	skipc
  1415  0127  2922               	goto	l4334
  1416                           
  1417                           ;main.c: 446: {
  1418                           ;main.c: 447: PA1= 1;
  1419  0128  1485               	bsf	5,1
  1420  0129  2920               	goto	l4330
  1421  012A                     l4346:	
  1422                           
  1423                           ;main.c: 458: {
  1424                           ;main.c: 459: if(ucTimerDelay >= 5)
  1425  012A  3005               	movlw	5
  1426  012B  0259               	subwf	main@ucTimerDelay,w
  1427  012C  1C03               	skipc
  1428  012D  2922               	goto	l4334
  1429                           
  1430                           ;main.c: 460: {
  1431                           ;main.c: 461: PA2= 1;
  1432  012E  1505               	bsf	5,2
  1433  012F  2920               	goto	l4330
  1434  0130                     l4356:	
  1435                           
  1436                           ;main.c: 471: {
  1437                           ;main.c: 472: if(ucTimerDelay >= 5)
  1438  0130  3005               	movlw	5
  1439  0131  0259               	subwf	main@ucTimerDelay,w
  1440  0132  1C03               	skipc
  1441  0133  2922               	goto	l4334
  1442                           
  1443                           ;main.c: 473: {
  1444                           ;main.c: 474: PA3 = 1;
  1445  0134  1585               	bsf	5,3
  1446  0135  2920               	goto	l4330
  1447  0136                     l4366:	
  1448                           
  1449                           ;main.c: 484: {
  1450                           ;main.c: 485: if(ucTimerDelay >= 5)
  1451  0136  3005               	movlw	5
  1452  0137  0259               	subwf	main@ucTimerDelay,w
  1453  0138  1C03               	skipc
  1454  0139  2922               	goto	l4334
  1455                           
  1456                           ;main.c: 486: {
  1457                           ;main.c: 487: PB0 = 0;
  1458  013A  1006               	bcf	6,0
  1459                           
  1460                           ;main.c: 488: PA0 = 0;
  1461  013B  1005               	bcf	5,0
  1462                           
  1463                           ;main.c: 489: PA1 = 0;
  1464  013C  1085               	bcf	5,1
  1465                           
  1466                           ;main.c: 490: PA2 = 0;
  1467  013D  1105               	bcf	5,2
  1468                           
  1469                           ;main.c: 491: PA3 = 0;
  1470  013E  1185               	bcf	5,3
  1471  013F  2920               	goto	l4330
  1472  0140                     l4376:	
  1473                           
  1474                           ;main.c: 501: {
  1475                           ;main.c: 502: if(ucTimerDelay >= 2)
  1476  0140  3002               	movlw	2
  1477  0141  0259               	subwf	main@ucTimerDelay,w
  1478  0142  1C03               	skipc
  1479  0143  2922               	goto	l4334
  1480                           
  1481                           ;main.c: 503: {
  1482                           ;main.c: 504: ucTimerDelay = 0;
  1483  0144  01D9               	clrf	main@ucTimerDelay
  1484                           
  1485                           ;main.c: 506: ucLoaderStep = 0;
  1486  0145  01D1               	clrf	main@ucLoaderStep
  1487  0146                     l4380:	
  1488                           
  1489                           ;main.c: 507: ucADC4_Step = ADC4_STEP_THIRD;
  1490  0146  3003               	movlw	3
  1491  0147  2A62               	goto	L7
  1492  0148                     l4386:	
  1493                           ;main.c: 508: }
  1494                           
  1495  0148  0851               	movf	main@ucLoaderStep,w
  1496                           
  1497                           ; Switch size 1, requested type "space"
  1498                           ; Number of cases is 7, Range of values is 0 to 6
  1499                           ; switch strategies available:
  1500                           ; Name         Instructions Cycles
  1501                           ; direct_byte           21     7 (fixed)
  1502                           ; simple_byte           22    12 (average)
  1503                           ; jumptable            260     6 (fixed)
  1504                           ; rangetable            11     6 (fixed)
  1505                           ; spacedrange           20     9 (fixed)
  1506                           ; locatedrange           7     3 (fixed)
  1507                           ;	Chosen strategy is direct_byte
  1508  0149  0084               	movwf	4
  1509  014A  3007               	movlw	7
  1510  014B  0204               	subwf	4,w
  1511  014C  1803               	skipnc
  1512  014D  2840               	goto	l4206
  1513  014E  3005               	movlw	high S4970
  1514  014F  008A               	movwf	10
  1515  0150  1003               	clrc
  1516  0151  0D04               	rlf	4,w
  1517  0152  3E9B               	addlw	low S4970
  1518  0153  0082               	movwf	2
  1519  0154                     l797:	
  1520                           ;main.c: 527: {
  1521                           ;main.c: 528: case 0:
  1522                           
  1523                           
  1524                           ;main.c: 529: {
  1525                           ;main.c: 530: PB0 = 1;
  1526  0154  1406               	bsf	6,0
  1527  0155                     l4388:	
  1528                           
  1529                           ;main.c: 531: ucLoaderStep1++;
  1530  0155  0AD2               	incf	main@ucLoaderStep1,f
  1531                           
  1532                           ;main.c: 532: break;
  1533  0156  2840               	goto	l4206
  1534  0157                     l4390:	
  1535                           
  1536                           ;main.c: 536: {
  1537                           ;main.c: 537: if(ucTimerDelay1 >= 5)
  1538  0157  3005               	movlw	5
  1539  0158  025A               	subwf	main@ucTimerDelay1,w
  1540  0159  1C03               	skipc
  1541  015A  295E               	goto	l4398
  1542                           
  1543                           ;main.c: 538: {
  1544                           ;main.c: 539: PA0 = 1;
  1545  015B  1405               	bsf	5,0
  1546  015C                     l4394:	
  1547                           
  1548                           ;main.c: 540: ucTimerDelay1 = 0;
  1549  015C  01DA               	clrf	main@ucTimerDelay1
  1550  015D  2955               	goto	l4388
  1551  015E                     l4398:	
  1552                           
  1553                           ;main.c: 543: else
  1554                           ;main.c: 544: ucTimerDelay1++;
  1555  015E  0ADA               	incf	main@ucTimerDelay1,f
  1556  015F  2840               	goto	l4206
  1557  0160                     l4400:	
  1558                           
  1559                           ;main.c: 549: {
  1560                           ;main.c: 550: if(ucTimerDelay1 >= 5)
  1561  0160  3005               	movlw	5
  1562  0161  025A               	subwf	main@ucTimerDelay1,w
  1563  0162  1C03               	skipc
  1564  0163  295E               	goto	l4398
  1565                           
  1566                           ;main.c: 551: {
  1567                           ;main.c: 552: PA1= 1;
  1568  0164  1485               	bsf	5,1
  1569  0165  295C               	goto	l4394
  1570  0166                     l4410:	
  1571                           
  1572                           ;main.c: 562: {
  1573                           ;main.c: 563: if(ucTimerDelay1 >= 5)
  1574  0166  3005               	movlw	5
  1575  0167  025A               	subwf	main@ucTimerDelay1,w
  1576  0168  1C03               	skipc
  1577  0169  295E               	goto	l4398
  1578                           
  1579                           ;main.c: 564: {
  1580                           ;main.c: 565: PA2 = 1;
  1581  016A  1505               	bsf	5,2
  1582  016B  295C               	goto	l4394
  1583  016C                     l4420:	
  1584                           
  1585                           ;main.c: 575: {
  1586                           ;main.c: 576: if(ucTimerDelay1 >= 5)
  1587  016C  3005               	movlw	5
  1588  016D  025A               	subwf	main@ucTimerDelay1,w
  1589  016E  1C03               	skipc
  1590  016F  295E               	goto	l4398
  1591                           
  1592                           ;main.c: 577: {
  1593                           ;main.c: 578: PA3 = 1;
  1594  0170  1585               	bsf	5,3
  1595  0171  295C               	goto	l4394
  1596  0172                     l4430:	
  1597                           
  1598                           ;main.c: 588: {
  1599                           ;main.c: 589: if(ucTimerDelay1 >= 5)
  1600  0172  3005               	movlw	5
  1601  0173  025A               	subwf	main@ucTimerDelay1,w
  1602  0174  1C03               	skipc
  1603  0175  295E               	goto	l4398
  1604                           
  1605                           ;main.c: 590: {
  1606                           ;main.c: 591: PA0 = 0;
  1607  0176  1005               	bcf	5,0
  1608                           
  1609                           ;main.c: 592: PA1 = 0;
  1610  0177  1085               	bcf	5,1
  1611                           
  1612                           ;main.c: 593: PA2 = 0;
  1613  0178  1105               	bcf	5,2
  1614                           
  1615                           ;main.c: 594: PA3 = 0;
  1616  0179  1185               	bcf	5,3
  1617  017A  295C               	goto	l4394
  1618  017B                     l4440:	
  1619                           
  1620                           ;main.c: 604: {
  1621                           ;main.c: 605: if(ucTimerDelay1 >= 2)
  1622  017B  3002               	movlw	2
  1623  017C  025A               	subwf	main@ucTimerDelay1,w
  1624  017D  1C03               	skipc
  1625  017E  295E               	goto	l4398
  1626                           
  1627                           ;main.c: 606: {
  1628                           ;main.c: 607: ucTimerDelay1 = 0;
  1629  017F  01DA               	clrf	main@ucTimerDelay1
  1630                           
  1631                           ;main.c: 609: ucLoaderStep1 = 0;
  1632  0180  01D2               	clrf	main@ucLoaderStep1
  1633  0181  2946               	goto	l4380
  1634  0182                     l4450:	
  1635  0182  0852               	movf	main@ucLoaderStep1,w
  1636                           
  1637                           ; Switch size 1, requested type "space"
  1638                           ; Number of cases is 7, Range of values is 0 to 6
  1639                           ; switch strategies available:
  1640                           ; Name         Instructions Cycles
  1641                           ; direct_byte           21     7 (fixed)
  1642                           ; simple_byte           22    12 (average)
  1643                           ; jumptable            260     6 (fixed)
  1644                           ; rangetable            11     6 (fixed)
  1645                           ; spacedrange           20     9 (fixed)
  1646                           ; locatedrange           7     3 (fixed)
  1647                           ;	Chosen strategy is direct_byte
  1648  0183  0084               	movwf	4
  1649  0184  3007               	movlw	7
  1650  0185  0204               	subwf	4,w
  1651  0186  1803               	skipnc
  1652  0187  2840               	goto	l4206
  1653  0188  3005               	movlw	high S4972
  1654  0189  008A               	movwf	10
  1655  018A  1003               	clrc
  1656  018B  0D04               	rlf	4,w
  1657  018C  3EA9               	addlw	low S4972
  1658  018D  0082               	movwf	2
  1659  018E                     l824:	
  1660                           ;main.c: 631: {
  1661                           ;main.c: 632: case 0:
  1662                           
  1663                           
  1664                           ;main.c: 633: {
  1665                           ;main.c: 634: PB0 = 1;
  1666  018E  1406               	bsf	6,0
  1667                           
  1668                           ;main.c: 635: PA0 = 1;
  1669  018F  1405               	bsf	5,0
  1670  0190                     l4452:	
  1671                           
  1672                           ;main.c: 636: ucLoaderStep2++;
  1673  0190  0AD3               	incf	main@ucLoaderStep2,f
  1674                           
  1675                           ;main.c: 637: break;
  1676  0191  2840               	goto	l4206
  1677  0192                     l4454:	
  1678                           
  1679                           ;main.c: 641: {
  1680                           ;main.c: 642: if(ucTimerDelay2 >= 5)
  1681  0192  3005               	movlw	5
  1682  0193  025B               	subwf	main@ucTimerDelay2,w
  1683  0194  1C03               	skipc
  1684  0195  2999               	goto	l4462
  1685                           
  1686                           ;main.c: 643: {
  1687                           ;main.c: 644: PA1 = 1;
  1688  0196  1485               	bsf	5,1
  1689  0197                     l4458:	
  1690                           
  1691                           ;main.c: 645: ucTimerDelay2 = 0;
  1692  0197  01DB               	clrf	main@ucTimerDelay2
  1693  0198  2990               	goto	l4452
  1694  0199                     l4462:	
  1695                           
  1696                           ;main.c: 648: else
  1697                           ;main.c: 649: ucTimerDelay2++;
  1698  0199  0ADB               	incf	main@ucTimerDelay2,f
  1699  019A  2840               	goto	l4206
  1700  019B                     l4464:	
  1701                           
  1702                           ;main.c: 654: {
  1703                           ;main.c: 655: if(ucTimerDelay2 >= 5)
  1704  019B  3005               	movlw	5
  1705  019C  025B               	subwf	main@ucTimerDelay2,w
  1706  019D  1C03               	skipc
  1707  019E  2999               	goto	l4462
  1708                           
  1709                           ;main.c: 656: {
  1710                           ;main.c: 657: PA2 = 1;
  1711  019F  1505               	bsf	5,2
  1712  01A0  2997               	goto	l4458
  1713  01A1                     l4474:	
  1714                           
  1715                           ;main.c: 667: {
  1716                           ;main.c: 668: if(ucTimerDelay2 >= 5)
  1717  01A1  3005               	movlw	5
  1718  01A2  025B               	subwf	main@ucTimerDelay2,w
  1719  01A3  1C03               	skipc
  1720  01A4  2999               	goto	l4462
  1721                           
  1722                           ;main.c: 669: {
  1723                           ;main.c: 670: PA3 = 1;
  1724  01A5  1585               	bsf	5,3
  1725  01A6  2997               	goto	l4458
  1726  01A7                     l4484:	
  1727                           
  1728                           ;main.c: 680: {
  1729                           ;main.c: 681: if(ucTimerDelay2 >= 5)
  1730  01A7  3005               	movlw	5
  1731  01A8  025B               	subwf	main@ucTimerDelay2,w
  1732  01A9  1C03               	skipc
  1733  01AA  2999               	goto	l4462
  1734                           
  1735                           ;main.c: 682: {
  1736                           ;main.c: 684: PA1 = 0;
  1737  01AB  1085               	bcf	5,1
  1738                           
  1739                           ;main.c: 685: PA2 = 0;
  1740  01AC  1105               	bcf	5,2
  1741                           
  1742                           ;main.c: 686: PA3 = 0;
  1743  01AD  1185               	bcf	5,3
  1744  01AE  2997               	goto	l4458
  1745  01AF                     l4494:	
  1746                           
  1747                           ;main.c: 696: {
  1748                           ;main.c: 697: if(ucTimerDelay2 >= 2)
  1749  01AF  3002               	movlw	2
  1750  01B0  025B               	subwf	main@ucTimerDelay2,w
  1751  01B1  1C03               	skipc
  1752  01B2  2999               	goto	l4462
  1753                           
  1754                           ;main.c: 698: {
  1755                           ;main.c: 699: ucTimerDelay2 = 0;
  1756  01B3  01DB               	clrf	main@ucTimerDelay2
  1757                           
  1758                           ;main.c: 701: ucLoaderStep2 = 0;
  1759  01B4  01D3               	clrf	main@ucLoaderStep2
  1760  01B5  2946               	goto	l4380
  1761  01B6                     l4504:	
  1762  01B6  0853               	movf	main@ucLoaderStep2,w
  1763                           
  1764                           ; Switch size 1, requested type "space"
  1765                           ; Number of cases is 6, Range of values is 0 to 5
  1766                           ; switch strategies available:
  1767                           ; Name         Instructions Cycles
  1768                           ; direct_byte           19     7 (fixed)
  1769                           ; simple_byte           19    10 (average)
  1770                           ; jumptable            260     6 (fixed)
  1771                           ; rangetable            10     6 (fixed)
  1772                           ; spacedrange           18     9 (fixed)
  1773                           ; locatedrange           6     3 (fixed)
  1774                           ;	Chosen strategy is direct_byte
  1775  01B7  0084               	movwf	4
  1776  01B8  3006               	movlw	6
  1777  01B9  0204               	subwf	4,w
  1778  01BA  1803               	skipnc
  1779  01BB  2840               	goto	l4206
  1780  01BC  3005               	movlw	high S4974
  1781  01BD  008A               	movwf	10
  1782  01BE  1003               	clrc
  1783  01BF  0D04               	rlf	4,w
  1784  01C0  3ED3               	addlw	low S4974
  1785  01C1  0082               	movwf	2
  1786  01C2                     l848:	
  1787                           ;main.c: 723: {
  1788                           ;main.c: 724: case 0:
  1789                           
  1790                           
  1791                           ;main.c: 725: {
  1792                           ;main.c: 726: PB0 = 1;
  1793  01C2  1406               	bsf	6,0
  1794                           
  1795                           ;main.c: 727: PA0 = 1;
  1796  01C3  1405               	bsf	5,0
  1797                           
  1798                           ;main.c: 728: PA1 = 1;
  1799  01C4  1485               	bsf	5,1
  1800  01C5                     l4506:	
  1801                           
  1802                           ;main.c: 729: ucLoaderStep3++;
  1803  01C5  0AD4               	incf	main@ucLoaderStep3,f
  1804                           
  1805                           ;main.c: 730: break;
  1806  01C6  2840               	goto	l4206
  1807  01C7                     l4508:	
  1808                           
  1809                           ;main.c: 734: {
  1810                           ;main.c: 735: if(ucTimerDelay3 >= 5)
  1811  01C7  3005               	movlw	5
  1812  01C8  025C               	subwf	main@ucTimerDelay3,w
  1813  01C9  1C03               	skipc
  1814  01CA  29CE               	goto	l4516
  1815                           
  1816                           ;main.c: 736: {
  1817                           ;main.c: 737: PA2 = 1;
  1818  01CB  1505               	bsf	5,2
  1819  01CC                     l4512:	
  1820                           
  1821                           ;main.c: 738: ucTimerDelay3 = 0;
  1822  01CC  01DC               	clrf	main@ucTimerDelay3
  1823  01CD  29C5               	goto	l4506
  1824  01CE                     l4516:	
  1825                           
  1826                           ;main.c: 741: else
  1827                           ;main.c: 742: ucTimerDelay3++;
  1828  01CE  0ADC               	incf	main@ucTimerDelay3,f
  1829  01CF  2840               	goto	l4206
  1830  01D0                     l4518:	
  1831                           
  1832                           ;main.c: 747: {
  1833                           ;main.c: 748: if(ucTimerDelay3 >= 5)
  1834  01D0  3005               	movlw	5
  1835  01D1  025C               	subwf	main@ucTimerDelay3,w
  1836  01D2  1C03               	skipc
  1837  01D3  29CE               	goto	l4516
  1838                           
  1839                           ;main.c: 749: {
  1840                           ;main.c: 750: PA3 = 1;
  1841  01D4  1585               	bsf	5,3
  1842  01D5  29CC               	goto	l4512
  1843  01D6                     l4528:	
  1844                           
  1845                           ;main.c: 761: {
  1846                           ;main.c: 762: if(ucTimerDelay3 >= 5)
  1847  01D6  3005               	movlw	5
  1848  01D7  025C               	subwf	main@ucTimerDelay3,w
  1849  01D8  1C03               	skipc
  1850  01D9  29CE               	goto	l4516
  1851                           
  1852                           ;main.c: 763: {
  1853                           ;main.c: 765: PA2 = 0;
  1854  01DA  1105               	bcf	5,2
  1855                           
  1856                           ;main.c: 766: PA3 = 0;
  1857  01DB  1185               	bcf	5,3
  1858  01DC  29CC               	goto	l4512
  1859  01DD                     l4538:	
  1860                           
  1861                           ;main.c: 776: {
  1862                           ;main.c: 777: if(ucTimerDelay3 >= 2)
  1863  01DD  3002               	movlw	2
  1864  01DE  025C               	subwf	main@ucTimerDelay3,w
  1865  01DF  1C03               	skipc
  1866  01E0  29CE               	goto	l4516
  1867                           
  1868                           ;main.c: 778: {
  1869                           ;main.c: 779: ucTimerDelay3 = 0;
  1870  01E1  01DC               	clrf	main@ucTimerDelay3
  1871                           
  1872                           ;main.c: 781: ucLoaderStep3 = 0;
  1873  01E2  01D4               	clrf	main@ucLoaderStep3
  1874  01E3  2946               	goto	l4380
  1875  01E4                     l4548:	
  1876  01E4  0854               	movf	main@ucLoaderStep3,w
  1877                           
  1878                           ; Switch size 1, requested type "space"
  1879                           ; Number of cases is 5, Range of values is 0 to 4
  1880                           ; switch strategies available:
  1881                           ; Name         Instructions Cycles
  1882                           ; simple_byte           16     9 (average)
  1883                           ; direct_byte           17     7 (fixed)
  1884                           ; jumptable            260     6 (fixed)
  1885                           ; rangetable             9     6 (fixed)
  1886                           ; spacedrange           16     9 (fixed)
  1887                           ; locatedrange           5     3 (fixed)
  1888                           ;	Chosen strategy is simple_byte
  1889  01E5  3A00               	xorlw	0	; case 0
  1890  01E6  1903               	skipnz
  1891  01E7  29C2               	goto	l848
  1892  01E8  3A01               	xorlw	1	; case 1
  1893  01E9  1903               	skipnz
  1894  01EA  29C7               	goto	l4508
  1895  01EB  3A03               	xorlw	3	; case 2
  1896  01EC  1903               	skipnz
  1897  01ED  29D0               	goto	l4518
  1898  01EE  3A01               	xorlw	1	; case 3
  1899  01EF  1903               	skipnz
  1900  01F0  29D6               	goto	l4528
  1901  01F1  3A07               	xorlw	7	; case 4
  1902  01F2  1903               	skipnz
  1903  01F3  29DD               	goto	l4538
  1904  01F4  286C               	goto	l710
  1905  01F5                     l869:	
  1906                           ;main.c: 803: {
  1907                           ;main.c: 804: case 0:
  1908                           
  1909                           
  1910                           ;main.c: 805: {
  1911                           ;main.c: 806: PB0 = 1;
  1912  01F5  1406               	bsf	6,0
  1913                           
  1914                           ;main.c: 807: PA0 = 1;
  1915  01F6  1405               	bsf	5,0
  1916                           
  1917                           ;main.c: 808: PA1 = 1;
  1918  01F7  1485               	bsf	5,1
  1919                           
  1920                           ;main.c: 809: PA2 = 1;
  1921  01F8  1505               	bsf	5,2
  1922  01F9                     l4550:	
  1923                           
  1924                           ;main.c: 810: ucLoaderStep4++;
  1925  01F9  0AD5               	incf	main@ucLoaderStep4,f
  1926                           
  1927                           ;main.c: 811: break;
  1928  01FA  2840               	goto	l4206
  1929  01FB                     l4552:	
  1930                           
  1931                           ;main.c: 815: {
  1932                           ;main.c: 816: if(ucTimerDelay4 >= 5)
  1933  01FB  3005               	movlw	5
  1934  01FC  025D               	subwf	main@ucTimerDelay4,w
  1935  01FD  1C03               	skipc
  1936  01FE  2A02               	goto	l4560
  1937                           
  1938                           ;main.c: 817: {
  1939                           ;main.c: 818: PA3 = 1;
  1940  01FF  1585               	bsf	5,3
  1941  0200                     l4556:	
  1942                           
  1943                           ;main.c: 819: ucTimerDelay4 = 0;
  1944  0200  01DD               	clrf	main@ucTimerDelay4
  1945  0201  29F9               	goto	l4550
  1946  0202                     l4560:	
  1947                           
  1948                           ;main.c: 822: else
  1949                           ;main.c: 823: ucTimerDelay4++;
  1950  0202  0ADD               	incf	main@ucTimerDelay4,f
  1951  0203  2840               	goto	l4206
  1952  0204                     l4562:	
  1953                           
  1954                           ;main.c: 828: {
  1955                           ;main.c: 829: if(ucTimerDelay4 >= 5)
  1956  0204  3005               	movlw	5
  1957  0205  025D               	subwf	main@ucTimerDelay4,w
  1958  0206  1C03               	skipc
  1959  0207  2A02               	goto	l4560
  1960                           
  1961                           ;main.c: 830: {
  1962                           ;main.c: 831: PA3 = 0;
  1963  0208  1185               	bcf	5,3
  1964  0209  2A00               	goto	l4556
  1965  020A                     l4572:	
  1966                           
  1967                           ;main.c: 841: {
  1968                           ;main.c: 842: if(ucTimerDelay4 >= 2)
  1969  020A  3002               	movlw	2
  1970  020B  025D               	subwf	main@ucTimerDelay4,w
  1971  020C  1C03               	skipc
  1972  020D  2A02               	goto	l4560
  1973                           
  1974                           ;main.c: 843: {
  1975                           ;main.c: 844: ucTimerDelay4 = 0;
  1976  020E  01DD               	clrf	main@ucTimerDelay4
  1977                           
  1978                           ;main.c: 846: ucLoaderStep4 = 0;
  1979  020F  01D5               	clrf	main@ucLoaderStep4
  1980  0210  2946               	goto	l4380
  1981  0211                     l4582:	
  1982  0211  0855               	movf	main@ucLoaderStep4,w
  1983                           
  1984                           ; Switch size 1, requested type "space"
  1985                           ; Number of cases is 4, Range of values is 0 to 3
  1986                           ; switch strategies available:
  1987                           ; Name         Instructions Cycles
  1988                           ; simple_byte           13     7 (average)
  1989                           ; direct_byte           15     7 (fixed)
  1990                           ; jumptable            260     6 (fixed)
  1991                           ; rangetable             8     6 (fixed)
  1992                           ; spacedrange           14     9 (fixed)
  1993                           ; locatedrange           4     3 (fixed)
  1994                           ;	Chosen strategy is simple_byte
  1995  0212  3A00               	xorlw	0	; case 0
  1996  0213  1903               	skipnz
  1997  0214  29F5               	goto	l869
  1998  0215  3A01               	xorlw	1	; case 1
  1999  0216  1903               	skipnz
  2000  0217  29FB               	goto	l4552
  2001  0218  3A03               	xorlw	3	; case 2
  2002  0219  1903               	skipnz
  2003  021A  2A04               	goto	l4562
  2004  021B  3A01               	xorlw	1	; case 3
  2005  021C  1903               	skipnz
  2006  021D  2A0A               	goto	l4572
  2007  021E  286C               	goto	l710
  2008  021F                     l4586:	
  2009  021F  0850               	movf	main@ucChannel4Type,w
  2010                           
  2011                           ; Switch size 1, requested type "space"
  2012                           ; Number of cases is 5, Range of values is 0 to 4
  2013                           ; switch strategies available:
  2014                           ; Name         Instructions Cycles
  2015                           ; simple_byte           16     9 (average)
  2016                           ; direct_byte           17     7 (fixed)
  2017                           ; jumptable            260     6 (fixed)
  2018                           ; rangetable             9     6 (fixed)
  2019                           ; spacedrange           16     9 (fixed)
  2020                           ; locatedrange           5     3 (fixed)
  2021                           ;	Chosen strategy is simple_byte
  2022  0220  3A00               	xorlw	0	; case 0
  2023  0221  1903               	skipnz
  2024  0222  2948               	goto	l4386
  2025  0223  3A01               	xorlw	1	; case 1
  2026  0224  1903               	skipnz
  2027  0225  2982               	goto	l4450
  2028  0226  3A03               	xorlw	3	; case 2
  2029  0227  1903               	skipnz
  2030  0228  29B6               	goto	l4504
  2031  0229  3A01               	xorlw	1	; case 3
  2032  022A  1903               	skipnz
  2033  022B  29E4               	goto	l4548
  2034  022C  3A07               	xorlw	7	; case 4
  2035  022D  1903               	skipnz
  2036  022E  2A11               	goto	l4582
  2037  022F  286C               	goto	l710
  2038  0230                     l4588:	
  2039                           
  2040                           ;main.c: 870: {
  2041                           ;main.c: 871: static unsigned char ucTimerDelayP5s = 0;
  2042                           ;main.c: 873: static unsigned char ucTimerPA6DelayP1s = 0;
  2043                           ;main.c: 875: static unsigned char ucTimerPB6DelayP1s = 0;
  2044                           ;main.c: 877: if(isFinishedTwentySecondsTimer())
  2045  0230  118A  2612  118A   	fcall	_isFinishedTwentySecondsTimer
  2046  0233  3A00               	xorlw	0
  2047  0234  1903               	skipnz
  2048  0235  28DF               	goto	l4304
  2049                           
  2050                           ;main.c: 878: {
  2051                           ;main.c: 879: if(ucTimerPA6DelayP1s < 1)
  2052  0236  1283               	bcf	3,5	;RP0=0, select bank0
  2053  0237  08E4               	movf	main@ucTimerPA6DelayP1s,f
  2054  0238  1D03               	skipz
  2055  0239  2A3D               	goto	l4596
  2056                           
  2057                           ;main.c: 880: {
  2058                           ;main.c: 881: PA6 = 0;
  2059  023A  1305               	bcf	5,6
  2060                           
  2061                           ;main.c: 882: ucTimerPA6DelayP1s++;
  2062  023B  0AE4               	incf	main@ucTimerPA6DelayP1s,f
  2063                           
  2064                           ;main.c: 883: }
  2065  023C  2840               	goto	l4206
  2066  023D                     l4596:	
  2067                           
  2068                           ;main.c: 884: else
  2069                           ;main.c: 885: {
  2070                           ;main.c: 886: if(ucTimerPB6DelayP1s < 1)
  2071  023D  08E5               	movf	main@ucTimerPB6DelayP1s,f
  2072  023E  1D03               	skipz
  2073  023F  2A48               	goto	l4602
  2074                           
  2075                           ;main.c: 887: {
  2076                           ;main.c: 888: PBOD6 =0;
  2077  0240  1683               	bsf	3,5	;RP0=1, select bank3
  2078  0241  1703               	bsf	3,6	;RP1=1, select bank3
  2079  0242  1308               	bcf	8,6
  2080                           
  2081                           ;main.c: 889: PB6 = 1;
  2082  0243  1283               	bcf	3,5	;RP0=0, select bank0
  2083  0244  1303               	bcf	3,6	;RP1=0, select bank0
  2084  0245  1706               	bsf	6,6
  2085                           
  2086                           ;main.c: 890: ucTimerPB6DelayP1s++;
  2087  0246  0AE5               	incf	main@ucTimerPB6DelayP1s,f
  2088                           
  2089                           ;main.c: 891: }
  2090  0247  2840               	goto	l4206
  2091  0248                     l4602:	
  2092                           
  2093                           ;main.c: 892: else
  2094                           ;main.c: 893: {
  2095                           ;main.c: 894: if(ucTimerDelayP5s < 5)
  2096  0248  3005               	movlw	5
  2097  0249  025E               	subwf	main@ucTimerDelayP5s,w
  2098  024A  1803               	skipnc
  2099  024B  2A4E               	goto	l4606
  2100                           
  2101                           ;main.c: 895: {
  2102                           ;main.c: 896: ucTimerDelayP5s++;
  2103  024C  0ADE               	incf	main@ucTimerDelayP5s,f
  2104                           
  2105                           ;main.c: 897: }
  2106  024D  2840               	goto	l4206
  2107  024E                     l4606:	
  2108                           
  2109                           ;main.c: 898: else
  2110                           ;main.c: 899: {
  2111                           ;main.c: 901: ucTimerDelayP5s = 0;
  2112  024E  01DE               	clrf	main@ucTimerDelayP5s
  2113                           
  2114                           ;main.c: 903: ucTimerPB6DelayP1s = 0;
  2115  024F  01E5               	clrf	main@ucTimerPB6DelayP1s
  2116                           
  2117                           ;main.c: 904: ucTimerPA6DelayP1s = 0;
  2118  0250  01E4               	clrf	main@ucTimerPA6DelayP1s
  2119                           
  2120                           ;main.c: 906: if((getAdOriginalCh14Value() > 2800))
  2121  0251  118A  2454  118A   	fcall	_getAdOriginalCh14Value
  2122  0254  300A               	movlw	10
  2123  0255  0248               	subwf	?_getAdOriginalCh14Value+1,w
  2124  0256  30F1               	movlw	241
  2125  0257  1903               	skipnz
  2126  0258  0247               	subwf	?_getAdOriginalCh14Value,w
  2127  0259  1C03               	skipc
  2128  025A  2A5D               	goto	l4612
  2129                           
  2130                           ;main.c: 907: DACR0=0x0F;
  2131  025B  300F               	movlw	15
  2132  025C  2A5E               	goto	L8
  2133  025D                     l4612:	
  2134                           
  2135                           ;main.c: 908: else
  2136                           ;main.c: 909: DACR0=0x07;
  2137  025D  3007               	movlw	7
  2138  025E                     L8:	
  2139  025E  1683               	bsf	3,5	;RP0=1, select bank1
  2140  025F  0088               	movwf	8	;volatile
  2141                           
  2142                           ;main.c: 911: ucADC4_Step = ADC4_STEP_FOURTH;
  2143  0260  3004               	movlw	4
  2144  0261  1283               	bcf	3,5	;RP0=0, select bank0
  2145  0262                     L7:	
  2146  0262  00CF               	movwf	main@ucADC4_Step
  2147  0263  2840               	goto	l4206
  2148  0264                     l4614:	
  2149                           
  2150                           ;main.c: 923: {
  2151                           ;main.c: 924: static unsigned char ucTimer1s = 0;
  2152                           ;main.c: 926: static unsigned char ucTimerSeond1s = 0;
  2153                           ;main.c: 928: if(ucTimerSeond1s < 5)
  2154  0264  3005               	movlw	5
  2155  0265  0268               	subwf	main@ucTimerSeond1s,w
  2156  0266  1803               	skipnc
  2157  0267  2A6A               	goto	l4618
  2158                           
  2159                           ;main.c: 929: {
  2160                           ;main.c: 930: ucTimerSeond1s++;
  2161  0268  0AE8               	incf	main@ucTimerSeond1s,f
  2162                           
  2163                           ;main.c: 931: }
  2164  0269  2840               	goto	l4206
  2165  026A                     l4618:	
  2166  026A  3005               	movlw	5
  2167                           
  2168                           ;main.c: 932: else
  2169                           ;main.c: 933: {
  2170                           ;main.c: 934: ucTimerSeond1s = 0;
  2171  026B  01E8               	clrf	main@ucTimerSeond1s
  2172                           
  2173                           ;main.c: 936: if(ucTimer1s < 5)
  2174  026C  0256               	subwf	main@ucTimer1s,w
  2175  026D  1803               	skipnc
  2176  026E  2A75               	goto	l4628
  2177                           
  2178                           ;main.c: 937: {
  2179                           ;main.c: 938: ucTimer1s++;
  2180  026F  0AD6               	incf	main@ucTimer1s,f
  2181                           
  2182                           ;main.c: 939: PB6 = 1;
  2183  0270  1706               	bsf	6,6
  2184                           
  2185                           ;main.c: 940: PBOD6 = 1;
  2186  0271  1683               	bsf	3,5	;RP0=1, select bank3
  2187  0272  1703               	bsf	3,6	;RP1=1, select bank3
  2188  0273  1708               	bsf	8,6
  2189                           
  2190                           ;main.c: 941: }
  2191  0274  2840               	goto	l4206
  2192  0275                     l4628:	
  2193                           
  2194                           ;main.c: 942: else
  2195                           ;main.c: 943: {
  2196                           ;main.c: 944: ucTimer1s = 0;
  2197  0275  01D6               	clrf	main@ucTimer1s
  2198                           
  2199                           ;main.c: 946: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  2200  0276  01CE               	clrf	main@enumMainLoopStep
  2201  0277  0ACE               	incf	main@enumMainLoopStep,f
  2202                           
  2203                           ;main.c: 947: ucADC4_Step = ADC4_STEP_INIT;
  2204  0278  01CF               	clrf	main@ucADC4_Step
  2205  0279  2840               	goto	l4206
  2206  027A                     l4634:	
  2207  027A  1283               	bcf	3,5	;RP0=0, select bank0
  2208  027B  084F               	movf	main@ucADC4_Step,w
  2209                           
  2210                           ; Switch size 1, requested type "space"
  2211                           ; Number of cases is 5, Range of values is 0 to 4
  2212                           ; switch strategies available:
  2213                           ; Name         Instructions Cycles
  2214                           ; simple_byte           16     9 (average)
  2215                           ; direct_byte           17     7 (fixed)
  2216                           ; jumptable            260     6 (fixed)
  2217                           ; rangetable             9     6 (fixed)
  2218                           ; spacedrange           16     9 (fixed)
  2219                           ; locatedrange           5     3 (fixed)
  2220                           ;	Chosen strategy is simple_byte
  2221  027C  3A00               	xorlw	0	; case 0
  2222  027D  1903               	skipnz
  2223  027E  28DC               	goto	l4302
  2224  027F  3A01               	xorlw	1	; case 1
  2225  0280  1903               	skipnz
  2226  0281  28E3               	goto	l4306
  2227  0282  3A03               	xorlw	3	; case 2
  2228  0283  1903               	skipnz
  2229  0284  2A1F               	goto	l4586
  2230  0285  3A01               	xorlw	1	; case 3
  2231  0286  1903               	skipnz
  2232  0287  2A30               	goto	l4588
  2233  0288  3A07               	xorlw	7	; case 4
  2234  0289  1903               	skipnz
  2235  028A  2A64               	goto	l4614
  2236  028B  286C               	goto	l710
  2237  028C                     l913:	
  2238                           ;main.c: 974: {
  2239                           ;main.c: 975: case HOUR_3_BRANCH_STEP_FIRST:
  2240                           
  2241                           
  2242                           ;main.c: 976: {
  2243                           ;main.c: 977: PA7 = 1;
  2244  028C  1785               	bsf	5,7
  2245                           
  2246                           ;main.c: 978: PAOD7 = 1;
  2247  028D  1683               	bsf	3,5	;RP0=1, select bank3
  2248  028E  303C               	movlw	60
  2249  028F  1703               	bsf	3,6	;RP1=1, select bank3
  2250  0290  1787               	bsf	7,7
  2251                           
  2252                           ;main.c: 979: startThreeHoursTimer(60);
  2253  0291  1283               	bcf	3,5	;RP0=0, select bank0
  2254  0292  1303               	bcf	3,6	;RP1=0, select bank0
  2255  0293  00A0               	movwf	?_startThreeHoursTimer
  2256  0294  01A1               	clrf	?_startThreeHoursTimer+1
  2257  0295  118A  25B7  118A   	fcall	_startThreeHoursTimer
  2258                           
  2259                           ;main.c: 981: PB0 = 1;
  2260  0298  1283               	bcf	3,5	;RP0=0, select bank0
  2261  0299  1406               	bsf	6,0
  2262                           
  2263                           ;main.c: 982: PA0 = 1;
  2264  029A  1405               	bsf	5,0
  2265                           
  2266                           ;main.c: 983: PA1 = 1;
  2267  029B  1485               	bsf	5,1
  2268                           
  2269                           ;main.c: 984: PA2 = 1;
  2270  029C  1505               	bsf	5,2
  2271                           
  2272                           ;main.c: 985: PA3 = 1;
  2273  029D  1585               	bsf	5,3
  2274                           
  2275                           ;main.c: 987: enumBranchStep = HOUR_3_BRANCH_STEP_SECOND;
  2276  029E  01CC               	clrf	main@enumBranchStep
  2277  029F  0ACC               	incf	main@enumBranchStep,f
  2278                           
  2279                           ;main.c: 988: break;
  2280  02A0  2840               	goto	l4206
  2281  02A1                     l4650:	
  2282                           
  2283                           ;main.c: 992: {
  2284                           ;main.c: 993: static unsigned char ucTimer20s = 0;
  2285                           ;main.c: 995: if(ucTimer20s < 200)
  2286  02A1  30C8               	movlw	200
  2287  02A2  0257               	subwf	main@ucTimer20s,w
  2288  02A3  1803               	skipnc
  2289  02A4  2AA7               	goto	l4654
  2290                           
  2291                           ;main.c: 996: {
  2292                           ;main.c: 997: ucTimer20s++;
  2293  02A5  0AD7               	incf	main@ucTimer20s,f
  2294                           
  2295                           ;main.c: 999: }
  2296  02A6  2840               	goto	l4206
  2297  02A7                     l4654:	
  2298  02A7  3002               	movlw	2
  2299                           
  2300                           ;main.c: 1000: else
  2301                           ;main.c: 1001: {
  2302                           ;main.c: 1003: ucTimer20s = 0;
  2303  02A8  01D7               	clrf	main@ucTimer20s
  2304                           
  2305                           ;main.c: 1005: enumBranchStep = HOUR_3_BRANCH_STEP_THIRD;
  2306  02A9  00CC               	movwf	main@enumBranchStep
  2307                           
  2308                           ;main.c: 1007: PA6 = 0;
  2309  02AA  1305               	bcf	5,6
  2310  02AB  2840               	goto	l4206
  2311  02AC                     l4660:	
  2312                           
  2313                           ;main.c: 1013: {
  2314                           ;main.c: 1014: if(isFinishedThreeHoursTimer())
  2315  02AC  118A  260C  118A   	fcall	_isFinishedThreeHoursTimer
  2316  02AF  3A00               	xorlw	0
  2317  02B0  1903               	skipnz
  2318  02B1  2AB5               	goto	l4666
  2319                           
  2320                           ;main.c: 1015: {
  2321                           ;main.c: 1016: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2322  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  2323  02B3  01CC               	clrf	main@enumBranchStep
  2324  02B4  28D9               	goto	l4300
  2325  02B5                     l4666:	
  2326                           
  2327                           ;main.c: 1019: else
  2328                           ;main.c: 1020: {
  2329                           ;main.c: 1021: static unsigned char ucTimerX1P5s = 0;
  2330                           ;main.c: 1023: static unsigned char ucTimerLessX1P5s = 0;
  2331                           ;main.c: 1025: if(getAdOriginalCh1Value() < 130)
  2332  02B5  118A  244D  118A   	fcall	_getAdOriginalCh1Value
  2333  02B8  3000               	movlw	0
  2334  02B9  0248               	subwf	?_getAdOriginalCh1Value+1,w
  2335  02BA  3082               	movlw	130
  2336  02BB  1903               	skipnz
  2337  02BC  0247               	subwf	?_getAdOriginalCh1Value,w
  2338  02BD  1803               	skipnc
  2339  02BE  2AC2               	goto	l4672
  2340                           
  2341                           ;main.c: 1026: {
  2342                           ;main.c: 1027: ucTimerX1P5s = 0;
  2343  02BF  01E9               	clrf	main@ucTimerX1P5s
  2344                           
  2345                           ;main.c: 1028: ucTimerLessX1P5s++;
  2346  02C0  0AE0               	incf	main@ucTimerLessX1P5s,f
  2347                           
  2348                           ;main.c: 1029: }
  2349  02C1  2AC4               	goto	l4676
  2350  02C2                     l4672:	
  2351                           
  2352                           ;main.c: 1030: else
  2353                           ;main.c: 1031: {
  2354                           ;main.c: 1032: ucTimerX1P5s++;
  2355  02C2  0AE9               	incf	main@ucTimerX1P5s,f
  2356                           
  2357                           ;main.c: 1033: ucTimerLessX1P5s = 0;
  2358  02C3  01E0               	clrf	main@ucTimerLessX1P5s
  2359  02C4                     l4676:	
  2360                           
  2361                           ;main.c: 1034: }
  2362                           ;main.c: 1036: if(ucTimerX1P5s >= 5)
  2363  02C4  3005               	movlw	5
  2364  02C5  0269               	subwf	main@ucTimerX1P5s,w
  2365  02C6  1C03               	skipc
  2366  02C7  2AD7               	goto	l4690
  2367                           
  2368                           ;main.c: 1037: {
  2369                           ;main.c: 1038: ucTimerX1P5s = 0;
  2370  02C8  01E9               	clrf	main@ucTimerX1P5s
  2371                           
  2372                           ;main.c: 1039: PAOD7 = 0;
  2373  02C9  1683               	bsf	3,5	;RP0=1, select bank3
  2374  02CA  1703               	bsf	3,6	;RP1=1, select bank3
  2375  02CB  1387               	bcf	7,7
  2376                           
  2377                           ;main.c: 1040: PA7 = 0;
  2378  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  2379  02CD  1303               	bcf	3,6	;RP1=0, select bank0
  2380  02CE  1385               	bcf	5,7
  2381                           
  2382                           ;main.c: 1041: clearThreeHoursTimer();
  2383  02CF  118A  256F  118A   	fcall	_clearThreeHoursTimer
  2384                           
  2385                           ;main.c: 1043: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2386  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  2387  02D3  3002               	movlw	2
  2388  02D4  01CC               	clrf	main@enumBranchStep
  2389  02D5                     L4:	
  2390                           ;main.c: 1045: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
  2391                           
  2392  02D5  00CE               	movwf	main@enumMainLoopStep
  2393                           
  2394                           ;main.c: 1046: }
  2395  02D6  2840               	goto	l4206
  2396  02D7                     l4690:	
  2397                           
  2398                           ;main.c: 1047: else if(ucTimerLessX1P5s >= 5)
  2399  02D7  3005               	movlw	5
  2400  02D8  0260               	subwf	main@ucTimerLessX1P5s,w
  2401  02D9  1C03               	skipc
  2402  02DA  2840               	goto	l4206
  2403                           
  2404                           ;main.c: 1048: {
  2405                           ;main.c: 1049: static unsigned char ucTimerX2P5s = 0;
  2406                           ;main.c: 1051: static unsigned char ucTimerLessX2P5s = 0;
  2407                           ;main.c: 1053: if(getAdOriginalCh14Value() >= 1950)
  2408  02DB  118A  2454  118A   	fcall	_getAdOriginalCh14Value
  2409  02DE  3007               	movlw	7
  2410  02DF  0248               	subwf	?_getAdOriginalCh14Value+1,w
  2411  02E0  309E               	movlw	158
  2412  02E1  1903               	skipnz
  2413  02E2  0247               	subwf	?_getAdOriginalCh14Value,w
  2414  02E3  1C03               	skipc
  2415  02E4  2AE8               	goto	l4698
  2416                           
  2417                           ;main.c: 1054: {
  2418                           ;main.c: 1055: ucTimerX2P5s++;
  2419  02E5  0AEA               	incf	main@ucTimerX2P5s,f
  2420                           
  2421                           ;main.c: 1056: ucTimerLessX2P5s = 0;
  2422  02E6  01E1               	clrf	main@ucTimerLessX2P5s
  2423                           
  2424                           ;main.c: 1057: }
  2425  02E7  2AEA               	goto	l4702
  2426  02E8                     l4698:	
  2427                           
  2428                           ;main.c: 1058: else
  2429                           ;main.c: 1059: {
  2430                           ;main.c: 1060: ucTimerX2P5s = 0;
  2431  02E8  01EA               	clrf	main@ucTimerX2P5s
  2432                           
  2433                           ;main.c: 1061: ucTimerLessX2P5s++;
  2434  02E9  0AE1               	incf	main@ucTimerLessX2P5s,f
  2435  02EA                     l4702:	
  2436                           
  2437                           ;main.c: 1062: }
  2438                           ;main.c: 1064: if(ucTimerX2P5s >= 5)
  2439  02EA  3005               	movlw	5
  2440  02EB  026A               	subwf	main@ucTimerX2P5s,w
  2441  02EC  1C03               	skipc
  2442  02ED  2AF0               	goto	l4706
  2443                           
  2444                           ;main.c: 1065: {
  2445                           ;main.c: 1066: ucTimerX2P5s = 0;
  2446  02EE  01EA               	clrf	main@ucTimerX2P5s
  2447                           
  2448                           ;main.c: 1067: }
  2449  02EF  2840               	goto	l4206
  2450  02F0                     l4706:	
  2451                           
  2452                           ;main.c: 1068: else if(ucTimerLessX2P5s >= 5)
  2453  02F0  3005               	movlw	5
  2454  02F1  0261               	subwf	main@ucTimerLessX2P5s,w
  2455  02F2  1C03               	skipc
  2456  02F3  2840               	goto	l4206
  2457                           
  2458                           ;main.c: 1069: {
  2459                           ;main.c: 1070: clearPinPortAndTimer();
  2460  02F4  118A  255A  118A   	fcall	_clearPinPortAndTimer
  2461  02F7  2869               	goto	l4232
  2462  02F8                     l4714:	
  2463  02F8  084C               	movf	main@enumBranchStep,w
  2464                           
  2465                           ; Switch size 1, requested type "space"
  2466                           ; Number of cases is 3, Range of values is 0 to 2
  2467                           ; switch strategies available:
  2468                           ; Name         Instructions Cycles
  2469                           ; simple_byte           10     6 (average)
  2470                           ; direct_byte           13     7 (fixed)
  2471                           ; jumptable            260     6 (fixed)
  2472                           ; rangetable             7     6 (fixed)
  2473                           ; spacedrange           12     9 (fixed)
  2474                           ; locatedrange           3     3 (fixed)
  2475                           ;	Chosen strategy is simple_byte
  2476  02F9  3A00               	xorlw	0	; case 0
  2477  02FA  1903               	skipnz
  2478  02FB  2A8C               	goto	l913
  2479  02FC  3A01               	xorlw	1	; case 1
  2480  02FD  1903               	skipnz
  2481  02FE  2AA1               	goto	l4650
  2482  02FF  3A03               	xorlw	3	; case 2
  2483  0300  1903               	skipnz
  2484  0301  2AAC               	goto	l4660
  2485  0302  286C               	goto	l710
  2486  0303                     l948:	
  2487                           ;main.c: 1108: {
  2488                           ;main.c: 1109: case INTERNAL_FIRST_STEP:
  2489                           
  2490                           
  2491                           ;main.c: 1110: {
  2492                           ;main.c: 1111: PB0 = 0;
  2493  0303  1006               	bcf	6,0
  2494                           
  2495                           ;main.c: 1112: PB1 = 0;
  2496  0304  1086               	bcf	6,1
  2497                           
  2498                           ;main.c: 1113: PA0 = 0;
  2499  0305  1005               	bcf	5,0
  2500                           
  2501                           ;main.c: 1114: PA1 = 0;
  2502  0306  1085               	bcf	5,1
  2503                           
  2504                           ;main.c: 1115: PA2 = 0;
  2505  0307  1105               	bcf	5,2
  2506                           
  2507                           ;main.c: 1116: PA3 = 0;
  2508  0308  1185               	bcf	5,3
  2509                           
  2510                           ;main.c: 1117: PBOD6 = 0;
  2511  0309  1683               	bsf	3,5	;RP0=1, select bank3
  2512  030A  1703               	bsf	3,6	;RP1=1, select bank3
  2513  030B  1308               	bcf	8,6
  2514                           
  2515                           ;main.c: 1118: PB6 = 1;
  2516  030C  1283               	bcf	3,5	;RP0=0, select bank0
  2517  030D  1303               	bcf	3,6	;RP1=0, select bank0
  2518  030E  1706               	bsf	6,6
  2519                           
  2520                           ;main.c: 1119: PA6 =0;
  2521  030F  1305               	bcf	5,6
  2522                           
  2523                           ;main.c: 1121: enumInteralStep = INTERNAL_SECOND_STEP;
  2524  0310  01CD               	clrf	main@enumInteralStep
  2525  0311  0ACD               	incf	main@enumInteralStep,f
  2526                           
  2527                           ;main.c: 1122: break;
  2528  0312  2840               	goto	l4206
  2529  0313                     l4716:	
  2530                           
  2531                           ;main.c: 1126: {
  2532                           ;main.c: 1127: static unsigned char ucTimer1s = 0;
  2533                           ;main.c: 1129: if(getAdOriginalCh14Value() <= 1000)
  2534  0313  118A  2454  118A   	fcall	_getAdOriginalCh14Value
  2535  0316  3003               	movlw	3
  2536  0317  0248               	subwf	?_getAdOriginalCh14Value+1,w
  2537  0318  30E9               	movlw	233
  2538  0319  1903               	skipnz
  2539  031A  0247               	subwf	?_getAdOriginalCh14Value,w
  2540  031B  1803               	skipnc
  2541  031C  2B1F               	goto	l4720
  2542                           
  2543                           ;main.c: 1130: {
  2544                           ;main.c: 1131: ucTimer1s++;
  2545  031D  0ACB               	incf	main@cTimer1s_818,f
  2546                           
  2547                           ;main.c: 1132: }
  2548  031E  2B20               	goto	l4722
  2549  031F                     l4720:	
  2550                           
  2551                           ;main.c: 1133: else
  2552                           ;main.c: 1134: ucTimer1s = 0;
  2553  031F  01CB               	clrf	main@cTimer1s_818
  2554  0320                     l4722:	
  2555                           
  2556                           ;main.c: 1136: if(ucTimer1s >= 10)
  2557  0320  300A               	movlw	10
  2558  0321  024B               	subwf	main@cTimer1s_818,w
  2559  0322  1C03               	skipc
  2560  0323  2840               	goto	l4206
  2561                           
  2562                           ;main.c: 1137: {
  2563                           ;main.c: 1138: enumInteralStep = INTERNAL_THIRD_STEP;
  2564  0324  3002               	movlw	2
  2565  0325  00CD               	movwf	main@enumInteralStep
  2566                           
  2567                           ;main.c: 1139: ucTimer1s = 0;
  2568  0326  01CB               	clrf	main@cTimer1s_818
  2569  0327  2840               	goto	l4206
  2570  0328                     l4728:	
  2571                           
  2572                           ;main.c: 1145: {
  2573                           ;main.c: 1146: static unsigned char ucTimerP3s = 0;
  2574                           ;main.c: 1148: if(getAdOriginalCh14Value() >= 1950)
  2575  0328  118A  2454  118A   	fcall	_getAdOriginalCh14Value
  2576  032B  3007               	movlw	7
  2577  032C  0248               	subwf	?_getAdOriginalCh14Value+1,w
  2578  032D  309E               	movlw	158
  2579  032E  1903               	skipnz
  2580  032F  0247               	subwf	?_getAdOriginalCh14Value,w
  2581  0330  1C03               	skipc
  2582  0331  2B34               	goto	l4732
  2583                           
  2584                           ;main.c: 1149: {
  2585                           ;main.c: 1150: ucTimerP3s++;
  2586  0332  0AE2               	incf	main@ucTimerP3s,f
  2587                           
  2588                           ;main.c: 1151: }
  2589  0333  2B35               	goto	l4734
  2590  0334                     l4732:	
  2591                           
  2592                           ;main.c: 1152: else
  2593                           ;main.c: 1153: ucTimerP3s = 0;
  2594  0334  01E2               	clrf	main@ucTimerP3s
  2595  0335                     l4734:	
  2596                           
  2597                           ;main.c: 1155: if(ucTimerP3s >= 3)
  2598  0335  3003               	movlw	3
  2599  0336  0262               	subwf	main@ucTimerP3s,w
  2600  0337  1C03               	skipc
  2601  0338  2840               	goto	l4206
  2602                           
  2603                           ;main.c: 1156: {
  2604                           ;main.c: 1157: enumInteralStep = INTERNAL_FIRST_STEP;
  2605  0339  01CD               	clrf	main@enumInteralStep
  2606                           
  2607                           ;main.c: 1158: ucTimerP3s = 0;
  2608  033A  01E2               	clrf	main@ucTimerP3s
  2609                           
  2610                           ;main.c: 1159: clearAllTimer();
  2611  033B  118A  2566  118A   	fcall	_clearAllTimer
  2612                           
  2613                           ;main.c: 1161: DACR0=0x0F;
  2614  033E  300F               	movlw	15
  2615  033F  0088               	movwf	8	;volatile
  2616                           
  2617                           ;main.c: 1162: initPin();
  2618  0340  118A  2576  118A   	fcall	_initPin
  2619                           
  2620                           ;main.c: 1165: enumMainLoopStep = MAIN_LOOP_STEP_INIT;
  2621  0343  1283               	bcf	3,5	;RP0=0, select bank0
  2622  0344  1303               	bcf	3,6	;RP1=0, select bank0
  2623  0345  01CE               	clrf	main@enumMainLoopStep
  2624  0346  2840               	goto	l4206
  2625  0347                     l4748:	
  2626  0347  084D               	movf	main@enumInteralStep,w
  2627                           
  2628                           ; Switch size 1, requested type "space"
  2629                           ; Number of cases is 3, Range of values is 0 to 2
  2630                           ; switch strategies available:
  2631                           ; Name         Instructions Cycles
  2632                           ; simple_byte           10     6 (average)
  2633                           ; direct_byte           13     7 (fixed)
  2634                           ; jumptable            260     6 (fixed)
  2635                           ; rangetable             7     6 (fixed)
  2636                           ; spacedrange           12     9 (fixed)
  2637                           ; locatedrange           3     3 (fixed)
  2638                           ;	Chosen strategy is simple_byte
  2639  0348  3A00               	xorlw	0	; case 0
  2640  0349  1903               	skipnz
  2641  034A  2B03               	goto	l948
  2642  034B  3A01               	xorlw	1	; case 1
  2643  034C  1903               	skipnz
  2644  034D  2B13               	goto	l4716
  2645  034E  3A03               	xorlw	3	; case 2
  2646  034F  1903               	skipnz
  2647  0350  2B28               	goto	l4728
  2648  0351  286C               	goto	l710
  2649  0352                     l4752:	
  2650  0352  084E               	movf	main@enumMainLoopStep,w
  2651                           
  2652                           ; Switch size 1, requested type "space"
  2653                           ; Number of cases is 8, Range of values is 0 to 9
  2654                           ; switch strategies available:
  2655                           ; Name         Instructions Cycles
  2656                           ; simple_byte           25    13 (average)
  2657                           ; direct_byte           27     7 (fixed)
  2658                           ; jumptable            260     6 (fixed)
  2659                           ; rangetable            14     6 (fixed)
  2660                           ; spacedrange           26     9 (fixed)
  2661                           ; locatedrange          10     3 (fixed)
  2662                           ;	Chosen strategy is simple_byte
  2663  0353  3A00               	xorlw	0	; case 0
  2664  0354  1903               	skipnz
  2665  0355  2857               	goto	l4222
  2666  0356  3A01               	xorlw	1	; case 1
  2667  0357  1903               	skipnz
  2668  0358  286D               	goto	l4234
  2669  0359  3A03               	xorlw	3	; case 2
  2670  035A  1903               	skipnz
  2671  035B  2885               	goto	l718
  2672  035C  3A01               	xorlw	1	; case 3
  2673  035D  1903               	skipnz
  2674  035E  288F               	goto	l4256
  2675  035F  3A07               	xorlw	7	; case 4
  2676  0360  1903               	skipnz
  2677  0361  28CA               	goto	l4294
  2678  0362  3A01               	xorlw	1	; case 5
  2679  0363  1903               	skipnz
  2680  0364  28D3               	goto	l4298
  2681  0365  3A0D               	xorlw	13	; case 8
  2682  0366  1903               	skipnz
  2683  0367  2AF8               	goto	l4714
  2684  0368  3A01               	xorlw	1	; case 9
  2685  0369  1903               	skipnz
  2686  036A  2B47               	goto	l4748
  2687  036B  286C               	goto	l710
  2688  036C  118A  2811         	ljmp	start
  2689  036E                     __end_of_main:	
  2690                           
  2691                           	psect	swtext1
  2692  059B                     __pswtext1:	
  2693  059B                     S4970:	
  2694  059B  118A  2918         	ljmp	l769
  2695  059D  118A  291B         	ljmp	l4326
  2696  059F  118A  2924         	ljmp	l4336
  2697  05A1  118A  292A         	ljmp	l4346
  2698  05A3  118A  2930         	ljmp	l4356
  2699  05A5  118A  2936         	ljmp	l4366
  2700  05A7  118A  2940         	ljmp	l4376
  2701                           
  2702                           	psect	swtext2
  2703  05A9                     __pswtext2:	
  2704  05A9                     S4972:	
  2705  05A9  118A  2954         	ljmp	l797
  2706  05AB  118A  2957         	ljmp	l4390
  2707  05AD  118A  2960         	ljmp	l4400
  2708  05AF  118A  2966         	ljmp	l4410
  2709  05B1  118A  296C         	ljmp	l4420
  2710  05B3  118A  2972         	ljmp	l4430
  2711  05B5  118A  297B         	ljmp	l4440
  2712                           
  2713                           	psect	swtext3
  2714  05D3                     __pswtext3:	
  2715  05D3                     S4974:	
  2716  05D3  118A  298E         	ljmp	l824
  2717  05D5  118A  2992         	ljmp	l4454
  2718  05D7  118A  299B         	ljmp	l4464
  2719  05D9  118A  29A1         	ljmp	l4474
  2720  05DB  118A  29A7         	ljmp	l4484
  2721  05DD  118A  29AF         	ljmp	l4494
  2722                           
  2723                           	psect	text739
  2724  055A                     __ptext739:	
  2725 ;; =============== function _main ends ============
  2726                           
  2727                           
  2728 ;; *************** function _clearPinPortAndTimer *****************
  2729 ;; Defined at:
  2730 ;;		line 92 in file "D:\develop\190625\AK7030-OTP\main.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;		None
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;		None
  2735 ;; Return value:  Size  Location     Type
  2736 ;;		None               void
  2737 ;; Registers used:
  2738 ;;		status,2, status,0, pclath, cstack
  2739 ;; Tracked objects:
  2740 ;;		On entry : 160/0
  2741 ;;		On exit  : 160/20
  2742 ;;		Unchanged: FFE9F/0
  2743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2744 ;;      Params:         0       0       0       0       0
  2745 ;;      Locals:         0       0       0       0       0
  2746 ;;      Temps:          0       0       0       0       0
  2747 ;;      Totals:         0       0       0       0       0
  2748 ;;Total ram usage:        0 bytes
  2749 ;; Hardware stack levels used:    1
  2750 ;; Hardware stack levels required when called:    4
  2751 ;; This function calls:
  2752 ;;		_clearAllTimer
  2753 ;; This function is called by:
  2754 ;;		_main
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757  055A                     _clearPinPortAndTimer:	
  2758                           
  2759                           ;main.c: 93: PB0 = 0;
  2760                           
  2761                           ; Regs used in _clearPinPortAndTimer: [status,2+status,0+pclath+cstack]
  2762  055A  1006               	bcf	6,0
  2763                           
  2764                           ;main.c: 94: PA0 = 0;
  2765  055B  1005               	bcf	5,0
  2766                           
  2767                           ;main.c: 95: PA1 = 0;
  2768  055C  1085               	bcf	5,1
  2769                           
  2770                           ;main.c: 96: PA2 = 0;
  2771  055D  1105               	bcf	5,2
  2772                           
  2773                           ;main.c: 97: PA3 = 0;
  2774  055E  1185               	bcf	5,3
  2775                           
  2776                           ;main.c: 98: PAOD7 = 0;
  2777  055F  1683               	bsf	3,5	;RP0=1, select bank3
  2778  0560  1703               	bsf	3,6	;RP1=1, select bank3
  2779  0561  1387               	bcf	7,7
  2780                           
  2781                           ;main.c: 99: PA7 = 0;
  2782  0562  1283               	bcf	3,5	;RP0=0, select bank0
  2783  0563  1303               	bcf	3,6	;RP1=0, select bank0
  2784  0564  1385               	bcf	5,7
  2785                           
  2786                           ;main.c: 100: clearAllTimer();
  2787  0565  2D66               	ljmp	l4150
  2788  0566                     __end_of_clearPinPortAndTimer:	
  2789  0566                     __ptext744:	
  2790 ;; =============== function _process_AD_Converter_Value ends ============
  2791                           
  2792                           
  2793 ;; *************** function _clearAllTimer *****************
  2794 ;; Defined at:
  2795 ;;		line 83 in file "D:\develop\190625\AK7030-OTP\main.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;		None
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;		None
  2800 ;; Return value:  Size  Location     Type
  2801 ;;		None               void
  2802 ;; Registers used:
  2803 ;;		status,2, status,0, pclath, cstack
  2804 ;; Tracked objects:
  2805 ;;		On entry : 160/0
  2806 ;;		On exit  : 160/20
  2807 ;;		Unchanged: FFE9F/0
  2808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2809 ;;      Params:         0       0       0       0       0
  2810 ;;      Locals:         0       0       0       0       0
  2811 ;;      Temps:          0       0       0       0       0
  2812 ;;      Totals:         0       0       0       0       0
  2813 ;;Total ram usage:        0 bytes
  2814 ;; Hardware stack levels used:    1
  2815 ;; Hardware stack levels required when called:    3
  2816 ;; This function calls:
  2817 ;;		_clearTwelveHoursTimer
  2818 ;;		_clearThreeHoursTimer
  2819 ;;		_clearTwentySecondsTimer
  2820 ;; This function is called by:
  2821 ;;		_clearPinPortAndTimer
  2822 ;;		_main
  2823 ;; This function uses a non-reentrant model
  2824 ;;
  2825  0566                     _clearAllTimer:	
  2826  0566                     l4150:	
  2827                           ; Regs used in _clearAllTimer: [status,2+status,0+pclath+cstack]
  2828                           
  2829                           
  2830                           ;main.c: 84: clearTwelveHoursTimer();
  2831  0566  256B  118A         	fcall	_clearTwelveHoursTimer
  2832                           
  2833                           ;main.c: 85: clearThreeHoursTimer();
  2834  0568  256F  118A         	fcall	_clearThreeHoursTimer
  2835                           
  2836                           ;main.c: 86: clearTwentySecondsTimer();
  2837  056A  2D73               	ljmp	l3880
  2838  056B                     __end_of_clearAllTimer:	
  2839  056B                     __ptext768:	
  2840 ;; =============== function _clearThreeHoursTimer ends ============
  2841                           
  2842                           
  2843 ;; *************** function _clearTwelveHoursTimer *****************
  2844 ;; Defined at:
  2845 ;;		line 365 in file "D:\develop\190625\AK7030-OTP\common.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;		None
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;		None
  2850 ;; Return value:  Size  Location     Type
  2851 ;;		None               void
  2852 ;; Registers used:
  2853 ;;		status,2
  2854 ;; Tracked objects:
  2855 ;;		On entry : 160/0
  2856 ;;		On exit  : 160/20
  2857 ;;		Unchanged: FFE9F/0
  2858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2859 ;;      Params:         0       0       0       0       0
  2860 ;;      Locals:         0       0       0       0       0
  2861 ;;      Temps:          0       0       0       0       0
  2862 ;;      Totals:         0       0       0       0       0
  2863 ;;Total ram usage:        0 bytes
  2864 ;; Hardware stack levels used:    1
  2865 ;; Hardware stack levels required when called:    2
  2866 ;; This function calls:
  2867 ;;		Nothing
  2868 ;; This function is called by:
  2869 ;;		_clearAllTimer
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872  056B                     _clearTwelveHoursTimer:	
  2873                           
  2874                           ;common.c: 366: uiBigTimer = 0;
  2875                           
  2876                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  2877  056B  1683               	bsf	3,5	;RP0=1, select bank1
  2878  056C  01A0               	clrf	_uiBigTimer^(0+128)
  2879  056D  01A1               	clrf	(_uiBigTimer+1)^(0+128)
  2880  056E  0008               	return
  2881  056F                     __end_of_clearTwelveHoursTimer:	
  2882  056F                     __ptext767:	
  2883 ;; =============== function _clearTwentySecondsTimer ends ============
  2884                           
  2885                           
  2886 ;; *************** function _clearThreeHoursTimer *****************
  2887 ;; Defined at:
  2888 ;;		line 371 in file "D:\develop\190625\AK7030-OTP\common.c"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;		None
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;		None
  2893 ;; Return value:  Size  Location     Type
  2894 ;;		None               void
  2895 ;; Registers used:
  2896 ;;		status,2
  2897 ;; Tracked objects:
  2898 ;;		On entry : 140/0
  2899 ;;		On exit  : 160/20
  2900 ;;		Unchanged: FFE9F/0
  2901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2902 ;;      Params:         0       0       0       0       0
  2903 ;;      Locals:         0       0       0       0       0
  2904 ;;      Temps:          0       0       0       0       0
  2905 ;;      Totals:         0       0       0       0       0
  2906 ;;Total ram usage:        0 bytes
  2907 ;; Hardware stack levels used:    1
  2908 ;; Hardware stack levels required when called:    2
  2909 ;; This function calls:
  2910 ;;		Nothing
  2911 ;; This function is called by:
  2912 ;;		_clearAllTimer
  2913 ;;		_main
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916  056F                     _clearThreeHoursTimer:	
  2917                           
  2918                           ;common.c: 372: uiSmallTimer = 0;
  2919                           
  2920                           ; Regs used in _clearThreeHoursTimer: [status,2]
  2921  056F  1683               	bsf	3,5	;RP0=1, select bank1
  2922  0570  01A2               	clrf	_uiSmallTimer^(0+128)
  2923  0571  01A3               	clrf	(_uiSmallTimer+1)^(0+128)
  2924  0572  0008               	return
  2925  0573                     __end_of_clearThreeHoursTimer:	
  2926  0573                     __ptext766:	
  2927 ;; =============== function _initPin ends ============
  2928                           
  2929                           
  2930 ;; *************** function _clearTwentySecondsTimer *****************
  2931 ;; Defined at:
  2932 ;;		line 376 in file "D:\develop\190625\AK7030-OTP\common.c"
  2933 ;; Parameters:    Size  Location     Type
  2934 ;;		None
  2935 ;; Auto vars:     Size  Location     Type
  2936 ;;		None
  2937 ;; Return value:  Size  Location     Type
  2938 ;;		None               void
  2939 ;; Registers used:
  2940 ;;		status,2
  2941 ;; Tracked objects:
  2942 ;;		On entry : 160/20
  2943 ;;		On exit  : 160/20
  2944 ;;		Unchanged: FFE9F/0
  2945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2946 ;;      Params:         0       0       0       0       0
  2947 ;;      Locals:         0       0       0       0       0
  2948 ;;      Temps:          0       0       0       0       0
  2949 ;;      Totals:         0       0       0       0       0
  2950 ;;Total ram usage:        0 bytes
  2951 ;; Hardware stack levels used:    1
  2952 ;; Hardware stack levels required when called:    2
  2953 ;; This function calls:
  2954 ;;		Nothing
  2955 ;; This function is called by:
  2956 ;;		_clearAllTimer
  2957 ;; This function uses a non-reentrant model
  2958 ;;
  2959  0573                     _clearTwentySecondsTimer:	
  2960  0573                     l3880:	
  2961                           ; Regs used in _clearTwentySecondsTimer: [status,2]
  2962                           
  2963                           
  2964                           ;common.c: 377: uiTwentySecondsTimer = 0;
  2965  0573  01A4               	clrf	_uiTwentySecondsTimer^(0+128)
  2966  0574  01A5               	clrf	(_uiTwentySecondsTimer+1)^(0+128)
  2967  0575  0008               	return
  2968  0576                     __end_of_clearTwentySecondsTimer:	
  2969                           
  2970                           	psect	text740
  2971  0446                     __ptext740:	
  2972 ;; =============== function _clearPinPortAndTimer ends ============
  2973                           
  2974                           
  2975 ;; *************** function _getAdOriginaCh4Value *****************
  2976 ;; Defined at:
  2977 ;;		line 229 in file "D:\develop\190625\AK7030-OTP\common.c"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;		None
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;		None
  2982 ;; Return value:  Size  Location     Type
  2983 ;;                  2   39[BANK0 ] unsigned int 
  2984 ;; Registers used:
  2985 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2986 ;; Tracked objects:
  2987 ;;		On entry : 60/0
  2988 ;;		On exit  : 160/0
  2989 ;;		Unchanged: FFE00/0
  2990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2991 ;;      Params:         0       2       0       0       0
  2992 ;;      Locals:         0       0       0       0       0
  2993 ;;      Temps:          0       0       0       0       0
  2994 ;;      Totals:         0       2       0       0       0
  2995 ;;Total ram usage:        2 bytes
  2996 ;; Hardware stack levels used:    1
  2997 ;; Hardware stack levels required when called:    3
  2998 ;; This function calls:
  2999 ;;		_Filter
  3000 ;; This function is called by:
  3001 ;;		_main
  3002 ;; This function uses a non-reentrant model
  3003 ;;
  3004  0446                     _getAdOriginaCh4Value:	
  3005                           
  3006                           ;common.c: 231: return Filter(uiSampleChannelFourth);
  3007                           
  3008                           ; Regs used in _getAdOriginaCh4Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  3009  0446  30D8               	movlw	_uiSampleChannelFourth& (0+255)
  3010  0447  245B               	fcall	_Filter
  3011  0448  0821               	movf	?_Filter+1,w
  3012  0449  00C8               	movwf	?_getAdOriginaCh4Value+1
  3013  044A  0820               	movf	?_Filter,w
  3014  044B  00C7               	movwf	?_getAdOriginaCh4Value
  3015  044C  0008               	return
  3016  044D                     __end_of_getAdOriginaCh4Value:	
  3017  044D                     __ptext741:	
  3018 ;; =============== function _getAdOriginaCh4Value ends ============
  3019                           
  3020                           
  3021 ;; *************** function _getAdOriginalCh1Value *****************
  3022 ;; Defined at:
  3023 ;;		line 217 in file "D:\develop\190625\AK7030-OTP\common.c"
  3024 ;; Parameters:    Size  Location     Type
  3025 ;;		None
  3026 ;; Auto vars:     Size  Location     Type
  3027 ;;		None
  3028 ;; Return value:  Size  Location     Type
  3029 ;;                  2   39[BANK0 ] unsigned int 
  3030 ;; Registers used:
  3031 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3032 ;; Tracked objects:
  3033 ;;		On entry : 40/0
  3034 ;;		On exit  : 160/0
  3035 ;;		Unchanged: FFE00/0
  3036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3037 ;;      Params:         0       2       0       0       0
  3038 ;;      Locals:         0       0       0       0       0
  3039 ;;      Temps:          0       0       0       0       0
  3040 ;;      Totals:         0       2       0       0       0
  3041 ;;Total ram usage:        2 bytes
  3042 ;; Hardware stack levels used:    1
  3043 ;; Hardware stack levels required when called:    3
  3044 ;; This function calls:
  3045 ;;		_Filter
  3046 ;; This function is called by:
  3047 ;;		_main
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050  044D                     _getAdOriginalCh1Value:	
  3051                           
  3052                           ;common.c: 220: return Filter(uiSampleChannelFirst);
  3053                           
  3054                           ; Regs used in _getAdOriginalCh1Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  3055  044D  30A8               	movlw	_uiSampleChannelFirst& (0+255)
  3056  044E  245B               	fcall	_Filter
  3057  044F  0821               	movf	?_Filter+1,w
  3058  0450  00C8               	movwf	?_getAdOriginalCh1Value+1
  3059  0451  0820               	movf	?_Filter,w
  3060  0452  00C7               	movwf	?_getAdOriginalCh1Value
  3061  0453  0008               	return
  3062  0454                     __end_of_getAdOriginalCh1Value:	
  3063  0454                     __ptext742:	
  3064 ;; =============== function _getAdOriginalCh1Value ends ============
  3065                           
  3066                           
  3067 ;; *************** function _getAdOriginalCh14Value *****************
  3068 ;; Defined at:
  3069 ;;		line 240 in file "D:\develop\190625\AK7030-OTP\common.c"
  3070 ;; Parameters:    Size  Location     Type
  3071 ;;		None
  3072 ;; Auto vars:     Size  Location     Type
  3073 ;;		None
  3074 ;; Return value:  Size  Location     Type
  3075 ;;                  2   39[BANK0 ] unsigned int 
  3076 ;; Registers used:
  3077 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3078 ;; Tracked objects:
  3079 ;;		On entry : 60/0
  3080 ;;		On exit  : 160/0
  3081 ;;		Unchanged: FFE00/0
  3082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3083 ;;      Params:         0       2       0       0       0
  3084 ;;      Locals:         0       0       0       0       0
  3085 ;;      Temps:          0       0       0       0       0
  3086 ;;      Totals:         0       2       0       0       0
  3087 ;;Total ram usage:        2 bytes
  3088 ;; Hardware stack levels used:    1
  3089 ;; Hardware stack levels required when called:    3
  3090 ;; This function calls:
  3091 ;;		_Filter
  3092 ;; This function is called by:
  3093 ;;		_main
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096  0454                     _getAdOriginalCh14Value:	
  3097                           
  3098                           ;common.c: 242: return Filter(uiSampleChannelFourteenth);
  3099                           
  3100                           ; Regs used in _getAdOriginalCh14Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  3101  0454  30C0               	movlw	_uiSampleChannelFourteenth& (0+255)
  3102  0455  245B               	fcall	_Filter
  3103  0456  0821               	movf	?_Filter+1,w
  3104  0457  00C8               	movwf	?_getAdOriginalCh14Value+1
  3105  0458  0820               	movf	?_Filter,w
  3106  0459  00C7               	movwf	?_getAdOriginalCh14Value
  3107  045A  0008               	return
  3108  045B                     __end_of_getAdOriginalCh14Value:	
  3109  045B                     __ptext748:	
  3110 ;; =============== function _getAD_ConvertFlag ends ============
  3111                           
  3112                           
  3113 ;; *************** function _Filter *****************
  3114 ;; Defined at:
  3115 ;;		line 51 in file "D:\develop\190625\AK7030-OTP\common.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;  tmpValue        1    wreg     PTR int 
  3118 ;;		 -> uiSampleChannelFourteenth(24), uiSampleChannelFourth(24), uiSampleChannelFirst(24), 
  3119 ;; Auto vars:     Size  Location     Type
  3120 ;;  tmpValue        1   34[BANK0 ] PTR int 
  3121 ;;		 -> uiSampleChannelFourteenth(24), uiSampleChannelFourth(24), uiSampleChannelFirst(24), 
  3122 ;;  cir             2   35[BANK0 ] int 
  3123 ;;  filter_buf     24    6[BANK0 ] unsigned int [12]
  3124 ;;  filter_sum      2   32[BANK0 ] unsigned int 
  3125 ;;  filter_temp     2   30[BANK0 ] unsigned int 
  3126 ;;  i               1   38[BANK0 ] unsigned char 
  3127 ;;  j               1   37[BANK0 ] unsigned char 
  3128 ;; Return value:  Size  Location     Type
  3129 ;;                  2    0[BANK0 ] unsigned int 
  3130 ;; Registers used:
  3131 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3132 ;; Tracked objects:
  3133 ;;		On entry : 40/0
  3134 ;;		On exit  : 160/0
  3135 ;;		Unchanged: FFE00/0
  3136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3137 ;;      Params:         0       2       0       0       0
  3138 ;;      Locals:         0      33       0       0       0
  3139 ;;      Temps:          0       4       0       0       0
  3140 ;;      Totals:         0      39       0       0       0
  3141 ;;Total ram usage:       39 bytes
  3142 ;; Hardware stack levels used:    1
  3143 ;; Hardware stack levels required when called:    2
  3144 ;; This function calls:
  3145 ;;		Nothing
  3146 ;; This function is called by:
  3147 ;;		_getAdOriginalCh1Value
  3148 ;;		_getAdOriginaCh4Value
  3149 ;;		_getAdOriginalCh14Value
  3150 ;; This function uses a non-reentrant model
  3151 ;;
  3152  045B                     _Filter:	
  3153                           
  3154                           ; Regs used in _Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  3155                           ;Filter@tmpValue stored from wreg
  3156  045B  1283               	bcf	3,5	;RP0=0, select bank0
  3157  045C  00C2               	movwf	Filter@tmpValue
  3158  045D  01C5               	clrf	Filter@j
  3159                           
  3160                           ;common.c: 55: unsigned int filter_temp = 0, filter_sum = 0;
  3161  045E  01BE               	clrf	Filter@filter_temp
  3162  045F  01BF               	clrf	Filter@filter_temp+1
  3163  0460  01C0               	clrf	Filter@filter_sum
  3164  0461  01C1               	clrf	Filter@filter_sum+1
  3165                           
  3166                           ;common.c: 57: unsigned int filter_buf[12];
  3167                           ;common.c: 59: for(int cir = 0;cir < 12; cir++)
  3168  0462  01C3               	clrf	Filter@cir
  3169  0463  01C4               	clrf	Filter@cir+1
  3170  0464                     l3990:	
  3171                           
  3172                           ;common.c: 60: filter_buf[cir] = *tmpValue++;
  3173  0464  1283               	bcf	3,5	;RP0=0, select bank0
  3174  0465  1303               	bcf	3,6	;RP1=0, select bank0
  3175  0466  0842               	movf	Filter@tmpValue,w
  3176  0467  24EA  118A         	fcall	PL3	;call to abstracted procedure
  3177  0469  1003               	clrc
  3178  046A  0D43               	rlf	Filter@cir,w
  3179  046B  24F2  118A         	fcall	PL4	;call to abstracted procedure
  3180  046D  0AC2               	incf	Filter@tmpValue,f
  3181  046E  0AC2               	incf	Filter@tmpValue,f
  3182  046F  0AC3               	incf	Filter@cir,f
  3183  0470  1903               	skipnz
  3184  0471  0AC4               	incf	Filter@cir+1,f
  3185  0472  0844               	movf	Filter@cir+1,w
  3186  0473  3A80               	xorlw	128
  3187  0474  00FF               	movwf	127
  3188  0475  3080               	movlw	128
  3189  0476  027F               	subwf	127,w
  3190  0477  1D03               	skipz
  3191  0478  2C7B               	goto	u1055
  3192  0479  300C               	movlw	12
  3193  047A  0243               	subwf	Filter@cir,w
  3194  047B                     u1055:	
  3195  047B  1C03               	skipc
  3196  047C  2C64               	goto	l3990
  3197                           
  3198                           ;common.c: 63: for(j = 0; j < 12 - 1; j++)
  3199  047D  1283               	bcf	3,5	;RP0=0, select bank0
  3200  047E  1303               	bcf	3,6	;RP1=0, select bank0
  3201  047F  01C5               	clrf	Filter@j
  3202  0480                     l4004:	
  3203                           
  3204                           ;common.c: 64: {
  3205                           ;common.c: 65: for(i = 0; i < 12 - 1 - j; i++)
  3206  0480  01C6               	clrf	Filter@i
  3207  0481                     l4012:	
  3208  0481  01A3               	clrf	??_Filter+1
  3209  0482  0845               	movf	Filter@j,w
  3210  0483  3C0B               	sublw	11
  3211  0484  00A2               	movwf	??_Filter
  3212  0485  1C03               	skipc
  3213  0486  03A3               	decf	??_Filter+1,f
  3214  0487  0823               	movf	??_Filter+1,w
  3215  0488  3A80               	xorlw	128
  3216  0489  3C80               	sublw	128
  3217  048A  1D03               	skipz
  3218  048B  2C8E               	goto	u1075
  3219  048C  0822               	movf	??_Filter,w
  3220  048D  0246               	subwf	Filter@i,w
  3221  048E                     u1075:	
  3222  048E  1803               	btfsc	3,0
  3223  048F  2CC3               	goto	l4014
  3224                           
  3225                           ;common.c: 66: {
  3226                           ;common.c: 67: if(filter_buf[i] > filter_buf[i + 1])
  3227  0490  1283               	bcf	3,5	;RP0=0, select bank0
  3228  0491  1303               	bcf	3,6	;RP1=0, select bank0
  3229  0492  1003               	clrc
  3230  0493  0D46               	rlf	Filter@i,w
  3231  0494  3E26               	addlw	Filter@filter_buf& (0+255)
  3232  0495  24EA  118A         	fcall	PL3	;call to abstracted procedure
  3233  0497  24FA  118A         	fcall	PL6	;call to abstracted procedure
  3234  0499  0800               	movf	0,w
  3235  049A  00A4               	movwf	??_Filter+2
  3236  049B  0A84               	incf	4,f
  3237  049C  0800               	movf	0,w
  3238  049D  00A5               	movwf	??_Filter+3
  3239  049E  0823               	movf	??_Filter+1,w
  3240  049F  0225               	subwf	??_Filter+3,w
  3241  04A0  1D03               	skipz
  3242  04A1  2CA4               	goto	u1065
  3243  04A2  0822               	movf	??_Filter,w
  3244  04A3  0224               	subwf	??_Filter+2,w
  3245  04A4                     u1065:	
  3246  04A4  1803               	skipnc
  3247  04A5  2CC1               	goto	l4010
  3248                           
  3249                           ;common.c: 68: {
  3250                           ;common.c: 70: filter_temp = filter_buf[i];
  3251  04A6  1003               	clrc
  3252  04A7  0D46               	rlf	Filter@i,w
  3253  04A8  3E26               	addlw	Filter@filter_buf& (0+255)
  3254  04A9  0084               	movwf	4
  3255  04AA  0800               	movf	0,w
  3256  04AB  00BE               	movwf	Filter@filter_temp
  3257  04AC  0A84               	incf	4,f
  3258  04AD  0800               	movf	0,w
  3259  04AE  00BF               	movwf	Filter@filter_temp+1
  3260                           
  3261                           ;common.c: 72: filter_buf[i] = filter_buf[i + 1];
  3262  04AF  24FA  118A         	fcall	PL6	;call to abstracted procedure
  3263  04B1  0800               	movf	0,w
  3264  04B2  00A2               	movwf	??_Filter
  3265  04B3  0A84               	incf	4,f
  3266  04B4  0800               	movf	0,w
  3267  04B5  00A3               	movwf	??_Filter+1
  3268  04B6  1003               	clrc
  3269  04B7  0D46               	rlf	Filter@i,w
  3270  04B8  24F2  118A         	fcall	PL4	;call to abstracted procedure
  3271                           
  3272                           ;common.c: 74: filter_buf[i + 1] = filter_temp;
  3273  04BA  24FA  118A         	fcall	PL6	;call to abstracted procedure
  3274  04BC  083E               	movf	Filter@filter_temp,w
  3275  04BD  0080               	movwf	0
  3276  04BE  0A84               	incf	4,f
  3277  04BF  083F               	movf	Filter@filter_temp+1,w
  3278  04C0  0080               	movwf	0
  3279  04C1                     l4010:	
  3280  04C1  0AC6               	incf	Filter@i,f
  3281  04C2  2C81               	goto	l4012
  3282  04C3                     l4014:	
  3283  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  3284  04C4  300B               	movlw	11
  3285  04C5  1303               	bcf	3,6	;RP1=0, select bank0
  3286  04C6  0AC5               	incf	Filter@j,f
  3287  04C7  0245               	subwf	Filter@j,w
  3288  04C8  1C03               	skipc
  3289  04C9  2C80               	goto	l4004
  3290                           
  3291                           ;common.c: 75: }
  3292                           ;common.c: 76: }
  3293                           ;common.c: 77: }
  3294                           ;common.c: 79: for(i = 2; i < 12 - 2; i++)
  3295  04CA  3002               	movlw	2
  3296  04CB  00C6               	movwf	Filter@i
  3297                           
  3298                           ;common.c: 80: {
  3299                           ;common.c: 81: filter_sum += filter_buf[i];
  3300  04CC  1003               	clrc
  3301  04CD                     L11:	
  3302  04CD  0D46               	rlf	Filter@i,w
  3303  04CE  3E26               	addlw	Filter@filter_buf& (0+255)
  3304  04CF  24EA  118A         	fcall	PL3	;call to abstracted procedure
  3305  04D1  0822               	movf	??_Filter,w
  3306  04D2  07C0               	addwf	Filter@filter_sum,f
  3307  04D3  1803               	skipnc
  3308  04D4  0AC1               	incf	Filter@filter_sum+1,f
  3309  04D5  0823               	movf	??_Filter+1,w
  3310  04D6  07C1               	addwf	Filter@filter_sum+1,f
  3311  04D7  300A               	movlw	10
  3312  04D8  0AC6               	incf	Filter@i,f
  3313  04D9  0246               	subwf	Filter@i,w
  3314  04DA  1C03               	skipc
  3315  04DB  2CCD               	goto	L11
  3316                           
  3317                           ;common.c: 82: }
  3318                           ;common.c: 84: return (filter_sum >> 3);
  3319  04DC  0841               	movf	Filter@filter_sum+1,w
  3320  04DD  00A1               	movwf	?_Filter+1
  3321  04DE  0840               	movf	Filter@filter_sum,w
  3322  04DF  00A0               	movwf	?_Filter
  3323  04E0  1003               	clrc
  3324  04E1  0CA1               	rrf	?_Filter+1,f
  3325  04E2  0CA0               	rrf	?_Filter,f
  3326  04E3  1003               	clrc
  3327  04E4  0CA1               	rrf	?_Filter+1,f
  3328  04E5  0CA0               	rrf	?_Filter,f
  3329  04E6  1003               	clrc
  3330  04E7  0CA1               	rrf	?_Filter+1,f
  3331  04E8  0CA0               	rrf	?_Filter,f
  3332  04E9  0008               	return
  3333  04EA                     __end_of_Filter:	
  3334  04EA                     PL3:	
  3335  04EA  0084               	movwf	4
  3336  04EB  1383               	bcf	3,7	;select IRP bank0
  3337  04EC  0800               	movf	0,w
  3338  04ED  00A2               	movwf	??_Filter
  3339  04EE  0A84               	incf	4,f
  3340  04EF  0800               	movf	0,w
  3341  04F0  00A3               	movwf	??_Filter+1
  3342  04F1  0008               	return
  3343  04F2                     PL4:	
  3344  04F2  3E26               	addlw	Filter@filter_buf& (0+255)
  3345  04F3  0084               	movwf	4
  3346  04F4  0822               	movf	??_Filter,w
  3347  04F5  0080               	movwf	0
  3348  04F6  0A84               	incf	4,f
  3349  04F7  0823               	movf	??_Filter+1,w
  3350  04F8  0080               	movwf	0
  3351  04F9  0008               	return
  3352  04FA                     PL6:	
  3353  04FA  1003               	clrc
  3354  04FB  0D46               	rlf	Filter@i,w
  3355  04FC  3E02               	addlw	2
  3356  04FD  3E26               	addlw	Filter@filter_buf& (0+255)
  3357  04FE  0084               	movwf	4
  3358  04FF  0008               	return
  3359                           
  3360                           	psect	text743
  3361  0500                     __ptext743:	
  3362 ;; =============== function _getAdOriginalCh14Value ends ============
  3363                           
  3364                           
  3365 ;; *************** function _process_AD_Converter_Value *****************
  3366 ;; Defined at:
  3367 ;;		line 251 in file "D:\develop\190625\AK7030-OTP\common.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;		None
  3370 ;; Auto vars:     Size  Location     Type
  3371 ;;		None
  3372 ;; Return value:  Size  Location     Type
  3373 ;;		None               void
  3374 ;; Registers used:
  3375 ;;		wreg, status,2, status,0, pclath, cstack
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 60/0
  3379 ;;		Unchanged: FFF9F/0
  3380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3381 ;;      Params:         0       0       0       0       0
  3382 ;;      Locals:         0       0       0       0       0
  3383 ;;      Temps:          0       0       0       0       0
  3384 ;;      Totals:         0       0       0       0       0
  3385 ;;Total ram usage:        0 bytes
  3386 ;; Hardware stack levels used:    1
  3387 ;; Hardware stack levels required when called:    3
  3388 ;; This function calls:
  3389 ;;		_getAD_ConvertFlag
  3390 ;;		_setAD_ConvertFlag
  3391 ;;		_AD_Sample
  3392 ;;		_adc_test_init
  3393 ;;		_adc_start
  3394 ;; This function is called by:
  3395 ;;		_main
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398  0500                     _process_AD_Converter_Value:	
  3399                           
  3400                           ;common.c: 252: if(getAD_ConvertFlag())
  3401                           
  3402                           ; Regs used in _process_AD_Converter_Value: [wreg+status,2+status,0+pclath+cstack]
  3403  0500  251E  118A         	fcall	_getAD_ConvertFlag
  3404  0502  3A00               	xorlw	0
  3405  0503  1903               	skipnz
  3406  0504  0008               	return
  3407                           
  3408                           ;common.c: 253: {
  3409                           ;common.c: 254: setAD_ConvertFlag(0);
  3410  0505  3000               	movlw	0
  3411  0506  2522  118A         	fcall	_setAD_ConvertFlag
  3412                           
  3413                           ;common.c: 255: AD_Sample();
  3414  0508  2525  118A         	fcall	_AD_Sample
  3415                           
  3416                           ;common.c: 256: if(4 == sampleChannelSelect)
  3417  050A  086F               	movf	_sampleChannelSelect,w
  3418  050B  3A04               	xorlw	4
  3419  050C  1D03               	skipz
  3420  050D  2D12               	goto	l4160
  3421                           
  3422                           ;common.c: 257: adc_test_init(4,3);
  3423  050E  3003               	movlw	3
  3424  050F  00A0               	movwf	?_adc_test_init
  3425  0510  3004               	movlw	4
  3426  0511  2D1B               	goto	L10
  3427  0512                     l4160:	
  3428                           
  3429                           ;common.c: 258: else if(1 == sampleChannelSelect)
  3430  0512  0B6F               	decfsz	_sampleChannelSelect,w
  3431  0513  2D18               	goto	l4164
  3432                           
  3433                           ;common.c: 259: adc_test_init(1,3);
  3434  0514  3003               	movlw	3
  3435  0515  00A0               	movwf	?_adc_test_init
  3436  0516  3001               	movlw	1
  3437  0517  2D1B               	goto	L10
  3438  0518                     l4164:	
  3439                           
  3440                           ;common.c: 260: else
  3441                           ;common.c: 261: adc_test_init(14,3);
  3442  0518  3003               	movlw	3
  3443  0519  00A0               	movwf	?_adc_test_init
  3444  051A  300E               	movlw	14
  3445  051B                     L10:	
  3446  051B  2542  118A         	fcall	_adc_test_init
  3447                           
  3448                           ;common.c: 263: adc_start();
  3449  051D  2D57               	ljmp	l3922
  3450  051E                     __end_of_process_AD_Converter_Value:	
  3451  051E                     __ptext747:	
  3452 ;; =============== function _setAD_ConvertFlag ends ============
  3453                           
  3454                           
  3455 ;; *************** function _getAD_ConvertFlag *****************
  3456 ;; Defined at:
  3457 ;;		line 200 in file "D:\develop\190625\AK7030-OTP\common.c"
  3458 ;; Parameters:    Size  Location     Type
  3459 ;;		None
  3460 ;; Auto vars:     Size  Location     Type
  3461 ;;		None
  3462 ;; Return value:  Size  Location     Type
  3463 ;;                  1    wreg      unsigned char 
  3464 ;; Registers used:
  3465 ;;		wreg
  3466 ;; Tracked objects:
  3467 ;;		On entry : 0/0
  3468 ;;		On exit  : 60/0
  3469 ;;		Unchanged: FFF9F/0
  3470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3471 ;;      Params:         0       0       0       0       0
  3472 ;;      Locals:         0       0       0       0       0
  3473 ;;      Temps:          0       0       0       0       0
  3474 ;;      Totals:         0       0       0       0       0
  3475 ;;Total ram usage:        0 bytes
  3476 ;; Hardware stack levels used:    1
  3477 ;; Hardware stack levels required when called:    2
  3478 ;; This function calls:
  3479 ;;		Nothing
  3480 ;; This function is called by:
  3481 ;;		_process_AD_Converter_Value
  3482 ;; This function uses a non-reentrant model
  3483 ;;
  3484  051E                     _getAD_ConvertFlag:	
  3485                           
  3486                           ;common.c: 201: return adc_convert_flag;
  3487                           
  3488                           ; Regs used in _getAD_ConvertFlag: [wreg]
  3489  051E  1283               	bcf	3,5	;RP0=0, select bank0
  3490  051F  1303               	bcf	3,6	;RP1=0, select bank0
  3491  0520  0849               	movf	_adc_convert_flag,w
  3492  0521  0008               	return
  3493  0522                     __end_of_getAD_ConvertFlag:	
  3494  0522                     __ptext746:	
  3495 ;; =============== function _AD_Sample ends ============
  3496                           
  3497                           
  3498 ;; *************** function _setAD_ConvertFlag *****************
  3499 ;; Defined at:
  3500 ;;		line 206 in file "D:\develop\190625\AK7030-OTP\common.c"
  3501 ;; Parameters:    Size  Location     Type
  3502 ;;  flag            1    wreg     unsigned char 
  3503 ;; Auto vars:     Size  Location     Type
  3504 ;;  flag            1    0[BANK0 ] unsigned char 
  3505 ;; Return value:  Size  Location     Type
  3506 ;;		None               void
  3507 ;; Registers used:
  3508 ;;		wreg
  3509 ;; Tracked objects:
  3510 ;;		On entry : 60/0
  3511 ;;		On exit  : 60/0
  3512 ;;		Unchanged: FFF9F/0
  3513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3514 ;;      Params:         0       0       0       0       0
  3515 ;;      Locals:         0       1       0       0       0
  3516 ;;      Temps:          0       0       0       0       0
  3517 ;;      Totals:         0       1       0       0       0
  3518 ;;Total ram usage:        1 bytes
  3519 ;; Hardware stack levels used:    1
  3520 ;; Hardware stack levels required when called:    2
  3521 ;; This function calls:
  3522 ;;		Nothing
  3523 ;; This function is called by:
  3524 ;;		_process_AD_Converter_Value
  3525 ;; This function uses a non-reentrant model
  3526 ;;
  3527  0522                     _setAD_ConvertFlag:	
  3528                           
  3529                           ; Regs used in _setAD_ConvertFlag: [wreg]
  3530                           ;setAD_ConvertFlag@flag stored from wreg
  3531  0522  00A0               	movwf	setAD_ConvertFlag@flag
  3532                           
  3533                           ;common.c: 207: adc_convert_flag = flag;
  3534  0523  00C9               	movwf	_adc_convert_flag
  3535  0524  0008               	return
  3536  0525                     __end_of_setAD_ConvertFlag:	
  3537  0525                     __ptext745:	
  3538 ;; =============== function _clearAllTimer ends ============
  3539                           
  3540                           
  3541 ;; *************** function _AD_Sample *****************
  3542 ;; Defined at:
  3543 ;;		line 277 in file "D:\develop\190625\AK7030-OTP\common.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;		None
  3546 ;; Auto vars:     Size  Location     Type
  3547 ;;		None
  3548 ;; Return value:  Size  Location     Type
  3549 ;;		None               void
  3550 ;; Registers used:
  3551 ;;		wreg, status,2, status,0
  3552 ;; Tracked objects:
  3553 ;;		On entry : 60/0
  3554 ;;		On exit  : 60/0
  3555 ;;		Unchanged: FFF9F/0
  3556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3557 ;;      Params:         0       0       0       0       0
  3558 ;;      Locals:         0       0       0       0       0
  3559 ;;      Temps:          0       0       0       0       0
  3560 ;;      Totals:         0       0       0       0       0
  3561 ;;Total ram usage:        0 bytes
  3562 ;; Hardware stack levels used:    1
  3563 ;; Hardware stack levels required when called:    2
  3564 ;; This function calls:
  3565 ;;		Nothing
  3566 ;; This function is called by:
  3567 ;;		_process_AD_Converter_Value
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570  0525                     _AD_Sample:	
  3571                           
  3572                           ;common.c: 278: if(sampleTimes < 12)
  3573                           
  3574                           ; Regs used in _AD_Sample: [wreg+status,2+status,0]
  3575  0525  300C               	movlw	12
  3576  0526  024A               	subwf	_sampleTimes,w
  3577  0527  1803               	skipnc
  3578  0528  0008               	return
  3579  0529  300C               	movlw	12
  3580                           
  3581                           ;common.c: 279: {
  3582                           ;common.c: 300: sampleTimes++;
  3583  052A  0ACA               	incf	_sampleTimes,f
  3584                           
  3585                           ;common.c: 302: if(sampleTimes >= 12)
  3586  052B  024A               	subwf	_sampleTimes,w
  3587  052C  1C03               	skipc
  3588  052D  0008               	return
  3589                           
  3590                           ;common.c: 303: {
  3591                           ;common.c: 304: sampleTimes = 0;
  3592  052E  01CA               	clrf	_sampleTimes
  3593                           
  3594                           ;common.c: 306: if(sampleChannelSelect == 14)
  3595  052F  086F               	movf	_sampleChannelSelect,w
  3596  0530  3A0E               	xorlw	14
  3597  0531  1D03               	skipz
  3598  0532  2D36               	goto	l4100
  3599                           
  3600                           ;common.c: 307: {
  3601                           ;common.c: 310: sampleChannelSelect = 1;
  3602  0533  01EF               	clrf	_sampleChannelSelect
  3603  0534  0AEF               	incf	_sampleChannelSelect,f
  3604                           
  3605                           ;common.c: 311: }
  3606  0535  0008               	return
  3607  0536                     l4100:	
  3608                           
  3609                           ;common.c: 312: else if(sampleChannelSelect == 4)
  3610  0536  086F               	movf	_sampleChannelSelect,w
  3611  0537  3A04               	xorlw	4
  3612  0538  1D03               	skipz
  3613  0539  2D3D               	goto	l4104
  3614  053A                     l4102:	
  3615                           
  3616                           ;common.c: 313: {
  3617                           ;common.c: 315: sampleChannelSelect = 14;
  3618  053A  300E               	movlw	14
  3619  053B  00EF               	movwf	_sampleChannelSelect
  3620                           
  3621                           ;common.c: 316: }
  3622  053C  0008               	return
  3623  053D                     l4104:	
  3624                           
  3625                           ;common.c: 317: else if(sampleChannelSelect == 1)
  3626  053D  0B6F               	decfsz	_sampleChannelSelect,w
  3627  053E  2D3A               	goto	l4102
  3628                           
  3629                           ;common.c: 318: {
  3630                           ;common.c: 320: sampleChannelSelect = 4;
  3631  053F  3004               	movlw	4
  3632  0540  00EF               	movwf	_sampleChannelSelect
  3633                           
  3634                           ;common.c: 321: }
  3635  0541  0008               	return
  3636  0542                     __end_of_AD_Sample:	
  3637  0542                     __ptext761:	
  3638 ;; =============== function _dac_init ends ============
  3639                           
  3640                           
  3641 ;; *************** function _adc_test_init *****************
  3642 ;; Defined at:
  3643 ;;		line 85 in file "D:\develop\190625\AK7030-OTP\periph.c"
  3644 ;; Parameters:    Size  Location     Type
  3645 ;;  channel         1    wreg     unsigned char 
  3646 ;;  ref             1    0[BANK0 ] unsigned char 
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;  channel         1    2[BANK0 ] unsigned char 
  3649 ;; Return value:  Size  Location     Type
  3650 ;;		None               void
  3651 ;; Registers used:
  3652 ;;		wreg, status,2, status,0
  3653 ;; Tracked objects:
  3654 ;;		On entry : 60/0
  3655 ;;		On exit  : 60/20
  3656 ;;		Unchanged: FFF9F/0
  3657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3658 ;;      Params:         0       1       0       0       0
  3659 ;;      Locals:         0       1       0       0       0
  3660 ;;      Temps:          0       1       0       0       0
  3661 ;;      Totals:         0       3       0       0       0
  3662 ;;Total ram usage:        3 bytes
  3663 ;; Hardware stack levels used:    1
  3664 ;; Hardware stack levels required when called:    2
  3665 ;; This function calls:
  3666 ;;		Nothing
  3667 ;; This function is called by:
  3668 ;;		_main
  3669 ;;		_process_AD_Converter_Value
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672  0542                     _adc_test_init:	
  3673                           
  3674                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  3675                           ;adc_test_init@channel stored from wreg
  3676  0542  00A2               	movwf	adc_test_init@channel
  3677                           
  3678                           ;periph.c: 86: ADCON0 = 0x00;
  3679  0543  019F               	clrf	31	;volatile
  3680                           
  3681                           ;periph.c: 87: ADCON0|=channel<<2;
  3682  0544  00A1               	movwf	??_adc_test_init
  3683  0545  1003               	clrc
  3684  0546  0DA1               	rlf	??_adc_test_init,f
  3685  0547  1003               	clrc
  3686  0548  0D21               	rlf	??_adc_test_init,w
  3687  0549  049F               	iorwf	31,f	;volatile
  3688                           
  3689                           ;periph.c: 88: ADCON1|=ref<<6;
  3690  054A  0820               	movf	adc_test_init@ref,w
  3691  054B  00A1               	movwf	??_adc_test_init
  3692  054C  0CA1               	rrf	??_adc_test_init,f
  3693  054D  0CA1               	rrf	??_adc_test_init,f
  3694  054E  0C21               	rrf	??_adc_test_init,w
  3695  054F  39C0               	andlw	192
  3696  0550  1683               	bsf	3,5	;RP0=1, select bank1
  3697  0551  049F               	iorwf	31,f	;volatile
  3698                           
  3699                           ;periph.c: 89: ADON=1;
  3700  0552  1283               	bcf	3,5	;RP0=0, select bank0
  3701  0553  141F               	bsf	31,0
  3702                           
  3703                           ;periph.c: 90: ADIE=1;
  3704  0554  1683               	bsf	3,5	;RP0=1, select bank1
  3705  0555  150D               	bsf	13,2
  3706  0556  0008               	return
  3707  0557                     __end_of_adc_test_init:	
  3708  0557                     __ptext757:	
  3709 ;; =============== function _isPermitSampleTime ends ============
  3710                           
  3711                           
  3712 ;; *************** function _adc_start *****************
  3713 ;; Defined at:
  3714 ;;		line 100 in file "D:\develop\190625\AK7030-OTP\periph.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;		None
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;		None
  3719 ;; Return value:  Size  Location     Type
  3720 ;;		None               void
  3721 ;; Registers used:
  3722 ;;		None
  3723 ;; Tracked objects:
  3724 ;;		On entry : 60/20
  3725 ;;		On exit  : 60/0
  3726 ;;		Unchanged: FFF9F/0
  3727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3728 ;;      Params:         0       0       0       0       0
  3729 ;;      Locals:         0       0       0       0       0
  3730 ;;      Temps:          0       0       0       0       0
  3731 ;;      Totals:         0       0       0       0       0
  3732 ;;Total ram usage:        0 bytes
  3733 ;; Hardware stack levels used:    1
  3734 ;; Hardware stack levels required when called:    2
  3735 ;; This function calls:
  3736 ;;		Nothing
  3737 ;; This function is called by:
  3738 ;;		_main
  3739 ;;		_process_AD_Converter_Value
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742  0557                     _adc_start:	
  3743  0557                     l3922:	
  3744                           ; Regs used in _adc_start: []
  3745                           
  3746                           
  3747                           ;periph.c: 101: GO=1;
  3748  0557  1283               	bcf	3,5	;RP0=0, select bank0
  3749  0558  149F               	bsf	31,1
  3750  0559  0008               	return
  3751  055A                     __end_of_adc_start:	
  3752                           
  3753                           	psect	text749
  3754  060C                     __ptext749:	
  3755 ;; =============== function _Filter ends ============
  3756                           
  3757                           
  3758 ;; *************** function _isFinishedThreeHoursTimer *****************
  3759 ;; Defined at:
  3760 ;;		line 416 in file "D:\develop\190625\AK7030-OTP\common.c"
  3761 ;; Parameters:    Size  Location     Type
  3762 ;;		None
  3763 ;; Auto vars:     Size  Location     Type
  3764 ;;		None
  3765 ;; Return value:  Size  Location     Type
  3766 ;;                  1    wreg      unsigned char 
  3767 ;; Registers used:
  3768 ;;		wreg, status,2, status,0
  3769 ;; Tracked objects:
  3770 ;;		On entry : 60/0
  3771 ;;		On exit  : 60/20
  3772 ;;		Unchanged: FFF9F/0
  3773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3774 ;;      Params:         0       0       0       0       0
  3775 ;;      Locals:         0       0       0       0       0
  3776 ;;      Temps:          0       0       0       0       0
  3777 ;;      Totals:         0       0       0       0       0
  3778 ;;Total ram usage:        0 bytes
  3779 ;; Hardware stack levels used:    1
  3780 ;; Hardware stack levels required when called:    2
  3781 ;; This function calls:
  3782 ;;		Nothing
  3783 ;; This function is called by:
  3784 ;;		_main
  3785 ;; This function uses a non-reentrant model
  3786 ;;
  3787  060C                     _isFinishedThreeHoursTimer:	
  3788                           
  3789                           ;common.c: 417: if(uiSmallTimer == 0)
  3790                           
  3791                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  3792  060C  1683               	bsf	3,5	;RP0=1, select bank1
  3793  060D  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  3794  060E  0422               	iorwf	_uiSmallTimer^(0+128),w
  3795  060F  1903               	btfsc	3,2
  3796                           
  3797                           ;common.c: 418: return 1;
  3798  0610  3401               	retlw	1
  3799                           
  3800                           ;common.c: 419: else
  3801                           ;common.c: 420: return 0;
  3802  0611  3400               	retlw	0
  3803  0612                     __end_of_isFinishedThreeHoursTimer:	
  3804                           
  3805                           	psect	text750
  3806  05B7                     __ptext750:	
  3807 ;; =============== function _isFinishedThreeHoursTimer ends ============
  3808                           
  3809                           
  3810 ;; *************** function _startThreeHoursTimer *****************
  3811 ;; Defined at:
  3812 ;;		line 382 in file "D:\develop\190625\AK7030-OTP\common.c"
  3813 ;; Parameters:    Size  Location     Type
  3814 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;		None
  3817 ;; Return value:  Size  Location     Type
  3818 ;;		None               void
  3819 ;; Registers used:
  3820 ;;		wreg, status,2, status,0
  3821 ;; Tracked objects:
  3822 ;;		On entry : 60/0
  3823 ;;		On exit  : 60/20
  3824 ;;		Unchanged: FFF9F/0
  3825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3826 ;;      Params:         0       2       0       0       0
  3827 ;;      Locals:         0       0       0       0       0
  3828 ;;      Temps:          0       0       0       0       0
  3829 ;;      Totals:         0       2       0       0       0
  3830 ;;Total ram usage:        2 bytes
  3831 ;; Hardware stack levels used:    1
  3832 ;; Hardware stack levels required when called:    2
  3833 ;; This function calls:
  3834 ;;		Nothing
  3835 ;; This function is called by:
  3836 ;;		_main
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839  05B7                     _startThreeHoursTimer:	
  3840                           
  3841                           ;common.c: 383: if(0 == uiSmallTimer)
  3842                           
  3843                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  3844  05B7  1683               	bsf	3,5	;RP0=1, select bank1
  3845  05B8  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  3846  05B9  0422               	iorwf	_uiSmallTimer^(0+128),w
  3847  05BA  1D03               	skipz
  3848  05BB  0008               	return
  3849                           
  3850                           ;common.c: 384: uiSmallTimer = uiSetTime;
  3851  05BC  1283               	bcf	3,5	;RP0=0, select bank0
  3852  05BD  0821               	movf	startThreeHoursTimer@uiSetTime+1,w
  3853  05BE  1683               	bsf	3,5	;RP0=1, select bank1
  3854  05BF  00A3               	movwf	(_uiSmallTimer+1)^(0+128)
  3855  05C0  1283               	bcf	3,5	;RP0=0, select bank0
  3856  05C1  0820               	movf	startThreeHoursTimer@uiSetTime,w
  3857  05C2  1683               	bsf	3,5	;RP0=1, select bank1
  3858  05C3  00A2               	movwf	_uiSmallTimer^(0+128)
  3859  05C4  0008               	return
  3860  05C5                     __end_of_startThreeHoursTimer:	
  3861                           
  3862                           	psect	text751
  3863  0612                     __ptext751:	
  3864 ;; =============== function _startThreeHoursTimer ends ============
  3865                           
  3866                           
  3867 ;; *************** function _isFinishedTwentySecondsTimer *****************
  3868 ;; Defined at:
  3869 ;;		line 399 in file "D:\develop\190625\AK7030-OTP\common.c"
  3870 ;; Parameters:    Size  Location     Type
  3871 ;;		None
  3872 ;; Auto vars:     Size  Location     Type
  3873 ;;		None
  3874 ;; Return value:  Size  Location     Type
  3875 ;;                  1    wreg      unsigned char 
  3876 ;; Registers used:
  3877 ;;		wreg, status,2, status,0
  3878 ;; Tracked objects:
  3879 ;;		On entry : 60/0
  3880 ;;		On exit  : 60/20
  3881 ;;		Unchanged: FFF9F/0
  3882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3883 ;;      Params:         0       0       0       0       0
  3884 ;;      Locals:         0       0       0       0       0
  3885 ;;      Temps:          0       0       0       0       0
  3886 ;;      Totals:         0       0       0       0       0
  3887 ;;Total ram usage:        0 bytes
  3888 ;; Hardware stack levels used:    1
  3889 ;; Hardware stack levels required when called:    2
  3890 ;; This function calls:
  3891 ;;		Nothing
  3892 ;; This function is called by:
  3893 ;;		_main
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896  0612                     _isFinishedTwentySecondsTimer:	
  3897                           
  3898                           ;common.c: 400: if(0 == uiTwentySecondsTimer)
  3899                           
  3900                           ; Regs used in _isFinishedTwentySecondsTimer: [wreg+status,2+status,0]
  3901  0612  1683               	bsf	3,5	;RP0=1, select bank1
  3902  0613  0825               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  3903  0614  0424               	iorwf	_uiTwentySecondsTimer^(0+128),w
  3904  0615  1903               	btfsc	3,2
  3905                           
  3906                           ;common.c: 401: return 1;
  3907  0616  3401               	retlw	1
  3908                           
  3909                           ;common.c: 402: else
  3910                           ;common.c: 403: return 0;
  3911  0617  3400               	retlw	0
  3912  0618                     __end_of_isFinishedTwentySecondsTimer:	
  3913                           
  3914                           	psect	text752
  3915  0624                     __ptext752:	
  3916 ;; =============== function _isFinishedTwentySecondsTimer ends ============
  3917                           
  3918                           
  3919 ;; *************** function _startTwentySecondsTimer *****************
  3920 ;; Defined at:
  3921 ;;		line 393 in file "D:\develop\190625\AK7030-OTP\common.c"
  3922 ;; Parameters:    Size  Location     Type
  3923 ;;		None
  3924 ;; Auto vars:     Size  Location     Type
  3925 ;;		None
  3926 ;; Return value:  Size  Location     Type
  3927 ;;		None               void
  3928 ;; Registers used:
  3929 ;;		wreg
  3930 ;; Tracked objects:
  3931 ;;		On entry : 60/0
  3932 ;;		On exit  : 60/20
  3933 ;;		Unchanged: FFF9F/0
  3934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3935 ;;      Params:         0       0       0       0       0
  3936 ;;      Locals:         0       0       0       0       0
  3937 ;;      Temps:          0       0       0       0       0
  3938 ;;      Totals:         0       0       0       0       0
  3939 ;;Total ram usage:        0 bytes
  3940 ;; Hardware stack levels used:    1
  3941 ;; Hardware stack levels required when called:    2
  3942 ;; This function calls:
  3943 ;;		Nothing
  3944 ;; This function is called by:
  3945 ;;		_main
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948  0624                     _startTwentySecondsTimer:	
  3949                           
  3950                           ;common.c: 394: uiTwentySecondsTimer = 20;
  3951                           
  3952                           ; Regs used in _startTwentySecondsTimer: [wreg]
  3953  0624  3014               	movlw	20
  3954  0625  1683               	bsf	3,5	;RP0=1, select bank1
  3955  0626  00A4               	movwf	_uiTwentySecondsTimer^(0+128)
  3956  0627  01A5               	clrf	(_uiTwentySecondsTimer+1)^(0+128)
  3957  0628  0008               	return
  3958  0629                     __end_of_startTwentySecondsTimer:	
  3959                           
  3960                           	psect	text753
  3961  0618                     __ptext753:	
  3962 ;; =============== function _startTwentySecondsTimer ends ============
  3963                           
  3964                           
  3965 ;; *************** function _isFinishedTwelveHoursTimer *****************
  3966 ;; Defined at:
  3967 ;;		line 408 in file "D:\develop\190625\AK7030-OTP\common.c"
  3968 ;; Parameters:    Size  Location     Type
  3969 ;;		None
  3970 ;; Auto vars:     Size  Location     Type
  3971 ;;		None
  3972 ;; Return value:  Size  Location     Type
  3973 ;;                  1    wreg      unsigned char 
  3974 ;; Registers used:
  3975 ;;		wreg, status,2, status,0
  3976 ;; Tracked objects:
  3977 ;;		On entry : 60/0
  3978 ;;		On exit  : 60/20
  3979 ;;		Unchanged: FFF9F/0
  3980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3981 ;;      Params:         0       0       0       0       0
  3982 ;;      Locals:         0       0       0       0       0
  3983 ;;      Temps:          0       0       0       0       0
  3984 ;;      Totals:         0       0       0       0       0
  3985 ;;Total ram usage:        0 bytes
  3986 ;; Hardware stack levels used:    1
  3987 ;; Hardware stack levels required when called:    2
  3988 ;; This function calls:
  3989 ;;		Nothing
  3990 ;; This function is called by:
  3991 ;;		_main
  3992 ;; This function uses a non-reentrant model
  3993 ;;
  3994  0618                     _isFinishedTwelveHoursTimer:	
  3995                           
  3996                           ;common.c: 409: if(uiBigTimer == 0)
  3997                           
  3998                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  3999  0618  1683               	bsf	3,5	;RP0=1, select bank1
  4000  0619  0821               	movf	(_uiBigTimer+1)^(0+128),w
  4001  061A  0420               	iorwf	_uiBigTimer^(0+128),w
  4002  061B  1903               	btfsc	3,2
  4003                           
  4004                           ;common.c: 410: return 1;
  4005  061C  3401               	retlw	1
  4006                           
  4007                           ;common.c: 411: else
  4008                           ;common.c: 412: return 0;
  4009  061D  3400               	retlw	0
  4010  061E                     __end_of_isFinishedTwelveHoursTimer:	
  4011                           
  4012                           	psect	text754
  4013  05C5                     __ptext754:	
  4014 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  4015                           
  4016                           
  4017 ;; *************** function _startTwelveHourTimer *****************
  4018 ;; Defined at:
  4019 ;;		line 354 in file "D:\develop\190625\AK7030-OTP\common.c"
  4020 ;; Parameters:    Size  Location     Type
  4021 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  4022 ;; Auto vars:     Size  Location     Type
  4023 ;;		None
  4024 ;; Return value:  Size  Location     Type
  4025 ;;		None               void
  4026 ;; Registers used:
  4027 ;;		wreg, status,2, status,0
  4028 ;; Tracked objects:
  4029 ;;		On entry : 60/0
  4030 ;;		On exit  : 60/20
  4031 ;;		Unchanged: FFF9F/0
  4032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4033 ;;      Params:         0       2       0       0       0
  4034 ;;      Locals:         0       0       0       0       0
  4035 ;;      Temps:          0       0       0       0       0
  4036 ;;      Totals:         0       2       0       0       0
  4037 ;;Total ram usage:        2 bytes
  4038 ;; Hardware stack levels used:    1
  4039 ;; Hardware stack levels required when called:    2
  4040 ;; This function calls:
  4041 ;;		Nothing
  4042 ;; This function is called by:
  4043 ;;		_main
  4044 ;; This function uses a non-reentrant model
  4045 ;;
  4046  05C5                     _startTwelveHourTimer:	
  4047                           
  4048                           ;common.c: 355: if(0 == uiBigTimer)
  4049                           
  4050                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  4051  05C5  1683               	bsf	3,5	;RP0=1, select bank1
  4052  05C6  0821               	movf	(_uiBigTimer+1)^(0+128),w
  4053  05C7  0420               	iorwf	_uiBigTimer^(0+128),w
  4054  05C8  1D03               	skipz
  4055  05C9  0008               	return
  4056                           
  4057                           ;common.c: 356: uiBigTimer = uiSetTime;
  4058  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  4059  05CB  0821               	movf	startTwelveHourTimer@uiSetTime+1,w
  4060  05CC  1683               	bsf	3,5	;RP0=1, select bank1
  4061  05CD  00A1               	movwf	(_uiBigTimer+1)^(0+128)
  4062  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  4063  05CF  0820               	movf	startTwelveHourTimer@uiSetTime,w
  4064  05D0  1683               	bsf	3,5	;RP0=1, select bank1
  4065  05D1  00A0               	movwf	_uiBigTimer^(0+128)
  4066  05D2  0008               	return
  4067  05D3                     __end_of_startTwelveHourTimer:	
  4068                           
  4069                           	psect	text755
  4070  0631                     __ptext755:	
  4071 ;; =============== function _startTwelveHourTimer ends ============
  4072                           
  4073                           
  4074 ;; *************** function _clrSampeTime *****************
  4075 ;; Defined at:
  4076 ;;		line 434 in file "D:\develop\190625\AK7030-OTP\common.c"
  4077 ;; Parameters:    Size  Location     Type
  4078 ;;		None
  4079 ;; Auto vars:     Size  Location     Type
  4080 ;;		None
  4081 ;; Return value:  Size  Location     Type
  4082 ;;		None               void
  4083 ;; Registers used:
  4084 ;;		status,2
  4085 ;; Tracked objects:
  4086 ;;		On entry : 60/20
  4087 ;;		On exit  : 60/20
  4088 ;;		Unchanged: FFF9F/0
  4089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4090 ;;      Params:         0       0       0       0       0
  4091 ;;      Locals:         0       0       0       0       0
  4092 ;;      Temps:          0       0       0       0       0
  4093 ;;      Totals:         0       0       0       0       0
  4094 ;;Total ram usage:        0 bytes
  4095 ;; Hardware stack levels used:    1
  4096 ;; Hardware stack levels required when called:    2
  4097 ;; This function calls:
  4098 ;;		Nothing
  4099 ;; This function is called by:
  4100 ;;		_main
  4101 ;; This function uses a non-reentrant model
  4102 ;;
  4103  0631                     _clrSampeTime:	
  4104                           
  4105                           ;common.c: 435: timer.timer10msStopWatch = 0;
  4106                           
  4107                           ; Regs used in _clrSampeTime: [status,2]
  4108  0631  01A7               	clrf	_timer^(0+128)
  4109  0632  0008               	return
  4110  0633                     __end_of_clrSampeTime:	
  4111                           
  4112                           	psect	text756
  4113  061E                     __ptext756:	
  4114 ;; =============== function _clrSampeTime ends ============
  4115                           
  4116                           
  4117 ;; *************** function _isPermitSampleTime *****************
  4118 ;; Defined at:
  4119 ;;		line 424 in file "D:\develop\190625\AK7030-OTP\common.c"
  4120 ;; Parameters:    Size  Location     Type
  4121 ;;		None
  4122 ;; Auto vars:     Size  Location     Type
  4123 ;;		None
  4124 ;; Return value:  Size  Location     Type
  4125 ;;                  1    wreg      unsigned char 
  4126 ;; Registers used:
  4127 ;;		wreg
  4128 ;; Tracked objects:
  4129 ;;		On entry : 60/0
  4130 ;;		On exit  : 60/20
  4131 ;;		Unchanged: FFF9F/0
  4132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4133 ;;      Params:         0       0       0       0       0
  4134 ;;      Locals:         0       0       0       0       0
  4135 ;;      Temps:          0       0       0       0       0
  4136 ;;      Totals:         0       0       0       0       0
  4137 ;;Total ram usage:        0 bytes
  4138 ;; Hardware stack levels used:    1
  4139 ;; Hardware stack levels required when called:    2
  4140 ;; This function calls:
  4141 ;;		Nothing
  4142 ;; This function is called by:
  4143 ;;		_main
  4144 ;; This function uses a non-reentrant model
  4145 ;;
  4146  061E                     _isPermitSampleTime:	
  4147                           
  4148                           ;common.c: 425: if(timer.timer10msStopWatch >= 10)
  4149                           
  4150                           ; Regs used in _isPermitSampleTime: [wreg]
  4151  061E  300A               	movlw	10
  4152  061F  1683               	bsf	3,5	;RP0=1, select bank1
  4153  0620  0227               	subwf	_timer^(0+128),w
  4154  0621  1803               	btfsc	3,0
  4155                           
  4156                           ;common.c: 426: {
  4157                           ;common.c: 427: return 1;
  4158  0622  3401               	retlw	1
  4159                           
  4160                           ;common.c: 429: else
  4161                           ;common.c: 430: return 0;
  4162  0623  3400               	retlw	0
  4163  0624                     __end_of_isPermitSampleTime:	
  4164                           
  4165                           	psect	text758
  4166  05FC                     __ptext758:	
  4167 ;; =============== function _adc_start ends ============
  4168                           
  4169                           
  4170 ;; *************** function _op2_init *****************
  4171 ;; Defined at:
  4172 ;;		line 45 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;		None
  4175 ;; Auto vars:     Size  Location     Type
  4176 ;;		None
  4177 ;; Return value:  Size  Location     Type
  4178 ;;		None               void
  4179 ;; Registers used:
  4180 ;;		wreg
  4181 ;; Tracked objects:
  4182 ;;		On entry : 17F/20
  4183 ;;		On exit  : 17F/20
  4184 ;;		Unchanged: FFE80/0
  4185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4186 ;;      Params:         0       0       0       0       0
  4187 ;;      Locals:         0       0       0       0       0
  4188 ;;      Temps:          0       0       0       0       0
  4189 ;;      Totals:         0       0       0       0       0
  4190 ;;Total ram usage:        0 bytes
  4191 ;; Hardware stack levels used:    1
  4192 ;; Hardware stack levels required when called:    2
  4193 ;; This function calls:
  4194 ;;		Nothing
  4195 ;; This function is called by:
  4196 ;;		_main
  4197 ;; This function uses a non-reentrant model
  4198 ;;
  4199  05FC                     _op2_init:	
  4200                           
  4201                           ;periph.c: 52: OP2CON1=0x10;
  4202                           
  4203                           ; Regs used in _op2_init: [wreg]
  4204  05FC  3010               	movlw	16
  4205  05FD  009C               	movwf	28	;volatile
  4206                           
  4207                           ;periph.c: 54: OP2CON2=0x10;
  4208  05FE  009D               	movwf	29	;volatile
  4209                           
  4210                           ;periph.c: 55: OP2CON0=0x80;
  4211  05FF  3080               	movlw	128
  4212  0600  009B               	movwf	27	;volatile
  4213                           
  4214                           ;periph.c: 58: TRISA7=0;
  4215  0601  1385               	bcf	5,7
  4216                           
  4217                           ;periph.c: 60: TRISB7 = 1;
  4218  0602  1786               	bsf	6,7
  4219  0603  0008               	return
  4220  0604                     __end_of_op2_init:	
  4221                           
  4222                           	psect	text759
  4223  05DF                     __ptext759:	
  4224 ;; =============== function _op2_init ends ============
  4225                           
  4226                           
  4227 ;; *************** function _op1_init *****************
  4228 ;; Defined at:
  4229 ;;		line 26 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4230 ;; Parameters:    Size  Location     Type
  4231 ;;		None
  4232 ;; Auto vars:     Size  Location     Type
  4233 ;;		None
  4234 ;; Return value:  Size  Location     Type
  4235 ;;		None               void
  4236 ;; Registers used:
  4237 ;;		wreg
  4238 ;; Tracked objects:
  4239 ;;		On entry : 17F/20
  4240 ;;		On exit  : 17F/20
  4241 ;;		Unchanged: FFE80/0
  4242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4243 ;;      Params:         0       0       0       0       0
  4244 ;;      Locals:         0       0       0       0       0
  4245 ;;      Temps:          0       0       0       0       0
  4246 ;;      Totals:         0       0       0       0       0
  4247 ;;Total ram usage:        0 bytes
  4248 ;; Hardware stack levels used:    1
  4249 ;; Hardware stack levels required when called:    2
  4250 ;; This function calls:
  4251 ;;		Nothing
  4252 ;; This function is called by:
  4253 ;;		_main
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256  05DF                     _op1_init:	
  4257                           
  4258                           ;periph.c: 33: OP1CON1=0x02;
  4259                           
  4260                           ; Regs used in _op1_init: [wreg]
  4261  05DF  3002               	movlw	2
  4262  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  4263  05E1  009C               	movwf	28	;volatile
  4264                           
  4265                           ;periph.c: 34: OP1CON2=0xA0;
  4266  05E2  30A0               	movlw	160
  4267  05E3  009D               	movwf	29	;volatile
  4268                           
  4269                           ;periph.c: 35: OP1CON0=0x80;
  4270  05E4  3080               	movlw	128
  4271  05E5  009B               	movwf	27	;volatile
  4272                           
  4273                           ;periph.c: 38: TRISB3=1;
  4274  05E6  1683               	bsf	3,5	;RP0=1, select bank1
  4275  05E7  1586               	bsf	6,3
  4276                           
  4277                           ;periph.c: 40: TRISB5=0;
  4278  05E8  1286               	bcf	6,5
  4279  05E9  0008               	return
  4280  05EA                     __end_of_op1_init:	
  4281                           
  4282                           	psect	text760
  4283  0629                     __ptext760:	
  4284 ;; =============== function _op1_init ends ============
  4285                           
  4286                           
  4287 ;; *************** function _dac_init *****************
  4288 ;; Defined at:
  4289 ;;		line 14 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;		None
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;		None
  4294 ;; Return value:  Size  Location     Type
  4295 ;;		None               void
  4296 ;; Registers used:
  4297 ;;		wreg
  4298 ;; Tracked objects:
  4299 ;;		On entry : 17F/20
  4300 ;;		On exit  : 17F/20
  4301 ;;		Unchanged: FFE80/0
  4302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4303 ;;      Params:         0       0       0       0       0
  4304 ;;      Locals:         0       0       0       0       0
  4305 ;;      Temps:          0       0       0       0       0
  4306 ;;      Totals:         0       0       0       0       0
  4307 ;;Total ram usage:        0 bytes
  4308 ;; Hardware stack levels used:    1
  4309 ;; Hardware stack levels required when called:    2
  4310 ;; This function calls:
  4311 ;;		Nothing
  4312 ;; This function is called by:
  4313 ;;		_main
  4314 ;; This function uses a non-reentrant model
  4315 ;;
  4316  0629                     _dac_init:	
  4317                           
  4318                           ;periph.c: 15: DACCON|=1;
  4319                           
  4320                           ; Regs used in _dac_init: [wreg]
  4321  0629  1407               	bsf	7,0	;volatile
  4322                           
  4323                           ;periph.c: 17: DACR0=0x0F;
  4324  062A  300F               	movlw	15
  4325  062B  0088               	movwf	8	;volatile
  4326                           
  4327                           ;periph.c: 18: DACCON|=(1)<<2;
  4328  062C  1507               	bsf	7,2	;volatile
  4329  062D  0008               	return
  4330  062E                     __end_of_dac_init:	
  4331                           
  4332                           	psect	text762
  4333  062E                     __ptext762:	
  4334 ;; =============== function _adc_test_init ends ============
  4335                           
  4336                           
  4337 ;; *************** function _timer1_interrupt_config *****************
  4338 ;; Defined at:
  4339 ;;		line 192 in file "D:\develop\190625\AK7030-OTP\common.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;		None
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;		None
  4344 ;; Return value:  Size  Location     Type
  4345 ;;		None               void
  4346 ;; Registers used:
  4347 ;;		None
  4348 ;; Tracked objects:
  4349 ;;		On entry : 17F/20
  4350 ;;		On exit  : 17F/20
  4351 ;;		Unchanged: FFE80/0
  4352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4353 ;;      Params:         0       0       0       0       0
  4354 ;;      Locals:         0       0       0       0       0
  4355 ;;      Temps:          0       0       0       0       0
  4356 ;;      Totals:         0       0       0       0       0
  4357 ;;Total ram usage:        0 bytes
  4358 ;; Hardware stack levels used:    1
  4359 ;; Hardware stack levels required when called:    2
  4360 ;; This function calls:
  4361 ;;		Nothing
  4362 ;; This function is called by:
  4363 ;;		_main
  4364 ;; This function uses a non-reentrant model
  4365 ;;
  4366  062E                     _timer1_interrupt_config:	
  4367                           
  4368                           ;common.c: 193: GIE = 1;
  4369                           
  4370                           ; Regs used in _timer1_interrupt_config: []
  4371  062E  178B               	bsf	11,7
  4372                           
  4373                           ;common.c: 194: PEIE = 1;
  4374  062F  170B               	bsf	11,6
  4375  0630  0008               	return
  4376  0631                     __end_of_timer1_interrupt_config:	
  4377                           
  4378                           	psect	text763
  4379  05EA                     __ptext763:	
  4380 ;; =============== function _timer1_interrupt_config ends ============
  4381                           
  4382                           
  4383 ;; *************** function _timer1_config *****************
  4384 ;; Defined at:
  4385 ;;		line 180 in file "D:\develop\190625\AK7030-OTP\common.c"
  4386 ;; Parameters:    Size  Location     Type
  4387 ;;		None
  4388 ;; Auto vars:     Size  Location     Type
  4389 ;;		None
  4390 ;; Return value:  Size  Location     Type
  4391 ;;		None               void
  4392 ;; Registers used:
  4393 ;;		wreg
  4394 ;; Tracked objects:
  4395 ;;		On entry : 17F/40
  4396 ;;		On exit  : 17F/20
  4397 ;;		Unchanged: FFE80/0
  4398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4399 ;;      Params:         0       0       0       0       0
  4400 ;;      Locals:         0       0       0       0       0
  4401 ;;      Temps:          0       0       0       0       0
  4402 ;;      Totals:         0       0       0       0       0
  4403 ;;Total ram usage:        0 bytes
  4404 ;; Hardware stack levels used:    1
  4405 ;; Hardware stack levels required when called:    2
  4406 ;; This function calls:
  4407 ;;		Nothing
  4408 ;; This function is called by:
  4409 ;;		_main
  4410 ;; This function uses a non-reentrant model
  4411 ;;
  4412  05EA                     _timer1_config:	
  4413                           
  4414                           ;common.c: 182: TMR1H=0xCF;
  4415                           
  4416                           ; Regs used in _timer1_config: [wreg]
  4417  05EA  30CF               	movlw	207
  4418  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  4419  05EC  008F               	movwf	15	;volatile
  4420                           
  4421                           ;common.c: 183: TMR1L=0x2C;
  4422  05ED  302C               	movlw	44
  4423  05EE  008E               	movwf	14	;volatile
  4424                           
  4425                           ;common.c: 184: T1CON=0xE1;
  4426  05EF  30E1               	movlw	225
  4427  05F0  0090               	movwf	16	;volatile
  4428                           
  4429                           ;common.c: 185: TMR1IE=1;
  4430  05F1  1683               	bsf	3,5	;RP0=1, select bank1
  4431  05F2  140C               	bsf	12,0
  4432  05F3  0008               	return
  4433  05F4                     __end_of_timer1_config:	
  4434                           
  4435                           	psect	text764
  4436  0604                     __ptext764:	
  4437 ;; =============== function _timer1_config ends ============
  4438                           
  4439                           
  4440 ;; *************** function _clock_config *****************
  4441 ;; Defined at:
  4442 ;;		line 172 in file "D:\develop\190625\AK7030-OTP\common.c"
  4443 ;; Parameters:    Size  Location     Type
  4444 ;;		None
  4445 ;; Auto vars:     Size  Location     Type
  4446 ;;		None
  4447 ;; Return value:  Size  Location     Type
  4448 ;;		None               void
  4449 ;; Registers used:
  4450 ;;		wreg, status,2
  4451 ;; Tracked objects:
  4452 ;;		On entry : 17F/20
  4453 ;;		On exit  : 17F/40
  4454 ;;		Unchanged: FFE80/0
  4455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4456 ;;      Params:         0       0       0       0       0
  4457 ;;      Locals:         0       0       0       0       0
  4458 ;;      Temps:          0       0       0       0       0
  4459 ;;      Totals:         0       0       0       0       0
  4460 ;;Total ram usage:        0 bytes
  4461 ;; Hardware stack levels used:    1
  4462 ;; Hardware stack levels required when called:    2
  4463 ;; This function calls:
  4464 ;;		Nothing
  4465 ;; This function is called by:
  4466 ;;		_main
  4467 ;; This function uses a non-reentrant model
  4468 ;;
  4469  0604                     _clock_config:	
  4470                           
  4471                           ;common.c: 174: CLKPR = 0x80;
  4472                           
  4473                           ; Regs used in _clock_config: [wreg+status,2]
  4474  0604  3080               	movlw	128
  4475  0605  1283               	bcf	3,5	;RP0=0, select bank2
  4476  0606  1703               	bsf	3,6	;RP1=1, select bank2
  4477  0607  0088               	movwf	8	;volatile
  4478                           
  4479                           ;common.c: 175: CLKPR = 0x00;
  4480  0608  0188               	clrf	8	;volatile
  4481  0609                     l1661:	
  4482                           ;common.c: 176: while(CLKPCE);
  4483                           
  4484  0609  1F88               	btfss	8,7
  4485  060A  0008               	return
  4486  060B  2E09               	goto	l1661
  4487  060C                     __end_of_clock_config:	
  4488                           
  4489                           	psect	text765
  4490  0576                     __ptext765:	
  4491 ;; =============== function _clock_config ends ============
  4492                           
  4493                           
  4494 ;; *************** function _initPin *****************
  4495 ;; Defined at:
  4496 ;;		line 105 in file "D:\develop\190625\AK7030-OTP\main.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;		None
  4499 ;; Auto vars:     Size  Location     Type
  4500 ;;		None
  4501 ;; Return value:  Size  Location     Type
  4502 ;;		None               void
  4503 ;; Registers used:
  4504 ;;		None
  4505 ;; Tracked objects:
  4506 ;;		On entry : 160/20
  4507 ;;		On exit  : 160/60
  4508 ;;		Unchanged: FFE9F/0
  4509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4510 ;;      Params:         0       0       0       0       0
  4511 ;;      Locals:         0       0       0       0       0
  4512 ;;      Temps:          0       0       0       0       0
  4513 ;;      Totals:         0       0       0       0       0
  4514 ;;Total ram usage:        0 bytes
  4515 ;; Hardware stack levels used:    1
  4516 ;; Hardware stack levels required when called:    2
  4517 ;; This function calls:
  4518 ;;		Nothing
  4519 ;; This function is called by:
  4520 ;;		_main
  4521 ;; This function uses a non-reentrant model
  4522 ;;
  4523  0576                     _initPin:	
  4524                           
  4525                           ;main.c: 106: PB6 = 1;
  4526                           
  4527                           ; Regs used in _initPin: []
  4528  0576  1283               	bcf	3,5	;RP0=0, select bank0
  4529  0577  1706               	bsf	6,6
  4530                           
  4531                           ;main.c: 107: PBOD6 = 1;
  4532  0578  1683               	bsf	3,5	;RP0=1, select bank3
  4533  0579  1703               	bsf	3,6	;RP1=1, select bank3
  4534  057A  1708               	bsf	8,6
  4535                           
  4536                           ;main.c: 111: PA0 = 0;
  4537  057B  1283               	bcf	3,5	;RP0=0, select bank0
  4538  057C  1303               	bcf	3,6	;RP1=0, select bank0
  4539  057D  1005               	bcf	5,0
  4540                           
  4541                           ;main.c: 112: PA1 = 0;
  4542  057E  1085               	bcf	5,1
  4543                           
  4544                           ;main.c: 113: PA2 = 0;
  4545  057F  1105               	bcf	5,2
  4546                           
  4547                           ;main.c: 114: PA3 = 0;
  4548  0580  1185               	bcf	5,3
  4549                           
  4550                           ;main.c: 115: PB0 = 0;
  4551  0581  1006               	bcf	6,0
  4552                           
  4553                           ;main.c: 116: PB1 = 1;
  4554  0582  1486               	bsf	6,1
  4555                           
  4556                           ;main.c: 117: PA6 = 0;
  4557  0583  1305               	bcf	5,6
  4558                           
  4559                           ;main.c: 118: PA7 = 0;
  4560  0584  1385               	bcf	5,7
  4561                           
  4562                           ;main.c: 119: PAOD7 = 0;
  4563  0585  1683               	bsf	3,5	;RP0=1, select bank3
  4564  0586  1703               	bsf	3,6	;RP1=1, select bank3
  4565  0587  1387               	bcf	7,7
  4566  0588  0008               	return
  4567  0589                     __end_of_initPin:	
  4568                           
  4569                           	psect	text769
  4570  036E                     __ptext769:	
  4571 ;; =============== function _clearTwelveHoursTimer ends ============
  4572                           
  4573                           
  4574 ;; *************** function _ISR *****************
  4575 ;; Defined at:
  4576 ;;		line 439 in file "D:\develop\190625\AK7030-OTP\common.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;		None
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;		None
  4581 ;; Return value:  Size  Location     Type
  4582 ;;		None               void
  4583 ;; Registers used:
  4584 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 60/0
  4588 ;;		Unchanged: FFE00/0
  4589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4590 ;;      Params:         0       0       0       0       0
  4591 ;;      Locals:         0       0       0       0       0
  4592 ;;      Temps:          4       0       0       0       0
  4593 ;;      Totals:         4       0       0       0       0
  4594 ;;Total ram usage:        4 bytes
  4595 ;; Hardware stack levels used:    1
  4596 ;; Hardware stack levels required when called:    1
  4597 ;; This function calls:
  4598 ;;		i1_setAD_ConvertFlag
  4599 ;;		_adc_get
  4600 ;;		_vPutSampleDataIntoTable
  4601 ;; This function is called by:
  4602 ;;		Interrupt level 1
  4603 ;; This function uses a non-reentrant model
  4604 ;;
  4605  036E                     _ISR:	
  4606                           
  4607                           ;common.c: 440: static unsigned char ucTimer1sCnt = 0;
  4608                           ;common.c: 442: if(TMR1IF == 1)
  4609  036E  1C0C               	btfss	12,0
  4610  036F  2B97               	goto	i1l4128
  4611                           
  4612                           ;common.c: 443: {
  4613                           ;common.c: 444: TMR1IF = 0 ;
  4614  0370  100C               	bcf	12,0
  4615                           
  4616                           ;common.c: 445: timer.timer10msStopWatch++;
  4617  0371  1683               	bsf	3,5	;RP0=1, select bank1
  4618  0372  3064               	movlw	100
  4619  0373  0AA7               	incf	_timer^(0+128),f
  4620                           
  4621                           ;common.c: 446: ucTimer1sCnt++;
  4622  0374  0AA6               	incf	ISR@ucTimer1sCnt^(0+128),f
  4623                           
  4624                           ;common.c: 448: if(ucTimer1sCnt >= 100)
  4625  0375  0226               	subwf	ISR@ucTimer1sCnt^(0+128),w
  4626  0376  1C03               	skipc
  4627  0377  2B97               	goto	i1l4128
  4628                           
  4629                           ;common.c: 449: {
  4630                           ;common.c: 450: ucTimer1sCnt = 0;
  4631  0378  01A6               	clrf	ISR@ucTimer1sCnt^(0+128)
  4632                           
  4633                           ;common.c: 451: if(uiBigTimer > 0)
  4634  0379  0821               	movf	(_uiBigTimer+1)^(0+128),w
  4635  037A  0420               	iorwf	_uiBigTimer^(0+128),w
  4636  037B  1903               	skipnz
  4637  037C  2B83               	goto	i1l1757
  4638                           
  4639                           ;common.c: 452: uiBigTimer--;
  4640  037D  3001               	movlw	1
  4641  037E  02A0               	subwf	_uiBigTimer^(0+128),f
  4642  037F  3000               	movlw	0
  4643  0380  1C03               	skipc
  4644  0381  03A1               	decf	(_uiBigTimer+1)^(0+128),f
  4645  0382  02A1               	subwf	(_uiBigTimer+1)^(0+128),f
  4646  0383                     i1l1757:	
  4647                           
  4648                           ;common.c: 454: if(uiSmallTimer)
  4649  0383  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  4650  0384  0422               	iorwf	_uiSmallTimer^(0+128),w
  4651  0385  1903               	skipnz
  4652  0386  2B8D               	goto	i1l1758
  4653                           
  4654                           ;common.c: 455: uiSmallTimer--;
  4655  0387  3001               	movlw	1
  4656  0388  02A2               	subwf	_uiSmallTimer^(0+128),f
  4657  0389  3000               	movlw	0
  4658  038A  1C03               	skipc
  4659  038B  03A3               	decf	(_uiSmallTimer+1)^(0+128),f
  4660  038C  02A3               	subwf	(_uiSmallTimer+1)^(0+128),f
  4661  038D                     i1l1758:	
  4662                           
  4663                           ;common.c: 457: if(uiTwentySecondsTimer)
  4664  038D  0825               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  4665  038E  0424               	iorwf	_uiTwentySecondsTimer^(0+128),w
  4666  038F  1903               	skipnz
  4667  0390  2B97               	goto	i1l4128
  4668                           
  4669                           ;common.c: 458: uiTwentySecondsTimer--;
  4670  0391  3001               	movlw	1
  4671  0392  02A4               	subwf	_uiTwentySecondsTimer^(0+128),f
  4672  0393  3000               	movlw	0
  4673  0394  1C03               	skipc
  4674  0395  03A5               	decf	(_uiTwentySecondsTimer+1)^(0+128),f
  4675  0396  02A5               	subwf	(_uiTwentySecondsTimer+1)^(0+128),f
  4676  0397                     i1l4128:	
  4677                           
  4678                           ;common.c: 459: }
  4679                           ;common.c: 460: }
  4680                           ;common.c: 462: if(ADIF)
  4681  0397  1283               	bcf	3,5	;RP0=0, select bank0
  4682  0398  1D0D               	btfss	13,2
  4683  0399  2BBE               	goto	i1l1765
  4684  039A  3001               	movlw	1
  4685                           
  4686                           ;common.c: 463: {
  4687                           ;common.c: 464: ADIF=0;
  4688  039B  110D               	bcf	13,2
  4689                           
  4690                           ;common.c: 465: setAD_ConvertFlag(1);
  4691  039C  2433  118A         	fcall	i1_setAD_ConvertFlag
  4692                           
  4693                           ;common.c: 467: if(sampleChannelSelect == 4)
  4694  039E  086F               	movf	_sampleChannelSelect,w
  4695  039F  3A04               	xorlw	4
  4696  03A0  1D03               	skipz
  4697  03A1  2BAA               	goto	i1l4138
  4698                           
  4699                           ;common.c: 468: {
  4700                           ;common.c: 471: vPutSampleDataIntoTable(adc_get(),4);
  4701  03A2  23CB  118A         	fcall	_adc_get
  4702  03A4  0871               	movf	?_adc_get+1,w
  4703  03A5  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4704  03A6  0870               	movf	?_adc_get,w
  4705  03A7  00F4               	movwf	?_vPutSampleDataIntoTable
  4706  03A8  3004               	movlw	4
  4707  03A9  2BBC               	goto	L12
  4708  03AA                     i1l4138:	
  4709                           ;common.c: 475: }
  4710                           
  4711                           
  4712                           ;common.c: 476: else if(sampleChannelSelect == 1)
  4713  03AA  0B6F               	decfsz	_sampleChannelSelect,w
  4714  03AB  2BB5               	goto	i1l4142
  4715                           
  4716                           ;common.c: 477: {
  4717                           ;common.c: 479: vPutSampleDataIntoTable(adc_get(),1);
  4718  03AC  23CB  118A         	fcall	_adc_get
  4719  03AE  0871               	movf	?_adc_get+1,w
  4720  03AF  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4721  03B0  0870               	movf	?_adc_get,w
  4722  03B1  00F4               	movwf	?_vPutSampleDataIntoTable
  4723  03B2  01F6               	clrf	?_vPutSampleDataIntoTable+2
  4724  03B3  0AF6               	incf	?_vPutSampleDataIntoTable+2,f
  4725  03B4  2BBD               	goto	L13
  4726  03B5                     i1l4142:	
  4727                           ;common.c: 484: }
  4728                           
  4729                           
  4730                           ;common.c: 485: else
  4731                           ;common.c: 486: {
  4732                           ;common.c: 490: vPutSampleDataIntoTable(adc_get(),14);
  4733  03B5  23CB  118A         	fcall	_adc_get
  4734  03B7  0871               	movf	?_adc_get+1,w
  4735  03B8  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4736  03B9  0870               	movf	?_adc_get,w
  4737  03BA  00F4               	movwf	?_vPutSampleDataIntoTable
  4738  03BB  300E               	movlw	14
  4739  03BC                     L12:	
  4740  03BC  00F6               	movwf	?_vPutSampleDataIntoTable+2
  4741  03BD                     L13:	
  4742  03BD  23D6               	fcall	_vPutSampleDataIntoTable
  4743  03BE                     i1l1765:	
  4744  03BE  087C               	movf	??_ISR+3,w
  4745  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  4746  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  4747  03C1  00FF               	movwf	127
  4748  03C2  087B               	movf	??_ISR+2,w
  4749  03C3  008A               	movwf	10
  4750  03C4  087A               	movf	??_ISR+1,w
  4751  03C5  0084               	movwf	4
  4752  03C6  0E79               	swapf	??_ISR^(0+-128),w
  4753  03C7  0083               	movwf	3
  4754  03C8  0EFE               	swapf	126,f
  4755  03C9  0E7E               	swapf	126,w
  4756  03CA  0009               	retfie
  4757  03CB                     __end_of_ISR:	
  4758  03CB                     __ptext771:	
  4759 ;; =============== function i1_setAD_ConvertFlag ends ============
  4760                           
  4761                           
  4762 ;; *************** function _adc_get *****************
  4763 ;; Defined at:
  4764 ;;		line 105 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4765 ;; Parameters:    Size  Location     Type
  4766 ;;		None
  4767 ;; Auto vars:     Size  Location     Type
  4768 ;;  val             2    2[COMMON] unsigned int 
  4769 ;; Return value:  Size  Location     Type
  4770 ;;                  2    0[COMMON] unsigned int 
  4771 ;; Registers used:
  4772 ;;		wreg
  4773 ;; Tracked objects:
  4774 ;;		On entry : 60/0
  4775 ;;		On exit  : 60/20
  4776 ;;		Unchanged: FFF9F/0
  4777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4778 ;;      Params:         2       0       0       0       0
  4779 ;;      Locals:         2       0       0       0       0
  4780 ;;      Temps:          0       0       0       0       0
  4781 ;;      Totals:         4       0       0       0       0
  4782 ;;Total ram usage:        4 bytes
  4783 ;; Hardware stack levels used:    1
  4784 ;; This function calls:
  4785 ;;		Nothing
  4786 ;; This function is called by:
  4787 ;;		_ISR
  4788 ;; This function uses a non-reentrant model
  4789 ;;
  4790  03CB                     _adc_get:	
  4791                           
  4792                           ;periph.c: 106: unsigned int val;
  4793                           ;periph.c: 107: val = (ADRESH<<8) | ADRESL;
  4794                           
  4795                           ; Regs used in _adc_get: [wreg]
  4796  03CB  081E               	movf	30,w	;volatile
  4797  03CC  00F3               	movwf	adc_get@val+1
  4798  03CD  01F2               	clrf	adc_get@val
  4799  03CE  1683               	bsf	3,5	;RP0=1, select bank1
  4800  03CF  081E               	movf	30,w	;volatile
  4801  03D0  04F2               	iorwf	adc_get@val,f
  4802                           
  4803                           ;periph.c: 108: return val;
  4804  03D1  0873               	movf	adc_get@val+1,w
  4805  03D2  00F1               	movwf	?_adc_get+1
  4806  03D3  0872               	movf	adc_get@val,w
  4807  03D4  00F0               	movwf	?_adc_get
  4808  03D5  0008               	return
  4809  03D6                     __end_of_adc_get:	
  4810  03D6                     __ptext772:	
  4811 ;; =============== function _adc_get ends ============
  4812                           
  4813                           
  4814 ;; *************** function _vPutSampleDataIntoTable *****************
  4815 ;; Defined at:
  4816 ;;		line 97 in file "D:\develop\190625\AK7030-OTP\common.c"
  4817 ;; Parameters:    Size  Location     Type
  4818 ;;  uiSampleData    2    4[COMMON] unsigned int 
  4819 ;;  channel         1    6[COMMON] unsigned char 
  4820 ;; Auto vars:     Size  Location     Type
  4821 ;;  i               2    7[COMMON] int 
  4822 ;; Return value:  Size  Location     Type
  4823 ;;		None               void
  4824 ;; Registers used:
  4825 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4826 ;; Tracked objects:
  4827 ;;		On entry : 60/20
  4828 ;;		On exit  : 0/0
  4829 ;;		Unchanged: FFE00/0
  4830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4831 ;;      Params:         3       0       0       0       0
  4832 ;;      Locals:         2       0       0       0       0
  4833 ;;      Temps:          0       0       0       0       0
  4834 ;;      Totals:         5       0       0       0       0
  4835 ;;Total ram usage:        5 bytes
  4836 ;; Hardware stack levels used:    1
  4837 ;; This function calls:
  4838 ;;		Nothing
  4839 ;; This function is called by:
  4840 ;;		_ISR
  4841 ;; This function uses a non-reentrant model
  4842 ;;
  4843  03D6                     _vPutSampleDataIntoTable:	
  4844                           
  4845                           ;common.c: 99: static unsigned char ucChannelFirstLength = 0;
  4846                           ;common.c: 101: static unsigned char ucChannelFourthLength = 0;
  4847                           ;common.c: 103: static unsigned char ucChannelFourteenthLength = 0;
  4848                           ;common.c: 105: if(channel == 1)
  4849                           
  4850                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1]
  4851  03D6  0B76               	decfsz	vPutSampleDataIntoTable@channel,w
  4852  03D7  2BE8               	goto	i1l4046
  4853                           
  4854                           ;common.c: 106: {
  4855                           ;common.c: 107: if(ucChannelFirstLength < 12)
  4856  03D8  300C               	movlw	12
  4857  03D9  027D               	subwf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4858  03DA  1803               	skipnc
  4859  03DB  2BE2               	goto	i1l4042
  4860                           
  4861                           ;common.c: 108: {
  4862                           ;common.c: 109: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  4863  03DC  1003               	clrc
  4864  03DD  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4865  03DE  3EA8               	addlw	_uiSampleChannelFirst& (0+255)
  4866  03DF  2436               	fcall	PL2	;call to abstracted procedure
  4867                           
  4868                           ;common.c: 111: ucChannelFirstLength++;
  4869  03E0  0AFD               	incf	vPutSampleDataIntoTable@ucChannelFirstLength,f
  4870                           
  4871                           ;common.c: 112: }
  4872  03E1  0008               	return
  4873  03E2                     i1l4042:	
  4874                           
  4875                           ;common.c: 113: else
  4876                           ;common.c: 114: {
  4877                           ;common.c: 115: ucChannelFirstLength = 0;
  4878  03E2  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  4879                           
  4880                           ;common.c: 117: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  4881  03E3  1003               	clrc
  4882  03E4  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4883  03E5  3EA8               	addlw	_uiSampleChannelFirst& (0+255)
  4884  03E6  2436               	fcall	PL2	;call to abstracted procedure
  4885  03E7  0008               	return
  4886  03E8                     i1l4046:	
  4887                           
  4888                           ;common.c: 120: else if(channel == 4)
  4889  03E8  0876               	movf	vPutSampleDataIntoTable@channel,w
  4890  03E9  3A04               	xorlw	4
  4891  03EA  1D03               	skipz
  4892  03EB  2BFD               	goto	i1l4058
  4893                           
  4894                           ;common.c: 121: {
  4895                           ;common.c: 122: if(ucChannelFourthLength < 12)
  4896  03EC  300C               	movlw	12
  4897  03ED  1283               	bcf	3,5	;RP0=0, select bank0
  4898  03EE  026E               	subwf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4899  03EF  1803               	skipnc
  4900  03F0  2BF7               	goto	i1l4054
  4901                           
  4902                           ;common.c: 123: {
  4903                           ;common.c: 124: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  4904  03F1  1003               	clrc
  4905  03F2  0D6E               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4906  03F3  3ED8               	addlw	_uiSampleChannelFourth& (0+255)
  4907  03F4  2436               	fcall	PL2	;call to abstracted procedure
  4908                           
  4909                           ;common.c: 126: ucChannelFourthLength++;
  4910  03F5  0AEE               	incf	vPutSampleDataIntoTable@ucChannelFourthLength,f
  4911                           
  4912                           ;common.c: 127: }
  4913  03F6  0008               	return
  4914  03F7                     i1l4054:	
  4915                           
  4916                           ;common.c: 128: else
  4917                           ;common.c: 129: {
  4918                           ;common.c: 130: ucChannelFourthLength = 0;
  4919  03F7  01EE               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  4920                           
  4921                           ;common.c: 132: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  4922  03F8  1003               	clrc
  4923  03F9  0D6E               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4924  03FA  3ED8               	addlw	_uiSampleChannelFourth& (0+255)
  4925  03FB  2436               	fcall	PL2	;call to abstracted procedure
  4926  03FC  0008               	return
  4927  03FD                     i1l4058:	
  4928                           
  4929                           ;common.c: 135: else if(channel == 14)
  4930  03FD  0876               	movf	vPutSampleDataIntoTable@channel,w
  4931  03FE  3A0E               	xorlw	14
  4932  03FF  1D03               	skipz
  4933  0400  2C12               	goto	i1l4070
  4934                           
  4935                           ;common.c: 136: {
  4936                           ;common.c: 137: if(ucChannelFourteenthLength < 12)
  4937  0401  300C               	movlw	12
  4938  0402  1283               	bcf	3,5	;RP0=0, select bank0
  4939  0403  026D               	subwf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4940  0404  1803               	skipnc
  4941  0405  2C0C               	goto	i1l4066
  4942                           
  4943                           ;common.c: 138: {
  4944                           ;common.c: 139: uiSampleChannelFourteenth[ucChannelFourteenthLength] = uiSampleData;
  4945  0406  1003               	clrc
  4946  0407  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4947  0408  3EC0               	addlw	_uiSampleChannelFourteenth& (0+255)
  4948  0409  2436               	fcall	PL2	;call to abstracted procedure
  4949                           
  4950                           ;common.c: 141: ucChannelFourteenthLength++;
  4951  040A  0AED               	incf	vPutSampleDataIntoTable@ucChannelFourteenthLength,f
  4952                           
  4953                           ;common.c: 142: }
  4954  040B  0008               	return
  4955  040C                     i1l4066:	
  4956                           
  4957                           ;common.c: 143: else
  4958                           ;common.c: 144: {
  4959                           ;common.c: 145: ucChannelFourteenthLength = 0;
  4960  040C  01ED               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4961                           
  4962                           ;common.c: 147: uiSampleChannelFourth[ucChannelFourteenthLength] = uiSampleData;
  4963  040D  1003               	clrc
  4964  040E  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4965  040F  3ED8               	addlw	_uiSampleChannelFourth& (0+255)
  4966  0410  2436               	fcall	PL2	;call to abstracted procedure
  4967  0411  0008               	return
  4968  0412                     i1l4070:	
  4969                           
  4970                           ;common.c: 150: else
  4971                           ;common.c: 151: {
  4972                           ;common.c: 152: ucChannelFirstLength = 0;
  4973  0412  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  4974                           
  4975                           ;common.c: 154: ucChannelFourthLength = 0;
  4976  0413  1283               	bcf	3,5	;RP0=0, select bank0
  4977  0414  01EE               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  4978                           
  4979                           ;common.c: 156: ucChannelFourteenthLength = 0;
  4980  0415  01ED               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4981                           
  4982                           ;common.c: 158: for(int i = 0;i < 12; i++)
  4983  0416  01F7               	clrf	vPutSampleDataIntoTable@i
  4984  0417  01F8               	clrf	vPutSampleDataIntoTable@i+1
  4985  0418                     i1l4076:	
  4986                           
  4987                           ;common.c: 159: {
  4988                           ;common.c: 160: uiSampleChannelFirst[i] = 0;
  4989  0418  1003               	clrc
  4990  0419  0D77               	rlf	vPutSampleDataIntoTable@i,w
  4991  041A  3EA8               	addlw	_uiSampleChannelFirst& (0+255)
  4992  041B  0084               	movwf	4
  4993  041C  1383               	bcf	3,7	;select IRP bank1
  4994  041D  0180               	clrf	0
  4995                           
  4996                           ;common.c: 162: uiSampleChannelFourth[i] = 0;
  4997  041E  243E  118A         	fcall	PL5	;call to abstracted procedure
  4998                           
  4999                           ;common.c: 164: uiSampleChannelFourth[i] = 0;
  5000  0420  243E  118A         	fcall	PL5	;call to abstracted procedure
  5001  0422  0A84               	incf	4,f
  5002  0423  0180               	clrf	0
  5003  0424  0AF7               	incf	vPutSampleDataIntoTable@i,f
  5004  0425  1903               	skipnz
  5005  0426  0AF8               	incf	vPutSampleDataIntoTable@i+1,f
  5006  0427  0878               	movf	vPutSampleDataIntoTable@i+1,w
  5007  0428  3A80               	xorlw	128
  5008  0429  00FF               	movwf	127
  5009  042A  3080               	movlw	128
  5010  042B  027F               	subwf	127,w
  5011  042C  1D03               	skipz
  5012  042D  2C30               	goto	u116_25
  5013  042E  300C               	movlw	12
  5014  042F  0277               	subwf	vPutSampleDataIntoTable@i,w
  5015  0430                     u116_25:	
  5016  0430  1803               	btfsc	3,0
  5017  0431  0008               	return
  5018  0432  2C18               	goto	i1l4076
  5019  0433                     __end_of_vPutSampleDataIntoTable:	
  5020  0433                     __ptext770:	
  5021 ;; =============== function _ISR ends ============
  5022                           
  5023                           
  5024 ;; *************** function i1_setAD_ConvertFlag *****************
  5025 ;; Defined at:
  5026 ;;		line 206 in file "D:\develop\190625\AK7030-OTP\common.c"
  5027 ;; Parameters:    Size  Location     Type
  5028 ;;  setAD_Conver    1    wreg     unsigned char 
  5029 ;; Auto vars:     Size  Location     Type
  5030 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  5031 ;; Return value:  Size  Location     Type
  5032 ;;		None               void
  5033 ;; Registers used:
  5034 ;;		wreg
  5035 ;; Tracked objects:
  5036 ;;		On entry : 60/0
  5037 ;;		On exit  : 60/0
  5038 ;;		Unchanged: FFF9F/0
  5039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5040 ;;      Params:         0       0       0       0       0
  5041 ;;      Locals:         1       0       0       0       0
  5042 ;;      Temps:          0       0       0       0       0
  5043 ;;      Totals:         1       0       0       0       0
  5044 ;;Total ram usage:        1 bytes
  5045 ;; Hardware stack levels used:    1
  5046 ;; This function calls:
  5047 ;;		Nothing
  5048 ;; This function is called by:
  5049 ;;		_ISR
  5050 ;; This function uses a non-reentrant model
  5051 ;;
  5052  0433                     i1_setAD_ConvertFlag:	
  5053                           
  5054                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  5055                           ;i1setAD_ConvertFlag@flag stored from wreg
  5056  0433  00F0               	movwf	i1setAD_ConvertFlag@flag
  5057                           
  5058                           ;common.c: 207: adc_convert_flag = flag;
  5059  0434  00C9               	movwf	_adc_convert_flag
  5060  0435  0008               	return
  5061  0436                     __end_ofi1_setAD_ConvertFlag:	
  5062  0436                     PL2:	
  5063  0436  0084               	movwf	4
  5064  0437  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  5065  0438  1383               	bcf	3,7	;select IRP bank1
  5066  0439  0080               	movwf	0
  5067  043A  0A84               	incf	4,f
  5068  043B  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  5069  043C  0080               	movwf	0
  5070  043D  0008               	return
  5071  043E                     PL5:	
  5072  043E  0A84               	incf	4,f
  5073  043F  0180               	clrf	0
  5074  0440  1003               	clrc
  5075  0441  0D77               	rlf	vPutSampleDataIntoTable@i,w
  5076  0442  3ED8               	addlw	_uiSampleChannelFourth& (0+255)
  5077  0443  0084               	movwf	4
  5078  0444  0180               	clrf	0
  5079  0445  0008               	return
  5080                           
  5081                           	psect	intentry
  5082  0004                     __pintentry:	
  5083                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5084                           
  5085  0004                     interrupt_function:	
  5086  007E                     saved_w	set	btemp
  5087  0004  00FE               	movwf	btemp
  5088  0005  0E03               	swapf	3,w
  5089  0006  00F9               	movwf	??_ISR
  5090  0007  0804               	movf	4,w
  5091  0008  00FA               	movwf	??_ISR+1
  5092  0009  080A               	movf	10,w
  5093  000A  00FB               	movwf	??_ISR+2
  5094  000B  1283               	bcf	3,5	;RP0=0, select bank0
  5095  000C  1303               	bcf	3,6	;RP1=0, select bank0
  5096  000D  087F               	movf	btemp+1,w
  5097  000E  00FC               	movwf	??_ISR+3
  5098  000F  118A  2B6E         	ljmp	_ISR
  5099                           
  5100                           	psect	text773
  5101  0000                     __ptext773:	
  5102 ;; =============== function _vPutSampleDataIntoTable ends ============
  5103                           
  5104  007E                     btemp	set	126	;btemp
  5105  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Tue Jun 25 23:14:29 2019

                                  ??_clock_config 0020                                                 pc 0002  
                                              _GO 00F9                                                fsr 0004  
                        ?_timer1_interrupt_config 0070                                               l710 006C  
                                             l718 0085                                               l680 0000  
                                             l824 018E                                               l913 028C  
                                             l754 0116                                               l683 0000  
                                             l677 0000                                               l848 01C2  
                                             l769 0118                                               l948 0303  
                                             l869 01F5                                               l797 0154  
                                             _PA0 0028                                               _PA1 0029  
                                             _GIE 005F                                               _PB0 0030  
                                             _PA2 002A                                               _PB1 0031  
                                             _PA3 002B                                               _PA6 002E  
                                             _PA7 002F                                               _PB6 0036  
                                             _ISR 036E                                               fsr0 0004  
                                             indf 0000                            ??_startThreeHoursTimer 0022  
                                            S4970 059B                                              S4972 05A9  
                                            S4974 05D3                                              ?_ISR 0070  
                              __size_of_AD_Sample 001D                            ?_getAdOriginalCh1Value 0047  
                                            l2410 0000                                              l2402 0000  
                                            l4010 04C1                                              l4012 0481  
                                            l4004 0480                                              l4100 0536  
                                            l4030 0000                                              l4014 04C3  
                                            l4102 053A                                              l1720 0000  
                                            l2416 0000                                              l4024 0000  
                                            l4016 0000                                              l4104 053D  
                                            l4200 0000                                              l1714 0000  
                                            l4026 0000                                              l4106 0000  
                                            l4210 0000                                              l4202 0000  
                                            l1635 0000                                              l4300 00D9  
                                            l4220 0000                                              l4204 0000  
                                            l1717 0000                                              l1661 0609  
                                            l1670 0000                                              l1750 0000  
                                            l4150 0566                                              l4310 00EF  
                                            l4302 00DC                                              l4222 0057  
                                            l4214 0000                                              l4206 0040  
                                            l1727 0000                                              l1664 0000  
                                            l4160 0512                                              l4152 0000  
                                            l4400 0160                                              l4304 00DF  
                                            l4240 007B                                              l4232 0069  
                                            l4208 0000                                              l1673 0000  
                                            l4082 0000                                              l4162 0000  
                                            l1682 0000                                              l4410 0166  
                                            l4330 0120                                              l4322 0114  
                                            l4314 00FC                                              l4306 00E3  
                                            l4242 0000                                              l4234 006D  
                                            l4226 0063                                              l4218 0054  
                                            l1667 0000                                              l2396 0000  
                                            l1676 0000                                              l4092 0000  
                                            l4164 0518                                              l4156 0000  
                                            l4172 0000                                              l4180 0000  
                                            l4420 016C                                              l4324 0119  
                                            l4260 0000                                              l4252 008C  
                                            l4228 0064                                              l1685 0000  
                                            l4086 0000                                              l4182 0000  
                                            l4430 0172                                              l4334 0122  
                                            l4326 011B                                              l4318 0108  
                                            l4270 0000                                              l4262 009C  
                                            l4254 0000                                              l4246 0000  
                                            l4238 0000                                              l4190 0000  
                                            l2399 0000                                              l1679 0000  
                                            l4096 0000                                              l4088 0000  
                                            l4168 0000                                              l4176 0000  
                                            l4600 0000                                              l4512 01CC  
                                            l4504 01B6                                              l4440 017B  
                                            l4336 0124                                              l4280 00B6  
                                            l4272 00A5                                              l4264 0000  
                                            l4256 008F                                              l4248 0000  
                                            l4192 0000                                              l4184 0000  
                                            l4602 0248                                              l4506 01C5  
                                            l4450 0182                                              l4346 012A  
                                            l4282 00B7                                              l4266 009E  
                                            l4194 0000                                              l4186 0000  
                                            l3900 0000                                              l4700 0000  
                                            l4620 0000                                              l4612 025D  
                                            l4516 01CE                                              l4508 01C7  
                                            l4452 0190                                              l4380 0146  
                                            l4356 0130                                              l4292 00C6  
                                            l4276 0000                                              l4196 0000  
                                            l4188 0000                                              l3902 0000  
                                            l3910 0000                                              l4702 02EA  
                                            l4630 0000                                              l4614 0264  
                                            l4606 024E                                              l4550 01F9  
                                            l4518 01D0                                              l4462 0199  
                                            l4454 0192                                              l4390 0157  
                                            l4366 0136                                              l4294 00CA  
                                            l4286 0000                                              l4198 0000  
                                            l3904 0000                                              l3912 0000  
                                            l3920 0000                                              l4720 031F  
                                            l4640 0000                                              l4624 0000  
                                            l4608 0000                                              l4560 0202  
                                            l4552 01FB                                              l4528 01D6  
                                            l4464 019B                                              l4376 0140  
                                            l4296 0000                                              l4288 00BE  
                                            l3906 0000                                              l3914 0000  
                                            l3922 0557                                              l4722 0320  
                                            l4714 02F8                                              l4706 02F0  
                                            l4650 02A1                                              l4642 0000  
                                            l4626 0000                                              l4618 026A  
                                            l4562 0204                                              l4538 01DD  
                                            l4474 01A1                                              l4458 0197  
                                            l4394 015C                                              l4386 0148  
                                            l4634 027A                                              l4298 00D3  
                                            l3908 0000                                              l3916 0000  
                                            l3924 0000                                              l4740 0000  
                                            l4732 0334                                              l4716 0313  
                                            l4660 02AC                                              l4644 0000  
                                            l4636 0000                                              l4628 0275  
                                            l4572 020A                                              l4556 0200  
                                            l4548 01E4                                              l4484 01A7  
                                            l4388 0155                                              l3918 0000  
                                            l3942 0000                                              l4742 0000  
                                            l4734 0335                                              l4726 0000  
                                            l4670 0000                                              l4654 02A7  
                                            l4646 0000                                              l4638 0000  
                                            l4582 0211                                              l4494 01AF  
                                            l4398 015E                                              l3880 0573  
                                            l3936 0000                                              l4744 0000  
                                            l4728 0328                                              l4680 0000  
                                            l4672 02C2                                              l4656 0000  
                                            l4648 0000                                              l4752 0352  
                                            l3882 0000                                              l3890 0000  
                                            l3938 0000                                              l3954 0000  
                                            l4738 0000                                              l4682 0000  
                                            l4690 02D7                                              l4674 0000  
                                            l4666 02B5                                              l4658 0000  
                                            l4594 0000                                              l4586 021F  
                                            l3876 0000                                              l3884 0000  
                                            l3892 0000                                              l3956 0000  
                                            l3972 0000                                              l4748 0347  
                                            l4684 0000                                              l4676 02C4  
                                            l4596 023D                                              l4588 0230  
                                            l3878 0000                                              l3886 0000  
                                            l3894 0000                                              l3990 0464  
                                            l4686 0000                                              _ADIE 046A  
                                            l3888 0000                                              l3896 0000  
                                            l3968 0000                                              l3992 0000  
                                            l3984 0000                                              l4696 0000  
                                            l4688 0000                                              _ADIF 006A  
                                            l3898 0000                                              l3994 0000  
                                            l4698 02E8                                              l3996 0000  
                                            _ADON 00F8                     startTwelveHourTimer@uiSetTime 0020  
                                            u1055 047B                                              u1065 04A4  
                                            u1075 048E                                              _PEIE 005E  
                                            _main 0013                                              btemp 007E  
                         _clearTwentySecondsTimer 0573                                              start 0011  
                         ?_getAdOriginalCh14Value 0047                                 main@ucTimerDelay1 005A  
                               main@ucTimerDelay2 005B                                 main@ucTimerDelay3 005C  
                               main@ucTimerDelay4 005D                                             ??_ISR 0079  
                      __end_of_isPermitSampleTime 0624                               _sampleChannelSelect 006F  
                          ??_getAdOriginaCh4Value 0049                                             ?_main 0070  
                                           _DACR0 0088                                             _CLKPR 0108  
                                           _T1CON 0010                                   __end_of_adc_get 03D6  
                                           _PAOD7 0C3F                                             _PBOD6 0C46  
                                           _TMR1H 000F                                             _TMR1L 000E  
                           setAD_ConvertFlag@flag 0020                           _vPutSampleDataIntoTable 03D6  
                                 __end_of_initPin 0589                                             _timer 00A7  
                                           pclath 000A                                             status 0003  
                                           wtemp0 007E                    __end_of_getAdOriginalCh14Value 045B  
                   __size_of_startTwelveHourTimer 000E                              __end_of_clrSampeTime 0633  
                           __end_of_clearAllTimer 056B                                      __end_of_main 036E  
                          __size_of_adc_test_init 0015                                 __end_of_AD_Sample 0542  
                              main@ucTimerSeond1s 0068                                            ??_main 0049  
                            _clearPinPortAndTimer 055A                                            _ADCON0 001F  
                                          _ADCON1 009F                              __end_of_clock_config 060C  
                                          _DACCON 0087                                            _ADRESH 001E  
                                          _ADRESL 009E                                            _CLKPCE 0847  
                                          i1l4110 0000                                            i1l4040 0000  
                                          i1l4120 0000                                            i1l4042 03E2  
                                          i1l4034 0000                                            i1l4114 0000  
                                          i1l2419 0000                                            i1l4052 0000  
                                          i1l4044 0000                                            i1l4036 0000  
                                          i1l4140 0000                                            i1l4132 0000  
                                          i1l4116 0000                                            i1l4070 0412  
                                          i1l4054 03F7                                            i1l4046 03E8  
                                          i1l4142 03B5                                            i1l4134 0000  
                                          i1l4080 0000                                            i1l4064 0000  
                                          i1l4056 0000                                            i1l4144 0000  
                                          i1l4128 0397                                            i1l4066 040C  
                                          i1l4058 03FD                                            i1l4138 03AA  
                                          i1l4076 0418                                            i1l4068 0000  
                                          i1l1676 0000                                            i1l4148 0000  
                                          i1l1765 03BE                                            i1l1757 0383  
                                          i1l4078 0000                                            i1l1758 038D  
                                          u116_25 0430                                  __end_of_dac_init 062E  
                       ??_clearTwentySecondsTimer 0020                                            _TMR1IE 0460  
                                          _TMR1IF 0060                                 _getAD_ConvertFlag 051E  
                               _setAD_ConvertFlag 0522                                            _TRISA0 0428  
                                          _TRISA1 0429                                            _TRISB0 0430  
                                          _TRISA2 042A                                            _TRISB1 0431  
                                          _TRISA3 042B                                            _TRISB2 0432  
                                          _TRISB3 0433                                            _TRISB4 0434  
                                          _TRISA6 042E                                            _TRISB5 0435  
                                          _TRISA7 042F                                            _TRISB6 0436  
                                          _TRISB7 0437                                     main@ucTimer1s 0056  
                              ?_getAD_ConvertFlag 0070                                            _Filter 045B  
                              ?_setAD_ConvertFlag 0070                                  __end_of_op1_init 05EA  
                                __end_of_op2_init 0604                       ??_isFinishedThreeHoursTimer 0020  
                   __size_of_clearThreeHoursTimer 0004                                         ??_adc_get 0072  
                             ??_getAD_ConvertFlag 0020                               ??_setAD_ConvertFlag 0020  
                                          clrloop 05F5                                  Filter@filter_buf 0026  
                                Filter@filter_sum 0040                                         ??_initPin 0020  
                       ??_vPutSampleDataIntoTable 0077                             ?_clearPinPortAndTimer 0070  
                                          saved_w 007E                           ??_clearTwelveHoursTimer 0020  
                     ?_process_AD_Converter_Value 0070                                     _adc_test_init 0542  
                __size_of_startTwentySecondsTimer 0005                         __end_of_getAD_ConvertFlag 0522  
                       __end_of_setAD_ConvertFlag 0525                                __size_of_adc_start 0003  
                             main@ucTimerDelayP5s 005E                                    __pcstackCOMMON 0070  
                                    __pidataBANK0 0000                   __end_of_clearTwentySecondsTimer 0576  
                            _uiSampleChannelFirst 00A8                    vPutSampleDataIntoTable@channel 0076  
                             main@ucTimerRightP5s 0067                         _isFinishedThreeHoursTimer 060C  
                         ??_getAdOriginalCh1Value 0049                             __end_of_timer1_config 05F4  
                                  ?_adc_test_init 0020                               main@ucTimerPowerLed 0066  
     vPutSampleDataIntoTable@ucChannelFirstLength 007D                  __size_of_timer1_interrupt_config 0003  
                           __size_of_clrSampeTime 0002                                        __pbssBANK0 0049  
                                      __pbssBANK1 00A0                      __size_ofi1_setAD_ConvertFlag 0003  
                                      adc_get@val 0072                   __end_of_vPutSampleDataIntoTable 0433  
                                         ?_Filter 0020                                        __pmaintext 0013  
                                      __pintentry 0004                               main@enumInteralStep 004D  
                                       ?_dac_init 0070                            ??_clearPinPortAndTimer 0020  
                           __size_of_clock_config 0008                                           _OP1CON0 001B  
                                         _OP1CON1 001C                                           _OP1CON2 001D  
                                         _OP2CON0 009B                                           _OP2CON1 009C  
                                         _OP2CON2 009D                                      _clrSampeTime 0631  
                               __end_of_adc_start 055A                              _uiTwentySecondsTimer 00A4  
                                       ?_op1_init 0070                                         ?_op2_init 0070  
                              _isPermitSampleTime 061E                                           Filter@i 0046  
                                         Filter@j 0045                     __size_of_startThreeHoursTimer 000E  
                      __size_of_getAD_ConvertFlag 0004                        __size_of_setAD_ConvertFlag 0003  
                                  main@ucTimer20s 0057                                    main@ucTimerP3s 0062  
                                  main@ucTimerP5s 0063                               ?_isPermitSampleTime 0070  
                                 __size_of_Filter 008F                                        _uiBigTimer 00A0  
                                    _clock_config 0604                                           _adc_get 03CB  
            __end_of_isFinishedTwentySecondsTimer 0618             __size_of_isFinishedTwentySecondsTimer 0006  
                    _isFinishedTwentySecondsTimer 0612                              ??_isPermitSampleTime 0020  
                    __end_of_startTwelveHourTimer 05D3                                        ??_dac_init 0020  
                                       _AD_Sample 0525                                      __size_of_ISR 005D  
                                         _initPin 0576                     __size_of_getAdOriginaCh4Value 0007  
                                 ??_adc_test_init 0021                                        ??_op1_init 0020  
                                      ??_op2_init 0020                           _startTwentySecondsTimer 0624  
                            end_of_initialization 0598                                 Filter@filter_temp 003E  
                                main@ucLoaderStep 0051                                        ?_AD_Sample 0070  
                   ?_isFinishedTwentySecondsTimer 0070                              main@enumMainLoopStep 004E  
                              main@ucChannel4Type 0050                      ??_isFinishedTwelveHoursTimer 0020  
                                       Filter@cir 0043                                  _adc_convert_flag 0049  
                          __size_of_clearAllTimer 0005                      __end_of_clearThreeHoursTimer 0573  
                          main@ucTimerADC1ZeroP5s 0058                    __size_of_clearTwelveHoursTimer 0004  
                         _timer1_interrupt_config 062E                     __end_of_clearTwelveHoursTimer 056F  
              __size_of_isFinishedThreeHoursTimer 0006                                  main@ucTimerX1P5s 0069  
                                main@ucTimerX2P5s 006A                            main@ucTimerZeroPoint3s 006B  
                          main@ucTimerZeroPoint5s 006C                                  main@ucTimerDelay 0059  
                                  __end_of_Filter 04EA                                   main@ucADC4_Step 004F  
             __size_of_isFinishedTwelveHoursTimer 0006                          vPutSampleDataIntoTable@i 0077  
                             i1_setAD_ConvertFlag 0433                         ??_startTwentySecondsTimer 0020  
                             start_initialization 0589                                       __end_of_ISR 03CB  
                            main@ucTimerLessX1P5s 0060                              main@ucTimerLessX2P5s 0061  
                           _uiSampleChannelFourth 00D8                          ?_clearTwentySecondsTimer 0070  
                  __size_of_getAdOriginalCh1Value 0007                     __end_of_getAdOriginalCh1Value 0454  
                        ??_getAdOriginalCh14Value 0049                              ?i1_setAD_ConvertFlag 0070  
                            _startTwelveHourTimer 05C5                 __end_of_isFinishedThreeHoursTimer 0612  
                              main@enumBranchStep 004C                                          ??_Filter 0022  
                                   _clearAllTimer 0566                                       __pdataBANK0 006F  
                        ?_vPutSampleDataIntoTable 0074                                       ??_AD_Sample 0020  
                       ??_timer1_interrupt_config 0020                                       __pbssCOMMON 007D  
                               __size_of_dac_init 0005                                     __pcstackBANK0 0020  
                  ??_isFinishedTwentySecondsTimer 0020                                         _adc_start 0557  
                               __size_of_op1_init 000B                                 __size_of_op2_init 0008  
                           ??i1_setAD_ConvertFlag 0070                             ?_startTwelveHourTimer 0020  
                 __end_of_startTwentySecondsTimer 0629                                    ?_clearAllTimer 0070  
                          __size_of_timer1_config 000A                              _clearThreeHoursTimer 056F  
                    __end_of_startThreeHoursTimer 05C5                                         __ptext740 0446  
                                       __ptext741 044D                                         __ptext750 05B7  
                                       __ptext742 0454                                         __ptext751 0612  
                                       __ptext743 0500                                         __ptext760 0629  
                                       __ptext752 0624                                         __ptext744 0566  
                                       __ptext761 0542                                         __ptext753 0618  
                                       __ptext745 0525                                         __ptext770 0433  
                                       __ptext762 062E                                         __ptext754 05C5  
                                       __ptext746 0522                                         __ptext771 03CB  
                                       __ptext763 05EA                                         __ptext755 0631  
                                       __ptext747 051E                                         __ptext739 055A  
                                       __ptext772 03D6                                         __ptext764 0604  
                                       __ptext756 061E                                         __ptext748 045B  
                                       __ptext773 0000                                         __ptext765 0576  
                                       __ptext757 0557                                         __ptext749 060C  
                                       __ptext766 0573                                         __ptext758 05FC  
                                       __ptext767 056F                                         __ptext759 05DF  
                                       __ptext768 056B                                         __ptext769 036E  
                                        ?_adc_get 0070                                         __pswtext1 059B  
                                       __pswtext2 05A9                                         __pswtext3 05D3  
              __end_of_isFinishedTwelveHoursTimer 061E                        _isFinishedTwelveHoursTimer 0618  
                                 ISR@ucTimer1sCnt 00A6                                          ?_initPin 0070  
                   __size_of_clearPinPortAndTimer 000C                         _uiSampleChannelFourteenth 00C0  
                                      ?_adc_start 0070                   __size_of_getAdOriginalCh14Value 0007  
                               interrupt_function 0004                      __end_of_getAdOriginaCh4Value 044D  
                 __end_of_timer1_interrupt_config 0631                            main@ucTimerPA6DelayP1s 0064  
                      main@ucTimerLessADC1ZeroP5s 005F                            main@ucTimerPB6DelayP1s 0065  
                           ?_clearThreeHoursTimer 0070                              adc_test_init@channel 0022  
             vPutSampleDataIntoTable@uiSampleData 0074      vPutSampleDataIntoTable@ucChannelFourthLength 006E  
                     __size_of_isPermitSampleTime 0006                                      _uiSmallTimer 00A2  
                           __end_of_adc_test_init 0557                                     _timer1_config 05EA  
                    ??_process_AD_Converter_Value 0023                            ??_startTwelveHourTimer 0022  
                                 ??_clearAllTimer 0020                            _getAdOriginalCh14Value 0454  
                                __size_of_adc_get 000B               __size_of_process_AD_Converter_Value 001E  
                                        _dac_init 0629  vPutSampleDataIntoTable@ucChannelFourteenthLength 006D  
                                __size_of_initPin 0013                                  main@cTimer1s_818 004B  
                                  Filter@tmpValue 0042                                    ?_timer1_config 0070  
                                        _op1_init 05DF                                          _op2_init 05FC  
                                     ??_adc_start 0020                              _startThreeHoursTimer 05B7  
                           _clearTwelveHoursTimer 056B                                     __size_of_main 035B  
                                        clear_ram 05F4                            ??_clearThreeHoursTimer 0020  
                __size_of_clearTwentySecondsTimer 0003                                     ?_clrSampeTime 0070  
                            _getAdOriginaCh4Value 0446                                       _sampleTimes 004A  
                           ?_startThreeHoursTimer 0020                  __size_of_vPutSampleDataIntoTable 005D  
                                        intlevel1 0000                             _getAdOriginalCh1Value 044D  
                      ?_isFinishedThreeHoursTimer 0070                                 main@ucLoaderStep1 0052  
                               main@ucLoaderStep2 0053                                 main@ucLoaderStep3 0054  
                               main@ucLoaderStep4 0055                                     ?_clock_config 0070  
                        ?_startTwentySecondsTimer 0070                     startThreeHoursTimer@uiSetTime 0020  
                         i1setAD_ConvertFlag@flag 0070                                    ??_clrSampeTime 0020  
                     ?_isFinishedTwelveHoursTimer 0070                             ?_getAdOriginaCh4Value 0047  
                                 ??_timer1_config 0020                       __end_ofi1_setAD_ConvertFlag 0436  
              __end_of_process_AD_Converter_Value 051E                        _process_AD_Converter_Value 0500  
                          ?_clearTwelveHoursTimer 0070                                  adc_test_init@ref 0020  
                    __end_of_clearPinPortAndTimer 0566  
