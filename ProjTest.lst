

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Tue Aug 13 12:23:31 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,delta=2
    16                           	psect	swtext1,local,class=CONST,delta=2
    17                           	psect	swtext2,local,class=CONST,delta=2
    18                           	psect	swtext3,local,class=CONST,delta=2
    19                           	psect	swtext4,local,class=CONST,delta=2
    20                           	psect	text830,local,class=CODE,delta=2
    21                           	psect	text831,local,class=CODE,delta=2
    22                           	psect	text834,local,class=CODE,delta=2
    23                           	psect	text840,local,class=CODE,delta=2
    24                           	psect	text841,local,class=CODE,delta=2
    25                           	psect	text842,local,class=CODE,delta=2
    26                           	psect	text843,local,class=CODE,delta=2
    27                           	psect	text844,local,class=CODE,delta=2
    28                           	psect	text845,local,class=CODE,delta=2
    29                           	psect	text846,local,class=CODE,delta=2
    30                           	psect	text847,local,class=CODE,delta=2
    31                           	psect	text849,local,class=CODE,delta=2
    32                           	psect	text850,local,class=CODE,delta=2
    33                           	psect	text851,local,class=CODE,delta=2
    34                           	psect	text853,local,class=CODE,delta=2
    35                           	psect	text854,local,class=CODE,delta=2
    36                           	psect	text855,local,class=CODE,delta=2
    37                           	psect	text856,local,class=CODE,delta=2
    38                           	psect	text857,local,class=CODE,delta=2
    39                           	psect	text858,local,class=CODE,delta=2
    40                           	psect	text859,local,class=CODE,delta=2
    41                           	psect	text860,local,class=CODE,delta=2
    42                           	psect	text861,local,class=CODE,delta=2
    43                           	psect	text862,local,class=CODE,delta=2
    44                           	psect	text863,local,class=CODE,delta=2
    45                           	psect	text867,local,class=CODE,delta=2
    46                           	psect	intentry,global,class=CODE,delta=2
    47                           	psect	text871,local,class=CODE,delta=2
    48                           	psect	pa_nodes,global,class=CODE,delta=2
    49                           	dabs	1,0x7E,2
    50  000A                     	;#
    51                           
    52                           	psect	config
    53  2000  2FFF               	dw	12287	;#
    54  2001  3FDE               	dw	16350	;#
    55  2002  3FF8               	dw	16376	;#
    56                           
    57                           	psect	idataBANK0
    58  0000                     __pidataBANK0:	
    59  001F                     _ADCON0	set	31
    60  001E                     _ADRESH	set	30
    61  001B                     _OP1CON0	set	27
    62  001C                     _OP1CON1	set	28
    63  001D                     _OP1CON2	set	29
    64  0010                     _T1CON	set	16
    65  000F                     _TMR1H	set	15
    66  000E                     _TMR1L	set	14
    67  006A                     _ADIF	set	106
    68  00F8                     _ADON	set	248
    69  005F                     _GIE	set	95
    70  00F9                     _GO	set	249
    71  0028                     _PA0	set	40
    72  0029                     _PA1	set	41
    73  002A                     _PA2	set	42
    74  002B                     _PA3	set	43
    75  002E                     _PA6	set	46
    76  0030                     _PB0	set	48
    77  0031                     _PB1	set	49
    78  0036                     _PB6	set	54
    79  0037                     _PB7	set	55
    80  005E                     _PEIE	set	94
    81  0060                     _TMR1IF	set	96
    82  009F                     _ADCON1	set	159
    83  009E                     _ADRESL	set	158
    84  0087                     _DACCON	set	135
    85  0088                     _DACR0	set	136
    86  009B                     _OP2CON0	set	155
    87  009C                     _OP2CON1	set	156
    88  009D                     _OP2CON2	set	157
    89  046A                     _ADIE	set	1130
    90  0460                     _TMR1IE	set	1120
    91  0428                     _TRISA0	set	1064
    92  0429                     _TRISA1	set	1065
    93  042A                     _TRISA2	set	1066
    94  042B                     _TRISA3	set	1067
    95  042E                     _TRISA6	set	1070
    96  042F                     _TRISA7	set	1071
    97  0430                     _TRISB0	set	1072
    98  0431                     _TRISB1	set	1073
    99  0432                     _TRISB2	set	1074
   100  0433                     _TRISB3	set	1075
   101  0434                     _TRISB4	set	1076
   102  0435                     _TRISB5	set	1077
   103  0436                     _TRISB6	set	1078
   104  0437                     _TRISB7	set	1079
   105  0108                     _CLKPR	set	264
   106  0847                     _CLKPCE	set	2119
   107  0C46                     _PBOD6	set	3142
   108  0C47                     _PBOD7	set	3143
   109                           
   110                           	psect	cinit
   111  06FC                     start_initialization:	
   112  06FC  3048               	movlw	low __pbssBANK0
   113                           
   114                           ; Clear objects allocated to COMMON
   115  06FD  01FD               	clrf	__pbssCOMMON& (0+127)
   116                           
   117                           ; Clear objects allocated to BANK0
   118  06FE  1383               	bcf	3,7	;select IRP bank0
   119  06FF  0084               	movwf	4
   120  0700  306E               	movlw	low (__pbssBANK0+38)
   121  0701  118A  27D4  118A   	fcall	clear_ram
   122                           
   123                           ; Clear objects allocated to BANK1
   124  0704  30A0               	movlw	low __pbssBANK1
   125  0705  0084               	movwf	4
   126  0706  30E8               	movlw	low (__pbssBANK1+72)
   127  0707  118A  27D4  118A   	fcall	clear_ram
   128  070A  3090               	movlw	low __pbssBANK3
   129                           
   130                           ; Clear objects allocated to BANK3
   131  070B  1783               	bsf	3,7	;select IRP bank2
   132  070C  0084               	movwf	4
   133  070D  30A8               	movlw	low (__pbssBANK3+24)
   134  070E  118A  27D4         	fcall	clear_ram
   135                           
   136                           ;initializer for _sampleChannelSelect
   137  0710  300E               	movlw	14
   138  0711  00EE               	movwf	__pdataBANK0& (0+127)
   139  0712                     end_of_initialization:	
   140                           ;End of C runtime variable initialization code
   141                           
   142  0712  0183               	clrf	3
   143  0713  118A  2813         	ljmp	_main	;jump to C main() function
   144                           
   145                           	psect	bssCOMMON
   146  007D                     __pbssCOMMON:	
   147  007D                     vPutSampleDataIntoTable@ucChannelFirstLength:	
   148  007D                     	ds	1
   149                           
   150                           	psect	bssBANK0
   151  0048                     __pbssBANK0:	
   152  0048                     main@uiOldValue:	
   153  0048                     	ds	2
   154  004A                     _bBigTimerStartFlag:	
   155  004A                     	ds	1
   156  004B                     _bSmallTimerStartFlag:	
   157  004B                     	ds	1
   158  004C                     _bTwentySecStartFlag:	
   159  004C                     	ds	1
   160  004D                     _sampleTimes:	
   161  004D                     	ds	1
   162  004E                     main@bCheckTweHour:	
   163  004E                     	ds	1
   164  004F                     main@bInitFlag:	
   165  004F                     	ds	1
   166  0050                     main@enumMainLoopStep:	
   167  0050                     	ds	1
   168  0051                     main@ucADC4_Step:	
   169  0051                     	ds	1
   170  0052                     main@ucChannel4Type:	
   171  0052                     	ds	1
   172  0053                     main@ucCheckTimerP2sLess:	
   173  0053                     	ds	1
   174  0054                     main@ucDelayPrefix4TimerP5s:	
   175  0054                     	ds	1
   176  0055                     main@ucDelayPrefix6TimerP2s:	
   177  0055                     	ds	1
   178  0056                     main@ucLoaderStep:	
   179  0056                     	ds	1
   180  0057                     main@ucLoaderStep1:	
   181  0057                     	ds	1
   182  0058                     main@ucLoaderStep2:	
   183  0058                     	ds	1
   184  0059                     main@ucLoaderStep3:	
   185  0059                     	ds	1
   186  005A                     main@ucLoaderStep4:	
   187  005A                     	ds	1
   188  005B                     main@ucTimerADC1ZeroP5s:	
   189  005B                     	ds	1
   190  005C                     main@ucTimerDelay:	
   191  005C                     	ds	1
   192  005D                     main@ucTimerDelay1:	
   193  005D                     	ds	1
   194  005E                     main@ucTimerDelay2:	
   195  005E                     	ds	1
   196  005F                     main@ucTimerDelay3:	
   197  005F                     	ds	1
   198  0060                     main@ucTimerDelay4:	
   199  0060                     	ds	1
   200  0061                     main@ucTimerDelayP2sLess:	
   201  0061                     	ds	1
   202  0062                     main@ucTimerDelayP2sMore:	
   203  0062                     	ds	1
   204  0063                     main@ucTimerForDACR0_CNT1:	
   205  0063                     	ds	1
   206  0064                     main@ucTimerForDACR0_CNT1_f:	
   207  0064                     	ds	1
   208  0065                     main@ucTimerForDACR0_CNT2:	
   209  0065                     	ds	1
   210  0066                     main@ucTimerForDACR0_CNT2_f:	
   211  0066                     	ds	1
   212  0067                     main@ucTimerLessADC1ZeroP5s:	
   213  0067                     	ds	1
   214  0068                     main@ucTimerP5s:	
   215  0068                     	ds	1
   216  0069                     main@ucTimerRightP5s:	
   217  0069                     	ds	1
   218  006A                     main@ucTimerZeroPoint3s:	
   219  006A                     	ds	1
   220  006B                     main@ucTimerZeroPoint5s:	
   221  006B                     	ds	1
   222  006C                     vPutSampleDataIntoTable@ucChannelFourteenthLength:	
   223  006C                     	ds	1
   224  006D                     vPutSampleDataIntoTable@ucChannelFourthLength:	
   225  006D                     	ds	1
   226                           
   227                           	psect	dataBANK0
   228  006E                     __pdataBANK0:	
   229  006E                     _sampleChannelSelect:	
   230  006E                     	ds	1
   231                           
   232                           	psect	bssBANK1
   233  00A0                     __pbssBANK1:	
   234  00A0                     _uiBigTimer:	
   235  00A0                     	ds	2
   236  00A2                     _uiSmallTimer:	
   237  00A2                     	ds	2
   238  00A4                     _uiTwentySecondsTimer:	
   239  00A4                     	ds	2
   240  00A6                     main@uiMaxValue:	
   241  00A6                     	ds	2
   242  00A8                     main@uiMinValue:	
   243  00A8                     	ds	2
   244  00AA                     ISR@ucTimer1sCnt:	
   245  00AA                     	ds	1
   246  00AB                     _adc_convert_flag:	
   247  00AB                     	ds	1
   248  00AC                     _timer:	
   249  00AC                     	ds	1
   250  00AD                     main@enumBranchStep:	
   251  00AD                     	ds	1
   252  00AE                     main@enumInteralStep:	
   253  00AE                     	ds	1
   254  00AF                     main@ucCheckTimerP2sMore:	
   255  00AF                     	ds	1
   256  00B0                     main@ucFourthSuffix1TimerP3s:	
   257  00B0                     	ds	1
   258  00B1                     main@ucTimer1s:	
   259  00B1                     	ds	1
   260  00B2                     main@ucTimer20s:	
   261  00B2                     	ds	1
   262  00B3                     main@ucTimerLessX1P5s:	
   263  00B3                     	ds	1
   264  00B4                     main@ucTimerLessX2P5s:	
   265  00B4                     	ds	1
   266  00B5                     main@ucTimerP3s:	
   267  00B5                     	ds	1
   268  00B6                     main@ucTimerX1P5s:	
   269  00B6                     	ds	1
   270  00B7                     main@ucTimerX2P5s:	
   271  00B7                     	ds	1
   272  00B8                     _uiSampleChannelFirst:	
   273  00B8                     	ds	24
   274  00D0                     _uiSampleChannelFourth:	
   275  00D0                     	ds	24
   276                           
   277                           	psect	bssBANK3
   278  0190                     __pbssBANK3:	
   279  0190                     _uiSampleChannelFourteenth:	
   280  0190                     	ds	24
   281                           
   282                           	psect	clrtext
   283  07D4                     clear_ram:	
   284                           ;	Called with FSR containing the base address, and
   285                           ;	W with the last address+1
   286                           
   287  07D4  0064               	clrwdt	;clear the watchdog before getting into this loop
   288  07D5                     clrloop:	
   289  07D5  0180               	clrf	0	;clear RAM location pointed to by FSR
   290  07D6  0A84               	incf	4,f	;increment pointer
   291  07D7  0604               	xorwf	4,w	;XOR with final address
   292  07D8  1903               	btfsc	3,2	;have we reached the end yet?
   293  07D9  3400               	retlw	0	;all done for this memory range, return
   294  07DA  0604               	xorwf	4,w	;XOR again to restore value
   295  07DB  2FD5               	goto	clrloop	;do the next byte
   296                           
   297                           	psect	cstackCOMMON
   298  0070                     __pcstackCOMMON:	
   299  0070                     ?_clearTwelveHoursTimer:	
   300  0070                     ?_clearThreeHoursTimer:	
   301                           ; 0 bytes @ 0x0
   302                           
   303  0070                     ?_clearTwentySecondsTimer:	
   304                           ; 0 bytes @ 0x0
   305                           
   306  0070                     ?_clock_config:	
   307                           ; 0 bytes @ 0x0
   308                           
   309  0070                     ?_timer1_config:	
   310                           ; 0 bytes @ 0x0
   311                           
   312  0070                     ?_timer1_interrupt_config:	
   313                           ; 0 bytes @ 0x0
   314                           
   315  0070                     ?_dac_init:	
   316                           ; 0 bytes @ 0x0
   317                           
   318  0070                     ?_op1_init:	
   319                           ; 0 bytes @ 0x0
   320                           
   321  0070                     ?_op2_init:	
   322                           ; 0 bytes @ 0x0
   323                           
   324  0070                     ?_adc_start:	
   325                           ; 0 bytes @ 0x0
   326                           
   327  0070                     ?_process_AD_Converter_Value:	
   328                           ; 0 bytes @ 0x0
   329                           
   330  0070                     ?_clrSampeTime:	
   331                           ; 0 bytes @ 0x0
   332                           
   333  0070                     ?_startTwentySecondsTimer:	
   334                           ; 0 bytes @ 0x0
   335                           
   336  0070                     ?_AD_Sample:	
   337                           ; 0 bytes @ 0x0
   338                           
   339  0070                     ?_clearAllTimer:	
   340                           ; 0 bytes @ 0x0
   341                           
   342  0070                     ?_clearPinPortAndTimer:	
   343                           ; 0 bytes @ 0x0
   344                           
   345  0070                     ?_initPin:	
   346                           ; 0 bytes @ 0x0
   347                           
   348  0070                     ?_setPB0:	
   349                           ; 0 bytes @ 0x0
   350                           
   351  0070                     ?_setPB1:	
   352                           ; 0 bytes @ 0x0
   353                           
   354  0070                     ?_setPA0:	
   355                           ; 0 bytes @ 0x0
   356                           
   357  0070                     ?_setPA1:	
   358                           ; 0 bytes @ 0x0
   359                           
   360  0070                     ?_setPA2:	
   361                           ; 0 bytes @ 0x0
   362                           
   363  0070                     ?_setPA3:	
   364                           ; 0 bytes @ 0x0
   365                           
   366  0070                     ?_setPA6:	
   367                           ; 0 bytes @ 0x0
   368                           
   369  0070                     ?_main:	
   370                           ; 0 bytes @ 0x0
   371                           
   372  0070                     ?_setAD_ConvertFlag:	
   373                           ; 0 bytes @ 0x0
   374                           
   375  0070                     ?_ISR:	
   376                           ; 0 bytes @ 0x0
   377                           
   378  0070                     ?i1_setAD_ConvertFlag:	
   379                           ; 0 bytes @ 0x0
   380                           
   381  0070                     ??i1_setAD_ConvertFlag:	
   382                           ; 0 bytes @ 0x0
   383                           
   384  0070                     ?_isPermitSampleTime:	
   385                           ; 0 bytes @ 0x0
   386                           
   387  0070                     ?_isFinishedTwelveHoursTimer:	
   388                           ; 1 bytes @ 0x0
   389                           
   390  0070                     ?_isFinishedTwentySecondsTimer:	
   391                           ; 1 bytes @ 0x0
   392                           
   393  0070                     ?_isFinishedThreeHoursTimer:	
   394                           ; 1 bytes @ 0x0
   395                           
   396  0070                     ?_getAD_ConvertFlag:	
   397                           ; 1 bytes @ 0x0
   398                           
   399  0070                     ?_adc_get:	
   400                           ; 1 bytes @ 0x0
   401                           
   402  0070                     i1setAD_ConvertFlag@flag:	
   403                           ; 2 bytes @ 0x0
   404                           
   405                           
   406                           ; 1 bytes @ 0x0
   407  0070                     	ds	2
   408  0072                     ??_adc_get:	
   409  0072                     adc_get@val:	
   410                           ; 0 bytes @ 0x2
   411                           
   412                           
   413                           ; 2 bytes @ 0x2
   414  0072                     	ds	2
   415  0074                     ?_vPutSampleDataIntoTable:	
   416  0074                     vPutSampleDataIntoTable@uiSampleData:	
   417                           ; 0 bytes @ 0x4
   418                           
   419                           
   420                           ; 2 bytes @ 0x4
   421  0074                     	ds	2
   422  0076                     vPutSampleDataIntoTable@channel:	
   423                           
   424                           ; 1 bytes @ 0x6
   425  0076                     	ds	1
   426  0077                     ??_vPutSampleDataIntoTable:	
   427  0077                     vPutSampleDataIntoTable@i:	
   428                           ; 0 bytes @ 0x7
   429                           
   430                           
   431                           ; 2 bytes @ 0x7
   432  0077                     	ds	2
   433  0079                     ??_ISR:	
   434                           
   435                           ; 0 bytes @ 0x9
   436  0079                     	ds	4
   437                           
   438                           	psect	cstackBANK0
   439  0020                     __pcstackBANK0:	
   440  0020                     ??_clearTwelveHoursTimer:	
   441  0020                     ??_clearThreeHoursTimer:	
   442                           ; 0 bytes @ 0x0
   443                           
   444  0020                     ??_clearTwentySecondsTimer:	
   445                           ; 0 bytes @ 0x0
   446                           
   447  0020                     ??_clock_config:	
   448                           ; 0 bytes @ 0x0
   449                           
   450  0020                     ??_timer1_config:	
   451                           ; 0 bytes @ 0x0
   452                           
   453  0020                     ??_timer1_interrupt_config:	
   454                           ; 0 bytes @ 0x0
   455                           
   456  0020                     ?_adc_test_init:	
   457                           ; 0 bytes @ 0x0
   458                           
   459  0020                     ??_dac_init:	
   460                           ; 0 bytes @ 0x0
   461                           
   462  0020                     ??_op1_init:	
   463                           ; 0 bytes @ 0x0
   464                           
   465  0020                     ??_op2_init:	
   466                           ; 0 bytes @ 0x0
   467                           
   468  0020                     ??_adc_start:	
   469                           ; 0 bytes @ 0x0
   470                           
   471  0020                     ??_isPermitSampleTime:	
   472                           ; 0 bytes @ 0x0
   473                           
   474  0020                     ??_clrSampeTime:	
   475                           ; 0 bytes @ 0x0
   476                           
   477  0020                     ?_startTwelveHourTimer:	
   478                           ; 0 bytes @ 0x0
   479                           
   480  0020                     ??_isFinishedTwelveHoursTimer:	
   481                           ; 0 bytes @ 0x0
   482                           
   483  0020                     ??_startTwentySecondsTimer:	
   484                           ; 0 bytes @ 0x0
   485                           
   486  0020                     ??_isFinishedTwentySecondsTimer:	
   487                           ; 0 bytes @ 0x0
   488                           
   489  0020                     ?_startThreeHoursTimer:	
   490                           ; 0 bytes @ 0x0
   491                           
   492  0020                     ??_isFinishedThreeHoursTimer:	
   493                           ; 0 bytes @ 0x0
   494                           
   495  0020                     ??_AD_Sample:	
   496                           ; 0 bytes @ 0x0
   497                           
   498  0020                     ??_clearAllTimer:	
   499                           ; 0 bytes @ 0x0
   500                           
   501  0020                     ??_clearPinPortAndTimer:	
   502                           ; 0 bytes @ 0x0
   503                           
   504  0020                     ??_initPin:	
   505                           ; 0 bytes @ 0x0
   506                           
   507  0020                     ??_setPB0:	
   508                           ; 0 bytes @ 0x0
   509                           
   510  0020                     ??_setPB1:	
   511                           ; 0 bytes @ 0x0
   512                           
   513  0020                     ??_setPA0:	
   514                           ; 0 bytes @ 0x0
   515                           
   516  0020                     ??_setPA1:	
   517                           ; 0 bytes @ 0x0
   518                           
   519  0020                     ??_setPA2:	
   520                           ; 0 bytes @ 0x0
   521                           
   522  0020                     ??_setPA3:	
   523                           ; 0 bytes @ 0x0
   524                           
   525  0020                     ??_setPA6:	
   526                           ; 0 bytes @ 0x0
   527                           
   528  0020                     ??_getAD_ConvertFlag:	
   529                           ; 0 bytes @ 0x0
   530                           
   531  0020                     ??_setAD_ConvertFlag:	
   532                           ; 0 bytes @ 0x0
   533                           
   534  0020                     ?_Filter:	
   535                           ; 0 bytes @ 0x0
   536                           
   537  0020                     setPB0@bValue:	
   538                           ; 2 bytes @ 0x0
   539                           
   540  0020                     setPB1@bValue:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0020                     setPA0@bValue:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0020                     setPA1@bValue:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0020                     setPA2@bValue:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0020                     setPA3@bValue:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0020                     setPA6@bValue:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0020                     setAD_ConvertFlag@flag:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0020                     adc_test_init@ref:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0020                     Filter@tmpValue:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0020                     startTwelveHourTimer@uiSetTime:	
   568                           ; 2 bytes @ 0x0
   569                           
   570  0020                     startThreeHoursTimer@uiSetTime:	
   571                           ; 2 bytes @ 0x0
   572                           
   573                           
   574                           ; 2 bytes @ 0x0
   575  0020                     	ds	1
   576  0021                     ??_adc_test_init:	
   577                           
   578                           ; 0 bytes @ 0x1
   579  0021                     	ds	1
   580  0022                     ??_startTwelveHourTimer:	
   581  0022                     ??_startThreeHoursTimer:	
   582                           ; 0 bytes @ 0x2
   583                           
   584  0022                     ??_Filter:	
   585                           ; 0 bytes @ 0x2
   586                           
   587  0022                     adc_test_init@channel:	
   588                           ; 0 bytes @ 0x2
   589                           
   590                           
   591                           ; 1 bytes @ 0x2
   592  0022                     	ds	1
   593  0023                     ??_process_AD_Converter_Value:	
   594                           
   595                           ; 0 bytes @ 0x3
   596  0023                     	ds	3
   597  0026                     Filter@filter_buf:	
   598                           
   599                           ; 24 bytes @ 0x6
   600  0026                     	ds	24
   601  003E                     Filter@filter_temp:	
   602                           
   603                           ; 2 bytes @ 0x1E
   604  003E                     	ds	2
   605  0040                     Filter@filter_sum:	
   606                           
   607                           ; 2 bytes @ 0x20
   608  0040                     	ds	2
   609  0042                     Filter@cir:	
   610                           
   611                           ; 2 bytes @ 0x22
   612  0042                     	ds	2
   613  0044                     Filter@j:	
   614                           
   615                           ; 1 bytes @ 0x24
   616  0044                     	ds	1
   617  0045                     Filter@i:	
   618                           
   619                           ; 1 bytes @ 0x25
   620  0045                     	ds	1
   621  0046                     ?_getAdOriginalCh14Value:	
   622  0046                     ?_getAdOriginalCh1Value:	
   623                           ; 2 bytes @ 0x26
   624                           
   625  0046                     ?_getAdOriginaCh4Value:	
   626                           ; 2 bytes @ 0x26
   627                           
   628                           
   629                           ; 2 bytes @ 0x26
   630  0046                     	ds	2
   631  0048                     ??_getAdOriginalCh14Value:	
   632  0048                     ??_getAdOriginalCh1Value:	
   633                           ; 0 bytes @ 0x28
   634                           
   635  0048                     ??_getAdOriginaCh4Value:	
   636                           ; 0 bytes @ 0x28
   637                           
   638  0048                     ??_main:	
   639                           ; 0 bytes @ 0x28
   640                           
   641                           
   642                           	psect	maintext
   643  0013                     __pmaintext:	
   644                           ; 0 bytes @ 0x28
   645 ;;Data sizes: Strings 0, constant 0, data 1, bss 135, persistent 0 stack 0
   646 ;;Auto spaces:   Size  Autos    Used
   647 ;; COMMON          14     13      14
   648 ;; BANK0           80     40      79
   649 ;; BANK1           80      0      72
   650 ;; BANK3           96      0      24
   651 ;; BANK2           96      0       0
   652 ;;
   653 ;; Pointer list with targets:
   654 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   655 ;;
   656 ;; ?_getAdOriginalCh14Value	unsigned int  size(1) Largest target is 0
   657 ;;
   658 ;; ?_getAdOriginaCh4Value	unsigned int  size(1) Largest target is 0
   659 ;;
   660 ;; ?_getAdOriginalCh1Value	unsigned int  size(1) Largest target is 0
   661 ;;
   662 ;; ?_Filter	unsigned int  size(1) Largest target is 0
   663 ;;
   664 ;; Filter@tmpValue	PTR int  size(2) Largest target is 24
   665 ;;		 -> uiSampleChannelFourteenth(BANK3[24]), uiSampleChannelFourth(BANK1[24]), uiSampleChannelFirst(BANK1[24]), 
   666 ;;
   667 ;;
   668 ;; Critical Paths under _main in COMMON
   669 ;;
   670 ;;   None.
   671 ;;
   672 ;; Critical Paths under _ISR in COMMON
   673 ;;
   674 ;;   _ISR->_vPutSampleDataIntoTable
   675 ;;   _vPutSampleDataIntoTable->_adc_get
   676 ;;
   677 ;; Critical Paths under _main in BANK0
   678 ;;
   679 ;;   _main->_getAdOriginalCh14Value
   680 ;;   _main->_getAdOriginalCh1Value
   681 ;;   _main->_getAdOriginaCh4Value
   682 ;;   _getAdOriginaCh4Value->_Filter
   683 ;;   _getAdOriginalCh1Value->_Filter
   684 ;;   _getAdOriginalCh14Value->_Filter
   685 ;;   _process_AD_Converter_Value->_adc_test_init
   686 ;;
   687 ;; Critical Paths under _ISR in BANK0
   688 ;;
   689 ;;   None.
   690 ;;
   691 ;; Critical Paths under _main in BANK1
   692 ;;
   693 ;;   None.
   694 ;;
   695 ;; Critical Paths under _ISR in BANK1
   696 ;;
   697 ;;   None.
   698 ;;
   699 ;; Critical Paths under _main in BANK3
   700 ;;
   701 ;;   None.
   702 ;;
   703 ;; Critical Paths under _ISR in BANK3
   704 ;;
   705 ;;   None.
   706 ;;
   707 ;; Critical Paths under _main in BANK2
   708 ;;
   709 ;;   None.
   710 ;;
   711 ;; Critical Paths under _ISR in BANK2
   712 ;;
   713 ;;   None.
   714 ;;
   715 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   716 ;;
   717 ;;
   718 ;;Call Graph Tables:
   719 ;;
   720 ;; ---------------------------------------------------------------------------------
   721 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   722 ;; ---------------------------------------------------------------------------------
   723 ;; (0) _main                                                 0     0      0    2168
   724 ;;                            _initPin
   725 ;;                       _clock_config
   726 ;;                      _timer1_config
   727 ;;            _timer1_interrupt_config
   728 ;;                      _adc_test_init
   729 ;;                           _dac_init
   730 ;;                           _op1_init
   731 ;;                           _op2_init
   732 ;;                          _adc_start
   733 ;;         _process_AD_Converter_Value
   734 ;;                 _isPermitSampleTime
   735 ;;                       _clrSampeTime
   736 ;;             _getAdOriginalCh14Value
   737 ;;               _clearPinPortAndTimer
   738 ;;                             _setPA6
   739 ;;              _getAdOriginalCh1Value
   740 ;;               _startTwelveHourTimer
   741 ;;         _isFinishedTwelveHoursTimer
   742 ;;               _getAdOriginaCh4Value
   743 ;;                             _setPA2
   744 ;;                             _setPA3
   745 ;;                             _setPA0
   746 ;;                             _setPA1
   747 ;;                             _setPB0
   748 ;;            _startTwentySecondsTimer
   749 ;;       _isFinishedTwentySecondsTimer
   750 ;;            _clearTwentySecondsTimer
   751 ;;               _startThreeHoursTimer
   752 ;;          _isFinishedThreeHoursTimer
   753 ;;               _clearThreeHoursTimer
   754 ;;                             _setPB1
   755 ;;                      _clearAllTimer
   756 ;; ---------------------------------------------------------------------------------
   757 ;; (1) _clearPinPortAndTimer                                 0     0      0       0
   758 ;;                      _clearAllTimer
   759 ;; ---------------------------------------------------------------------------------
   760 ;; (1) _getAdOriginaCh4Value                                 2     0      2     620
   761 ;;                                             38 BANK0      2     0      2
   762 ;;                             _Filter
   763 ;; ---------------------------------------------------------------------------------
   764 ;; (1) _getAdOriginalCh1Value                                2     0      2     620
   765 ;;                                             38 BANK0      2     0      2
   766 ;;                             _Filter
   767 ;; ---------------------------------------------------------------------------------
   768 ;; (1) _getAdOriginalCh14Value                               2     0      2     620
   769 ;;                                             38 BANK0      2     0      2
   770 ;;                             _Filter
   771 ;; ---------------------------------------------------------------------------------
   772 ;; (1) _process_AD_Converter_Value                           0     0      0      66
   773 ;;                  _getAD_ConvertFlag
   774 ;;                  _setAD_ConvertFlag
   775 ;;                          _AD_Sample
   776 ;;                      _adc_test_init
   777 ;;                          _adc_start
   778 ;; ---------------------------------------------------------------------------------
   779 ;; (1) _clearAllTimer                                        0     0      0       0
   780 ;;              _clearTwelveHoursTimer
   781 ;;               _clearThreeHoursTimer
   782 ;;            _clearTwentySecondsTimer
   783 ;; ---------------------------------------------------------------------------------
   784 ;; (2) _AD_Sample                                            0     0      0       0
   785 ;; ---------------------------------------------------------------------------------
   786 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   787 ;;                                              0 BANK0      1     1      0
   788 ;; ---------------------------------------------------------------------------------
   789 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   790 ;; ---------------------------------------------------------------------------------
   791 ;; (2) _Filter                                              38    36      2     620
   792 ;;                                              0 BANK0     38    36      2
   793 ;; ---------------------------------------------------------------------------------
   794 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   795 ;; ---------------------------------------------------------------------------------
   796 ;; (1) _startThreeHoursTimer                                 2     0      2      22
   797 ;;                                              0 BANK0      2     0      2
   798 ;; ---------------------------------------------------------------------------------
   799 ;; (1) _isFinishedTwentySecondsTimer                         0     0      0       0
   800 ;; ---------------------------------------------------------------------------------
   801 ;; (1) _startTwentySecondsTimer                              0     0      0       0
   802 ;; ---------------------------------------------------------------------------------
   803 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   804 ;; ---------------------------------------------------------------------------------
   805 ;; (1) _startTwelveHourTimer                                 2     0      2      22
   806 ;;                                              0 BANK0      2     0      2
   807 ;; ---------------------------------------------------------------------------------
   808 ;; (1) _clrSampeTime                                         0     0      0       0
   809 ;; ---------------------------------------------------------------------------------
   810 ;; (1) _isPermitSampleTime                                   0     0      0       0
   811 ;; ---------------------------------------------------------------------------------
   812 ;; (2) _adc_start                                            0     0      0       0
   813 ;; ---------------------------------------------------------------------------------
   814 ;; (1) _op2_init                                             0     0      0       0
   815 ;; ---------------------------------------------------------------------------------
   816 ;; (1) _op1_init                                             0     0      0       0
   817 ;; ---------------------------------------------------------------------------------
   818 ;; (1) _dac_init                                             0     0      0       0
   819 ;; ---------------------------------------------------------------------------------
   820 ;; (2) _adc_test_init                                        3     2      1      44
   821 ;;                                              0 BANK0      3     2      1
   822 ;; ---------------------------------------------------------------------------------
   823 ;; (1) _timer1_interrupt_config                              0     0      0       0
   824 ;; ---------------------------------------------------------------------------------
   825 ;; (1) _timer1_config                                        0     0      0       0
   826 ;; ---------------------------------------------------------------------------------
   827 ;; (1) _clock_config                                         0     0      0       0
   828 ;; ---------------------------------------------------------------------------------
   829 ;; (1) _setPA6                                               1     1      0      22
   830 ;;                                              0 BANK0      1     1      0
   831 ;; ---------------------------------------------------------------------------------
   832 ;; (1) _setPA3                                               1     1      0      22
   833 ;;                                              0 BANK0      1     1      0
   834 ;; ---------------------------------------------------------------------------------
   835 ;; (1) _setPA2                                               1     1      0      22
   836 ;;                                              0 BANK0      1     1      0
   837 ;; ---------------------------------------------------------------------------------
   838 ;; (1) _setPA1                                               1     1      0      22
   839 ;;                                              0 BANK0      1     1      0
   840 ;; ---------------------------------------------------------------------------------
   841 ;; (1) _setPA0                                               1     1      0      22
   842 ;;                                              0 BANK0      1     1      0
   843 ;; ---------------------------------------------------------------------------------
   844 ;; (1) _setPB1                                               1     1      0      22
   845 ;;                                              0 BANK0      1     1      0
   846 ;; ---------------------------------------------------------------------------------
   847 ;; (1) _setPB0                                               1     1      0      22
   848 ;;                                              0 BANK0      1     1      0
   849 ;; ---------------------------------------------------------------------------------
   850 ;; (1) _initPin                                              0     0      0       0
   851 ;; ---------------------------------------------------------------------------------
   852 ;; (2) _clearTwentySecondsTimer                              0     0      0       0
   853 ;; ---------------------------------------------------------------------------------
   854 ;; (2) _clearThreeHoursTimer                                 0     0      0       0
   855 ;; ---------------------------------------------------------------------------------
   856 ;; (2) _clearTwelveHoursTimer                                0     0      0       0
   857 ;; ---------------------------------------------------------------------------------
   858 ;; Estimated maximum stack depth 2
   859 ;; ---------------------------------------------------------------------------------
   860 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   861 ;; ---------------------------------------------------------------------------------
   862 ;; (4) _ISR                                                  4     4      0     407
   863 ;;                                              9 COMMON     4     4      0
   864 ;;                i1_setAD_ConvertFlag
   865 ;;                            _adc_get
   866 ;;            _vPutSampleDataIntoTable
   867 ;; ---------------------------------------------------------------------------------
   868 ;; (5) i1_setAD_ConvertFlag                                  1     1      0      73
   869 ;;                                              0 COMMON     1     1      0
   870 ;; ---------------------------------------------------------------------------------
   871 ;; (5) _adc_get                                              4     2      2      24
   872 ;;                                              0 COMMON     4     2      2
   873 ;; ---------------------------------------------------------------------------------
   874 ;; (5) _vPutSampleDataIntoTable                              5     2      3     310
   875 ;;                                              4 COMMON     5     2      3
   876 ;;                            _adc_get (ARG)
   877 ;; ---------------------------------------------------------------------------------
   878 ;; Estimated maximum stack depth 5
   879 ;; ---------------------------------------------------------------------------------
   880 ;; Call Graph Graphs:
   881 ;; _main (ROOT)
   882 ;;   _initPin
   883 ;;   _clock_config
   884 ;;   _timer1_config
   885 ;;   _timer1_interrupt_config
   886 ;;   _adc_test_init
   887 ;;   _dac_init
   888 ;;   _op1_init
   889 ;;   _op2_init
   890 ;;   _adc_start
   891 ;;   _process_AD_Converter_Value
   892 ;;     _getAD_ConvertFlag
   893 ;;     _setAD_ConvertFlag
   894 ;;     _AD_Sample
   895 ;;     _adc_test_init
   896 ;;     _adc_start
   897 ;;   _isPermitSampleTime
   898 ;;   _clrSampeTime
   899 ;;   _getAdOriginalCh14Value
   900 ;;     _Filter
   901 ;;   _clearPinPortAndTimer
   902 ;;     _clearAllTimer
   903 ;;       _clearTwelveHoursTimer
   904 ;;       _clearThreeHoursTimer
   905 ;;       _clearTwentySecondsTimer
   906 ;;   _setPA6
   907 ;;   _getAdOriginalCh1Value
   908 ;;     _Filter
   909 ;;   _startTwelveHourTimer
   910 ;;   _isFinishedTwelveHoursTimer
   911 ;;   _getAdOriginaCh4Value
   912 ;;     _Filter
   913 ;;   _setPA2
   914 ;;   _setPA3
   915 ;;   _setPA0
   916 ;;   _setPA1
   917 ;;   _setPB0
   918 ;;   _startTwentySecondsTimer
   919 ;;   _isFinishedTwentySecondsTimer
   920 ;;   _clearTwentySecondsTimer
   921 ;;   _startThreeHoursTimer
   922 ;;   _isFinishedThreeHoursTimer
   923 ;;   _clearThreeHoursTimer
   924 ;;   _setPB1
   925 ;;   _clearAllTimer
   926 ;;     _clearTwelveHoursTimer
   927 ;;     _clearThreeHoursTimer
   928 ;;     _clearTwentySecondsTimer
   929 ;;
   930 ;; _ISR (ROOT)
   931 ;;   i1_setAD_ConvertFlag
   932 ;;   _adc_get
   933 ;;   _vPutSampleDataIntoTable
   934 ;;     _adc_get (ARG)
   935 ;;
   936 ;; Address spaces:
   937 ;;Name               Size   Autos  Total    Cost      Usage
   938 ;;BANK3               60      0      18      10       25.0%
   939 ;;BITBANK3            60      0       0       9        0.0%
   940 ;;SFR3                 0      0       0       4        0.0%
   941 ;;BITSFR3              0      0       0       4        0.0%
   942 ;;BANK2               60      0       0      12        0.0%
   943 ;;BITBANK2            60      0       0      11        0.0%
   944 ;;SFR2                 0      0       0       5        0.0%
   945 ;;BITSFR2              0      0       0       5        0.0%
   946 ;;SFR1                 0      0       0       2        0.0%
   947 ;;BITSFR1              0      0       0       2        0.0%
   948 ;;BANK1               50      0      48       8       90.0%
   949 ;;BITBANK1            50      0       0       7        0.0%
   950 ;;CODE                 0      0       0       0        0.0%
   951 ;;DATA                 0      0      C4       6        0.0%
   952 ;;ABS                  0      0      BD       3        0.0%
   953 ;;NULL                 0      0       0       0        0.0%
   954 ;;STACK                0      0       7       2        0.0%
   955 ;;BANK0               50     28      4F       5       98.8%
   956 ;;BITBANK0            50      0       0       4        0.0%
   957 ;;SFR0                 0      0       0       1        0.0%
   958 ;;BITSFR0              0      0       0       1        0.0%
   959 ;;COMMON               E      D       E       1      100.0%
   960 ;;BITCOMMON            E      0       0       0        0.0%
   961                           
   962                           
   963 ;; *************** function _main *****************
   964 ;; Defined at:
   965 ;;		line 459 in file "D:\develop\190625\AK7030-OTP\main.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;		None
   968 ;; Auto vars:     Size  Location     Type
   969 ;;		None
   970 ;; Return value:  Size  Location     Type
   971 ;;		None               void
   972 ;; Registers used:
   973 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   974 ;; Tracked objects:
   975 ;;		On entry : 17F/0
   976 ;;		On exit  : 60/0
   977 ;;		Unchanged: FFE00/0
   978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   979 ;;      Params:         0       0       0       0       0
   980 ;;      Locals:         0       0       0       0       0
   981 ;;      Temps:          0       0       0       0       0
   982 ;;      Totals:         0       0       0       0       0
   983 ;;Total ram usage:        0 bytes
   984 ;; Hardware stack levels required when called:    5
   985 ;; This function calls:
   986 ;;		_initPin
   987 ;;		_clock_config
   988 ;;		_timer1_config
   989 ;;		_timer1_interrupt_config
   990 ;;		_adc_test_init
   991 ;;		_dac_init
   992 ;;		_op1_init
   993 ;;		_op2_init
   994 ;;		_adc_start
   995 ;;		_process_AD_Converter_Value
   996 ;;		_isPermitSampleTime
   997 ;;		_clrSampeTime
   998 ;;		_getAdOriginalCh14Value
   999 ;;		_clearPinPortAndTimer
  1000 ;;		_setPA6
  1001 ;;		_getAdOriginalCh1Value
  1002 ;;		_startTwelveHourTimer
  1003 ;;		_isFinishedTwelveHoursTimer
  1004 ;;		_getAdOriginaCh4Value
  1005 ;;		_setPA2
  1006 ;;		_setPA3
  1007 ;;		_setPA0
  1008 ;;		_setPA1
  1009 ;;		_setPB0
  1010 ;;		_startTwentySecondsTimer
  1011 ;;		_isFinishedTwentySecondsTimer
  1012 ;;		_clearTwentySecondsTimer
  1013 ;;		_startThreeHoursTimer
  1014 ;;		_isFinishedThreeHoursTimer
  1015 ;;		_clearThreeHoursTimer
  1016 ;;		_setPB1
  1017 ;;		_clearAllTimer
  1018 ;; This function is called by:
  1019 ;;		Startup code after reset
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022  0013                     _main:	
  1023                           
  1024                           ;main.c: 465: enum setp_Adc4
  1025                           ;main.c: 466: {
  1026                           ;main.c: 467: ADC4_STEP_INIT = 0,
  1027                           ;main.c: 468: ADC4_STEP_FIRST,
  1028                           ;main.c: 469: ADC4_STEP_SECOND,
  1029                           ;main.c: 470: ADC4_STEP_THIRD,
  1030                           ;main.c: 471: ADC4_STEP_FOURTH_PREFIX1,
  1031                           ;main.c: 472: ADC4_STEP_FOURTH_PREFIX2,
  1032                           ;main.c: 473: ADC4_STEP_FOURTH_PREFIX3,
  1033                           ;main.c: 474: ADC4_STEP_FOURTH_PREFIX4,
  1034                           ;main.c: 475: ADC4_STEP_FOURTH_PREFIX5,
  1035                           ;main.c: 476: ADC4_STEP_FOURTH_PREFIX6,
  1036                           ;main.c: 477: ADC4_STEP_FOURTH,
  1037                           ;main.c: 478: ADC4_STEP_FOURTH_SUFFIX1,
  1038                           ;main.c: 479: ADC4_STEP_FOURTH_SUFFIX2,
  1039                           
  1040                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1041  0013  1683               	bsf	3,5	;RP0=1, select bank1
  1042  0014  1005               	bcf	5,0
  1043                           
  1044                           ;main.c: 500: TRISA1 = 0;
  1045  0015  1085               	bcf	5,1
  1046                           
  1047                           ;main.c: 501: TRISA2 = 0;
  1048  0016  1105               	bcf	5,2
  1049                           
  1050                           ;main.c: 502: TRISA3 = 0;
  1051  0017  1185               	bcf	5,3
  1052                           
  1053                           ;main.c: 503: TRISB0 = 0;
  1054  0018  1006               	bcf	6,0
  1055                           
  1056                           ;main.c: 504: TRISB1 = 0;
  1057  0019  1086               	bcf	6,1
  1058                           
  1059                           ;main.c: 505: TRISA6 = 0;
  1060  001A  1305               	bcf	5,6
  1061                           
  1062                           ;main.c: 507: TRISB7 = 0;
  1063  001B  1386               	bcf	6,7
  1064                           
  1065                           ;main.c: 508: TRISB6 = 0;
  1066  001C  1306               	bcf	6,6
  1067                           
  1068                           ;main.c: 511: initPin();
  1069  001D  118A  273D  118A   	fcall	_initPin
  1070                           
  1071                           ;main.c: 514: TRISB2 = 1;
  1072  0020  1303               	bcf	3,6	;RP1=0, select bank1
  1073  0021  1506               	bsf	6,2
  1074                           
  1075                           ;main.c: 517: TRISA7 = 1;
  1076  0022  1785               	bsf	5,7
  1077                           
  1078                           ;main.c: 519: TRISB4 = 1;
  1079  0023  1606               	bsf	6,4
  1080                           
  1081                           ;main.c: 521: clock_config();
  1082  0024  118A  27DC  118A   	fcall	_clock_config
  1083                           
  1084                           ;main.c: 522: timer1_config();
  1085  0027  118A  27B8  118A   	fcall	_timer1_config
  1086                           
  1087                           ;main.c: 523: timer1_interrupt_config();
  1088  002A  118A  27FC  118A   	fcall	_timer1_interrupt_config
  1089                           
  1090                           ;main.c: 525: adc_test_init(14,3);
  1091  002D  3003               	movlw	3
  1092  002E  1283               	bcf	3,5	;RP0=0, select bank0
  1093  002F  00A0               	movwf	?_adc_test_init
  1094  0030  300E               	movlw	14
  1095  0031  118A  26A6  118A   	fcall	_adc_test_init
  1096                           
  1097                           ;main.c: 527: dac_init();
  1098  0034  158A  27DE  118A   	fcall	_dac_init
  1099                           
  1100                           ;main.c: 528: op1_init();
  1101  0037  118A  27AD  118A   	fcall	_op1_init
  1102                           
  1103                           ;main.c: 529: op2_init();
  1104  003A  158A  27E9  118A   	fcall	_op2_init
  1105                           
  1106                           ;main.c: 532: adc_start();
  1107  003D  118A  26BB  118A   	fcall	_adc_start
  1108  0040                     l4594:	
  1109  0040  0064               	clrwdt	;#
  1110                           
  1111                           ;main.c: 575: process_AD_Converter_Value();
  1112  0041  118A  2661  118A   	fcall	_process_AD_Converter_Value
  1113                           
  1114                           ;main.c: 577: if( isPermitSampleTime() )
  1115  0044  158A  27E3  118A   	fcall	_isPermitSampleTime
  1116  0047  3A00               	xorlw	0
  1117  0048  1903               	skipnz
  1118  0049  2840               	goto	l4594
  1119                           
  1120                           ;main.c: 578: {
  1121                           ;main.c: 581: clrSampeTime();
  1122  004A  118A  2002  118A   	fcall	_clrSampeTime
  1123                           
  1124                           ;main.c: 596: switch(enumMainLoopStep)
  1125  004D  2C98               	goto	l5254
  1126  004E                     l4602:	
  1127                           
  1128                           ;main.c: 599: {
  1129                           ;main.c: 604: static unsigned char ucTimerZeroPoint5s = 0;
  1130                           ;main.c: 605: if(getAdOriginalCh14Value() > 1950)
  1131  004E  118A  25A9  118A   	fcall	_getAdOriginalCh14Value
  1132  0051  3007               	movlw	7
  1133  0052  0247               	subwf	?_getAdOriginalCh14Value+1,w
  1134  0053  309F               	movlw	159
  1135  0054  1903               	skipnz
  1136  0055  0246               	subwf	?_getAdOriginalCh14Value,w
  1137  0056  1C03               	skipc
  1138  0057  285A               	goto	l4606
  1139                           
  1140                           ;main.c: 606: {
  1141                           ;main.c: 607: ucTimerZeroPoint5s++;
  1142  0058  0AEB               	incf	main@ucTimerZeroPoint5s,f
  1143                           
  1144                           ;main.c: 608: }
  1145  0059  285B               	goto	l4608
  1146  005A                     l4606:	
  1147                           
  1148                           ;main.c: 609: else
  1149                           ;main.c: 610: ucTimerZeroPoint5s = 0;
  1150  005A  01EB               	clrf	main@ucTimerZeroPoint5s
  1151  005B                     l4608:	
  1152                           
  1153                           ;main.c: 612: if(ucTimerZeroPoint5s >= 5)
  1154  005B  3005               	movlw	5
  1155  005C  026B               	subwf	main@ucTimerZeroPoint5s,w
  1156  005D  1C03               	skipc
  1157  005E  2840               	goto	l4594
  1158                           
  1159                           ;main.c: 613: {
  1160                           ;main.c: 614: ucTimerZeroPoint5s = 0;
  1161  005F  01EB               	clrf	main@ucTimerZeroPoint5s
  1162  0060                     l4612:	
  1163                           
  1164                           ;main.c: 615: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  1165  0060  01D0               	clrf	main@enumMainLoopStep
  1166  0061  0AD0               	incf	main@enumMainLoopStep,f
  1167  0062                     l752:	
  1168                           
  1169                           ;main.c: 616: }
  1170                           ;main.c: 617: break;
  1171  0062  2840               	goto	l4594
  1172  0063                     l4614:	
  1173                           
  1174                           ;main.c: 621: {
  1175                           ;main.c: 626: static unsigned char ucTimerZeroPoint3s = 0;
  1176                           ;main.c: 629: if(getAdOriginalCh14Value() > 1950)
  1177  0063  118A  25A9  118A   	fcall	_getAdOriginalCh14Value
  1178  0066  3007               	movlw	7
  1179  0067  0247               	subwf	?_getAdOriginalCh14Value+1,w
  1180  0068  309F               	movlw	159
  1181  0069  1903               	skipnz
  1182  006A  0246               	subwf	?_getAdOriginalCh14Value,w
  1183  006B  1C03               	skipc
  1184  006C  2871               	goto	l4620
  1185                           
  1186                           ;main.c: 630: {
  1187                           ;main.c: 632: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
  1188  006D  3002               	movlw	2
  1189  006E  00D0               	movwf	main@enumMainLoopStep
  1190                           
  1191                           ;main.c: 634: ucTimerZeroPoint3s = 0;
  1192  006F  01EA               	clrf	main@ucTimerZeroPoint3s
  1193                           
  1194                           ;main.c: 636: }
  1195  0070  2840               	goto	l4594
  1196  0071                     l4620:	
  1197  0071  3003               	movlw	3
  1198                           
  1199                           ;main.c: 637: else
  1200                           ;main.c: 638: {
  1201                           ;main.c: 639: ucTimerZeroPoint3s++;
  1202  0072  0AEA               	incf	main@ucTimerZeroPoint3s,f
  1203                           
  1204                           ;main.c: 641: if(ucTimerZeroPoint3s >= 3)
  1205  0073  026A               	subwf	main@ucTimerZeroPoint3s,w
  1206  0074  1C03               	skipc
  1207  0075  2840               	goto	l4594
  1208                           
  1209                           ;main.c: 642: {
  1210                           ;main.c: 643: ucTimerZeroPoint3s = 0;
  1211  0076  01EA               	clrf	main@ucTimerZeroPoint3s
  1212                           
  1213                           ;main.c: 645: clearPinPortAndTimer();
  1214  0077  118A  26BE  118A   	fcall	_clearPinPortAndTimer
  1215  007A  2840               	goto	l4594
  1216  007B                     l4628:	
  1217                           
  1218                           ;main.c: 653: {
  1219                           ;main.c: 658: static unsigned char ucTimerP5s = 0;
  1220                           ;main.c: 661: setPA6(1);
  1221  007B  3001               	movlw	1
  1222  007C  118A  27C2  118A   	fcall	_setPA6
  1223                           
  1224                           ;main.c: 663: if(ucTimerP5s < 5)
  1225  007F  3005               	movlw	5
  1226  0080  0268               	subwf	main@ucTimerP5s,w
  1227  0081  1803               	skipnc
  1228  0082  2885               	goto	l4634
  1229                           
  1230                           ;main.c: 664: ucTimerP5s++;
  1231  0083  0AE8               	incf	main@ucTimerP5s,f
  1232  0084  2840               	goto	l4594
  1233  0085                     l4634:	
  1234  0085  3003               	movlw	3
  1235                           
  1236                           ;main.c: 665: else
  1237                           ;main.c: 666: {
  1238                           ;main.c: 667: ucTimerP5s = 0;
  1239  0086  01E8               	clrf	main@ucTimerP5s
  1240                           
  1241                           ;main.c: 669: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  1242  0087  2BF8               	goto	L15
  1243  0088                     l4638:	
  1244                           
  1245                           ;main.c: 676: {
  1246                           ;main.c: 681: static unsigned char ucTimerADC1ZeroP5s = 0;
  1247                           ;main.c: 683: static unsigned char ucTimerLessADC1ZeroP5s = 0;
  1248                           ;main.c: 685: static unsigned char ucTimerLessADC1ZeroP5sFlag = 0;
  1249                           ;main.c: 687: static unsigned char ucTimerRightP5s = 0;
  1250                           ;main.c: 689: if(getAdOriginalCh1Value() < 115)
  1251  0088  118A  259F  118A   	fcall	_getAdOriginalCh1Value
  1252  008B  3000               	movlw	0
  1253  008C  0247               	subwf	?_getAdOriginalCh1Value+1,w
  1254  008D  3073               	movlw	115
  1255  008E  1903               	skipnz
  1256  008F  0246               	subwf	?_getAdOriginalCh1Value,w
  1257  0090  1803               	skipnc
  1258  0091  2895               	goto	l4644
  1259                           
  1260                           ;main.c: 690: {
  1261                           ;main.c: 691: ucTimerADC1ZeroP5s = 0;
  1262  0092  01DB               	clrf	main@ucTimerADC1ZeroP5s
  1263                           
  1264                           ;main.c: 693: ucTimerLessADC1ZeroP5s++;
  1265  0093  0AE7               	incf	main@ucTimerLessADC1ZeroP5s,f
  1266                           
  1267                           ;main.c: 694: }
  1268  0094  2897               	goto	l4648
  1269  0095                     l4644:	
  1270                           
  1271                           ;main.c: 695: else
  1272                           ;main.c: 696: {
  1273                           ;main.c: 697: ucTimerADC1ZeroP5s++;
  1274  0095  0ADB               	incf	main@ucTimerADC1ZeroP5s,f
  1275                           
  1276                           ;main.c: 699: ucTimerLessADC1ZeroP5s = 0;
  1277  0096  01E7               	clrf	main@ucTimerLessADC1ZeroP5s
  1278  0097                     l4648:	
  1279                           
  1280                           ;main.c: 700: }
  1281                           ;main.c: 702: if(ucTimerADC1ZeroP5s >= 3)
  1282  0097  3003               	movlw	3
  1283  0098  025B               	subwf	main@ucTimerADC1ZeroP5s,w
  1284  0099  1C03               	skipc
  1285  009A  289E               	goto	l4654
  1286  009B  3004               	movlw	4
  1287                           
  1288                           ;main.c: 703: {
  1289                           ;main.c: 704: ucTimerADC1ZeroP5s = 0;
  1290  009C  01DB               	clrf	main@ucTimerADC1ZeroP5s
  1291                           
  1292                           ;main.c: 705: enumMainLoopStep = MAIN_LOOP_STEP_FOURTH;
  1293  009D  28B6               	goto	L2
  1294  009E                     l4654:	
  1295                           ;main.c: 706: }
  1296                           
  1297                           
  1298                           ;main.c: 707: else if( ucTimerLessADC1ZeroP5s >= 3)
  1299  009E  3003               	movlw	3
  1300  009F  0267               	subwf	main@ucTimerLessADC1ZeroP5s,w
  1301  00A0  1C03               	skipc
  1302  00A1  28B7               	goto	l4668
  1303                           
  1304                           ;main.c: 708: {
  1305                           ;main.c: 710: if(getAdOriginalCh1Value() < 105)
  1306  00A2  118A  259F  118A   	fcall	_getAdOriginalCh1Value
  1307  00A5  3000               	movlw	0
  1308  00A6  0247               	subwf	?_getAdOriginalCh1Value+1,w
  1309  00A7  3069               	movlw	105
  1310  00A8  1903               	skipnz
  1311  00A9  0246               	subwf	?_getAdOriginalCh1Value,w
  1312  00AA  1803               	skipnc
  1313  00AB  28AE               	goto	l4660
  1314                           
  1315                           ;main.c: 711: {
  1316                           ;main.c: 712: ucTimerRightP5s++;
  1317  00AC  0AE9               	incf	main@ucTimerRightP5s,f
  1318                           
  1319                           ;main.c: 713: }
  1320  00AD  28AF               	goto	l4662
  1321  00AE                     l4660:	
  1322                           
  1323                           ;main.c: 714: else
  1324                           ;main.c: 715: {
  1325                           ;main.c: 716: ucTimerRightP5s = 0;
  1326  00AE  01E9               	clrf	main@ucTimerRightP5s
  1327  00AF                     l4662:	
  1328                           
  1329                           ;main.c: 717: }
  1330                           ;main.c: 719: if(ucTimerRightP5s >= 3)
  1331  00AF  3003               	movlw	3
  1332  00B0  0269               	subwf	main@ucTimerRightP5s,w
  1333  00B1  1C03               	skipc
  1334  00B2  28B7               	goto	l4668
  1335  00B3  3008               	movlw	8
  1336                           
  1337                           ;main.c: 720: {
  1338                           ;main.c: 721: ucTimerLessADC1ZeroP5s = 0;
  1339  00B4  01E7               	clrf	main@ucTimerLessADC1ZeroP5s
  1340                           
  1341                           ;main.c: 722: ucTimerRightP5s = 0;
  1342  00B5  01E9               	clrf	main@ucTimerRightP5s
  1343  00B6                     L2:	
  1344                           ;main.c: 723: enumMainLoopStep = MAIN_LOOP_STEP_3_HOUR_BRANCH;
  1345                           
  1346  00B6  00D0               	movwf	main@enumMainLoopStep
  1347  00B7                     l4668:	
  1348                           ;main.c: 730: else
  1349                           ;main.c: 731: {
  1350                           ;main.c: 732: ;
  1351                           
  1352                           ;main.c: 724: }
  1353                           
  1354                           
  1355                           ;main.c: 733: }
  1356                           ;main.c: 735: if((MAIN_LOOP_STEP_3_HOUR_BRANCH == enumMainLoopStep) || (MAIN_LOOP_STEP_F
      +                          OURTH == enumMainLoopStep))
  1357  00B7  0850               	movf	main@enumMainLoopStep,w
  1358  00B8  3A08               	xorlw	8
  1359  00B9  1903               	skipnz
  1360  00BA  28BF               	goto	l4672
  1361  00BB  0850               	movf	main@enumMainLoopStep,w
  1362  00BC  3A04               	xorlw	4
  1363  00BD  1D03               	skipz
  1364  00BE  2840               	goto	l4594
  1365  00BF                     l4672:	
  1366                           
  1367                           ;main.c: 736: {
  1368                           ;main.c: 737: ucTimerRightP5s = 0;
  1369  00BF  01E9               	clrf	main@ucTimerRightP5s
  1370                           
  1371                           ;main.c: 738: ucTimerADC1ZeroP5s = 0;
  1372  00C0  01DB               	clrf	main@ucTimerADC1ZeroP5s
  1373                           
  1374                           ;main.c: 739: ucTimerLessADC1ZeroP5s = 0;
  1375  00C1  01E7               	clrf	main@ucTimerLessADC1ZeroP5s
  1376  00C2  2840               	goto	l4594
  1377  00C3                     l4674:	
  1378                           
  1379                           ;main.c: 747: {
  1380                           ;main.c: 753: startTwelveHourTimer(36000);
  1381  00C3  30A0               	movlw	160
  1382  00C4  00A0               	movwf	?_startTwelveHourTimer
  1383  00C5  308C               	movlw	140
  1384  00C6  00A1               	movwf	?_startTwelveHourTimer+1
  1385  00C7  118A  2729  118A   	fcall	_startTwelveHourTimer
  1386                           
  1387                           ;main.c: 754: enumMainLoopStep = MAIN_LOOP_STEP_FIFTH;
  1388  00CA  3005               	movlw	5
  1389  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1390  00CC  00D0               	movwf	main@enumMainLoopStep
  1391                           
  1392                           ;main.c: 756: bCheckTweHour = 0;
  1393  00CD  01CE               	clrf	main@bCheckTweHour
  1394                           
  1395                           ;main.c: 758: break;
  1396  00CE  2840               	goto	l4594
  1397  00CF                     l4680:	
  1398                           
  1399                           ;main.c: 762: {
  1400                           ;main.c: 766: if(( isFinishedTwelveHoursTimer() && (! bCheckTweHour)))
  1401  00CF  118A  27A1  118A   	fcall	_isFinishedTwelveHoursTimer
  1402  00D2  3A00               	xorlw	0
  1403  00D3  1903               	skipnz
  1404  00D4  2B86               	goto	l5134
  1405  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  1406  00D6  08CE               	movf	main@bCheckTweHour,f
  1407  00D7  1D03               	skipz
  1408  00D8  2B86               	goto	l5134
  1409                           
  1410                           ;main.c: 767: {
  1411                           ;main.c: 768: enumMainLoopStep = MAIN_LOOP_STEP_12_HOUR_END;
  1412  00D9  3009               	movlw	9
  1413  00DA  00D0               	movwf	main@enumMainLoopStep
  1414                           
  1415                           ;main.c: 769: bCheckTweHour = 1;
  1416  00DB  01CE               	clrf	main@bCheckTweHour
  1417  00DC  0ACE               	incf	main@bCheckTweHour,f
  1418                           
  1419                           ;main.c: 770: }
  1420  00DD  2840               	goto	l4594
  1421  00DE                     l794:	
  1422                           ;main.c: 776: {
  1423                           ;main.c: 777: case ADC4_STEP_INIT:
  1424                           
  1425                           
  1426                           ;main.c: 778: {
  1427                           ;main.c: 783: ucADC4_Step = ADC4_STEP_FIRST;
  1428  00DE  01D1               	clrf	main@ucADC4_Step
  1429  00DF  0AD1               	incf	main@ucADC4_Step,f
  1430                           
  1431                           ;main.c: 784: break;
  1432  00E0  2840               	goto	l4594
  1433  00E1                     l4688:	
  1434                           
  1435                           ;main.c: 788: {
  1436                           ;main.c: 792: static unsigned int uiOldValue = 0, uiMinValue = 0, uiMaxValue = 0;
  1437                           ;main.c: 794: static unsigned char bInitFlag = 0;
  1438                           ;main.c: 796: if( 0 == bInitFlag)
  1439  00E1  08CF               	movf	main@bInitFlag,f
  1440  00E2  1D03               	skipz
  1441  00E3  28ED               	goto	l4694
  1442                           
  1443                           ;main.c: 797: {
  1444                           ;main.c: 798: bInitFlag = 1;
  1445  00E4  01CF               	clrf	main@bInitFlag
  1446  00E5  0ACF               	incf	main@bInitFlag,f
  1447                           
  1448                           ;main.c: 799: uiOldValue = getAdOriginaCh4Value();
  1449  00E6  118A  2595  118A   	fcall	_getAdOriginaCh4Value
  1450  00E9  0847               	movf	?_getAdOriginaCh4Value+1,w
  1451  00EA  00C9               	movwf	main@uiOldValue+1
  1452  00EB  0846               	movf	?_getAdOriginaCh4Value,w
  1453  00EC  00C8               	movwf	main@uiOldValue
  1454  00ED                     l4694:	
  1455                           
  1456                           ;main.c: 800: }
  1457                           ;main.c: 809: if(LESS_THAN_1911 == ucChannel4Type)
  1458  00ED  08D2               	movf	main@ucChannel4Type,f
  1459  00EE  1D03               	skipz
  1460  00EF  28F5               	goto	l4700
  1461                           
  1462                           ;main.c: 810: {
  1463                           ;main.c: 811: uiMinValue = 0;
  1464  00F0  1683               	bsf	3,5	;RP0=1, select bank1
  1465  00F1  308B               	movlw	139
  1466  00F2  01A8               	clrf	main@uiMinValue^(0+128)
  1467  00F3  01A9               	clrf	(main@uiMinValue+1)^(0+128)
  1468                           
  1469                           ;main.c: 812: uiMaxValue = 1931;
  1470  00F4  28FD               	goto	L16
  1471  00F5                     l4700:	
  1472                           ;main.c: 813: }
  1473                           
  1474                           
  1475                           ;main.c: 814: else if(BETWEEN_1911_AND_2067 == ucChannel4Type)
  1476  00F5  0B52               	decfsz	main@ucChannel4Type,w
  1477  00F6  2900               	goto	l4704
  1478                           
  1479                           ;main.c: 815: {
  1480                           ;main.c: 816: uiMinValue = 1931 - 40;
  1481  00F7  3063               	movlw	99
  1482  00F8  1683               	bsf	3,5	;RP0=1, select bank1
  1483  00F9  00A8               	movwf	main@uiMinValue^(0+128)
  1484  00FA  3007               	movlw	7
  1485  00FB  00A9               	movwf	(main@uiMinValue^(0+128)+1)
  1486                           
  1487                           ;main.c: 817: uiMaxValue = 2047;
  1488  00FC  30FF               	movlw	255
  1489  00FD                     L16:	
  1490  00FD  00A6               	movwf	main@uiMaxValue^(0+128)
  1491  00FE  3007               	movlw	7
  1492  00FF  2919               	goto	L3
  1493  0100                     l4704:	
  1494                           ;main.c: 818: }
  1495                           
  1496                           
  1497                           ;main.c: 819: else if(BETWEEN_2067_AND_2204 == ucChannel4Type)
  1498  0100  0852               	movf	main@ucChannel4Type,w
  1499  0101  3A02               	xorlw	2
  1500  0102  1D03               	skipz
  1501  0103  290B               	goto	l4708
  1502                           
  1503                           ;main.c: 820: {
  1504                           ;main.c: 821: uiMinValue = 2047 - 40;
  1505  0104  30D7               	movlw	215
  1506  0105  1683               	bsf	3,5	;RP0=1, select bank1
  1507  0106  00A8               	movwf	main@uiMinValue^(0+128)
  1508  0107  3007               	movlw	7
  1509  0108  00A9               	movwf	(main@uiMinValue^(0+128)+1)
  1510                           
  1511                           ;main.c: 822: uiMaxValue = 2164;
  1512  0109  3074               	movlw	116
  1513  010A  2917               	goto	L17
  1514  010B                     l4708:	
  1515                           ;main.c: 823: }
  1516                           
  1517                           
  1518                           ;main.c: 824: else if(BETWEEN_2204_AND_2340 == ucChannel4Type)
  1519  010B  0852               	movf	main@ucChannel4Type,w
  1520  010C  3A03               	xorlw	3
  1521  010D  1D03               	skipz
  1522  010E  2911               	goto	l4712
  1523                           
  1524                           ;main.c: 825: {
  1525                           ;main.c: 826: uiMinValue = 2164 - 40;
  1526  010F  304C               	movlw	76
  1527  0110  2912               	goto	L19
  1528  0111                     l4712:	
  1529                           ;main.c: 828: }
  1530                           
  1531                           ;main.c: 827: uiMaxValue = 2281;
  1532                           
  1533                           
  1534                           ;main.c: 829: else
  1535                           ;main.c: 830: {
  1536                           ;main.c: 831: uiMinValue = 2281 - 40;
  1537  0111  30C1               	movlw	193
  1538  0112                     L19:	
  1539  0112  1683               	bsf	3,5	;RP0=1, select bank1
  1540  0113  00A8               	movwf	main@uiMinValue^(0+128)
  1541  0114  3008               	movlw	8
  1542  0115  00A9               	movwf	(main@uiMinValue^(0+128)+1)
  1543                           
  1544                           ;main.c: 832: uiMaxValue = 2281;
  1545  0116  30E9               	movlw	233
  1546  0117                     L17:	
  1547  0117  00A6               	movwf	main@uiMaxValue^(0+128)
  1548  0118  3008               	movlw	8
  1549  0119                     L3:	
  1550  0119  00A7               	movwf	(main@uiMaxValue^(0+128)+1)
  1551                           
  1552                           ;main.c: 833: }
  1553                           ;main.c: 836: if(( getAdOriginaCh4Value() < uiMinValue )
  1554                           ;main.c: 837: || (getAdOriginaCh4Value() > uiMaxValue ))
  1555  011A  118A  2595  118A   	fcall	_getAdOriginaCh4Value
  1556  011D  1683               	bsf	3,5	;RP0=1, select bank1
  1557  011E  0829               	movf	(main@uiMinValue+1)^(0+128),w
  1558  011F  1283               	bcf	3,5	;RP0=0, select bank0
  1559  0120  0247               	subwf	?_getAdOriginaCh4Value+1,w
  1560  0121  1D03               	skipz
  1561  0122  2927               	goto	u1985
  1562  0123  1683               	bsf	3,5	;RP0=1, select bank1
  1563  0124  0828               	movf	main@uiMinValue^(0+128),w
  1564  0125  1283               	bcf	3,5	;RP0=0, select bank0
  1565  0126  0246               	subwf	?_getAdOriginaCh4Value,w
  1566  0127                     u1985:	
  1567  0127  1C03               	skipc
  1568  0128  2937               	goto	l4718
  1569  0129  118A  2595  118A   	fcall	_getAdOriginaCh4Value
  1570  012C  0847               	movf	?_getAdOriginaCh4Value+1,w
  1571  012D  1683               	bsf	3,5	;RP0=1, select bank1
  1572  012E  0227               	subwf	(main@uiMaxValue+1)^(0+128),w
  1573  012F  1D03               	skipz
  1574  0130  2935               	goto	u1995
  1575  0131  1283               	bcf	3,5	;RP0=0, select bank0
  1576  0132  0846               	movf	?_getAdOriginaCh4Value,w
  1577  0133  1683               	bsf	3,5	;RP0=1, select bank1
  1578  0134  0226               	subwf	main@uiMaxValue^(0+128),w
  1579  0135                     u1995:	
  1580  0135  1803               	skipnc
  1581  0136  293E               	goto	l4720
  1582  0137                     l4718:	
  1583                           
  1584                           ;main.c: 838: {
  1585                           ;main.c: 839: uiOldValue = getAdOriginaCh4Value();
  1586  0137  118A  2595  118A   	fcall	_getAdOriginaCh4Value
  1587  013A  0847               	movf	?_getAdOriginaCh4Value+1,w
  1588  013B  00C9               	movwf	main@uiOldValue+1
  1589  013C  0846               	movf	?_getAdOriginaCh4Value,w
  1590  013D  00C8               	movwf	main@uiOldValue
  1591  013E                     l4720:	
  1592                           
  1593                           ;main.c: 840: }
  1594                           ;main.c: 842: if( uiOldValue < 1931 )
  1595  013E  3007               	movlw	7
  1596  013F  1283               	bcf	3,5	;RP0=0, select bank0
  1597  0140  0249               	subwf	main@uiOldValue+1,w
  1598  0141  308B               	movlw	139
  1599  0142  1903               	skipnz
  1600  0143  0248               	subwf	main@uiOldValue,w
  1601  0144  1803               	skipnc
  1602  0145  2948               	goto	l4724
  1603                           
  1604                           ;main.c: 843: ucChannel4Type = LESS_THAN_1911;
  1605  0146  01D2               	clrf	main@ucChannel4Type
  1606  0147  2966               	goto	l818
  1607  0148                     l4724:	
  1608                           
  1609                           ;main.c: 844: else if( uiOldValue < 2047 )
  1610  0148  3007               	movlw	7
  1611  0149  0249               	subwf	main@uiOldValue+1,w
  1612  014A  30FF               	movlw	255
  1613  014B  1903               	skipnz
  1614  014C  0248               	subwf	main@uiOldValue,w
  1615  014D  1803               	skipnc
  1616  014E  2952               	goto	l4728
  1617                           
  1618                           ;main.c: 845: ucChannel4Type = BETWEEN_1911_AND_2067;
  1619  014F  01D2               	clrf	main@ucChannel4Type
  1620  0150  0AD2               	incf	main@ucChannel4Type,f
  1621  0151  2966               	goto	l818
  1622  0152                     l4728:	
  1623                           
  1624                           ;main.c: 846: else if( uiOldValue < 2164 )
  1625  0152  3008               	movlw	8
  1626  0153  0249               	subwf	main@uiOldValue+1,w
  1627  0154  3074               	movlw	116
  1628  0155  1903               	skipnz
  1629  0156  0248               	subwf	main@uiOldValue,w
  1630  0157  1803               	skipnc
  1631  0158  295B               	goto	l4732
  1632                           
  1633                           ;main.c: 847: ucChannel4Type = BETWEEN_2067_AND_2204;
  1634  0159  3002               	movlw	2
  1635  015A  2965               	goto	L4
  1636  015B                     l4732:	
  1637                           
  1638                           ;main.c: 848: else if( uiOldValue < 2281 )
  1639  015B  3008               	movlw	8
  1640  015C  0249               	subwf	main@uiOldValue+1,w
  1641  015D  30E9               	movlw	233
  1642  015E  1903               	skipnz
  1643  015F  0248               	subwf	main@uiOldValue,w
  1644  0160  1803               	skipnc
  1645  0161  2964               	goto	l4736
  1646                           
  1647                           ;main.c: 849: ucChannel4Type = BETWEEN_2204_AND_2340;
  1648  0162  3003               	movlw	3
  1649  0163  2965               	goto	L4
  1650  0164                     l4736:	
  1651                           
  1652                           ;main.c: 850: else
  1653                           ;main.c: 851: ucChannel4Type = MORE_THAN_2340;
  1654  0164  3004               	movlw	4
  1655  0165                     L4:	
  1656  0165  00D2               	movwf	main@ucChannel4Type
  1657  0166                     l818:	
  1658                           
  1659                           ;main.c: 853: ucADC4_Step = ADC4_STEP_SECOND;
  1660  0166  3002               	movlw	2
  1661  0167  2B7B               	goto	L14
  1662  0168                     l833:	
  1663                           ;main.c: 871: {
  1664                           ;main.c: 872: case 0:
  1665                           
  1666                           ;main.c: 854: break;
  1667                           
  1668                           
  1669                           ;main.c: 873: {
  1670                           ;main.c: 876: PB0 = 1;
  1671  0168  1406               	bsf	6,0
  1672  0169                     l4738:	
  1673                           
  1674                           ;main.c: 880: ucLoaderStep++;
  1675  0169  0AD6               	incf	main@ucLoaderStep,f
  1676                           
  1677                           ;main.c: 881: break;
  1678  016A  2840               	goto	l4594
  1679  016B                     l4740:	
  1680                           
  1681                           ;main.c: 885: {
  1682                           ;main.c: 886: if(ucTimerDelay >= 5)
  1683  016B  3005               	movlw	5
  1684  016C  025C               	subwf	main@ucTimerDelay,w
  1685  016D  1C03               	skipc
  1686  016E  2972               	goto	l4748
  1687                           
  1688                           ;main.c: 887: {
  1689                           ;main.c: 889: PA0 = 1;
  1690  016F  1405               	bsf	5,0
  1691  0170                     l4744:	
  1692                           
  1693                           ;main.c: 893: ucTimerDelay = 0;
  1694  0170  01DC               	clrf	main@ucTimerDelay
  1695  0171  2969               	goto	l4738
  1696  0172                     l4748:	
  1697                           
  1698                           ;main.c: 896: else
  1699                           ;main.c: 897: ucTimerDelay++;
  1700  0172  0ADC               	incf	main@ucTimerDelay,f
  1701  0173  2840               	goto	l4594
  1702  0174                     l4750:	
  1703                           
  1704                           ;main.c: 902: {
  1705                           ;main.c: 903: if(ucTimerDelay >= 5)
  1706  0174  3005               	movlw	5
  1707  0175  025C               	subwf	main@ucTimerDelay,w
  1708  0176  1C03               	skipc
  1709  0177  2972               	goto	l4748
  1710                           
  1711                           ;main.c: 904: {
  1712                           ;main.c: 906: PA1= 1;
  1713  0178  1485               	bsf	5,1
  1714  0179  2970               	goto	l4744
  1715  017A                     l4760:	
  1716                           
  1717                           ;main.c: 920: {
  1718                           ;main.c: 921: if(ucTimerDelay >= 5)
  1719  017A  3005               	movlw	5
  1720  017B  025C               	subwf	main@ucTimerDelay,w
  1721  017C  1C03               	skipc
  1722  017D  2972               	goto	l4748
  1723                           
  1724                           ;main.c: 922: {
  1725                           ;main.c: 924: PA2= 1;
  1726  017E  1505               	bsf	5,2
  1727  017F  2970               	goto	l4744
  1728  0180                     l4770:	
  1729                           
  1730                           ;main.c: 938: {
  1731                           ;main.c: 939: if(ucTimerDelay >= 5)
  1732  0180  3005               	movlw	5
  1733  0181  025C               	subwf	main@ucTimerDelay,w
  1734  0182  1C03               	skipc
  1735  0183  2972               	goto	l4748
  1736                           
  1737                           ;main.c: 940: {
  1738                           ;main.c: 942: PA3 = 1;
  1739  0184  1585               	bsf	5,3
  1740  0185  2970               	goto	l4744
  1741  0186                     l4780:	
  1742                           
  1743                           ;main.c: 955: {
  1744                           ;main.c: 956: if(ucTimerDelay >= 5)
  1745  0186  3005               	movlw	5
  1746  0187  025C               	subwf	main@ucTimerDelay,w
  1747  0188  1C03               	skipc
  1748  0189  2972               	goto	l4748
  1749                           
  1750                           ;main.c: 957: {
  1751                           ;main.c: 959: PB0 = 0;
  1752  018A  1006               	bcf	6,0
  1753                           
  1754                           ;main.c: 960: PA0 = 0;
  1755  018B  1005               	bcf	5,0
  1756                           
  1757                           ;main.c: 961: PA1 = 0;
  1758  018C  1085               	bcf	5,1
  1759                           
  1760                           ;main.c: 962: PA2 = 0;
  1761  018D  1105               	bcf	5,2
  1762                           
  1763                           ;main.c: 963: PA3 = 0;
  1764  018E  1185               	bcf	5,3
  1765  018F  2970               	goto	l4744
  1766  0190                     l4790:	
  1767                           
  1768                           ;main.c: 980: {
  1769                           ;main.c: 981: if(ucTimerDelay >= 1)
  1770  0190  085C               	movf	main@ucTimerDelay,w
  1771  0191  1903               	btfsc	3,2
  1772  0192  2972               	goto	l4748
  1773                           
  1774                           ;main.c: 982: {
  1775                           ;main.c: 983: ucTimerDelay = 0;
  1776  0193  01DC               	clrf	main@ucTimerDelay
  1777                           
  1778                           ;main.c: 985: ucLoaderStep = 0;
  1779  0194  01D6               	clrf	main@ucLoaderStep
  1780  0195                     l4794:	
  1781                           
  1782                           ;main.c: 986: ucADC4_Step = ADC4_STEP_THIRD;
  1783  0195  3003               	movlw	3
  1784  0196  2B7B               	goto	L14
  1785  0197                     l4800:	
  1786                           ;main.c: 987: }
  1787                           
  1788  0197  0856               	movf	main@ucLoaderStep,w
  1789                           
  1790                           ; Switch size 1, requested type "space"
  1791                           ; Number of cases is 7, Range of values is 0 to 6
  1792                           ; switch strategies available:
  1793                           ; Name         Instructions Cycles
  1794                           ; direct_byte           21     7 (fixed)
  1795                           ; simple_byte           22    12 (average)
  1796                           ; jumptable            260     6 (fixed)
  1797                           ; rangetable            11     6 (fixed)
  1798                           ; spacedrange           20     9 (fixed)
  1799                           ; locatedrange           7     3 (fixed)
  1800                           ;	Chosen strategy is direct_byte
  1801  0198  0084               	movwf	4
  1802  0199  3007               	movlw	7
  1803  019A  0204               	subwf	4,w
  1804  019B  1803               	skipnc
  1805  019C  2840               	goto	l4594
  1806  019D  3007               	movlw	high S5544
  1807  019E  008A               	movwf	10
  1808  019F  1003               	clrc
  1809  01A0  0D04               	rlf	4,w
  1810  01A1  3E61               	addlw	low S5544
  1811  01A2  0082               	movwf	2
  1812  01A3                     l861:	
  1813                           ;main.c: 1006: {
  1814                           ;main.c: 1007: case 0:
  1815                           
  1816                           
  1817                           ;main.c: 1008: {
  1818                           ;main.c: 1010: PB0 = 1;
  1819  01A3  1406               	bsf	6,0
  1820  01A4                     l4802:	
  1821                           
  1822                           ;main.c: 1014: ucLoaderStep1++;
  1823  01A4  0AD7               	incf	main@ucLoaderStep1,f
  1824                           
  1825                           ;main.c: 1015: break;
  1826  01A5  2840               	goto	l4594
  1827  01A6                     l4804:	
  1828                           
  1829                           ;main.c: 1019: {
  1830                           ;main.c: 1020: if(ucTimerDelay1 >= 5)
  1831  01A6  3005               	movlw	5
  1832  01A7  025D               	subwf	main@ucTimerDelay1,w
  1833  01A8  1C03               	skipc
  1834  01A9  29AD               	goto	l4812
  1835                           
  1836                           ;main.c: 1021: {
  1837                           ;main.c: 1023: PA0 = 1;
  1838  01AA  1405               	bsf	5,0
  1839  01AB                     l4808:	
  1840                           
  1841                           ;main.c: 1027: ucTimerDelay1 = 0;
  1842  01AB  01DD               	clrf	main@ucTimerDelay1
  1843  01AC  29A4               	goto	l4802
  1844  01AD                     l4812:	
  1845                           
  1846                           ;main.c: 1030: else
  1847                           ;main.c: 1031: ucTimerDelay1++;
  1848  01AD  0ADD               	incf	main@ucTimerDelay1,f
  1849  01AE  2840               	goto	l4594
  1850  01AF                     l4814:	
  1851                           
  1852                           ;main.c: 1036: {
  1853                           ;main.c: 1037: if(ucTimerDelay1 >= 5)
  1854  01AF  3005               	movlw	5
  1855  01B0  025D               	subwf	main@ucTimerDelay1,w
  1856  01B1  1C03               	skipc
  1857  01B2  29AD               	goto	l4812
  1858                           
  1859                           ;main.c: 1038: {
  1860                           ;main.c: 1040: PA1= 1;
  1861  01B3  1485               	bsf	5,1
  1862  01B4  29AB               	goto	l4808
  1863  01B5                     l4824:	
  1864                           
  1865                           ;main.c: 1053: {
  1866                           ;main.c: 1054: if(ucTimerDelay1 >= 5)
  1867  01B5  3005               	movlw	5
  1868  01B6  025D               	subwf	main@ucTimerDelay1,w
  1869  01B7  1C03               	skipc
  1870  01B8  29AD               	goto	l4812
  1871                           
  1872                           ;main.c: 1055: {
  1873                           ;main.c: 1057: setPA2(1);
  1874  01B9  3001               	movlw	1
  1875  01BA  118A  27EC  118A   	fcall	_setPA2
  1876  01BD  29AB               	goto	l4808
  1877  01BE                     l4834:	
  1878                           
  1879                           ;main.c: 1067: {
  1880                           ;main.c: 1068: if(ucTimerDelay1 >= 5)
  1881  01BE  3005               	movlw	5
  1882  01BF  025D               	subwf	main@ucTimerDelay1,w
  1883  01C0  1C03               	skipc
  1884  01C1  29AD               	goto	l4812
  1885                           
  1886                           ;main.c: 1069: {
  1887                           ;main.c: 1071: setPA3(1);
  1888  01C2  3001               	movlw	1
  1889  01C3  118A  27E4  118A   	fcall	_setPA3
  1890  01C6  29AB               	goto	l4808
  1891  01C7                     l4844:	
  1892                           
  1893                           ;main.c: 1081: {
  1894                           ;main.c: 1082: if(ucTimerDelay1 >= 5)
  1895  01C7  3005               	movlw	5
  1896  01C8  025D               	subwf	main@ucTimerDelay1,w
  1897  01C9  1C03               	skipc
  1898  01CA  29AD               	goto	l4812
  1899                           
  1900                           ;main.c: 1083: {
  1901                           ;main.c: 1085: setPA0(0);
  1902  01CB  3000               	movlw	0
  1903  01CC  158A  27F8  118A   	fcall	_setPA0
  1904                           
  1905                           ;main.c: 1087: setPA1(0);
  1906  01CF  3000               	movlw	0
  1907  01D0  118A  27F4  118A   	fcall	_setPA1
  1908                           
  1909                           ;main.c: 1089: setPA2(0);
  1910  01D3  3000               	movlw	0
  1911  01D4  118A  27EC  118A   	fcall	_setPA2
  1912                           
  1913                           ;main.c: 1091: setPA3(0);
  1914  01D7  3000               	movlw	0
  1915  01D8  118A  27E4  118A   	fcall	_setPA3
  1916  01DB  29AB               	goto	l4808
  1917  01DC                     l4854:	
  1918                           
  1919                           ;main.c: 1101: {
  1920                           ;main.c: 1102: if(ucTimerDelay1 >= 1)
  1921  01DC  085D               	movf	main@ucTimerDelay1,w
  1922  01DD  1903               	btfsc	3,2
  1923  01DE  29AD               	goto	l4812
  1924                           
  1925                           ;main.c: 1103: {
  1926                           ;main.c: 1104: ucTimerDelay1 = 0;
  1927  01DF  01DD               	clrf	main@ucTimerDelay1
  1928                           
  1929                           ;main.c: 1106: ucLoaderStep1 = 0;
  1930  01E0  01D7               	clrf	main@ucLoaderStep1
  1931  01E1  2995               	goto	l4794
  1932  01E2                     l4864:	
  1933  01E2  0857               	movf	main@ucLoaderStep1,w
  1934                           
  1935                           ; Switch size 1, requested type "space"
  1936                           ; Number of cases is 7, Range of values is 0 to 6
  1937                           ; switch strategies available:
  1938                           ; Name         Instructions Cycles
  1939                           ; direct_byte           21     7 (fixed)
  1940                           ; simple_byte           22    12 (average)
  1941                           ; jumptable            260     6 (fixed)
  1942                           ; rangetable            11     6 (fixed)
  1943                           ; spacedrange           20     9 (fixed)
  1944                           ; locatedrange           7     3 (fixed)
  1945                           ;	Chosen strategy is direct_byte
  1946  01E3  0084               	movwf	4
  1947  01E4  3007               	movlw	7
  1948  01E5  0204               	subwf	4,w
  1949  01E6  1803               	skipnc
  1950  01E7  2840               	goto	l4594
  1951  01E8  3007               	movlw	high S5546
  1952  01E9  008A               	movwf	10
  1953  01EA  1003               	clrc
  1954  01EB  0D04               	rlf	4,w
  1955  01EC  3E6F               	addlw	low S5546
  1956  01ED  0082               	movwf	2
  1957  01EE                     l4866:	
  1958                           
  1959                           ;main.c: 1130: {
  1960                           ;main.c: 1132: setPB0(1);
  1961  01EE  3001               	movlw	1
  1962  01EF  118A  27CB  118A   	fcall	_setPB0
  1963                           
  1964                           ;main.c: 1134: setPA0(1);
  1965  01F2  3001               	movlw	1
  1966  01F3  158A  27F8  118A   	fcall	_setPA0
  1967  01F6                     l4868:	
  1968                           
  1969                           ;main.c: 1135: ucLoaderStep2++;
  1970  01F6  0AD8               	incf	main@ucLoaderStep2,f
  1971                           
  1972                           ;main.c: 1136: break;
  1973  01F7  2840               	goto	l4594
  1974  01F8                     l4870:	
  1975                           
  1976                           ;main.c: 1140: {
  1977                           ;main.c: 1141: if(ucTimerDelay2 >= 5)
  1978  01F8  3005               	movlw	5
  1979  01F9  025E               	subwf	main@ucTimerDelay2,w
  1980  01FA  1C03               	skipc
  1981  01FB  2A02               	goto	l4878
  1982                           
  1983                           ;main.c: 1142: {
  1984                           ;main.c: 1144: setPA1(1);
  1985  01FC  3001               	movlw	1
  1986  01FD  118A  27F4  118A   	fcall	_setPA1
  1987  0200                     l4874:	
  1988                           
  1989                           ;main.c: 1145: ucTimerDelay2 = 0;
  1990  0200  01DE               	clrf	main@ucTimerDelay2
  1991  0201  29F6               	goto	l4868
  1992  0202                     l4878:	
  1993                           
  1994                           ;main.c: 1148: else
  1995                           ;main.c: 1149: ucTimerDelay2++;
  1996  0202  0ADE               	incf	main@ucTimerDelay2,f
  1997  0203  2840               	goto	l4594
  1998  0204                     l4880:	
  1999                           
  2000                           ;main.c: 1154: {
  2001                           ;main.c: 1155: if(ucTimerDelay2 >= 5)
  2002  0204  3005               	movlw	5
  2003  0205  025E               	subwf	main@ucTimerDelay2,w
  2004  0206  1C03               	skipc
  2005  0207  2A02               	goto	l4878
  2006                           
  2007                           ;main.c: 1156: {
  2008                           ;main.c: 1158: setPA2(1);
  2009  0208  3001               	movlw	1
  2010  0209  118A  27EC  118A   	fcall	_setPA2
  2011  020C  2A00               	goto	l4874
  2012  020D                     l4890:	
  2013                           
  2014                           ;main.c: 1168: {
  2015                           ;main.c: 1169: if(ucTimerDelay2 >= 5)
  2016  020D  3005               	movlw	5
  2017  020E  025E               	subwf	main@ucTimerDelay2,w
  2018  020F  1C03               	skipc
  2019  0210  2A02               	goto	l4878
  2020                           
  2021                           ;main.c: 1170: {
  2022                           ;main.c: 1172: setPA3(1);
  2023  0211  3001               	movlw	1
  2024  0212  118A  27E4  118A   	fcall	_setPA3
  2025  0215  2A00               	goto	l4874
  2026  0216                     l4900:	
  2027                           
  2028                           ;main.c: 1182: {
  2029                           ;main.c: 1183: if(ucTimerDelay2 >= 5)
  2030  0216  3005               	movlw	5
  2031  0217  025E               	subwf	main@ucTimerDelay2,w
  2032  0218  1C03               	skipc
  2033  0219  2A02               	goto	l4878
  2034                           
  2035                           ;main.c: 1184: {
  2036                           ;main.c: 1187: setPA1(0);
  2037  021A  3000               	movlw	0
  2038  021B  118A  27F4  118A   	fcall	_setPA1
  2039                           
  2040                           ;main.c: 1189: setPA2(0);
  2041  021E  3000               	movlw	0
  2042  021F  118A  27EC  118A   	fcall	_setPA2
  2043                           
  2044                           ;main.c: 1191: setPA3(0);
  2045  0222  3000               	movlw	0
  2046  0223  118A  27E4  118A   	fcall	_setPA3
  2047  0226  2A00               	goto	l4874
  2048  0227                     l4910:	
  2049                           
  2050                           ;main.c: 1201: {
  2051                           ;main.c: 1202: if(ucTimerDelay2 >= 1)
  2052  0227  085E               	movf	main@ucTimerDelay2,w
  2053  0228  1903               	btfsc	3,2
  2054  0229  2A02               	goto	l4878
  2055                           
  2056                           ;main.c: 1203: {
  2057                           ;main.c: 1204: ucTimerDelay2 = 0;
  2058  022A  01DE               	clrf	main@ucTimerDelay2
  2059                           
  2060                           ;main.c: 1206: ucLoaderStep2 = 0;
  2061  022B  01D8               	clrf	main@ucLoaderStep2
  2062  022C  2995               	goto	l4794
  2063  022D                     l4920:	
  2064  022D  0858               	movf	main@ucLoaderStep2,w
  2065                           
  2066                           ; Switch size 1, requested type "space"
  2067                           ; Number of cases is 6, Range of values is 0 to 5
  2068                           ; switch strategies available:
  2069                           ; Name         Instructions Cycles
  2070                           ; direct_byte           19     7 (fixed)
  2071                           ; simple_byte           19    10 (average)
  2072                           ; jumptable            260     6 (fixed)
  2073                           ; rangetable            10     6 (fixed)
  2074                           ; spacedrange           18     9 (fixed)
  2075                           ; locatedrange           6     3 (fixed)
  2076                           ;	Chosen strategy is direct_byte
  2077  022E  0084               	movwf	4
  2078  022F  3006               	movlw	6
  2079  0230  0204               	subwf	4,w
  2080  0231  1803               	skipnc
  2081  0232  2840               	goto	l4594
  2082  0233  3007               	movlw	high S5548
  2083  0234  008A               	movwf	10
  2084  0235  1003               	clrc
  2085  0236  0D04               	rlf	4,w
  2086  0237  3E7D               	addlw	low S5548
  2087  0238  0082               	movwf	2
  2088  0239                     l4922:	
  2089                           
  2090                           ;main.c: 1230: {
  2091                           ;main.c: 1232: setPB0(1);
  2092  0239  3001               	movlw	1
  2093  023A  118A  27CB  118A   	fcall	_setPB0
  2094                           
  2095                           ;main.c: 1234: setPA0(1);
  2096  023D  3001               	movlw	1
  2097  023E  158A  27F8  118A   	fcall	_setPA0
  2098                           
  2099                           ;main.c: 1236: setPA1(1);
  2100  0241  3001               	movlw	1
  2101  0242  118A  27F4  118A   	fcall	_setPA1
  2102  0245                     l4924:	
  2103                           
  2104                           ;main.c: 1237: ucLoaderStep3++;
  2105  0245  0AD9               	incf	main@ucLoaderStep3,f
  2106                           
  2107                           ;main.c: 1238: break;
  2108  0246  2840               	goto	l4594
  2109  0247                     l4926:	
  2110                           
  2111                           ;main.c: 1242: {
  2112                           ;main.c: 1243: if(ucTimerDelay3 >= 5)
  2113  0247  3005               	movlw	5
  2114  0248  025F               	subwf	main@ucTimerDelay3,w
  2115  0249  1C03               	skipc
  2116  024A  2A51               	goto	l4934
  2117                           
  2118                           ;main.c: 1244: {
  2119                           ;main.c: 1246: setPA2(1);
  2120  024B  3001               	movlw	1
  2121  024C  118A  27EC  118A   	fcall	_setPA2
  2122  024F                     l4930:	
  2123                           
  2124                           ;main.c: 1247: ucTimerDelay3 = 0;
  2125  024F  01DF               	clrf	main@ucTimerDelay3
  2126  0250  2A45               	goto	l4924
  2127  0251                     l4934:	
  2128                           
  2129                           ;main.c: 1250: else
  2130                           ;main.c: 1251: ucTimerDelay3++;
  2131  0251  0ADF               	incf	main@ucTimerDelay3,f
  2132  0252  2840               	goto	l4594
  2133  0253                     l4936:	
  2134                           
  2135                           ;main.c: 1256: {
  2136                           ;main.c: 1257: if(ucTimerDelay3 >= 5)
  2137  0253  3005               	movlw	5
  2138  0254  025F               	subwf	main@ucTimerDelay3,w
  2139  0255  1C03               	skipc
  2140  0256  2A51               	goto	l4934
  2141                           
  2142                           ;main.c: 1258: {
  2143                           ;main.c: 1260: setPA3(1);
  2144  0257  3001               	movlw	1
  2145  0258  118A  27E4  118A   	fcall	_setPA3
  2146  025B  2A4F               	goto	l4930
  2147  025C                     l4946:	
  2148                           
  2149                           ;main.c: 1271: {
  2150                           ;main.c: 1272: if(ucTimerDelay3 >= 5)
  2151  025C  3005               	movlw	5
  2152  025D  025F               	subwf	main@ucTimerDelay3,w
  2153  025E  1C03               	skipc
  2154  025F  2A51               	goto	l4934
  2155                           
  2156                           ;main.c: 1273: {
  2157                           ;main.c: 1276: setPA2(0);
  2158  0260  3000               	movlw	0
  2159  0261  118A  27EC  118A   	fcall	_setPA2
  2160                           
  2161                           ;main.c: 1278: setPA3(0);
  2162  0264  3000               	movlw	0
  2163  0265  118A  27E4  118A   	fcall	_setPA3
  2164  0268  2A4F               	goto	l4930
  2165  0269                     l4956:	
  2166                           
  2167                           ;main.c: 1288: {
  2168                           ;main.c: 1289: if(ucTimerDelay3 >= 1)
  2169  0269  085F               	movf	main@ucTimerDelay3,w
  2170  026A  1903               	btfsc	3,2
  2171  026B  2A51               	goto	l4934
  2172                           
  2173                           ;main.c: 1290: {
  2174                           ;main.c: 1291: ucTimerDelay3 = 0;
  2175  026C  01DF               	clrf	main@ucTimerDelay3
  2176                           
  2177                           ;main.c: 1293: ucLoaderStep3 = 0;
  2178  026D  01D9               	clrf	main@ucLoaderStep3
  2179  026E  2995               	goto	l4794
  2180  026F                     l4966:	
  2181  026F  0859               	movf	main@ucLoaderStep3,w
  2182                           
  2183                           ; Switch size 1, requested type "space"
  2184                           ; Number of cases is 5, Range of values is 0 to 4
  2185                           ; switch strategies available:
  2186                           ; Name         Instructions Cycles
  2187                           ; simple_byte           16     9 (average)
  2188                           ; direct_byte           17     7 (fixed)
  2189                           ; jumptable            260     6 (fixed)
  2190                           ; rangetable             9     6 (fixed)
  2191                           ; spacedrange           16     9 (fixed)
  2192                           ; locatedrange           5     3 (fixed)
  2193                           ;	Chosen strategy is simple_byte
  2194  0270  3A00               	xorlw	0	; case 0
  2195  0271  1903               	skipnz
  2196  0272  2A39               	goto	l4922
  2197  0273  3A01               	xorlw	1	; case 1
  2198  0274  1903               	skipnz
  2199  0275  2A47               	goto	l4926
  2200  0276  3A03               	xorlw	3	; case 2
  2201  0277  1903               	skipnz
  2202  0278  2A53               	goto	l4936
  2203  0279  3A01               	xorlw	1	; case 3
  2204  027A  1903               	skipnz
  2205  027B  2A5C               	goto	l4946
  2206  027C  3A07               	xorlw	7	; case 4
  2207  027D  1903               	skipnz
  2208  027E  2A69               	goto	l4956
  2209  027F  2862               	goto	l752
  2210  0280                     l4968:	
  2211                           
  2212                           ;main.c: 1317: {
  2213                           ;main.c: 1319: setPB0(1);
  2214  0280  3001               	movlw	1
  2215  0281  118A  27CB  118A   	fcall	_setPB0
  2216                           
  2217                           ;main.c: 1321: setPA0(1);
  2218  0284  3001               	movlw	1
  2219  0285  158A  27F8  118A   	fcall	_setPA0
  2220                           
  2221                           ;main.c: 1323: setPA1(1);
  2222  0288  3001               	movlw	1
  2223  0289  118A  27F4  118A   	fcall	_setPA1
  2224                           
  2225                           ;main.c: 1325: setPA2(1);
  2226  028C  3001               	movlw	1
  2227  028D  118A  27EC  118A   	fcall	_setPA2
  2228  0290                     l4970:	
  2229                           
  2230                           ;main.c: 1326: ucLoaderStep4++;
  2231  0290  0ADA               	incf	main@ucLoaderStep4,f
  2232                           
  2233                           ;main.c: 1327: break;
  2234  0291  2840               	goto	l4594
  2235  0292                     l4972:	
  2236                           
  2237                           ;main.c: 1331: {
  2238                           ;main.c: 1332: if(ucTimerDelay4 >= 5)
  2239  0292  3005               	movlw	5
  2240  0293  0260               	subwf	main@ucTimerDelay4,w
  2241  0294  1C03               	skipc
  2242  0295  2A9C               	goto	l4980
  2243                           
  2244                           ;main.c: 1333: {
  2245                           ;main.c: 1335: setPA3(1);
  2246  0296  3001               	movlw	1
  2247  0297                     L7:	
  2248  0297  118A  27E4  118A   	fcall	_setPA3
  2249                           
  2250                           ;main.c: 1336: ucTimerDelay4 = 0;
  2251  029A  01E0               	clrf	main@ucTimerDelay4
  2252  029B  2A90               	goto	l4970
  2253  029C                     l4980:	
  2254                           
  2255                           ;main.c: 1339: else
  2256                           ;main.c: 1340: ucTimerDelay4++;
  2257  029C  0AE0               	incf	main@ucTimerDelay4,f
  2258  029D  2840               	goto	l4594
  2259  029E                     l4982:	
  2260                           
  2261                           ;main.c: 1345: {
  2262                           ;main.c: 1346: if(ucTimerDelay4 >= 5)
  2263  029E  3005               	movlw	5
  2264  029F  0260               	subwf	main@ucTimerDelay4,w
  2265  02A0  1C03               	skipc
  2266  02A1  2A9C               	goto	l4980
  2267                           
  2268                           ;main.c: 1347: {
  2269                           ;main.c: 1349: setPA3(0);
  2270  02A2  3000               	movlw	0
  2271  02A3  2A97               	goto	L7
  2272  02A4                     l4992:	
  2273                           
  2274                           ;main.c: 1359: {
  2275                           ;main.c: 1360: if(ucTimerDelay4 >= 1)
  2276  02A4  0860               	movf	main@ucTimerDelay4,w
  2277  02A5  1903               	btfsc	3,2
  2278  02A6  2A9C               	goto	l4980
  2279                           
  2280                           ;main.c: 1361: {
  2281                           ;main.c: 1362: ucTimerDelay4 = 0;
  2282  02A7  01E0               	clrf	main@ucTimerDelay4
  2283                           
  2284                           ;main.c: 1364: ucLoaderStep4 = 0;
  2285  02A8  01DA               	clrf	main@ucLoaderStep4
  2286  02A9  2995               	goto	l4794
  2287  02AA                     l5002:	
  2288  02AA  085A               	movf	main@ucLoaderStep4,w
  2289                           
  2290                           ; Switch size 1, requested type "space"
  2291                           ; Number of cases is 4, Range of values is 0 to 3
  2292                           ; switch strategies available:
  2293                           ; Name         Instructions Cycles
  2294                           ; simple_byte           13     7 (average)
  2295                           ; direct_byte           15     7 (fixed)
  2296                           ; jumptable            260     6 (fixed)
  2297                           ; rangetable             8     6 (fixed)
  2298                           ; spacedrange           14     9 (fixed)
  2299                           ; locatedrange           4     3 (fixed)
  2300                           ;	Chosen strategy is simple_byte
  2301  02AB  3A00               	xorlw	0	; case 0
  2302  02AC  1903               	skipnz
  2303  02AD  2A80               	goto	l4968
  2304  02AE  3A01               	xorlw	1	; case 1
  2305  02AF  1903               	skipnz
  2306  02B0  2A92               	goto	l4972
  2307  02B1  3A03               	xorlw	3	; case 2
  2308  02B2  1903               	skipnz
  2309  02B3  2A9E               	goto	l4982
  2310  02B4  3A01               	xorlw	1	; case 3
  2311  02B5  1903               	skipnz
  2312  02B6  2AA4               	goto	l4992
  2313  02B7  2862               	goto	l752
  2314  02B8                     l5006:	
  2315  02B8  0852               	movf	main@ucChannel4Type,w
  2316                           
  2317                           ; Switch size 1, requested type "space"
  2318                           ; Number of cases is 5, Range of values is 0 to 4
  2319                           ; switch strategies available:
  2320                           ; Name         Instructions Cycles
  2321                           ; simple_byte           16     9 (average)
  2322                           ; direct_byte           17     7 (fixed)
  2323                           ; jumptable            260     6 (fixed)
  2324                           ; rangetable             9     6 (fixed)
  2325                           ; spacedrange           16     9 (fixed)
  2326                           ; locatedrange           5     3 (fixed)
  2327                           ;	Chosen strategy is simple_byte
  2328  02B9  3A00               	xorlw	0	; case 0
  2329  02BA  1903               	skipnz
  2330  02BB  2997               	goto	l4800
  2331  02BC  3A01               	xorlw	1	; case 1
  2332  02BD  1903               	skipnz
  2333  02BE  29E2               	goto	l4864
  2334  02BF  3A03               	xorlw	3	; case 2
  2335  02C0  1903               	skipnz
  2336  02C1  2A2D               	goto	l4920
  2337  02C2  3A01               	xorlw	1	; case 3
  2338  02C3  1903               	skipnz
  2339  02C4  2A6F               	goto	l4966
  2340  02C5  3A07               	xorlw	7	; case 4
  2341  02C6  1903               	skipnz
  2342  02C7  2AAA               	goto	l5002
  2343  02C8  2862               	goto	l752
  2344  02C9                     l5008:	
  2345                           
  2346                           ;main.c: 1388: {
  2347                           ;main.c: 1392: static unsigned char ucTimerDelayP2sLess = 0;
  2348                           ;main.c: 1394: static unsigned char ucTimerDelayP2sMore = 0;
  2349                           ;main.c: 1396: if( getAdOriginalCh1Value() <= 220 )
  2350  02C9  118A  259F  118A   	fcall	_getAdOriginalCh1Value
  2351  02CC  3000               	movlw	0
  2352  02CD  0247               	subwf	?_getAdOriginalCh1Value+1,w
  2353  02CE  30DD               	movlw	221
  2354  02CF  1903               	skipnz
  2355  02D0  0246               	subwf	?_getAdOriginalCh1Value,w
  2356  02D1  1803               	skipnc
  2357  02D2  2AD6               	goto	l5014
  2358                           
  2359                           ;main.c: 1397: {
  2360                           ;main.c: 1398: ucTimerDelayP2sLess++;
  2361  02D3  0AE1               	incf	main@ucTimerDelayP2sLess,f
  2362                           
  2363                           ;main.c: 1399: ucTimerDelayP2sMore = 0;
  2364  02D4  01E2               	clrf	main@ucTimerDelayP2sMore
  2365                           
  2366                           ;main.c: 1400: }
  2367  02D5  2AD8               	goto	l5018
  2368  02D6                     l5014:	
  2369                           
  2370                           ;main.c: 1401: else
  2371                           ;main.c: 1402: {
  2372                           ;main.c: 1403: ucTimerDelayP2sMore++;
  2373  02D6  0AE2               	incf	main@ucTimerDelayP2sMore,f
  2374                           
  2375                           ;main.c: 1404: ucTimerDelayP2sLess = 0;
  2376  02D7  01E1               	clrf	main@ucTimerDelayP2sLess
  2377  02D8                     l5018:	
  2378                           
  2379                           ;main.c: 1405: }
  2380                           ;main.c: 1407: if( ucTimerDelayP2sLess >= 2)
  2381  02D8  3002               	movlw	2
  2382  02D9  0261               	subwf	main@ucTimerDelayP2sLess,w
  2383  02DA  1C03               	skipc
  2384  02DB  2AE4               	goto	l5026
  2385                           
  2386                           ;main.c: 1408: {
  2387                           ;main.c: 1409: ucTimerDelayP2sLess = 0;
  2388  02DC  01E1               	clrf	main@ucTimerDelayP2sLess
  2389                           
  2390                           ;main.c: 1410: ucTimerDelayP2sMore = 0;
  2391  02DD  01E2               	clrf	main@ucTimerDelayP2sMore
  2392                           
  2393                           ;main.c: 1412: startTwentySecondsTimer();
  2394  02DE  118A  2750  118A   	fcall	_startTwentySecondsTimer
  2395                           
  2396                           ;main.c: 1414: ucADC4_Step = ADC4_STEP_FOURTH_PREFIX1;
  2397  02E1  3004               	movlw	4
  2398  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  2399  02E3  00D1               	movwf	main@ucADC4_Step
  2400  02E4                     l5026:	
  2401                           
  2402                           ;main.c: 1415: }
  2403                           ;main.c: 1417: if(ucTimerDelayP2sMore >= 2)
  2404  02E4  3002               	movlw	2
  2405  02E5  0262               	subwf	main@ucTimerDelayP2sMore,w
  2406  02E6  1C03               	skipc
  2407  02E7  2840               	goto	l4594
  2408                           
  2409                           ;main.c: 1418: {
  2410                           ;main.c: 1419: ucTimerDelayP2sMore = 0;
  2411  02E8  01E2               	clrf	main@ucTimerDelayP2sMore
  2412                           
  2413                           ;main.c: 1420: ucTimerDelayP2sLess = 0;
  2414  02E9  01E1               	clrf	main@ucTimerDelayP2sLess
  2415  02EA                     l5030:	
  2416                           
  2417                           ;main.c: 1421: ucADC4_Step = ADC4_STEP_FOURTH_PREFIX2;
  2418  02EA  3005               	movlw	5
  2419  02EB  2B7A               	goto	L20
  2420  02EC                     l5032:	
  2421                           
  2422                           ;main.c: 1429: {
  2423                           ;main.c: 1433: if( !isFinishedTwentySecondsTimer() )
  2424  02EC  118A  2795  118A   	fcall	_isFinishedTwentySecondsTimer
  2425  02EF  3800               	iorlw	0
  2426  02F0  1903               	btfsc	3,2
  2427  02F1  2AEA               	goto	l5030
  2428                           
  2429                           ;main.c: 1435: else
  2430                           ;main.c: 1436: ucADC4_Step = ADC4_STEP_FOURTH_PREFIX3;
  2431  02F2  3006               	movlw	6
  2432  02F3  2B7A               	goto	L20
  2433  02F4                     l5038:	
  2434                           
  2435                           ;main.c: 1443: {
  2436                           ;main.c: 1447: static unsigned char ucTimerForDACR0_CNT1 = 0, ucTimerForDACR0_CNT2 = 0;
  2437                           ;main.c: 1449: static unsigned char ucTimerForDACR0_CNT1_f = 0, ucTimerForDACR0_CNT2_f =
      +                           0;
  2438                           ;main.c: 1451: if((getAdOriginalCh14Value() > 2800))
  2439  02F4  118A  25A9  118A   	fcall	_getAdOriginalCh14Value
  2440  02F7  300A               	movlw	10
  2441  02F8  0247               	subwf	?_getAdOriginalCh14Value+1,w
  2442  02F9  30F1               	movlw	241
  2443  02FA  1903               	skipnz
  2444  02FB  0246               	subwf	?_getAdOriginalCh14Value,w
  2445  02FC  1C03               	skipc
  2446  02FD  2B01               	goto	l5044
  2447                           
  2448                           ;main.c: 1452: {
  2449                           ;main.c: 1453: ucTimerForDACR0_CNT1++;
  2450  02FE  0AE3               	incf	main@ucTimerForDACR0_CNT1,f
  2451                           
  2452                           ;main.c: 1454: ucTimerForDACR0_CNT2 = 0;
  2453  02FF  01E5               	clrf	main@ucTimerForDACR0_CNT2
  2454                           
  2455                           ;main.c: 1455: }
  2456  0300  2B03               	goto	l5048
  2457  0301                     l5044:	
  2458                           
  2459                           ;main.c: 1456: else
  2460                           ;main.c: 1457: {
  2461                           ;main.c: 1458: ucTimerForDACR0_CNT2++;
  2462  0301  0AE5               	incf	main@ucTimerForDACR0_CNT2,f
  2463                           
  2464                           ;main.c: 1459: ucTimerForDACR0_CNT1 = 0;
  2465  0302  01E3               	clrf	main@ucTimerForDACR0_CNT1
  2466  0303                     l5048:	
  2467                           
  2468                           ;main.c: 1460: }
  2469                           ;main.c: 1462: if(ucTimerForDACR0_CNT1 >= 2)
  2470  0303  3002               	movlw	2
  2471  0304  0263               	subwf	main@ucTimerForDACR0_CNT1,w
  2472  0305  1C03               	skipc
  2473  0306  2B09               	goto	l5052
  2474                           
  2475                           ;main.c: 1463: ucTimerForDACR0_CNT1_f = 1;
  2476  0307  01E4               	clrf	main@ucTimerForDACR0_CNT1_f
  2477  0308  0AE4               	incf	main@ucTimerForDACR0_CNT1_f,f
  2478  0309                     l5052:	
  2479                           
  2480                           ;main.c: 1465: if(ucTimerForDACR0_CNT2 >= 2)
  2481  0309  3002               	movlw	2
  2482  030A  0265               	subwf	main@ucTimerForDACR0_CNT2,w
  2483  030B  1C03               	skipc
  2484  030C  2B0F               	goto	l5056
  2485                           
  2486                           ;main.c: 1466: ucTimerForDACR0_CNT2_f = 1;
  2487  030D  01E6               	clrf	main@ucTimerForDACR0_CNT2_f
  2488  030E  0AE6               	incf	main@ucTimerForDACR0_CNT2_f,f
  2489  030F                     l5056:	
  2490                           
  2491                           ;main.c: 1468: if(ucTimerForDACR0_CNT1_f)
  2492  030F  0864               	movf	main@ucTimerForDACR0_CNT1_f,w
  2493  0310  1903               	btfsc	3,2
  2494  0311  2B14               	goto	l5060
  2495                           
  2496                           ;main.c: 1469: {
  2497                           ;main.c: 1471: DACR0=0x0F;
  2498  0312  300F               	movlw	15
  2499  0313  2B18               	goto	L10
  2500  0314                     l5060:	
  2501                           ;main.c: 1476: }
  2502                           
  2503                           ;main.c: 1475: ucADC4_Step = ADC4_STEP_FOURTH;
  2504                           
  2505                           
  2506                           ;main.c: 1477: else if(ucTimerForDACR0_CNT2_f)
  2507  0314  0866               	movf	main@ucTimerForDACR0_CNT2_f,w
  2508  0315  1903               	btfsc	3,2
  2509  0316  2B1D               	goto	l5064
  2510                           
  2511                           ;main.c: 1478: {
  2512                           ;main.c: 1480: DACR0=0x09;
  2513  0317  3009               	movlw	9
  2514  0318                     L10:	
  2515  0318  1683               	bsf	3,5	;RP0=1, select bank1
  2516  0319  0088               	movwf	8	;volatile
  2517                           
  2518                           ;main.c: 1484: ucADC4_Step = ADC4_STEP_FOURTH;
  2519  031A  300A               	movlw	10
  2520  031B  1283               	bcf	3,5	;RP0=0, select bank0
  2521  031C  00D1               	movwf	main@ucADC4_Step
  2522  031D                     l5064:	
  2523                           ;main.c: 1485: }
  2524                           
  2525                           
  2526                           ;main.c: 1489: }
  2527                           ;main.c: 1491: if(ADC4_STEP_FOURTH == ucADC4_Step)
  2528  031D  0851               	movf	main@ucADC4_Step,w
  2529  031E  3A0A               	xorlw	10
  2530  031F  1D03               	skipz
  2531  0320  2840               	goto	l4594
  2532                           
  2533                           ;main.c: 1492: {
  2534                           ;main.c: 1493: ucTimerForDACR0_CNT1 = 0;
  2535  0321  01E3               	clrf	main@ucTimerForDACR0_CNT1
  2536                           
  2537                           ;main.c: 1494: ucTimerForDACR0_CNT2 = 0;
  2538  0322  01E5               	clrf	main@ucTimerForDACR0_CNT2
  2539                           
  2540                           ;main.c: 1495: ucTimerForDACR0_CNT1_f = 0;
  2541  0323  01E4               	clrf	main@ucTimerForDACR0_CNT1_f
  2542                           
  2543                           ;main.c: 1496: ucTimerForDACR0_CNT2_f = 0;
  2544  0324  01E6               	clrf	main@ucTimerForDACR0_CNT2_f
  2545  0325  2840               	goto	l4594
  2546  0326                     l5068:	
  2547                           
  2548                           ;main.c: 1504: {
  2549                           ;main.c: 1508: clearTwentySecondsTimer();
  2550  0326  118A  26DC  118A   	fcall	_clearTwentySecondsTimer
  2551                           
  2552                           ;main.c: 1510: setPA6(0);
  2553  0329  3000               	movlw	0
  2554  032A  118A  27C2  118A   	fcall	_setPA6
  2555                           
  2556                           ;main.c: 1512: PBOD6 = 0;
  2557  032D  1683               	bsf	3,5	;RP0=1, select bank3
  2558  032E  1703               	bsf	3,6	;RP1=1, select bank3
  2559  032F  1308               	bcf	8,6
  2560                           
  2561                           ;main.c: 1513: PB6 = 1;
  2562  0330  1283               	bcf	3,5	;RP0=0, select bank0
  2563  0331  3007               	movlw	7
  2564  0332  2B40               	goto	L21
  2565  0333                     l5076:	
  2566                           ;main.c: 1519: break;
  2567                           
  2568                           ;main.c: 1518: ucADC4_Step = ADC4_STEP_FOURTH_PREFIX4;
  2569                           
  2570  0333  3005               	movlw	5
  2571                           
  2572                           ;main.c: 1525: {
  2573                           ;main.c: 1530: static unsigned char ucDelayPrefix4TimerP5s;
  2574                           ;main.c: 1532: ucDelayPrefix4TimerP5s++;
  2575  0334  0AD4               	incf	main@ucDelayPrefix4TimerP5s,f
  2576                           
  2577                           ;main.c: 1534: if( ucDelayPrefix4TimerP5s >= 5)
  2578  0335  0254               	subwf	main@ucDelayPrefix4TimerP5s,w
  2579  0336  1C03               	skipc
  2580  0337  2840               	goto	l4594
  2581  0338  3008               	movlw	8
  2582                           
  2583                           ;main.c: 1535: {
  2584                           ;main.c: 1536: ucDelayPrefix4TimerP5s = 0;
  2585  0339  01D4               	clrf	main@ucDelayPrefix4TimerP5s
  2586                           
  2587                           ;main.c: 1538: ucADC4_Step = ADC4_STEP_FOURTH_PREFIX5;
  2588  033A  2B7B               	goto	L14
  2589  033B                     l981:	
  2590                           ;main.c: 1541: }
  2591                           ;main.c: 1543: case ADC4_STEP_FOURTH_PREFIX5:
  2592                           
  2593                           
  2594                           ;main.c: 1544: {
  2595                           ;main.c: 1550: PBOD6 = 1;
  2596  033B  1683               	bsf	3,5	;RP0=1, select bank3
  2597  033C  1703               	bsf	3,6	;RP1=1, select bank3
  2598  033D  1708               	bsf	8,6
  2599                           
  2600                           ;main.c: 1551: PB6 = 1;
  2601  033E  1283               	bcf	3,5	;RP0=0, select bank0
  2602  033F  3009               	movlw	9
  2603  0340                     L21:	
  2604  0340  1303               	bcf	3,6	;RP1=0, select bank0
  2605  0341  1706               	bsf	6,6
  2606                           
  2607                           ;main.c: 1556: ucADC4_Step = ADC4_STEP_FOURTH_PREFIX6;
  2608  0342  2B7B               	goto	L14
  2609  0343                     l5086:	
  2610                           ;main.c: 1558: break;
  2611                           
  2612  0343  3002               	movlw	2
  2613                           
  2614                           ;main.c: 1563: {
  2615                           ;main.c: 1564: static unsigned char ucDelayPrefix6TimerP2s;
  2616                           ;main.c: 1566: ucDelayPrefix6TimerP2s++;
  2617  0344  0AD5               	incf	main@ucDelayPrefix6TimerP2s,f
  2618                           
  2619                           ;main.c: 1568: if( ucDelayPrefix6TimerP2s >= 2)
  2620  0345  0255               	subwf	main@ucDelayPrefix6TimerP2s,w
  2621  0346  1C03               	skipc
  2622  0347  2840               	goto	l4594
  2623                           
  2624                           ;main.c: 1569: {
  2625                           ;main.c: 1570: ucDelayPrefix6TimerP2s = 0;
  2626  0348  01D5               	clrf	main@ucDelayPrefix6TimerP2s
  2627  0349  2B84               	goto	l5128
  2628  034A                     l5094:	
  2629                           ;main.c: 1572: ucADC4_Step = ADC4_STEP_INIT;
  2630                           
  2631                           
  2632                           ;main.c: 1581: {
  2633                           ;main.c: 1585: static unsigned char ucCheckTimerP2sLess = 0;
  2634                           ;main.c: 1587: static unsigned char ucCheckTimerP2sMore = 0;
  2635                           ;main.c: 1589: if( getAdOriginalCh1Value() < 85)
  2636  034A  118A  259F  118A   	fcall	_getAdOriginalCh1Value
  2637  034D  3000               	movlw	0
  2638  034E  0247               	subwf	?_getAdOriginalCh1Value+1,w
  2639  034F  3055               	movlw	85
  2640  0350  1903               	skipnz
  2641  0351  0246               	subwf	?_getAdOriginalCh1Value,w
  2642  0352  1803               	skipnc
  2643  0353  2B58               	goto	l5100
  2644                           
  2645                           ;main.c: 1590: {
  2646                           ;main.c: 1591: ucCheckTimerP2sLess++;
  2647  0354  0AD3               	incf	main@ucCheckTimerP2sLess,f
  2648                           
  2649                           ;main.c: 1592: ucCheckTimerP2sMore = 0;
  2650  0355  1683               	bsf	3,5	;RP0=1, select bank1
  2651  0356  01AF               	clrf	main@ucCheckTimerP2sMore^(0+128)
  2652                           
  2653                           ;main.c: 1593: }
  2654  0357  2B5C               	goto	l5104
  2655  0358                     l5100:	
  2656                           
  2657                           ;main.c: 1594: else
  2658                           ;main.c: 1595: {
  2659                           ;main.c: 1596: ucCheckTimerP2sMore++;
  2660  0358  1683               	bsf	3,5	;RP0=1, select bank1
  2661  0359  0AAF               	incf	main@ucCheckTimerP2sMore^(0+128),f
  2662                           
  2663                           ;main.c: 1597: ucCheckTimerP2sLess = 0;
  2664  035A  1283               	bcf	3,5	;RP0=0, select bank0
  2665  035B  01D3               	clrf	main@ucCheckTimerP2sLess
  2666  035C                     l5104:	
  2667                           
  2668                           ;main.c: 1598: }
  2669                           ;main.c: 1600: if( ucCheckTimerP2sMore > 2)
  2670  035C  3003               	movlw	3
  2671  035D  1683               	bsf	3,5	;RP0=1, select bank1
  2672  035E  022F               	subwf	main@ucCheckTimerP2sMore^(0+128),w
  2673  035F  1C03               	skipc
  2674  0360  2B67               	goto	l5110
  2675                           
  2676                           ;main.c: 1601: {
  2677                           ;main.c: 1602: ucCheckTimerP2sMore = 0;
  2678  0361  01AF               	clrf	main@ucCheckTimerP2sMore^(0+128)
  2679                           
  2680                           ;main.c: 1603: ucCheckTimerP2sLess = 0;
  2681  0362  1283               	bcf	3,5	;RP0=0, select bank0
  2682  0363  3003               	movlw	3
  2683  0364  01D3               	clrf	main@ucCheckTimerP2sLess
  2684                           
  2685                           ;main.c: 1605: ucADC4_Step = ADC4_STEP_INIT;
  2686  0365  01D1               	clrf	main@ucADC4_Step
  2687                           
  2688                           ;main.c: 1607: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  2689  0366  00D0               	movwf	main@enumMainLoopStep
  2690  0367                     l5110:	
  2691                           
  2692                           ;main.c: 1608: }
  2693                           ;main.c: 1610: if( ucCheckTimerP2sLess > 2)
  2694  0367  3003               	movlw	3
  2695  0368  1283               	bcf	3,5	;RP0=0, select bank0
  2696  0369  0253               	subwf	main@ucCheckTimerP2sLess,w
  2697  036A  1C03               	skipc
  2698  036B  2840               	goto	l4594
  2699                           
  2700                           ;main.c: 1611: {
  2701                           ;main.c: 1612: ucCheckTimerP2sMore = 0;
  2702  036C  1683               	bsf	3,5	;RP0=1, select bank1
  2703  036D  01AF               	clrf	main@ucCheckTimerP2sMore^(0+128)
  2704                           
  2705                           ;main.c: 1613: ucCheckTimerP2sLess = 0;
  2706  036E  1283               	bcf	3,5	;RP0=0, select bank0
  2707  036F  300B               	movlw	11
  2708  0370  01D3               	clrf	main@ucCheckTimerP2sLess
  2709                           
  2710                           ;main.c: 1615: ucADC4_Step = ADC4_STEP_FOURTH_SUFFIX1;
  2711  0371  2B7B               	goto	L14
  2712  0372                     l5116:	
  2713                           
  2714                           ;main.c: 1624: {
  2715                           ;main.c: 1628: static unsigned char ucFourthSuffix1TimerP3s = 0;
  2716                           ;main.c: 1630: ucFourthSuffix1TimerP3s++;
  2717  0372  1683               	bsf	3,5	;RP0=1, select bank1
  2718  0373  3004               	movlw	4
  2719  0374  0AB0               	incf	main@ucFourthSuffix1TimerP3s^(0+128),f
  2720                           
  2721                           ;main.c: 1632: if( ucFourthSuffix1TimerP3s > 3)
  2722  0375  0230               	subwf	main@ucFourthSuffix1TimerP3s^(0+128),w
  2723  0376  1C03               	skipc
  2724  0377  2840               	goto	l4594
  2725  0378  300C               	movlw	12
  2726                           
  2727                           ;main.c: 1633: {
  2728                           ;main.c: 1634: ucFourthSuffix1TimerP3s = 0;
  2729  0379  01B0               	clrf	main@ucFourthSuffix1TimerP3s^(0+128)
  2730  037A                     L20:	
  2731                           ;main.c: 1635: ucADC4_Step = ADC4_STEP_FOURTH_SUFFIX2;
  2732                           
  2733  037A  1283               	bcf	3,5	;RP0=0, select bank0
  2734  037B                     L14:	
  2735  037B  00D1               	movwf	main@ucADC4_Step
  2736  037C  2840               	goto	l4594
  2737  037D                     l5124:	
  2738                           
  2739                           ;main.c: 1642: {
  2740                           ;main.c: 1647: setPA6(0);
  2741  037D  3000               	movlw	0
  2742  037E  118A  27C2  118A   	fcall	_setPA6
  2743                           
  2744                           ;main.c: 1649: clearPinPortAndTimer();
  2745  0381  118A  26BE  118A   	fcall	_clearPinPortAndTimer
  2746  0384                     l5128:	
  2747                           
  2748                           ;main.c: 1650: ucADC4_Step = ADC4_STEP_INIT;
  2749  0384  01D1               	clrf	main@ucADC4_Step
  2750  0385  2860               	goto	l4612
  2751  0386                     l5134:	
  2752  0386  1283               	bcf	3,5	;RP0=0, select bank0
  2753  0387  0851               	movf	main@ucADC4_Step,w
  2754                           
  2755                           ; Switch size 1, requested type "space"
  2756                           ; Number of cases is 13, Range of values is 0 to 12
  2757                           ; switch strategies available:
  2758                           ; Name         Instructions Cycles
  2759                           ; direct_byte           33     7 (fixed)
  2760                           ; simple_byte           40    21 (average)
  2761                           ; jumptable            260     6 (fixed)
  2762                           ; rangetable            17     6 (fixed)
  2763                           ; spacedrange           32     9 (fixed)
  2764                           ; locatedrange          13     3 (fixed)
  2765                           ;	Chosen strategy is direct_byte
  2766  0388  0084               	movwf	4
  2767  0389  300D               	movlw	13
  2768  038A  0204               	subwf	4,w
  2769  038B  1803               	skipnc
  2770  038C  2840               	goto	l4594
  2771  038D  3006               	movlw	high S5550
  2772  038E  008A               	movwf	10
  2773  038F  1003               	clrc
  2774  0390  0D04               	rlf	4,w
  2775  0391  3EE2               	addlw	low S5550
  2776  0392  0082               	movwf	2
  2777  0393                     l1005:	
  2778                           ;main.c: 1679: {
  2779                           ;main.c: 1680: case HOUR_3_BRANCH_STEP_FIRST:
  2780                           
  2781                           
  2782                           ;main.c: 1681: {
  2783                           ;main.c: 1683: PB7 = 1;
  2784  0393  1283               	bcf	3,5	;RP0=0, select bank0
  2785  0394  1786               	bsf	6,7
  2786                           
  2787                           ;main.c: 1684: PBOD7 = 1;
  2788  0395  1683               	bsf	3,5	;RP0=1, select bank3
  2789  0396  3030               	movlw	48
  2790  0397  1703               	bsf	3,6	;RP1=1, select bank3
  2791  0398  1788               	bsf	8,7
  2792                           
  2793                           ;main.c: 1689: startThreeHoursTimer(10800);
  2794  0399  1283               	bcf	3,5	;RP0=0, select bank0
  2795  039A  1303               	bcf	3,6	;RP1=0, select bank0
  2796  039B  00A0               	movwf	?_startThreeHoursTimer
  2797  039C  302A               	movlw	42
  2798  039D  00A1               	movwf	?_startThreeHoursTimer+1
  2799  039E  118A  2715  118A   	fcall	_startThreeHoursTimer
  2800                           
  2801                           ;main.c: 1692: setPB0(1);
  2802  03A1  3001               	movlw	1
  2803  03A2  118A  27CB  118A   	fcall	_setPB0
  2804                           
  2805                           ;main.c: 1694: setPA0(1);
  2806  03A5  3001               	movlw	1
  2807  03A6  158A  27F8  118A   	fcall	_setPA0
  2808                           
  2809                           ;main.c: 1696: setPA1(1);
  2810  03A9  3001               	movlw	1
  2811  03AA  118A  27F4  118A   	fcall	_setPA1
  2812                           
  2813                           ;main.c: 1698: setPA2(1);
  2814  03AD  3001               	movlw	1
  2815  03AE  118A  27EC  118A   	fcall	_setPA2
  2816                           
  2817                           ;main.c: 1700: setPA3(1);
  2818  03B1  3001               	movlw	1
  2819  03B2  118A  27E4  118A   	fcall	_setPA3
  2820                           
  2821                           ;main.c: 1702: enumBranchStep = HOUR_3_BRANCH_STEP_SECOND;
  2822  03B5  1683               	bsf	3,5	;RP0=1, select bank1
  2823  03B6  01AD               	clrf	main@enumBranchStep^(0+128)
  2824  03B7  0AAD               	incf	main@enumBranchStep^(0+128),f
  2825                           
  2826                           ;main.c: 1703: break;
  2827  03B8  2840               	goto	l4594
  2828  03B9                     l5140:	
  2829                           
  2830                           ;main.c: 1707: {
  2831                           ;main.c: 1711: static unsigned char ucTimer20s = 0;
  2832                           ;main.c: 1713: if(ucTimer20s < 200)
  2833  03B9  30C8               	movlw	200
  2834  03BA  0232               	subwf	main@ucTimer20s^(0+128),w
  2835  03BB  1803               	skipnc
  2836  03BC  2BBF               	goto	l5144
  2837                           
  2838                           ;main.c: 1714: {
  2839                           ;main.c: 1715: ucTimer20s++;
  2840  03BD  0AB2               	incf	main@ucTimer20s^(0+128),f
  2841                           
  2842                           ;main.c: 1717: }
  2843  03BE  2840               	goto	l4594
  2844  03BF                     l5144:	
  2845  03BF  3002               	movlw	2
  2846                           
  2847                           ;main.c: 1718: else
  2848                           ;main.c: 1719: {
  2849                           ;main.c: 1721: ucTimer20s = 0;
  2850  03C0  01B2               	clrf	main@ucTimer20s^(0+128)
  2851                           
  2852                           ;main.c: 1723: enumBranchStep = HOUR_3_BRANCH_STEP_THIRD;
  2853  03C1  00AD               	movwf	main@enumBranchStep^(0+128)
  2854                           
  2855                           ;main.c: 1726: setPA6(0);
  2856  03C2  3000               	movlw	0
  2857  03C3  118A  27C2  118A   	fcall	_setPA6
  2858  03C6  2840               	goto	l4594
  2859  03C7                     l5150:	
  2860                           
  2861                           ;main.c: 1732: {
  2862                           ;main.c: 1736: if( isFinishedTwelveHoursTimer() && isFinishedThreeHoursTimer())
  2863  03C7  118A  27A1  118A   	fcall	_isFinishedTwelveHoursTimer
  2864  03CA  3A00               	xorlw	0
  2865  03CB  1903               	skipnz
  2866  03CC  2BD6               	goto	l5158
  2867  03CD  118A  2789  118A   	fcall	_isFinishedThreeHoursTimer
  2868  03D0  3A00               	xorlw	0
  2869  03D1  1903               	skipnz
  2870  03D2  2BD6               	goto	l5158
  2871                           
  2872                           ;main.c: 1737: {
  2873                           ;main.c: 1738: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2874  03D3  1683               	bsf	3,5	;RP0=1, select bank1
  2875  03D4  3009               	movlw	9
  2876  03D5  2BF6               	goto	L22
  2877  03D6                     l5158:	
  2878                           ;main.c: 1740: }
  2879                           
  2880                           ;main.c: 1739: enumMainLoopStep = MAIN_LOOP_STEP_12_HOUR_END;
  2881                           
  2882                           
  2883                           ;main.c: 1741: else
  2884                           ;main.c: 1742: {
  2885                           ;main.c: 1743: static unsigned char ucTimerX1P5s = 0;
  2886                           ;main.c: 1745: static unsigned char ucTimerLessX1P5s = 0;
  2887                           ;main.c: 1747: if(getAdOriginalCh1Value() < 115)
  2888  03D6  118A  259F  118A   	fcall	_getAdOriginalCh1Value
  2889  03D9  3000               	movlw	0
  2890  03DA  0247               	subwf	?_getAdOriginalCh1Value+1,w
  2891  03DB  3073               	movlw	115
  2892  03DC  1903               	skipnz
  2893  03DD  0246               	subwf	?_getAdOriginalCh1Value,w
  2894  03DE  1803               	skipnc
  2895  03DF  2BE4               	goto	l5164
  2896                           
  2897                           ;main.c: 1748: {
  2898                           ;main.c: 1749: ucTimerX1P5s = 0;
  2899  03E0  1683               	bsf	3,5	;RP0=1, select bank1
  2900  03E1  01B6               	clrf	main@ucTimerX1P5s^(0+128)
  2901                           
  2902                           ;main.c: 1750: ucTimerLessX1P5s++;
  2903  03E2  0AB3               	incf	main@ucTimerLessX1P5s^(0+128),f
  2904                           
  2905                           ;main.c: 1751: }
  2906  03E3  2BE7               	goto	l5168
  2907  03E4                     l5164:	
  2908                           
  2909                           ;main.c: 1752: else
  2910                           ;main.c: 1753: {
  2911                           ;main.c: 1754: ucTimerX1P5s++;
  2912  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  2913  03E5  0AB6               	incf	main@ucTimerX1P5s^(0+128),f
  2914                           
  2915                           ;main.c: 1755: ucTimerLessX1P5s = 0;
  2916  03E6  01B3               	clrf	main@ucTimerLessX1P5s^(0+128)
  2917  03E7                     l5168:	
  2918                           
  2919                           ;main.c: 1756: }
  2920                           ;main.c: 1758: if(ucTimerX1P5s >= 5)
  2921  03E7  3005               	movlw	5
  2922  03E8  0236               	subwf	main@ucTimerX1P5s^(0+128),w
  2923  03E9  1C03               	skipc
  2924  03EA  2BFA               	goto	l5182
  2925                           
  2926                           ;main.c: 1759: {
  2927                           ;main.c: 1760: ucTimerX1P5s = 0;
  2928  03EB  01B6               	clrf	main@ucTimerX1P5s^(0+128)
  2929                           
  2930                           ;main.c: 1764: PBOD7 = 0;
  2931  03EC  1703               	bsf	3,6	;RP1=1, select bank3
  2932  03ED  1388               	bcf	8,7
  2933                           
  2934                           ;main.c: 1765: PB7 = 0;
  2935  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  2936  03EF  1303               	bcf	3,6	;RP1=0, select bank0
  2937  03F0  1386               	bcf	6,7
  2938                           
  2939                           ;main.c: 1770: clearThreeHoursTimer();
  2940  03F1  118A  26D6  118A   	fcall	_clearThreeHoursTimer
  2941                           
  2942                           ;main.c: 1772: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2943  03F4  1683               	bsf	3,5	;RP0=1, select bank1
  2944  03F5  3002               	movlw	2
  2945  03F6                     L22:	
  2946  03F6  01AD               	clrf	main@enumBranchStep^(0+128)
  2947                           
  2948                           ;main.c: 1774: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
  2949  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  2950  03F8                     L15:	
  2951  03F8  00D0               	movwf	main@enumMainLoopStep
  2952                           
  2953                           ;main.c: 1775: }
  2954  03F9  2840               	goto	l4594
  2955  03FA                     l5182:	
  2956                           
  2957                           ;main.c: 1776: else if(ucTimerLessX1P5s >= 5)
  2958  03FA  3005               	movlw	5
  2959  03FB  0233               	subwf	main@ucTimerLessX1P5s^(0+128),w
  2960  03FC  1C03               	skipc
  2961  03FD  2840               	goto	l4594
  2962                           
  2963                           ;main.c: 1777: {
  2964                           ;main.c: 1778: static unsigned char ucTimerX2P5s = 0;
  2965                           ;main.c: 1780: static unsigned char ucTimerLessX2P5s = 0;
  2966                           ;main.c: 1782: if(getAdOriginalCh14Value() >= 1950)
  2967  03FE  118A  25A9  118A   	fcall	_getAdOriginalCh14Value
  2968  0401  3007               	movlw	7
  2969  0402  0247               	subwf	?_getAdOriginalCh14Value+1,w
  2970  0403  309E               	movlw	158
  2971  0404  1903               	skipnz
  2972  0405  0246               	subwf	?_getAdOriginalCh14Value,w
  2973  0406  1C03               	skipc
  2974  0407  2C0C               	goto	l5190
  2975                           
  2976                           ;main.c: 1783: {
  2977                           ;main.c: 1784: ucTimerX2P5s++;
  2978  0408  1683               	bsf	3,5	;RP0=1, select bank1
  2979  0409  0AB7               	incf	main@ucTimerX2P5s^(0+128),f
  2980                           
  2981                           ;main.c: 1785: ucTimerLessX2P5s = 0;
  2982  040A  01B4               	clrf	main@ucTimerLessX2P5s^(0+128)
  2983                           
  2984                           ;main.c: 1786: }
  2985  040B  2C0F               	goto	l5194
  2986  040C                     l5190:	
  2987                           
  2988                           ;main.c: 1787: else
  2989                           ;main.c: 1788: {
  2990                           ;main.c: 1789: ucTimerX2P5s = 0;
  2991  040C  1683               	bsf	3,5	;RP0=1, select bank1
  2992  040D  01B7               	clrf	main@ucTimerX2P5s^(0+128)
  2993                           
  2994                           ;main.c: 1790: ucTimerLessX2P5s++;
  2995  040E  0AB4               	incf	main@ucTimerLessX2P5s^(0+128),f
  2996  040F                     l5194:	
  2997                           
  2998                           ;main.c: 1791: }
  2999                           ;main.c: 1793: if(ucTimerX2P5s >= 5)
  3000  040F  3005               	movlw	5
  3001  0410  0237               	subwf	main@ucTimerX2P5s^(0+128),w
  3002  0411  1C03               	skipc
  3003  0412  2C15               	goto	l5198
  3004                           
  3005                           ;main.c: 1794: {
  3006                           ;main.c: 1795: ucTimerX2P5s = 0;
  3007  0413  01B7               	clrf	main@ucTimerX2P5s^(0+128)
  3008                           
  3009                           ;main.c: 1796: }
  3010  0414  2840               	goto	l4594
  3011  0415                     l5198:	
  3012                           
  3013                           ;main.c: 1797: else if(ucTimerLessX2P5s >= 5)
  3014  0415  3005               	movlw	5
  3015  0416  0234               	subwf	main@ucTimerLessX2P5s^(0+128),w
  3016  0417  1C03               	skipc
  3017  0418  2840               	goto	l4594
  3018                           
  3019                           ;main.c: 1798: {
  3020                           ;main.c: 1799: clearPinPortAndTimer();
  3021  0419  118A  26BE  118A   	fcall	_clearPinPortAndTimer
  3022                           
  3023                           ;main.c: 1800: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  3024  041C  01D0               	clrf	main@enumMainLoopStep
  3025  041D  0AD0               	incf	main@enumMainLoopStep,f
  3026                           
  3027                           ;main.c: 1801: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  3028  041E  1683               	bsf	3,5	;RP0=1, select bank1
  3029  041F  01AD               	clrf	main@enumBranchStep^(0+128)
  3030                           
  3031                           ;main.c: 1802: }
  3032  0420  2840               	goto	l4594
  3033  0421                     l5208:	
  3034  0421  1683               	bsf	3,5	;RP0=1, select bank1
  3035  0422  082D               	movf	main@enumBranchStep^(0+128),w
  3036                           
  3037                           ; Switch size 1, requested type "space"
  3038                           ; Number of cases is 3, Range of values is 0 to 2
  3039                           ; switch strategies available:
  3040                           ; Name         Instructions Cycles
  3041                           ; simple_byte           10     6 (average)
  3042                           ; direct_byte           13     7 (fixed)
  3043                           ; jumptable            260     6 (fixed)
  3044                           ; rangetable             7     6 (fixed)
  3045                           ; spacedrange           12     9 (fixed)
  3046                           ; locatedrange           3     3 (fixed)
  3047                           ;	Chosen strategy is simple_byte
  3048  0423  3A00               	xorlw	0	; case 0
  3049  0424  1903               	skipnz
  3050  0425  2B93               	goto	l1005
  3051  0426  3A01               	xorlw	1	; case 1
  3052  0427  1903               	skipnz
  3053  0428  2BB9               	goto	l5140
  3054  0429  3A03               	xorlw	3	; case 2
  3055  042A  1903               	skipnz
  3056  042B  2BC7               	goto	l5150
  3057  042C  2862               	goto	l752
  3058  042D                     l5210:	
  3059                           
  3060                           ;main.c: 1843: {
  3061                           ;main.c: 1848: setPB0(0);
  3062  042D  3000               	movlw	0
  3063  042E  118A  27CB  118A   	fcall	_setPB0
  3064                           
  3065                           ;main.c: 1850: setPB1(0);
  3066  0431  3000               	movlw	0
  3067  0432  158A  27F0  118A   	fcall	_setPB1
  3068                           
  3069                           ;main.c: 1852: setPA0(0);
  3070  0435  3000               	movlw	0
  3071  0436  158A  27F8  118A   	fcall	_setPA0
  3072                           
  3073                           ;main.c: 1854: setPA1(0);
  3074  0439  3000               	movlw	0
  3075  043A  118A  27F4  118A   	fcall	_setPA1
  3076                           
  3077                           ;main.c: 1856: setPA2(0);
  3078  043D  3000               	movlw	0
  3079  043E  118A  27EC  118A   	fcall	_setPA2
  3080                           
  3081                           ;main.c: 1858: setPA3(0);
  3082  0441  3000               	movlw	0
  3083  0442  118A  27E4  118A   	fcall	_setPA3
  3084                           
  3085                           ;main.c: 1861: PBOD6 = 0;
  3086  0445  1683               	bsf	3,5	;RP0=1, select bank3
  3087  0446  1703               	bsf	3,6	;RP1=1, select bank3
  3088  0447  1308               	bcf	8,6
  3089                           
  3090                           ;main.c: 1862: PB6 = 1;
  3091  0448  1283               	bcf	3,5	;RP0=0, select bank0
  3092  0449  3000               	movlw	0
  3093  044A  1303               	bcf	3,6	;RP1=0, select bank0
  3094  044B  1706               	bsf	6,6
  3095                           
  3096                           ;main.c: 1868: setPA6(0);
  3097  044C  118A  27C2  118A   	fcall	_setPA6
  3098                           
  3099                           ;main.c: 1870: enumInteralStep = INTERNAL_SECOND_STEP;
  3100  044F  1683               	bsf	3,5	;RP0=1, select bank1
  3101  0450  01AE               	clrf	main@enumInteralStep^(0+128)
  3102  0451  0AAE               	incf	main@enumInteralStep^(0+128),f
  3103                           
  3104                           ;main.c: 1871: break;
  3105  0452  2840               	goto	l4594
  3106  0453                     l5218:	
  3107                           
  3108                           ;main.c: 1875: {
  3109                           ;main.c: 1879: static unsigned char ucTimer1s = 0;
  3110                           ;main.c: 1881: if(getAdOriginalCh14Value() <= 1000)
  3111  0453  118A  25A9  118A   	fcall	_getAdOriginalCh14Value
  3112  0456  3003               	movlw	3
  3113  0457  0247               	subwf	?_getAdOriginalCh14Value+1,w
  3114  0458  30E9               	movlw	233
  3115  0459  1903               	skipnz
  3116  045A  0246               	subwf	?_getAdOriginalCh14Value,w
  3117  045B  1803               	skipnc
  3118  045C  2C60               	goto	l5222
  3119                           
  3120                           ;main.c: 1882: {
  3121                           ;main.c: 1883: ucTimer1s++;
  3122  045D  1683               	bsf	3,5	;RP0=1, select bank1
  3123  045E  0AB1               	incf	main@ucTimer1s^(0+128),f
  3124                           
  3125                           ;main.c: 1884: }
  3126  045F  2C62               	goto	l5224
  3127  0460                     l5222:	
  3128                           
  3129                           ;main.c: 1885: else
  3130                           ;main.c: 1886: ucTimer1s = 0;
  3131  0460  1683               	bsf	3,5	;RP0=1, select bank1
  3132  0461  01B1               	clrf	main@ucTimer1s^(0+128)
  3133  0462                     l5224:	
  3134                           
  3135                           ;main.c: 1888: if(ucTimer1s >= 10)
  3136  0462  300A               	movlw	10
  3137  0463  0231               	subwf	main@ucTimer1s^(0+128),w
  3138  0464  1C03               	skipc
  3139  0465  2840               	goto	l4594
  3140                           
  3141                           ;main.c: 1889: {
  3142                           ;main.c: 1890: enumInteralStep = INTERNAL_THIRD_STEP;
  3143  0466  3002               	movlw	2
  3144  0467  00AE               	movwf	main@enumInteralStep^(0+128)
  3145                           
  3146                           ;main.c: 1891: ucTimer1s = 0;
  3147  0468  01B1               	clrf	main@ucTimer1s^(0+128)
  3148  0469  2840               	goto	l4594
  3149  046A                     l5230:	
  3150                           
  3151                           ;main.c: 1897: {
  3152                           ;main.c: 1901: static unsigned char ucTimerP3s = 0;
  3153                           ;main.c: 1903: if(getAdOriginalCh14Value() >= 1950)
  3154  046A  118A  25A9  118A   	fcall	_getAdOriginalCh14Value
  3155  046D  3007               	movlw	7
  3156  046E  0247               	subwf	?_getAdOriginalCh14Value+1,w
  3157  046F  309E               	movlw	158
  3158  0470  1903               	skipnz
  3159  0471  0246               	subwf	?_getAdOriginalCh14Value,w
  3160  0472  1C03               	skipc
  3161  0473  2C77               	goto	l5234
  3162                           
  3163                           ;main.c: 1904: {
  3164                           ;main.c: 1905: ucTimerP3s++;
  3165  0474  1683               	bsf	3,5	;RP0=1, select bank1
  3166  0475  0AB5               	incf	main@ucTimerP3s^(0+128),f
  3167                           
  3168                           ;main.c: 1906: }
  3169  0476  2C79               	goto	l5236
  3170  0477                     l5234:	
  3171                           
  3172                           ;main.c: 1907: else
  3173                           ;main.c: 1908: ucTimerP3s = 0;
  3174  0477  1683               	bsf	3,5	;RP0=1, select bank1
  3175  0478  01B5               	clrf	main@ucTimerP3s^(0+128)
  3176  0479                     l5236:	
  3177                           
  3178                           ;main.c: 1910: if(ucTimerP3s >= 3)
  3179  0479  3003               	movlw	3
  3180  047A  0235               	subwf	main@ucTimerP3s^(0+128),w
  3181  047B  1C03               	skipc
  3182  047C  2840               	goto	l4594
  3183                           
  3184                           ;main.c: 1911: {
  3185                           ;main.c: 1912: enumInteralStep = INTERNAL_FIRST_STEP;
  3186  047D  01AE               	clrf	main@enumInteralStep^(0+128)
  3187                           
  3188                           ;main.c: 1913: ucTimerP3s = 0;
  3189  047E  01B5               	clrf	main@ucTimerP3s^(0+128)
  3190                           
  3191                           ;main.c: 1915: clearAllTimer();
  3192  047F  118A  26CB  118A   	fcall	_clearAllTimer
  3193                           
  3194                           ;main.c: 1917: DACR0=0x0F;
  3195  0482  300F               	movlw	15
  3196  0483  1683               	bsf	3,5	;RP0=1, select bank1
  3197  0484  0088               	movwf	8	;volatile
  3198                           
  3199                           ;main.c: 1921: initPin();
  3200  0485  118A  273D  118A   	fcall	_initPin
  3201                           
  3202                           ;main.c: 1924: enumMainLoopStep = MAIN_LOOP_STEP_INIT;
  3203  0488  1283               	bcf	3,5	;RP0=0, select bank0
  3204  0489  1303               	bcf	3,6	;RP1=0, select bank0
  3205  048A  01D0               	clrf	main@enumMainLoopStep
  3206  048B                     l1055:	
  3207  048B  2C8B               	goto	l1055
  3208  048C                     l5250:	
  3209  048C  1683               	bsf	3,5	;RP0=1, select bank1
  3210  048D  082E               	movf	main@enumInteralStep^(0+128),w
  3211                           
  3212                           ; Switch size 1, requested type "space"
  3213                           ; Number of cases is 3, Range of values is 0 to 2
  3214                           ; switch strategies available:
  3215                           ; Name         Instructions Cycles
  3216                           ; simple_byte           10     6 (average)
  3217                           ; direct_byte           13     7 (fixed)
  3218                           ; jumptable            260     6 (fixed)
  3219                           ; rangetable             7     6 (fixed)
  3220                           ; spacedrange           12     9 (fixed)
  3221                           ; locatedrange           3     3 (fixed)
  3222                           ;	Chosen strategy is simple_byte
  3223  048E  3A00               	xorlw	0	; case 0
  3224  048F  1903               	skipnz
  3225  0490  2C2D               	goto	l5210
  3226  0491  3A01               	xorlw	1	; case 1
  3227  0492  1903               	skipnz
  3228  0493  2C53               	goto	l5218
  3229  0494  3A03               	xorlw	3	; case 2
  3230  0495  1903               	skipnz
  3231  0496  2C6A               	goto	l5230
  3232  0497  2862               	goto	l752
  3233  0498                     l5254:	
  3234  0498  1283               	bcf	3,5	;RP0=0, select bank0
  3235  0499  0850               	movf	main@enumMainLoopStep,w
  3236                           
  3237                           ; Switch size 1, requested type "space"
  3238                           ; Number of cases is 8, Range of values is 0 to 9
  3239                           ; switch strategies available:
  3240                           ; Name         Instructions Cycles
  3241                           ; simple_byte           25    13 (average)
  3242                           ; direct_byte           27     7 (fixed)
  3243                           ; jumptable            260     6 (fixed)
  3244                           ; rangetable            14     6 (fixed)
  3245                           ; spacedrange           26     9 (fixed)
  3246                           ; locatedrange          10     3 (fixed)
  3247                           ;	Chosen strategy is simple_byte
  3248  049A  3A00               	xorlw	0	; case 0
  3249  049B  1903               	skipnz
  3250  049C  284E               	goto	l4602
  3251  049D  3A01               	xorlw	1	; case 1
  3252  049E  1903               	skipnz
  3253  049F  2863               	goto	l4614
  3254  04A0  3A03               	xorlw	3	; case 2
  3255  04A1  1903               	skipnz
  3256  04A2  287B               	goto	l4628
  3257  04A3  3A01               	xorlw	1	; case 3
  3258  04A4  1903               	skipnz
  3259  04A5  2888               	goto	l4638
  3260  04A6  3A07               	xorlw	7	; case 4
  3261  04A7  1903               	skipnz
  3262  04A8  28C3               	goto	l4674
  3263  04A9  3A01               	xorlw	1	; case 5
  3264  04AA  1903               	skipnz
  3265  04AB  28CF               	goto	l4680
  3266  04AC  3A0D               	xorlw	13	; case 8
  3267  04AD  1903               	skipnz
  3268  04AE  2C21               	goto	l5208
  3269  04AF  3A01               	xorlw	1	; case 9
  3270  04B0  1903               	skipnz
  3271  04B1  2C8C               	goto	l5250
  3272  04B2  2862               	goto	l752
  3273  04B3  118A  2811         	ljmp	start
  3274  04B5                     __end_of_main:	
  3275                           
  3276                           	psect	swtext1
  3277  0761                     __pswtext1:	
  3278  0761                     S5544:	
  3279  0761  118A  2968         	ljmp	l833
  3280  0763  118A  296B         	ljmp	l4740
  3281  0765  118A  2974         	ljmp	l4750
  3282  0767  118A  297A         	ljmp	l4760
  3283  0769  118A  2980         	ljmp	l4770
  3284  076B  118A  2986         	ljmp	l4780
  3285  076D  118A  2990         	ljmp	l4790
  3286                           
  3287                           	psect	swtext2
  3288  076F                     __pswtext2:	
  3289  076F                     S5546:	
  3290  076F  118A  29A3         	ljmp	l861
  3291  0771  118A  29A6         	ljmp	l4804
  3292  0773  118A  29AF         	ljmp	l4814
  3293  0775  118A  29B5         	ljmp	l4824
  3294  0777  118A  29BE         	ljmp	l4834
  3295  0779  118A  29C7         	ljmp	l4844
  3296  077B  118A  29DC         	ljmp	l4854
  3297                           
  3298                           	psect	swtext3
  3299  077D                     __pswtext3:	
  3300  077D                     S5548:	
  3301  077D  118A  29EE         	ljmp	l4866
  3302  077F  118A  29F8         	ljmp	l4870
  3303  0781  118A  2A04         	ljmp	l4880
  3304  0783  118A  2A0D         	ljmp	l4890
  3305  0785  118A  2A16         	ljmp	l4900
  3306  0787  118A  2A27         	ljmp	l4910
  3307                           
  3308                           	psect	swtext4
  3309  06E2                     __pswtext4:	
  3310  06E2                     S5550:	
  3311  06E2  118A  28DE         	ljmp	l794
  3312  06E4  118A  28E1         	ljmp	l4688
  3313  06E6  118A  2AB8         	ljmp	l5006
  3314  06E8  118A  2AC9         	ljmp	l5008
  3315  06EA  118A  2AEC         	ljmp	l5032
  3316  06EC  118A  2AF4         	ljmp	l5038
  3317  06EE  118A  2B26         	ljmp	l5068
  3318  06F0  118A  2B33         	ljmp	l5076
  3319  06F2  118A  2B3B         	ljmp	l981
  3320  06F4  118A  2B43         	ljmp	l5086
  3321  06F6  118A  2B4A         	ljmp	l5094
  3322  06F8  118A  2B72         	ljmp	l5116
  3323  06FA  118A  2B7D         	ljmp	l5124
  3324                           
  3325                           	psect	text830
  3326  06BE                     __ptext830:	
  3327 ;; =============== function _main ends ============
  3328                           
  3329                           
  3330 ;; *************** function _clearPinPortAndTimer *****************
  3331 ;; Defined at:
  3332 ;;		line 104 in file "D:\develop\190625\AK7030-OTP\main.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;		None
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;		None
  3337 ;; Return value:  Size  Location     Type
  3338 ;;		None               void
  3339 ;; Registers used:
  3340 ;;		status,2, status,0, pclath, cstack
  3341 ;; Tracked objects:
  3342 ;;		On entry : 40/0
  3343 ;;		On exit  : 60/0
  3344 ;;		Unchanged: FFF9F/0
  3345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3346 ;;      Params:         0       0       0       0       0
  3347 ;;      Locals:         0       0       0       0       0
  3348 ;;      Temps:          0       0       0       0       0
  3349 ;;      Totals:         0       0       0       0       0
  3350 ;;Total ram usage:        0 bytes
  3351 ;; Hardware stack levels used:    1
  3352 ;; Hardware stack levels required when called:    4
  3353 ;; This function calls:
  3354 ;;		_clearAllTimer
  3355 ;; This function is called by:
  3356 ;;		_main
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359  06BE                     _clearPinPortAndTimer:	
  3360                           
  3361                           ;main.c: 106: PB0 = 0;
  3362                           
  3363                           ; Regs used in _clearPinPortAndTimer: [status,2+status,0+pclath+cstack]
  3364  06BE  1283               	bcf	3,5	;RP0=0, select bank0
  3365  06BF  1006               	bcf	6,0
  3366                           
  3367                           ;main.c: 107: PA0 = 0;
  3368  06C0  1005               	bcf	5,0
  3369                           
  3370                           ;main.c: 108: PA1 = 0;
  3371  06C1  1085               	bcf	5,1
  3372                           
  3373                           ;main.c: 109: PA2 = 0;
  3374  06C2  1105               	bcf	5,2
  3375                           
  3376                           ;main.c: 110: PA3 = 0;
  3377  06C3  1185               	bcf	5,3
  3378                           
  3379                           ;main.c: 113: PBOD7 = 0;
  3380  06C4  1683               	bsf	3,5	;RP0=1, select bank3
  3381  06C5  1703               	bsf	3,6	;RP1=1, select bank3
  3382  06C6  1388               	bcf	8,7
  3383                           
  3384                           ;main.c: 114: PB7 = 0;
  3385  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  3386  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  3387  06C9  1386               	bcf	6,7
  3388                           
  3389                           ;main.c: 115: clearAllTimer();
  3390  06CA  2ECB               	ljmp	l4538
  3391  06CB                     __end_of_clearPinPortAndTimer:	
  3392  06CB                     __ptext835:	
  3393 ;; =============== function _process_AD_Converter_Value ends ============
  3394                           
  3395                           
  3396 ;; *************** function _clearAllTimer *****************
  3397 ;; Defined at:
  3398 ;;		line 95 in file "D:\develop\190625\AK7030-OTP\main.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;		None
  3401 ;; Auto vars:     Size  Location     Type
  3402 ;;		None
  3403 ;; Return value:  Size  Location     Type
  3404 ;;		None               void
  3405 ;; Registers used:
  3406 ;;		status,2, status,0, pclath, cstack
  3407 ;; Tracked objects:
  3408 ;;		On entry : 40/20
  3409 ;;		On exit  : 60/0
  3410 ;;		Unchanged: FFF9F/0
  3411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3412 ;;      Params:         0       0       0       0       0
  3413 ;;      Locals:         0       0       0       0       0
  3414 ;;      Temps:          0       0       0       0       0
  3415 ;;      Totals:         0       0       0       0       0
  3416 ;;Total ram usage:        0 bytes
  3417 ;; Hardware stack levels used:    1
  3418 ;; Hardware stack levels required when called:    3
  3419 ;; This function calls:
  3420 ;;		_clearTwelveHoursTimer
  3421 ;;		_clearThreeHoursTimer
  3422 ;;		_clearTwentySecondsTimer
  3423 ;; This function is called by:
  3424 ;;		_clearPinPortAndTimer
  3425 ;;		_main
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428  06CB                     _clearAllTimer:	
  3429  06CB                     l4538:	
  3430                           ; Regs used in _clearAllTimer: [status,2+status,0+pclath+cstack]
  3431                           
  3432                           
  3433                           ;main.c: 96: clearTwelveHoursTimer();
  3434  06CB  26D0  118A         	fcall	_clearTwelveHoursTimer
  3435                           
  3436                           ;main.c: 97: clearThreeHoursTimer();
  3437  06CD  26D6  118A         	fcall	_clearThreeHoursTimer
  3438                           
  3439                           ;main.c: 98: clearTwentySecondsTimer();
  3440  06CF  2EDC               	ljmp	l4218
  3441  06D0                     __end_of_clearAllTimer:	
  3442  06D0                     __ptext866:	
  3443 ;; =============== function _clearThreeHoursTimer ends ============
  3444                           
  3445                           
  3446 ;; *************** function _clearTwelveHoursTimer *****************
  3447 ;; Defined at:
  3448 ;;		line 370 in file "D:\develop\190625\AK7030-OTP\common.c"
  3449 ;; Parameters:    Size  Location     Type
  3450 ;;		None
  3451 ;; Auto vars:     Size  Location     Type
  3452 ;;		None
  3453 ;; Return value:  Size  Location     Type
  3454 ;;		None               void
  3455 ;; Registers used:
  3456 ;;		status,2
  3457 ;; Tracked objects:
  3458 ;;		On entry : 40/20
  3459 ;;		On exit  : 60/0
  3460 ;;		Unchanged: FFF9F/0
  3461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3462 ;;      Params:         0       0       0       0       0
  3463 ;;      Locals:         0       0       0       0       0
  3464 ;;      Temps:          0       0       0       0       0
  3465 ;;      Totals:         0       0       0       0       0
  3466 ;;Total ram usage:        0 bytes
  3467 ;; Hardware stack levels used:    1
  3468 ;; Hardware stack levels required when called:    2
  3469 ;; This function calls:
  3470 ;;		Nothing
  3471 ;; This function is called by:
  3472 ;;		_clearAllTimer
  3473 ;; This function uses a non-reentrant model
  3474 ;;
  3475  06D0                     _clearTwelveHoursTimer:	
  3476                           
  3477                           ;common.c: 371: uiBigTimer = 0;
  3478                           
  3479                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  3480  06D0  1683               	bsf	3,5	;RP0=1, select bank1
  3481  06D1  01A0               	clrf	_uiBigTimer^(0+128)
  3482  06D2  01A1               	clrf	(_uiBigTimer+1)^(0+128)
  3483                           
  3484                           ;common.c: 372: bBigTimerStartFlag = 0;
  3485  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  3486  06D4  01CA               	clrf	_bBigTimerStartFlag
  3487  06D5  0008               	return
  3488  06D6                     __end_of_clearTwelveHoursTimer:	
  3489  06D6                     __ptext865:	
  3490 ;; =============== function _clearTwentySecondsTimer ends ============
  3491                           
  3492                           
  3493 ;; *************** function _clearThreeHoursTimer *****************
  3494 ;; Defined at:
  3495 ;;		line 377 in file "D:\develop\190625\AK7030-OTP\common.c"
  3496 ;; Parameters:    Size  Location     Type
  3497 ;;		None
  3498 ;; Auto vars:     Size  Location     Type
  3499 ;;		None
  3500 ;; Return value:  Size  Location     Type
  3501 ;;		None               void
  3502 ;; Registers used:
  3503 ;;		status,2
  3504 ;; Tracked objects:
  3505 ;;		On entry : 60/0
  3506 ;;		On exit  : 60/0
  3507 ;;		Unchanged: FFF9F/0
  3508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3509 ;;      Params:         0       0       0       0       0
  3510 ;;      Locals:         0       0       0       0       0
  3511 ;;      Temps:          0       0       0       0       0
  3512 ;;      Totals:         0       0       0       0       0
  3513 ;;Total ram usage:        0 bytes
  3514 ;; Hardware stack levels used:    1
  3515 ;; Hardware stack levels required when called:    2
  3516 ;; This function calls:
  3517 ;;		Nothing
  3518 ;; This function is called by:
  3519 ;;		_clearAllTimer
  3520 ;;		_main
  3521 ;; This function uses a non-reentrant model
  3522 ;;
  3523  06D6                     _clearThreeHoursTimer:	
  3524                           
  3525                           ;common.c: 378: uiSmallTimer = 0;
  3526                           
  3527                           ; Regs used in _clearThreeHoursTimer: [status,2]
  3528  06D6  1683               	bsf	3,5	;RP0=1, select bank1
  3529  06D7  01A2               	clrf	_uiSmallTimer^(0+128)
  3530  06D8  01A3               	clrf	(_uiSmallTimer+1)^(0+128)
  3531                           
  3532                           ;common.c: 379: bSmallTimerStartFlag = 0;
  3533  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  3534  06DA  01CB               	clrf	_bSmallTimerStartFlag
  3535  06DB  0008               	return
  3536  06DC                     __end_of_clearThreeHoursTimer:	
  3537  06DC                     __ptext864:	
  3538 ;; =============== function _initPin ends ============
  3539                           
  3540                           
  3541 ;; *************** function _clearTwentySecondsTimer *****************
  3542 ;; Defined at:
  3543 ;;		line 383 in file "D:\develop\190625\AK7030-OTP\common.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;		None
  3546 ;; Auto vars:     Size  Location     Type
  3547 ;;		None
  3548 ;; Return value:  Size  Location     Type
  3549 ;;		None               void
  3550 ;; Registers used:
  3551 ;;		status,2
  3552 ;; Tracked objects:
  3553 ;;		On entry : 60/0
  3554 ;;		On exit  : 60/0
  3555 ;;		Unchanged: FFF9F/0
  3556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3557 ;;      Params:         0       0       0       0       0
  3558 ;;      Locals:         0       0       0       0       0
  3559 ;;      Temps:          0       0       0       0       0
  3560 ;;      Totals:         0       0       0       0       0
  3561 ;;Total ram usage:        0 bytes
  3562 ;; Hardware stack levels used:    1
  3563 ;; Hardware stack levels required when called:    2
  3564 ;; This function calls:
  3565 ;;		Nothing
  3566 ;; This function is called by:
  3567 ;;		_clearAllTimer
  3568 ;;		_main
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571  06DC                     _clearTwentySecondsTimer:	
  3572  06DC                     l4218:	
  3573                           ; Regs used in _clearTwentySecondsTimer: [status,2]
  3574                           
  3575                           
  3576                           ;common.c: 384: uiTwentySecondsTimer = 0;
  3577  06DC  1683               	bsf	3,5	;RP0=1, select bank1
  3578  06DD  01A4               	clrf	_uiTwentySecondsTimer^(0+128)
  3579  06DE  01A5               	clrf	(_uiTwentySecondsTimer+1)^(0+128)
  3580                           
  3581                           ;common.c: 385: bTwentySecStartFlag = 0;
  3582  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  3583  06E0  01CC               	clrf	_bTwentySecStartFlag
  3584  06E1  0008               	return
  3585  06E2                     __end_of_clearTwentySecondsTimer:	
  3586                           
  3587                           	psect	text831
  3588  0595                     __ptext831:	
  3589 ;; =============== function _clearPinPortAndTimer ends ============
  3590                           
  3591                           
  3592 ;; *************** function _getAdOriginaCh4Value *****************
  3593 ;; Defined at:
  3594 ;;		line 231 in file "D:\develop\190625\AK7030-OTP\common.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;		None
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;		None
  3599 ;; Return value:  Size  Location     Type
  3600 ;;                  2   38[BANK0 ] unsigned int 
  3601 ;; Registers used:
  3602 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3603 ;; Tracked objects:
  3604 ;;		On entry : 40/0
  3605 ;;		On exit  : 160/0
  3606 ;;		Unchanged: FFE00/0
  3607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3608 ;;      Params:         0       2       0       0       0
  3609 ;;      Locals:         0       0       0       0       0
  3610 ;;      Temps:          0       0       0       0       0
  3611 ;;      Totals:         0       2       0       0       0
  3612 ;;Total ram usage:        2 bytes
  3613 ;; Hardware stack levels used:    1
  3614 ;; Hardware stack levels required when called:    3
  3615 ;; This function calls:
  3616 ;;		_Filter
  3617 ;; This function is called by:
  3618 ;;		_main
  3619 ;; This function uses a non-reentrant model
  3620 ;;
  3621  0595                     _getAdOriginaCh4Value:	
  3622                           
  3623                           ;common.c: 233: return Filter(uiSampleChannelFourth);
  3624                           
  3625                           ; Regs used in _getAdOriginaCh4Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  3626  0595  30D0               	movlw	_uiSampleChannelFourth& (0+255)
  3627  0596  1283               	bcf	3,5	;RP0=0, select bank0
  3628  0597  00A0               	movwf	?_Filter
  3629  0598  01A1               	clrf	?_Filter+1
  3630  0599  25B4               	fcall	_Filter
  3631  059A  0821               	movf	?_Filter+1,w
  3632  059B  00C7               	movwf	?_getAdOriginaCh4Value+1
  3633  059C  0820               	movf	?_Filter,w
  3634  059D  00C6               	movwf	?_getAdOriginaCh4Value
  3635  059E  0008               	return
  3636  059F                     __end_of_getAdOriginaCh4Value:	
  3637  059F                     __ptext832:	
  3638 ;; =============== function _getAdOriginaCh4Value ends ============
  3639                           
  3640                           
  3641 ;; *************** function _getAdOriginalCh1Value *****************
  3642 ;; Defined at:
  3643 ;;		line 219 in file "D:\develop\190625\AK7030-OTP\common.c"
  3644 ;; Parameters:    Size  Location     Type
  3645 ;;		None
  3646 ;; Auto vars:     Size  Location     Type
  3647 ;;		None
  3648 ;; Return value:  Size  Location     Type
  3649 ;;                  2   38[BANK0 ] unsigned int 
  3650 ;; Registers used:
  3651 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3652 ;; Tracked objects:
  3653 ;;		On entry : 40/0
  3654 ;;		On exit  : 160/0
  3655 ;;		Unchanged: FFE00/0
  3656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3657 ;;      Params:         0       2       0       0       0
  3658 ;;      Locals:         0       0       0       0       0
  3659 ;;      Temps:          0       0       0       0       0
  3660 ;;      Totals:         0       2       0       0       0
  3661 ;;Total ram usage:        2 bytes
  3662 ;; Hardware stack levels used:    1
  3663 ;; Hardware stack levels required when called:    3
  3664 ;; This function calls:
  3665 ;;		_Filter
  3666 ;; This function is called by:
  3667 ;;		_main
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670  059F                     _getAdOriginalCh1Value:	
  3671                           
  3672                           ;common.c: 222: return Filter(uiSampleChannelFirst);
  3673                           
  3674                           ; Regs used in _getAdOriginalCh1Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  3675  059F  30B8               	movlw	_uiSampleChannelFirst& (0+255)
  3676  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  3677  05A1  00A0               	movwf	?_Filter
  3678  05A2  01A1               	clrf	?_Filter+1
  3679  05A3  25B4               	fcall	_Filter
  3680  05A4  0821               	movf	?_Filter+1,w
  3681  05A5  00C7               	movwf	?_getAdOriginalCh1Value+1
  3682  05A6  0820               	movf	?_Filter,w
  3683  05A7  00C6               	movwf	?_getAdOriginalCh1Value
  3684  05A8  0008               	return
  3685  05A9                     __end_of_getAdOriginalCh1Value:	
  3686  05A9                     __ptext833:	
  3687 ;; =============== function _getAdOriginalCh1Value ends ============
  3688                           
  3689                           
  3690 ;; *************** function _getAdOriginalCh14Value *****************
  3691 ;; Defined at:
  3692 ;;		line 242 in file "D:\develop\190625\AK7030-OTP\common.c"
  3693 ;; Parameters:    Size  Location     Type
  3694 ;;		None
  3695 ;; Auto vars:     Size  Location     Type
  3696 ;;		None
  3697 ;; Return value:  Size  Location     Type
  3698 ;;                  2   38[BANK0 ] unsigned int 
  3699 ;; Registers used:
  3700 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3701 ;; Tracked objects:
  3702 ;;		On entry : 40/0
  3703 ;;		On exit  : 160/0
  3704 ;;		Unchanged: FFE00/0
  3705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3706 ;;      Params:         0       2       0       0       0
  3707 ;;      Locals:         0       0       0       0       0
  3708 ;;      Temps:          0       0       0       0       0
  3709 ;;      Totals:         0       2       0       0       0
  3710 ;;Total ram usage:        2 bytes
  3711 ;; Hardware stack levels used:    1
  3712 ;; Hardware stack levels required when called:    3
  3713 ;; This function calls:
  3714 ;;		_Filter
  3715 ;; This function is called by:
  3716 ;;		_main
  3717 ;; This function uses a non-reentrant model
  3718 ;;
  3719  05A9                     _getAdOriginalCh14Value:	
  3720                           
  3721                           ;common.c: 244: return Filter(uiSampleChannelFourteenth);
  3722                           
  3723                           ; Regs used in _getAdOriginalCh14Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  3724  05A9  3090               	movlw	_uiSampleChannelFourteenth& (0+255)
  3725  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  3726  05AB  00A0               	movwf	?_Filter
  3727  05AC  3001               	movlw	1
  3728  05AD  00A1               	movwf	?_Filter+1
  3729  05AE  25B4               	fcall	_Filter
  3730  05AF  0821               	movf	?_Filter+1,w
  3731  05B0  00C7               	movwf	?_getAdOriginalCh14Value+1
  3732  05B1  0820               	movf	?_Filter,w
  3733  05B2  00C6               	movwf	?_getAdOriginalCh14Value
  3734  05B3  0008               	return
  3735  05B4                     __end_of_getAdOriginalCh14Value:	
  3736  05B4                     __ptext839:	
  3737 ;; =============== function _getAD_ConvertFlag ends ============
  3738                           
  3739                           
  3740 ;; *************** function _Filter *****************
  3741 ;; Defined at:
  3742 ;;		line 53 in file "D:\develop\190625\AK7030-OTP\common.c"
  3743 ;; Parameters:    Size  Location     Type
  3744 ;;  tmpValue        2    0[BANK0 ] PTR int 
  3745 ;;		 -> uiSampleChannelFourteenth(24), uiSampleChannelFourth(24), uiSampleChannelFirst(24), 
  3746 ;; Auto vars:     Size  Location     Type
  3747 ;;  cir             2   34[BANK0 ] int 
  3748 ;;  filter_buf     24    6[BANK0 ] unsigned int [12]
  3749 ;;  filter_sum      2   32[BANK0 ] unsigned int 
  3750 ;;  filter_temp     2   30[BANK0 ] unsigned int 
  3751 ;;  i               1   37[BANK0 ] unsigned char 
  3752 ;;  j               1   36[BANK0 ] unsigned char 
  3753 ;; Return value:  Size  Location     Type
  3754 ;;                  2    0[BANK0 ] unsigned int 
  3755 ;; Registers used:
  3756 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3757 ;; Tracked objects:
  3758 ;;		On entry : 60/0
  3759 ;;		On exit  : 160/0
  3760 ;;		Unchanged: FFE00/0
  3761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3762 ;;      Params:         0       2       0       0       0
  3763 ;;      Locals:         0      32       0       0       0
  3764 ;;      Temps:          0       4       0       0       0
  3765 ;;      Totals:         0      38       0       0       0
  3766 ;;Total ram usage:       38 bytes
  3767 ;; Hardware stack levels used:    1
  3768 ;; Hardware stack levels required when called:    2
  3769 ;; This function calls:
  3770 ;;		Nothing
  3771 ;; This function is called by:
  3772 ;;		_getAdOriginalCh1Value
  3773 ;;		_getAdOriginaCh4Value
  3774 ;;		_getAdOriginalCh14Value
  3775 ;; This function uses a non-reentrant model
  3776 ;;
  3777  05B4                     _Filter:	
  3778                           
  3779                           ; Regs used in _Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  3780  05B4  01C4               	clrf	Filter@j
  3781                           
  3782                           ;common.c: 57: unsigned int filter_temp = 0, filter_sum = 0;
  3783  05B5  01BE               	clrf	Filter@filter_temp
  3784  05B6  01BF               	clrf	Filter@filter_temp+1
  3785  05B7  01C0               	clrf	Filter@filter_sum
  3786  05B8  01C1               	clrf	Filter@filter_sum+1
  3787                           
  3788                           ;common.c: 59: unsigned int filter_buf[12];
  3789                           ;common.c: 61: for(int cir = 0;cir < 12; cir++)
  3790  05B9  01C2               	clrf	Filter@cir
  3791  05BA  01C3               	clrf	Filter@cir+1
  3792  05BB                     l4378:	
  3793                           
  3794                           ;common.c: 62: filter_buf[cir] = *tmpValue++;
  3795  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  3796  05BC  1303               	bcf	3,6	;RP1=0, select bank0
  3797  05BD  0820               	movf	Filter@tmpValue,w
  3798  05BE  0084               	movwf	4
  3799  05BF  1783               	bsf	3,7
  3800  05C0  1C21               	btfss	Filter@tmpValue+1,0
  3801  05C1  1383               	bcf	3,7
  3802  05C2  0800               	movf	0,w
  3803  05C3  2655  118A         	fcall	PL5	;call to abstracted procedure
  3804  05C5  0D42               	rlf	Filter@cir,w
  3805  05C6  3E26               	addlw	Filter@filter_buf& (0+255)
  3806  05C7  0084               	movwf	4
  3807  05C8  0822               	movf	??_Filter,w
  3808  05C9  1383               	bcf	3,7	;select IRP bank0
  3809  05CA  0080               	movwf	0
  3810  05CB  0A84               	incf	4,f
  3811  05CC  0823               	movf	??_Filter+1,w
  3812  05CD  0080               	movwf	0
  3813  05CE  3002               	movlw	2
  3814  05CF  07A0               	addwf	Filter@tmpValue,f
  3815  05D0  1803               	skipnc
  3816  05D1  0AA1               	incf	Filter@tmpValue+1,f
  3817  05D2  0AC2               	incf	Filter@cir,f
  3818  05D3  1903               	skipnz
  3819  05D4  0AC3               	incf	Filter@cir+1,f
  3820  05D5  0843               	movf	Filter@cir+1,w
  3821  05D6  3A80               	xorlw	128
  3822  05D7  00FF               	movwf	127
  3823  05D8  3080               	movlw	128
  3824  05D9  027F               	subwf	127,w
  3825  05DA  1D03               	skipz
  3826  05DB  2DDE               	goto	u1505
  3827  05DC  300C               	movlw	12
  3828  05DD  0242               	subwf	Filter@cir,w
  3829  05DE                     u1505:	
  3830  05DE  1C03               	skipc
  3831  05DF  2DBB               	goto	l4378
  3832                           
  3833                           ;common.c: 65: for(j = 0; j < 12 - 1; j++)
  3834  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  3835  05E1  1303               	bcf	3,6	;RP1=0, select bank0
  3836  05E2  01C4               	clrf	Filter@j
  3837  05E3                     l4392:	
  3838                           
  3839                           ;common.c: 66: {
  3840                           ;common.c: 67: for(i = 0; i < 12 - 1 - j; i++)
  3841  05E3  01C5               	clrf	Filter@i
  3842  05E4                     l4400:	
  3843  05E4  01A3               	clrf	??_Filter+1
  3844  05E5  0844               	movf	Filter@j,w
  3845  05E6  3C0B               	sublw	11
  3846  05E7  00A2               	movwf	??_Filter
  3847  05E8  1C03               	skipc
  3848  05E9  03A3               	decf	??_Filter+1,f
  3849  05EA  0823               	movf	??_Filter+1,w
  3850  05EB  3A80               	xorlw	128
  3851  05EC  3C80               	sublw	128
  3852  05ED  1D03               	skipz
  3853  05EE  2DF1               	goto	u1525
  3854  05EF  0822               	movf	??_Filter,w
  3855  05F0  0245               	subwf	Filter@i,w
  3856  05F1                     u1525:	
  3857  05F1  1803               	btfsc	3,0
  3858  05F2  2E26               	goto	l4402
  3859                           
  3860                           ;common.c: 68: {
  3861                           ;common.c: 69: if(filter_buf[i] > filter_buf[i + 1])
  3862  05F3  1283               	bcf	3,5	;RP0=0, select bank0
  3863  05F4  1303               	bcf	3,6	;RP1=0, select bank0
  3864  05F5  1003               	clrc
  3865  05F6  264B  118A         	fcall	PL3	;call to abstracted procedure
  3866  05F8  265B  118A         	fcall	PL6	;call to abstracted procedure
  3867  05FA  0800               	movf	0,w
  3868  05FB  00A4               	movwf	??_Filter+2
  3869  05FC  0A84               	incf	4,f
  3870  05FD  0800               	movf	0,w
  3871  05FE  00A5               	movwf	??_Filter+3
  3872  05FF  0823               	movf	??_Filter+1,w
  3873  0600  0225               	subwf	??_Filter+3,w
  3874  0601  1D03               	skipz
  3875  0602  2E05               	goto	u1515
  3876  0603  0822               	movf	??_Filter,w
  3877  0604  0224               	subwf	??_Filter+2,w
  3878  0605                     u1515:	
  3879  0605  1803               	skipnc
  3880  0606  2E24               	goto	l4398
  3881                           
  3882                           ;common.c: 70: {
  3883                           ;common.c: 72: filter_temp = filter_buf[i];
  3884  0607  1003               	clrc
  3885  0608  0D45               	rlf	Filter@i,w
  3886  0609  3E26               	addlw	Filter@filter_buf& (0+255)
  3887  060A  0084               	movwf	4
  3888  060B  0800               	movf	0,w
  3889  060C  00BE               	movwf	Filter@filter_temp
  3890  060D  0A84               	incf	4,f
  3891  060E  0800               	movf	0,w
  3892  060F  00BF               	movwf	Filter@filter_temp+1
  3893                           
  3894                           ;common.c: 74: filter_buf[i] = filter_buf[i + 1];
  3895  0610  265B  118A         	fcall	PL6	;call to abstracted procedure
  3896  0612  0800               	movf	0,w
  3897  0613  2655  118A         	fcall	PL5	;call to abstracted procedure
  3898  0615  0D45               	rlf	Filter@i,w
  3899  0616  3E26               	addlw	Filter@filter_buf& (0+255)
  3900  0617  0084               	movwf	4
  3901  0618  0822               	movf	??_Filter,w
  3902  0619  0080               	movwf	0
  3903  061A  0A84               	incf	4,f
  3904  061B  0823               	movf	??_Filter+1,w
  3905  061C  0080               	movwf	0
  3906                           
  3907                           ;common.c: 76: filter_buf[i + 1] = filter_temp;
  3908  061D  265B  118A         	fcall	PL6	;call to abstracted procedure
  3909  061F  083E               	movf	Filter@filter_temp,w
  3910  0620  0080               	movwf	0
  3911  0621  0A84               	incf	4,f
  3912  0622  083F               	movf	Filter@filter_temp+1,w
  3913  0623  0080               	movwf	0
  3914  0624                     l4398:	
  3915  0624  0AC5               	incf	Filter@i,f
  3916  0625  2DE4               	goto	l4400
  3917  0626                     l4402:	
  3918  0626  1283               	bcf	3,5	;RP0=0, select bank0
  3919  0627  300B               	movlw	11
  3920  0628  1303               	bcf	3,6	;RP1=0, select bank0
  3921  0629  0AC4               	incf	Filter@j,f
  3922  062A  0244               	subwf	Filter@j,w
  3923  062B  1C03               	skipc
  3924  062C  2DE3               	goto	l4392
  3925                           
  3926                           ;common.c: 77: }
  3927                           ;common.c: 78: }
  3928                           ;common.c: 79: }
  3929                           ;common.c: 81: for(i = 2; i < 12 - 2; i++)
  3930  062D  3002               	movlw	2
  3931  062E  00C5               	movwf	Filter@i
  3932                           
  3933                           ;common.c: 82: {
  3934                           ;common.c: 83: filter_sum += filter_buf[i];
  3935  062F  1003               	clrc
  3936  0630                     L24:	
  3937  0630  264B  118A         	fcall	PL3	;call to abstracted procedure
  3938  0632  0822               	movf	??_Filter,w
  3939  0633  07C0               	addwf	Filter@filter_sum,f
  3940  0634  1803               	skipnc
  3941  0635  0AC1               	incf	Filter@filter_sum+1,f
  3942  0636  0823               	movf	??_Filter+1,w
  3943  0637  07C1               	addwf	Filter@filter_sum+1,f
  3944  0638  300A               	movlw	10
  3945  0639  0AC5               	incf	Filter@i,f
  3946  063A  0245               	subwf	Filter@i,w
  3947  063B  1C03               	skipc
  3948  063C  2E30               	goto	L24
  3949                           
  3950                           ;common.c: 84: }
  3951                           ;common.c: 86: return (filter_sum >> 3);
  3952  063D  0841               	movf	Filter@filter_sum+1,w
  3953  063E  00A1               	movwf	?_Filter+1
  3954  063F  0840               	movf	Filter@filter_sum,w
  3955  0640  00A0               	movwf	?_Filter
  3956  0641  1003               	clrc
  3957  0642  0CA1               	rrf	?_Filter+1,f
  3958  0643  0CA0               	rrf	?_Filter,f
  3959  0644  1003               	clrc
  3960  0645  0CA1               	rrf	?_Filter+1,f
  3961  0646  0CA0               	rrf	?_Filter,f
  3962  0647  1003               	clrc
  3963  0648  0CA1               	rrf	?_Filter+1,f
  3964  0649  0CA0               	rrf	?_Filter,f
  3965  064A  0008               	return
  3966  064B                     __end_of_Filter:	
  3967  064B                     PL3:	
  3968  064B  0D45               	rlf	Filter@i,w
  3969  064C  3E26               	addlw	Filter@filter_buf& (0+255)
  3970  064D  0084               	movwf	4
  3971  064E  1383               	bcf	3,7	;select IRP bank0
  3972  064F  0800               	movf	0,w
  3973  0650  00A2               	movwf	??_Filter
  3974  0651  0A84               	incf	4,f
  3975  0652  0800               	movf	0,w
  3976  0653  00A3               	movwf	??_Filter+1
  3977  0654  0008               	return
  3978  0655                     PL5:	
  3979  0655  00A2               	movwf	??_Filter
  3980  0656  0A84               	incf	4,f
  3981  0657  0800               	movf	0,w
  3982  0658  00A3               	movwf	??_Filter+1
  3983  0659  1003               	clrc
  3984  065A  0008               	return
  3985  065B                     PL6:	
  3986  065B  1003               	clrc
  3987  065C  0D45               	rlf	Filter@i,w
  3988  065D  3E02               	addlw	2
  3989  065E  3E26               	addlw	Filter@filter_buf& (0+255)
  3990  065F  0084               	movwf	4
  3991  0660  0008               	return
  3992                           
  3993                           	psect	text834
  3994  0661                     __ptext834:	
  3995 ;; =============== function _getAdOriginalCh14Value ends ============
  3996                           
  3997                           
  3998 ;; *************** function _process_AD_Converter_Value *****************
  3999 ;; Defined at:
  4000 ;;		line 253 in file "D:\develop\190625\AK7030-OTP\common.c"
  4001 ;; Parameters:    Size  Location     Type
  4002 ;;		None
  4003 ;; Auto vars:     Size  Location     Type
  4004 ;;		None
  4005 ;; Return value:  Size  Location     Type
  4006 ;;		None               void
  4007 ;; Registers used:
  4008 ;;		wreg, status,2, status,0, pclath, cstack
  4009 ;; Tracked objects:
  4010 ;;		On entry : 0/0
  4011 ;;		On exit  : 40/0
  4012 ;;		Unchanged: FFF9F/0
  4013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4014 ;;      Params:         0       0       0       0       0
  4015 ;;      Locals:         0       0       0       0       0
  4016 ;;      Temps:          0       0       0       0       0
  4017 ;;      Totals:         0       0       0       0       0
  4018 ;;Total ram usage:        0 bytes
  4019 ;; Hardware stack levels used:    1
  4020 ;; Hardware stack levels required when called:    3
  4021 ;; This function calls:
  4022 ;;		_getAD_ConvertFlag
  4023 ;;		_setAD_ConvertFlag
  4024 ;;		_AD_Sample
  4025 ;;		_adc_test_init
  4026 ;;		_adc_start
  4027 ;; This function is called by:
  4028 ;;		_main
  4029 ;; This function uses a non-reentrant model
  4030 ;;
  4031  0661                     _process_AD_Converter_Value:	
  4032                           
  4033                           ;common.c: 254: if(getAD_ConvertFlag())
  4034                           
  4035                           ; Regs used in _process_AD_Converter_Value: [wreg+status,2+status,0+pclath+cstack]
  4036  0661  267F  118A         	fcall	_getAD_ConvertFlag
  4037  0663  3A00               	xorlw	0
  4038  0664  1903               	skipnz
  4039  0665  0008               	return
  4040                           
  4041                           ;common.c: 255: {
  4042                           ;common.c: 256: setAD_ConvertFlag(0);
  4043  0666  3000               	movlw	0
  4044  0667  2683  118A         	fcall	_setAD_ConvertFlag
  4045                           
  4046                           ;common.c: 257: AD_Sample();
  4047  0669  2688  118A         	fcall	_AD_Sample
  4048                           
  4049                           ;common.c: 258: if(5 == sampleChannelSelect)
  4050  066B  086E               	movf	_sampleChannelSelect,w
  4051  066C  3A05               	xorlw	5
  4052  066D  1D03               	skipz
  4053  066E  2E73               	goto	l4548
  4054                           
  4055                           ;common.c: 259: adc_test_init(5,3);
  4056  066F  3003               	movlw	3
  4057  0670  00A0               	movwf	?_adc_test_init
  4058  0671  3005               	movlw	5
  4059  0672  2E7C               	goto	L23
  4060  0673                     l4548:	
  4061                           
  4062                           ;common.c: 260: else if(1 == sampleChannelSelect)
  4063  0673  0B6E               	decfsz	_sampleChannelSelect,w
  4064  0674  2E79               	goto	l4552
  4065                           
  4066                           ;common.c: 261: adc_test_init(1,3);
  4067  0675  3003               	movlw	3
  4068  0676  00A0               	movwf	?_adc_test_init
  4069  0677  3001               	movlw	1
  4070  0678  2E7C               	goto	L23
  4071  0679                     l4552:	
  4072                           
  4073                           ;common.c: 262: else
  4074                           ;common.c: 263: adc_test_init(14,3);
  4075  0679  3003               	movlw	3
  4076  067A  00A0               	movwf	?_adc_test_init
  4077  067B  300E               	movlw	14
  4078  067C                     L23:	
  4079  067C  26A6  118A         	fcall	_adc_test_init
  4080                           
  4081                           ;common.c: 265: adc_start();
  4082  067E  2EBB               	ljmp	l4284
  4083  067F                     __end_of_process_AD_Converter_Value:	
  4084  067F                     __ptext838:	
  4085 ;; =============== function _setAD_ConvertFlag ends ============
  4086                           
  4087                           
  4088 ;; *************** function _getAD_ConvertFlag *****************
  4089 ;; Defined at:
  4090 ;;		line 202 in file "D:\develop\190625\AK7030-OTP\common.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;		None
  4093 ;; Auto vars:     Size  Location     Type
  4094 ;;		None
  4095 ;; Return value:  Size  Location     Type
  4096 ;;                  1    wreg      unsigned char 
  4097 ;; Registers used:
  4098 ;;		wreg
  4099 ;; Tracked objects:
  4100 ;;		On entry : 0/0
  4101 ;;		On exit  : 60/20
  4102 ;;		Unchanged: FFF9F/0
  4103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4104 ;;      Params:         0       0       0       0       0
  4105 ;;      Locals:         0       0       0       0       0
  4106 ;;      Temps:          0       0       0       0       0
  4107 ;;      Totals:         0       0       0       0       0
  4108 ;;Total ram usage:        0 bytes
  4109 ;; Hardware stack levels used:    1
  4110 ;; Hardware stack levels required when called:    2
  4111 ;; This function calls:
  4112 ;;		Nothing
  4113 ;; This function is called by:
  4114 ;;		_process_AD_Converter_Value
  4115 ;; This function uses a non-reentrant model
  4116 ;;
  4117  067F                     _getAD_ConvertFlag:	
  4118                           
  4119                           ;common.c: 203: return adc_convert_flag;
  4120                           
  4121                           ; Regs used in _getAD_ConvertFlag: [wreg]
  4122  067F  1683               	bsf	3,5	;RP0=1, select bank1
  4123  0680  1303               	bcf	3,6	;RP1=0, select bank1
  4124  0681  082B               	movf	_adc_convert_flag^(0+128),w
  4125  0682  0008               	return
  4126  0683                     __end_of_getAD_ConvertFlag:	
  4127  0683                     __ptext837:	
  4128 ;; =============== function _AD_Sample ends ============
  4129                           
  4130                           
  4131 ;; *************** function _setAD_ConvertFlag *****************
  4132 ;; Defined at:
  4133 ;;		line 208 in file "D:\develop\190625\AK7030-OTP\common.c"
  4134 ;; Parameters:    Size  Location     Type
  4135 ;;  flag            1    wreg     unsigned char 
  4136 ;; Auto vars:     Size  Location     Type
  4137 ;;  flag            1    0[BANK0 ] unsigned char 
  4138 ;; Return value:  Size  Location     Type
  4139 ;;		None               void
  4140 ;; Registers used:
  4141 ;;		wreg
  4142 ;; Tracked objects:
  4143 ;;		On entry : 60/20
  4144 ;;		On exit  : 60/20
  4145 ;;		Unchanged: FFF9F/0
  4146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4147 ;;      Params:         0       0       0       0       0
  4148 ;;      Locals:         0       1       0       0       0
  4149 ;;      Temps:          0       0       0       0       0
  4150 ;;      Totals:         0       1       0       0       0
  4151 ;;Total ram usage:        1 bytes
  4152 ;; Hardware stack levels used:    1
  4153 ;; Hardware stack levels required when called:    2
  4154 ;; This function calls:
  4155 ;;		Nothing
  4156 ;; This function is called by:
  4157 ;;		_process_AD_Converter_Value
  4158 ;; This function uses a non-reentrant model
  4159 ;;
  4160  0683                     _setAD_ConvertFlag:	
  4161                           
  4162                           ; Regs used in _setAD_ConvertFlag: [wreg]
  4163                           ;setAD_ConvertFlag@flag stored from wreg
  4164  0683  1283               	bcf	3,5	;RP0=0, select bank0
  4165  0684  00A0               	movwf	setAD_ConvertFlag@flag
  4166                           
  4167                           ;common.c: 209: adc_convert_flag = flag;
  4168  0685  1683               	bsf	3,5	;RP0=1, select bank1
  4169  0686  00AB               	movwf	_adc_convert_flag^(0+128)
  4170  0687  0008               	return
  4171  0688                     __end_of_setAD_ConvertFlag:	
  4172  0688                     __ptext836:	
  4173 ;; =============== function _clearAllTimer ends ============
  4174                           
  4175                           
  4176 ;; *************** function _AD_Sample *****************
  4177 ;; Defined at:
  4178 ;;		line 279 in file "D:\develop\190625\AK7030-OTP\common.c"
  4179 ;; Parameters:    Size  Location     Type
  4180 ;;		None
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;		None
  4183 ;; Return value:  Size  Location     Type
  4184 ;;		None               void
  4185 ;; Registers used:
  4186 ;;		wreg, status,2, status,0
  4187 ;; Tracked objects:
  4188 ;;		On entry : 60/20
  4189 ;;		On exit  : 60/0
  4190 ;;		Unchanged: FFF9F/0
  4191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4192 ;;      Params:         0       0       0       0       0
  4193 ;;      Locals:         0       0       0       0       0
  4194 ;;      Temps:          0       0       0       0       0
  4195 ;;      Totals:         0       0       0       0       0
  4196 ;;Total ram usage:        0 bytes
  4197 ;; Hardware stack levels used:    1
  4198 ;; Hardware stack levels required when called:    2
  4199 ;; This function calls:
  4200 ;;		Nothing
  4201 ;; This function is called by:
  4202 ;;		_process_AD_Converter_Value
  4203 ;; This function uses a non-reentrant model
  4204 ;;
  4205  0688                     _AD_Sample:	
  4206                           
  4207                           ;common.c: 280: if(sampleTimes < 12)
  4208                           
  4209                           ; Regs used in _AD_Sample: [wreg+status,2+status,0]
  4210  0688  300C               	movlw	12
  4211  0689  1283               	bcf	3,5	;RP0=0, select bank0
  4212  068A  024D               	subwf	_sampleTimes,w
  4213  068B  1803               	skipnc
  4214  068C  0008               	return
  4215  068D  300C               	movlw	12
  4216                           
  4217                           ;common.c: 281: {
  4218                           ;common.c: 302: sampleTimes++;
  4219  068E  0ACD               	incf	_sampleTimes,f
  4220                           
  4221                           ;common.c: 304: if(sampleTimes >= 12)
  4222  068F  024D               	subwf	_sampleTimes,w
  4223  0690  1C03               	skipc
  4224  0691  0008               	return
  4225                           
  4226                           ;common.c: 305: {
  4227                           ;common.c: 306: sampleTimes = 0;
  4228  0692  01CD               	clrf	_sampleTimes
  4229                           
  4230                           ;common.c: 308: if(sampleChannelSelect == 14)
  4231  0693  086E               	movf	_sampleChannelSelect,w
  4232  0694  3A0E               	xorlw	14
  4233  0695  1D03               	skipz
  4234  0696  2E9A               	goto	l4488
  4235                           
  4236                           ;common.c: 309: {
  4237                           ;common.c: 312: sampleChannelSelect = 1;
  4238  0697  01EE               	clrf	_sampleChannelSelect
  4239  0698  0AEE               	incf	_sampleChannelSelect,f
  4240                           
  4241                           ;common.c: 313: }
  4242  0699  0008               	return
  4243  069A                     l4488:	
  4244                           
  4245                           ;common.c: 314: else if(sampleChannelSelect == 5)
  4246  069A  086E               	movf	_sampleChannelSelect,w
  4247  069B  3A05               	xorlw	5
  4248  069C  1D03               	skipz
  4249  069D  2EA1               	goto	l4492
  4250  069E                     l4490:	
  4251                           
  4252                           ;common.c: 315: {
  4253                           ;common.c: 317: sampleChannelSelect = 14;
  4254  069E  300E               	movlw	14
  4255  069F  00EE               	movwf	_sampleChannelSelect
  4256                           
  4257                           ;common.c: 318: }
  4258  06A0  0008               	return
  4259  06A1                     l4492:	
  4260                           
  4261                           ;common.c: 319: else if(sampleChannelSelect == 1)
  4262  06A1  0B6E               	decfsz	_sampleChannelSelect,w
  4263  06A2  2E9E               	goto	l4490
  4264                           
  4265                           ;common.c: 320: {
  4266                           ;common.c: 322: sampleChannelSelect = 5;
  4267  06A3  3005               	movlw	5
  4268  06A4  00EE               	movwf	_sampleChannelSelect
  4269                           
  4270                           ;common.c: 323: }
  4271  06A5  0008               	return
  4272  06A6                     __end_of_AD_Sample:	
  4273  06A6                     __ptext852:	
  4274 ;; =============== function _dac_init ends ============
  4275                           
  4276                           
  4277 ;; *************** function _adc_test_init *****************
  4278 ;; Defined at:
  4279 ;;		line 85 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4280 ;; Parameters:    Size  Location     Type
  4281 ;;  channel         1    wreg     unsigned char 
  4282 ;;  ref             1    0[BANK0 ] unsigned char 
  4283 ;; Auto vars:     Size  Location     Type
  4284 ;;  channel         1    2[BANK0 ] unsigned char 
  4285 ;; Return value:  Size  Location     Type
  4286 ;;		None               void
  4287 ;; Registers used:
  4288 ;;		wreg, status,2, status,0
  4289 ;; Tracked objects:
  4290 ;;		On entry : 60/0
  4291 ;;		On exit  : 60/20
  4292 ;;		Unchanged: FFF9F/0
  4293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4294 ;;      Params:         0       1       0       0       0
  4295 ;;      Locals:         0       1       0       0       0
  4296 ;;      Temps:          0       1       0       0       0
  4297 ;;      Totals:         0       3       0       0       0
  4298 ;;Total ram usage:        3 bytes
  4299 ;; Hardware stack levels used:    1
  4300 ;; Hardware stack levels required when called:    2
  4301 ;; This function calls:
  4302 ;;		Nothing
  4303 ;; This function is called by:
  4304 ;;		_main
  4305 ;;		_process_AD_Converter_Value
  4306 ;; This function uses a non-reentrant model
  4307 ;;
  4308  06A6                     _adc_test_init:	
  4309                           
  4310                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  4311                           ;adc_test_init@channel stored from wreg
  4312  06A6  00A2               	movwf	adc_test_init@channel
  4313                           
  4314                           ;periph.c: 86: ADCON0 = 0x00;
  4315  06A7  019F               	clrf	31	;volatile
  4316                           
  4317                           ;periph.c: 87: ADCON0|=channel<<2;
  4318  06A8  00A1               	movwf	??_adc_test_init
  4319  06A9  1003               	clrc
  4320  06AA  0DA1               	rlf	??_adc_test_init,f
  4321  06AB  1003               	clrc
  4322  06AC  0D21               	rlf	??_adc_test_init,w
  4323  06AD  049F               	iorwf	31,f	;volatile
  4324                           
  4325                           ;periph.c: 88: ADCON1|=ref<<6;
  4326  06AE  0820               	movf	adc_test_init@ref,w
  4327  06AF  00A1               	movwf	??_adc_test_init
  4328  06B0  0CA1               	rrf	??_adc_test_init,f
  4329  06B1  0CA1               	rrf	??_adc_test_init,f
  4330  06B2  0C21               	rrf	??_adc_test_init,w
  4331  06B3  39C0               	andlw	192
  4332  06B4  1683               	bsf	3,5	;RP0=1, select bank1
  4333  06B5  049F               	iorwf	31,f	;volatile
  4334                           
  4335                           ;periph.c: 89: ADON=1;
  4336  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  4337  06B7  141F               	bsf	31,0
  4338                           
  4339                           ;periph.c: 90: ADIE=1;
  4340  06B8  1683               	bsf	3,5	;RP0=1, select bank1
  4341  06B9  150D               	bsf	13,2
  4342  06BA  0008               	return
  4343  06BB                     __end_of_adc_test_init:	
  4344  06BB                     __ptext848:	
  4345 ;; =============== function _isPermitSampleTime ends ============
  4346                           
  4347                           
  4348 ;; *************** function _adc_start *****************
  4349 ;; Defined at:
  4350 ;;		line 100 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4351 ;; Parameters:    Size  Location     Type
  4352 ;;		None
  4353 ;; Auto vars:     Size  Location     Type
  4354 ;;		None
  4355 ;; Return value:  Size  Location     Type
  4356 ;;		None               void
  4357 ;; Registers used:
  4358 ;;		None
  4359 ;; Tracked objects:
  4360 ;;		On entry : 60/20
  4361 ;;		On exit  : 60/0
  4362 ;;		Unchanged: FFF9F/0
  4363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4364 ;;      Params:         0       0       0       0       0
  4365 ;;      Locals:         0       0       0       0       0
  4366 ;;      Temps:          0       0       0       0       0
  4367 ;;      Totals:         0       0       0       0       0
  4368 ;;Total ram usage:        0 bytes
  4369 ;; Hardware stack levels used:    1
  4370 ;; Hardware stack levels required when called:    2
  4371 ;; This function calls:
  4372 ;;		Nothing
  4373 ;; This function is called by:
  4374 ;;		_main
  4375 ;;		_process_AD_Converter_Value
  4376 ;; This function uses a non-reentrant model
  4377 ;;
  4378  06BB                     _adc_start:	
  4379  06BB                     l4284:	
  4380                           ; Regs used in _adc_start: []
  4381                           
  4382                           
  4383                           ;periph.c: 101: GO=1;
  4384  06BB  1283               	bcf	3,5	;RP0=0, select bank0
  4385  06BC  149F               	bsf	31,1
  4386  06BD  0008               	return
  4387  06BE                     __end_of_adc_start:	
  4388                           
  4389                           	psect	text840
  4390  0789                     __ptext840:	
  4391 ;; =============== function _Filter ends ============
  4392                           
  4393                           
  4394 ;; *************** function _isFinishedThreeHoursTimer *****************
  4395 ;; Defined at:
  4396 ;;		line 437 in file "D:\develop\190625\AK7030-OTP\common.c"
  4397 ;; Parameters:    Size  Location     Type
  4398 ;;		None
  4399 ;; Auto vars:     Size  Location     Type
  4400 ;;		None
  4401 ;; Return value:  Size  Location     Type
  4402 ;;                  1    wreg      unsigned char 
  4403 ;; Registers used:
  4404 ;;		wreg, status,2, status,0
  4405 ;; Tracked objects:
  4406 ;;		On entry : 40/20
  4407 ;;		On exit  : 40/0
  4408 ;;		Unchanged: FFF9F/0
  4409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4410 ;;      Params:         0       0       0       0       0
  4411 ;;      Locals:         0       0       0       0       0
  4412 ;;      Temps:          0       0       0       0       0
  4413 ;;      Totals:         0       0       0       0       0
  4414 ;;Total ram usage:        0 bytes
  4415 ;; Hardware stack levels used:    1
  4416 ;; Hardware stack levels required when called:    2
  4417 ;; This function calls:
  4418 ;;		Nothing
  4419 ;; This function is called by:
  4420 ;;		_main
  4421 ;; This function uses a non-reentrant model
  4422 ;;
  4423  0789                     _isFinishedThreeHoursTimer:	
  4424                           
  4425                           ;common.c: 438: if((uiSmallTimer == 0) && bSmallTimerStartFlag)
  4426                           
  4427                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  4428  0789  1683               	bsf	3,5	;RP0=1, select bank1
  4429  078A  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  4430  078B  0422               	iorwf	_uiSmallTimer^(0+128),w
  4431  078C  1D03               	skipz
  4432  078D  3400               	retlw	0
  4433  078E  1283               	bcf	3,5	;RP0=0, select bank0
  4434  078F  084B               	movf	_bSmallTimerStartFlag,w
  4435  0790  1903               	btfsc	3,2
  4436  0791  3400               	retlw	0
  4437  0792  3001               	movlw	1
  4438                           
  4439                           ;common.c: 439: {
  4440                           ;common.c: 440: bSmallTimerStartFlag = 0;
  4441  0793  01CB               	clrf	_bSmallTimerStartFlag
  4442                           
  4443                           ;common.c: 441: return 1;
  4444  0794  0008               	return
  4445  0795                     __end_of_isFinishedThreeHoursTimer:	
  4446                           ;common.c: 443: else
  4447                           ;common.c: 444: return 0;
  4448                           
  4449                           
  4450                           	psect	text841
  4451  0715                     __ptext841:	
  4452 ;; =============== function _isFinishedThreeHoursTimer ends ============
  4453                           
  4454                           
  4455 ;; *************** function _startThreeHoursTimer *****************
  4456 ;; Defined at:
  4457 ;;		line 390 in file "D:\develop\190625\AK7030-OTP\common.c"
  4458 ;; Parameters:    Size  Location     Type
  4459 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  4460 ;; Auto vars:     Size  Location     Type
  4461 ;;		None
  4462 ;; Return value:  Size  Location     Type
  4463 ;;		None               void
  4464 ;; Registers used:
  4465 ;;		wreg, status,2, status,0
  4466 ;; Tracked objects:
  4467 ;;		On entry : 60/0
  4468 ;;		On exit  : 40/0
  4469 ;;		Unchanged: FFF9F/0
  4470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4471 ;;      Params:         0       2       0       0       0
  4472 ;;      Locals:         0       0       0       0       0
  4473 ;;      Temps:          0       0       0       0       0
  4474 ;;      Totals:         0       2       0       0       0
  4475 ;;Total ram usage:        2 bytes
  4476 ;; Hardware stack levels used:    1
  4477 ;; Hardware stack levels required when called:    2
  4478 ;; This function calls:
  4479 ;;		Nothing
  4480 ;; This function is called by:
  4481 ;;		_main
  4482 ;; This function uses a non-reentrant model
  4483 ;;
  4484  0715                     _startThreeHoursTimer:	
  4485                           
  4486                           ;common.c: 391: if(( 0 == uiSmallTimer ) && ( 0 == bSmallTimerStartFlag ))
  4487                           
  4488                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  4489  0715  1683               	bsf	3,5	;RP0=1, select bank1
  4490  0716  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  4491  0717  0422               	iorwf	_uiSmallTimer^(0+128),w
  4492  0718  1D03               	skipz
  4493  0719  0008               	return
  4494  071A  1283               	bcf	3,5	;RP0=0, select bank0
  4495  071B  08CB               	movf	_bSmallTimerStartFlag,f
  4496  071C  1D03               	skipz
  4497  071D  0008               	return
  4498                           
  4499                           ;common.c: 392: {
  4500                           ;common.c: 393: uiSmallTimer = uiSetTime;
  4501  071E  0821               	movf	startThreeHoursTimer@uiSetTime+1,w
  4502  071F  1683               	bsf	3,5	;RP0=1, select bank1
  4503  0720  00A3               	movwf	(_uiSmallTimer+1)^(0+128)
  4504  0721  1283               	bcf	3,5	;RP0=0, select bank0
  4505  0722  0820               	movf	startThreeHoursTimer@uiSetTime,w
  4506  0723  1683               	bsf	3,5	;RP0=1, select bank1
  4507  0724  00A2               	movwf	_uiSmallTimer^(0+128)
  4508                           
  4509                           ;common.c: 394: bSmallTimerStartFlag = 1;
  4510  0725  1283               	bcf	3,5	;RP0=0, select bank0
  4511  0726  01CB               	clrf	_bSmallTimerStartFlag
  4512  0727  0ACB               	incf	_bSmallTimerStartFlag,f
  4513  0728  0008               	return
  4514  0729                     __end_of_startThreeHoursTimer:	
  4515                           
  4516                           	psect	text842
  4517  0795                     __ptext842:	
  4518 ;; =============== function _startThreeHoursTimer ends ============
  4519                           
  4520                           
  4521 ;; *************** function _isFinishedTwentySecondsTimer *****************
  4522 ;; Defined at:
  4523 ;;		line 414 in file "D:\develop\190625\AK7030-OTP\common.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;		None
  4526 ;; Auto vars:     Size  Location     Type
  4527 ;;		None
  4528 ;; Return value:  Size  Location     Type
  4529 ;;                  1    wreg      unsigned char 
  4530 ;; Registers used:
  4531 ;;		wreg, status,2, status,0
  4532 ;; Tracked objects:
  4533 ;;		On entry : 60/0
  4534 ;;		On exit  : 40/0
  4535 ;;		Unchanged: FFF9F/0
  4536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4537 ;;      Params:         0       0       0       0       0
  4538 ;;      Locals:         0       0       0       0       0
  4539 ;;      Temps:          0       0       0       0       0
  4540 ;;      Totals:         0       0       0       0       0
  4541 ;;Total ram usage:        0 bytes
  4542 ;; Hardware stack levels used:    1
  4543 ;; Hardware stack levels required when called:    2
  4544 ;; This function calls:
  4545 ;;		Nothing
  4546 ;; This function is called by:
  4547 ;;		_main
  4548 ;; This function uses a non-reentrant model
  4549 ;;
  4550  0795                     _isFinishedTwentySecondsTimer:	
  4551                           
  4552                           ;common.c: 415: if(( 0 == uiTwentySecondsTimer ) && bTwentySecStartFlag )
  4553                           
  4554                           ; Regs used in _isFinishedTwentySecondsTimer: [wreg+status,2+status,0]
  4555  0795  1683               	bsf	3,5	;RP0=1, select bank1
  4556  0796  0825               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  4557  0797  0424               	iorwf	_uiTwentySecondsTimer^(0+128),w
  4558  0798  1D03               	skipz
  4559  0799  3400               	retlw	0
  4560  079A  1283               	bcf	3,5	;RP0=0, select bank0
  4561  079B  084C               	movf	_bTwentySecStartFlag,w
  4562  079C  1903               	btfsc	3,2
  4563  079D  3400               	retlw	0
  4564  079E  3001               	movlw	1
  4565                           
  4566                           ;common.c: 416: {
  4567                           ;common.c: 417: bTwentySecStartFlag = 0;
  4568  079F  01CC               	clrf	_bTwentySecStartFlag
  4569                           
  4570                           ;common.c: 418: return 1;
  4571  07A0  0008               	return
  4572  07A1                     __end_of_isFinishedTwentySecondsTimer:	
  4573                           ;common.c: 420: else
  4574                           ;common.c: 421: return 0;
  4575                           
  4576                           
  4577                           	psect	text843
  4578  0750                     __ptext843:	
  4579 ;; =============== function _isFinishedTwentySecondsTimer ends ============
  4580                           
  4581                           
  4582 ;; *************** function _startTwentySecondsTimer *****************
  4583 ;; Defined at:
  4584 ;;		line 404 in file "D:\develop\190625\AK7030-OTP\common.c"
  4585 ;; Parameters:    Size  Location     Type
  4586 ;;		None
  4587 ;; Auto vars:     Size  Location     Type
  4588 ;;		None
  4589 ;; Return value:  Size  Location     Type
  4590 ;;		None               void
  4591 ;; Registers used:
  4592 ;;		wreg, status,2, status,0
  4593 ;; Tracked objects:
  4594 ;;		On entry : 160/0
  4595 ;;		On exit  : 140/0
  4596 ;;		Unchanged: FFE9F/0
  4597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4598 ;;      Params:         0       0       0       0       0
  4599 ;;      Locals:         0       0       0       0       0
  4600 ;;      Temps:          0       0       0       0       0
  4601 ;;      Totals:         0       0       0       0       0
  4602 ;;Total ram usage:        0 bytes
  4603 ;; Hardware stack levels used:    1
  4604 ;; Hardware stack levels required when called:    2
  4605 ;; This function calls:
  4606 ;;		Nothing
  4607 ;; This function is called by:
  4608 ;;		_main
  4609 ;; This function uses a non-reentrant model
  4610 ;;
  4611  0750                     _startTwentySecondsTimer:	
  4612                           
  4613                           ;common.c: 405: if(( 0 == uiTwentySecondsTimer) && ( 0 == bTwentySecStartFlag))
  4614                           
  4615                           ; Regs used in _startTwentySecondsTimer: [wreg+status,2+status,0]
  4616  0750  1683               	bsf	3,5	;RP0=1, select bank1
  4617  0751  0825               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  4618  0752  0424               	iorwf	_uiTwentySecondsTimer^(0+128),w
  4619  0753  1D03               	skipz
  4620  0754  0008               	return
  4621  0755  1283               	bcf	3,5	;RP0=0, select bank0
  4622  0756  08CC               	movf	_bTwentySecStartFlag,f
  4623  0757  1D03               	skipz
  4624  0758  0008               	return
  4625                           
  4626                           ;common.c: 406: {
  4627                           ;common.c: 407: uiTwentySecondsTimer = 20;
  4628  0759  3014               	movlw	20
  4629  075A  1683               	bsf	3,5	;RP0=1, select bank1
  4630  075B  00A4               	movwf	_uiTwentySecondsTimer^(0+128)
  4631  075C  01A5               	clrf	(_uiTwentySecondsTimer+1)^(0+128)
  4632                           
  4633                           ;common.c: 408: bTwentySecStartFlag = 1;
  4634  075D  1283               	bcf	3,5	;RP0=0, select bank0
  4635  075E  01CC               	clrf	_bTwentySecStartFlag
  4636  075F  0ACC               	incf	_bTwentySecStartFlag,f
  4637  0760  0008               	return
  4638  0761                     __end_of_startTwentySecondsTimer:	
  4639                           
  4640                           	psect	text844
  4641  07A1                     __ptext844:	
  4642 ;; =============== function _startTwentySecondsTimer ends ============
  4643                           
  4644                           
  4645 ;; *************** function _isFinishedTwelveHoursTimer *****************
  4646 ;; Defined at:
  4647 ;;		line 426 in file "D:\develop\190625\AK7030-OTP\common.c"
  4648 ;; Parameters:    Size  Location     Type
  4649 ;;		None
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;		None
  4652 ;; Return value:  Size  Location     Type
  4653 ;;                  1    wreg      unsigned char 
  4654 ;; Registers used:
  4655 ;;		wreg, status,2, status,0
  4656 ;; Tracked objects:
  4657 ;;		On entry : 40/0
  4658 ;;		On exit  : 40/0
  4659 ;;		Unchanged: FFF9F/0
  4660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4661 ;;      Params:         0       0       0       0       0
  4662 ;;      Locals:         0       0       0       0       0
  4663 ;;      Temps:          0       0       0       0       0
  4664 ;;      Totals:         0       0       0       0       0
  4665 ;;Total ram usage:        0 bytes
  4666 ;; Hardware stack levels used:    1
  4667 ;; Hardware stack levels required when called:    2
  4668 ;; This function calls:
  4669 ;;		Nothing
  4670 ;; This function is called by:
  4671 ;;		_main
  4672 ;; This function uses a non-reentrant model
  4673 ;;
  4674  07A1                     _isFinishedTwelveHoursTimer:	
  4675                           
  4676                           ;common.c: 427: if(( uiBigTimer == 0 ) && bBigTimerStartFlag )
  4677                           
  4678                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  4679  07A1  1683               	bsf	3,5	;RP0=1, select bank1
  4680  07A2  0821               	movf	(_uiBigTimer+1)^(0+128),w
  4681  07A3  0420               	iorwf	_uiBigTimer^(0+128),w
  4682  07A4  1D03               	skipz
  4683  07A5  3400               	retlw	0
  4684  07A6  1283               	bcf	3,5	;RP0=0, select bank0
  4685  07A7  084A               	movf	_bBigTimerStartFlag,w
  4686  07A8  1903               	btfsc	3,2
  4687  07A9  3400               	retlw	0
  4688  07AA  3001               	movlw	1
  4689                           
  4690                           ;common.c: 428: {
  4691                           ;common.c: 429: bBigTimerStartFlag = 0;
  4692  07AB  01CA               	clrf	_bBigTimerStartFlag
  4693                           
  4694                           ;common.c: 430: return 1;
  4695  07AC  0008               	return
  4696  07AD                     __end_of_isFinishedTwelveHoursTimer:	
  4697                           ;common.c: 432: else
  4698                           ;common.c: 433: return 0;
  4699                           
  4700                           
  4701                           	psect	text845
  4702  0729                     __ptext845:	
  4703 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  4704                           
  4705                           
  4706 ;; *************** function _startTwelveHourTimer *****************
  4707 ;; Defined at:
  4708 ;;		line 356 in file "D:\develop\190625\AK7030-OTP\common.c"
  4709 ;; Parameters:    Size  Location     Type
  4710 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  4711 ;; Auto vars:     Size  Location     Type
  4712 ;;		None
  4713 ;; Return value:  Size  Location     Type
  4714 ;;		None               void
  4715 ;; Registers used:
  4716 ;;		wreg, status,2, status,0
  4717 ;; Tracked objects:
  4718 ;;		On entry : 60/0
  4719 ;;		On exit  : 40/0
  4720 ;;		Unchanged: FFF9F/0
  4721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4722 ;;      Params:         0       2       0       0       0
  4723 ;;      Locals:         0       0       0       0       0
  4724 ;;      Temps:          0       0       0       0       0
  4725 ;;      Totals:         0       2       0       0       0
  4726 ;;Total ram usage:        2 bytes
  4727 ;; Hardware stack levels used:    1
  4728 ;; Hardware stack levels required when called:    2
  4729 ;; This function calls:
  4730 ;;		Nothing
  4731 ;; This function is called by:
  4732 ;;		_main
  4733 ;; This function uses a non-reentrant model
  4734 ;;
  4735  0729                     _startTwelveHourTimer:	
  4736                           
  4737                           ;common.c: 357: if((0 == uiBigTimer) && ( 0 == bBigTimerStartFlag))
  4738                           
  4739                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  4740  0729  1683               	bsf	3,5	;RP0=1, select bank1
  4741  072A  0821               	movf	(_uiBigTimer+1)^(0+128),w
  4742  072B  0420               	iorwf	_uiBigTimer^(0+128),w
  4743  072C  1D03               	skipz
  4744  072D  0008               	return
  4745  072E  1283               	bcf	3,5	;RP0=0, select bank0
  4746  072F  08CA               	movf	_bBigTimerStartFlag,f
  4747  0730  1D03               	skipz
  4748  0731  0008               	return
  4749                           
  4750                           ;common.c: 358: {
  4751                           ;common.c: 359: uiBigTimer = uiSetTime;
  4752  0732  0821               	movf	startTwelveHourTimer@uiSetTime+1,w
  4753  0733  1683               	bsf	3,5	;RP0=1, select bank1
  4754  0734  00A1               	movwf	(_uiBigTimer+1)^(0+128)
  4755  0735  1283               	bcf	3,5	;RP0=0, select bank0
  4756  0736  0820               	movf	startTwelveHourTimer@uiSetTime,w
  4757  0737  1683               	bsf	3,5	;RP0=1, select bank1
  4758  0738  00A0               	movwf	_uiBigTimer^(0+128)
  4759                           
  4760                           ;common.c: 360: bBigTimerStartFlag = 1;
  4761  0739  1283               	bcf	3,5	;RP0=0, select bank0
  4762  073A  01CA               	clrf	_bBigTimerStartFlag
  4763  073B  0ACA               	incf	_bBigTimerStartFlag,f
  4764  073C  0008               	return
  4765  073D                     __end_of_startTwelveHourTimer:	
  4766                           
  4767                           	psect	text846
  4768  0002                     __ptext846:	
  4769 ;; =============== function _startTwelveHourTimer ends ============
  4770                           
  4771                           
  4772 ;; *************** function _clrSampeTime *****************
  4773 ;; Defined at:
  4774 ;;		line 458 in file "D:\develop\190625\AK7030-OTP\common.c"
  4775 ;; Parameters:    Size  Location     Type
  4776 ;;		None
  4777 ;; Auto vars:     Size  Location     Type
  4778 ;;		None
  4779 ;; Return value:  Size  Location     Type
  4780 ;;		None               void
  4781 ;; Registers used:
  4782 ;;		status,2
  4783 ;; Tracked objects:
  4784 ;;		On entry : 60/20
  4785 ;;		On exit  : 60/20
  4786 ;;		Unchanged: FFF9F/0
  4787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4788 ;;      Params:         0       0       0       0       0
  4789 ;;      Locals:         0       0       0       0       0
  4790 ;;      Temps:          0       0       0       0       0
  4791 ;;      Totals:         0       0       0       0       0
  4792 ;;Total ram usage:        0 bytes
  4793 ;; Hardware stack levels used:    1
  4794 ;; Hardware stack levels required when called:    2
  4795 ;; This function calls:
  4796 ;;		Nothing
  4797 ;; This function is called by:
  4798 ;;		_main
  4799 ;; This function uses a non-reentrant model
  4800 ;;
  4801  0002                     _clrSampeTime:	
  4802                           
  4803                           ;common.c: 459: timer.timer10msStopWatch = 0;
  4804                           
  4805                           ; Regs used in _clrSampeTime: [status,2]
  4806  0002  01AC               	clrf	_timer^(0+128)
  4807  0003  0008               	return
  4808  0004                     __end_of_clrSampeTime:	
  4809                           
  4810                           	psect	text847
  4811  0FE3                     __ptext847:	
  4812 ;; =============== function _clrSampeTime ends ============
  4813                           
  4814                           
  4815 ;; *************** function _isPermitSampleTime *****************
  4816 ;; Defined at:
  4817 ;;		line 448 in file "D:\develop\190625\AK7030-OTP\common.c"
  4818 ;; Parameters:    Size  Location     Type
  4819 ;;		None
  4820 ;; Auto vars:     Size  Location     Type
  4821 ;;		None
  4822 ;; Return value:  Size  Location     Type
  4823 ;;                  1    wreg      unsigned char 
  4824 ;; Registers used:
  4825 ;;		wreg
  4826 ;; Tracked objects:
  4827 ;;		On entry : 40/0
  4828 ;;		On exit  : 60/20
  4829 ;;		Unchanged: FFF9F/0
  4830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4831 ;;      Params:         0       0       0       0       0
  4832 ;;      Locals:         0       0       0       0       0
  4833 ;;      Temps:          0       0       0       0       0
  4834 ;;      Totals:         0       0       0       0       0
  4835 ;;Total ram usage:        0 bytes
  4836 ;; Hardware stack levels used:    1
  4837 ;; Hardware stack levels required when called:    2
  4838 ;; This function calls:
  4839 ;;		Nothing
  4840 ;; This function is called by:
  4841 ;;		_main
  4842 ;; This function uses a non-reentrant model
  4843 ;;
  4844  0FE3                     _isPermitSampleTime:	
  4845                           
  4846                           ;common.c: 449: if(timer.timer10msStopWatch >= 10)
  4847                           
  4848                           ; Regs used in _isPermitSampleTime: [wreg]
  4849  0FE3  300A               	movlw	10
  4850  0FE4  1683               	bsf	3,5	;RP0=1, select bank1
  4851  0FE5  022C               	subwf	_timer^(0+128),w
  4852  0FE6  1803               	btfsc	3,0
  4853                           
  4854                           ;common.c: 450: {
  4855                           ;common.c: 451: return 1;
  4856  0FE7  3401               	retlw	1
  4857                           
  4858                           ;common.c: 453: else
  4859                           ;common.c: 454: return 0;
  4860  0FE8  3400               	retlw	0
  4861  0FE9                     __end_of_isPermitSampleTime:	
  4862                           
  4863                           	psect	text849
  4864  0FE9                     __ptext849:	
  4865 ;; =============== function _adc_start ends ============
  4866                           
  4867                           
  4868 ;; *************** function _op2_init *****************
  4869 ;; Defined at:
  4870 ;;		line 45 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4871 ;; Parameters:    Size  Location     Type
  4872 ;;		None
  4873 ;; Auto vars:     Size  Location     Type
  4874 ;;		None
  4875 ;; Return value:  Size  Location     Type
  4876 ;;		None               void
  4877 ;; Registers used:
  4878 ;;		wreg
  4879 ;; Tracked objects:
  4880 ;;		On entry : 17F/20
  4881 ;;		On exit  : 17F/20
  4882 ;;		Unchanged: FFE80/0
  4883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4884 ;;      Params:         0       0       0       0       0
  4885 ;;      Locals:         0       0       0       0       0
  4886 ;;      Temps:          0       0       0       0       0
  4887 ;;      Totals:         0       0       0       0       0
  4888 ;;Total ram usage:        0 bytes
  4889 ;; Hardware stack levels used:    1
  4890 ;; Hardware stack levels required when called:    2
  4891 ;; This function calls:
  4892 ;;		Nothing
  4893 ;; This function is called by:
  4894 ;;		_main
  4895 ;; This function uses a non-reentrant model
  4896 ;;
  4897  0FE9                     _op2_init:	
  4898                           
  4899                           ;periph.c: 52: OP2CON1=0x14;
  4900                           
  4901                           ; Regs used in _op2_init: [wreg]
  4902  0FE9  3014               	movlw	20
  4903  0FEA  009C               	movwf	28	;volatile
  4904                           
  4905                           ;periph.c: 54: OP2CON2=0x10;
  4906  0FEB  3010               	movlw	16
  4907  0FEC  009D               	movwf	29	;volatile
  4908                           
  4909                           ;periph.c: 55: OP2CON0=0x80;
  4910  0FED  3080               	movlw	128
  4911  0FEE  009B               	movwf	27	;volatile
  4912  0FEF  0008               	return
  4913  0FF0                     __end_of_op2_init:	
  4914                           
  4915                           	psect	text850
  4916  07AD                     __ptext850:	
  4917 ;; =============== function _op2_init ends ============
  4918                           
  4919                           
  4920 ;; *************** function _op1_init *****************
  4921 ;; Defined at:
  4922 ;;		line 26 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4923 ;; Parameters:    Size  Location     Type
  4924 ;;		None
  4925 ;; Auto vars:     Size  Location     Type
  4926 ;;		None
  4927 ;; Return value:  Size  Location     Type
  4928 ;;		None               void
  4929 ;; Registers used:
  4930 ;;		wreg
  4931 ;; Tracked objects:
  4932 ;;		On entry : 17F/20
  4933 ;;		On exit  : 17F/20
  4934 ;;		Unchanged: FFE80/0
  4935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4936 ;;      Params:         0       0       0       0       0
  4937 ;;      Locals:         0       0       0       0       0
  4938 ;;      Temps:          0       0       0       0       0
  4939 ;;      Totals:         0       0       0       0       0
  4940 ;;Total ram usage:        0 bytes
  4941 ;; Hardware stack levels used:    1
  4942 ;; Hardware stack levels required when called:    2
  4943 ;; This function calls:
  4944 ;;		Nothing
  4945 ;; This function is called by:
  4946 ;;		_main
  4947 ;; This function uses a non-reentrant model
  4948 ;;
  4949  07AD                     _op1_init:	
  4950                           
  4951                           ;periph.c: 33: OP1CON1=0x02;
  4952                           
  4953                           ; Regs used in _op1_init: [wreg]
  4954  07AD  3002               	movlw	2
  4955  07AE  1283               	bcf	3,5	;RP0=0, select bank0
  4956  07AF  009C               	movwf	28	;volatile
  4957                           
  4958                           ;periph.c: 34: OP1CON2=0xA0;
  4959  07B0  30A0               	movlw	160
  4960  07B1  009D               	movwf	29	;volatile
  4961                           
  4962                           ;periph.c: 35: OP1CON0=0x80;
  4963  07B2  3080               	movlw	128
  4964  07B3  009B               	movwf	27	;volatile
  4965                           
  4966                           ;periph.c: 38: TRISB3=1;
  4967  07B4  1683               	bsf	3,5	;RP0=1, select bank1
  4968  07B5  1586               	bsf	6,3
  4969                           
  4970                           ;periph.c: 40: TRISB5=0;
  4971  07B6  1286               	bcf	6,5
  4972  07B7  0008               	return
  4973  07B8                     __end_of_op1_init:	
  4974                           
  4975                           	psect	text851
  4976  0FDE                     __ptext851:	
  4977 ;; =============== function _op1_init ends ============
  4978                           
  4979                           
  4980 ;; *************** function _dac_init *****************
  4981 ;; Defined at:
  4982 ;;		line 14 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4983 ;; Parameters:    Size  Location     Type
  4984 ;;		None
  4985 ;; Auto vars:     Size  Location     Type
  4986 ;;		None
  4987 ;; Return value:  Size  Location     Type
  4988 ;;		None               void
  4989 ;; Registers used:
  4990 ;;		wreg
  4991 ;; Tracked objects:
  4992 ;;		On entry : 17F/20
  4993 ;;		On exit  : 17F/20
  4994 ;;		Unchanged: FFE80/0
  4995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4996 ;;      Params:         0       0       0       0       0
  4997 ;;      Locals:         0       0       0       0       0
  4998 ;;      Temps:          0       0       0       0       0
  4999 ;;      Totals:         0       0       0       0       0
  5000 ;;Total ram usage:        0 bytes
  5001 ;; Hardware stack levels used:    1
  5002 ;; Hardware stack levels required when called:    2
  5003 ;; This function calls:
  5004 ;;		Nothing
  5005 ;; This function is called by:
  5006 ;;		_main
  5007 ;; This function uses a non-reentrant model
  5008 ;;
  5009  0FDE                     _dac_init:	
  5010                           
  5011                           ;periph.c: 15: DACCON|=1;
  5012                           
  5013                           ; Regs used in _dac_init: [wreg]
  5014  0FDE  1407               	bsf	7,0	;volatile
  5015                           
  5016                           ;periph.c: 17: DACR0=0x0F;
  5017  0FDF  300F               	movlw	15
  5018  0FE0  0088               	movwf	8	;volatile
  5019                           
  5020                           ;periph.c: 18: DACCON|=(1)<<2;
  5021  0FE1  1507               	bsf	7,2	;volatile
  5022  0FE2  0008               	return
  5023  0FE3                     __end_of_dac_init:	
  5024                           
  5025                           	psect	text853
  5026  07FC                     __ptext853:	
  5027 ;; =============== function _adc_test_init ends ============
  5028                           
  5029                           
  5030 ;; *************** function _timer1_interrupt_config *****************
  5031 ;; Defined at:
  5032 ;;		line 194 in file "D:\develop\190625\AK7030-OTP\common.c"
  5033 ;; Parameters:    Size  Location     Type
  5034 ;;		None
  5035 ;; Auto vars:     Size  Location     Type
  5036 ;;		None
  5037 ;; Return value:  Size  Location     Type
  5038 ;;		None               void
  5039 ;; Registers used:
  5040 ;;		None
  5041 ;; Tracked objects:
  5042 ;;		On entry : 17F/20
  5043 ;;		On exit  : 17F/20
  5044 ;;		Unchanged: FFE80/0
  5045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5046 ;;      Params:         0       0       0       0       0
  5047 ;;      Locals:         0       0       0       0       0
  5048 ;;      Temps:          0       0       0       0       0
  5049 ;;      Totals:         0       0       0       0       0
  5050 ;;Total ram usage:        0 bytes
  5051 ;; Hardware stack levels used:    1
  5052 ;; Hardware stack levels required when called:    2
  5053 ;; This function calls:
  5054 ;;		Nothing
  5055 ;; This function is called by:
  5056 ;;		_main
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059  07FC                     _timer1_interrupt_config:	
  5060                           
  5061                           ;common.c: 195: GIE = 1;
  5062                           
  5063                           ; Regs used in _timer1_interrupt_config: []
  5064  07FC  178B               	bsf	11,7
  5065                           
  5066                           ;common.c: 196: PEIE = 1;
  5067  07FD  170B               	bsf	11,6
  5068  07FE  0008               	return
  5069  07FF                     __end_of_timer1_interrupt_config:	
  5070                           
  5071                           	psect	text854
  5072  07B8                     __ptext854:	
  5073 ;; =============== function _timer1_interrupt_config ends ============
  5074                           
  5075                           
  5076 ;; *************** function _timer1_config *****************
  5077 ;; Defined at:
  5078 ;;		line 182 in file "D:\develop\190625\AK7030-OTP\common.c"
  5079 ;; Parameters:    Size  Location     Type
  5080 ;;		None
  5081 ;; Auto vars:     Size  Location     Type
  5082 ;;		None
  5083 ;; Return value:  Size  Location     Type
  5084 ;;		None               void
  5085 ;; Registers used:
  5086 ;;		wreg
  5087 ;; Tracked objects:
  5088 ;;		On entry : 17F/40
  5089 ;;		On exit  : 17F/20
  5090 ;;		Unchanged: FFE80/0
  5091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5092 ;;      Params:         0       0       0       0       0
  5093 ;;      Locals:         0       0       0       0       0
  5094 ;;      Temps:          0       0       0       0       0
  5095 ;;      Totals:         0       0       0       0       0
  5096 ;;Total ram usage:        0 bytes
  5097 ;; Hardware stack levels used:    1
  5098 ;; Hardware stack levels required when called:    2
  5099 ;; This function calls:
  5100 ;;		Nothing
  5101 ;; This function is called by:
  5102 ;;		_main
  5103 ;; This function uses a non-reentrant model
  5104 ;;
  5105  07B8                     _timer1_config:	
  5106                           
  5107                           ;common.c: 184: TMR1H=0xCF;
  5108                           
  5109                           ; Regs used in _timer1_config: [wreg]
  5110  07B8  30CF               	movlw	207
  5111  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  5112  07BA  008F               	movwf	15	;volatile
  5113                           
  5114                           ;common.c: 185: TMR1L=0x2C;
  5115  07BB  302C               	movlw	44
  5116  07BC  008E               	movwf	14	;volatile
  5117                           
  5118                           ;common.c: 186: T1CON=0xE1;
  5119  07BD  30E1               	movlw	225
  5120  07BE  0090               	movwf	16	;volatile
  5121                           
  5122                           ;common.c: 187: TMR1IE=1;
  5123  07BF  1683               	bsf	3,5	;RP0=1, select bank1
  5124  07C0  140C               	bsf	12,0
  5125  07C1  0008               	return
  5126  07C2                     __end_of_timer1_config:	
  5127                           
  5128                           	psect	text855
  5129  07DC                     __ptext855:	
  5130 ;; =============== function _timer1_config ends ============
  5131                           
  5132                           
  5133 ;; *************** function _clock_config *****************
  5134 ;; Defined at:
  5135 ;;		line 174 in file "D:\develop\190625\AK7030-OTP\common.c"
  5136 ;; Parameters:    Size  Location     Type
  5137 ;;		None
  5138 ;; Auto vars:     Size  Location     Type
  5139 ;;		None
  5140 ;; Return value:  Size  Location     Type
  5141 ;;		None               void
  5142 ;; Registers used:
  5143 ;;		wreg, status,2
  5144 ;; Tracked objects:
  5145 ;;		On entry : 17F/20
  5146 ;;		On exit  : 17F/40
  5147 ;;		Unchanged: FFE80/0
  5148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5149 ;;      Params:         0       0       0       0       0
  5150 ;;      Locals:         0       0       0       0       0
  5151 ;;      Temps:          0       0       0       0       0
  5152 ;;      Totals:         0       0       0       0       0
  5153 ;;Total ram usage:        0 bytes
  5154 ;; Hardware stack levels used:    1
  5155 ;; Hardware stack levels required when called:    2
  5156 ;; This function calls:
  5157 ;;		Nothing
  5158 ;; This function is called by:
  5159 ;;		_main
  5160 ;; This function uses a non-reentrant model
  5161 ;;
  5162  07DC                     _clock_config:	
  5163                           
  5164                           ;common.c: 176: CLKPR = 0x80;
  5165                           
  5166                           ; Regs used in _clock_config: [wreg+status,2]
  5167  07DC  3080               	movlw	128
  5168  07DD  1283               	bcf	3,5	;RP0=0, select bank2
  5169  07DE  1703               	bsf	3,6	;RP1=1, select bank2
  5170  07DF  0088               	movwf	8	;volatile
  5171                           
  5172                           ;common.c: 177: CLKPR = 0x00;
  5173  07E0  0188               	clrf	8	;volatile
  5174  07E1                     l1764:	
  5175                           ;common.c: 178: while(CLKPCE);
  5176                           
  5177  07E1  1F88               	btfss	8,7
  5178  07E2  0008               	return
  5179  07E3  2FE1               	goto	l1764
  5180  07E4                     __end_of_clock_config:	
  5181                           
  5182                           	psect	text856
  5183  07C2                     __ptext856:	
  5184 ;; =============== function _clock_config ends ============
  5185                           
  5186                           
  5187 ;; *************** function _setPA6 *****************
  5188 ;; Defined at:
  5189 ;;		line 281 in file "D:\develop\190625\AK7030-OTP\main.c"
  5190 ;; Parameters:    Size  Location     Type
  5191 ;;  bValue          1    wreg     unsigned char 
  5192 ;; Auto vars:     Size  Location     Type
  5193 ;;  bValue          1    0[BANK0 ] unsigned char 
  5194 ;; Return value:  Size  Location     Type
  5195 ;;		None               void
  5196 ;; Registers used:
  5197 ;;		wreg
  5198 ;; Tracked objects:
  5199 ;;		On entry : 40/0
  5200 ;;		On exit  : 60/0
  5201 ;;		Unchanged: FFF9F/0
  5202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5203 ;;      Params:         0       0       0       0       0
  5204 ;;      Locals:         0       1       0       0       0
  5205 ;;      Temps:          0       0       0       0       0
  5206 ;;      Totals:         0       1       0       0       0
  5207 ;;Total ram usage:        1 bytes
  5208 ;; Hardware stack levels used:    1
  5209 ;; Hardware stack levels required when called:    2
  5210 ;; This function calls:
  5211 ;;		Nothing
  5212 ;; This function is called by:
  5213 ;;		_main
  5214 ;; This function uses a non-reentrant model
  5215 ;;
  5216  07C2                     _setPA6:	
  5217                           
  5218                           ; Regs used in _setPA6: [wreg]
  5219                           ;setPA6@bValue stored from wreg
  5220  07C2  1283               	bcf	3,5	;RP0=0, select bank0
  5221  07C3  00A0               	movwf	setPA6@bValue
  5222                           
  5223                           ;main.c: 282: if( bValue )
  5224  07C4  0820               	movf	setPA6@bValue,w
  5225  07C5  1903               	btfsc	3,2
  5226  07C6  2FC9               	goto	l723
  5227                           
  5228                           ;main.c: 284: PA6 = 1;
  5229  07C7  1705               	bsf	5,6
  5230  07C8  0008               	return
  5231  07C9                     l723:	
  5232                           
  5233                           ;main.c: 288: else
  5234                           ;main.c: 290: PA6= 0;
  5235  07C9  1305               	bcf	5,6
  5236  07CA  0008               	return
  5237  07CB                     __end_of_setPA6:	
  5238                           
  5239                           	psect	text857
  5240  07E4                     __ptext857:	
  5241 ;; =============== function _setPA6 ends ============
  5242                           
  5243                           
  5244 ;; *************** function _setPA3 *****************
  5245 ;; Defined at:
  5246 ;;		line 235 in file "D:\develop\190625\AK7030-OTP\main.c"
  5247 ;; Parameters:    Size  Location     Type
  5248 ;;  bValue          1    wreg     unsigned char 
  5249 ;; Auto vars:     Size  Location     Type
  5250 ;;  bValue          1    0[BANK0 ] unsigned char 
  5251 ;; Return value:  Size  Location     Type
  5252 ;;		None               void
  5253 ;; Registers used:
  5254 ;;		wreg
  5255 ;; Tracked objects:
  5256 ;;		On entry : 60/0
  5257 ;;		On exit  : 60/0
  5258 ;;		Unchanged: FFF9F/0
  5259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5260 ;;      Params:         0       0       0       0       0
  5261 ;;      Locals:         0       1       0       0       0
  5262 ;;      Temps:          0       0       0       0       0
  5263 ;;      Totals:         0       1       0       0       0
  5264 ;;Total ram usage:        1 bytes
  5265 ;; Hardware stack levels used:    1
  5266 ;; Hardware stack levels required when called:    2
  5267 ;; This function calls:
  5268 ;;		Nothing
  5269 ;; This function is called by:
  5270 ;;		_main
  5271 ;; This function uses a non-reentrant model
  5272 ;;
  5273  07E4                     _setPA3:	
  5274                           
  5275                           ; Regs used in _setPA3: [wreg]
  5276                           ;setPA3@bValue stored from wreg
  5277  07E4  00A0               	movwf	setPA3@bValue
  5278                           
  5279                           ;main.c: 236: if( bValue )
  5280  07E5  0820               	movf	setPA3@bValue,w
  5281  07E6  1903               	btfsc	3,2
  5282  07E7  2FEA               	goto	l713
  5283                           
  5284                           ;main.c: 238: PA3 = 1;
  5285  07E8  1585               	bsf	5,3
  5286  07E9  0008               	return
  5287  07EA                     l713:	
  5288                           
  5289                           ;main.c: 242: else
  5290                           ;main.c: 244: PA3 = 0;
  5291  07EA  1185               	bcf	5,3
  5292  07EB  0008               	return
  5293  07EC                     __end_of_setPA3:	
  5294                           
  5295                           	psect	text858
  5296  07EC                     __ptext858:	
  5297 ;; =============== function _setPA3 ends ============
  5298                           
  5299                           
  5300 ;; *************** function _setPA2 *****************
  5301 ;; Defined at:
  5302 ;;		line 218 in file "D:\develop\190625\AK7030-OTP\main.c"
  5303 ;; Parameters:    Size  Location     Type
  5304 ;;  bValue          1    wreg     unsigned char 
  5305 ;; Auto vars:     Size  Location     Type
  5306 ;;  bValue          1    0[BANK0 ] unsigned char 
  5307 ;; Return value:  Size  Location     Type
  5308 ;;		None               void
  5309 ;; Registers used:
  5310 ;;		wreg
  5311 ;; Tracked objects:
  5312 ;;		On entry : 60/0
  5313 ;;		On exit  : 60/0
  5314 ;;		Unchanged: FFF9F/0
  5315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5316 ;;      Params:         0       0       0       0       0
  5317 ;;      Locals:         0       1       0       0       0
  5318 ;;      Temps:          0       0       0       0       0
  5319 ;;      Totals:         0       1       0       0       0
  5320 ;;Total ram usage:        1 bytes
  5321 ;; Hardware stack levels used:    1
  5322 ;; Hardware stack levels required when called:    2
  5323 ;; This function calls:
  5324 ;;		Nothing
  5325 ;; This function is called by:
  5326 ;;		_main
  5327 ;; This function uses a non-reentrant model
  5328 ;;
  5329  07EC                     _setPA2:	
  5330                           
  5331                           ; Regs used in _setPA2: [wreg]
  5332                           ;setPA2@bValue stored from wreg
  5333  07EC  00A0               	movwf	setPA2@bValue
  5334                           
  5335                           ;main.c: 219: if( bValue )
  5336  07ED  0820               	movf	setPA2@bValue,w
  5337  07EE  1903               	btfsc	3,2
  5338  07EF  2FF2               	goto	l708
  5339                           
  5340                           ;main.c: 221: PA2 = 1;
  5341  07F0  1505               	bsf	5,2
  5342  07F1  0008               	return
  5343  07F2                     l708:	
  5344                           
  5345                           ;main.c: 225: else
  5346                           ;main.c: 227: PA2 = 0;
  5347  07F2  1105               	bcf	5,2
  5348  07F3  0008               	return
  5349  07F4                     __end_of_setPA2:	
  5350                           
  5351                           	psect	text859
  5352  07F4                     __ptext859:	
  5353 ;; =============== function _setPA2 ends ============
  5354                           
  5355                           
  5356 ;; *************** function _setPA1 *****************
  5357 ;; Defined at:
  5358 ;;		line 200 in file "D:\develop\190625\AK7030-OTP\main.c"
  5359 ;; Parameters:    Size  Location     Type
  5360 ;;  bValue          1    wreg     unsigned char 
  5361 ;; Auto vars:     Size  Location     Type
  5362 ;;  bValue          1    0[BANK0 ] unsigned char 
  5363 ;; Return value:  Size  Location     Type
  5364 ;;		None               void
  5365 ;; Registers used:
  5366 ;;		wreg
  5367 ;; Tracked objects:
  5368 ;;		On entry : 60/0
  5369 ;;		On exit  : 60/0
  5370 ;;		Unchanged: FFF9F/0
  5371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5372 ;;      Params:         0       0       0       0       0
  5373 ;;      Locals:         0       1       0       0       0
  5374 ;;      Temps:          0       0       0       0       0
  5375 ;;      Totals:         0       1       0       0       0
  5376 ;;Total ram usage:        1 bytes
  5377 ;; Hardware stack levels used:    1
  5378 ;; Hardware stack levels required when called:    2
  5379 ;; This function calls:
  5380 ;;		Nothing
  5381 ;; This function is called by:
  5382 ;;		_main
  5383 ;; This function uses a non-reentrant model
  5384 ;;
  5385  07F4                     _setPA1:	
  5386                           
  5387                           ; Regs used in _setPA1: [wreg]
  5388                           ;setPA1@bValue stored from wreg
  5389  07F4  00A0               	movwf	setPA1@bValue
  5390                           
  5391                           ;main.c: 201: if( bValue )
  5392  07F5  0820               	movf	setPA1@bValue,w
  5393  07F6  1903               	btfsc	3,2
  5394  07F7  2FFA               	goto	l703
  5395                           
  5396                           ;main.c: 203: PA1 = 1;
  5397  07F8  1485               	bsf	5,1
  5398  07F9  0008               	return
  5399  07FA                     l703:	
  5400                           
  5401                           ;main.c: 207: else
  5402                           ;main.c: 209: PA1 = 0;
  5403  07FA  1085               	bcf	5,1
  5404  07FB  0008               	return
  5405  07FC                     __end_of_setPA1:	
  5406                           
  5407                           	psect	text860
  5408  0FF8                     __ptext860:	
  5409 ;; =============== function _setPA1 ends ============
  5410                           
  5411                           
  5412 ;; *************** function _setPA0 *****************
  5413 ;; Defined at:
  5414 ;;		line 183 in file "D:\develop\190625\AK7030-OTP\main.c"
  5415 ;; Parameters:    Size  Location     Type
  5416 ;;  bValue          1    wreg     unsigned char 
  5417 ;; Auto vars:     Size  Location     Type
  5418 ;;  bValue          1    0[BANK0 ] unsigned char 
  5419 ;; Return value:  Size  Location     Type
  5420 ;;		None               void
  5421 ;; Registers used:
  5422 ;;		wreg
  5423 ;; Tracked objects:
  5424 ;;		On entry : 60/0
  5425 ;;		On exit  : 60/0
  5426 ;;		Unchanged: FFF9F/0
  5427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5428 ;;      Params:         0       0       0       0       0
  5429 ;;      Locals:         0       1       0       0       0
  5430 ;;      Temps:          0       0       0       0       0
  5431 ;;      Totals:         0       1       0       0       0
  5432 ;;Total ram usage:        1 bytes
  5433 ;; Hardware stack levels used:    1
  5434 ;; Hardware stack levels required when called:    2
  5435 ;; This function calls:
  5436 ;;		Nothing
  5437 ;; This function is called by:
  5438 ;;		_main
  5439 ;; This function uses a non-reentrant model
  5440 ;;
  5441  0FF8                     _setPA0:	
  5442                           
  5443                           ; Regs used in _setPA0: [wreg]
  5444                           ;setPA0@bValue stored from wreg
  5445  0FF8  00A0               	movwf	setPA0@bValue
  5446                           
  5447                           ;main.c: 184: if( bValue )
  5448  0FF9  0820               	movf	setPA0@bValue,w
  5449  0FFA  1903               	btfsc	3,2
  5450  0FFB  2FFE               	goto	l698
  5451                           
  5452                           ;main.c: 186: PA0 = 1;
  5453  0FFC  1405               	bsf	5,0
  5454  0FFD  0008               	return
  5455  0FFE                     l698:	
  5456                           
  5457                           ;main.c: 190: else
  5458                           ;main.c: 192: PA0 = 0;
  5459  0FFE  1005               	bcf	5,0
  5460  0FFF  0008               	return
  5461  1000                     __end_of_setPA0:	
  5462                           
  5463                           	psect	text861
  5464  0FF0                     __ptext861:	
  5465 ;; =============== function _setPA0 ends ============
  5466                           
  5467                           
  5468 ;; *************** function _setPB1 *****************
  5469 ;; Defined at:
  5470 ;;		line 166 in file "D:\develop\190625\AK7030-OTP\main.c"
  5471 ;; Parameters:    Size  Location     Type
  5472 ;;  bValue          1    wreg     unsigned char 
  5473 ;; Auto vars:     Size  Location     Type
  5474 ;;  bValue          1    0[BANK0 ] unsigned char 
  5475 ;; Return value:  Size  Location     Type
  5476 ;;		None               void
  5477 ;; Registers used:
  5478 ;;		wreg
  5479 ;; Tracked objects:
  5480 ;;		On entry : 60/0
  5481 ;;		On exit  : 60/0
  5482 ;;		Unchanged: FFF9F/0
  5483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5484 ;;      Params:         0       0       0       0       0
  5485 ;;      Locals:         0       1       0       0       0
  5486 ;;      Temps:          0       0       0       0       0
  5487 ;;      Totals:         0       1       0       0       0
  5488 ;;Total ram usage:        1 bytes
  5489 ;; Hardware stack levels used:    1
  5490 ;; Hardware stack levels required when called:    2
  5491 ;; This function calls:
  5492 ;;		Nothing
  5493 ;; This function is called by:
  5494 ;;		_main
  5495 ;; This function uses a non-reentrant model
  5496 ;;
  5497  0FF0                     _setPB1:	
  5498                           
  5499                           ; Regs used in _setPB1: [wreg]
  5500                           ;setPB1@bValue stored from wreg
  5501  0FF0  00A0               	movwf	setPB1@bValue
  5502                           
  5503                           ;main.c: 167: if( bValue )
  5504  0FF1  0820               	movf	setPB1@bValue,w
  5505  0FF2  1903               	btfsc	3,2
  5506  0FF3  2FF6               	goto	l693
  5507                           
  5508                           ;main.c: 169: PB1 = 1;
  5509  0FF4  1486               	bsf	6,1
  5510  0FF5  0008               	return
  5511  0FF6                     l693:	
  5512                           
  5513                           ;main.c: 173: else
  5514                           ;main.c: 175: PB1 = 0;
  5515  0FF6  1086               	bcf	6,1
  5516  0FF7  0008               	return
  5517  0FF8                     __end_of_setPB1:	
  5518                           
  5519                           	psect	text862
  5520  07CB                     __ptext862:	
  5521 ;; =============== function _setPB1 ends ============
  5522                           
  5523                           
  5524 ;; *************** function _setPB0 *****************
  5525 ;; Defined at:
  5526 ;;		line 149 in file "D:\develop\190625\AK7030-OTP\main.c"
  5527 ;; Parameters:    Size  Location     Type
  5528 ;;  bValue          1    wreg     unsigned char 
  5529 ;; Auto vars:     Size  Location     Type
  5530 ;;  bValue          1    0[BANK0 ] unsigned char 
  5531 ;; Return value:  Size  Location     Type
  5532 ;;		None               void
  5533 ;; Registers used:
  5534 ;;		wreg
  5535 ;; Tracked objects:
  5536 ;;		On entry : 40/0
  5537 ;;		On exit  : 60/0
  5538 ;;		Unchanged: FFF9F/0
  5539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5540 ;;      Params:         0       0       0       0       0
  5541 ;;      Locals:         0       1       0       0       0
  5542 ;;      Temps:          0       0       0       0       0
  5543 ;;      Totals:         0       1       0       0       0
  5544 ;;Total ram usage:        1 bytes
  5545 ;; Hardware stack levels used:    1
  5546 ;; Hardware stack levels required when called:    2
  5547 ;; This function calls:
  5548 ;;		Nothing
  5549 ;; This function is called by:
  5550 ;;		_main
  5551 ;; This function uses a non-reentrant model
  5552 ;;
  5553  07CB                     _setPB0:	
  5554                           
  5555                           ; Regs used in _setPB0: [wreg]
  5556                           ;setPB0@bValue stored from wreg
  5557  07CB  1283               	bcf	3,5	;RP0=0, select bank0
  5558  07CC  00A0               	movwf	setPB0@bValue
  5559                           
  5560                           ;main.c: 150: if( bValue )
  5561  07CD  0820               	movf	setPB0@bValue,w
  5562  07CE  1903               	btfsc	3,2
  5563  07CF  2FD2               	goto	l688
  5564                           
  5565                           ;main.c: 152: PB0 = 1;
  5566  07D0  1406               	bsf	6,0
  5567  07D1  0008               	return
  5568  07D2                     l688:	
  5569                           
  5570                           ;main.c: 156: else
  5571                           ;main.c: 158: PB0 = 0;
  5572  07D2  1006               	bcf	6,0
  5573  07D3  0008               	return
  5574  07D4                     __end_of_setPB0:	
  5575                           
  5576                           	psect	text863
  5577  073D                     __ptext863:	
  5578 ;; =============== function _setPB0 ends ============
  5579                           
  5580                           
  5581 ;; *************** function _initPin *****************
  5582 ;; Defined at:
  5583 ;;		line 123 in file "D:\develop\190625\AK7030-OTP\main.c"
  5584 ;; Parameters:    Size  Location     Type
  5585 ;;		None
  5586 ;; Auto vars:     Size  Location     Type
  5587 ;;		None
  5588 ;; Return value:  Size  Location     Type
  5589 ;;		None               void
  5590 ;; Registers used:
  5591 ;;		None
  5592 ;; Tracked objects:
  5593 ;;		On entry : 160/20
  5594 ;;		On exit  : 160/60
  5595 ;;		Unchanged: FFE9F/0
  5596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5597 ;;      Params:         0       0       0       0       0
  5598 ;;      Locals:         0       0       0       0       0
  5599 ;;      Temps:          0       0       0       0       0
  5600 ;;      Totals:         0       0       0       0       0
  5601 ;;Total ram usage:        0 bytes
  5602 ;; Hardware stack levels used:    1
  5603 ;; Hardware stack levels required when called:    2
  5604 ;; This function calls:
  5605 ;;		Nothing
  5606 ;; This function is called by:
  5607 ;;		_main
  5608 ;; This function uses a non-reentrant model
  5609 ;;
  5610  073D                     _initPin:	
  5611                           
  5612                           ;main.c: 125: PB6 = 1;
  5613                           
  5614                           ; Regs used in _initPin: []
  5615  073D  1283               	bcf	3,5	;RP0=0, select bank0
  5616  073E  1706               	bsf	6,6
  5617                           
  5618                           ;main.c: 126: PBOD6 = 1;
  5619  073F  1683               	bsf	3,5	;RP0=1, select bank3
  5620  0740  1703               	bsf	3,6	;RP1=1, select bank3
  5621  0741  1708               	bsf	8,6
  5622                           
  5623                           ;main.c: 130: PA0 = 0;
  5624  0742  1283               	bcf	3,5	;RP0=0, select bank0
  5625  0743  1303               	bcf	3,6	;RP1=0, select bank0
  5626  0744  1005               	bcf	5,0
  5627                           
  5628                           ;main.c: 131: PA1 = 0;
  5629  0745  1085               	bcf	5,1
  5630                           
  5631                           ;main.c: 132: PA2 = 0;
  5632  0746  1105               	bcf	5,2
  5633                           
  5634                           ;main.c: 133: PA3 = 0;
  5635  0747  1185               	bcf	5,3
  5636                           
  5637                           ;main.c: 134: PB0 = 0;
  5638  0748  1006               	bcf	6,0
  5639                           
  5640                           ;main.c: 135: PB1 = 1;
  5641  0749  1486               	bsf	6,1
  5642                           
  5643                           ;main.c: 136: PA6 = 0;
  5644  074A  1305               	bcf	5,6
  5645                           
  5646                           ;main.c: 138: PB7 = 0;
  5647  074B  1386               	bcf	6,7
  5648                           
  5649                           ;main.c: 139: PBOD7 = 0;
  5650  074C  1683               	bsf	3,5	;RP0=1, select bank3
  5651  074D  1703               	bsf	3,6	;RP1=1, select bank3
  5652  074E  1388               	bcf	8,7
  5653  074F  0008               	return
  5654  0750                     __end_of_initPin:	
  5655                           
  5656                           	psect	text867
  5657  04B5                     __ptext867:	
  5658 ;; =============== function _clearTwelveHoursTimer ends ============
  5659                           
  5660                           
  5661 ;; *************** function _ISR *****************
  5662 ;; Defined at:
  5663 ;;		line 463 in file "D:\develop\190625\AK7030-OTP\common.c"
  5664 ;; Parameters:    Size  Location     Type
  5665 ;;		None
  5666 ;; Auto vars:     Size  Location     Type
  5667 ;;		None
  5668 ;; Return value:  Size  Location     Type
  5669 ;;		None               void
  5670 ;; Registers used:
  5671 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5672 ;; Tracked objects:
  5673 ;;		On entry : 0/0
  5674 ;;		On exit  : 60/0
  5675 ;;		Unchanged: FFE00/0
  5676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5677 ;;      Params:         0       0       0       0       0
  5678 ;;      Locals:         0       0       0       0       0
  5679 ;;      Temps:          4       0       0       0       0
  5680 ;;      Totals:         4       0       0       0       0
  5681 ;;Total ram usage:        4 bytes
  5682 ;; Hardware stack levels used:    1
  5683 ;; Hardware stack levels required when called:    1
  5684 ;; This function calls:
  5685 ;;		i1_setAD_ConvertFlag
  5686 ;;		_adc_get
  5687 ;;		_vPutSampleDataIntoTable
  5688 ;; This function is called by:
  5689 ;;		Interrupt level 1
  5690 ;; This function uses a non-reentrant model
  5691 ;;
  5692  04B5                     _ISR:	
  5693                           
  5694                           ;common.c: 464: static unsigned char ucTimer1sCnt = 0;
  5695                           ;common.c: 466: if(TMR1IF == 1)
  5696  04B5  1C0C               	btfss	12,0
  5697  04B6  2CDE               	goto	i1l4516
  5698                           
  5699                           ;common.c: 467: {
  5700                           ;common.c: 468: TMR1IF = 0 ;
  5701  04B7  100C               	bcf	12,0
  5702                           
  5703                           ;common.c: 469: timer.timer10msStopWatch++;
  5704  04B8  1683               	bsf	3,5	;RP0=1, select bank1
  5705  04B9  3064               	movlw	100
  5706  04BA  0AAC               	incf	_timer^(0+128),f
  5707                           
  5708                           ;common.c: 470: ucTimer1sCnt++;
  5709  04BB  0AAA               	incf	ISR@ucTimer1sCnt^(0+128),f
  5710                           
  5711                           ;common.c: 472: if(ucTimer1sCnt >= 100)
  5712  04BC  022A               	subwf	ISR@ucTimer1sCnt^(0+128),w
  5713  04BD  1C03               	skipc
  5714  04BE  2CDE               	goto	i1l4516
  5715                           
  5716                           ;common.c: 473: {
  5717                           ;common.c: 474: ucTimer1sCnt = 0;
  5718  04BF  01AA               	clrf	ISR@ucTimer1sCnt^(0+128)
  5719                           
  5720                           ;common.c: 475: if(uiBigTimer > 0)
  5721  04C0  0821               	movf	(_uiBigTimer+1)^(0+128),w
  5722  04C1  0420               	iorwf	_uiBigTimer^(0+128),w
  5723  04C2  1903               	skipnz
  5724  04C3  2CCA               	goto	i1l1861
  5725                           
  5726                           ;common.c: 476: uiBigTimer--;
  5727  04C4  3001               	movlw	1
  5728  04C5  02A0               	subwf	_uiBigTimer^(0+128),f
  5729  04C6  3000               	movlw	0
  5730  04C7  1C03               	skipc
  5731  04C8  03A1               	decf	(_uiBigTimer+1)^(0+128),f
  5732  04C9  02A1               	subwf	(_uiBigTimer+1)^(0+128),f
  5733  04CA                     i1l1861:	
  5734                           
  5735                           ;common.c: 478: if(uiSmallTimer)
  5736  04CA  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  5737  04CB  0422               	iorwf	_uiSmallTimer^(0+128),w
  5738  04CC  1903               	skipnz
  5739  04CD  2CD4               	goto	i1l1862
  5740                           
  5741                           ;common.c: 479: uiSmallTimer--;
  5742  04CE  3001               	movlw	1
  5743  04CF  02A2               	subwf	_uiSmallTimer^(0+128),f
  5744  04D0  3000               	movlw	0
  5745  04D1  1C03               	skipc
  5746  04D2  03A3               	decf	(_uiSmallTimer+1)^(0+128),f
  5747  04D3  02A3               	subwf	(_uiSmallTimer+1)^(0+128),f
  5748  04D4                     i1l1862:	
  5749                           
  5750                           ;common.c: 481: if(uiTwentySecondsTimer)
  5751  04D4  0825               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  5752  04D5  0424               	iorwf	_uiTwentySecondsTimer^(0+128),w
  5753  04D6  1903               	skipnz
  5754  04D7  2CDE               	goto	i1l4516
  5755                           
  5756                           ;common.c: 482: uiTwentySecondsTimer--;
  5757  04D8  3001               	movlw	1
  5758  04D9  02A4               	subwf	_uiTwentySecondsTimer^(0+128),f
  5759  04DA  3000               	movlw	0
  5760  04DB  1C03               	skipc
  5761  04DC  03A5               	decf	(_uiTwentySecondsTimer+1)^(0+128),f
  5762  04DD  02A5               	subwf	(_uiTwentySecondsTimer+1)^(0+128),f
  5763  04DE                     i1l4516:	
  5764                           
  5765                           ;common.c: 483: }
  5766                           ;common.c: 484: }
  5767                           ;common.c: 486: if(ADIF)
  5768  04DE  1283               	bcf	3,5	;RP0=0, select bank0
  5769  04DF  1D0D               	btfss	13,2
  5770  04E0  2D06               	goto	i1l1869
  5771  04E1  3001               	movlw	1
  5772                           
  5773                           ;common.c: 487: {
  5774                           ;common.c: 488: ADIF=0;
  5775  04E2  110D               	bcf	13,2
  5776                           
  5777                           ;common.c: 489: setAD_ConvertFlag(1);
  5778  04E3  2581  118A         	fcall	i1_setAD_ConvertFlag
  5779                           
  5780                           ;common.c: 491: if(sampleChannelSelect == 5)
  5781  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  5782  04E6  086E               	movf	_sampleChannelSelect,w
  5783  04E7  3A05               	xorlw	5
  5784  04E8  1D03               	skipz
  5785  04E9  2CF2               	goto	i1l4526
  5786                           
  5787                           ;common.c: 492: {
  5788                           ;common.c: 495: vPutSampleDataIntoTable(adc_get(),5);
  5789  04EA  2513  118A         	fcall	_adc_get
  5790  04EC  0871               	movf	?_adc_get+1,w
  5791  04ED  00F5               	movwf	?_vPutSampleDataIntoTable+1
  5792  04EE  0870               	movf	?_adc_get,w
  5793  04EF  00F4               	movwf	?_vPutSampleDataIntoTable
  5794  04F0  3005               	movlw	5
  5795  04F1  2D04               	goto	L25
  5796  04F2                     i1l4526:	
  5797                           ;common.c: 499: }
  5798                           
  5799                           
  5800                           ;common.c: 500: else if(sampleChannelSelect == 1)
  5801  04F2  0B6E               	decfsz	_sampleChannelSelect,w
  5802  04F3  2CFD               	goto	i1l4530
  5803                           
  5804                           ;common.c: 501: {
  5805                           ;common.c: 503: vPutSampleDataIntoTable(adc_get(),1);
  5806  04F4  2513  118A         	fcall	_adc_get
  5807  04F6  0871               	movf	?_adc_get+1,w
  5808  04F7  00F5               	movwf	?_vPutSampleDataIntoTable+1
  5809  04F8  0870               	movf	?_adc_get,w
  5810  04F9  00F4               	movwf	?_vPutSampleDataIntoTable
  5811  04FA  01F6               	clrf	?_vPutSampleDataIntoTable+2
  5812  04FB  0AF6               	incf	?_vPutSampleDataIntoTable+2,f
  5813  04FC  2D05               	goto	L26
  5814  04FD                     i1l4530:	
  5815                           ;common.c: 508: }
  5816                           
  5817                           
  5818                           ;common.c: 509: else
  5819                           ;common.c: 510: {
  5820                           ;common.c: 514: vPutSampleDataIntoTable(adc_get(),14);
  5821  04FD  2513  118A         	fcall	_adc_get
  5822  04FF  0871               	movf	?_adc_get+1,w
  5823  0500  00F5               	movwf	?_vPutSampleDataIntoTable+1
  5824  0501  0870               	movf	?_adc_get,w
  5825  0502  00F4               	movwf	?_vPutSampleDataIntoTable
  5826  0503  300E               	movlw	14
  5827  0504                     L25:	
  5828  0504  00F6               	movwf	?_vPutSampleDataIntoTable+2
  5829  0505                     L26:	
  5830  0505  251E               	fcall	_vPutSampleDataIntoTable
  5831  0506                     i1l1869:	
  5832  0506  087C               	movf	??_ISR+3,w
  5833  0507  1283               	bcf	3,5	;RP0=0, select bank0
  5834  0508  1303               	bcf	3,6	;RP1=0, select bank0
  5835  0509  00FF               	movwf	127
  5836  050A  087B               	movf	??_ISR+2,w
  5837  050B  008A               	movwf	10
  5838  050C  087A               	movf	??_ISR+1,w
  5839  050D  0084               	movwf	4
  5840  050E  0E79               	swapf	??_ISR^(0+-128),w
  5841  050F  0083               	movwf	3
  5842  0510  0EFE               	swapf	126,f
  5843  0511  0E7E               	swapf	126,w
  5844  0512  0009               	retfie
  5845  0513                     __end_of_ISR:	
  5846  0513                     __ptext869:	
  5847 ;; =============== function i1_setAD_ConvertFlag ends ============
  5848                           
  5849                           
  5850 ;; *************** function _adc_get *****************
  5851 ;; Defined at:
  5852 ;;		line 105 in file "D:\develop\190625\AK7030-OTP\periph.c"
  5853 ;; Parameters:    Size  Location     Type
  5854 ;;		None
  5855 ;; Auto vars:     Size  Location     Type
  5856 ;;  val             2    2[COMMON] unsigned int 
  5857 ;; Return value:  Size  Location     Type
  5858 ;;                  2    0[COMMON] unsigned int 
  5859 ;; Registers used:
  5860 ;;		wreg
  5861 ;; Tracked objects:
  5862 ;;		On entry : 60/0
  5863 ;;		On exit  : 60/20
  5864 ;;		Unchanged: FFF9F/0
  5865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5866 ;;      Params:         2       0       0       0       0
  5867 ;;      Locals:         2       0       0       0       0
  5868 ;;      Temps:          0       0       0       0       0
  5869 ;;      Totals:         4       0       0       0       0
  5870 ;;Total ram usage:        4 bytes
  5871 ;; Hardware stack levels used:    1
  5872 ;; This function calls:
  5873 ;;		Nothing
  5874 ;; This function is called by:
  5875 ;;		_ISR
  5876 ;; This function uses a non-reentrant model
  5877 ;;
  5878  0513                     _adc_get:	
  5879                           
  5880                           ;periph.c: 106: unsigned int val;
  5881                           ;periph.c: 107: val = (ADRESH<<8) | ADRESL;
  5882                           
  5883                           ; Regs used in _adc_get: [wreg]
  5884  0513  081E               	movf	30,w	;volatile
  5885  0514  00F3               	movwf	adc_get@val+1
  5886  0515  01F2               	clrf	adc_get@val
  5887  0516  1683               	bsf	3,5	;RP0=1, select bank1
  5888  0517  081E               	movf	30,w	;volatile
  5889  0518  04F2               	iorwf	adc_get@val,f
  5890                           
  5891                           ;periph.c: 108: return val;
  5892  0519  0873               	movf	adc_get@val+1,w
  5893  051A  00F1               	movwf	?_adc_get+1
  5894  051B  0872               	movf	adc_get@val,w
  5895  051C  00F0               	movwf	?_adc_get
  5896  051D  0008               	return
  5897  051E                     __end_of_adc_get:	
  5898  051E                     __ptext870:	
  5899 ;; =============== function _adc_get ends ============
  5900                           
  5901                           
  5902 ;; *************** function _vPutSampleDataIntoTable *****************
  5903 ;; Defined at:
  5904 ;;		line 99 in file "D:\develop\190625\AK7030-OTP\common.c"
  5905 ;; Parameters:    Size  Location     Type
  5906 ;;  uiSampleData    2    4[COMMON] unsigned int 
  5907 ;;  channel         1    6[COMMON] unsigned char 
  5908 ;; Auto vars:     Size  Location     Type
  5909 ;;  i               2    7[COMMON] int 
  5910 ;; Return value:  Size  Location     Type
  5911 ;;		None               void
  5912 ;; Registers used:
  5913 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5914 ;; Tracked objects:
  5915 ;;		On entry : 60/20
  5916 ;;		On exit  : 0/0
  5917 ;;		Unchanged: FFE00/0
  5918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5919 ;;      Params:         3       0       0       0       0
  5920 ;;      Locals:         2       0       0       0       0
  5921 ;;      Temps:          0       0       0       0       0
  5922 ;;      Totals:         5       0       0       0       0
  5923 ;;Total ram usage:        5 bytes
  5924 ;; Hardware stack levels used:    1
  5925 ;; This function calls:
  5926 ;;		Nothing
  5927 ;; This function is called by:
  5928 ;;		_ISR
  5929 ;; This function uses a non-reentrant model
  5930 ;;
  5931  051E                     _vPutSampleDataIntoTable:	
  5932                           
  5933                           ;common.c: 101: static unsigned char ucChannelFirstLength = 0;
  5934                           ;common.c: 103: static unsigned char ucChannelFourthLength = 0;
  5935                           ;common.c: 105: static unsigned char ucChannelFourteenthLength = 0;
  5936                           ;common.c: 107: if(channel == 1)
  5937                           
  5938                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1]
  5939  051E  0B76               	decfsz	vPutSampleDataIntoTable@channel,w
  5940  051F  2D30               	goto	i1l4434
  5941                           
  5942                           ;common.c: 108: {
  5943                           ;common.c: 109: if(ucChannelFirstLength < 12)
  5944  0520  300C               	movlw	12
  5945  0521  027D               	subwf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  5946  0522  1803               	skipnc
  5947  0523  2D2A               	goto	i1l4430
  5948                           
  5949                           ;common.c: 110: {
  5950                           ;common.c: 111: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  5951  0524  1003               	clrc
  5952  0525  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  5953  0526  3EB8               	addlw	_uiSampleChannelFirst& (0+255)
  5954  0527  2585               	fcall	PL2	;call to abstracted procedure
  5955                           
  5956                           ;common.c: 113: ucChannelFirstLength++;
  5957  0528  0AFD               	incf	vPutSampleDataIntoTable@ucChannelFirstLength,f
  5958                           
  5959                           ;common.c: 114: }
  5960  0529  0008               	return
  5961  052A                     i1l4430:	
  5962                           
  5963                           ;common.c: 115: else
  5964                           ;common.c: 116: {
  5965                           ;common.c: 117: ucChannelFirstLength = 0;
  5966  052A  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  5967                           
  5968                           ;common.c: 119: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  5969  052B  1003               	clrc
  5970  052C  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  5971  052D  3EB8               	addlw	_uiSampleChannelFirst& (0+255)
  5972  052E  2585               	fcall	PL2	;call to abstracted procedure
  5973  052F  0008               	return
  5974  0530                     i1l4434:	
  5975                           
  5976                           ;common.c: 122: else if(channel == 5)
  5977  0530  0876               	movf	vPutSampleDataIntoTable@channel,w
  5978  0531  3A05               	xorlw	5
  5979  0532  1D03               	skipz
  5980  0533  2D45               	goto	i1l4446
  5981                           
  5982                           ;common.c: 123: {
  5983                           ;common.c: 124: if(ucChannelFourthLength < 12)
  5984  0534  300C               	movlw	12
  5985  0535  1283               	bcf	3,5	;RP0=0, select bank0
  5986  0536  026D               	subwf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  5987  0537  1803               	skipnc
  5988  0538  2D3F               	goto	i1l4442
  5989                           
  5990                           ;common.c: 125: {
  5991                           ;common.c: 126: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  5992  0539  1003               	clrc
  5993  053A  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  5994  053B  3ED0               	addlw	_uiSampleChannelFourth& (0+255)
  5995  053C  2585               	fcall	PL2	;call to abstracted procedure
  5996                           
  5997                           ;common.c: 128: ucChannelFourthLength++;
  5998  053D  0AED               	incf	vPutSampleDataIntoTable@ucChannelFourthLength,f
  5999                           
  6000                           ;common.c: 129: }
  6001  053E  0008               	return
  6002  053F                     i1l4442:	
  6003                           
  6004                           ;common.c: 130: else
  6005                           ;common.c: 131: {
  6006                           ;common.c: 132: ucChannelFourthLength = 0;
  6007  053F  01ED               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  6008                           
  6009                           ;common.c: 134: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  6010  0540  1003               	clrc
  6011  0541  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  6012  0542  3ED0               	addlw	_uiSampleChannelFourth& (0+255)
  6013  0543  2585               	fcall	PL2	;call to abstracted procedure
  6014  0544  0008               	return
  6015  0545                     i1l4446:	
  6016                           
  6017                           ;common.c: 137: else if(channel == 14)
  6018  0545  0876               	movf	vPutSampleDataIntoTable@channel,w
  6019  0546  3A0E               	xorlw	14
  6020  0547  1D03               	skipz
  6021  0548  2D60               	goto	i1l4458
  6022                           
  6023                           ;common.c: 138: {
  6024                           ;common.c: 139: if(ucChannelFourteenthLength < 12)
  6025  0549  300C               	movlw	12
  6026  054A  1283               	bcf	3,5	;RP0=0, select bank0
  6027  054B  026C               	subwf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  6028  054C  1803               	skipnc
  6029  054D  2D5A               	goto	i1l4454
  6030                           
  6031                           ;common.c: 140: {
  6032                           ;common.c: 141: uiSampleChannelFourteenth[ucChannelFourteenthLength] = uiSampleData;
  6033  054E  1003               	clrc
  6034  054F  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  6035  0550  3E90               	addlw	_uiSampleChannelFourteenth& (0+255)
  6036  0551  0084               	movwf	4
  6037  0552  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  6038  0553  1783               	bsf	3,7	;select IRP bank3
  6039  0554  0080               	movwf	0
  6040  0555  0A84               	incf	4,f
  6041  0556  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  6042  0557  0080               	movwf	0
  6043                           
  6044                           ;common.c: 143: ucChannelFourteenthLength++;
  6045  0558  0AEC               	incf	vPutSampleDataIntoTable@ucChannelFourteenthLength,f
  6046                           
  6047                           ;common.c: 144: }
  6048  0559  0008               	return
  6049  055A                     i1l4454:	
  6050                           
  6051                           ;common.c: 145: else
  6052                           ;common.c: 146: {
  6053                           ;common.c: 147: ucChannelFourteenthLength = 0;
  6054  055A  01EC               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  6055                           
  6056                           ;common.c: 149: uiSampleChannelFourth[ucChannelFourteenthLength] = uiSampleData;
  6057  055B  1003               	clrc
  6058  055C  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  6059  055D  3ED0               	addlw	_uiSampleChannelFourth& (0+255)
  6060  055E  2585               	fcall	PL2	;call to abstracted procedure
  6061  055F  0008               	return
  6062  0560                     i1l4458:	
  6063                           
  6064                           ;common.c: 152: else
  6065                           ;common.c: 153: {
  6066                           ;common.c: 154: ucChannelFirstLength = 0;
  6067  0560  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  6068                           
  6069                           ;common.c: 156: ucChannelFourthLength = 0;
  6070  0561  1283               	bcf	3,5	;RP0=0, select bank0
  6071  0562  01ED               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  6072                           
  6073                           ;common.c: 158: ucChannelFourteenthLength = 0;
  6074  0563  01EC               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  6075                           
  6076                           ;common.c: 160: for(int i = 0;i < 12; i++)
  6077  0564  01F7               	clrf	vPutSampleDataIntoTable@i
  6078  0565  01F8               	clrf	vPutSampleDataIntoTable@i+1
  6079  0566                     i1l4464:	
  6080                           
  6081                           ;common.c: 161: {
  6082                           ;common.c: 162: uiSampleChannelFirst[i] = 0;
  6083  0566  1003               	clrc
  6084  0567  0D77               	rlf	vPutSampleDataIntoTable@i,w
  6085  0568  3EB8               	addlw	_uiSampleChannelFirst& (0+255)
  6086  0569  0084               	movwf	4
  6087  056A  1383               	bcf	3,7	;select IRP bank1
  6088  056B  0180               	clrf	0
  6089                           
  6090                           ;common.c: 164: uiSampleChannelFourth[i] = 0;
  6091  056C  258D  118A         	fcall	PL4	;call to abstracted procedure
  6092                           
  6093                           ;common.c: 166: uiSampleChannelFourth[i] = 0;
  6094  056E  258D  118A         	fcall	PL4	;call to abstracted procedure
  6095  0570  0A84               	incf	4,f
  6096  0571  0180               	clrf	0
  6097  0572  0AF7               	incf	vPutSampleDataIntoTable@i,f
  6098  0573  1903               	skipnz
  6099  0574  0AF8               	incf	vPutSampleDataIntoTable@i+1,f
  6100  0575  0878               	movf	vPutSampleDataIntoTable@i+1,w
  6101  0576  3A80               	xorlw	128
  6102  0577  00FF               	movwf	127
  6103  0578  3080               	movlw	128
  6104  0579  027F               	subwf	127,w
  6105  057A  1D03               	skipz
  6106  057B  2D7E               	goto	u161_25
  6107  057C  300C               	movlw	12
  6108  057D  0277               	subwf	vPutSampleDataIntoTable@i,w
  6109  057E                     u161_25:	
  6110  057E  1803               	btfsc	3,0
  6111  057F  0008               	return
  6112  0580  2D66               	goto	i1l4464
  6113  0581                     __end_of_vPutSampleDataIntoTable:	
  6114  0581                     __ptext868:	
  6115 ;; =============== function _ISR ends ============
  6116                           
  6117                           
  6118 ;; *************** function i1_setAD_ConvertFlag *****************
  6119 ;; Defined at:
  6120 ;;		line 208 in file "D:\develop\190625\AK7030-OTP\common.c"
  6121 ;; Parameters:    Size  Location     Type
  6122 ;;  setAD_Conver    1    wreg     unsigned char 
  6123 ;; Auto vars:     Size  Location     Type
  6124 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  6125 ;; Return value:  Size  Location     Type
  6126 ;;		None               void
  6127 ;; Registers used:
  6128 ;;		wreg
  6129 ;; Tracked objects:
  6130 ;;		On entry : 60/0
  6131 ;;		On exit  : 60/20
  6132 ;;		Unchanged: FFF9F/0
  6133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6134 ;;      Params:         0       0       0       0       0
  6135 ;;      Locals:         1       0       0       0       0
  6136 ;;      Temps:          0       0       0       0       0
  6137 ;;      Totals:         1       0       0       0       0
  6138 ;;Total ram usage:        1 bytes
  6139 ;; Hardware stack levels used:    1
  6140 ;; This function calls:
  6141 ;;		Nothing
  6142 ;; This function is called by:
  6143 ;;		_ISR
  6144 ;; This function uses a non-reentrant model
  6145 ;;
  6146  0581                     i1_setAD_ConvertFlag:	
  6147                           
  6148                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  6149                           ;i1setAD_ConvertFlag@flag stored from wreg
  6150  0581  00F0               	movwf	i1setAD_ConvertFlag@flag
  6151                           
  6152                           ;common.c: 209: adc_convert_flag = flag;
  6153  0582  1683               	bsf	3,5	;RP0=1, select bank1
  6154  0583  00AB               	movwf	_adc_convert_flag^(0+128)
  6155  0584  0008               	return
  6156  0585                     __end_ofi1_setAD_ConvertFlag:	
  6157  0585                     PL2:	
  6158  0585  0084               	movwf	4
  6159  0586  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  6160  0587  1383               	bcf	3,7	;select IRP bank1
  6161  0588  0080               	movwf	0
  6162  0589  0A84               	incf	4,f
  6163  058A  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  6164  058B  0080               	movwf	0
  6165  058C  0008               	return
  6166  058D                     PL4:	
  6167  058D  0A84               	incf	4,f
  6168  058E  0180               	clrf	0
  6169  058F  1003               	clrc
  6170  0590  0D77               	rlf	vPutSampleDataIntoTable@i,w
  6171  0591  3ED0               	addlw	_uiSampleChannelFourth& (0+255)
  6172  0592  0084               	movwf	4
  6173  0593  0180               	clrf	0
  6174  0594  0008               	return
  6175                           
  6176                           	psect	intentry
  6177  0004                     __pintentry:	
  6178                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6179                           
  6180  0004                     interrupt_function:	
  6181  007E                     saved_w	set	btemp
  6182  0004  00FE               	movwf	btemp
  6183  0005  0E03               	swapf	3,w
  6184  0006  00F9               	movwf	??_ISR
  6185  0007  0804               	movf	4,w
  6186  0008  00FA               	movwf	??_ISR+1
  6187  0009  080A               	movf	10,w
  6188  000A  00FB               	movwf	??_ISR+2
  6189  000B  1283               	bcf	3,5	;RP0=0, select bank0
  6190  000C  1303               	bcf	3,6	;RP1=0, select bank0
  6191  000D  087F               	movf	btemp+1,w
  6192  000E  00FC               	movwf	??_ISR+3
  6193  000F  118A  2CB5         	ljmp	_ISR
  6194                           
  6195                           	psect	text871
  6196  0000                     __ptext871:	
  6197 ;; =============== function _vPutSampleDataIntoTable ends ============
  6198                           
  6199  007E                     btemp	set	126	;btemp
  6200  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Tue Aug 13 12:23:31 2019

                                  ??_clock_config 0020                                                 pc 0002  
                                              _GO 00F9                                                fsr 0004  
                        ?_timer1_interrupt_config 0070                                               l703 07FA  
                                             l713 07EA                                               l723 07C9  
                                             l708 07F2                                               l752 0062  
                                             l833 0168                                               l682 0000  
                                             l818 0166                                               l685 0000  
                                             l693 0FF6                                               l861 01A3  
                                             l679 0000                                               l688 07D2  
                                             l698 0FFE                                               l794 00DE  
                                             l981 033B                                               _PA0 0028  
                                             _PA1 0029                                               _GIE 005F  
                                             _PB0 0030                                               _PA2 002A  
                                             _PB1 0031                                               _PA3 002B  
                                             _PA6 002E                                               _PB6 0036  
                                             _PB7 0037                                               _ISR 04B5  
                                             fsr0 0004                                               indf 0000  
                          ??_startThreeHoursTimer 0022                                              S5550 06E2  
                                            S5544 0761                                              S5546 076F  
                                            S5548 077D                                              ?_ISR 0070  
                              __size_of_AD_Sample 001E                            ?_getAdOriginalCh1Value 0046  
                                            l1005 0393                                              l1055 048B  
                                            l2502 0000                                              l2505 0000  
                                            l2522 0000                                              l5002 02AA  
                                            l1820 0000                                              l4220 0000  
                                            l2516 0000                                              l2508 0000  
                                            l4300 0000                                              l5100 0358  
                                            l5012 0000                                              l4214 0000  
                                            l4222 0000                                              l4230 0000  
                                            l5110 0367                                              l5102 0000  
                                            l5030 02EA                                              l5022 0000  
                                            l5014 02D6                                              l5006 02B8  
                                            l1823 0000                                              l4216 0000  
                                            l4224 0000                                              l4232 0000  
                                            l4240 0000                                              l4312 0000  
                                            l4400 05E4                                              l5104 035C  
                                            l5032 02EC                                              l5024 0000  
                                            l5016 0000                                              l5008 02C9  
                                            l1817 0000                                              l4218 06DC  
                                            l4226 0000                                              l4234 0000  
                                            l4242 0000                                              l4250 0000  
                                            l1770 0000                                              l4306 0000  
                                            l4314 0000                                              l4330 0000  
                                            l1738 0000                                              l4402 0626  
                                            l5210 042D                                              l5202 0000  
                                            l5122 0000                                              l5114 0000  
                                            l5042 0000                                              l5026 02E4  
                                            l5018 02D8                                              l4228 0000  
                                            l4236 0000                                              l4244 0000  
                                            l1764 07E1                                              l4252 0000  
                                            l4260 0000                                              l4308 0000  
                                            l4324 0000                                              l4332 0000  
                                            l4412 0000                                              l4404 0000  
                                            l5212 0000                                              l5204 0000  
                                            l5140 03B9                                              l5124 037D  
                                            l5116 0372                                              l5108 0000  
                                            l5060 0314                                              l5052 0309  
                                            l5044 0301                                              l1773 0000  
                                            l4238 0000                                              l4246 0000  
                                            l4254 0000                                              l4262 0000  
                                            l4270 0000                                              l1854 0000  
                                            l4414 0000                                              l1782 0000  
                                            l5230 046A                                              l5222 0460  
                                            l5214 0000                                              l5150 03C7  
                                            l5126 0000                                              l5118 0000  
                                            l5070 0000                                              l5062 0000  
                                            l5046 0000                                              l5038 02F4  
                                            l5134 0386                                              l1767 0000  
                                            l4248 0000                                              l4256 0000  
                                            l4264 0000                                              l4272 0000  
                                            l4280 0000                                              l4336 0000  
                                            l4360 0000                                              l1776 0000  
                                            l5240 0000                                              l5224 0462  
                                            l5216 0000                                              l5208 0421  
                                            l5144 03BF                                              l5136 0000  
                                            l5128 0384                                              l5072 0000  
                                            l5064 031D                                              l5056 030F  
                                            l5048 0303                                              l1785 0000  
                                            l4258 0000                                              l4266 0000  
                                            l4274 0000                                              l4282 0000  
                                            l4338 0000                                              l4354 0000  
                                            l4362 0000                                              l4418 0000  
                                            l5250 048C                                              l5242 0000  
                                            l5234 0477                                              l5218 0453  
                                            l5162 0000                                              l5146 0000  
                                            l5138 0000                                              l5082 0000  
                                            l5074 0000                                              l5058 0000  
                                            l4602 004E                                              l1779 0000  
                                            l4268 0000                                              l4276 0000  
                                            l4284 06BB                                              l4348 0000  
                                            l4356 0000                                              l4380 0000  
                                            l4372 0000                                              l4540 0000  
                                            l1788 0000                                              l5244 0000  
                                            l5236 0479                                              l5228 0000  
                                            l5180 0000                                              l5172 0000  
                                            l5164 03E4                                              l5156 0000  
                                            l5148 0000                                              l5084 0000  
                                            l5076 0333                                              l5068 0326  
                                            l4700 00F5                                              l4620 0071  
                                            l4612 0060                                              l4278 0000  
                                            l4286 0000                                              l4382 0000  
                                            l4470 0000                                              l4550 0000  
                                            l5246 0000                                              l5190 040C  
                                            l5174 0000                                              l5182 03FA  
                                            l5166 0000                                              l5158 03D6  
                                            l5094 034A                                              l5086 0343  
                                            l5078 0000                                              l4702 0000  
                                            l4630 0000                                              l4622 0000  
                                            l4614 0063                                              l4606 005A  
                                            l5254 0498                                              l4392 05E3  
                                            l4384 0000                                              l4480 0000  
                                            l4552 0679                                              l4544 0000  
                                            l4560 0000                                              l5192 0000  
                                            l5176 0000                                              l5168 03E7  
                                            l5088 0000                                              l4800 0197  
                                            l4720 013E                                              l4712 0111  
                                            l4704 0100                                              l4608 005B  
                                            l4298 0000                                              l4378 05BB  
                                            l4474 0000                                              l4490 069E  
                                            l4538 06CB                                              l4570 0000  
                                            l5194 040F                                              l5178 0000  
                                            l5098 0000                                              l4802 01A4  
                                            l4642 0000                                              l4634 0085  
                                            l4626 0000                                              l4618 0000  
                                            l4492 06A1                                              l4484 0000  
                                            l4476 0000                                              l4548 0673  
                                            l4556 0000                                              l4564 0000  
                                            l5188 0000                                              l4900 0216  
                                            l4812 01AD                                              l4804 01A6  
                                            l4740 016B                                              l4732 015B  
                                            l4724 0148                                              l4708 010B  
                                            l4660 00AE                                              l4652 0000  
                                            l4644 0095                                              l4636 0000  
                                            l4628 007B                                              l4580 0000  
                                            l4572 0000                                              l4398 0624  
                                            l4494 0000                                              l5198 0415  
                                            l4910 0227                                              l4814 01AF  
                                            l4750 0174                                              l4718 0137  
                                            l4662 00AF                                              l4654 009E  
                                            l4646 0000                                              l4638 0088  
                                            l4590 0000                                              l4582 0000  
                                            l4574 0000                                              l4488 069A  
                                            l4568 0000                                              l4920 022D  
                                            l4912 0000                                              l4824 01B5  
                                            l4808 01AB                                              l4760 017A  
                                            l4744 0170                                              l4736 0164  
                                            l4728 0152                                              l4680 00CF  
                                            l4672 00BF                                              l4648 0097  
                                            l4592 0000                                              l4584 0000  
                                            l4576 0000                                              l4930 024F  
                                            l4922 0239                                              l4834 01BE  
                                            l4770 0180                                              l4738 0169  
                                            l4674 00C3                                              l4666 0000  
                                            l4594 0040                                              l4586 0000  
                                            l4578 0000                                              l4924 0245  
                                            l4844 01C7                                              l4780 0186  
                                            l4748 0172                                              l4692 0000  
                                            l4676 0000                                              l4668 00B7  
                                            l4596 0000                                              l4588 0000  
                                            l4934 0251                                              l4926 0247  
                                            l4870 01F8                                              l4854 01DC  
                                            l4790 0190                                              l4694 00ED  
                                            l4686 0000                                              l4678 0000  
                                            l4598 0000                                              _ADIE 046A  
                                            l4936 0253                                              l4880 0204  
                                            l4864 01E2                                              l4856 0000  
                                            l4792 0000                                              l4688 00E1  
                                            _ADIF 006A                                              l4970 0290  
                                            l4946 025C                                              l4890 020D  
                                            l4874 0200                                              l4866 01EE  
                                            l4794 0195                                              l4698 0000  
                                            l4980 029C                                              l4972 0292  
                                            l4956 0269                                              l4868 01F6  
                                            l4982 029E                                              l4966 026F  
                                            l4958 0000                                              l4878 0202  
                                            l4992 02A4                                              l4968 0280  
                                            l4994 0000                                              _ADON 00F8  
                   startTwelveHourTimer@uiSetTime 0020                                              u1505 05DE  
                                            u1515 0605                                              u1525 05F1  
                                            _PEIE 005E                                              u1985 0127  
                                            u1995 0135                                              _main 0013  
                                            btemp 007E                           _clearTwentySecondsTimer 06DC  
                                            start 0011                           ?_getAdOriginalCh14Value 0046  
                               main@ucTimerDelay1 005D                                 main@ucTimerDelay2 005E  
                               main@ucTimerDelay3 005F                                 main@ucTimerDelay4 0060  
                                           ??_ISR 0079                        __end_of_isPermitSampleTime 0FE9  
                                   main@bInitFlag 004F                               _sampleChannelSelect 006E  
                          ??_getAdOriginaCh4Value 0048                                             ?_main 0070  
                                           _DACR0 0088                                             _CLKPR 0108  
                                           _T1CON 0010                                   __end_of_adc_get 051E  
                                           _PBOD6 0C46                                             _PBOD7 0C47  
                                           _TMR1H 000F                                             _TMR1L 000E  
                           setAD_ConvertFlag@flag 0020                           _vPutSampleDataIntoTable 051E  
                                 __end_of_initPin 0750                                             _timer 00AC  
                                           pclath 000A                                             status 0003  
                                           wtemp0 007E                    __end_of_getAdOriginalCh14Value 05B4  
                   __size_of_startTwelveHourTimer 0014                              __end_of_clrSampeTime 0004  
                           __end_of_clearAllTimer 06D0                                      __end_of_main 04B5  
                          __size_of_adc_test_init 0015                                 __end_of_AD_Sample 06A6  
                                          ??_main 0048                              _clearPinPortAndTimer 06BE  
                                          _ADCON0 001F                                            _ADCON1 009F  
                            __end_of_clock_config 07E4                                            _DACCON 0087  
                                          _ADRESH 001E                                            _ADRESL 009E  
                                          _CLKPCE 0847                                            i1l2525 0000  
                                          i1l1861 04CA                                            i1l4430 052A  
                                          i1l4422 0000                                            i1l1862 04D4  
                                          i1l4502 0000                                            i1l4440 0000  
                                          i1l4432 0000                                            i1l4424 0000  
                                          i1l4520 0000                                            i1l4504 0000  
                                          i1l4442 053F                                            i1l4434 0530  
                                          i1l4530 04FD                                            i1l4522 0000  
                                          i1l1779 0000                                            i1l4452 0000  
                                          i1l4444 0000                                            i1l4428 0000  
                                          i1l4532 0000                                            i1l4508 0000  
                                          i1l4516 04DE                                            i1l1869 0506  
                                          i1l4454 055A                                            i1l4446 0545  
                                          i1l4526 04F2                                            i1l4464 0566  
                                          i1l4456 0000                                            i1l4536 0000  
                                          i1l4528 0000                                            i1l4466 0000  
                                          i1l4458 0560                                            i1l4468 0000  
                                          i1l4498 0000                                            u161_25 057E  
                                __end_of_dac_init 0FE3                         ??_clearTwentySecondsTimer 0020  
                                          _TMR1IE 0460                                            _TMR1IF 0060  
                               _getAD_ConvertFlag 067F                                 _setAD_ConvertFlag 0683  
                                          _TRISA0 0428                                            _TRISA1 0429  
                                          _TRISB0 0430                                            _TRISA2 042A  
                                          _TRISB1 0431                                            _TRISA3 042B  
                                          _TRISB2 0432                                            _TRISB3 0433  
                                          _TRISB4 0434                                            _TRISA6 042E  
                                          _TRISB5 0435                                            _TRISA7 042F  
                                          _TRISB6 0436                                            _TRISB7 0437  
                                   main@ucTimer1s 00B1                                ?_getAD_ConvertFlag 0070  
                                          _Filter 05B4                                ?_setAD_ConvertFlag 0070  
                                __end_of_op1_init 07B8                                  __end_of_op2_init 0FF0  
                     ??_isFinishedThreeHoursTimer 0020                     __size_of_clearThreeHoursTimer 0006  
                                       ??_adc_get 0072                               ??_getAD_ConvertFlag 0020  
                             ??_setAD_ConvertFlag 0020                                            _setPA0 0FF8  
                                          _setPA1 07F4                                            _setPB0 07CB  
                                          _setPA2 07EC                                            _setPB1 0FF0  
                                          _setPA3 07E4                                            _setPA6 07C2  
                                          clrloop 07D5                                  Filter@filter_buf 0026  
                                Filter@filter_sum 0040                                         ??_initPin 0020  
                         main@ucTimerDelayP2sLess 0061                           main@ucTimerDelayP2sMore 0062  
                       ??_vPutSampleDataIntoTable 0077                             ?_clearPinPortAndTimer 0070  
                                          saved_w 007E                           ??_clearTwelveHoursTimer 0020  
                     ?_process_AD_Converter_Value 0070                                     _adc_test_init 06A6  
                __size_of_startTwentySecondsTimer 0011                         __end_of_getAD_ConvertFlag 0683  
                       __end_of_setAD_ConvertFlag 0688                                __size_of_adc_start 0003  
                                  __pcstackCOMMON 0070                                      __pidataBANK0 0000  
                 __end_of_clearTwentySecondsTimer 06E2                              _uiSampleChannelFirst 00B8  
                  vPutSampleDataIntoTable@channel 0076                               main@ucTimerRightP5s 0069  
                       _isFinishedThreeHoursTimer 0789                           ??_getAdOriginalCh1Value 0048  
                           __end_of_timer1_config 07C2                                    ?_adc_test_init 0020  
     vPutSampleDataIntoTable@ucChannelFirstLength 007D                  __size_of_timer1_interrupt_config 0003  
                           __size_of_clrSampeTime 0002                                        __pbssBANK0 0048  
                                      __pbssBANK1 00A0                                        __pbssBANK3 0190  
                    __size_ofi1_setAD_ConvertFlag 0004                                        adc_get@val 0072  
                 __end_of_vPutSampleDataIntoTable 0581                                           ?_Filter 0020  
                                      __pmaintext 0013                                        __pintentry 0004  
                             main@enumInteralStep 00AE                                           ?_setPA0 0070  
                                         ?_setPA1 0070                                           ?_setPA2 0070  
                                         ?_setPB0 0070                                           ?_setPA3 0070  
                                         ?_setPB1 0070                                           ?_setPA6 0070  
                                       ?_dac_init 0070                            ??_clearPinPortAndTimer 0020  
                           __size_of_clock_config 0008                                           _OP1CON0 001B  
                                         _OP1CON1 001C                                           _OP1CON2 001D  
                                         _OP2CON0 009B                                           _OP2CON1 009C  
                                         _OP2CON2 009D                                      _clrSampeTime 0002  
                               __end_of_adc_start 06BE                              _uiTwentySecondsTimer 00A4  
                                       ?_op1_init 0070                                         ?_op2_init 0070  
                              _isPermitSampleTime 0FE3                                           Filter@i 0045  
                                         Filter@j 0044                     __size_of_startThreeHoursTimer 0014  
                      __size_of_getAD_ConvertFlag 0004                        __size_of_setAD_ConvertFlag 0005  
                                  main@ucTimer20s 00B2                                    main@ucTimerP3s 00B5  
                                  main@ucTimerP5s 0068                               ?_isPermitSampleTime 0070  
                                  main@uiMaxValue 00A6                                    main@uiMinValue 00A8  
                                    setPA0@bValue 0020                                    main@uiOldValue 0048  
                                    setPA1@bValue 0020                                   __size_of_Filter 0097  
                                    setPA2@bValue 0020                                      setPB0@bValue 0020  
                                      _uiBigTimer 00A0                                      setPA3@bValue 0020  
                                    setPB1@bValue 0020                                      setPA6@bValue 0020  
                                    _clock_config 07DC                                           _adc_get 0513  
                                 __size_of_setPA0 0008                                   __size_of_setPA1 0008  
                                 __size_of_setPB0 0009                                   __size_of_setPA2 0008  
                                 __size_of_setPB1 0008                                   __size_of_setPA3 0008  
                                 __size_of_setPA6 0009              __end_of_isFinishedTwentySecondsTimer 07A1  
           __size_of_isFinishedTwentySecondsTimer 000C                      _isFinishedTwentySecondsTimer 0795  
                            ??_isPermitSampleTime 0020                      __end_of_startTwelveHourTimer 073D  
                                      ??_dac_init 0020                                         _AD_Sample 0688  
                                    __size_of_ISR 005E                                           _initPin 073D  
                            _bSmallTimerStartFlag 004B                     __size_of_getAdOriginaCh4Value 000A  
                                 ??_adc_test_init 0021                                        ??_op1_init 0020  
                                      ??_op2_init 0020                           _startTwentySecondsTimer 0750  
                            end_of_initialization 0712                                 Filter@filter_temp 003E  
                                main@ucLoaderStep 0056                                        ?_AD_Sample 0070  
                   ?_isFinishedTwentySecondsTimer 0070                              main@enumMainLoopStep 0050  
                              main@ucChannel4Type 0052                      ??_isFinishedTwelveHoursTimer 0020  
                                       Filter@cir 0042                                  _adc_convert_flag 00AB  
                          __size_of_clearAllTimer 0005                      __end_of_clearThreeHoursTimer 06DC  
                          main@ucTimerADC1ZeroP5s 005B                    __size_of_clearTwelveHoursTimer 0006  
                         _timer1_interrupt_config 07FC                     __end_of_clearTwelveHoursTimer 06D6  
                        main@ucTimerForDACR0_CNT1 0063                          main@ucTimerForDACR0_CNT2 0065  
              __size_of_isFinishedThreeHoursTimer 000C                                  main@ucTimerX1P5s 00B6  
                                main@ucTimerX2P5s 00B7                            main@ucTimerZeroPoint3s 006A  
                          main@ucTimerZeroPoint5s 006B                                  main@ucTimerDelay 005C  
                                  __end_of_Filter 064B                                   main@ucADC4_Step 0051  
                             _bTwentySecStartFlag 004C               __size_of_isFinishedTwelveHoursTimer 000C  
                        vPutSampleDataIntoTable@i 0077                               i1_setAD_ConvertFlag 0581  
                                  __end_of_setPA0 1000                                    __end_of_setPA1 07FC  
                                  __end_of_setPB0 07D4                                    __end_of_setPA2 07F4  
                                  __end_of_setPB1 0FF8                                    __end_of_setPA3 07EC  
                                  __end_of_setPA6 07CB                         ??_startTwentySecondsTimer 0020  
                             start_initialization 06FC                                       __end_of_ISR 0513  
                            main@ucTimerLessX1P5s 00B3                              main@ucTimerLessX2P5s 00B4  
                           _uiSampleChannelFourth 00D0                          ?_clearTwentySecondsTimer 0070  
                  __size_of_getAdOriginalCh1Value 000A                     __end_of_getAdOriginalCh1Value 05A9  
                        ??_getAdOriginalCh14Value 0048                              ?i1_setAD_ConvertFlag 0070  
                            _startTwelveHourTimer 0729                 __end_of_isFinishedThreeHoursTimer 0795  
                              main@enumBranchStep 00AD                                          ??_Filter 0022  
                                   _clearAllTimer 06CB                                       __pdataBANK0 006E  
                                        ??_setPA0 0020                                          ??_setPA1 0020  
                                        ??_setPA2 0020                                          ??_setPB0 0020  
                                        ??_setPA3 0020                                          ??_setPB1 0020  
                                        ??_setPA6 0020                          ?_vPutSampleDataIntoTable 0074  
                      main@ucDelayPrefix4TimerP5s 0054                                       ??_AD_Sample 0020  
                       ??_timer1_interrupt_config 0020                        main@ucDelayPrefix6TimerP2s 0055  
                                     __pbssCOMMON 007D                                 __size_of_dac_init 0005  
                                   __pcstackBANK0 0020                    ??_isFinishedTwentySecondsTimer 0020  
                                       _adc_start 06BB                                 __size_of_op1_init 000B  
                               __size_of_op2_init 0007                             ??i1_setAD_ConvertFlag 0070  
                           ?_startTwelveHourTimer 0020                   __end_of_startTwentySecondsTimer 0761  
                                  ?_clearAllTimer 0070                            __size_of_timer1_config 000A  
                            _clearThreeHoursTimer 06D6                      __end_of_startThreeHoursTimer 0729  
                                       __ptext830 06BE                                         __ptext831 0595  
                                       __ptext840 0789                                         __ptext832 059F  
                                       __ptext841 0715                                         __ptext833 05A9  
                                       __ptext850 07AD                                         __ptext842 0795  
                                       __ptext834 0661                                         __ptext851 0FDE  
                                       __ptext843 0750                                         __ptext835 06CB  
                                       __ptext860 0FF8                                         __ptext852 06A6  
                                       __ptext844 07A1                                         __ptext836 0688  
                                       __ptext861 0FF0                                         __ptext853 07FC  
                                       __ptext845 0729                                         __ptext837 0683  
                                       __ptext870 051E                                         __ptext862 07CB  
                                       __ptext854 07B8                                         __ptext846 0002  
                                       __ptext838 067F                                         __ptext871 0000  
                                       __ptext863 073D                                         __ptext855 07DC  
                                       __ptext847 0FE3                                         __ptext839 05B4  
                                       __ptext864 06DC                                         __ptext856 07C2  
                                       __ptext848 06BB                                         __ptext865 06D6  
                                       __ptext857 07E4                                         __ptext849 0FE9  
                                       __ptext866 06D0                                         __ptext858 07EC  
                                       __ptext867 04B5                                         __ptext859 07F4  
                                       __ptext868 0581                                         __ptext869 0513  
                                        ?_adc_get 0070                                         __pswtext1 0761  
                                       __pswtext2 076F                                         __pswtext3 077D  
                                       __pswtext4 06E2                __end_of_isFinishedTwelveHoursTimer 07AD  
                      _isFinishedTwelveHoursTimer 07A1                                   ISR@ucTimer1sCnt 00AA  
                                        ?_initPin 0070                     __size_of_clearPinPortAndTimer 000D  
                       _uiSampleChannelFourteenth 0190                                        ?_adc_start 0070  
                 __size_of_getAdOriginalCh14Value 000B                                 interrupt_function 0004  
                    __end_of_getAdOriginaCh4Value 059F                   __end_of_timer1_interrupt_config 07FF  
                      main@ucTimerLessADC1ZeroP5s 0067                             ?_clearThreeHoursTimer 0070  
                            adc_test_init@channel 0022               vPutSampleDataIntoTable@uiSampleData 0074  
    vPutSampleDataIntoTable@ucChannelFourthLength 006D                       __size_of_isPermitSampleTime 0006  
                                    _uiSmallTimer 00A2                             __end_of_adc_test_init 06BB  
                                   _timer1_config 07B8                      ??_process_AD_Converter_Value 0023  
                          ??_startTwelveHourTimer 0022                                   ??_clearAllTimer 0020  
                     main@ucFourthSuffix1TimerP3s 00B0                            _getAdOriginalCh14Value 05A9  
                                __size_of_adc_get 000B               __size_of_process_AD_Converter_Value 001E  
                                        _dac_init 0FDE  vPutSampleDataIntoTable@ucChannelFourteenthLength 006C  
                      main@ucTimerForDACR0_CNT1_f 0064                        main@ucTimerForDACR0_CNT2_f 0066  
                                __size_of_initPin 0013                                    Filter@tmpValue 0020  
                                  ?_timer1_config 0070                                          _op1_init 07AD  
                                        _op2_init 0FE9                                       ??_adc_start 0020  
                            _startThreeHoursTimer 0715                             _clearTwelveHoursTimer 06D0  
                                   __size_of_main 04A2                                          clear_ram 07D4  
                          ??_clearThreeHoursTimer 0020                  __size_of_clearTwentySecondsTimer 0006  
                                   ?_clrSampeTime 0070                              _getAdOriginaCh4Value 0595  
                                     _sampleTimes 004D                             ?_startThreeHoursTimer 0020  
                __size_of_vPutSampleDataIntoTable 0063                                          intlevel1 0000  
                           _getAdOriginalCh1Value 059F                        ?_isFinishedThreeHoursTimer 0070  
                               main@ucLoaderStep1 0057                                 main@ucLoaderStep2 0058  
                               main@ucLoaderStep3 0059                                 main@ucLoaderStep4 005A  
                                   ?_clock_config 0070                          ?_startTwentySecondsTimer 0070  
                   startThreeHoursTimer@uiSetTime 0020                           i1setAD_ConvertFlag@flag 0070  
                                  ??_clrSampeTime 0020                       ?_isFinishedTwelveHoursTimer 0070  
                              _bBigTimerStartFlag 004A                             ?_getAdOriginaCh4Value 0046  
                                 ??_timer1_config 0020                                 main@bCheckTweHour 004E  
                     __end_ofi1_setAD_ConvertFlag 0585                __end_of_process_AD_Converter_Value 067F  
                      _process_AD_Converter_Value 0661                            ?_clearTwelveHoursTimer 0070  
                         main@ucCheckTimerP2sLess 0053                           main@ucCheckTimerP2sMore 00AF  
                                adc_test_init@ref 0020                      __end_of_clearPinPortAndTimer 06CB  
