

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Fri Jun 21 13:40:13 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,delta=2
    16                           	psect	swtext1,local,class=CONST,delta=2
    17                           	psect	swtext2,local,class=CONST,delta=2
    18                           	psect	swtext3,local,class=CONST,delta=2
    19                           	psect	text778,local,class=CODE,delta=2
    20                           	psect	text779,local,class=CODE,delta=2
    21                           	psect	text781,local,class=CODE,delta=2
    22                           	psect	text790,local,class=CODE,delta=2
    23                           	psect	text791,local,class=CODE,delta=2
    24                           	psect	text792,local,class=CODE,delta=2
    25                           	psect	text793,local,class=CODE,delta=2
    26                           	psect	text794,local,class=CODE,delta=2
    27                           	psect	text795,local,class=CODE,delta=2
    28                           	psect	text796,local,class=CODE,delta=2
    29                           	psect	text797,local,class=CODE,delta=2
    30                           	psect	text799,local,class=CODE,delta=2
    31                           	psect	text800,local,class=CODE,delta=2
    32                           	psect	text801,local,class=CODE,delta=2
    33                           	psect	text803,local,class=CODE,delta=2
    34                           	psect	text804,local,class=CODE,delta=2
    35                           	psect	text805,local,class=CODE,delta=2
    36                           	psect	text806,local,class=CODE,delta=2
    37                           	psect	text810,local,class=CODE,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text814,local,class=CODE,delta=2
    40                           	psect	pa_nodes,global,class=CODE,delta=2
    41                           	dabs	1,0x7E,2
    42  000A                     	;#
    43                           
    44                           	psect	config
    45  2000  2FFF               	dw	12287	;#
    46  2001  3FDE               	dw	16350	;#
    47  2002  3FF8               	dw	16376	;#
    48                           
    49                           	psect	idataBANK0
    50  0000                     __pidataBANK0:	
    51  001F                     _ADCON0	set	31
    52  001E                     _ADRESH	set	30
    53  001B                     _OP1CON0	set	27
    54  001C                     _OP1CON1	set	28
    55  001D                     _OP1CON2	set	29
    56  0010                     _T1CON	set	16
    57  000F                     _TMR1H	set	15
    58  000E                     _TMR1L	set	14
    59  006A                     _ADIF	set	106
    60  00F8                     _ADON	set	248
    61  005F                     _GIE	set	95
    62  00F9                     _GO	set	249
    63  0028                     _PA0	set	40
    64  0029                     _PA1	set	41
    65  002A                     _PA2	set	42
    66  002B                     _PA3	set	43
    67  002E                     _PA6	set	46
    68  002F                     _PA7	set	47
    69  0030                     _PB0	set	48
    70  0031                     _PB1	set	49
    71  0036                     _PB6	set	54
    72  005E                     _PEIE	set	94
    73  0060                     _TMR1IF	set	96
    74  009F                     _ADCON1	set	159
    75  009E                     _ADRESL	set	158
    76  0087                     _DACCON	set	135
    77  0088                     _DACR0	set	136
    78  009B                     _OP2CON0	set	155
    79  009C                     _OP2CON1	set	156
    80  009D                     _OP2CON2	set	157
    81  046A                     _ADIE	set	1130
    82  0460                     _TMR1IE	set	1120
    83  0428                     _TRISA0	set	1064
    84  0429                     _TRISA1	set	1065
    85  042A                     _TRISA2	set	1066
    86  042B                     _TRISA3	set	1067
    87  042E                     _TRISA6	set	1070
    88  042F                     _TRISA7	set	1071
    89  0430                     _TRISB0	set	1072
    90  0431                     _TRISB1	set	1073
    91  0432                     _TRISB2	set	1074
    92  0433                     _TRISB3	set	1075
    93  0434                     _TRISB4	set	1076
    94  0435                     _TRISB5	set	1077
    95  0436                     _TRISB6	set	1078
    96  0437                     _TRISB7	set	1079
    97  0108                     _CLKPR	set	264
    98  0847                     _CLKPCE	set	2119
    99  0C3F                     _PAOD7	set	3135
   100  0C46                     _PBOD6	set	3142
   101                           
   102                           	psect	cinit
   103  05CF                     start_initialization:	
   104  05CF  3058               	movlw	low __pbssBANK0
   105                           
   106                           ; Clear objects allocated to COMMON
   107  05D0  01FD               	clrf	__pbssCOMMON& (0+127)
   108                           
   109                           ; Clear objects allocated to BANK0
   110  05D1  1383               	bcf	3,7	;select IRP bank0
   111  05D2  0084               	movwf	4
   112  05D3  306E               	movlw	low (__pbssBANK0+22)
   113  05D4  118A  2659  118A   	fcall	clear_ram
   114                           
   115                           ; Clear objects allocated to BANK1
   116  05D7  30A0               	movlw	low __pbssBANK1
   117  05D8  0084               	movwf	4
   118  05D9  30E9               	movlw	low (__pbssBANK1+73)
   119  05DA  118A  2659  118A   	fcall	clear_ram
   120  05DD  3090               	movlw	low __pbssBANK3
   121                           
   122                           ; Clear objects allocated to BANK3
   123  05DE  1783               	bsf	3,7	;select IRP bank2
   124  05DF  0084               	movwf	4
   125  05E0  30E0               	movlw	low (__pbssBANK3+80)
   126  05E1  118A  2659         	fcall	clear_ram
   127                           
   128                           ;initializer for _sampleChannelSelect
   129  05E3  300E               	movlw	14
   130  05E4  00EE               	movwf	__pdataBANK0& (0+127)
   131  05E5                     end_of_initialization:	
   132                           ;End of C runtime variable initialization code
   133                           
   134  05E5  0183               	clrf	3
   135  05E6  118A  2813         	ljmp	_main	;jump to C main() function
   136                           
   137                           	psect	bssCOMMON
   138  007D                     __pbssCOMMON:	
   139  007D                     vPutSampleDataIntoTable@ucChannelFirstLength:	
   140  007D                     	ds	1
   141                           
   142                           	psect	bssBANK0
   143  0058                     __pbssBANK0:	
   144  0058                     _sampleTimes:	
   145  0058                     	ds	1
   146  0059                     main@enumBranchStep:	
   147  0059                     	ds	1
   148  005A                     main@enumMainLoopStep:	
   149  005A                     	ds	1
   150  005B                     main@ucADC4_Step:	
   151  005B                     	ds	1
   152  005C                     main@ucChannel4Type:	
   153  005C                     	ds	1
   154  005D                     main@ucLoaderStep:	
   155  005D                     	ds	1
   156  005E                     main@ucLoaderStep1:	
   157  005E                     	ds	1
   158  005F                     main@ucLoaderStep2:	
   159  005F                     	ds	1
   160  0060                     main@ucLoaderStep3:	
   161  0060                     	ds	1
   162  0061                     main@ucLoaderStep4:	
   163  0061                     	ds	1
   164  0062                     main@ucTimer1s:	
   165  0062                     	ds	1
   166  0063                     main@ucTimerADC1ZeroP5s:	
   167  0063                     	ds	1
   168  0064                     main@ucTimerDelay:	
   169  0064                     	ds	1
   170  0065                     main@ucTimerDelay1:	
   171  0065                     	ds	1
   172  0066                     main@ucTimerDelay2:	
   173  0066                     	ds	1
   174  0067                     main@ucTimerDelay3:	
   175  0067                     	ds	1
   176  0068                     main@ucTimerDelay4:	
   177  0068                     	ds	1
   178  0069                     main@ucTimerRightP5s:	
   179  0069                     	ds	1
   180  006A                     main@ucTimerZeroPoint3s:	
   181  006A                     	ds	1
   182  006B                     main@ucTimerZeroPoint5s:	
   183  006B                     	ds	1
   184  006C                     vPutSampleDataIntoTable@ucChannelFourteenthLength:	
   185  006C                     	ds	1
   186  006D                     vPutSampleDataIntoTable@ucChannelFourthLength:	
   187  006D                     	ds	1
   188                           
   189                           	psect	dataBANK0
   190  006E                     __pdataBANK0:	
   191  006E                     _sampleChannelSelect:	
   192  006E                     	ds	1
   193                           
   194                           	psect	bssBANK1
   195  00A0                     __pbssBANK1:	
   196  00A0                     _buffer_Sample_AD_Value:	
   197  00A0                     	ds	12
   198  00AC                     _adc_original_value:	
   199  00AC                     	ds	2
   200  00AE                     _multiFilterMaxValue:	
   201  00AE                     	ds	2
   202  00B0                     _multiFilterMinValue:	
   203  00B0                     	ds	2
   204  00B2                     _uiBigTimer:	
   205  00B2                     	ds	2
   206  00B4                     _uiSmallTimer:	
   207  00B4                     	ds	2
   208  00B6                     _uiTwentySecondsTimer:	
   209  00B6                     	ds	2
   210  00B8                     ISR@ucTimer1sCnt:	
   211  00B8                     	ds	1
   212  00B9                     _adc_convert_flag:	
   213  00B9                     	ds	1
   214  00BA                     _timer:	
   215  00BA                     	ds	1
   216  00BB                     main@cTimer1s_809:	
   217  00BB                     	ds	1
   218  00BC                     main@enumInteralStep:	
   219  00BC                     	ds	1
   220  00BD                     main@ucTimer20s:	
   221  00BD                     	ds	1
   222  00BE                     main@ucTimerP3s:	
   223  00BE                     	ds	1
   224  00BF                     main@ucTimerX1P5s:	
   225  00BF                     	ds	1
   226  00C0                     main@ucTimerX2P5s:	
   227  00C0                     	ds	1
   228  00C1                     _uiSampleChannelFourth:	
   229  00C1                     	ds	40
   230                           
   231                           	psect	bssBANK3
   232  0190                     __pbssBANK3:	
   233  0190                     _uiSampleChannelFirst:	
   234  0190                     	ds	40
   235  01B8                     _uiSampleChannelFourteenth:	
   236  01B8                     	ds	40
   237                           
   238                           	psect	clrtext
   239  0659                     clear_ram:	
   240                           ;	Called with FSR containing the base address, and
   241                           ;	W with the last address+1
   242                           
   243  0659  0064               	clrwdt	;clear the watchdog before getting into this loop
   244  065A                     clrloop:	
   245  065A  0180               	clrf	0	;clear RAM location pointed to by FSR
   246  065B  0A84               	incf	4,f	;increment pointer
   247  065C  0604               	xorwf	4,w	;XOR with final address
   248  065D  1903               	btfsc	3,2	;have we reached the end yet?
   249  065E  3400               	retlw	0	;all done for this memory range, return
   250  065F  0604               	xorwf	4,w	;XOR again to restore value
   251  0660  2E5A               	goto	clrloop	;do the next byte
   252                           
   253                           	psect	cstackCOMMON
   254  0070                     __pcstackCOMMON:	
   255  0070                     ?_clearTwelveHoursTimer:	
   256  0070                     ?_clearThreeHoursTimer:	
   257                           ; 0 bytes @ 0x0
   258                           
   259  0070                     ?_clearTwentySecondsTimer:	
   260                           ; 0 bytes @ 0x0
   261                           
   262  0070                     ?_clock_config:	
   263                           ; 0 bytes @ 0x0
   264                           
   265  0070                     ?_timer1_config:	
   266                           ; 0 bytes @ 0x0
   267                           
   268  0070                     ?_timer1_interrupt_config:	
   269                           ; 0 bytes @ 0x0
   270                           
   271  0070                     ?_dac_init:	
   272                           ; 0 bytes @ 0x0
   273                           
   274  0070                     ?_op1_init:	
   275                           ; 0 bytes @ 0x0
   276                           
   277  0070                     ?_op2_init:	
   278                           ; 0 bytes @ 0x0
   279                           
   280  0070                     ?_adc_start:	
   281                           ; 0 bytes @ 0x0
   282                           
   283  0070                     ?_clrSampeTime:	
   284                           ; 0 bytes @ 0x0
   285                           
   286  0070                     ?_process_AD_Converter_Value:	
   287                           ; 0 bytes @ 0x0
   288                           
   289  0070                     ?_startTwentySecondsTimer:	
   290                           ; 0 bytes @ 0x0
   291                           
   292  0070                     ?_AD_Sample:	
   293                           ; 0 bytes @ 0x0
   294                           
   295  0070                     ?_setAdcSampleChannel:	
   296                           ; 0 bytes @ 0x0
   297                           
   298  0070                     ?_clearAllTimer:	
   299                           ; 0 bytes @ 0x0
   300                           
   301  0070                     ?_clearPinPortAndTimer:	
   302                           ; 0 bytes @ 0x0
   303                           
   304  0070                     ?_initPin:	
   305                           ; 0 bytes @ 0x0
   306                           
   307  0070                     ?_main:	
   308                           ; 0 bytes @ 0x0
   309                           
   310  0070                     ?_setAD_ConvertFlag:	
   311                           ; 0 bytes @ 0x0
   312                           
   313  0070                     ?_ISR:	
   314                           ; 0 bytes @ 0x0
   315                           
   316  0070                     ?i1_setAD_ConvertFlag:	
   317                           ; 0 bytes @ 0x0
   318                           
   319  0070                     ??i1_setAD_ConvertFlag:	
   320                           ; 0 bytes @ 0x0
   321                           
   322  0070                     ?_isPermitSampleTime:	
   323                           ; 0 bytes @ 0x0
   324                           
   325  0070                     ?_isFinishedTwelveHoursTimer:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0070                     ?_isFinishedTwentySecondsTimer:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     ?_isFinishedThreeHoursTimer:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ?_getAD_ConvertFlag:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ?_adc_get:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     i1setAD_ConvertFlag@flag:	
   341                           ; 2 bytes @ 0x0
   342                           
   343                           
   344                           ; 1 bytes @ 0x0
   345  0070                     	ds	2
   346  0072                     ??_adc_get:	
   347  0072                     adc_get@val:	
   348                           ; 0 bytes @ 0x2
   349                           
   350                           
   351                           ; 2 bytes @ 0x2
   352  0072                     	ds	2
   353  0074                     ?_vPutSampleDataIntoTable:	
   354  0074                     vPutSampleDataIntoTable@uiSampleData:	
   355                           ; 0 bytes @ 0x4
   356                           
   357                           
   358                           ; 2 bytes @ 0x4
   359  0074                     	ds	2
   360  0076                     vPutSampleDataIntoTable@channel:	
   361                           
   362                           ; 1 bytes @ 0x6
   363  0076                     	ds	1
   364  0077                     ??_vPutSampleDataIntoTable:	
   365  0077                     vPutSampleDataIntoTable@i:	
   366                           ; 0 bytes @ 0x7
   367                           
   368                           
   369                           ; 2 bytes @ 0x7
   370  0077                     	ds	2
   371  0079                     ??_ISR:	
   372                           
   373                           ; 0 bytes @ 0x9
   374  0079                     	ds	4
   375                           
   376                           	psect	cstackBANK0
   377  0020                     __pcstackBANK0:	
   378  0020                     ??_clearTwelveHoursTimer:	
   379  0020                     ??_clearThreeHoursTimer:	
   380                           ; 0 bytes @ 0x0
   381                           
   382  0020                     ??_clearTwentySecondsTimer:	
   383                           ; 0 bytes @ 0x0
   384                           
   385  0020                     ??_clock_config:	
   386                           ; 0 bytes @ 0x0
   387                           
   388  0020                     ??_timer1_config:	
   389                           ; 0 bytes @ 0x0
   390                           
   391  0020                     ??_timer1_interrupt_config:	
   392                           ; 0 bytes @ 0x0
   393                           
   394  0020                     ?_adc_test_init:	
   395                           ; 0 bytes @ 0x0
   396                           
   397  0020                     ??_dac_init:	
   398                           ; 0 bytes @ 0x0
   399                           
   400  0020                     ??_op1_init:	
   401                           ; 0 bytes @ 0x0
   402                           
   403  0020                     ??_op2_init:	
   404                           ; 0 bytes @ 0x0
   405                           
   406  0020                     ??_adc_start:	
   407                           ; 0 bytes @ 0x0
   408                           
   409  0020                     ??_isPermitSampleTime:	
   410                           ; 0 bytes @ 0x0
   411                           
   412  0020                     ??_clrSampeTime:	
   413                           ; 0 bytes @ 0x0
   414                           
   415  0020                     ?_startTwelveHourTimer:	
   416                           ; 0 bytes @ 0x0
   417                           
   418  0020                     ??_isFinishedTwelveHoursTimer:	
   419                           ; 0 bytes @ 0x0
   420                           
   421  0020                     ??_startTwentySecondsTimer:	
   422                           ; 0 bytes @ 0x0
   423                           
   424  0020                     ??_isFinishedTwentySecondsTimer:	
   425                           ; 0 bytes @ 0x0
   426                           
   427  0020                     ?_startThreeHoursTimer:	
   428                           ; 0 bytes @ 0x0
   429                           
   430  0020                     ??_isFinishedThreeHoursTimer:	
   431                           ; 0 bytes @ 0x0
   432                           
   433  0020                     ??_setAdcSampleChannel:	
   434                           ; 0 bytes @ 0x0
   435                           
   436  0020                     ??_clearAllTimer:	
   437                           ; 0 bytes @ 0x0
   438                           
   439  0020                     ??_clearPinPortAndTimer:	
   440                           ; 0 bytes @ 0x0
   441                           
   442  0020                     ??_initPin:	
   443                           ; 0 bytes @ 0x0
   444                           
   445  0020                     ??_getAD_ConvertFlag:	
   446                           ; 0 bytes @ 0x0
   447                           
   448  0020                     ??_setAD_ConvertFlag:	
   449                           ; 0 bytes @ 0x0
   450                           
   451  0020                     ?_Filter:	
   452                           ; 0 bytes @ 0x0
   453                           
   454  0020                     ?_getAdOriginalValue:	
   455                           ; 2 bytes @ 0x0
   456                           
   457  0020                     setAD_ConvertFlag@flag:	
   458                           ; 2 bytes @ 0x0
   459                           
   460  0020                     adc_test_init@ref:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0020                     Filter@tmpValue:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  0020                     startTwelveHourTimer@uiSetTime:	
   467                           ; 2 bytes @ 0x0
   468                           
   469  0020                     startThreeHoursTimer@uiSetTime:	
   470                           ; 2 bytes @ 0x0
   471                           
   472                           
   473                           ; 2 bytes @ 0x0
   474  0020                     	ds	1
   475  0021                     ??_adc_test_init:	
   476  0021                     setAdcSampleChannel@ucChannel:	
   477                           ; 0 bytes @ 0x1
   478                           
   479                           
   480                           ; 1 bytes @ 0x1
   481  0021                     	ds	1
   482  0022                     ??_startTwelveHourTimer:	
   483  0022                     ??_startThreeHoursTimer:	
   484                           ; 0 bytes @ 0x2
   485                           
   486  0022                     ??_AD_Sample:	
   487                           ; 0 bytes @ 0x2
   488                           
   489  0022                     ??_Filter:	
   490                           ; 0 bytes @ 0x2
   491                           
   492  0022                     ??_getAdOriginalValue:	
   493                           ; 0 bytes @ 0x2
   494                           
   495  0022                     adc_test_init@channel:	
   496                           ; 0 bytes @ 0x2
   497                           
   498                           
   499                           ; 1 bytes @ 0x2
   500  0022                     	ds	2
   501  0024                     AD_Sample@index:	
   502                           
   503                           ; 1 bytes @ 0x4
   504  0024                     	ds	1
   505  0025                     ??_process_AD_Converter_Value:	
   506                           
   507                           ; 0 bytes @ 0x5
   508  0025                     	ds	1
   509  0026                     Filter@filter_buf:	
   510                           
   511                           ; 40 bytes @ 0x6
   512  0026                     	ds	40
   513  004E                     Filter@filter_temp:	
   514                           
   515                           ; 2 bytes @ 0x2E
   516  004E                     	ds	2
   517  0050                     Filter@filter_sum:	
   518                           
   519                           ; 2 bytes @ 0x30
   520  0050                     	ds	2
   521  0052                     Filter@cir:	
   522                           
   523                           ; 2 bytes @ 0x32
   524  0052                     	ds	2
   525  0054                     Filter@j:	
   526                           
   527                           ; 1 bytes @ 0x34
   528  0054                     	ds	1
   529  0055                     Filter@i:	
   530                           
   531                           ; 1 bytes @ 0x35
   532  0055                     	ds	1
   533  0056                     ?_getAdOriginalCh14Value:	
   534  0056                     ?_getAdOriginalCh1Value:	
   535                           ; 2 bytes @ 0x36
   536                           
   537  0056                     ?_getAdOriginaCh4Value:	
   538                           ; 2 bytes @ 0x36
   539                           
   540                           
   541                           ; 2 bytes @ 0x36
   542  0056                     	ds	2
   543  0058                     ??_getAdOriginalCh14Value:	
   544  0058                     ??_getAdOriginalCh1Value:	
   545                           ; 0 bytes @ 0x38
   546                           
   547  0058                     ??_getAdOriginaCh4Value:	
   548                           ; 0 bytes @ 0x38
   549                           
   550  0058                     ??_main:	
   551                           ; 0 bytes @ 0x38
   552                           
   553                           
   554                           	psect	maintext
   555  0013                     __pmaintext:	
   556                           ; 0 bytes @ 0x38
   557 ;;Data sizes: Strings 0, constant 0, data 1, bss 176, persistent 0 stack 0
   558 ;;Auto spaces:   Size  Autos    Used
   559 ;; COMMON          14     13      14
   560 ;; BANK0           80     56      79
   561 ;; BANK1           80      0      73
   562 ;; BANK3           96      0      80
   563 ;; BANK2           96      0       0
   564 ;;
   565 ;; Pointer list with targets:
   566 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   567 ;;
   568 ;; ?_getAdOriginalCh14Value	unsigned int  size(1) Largest target is 0
   569 ;;
   570 ;; ?_getAdOriginaCh4Value	unsigned int  size(1) Largest target is 0
   571 ;;
   572 ;; ?_getAdOriginalCh1Value	unsigned int  size(1) Largest target is 0
   573 ;;
   574 ;; ?_getAdOriginalValue	unsigned int  size(1) Largest target is 0
   575 ;;
   576 ;; ?_Filter	unsigned int  size(1) Largest target is 0
   577 ;;
   578 ;; Filter@tmpValue	PTR int  size(2) Largest target is 40
   579 ;;		 -> uiSampleChannelFourteenth(BANK3[40]), uiSampleChannelFourth(BANK1[40]), uiSampleChannelFirst(BANK3[40]), 
   580 ;;
   581 ;;
   582 ;; Critical Paths under _main in COMMON
   583 ;;
   584 ;;   None.
   585 ;;
   586 ;; Critical Paths under _ISR in COMMON
   587 ;;
   588 ;;   _ISR->_vPutSampleDataIntoTable
   589 ;;   _vPutSampleDataIntoTable->_adc_get
   590 ;;
   591 ;; Critical Paths under _main in BANK0
   592 ;;
   593 ;;   _main->_getAdOriginalCh14Value
   594 ;;   _main->_getAdOriginalCh1Value
   595 ;;   _main->_getAdOriginaCh4Value
   596 ;;   _process_AD_Converter_Value->_AD_Sample
   597 ;;   _AD_Sample->_getAdOriginalValue
   598 ;;   _getAdOriginaCh4Value->_Filter
   599 ;;   _getAdOriginalCh1Value->_Filter
   600 ;;   _getAdOriginalCh14Value->_Filter
   601 ;;
   602 ;; Critical Paths under _ISR in BANK0
   603 ;;
   604 ;;   None.
   605 ;;
   606 ;; Critical Paths under _main in BANK1
   607 ;;
   608 ;;   None.
   609 ;;
   610 ;; Critical Paths under _ISR in BANK1
   611 ;;
   612 ;;   None.
   613 ;;
   614 ;; Critical Paths under _main in BANK3
   615 ;;
   616 ;;   None.
   617 ;;
   618 ;; Critical Paths under _ISR in BANK3
   619 ;;
   620 ;;   None.
   621 ;;
   622 ;; Critical Paths under _main in BANK2
   623 ;;
   624 ;;   None.
   625 ;;
   626 ;; Critical Paths under _ISR in BANK2
   627 ;;
   628 ;;   None.
   629 ;;
   630 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   631 ;;
   632 ;;
   633 ;;Call Graph Tables:
   634 ;;
   635 ;; ---------------------------------------------------------------------------------
   636 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   637 ;; ---------------------------------------------------------------------------------
   638 ;; (0) _main                                                 0     0      0    2104
   639 ;;                            _initPin
   640 ;;                       _clock_config
   641 ;;                      _timer1_config
   642 ;;            _timer1_interrupt_config
   643 ;;                      _adc_test_init
   644 ;;                           _dac_init
   645 ;;                           _op1_init
   646 ;;                           _op2_init
   647 ;;                          _adc_start
   648 ;;                 _isPermitSampleTime
   649 ;;                       _clrSampeTime
   650 ;;         _process_AD_Converter_Value
   651 ;;             _getAdOriginalCh14Value
   652 ;;               _clearPinPortAndTimer
   653 ;;              _getAdOriginalCh1Value
   654 ;;               _startTwelveHourTimer
   655 ;;         _isFinishedTwelveHoursTimer
   656 ;;            _startTwentySecondsTimer
   657 ;;               _getAdOriginaCh4Value
   658 ;;       _isFinishedTwentySecondsTimer
   659 ;;               _startThreeHoursTimer
   660 ;;          _isFinishedThreeHoursTimer
   661 ;;               _clearThreeHoursTimer
   662 ;;                      _clearAllTimer
   663 ;; ---------------------------------------------------------------------------------
   664 ;; (1) _process_AD_Converter_Value                           0     0      0     156
   665 ;;                  _getAD_ConvertFlag
   666 ;;                  _setAD_ConvertFlag
   667 ;;                          _AD_Sample
   668 ;;                      _adc_test_init
   669 ;;                _setAdcSampleChannel
   670 ;;                          _adc_start
   671 ;; ---------------------------------------------------------------------------------
   672 ;; (1) _clearPinPortAndTimer                                 0     0      0       0
   673 ;;                      _clearAllTimer
   674 ;; ---------------------------------------------------------------------------------
   675 ;; (2) _AD_Sample                                            3     3      0      68
   676 ;;                                              2 BANK0      3     3      0
   677 ;;                 _getAdOriginalValue
   678 ;; ---------------------------------------------------------------------------------
   679 ;; (1) _getAdOriginaCh4Value                                 2     0      2     620
   680 ;;                                             54 BANK0      2     0      2
   681 ;;                             _Filter
   682 ;; ---------------------------------------------------------------------------------
   683 ;; (1) _getAdOriginalCh1Value                                2     0      2     620
   684 ;;                                             54 BANK0      2     0      2
   685 ;;                             _Filter
   686 ;; ---------------------------------------------------------------------------------
   687 ;; (1) _getAdOriginalCh14Value                               2     0      2     620
   688 ;;                                             54 BANK0      2     0      2
   689 ;;                             _Filter
   690 ;; ---------------------------------------------------------------------------------
   691 ;; (1) _clearAllTimer                                        0     0      0       0
   692 ;;              _clearTwelveHoursTimer
   693 ;;               _clearThreeHoursTimer
   694 ;;            _clearTwentySecondsTimer
   695 ;; ---------------------------------------------------------------------------------
   696 ;; (2) _setAdcSampleChannel                                  2     2      0      22
   697 ;;                                              0 BANK0      2     2      0
   698 ;; ---------------------------------------------------------------------------------
   699 ;; (3) _getAdOriginalValue                                   2     0      2       0
   700 ;;                                              0 BANK0      2     0      2
   701 ;; ---------------------------------------------------------------------------------
   702 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   703 ;;                                              0 BANK0      1     1      0
   704 ;; ---------------------------------------------------------------------------------
   705 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   706 ;; ---------------------------------------------------------------------------------
   707 ;; (2) _Filter                                              54    52      2     620
   708 ;;                                              0 BANK0     54    52      2
   709 ;; ---------------------------------------------------------------------------------
   710 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   711 ;; ---------------------------------------------------------------------------------
   712 ;; (1) _startThreeHoursTimer                                 2     0      2      22
   713 ;;                                              0 BANK0      2     0      2
   714 ;; ---------------------------------------------------------------------------------
   715 ;; (1) _isFinishedTwentySecondsTimer                         0     0      0       0
   716 ;; ---------------------------------------------------------------------------------
   717 ;; (1) _startTwentySecondsTimer                              0     0      0       0
   718 ;; ---------------------------------------------------------------------------------
   719 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   720 ;; ---------------------------------------------------------------------------------
   721 ;; (1) _startTwelveHourTimer                                 2     0      2      22
   722 ;;                                              0 BANK0      2     0      2
   723 ;; ---------------------------------------------------------------------------------
   724 ;; (1) _clrSampeTime                                         0     0      0       0
   725 ;; ---------------------------------------------------------------------------------
   726 ;; (1) _isPermitSampleTime                                   0     0      0       0
   727 ;; ---------------------------------------------------------------------------------
   728 ;; (2) _adc_start                                            0     0      0       0
   729 ;; ---------------------------------------------------------------------------------
   730 ;; (1) _op2_init                                             0     0      0       0
   731 ;; ---------------------------------------------------------------------------------
   732 ;; (1) _op1_init                                             0     0      0       0
   733 ;; ---------------------------------------------------------------------------------
   734 ;; (1) _dac_init                                             0     0      0       0
   735 ;; ---------------------------------------------------------------------------------
   736 ;; (2) _adc_test_init                                        3     2      1      44
   737 ;;                                              0 BANK0      3     2      1
   738 ;; ---------------------------------------------------------------------------------
   739 ;; (1) _timer1_interrupt_config                              0     0      0       0
   740 ;; ---------------------------------------------------------------------------------
   741 ;; (1) _timer1_config                                        0     0      0       0
   742 ;; ---------------------------------------------------------------------------------
   743 ;; (1) _clock_config                                         0     0      0       0
   744 ;; ---------------------------------------------------------------------------------
   745 ;; (1) _initPin                                              0     0      0       0
   746 ;; ---------------------------------------------------------------------------------
   747 ;; (2) _clearTwentySecondsTimer                              0     0      0       0
   748 ;; ---------------------------------------------------------------------------------
   749 ;; (2) _clearThreeHoursTimer                                 0     0      0       0
   750 ;; ---------------------------------------------------------------------------------
   751 ;; (2) _clearTwelveHoursTimer                                0     0      0       0
   752 ;; ---------------------------------------------------------------------------------
   753 ;; Estimated maximum stack depth 3
   754 ;; ---------------------------------------------------------------------------------
   755 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   756 ;; ---------------------------------------------------------------------------------
   757 ;; (4) _ISR                                                  4     4      0     407
   758 ;;                                              9 COMMON     4     4      0
   759 ;;                i1_setAD_ConvertFlag
   760 ;;                            _adc_get
   761 ;;            _vPutSampleDataIntoTable
   762 ;; ---------------------------------------------------------------------------------
   763 ;; (5) i1_setAD_ConvertFlag                                  1     1      0      73
   764 ;;                                              0 COMMON     1     1      0
   765 ;; ---------------------------------------------------------------------------------
   766 ;; (5) _adc_get                                              4     2      2      24
   767 ;;                                              0 COMMON     4     2      2
   768 ;; ---------------------------------------------------------------------------------
   769 ;; (5) _vPutSampleDataIntoTable                              5     2      3     310
   770 ;;                                              4 COMMON     5     2      3
   771 ;;                            _adc_get (ARG)
   772 ;; ---------------------------------------------------------------------------------
   773 ;; Estimated maximum stack depth 5
   774 ;; ---------------------------------------------------------------------------------
   775 ;; Call Graph Graphs:
   776 ;; _main (ROOT)
   777 ;;   _initPin
   778 ;;   _clock_config
   779 ;;   _timer1_config
   780 ;;   _timer1_interrupt_config
   781 ;;   _adc_test_init
   782 ;;   _dac_init
   783 ;;   _op1_init
   784 ;;   _op2_init
   785 ;;   _adc_start
   786 ;;   _isPermitSampleTime
   787 ;;   _clrSampeTime
   788 ;;   _process_AD_Converter_Value
   789 ;;     _getAD_ConvertFlag
   790 ;;     _setAD_ConvertFlag
   791 ;;     _AD_Sample
   792 ;;       _getAdOriginalValue
   793 ;;     _adc_test_init
   794 ;;     _setAdcSampleChannel
   795 ;;     _adc_start
   796 ;;   _getAdOriginalCh14Value
   797 ;;     _Filter
   798 ;;   _clearPinPortAndTimer
   799 ;;     _clearAllTimer
   800 ;;       _clearTwelveHoursTimer
   801 ;;       _clearThreeHoursTimer
   802 ;;       _clearTwentySecondsTimer
   803 ;;   _getAdOriginalCh1Value
   804 ;;     _Filter
   805 ;;   _startTwelveHourTimer
   806 ;;   _isFinishedTwelveHoursTimer
   807 ;;   _startTwentySecondsTimer
   808 ;;   _getAdOriginaCh4Value
   809 ;;     _Filter
   810 ;;   _isFinishedTwentySecondsTimer
   811 ;;   _startThreeHoursTimer
   812 ;;   _isFinishedThreeHoursTimer
   813 ;;   _clearThreeHoursTimer
   814 ;;   _clearAllTimer
   815 ;;     _clearTwelveHoursTimer
   816 ;;     _clearThreeHoursTimer
   817 ;;     _clearTwentySecondsTimer
   818 ;;
   819 ;; _ISR (ROOT)
   820 ;;   i1_setAD_ConvertFlag
   821 ;;   _adc_get
   822 ;;   _vPutSampleDataIntoTable
   823 ;;     _adc_get (ARG)
   824 ;;
   825 ;; Address spaces:
   826 ;;Name               Size   Autos  Total    Cost      Usage
   827 ;;BANK3               60      0      50      10       83.3%
   828 ;;BITBANK3            60      0       0       9        0.0%
   829 ;;SFR3                 0      0       0       4        0.0%
   830 ;;BITSFR3              0      0       0       4        0.0%
   831 ;;BANK2               60      0       0      12        0.0%
   832 ;;BITBANK2            60      0       0      11        0.0%
   833 ;;SFR2                 0      0       0       5        0.0%
   834 ;;BITSFR2              0      0       0       5        0.0%
   835 ;;SFR1                 0      0       0       2        0.0%
   836 ;;BITSFR1              0      0       0       2        0.0%
   837 ;;BANK1               50      0      49       8       91.3%
   838 ;;BITBANK1            50      0       0       7        0.0%
   839 ;;CODE                 0      0       0       0        0.0%
   840 ;;DATA                 0      0      FD       6        0.0%
   841 ;;ABS                  0      0      F6       3        0.0%
   842 ;;NULL                 0      0       0       0        0.0%
   843 ;;STACK                0      0       7       2        0.0%
   844 ;;BANK0               50     38      4F       5       98.8%
   845 ;;BITBANK0            50      0       0       4        0.0%
   846 ;;SFR0                 0      0       0       1        0.0%
   847 ;;BITSFR0              0      0       0       1        0.0%
   848 ;;COMMON               E      D       E       1      100.0%
   849 ;;BITCOMMON            E      0       0       0        0.0%
   850                           
   851                           
   852 ;; *************** function _main *****************
   853 ;; Defined at:
   854 ;;		line 129 in file "C:\190604\AK7030-OTP\main.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;		None
   857 ;; Auto vars:     Size  Location     Type
   858 ;;		None
   859 ;; Return value:  Size  Location     Type
   860 ;;		None               void
   861 ;; Registers used:
   862 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   863 ;; Tracked objects:
   864 ;;		On entry : 17F/0
   865 ;;		On exit  : 60/0
   866 ;;		Unchanged: FFE00/0
   867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   868 ;;      Params:         0       0       0       0       0
   869 ;;      Locals:         0       0       0       0       0
   870 ;;      Temps:          0       0       0       0       0
   871 ;;      Totals:         0       0       0       0       0
   872 ;;Total ram usage:        0 bytes
   873 ;; Hardware stack levels required when called:    5
   874 ;; This function calls:
   875 ;;		_initPin
   876 ;;		_clock_config
   877 ;;		_timer1_config
   878 ;;		_timer1_interrupt_config
   879 ;;		_adc_test_init
   880 ;;		_dac_init
   881 ;;		_op1_init
   882 ;;		_op2_init
   883 ;;		_adc_start
   884 ;;		_isPermitSampleTime
   885 ;;		_clrSampeTime
   886 ;;		_process_AD_Converter_Value
   887 ;;		_getAdOriginalCh14Value
   888 ;;		_clearPinPortAndTimer
   889 ;;		_getAdOriginalCh1Value
   890 ;;		_startTwelveHourTimer
   891 ;;		_isFinishedTwelveHoursTimer
   892 ;;		_startTwentySecondsTimer
   893 ;;		_getAdOriginaCh4Value
   894 ;;		_isFinishedTwentySecondsTimer
   895 ;;		_startThreeHoursTimer
   896 ;;		_isFinishedThreeHoursTimer
   897 ;;		_clearThreeHoursTimer
   898 ;;		_clearAllTimer
   899 ;; This function is called by:
   900 ;;		Startup code after reset
   901 ;; This function uses a non-reentrant model
   902 ;;
   903  0013                     _main:	
   904                           
   905                           ;main.c: 130: enum setp_Adc4
   906                           ;main.c: 131: {
   907                           ;main.c: 132: ADC4_STEP_INIT = 0,
   908                           ;main.c: 133: ADC4_STEP_FIRST,
   909                           ;main.c: 134: ADC4_STEP_SECOND,
   910                           ;main.c: 135: ADC4_STEP_THIRD,
   911                           ;main.c: 136: ADC4_STEP_FOURTH,
   912                           ;main.c: 137: ADC4_STEP_FIFTH,
   913                           ;main.c: 138: ADC4_STEP_SIXTH,
   914                           ;main.c: 139: };
   915                           ;main.c: 142: static unsigned char ucWaitTime1S = 0;
   916                           ;main.c: 144: static unsigned char ucWaitTimeO3s = 0;
   917                           ;main.c: 146: static unsigned char ucSmallTimerActionFlag = 0;
   918                           ;main.c: 148: static unsigned char ucSetSmallActionFlag = 0;
   919                           
   920                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   921  0013  1683               	bsf	3,5	;RP0=1, select bank1
   922  0014  1005               	bcf	5,0
   923                           
   924                           ;main.c: 151: TRISA1 = 0;
   925  0015  1085               	bcf	5,1
   926                           
   927                           ;main.c: 152: TRISA2 = 0;
   928  0016  1105               	bcf	5,2
   929                           
   930                           ;main.c: 153: TRISA3 = 0;
   931  0017  1185               	bcf	5,3
   932                           
   933                           ;main.c: 154: TRISB0 = 0;
   934  0018  1006               	bcf	6,0
   935                           
   936                           ;main.c: 155: TRISB1 = 0;
   937  0019  1086               	bcf	6,1
   938                           
   939                           ;main.c: 156: TRISA6 = 0;
   940  001A  1305               	bcf	5,6
   941                           
   942                           ;main.c: 157: TRISA7 = 0;
   943  001B  1385               	bcf	5,7
   944                           
   945                           ;main.c: 158: TRISB6 = 0;
   946  001C  1306               	bcf	6,6
   947                           
   948                           ;main.c: 161: initPin();
   949  001D  118A  25E8  118A   	fcall	_initPin
   950                           
   951                           ;main.c: 164: TRISB2 = 1;
   952  0020  1303               	bcf	3,6	;RP1=0, select bank1
   953  0021  1506               	bsf	6,2
   954                           
   955                           ;main.c: 166: TRISB7 = 1;
   956  0022  1786               	bsf	6,7
   957                           
   958                           ;main.c: 167: TRISB4 = 1;
   959  0023  1606               	bsf	6,4
   960                           
   961                           ;main.c: 169: clock_config();
   962  0024  118A  2669  118A   	fcall	_clock_config
   963                           
   964                           ;main.c: 170: timer1_config();
   965  0027  118A  264F  118A   	fcall	_timer1_config
   966                           
   967                           ;main.c: 171: timer1_interrupt_config();
   968  002A  118A  2694  118A   	fcall	_timer1_interrupt_config
   969                           
   970                           ;main.c: 173: adc_test_init(14,3);
   971  002D  3003               	movlw	3
   972  002E  1283               	bcf	3,5	;RP0=0, select bank0
   973  002F  00A0               	movwf	?_adc_test_init
   974  0030  300E               	movlw	14
   975  0031  118A  2508  118A   	fcall	_adc_test_init
   976                           
   977                           ;main.c: 175: dac_init();
   978  0034  118A  268F  118A   	fcall	_dac_init
   979                           
   980                           ;main.c: 176: op1_init();
   981  0037  118A  2644  118A   	fcall	_op1_init
   982                           
   983                           ;main.c: 177: op2_init();
   984  003A  118A  2661  118A   	fcall	_op2_init
   985                           
   986                           ;main.c: 180: adc_start();
   987  003D  118A  2595  118A   	fcall	_adc_start
   988  0040                     l4210:	
   989  0040  0064               	clrwdt	;#
   990                           
   991                           ;main.c: 215: if(isPermitSampleTime())
   992  0041  118A  2671  118A   	fcall	_isPermitSampleTime
   993  0044  3A00               	xorlw	0
   994  0045  1903               	skipnz
   995  0046  2840               	goto	l4210
   996                           
   997                           ;main.c: 216: {
   998                           ;main.c: 217: clrSampeTime();
   999  0047  118A  2697  118A   	fcall	_clrSampeTime
  1000                           
  1001                           ;main.c: 218: process_AD_Converter_Value();
  1002  004A  118A  24E7  118A   	fcall	_process_AD_Converter_Value
  1003                           
  1004                           ;main.c: 220: switch(enumMainLoopStep)
  1005  004D  2B0F               	goto	l4690
  1006  004E                     l4218:	
  1007                           
  1008                           ;main.c: 223: {
  1009                           ;main.c: 224: static unsigned char ucTimerZeroPoint5s = 0;
  1010                           ;main.c: 225: if(getAdOriginalCh14Value() > 1950)
  1011  004E  118A  242C  118A   	fcall	_getAdOriginalCh14Value
  1012  0051  3007               	movlw	7
  1013  0052  0257               	subwf	?_getAdOriginalCh14Value+1,w
  1014  0053  309F               	movlw	159
  1015  0054  1903               	skipnz
  1016  0055  0256               	subwf	?_getAdOriginalCh14Value,w
  1017  0056  1C03               	skipc
  1018  0057  285A               	goto	l4222
  1019                           
  1020                           ;main.c: 226: {
  1021                           ;main.c: 227: ucTimerZeroPoint5s++;
  1022  0058  0AEB               	incf	main@ucTimerZeroPoint5s,f
  1023                           
  1024                           ;main.c: 228: }
  1025  0059  285B               	goto	l4224
  1026  005A                     l4222:	
  1027                           
  1028                           ;main.c: 229: else
  1029                           ;main.c: 230: ucTimerZeroPoint5s = 0;
  1030  005A  01EB               	clrf	main@ucTimerZeroPoint5s
  1031  005B                     l4224:	
  1032                           
  1033                           ;main.c: 232: if(ucTimerZeroPoint5s >= 5)
  1034  005B  3005               	movlw	5
  1035  005C  026B               	subwf	main@ucTimerZeroPoint5s,w
  1036  005D  1C03               	skipc
  1037  005E  2840               	goto	l4210
  1038                           
  1039                           ;main.c: 233: {
  1040                           ;main.c: 234: ucTimerZeroPoint5s = 0;
  1041  005F  01EB               	clrf	main@ucTimerZeroPoint5s
  1042  0060                     l4228:	
  1043                           
  1044                           ;main.c: 235: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  1045  0060  1283               	bcf	3,5	;RP0=0, select bank0
  1046  0061  01DA               	clrf	main@enumMainLoopStep
  1047  0062  0ADA               	incf	main@enumMainLoopStep,f
  1048  0063                     l706:	
  1049                           
  1050                           ;main.c: 236: }
  1051                           ;main.c: 237: break;
  1052  0063  2840               	goto	l4210
  1053  0064                     l4230:	
  1054                           
  1055                           ;main.c: 241: {
  1056                           ;main.c: 242: static unsigned char ucTimerZeroPoint3s = 0;
  1057                           ;main.c: 244: if(ucTimerZeroPoint3s < 3)
  1058  0064  3003               	movlw	3
  1059  0065  026A               	subwf	main@ucTimerZeroPoint3s,w
  1060  0066  1803               	skipnc
  1061  0067  286A               	goto	l4234
  1062                           
  1063                           ;main.c: 245: {
  1064                           ;main.c: 246: ucTimerZeroPoint3s++;
  1065  0068  0AEA               	incf	main@ucTimerZeroPoint3s,f
  1066                           
  1067                           ;main.c: 247: }
  1068  0069  2840               	goto	l4210
  1069  006A                     l4234:	
  1070                           
  1071                           ;main.c: 248: else
  1072                           ;main.c: 249: {
  1073                           ;main.c: 250: ucTimerZeroPoint3s = 0;
  1074  006A  01EA               	clrf	main@ucTimerZeroPoint3s
  1075                           
  1076                           ;main.c: 252: if(getAdOriginalCh14Value() > 1950)
  1077  006B  118A  242C  118A   	fcall	_getAdOriginalCh14Value
  1078  006E  3007               	movlw	7
  1079  006F  0257               	subwf	?_getAdOriginalCh14Value+1,w
  1080  0070  309F               	movlw	159
  1081  0071  1903               	skipnz
  1082  0072  0256               	subwf	?_getAdOriginalCh14Value,w
  1083  0073  1C03               	skipc
  1084  0074  2877               	goto	l4240
  1085  0075                     l4238:	
  1086                           
  1087                           ;main.c: 253: {
  1088                           ;main.c: 255: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
  1089  0075  3002               	movlw	2
  1090  0076  28B4               	goto	L5
  1091  0077                     l4240:	
  1092                           ;main.c: 256: }
  1093                           
  1094                           
  1095                           ;main.c: 257: else
  1096                           ;main.c: 258: {
  1097                           ;main.c: 259: clearPinPortAndTimer();
  1098  0077  118A  25B2  118A   	fcall	_clearPinPortAndTimer
  1099  007A  2840               	goto	l4210
  1100  007B                     l715:	
  1101                           ;main.c: 263: }
  1102                           ;main.c: 265: case MAIN_LOOP_STEP_SECOND:
  1103                           
  1104  007B  3003               	movlw	3
  1105                           
  1106                           ;main.c: 266: {
  1107                           ;main.c: 268: PA6 = 1;
  1108  007C  1705               	bsf	5,6
  1109                           
  1110                           ;main.c: 269: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  1111  007D  28B4               	goto	L5
  1112  007E                     l4244:	
  1113                           ;main.c: 271: break;
  1114                           
  1115                           
  1116                           ;main.c: 275: {
  1117                           ;main.c: 276: static unsigned char ucTimerADC1ZeroP5s = 0;
  1118                           ;main.c: 278: if(getAdOriginalCh1Value() < 130)
  1119  007E  118A  2423  118A   	fcall	_getAdOriginalCh1Value
  1120  0081  3000               	movlw	0
  1121  0082  0257               	subwf	?_getAdOriginalCh1Value+1,w
  1122  0083  3082               	movlw	130
  1123  0084  1903               	skipnz
  1124  0085  0256               	subwf	?_getAdOriginalCh1Value,w
  1125  0086  1803               	skipnc
  1126  0087  288A               	goto	l4248
  1127                           
  1128                           ;main.c: 279: {
  1129                           ;main.c: 280: ucTimerADC1ZeroP5s = 0;
  1130  0088  01E3               	clrf	main@ucTimerADC1ZeroP5s
  1131                           
  1132                           ;main.c: 282: }
  1133  0089  288B               	goto	l4250
  1134  008A                     l4248:	
  1135                           
  1136                           ;main.c: 283: else
  1137                           ;main.c: 284: {
  1138                           ;main.c: 285: ucTimerADC1ZeroP5s++;
  1139  008A  0AE3               	incf	main@ucTimerADC1ZeroP5s,f
  1140  008B                     l4250:	
  1141                           
  1142                           ;main.c: 286: }
  1143                           ;main.c: 288: if(ucTimerADC1ZeroP5s >= 1)
  1144  008B  0863               	movf	main@ucTimerADC1ZeroP5s,w
  1145  008C  1903               	btfsc	3,2
  1146  008D  2891               	goto	l4256
  1147  008E  3004               	movlw	4
  1148                           
  1149                           ;main.c: 289: {
  1150                           ;main.c: 290: ucTimerADC1ZeroP5s = 0;
  1151  008F  01E3               	clrf	main@ucTimerADC1ZeroP5s
  1152                           
  1153                           ;main.c: 291: enumMainLoopStep = MAIN_LOOP_STEP_FOURTH;
  1154  0090  28B4               	goto	L5
  1155  0091                     l4256:	
  1156                           ;main.c: 292: }
  1157                           
  1158                           
  1159                           ;main.c: 293: else
  1160                           ;main.c: 294: {
  1161                           ;main.c: 295: static unsigned char ucTimerRightP5s = 0;
  1162                           ;main.c: 297: if(getAdOriginalCh1Value() < 117)
  1163  0091  118A  2423  118A   	fcall	_getAdOriginalCh1Value
  1164  0094  3000               	movlw	0
  1165  0095  0257               	subwf	?_getAdOriginalCh1Value+1,w
  1166  0096  3075               	movlw	117
  1167  0097  1903               	skipnz
  1168  0098  0256               	subwf	?_getAdOriginalCh1Value,w
  1169  0099  1803               	skipnc
  1170  009A  289D               	goto	l4260
  1171                           
  1172                           ;main.c: 298: {
  1173                           ;main.c: 299: ucTimerRightP5s++;
  1174  009B  0AE9               	incf	main@ucTimerRightP5s,f
  1175                           
  1176                           ;main.c: 300: }
  1177  009C  289E               	goto	l4262
  1178  009D                     l4260:	
  1179                           
  1180                           ;main.c: 301: else
  1181                           ;main.c: 302: {
  1182                           ;main.c: 303: ucTimerRightP5s = 0;
  1183  009D  01E9               	clrf	main@ucTimerRightP5s
  1184  009E                     l4262:	
  1185                           
  1186                           ;main.c: 304: }
  1187                           ;main.c: 306: if(ucTimerRightP5s >= 1)
  1188  009E  0869               	movf	main@ucTimerRightP5s,w
  1189  009F  1903               	btfsc	3,2
  1190  00A0  2840               	goto	l4210
  1191  00A1  3008               	movlw	8
  1192                           
  1193                           ;main.c: 307: {
  1194                           ;main.c: 308: ucTimerRightP5s = 0;
  1195  00A2  01E9               	clrf	main@ucTimerRightP5s
  1196                           
  1197                           ;main.c: 309: enumMainLoopStep = MAIN_LOOP_STEP_3_HOUR_BRANCH;
  1198  00A3  28B4               	goto	L5
  1199  00A4                     l4268:	
  1200                           ;main.c: 310: }
  1201                           
  1202                           
  1203                           ;main.c: 321: {
  1204                           ;main.c: 323: startTwelveHourTimer(180);
  1205  00A4  30B4               	movlw	180
  1206  00A5  00A0               	movwf	?_startTwelveHourTimer
  1207  00A6  01A1               	clrf	?_startTwelveHourTimer+1
  1208  00A7  118A  262A  118A   	fcall	_startTwelveHourTimer
  1209                           
  1210                           ;main.c: 324: enumMainLoopStep = MAIN_LOOP_STEP_FIFTH;
  1211  00AA  3005               	movlw	5
  1212  00AB  28B3               	goto	L10
  1213  00AC                     l4272:	
  1214                           ;main.c: 326: break;
  1215                           
  1216                           
  1217                           ;main.c: 330: {
  1218                           ;main.c: 332: if(isFinishedTwelveHoursTimer())
  1219  00AC  118A  2684  118A   	fcall	_isFinishedTwelveHoursTimer
  1220  00AF  3A00               	xorlw	0
  1221  00B0  1903               	skipnz
  1222  00B1  2A3A               	goto	l4586
  1223  00B2                     l4274:	
  1224                           
  1225                           ;main.c: 333: {
  1226                           ;main.c: 334: enumMainLoopStep = MAIN_LOOP_STEP_12_HOUR_END;
  1227  00B2  3009               	movlw	9
  1228  00B3                     L10:	
  1229  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1230  00B4                     L5:	
  1231  00B4  00DA               	movwf	main@enumMainLoopStep
  1232                           
  1233                           ;main.c: 335: }
  1234  00B5  2840               	goto	l4210
  1235  00B6                     l4276:	
  1236                           
  1237                           ;main.c: 343: {
  1238                           ;main.c: 344: startTwentySecondsTimer();
  1239  00B6  118A  268A  118A   	fcall	_startTwentySecondsTimer
  1240  00B9                     l4278:	
  1241                           
  1242                           ;main.c: 345: ucADC4_Step = ADC4_STEP_FIRST;
  1243  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  1244  00BA  01DB               	clrf	main@ucADC4_Step
  1245  00BB  0ADB               	incf	main@ucADC4_Step,f
  1246                           
  1247                           ;main.c: 346: break;
  1248  00BC  2840               	goto	l4210
  1249  00BD                     l4280:	
  1250                           
  1251                           ;main.c: 350: {
  1252                           ;main.c: 351: if(getAdOriginaCh4Value() < 1911)
  1253  00BD  118A  241A  118A   	fcall	_getAdOriginaCh4Value
  1254  00C0  3007               	movlw	7
  1255  00C1  0257               	subwf	?_getAdOriginaCh4Value+1,w
  1256  00C2  3077               	movlw	119
  1257  00C3  1903               	skipnz
  1258  00C4  0256               	subwf	?_getAdOriginaCh4Value,w
  1259  00C5  1803               	skipnc
  1260  00C6  28C9               	goto	l4284
  1261                           
  1262                           ;main.c: 352: ucChannel4Type = LESS_THAN_1911;
  1263  00C7  01DC               	clrf	main@ucChannel4Type
  1264  00C8  28F0               	goto	l740
  1265  00C9                     l4284:	
  1266                           
  1267                           ;main.c: 353: else if(getAdOriginaCh4Value() < 2067)
  1268  00C9  118A  241A  118A   	fcall	_getAdOriginaCh4Value
  1269  00CC  3008               	movlw	8
  1270  00CD  0257               	subwf	?_getAdOriginaCh4Value+1,w
  1271  00CE  3013               	movlw	19
  1272  00CF  1903               	skipnz
  1273  00D0  0256               	subwf	?_getAdOriginaCh4Value,w
  1274  00D1  1803               	skipnc
  1275  00D2  28D6               	goto	l4288
  1276                           
  1277                           ;main.c: 354: ucChannel4Type = BETWEEN_1911_AND_2067;
  1278  00D3  01DC               	clrf	main@ucChannel4Type
  1279  00D4  0ADC               	incf	main@ucChannel4Type,f
  1280  00D5  28F0               	goto	l740
  1281  00D6                     l4288:	
  1282                           
  1283                           ;main.c: 355: else if(getAdOriginaCh4Value() < 2204)
  1284  00D6  118A  241A  118A   	fcall	_getAdOriginaCh4Value
  1285  00D9  3008               	movlw	8
  1286  00DA  0257               	subwf	?_getAdOriginaCh4Value+1,w
  1287  00DB  309C               	movlw	156
  1288  00DC  1903               	skipnz
  1289  00DD  0256               	subwf	?_getAdOriginaCh4Value,w
  1290  00DE  1803               	skipnc
  1291  00DF  28E2               	goto	l4292
  1292                           
  1293                           ;main.c: 356: ucChannel4Type = BETWEEN_2067_AND_2204;
  1294  00E0  3002               	movlw	2
  1295  00E1  28EF               	goto	L6
  1296  00E2                     l4292:	
  1297                           
  1298                           ;main.c: 357: else if(getAdOriginaCh4Value() < 2340)
  1299  00E2  118A  241A  118A   	fcall	_getAdOriginaCh4Value
  1300  00E5  3009               	movlw	9
  1301  00E6  0257               	subwf	?_getAdOriginaCh4Value+1,w
  1302  00E7  3024               	movlw	36
  1303  00E8  1903               	skipnz
  1304  00E9  0256               	subwf	?_getAdOriginaCh4Value,w
  1305  00EA  1803               	skipnc
  1306  00EB  28EE               	goto	l4296
  1307                           
  1308                           ;main.c: 358: ucChannel4Type = BETWEEN_2204_AND_2340;
  1309  00EC  3003               	movlw	3
  1310  00ED  28EF               	goto	L6
  1311  00EE                     l4296:	
  1312                           
  1313                           ;main.c: 359: else
  1314                           ;main.c: 360: ucChannel4Type = MORE_THAN_2340;
  1315  00EE  3004               	movlw	4
  1316  00EF                     L6:	
  1317  00EF  00DC               	movwf	main@ucChannel4Type
  1318  00F0                     l740:	
  1319                           
  1320                           ;main.c: 362: ucADC4_Step = ADC4_STEP_SECOND;
  1321  00F0  3002               	movlw	2
  1322  00F1  2A27               	goto	L8
  1323  00F2                     l755:	
  1324                           ;main.c: 377: {
  1325                           ;main.c: 378: case 0:
  1326                           
  1327                           ;main.c: 363: break;
  1328                           
  1329                           
  1330                           ;main.c: 379: {
  1331                           ;main.c: 380: PB0 = 1;
  1332  00F2  1406               	bsf	6,0
  1333  00F3                     l4298:	
  1334                           
  1335                           ;main.c: 381: ucLoaderStep++;
  1336  00F3  0ADD               	incf	main@ucLoaderStep,f
  1337                           
  1338                           ;main.c: 382: break;
  1339  00F4  2840               	goto	l4210
  1340  00F5                     l4300:	
  1341                           
  1342                           ;main.c: 386: {
  1343                           ;main.c: 387: if(ucTimerDelay >= 5)
  1344  00F5  3005               	movlw	5
  1345  00F6  0264               	subwf	main@ucTimerDelay,w
  1346  00F7  1C03               	skipc
  1347  00F8  28FC               	goto	l4308
  1348                           
  1349                           ;main.c: 388: {
  1350                           ;main.c: 389: PA0 = 1;
  1351  00F9  1405               	bsf	5,0
  1352  00FA                     l4304:	
  1353                           
  1354                           ;main.c: 390: ucTimerDelay = 0;
  1355  00FA  01E4               	clrf	main@ucTimerDelay
  1356  00FB  28F3               	goto	l4298
  1357  00FC                     l4308:	
  1358                           
  1359                           ;main.c: 393: else
  1360                           ;main.c: 394: ucTimerDelay++;
  1361  00FC  0AE4               	incf	main@ucTimerDelay,f
  1362  00FD  2840               	goto	l4210
  1363  00FE                     l4310:	
  1364                           
  1365                           ;main.c: 399: {
  1366                           ;main.c: 400: if(ucTimerDelay >= 5)
  1367  00FE  3005               	movlw	5
  1368  00FF  0264               	subwf	main@ucTimerDelay,w
  1369  0100  1C03               	skipc
  1370  0101  28FC               	goto	l4308
  1371                           
  1372                           ;main.c: 401: {
  1373                           ;main.c: 402: PA1= 1;
  1374  0102  1485               	bsf	5,1
  1375  0103  28FA               	goto	l4304
  1376  0104                     l4320:	
  1377                           
  1378                           ;main.c: 413: {
  1379                           ;main.c: 414: if(ucTimerDelay >= 5)
  1380  0104  3005               	movlw	5
  1381  0105  0264               	subwf	main@ucTimerDelay,w
  1382  0106  1C03               	skipc
  1383  0107  28FC               	goto	l4308
  1384                           
  1385                           ;main.c: 415: {
  1386                           ;main.c: 416: PA2= 1;
  1387  0108  1505               	bsf	5,2
  1388  0109  28FA               	goto	l4304
  1389  010A                     l4330:	
  1390                           
  1391                           ;main.c: 426: {
  1392                           ;main.c: 427: if(ucTimerDelay >= 5)
  1393  010A  3005               	movlw	5
  1394  010B  0264               	subwf	main@ucTimerDelay,w
  1395  010C  1C03               	skipc
  1396  010D  28FC               	goto	l4308
  1397                           
  1398                           ;main.c: 428: {
  1399                           ;main.c: 429: PA3 = 1;
  1400  010E  1585               	bsf	5,3
  1401  010F  28FA               	goto	l4304
  1402  0110                     l4340:	
  1403                           
  1404                           ;main.c: 439: {
  1405                           ;main.c: 440: if(ucTimerDelay >= 5)
  1406  0110  3005               	movlw	5
  1407  0111  0264               	subwf	main@ucTimerDelay,w
  1408  0112  1C03               	skipc
  1409  0113  28FC               	goto	l4308
  1410                           
  1411                           ;main.c: 441: {
  1412                           ;main.c: 442: PB0 = 0;
  1413  0114  1006               	bcf	6,0
  1414                           
  1415                           ;main.c: 443: PA0 = 0;
  1416  0115  1005               	bcf	5,0
  1417                           
  1418                           ;main.c: 444: PA1 = 0;
  1419  0116  1085               	bcf	5,1
  1420                           
  1421                           ;main.c: 445: PA2 = 0;
  1422  0117  1105               	bcf	5,2
  1423                           
  1424                           ;main.c: 446: PA3 = 0;
  1425  0118  1185               	bcf	5,3
  1426  0119  28FA               	goto	l4304
  1427  011A                     l4350:	
  1428                           
  1429                           ;main.c: 456: {
  1430                           ;main.c: 457: if(ucTimerDelay >= 2)
  1431  011A  3002               	movlw	2
  1432  011B  0264               	subwf	main@ucTimerDelay,w
  1433  011C  1C03               	skipc
  1434  011D  28FC               	goto	l4308
  1435                           
  1436                           ;main.c: 458: {
  1437                           ;main.c: 459: ucTimerDelay = 0;
  1438  011E  01E4               	clrf	main@ucTimerDelay
  1439                           
  1440                           ;main.c: 461: ucLoaderStep = 0;
  1441  011F  01DD               	clrf	main@ucLoaderStep
  1442  0120                     l4354:	
  1443                           
  1444                           ;main.c: 462: ucADC4_Step = ADC4_STEP_THIRD;
  1445  0120  3003               	movlw	3
  1446  0121  2A27               	goto	L8
  1447  0122                     l4360:	
  1448                           ;main.c: 463: }
  1449                           
  1450  0122  085D               	movf	main@ucLoaderStep,w
  1451                           
  1452                           ; Switch size 1, requested type "space"
  1453                           ; Number of cases is 7, Range of values is 0 to 6
  1454                           ; switch strategies available:
  1455                           ; Name         Instructions Cycles
  1456                           ; direct_byte           21     7 (fixed)
  1457                           ; simple_byte           22    12 (average)
  1458                           ; jumptable            260     6 (fixed)
  1459                           ; rangetable            11     6 (fixed)
  1460                           ; spacedrange           20     9 (fixed)
  1461                           ; locatedrange           7     3 (fixed)
  1462                           ;	Chosen strategy is direct_byte
  1463  0123  0084               	movwf	4
  1464  0124  3007               	movlw	7
  1465  0125  0204               	subwf	4,w
  1466  0126  1803               	skipnc
  1467  0127  2840               	goto	l4210
  1468  0128  3006               	movlw	high S4908
  1469  0129  008A               	movwf	10
  1470  012A  1003               	clrc
  1471  012B  0D04               	rlf	4,w
  1472  012C  3E00               	addlw	low S4908
  1473  012D  0082               	movwf	2
  1474  012E                     l783:	
  1475                           ;main.c: 482: {
  1476                           ;main.c: 483: case 0:
  1477                           
  1478                           
  1479                           ;main.c: 484: {
  1480                           ;main.c: 485: PB0 = 1;
  1481  012E  1406               	bsf	6,0
  1482  012F                     l4362:	
  1483                           
  1484                           ;main.c: 486: ucLoaderStep1++;
  1485  012F  0ADE               	incf	main@ucLoaderStep1,f
  1486                           
  1487                           ;main.c: 487: break;
  1488  0130  2840               	goto	l4210
  1489  0131                     l4364:	
  1490                           
  1491                           ;main.c: 491: {
  1492                           ;main.c: 492: if(ucTimerDelay1 >= 5)
  1493  0131  3005               	movlw	5
  1494  0132  0265               	subwf	main@ucTimerDelay1,w
  1495  0133  1C03               	skipc
  1496  0134  2938               	goto	l4372
  1497                           
  1498                           ;main.c: 493: {
  1499                           ;main.c: 494: PA0 = 1;
  1500  0135  1405               	bsf	5,0
  1501  0136                     l4368:	
  1502                           
  1503                           ;main.c: 495: ucTimerDelay1 = 0;
  1504  0136  01E5               	clrf	main@ucTimerDelay1
  1505  0137  292F               	goto	l4362
  1506  0138                     l4372:	
  1507                           
  1508                           ;main.c: 498: else
  1509                           ;main.c: 499: ucTimerDelay1++;
  1510  0138  0AE5               	incf	main@ucTimerDelay1,f
  1511  0139  2840               	goto	l4210
  1512  013A                     l4374:	
  1513                           
  1514                           ;main.c: 504: {
  1515                           ;main.c: 505: if(ucTimerDelay1 >= 5)
  1516  013A  3005               	movlw	5
  1517  013B  0265               	subwf	main@ucTimerDelay1,w
  1518  013C  1C03               	skipc
  1519  013D  2938               	goto	l4372
  1520                           
  1521                           ;main.c: 506: {
  1522                           ;main.c: 507: PA1= 1;
  1523  013E  1485               	bsf	5,1
  1524  013F  2936               	goto	l4368
  1525  0140                     l4384:	
  1526                           
  1527                           ;main.c: 517: {
  1528                           ;main.c: 518: if(ucTimerDelay1 >= 5)
  1529  0140  3005               	movlw	5
  1530  0141  0265               	subwf	main@ucTimerDelay1,w
  1531  0142  1C03               	skipc
  1532  0143  2938               	goto	l4372
  1533                           
  1534                           ;main.c: 519: {
  1535                           ;main.c: 520: PA2 = 1;
  1536  0144  1505               	bsf	5,2
  1537  0145  2936               	goto	l4368
  1538  0146                     l4394:	
  1539                           
  1540                           ;main.c: 530: {
  1541                           ;main.c: 531: if(ucTimerDelay1 >= 5)
  1542  0146  3005               	movlw	5
  1543  0147  0265               	subwf	main@ucTimerDelay1,w
  1544  0148  1C03               	skipc
  1545  0149  2938               	goto	l4372
  1546                           
  1547                           ;main.c: 532: {
  1548                           ;main.c: 533: PA3 = 1;
  1549  014A  1585               	bsf	5,3
  1550  014B  2936               	goto	l4368
  1551  014C                     l4404:	
  1552                           
  1553                           ;main.c: 543: {
  1554                           ;main.c: 544: if(ucTimerDelay1 >= 5)
  1555  014C  3005               	movlw	5
  1556  014D  0265               	subwf	main@ucTimerDelay1,w
  1557  014E  1C03               	skipc
  1558  014F  2938               	goto	l4372
  1559                           
  1560                           ;main.c: 545: {
  1561                           ;main.c: 546: PA0 = 0;
  1562  0150  1005               	bcf	5,0
  1563                           
  1564                           ;main.c: 547: PA1 = 0;
  1565  0151  1085               	bcf	5,1
  1566                           
  1567                           ;main.c: 548: PA2 = 0;
  1568  0152  1105               	bcf	5,2
  1569                           
  1570                           ;main.c: 549: PA3 = 0;
  1571  0153  1185               	bcf	5,3
  1572  0154  2936               	goto	l4368
  1573  0155                     l4414:	
  1574                           
  1575                           ;main.c: 559: {
  1576                           ;main.c: 560: if(ucTimerDelay1 >= 2)
  1577  0155  3002               	movlw	2
  1578  0156  0265               	subwf	main@ucTimerDelay1,w
  1579  0157  1C03               	skipc
  1580  0158  2938               	goto	l4372
  1581                           
  1582                           ;main.c: 561: {
  1583                           ;main.c: 562: ucTimerDelay1 = 0;
  1584  0159  01E5               	clrf	main@ucTimerDelay1
  1585                           
  1586                           ;main.c: 564: ucLoaderStep1 = 0;
  1587  015A  01DE               	clrf	main@ucLoaderStep1
  1588  015B  2920               	goto	l4354
  1589  015C                     l4424:	
  1590  015C  085E               	movf	main@ucLoaderStep1,w
  1591                           
  1592                           ; Switch size 1, requested type "space"
  1593                           ; Number of cases is 7, Range of values is 0 to 6
  1594                           ; switch strategies available:
  1595                           ; Name         Instructions Cycles
  1596                           ; direct_byte           21     7 (fixed)
  1597                           ; simple_byte           22    12 (average)
  1598                           ; jumptable            260     6 (fixed)
  1599                           ; rangetable            11     6 (fixed)
  1600                           ; spacedrange           20     9 (fixed)
  1601                           ; locatedrange           7     3 (fixed)
  1602                           ;	Chosen strategy is direct_byte
  1603  015D  0084               	movwf	4
  1604  015E  3007               	movlw	7
  1605  015F  0204               	subwf	4,w
  1606  0160  1803               	skipnc
  1607  0161  2840               	goto	l4210
  1608  0162  3006               	movlw	high S4910
  1609  0163  008A               	movwf	10
  1610  0164  1003               	clrc
  1611  0165  0D04               	rlf	4,w
  1612  0166  3E0E               	addlw	low S4910
  1613  0167  0082               	movwf	2
  1614  0168                     l810:	
  1615                           ;main.c: 586: {
  1616                           ;main.c: 587: case 0:
  1617                           
  1618                           
  1619                           ;main.c: 588: {
  1620                           ;main.c: 589: PB0 = 1;
  1621  0168  1406               	bsf	6,0
  1622                           
  1623                           ;main.c: 590: PA0 = 1;
  1624  0169  1405               	bsf	5,0
  1625  016A                     l4426:	
  1626                           
  1627                           ;main.c: 591: ucLoaderStep2++;
  1628  016A  0ADF               	incf	main@ucLoaderStep2,f
  1629                           
  1630                           ;main.c: 592: break;
  1631  016B  2840               	goto	l4210
  1632  016C                     l4428:	
  1633                           
  1634                           ;main.c: 596: {
  1635                           ;main.c: 597: if(ucTimerDelay2 >= 5)
  1636  016C  3005               	movlw	5
  1637  016D  0266               	subwf	main@ucTimerDelay2,w
  1638  016E  1C03               	skipc
  1639  016F  2973               	goto	l4436
  1640                           
  1641                           ;main.c: 598: {
  1642                           ;main.c: 599: PA1 = 1;
  1643  0170  1485               	bsf	5,1
  1644  0171                     l4432:	
  1645                           
  1646                           ;main.c: 600: ucTimerDelay2 = 0;
  1647  0171  01E6               	clrf	main@ucTimerDelay2
  1648  0172  296A               	goto	l4426
  1649  0173                     l4436:	
  1650                           
  1651                           ;main.c: 603: else
  1652                           ;main.c: 604: ucTimerDelay2++;
  1653  0173  0AE6               	incf	main@ucTimerDelay2,f
  1654  0174  2840               	goto	l4210
  1655  0175                     l4438:	
  1656                           
  1657                           ;main.c: 609: {
  1658                           ;main.c: 610: if(ucTimerDelay2 >= 5)
  1659  0175  3005               	movlw	5
  1660  0176  0266               	subwf	main@ucTimerDelay2,w
  1661  0177  1C03               	skipc
  1662  0178  2973               	goto	l4436
  1663                           
  1664                           ;main.c: 611: {
  1665                           ;main.c: 612: PA2 = 1;
  1666  0179  1505               	bsf	5,2
  1667  017A  2971               	goto	l4432
  1668  017B                     l4448:	
  1669                           
  1670                           ;main.c: 622: {
  1671                           ;main.c: 623: if(ucTimerDelay2 >= 5)
  1672  017B  3005               	movlw	5
  1673  017C  0266               	subwf	main@ucTimerDelay2,w
  1674  017D  1C03               	skipc
  1675  017E  2973               	goto	l4436
  1676                           
  1677                           ;main.c: 624: {
  1678                           ;main.c: 625: PA3 = 1;
  1679  017F  1585               	bsf	5,3
  1680  0180  2971               	goto	l4432
  1681  0181                     l4458:	
  1682                           
  1683                           ;main.c: 635: {
  1684                           ;main.c: 636: if(ucTimerDelay2 >= 5)
  1685  0181  3005               	movlw	5
  1686  0182  0266               	subwf	main@ucTimerDelay2,w
  1687  0183  1C03               	skipc
  1688  0184  2973               	goto	l4436
  1689                           
  1690                           ;main.c: 637: {
  1691                           ;main.c: 639: PA1 = 0;
  1692  0185  1085               	bcf	5,1
  1693                           
  1694                           ;main.c: 640: PA2 = 0;
  1695  0186  1105               	bcf	5,2
  1696                           
  1697                           ;main.c: 641: PA3 = 0;
  1698  0187  1185               	bcf	5,3
  1699  0188  2971               	goto	l4432
  1700  0189                     l4468:	
  1701                           
  1702                           ;main.c: 651: {
  1703                           ;main.c: 652: if(ucTimerDelay2 >= 2)
  1704  0189  3002               	movlw	2
  1705  018A  0266               	subwf	main@ucTimerDelay2,w
  1706  018B  1C03               	skipc
  1707  018C  2973               	goto	l4436
  1708                           
  1709                           ;main.c: 653: {
  1710                           ;main.c: 654: ucTimerDelay2 = 0;
  1711  018D  01E6               	clrf	main@ucTimerDelay2
  1712                           
  1713                           ;main.c: 656: ucLoaderStep2 = 0;
  1714  018E  01DF               	clrf	main@ucLoaderStep2
  1715  018F  2920               	goto	l4354
  1716  0190                     l4478:	
  1717  0190  085F               	movf	main@ucLoaderStep2,w
  1718                           
  1719                           ; Switch size 1, requested type "space"
  1720                           ; Number of cases is 6, Range of values is 0 to 5
  1721                           ; switch strategies available:
  1722                           ; Name         Instructions Cycles
  1723                           ; direct_byte           19     7 (fixed)
  1724                           ; simple_byte           19    10 (average)
  1725                           ; jumptable            260     6 (fixed)
  1726                           ; rangetable            10     6 (fixed)
  1727                           ; spacedrange           18     9 (fixed)
  1728                           ; locatedrange           6     3 (fixed)
  1729                           ;	Chosen strategy is direct_byte
  1730  0191  0084               	movwf	4
  1731  0192  3006               	movlw	6
  1732  0193  0204               	subwf	4,w
  1733  0194  1803               	skipnc
  1734  0195  2840               	goto	l4210
  1735  0196  3006               	movlw	high S4912
  1736  0197  008A               	movwf	10
  1737  0198  1003               	clrc
  1738  0199  0D04               	rlf	4,w
  1739  019A  3E38               	addlw	low S4912
  1740  019B  0082               	movwf	2
  1741  019C                     l834:	
  1742                           ;main.c: 678: {
  1743                           ;main.c: 679: case 0:
  1744                           
  1745                           
  1746                           ;main.c: 680: {
  1747                           ;main.c: 681: PB0 = 1;
  1748  019C  1406               	bsf	6,0
  1749                           
  1750                           ;main.c: 682: PA0 = 1;
  1751  019D  1405               	bsf	5,0
  1752                           
  1753                           ;main.c: 683: PA1 = 1;
  1754  019E  1485               	bsf	5,1
  1755  019F                     l4480:	
  1756                           
  1757                           ;main.c: 684: ucLoaderStep3++;
  1758  019F  0AE0               	incf	main@ucLoaderStep3,f
  1759                           
  1760                           ;main.c: 685: break;
  1761  01A0  2840               	goto	l4210
  1762  01A1                     l4482:	
  1763                           
  1764                           ;main.c: 689: {
  1765                           ;main.c: 690: if(ucTimerDelay3 >= 5)
  1766  01A1  3005               	movlw	5
  1767  01A2  0267               	subwf	main@ucTimerDelay3,w
  1768  01A3  1C03               	skipc
  1769  01A4  29A8               	goto	l4490
  1770                           
  1771                           ;main.c: 691: {
  1772                           ;main.c: 692: PA2 = 1;
  1773  01A5  1505               	bsf	5,2
  1774  01A6                     l4486:	
  1775                           
  1776                           ;main.c: 693: ucTimerDelay3 = 0;
  1777  01A6  01E7               	clrf	main@ucTimerDelay3
  1778  01A7  299F               	goto	l4480
  1779  01A8                     l4490:	
  1780                           
  1781                           ;main.c: 696: else
  1782                           ;main.c: 697: ucTimerDelay3++;
  1783  01A8  0AE7               	incf	main@ucTimerDelay3,f
  1784  01A9  2840               	goto	l4210
  1785  01AA                     l4492:	
  1786                           
  1787                           ;main.c: 702: {
  1788                           ;main.c: 703: if(ucTimerDelay3 >= 5)
  1789  01AA  3005               	movlw	5
  1790  01AB  0267               	subwf	main@ucTimerDelay3,w
  1791  01AC  1C03               	skipc
  1792  01AD  29A8               	goto	l4490
  1793                           
  1794                           ;main.c: 704: {
  1795                           ;main.c: 705: PA3 = 1;
  1796  01AE  1585               	bsf	5,3
  1797  01AF  29A6               	goto	l4486
  1798  01B0                     l4502:	
  1799                           
  1800                           ;main.c: 716: {
  1801                           ;main.c: 717: if(ucTimerDelay3 >= 5)
  1802  01B0  3005               	movlw	5
  1803  01B1  0267               	subwf	main@ucTimerDelay3,w
  1804  01B2  1C03               	skipc
  1805  01B3  29A8               	goto	l4490
  1806                           
  1807                           ;main.c: 718: {
  1808                           ;main.c: 720: PA2 = 0;
  1809  01B4  1105               	bcf	5,2
  1810                           
  1811                           ;main.c: 721: PA3 = 0;
  1812  01B5  1185               	bcf	5,3
  1813  01B6  29A6               	goto	l4486
  1814  01B7                     l4512:	
  1815                           
  1816                           ;main.c: 731: {
  1817                           ;main.c: 732: if(ucTimerDelay3 >= 2)
  1818  01B7  3002               	movlw	2
  1819  01B8  0267               	subwf	main@ucTimerDelay3,w
  1820  01B9  1C03               	skipc
  1821  01BA  29A8               	goto	l4490
  1822                           
  1823                           ;main.c: 733: {
  1824                           ;main.c: 734: ucTimerDelay3 = 0;
  1825  01BB  01E7               	clrf	main@ucTimerDelay3
  1826                           
  1827                           ;main.c: 736: ucLoaderStep3 = 0;
  1828  01BC  01E0               	clrf	main@ucLoaderStep3
  1829  01BD  2920               	goto	l4354
  1830  01BE                     l4522:	
  1831  01BE  0860               	movf	main@ucLoaderStep3,w
  1832                           
  1833                           ; Switch size 1, requested type "space"
  1834                           ; Number of cases is 5, Range of values is 0 to 4
  1835                           ; switch strategies available:
  1836                           ; Name         Instructions Cycles
  1837                           ; simple_byte           16     9 (average)
  1838                           ; direct_byte           17     7 (fixed)
  1839                           ; jumptable            260     6 (fixed)
  1840                           ; rangetable             9     6 (fixed)
  1841                           ; spacedrange           16     9 (fixed)
  1842                           ; locatedrange           5     3 (fixed)
  1843                           ;	Chosen strategy is simple_byte
  1844  01BF  3A00               	xorlw	0	; case 0
  1845  01C0  1903               	skipnz
  1846  01C1  299C               	goto	l834
  1847  01C2  3A01               	xorlw	1	; case 1
  1848  01C3  1903               	skipnz
  1849  01C4  29A1               	goto	l4482
  1850  01C5  3A03               	xorlw	3	; case 2
  1851  01C6  1903               	skipnz
  1852  01C7  29AA               	goto	l4492
  1853  01C8  3A01               	xorlw	1	; case 3
  1854  01C9  1903               	skipnz
  1855  01CA  29B0               	goto	l4502
  1856  01CB  3A07               	xorlw	7	; case 4
  1857  01CC  1903               	skipnz
  1858  01CD  29B7               	goto	l4512
  1859  01CE  2863               	goto	l706
  1860  01CF                     l855:	
  1861                           ;main.c: 758: {
  1862                           ;main.c: 759: case 0:
  1863                           
  1864                           
  1865                           ;main.c: 760: {
  1866                           ;main.c: 761: PB0 = 1;
  1867  01CF  1406               	bsf	6,0
  1868                           
  1869                           ;main.c: 762: PA0 = 1;
  1870  01D0  1405               	bsf	5,0
  1871                           
  1872                           ;main.c: 763: PA1 = 1;
  1873  01D1  1485               	bsf	5,1
  1874                           
  1875                           ;main.c: 764: PA2 = 1;
  1876  01D2  1505               	bsf	5,2
  1877  01D3                     l4524:	
  1878                           
  1879                           ;main.c: 765: ucLoaderStep4++;
  1880  01D3  0AE1               	incf	main@ucLoaderStep4,f
  1881                           
  1882                           ;main.c: 766: break;
  1883  01D4  2840               	goto	l4210
  1884  01D5                     l4526:	
  1885                           
  1886                           ;main.c: 770: {
  1887                           ;main.c: 771: if(ucTimerDelay4 >= 5)
  1888  01D5  3005               	movlw	5
  1889  01D6  0268               	subwf	main@ucTimerDelay4,w
  1890  01D7  1C03               	skipc
  1891  01D8  29DC               	goto	l4534
  1892                           
  1893                           ;main.c: 772: {
  1894                           ;main.c: 773: PA3 = 1;
  1895  01D9  1585               	bsf	5,3
  1896  01DA                     l4530:	
  1897                           
  1898                           ;main.c: 774: ucTimerDelay4 = 0;
  1899  01DA  01E8               	clrf	main@ucTimerDelay4
  1900  01DB  29D3               	goto	l4524
  1901  01DC                     l4534:	
  1902                           
  1903                           ;main.c: 777: else
  1904                           ;main.c: 778: ucTimerDelay4++;
  1905  01DC  0AE8               	incf	main@ucTimerDelay4,f
  1906  01DD  2840               	goto	l4210
  1907  01DE                     l4536:	
  1908                           
  1909                           ;main.c: 783: {
  1910                           ;main.c: 784: if(ucTimerDelay4 >= 5)
  1911  01DE  3005               	movlw	5
  1912  01DF  0268               	subwf	main@ucTimerDelay4,w
  1913  01E0  1C03               	skipc
  1914  01E1  29DC               	goto	l4534
  1915                           
  1916                           ;main.c: 785: {
  1917                           ;main.c: 786: PA3 = 0;
  1918  01E2  1185               	bcf	5,3
  1919  01E3  29DA               	goto	l4530
  1920  01E4                     l4546:	
  1921                           
  1922                           ;main.c: 796: {
  1923                           ;main.c: 797: if(ucTimerDelay4 >= 2)
  1924  01E4  3002               	movlw	2
  1925  01E5  0268               	subwf	main@ucTimerDelay4,w
  1926  01E6  1C03               	skipc
  1927  01E7  29DC               	goto	l4534
  1928                           
  1929                           ;main.c: 798: {
  1930                           ;main.c: 799: ucTimerDelay4 = 0;
  1931  01E8  01E8               	clrf	main@ucTimerDelay4
  1932                           
  1933                           ;main.c: 801: ucLoaderStep4 = 0;
  1934  01E9  01E1               	clrf	main@ucLoaderStep4
  1935  01EA  2920               	goto	l4354
  1936  01EB                     l4556:	
  1937  01EB  0861               	movf	main@ucLoaderStep4,w
  1938                           
  1939                           ; Switch size 1, requested type "space"
  1940                           ; Number of cases is 4, Range of values is 0 to 3
  1941                           ; switch strategies available:
  1942                           ; Name         Instructions Cycles
  1943                           ; simple_byte           13     7 (average)
  1944                           ; direct_byte           15     7 (fixed)
  1945                           ; jumptable            260     6 (fixed)
  1946                           ; rangetable             8     6 (fixed)
  1947                           ; spacedrange           14     9 (fixed)
  1948                           ; locatedrange           4     3 (fixed)
  1949                           ;	Chosen strategy is simple_byte
  1950  01EC  3A00               	xorlw	0	; case 0
  1951  01ED  1903               	skipnz
  1952  01EE  29CF               	goto	l855
  1953  01EF  3A01               	xorlw	1	; case 1
  1954  01F0  1903               	skipnz
  1955  01F1  29D5               	goto	l4526
  1956  01F2  3A03               	xorlw	3	; case 2
  1957  01F3  1903               	skipnz
  1958  01F4  29DE               	goto	l4536
  1959  01F5  3A01               	xorlw	1	; case 3
  1960  01F6  1903               	skipnz
  1961  01F7  29E4               	goto	l4546
  1962  01F8  2863               	goto	l706
  1963  01F9                     l4560:	
  1964  01F9  085C               	movf	main@ucChannel4Type,w
  1965                           
  1966                           ; Switch size 1, requested type "space"
  1967                           ; Number of cases is 5, Range of values is 0 to 4
  1968                           ; switch strategies available:
  1969                           ; Name         Instructions Cycles
  1970                           ; simple_byte           16     9 (average)
  1971                           ; direct_byte           17     7 (fixed)
  1972                           ; jumptable            260     6 (fixed)
  1973                           ; rangetable             9     6 (fixed)
  1974                           ; spacedrange           16     9 (fixed)
  1975                           ; locatedrange           5     3 (fixed)
  1976                           ;	Chosen strategy is simple_byte
  1977  01FA  3A00               	xorlw	0	; case 0
  1978  01FB  1903               	skipnz
  1979  01FC  2922               	goto	l4360
  1980  01FD  3A01               	xorlw	1	; case 1
  1981  01FE  1903               	skipnz
  1982  01FF  295C               	goto	l4424
  1983  0200  3A03               	xorlw	3	; case 2
  1984  0201  1903               	skipnz
  1985  0202  2990               	goto	l4478
  1986  0203  3A01               	xorlw	1	; case 3
  1987  0204  1903               	skipnz
  1988  0205  29BE               	goto	l4522
  1989  0206  3A07               	xorlw	7	; case 4
  1990  0207  1903               	skipnz
  1991  0208  29EB               	goto	l4556
  1992  0209  2863               	goto	l706
  1993  020A                     l4562:	
  1994                           
  1995                           ;main.c: 825: {
  1996                           ;main.c: 826: if(isFinishedTwentySecondsTimer())
  1997  020A  118A  267E  118A   	fcall	_isFinishedTwentySecondsTimer
  1998  020D  3A00               	xorlw	0
  1999  020E  1903               	skipnz
  2000  020F  28B9               	goto	l4278
  2001                           
  2002                           ;main.c: 827: {
  2003                           ;main.c: 828: PBOD6 =0;
  2004  0210  1703               	bsf	3,6	;RP1=1, select bank3
  2005  0211  1308               	bcf	8,6
  2006                           
  2007                           ;main.c: 829: PB6 = 1;
  2008  0212  1283               	bcf	3,5	;RP0=0, select bank0
  2009  0213  1303               	bcf	3,6	;RP1=0, select bank0
  2010  0214  1706               	bsf	6,6
  2011                           
  2012                           ;main.c: 830: PA6 = 0;
  2013  0215  1305               	bcf	5,6
  2014                           
  2015                           ;main.c: 837: if((getAdOriginalCh14Value() > 2800))
  2016  0216  118A  242C  118A   	fcall	_getAdOriginalCh14Value
  2017  0219  300A               	movlw	10
  2018  021A  0257               	subwf	?_getAdOriginalCh14Value+1,w
  2019  021B  30F1               	movlw	241
  2020  021C  1903               	skipnz
  2021  021D  0256               	subwf	?_getAdOriginalCh14Value,w
  2022  021E  1C03               	skipc
  2023  021F  2A22               	goto	l4570
  2024                           
  2025                           ;main.c: 838: DACR0=0x0F;
  2026  0220  300F               	movlw	15
  2027  0221  2A23               	goto	L9
  2028  0222                     l4570:	
  2029                           
  2030                           ;main.c: 839: else
  2031                           ;main.c: 840: DACR0=0x07;
  2032  0222  3007               	movlw	7
  2033  0223                     L9:	
  2034  0223  1683               	bsf	3,5	;RP0=1, select bank1
  2035  0224  0088               	movwf	8	;volatile
  2036                           
  2037                           ;main.c: 842: ucADC4_Step = ADC4_STEP_FOURTH;
  2038  0225  3004               	movlw	4
  2039  0226  1283               	bcf	3,5	;RP0=0, select bank0
  2040  0227                     L8:	
  2041  0227  00DB               	movwf	main@ucADC4_Step
  2042                           
  2043                           ;main.c: 843: }
  2044  0228  2840               	goto	l4210
  2045  0229                     l4572:	
  2046                           
  2047                           ;main.c: 851: {
  2048                           ;main.c: 852: static unsigned char ucTimer1s = 0;
  2049                           ;main.c: 853: if(ucTimer1s < 5)
  2050  0229  3005               	movlw	5
  2051  022A  0262               	subwf	main@ucTimer1s,w
  2052  022B  1803               	skipnc
  2053  022C  2A2F               	goto	l4576
  2054                           
  2055                           ;main.c: 854: {
  2056                           ;main.c: 855: ucTimer1s++;
  2057  022D  0AE2               	incf	main@ucTimer1s,f
  2058                           
  2059                           ;main.c: 856: }
  2060  022E  2840               	goto	l4210
  2061  022F                     l4576:	
  2062                           
  2063                           ;main.c: 857: else
  2064                           ;main.c: 858: {
  2065                           ;main.c: 859: ucTimer1s = 0;
  2066  022F  01E2               	clrf	main@ucTimer1s
  2067                           
  2068                           ;main.c: 860: PB6 = 1;
  2069  0230  1706               	bsf	6,6
  2070                           
  2071                           ;main.c: 861: PBOD6 = 1;
  2072  0231  1683               	bsf	3,5	;RP0=1, select bank3
  2073  0232  1703               	bsf	3,6	;RP1=1, select bank3
  2074  0233  1708               	bsf	8,6
  2075                           
  2076                           ;main.c: 862: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  2077  0234  1283               	bcf	3,5	;RP0=0, select bank0
  2078  0235  1303               	bcf	3,6	;RP1=0, select bank0
  2079  0236  01DA               	clrf	main@enumMainLoopStep
  2080  0237  0ADA               	incf	main@enumMainLoopStep,f
  2081                           
  2082                           ;main.c: 863: ucADC4_Step = ADC4_STEP_INIT;
  2083  0238  01DB               	clrf	main@ucADC4_Step
  2084  0239  2840               	goto	l4210
  2085  023A                     l4586:	
  2086  023A  1283               	bcf	3,5	;RP0=0, select bank0
  2087  023B  085B               	movf	main@ucADC4_Step,w
  2088                           
  2089                           ; Switch size 1, requested type "space"
  2090                           ; Number of cases is 5, Range of values is 0 to 4
  2091                           ; switch strategies available:
  2092                           ; Name         Instructions Cycles
  2093                           ; simple_byte           16     9 (average)
  2094                           ; direct_byte           17     7 (fixed)
  2095                           ; jumptable            260     6 (fixed)
  2096                           ; rangetable             9     6 (fixed)
  2097                           ; spacedrange           16     9 (fixed)
  2098                           ; locatedrange           5     3 (fixed)
  2099                           ;	Chosen strategy is simple_byte
  2100  023C  3A00               	xorlw	0	; case 0
  2101  023D  1903               	skipnz
  2102  023E  28B6               	goto	l4276
  2103  023F  3A01               	xorlw	1	; case 1
  2104  0240  1903               	skipnz
  2105  0241  28BD               	goto	l4280
  2106  0242  3A03               	xorlw	3	; case 2
  2107  0243  1903               	skipnz
  2108  0244  29F9               	goto	l4560
  2109  0245  3A01               	xorlw	1	; case 3
  2110  0246  1903               	skipnz
  2111  0247  2A0A               	goto	l4562
  2112  0248  3A07               	xorlw	7	; case 4
  2113  0249  1903               	skipnz
  2114  024A  2A29               	goto	l4572
  2115  024B  2863               	goto	l706
  2116  024C                     l883:	
  2117                           ;main.c: 889: {
  2118                           ;main.c: 890: case HOUR_3_BRANCH_STEP_FIRST:
  2119                           
  2120                           
  2121                           ;main.c: 891: {
  2122                           ;main.c: 892: PA7 = 1;
  2123  024C  1785               	bsf	5,7
  2124                           
  2125                           ;main.c: 893: PAOD7 = 1;
  2126  024D  1683               	bsf	3,5	;RP0=1, select bank3
  2127  024E  303C               	movlw	60
  2128  024F  1703               	bsf	3,6	;RP1=1, select bank3
  2129  0250  1787               	bsf	7,7
  2130                           
  2131                           ;main.c: 894: startThreeHoursTimer(60);
  2132  0251  1283               	bcf	3,5	;RP0=0, select bank0
  2133  0252  1303               	bcf	3,6	;RP1=0, select bank0
  2134  0253  00A0               	movwf	?_startThreeHoursTimer
  2135  0254  01A1               	clrf	?_startThreeHoursTimer+1
  2136  0255  118A  261C  118A   	fcall	_startThreeHoursTimer
  2137                           
  2138                           ;main.c: 896: enumBranchStep = HOUR_3_BRANCH_STEP_SECOND;
  2139  0258  1283               	bcf	3,5	;RP0=0, select bank0
  2140  0259  01D9               	clrf	main@enumBranchStep
  2141  025A  0AD9               	incf	main@enumBranchStep,f
  2142                           
  2143                           ;main.c: 897: break;
  2144  025B  2840               	goto	l4210
  2145  025C                     l4592:	
  2146                           
  2147                           ;main.c: 901: {
  2148                           ;main.c: 902: static unsigned char ucTimer20s = 0;
  2149                           ;main.c: 904: if(ucTimer20s < 200)
  2150  025C  30C8               	movlw	200
  2151  025D  1683               	bsf	3,5	;RP0=1, select bank1
  2152  025E  023D               	subwf	main@ucTimer20s^(0+128),w
  2153  025F  1803               	skipnc
  2154  0260  2A69               	goto	l4606
  2155                           
  2156                           ;main.c: 905: {
  2157                           ;main.c: 906: ucTimer20s++;
  2158  0261  0ABD               	incf	main@ucTimer20s^(0+128),f
  2159                           
  2160                           ;main.c: 907: PB0 = 1;
  2161  0262  1283               	bcf	3,5	;RP0=0, select bank0
  2162  0263  1406               	bsf	6,0
  2163                           
  2164                           ;main.c: 908: PA0 = 1;
  2165  0264  1405               	bsf	5,0
  2166                           
  2167                           ;main.c: 909: PA1 = 1;
  2168  0265  1485               	bsf	5,1
  2169                           
  2170                           ;main.c: 910: PA2 = 1;
  2171  0266  1505               	bsf	5,2
  2172                           
  2173                           ;main.c: 911: PA3 = 1;
  2174  0267  1585               	bsf	5,3
  2175                           
  2176                           ;main.c: 912: }
  2177  0268  2840               	goto	l4210
  2178  0269                     l4606:	
  2179  0269  3002               	movlw	2
  2180                           
  2181                           ;main.c: 913: else
  2182                           ;main.c: 914: {
  2183                           ;main.c: 916: ucTimer20s = 0;
  2184  026A  01BD               	clrf	main@ucTimer20s^(0+128)
  2185                           
  2186                           ;main.c: 919: enumBranchStep = HOUR_3_BRANCH_STEP_THIRD;
  2187  026B  1283               	bcf	3,5	;RP0=0, select bank0
  2188  026C  00D9               	movwf	main@enumBranchStep
  2189  026D  2840               	goto	l4210
  2190  026E                     l890:	
  2191                           ;main.c: 922: }
  2192                           ;main.c: 924: case HOUR_3_BRANCH_STEP_THIRD:
  2193                           
  2194                           
  2195                           ;main.c: 925: {
  2196                           ;main.c: 926: PA6 = 0;
  2197  026E  1305               	bcf	5,6
  2198                           
  2199                           ;main.c: 928: if(isFinishedThreeHoursTimer())
  2200  026F  118A  2678  118A   	fcall	_isFinishedThreeHoursTimer
  2201  0272  3A00               	xorlw	0
  2202  0273  1903               	skipnz
  2203  0274  2A78               	goto	l4616
  2204                           
  2205                           ;main.c: 929: {
  2206                           ;main.c: 930: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2207  0275  1283               	bcf	3,5	;RP0=0, select bank0
  2208  0276  01D9               	clrf	main@enumBranchStep
  2209  0277  28B2               	goto	l4274
  2210  0278                     l4616:	
  2211                           
  2212                           ;main.c: 933: else
  2213                           ;main.c: 934: {
  2214                           ;main.c: 935: static unsigned char ucTimerX1P5s = 0;
  2215                           ;main.c: 937: if(getAdOriginalCh1Value() < 130)
  2216  0278  118A  2423  118A   	fcall	_getAdOriginalCh1Value
  2217  027B  3000               	movlw	0
  2218  027C  0257               	subwf	?_getAdOriginalCh1Value+1,w
  2219  027D  3082               	movlw	130
  2220  027E  1903               	skipnz
  2221  027F  0256               	subwf	?_getAdOriginalCh1Value,w
  2222  0280  1803               	skipnc
  2223  0281  2A85               	goto	l4620
  2224                           
  2225                           ;main.c: 938: {
  2226                           ;main.c: 939: ucTimerX1P5s = 0;
  2227  0282  1683               	bsf	3,5	;RP0=1, select bank1
  2228  0283  01BF               	clrf	main@ucTimerX1P5s^(0+128)
  2229                           
  2230                           ;main.c: 940: }
  2231  0284  2A87               	goto	l4622
  2232  0285                     l4620:	
  2233                           
  2234                           ;main.c: 941: else
  2235                           ;main.c: 942: {
  2236                           ;main.c: 943: ucTimerX1P5s++;
  2237  0285  1683               	bsf	3,5	;RP0=1, select bank1
  2238  0286  0ABF               	incf	main@ucTimerX1P5s^(0+128),f
  2239  0287                     l4622:	
  2240                           
  2241                           ;main.c: 944: }
  2242                           ;main.c: 946: if(ucTimerX1P5s >= 1)
  2243  0287  083F               	movf	main@ucTimerX1P5s^(0+128),w
  2244  0288  1903               	btfsc	3,2
  2245  0289  2A96               	goto	l4636
  2246                           
  2247                           ;main.c: 947: {
  2248                           ;main.c: 948: ucTimerX1P5s = 0;
  2249  028A  01BF               	clrf	main@ucTimerX1P5s^(0+128)
  2250                           
  2251                           ;main.c: 949: PAOD7 = 0;
  2252  028B  1703               	bsf	3,6	;RP1=1, select bank3
  2253  028C  1387               	bcf	7,7
  2254                           
  2255                           ;main.c: 950: PA7 = 0;
  2256  028D  1283               	bcf	3,5	;RP0=0, select bank0
  2257  028E  1303               	bcf	3,6	;RP1=0, select bank0
  2258  028F  1385               	bcf	5,7
  2259                           
  2260                           ;main.c: 951: clearThreeHoursTimer();
  2261  0290  118A  25C8  118A   	fcall	_clearThreeHoursTimer
  2262                           
  2263                           ;main.c: 953: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2264  0293  1283               	bcf	3,5	;RP0=0, select bank0
  2265  0294  01D9               	clrf	main@enumBranchStep
  2266  0295  2875               	goto	l4238
  2267  0296                     l4636:	
  2268                           
  2269                           ;main.c: 957: else
  2270                           ;main.c: 958: {
  2271                           ;main.c: 959: static unsigned char ucTimerX2P5s = 0;
  2272                           ;main.c: 961: if(getAdOriginalCh14Value() >= 1950)
  2273  0296  118A  242C  118A   	fcall	_getAdOriginalCh14Value
  2274  0299  3007               	movlw	7
  2275  029A  0257               	subwf	?_getAdOriginalCh14Value+1,w
  2276  029B  309E               	movlw	158
  2277  029C  1903               	skipnz
  2278  029D  0256               	subwf	?_getAdOriginalCh14Value,w
  2279  029E  1C03               	skipc
  2280  029F  2AA3               	goto	l4640
  2281                           
  2282                           ;main.c: 962: {
  2283                           ;main.c: 963: ucTimerX2P5s++;
  2284  02A0  1683               	bsf	3,5	;RP0=1, select bank1
  2285  02A1  0AC0               	incf	main@ucTimerX2P5s^(0+128),f
  2286                           
  2287                           ;main.c: 964: }
  2288  02A2  2AA5               	goto	l4642
  2289  02A3                     l4640:	
  2290                           
  2291                           ;main.c: 965: else
  2292                           ;main.c: 966: {
  2293                           ;main.c: 967: ucTimerX2P5s = 0;
  2294  02A3  1683               	bsf	3,5	;RP0=1, select bank1
  2295  02A4  01C0               	clrf	main@ucTimerX2P5s^(0+128)
  2296  02A5                     l4642:	
  2297                           
  2298                           ;main.c: 968: }
  2299                           ;main.c: 970: if(ucTimerX2P5s >= 1)
  2300  02A5  0840               	movf	main@ucTimerX2P5s^(0+128),w
  2301  02A6  1903               	btfsc	3,2
  2302  02A7  2AAA               	goto	l4646
  2303                           
  2304                           ;main.c: 971: {
  2305                           ;main.c: 972: ucTimerX2P5s = 0;
  2306  02A8  01C0               	clrf	main@ucTimerX2P5s^(0+128)
  2307                           
  2308                           ;main.c: 973: }
  2309  02A9  2840               	goto	l4210
  2310  02AA                     l4646:	
  2311                           
  2312                           ;main.c: 974: else
  2313                           ;main.c: 975: {
  2314                           ;main.c: 976: clearPinPortAndTimer();
  2315  02AA  118A  25B2  118A   	fcall	_clearPinPortAndTimer
  2316  02AD  2860               	goto	l4228
  2317  02AE                     l4652:	
  2318  02AE  0859               	movf	main@enumBranchStep,w
  2319                           
  2320                           ; Switch size 1, requested type "space"
  2321                           ; Number of cases is 3, Range of values is 0 to 2
  2322                           ; switch strategies available:
  2323                           ; Name         Instructions Cycles
  2324                           ; simple_byte           10     6 (average)
  2325                           ; direct_byte           13     7 (fixed)
  2326                           ; jumptable            260     6 (fixed)
  2327                           ; rangetable             7     6 (fixed)
  2328                           ; spacedrange           12     9 (fixed)
  2329                           ; locatedrange           3     3 (fixed)
  2330                           ;	Chosen strategy is simple_byte
  2331  02AF  3A00               	xorlw	0	; case 0
  2332  02B0  1903               	skipnz
  2333  02B1  2A4C               	goto	l883
  2334  02B2  3A01               	xorlw	1	; case 1
  2335  02B3  1903               	skipnz
  2336  02B4  2A5C               	goto	l4592
  2337  02B5  3A03               	xorlw	3	; case 2
  2338  02B6  1903               	skipnz
  2339  02B7  2A6E               	goto	l890
  2340  02B8  2863               	goto	l706
  2341  02B9                     l910:	
  2342                           ;main.c: 1006: {
  2343                           ;main.c: 1007: case INTERNAL_FIRST_STEP:
  2344                           
  2345                           
  2346                           ;main.c: 1008: {
  2347                           ;main.c: 1009: PB0 = 0;
  2348  02B9  1283               	bcf	3,5	;RP0=0, select bank0
  2349  02BA  1006               	bcf	6,0
  2350                           
  2351                           ;main.c: 1010: PB1 = 0;
  2352  02BB  1086               	bcf	6,1
  2353                           
  2354                           ;main.c: 1011: PA0 = 0;
  2355  02BC  1005               	bcf	5,0
  2356                           
  2357                           ;main.c: 1012: PA1 = 0;
  2358  02BD  1085               	bcf	5,1
  2359                           
  2360                           ;main.c: 1013: PA2 = 0;
  2361  02BE  1105               	bcf	5,2
  2362                           
  2363                           ;main.c: 1014: PA3 = 0;
  2364  02BF  1185               	bcf	5,3
  2365                           
  2366                           ;main.c: 1015: PBOD6 = 0;
  2367  02C0  1683               	bsf	3,5	;RP0=1, select bank3
  2368  02C1  1703               	bsf	3,6	;RP1=1, select bank3
  2369  02C2  1308               	bcf	8,6
  2370                           
  2371                           ;main.c: 1016: PB6 = 1;
  2372  02C3  1283               	bcf	3,5	;RP0=0, select bank0
  2373  02C4  1303               	bcf	3,6	;RP1=0, select bank0
  2374  02C5  1706               	bsf	6,6
  2375                           
  2376                           ;main.c: 1017: PA6 =0;
  2377  02C6  1305               	bcf	5,6
  2378                           
  2379                           ;main.c: 1019: enumInteralStep = INTERNAL_SECOND_STEP;
  2380  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  2381  02C8  01BC               	clrf	main@enumInteralStep^(0+128)
  2382  02C9  0ABC               	incf	main@enumInteralStep^(0+128),f
  2383                           
  2384                           ;main.c: 1020: break;
  2385  02CA  2840               	goto	l4210
  2386  02CB                     l4654:	
  2387                           
  2388                           ;main.c: 1024: {
  2389                           ;main.c: 1025: static unsigned char ucTimer1s = 0;
  2390                           ;main.c: 1027: if(getAdOriginalCh14Value() <= 1000)
  2391  02CB  118A  242C  118A   	fcall	_getAdOriginalCh14Value
  2392  02CE  3003               	movlw	3
  2393  02CF  0257               	subwf	?_getAdOriginalCh14Value+1,w
  2394  02D0  30E9               	movlw	233
  2395  02D1  1903               	skipnz
  2396  02D2  0256               	subwf	?_getAdOriginalCh14Value,w
  2397  02D3  1803               	skipnc
  2398  02D4  2AD8               	goto	l4658
  2399                           
  2400                           ;main.c: 1028: {
  2401                           ;main.c: 1029: ucTimer1s++;
  2402  02D5  1683               	bsf	3,5	;RP0=1, select bank1
  2403  02D6  0ABB               	incf	main@cTimer1s_809^(0+128),f
  2404                           
  2405                           ;main.c: 1030: }
  2406  02D7  2ADA               	goto	l4660
  2407  02D8                     l4658:	
  2408                           
  2409                           ;main.c: 1031: else
  2410                           ;main.c: 1032: ucTimer1s = 0;
  2411  02D8  1683               	bsf	3,5	;RP0=1, select bank1
  2412  02D9  01BB               	clrf	main@cTimer1s_809^(0+128)
  2413  02DA                     l4660:	
  2414                           
  2415                           ;main.c: 1034: if(ucTimer1s >= 10)
  2416  02DA  300A               	movlw	10
  2417  02DB  023B               	subwf	main@cTimer1s_809^(0+128),w
  2418  02DC  1C03               	skipc
  2419  02DD  2840               	goto	l4210
  2420                           
  2421                           ;main.c: 1035: {
  2422                           ;main.c: 1036: enumInteralStep = INTERNAL_THIRD_STEP;
  2423  02DE  3002               	movlw	2
  2424  02DF  00BC               	movwf	main@enumInteralStep^(0+128)
  2425                           
  2426                           ;main.c: 1037: ucTimer1s = 0;
  2427  02E0  01BB               	clrf	main@cTimer1s_809^(0+128)
  2428  02E1  2840               	goto	l4210
  2429  02E2                     l4666:	
  2430                           
  2431                           ;main.c: 1043: {
  2432                           ;main.c: 1044: static unsigned char ucTimerP3s = 0;
  2433                           ;main.c: 1046: if(getAdOriginalCh14Value() >= 1950)
  2434  02E2  118A  242C  118A   	fcall	_getAdOriginalCh14Value
  2435  02E5  3007               	movlw	7
  2436  02E6  0257               	subwf	?_getAdOriginalCh14Value+1,w
  2437  02E7  309E               	movlw	158
  2438  02E8  1903               	skipnz
  2439  02E9  0256               	subwf	?_getAdOriginalCh14Value,w
  2440  02EA  1C03               	skipc
  2441  02EB  2AEF               	goto	l4670
  2442                           
  2443                           ;main.c: 1047: {
  2444                           ;main.c: 1048: ucTimerP3s++;
  2445  02EC  1683               	bsf	3,5	;RP0=1, select bank1
  2446  02ED  0ABE               	incf	main@ucTimerP3s^(0+128),f
  2447                           
  2448                           ;main.c: 1049: }
  2449  02EE  2AF1               	goto	l4672
  2450  02EF                     l4670:	
  2451                           
  2452                           ;main.c: 1050: else
  2453                           ;main.c: 1051: ucTimerP3s = 0;
  2454  02EF  1683               	bsf	3,5	;RP0=1, select bank1
  2455  02F0  01BE               	clrf	main@ucTimerP3s^(0+128)
  2456  02F1                     l4672:	
  2457                           
  2458                           ;main.c: 1053: if(ucTimerP3s >= 3)
  2459  02F1  3003               	movlw	3
  2460  02F2  023E               	subwf	main@ucTimerP3s^(0+128),w
  2461  02F3  1C03               	skipc
  2462  02F4  2840               	goto	l4210
  2463                           
  2464                           ;main.c: 1054: {
  2465                           ;main.c: 1055: enumInteralStep = INTERNAL_FIRST_STEP;
  2466  02F5  01BC               	clrf	main@enumInteralStep^(0+128)
  2467                           
  2468                           ;main.c: 1056: ucTimerP3s = 0;
  2469  02F6  01BE               	clrf	main@ucTimerP3s^(0+128)
  2470                           
  2471                           ;main.c: 1057: clearAllTimer();
  2472  02F7  118A  25BF  118A   	fcall	_clearAllTimer
  2473                           
  2474                           ;main.c: 1059: DACR0=0x0F;
  2475  02FA  300F               	movlw	15
  2476  02FB  0088               	movwf	8	;volatile
  2477                           
  2478                           ;main.c: 1060: initPin();
  2479  02FC  118A  25E8  118A   	fcall	_initPin
  2480                           
  2481                           ;main.c: 1063: enumMainLoopStep = MAIN_LOOP_STEP_INIT;
  2482  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  2483  0300  1303               	bcf	3,6	;RP1=0, select bank0
  2484  0301  01DA               	clrf	main@enumMainLoopStep
  2485  0302  2840               	goto	l4210
  2486  0303                     l4686:	
  2487  0303  1683               	bsf	3,5	;RP0=1, select bank1
  2488  0304  083C               	movf	main@enumInteralStep^(0+128),w
  2489                           
  2490                           ; Switch size 1, requested type "space"
  2491                           ; Number of cases is 3, Range of values is 0 to 2
  2492                           ; switch strategies available:
  2493                           ; Name         Instructions Cycles
  2494                           ; simple_byte           10     6 (average)
  2495                           ; direct_byte           13     7 (fixed)
  2496                           ; jumptable            260     6 (fixed)
  2497                           ; rangetable             7     6 (fixed)
  2498                           ; spacedrange           12     9 (fixed)
  2499                           ; locatedrange           3     3 (fixed)
  2500                           ;	Chosen strategy is simple_byte
  2501  0305  3A00               	xorlw	0	; case 0
  2502  0306  1903               	skipnz
  2503  0307  2AB9               	goto	l910
  2504  0308  3A01               	xorlw	1	; case 1
  2505  0309  1903               	skipnz
  2506  030A  2ACB               	goto	l4654
  2507  030B  3A03               	xorlw	3	; case 2
  2508  030C  1903               	skipnz
  2509  030D  2AE2               	goto	l4666
  2510  030E  2863               	goto	l706
  2511  030F                     l4690:	
  2512  030F  1283               	bcf	3,5	;RP0=0, select bank0
  2513  0310  085A               	movf	main@enumMainLoopStep,w
  2514                           
  2515                           ; Switch size 1, requested type "space"
  2516                           ; Number of cases is 8, Range of values is 0 to 9
  2517                           ; switch strategies available:
  2518                           ; Name         Instructions Cycles
  2519                           ; simple_byte           25    13 (average)
  2520                           ; direct_byte           27     7 (fixed)
  2521                           ; jumptable            260     6 (fixed)
  2522                           ; rangetable            14     6 (fixed)
  2523                           ; spacedrange           26     9 (fixed)
  2524                           ; locatedrange          10     3 (fixed)
  2525                           ;	Chosen strategy is simple_byte
  2526  0311  3A00               	xorlw	0	; case 0
  2527  0312  1903               	skipnz
  2528  0313  284E               	goto	l4218
  2529  0314  3A01               	xorlw	1	; case 1
  2530  0315  1903               	skipnz
  2531  0316  2864               	goto	l4230
  2532  0317  3A03               	xorlw	3	; case 2
  2533  0318  1903               	skipnz
  2534  0319  287B               	goto	l715
  2535  031A  3A01               	xorlw	1	; case 3
  2536  031B  1903               	skipnz
  2537  031C  287E               	goto	l4244
  2538  031D  3A07               	xorlw	7	; case 4
  2539  031E  1903               	skipnz
  2540  031F  28A4               	goto	l4268
  2541  0320  3A01               	xorlw	1	; case 5
  2542  0321  1903               	skipnz
  2543  0322  28AC               	goto	l4272
  2544  0323  3A0D               	xorlw	13	; case 8
  2545  0324  1903               	skipnz
  2546  0325  2AAE               	goto	l4652
  2547  0326  3A01               	xorlw	1	; case 9
  2548  0327  1903               	skipnz
  2549  0328  2B03               	goto	l4686
  2550  0329  2863               	goto	l706
  2551  032A  118A  2811         	ljmp	start
  2552  032C                     __end_of_main:	
  2553                           
  2554                           	psect	swtext1
  2555  0600                     __pswtext1:	
  2556  0600                     S4908:	
  2557  0600  118A  28F2         	ljmp	l755
  2558  0602  118A  28F5         	ljmp	l4300
  2559  0604  118A  28FE         	ljmp	l4310
  2560  0606  118A  2904         	ljmp	l4320
  2561  0608  118A  290A         	ljmp	l4330
  2562  060A  118A  2910         	ljmp	l4340
  2563  060C  118A  291A         	ljmp	l4350
  2564                           
  2565                           	psect	swtext2
  2566  060E                     __pswtext2:	
  2567  060E                     S4910:	
  2568  060E  118A  292E         	ljmp	l783
  2569  0610  118A  2931         	ljmp	l4364
  2570  0612  118A  293A         	ljmp	l4374
  2571  0614  118A  2940         	ljmp	l4384
  2572  0616  118A  2946         	ljmp	l4394
  2573  0618  118A  294C         	ljmp	l4404
  2574  061A  118A  2955         	ljmp	l4414
  2575                           
  2576                           	psect	swtext3
  2577  0638                     __pswtext3:	
  2578  0638                     S4912:	
  2579  0638  118A  2968         	ljmp	l810
  2580  063A  118A  296C         	ljmp	l4428
  2581  063C  118A  2975         	ljmp	l4438
  2582  063E  118A  297B         	ljmp	l4448
  2583  0640  118A  2981         	ljmp	l4458
  2584  0642  118A  2989         	ljmp	l4468
  2585                           
  2586                           	psect	text778
  2587  04E7                     __ptext778:	
  2588 ;; =============== function _main ends ============
  2589                           
  2590                           
  2591 ;; *************** function _process_AD_Converter_Value *****************
  2592 ;; Defined at:
  2593 ;;		line 249 in file "C:\190604\AK7030-OTP\common.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;		None
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;		None
  2598 ;; Return value:  Size  Location     Type
  2599 ;;		None               void
  2600 ;; Registers used:
  2601 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2602 ;; Tracked objects:
  2603 ;;		On entry : 60/20
  2604 ;;		On exit  : 40/0
  2605 ;;		Unchanged: FFE9F/0
  2606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2607 ;;      Params:         0       0       0       0       0
  2608 ;;      Locals:         0       0       0       0       0
  2609 ;;      Temps:          0       0       0       0       0
  2610 ;;      Totals:         0       0       0       0       0
  2611 ;;Total ram usage:        0 bytes
  2612 ;; Hardware stack levels used:    1
  2613 ;; Hardware stack levels required when called:    4
  2614 ;; This function calls:
  2615 ;;		_getAD_ConvertFlag
  2616 ;;		_setAD_ConvertFlag
  2617 ;;		_AD_Sample
  2618 ;;		_adc_test_init
  2619 ;;		_setAdcSampleChannel
  2620 ;;		_adc_start
  2621 ;; This function is called by:
  2622 ;;		_main
  2623 ;; This function uses a non-reentrant model
  2624 ;;
  2625  04E7                     _process_AD_Converter_Value:	
  2626                           
  2627                           ;common.c: 199: return adc_convert_flag;
  2628                           
  2629                           ; Regs used in _getAD_ConvertFlag: [wreg]
  2630                           
  2631                           ;common.c: 250: if(getAD_ConvertFlag())
  2632                           
  2633                           ; Regs used in _process_AD_Converter_Value: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2634  04E7  0839               	movf	_adc_convert_flag^(0+128),w
  2635  04E8  3A00               	xorlw	0
  2636  04E9  1903               	skipnz
  2637  04EA  0008               	return
  2638                           
  2639                           ;common.c: 251: {
  2640                           ;common.c: 252: setAD_ConvertFlag(0);
  2641  04EB  3000               	movlw	0
  2642  04EC  251F  118A         	fcall	_setAD_ConvertFlag
  2643                           
  2644                           ;common.c: 253: AD_Sample();
  2645  04EE  2524  118A         	fcall	_AD_Sample
  2646                           
  2647                           ;common.c: 254: if(4 == sampleChannelSelect)
  2648  04F0  086E               	movf	_sampleChannelSelect,w
  2649  04F1  3A04               	xorlw	4
  2650  04F2  1D03               	skipz
  2651  04F3  2CF8               	goto	l4180
  2652                           
  2653                           ;common.c: 255: adc_test_init(4,3);
  2654  04F4  3003               	movlw	3
  2655  04F5  00A0               	movwf	?_adc_test_init
  2656  04F6  3004               	movlw	4
  2657  04F7  2D01               	goto	L11
  2658  04F8                     l4180:	
  2659                           
  2660                           ;common.c: 256: else if(1 == sampleChannelSelect)
  2661  04F8  0B6E               	decfsz	_sampleChannelSelect,w
  2662  04F9  2CFE               	goto	l4184
  2663                           
  2664                           ;common.c: 257: adc_test_init(1,3);
  2665  04FA  3003               	movlw	3
  2666  04FB  00A0               	movwf	?_adc_test_init
  2667  04FC  3001               	movlw	1
  2668  04FD  2D01               	goto	L11
  2669  04FE                     l4184:	
  2670                           
  2671                           ;common.c: 258: else
  2672                           ;common.c: 259: adc_test_init(14,3);
  2673  04FE  3003               	movlw	3
  2674  04FF  00A0               	movwf	?_adc_test_init
  2675  0500  300E               	movlw	14
  2676  0501                     L11:	
  2677  0501  2508  118A         	fcall	_adc_test_init
  2678                           
  2679                           ;common.c: 260: setAdcSampleChannel(sampleChannelSelect);
  2680  0503  1283               	bcf	3,5	;RP0=0, select bank0
  2681  0504  086E               	movf	_sampleChannelSelect,w
  2682  0505  2598  118A         	fcall	_setAdcSampleChannel
  2683                           
  2684                           ;common.c: 261: adc_start();
  2685  0507  2D95               	ljmp	l3888
  2686  0508                     __end_of_process_AD_Converter_Value:	
  2687  0508                     __ptext802:	
  2688 ;; =============== function _dac_init ends ============
  2689                           
  2690                           
  2691 ;; *************** function _adc_test_init *****************
  2692 ;; Defined at:
  2693 ;;		line 85 in file "C:\190604\AK7030-OTP\periph.c"
  2694 ;; Parameters:    Size  Location     Type
  2695 ;;  channel         1    wreg     unsigned char 
  2696 ;;  ref             1    0[BANK0 ] unsigned char 
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;  channel         1    2[BANK0 ] unsigned char 
  2699 ;; Return value:  Size  Location     Type
  2700 ;;		None               void
  2701 ;; Registers used:
  2702 ;;		wreg, status,2, status,0
  2703 ;; Tracked objects:
  2704 ;;		On entry : 60/0
  2705 ;;		On exit  : 60/20
  2706 ;;		Unchanged: FFF9F/0
  2707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2708 ;;      Params:         0       1       0       0       0
  2709 ;;      Locals:         0       1       0       0       0
  2710 ;;      Temps:          0       1       0       0       0
  2711 ;;      Totals:         0       3       0       0       0
  2712 ;;Total ram usage:        3 bytes
  2713 ;; Hardware stack levels used:    1
  2714 ;; Hardware stack levels required when called:    2
  2715 ;; This function calls:
  2716 ;;		Nothing
  2717 ;; This function is called by:
  2718 ;;		_main
  2719 ;;		_process_AD_Converter_Value
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722  0508                     _adc_test_init:	
  2723                           
  2724                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  2725                           ;adc_test_init@channel stored from wreg
  2726  0508  00A2               	movwf	adc_test_init@channel
  2727                           
  2728                           ;periph.c: 86: ADCON0 = 0x00;
  2729  0509  019F               	clrf	31	;volatile
  2730                           
  2731                           ;periph.c: 87: ADCON0|=channel<<2;
  2732  050A  00A1               	movwf	??_adc_test_init
  2733  050B  1003               	clrc
  2734  050C  0DA1               	rlf	??_adc_test_init,f
  2735  050D  1003               	clrc
  2736  050E  0D21               	rlf	??_adc_test_init,w
  2737  050F  049F               	iorwf	31,f	;volatile
  2738                           
  2739                           ;periph.c: 88: ADCON1|=ref<<6;
  2740  0510  0820               	movf	adc_test_init@ref,w
  2741  0511  00A1               	movwf	??_adc_test_init
  2742  0512  0CA1               	rrf	??_adc_test_init,f
  2743  0513  0CA1               	rrf	??_adc_test_init,f
  2744  0514  0C21               	rrf	??_adc_test_init,w
  2745  0515  39C0               	andlw	192
  2746  0516  1683               	bsf	3,5	;RP0=1, select bank1
  2747  0517  049F               	iorwf	31,f	;volatile
  2748                           
  2749                           ;periph.c: 89: ADON=1;
  2750  0518  1283               	bcf	3,5	;RP0=0, select bank0
  2751  0519  141F               	bsf	31,0
  2752                           
  2753                           ;periph.c: 90: ADIE=1;
  2754  051A  1683               	bsf	3,5	;RP0=1, select bank1
  2755  051B  150D               	bsf	13,2
  2756  051C  0008               	return
  2757  051D                     __end_of_adc_test_init:	
  2758  051D                     __ptext788:	
  2759 ;; =============== function _setAD_ConvertFlag ends ============
  2760                           
  2761                           
  2762 ;; *************** function _getAD_ConvertFlag *****************
  2763 ;; Defined at:
  2764 ;;		line 198 in file "C:\190604\AK7030-OTP\common.c"
  2765 ;; Parameters:    Size  Location     Type
  2766 ;;		None
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;		None
  2769 ;; Return value:  Size  Location     Type
  2770 ;;                  1    wreg      unsigned char 
  2771 ;; Registers used:
  2772 ;;		wreg
  2773 ;; Tracked objects:
  2774 ;;		On entry : 60/20
  2775 ;;		On exit  : 60/20
  2776 ;;		Unchanged: FFF9F/0
  2777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2778 ;;      Params:         0       0       0       0       0
  2779 ;;      Locals:         0       0       0       0       0
  2780 ;;      Temps:          0       0       0       0       0
  2781 ;;      Totals:         0       0       0       0       0
  2782 ;;Total ram usage:        0 bytes
  2783 ;; Hardware stack levels used:    1
  2784 ;; Hardware stack levels required when called:    2
  2785 ;; This function calls:
  2786 ;;		Nothing
  2787 ;; This function is called by:
  2788 ;;		_process_AD_Converter_Value
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791  051D                     _getAD_ConvertFlag:	
  2792                           
  2793                           ;common.c: 199: return adc_convert_flag;
  2794                           
  2795                           ; Regs used in _getAD_ConvertFlag: [wreg]
  2796  051D  0839               	movf	_adc_convert_flag^(0+128),w
  2797  051E  0008               	return
  2798  051F                     __end_of_getAD_ConvertFlag:	
  2799  051F                     __ptext787:	
  2800 ;; =============== function _getAdOriginalValue ends ============
  2801                           
  2802                           
  2803 ;; *************** function _setAD_ConvertFlag *****************
  2804 ;; Defined at:
  2805 ;;		line 204 in file "C:\190604\AK7030-OTP\common.c"
  2806 ;; Parameters:    Size  Location     Type
  2807 ;;  flag            1    wreg     unsigned char 
  2808 ;; Auto vars:     Size  Location     Type
  2809 ;;  flag            1    0[BANK0 ] unsigned char 
  2810 ;; Return value:  Size  Location     Type
  2811 ;;		None               void
  2812 ;; Registers used:
  2813 ;;		wreg
  2814 ;; Tracked objects:
  2815 ;;		On entry : 60/20
  2816 ;;		On exit  : 60/20
  2817 ;;		Unchanged: FFF9F/0
  2818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2819 ;;      Params:         0       0       0       0       0
  2820 ;;      Locals:         0       1       0       0       0
  2821 ;;      Temps:          0       0       0       0       0
  2822 ;;      Totals:         0       1       0       0       0
  2823 ;;Total ram usage:        1 bytes
  2824 ;; Hardware stack levels used:    1
  2825 ;; Hardware stack levels required when called:    2
  2826 ;; This function calls:
  2827 ;;		Nothing
  2828 ;; This function is called by:
  2829 ;;		_process_AD_Converter_Value
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832  051F                     _setAD_ConvertFlag:	
  2833                           
  2834                           ; Regs used in _setAD_ConvertFlag: [wreg]
  2835                           ;setAD_ConvertFlag@flag stored from wreg
  2836  051F  1283               	bcf	3,5	;RP0=0, select bank0
  2837  0520  00A0               	movwf	setAD_ConvertFlag@flag
  2838                           
  2839                           ;common.c: 205: adc_convert_flag = flag;
  2840  0521  1683               	bsf	3,5	;RP0=1, select bank1
  2841  0522  00B9               	movwf	_adc_convert_flag^(0+128)
  2842  0523  0008               	return
  2843  0524                     __end_of_setAD_ConvertFlag:	
  2844  0524                     __ptext780:	
  2845 ;; =============== function _clearPinPortAndTimer ends ============
  2846                           
  2847                           
  2848 ;; *************** function _AD_Sample *****************
  2849 ;; Defined at:
  2850 ;;		line 275 in file "C:\190604\AK7030-OTP\common.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;		None
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;  index           1    4[BANK0 ] unsigned char 
  2855 ;; Return value:  Size  Location     Type
  2856 ;;		None               void
  2857 ;; Registers used:
  2858 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2859 ;; Tracked objects:
  2860 ;;		On entry : 60/20
  2861 ;;		On exit  : 60/0
  2862 ;;		Unchanged: FFE9F/0
  2863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2864 ;;      Params:         0       0       0       0       0
  2865 ;;      Locals:         0       1       0       0       0
  2866 ;;      Temps:          0       2       0       0       0
  2867 ;;      Totals:         0       3       0       0       0
  2868 ;;Total ram usage:        3 bytes
  2869 ;; Hardware stack levels used:    1
  2870 ;; Hardware stack levels required when called:    3
  2871 ;; This function calls:
  2872 ;;		_getAdOriginalValue
  2873 ;; This function is called by:
  2874 ;;		_process_AD_Converter_Value
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877  0524                     _AD_Sample:	
  2878                           
  2879                           ;common.c: 276: if(sampleTimes < 6)
  2880                           
  2881                           ; Regs used in _AD_Sample: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2882  0524  3006               	movlw	6
  2883  0525  1283               	bcf	3,5	;RP0=0, select bank0
  2884  0526  0258               	subwf	_sampleTimes,w
  2885  0527  1803               	skipnc
  2886  0528  0008               	return
  2887                           
  2888                           ;common.c: 277: {
  2889                           ;common.c: 279: buffer_Sample_AD_Value[sampleTimes] = getAdOriginalValue();
  2890  0529  258C  118A         	fcall	_getAdOriginalValue
  2891  052B  1003               	clrc
  2892  052C  0D58               	rlf	_sampleTimes,w
  2893  052D  3EA0               	addlw	_buffer_Sample_AD_Value& (0+255)
  2894  052E  0084               	movwf	4
  2895  052F  0820               	movf	?_getAdOriginalValue,w
  2896  0530  1383               	bcf	3,7	;select IRP bank1
  2897  0531  0080               	movwf	0
  2898  0532  0A84               	incf	4,f
  2899  0533  0821               	movf	?_getAdOriginalValue+1,w
  2900  0534  0080               	movwf	0
  2901                           
  2902                           ;common.c: 281: if(sampleTimes == 0)
  2903  0535  08D8               	movf	_sampleTimes,f
  2904  0536  1D03               	skipz
  2905  0537  2D41               	goto	l4128
  2906                           
  2907                           ;common.c: 282: {
  2908                           ;common.c: 283: multiFilterMaxValue = buffer_Sample_AD_Value[0];
  2909  0538  1683               	bsf	3,5	;RP0=1, select bank1
  2910  0539  0821               	movf	(_buffer_Sample_AD_Value+1)^(0+128),w
  2911  053A  00AF               	movwf	(_multiFilterMaxValue+1)^(0+128)
  2912  053B  0820               	movf	_buffer_Sample_AD_Value^(0+128),w
  2913  053C  00AE               	movwf	_multiFilterMaxValue^(0+128)
  2914                           
  2915                           ;common.c: 284: multiFilterMinValue = buffer_Sample_AD_Value[0];
  2916  053D  0821               	movf	(_buffer_Sample_AD_Value+1)^(0+128),w
  2917  053E  00B1               	movwf	(_multiFilterMinValue+1)^(0+128)
  2918  053F  0820               	movf	_buffer_Sample_AD_Value^(0+128),w
  2919  0540  00B0               	movwf	_multiFilterMinValue^(0+128)
  2920  0541                     l4128:	
  2921                           
  2922                           ;common.c: 285: }
  2923                           ;common.c: 287: if(multiFilterMaxValue < buffer_Sample_AD_Value[sampleTimes])
  2924  0541  25A0  118A         	fcall	PL3	;call to abstracted procedure
  2925  0543  022F               	subwf	(_multiFilterMaxValue+1)^(0+128),w
  2926  0544  1D03               	skipz
  2927  0545  2D4A               	goto	u1195
  2928  0546  1283               	bcf	3,5	;RP0=0, select bank0
  2929  0547  0822               	movf	??_AD_Sample,w
  2930  0548  1683               	bsf	3,5	;RP0=1, select bank1
  2931  0549  022E               	subwf	_multiFilterMaxValue^(0+128),w
  2932  054A                     u1195:	
  2933  054A  1803               	skipnc
  2934  054B  2D54               	goto	l1687
  2935                           
  2936                           ;common.c: 288: {
  2937                           ;common.c: 289: multiFilterMaxValue = buffer_Sample_AD_Value[sampleTimes];
  2938  054C  1283               	bcf	3,5	;RP0=0, select bank0
  2939  054D  1003               	clrc
  2940  054E  25AC  118A         	fcall	PL9	;call to abstracted procedure
  2941  0550  00AE               	movwf	_multiFilterMaxValue^(0+128)
  2942  0551  0A84               	incf	4,f
  2943  0552  0800               	movf	0,w
  2944  0553  00AF               	movwf	(_multiFilterMaxValue+1)^(0+128)
  2945  0554                     l1687:	
  2946                           
  2947                           ;common.c: 290: }
  2948                           ;common.c: 291: if(multiFilterMinValue > buffer_Sample_AD_Value[sampleTimes])
  2949  0554  25A0  118A         	fcall	PL3	;call to abstracted procedure
  2950  0556  0831               	movf	(_multiFilterMinValue+1)^(0+128),w
  2951  0557  1283               	bcf	3,5	;RP0=0, select bank0
  2952  0558  0223               	subwf	??_AD_Sample+1,w
  2953  0559  1D03               	skipz
  2954  055A  2D5F               	goto	u1205
  2955  055B  1683               	bsf	3,5	;RP0=1, select bank1
  2956  055C  0830               	movf	_multiFilterMinValue^(0+128),w
  2957  055D  1283               	bcf	3,5	;RP0=0, select bank0
  2958  055E  0222               	subwf	??_AD_Sample,w
  2959  055F                     u1205:	
  2960  055F  1803               	skipnc
  2961  0560  2D68               	goto	l4134
  2962                           
  2963                           ;common.c: 292: {
  2964                           ;common.c: 293: multiFilterMinValue = buffer_Sample_AD_Value[sampleTimes];
  2965  0561  1003               	clrc
  2966  0562  25AC  118A         	fcall	PL9	;call to abstracted procedure
  2967  0564  00B0               	movwf	_multiFilterMinValue^(0+128)
  2968  0565  0A84               	incf	4,f
  2969  0566  0800               	movf	0,w
  2970  0567  00B1               	movwf	(_multiFilterMinValue+1)^(0+128)
  2971  0568                     l4134:	
  2972                           
  2973                           ;common.c: 298: sampleTimes++;
  2974  0568  1283               	bcf	3,5	;RP0=0, select bank0
  2975  0569  3006               	movlw	6
  2976  056A  0AD8               	incf	_sampleTimes,f
  2977                           
  2978                           ;common.c: 300: if(sampleTimes >= 6)
  2979  056B  0258               	subwf	_sampleTimes,w
  2980  056C  1C03               	skipc
  2981  056D  0008               	return
  2982                           
  2983                           ;common.c: 301: {
  2984                           ;common.c: 302: sampleTimes = 0;
  2985  056E  01D8               	clrf	_sampleTimes
  2986                           
  2987                           ;common.c: 305: {
  2988                           ;common.c: 307: sampleCH14Value = ((multiFilterSumValue - multiFilterMaxValue - multiFil
      +                          terMinValue))>> 2;
  2989  056F  086E               	movf	_sampleChannelSelect,w
  2990  0570  3A0E               	xorlw	14
  2991  0571  1D03               	skipz
  2992  0572  2D75               	goto	l4144
  2993                           
  2994                           ;common.c: 308: sampleChannelSelect = 4;
  2995  0573  3004               	movlw	4
  2996  0574  2D7D               	goto	L12
  2997  0575                     l4144:	
  2998                           ;common.c: 309: }
  2999                           
  3000                           
  3001                           ;common.c: 311: {
  3002                           ;common.c: 312: sampleCH4Value = ((multiFilterSumValue - multiFilterMaxValue - multiFilt
      +                          erMinValue))>> 2;
  3003  0575  086E               	movf	_sampleChannelSelect,w
  3004  0576  3A04               	xorlw	4
  3005  0577  1D03               	skipz
  3006  0578  2D7C               	goto	l4150
  3007                           
  3008                           ;common.c: 313: sampleChannelSelect = 1;
  3009  0579  01EE               	clrf	_sampleChannelSelect
  3010  057A  0AEE               	incf	_sampleChannelSelect,f
  3011                           
  3012                           ;common.c: 314: }
  3013  057B  2D7E               	goto	l4154
  3014  057C                     l4150:	
  3015                           
  3016                           ;common.c: 318: sampleChannelSelect = 14;
  3017  057C  300E               	movlw	14
  3018  057D                     L12:	
  3019  057D  00EE               	movwf	_sampleChannelSelect
  3020  057E                     l4154:	
  3021                           ;common.c: 319: }
  3022                           
  3023                           
  3024                           ;common.c: 324: }
  3025                           ;common.c: 326: for(unsigned char index = 0; index < 6;index++)
  3026  057E  01A4               	clrf	AD_Sample@index
  3027  057F                     l4160:	
  3028                           
  3029                           ;common.c: 327: buffer_Sample_AD_Value[index] = 0;
  3030  057F  1003               	clrc
  3031  0580  0D24               	rlf	AD_Sample@index,w
  3032  0581  3EA0               	addlw	_buffer_Sample_AD_Value& (0+255)
  3033  0582  0084               	movwf	4
  3034  0583  3006               	movlw	6
  3035  0584  0180               	clrf	0
  3036  0585  0A84               	incf	4,f
  3037  0586  0180               	clrf	0
  3038  0587  0AA4               	incf	AD_Sample@index,f
  3039  0588  0224               	subwf	AD_Sample@index,w
  3040  0589  1803               	btfsc	3,0
  3041  058A  0008               	return
  3042  058B  2D7F               	goto	l4160
  3043  058C                     __end_of_AD_Sample:	
  3044  058C                     __ptext786:	
  3045 ;; =============== function _setAdcSampleChannel ends ============
  3046                           
  3047                           
  3048 ;; *************** function _getAdOriginalValue *****************
  3049 ;; Defined at:
  3050 ;;		line 210 in file "C:\190604\AK7030-OTP\common.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;		None
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;		None
  3055 ;; Return value:  Size  Location     Type
  3056 ;;                  2    0[BANK0 ] unsigned int 
  3057 ;; Registers used:
  3058 ;;		wreg
  3059 ;; Tracked objects:
  3060 ;;		On entry : 60/0
  3061 ;;		On exit  : 60/0
  3062 ;;		Unchanged: FFF9F/0
  3063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3064 ;;      Params:         0       2       0       0       0
  3065 ;;      Locals:         0       0       0       0       0
  3066 ;;      Temps:          0       0       0       0       0
  3067 ;;      Totals:         0       2       0       0       0
  3068 ;;Total ram usage:        2 bytes
  3069 ;; Hardware stack levels used:    1
  3070 ;; Hardware stack levels required when called:    2
  3071 ;; This function calls:
  3072 ;;		Nothing
  3073 ;; This function is called by:
  3074 ;;		_AD_Sample
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077  058C                     _getAdOriginalValue:	
  3078                           
  3079                           ;common.c: 211: return adc_original_value;
  3080                           
  3081                           ; Regs used in _getAdOriginalValue: [wreg]
  3082  058C  1683               	bsf	3,5	;RP0=1, select bank1
  3083  058D  082D               	movf	(_adc_original_value+1)^(0+128),w
  3084  058E  1283               	bcf	3,5	;RP0=0, select bank0
  3085  058F  00A1               	movwf	?_getAdOriginalValue+1
  3086  0590  1683               	bsf	3,5	;RP0=1, select bank1
  3087  0591  082C               	movf	_adc_original_value^(0+128),w
  3088  0592  1283               	bcf	3,5	;RP0=0, select bank0
  3089  0593  00A0               	movwf	?_getAdOriginalValue
  3090  0594  0008               	return
  3091  0595                     __end_of_getAdOriginalValue:	
  3092  0595                     __ptext798:	
  3093 ;; =============== function _isPermitSampleTime ends ============
  3094                           
  3095                           
  3096 ;; *************** function _adc_start *****************
  3097 ;; Defined at:
  3098 ;;		line 100 in file "C:\190604\AK7030-OTP\periph.c"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;		None
  3101 ;; Auto vars:     Size  Location     Type
  3102 ;;		None
  3103 ;; Return value:  Size  Location     Type
  3104 ;;		None               void
  3105 ;; Registers used:
  3106 ;;		None
  3107 ;; Tracked objects:
  3108 ;;		On entry : 40/20
  3109 ;;		On exit  : 60/0
  3110 ;;		Unchanged: FFF9F/0
  3111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3112 ;;      Params:         0       0       0       0       0
  3113 ;;      Locals:         0       0       0       0       0
  3114 ;;      Temps:          0       0       0       0       0
  3115 ;;      Totals:         0       0       0       0       0
  3116 ;;Total ram usage:        0 bytes
  3117 ;; Hardware stack levels used:    1
  3118 ;; Hardware stack levels required when called:    2
  3119 ;; This function calls:
  3120 ;;		Nothing
  3121 ;; This function is called by:
  3122 ;;		_main
  3123 ;;		_process_AD_Converter_Value
  3124 ;; This function uses a non-reentrant model
  3125 ;;
  3126  0595                     _adc_start:	
  3127  0595                     l3888:	
  3128                           ; Regs used in _adc_start: []
  3129                           
  3130                           
  3131                           ;periph.c: 101: GO=1;
  3132  0595  1283               	bcf	3,5	;RP0=0, select bank0
  3133  0596  149F               	bsf	31,1
  3134  0597  0008               	return
  3135  0598                     __end_of_adc_start:	
  3136  0598                     __ptext785:	
  3137 ;; =============== function _clearAllTimer ends ============
  3138                           
  3139                           
  3140 ;; *************** function _setAdcSampleChannel *****************
  3141 ;; Defined at:
  3142 ;;		line 95 in file "C:\190604\AK7030-OTP\periph.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;  ucChannel       1    wreg     unsigned char 
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;  ucChannel       1    1[BANK0 ] unsigned char 
  3147 ;; Return value:  Size  Location     Type
  3148 ;;		None               void
  3149 ;; Registers used:
  3150 ;;		wreg, status,2, status,0
  3151 ;; Tracked objects:
  3152 ;;		On entry : 60/0
  3153 ;;		On exit  : 60/0
  3154 ;;		Unchanged: FFF9F/0
  3155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3156 ;;      Params:         0       0       0       0       0
  3157 ;;      Locals:         0       1       0       0       0
  3158 ;;      Temps:          0       1       0       0       0
  3159 ;;      Totals:         0       2       0       0       0
  3160 ;;Total ram usage:        2 bytes
  3161 ;; Hardware stack levels used:    1
  3162 ;; Hardware stack levels required when called:    2
  3163 ;; This function calls:
  3164 ;;		Nothing
  3165 ;; This function is called by:
  3166 ;;		_process_AD_Converter_Value
  3167 ;; This function uses a non-reentrant model
  3168 ;;
  3169  0598                     _setAdcSampleChannel:	
  3170                           
  3171                           ; Regs used in _setAdcSampleChannel: [wreg+status,2+status,0]
  3172                           ;setAdcSampleChannel@ucChannel stored from wreg
  3173  0598  00A1               	movwf	setAdcSampleChannel@ucChannel
  3174                           
  3175                           ;periph.c: 96: ADCON0|=ucChannel<<2;
  3176  0599  00A0               	movwf	??_setAdcSampleChannel
  3177  059A  1003               	clrc
  3178  059B  0DA0               	rlf	??_setAdcSampleChannel,f
  3179  059C  1003               	clrc
  3180  059D  0D20               	rlf	??_setAdcSampleChannel,w
  3181  059E  049F               	iorwf	31,f	;volatile
  3182  059F  0008               	return
  3183  05A0                     __end_of_setAdcSampleChannel:	
  3184  05A0                     PL3:	
  3185  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  3186  05A1  1003               	clrc
  3187  05A2  0D58               	rlf	_sampleTimes,w
  3188  05A3  3EA0               	addlw	_buffer_Sample_AD_Value& (0+255)
  3189  05A4  0084               	movwf	4
  3190  05A5  0800               	movf	0,w
  3191  05A6  00A2               	movwf	??_AD_Sample
  3192  05A7  0A84               	incf	4,f
  3193  05A8  0800               	movf	0,w
  3194  05A9  00A3               	movwf	??_AD_Sample+1
  3195  05AA  1683               	bsf	3,5	;RP0=1, select bank1
  3196  05AB  0008               	return
  3197  05AC                     PL9:	
  3198  05AC  0D58               	rlf	_sampleTimes,w
  3199  05AD  3EA0               	addlw	_buffer_Sample_AD_Value& (0+255)
  3200  05AE  0084               	movwf	4
  3201  05AF  0800               	movf	0,w
  3202  05B0  1683               	bsf	3,5	;RP0=1, select bank1
  3203  05B1  0008               	return
  3204                           
  3205                           	psect	text779
  3206  05B2                     __ptext779:	
  3207 ;; =============== function _process_AD_Converter_Value ends ============
  3208                           
  3209                           
  3210 ;; *************** function _clearPinPortAndTimer *****************
  3211 ;; Defined at:
  3212 ;;		line 92 in file "C:\190604\AK7030-OTP\main.c"
  3213 ;; Parameters:    Size  Location     Type
  3214 ;;		None
  3215 ;; Auto vars:     Size  Location     Type
  3216 ;;		None
  3217 ;; Return value:  Size  Location     Type
  3218 ;;		None               void
  3219 ;; Registers used:
  3220 ;;		status,2, status,0, pclath, cstack
  3221 ;; Tracked objects:
  3222 ;;		On entry : 140/0
  3223 ;;		On exit  : 160/20
  3224 ;;		Unchanged: FFE9F/0
  3225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3226 ;;      Params:         0       0       0       0       0
  3227 ;;      Locals:         0       0       0       0       0
  3228 ;;      Temps:          0       0       0       0       0
  3229 ;;      Totals:         0       0       0       0       0
  3230 ;;Total ram usage:        0 bytes
  3231 ;; Hardware stack levels used:    1
  3232 ;; Hardware stack levels required when called:    4
  3233 ;; This function calls:
  3234 ;;		_clearAllTimer
  3235 ;; This function is called by:
  3236 ;;		_main
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239  05B2                     _clearPinPortAndTimer:	
  3240                           
  3241                           ;main.c: 93: PB0 = 0;
  3242                           
  3243                           ; Regs used in _clearPinPortAndTimer: [status,2+status,0+pclath+cstack]
  3244  05B2  1283               	bcf	3,5	;RP0=0, select bank0
  3245  05B3  1006               	bcf	6,0
  3246                           
  3247                           ;main.c: 94: PA0 = 0;
  3248  05B4  1005               	bcf	5,0
  3249                           
  3250                           ;main.c: 95: PA1 = 0;
  3251  05B5  1085               	bcf	5,1
  3252                           
  3253                           ;main.c: 96: PA2 = 0;
  3254  05B6  1105               	bcf	5,2
  3255                           
  3256                           ;main.c: 97: PA3 = 0;
  3257  05B7  1185               	bcf	5,3
  3258                           
  3259                           ;main.c: 98: PAOD7 = 0;
  3260  05B8  1683               	bsf	3,5	;RP0=1, select bank3
  3261  05B9  1703               	bsf	3,6	;RP1=1, select bank3
  3262  05BA  1387               	bcf	7,7
  3263                           
  3264                           ;main.c: 99: PA7 = 0;
  3265  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  3266  05BC  1303               	bcf	3,6	;RP1=0, select bank0
  3267  05BD  1385               	bcf	5,7
  3268                           
  3269                           ;main.c: 100: clearAllTimer();
  3270  05BE  2DBF               	ljmp	l4106
  3271  05BF                     __end_of_clearPinPortAndTimer:	
  3272  05BF                     __ptext784:	
  3273 ;; =============== function _getAdOriginalCh14Value ends ============
  3274                           
  3275                           
  3276 ;; *************** function _clearAllTimer *****************
  3277 ;; Defined at:
  3278 ;;		line 83 in file "C:\190604\AK7030-OTP\main.c"
  3279 ;; Parameters:    Size  Location     Type
  3280 ;;		None
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;		None
  3283 ;; Return value:  Size  Location     Type
  3284 ;;		None               void
  3285 ;; Registers used:
  3286 ;;		status,2, status,0, pclath, cstack
  3287 ;; Tracked objects:
  3288 ;;		On entry : 140/20
  3289 ;;		On exit  : 160/20
  3290 ;;		Unchanged: FFE9F/0
  3291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3292 ;;      Params:         0       0       0       0       0
  3293 ;;      Locals:         0       0       0       0       0
  3294 ;;      Temps:          0       0       0       0       0
  3295 ;;      Totals:         0       0       0       0       0
  3296 ;;Total ram usage:        0 bytes
  3297 ;; Hardware stack levels used:    1
  3298 ;; Hardware stack levels required when called:    3
  3299 ;; This function calls:
  3300 ;;		_clearTwelveHoursTimer
  3301 ;;		_clearThreeHoursTimer
  3302 ;;		_clearTwentySecondsTimer
  3303 ;; This function is called by:
  3304 ;;		_clearPinPortAndTimer
  3305 ;;		_main
  3306 ;; This function uses a non-reentrant model
  3307 ;;
  3308  05BF                     _clearAllTimer:	
  3309  05BF                     l4106:	
  3310                           ; Regs used in _clearAllTimer: [status,2+status,0+pclath+cstack]
  3311                           
  3312                           
  3313                           ;main.c: 84: clearTwelveHoursTimer();
  3314  05BF  25C4  118A         	fcall	_clearTwelveHoursTimer
  3315                           
  3316                           ;main.c: 85: clearThreeHoursTimer();
  3317  05C1  25C8  118A         	fcall	_clearThreeHoursTimer
  3318                           
  3319                           ;main.c: 86: clearTwentySecondsTimer();
  3320  05C3  2DCC               	ljmp	l3846
  3321  05C4                     __end_of_clearAllTimer:	
  3322  05C4                     __ptext809:	
  3323 ;; =============== function _clearThreeHoursTimer ends ============
  3324                           
  3325                           
  3326 ;; *************** function _clearTwelveHoursTimer *****************
  3327 ;; Defined at:
  3328 ;;		line 363 in file "C:\190604\AK7030-OTP\common.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;		None
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;		None
  3333 ;; Return value:  Size  Location     Type
  3334 ;;		None               void
  3335 ;; Registers used:
  3336 ;;		status,2
  3337 ;; Tracked objects:
  3338 ;;		On entry : 140/20
  3339 ;;		On exit  : 160/20
  3340 ;;		Unchanged: FFE9F/0
  3341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3342 ;;      Params:         0       0       0       0       0
  3343 ;;      Locals:         0       0       0       0       0
  3344 ;;      Temps:          0       0       0       0       0
  3345 ;;      Totals:         0       0       0       0       0
  3346 ;;Total ram usage:        0 bytes
  3347 ;; Hardware stack levels used:    1
  3348 ;; Hardware stack levels required when called:    2
  3349 ;; This function calls:
  3350 ;;		Nothing
  3351 ;; This function is called by:
  3352 ;;		_clearAllTimer
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355  05C4                     _clearTwelveHoursTimer:	
  3356                           
  3357                           ;common.c: 364: uiBigTimer = 0;
  3358                           
  3359                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  3360  05C4  1683               	bsf	3,5	;RP0=1, select bank1
  3361  05C5  01B2               	clrf	_uiBigTimer^(0+128)
  3362  05C6  01B3               	clrf	(_uiBigTimer+1)^(0+128)
  3363  05C7  0008               	return
  3364  05C8                     __end_of_clearTwelveHoursTimer:	
  3365  05C8                     __ptext808:	
  3366 ;; =============== function _clearTwentySecondsTimer ends ============
  3367                           
  3368                           
  3369 ;; *************** function _clearThreeHoursTimer *****************
  3370 ;; Defined at:
  3371 ;;		line 369 in file "C:\190604\AK7030-OTP\common.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;		None
  3374 ;; Auto vars:     Size  Location     Type
  3375 ;;		None
  3376 ;; Return value:  Size  Location     Type
  3377 ;;		None               void
  3378 ;; Registers used:
  3379 ;;		status,2
  3380 ;; Tracked objects:
  3381 ;;		On entry : 140/0
  3382 ;;		On exit  : 160/20
  3383 ;;		Unchanged: FFE9F/0
  3384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3385 ;;      Params:         0       0       0       0       0
  3386 ;;      Locals:         0       0       0       0       0
  3387 ;;      Temps:          0       0       0       0       0
  3388 ;;      Totals:         0       0       0       0       0
  3389 ;;Total ram usage:        0 bytes
  3390 ;; Hardware stack levels used:    1
  3391 ;; Hardware stack levels required when called:    2
  3392 ;; This function calls:
  3393 ;;		Nothing
  3394 ;; This function is called by:
  3395 ;;		_clearAllTimer
  3396 ;;		_main
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399  05C8                     _clearThreeHoursTimer:	
  3400                           
  3401                           ;common.c: 370: uiSmallTimer = 0;
  3402                           
  3403                           ; Regs used in _clearThreeHoursTimer: [status,2]
  3404  05C8  1683               	bsf	3,5	;RP0=1, select bank1
  3405  05C9  01B4               	clrf	_uiSmallTimer^(0+128)
  3406  05CA  01B5               	clrf	(_uiSmallTimer+1)^(0+128)
  3407  05CB  0008               	return
  3408  05CC                     __end_of_clearThreeHoursTimer:	
  3409  05CC                     __ptext807:	
  3410 ;; =============== function _initPin ends ============
  3411                           
  3412                           
  3413 ;; *************** function _clearTwentySecondsTimer *****************
  3414 ;; Defined at:
  3415 ;;		line 374 in file "C:\190604\AK7030-OTP\common.c"
  3416 ;; Parameters:    Size  Location     Type
  3417 ;;		None
  3418 ;; Auto vars:     Size  Location     Type
  3419 ;;		None
  3420 ;; Return value:  Size  Location     Type
  3421 ;;		None               void
  3422 ;; Registers used:
  3423 ;;		status,2
  3424 ;; Tracked objects:
  3425 ;;		On entry : 160/20
  3426 ;;		On exit  : 160/20
  3427 ;;		Unchanged: FFE9F/0
  3428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3429 ;;      Params:         0       0       0       0       0
  3430 ;;      Locals:         0       0       0       0       0
  3431 ;;      Temps:          0       0       0       0       0
  3432 ;;      Totals:         0       0       0       0       0
  3433 ;;Total ram usage:        0 bytes
  3434 ;; Hardware stack levels used:    1
  3435 ;; Hardware stack levels required when called:    2
  3436 ;; This function calls:
  3437 ;;		Nothing
  3438 ;; This function is called by:
  3439 ;;		_clearAllTimer
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442  05CC                     _clearTwentySecondsTimer:	
  3443  05CC                     l3846:	
  3444                           ; Regs used in _clearTwentySecondsTimer: [status,2]
  3445                           
  3446                           
  3447                           ;common.c: 375: uiTwentySecondsTimer = 0;
  3448  05CC  01B6               	clrf	_uiTwentySecondsTimer^(0+128)
  3449  05CD  01B7               	clrf	(_uiTwentySecondsTimer+1)^(0+128)
  3450  05CE  0008               	return
  3451  05CF                     __end_of_clearTwentySecondsTimer:	
  3452                           
  3453                           	psect	text781
  3454  041A                     __ptext781:	
  3455 ;; =============== function _AD_Sample ends ============
  3456                           
  3457                           
  3458 ;; *************** function _getAdOriginaCh4Value *****************
  3459 ;; Defined at:
  3460 ;;		line 227 in file "C:\190604\AK7030-OTP\common.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;		None
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;		None
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  2   54[BANK0 ] unsigned int 
  3467 ;; Registers used:
  3468 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3469 ;; Tracked objects:
  3470 ;;		On entry : 60/0
  3471 ;;		On exit  : 160/0
  3472 ;;		Unchanged: FFE00/0
  3473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3474 ;;      Params:         0       2       0       0       0
  3475 ;;      Locals:         0       0       0       0       0
  3476 ;;      Temps:          0       0       0       0       0
  3477 ;;      Totals:         0       2       0       0       0
  3478 ;;Total ram usage:        2 bytes
  3479 ;; Hardware stack levels used:    1
  3480 ;; Hardware stack levels required when called:    3
  3481 ;; This function calls:
  3482 ;;		_Filter
  3483 ;; This function is called by:
  3484 ;;		_main
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487  041A                     _getAdOriginaCh4Value:	
  3488                           
  3489                           ;common.c: 229: return Filter(uiSampleChannelFourth);
  3490                           
  3491                           ; Regs used in _getAdOriginaCh4Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  3492  041A  30C1               	movlw	_uiSampleChannelFourth& (0+255)
  3493  041B  00A0               	movwf	?_Filter
  3494  041C  01A1               	clrf	?_Filter+1
  3495  041D  2435               	fcall	_Filter
  3496  041E  0821               	movf	?_Filter+1,w
  3497  041F  00D7               	movwf	?_getAdOriginaCh4Value+1
  3498  0420  0820               	movf	?_Filter,w
  3499  0421  00D6               	movwf	?_getAdOriginaCh4Value
  3500  0422  0008               	return
  3501  0423                     __end_of_getAdOriginaCh4Value:	
  3502  0423                     __ptext782:	
  3503 ;; =============== function _getAdOriginaCh4Value ends ============
  3504                           
  3505                           
  3506 ;; *************** function _getAdOriginalCh1Value *****************
  3507 ;; Defined at:
  3508 ;;		line 215 in file "C:\190604\AK7030-OTP\common.c"
  3509 ;; Parameters:    Size  Location     Type
  3510 ;;		None
  3511 ;; Auto vars:     Size  Location     Type
  3512 ;;		None
  3513 ;; Return value:  Size  Location     Type
  3514 ;;                  2   54[BANK0 ] unsigned int 
  3515 ;; Registers used:
  3516 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3517 ;; Tracked objects:
  3518 ;;		On entry : 40/0
  3519 ;;		On exit  : 160/0
  3520 ;;		Unchanged: FFE00/0
  3521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3522 ;;      Params:         0       2       0       0       0
  3523 ;;      Locals:         0       0       0       0       0
  3524 ;;      Temps:          0       0       0       0       0
  3525 ;;      Totals:         0       2       0       0       0
  3526 ;;Total ram usage:        2 bytes
  3527 ;; Hardware stack levels used:    1
  3528 ;; Hardware stack levels required when called:    3
  3529 ;; This function calls:
  3530 ;;		_Filter
  3531 ;; This function is called by:
  3532 ;;		_main
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535  0423                     _getAdOriginalCh1Value:	
  3536                           
  3537                           ;common.c: 218: return Filter(uiSampleChannelFirst);
  3538                           
  3539                           ; Regs used in _getAdOriginalCh1Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  3540  0423  3090               	movlw	_uiSampleChannelFirst& (0+255)
  3541  0424  24E2  118A         	fcall	PL10	;call to abstracted procedure
  3542  0426  2435               	fcall	_Filter
  3543  0427  0821               	movf	?_Filter+1,w
  3544  0428  00D7               	movwf	?_getAdOriginalCh1Value+1
  3545  0429  0820               	movf	?_Filter,w
  3546  042A  00D6               	movwf	?_getAdOriginalCh1Value
  3547  042B  0008               	return
  3548  042C                     __end_of_getAdOriginalCh1Value:	
  3549  042C                     __ptext783:	
  3550 ;; =============== function _getAdOriginalCh1Value ends ============
  3551                           
  3552                           
  3553 ;; *************** function _getAdOriginalCh14Value *****************
  3554 ;; Defined at:
  3555 ;;		line 238 in file "C:\190604\AK7030-OTP\common.c"
  3556 ;; Parameters:    Size  Location     Type
  3557 ;;		None
  3558 ;; Auto vars:     Size  Location     Type
  3559 ;;		None
  3560 ;; Return value:  Size  Location     Type
  3561 ;;                  2   54[BANK0 ] unsigned int 
  3562 ;; Registers used:
  3563 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3564 ;; Tracked objects:
  3565 ;;		On entry : 40/0
  3566 ;;		On exit  : 160/0
  3567 ;;		Unchanged: FFE00/0
  3568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3569 ;;      Params:         0       2       0       0       0
  3570 ;;      Locals:         0       0       0       0       0
  3571 ;;      Temps:          0       0       0       0       0
  3572 ;;      Totals:         0       2       0       0       0
  3573 ;;Total ram usage:        2 bytes
  3574 ;; Hardware stack levels used:    1
  3575 ;; Hardware stack levels required when called:    3
  3576 ;; This function calls:
  3577 ;;		_Filter
  3578 ;; This function is called by:
  3579 ;;		_main
  3580 ;; This function uses a non-reentrant model
  3581 ;;
  3582  042C                     _getAdOriginalCh14Value:	
  3583                           
  3584                           ;common.c: 240: return Filter(uiSampleChannelFourteenth);
  3585                           
  3586                           ; Regs used in _getAdOriginalCh14Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  3587  042C  30B8               	movlw	_uiSampleChannelFourteenth& (0+255)
  3588  042D  24E2  118A         	fcall	PL10	;call to abstracted procedure
  3589  042F  2435               	fcall	_Filter
  3590  0430  0821               	movf	?_Filter+1,w
  3591  0431  00D7               	movwf	?_getAdOriginalCh14Value+1
  3592  0432  0820               	movf	?_Filter,w
  3593  0433  00D6               	movwf	?_getAdOriginalCh14Value
  3594  0434  0008               	return
  3595  0435                     __end_of_getAdOriginalCh14Value:	
  3596  0435                     __ptext789:	
  3597 ;; =============== function _getAD_ConvertFlag ends ============
  3598                           
  3599                           
  3600 ;; *************** function _Filter *****************
  3601 ;; Defined at:
  3602 ;;		line 49 in file "C:\190604\AK7030-OTP\common.c"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;  tmpValue        2    0[BANK0 ] PTR int 
  3605 ;;		 -> uiSampleChannelFourteenth(40), uiSampleChannelFourth(40), uiSampleChannelFirst(40), 
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;  cir             2   50[BANK0 ] int 
  3608 ;;  filter_buf     40    6[BANK0 ] unsigned int [20]
  3609 ;;  filter_sum      2   48[BANK0 ] unsigned int 
  3610 ;;  filter_temp     2   46[BANK0 ] unsigned int 
  3611 ;;  i               1   53[BANK0 ] unsigned char 
  3612 ;;  j               1   52[BANK0 ] unsigned char 
  3613 ;; Return value:  Size  Location     Type
  3614 ;;                  2    0[BANK0 ] unsigned int 
  3615 ;; Registers used:
  3616 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3617 ;; Tracked objects:
  3618 ;;		On entry : 60/0
  3619 ;;		On exit  : 160/0
  3620 ;;		Unchanged: FFE00/0
  3621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3622 ;;      Params:         0       2       0       0       0
  3623 ;;      Locals:         0      48       0       0       0
  3624 ;;      Temps:          0       4       0       0       0
  3625 ;;      Totals:         0      54       0       0       0
  3626 ;;Total ram usage:       54 bytes
  3627 ;; Hardware stack levels used:    1
  3628 ;; Hardware stack levels required when called:    2
  3629 ;; This function calls:
  3630 ;;		Nothing
  3631 ;; This function is called by:
  3632 ;;		_getAdOriginalCh1Value
  3633 ;;		_getAdOriginaCh4Value
  3634 ;;		_getAdOriginalCh14Value
  3635 ;; This function uses a non-reentrant model
  3636 ;;
  3637  0435                     _Filter:	
  3638                           
  3639                           ; Regs used in _Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  3640  0435  01D4               	clrf	Filter@j
  3641                           
  3642                           ;common.c: 53: unsigned int filter_temp = 0, filter_sum = 0;
  3643  0436  01CE               	clrf	Filter@filter_temp
  3644  0437  01CF               	clrf	Filter@filter_temp+1
  3645  0438  01D0               	clrf	Filter@filter_sum
  3646  0439  01D1               	clrf	Filter@filter_sum+1
  3647                           
  3648                           ;common.c: 55: unsigned int filter_buf[20];
  3649                           ;common.c: 57: for(int cir = 0;cir < 20; cir++)
  3650  043A  01D2               	clrf	Filter@cir
  3651  043B  01D3               	clrf	Filter@cir+1
  3652  043C                     l3956:	
  3653                           
  3654                           ;common.c: 58: filter_buf[cir] = *tmpValue++;
  3655  043C  1283               	bcf	3,5	;RP0=0, select bank0
  3656  043D  1303               	bcf	3,6	;RP1=0, select bank0
  3657  043E  0820               	movf	Filter@tmpValue,w
  3658  043F  0084               	movwf	4
  3659  0440  1783               	bsf	3,7
  3660  0441  1C21               	btfss	Filter@tmpValue+1,0
  3661  0442  1383               	bcf	3,7
  3662  0443  0800               	movf	0,w
  3663  0444  24D6  118A         	fcall	PL7	;call to abstracted procedure
  3664  0446  0D52               	rlf	Filter@cir,w
  3665  0447  3E26               	addlw	Filter@filter_buf& (0+255)
  3666  0448  0084               	movwf	4
  3667  0449  0822               	movf	??_Filter,w
  3668  044A  1383               	bcf	3,7	;select IRP bank0
  3669  044B  0080               	movwf	0
  3670  044C  0A84               	incf	4,f
  3671  044D  0823               	movf	??_Filter+1,w
  3672  044E  0080               	movwf	0
  3673  044F  3002               	movlw	2
  3674  0450  07A0               	addwf	Filter@tmpValue,f
  3675  0451  1803               	skipnc
  3676  0452  0AA1               	incf	Filter@tmpValue+1,f
  3677  0453  0AD2               	incf	Filter@cir,f
  3678  0454  1903               	skipnz
  3679  0455  0AD3               	incf	Filter@cir+1,f
  3680  0456  0853               	movf	Filter@cir+1,w
  3681  0457  3A80               	xorlw	128
  3682  0458  00FF               	movwf	127
  3683  0459  3080               	movlw	128
  3684  045A  027F               	subwf	127,w
  3685  045B  1D03               	skipz
  3686  045C  2C5F               	goto	u975
  3687  045D  3014               	movlw	20
  3688  045E  0252               	subwf	Filter@cir,w
  3689  045F                     u975:	
  3690  045F  1C03               	skipc
  3691  0460  2C3C               	goto	l3956
  3692                           
  3693                           ;common.c: 61: for(j = 0; j < 20 - 1; j++)
  3694  0461  1283               	bcf	3,5	;RP0=0, select bank0
  3695  0462  1303               	bcf	3,6	;RP1=0, select bank0
  3696  0463  01D4               	clrf	Filter@j
  3697  0464                     l3970:	
  3698                           
  3699                           ;common.c: 62: {
  3700                           ;common.c: 63: for(i = 0; i < 20 - 1 - j; i++)
  3701  0464  01D5               	clrf	Filter@i
  3702  0465                     l3978:	
  3703  0465  01A3               	clrf	??_Filter+1
  3704  0466  0854               	movf	Filter@j,w
  3705  0467  3C13               	sublw	19
  3706  0468  00A2               	movwf	??_Filter
  3707  0469  1C03               	skipc
  3708  046A  03A3               	decf	??_Filter+1,f
  3709  046B  0823               	movf	??_Filter+1,w
  3710  046C  3A80               	xorlw	128
  3711  046D  3C80               	sublw	128
  3712  046E  1D03               	skipz
  3713  046F  2C72               	goto	u995
  3714  0470  0822               	movf	??_Filter,w
  3715  0471  0255               	subwf	Filter@i,w
  3716  0472                     u995:	
  3717  0472  1803               	btfsc	3,0
  3718  0473  2CA7               	goto	l3980
  3719                           
  3720                           ;common.c: 64: {
  3721                           ;common.c: 65: if(filter_buf[i] > filter_buf[i + 1])
  3722  0474  1283               	bcf	3,5	;RP0=0, select bank0
  3723  0475  1303               	bcf	3,6	;RP1=0, select bank0
  3724  0476  1003               	clrc
  3725  0477  24CC  118A         	fcall	PL5	;call to abstracted procedure
  3726  0479  24DC  118A         	fcall	PL8	;call to abstracted procedure
  3727  047B  0800               	movf	0,w
  3728  047C  00A4               	movwf	??_Filter+2
  3729  047D  0A84               	incf	4,f
  3730  047E  0800               	movf	0,w
  3731  047F  00A5               	movwf	??_Filter+3
  3732  0480  0823               	movf	??_Filter+1,w
  3733  0481  0225               	subwf	??_Filter+3,w
  3734  0482  1D03               	skipz
  3735  0483  2C86               	goto	u985
  3736  0484  0822               	movf	??_Filter,w
  3737  0485  0224               	subwf	??_Filter+2,w
  3738  0486                     u985:	
  3739  0486  1803               	skipnc
  3740  0487  2CA5               	goto	l3976
  3741                           
  3742                           ;common.c: 66: {
  3743                           ;common.c: 68: filter_temp = filter_buf[i];
  3744  0488  1003               	clrc
  3745  0489  0D55               	rlf	Filter@i,w
  3746  048A  3E26               	addlw	Filter@filter_buf& (0+255)
  3747  048B  0084               	movwf	4
  3748  048C  0800               	movf	0,w
  3749  048D  00CE               	movwf	Filter@filter_temp
  3750  048E  0A84               	incf	4,f
  3751  048F  0800               	movf	0,w
  3752  0490  00CF               	movwf	Filter@filter_temp+1
  3753                           
  3754                           ;common.c: 70: filter_buf[i] = filter_buf[i + 1];
  3755  0491  24DC  118A         	fcall	PL8	;call to abstracted procedure
  3756  0493  0800               	movf	0,w
  3757  0494  24D6  118A         	fcall	PL7	;call to abstracted procedure
  3758  0496  0D55               	rlf	Filter@i,w
  3759  0497  3E26               	addlw	Filter@filter_buf& (0+255)
  3760  0498  0084               	movwf	4
  3761  0499  0822               	movf	??_Filter,w
  3762  049A  0080               	movwf	0
  3763  049B  0A84               	incf	4,f
  3764  049C  0823               	movf	??_Filter+1,w
  3765  049D  0080               	movwf	0
  3766                           
  3767                           ;common.c: 72: filter_buf[i + 1] = filter_temp;
  3768  049E  24DC  118A         	fcall	PL8	;call to abstracted procedure
  3769  04A0  084E               	movf	Filter@filter_temp,w
  3770  04A1  0080               	movwf	0
  3771  04A2  0A84               	incf	4,f
  3772  04A3  084F               	movf	Filter@filter_temp+1,w
  3773  04A4  0080               	movwf	0
  3774  04A5                     l3976:	
  3775  04A5  0AD5               	incf	Filter@i,f
  3776  04A6  2C65               	goto	l3978
  3777  04A7                     l3980:	
  3778  04A7  1283               	bcf	3,5	;RP0=0, select bank0
  3779  04A8  3013               	movlw	19
  3780  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  3781  04AA  0AD4               	incf	Filter@j,f
  3782  04AB  0254               	subwf	Filter@j,w
  3783  04AC  1C03               	skipc
  3784  04AD  2C64               	goto	l3970
  3785                           
  3786                           ;common.c: 73: }
  3787                           ;common.c: 74: }
  3788                           ;common.c: 75: }
  3789                           ;common.c: 77: for(i = 2; i < 20 - 2; i++)
  3790  04AE  3002               	movlw	2
  3791  04AF  00D5               	movwf	Filter@i
  3792                           
  3793                           ;common.c: 78: {
  3794                           ;common.c: 79: filter_sum += filter_buf[i];
  3795  04B0  1003               	clrc
  3796  04B1                     L13:	
  3797  04B1  24CC  118A         	fcall	PL5	;call to abstracted procedure
  3798  04B3  0822               	movf	??_Filter,w
  3799  04B4  07D0               	addwf	Filter@filter_sum,f
  3800  04B5  1803               	skipnc
  3801  04B6  0AD1               	incf	Filter@filter_sum+1,f
  3802  04B7  0823               	movf	??_Filter+1,w
  3803  04B8  07D1               	addwf	Filter@filter_sum+1,f
  3804  04B9  3012               	movlw	18
  3805  04BA  0AD5               	incf	Filter@i,f
  3806  04BB  0255               	subwf	Filter@i,w
  3807  04BC  1C03               	skipc
  3808  04BD  2CB1               	goto	L13
  3809                           
  3810                           ;common.c: 80: }
  3811                           ;common.c: 82: return (filter_sum >> 4);
  3812  04BE  0851               	movf	Filter@filter_sum+1,w
  3813  04BF  00A1               	movwf	?_Filter+1
  3814  04C0  0850               	movf	Filter@filter_sum,w
  3815  04C1  00A0               	movwf	?_Filter
  3816  04C2  300F               	movlw	15
  3817  04C3  0EA0               	swapf	?_Filter,f
  3818  04C4  0EA1               	swapf	?_Filter+1,f
  3819  04C5  05A0               	andwf	?_Filter,f
  3820  04C6  0821               	movf	?_Filter+1,w
  3821  04C7  39F0               	andlw	240
  3822  04C8  04A0               	iorwf	?_Filter,f
  3823  04C9  300F               	movlw	15
  3824  04CA  05A1               	andwf	?_Filter+1,f
  3825  04CB  0008               	return
  3826  04CC                     __end_of_Filter:	
  3827  04CC                     PL5:	
  3828  04CC  0D55               	rlf	Filter@i,w
  3829  04CD  3E26               	addlw	Filter@filter_buf& (0+255)
  3830  04CE  0084               	movwf	4
  3831  04CF  1383               	bcf	3,7	;select IRP bank0
  3832  04D0  0800               	movf	0,w
  3833  04D1  00A2               	movwf	??_Filter
  3834  04D2  0A84               	incf	4,f
  3835  04D3  0800               	movf	0,w
  3836  04D4  00A3               	movwf	??_Filter+1
  3837  04D5  0008               	return
  3838  04D6                     PL7:	
  3839  04D6  00A2               	movwf	??_Filter
  3840  04D7  0A84               	incf	4,f
  3841  04D8  0800               	movf	0,w
  3842  04D9  00A3               	movwf	??_Filter+1
  3843  04DA  1003               	clrc
  3844  04DB  0008               	return
  3845  04DC                     PL8:	
  3846  04DC  1003               	clrc
  3847  04DD  0D55               	rlf	Filter@i,w
  3848  04DE  3E02               	addlw	2
  3849  04DF  3E26               	addlw	Filter@filter_buf& (0+255)
  3850  04E0  0084               	movwf	4
  3851  04E1  0008               	return
  3852  04E2                     PL10:	
  3853  04E2  1283               	bcf	3,5	;RP0=0, select bank0
  3854  04E3  00A0               	movwf	?_Filter
  3855  04E4  3001               	movlw	1
  3856  04E5  00A1               	movwf	?_Filter+1
  3857  04E6  0008               	return
  3858                           
  3859                           	psect	text790
  3860  0678                     __ptext790:	
  3861 ;; =============== function _Filter ends ============
  3862                           
  3863                           
  3864 ;; *************** function _isFinishedThreeHoursTimer *****************
  3865 ;; Defined at:
  3866 ;;		line 414 in file "C:\190604\AK7030-OTP\common.c"
  3867 ;; Parameters:    Size  Location     Type
  3868 ;;		None
  3869 ;; Auto vars:     Size  Location     Type
  3870 ;;		None
  3871 ;; Return value:  Size  Location     Type
  3872 ;;                  1    wreg      unsigned char 
  3873 ;; Registers used:
  3874 ;;		wreg, status,2, status,0
  3875 ;; Tracked objects:
  3876 ;;		On entry : 60/0
  3877 ;;		On exit  : 60/20
  3878 ;;		Unchanged: FFF9F/0
  3879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3880 ;;      Params:         0       0       0       0       0
  3881 ;;      Locals:         0       0       0       0       0
  3882 ;;      Temps:          0       0       0       0       0
  3883 ;;      Totals:         0       0       0       0       0
  3884 ;;Total ram usage:        0 bytes
  3885 ;; Hardware stack levels used:    1
  3886 ;; Hardware stack levels required when called:    2
  3887 ;; This function calls:
  3888 ;;		Nothing
  3889 ;; This function is called by:
  3890 ;;		_main
  3891 ;; This function uses a non-reentrant model
  3892 ;;
  3893  0678                     _isFinishedThreeHoursTimer:	
  3894                           
  3895                           ;common.c: 415: if(uiSmallTimer == 0)
  3896                           
  3897                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  3898  0678  1683               	bsf	3,5	;RP0=1, select bank1
  3899  0679  0835               	movf	(_uiSmallTimer+1)^(0+128),w
  3900  067A  0434               	iorwf	_uiSmallTimer^(0+128),w
  3901  067B  1903               	btfsc	3,2
  3902                           
  3903                           ;common.c: 416: return 1;
  3904  067C  3401               	retlw	1
  3905                           
  3906                           ;common.c: 417: else
  3907                           ;common.c: 418: return 0;
  3908  067D  3400               	retlw	0
  3909  067E                     __end_of_isFinishedThreeHoursTimer:	
  3910                           
  3911                           	psect	text791
  3912  061C                     __ptext791:	
  3913 ;; =============== function _isFinishedThreeHoursTimer ends ============
  3914                           
  3915                           
  3916 ;; *************** function _startThreeHoursTimer *****************
  3917 ;; Defined at:
  3918 ;;		line 380 in file "C:\190604\AK7030-OTP\common.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;		None
  3923 ;; Return value:  Size  Location     Type
  3924 ;;		None               void
  3925 ;; Registers used:
  3926 ;;		wreg, status,2, status,0
  3927 ;; Tracked objects:
  3928 ;;		On entry : 60/0
  3929 ;;		On exit  : 60/20
  3930 ;;		Unchanged: FFF9F/0
  3931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3932 ;;      Params:         0       2       0       0       0
  3933 ;;      Locals:         0       0       0       0       0
  3934 ;;      Temps:          0       0       0       0       0
  3935 ;;      Totals:         0       2       0       0       0
  3936 ;;Total ram usage:        2 bytes
  3937 ;; Hardware stack levels used:    1
  3938 ;; Hardware stack levels required when called:    2
  3939 ;; This function calls:
  3940 ;;		Nothing
  3941 ;; This function is called by:
  3942 ;;		_main
  3943 ;; This function uses a non-reentrant model
  3944 ;;
  3945  061C                     _startThreeHoursTimer:	
  3946                           
  3947                           ;common.c: 381: if(0 == uiSmallTimer)
  3948                           
  3949                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  3950  061C  1683               	bsf	3,5	;RP0=1, select bank1
  3951  061D  0835               	movf	(_uiSmallTimer+1)^(0+128),w
  3952  061E  0434               	iorwf	_uiSmallTimer^(0+128),w
  3953  061F  1D03               	skipz
  3954  0620  0008               	return
  3955                           
  3956                           ;common.c: 382: uiSmallTimer = uiSetTime;
  3957  0621  1283               	bcf	3,5	;RP0=0, select bank0
  3958  0622  0821               	movf	startThreeHoursTimer@uiSetTime+1,w
  3959  0623  1683               	bsf	3,5	;RP0=1, select bank1
  3960  0624  00B5               	movwf	(_uiSmallTimer+1)^(0+128)
  3961  0625  1283               	bcf	3,5	;RP0=0, select bank0
  3962  0626  0820               	movf	startThreeHoursTimer@uiSetTime,w
  3963  0627  1683               	bsf	3,5	;RP0=1, select bank1
  3964  0628  00B4               	movwf	_uiSmallTimer^(0+128)
  3965  0629  0008               	return
  3966  062A                     __end_of_startThreeHoursTimer:	
  3967                           
  3968                           	psect	text792
  3969  067E                     __ptext792:	
  3970 ;; =============== function _startThreeHoursTimer ends ============
  3971                           
  3972                           
  3973 ;; *************** function _isFinishedTwentySecondsTimer *****************
  3974 ;; Defined at:
  3975 ;;		line 397 in file "C:\190604\AK7030-OTP\common.c"
  3976 ;; Parameters:    Size  Location     Type
  3977 ;;		None
  3978 ;; Auto vars:     Size  Location     Type
  3979 ;;		None
  3980 ;; Return value:  Size  Location     Type
  3981 ;;                  1    wreg      unsigned char 
  3982 ;; Registers used:
  3983 ;;		wreg, status,2, status,0
  3984 ;; Tracked objects:
  3985 ;;		On entry : 60/0
  3986 ;;		On exit  : 60/20
  3987 ;;		Unchanged: FFF9F/0
  3988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3989 ;;      Params:         0       0       0       0       0
  3990 ;;      Locals:         0       0       0       0       0
  3991 ;;      Temps:          0       0       0       0       0
  3992 ;;      Totals:         0       0       0       0       0
  3993 ;;Total ram usage:        0 bytes
  3994 ;; Hardware stack levels used:    1
  3995 ;; Hardware stack levels required when called:    2
  3996 ;; This function calls:
  3997 ;;		Nothing
  3998 ;; This function is called by:
  3999 ;;		_main
  4000 ;; This function uses a non-reentrant model
  4001 ;;
  4002  067E                     _isFinishedTwentySecondsTimer:	
  4003                           
  4004                           ;common.c: 398: if(0 == uiTwentySecondsTimer)
  4005                           
  4006                           ; Regs used in _isFinishedTwentySecondsTimer: [wreg+status,2+status,0]
  4007  067E  1683               	bsf	3,5	;RP0=1, select bank1
  4008  067F  0837               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  4009  0680  0436               	iorwf	_uiTwentySecondsTimer^(0+128),w
  4010  0681  1903               	btfsc	3,2
  4011                           
  4012                           ;common.c: 399: return 1;
  4013  0682  3401               	retlw	1
  4014                           
  4015                           ;common.c: 400: else
  4016                           ;common.c: 401: return 0;
  4017  0683  3400               	retlw	0
  4018  0684                     __end_of_isFinishedTwentySecondsTimer:	
  4019                           
  4020                           	psect	text793
  4021  068A                     __ptext793:	
  4022 ;; =============== function _isFinishedTwentySecondsTimer ends ============
  4023                           
  4024                           
  4025 ;; *************** function _startTwentySecondsTimer *****************
  4026 ;; Defined at:
  4027 ;;		line 391 in file "C:\190604\AK7030-OTP\common.c"
  4028 ;; Parameters:    Size  Location     Type
  4029 ;;		None
  4030 ;; Auto vars:     Size  Location     Type
  4031 ;;		None
  4032 ;; Return value:  Size  Location     Type
  4033 ;;		None               void
  4034 ;; Registers used:
  4035 ;;		wreg
  4036 ;; Tracked objects:
  4037 ;;		On entry : 60/0
  4038 ;;		On exit  : 60/20
  4039 ;;		Unchanged: FFF9F/0
  4040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4041 ;;      Params:         0       0       0       0       0
  4042 ;;      Locals:         0       0       0       0       0
  4043 ;;      Temps:          0       0       0       0       0
  4044 ;;      Totals:         0       0       0       0       0
  4045 ;;Total ram usage:        0 bytes
  4046 ;; Hardware stack levels used:    1
  4047 ;; Hardware stack levels required when called:    2
  4048 ;; This function calls:
  4049 ;;		Nothing
  4050 ;; This function is called by:
  4051 ;;		_main
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054  068A                     _startTwentySecondsTimer:	
  4055                           
  4056                           ;common.c: 392: uiTwentySecondsTimer = 20;
  4057                           
  4058                           ; Regs used in _startTwentySecondsTimer: [wreg]
  4059  068A  3014               	movlw	20
  4060  068B  1683               	bsf	3,5	;RP0=1, select bank1
  4061  068C  00B6               	movwf	_uiTwentySecondsTimer^(0+128)
  4062  068D  01B7               	clrf	(_uiTwentySecondsTimer+1)^(0+128)
  4063  068E  0008               	return
  4064  068F                     __end_of_startTwentySecondsTimer:	
  4065                           
  4066                           	psect	text794
  4067  0684                     __ptext794:	
  4068 ;; =============== function _startTwentySecondsTimer ends ============
  4069                           
  4070                           
  4071 ;; *************** function _isFinishedTwelveHoursTimer *****************
  4072 ;; Defined at:
  4073 ;;		line 406 in file "C:\190604\AK7030-OTP\common.c"
  4074 ;; Parameters:    Size  Location     Type
  4075 ;;		None
  4076 ;; Auto vars:     Size  Location     Type
  4077 ;;		None
  4078 ;; Return value:  Size  Location     Type
  4079 ;;                  1    wreg      unsigned char 
  4080 ;; Registers used:
  4081 ;;		wreg, status,2, status,0
  4082 ;; Tracked objects:
  4083 ;;		On entry : 60/0
  4084 ;;		On exit  : 60/20
  4085 ;;		Unchanged: FFF9F/0
  4086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4087 ;;      Params:         0       0       0       0       0
  4088 ;;      Locals:         0       0       0       0       0
  4089 ;;      Temps:          0       0       0       0       0
  4090 ;;      Totals:         0       0       0       0       0
  4091 ;;Total ram usage:        0 bytes
  4092 ;; Hardware stack levels used:    1
  4093 ;; Hardware stack levels required when called:    2
  4094 ;; This function calls:
  4095 ;;		Nothing
  4096 ;; This function is called by:
  4097 ;;		_main
  4098 ;; This function uses a non-reentrant model
  4099 ;;
  4100  0684                     _isFinishedTwelveHoursTimer:	
  4101                           
  4102                           ;common.c: 407: if(uiBigTimer == 0)
  4103                           
  4104                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  4105  0684  1683               	bsf	3,5	;RP0=1, select bank1
  4106  0685  0833               	movf	(_uiBigTimer+1)^(0+128),w
  4107  0686  0432               	iorwf	_uiBigTimer^(0+128),w
  4108  0687  1903               	btfsc	3,2
  4109                           
  4110                           ;common.c: 408: return 1;
  4111  0688  3401               	retlw	1
  4112                           
  4113                           ;common.c: 409: else
  4114                           ;common.c: 410: return 0;
  4115  0689  3400               	retlw	0
  4116  068A                     __end_of_isFinishedTwelveHoursTimer:	
  4117                           
  4118                           	psect	text795
  4119  062A                     __ptext795:	
  4120 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  4121                           
  4122                           
  4123 ;; *************** function _startTwelveHourTimer *****************
  4124 ;; Defined at:
  4125 ;;		line 352 in file "C:\190604\AK7030-OTP\common.c"
  4126 ;; Parameters:    Size  Location     Type
  4127 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  4128 ;; Auto vars:     Size  Location     Type
  4129 ;;		None
  4130 ;; Return value:  Size  Location     Type
  4131 ;;		None               void
  4132 ;; Registers used:
  4133 ;;		wreg, status,2, status,0
  4134 ;; Tracked objects:
  4135 ;;		On entry : 60/0
  4136 ;;		On exit  : 60/20
  4137 ;;		Unchanged: FFF9F/0
  4138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4139 ;;      Params:         0       2       0       0       0
  4140 ;;      Locals:         0       0       0       0       0
  4141 ;;      Temps:          0       0       0       0       0
  4142 ;;      Totals:         0       2       0       0       0
  4143 ;;Total ram usage:        2 bytes
  4144 ;; Hardware stack levels used:    1
  4145 ;; Hardware stack levels required when called:    2
  4146 ;; This function calls:
  4147 ;;		Nothing
  4148 ;; This function is called by:
  4149 ;;		_main
  4150 ;; This function uses a non-reentrant model
  4151 ;;
  4152  062A                     _startTwelveHourTimer:	
  4153                           
  4154                           ;common.c: 353: if(0 == uiBigTimer)
  4155                           
  4156                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  4157  062A  1683               	bsf	3,5	;RP0=1, select bank1
  4158  062B  0833               	movf	(_uiBigTimer+1)^(0+128),w
  4159  062C  0432               	iorwf	_uiBigTimer^(0+128),w
  4160  062D  1D03               	skipz
  4161  062E  0008               	return
  4162                           
  4163                           ;common.c: 354: uiBigTimer = uiSetTime;
  4164  062F  1283               	bcf	3,5	;RP0=0, select bank0
  4165  0630  0821               	movf	startTwelveHourTimer@uiSetTime+1,w
  4166  0631  1683               	bsf	3,5	;RP0=1, select bank1
  4167  0632  00B3               	movwf	(_uiBigTimer+1)^(0+128)
  4168  0633  1283               	bcf	3,5	;RP0=0, select bank0
  4169  0634  0820               	movf	startTwelveHourTimer@uiSetTime,w
  4170  0635  1683               	bsf	3,5	;RP0=1, select bank1
  4171  0636  00B2               	movwf	_uiBigTimer^(0+128)
  4172  0637  0008               	return
  4173  0638                     __end_of_startTwelveHourTimer:	
  4174                           
  4175                           	psect	text796
  4176  0697                     __ptext796:	
  4177 ;; =============== function _startTwelveHourTimer ends ============
  4178                           
  4179                           
  4180 ;; *************** function _clrSampeTime *****************
  4181 ;; Defined at:
  4182 ;;		line 432 in file "C:\190604\AK7030-OTP\common.c"
  4183 ;; Parameters:    Size  Location     Type
  4184 ;;		None
  4185 ;; Auto vars:     Size  Location     Type
  4186 ;;		None
  4187 ;; Return value:  Size  Location     Type
  4188 ;;		None               void
  4189 ;; Registers used:
  4190 ;;		status,2
  4191 ;; Tracked objects:
  4192 ;;		On entry : 60/20
  4193 ;;		On exit  : 60/20
  4194 ;;		Unchanged: FFF9F/0
  4195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4196 ;;      Params:         0       0       0       0       0
  4197 ;;      Locals:         0       0       0       0       0
  4198 ;;      Temps:          0       0       0       0       0
  4199 ;;      Totals:         0       0       0       0       0
  4200 ;;Total ram usage:        0 bytes
  4201 ;; Hardware stack levels used:    1
  4202 ;; Hardware stack levels required when called:    2
  4203 ;; This function calls:
  4204 ;;		Nothing
  4205 ;; This function is called by:
  4206 ;;		_main
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209  0697                     _clrSampeTime:	
  4210                           
  4211                           ;common.c: 433: timer.timer10msStopWatch = 0;
  4212                           
  4213                           ; Regs used in _clrSampeTime: [status,2]
  4214  0697  01BA               	clrf	_timer^(0+128)
  4215  0698  0008               	return
  4216  0699                     __end_of_clrSampeTime:	
  4217                           
  4218                           	psect	text797
  4219  0671                     __ptext797:	
  4220 ;; =============== function _clrSampeTime ends ============
  4221                           
  4222                           
  4223 ;; *************** function _isPermitSampleTime *****************
  4224 ;; Defined at:
  4225 ;;		line 422 in file "C:\190604\AK7030-OTP\common.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;		None
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;		None
  4230 ;; Return value:  Size  Location     Type
  4231 ;;                  1    wreg      unsigned char 
  4232 ;; Registers used:
  4233 ;;		wreg
  4234 ;; Tracked objects:
  4235 ;;		On entry : 0/0
  4236 ;;		On exit  : 60/20
  4237 ;;		Unchanged: FFF9F/0
  4238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4239 ;;      Params:         0       0       0       0       0
  4240 ;;      Locals:         0       0       0       0       0
  4241 ;;      Temps:          0       0       0       0       0
  4242 ;;      Totals:         0       0       0       0       0
  4243 ;;Total ram usage:        0 bytes
  4244 ;; Hardware stack levels used:    1
  4245 ;; Hardware stack levels required when called:    2
  4246 ;; This function calls:
  4247 ;;		Nothing
  4248 ;; This function is called by:
  4249 ;;		_main
  4250 ;; This function uses a non-reentrant model
  4251 ;;
  4252  0671                     _isPermitSampleTime:	
  4253                           
  4254                           ;common.c: 423: if(timer.timer10msStopWatch >= 10)
  4255                           
  4256                           ; Regs used in _isPermitSampleTime: [wreg]
  4257  0671  300A               	movlw	10
  4258  0672  1683               	bsf	3,5	;RP0=1, select bank1
  4259  0673  1303               	bcf	3,6	;RP1=0, select bank1
  4260  0674  023A               	subwf	_timer^(0+128),w
  4261  0675  1803               	btfsc	3,0
  4262                           
  4263                           ;common.c: 424: {
  4264                           ;common.c: 425: return 1;
  4265  0676  3401               	retlw	1
  4266                           
  4267                           ;common.c: 427: else
  4268                           ;common.c: 428: return 0;
  4269  0677  3400               	retlw	0
  4270  0678                     __end_of_isPermitSampleTime:	
  4271                           
  4272                           	psect	text799
  4273  0661                     __ptext799:	
  4274 ;; =============== function _adc_start ends ============
  4275                           
  4276                           
  4277 ;; *************** function _op2_init *****************
  4278 ;; Defined at:
  4279 ;;		line 45 in file "C:\190604\AK7030-OTP\periph.c"
  4280 ;; Parameters:    Size  Location     Type
  4281 ;;		None
  4282 ;; Auto vars:     Size  Location     Type
  4283 ;;		None
  4284 ;; Return value:  Size  Location     Type
  4285 ;;		None               void
  4286 ;; Registers used:
  4287 ;;		wreg
  4288 ;; Tracked objects:
  4289 ;;		On entry : 17F/20
  4290 ;;		On exit  : 17F/20
  4291 ;;		Unchanged: FFE80/0
  4292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4293 ;;      Params:         0       0       0       0       0
  4294 ;;      Locals:         0       0       0       0       0
  4295 ;;      Temps:          0       0       0       0       0
  4296 ;;      Totals:         0       0       0       0       0
  4297 ;;Total ram usage:        0 bytes
  4298 ;; Hardware stack levels used:    1
  4299 ;; Hardware stack levels required when called:    2
  4300 ;; This function calls:
  4301 ;;		Nothing
  4302 ;; This function is called by:
  4303 ;;		_main
  4304 ;; This function uses a non-reentrant model
  4305 ;;
  4306  0661                     _op2_init:	
  4307                           
  4308                           ;periph.c: 52: OP2CON1=0x10;
  4309                           
  4310                           ; Regs used in _op2_init: [wreg]
  4311  0661  3010               	movlw	16
  4312  0662  009C               	movwf	28	;volatile
  4313                           
  4314                           ;periph.c: 54: OP2CON2=0x10;
  4315  0663  009D               	movwf	29	;volatile
  4316                           
  4317                           ;periph.c: 55: OP2CON0=0x80;
  4318  0664  3080               	movlw	128
  4319  0665  009B               	movwf	27	;volatile
  4320                           
  4321                           ;periph.c: 58: TRISA7=0;
  4322  0666  1385               	bcf	5,7
  4323                           
  4324                           ;periph.c: 60: TRISB7 = 1;
  4325  0667  1786               	bsf	6,7
  4326  0668  0008               	return
  4327  0669                     __end_of_op2_init:	
  4328                           
  4329                           	psect	text800
  4330  0644                     __ptext800:	
  4331 ;; =============== function _op2_init ends ============
  4332                           
  4333                           
  4334 ;; *************** function _op1_init *****************
  4335 ;; Defined at:
  4336 ;;		line 26 in file "C:\190604\AK7030-OTP\periph.c"
  4337 ;; Parameters:    Size  Location     Type
  4338 ;;		None
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;		None
  4341 ;; Return value:  Size  Location     Type
  4342 ;;		None               void
  4343 ;; Registers used:
  4344 ;;		wreg
  4345 ;; Tracked objects:
  4346 ;;		On entry : 17F/20
  4347 ;;		On exit  : 17F/20
  4348 ;;		Unchanged: FFE80/0
  4349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4350 ;;      Params:         0       0       0       0       0
  4351 ;;      Locals:         0       0       0       0       0
  4352 ;;      Temps:          0       0       0       0       0
  4353 ;;      Totals:         0       0       0       0       0
  4354 ;;Total ram usage:        0 bytes
  4355 ;; Hardware stack levels used:    1
  4356 ;; Hardware stack levels required when called:    2
  4357 ;; This function calls:
  4358 ;;		Nothing
  4359 ;; This function is called by:
  4360 ;;		_main
  4361 ;; This function uses a non-reentrant model
  4362 ;;
  4363  0644                     _op1_init:	
  4364                           
  4365                           ;periph.c: 33: OP1CON1=0x02;
  4366                           
  4367                           ; Regs used in _op1_init: [wreg]
  4368  0644  3002               	movlw	2
  4369  0645  1283               	bcf	3,5	;RP0=0, select bank0
  4370  0646  009C               	movwf	28	;volatile
  4371                           
  4372                           ;periph.c: 34: OP1CON2=0xA0;
  4373  0647  30A0               	movlw	160
  4374  0648  009D               	movwf	29	;volatile
  4375                           
  4376                           ;periph.c: 35: OP1CON0=0x80;
  4377  0649  3080               	movlw	128
  4378  064A  009B               	movwf	27	;volatile
  4379                           
  4380                           ;periph.c: 38: TRISB3=1;
  4381  064B  1683               	bsf	3,5	;RP0=1, select bank1
  4382  064C  1586               	bsf	6,3
  4383                           
  4384                           ;periph.c: 40: TRISB5=0;
  4385  064D  1286               	bcf	6,5
  4386  064E  0008               	return
  4387  064F                     __end_of_op1_init:	
  4388                           
  4389                           	psect	text801
  4390  068F                     __ptext801:	
  4391 ;; =============== function _op1_init ends ============
  4392                           
  4393                           
  4394 ;; *************** function _dac_init *****************
  4395 ;; Defined at:
  4396 ;;		line 14 in file "C:\190604\AK7030-OTP\periph.c"
  4397 ;; Parameters:    Size  Location     Type
  4398 ;;		None
  4399 ;; Auto vars:     Size  Location     Type
  4400 ;;		None
  4401 ;; Return value:  Size  Location     Type
  4402 ;;		None               void
  4403 ;; Registers used:
  4404 ;;		wreg
  4405 ;; Tracked objects:
  4406 ;;		On entry : 17F/20
  4407 ;;		On exit  : 17F/20
  4408 ;;		Unchanged: FFE80/0
  4409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4410 ;;      Params:         0       0       0       0       0
  4411 ;;      Locals:         0       0       0       0       0
  4412 ;;      Temps:          0       0       0       0       0
  4413 ;;      Totals:         0       0       0       0       0
  4414 ;;Total ram usage:        0 bytes
  4415 ;; Hardware stack levels used:    1
  4416 ;; Hardware stack levels required when called:    2
  4417 ;; This function calls:
  4418 ;;		Nothing
  4419 ;; This function is called by:
  4420 ;;		_main
  4421 ;; This function uses a non-reentrant model
  4422 ;;
  4423  068F                     _dac_init:	
  4424                           
  4425                           ;periph.c: 15: DACCON|=1;
  4426                           
  4427                           ; Regs used in _dac_init: [wreg]
  4428  068F  1407               	bsf	7,0	;volatile
  4429                           
  4430                           ;periph.c: 17: DACR0=0x0F;
  4431  0690  300F               	movlw	15
  4432  0691  0088               	movwf	8	;volatile
  4433                           
  4434                           ;periph.c: 18: DACCON|=(1)<<2;
  4435  0692  1507               	bsf	7,2	;volatile
  4436  0693  0008               	return
  4437  0694                     __end_of_dac_init:	
  4438                           
  4439                           	psect	text803
  4440  0694                     __ptext803:	
  4441 ;; =============== function _adc_test_init ends ============
  4442                           
  4443                           
  4444 ;; *************** function _timer1_interrupt_config *****************
  4445 ;; Defined at:
  4446 ;;		line 190 in file "C:\190604\AK7030-OTP\common.c"
  4447 ;; Parameters:    Size  Location     Type
  4448 ;;		None
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;		None
  4451 ;; Return value:  Size  Location     Type
  4452 ;;		None               void
  4453 ;; Registers used:
  4454 ;;		None
  4455 ;; Tracked objects:
  4456 ;;		On entry : 17F/20
  4457 ;;		On exit  : 17F/20
  4458 ;;		Unchanged: FFE80/0
  4459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4460 ;;      Params:         0       0       0       0       0
  4461 ;;      Locals:         0       0       0       0       0
  4462 ;;      Temps:          0       0       0       0       0
  4463 ;;      Totals:         0       0       0       0       0
  4464 ;;Total ram usage:        0 bytes
  4465 ;; Hardware stack levels used:    1
  4466 ;; Hardware stack levels required when called:    2
  4467 ;; This function calls:
  4468 ;;		Nothing
  4469 ;; This function is called by:
  4470 ;;		_main
  4471 ;; This function uses a non-reentrant model
  4472 ;;
  4473  0694                     _timer1_interrupt_config:	
  4474                           
  4475                           ;common.c: 191: GIE = 1;
  4476                           
  4477                           ; Regs used in _timer1_interrupt_config: []
  4478  0694  178B               	bsf	11,7
  4479                           
  4480                           ;common.c: 192: PEIE = 1;
  4481  0695  170B               	bsf	11,6
  4482  0696  0008               	return
  4483  0697                     __end_of_timer1_interrupt_config:	
  4484                           
  4485                           	psect	text804
  4486  064F                     __ptext804:	
  4487 ;; =============== function _timer1_interrupt_config ends ============
  4488                           
  4489                           
  4490 ;; *************** function _timer1_config *****************
  4491 ;; Defined at:
  4492 ;;		line 178 in file "C:\190604\AK7030-OTP\common.c"
  4493 ;; Parameters:    Size  Location     Type
  4494 ;;		None
  4495 ;; Auto vars:     Size  Location     Type
  4496 ;;		None
  4497 ;; Return value:  Size  Location     Type
  4498 ;;		None               void
  4499 ;; Registers used:
  4500 ;;		wreg
  4501 ;; Tracked objects:
  4502 ;;		On entry : 17F/40
  4503 ;;		On exit  : 17F/20
  4504 ;;		Unchanged: FFE80/0
  4505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4506 ;;      Params:         0       0       0       0       0
  4507 ;;      Locals:         0       0       0       0       0
  4508 ;;      Temps:          0       0       0       0       0
  4509 ;;      Totals:         0       0       0       0       0
  4510 ;;Total ram usage:        0 bytes
  4511 ;; Hardware stack levels used:    1
  4512 ;; Hardware stack levels required when called:    2
  4513 ;; This function calls:
  4514 ;;		Nothing
  4515 ;; This function is called by:
  4516 ;;		_main
  4517 ;; This function uses a non-reentrant model
  4518 ;;
  4519  064F                     _timer1_config:	
  4520                           
  4521                           ;common.c: 180: TMR1H=0xCF;
  4522                           
  4523                           ; Regs used in _timer1_config: [wreg]
  4524  064F  30CF               	movlw	207
  4525  0650  1303               	bcf	3,6	;RP1=0, select bank0
  4526  0651  008F               	movwf	15	;volatile
  4527                           
  4528                           ;common.c: 181: TMR1L=0x2C;
  4529  0652  302C               	movlw	44
  4530  0653  008E               	movwf	14	;volatile
  4531                           
  4532                           ;common.c: 182: T1CON=0xE1;
  4533  0654  30E1               	movlw	225
  4534  0655  0090               	movwf	16	;volatile
  4535                           
  4536                           ;common.c: 183: TMR1IE=1;
  4537  0656  1683               	bsf	3,5	;RP0=1, select bank1
  4538  0657  140C               	bsf	12,0
  4539  0658  0008               	return
  4540  0659                     __end_of_timer1_config:	
  4541                           
  4542                           	psect	text805
  4543  0669                     __ptext805:	
  4544 ;; =============== function _timer1_config ends ============
  4545                           
  4546                           
  4547 ;; *************** function _clock_config *****************
  4548 ;; Defined at:
  4549 ;;		line 170 in file "C:\190604\AK7030-OTP\common.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;		None
  4552 ;; Auto vars:     Size  Location     Type
  4553 ;;		None
  4554 ;; Return value:  Size  Location     Type
  4555 ;;		None               void
  4556 ;; Registers used:
  4557 ;;		wreg, status,2
  4558 ;; Tracked objects:
  4559 ;;		On entry : 17F/20
  4560 ;;		On exit  : 17F/40
  4561 ;;		Unchanged: FFE80/0
  4562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4563 ;;      Params:         0       0       0       0       0
  4564 ;;      Locals:         0       0       0       0       0
  4565 ;;      Temps:          0       0       0       0       0
  4566 ;;      Totals:         0       0       0       0       0
  4567 ;;Total ram usage:        0 bytes
  4568 ;; Hardware stack levels used:    1
  4569 ;; Hardware stack levels required when called:    2
  4570 ;; This function calls:
  4571 ;;		Nothing
  4572 ;; This function is called by:
  4573 ;;		_main
  4574 ;; This function uses a non-reentrant model
  4575 ;;
  4576  0669                     _clock_config:	
  4577                           
  4578                           ;common.c: 172: CLKPR = 0x80;
  4579                           
  4580                           ; Regs used in _clock_config: [wreg+status,2]
  4581  0669  3080               	movlw	128
  4582  066A  1283               	bcf	3,5	;RP0=0, select bank2
  4583  066B  1703               	bsf	3,6	;RP1=1, select bank2
  4584  066C  0088               	movwf	8	;volatile
  4585                           
  4586                           ;common.c: 173: CLKPR = 0x00;
  4587  066D  0188               	clrf	8	;volatile
  4588  066E                     l1647:	
  4589                           ;common.c: 174: while(CLKPCE);
  4590                           
  4591  066E  1F88               	btfss	8,7
  4592  066F  0008               	return
  4593  0670  2E6E               	goto	l1647
  4594  0671                     __end_of_clock_config:	
  4595                           
  4596                           	psect	text806
  4597  05E8                     __ptext806:	
  4598 ;; =============== function _clock_config ends ============
  4599                           
  4600                           
  4601 ;; *************** function _initPin *****************
  4602 ;; Defined at:
  4603 ;;		line 105 in file "C:\190604\AK7030-OTP\main.c"
  4604 ;; Parameters:    Size  Location     Type
  4605 ;;		None
  4606 ;; Auto vars:     Size  Location     Type
  4607 ;;		None
  4608 ;; Return value:  Size  Location     Type
  4609 ;;		None               void
  4610 ;; Registers used:
  4611 ;;		None
  4612 ;; Tracked objects:
  4613 ;;		On entry : 160/20
  4614 ;;		On exit  : 160/60
  4615 ;;		Unchanged: FFE9F/0
  4616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4617 ;;      Params:         0       0       0       0       0
  4618 ;;      Locals:         0       0       0       0       0
  4619 ;;      Temps:          0       0       0       0       0
  4620 ;;      Totals:         0       0       0       0       0
  4621 ;;Total ram usage:        0 bytes
  4622 ;; Hardware stack levels used:    1
  4623 ;; Hardware stack levels required when called:    2
  4624 ;; This function calls:
  4625 ;;		Nothing
  4626 ;; This function is called by:
  4627 ;;		_main
  4628 ;; This function uses a non-reentrant model
  4629 ;;
  4630  05E8                     _initPin:	
  4631                           
  4632                           ;main.c: 106: PB6 = 1;
  4633                           
  4634                           ; Regs used in _initPin: []
  4635  05E8  1283               	bcf	3,5	;RP0=0, select bank0
  4636  05E9  1706               	bsf	6,6
  4637                           
  4638                           ;main.c: 107: PBOD6 = 1;
  4639  05EA  1683               	bsf	3,5	;RP0=1, select bank3
  4640  05EB  1703               	bsf	3,6	;RP1=1, select bank3
  4641  05EC  1708               	bsf	8,6
  4642                           
  4643                           ;main.c: 111: PA0 = 0;
  4644  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  4645  05EE  1303               	bcf	3,6	;RP1=0, select bank0
  4646  05EF  1005               	bcf	5,0
  4647                           
  4648                           ;main.c: 112: PA1 = 0;
  4649  05F0  1085               	bcf	5,1
  4650                           
  4651                           ;main.c: 113: PA2 = 0;
  4652  05F1  1105               	bcf	5,2
  4653                           
  4654                           ;main.c: 114: PA3 = 0;
  4655  05F2  1185               	bcf	5,3
  4656                           
  4657                           ;main.c: 115: PB0 = 0;
  4658  05F3  1006               	bcf	6,0
  4659                           
  4660                           ;main.c: 116: PB1 = 1;
  4661  05F4  1486               	bsf	6,1
  4662                           
  4663                           ;main.c: 117: PA6 = 0;
  4664  05F5  1305               	bcf	5,6
  4665                           
  4666                           ;main.c: 118: PA7 = 0;
  4667  05F6  1385               	bcf	5,7
  4668                           
  4669                           ;main.c: 119: PAOD7 = 0;
  4670  05F7  1683               	bsf	3,5	;RP0=1, select bank3
  4671  05F8  1703               	bsf	3,6	;RP1=1, select bank3
  4672  05F9  1387               	bcf	7,7
  4673  05FA  0008               	return
  4674  05FB                     __end_of_initPin:	
  4675                           
  4676                           	psect	text810
  4677  032C                     __ptext810:	
  4678 ;; =============== function _clearTwelveHoursTimer ends ============
  4679                           
  4680                           
  4681 ;; *************** function _ISR *****************
  4682 ;; Defined at:
  4683 ;;		line 437 in file "C:\190604\AK7030-OTP\common.c"
  4684 ;; Parameters:    Size  Location     Type
  4685 ;;		None
  4686 ;; Auto vars:     Size  Location     Type
  4687 ;;		None
  4688 ;; Return value:  Size  Location     Type
  4689 ;;		None               void
  4690 ;; Registers used:
  4691 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4692 ;; Tracked objects:
  4693 ;;		On entry : 0/0
  4694 ;;		On exit  : 60/0
  4695 ;;		Unchanged: FFE00/0
  4696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4697 ;;      Params:         0       0       0       0       0
  4698 ;;      Locals:         0       0       0       0       0
  4699 ;;      Temps:          4       0       0       0       0
  4700 ;;      Totals:         4       0       0       0       0
  4701 ;;Total ram usage:        4 bytes
  4702 ;; Hardware stack levels used:    1
  4703 ;; Hardware stack levels required when called:    1
  4704 ;; This function calls:
  4705 ;;		i1_setAD_ConvertFlag
  4706 ;;		_adc_get
  4707 ;;		_vPutSampleDataIntoTable
  4708 ;; This function is called by:
  4709 ;;		Interrupt level 1
  4710 ;; This function uses a non-reentrant model
  4711 ;;
  4712  032C                     _ISR:	
  4713                           
  4714                           ;common.c: 438: static unsigned char ucTimer1sCnt = 0;
  4715                           ;common.c: 440: if(TMR1IF == 1)
  4716  032C  1C0C               	btfss	12,0
  4717  032D  2B55               	goto	i1l4076
  4718                           
  4719                           ;common.c: 441: {
  4720                           ;common.c: 442: TMR1IF = 0 ;
  4721  032E  100C               	bcf	12,0
  4722                           
  4723                           ;common.c: 443: timer.timer10msStopWatch++;
  4724  032F  1683               	bsf	3,5	;RP0=1, select bank1
  4725  0330  3064               	movlw	100
  4726  0331  0ABA               	incf	_timer^(0+128),f
  4727                           
  4728                           ;common.c: 444: ucTimer1sCnt++;
  4729  0332  0AB8               	incf	ISR@ucTimer1sCnt^(0+128),f
  4730                           
  4731                           ;common.c: 446: if(ucTimer1sCnt >= 100)
  4732  0333  0238               	subwf	ISR@ucTimer1sCnt^(0+128),w
  4733  0334  1C03               	skipc
  4734  0335  2B55               	goto	i1l4076
  4735                           
  4736                           ;common.c: 447: {
  4737                           ;common.c: 448: ucTimer1sCnt = 0;
  4738  0336  01B8               	clrf	ISR@ucTimer1sCnt^(0+128)
  4739                           
  4740                           ;common.c: 449: if(uiBigTimer > 0)
  4741  0337  0833               	movf	(_uiBigTimer+1)^(0+128),w
  4742  0338  0432               	iorwf	_uiBigTimer^(0+128),w
  4743  0339  1903               	skipnz
  4744  033A  2B41               	goto	i1l1757
  4745                           
  4746                           ;common.c: 450: uiBigTimer--;
  4747  033B  3001               	movlw	1
  4748  033C  02B2               	subwf	_uiBigTimer^(0+128),f
  4749  033D  3000               	movlw	0
  4750  033E  1C03               	skipc
  4751  033F  03B3               	decf	(_uiBigTimer+1)^(0+128),f
  4752  0340  02B3               	subwf	(_uiBigTimer+1)^(0+128),f
  4753  0341                     i1l1757:	
  4754                           
  4755                           ;common.c: 452: if(uiSmallTimer)
  4756  0341  0835               	movf	(_uiSmallTimer+1)^(0+128),w
  4757  0342  0434               	iorwf	_uiSmallTimer^(0+128),w
  4758  0343  1903               	skipnz
  4759  0344  2B4B               	goto	i1l1758
  4760                           
  4761                           ;common.c: 453: uiSmallTimer--;
  4762  0345  3001               	movlw	1
  4763  0346  02B4               	subwf	_uiSmallTimer^(0+128),f
  4764  0347  3000               	movlw	0
  4765  0348  1C03               	skipc
  4766  0349  03B5               	decf	(_uiSmallTimer+1)^(0+128),f
  4767  034A  02B5               	subwf	(_uiSmallTimer+1)^(0+128),f
  4768  034B                     i1l1758:	
  4769                           
  4770                           ;common.c: 455: if(uiTwentySecondsTimer)
  4771  034B  0837               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  4772  034C  0436               	iorwf	_uiTwentySecondsTimer^(0+128),w
  4773  034D  1903               	skipnz
  4774  034E  2B55               	goto	i1l4076
  4775                           
  4776                           ;common.c: 456: uiTwentySecondsTimer--;
  4777  034F  3001               	movlw	1
  4778  0350  02B6               	subwf	_uiTwentySecondsTimer^(0+128),f
  4779  0351  3000               	movlw	0
  4780  0352  1C03               	skipc
  4781  0353  03B7               	decf	(_uiTwentySecondsTimer+1)^(0+128),f
  4782  0354  02B7               	subwf	(_uiTwentySecondsTimer+1)^(0+128),f
  4783  0355                     i1l4076:	
  4784                           
  4785                           ;common.c: 457: }
  4786                           ;common.c: 458: }
  4787                           ;common.c: 460: if(ADIF)
  4788  0355  1283               	bcf	3,5	;RP0=0, select bank0
  4789  0356  1D0D               	btfss	13,2
  4790  0357  2B89               	goto	i1l1765
  4791  0358  3001               	movlw	1
  4792                           
  4793                           ;common.c: 461: {
  4794                           ;common.c: 462: ADIF=0;
  4795  0359  110D               	bcf	13,2
  4796                           
  4797                           ;common.c: 463: setAD_ConvertFlag(1);
  4798  035A  23FD  118A         	fcall	i1_setAD_ConvertFlag
  4799                           
  4800                           ;common.c: 464: adc_original_value = adc_get();
  4801  035C  2396  118A         	fcall	_adc_get
  4802  035E  0871               	movf	?_adc_get+1,w
  4803  035F  00AD               	movwf	(_adc_original_value+1)^(0+128)
  4804  0360  0870               	movf	?_adc_get,w
  4805  0361  00AC               	movwf	_adc_original_value^(0+128)
  4806                           
  4807                           ;common.c: 465: if(sampleChannelSelect == 4)
  4808  0362  1283               	bcf	3,5	;RP0=0, select bank0
  4809  0363  086E               	movf	_sampleChannelSelect,w
  4810  0364  3A04               	xorlw	4
  4811  0365  1D03               	skipz
  4812  0366  2B71               	goto	i1l4090
  4813                           
  4814                           ;common.c: 466: {
  4815                           ;common.c: 467: adc_original_CH4_value = adc_get();
  4816  0367  2396  118A         	fcall	_adc_get
  4817                           
  4818                           ;common.c: 468: vPutSampleDataIntoTable(adc_get(),4);
  4819  0369  2396  118A         	fcall	_adc_get
  4820  036B  0871               	movf	?_adc_get+1,w
  4821  036C  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4822  036D  0870               	movf	?_adc_get,w
  4823  036E  00F4               	movwf	?_vPutSampleDataIntoTable
  4824  036F  3004               	movlw	4
  4825  0370  2B87               	goto	L14
  4826  0371                     i1l4090:	
  4827                           ;common.c: 470: }
  4828                           
  4829                           
  4830                           ;common.c: 471: else if(sampleChannelSelect == 1)
  4831  0371  0B6E               	decfsz	_sampleChannelSelect,w
  4832  0372  2B7E               	goto	i1l4096
  4833                           
  4834                           ;common.c: 472: {
  4835                           ;common.c: 473: adc_original_CH1_value = adc_get();
  4836  0373  2396  118A         	fcall	_adc_get
  4837                           
  4838                           ;common.c: 474: vPutSampleDataIntoTable(adc_get(),1);
  4839  0375  2396  118A         	fcall	_adc_get
  4840  0377  0871               	movf	?_adc_get+1,w
  4841  0378  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4842  0379  0870               	movf	?_adc_get,w
  4843  037A  00F4               	movwf	?_vPutSampleDataIntoTable
  4844  037B  01F6               	clrf	?_vPutSampleDataIntoTable+2
  4845  037C  0AF6               	incf	?_vPutSampleDataIntoTable+2,f
  4846  037D  2B88               	goto	L15
  4847  037E                     i1l4096:	
  4848                           ;common.c: 475: }
  4849                           
  4850                           
  4851                           ;common.c: 476: else
  4852                           ;common.c: 477: {
  4853                           ;common.c: 478: adc_original_CH14_value = adc_get();
  4854  037E  2396  118A         	fcall	_adc_get
  4855                           
  4856                           ;common.c: 479: vPutSampleDataIntoTable(adc_get(),14);
  4857  0380  2396  118A         	fcall	_adc_get
  4858  0382  0871               	movf	?_adc_get+1,w
  4859  0383  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4860  0384  0870               	movf	?_adc_get,w
  4861  0385  00F4               	movwf	?_vPutSampleDataIntoTable
  4862  0386  300E               	movlw	14
  4863  0387                     L14:	
  4864  0387  00F6               	movwf	?_vPutSampleDataIntoTable+2
  4865  0388                     L15:	
  4866  0388  23A2               	fcall	_vPutSampleDataIntoTable
  4867  0389                     i1l1765:	
  4868  0389  087C               	movf	??_ISR+3,w
  4869  038A  1283               	bcf	3,5	;RP0=0, select bank0
  4870  038B  1303               	bcf	3,6	;RP1=0, select bank0
  4871  038C  00FF               	movwf	127
  4872  038D  087B               	movf	??_ISR+2,w
  4873  038E  008A               	movwf	10
  4874  038F  087A               	movf	??_ISR+1,w
  4875  0390  0084               	movwf	4
  4876  0391  0E79               	swapf	??_ISR^(0+-128),w
  4877  0392  0083               	movwf	3
  4878  0393  0EFE               	swapf	126,f
  4879  0394  0E7E               	swapf	126,w
  4880  0395  0009               	retfie
  4881  0396                     __end_of_ISR:	
  4882  0396                     __ptext812:	
  4883 ;; =============== function i1_setAD_ConvertFlag ends ============
  4884                           
  4885                           
  4886 ;; *************** function _adc_get *****************
  4887 ;; Defined at:
  4888 ;;		line 105 in file "C:\190604\AK7030-OTP\periph.c"
  4889 ;; Parameters:    Size  Location     Type
  4890 ;;		None
  4891 ;; Auto vars:     Size  Location     Type
  4892 ;;  val             2    2[COMMON] unsigned int 
  4893 ;; Return value:  Size  Location     Type
  4894 ;;                  2    0[COMMON] unsigned int 
  4895 ;; Registers used:
  4896 ;;		wreg
  4897 ;; Tracked objects:
  4898 ;;		On entry : 40/20
  4899 ;;		On exit  : 60/20
  4900 ;;		Unchanged: FFF9F/0
  4901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4902 ;;      Params:         2       0       0       0       0
  4903 ;;      Locals:         2       0       0       0       0
  4904 ;;      Temps:          0       0       0       0       0
  4905 ;;      Totals:         4       0       0       0       0
  4906 ;;Total ram usage:        4 bytes
  4907 ;; Hardware stack levels used:    1
  4908 ;; This function calls:
  4909 ;;		Nothing
  4910 ;; This function is called by:
  4911 ;;		_ISR
  4912 ;; This function uses a non-reentrant model
  4913 ;;
  4914  0396                     _adc_get:	
  4915                           
  4916                           ;periph.c: 106: unsigned int val;
  4917                           ;periph.c: 107: val = (ADRESH<<8) | ADRESL;
  4918                           
  4919                           ; Regs used in _adc_get: [wreg]
  4920  0396  1283               	bcf	3,5	;RP0=0, select bank0
  4921  0397  081E               	movf	30,w	;volatile
  4922  0398  00F3               	movwf	adc_get@val+1
  4923  0399  01F2               	clrf	adc_get@val
  4924  039A  1683               	bsf	3,5	;RP0=1, select bank1
  4925  039B  081E               	movf	30,w	;volatile
  4926  039C  04F2               	iorwf	adc_get@val,f
  4927                           
  4928                           ;periph.c: 108: return val;
  4929  039D  0873               	movf	adc_get@val+1,w
  4930  039E  00F1               	movwf	?_adc_get+1
  4931  039F  0872               	movf	adc_get@val,w
  4932  03A0  00F0               	movwf	?_adc_get
  4933  03A1  0008               	return
  4934  03A2                     __end_of_adc_get:	
  4935  03A2                     __ptext813:	
  4936 ;; =============== function _adc_get ends ============
  4937                           
  4938                           
  4939 ;; *************** function _vPutSampleDataIntoTable *****************
  4940 ;; Defined at:
  4941 ;;		line 95 in file "C:\190604\AK7030-OTP\common.c"
  4942 ;; Parameters:    Size  Location     Type
  4943 ;;  uiSampleData    2    4[COMMON] unsigned int 
  4944 ;;  channel         1    6[COMMON] unsigned char 
  4945 ;; Auto vars:     Size  Location     Type
  4946 ;;  i               2    7[COMMON] int 
  4947 ;; Return value:  Size  Location     Type
  4948 ;;		None               void
  4949 ;; Registers used:
  4950 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4951 ;; Tracked objects:
  4952 ;;		On entry : 60/20
  4953 ;;		On exit  : 0/0
  4954 ;;		Unchanged: FFE00/0
  4955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4956 ;;      Params:         3       0       0       0       0
  4957 ;;      Locals:         2       0       0       0       0
  4958 ;;      Temps:          0       0       0       0       0
  4959 ;;      Totals:         5       0       0       0       0
  4960 ;;Total ram usage:        5 bytes
  4961 ;; Hardware stack levels used:    1
  4962 ;; This function calls:
  4963 ;;		Nothing
  4964 ;; This function is called by:
  4965 ;;		_ISR
  4966 ;; This function uses a non-reentrant model
  4967 ;;
  4968  03A2                     _vPutSampleDataIntoTable:	
  4969                           
  4970                           ;common.c: 97: static unsigned char ucChannelFirstLength = 0;
  4971                           ;common.c: 99: static unsigned char ucChannelFourthLength = 0;
  4972                           ;common.c: 101: static unsigned char ucChannelFourteenthLength = 0;
  4973                           ;common.c: 103: if(channel == 1)
  4974                           
  4975                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1]
  4976  03A2  0B76               	decfsz	vPutSampleDataIntoTable@channel,w
  4977  03A3  2BB4               	goto	i1l4010
  4978                           
  4979                           ;common.c: 104: {
  4980                           ;common.c: 105: if(ucChannelFirstLength < 20)
  4981  03A4  3014               	movlw	20
  4982  03A5  027D               	subwf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4983  03A6  1803               	skipnc
  4984  03A7  2BAE               	goto	i1l4006
  4985                           
  4986                           ;common.c: 106: {
  4987                           ;common.c: 107: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  4988  03A8  1003               	clrc
  4989  03A9  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4990  03AA  3E90               	addlw	_uiSampleChannelFirst& (0+255)
  4991  03AB  240A               	fcall	PL4	;call to abstracted procedure
  4992                           
  4993                           ;common.c: 109: ucChannelFirstLength++;
  4994  03AC  0AFD               	incf	vPutSampleDataIntoTable@ucChannelFirstLength,f
  4995                           
  4996                           ;common.c: 110: }
  4997  03AD  0008               	return
  4998  03AE                     i1l4006:	
  4999                           
  5000                           ;common.c: 111: else
  5001                           ;common.c: 112: {
  5002                           ;common.c: 113: ucChannelFirstLength = 0;
  5003  03AE  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  5004                           
  5005                           ;common.c: 115: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  5006  03AF  1003               	clrc
  5007  03B0  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  5008  03B1  3E90               	addlw	_uiSampleChannelFirst& (0+255)
  5009  03B2  240A               	fcall	PL4	;call to abstracted procedure
  5010  03B3  0008               	return
  5011  03B4                     i1l4010:	
  5012                           
  5013                           ;common.c: 118: else if(channel == 4)
  5014  03B4  0876               	movf	vPutSampleDataIntoTable@channel,w
  5015  03B5  3A04               	xorlw	4
  5016  03B6  1D03               	skipz
  5017  03B7  2BC7               	goto	i1l4022
  5018                           
  5019                           ;common.c: 119: {
  5020                           ;common.c: 120: if(ucChannelFourthLength < 20)
  5021  03B8  3014               	movlw	20
  5022  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  5023  03BA  026D               	subwf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  5024  03BB  1803               	skipnc
  5025  03BC  2BC2               	goto	i1l4018
  5026                           
  5027                           ;common.c: 121: {
  5028                           ;common.c: 122: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  5029  03BD  1003               	clrc
  5030  03BE  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  5031  03BF  2401               	fcall	PL2	;call to abstracted procedure
  5032                           
  5033                           ;common.c: 124: ucChannelFourthLength++;
  5034  03C0  0AED               	incf	vPutSampleDataIntoTable@ucChannelFourthLength,f
  5035                           
  5036                           ;common.c: 125: }
  5037  03C1  0008               	return
  5038  03C2                     i1l4018:	
  5039                           
  5040                           ;common.c: 126: else
  5041                           ;common.c: 127: {
  5042                           ;common.c: 128: ucChannelFourthLength = 0;
  5043  03C2  01ED               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  5044                           
  5045                           ;common.c: 130: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  5046  03C3  1003               	clrc
  5047  03C4  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  5048  03C5  2401               	fcall	PL2	;call to abstracted procedure
  5049  03C6  0008               	return
  5050  03C7                     i1l4022:	
  5051                           
  5052                           ;common.c: 133: else if(channel == 14)
  5053  03C7  0876               	movf	vPutSampleDataIntoTable@channel,w
  5054  03C8  3A0E               	xorlw	14
  5055  03C9  1D03               	skipz
  5056  03CA  2BDB               	goto	i1l4034
  5057                           
  5058                           ;common.c: 134: {
  5059                           ;common.c: 135: if(ucChannelFourteenthLength < 20)
  5060  03CB  3014               	movlw	20
  5061  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  5062  03CD  026C               	subwf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  5063  03CE  1803               	skipnc
  5064  03CF  2BD6               	goto	i1l4030
  5065                           
  5066                           ;common.c: 136: {
  5067                           ;common.c: 137: uiSampleChannelFourteenth[ucChannelFourteenthLength] = uiSampleData;
  5068  03D0  1003               	clrc
  5069  03D1  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  5070  03D2  3EB8               	addlw	_uiSampleChannelFourteenth& (0+255)
  5071  03D3  240A               	fcall	PL4	;call to abstracted procedure
  5072                           
  5073                           ;common.c: 139: ucChannelFourteenthLength++;
  5074  03D4  0AEC               	incf	vPutSampleDataIntoTable@ucChannelFourteenthLength,f
  5075                           
  5076                           ;common.c: 140: }
  5077  03D5  0008               	return
  5078  03D6                     i1l4030:	
  5079                           
  5080                           ;common.c: 141: else
  5081                           ;common.c: 142: {
  5082                           ;common.c: 143: ucChannelFourteenthLength = 0;
  5083  03D6  01EC               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  5084                           
  5085                           ;common.c: 145: uiSampleChannelFourth[ucChannelFourteenthLength] = uiSampleData;
  5086  03D7  1003               	clrc
  5087  03D8  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  5088  03D9  2401               	fcall	PL2	;call to abstracted procedure
  5089  03DA  0008               	return
  5090  03DB                     i1l4034:	
  5091                           
  5092                           ;common.c: 148: else
  5093                           ;common.c: 149: {
  5094                           ;common.c: 150: ucChannelFirstLength = 0;
  5095  03DB  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  5096                           
  5097                           ;common.c: 152: ucChannelFourthLength = 0;
  5098  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  5099  03DD  01ED               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  5100                           
  5101                           ;common.c: 154: ucChannelFourteenthLength = 0;
  5102  03DE  01EC               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  5103                           
  5104                           ;common.c: 156: for(int i = 0;i < 20; i++)
  5105  03DF  01F7               	clrf	vPutSampleDataIntoTable@i
  5106  03E0  01F8               	clrf	vPutSampleDataIntoTable@i+1
  5107  03E1                     i1l4040:	
  5108                           
  5109                           ;common.c: 157: {
  5110                           ;common.c: 158: uiSampleChannelFirst[i] = 0;
  5111  03E1  1003               	clrc
  5112  03E2  0D77               	rlf	vPutSampleDataIntoTable@i,w
  5113  03E3  3E90               	addlw	_uiSampleChannelFirst& (0+255)
  5114  03E4  0084               	movwf	4
  5115  03E5  1783               	bsf	3,7	;select IRP bank3
  5116                           
  5117                           ;common.c: 160: uiSampleChannelFourth[i] = 0;
  5118  03E6  2412  118A         	fcall	PL6	;call to abstracted procedure
  5119  03E8  1383               	bcf	3,7	;select IRP bank1
  5120                           
  5121                           ;common.c: 162: uiSampleChannelFourth[i] = 0;
  5122  03E9  2412  118A         	fcall	PL6	;call to abstracted procedure
  5123  03EB  0180               	clrf	0
  5124  03EC  0A84               	incf	4,f
  5125  03ED  0180               	clrf	0
  5126  03EE  0AF7               	incf	vPutSampleDataIntoTable@i,f
  5127  03EF  1903               	skipnz
  5128  03F0  0AF8               	incf	vPutSampleDataIntoTable@i+1,f
  5129  03F1  0878               	movf	vPutSampleDataIntoTable@i+1,w
  5130  03F2  3A80               	xorlw	128
  5131  03F3  00FF               	movwf	127
  5132  03F4  3080               	movlw	128
  5133  03F5  027F               	subwf	127,w
  5134  03F6  1D03               	skipz
  5135  03F7  2BFA               	goto	u108_25
  5136  03F8  3014               	movlw	20
  5137  03F9  0277               	subwf	vPutSampleDataIntoTable@i,w
  5138  03FA                     u108_25:	
  5139  03FA  1803               	btfsc	3,0
  5140  03FB  0008               	return
  5141  03FC  2BE1               	goto	i1l4040
  5142  03FD                     __end_of_vPutSampleDataIntoTable:	
  5143  03FD                     __ptext811:	
  5144 ;; =============== function _ISR ends ============
  5145                           
  5146                           
  5147 ;; *************** function i1_setAD_ConvertFlag *****************
  5148 ;; Defined at:
  5149 ;;		line 204 in file "C:\190604\AK7030-OTP\common.c"
  5150 ;; Parameters:    Size  Location     Type
  5151 ;;  setAD_Conver    1    wreg     unsigned char 
  5152 ;; Auto vars:     Size  Location     Type
  5153 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  5154 ;; Return value:  Size  Location     Type
  5155 ;;		None               void
  5156 ;; Registers used:
  5157 ;;		wreg
  5158 ;; Tracked objects:
  5159 ;;		On entry : 60/0
  5160 ;;		On exit  : 60/20
  5161 ;;		Unchanged: FFF9F/0
  5162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5163 ;;      Params:         0       0       0       0       0
  5164 ;;      Locals:         1       0       0       0       0
  5165 ;;      Temps:          0       0       0       0       0
  5166 ;;      Totals:         1       0       0       0       0
  5167 ;;Total ram usage:        1 bytes
  5168 ;; Hardware stack levels used:    1
  5169 ;; This function calls:
  5170 ;;		Nothing
  5171 ;; This function is called by:
  5172 ;;		_ISR
  5173 ;; This function uses a non-reentrant model
  5174 ;;
  5175  03FD                     i1_setAD_ConvertFlag:	
  5176                           
  5177                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  5178                           ;i1setAD_ConvertFlag@flag stored from wreg
  5179  03FD  00F0               	movwf	i1setAD_ConvertFlag@flag
  5180                           
  5181                           ;common.c: 205: adc_convert_flag = flag;
  5182  03FE  1683               	bsf	3,5	;RP0=1, select bank1
  5183  03FF  00B9               	movwf	_adc_convert_flag^(0+128)
  5184  0400  0008               	return
  5185  0401                     __end_ofi1_setAD_ConvertFlag:	
  5186  0401                     PL2:	
  5187  0401  3EC1               	addlw	_uiSampleChannelFourth& (0+255)
  5188  0402  0084               	movwf	4
  5189  0403  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  5190  0404  1383               	bcf	3,7	;select IRP bank1
  5191  0405  0080               	movwf	0
  5192  0406  0A84               	incf	4,f
  5193  0407  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  5194  0408  0080               	movwf	0
  5195  0409  0008               	return
  5196  040A                     PL4:	
  5197  040A  0084               	movwf	4
  5198  040B  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  5199  040C  1783               	bsf	3,7	;select IRP bank3
  5200  040D  0080               	movwf	0
  5201  040E  0A84               	incf	4,f
  5202  040F  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  5203  0410  0080               	movwf	0
  5204  0411  0008               	return
  5205  0412                     PL6:	
  5206  0412  0180               	clrf	0
  5207  0413  0A84               	incf	4,f
  5208  0414  0180               	clrf	0
  5209  0415  1003               	clrc
  5210  0416  0D77               	rlf	vPutSampleDataIntoTable@i,w
  5211  0417  3EC1               	addlw	_uiSampleChannelFourth& (0+255)
  5212  0418  0084               	movwf	4
  5213  0419  0008               	return
  5214                           
  5215                           	psect	intentry
  5216  0004                     __pintentry:	
  5217                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5218                           
  5219  0004                     interrupt_function:	
  5220  007E                     saved_w	set	btemp
  5221  0004  00FE               	movwf	btemp
  5222  0005  0E03               	swapf	3,w
  5223  0006  00F9               	movwf	??_ISR
  5224  0007  0804               	movf	4,w
  5225  0008  00FA               	movwf	??_ISR+1
  5226  0009  080A               	movf	10,w
  5227  000A  00FB               	movwf	??_ISR+2
  5228  000B  1283               	bcf	3,5	;RP0=0, select bank0
  5229  000C  1303               	bcf	3,6	;RP1=0, select bank0
  5230  000D  087F               	movf	btemp+1,w
  5231  000E  00FC               	movwf	??_ISR+3
  5232  000F  118A  2B2C         	ljmp	_ISR
  5233                           
  5234                           	psect	text814
  5235  0000                     __ptext814:	
  5236 ;; =============== function _vPutSampleDataIntoTable ends ============
  5237                           
  5238  007E                     btemp	set	126	;btemp
  5239  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri Jun 21 13:40:13 2019

                                  ??_clock_config 0020                                                 pc 0002  
                                              _GO 00F9                                                fsr 0004  
                             ?_getAdOriginalValue 0020                          ?_timer1_interrupt_config 0070  
                                             l810 0168                                               l706 0063  
                                             l715 007B                                               l740 00F0  
                                             l910 02B9                                               l680 0000  
                                             l834 019C                                               l683 0000  
                                             l755 00F2                                               l677 0000  
                                             l855 01CF                                               l783 012E  
                                             l890 026E                                               l883 024C  
                                             _PA0 0028                                               _PA1 0029  
                                             _GIE 005F                                               _PB0 0030  
                                             _PA2 002A                                               _PB1 0031  
                                             _PA3 002B                                               _PA6 002E  
                                             _PA7 002F                                               _PB6 0036  
                                             _ISR 032C                                               u975 045F  
                                             u985 0486                                               u995 0472  
                                             fsr0 0004                                               indf 0000  
                          ??_startThreeHoursTimer 0022                                              S4910 060E  
                                            S4912 0638                                              S4908 0600  
                                            ?_ISR 0070                                __size_of_AD_Sample 0068  
                          ?_getAdOriginalCh1Value 0056                                              l2410 0000  
                                            l2402 0000                                              l1621 0000  
                                            l2413 0000                                              l1720 0000  
                                            l2416 0000                                              l4112 0000  
                                            l4120 0000                                              l4200 0000  
                                            l1714 0000                                              l1650 0000  
                                            l4050 0000                                              l4106 05BF  
                                            l4210 0040                                              l4202 0000  
                                            l4052 0000                                              l4108 0000  
                                            l4116 0000                                              l4140 0000  
                                            l4124 0000                                              l4300 00F5  
                                            l4212 0000                                              l4204 0000  
                                            l1717 0000                                              l1653 0000  
                                            l1750 0000                                              l4046 0000  
                                            l1662 0000                                              l4150 057C  
                                            l4134 0568                                              l4310 00FE  
                                            l4230 0064                                              l4222 005A  
                                            l4206 0000                                              l1647 066E  
                                            l1727 0000                                              l1671 0000  
                                            l1656 0000                                              l4056 0000  
                                            l4160 057F                                              l4144 0575  
                                            l4136 0000                                              l4128 0541  
                                            l4320 0104                                              l4304 00FA  
                                            l4240 0077                                              l4224 005B  
                                            l4216 0000                                              l4208 0000  
                                            l1665 0000                                              l1674 0000  
                                            l4162 0000                                              l4154 057E  
                                            l4170 0000                                              l4330 010A  
                                            l4250 008B                                              l4242 0000  
                                            l4234 006A                                              l4218 004E  
                                            l1659 0000                                              l2396 0000  
                                            l1668 0000                                              l4164 0000  
                                            l4180 04F8                                              l4404 014C  
                                            l4340 0110                                              l4308 00FC  
                                            l4260 009D                                              l4252 0000  
                                            l4244 007E                                              l4236 0000  
                                            l4228 0060                                              l4166 0000  
                                            l4182 0000                                              l4174 0000  
                                            l4502 01B0                                              l4414 0155  
                                            l4350 011A                                              l4270 0000  
                                            l4262 009E                                              l4254 0000  
                                            l4238 0075                                              l4190 0000  
                                            l2399 0000                                              l1687 0554  
                                            l4168 0000                                              l4184 04FE  
                                            l4176 0000                                              l4600 0000  
                                            l4512 01B7                                              l4432 0171  
                                            l4424 015C                                              l4360 0122  
                                            l4280 00BD                                              l4272 00AC  
                                            l4264 0000                                              l4256 0091  
                                            l4248 008A                                              l4192 0000  
                                            l4186 0000                                              l4610 0000  
                                            l4602 0000                                              l4530 01DA  
                                            l4522 01BE                                              l4426 016A  
                                            l4362 012F                                              l4354 0120  
                                            l4274 00B2                                              l4266 0000  
                                            l4194 0000                                              l4620 0285  
                                            l4604 0000                                              l4524 01D3  
                                            l4436 0173                                              l4428 016C  
                                            l4372 0138                                              l4364 0131  
                                            l4292 00E2                                              l4284 00C9  
                                            l4276 00B6                                              l4268 00A4  
                                            l4196 0000                                              l4188 0000  
                                            l3902 0000                                              l4630 0000  
                                            l4622 0287                                              l4606 0269  
                                            l4534 01DC                                              l4526 01D5  
                                            l4438 0175                                              l4374 013A  
                                            l4278 00B9                                              l4198 0000  
                                            l3904 0000                                              l3920 0000  
                                            l4640 02A3                                              l4632 0000  
                                            l4624 0000                                              l4616 0278  
                                            l4608 0000                                              l4560 01F9  
                                            l4536 01DE                                              l4480 019F  
                                            l4448 017B                                              l4384 0140  
                                            l4368 0136                                              l4296 00EE  
                                            l4288 00D6                                              l3842 0000  
                                            l3850 0000                                              l3922 0000  
                                            l4642 02A5                                              l4626 0000  
                                            l4570 0222                                              l4562 020A  
                                            l4546 01E4                                              l4490 01A8  
                                            l4482 01A1                                              l4458 0181  
                                            l4394 0146                                              l4298 00F3  
                                            l3844 0000                                              l3852 0000  
                                            l3860 0000                                              l3908 0000  
                                            l4660 02DA                                              l4652 02AE  
                                            l4644 0000                                              l4628 0000  
                                            l4636 0296                                              l4580 0000  
                                            l4572 0229                                              l4556 01EB  
                                            l4492 01AA                                              l4468 0189  
                                            l3846 05CC                                              l3854 0000  
                                            l3862 0000                                              l3870 0000  
                                            l3934 0000                                              l3950 0000  
                                            l4670 02EF                                              l4654 02CB  
                                            l4646 02AA                                              l4590 0000  
                                            l4582 0000                                              l4566 0000  
                                            l4486 01A6                                              l4478 0190  
                                            l3848 0000                                              l3856 0000  
                                            l3864 0000                                              l3872 0000  
                                            l3880 0000                                              l3960 0000  
                                            l4680 0000                                              l4672 02F1  
                                            l4664 0000                                              l4592 025C  
                                            l4576 022F                                              l3858 0000  
                                            l3866 0000                                              l3874 0000  
                                            l3882 0000                                              l3890 0000  
                                            l3938 0000                                              l3970 0464  
                                            l3962 0000                                              l4682 0000  
                                            l4666 02E2                                              l4658 02D8  
                                            l4578 0000                                              l4586 023A  
                                            l4690 030F                                              l3868 0000  
                                            l3876 0000                                              l3884 0000  
                                            l3980 04A7                                              l3956 043C  
                                            l4676 0000                                              l4596 0000  
                                            l4588 0000                                              l3878 0000  
                                            l3886 0000                                              l3990 0000  
                                            l3982 0000                                              l3958 0000  
                                            l4686 0303                                              l4678 0000  
                                            l4598 0000                                              _ADIE 046A  
                                            l3888 0595                                              l3992 0000  
                                            l3976 04A5                                              _ADIF 006A  
                                            l3978 0465                                              _ADON 00F8  
                   startTwelveHourTimer@uiSetTime 0020                                              u1205 055F  
                                            u1195 054A                                              _PEIE 005E  
                            ??_getAdOriginalValue 0022                                              _main 0013  
                                            btemp 007E                           _clearTwentySecondsTimer 05CC  
                                            start 0011                           ?_getAdOriginalCh14Value 0056  
                               main@ucTimerDelay1 0065                                 main@ucTimerDelay2 0066  
                               main@ucTimerDelay3 0067                                 main@ucTimerDelay4 0068  
                                           ??_ISR 0079                        __end_of_isPermitSampleTime 0678  
                             _sampleChannelSelect 006E                            ??_getAdOriginaCh4Value 0058  
                                           ?_main 0070                                             _DACR0 0088  
                                           _CLKPR 0108                                             _T1CON 0010  
                                 __end_of_adc_get 03A2                                             _PAOD7 0C3F  
                                           _PBOD6 0C46                                             _TMR1H 000F  
                                           _TMR1L 000E                             setAD_ConvertFlag@flag 0020  
                         _vPutSampleDataIntoTable 03A2                                   __end_of_initPin 05FB  
                                           _timer 00BA                                             pclath 000A  
                                           status 0003                                             wtemp0 007E  
                  __end_of_getAdOriginalCh14Value 0435                     __size_of_startTwelveHourTimer 000E  
                            __end_of_clrSampeTime 0699                             __end_of_clearAllTimer 05C4  
                                    __end_of_main 032C                            __size_of_adc_test_init 0015  
                               __end_of_AD_Sample 058C                                            ??_main 0058  
                            _clearPinPortAndTimer 05B2                                            _ADCON0 001F  
                                          _ADCON1 009F                              __end_of_clock_config 0671  
                                          _DACCON 0087                                            _ADRESH 001E  
                                          _ADRESL 009E                                            _CLKPCE 0847  
                                          i1l4000 0000                                            i1l4010 03B4  
                                          i1l4020 0000                                            i1l4004 0000  
                                          i1l4100 0000                                            i1l4030 03D6  
                                          i1l4022 03C7                                            i1l4006 03AE  
                                          i1l4040 03E1                                            i1l4032 0000  
                                          i1l4016 0000                                            i1l4008 0000  
                                          i1l4104 0000                                            i1l4042 0000  
                                          i1l4034 03DB                                            i1l4018 03C2  
                                          i1l2419 0000                                            i1l4044 0000  
                                          i1l4028 0000                                            i1l1662 0000  
                                          i1l4062 0000                                            i1l4080 0000  
                                          i1l4064 0000                                            i1l4090 0371  
                                          i1l4082 0000                                            i1l4058 0000  
                                          i1l4092 0000                                            i1l4084 0000  
                                          i1l4068 0000                                            i1l4076 0355  
                                          i1l1765 0389                                            i1l1757 0341  
                                          i1l4094 0000                                            i1l1758 034B  
                                          i1l4096 037E                                            i1l4088 0000  
                                          i1l4098 0000                                            u108_25 03FA  
                                          i1l3998 0000                                  __end_of_dac_init 0694  
                       ??_clearTwentySecondsTimer 0020                                            _TMR1IE 0460  
                                          _TMR1IF 0060                                 _getAD_ConvertFlag 051D  
                               _setAD_ConvertFlag 051F                                            _TRISA0 0428  
                                          _TRISA1 0429                                            _TRISB0 0430  
                                          _TRISA2 042A                                            _TRISB1 0431  
                                          _TRISA3 042B                                            _TRISB2 0432  
                                          _TRISB3 0433                                            _TRISB4 0434  
                                          _TRISA6 042E                                            _TRISB5 0435  
                                          _TRISA7 042F                                            _TRISB6 0436  
                                          _TRISB7 0437                                     main@ucTimer1s 0062  
                              ?_getAD_ConvertFlag 0070                                            _Filter 0435  
                              ?_setAD_ConvertFlag 0070                                  __end_of_op1_init 064F  
                                __end_of_op2_init 0669                       ??_isFinishedThreeHoursTimer 0020  
                   __size_of_clearThreeHoursTimer 0004                                         ??_adc_get 0072  
                             ??_getAD_ConvertFlag 0020                               ??_setAD_ConvertFlag 0020  
                                          clrloop 065A                                  Filter@filter_buf 0026  
                                Filter@filter_sum 0050                                         ??_initPin 0020  
                       ??_vPutSampleDataIntoTable 0077                      __size_of_setAdcSampleChannel 0008  
                           ?_clearPinPortAndTimer 0070                                            saved_w 007E  
                         ??_clearTwelveHoursTimer 0020                       ?_process_AD_Converter_Value 0070  
                                   _adc_test_init 0508                  __size_of_startTwentySecondsTimer 0005  
                       __end_of_getAD_ConvertFlag 051F                         __end_of_setAD_ConvertFlag 0524  
                              __size_of_adc_start 0003                                    __pcstackCOMMON 0070  
                                    __pidataBANK0 0000                   __end_of_clearTwentySecondsTimer 05CF  
                            _uiSampleChannelFirst 0190                    vPutSampleDataIntoTable@channel 0076  
                             main@ucTimerRightP5s 0069                         _isFinishedThreeHoursTimer 0678  
                         ??_getAdOriginalCh1Value 0058                             __end_of_timer1_config 0659  
                                  ?_adc_test_init 0020       vPutSampleDataIntoTable@ucChannelFirstLength 007D  
                __size_of_timer1_interrupt_config 0003                             __size_of_clrSampeTime 0002  
                                      __pbssBANK0 0058                                        __pbssBANK1 00A0  
                                      __pbssBANK3 0190                      __size_ofi1_setAD_ConvertFlag 0004  
                                      adc_get@val 0072                   __end_of_vPutSampleDataIntoTable 03FD  
                                         ?_Filter 0020                                        __pmaintext 0013  
                                      __pintentry 0004                               main@enumInteralStep 00BC  
                                       ?_dac_init 0070                            ??_clearPinPortAndTimer 0020  
                           __size_of_clock_config 0008                                           _OP1CON0 001B  
                                         _OP1CON1 001C                                           _OP1CON2 001D  
                                         _OP2CON0 009B                                           _OP2CON1 009C  
                                         _OP2CON2 009D                                      _clrSampeTime 0697  
                               __end_of_adc_start 0598                              _uiTwentySecondsTimer 00B6  
                                       ?_op1_init 0070                                         ?_op2_init 0070  
                              _isPermitSampleTime 0671                                           Filter@i 0055  
                                         Filter@j 0054                            _buffer_Sample_AD_Value 00A0  
                              _adc_original_value 00AC                     __size_of_startThreeHoursTimer 000E  
                      __size_of_getAD_ConvertFlag 0002                        __size_of_setAD_ConvertFlag 0005  
                                  main@ucTimer20s 00BD                       __size_of_getAdOriginalValue 0009  
                                  main@ucTimerP3s 00BE                               ?_isPermitSampleTime 0070  
                                 __size_of_Filter 0097                                        _uiBigTimer 00B2  
                                    _clock_config 0669                                           _adc_get 0396  
                             _multiFilterMaxValue 00AE              __end_of_isFinishedTwentySecondsTimer 0684  
           __size_of_isFinishedTwentySecondsTimer 0006                      _isFinishedTwentySecondsTimer 067E  
                             _multiFilterMinValue 00B0                              ??_isPermitSampleTime 0020  
                    __end_of_startTwelveHourTimer 0638                                        ??_dac_init 0020  
                                       _AD_Sample 0524                                      __size_of_ISR 006A  
                                         _initPin 05E8                     __size_of_getAdOriginaCh4Value 0009  
                                 ??_adc_test_init 0021                                        ??_op1_init 0020  
                                      ??_op2_init 0020                           _startTwentySecondsTimer 068A  
                            end_of_initialization 05E5                                 Filter@filter_temp 004E  
                             _setAdcSampleChannel 0598                                  main@ucLoaderStep 005D  
                                      ?_AD_Sample 0070                     ?_isFinishedTwentySecondsTimer 0070  
                            main@enumMainLoopStep 005A                                main@ucChannel4Type 005C  
                    ??_isFinishedTwelveHoursTimer 0020                                         Filter@cir 0052  
                                _adc_convert_flag 00B9                              ?_setAdcSampleChannel 0070  
                          __size_of_clearAllTimer 0005                      __end_of_clearThreeHoursTimer 05CC  
                          main@ucTimerADC1ZeroP5s 0063                    __size_of_clearTwelveHoursTimer 0004  
                         _timer1_interrupt_config 0694                     __end_of_clearTwelveHoursTimer 05C8  
              __size_of_isFinishedThreeHoursTimer 0006                                    AD_Sample@index 0024  
                                main@ucTimerX1P5s 00BF                                  main@ucTimerX2P5s 00C0  
                          main@ucTimerZeroPoint3s 006A                            main@ucTimerZeroPoint5s 006B  
                                main@ucTimerDelay 0064                                    __end_of_Filter 04CC  
                                 main@ucADC4_Step 005B               __size_of_isFinishedTwelveHoursTimer 0006  
                        vPutSampleDataIntoTable@i 0077                               i1_setAD_ConvertFlag 03FD  
                       ??_startTwentySecondsTimer 0020                             ??_setAdcSampleChannel 0020  
                             start_initialization 05CF                                       __end_of_ISR 0396  
                           _uiSampleChannelFourth 00C1                          ?_clearTwentySecondsTimer 0070  
                  __size_of_getAdOriginalCh1Value 0009                     __end_of_getAdOriginalCh1Value 042C  
                        ??_getAdOriginalCh14Value 0058                              ?i1_setAD_ConvertFlag 0070  
                            _startTwelveHourTimer 062A                 __end_of_isFinishedThreeHoursTimer 067E  
                              main@enumBranchStep 0059                                          ??_Filter 0022  
                                   _clearAllTimer 05BF                                       __pdataBANK0 006E  
                        ?_vPutSampleDataIntoTable 0074                                       ??_AD_Sample 0022  
                       ??_timer1_interrupt_config 0020                                       __pbssCOMMON 007D  
                               __size_of_dac_init 0005                                     __pcstackBANK0 0020  
                  ??_isFinishedTwentySecondsTimer 0020                                         _adc_start 0595  
                               __size_of_op1_init 000B                                 __size_of_op2_init 0008  
                           ??i1_setAD_ConvertFlag 0070                             ?_startTwelveHourTimer 0020  
                 __end_of_startTwentySecondsTimer 068F                                    ?_clearAllTimer 0070  
                          __size_of_timer1_config 000A                              _clearThreeHoursTimer 05C8  
                    __end_of_startThreeHoursTimer 062A                                         __ptext800 0644  
                                       __ptext801 068F                                         __ptext810 032C  
                                       __ptext802 0508                                         __ptext811 03FD  
                                       __ptext803 0694                                         __ptext812 0396  
                                       __ptext804 064F                                         __ptext813 03A2  
                                       __ptext805 0669                                         __ptext814 0000  
                                       __ptext806 05E8                                         __ptext807 05CC  
                                       __ptext808 05C8                                         __ptext809 05C4  
                                       __ptext780 0524                                         __ptext781 041A  
                                       __ptext790 0678                                         __ptext782 0423  
                                       __ptext791 061C                                         __ptext783 042C  
                                       __ptext792 067E                                         __ptext784 05BF  
                                       __ptext793 068A                                         __ptext785 0598  
                                       __ptext794 0684                                         __ptext786 058C  
                                       __ptext778 04E7                                         __ptext795 062A  
                                       __ptext787 051F                                         __ptext779 05B2  
                                       __ptext796 0697                                         __ptext788 051D  
                                       __ptext797 0671                                         __ptext789 0435  
                                       __ptext798 0595                                         __ptext799 0661  
                                        ?_adc_get 0070                                         __pswtext1 0600  
                                       __pswtext2 060E                                         __pswtext3 0638  
              __end_of_isFinishedTwelveHoursTimer 068A                        _isFinishedTwelveHoursTimer 0684  
                                 ISR@ucTimer1sCnt 00B8                                          ?_initPin 0070  
                   __size_of_clearPinPortAndTimer 000D                        __end_of_getAdOriginalValue 0595  
                       _uiSampleChannelFourteenth 01B8                                        ?_adc_start 0070  
                 __size_of_getAdOriginalCh14Value 0009                                 interrupt_function 0004  
                    __end_of_getAdOriginaCh4Value 0423                   __end_of_timer1_interrupt_config 0697  
                           ?_clearThreeHoursTimer 0070                              adc_test_init@channel 0022  
             vPutSampleDataIntoTable@uiSampleData 0074      vPutSampleDataIntoTable@ucChannelFourthLength 006D  
                     __size_of_isPermitSampleTime 0007                                      _uiSmallTimer 00B4  
                           __end_of_adc_test_init 051D                                     _timer1_config 064F  
                    ??_process_AD_Converter_Value 0025                            ??_startTwelveHourTimer 0022  
                                 ??_clearAllTimer 0020                            _getAdOriginalCh14Value 042C  
                                __size_of_adc_get 000C               __size_of_process_AD_Converter_Value 0021  
                                        _dac_init 068F  vPutSampleDataIntoTable@ucChannelFourteenthLength 006C  
                                __size_of_initPin 0013                                  main@cTimer1s_809 00BB  
                                  Filter@tmpValue 0020                                    ?_timer1_config 0070  
                                        _op1_init 0644                                          _op2_init 0661  
                                     ??_adc_start 0020                              _startThreeHoursTimer 061C  
                           _clearTwelveHoursTimer 05C4                                     __size_of_main 0319  
                                        clear_ram 0659                            ??_clearThreeHoursTimer 0020  
                __size_of_clearTwentySecondsTimer 0003                       __end_of_setAdcSampleChannel 05A0  
                                   ?_clrSampeTime 0070                              _getAdOriginaCh4Value 041A  
                                     _sampleTimes 0058                             ?_startThreeHoursTimer 0020  
                __size_of_vPutSampleDataIntoTable 005B                                          intlevel1 0000  
                           _getAdOriginalCh1Value 0423                      setAdcSampleChannel@ucChannel 0021  
                      ?_isFinishedThreeHoursTimer 0070                                 main@ucLoaderStep1 005E  
                               main@ucLoaderStep2 005F                                 main@ucLoaderStep3 0060  
                               main@ucLoaderStep4 0061                                     ?_clock_config 0070  
                        ?_startTwentySecondsTimer 0070                     startThreeHoursTimer@uiSetTime 0020  
                         i1setAD_ConvertFlag@flag 0070                                    ??_clrSampeTime 0020  
                     ?_isFinishedTwelveHoursTimer 0070                             ?_getAdOriginaCh4Value 0056  
                                 ??_timer1_config 0020                       __end_ofi1_setAD_ConvertFlag 0401  
              __end_of_process_AD_Converter_Value 0508                        _process_AD_Converter_Value 04E7  
                          ?_clearTwelveHoursTimer 0070                                  adc_test_init@ref 0020  
                    __end_of_clearPinPortAndTimer 05BF                                _getAdOriginalValue 058C  
