

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Mon Jun 24 19:30:05 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,delta=2
    15                           	psect	swtext1,local,class=CONST,delta=2
    16                           	psect	swtext2,local,class=CONST,delta=2
    17                           	psect	swtext3,local,class=CONST,delta=2
    18                           	psect	text732,local,class=CODE,delta=2
    19                           	psect	text733,local,class=CODE,delta=2
    20                           	psect	text736,local,class=CODE,delta=2
    21                           	psect	text743,local,class=CODE,delta=2
    22                           	psect	text744,local,class=CODE,delta=2
    23                           	psect	text745,local,class=CODE,delta=2
    24                           	psect	text746,local,class=CODE,delta=2
    25                           	psect	text747,local,class=CODE,delta=2
    26                           	psect	text748,local,class=CODE,delta=2
    27                           	psect	text749,local,class=CODE,delta=2
    28                           	psect	text750,local,class=CODE,delta=2
    29                           	psect	text752,local,class=CODE,delta=2
    30                           	psect	text753,local,class=CODE,delta=2
    31                           	psect	text754,local,class=CODE,delta=2
    32                           	psect	text756,local,class=CODE,delta=2
    33                           	psect	text757,local,class=CODE,delta=2
    34                           	psect	text758,local,class=CODE,delta=2
    35                           	psect	text764,local,class=CODE,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	text768,local,class=CODE,delta=2
    38                           	psect	pa_nodes,global,class=CODE,delta=2
    39                           	dabs	1,0x7E,2
    40  000A                     	;#
    41                           
    42                           	psect	config
    43  2000  2FFF               	dw	12287	;#
    44  2001  3FDE               	dw	16350	;#
    45  2002  3FF8               	dw	16376	;#
    46                           
    47                           	psect	idataBANK0
    48  0000                     __pidataBANK0:	
    49  001F                     _ADCON0	set	31
    50  001E                     _ADRESH	set	30
    51  001B                     _OP1CON0	set	27
    52  001C                     _OP1CON1	set	28
    53  001D                     _OP1CON2	set	29
    54  0010                     _T1CON	set	16
    55  000F                     _TMR1H	set	15
    56  000E                     _TMR1L	set	14
    57  006A                     _ADIF	set	106
    58  00F8                     _ADON	set	248
    59  005F                     _GIE	set	95
    60  00F9                     _GO	set	249
    61  0028                     _PA0	set	40
    62  0029                     _PA1	set	41
    63  002A                     _PA2	set	42
    64  002B                     _PA3	set	43
    65  002E                     _PA6	set	46
    66  002F                     _PA7	set	47
    67  0030                     _PB0	set	48
    68  0031                     _PB1	set	49
    69  0036                     _PB6	set	54
    70  005E                     _PEIE	set	94
    71  0060                     _TMR1IF	set	96
    72  009F                     _ADCON1	set	159
    73  009E                     _ADRESL	set	158
    74  0087                     _DACCON	set	135
    75  0088                     _DACR0	set	136
    76  009B                     _OP2CON0	set	155
    77  009C                     _OP2CON1	set	156
    78  009D                     _OP2CON2	set	157
    79  046A                     _ADIE	set	1130
    80  0460                     _TMR1IE	set	1120
    81  0428                     _TRISA0	set	1064
    82  0429                     _TRISA1	set	1065
    83  042A                     _TRISA2	set	1066
    84  042B                     _TRISA3	set	1067
    85  042E                     _TRISA6	set	1070
    86  042F                     _TRISA7	set	1071
    87  0430                     _TRISB0	set	1072
    88  0431                     _TRISB1	set	1073
    89  0432                     _TRISB2	set	1074
    90  0433                     _TRISB3	set	1075
    91  0434                     _TRISB4	set	1076
    92  0435                     _TRISB5	set	1077
    93  0436                     _TRISB6	set	1078
    94  0437                     _TRISB7	set	1079
    95  0108                     _CLKPR	set	264
    96  0847                     _CLKPCE	set	2119
    97  0C3F                     _PAOD7	set	3135
    98  0C46                     _PBOD6	set	3142
    99                           
   100                           	psect	cinit
   101  0544                     start_initialization:	
   102  0544  3049               	movlw	low __pbssBANK0
   103                           
   104                           ; Clear objects allocated to COMMON
   105  0545  01FD               	clrf	__pbssCOMMON& (0+127)
   106                           
   107                           ; Clear objects allocated to BANK0
   108  0546  1383               	bcf	3,7	;select IRP bank0
   109  0547  0084               	movwf	4
   110  0548  306E               	movlw	low (__pbssBANK0+37)
   111  0549  118A  25A5  118A   	fcall	clear_ram
   112                           
   113                           ; Clear objects allocated to BANK1
   114  054C  30A0               	movlw	low __pbssBANK1
   115  054D  0084               	movwf	4
   116  054E  30EA               	movlw	low (__pbssBANK1+74)
   117  054F  118A  25A5         	fcall	clear_ram
   118                           
   119                           ;initializer for _sampleChannelSelect
   120  0551  300E               	movlw	14
   121  0552  00EE               	movwf	__pdataBANK0& (0+127)
   122  0553                     end_of_initialization:	
   123                           ;End of C runtime variable initialization code
   124                           
   125  0553  0183               	clrf	3
   126  0554  118A  2813         	ljmp	_main	;jump to C main() function
   127                           
   128                           	psect	bssCOMMON
   129  007D                     __pbssCOMMON:	
   130  007D                     vPutSampleDataIntoTable@ucChannelFirstLength:	
   131  007D                     	ds	1
   132                           
   133                           	psect	bssBANK0
   134  0049                     __pbssBANK0:	
   135  0049                     _uiBigTimer:	
   136  0049                     	ds	2
   137  004B                     _uiSmallTimer:	
   138  004B                     	ds	2
   139  004D                     ISR@ucTimer1sCnt:	
   140  004D                     	ds	1
   141  004E                     _adc_convert_flag:	
   142  004E                     	ds	1
   143  004F                     _sampleTimes:	
   144  004F                     	ds	1
   145  0050                     _timer:	
   146  0050                     	ds	1
   147  0051                     main@cTimer1s_815:	
   148  0051                     	ds	1
   149  0052                     main@enumBranchStep:	
   150  0052                     	ds	1
   151  0053                     main@enumInteralStep:	
   152  0053                     	ds	1
   153  0054                     main@enumMainLoopStep:	
   154  0054                     	ds	1
   155  0055                     main@ucADC4_Step:	
   156  0055                     	ds	1
   157  0056                     main@ucChannel4Type:	
   158  0056                     	ds	1
   159  0057                     main@ucLoaderStep:	
   160  0057                     	ds	1
   161  0058                     main@ucLoaderStep1:	
   162  0058                     	ds	1
   163  0059                     main@ucLoaderStep2:	
   164  0059                     	ds	1
   165  005A                     main@ucLoaderStep3:	
   166  005A                     	ds	1
   167  005B                     main@ucLoaderStep4:	
   168  005B                     	ds	1
   169  005C                     main@ucTimer1s:	
   170  005C                     	ds	1
   171  005D                     main@ucTimer20s:	
   172  005D                     	ds	1
   173  005E                     main@ucTimerADC1ZeroP5s:	
   174  005E                     	ds	1
   175  005F                     main@ucTimerDelay:	
   176  005F                     	ds	1
   177  0060                     main@ucTimerDelay1:	
   178  0060                     	ds	1
   179  0061                     main@ucTimerDelay2:	
   180  0061                     	ds	1
   181  0062                     main@ucTimerDelay3:	
   182  0062                     	ds	1
   183  0063                     main@ucTimerDelay4:	
   184  0063                     	ds	1
   185  0064                     main@ucTimerDelayP5s:	
   186  0064                     	ds	1
   187  0065                     main@ucTimerP3s:	
   188  0065                     	ds	1
   189  0066                     main@ucTimerP5s:	
   190  0066                     	ds	1
   191  0067                     main@ucTimerRightP5s:	
   192  0067                     	ds	1
   193  0068                     main@ucTimerX1P5s:	
   194  0068                     	ds	1
   195  0069                     main@ucTimerX2P5s:	
   196  0069                     	ds	1
   197  006A                     main@ucTimerZeroPoint3s:	
   198  006A                     	ds	1
   199  006B                     main@ucTimerZeroPoint5s:	
   200  006B                     	ds	1
   201  006C                     vPutSampleDataIntoTable@ucChannelFourteenthLength:	
   202  006C                     	ds	1
   203  006D                     vPutSampleDataIntoTable@ucChannelFourthLength:	
   204  006D                     	ds	1
   205                           
   206                           	psect	dataBANK0
   207  006E                     __pdataBANK0:	
   208  006E                     _sampleChannelSelect:	
   209  006E                     	ds	1
   210                           
   211                           	psect	bssBANK1
   212  00A0                     __pbssBANK1:	
   213  00A0                     _uiTwentySecondsTimer:	
   214  00A0                     	ds	2
   215  00A2                     _uiSampleChannelFirst:	
   216  00A2                     	ds	24
   217  00BA                     _uiSampleChannelFourteenth:	
   218  00BA                     	ds	24
   219  00D2                     _uiSampleChannelFourth:	
   220  00D2                     	ds	24
   221                           
   222                           	psect	clrtext
   223  05A5                     clear_ram:	
   224                           ;	Called with FSR containing the base address, and
   225                           ;	W with the last address+1
   226                           
   227  05A5  0064               	clrwdt	;clear the watchdog before getting into this loop
   228  05A6                     clrloop:	
   229  05A6  0180               	clrf	0	;clear RAM location pointed to by FSR
   230  05A7  0A84               	incf	4,f	;increment pointer
   231  05A8  0604               	xorwf	4,w	;XOR with final address
   232  05A9  1903               	btfsc	3,2	;have we reached the end yet?
   233  05AA  3400               	retlw	0	;all done for this memory range, return
   234  05AB  0604               	xorwf	4,w	;XOR again to restore value
   235  05AC  2DA6               	goto	clrloop	;do the next byte
   236                           
   237                           	psect	cstackCOMMON
   238  0070                     __pcstackCOMMON:	
   239  0070                     ?_clearTwelveHoursTimer:	
   240  0070                     ?_clearThreeHoursTimer:	
   241                           ; 0 bytes @ 0x0
   242                           
   243  0070                     ?_clearTwentySecondsTimer:	
   244                           ; 0 bytes @ 0x0
   245                           
   246  0070                     ?_clock_config:	
   247                           ; 0 bytes @ 0x0
   248                           
   249  0070                     ?_timer1_config:	
   250                           ; 0 bytes @ 0x0
   251                           
   252  0070                     ?_timer1_interrupt_config:	
   253                           ; 0 bytes @ 0x0
   254                           
   255  0070                     ?_dac_init:	
   256                           ; 0 bytes @ 0x0
   257                           
   258  0070                     ?_op1_init:	
   259                           ; 0 bytes @ 0x0
   260                           
   261  0070                     ?_op2_init:	
   262                           ; 0 bytes @ 0x0
   263                           
   264  0070                     ?_adc_start:	
   265                           ; 0 bytes @ 0x0
   266                           
   267  0070                     ?_process_AD_Converter_Value:	
   268                           ; 0 bytes @ 0x0
   269                           
   270  0070                     ?_clrSampeTime:	
   271                           ; 0 bytes @ 0x0
   272                           
   273  0070                     ?_startTwentySecondsTimer:	
   274                           ; 0 bytes @ 0x0
   275                           
   276  0070                     ?_AD_Sample:	
   277                           ; 0 bytes @ 0x0
   278                           
   279  0070                     ?_vSetPA3:	
   280                           ; 0 bytes @ 0x0
   281                           
   282  0070                     ?_vsetPB6HignResistence:	
   283                           ; 0 bytes @ 0x0
   284                           
   285  0070                     ?_clearAllTimer:	
   286                           ; 0 bytes @ 0x0
   287                           
   288  0070                     ?_clearPinPortAndTimer:	
   289                           ; 0 bytes @ 0x0
   290                           
   291  0070                     ?_initPin:	
   292                           ; 0 bytes @ 0x0
   293                           
   294  0070                     ?_main:	
   295                           ; 0 bytes @ 0x0
   296                           
   297  0070                     ?_setAD_ConvertFlag:	
   298                           ; 0 bytes @ 0x0
   299                           
   300  0070                     ?_ISR:	
   301                           ; 0 bytes @ 0x0
   302                           
   303  0070                     ?i1_setAD_ConvertFlag:	
   304                           ; 0 bytes @ 0x0
   305                           
   306  0070                     ??i1_setAD_ConvertFlag:	
   307                           ; 0 bytes @ 0x0
   308                           
   309  0070                     ?_isPermitSampleTime:	
   310                           ; 0 bytes @ 0x0
   311                           
   312  0070                     ?_isFinishedTwelveHoursTimer:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0070                     ?_isFinishedTwentySecondsTimer:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0070                     ?_isFinishedThreeHoursTimer:	
   319                           ; 1 bytes @ 0x0
   320                           
   321  0070                     ?_getAD_ConvertFlag:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0070                     ?_adc_get:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0070                     i1setAD_ConvertFlag@flag:	
   328                           ; 2 bytes @ 0x0
   329                           
   330                           
   331                           ; 1 bytes @ 0x0
   332  0070                     	ds	2
   333  0072                     ??_adc_get:	
   334  0072                     adc_get@val:	
   335                           ; 0 bytes @ 0x2
   336                           
   337                           
   338                           ; 2 bytes @ 0x2
   339  0072                     	ds	2
   340  0074                     ?_vPutSampleDataIntoTable:	
   341  0074                     vPutSampleDataIntoTable@uiSampleData:	
   342                           ; 0 bytes @ 0x4
   343                           
   344                           
   345                           ; 2 bytes @ 0x4
   346  0074                     	ds	2
   347  0076                     vPutSampleDataIntoTable@channel:	
   348                           
   349                           ; 1 bytes @ 0x6
   350  0076                     	ds	1
   351  0077                     ??_vPutSampleDataIntoTable:	
   352  0077                     vPutSampleDataIntoTable@i:	
   353                           ; 0 bytes @ 0x7
   354                           
   355                           
   356                           ; 2 bytes @ 0x7
   357  0077                     	ds	2
   358  0079                     ??_ISR:	
   359                           
   360                           ; 0 bytes @ 0x9
   361  0079                     	ds	4
   362                           
   363                           	psect	cstackBANK0
   364  0020                     __pcstackBANK0:	
   365  0020                     ??_clearTwelveHoursTimer:	
   366  0020                     ??_clearThreeHoursTimer:	
   367                           ; 0 bytes @ 0x0
   368                           
   369  0020                     ??_clearTwentySecondsTimer:	
   370                           ; 0 bytes @ 0x0
   371                           
   372  0020                     ??_clock_config:	
   373                           ; 0 bytes @ 0x0
   374                           
   375  0020                     ??_timer1_config:	
   376                           ; 0 bytes @ 0x0
   377                           
   378  0020                     ??_timer1_interrupt_config:	
   379                           ; 0 bytes @ 0x0
   380                           
   381  0020                     ?_adc_test_init:	
   382                           ; 0 bytes @ 0x0
   383                           
   384  0020                     ??_dac_init:	
   385                           ; 0 bytes @ 0x0
   386                           
   387  0020                     ??_op1_init:	
   388                           ; 0 bytes @ 0x0
   389                           
   390  0020                     ??_op2_init:	
   391                           ; 0 bytes @ 0x0
   392                           
   393  0020                     ??_adc_start:	
   394                           ; 0 bytes @ 0x0
   395                           
   396  0020                     ??_isPermitSampleTime:	
   397                           ; 0 bytes @ 0x0
   398                           
   399  0020                     ??_clrSampeTime:	
   400                           ; 0 bytes @ 0x0
   401                           
   402  0020                     ?_startTwelveHourTimer:	
   403                           ; 0 bytes @ 0x0
   404                           
   405  0020                     ??_isFinishedTwelveHoursTimer:	
   406                           ; 0 bytes @ 0x0
   407                           
   408  0020                     ??_startTwentySecondsTimer:	
   409                           ; 0 bytes @ 0x0
   410                           
   411  0020                     ??_isFinishedTwentySecondsTimer:	
   412                           ; 0 bytes @ 0x0
   413                           
   414  0020                     ?_startThreeHoursTimer:	
   415                           ; 0 bytes @ 0x0
   416                           
   417  0020                     ??_isFinishedThreeHoursTimer:	
   418                           ; 0 bytes @ 0x0
   419                           
   420  0020                     ??_AD_Sample:	
   421                           ; 0 bytes @ 0x0
   422                           
   423  0020                     ??_vSetPA3:	
   424                           ; 0 bytes @ 0x0
   425                           
   426  0020                     ??_vsetPB6HignResistence:	
   427                           ; 0 bytes @ 0x0
   428                           
   429  0020                     ??_clearAllTimer:	
   430                           ; 0 bytes @ 0x0
   431                           
   432  0020                     ??_clearPinPortAndTimer:	
   433                           ; 0 bytes @ 0x0
   434                           
   435  0020                     ??_getAD_ConvertFlag:	
   436                           ; 0 bytes @ 0x0
   437                           
   438  0020                     ??_setAD_ConvertFlag:	
   439                           ; 0 bytes @ 0x0
   440                           
   441  0020                     ?_Filter:	
   442                           ; 0 bytes @ 0x0
   443                           
   444  0020                     vsetPB6HignResistence@ucValue:	
   445                           ; 2 bytes @ 0x0
   446                           
   447  0020                     setAD_ConvertFlag@flag:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0020                     adc_test_init@ref:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0020                     startTwelveHourTimer@uiSetTime:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0020                     startThreeHoursTimer@uiSetTime:	
   457                           ; 2 bytes @ 0x0
   458                           
   459                           
   460                           ; 2 bytes @ 0x0
   461  0020                     	ds	1
   462  0021                     ??_adc_test_init:	
   463  0021                     ??_initPin:	
   464                           ; 0 bytes @ 0x1
   465                           
   466                           
   467                           ; 0 bytes @ 0x1
   468  0021                     	ds	1
   469  0022                     ??_startTwelveHourTimer:	
   470  0022                     ??_startThreeHoursTimer:	
   471                           ; 0 bytes @ 0x2
   472                           
   473  0022                     ??_Filter:	
   474                           ; 0 bytes @ 0x2
   475                           
   476  0022                     adc_test_init@channel:	
   477                           ; 0 bytes @ 0x2
   478                           
   479                           
   480                           ; 1 bytes @ 0x2
   481  0022                     	ds	1
   482  0023                     ??_process_AD_Converter_Value:	
   483                           
   484                           ; 0 bytes @ 0x3
   485  0023                     	ds	3
   486  0026                     Filter@filter_buf:	
   487                           
   488                           ; 24 bytes @ 0x6
   489  0026                     	ds	24
   490  003E                     Filter@filter_temp:	
   491                           
   492                           ; 2 bytes @ 0x1E
   493  003E                     	ds	2
   494  0040                     Filter@filter_sum:	
   495                           
   496                           ; 2 bytes @ 0x20
   497  0040                     	ds	2
   498  0042                     Filter@tmpValue:	
   499                           
   500                           ; 1 bytes @ 0x22
   501  0042                     	ds	1
   502  0043                     Filter@cir:	
   503                           
   504                           ; 2 bytes @ 0x23
   505  0043                     	ds	2
   506  0045                     Filter@j:	
   507                           
   508                           ; 1 bytes @ 0x25
   509  0045                     	ds	1
   510  0046                     Filter@i:	
   511                           
   512                           ; 1 bytes @ 0x26
   513  0046                     	ds	1
   514  0047                     ?_getAdOriginalCh14Value:	
   515  0047                     ?_getAdOriginalCh1Value:	
   516                           ; 2 bytes @ 0x27
   517                           
   518  0047                     ?_getAdOriginaCh4Value:	
   519                           ; 2 bytes @ 0x27
   520                           
   521                           
   522                           ; 2 bytes @ 0x27
   523  0047                     	ds	2
   524  0049                     ??_getAdOriginalCh14Value:	
   525  0049                     ??_getAdOriginalCh1Value:	
   526                           ; 0 bytes @ 0x29
   527                           
   528  0049                     ??_getAdOriginaCh4Value:	
   529                           ; 0 bytes @ 0x29
   530                           
   531  0049                     ??_main:	
   532                           ; 0 bytes @ 0x29
   533                           
   534                           
   535                           	psect	maintext
   536  0013                     __pmaintext:	
   537                           ; 0 bytes @ 0x29
   538 ;;Data sizes: Strings 0, constant 0, data 1, bss 112, persistent 0 stack 0
   539 ;;Auto spaces:   Size  Autos    Used
   540 ;; COMMON          14     13      14
   541 ;; BANK0           80     41      79
   542 ;; BANK1           80      0      74
   543 ;; BANK3           96      0       0
   544 ;; BANK2           96      0       0
   545 ;;
   546 ;; Pointer list with targets:
   547 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   548 ;;
   549 ;; ?_getAdOriginalCh14Value	unsigned int  size(1) Largest target is 0
   550 ;;
   551 ;; ?_getAdOriginaCh4Value	unsigned int  size(1) Largest target is 0
   552 ;;
   553 ;; ?_getAdOriginalCh1Value	unsigned int  size(1) Largest target is 0
   554 ;;
   555 ;; ?_Filter	unsigned int  size(1) Largest target is 0
   556 ;;
   557 ;; Filter@tmpValue	PTR int  size(1) Largest target is 24
   558 ;;		 -> uiSampleChannelFourteenth(BANK1[24]), uiSampleChannelFourth(BANK1[24]), uiSampleChannelFirst(BANK1[24]), 
   559 ;;
   560 ;;
   561 ;; Critical Paths under _main in COMMON
   562 ;;
   563 ;;   None.
   564 ;;
   565 ;; Critical Paths under _ISR in COMMON
   566 ;;
   567 ;;   _ISR->_vPutSampleDataIntoTable
   568 ;;   _vPutSampleDataIntoTable->_adc_get
   569 ;;
   570 ;; Critical Paths under _main in BANK0
   571 ;;
   572 ;;   _main->_getAdOriginalCh14Value
   573 ;;   _main->_getAdOriginalCh1Value
   574 ;;   _main->_getAdOriginaCh4Value
   575 ;;   _getAdOriginaCh4Value->_Filter
   576 ;;   _getAdOriginalCh1Value->_Filter
   577 ;;   _getAdOriginalCh14Value->_Filter
   578 ;;   _process_AD_Converter_Value->_adc_test_init
   579 ;;   _initPin->_vsetPB6HignResistence
   580 ;;
   581 ;; Critical Paths under _ISR in BANK0
   582 ;;
   583 ;;   None.
   584 ;;
   585 ;; Critical Paths under _main in BANK1
   586 ;;
   587 ;;   None.
   588 ;;
   589 ;; Critical Paths under _ISR in BANK1
   590 ;;
   591 ;;   None.
   592 ;;
   593 ;; Critical Paths under _main in BANK3
   594 ;;
   595 ;;   None.
   596 ;;
   597 ;; Critical Paths under _ISR in BANK3
   598 ;;
   599 ;;   None.
   600 ;;
   601 ;; Critical Paths under _main in BANK2
   602 ;;
   603 ;;   None.
   604 ;;
   605 ;; Critical Paths under _ISR in BANK2
   606 ;;
   607 ;;   None.
   608 ;;
   609 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   610 ;;
   611 ;;
   612 ;;Call Graph Tables:
   613 ;;
   614 ;; ---------------------------------------------------------------------------------
   615 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   616 ;; ---------------------------------------------------------------------------------
   617 ;; (0) _main                                                 0     0      0    2058
   618 ;;                            _initPin
   619 ;;                       _clock_config
   620 ;;                      _timer1_config
   621 ;;            _timer1_interrupt_config
   622 ;;                      _adc_test_init
   623 ;;                           _dac_init
   624 ;;                           _op1_init
   625 ;;                           _op2_init
   626 ;;                          _adc_start
   627 ;;         _process_AD_Converter_Value
   628 ;;                 _isPermitSampleTime
   629 ;;                       _clrSampeTime
   630 ;;             _getAdOriginalCh14Value
   631 ;;               _clearPinPortAndTimer
   632 ;;              _getAdOriginalCh1Value
   633 ;;               _startTwelveHourTimer
   634 ;;         _isFinishedTwelveHoursTimer
   635 ;;            _startTwentySecondsTimer
   636 ;;               _getAdOriginaCh4Value
   637 ;;                            _vSetPA3
   638 ;;       _isFinishedTwentySecondsTimer
   639 ;;              _vsetPB6HignResistence
   640 ;;               _startThreeHoursTimer
   641 ;;          _isFinishedThreeHoursTimer
   642 ;;               _clearThreeHoursTimer
   643 ;;                      _clearAllTimer
   644 ;; ---------------------------------------------------------------------------------
   645 ;; (1) _clearPinPortAndTimer                                 0     0      0       0
   646 ;;                            _vSetPA3
   647 ;;                      _clearAllTimer
   648 ;; ---------------------------------------------------------------------------------
   649 ;; (1) _getAdOriginaCh4Value                                 2     0      2     620
   650 ;;                                             39 BANK0      2     0      2
   651 ;;                             _Filter
   652 ;; ---------------------------------------------------------------------------------
   653 ;; (1) _getAdOriginalCh1Value                                2     0      2     620
   654 ;;                                             39 BANK0      2     0      2
   655 ;;                             _Filter
   656 ;; ---------------------------------------------------------------------------------
   657 ;; (1) _getAdOriginalCh14Value                               2     0      2     620
   658 ;;                                             39 BANK0      2     0      2
   659 ;;                             _Filter
   660 ;; ---------------------------------------------------------------------------------
   661 ;; (1) _process_AD_Converter_Value                           0     0      0      66
   662 ;;                  _getAD_ConvertFlag
   663 ;;                  _setAD_ConvertFlag
   664 ;;                          _AD_Sample
   665 ;;                      _adc_test_init
   666 ;;                          _adc_start
   667 ;; ---------------------------------------------------------------------------------
   668 ;; (1) _initPin                                              0     0      0      22
   669 ;;              _vsetPB6HignResistence
   670 ;;                            _vSetPA3
   671 ;; ---------------------------------------------------------------------------------
   672 ;; (1) _clearAllTimer                                        0     0      0       0
   673 ;;              _clearTwelveHoursTimer
   674 ;;               _clearThreeHoursTimer
   675 ;;            _clearTwentySecondsTimer
   676 ;; ---------------------------------------------------------------------------------
   677 ;; (2) _AD_Sample                                            0     0      0       0
   678 ;; ---------------------------------------------------------------------------------
   679 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   680 ;;                                              0 BANK0      1     1      0
   681 ;; ---------------------------------------------------------------------------------
   682 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   683 ;; ---------------------------------------------------------------------------------
   684 ;; (2) _Filter                                              39    37      2     620
   685 ;;                                              0 BANK0     39    37      2
   686 ;; ---------------------------------------------------------------------------------
   687 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   688 ;; ---------------------------------------------------------------------------------
   689 ;; (1) _startThreeHoursTimer                                 2     0      2      22
   690 ;;                                              0 BANK0      2     0      2
   691 ;; ---------------------------------------------------------------------------------
   692 ;; (1) _isFinishedTwentySecondsTimer                         0     0      0       0
   693 ;; ---------------------------------------------------------------------------------
   694 ;; (1) _startTwentySecondsTimer                              0     0      0       0
   695 ;; ---------------------------------------------------------------------------------
   696 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   697 ;; ---------------------------------------------------------------------------------
   698 ;; (1) _startTwelveHourTimer                                 2     0      2      22
   699 ;;                                              0 BANK0      2     0      2
   700 ;; ---------------------------------------------------------------------------------
   701 ;; (1) _clrSampeTime                                         0     0      0       0
   702 ;; ---------------------------------------------------------------------------------
   703 ;; (1) _isPermitSampleTime                                   0     0      0       0
   704 ;; ---------------------------------------------------------------------------------
   705 ;; (2) _adc_start                                            0     0      0       0
   706 ;; ---------------------------------------------------------------------------------
   707 ;; (1) _op2_init                                             0     0      0       0
   708 ;; ---------------------------------------------------------------------------------
   709 ;; (1) _op1_init                                             0     0      0       0
   710 ;; ---------------------------------------------------------------------------------
   711 ;; (1) _dac_init                                             0     0      0       0
   712 ;; ---------------------------------------------------------------------------------
   713 ;; (2) _adc_test_init                                        3     2      1      44
   714 ;;                                              0 BANK0      3     2      1
   715 ;; ---------------------------------------------------------------------------------
   716 ;; (1) _timer1_interrupt_config                              0     0      0       0
   717 ;; ---------------------------------------------------------------------------------
   718 ;; (1) _timer1_config                                        0     0      0       0
   719 ;; ---------------------------------------------------------------------------------
   720 ;; (1) _clock_config                                         0     0      0       0
   721 ;; ---------------------------------------------------------------------------------
   722 ;; (2) _clearTwentySecondsTimer                              0     0      0       0
   723 ;; ---------------------------------------------------------------------------------
   724 ;; (2) _clearThreeHoursTimer                                 0     0      0       0
   725 ;; ---------------------------------------------------------------------------------
   726 ;; (2) _clearTwelveHoursTimer                                0     0      0       0
   727 ;; ---------------------------------------------------------------------------------
   728 ;; (1) _vsetPB6HignResistence                                1     1      0      22
   729 ;;                                              0 BANK0      1     1      0
   730 ;; ---------------------------------------------------------------------------------
   731 ;; (1) _vSetPA3                                              0     0      0       0
   732 ;; ---------------------------------------------------------------------------------
   733 ;; Estimated maximum stack depth 2
   734 ;; ---------------------------------------------------------------------------------
   735 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   736 ;; ---------------------------------------------------------------------------------
   737 ;; (4) _ISR                                                  4     4      0     407
   738 ;;                                              9 COMMON     4     4      0
   739 ;;                i1_setAD_ConvertFlag
   740 ;;                            _adc_get
   741 ;;            _vPutSampleDataIntoTable
   742 ;; ---------------------------------------------------------------------------------
   743 ;; (5) i1_setAD_ConvertFlag                                  1     1      0      73
   744 ;;                                              0 COMMON     1     1      0
   745 ;; ---------------------------------------------------------------------------------
   746 ;; (5) _adc_get                                              4     2      2      24
   747 ;;                                              0 COMMON     4     2      2
   748 ;; ---------------------------------------------------------------------------------
   749 ;; (5) _vPutSampleDataIntoTable                              5     2      3     310
   750 ;;                                              4 COMMON     5     2      3
   751 ;;                            _adc_get (ARG)
   752 ;; ---------------------------------------------------------------------------------
   753 ;; Estimated maximum stack depth 5
   754 ;; ---------------------------------------------------------------------------------
   755 ;; Call Graph Graphs:
   756 ;; _main (ROOT)
   757 ;;   _initPin
   758 ;;     _vsetPB6HignResistence
   759 ;;     _vSetPA3
   760 ;;   _clock_config
   761 ;;   _timer1_config
   762 ;;   _timer1_interrupt_config
   763 ;;   _adc_test_init
   764 ;;   _dac_init
   765 ;;   _op1_init
   766 ;;   _op2_init
   767 ;;   _adc_start
   768 ;;   _process_AD_Converter_Value
   769 ;;     _getAD_ConvertFlag
   770 ;;     _setAD_ConvertFlag
   771 ;;     _AD_Sample
   772 ;;     _adc_test_init
   773 ;;     _adc_start
   774 ;;   _isPermitSampleTime
   775 ;;   _clrSampeTime
   776 ;;   _getAdOriginalCh14Value
   777 ;;     _Filter
   778 ;;   _clearPinPortAndTimer
   779 ;;     _vSetPA3
   780 ;;     _clearAllTimer
   781 ;;       _clearTwelveHoursTimer
   782 ;;       _clearThreeHoursTimer
   783 ;;       _clearTwentySecondsTimer
   784 ;;   _getAdOriginalCh1Value
   785 ;;     _Filter
   786 ;;   _startTwelveHourTimer
   787 ;;   _isFinishedTwelveHoursTimer
   788 ;;   _startTwentySecondsTimer
   789 ;;   _getAdOriginaCh4Value
   790 ;;     _Filter
   791 ;;   _vSetPA3
   792 ;;   _isFinishedTwentySecondsTimer
   793 ;;   _vsetPB6HignResistence
   794 ;;   _startThreeHoursTimer
   795 ;;   _isFinishedThreeHoursTimer
   796 ;;   _clearThreeHoursTimer
   797 ;;   _clearAllTimer
   798 ;;     _clearTwelveHoursTimer
   799 ;;     _clearThreeHoursTimer
   800 ;;     _clearTwentySecondsTimer
   801 ;;
   802 ;; _ISR (ROOT)
   803 ;;   i1_setAD_ConvertFlag
   804 ;;   _adc_get
   805 ;;   _vPutSampleDataIntoTable
   806 ;;     _adc_get (ARG)
   807 ;;
   808 ;; Address spaces:
   809 ;;Name               Size   Autos  Total    Cost      Usage
   810 ;;BANK3               60      0       0      10        0.0%
   811 ;;BITBANK3            60      0       0       9        0.0%
   812 ;;SFR3                 0      0       0       4        0.0%
   813 ;;BITSFR3              0      0       0       4        0.0%
   814 ;;BANK2               60      0       0      12        0.0%
   815 ;;BITBANK2            60      0       0      11        0.0%
   816 ;;SFR2                 0      0       0       5        0.0%
   817 ;;BITSFR2              0      0       0       5        0.0%
   818 ;;SFR1                 0      0       0       2        0.0%
   819 ;;BITSFR1              0      0       0       2        0.0%
   820 ;;BANK1               50      0      4A       8       92.5%
   821 ;;BITBANK1            50      0       0       7        0.0%
   822 ;;CODE                 0      0       0       0        0.0%
   823 ;;DATA                 0      0      AE       6        0.0%
   824 ;;ABS                  0      0      A7       3        0.0%
   825 ;;NULL                 0      0       0       0        0.0%
   826 ;;STACK                0      0       7       2        0.0%
   827 ;;BANK0               50     29      4F       5       98.8%
   828 ;;BITBANK0            50      0       0       4        0.0%
   829 ;;SFR0                 0      0       0       1        0.0%
   830 ;;BITSFR0              0      0       0       1        0.0%
   831 ;;COMMON               E      D       E       1      100.0%
   832 ;;BITCOMMON            E      0       0       0        0.0%
   833                           
   834                           
   835 ;; *************** function _main *****************
   836 ;; Defined at:
   837 ;;		line 173 in file "D:\develop\ATK\AK7030-OTP\main.c"
   838 ;; Parameters:    Size  Location     Type
   839 ;;		None
   840 ;; Auto vars:     Size  Location     Type
   841 ;;		None
   842 ;; Return value:  Size  Location     Type
   843 ;;		None               void
   844 ;; Registers used:
   845 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   846 ;; Tracked objects:
   847 ;;		On entry : 17F/0
   848 ;;		On exit  : 60/0
   849 ;;		Unchanged: FFE00/0
   850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   851 ;;      Params:         0       0       0       0       0
   852 ;;      Locals:         0       0       0       0       0
   853 ;;      Temps:          0       0       0       0       0
   854 ;;      Totals:         0       0       0       0       0
   855 ;;Total ram usage:        0 bytes
   856 ;; Hardware stack levels required when called:    5
   857 ;; This function calls:
   858 ;;		_initPin
   859 ;;		_clock_config
   860 ;;		_timer1_config
   861 ;;		_timer1_interrupt_config
   862 ;;		_adc_test_init
   863 ;;		_dac_init
   864 ;;		_op1_init
   865 ;;		_op2_init
   866 ;;		_adc_start
   867 ;;		_process_AD_Converter_Value
   868 ;;		_isPermitSampleTime
   869 ;;		_clrSampeTime
   870 ;;		_getAdOriginalCh14Value
   871 ;;		_clearPinPortAndTimer
   872 ;;		_getAdOriginalCh1Value
   873 ;;		_startTwelveHourTimer
   874 ;;		_isFinishedTwelveHoursTimer
   875 ;;		_startTwentySecondsTimer
   876 ;;		_getAdOriginaCh4Value
   877 ;;		_vSetPA3
   878 ;;		_isFinishedTwentySecondsTimer
   879 ;;		_vsetPB6HignResistence
   880 ;;		_startThreeHoursTimer
   881 ;;		_isFinishedThreeHoursTimer
   882 ;;		_clearThreeHoursTimer
   883 ;;		_clearAllTimer
   884 ;; This function is called by:
   885 ;;		Startup code after reset
   886 ;; This function uses a non-reentrant model
   887 ;;
   888  0013                     _main:	
   889                           
   890                           ;main.c: 174: enum setp_Adc4
   891                           ;main.c: 175: {
   892                           ;main.c: 176: ADC4_STEP_INIT = 0,
   893                           ;main.c: 177: ADC4_STEP_FIRST,
   894                           ;main.c: 178: ADC4_STEP_SECOND,
   895                           ;main.c: 179: ADC4_STEP_THIRD,
   896                           ;main.c: 180: ADC4_STEP_FOURTH,
   897                           ;main.c: 181: ADC4_STEP_FIFTH,
   898                           ;main.c: 182: ADC4_STEP_SIXTH,
   899                           ;main.c: 183: };
   900                           ;main.c: 186: static unsigned char ucWaitTime1S = 0;
   901                           ;main.c: 188: static unsigned char ucWaitTimeO3s = 0;
   902                           ;main.c: 190: static unsigned char ucSmallTimerActionFlag = 0;
   903                           ;main.c: 192: static unsigned char ucSetSmallActionFlag = 0;
   904                           
   905                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   906  0013  1683               	bsf	3,5	;RP0=1, select bank1
   907  0014  1005               	bcf	5,0
   908                           
   909                           ;main.c: 195: TRISA1 = 0;
   910  0015  1085               	bcf	5,1
   911                           
   912                           ;main.c: 196: TRISA2 = 0;
   913  0016  1105               	bcf	5,2
   914                           
   915                           ;main.c: 197: TRISA3 = 0;
   916  0017  1185               	bcf	5,3
   917                           
   918                           ;main.c: 198: TRISB0 = 0;
   919  0018  1006               	bcf	6,0
   920                           
   921                           ;main.c: 199: TRISB1 = 0;
   922  0019  1086               	bcf	6,1
   923                           
   924                           ;main.c: 200: TRISA6 = 0;
   925  001A  1305               	bcf	5,6
   926                           
   927                           ;main.c: 201: TRISA7 = 0;
   928  001B  1385               	bcf	5,7
   929                           
   930                           ;main.c: 202: TRISB6 = 0;
   931  001C  1306               	bcf	6,6
   932                           
   933                           ;main.c: 205: initPin();
   934  001D  118A  251A  118A   	fcall	_initPin
   935                           
   936                           ;main.c: 208: TRISB2 = 1;
   937  0020  1303               	bcf	3,6	;RP1=0, select bank1
   938  0021  1506               	bsf	6,2
   939                           
   940                           ;main.c: 210: TRISB7 = 1;
   941  0022  1786               	bsf	6,7
   942                           
   943                           ;main.c: 211: TRISB4 = 1;
   944  0023  1606               	bsf	6,4
   945                           
   946                           ;main.c: 213: clock_config();
   947  0024  118A  25B5  118A   	fcall	_clock_config
   948                           
   949                           ;main.c: 214: timer1_config();
   950  0027  118A  2589  118A   	fcall	_timer1_config
   951                           
   952                           ;main.c: 215: timer1_interrupt_config();
   953  002A  118A  25DC  118A   	fcall	_timer1_interrupt_config
   954                           
   955                           ;main.c: 217: adc_test_init(14,3);
   956  002D  3003               	movlw	3
   957  002E  1283               	bcf	3,5	;RP0=0, select bank0
   958  002F  00A0               	movwf	?_adc_test_init
   959  0030  300E               	movlw	14
   960  0031  118A  24EE  118A   	fcall	_adc_test_init
   961                           
   962                           ;main.c: 219: dac_init();
   963  0034  118A  25D7  118A   	fcall	_dac_init
   964                           
   965                           ;main.c: 220: op1_init();
   966  0037  118A  257E  118A   	fcall	_op1_init
   967                           
   968                           ;main.c: 221: op2_init();
   969  003A  118A  25AD  118A   	fcall	_op2_init
   970                           
   971                           ;main.c: 224: adc_start();
   972  003D  118A  2503  118A   	fcall	_adc_start
   973  0040                     l4178:	
   974  0040  0064               	clrwdt	;#
   975                           
   976                           ;main.c: 259: process_AD_Converter_Value();
   977  0041  118A  24AC  118A   	fcall	_process_AD_Converter_Value
   978                           
   979                           ;main.c: 261: if(isPermitSampleTime())
   980  0044  118A  25D2  118A   	fcall	_isPermitSampleTime
   981  0047  3A00               	xorlw	0
   982  0048  1903               	skipnz
   983  0049  2840               	goto	l4178
   984                           
   985                           ;main.c: 262: {
   986                           ;main.c: 263: clrSampeTime();
   987  004A  118A  25DF  118A   	fcall	_clrSampeTime
   988                           
   989                           ;main.c: 265: switch(enumMainLoopStep)
   990  004D  2AFF               	goto	l4674
   991  004E                     l4184:	
   992                           
   993                           ;main.c: 268: {
   994                           ;main.c: 269: static unsigned char ucTimerZeroPoint5s = 0;
   995                           ;main.c: 270: if(getAdOriginalCh14Value() > 1950)
   996  004E  118A  2401  118A   	fcall	_getAdOriginalCh14Value
   997  0051  3007               	movlw	7
   998  0052  0248               	subwf	?_getAdOriginalCh14Value+1,w
   999  0053  309F               	movlw	159
  1000  0054  1903               	skipnz
  1001  0055  0247               	subwf	?_getAdOriginalCh14Value,w
  1002  0056  1C03               	skipc
  1003  0057  285A               	goto	l4188
  1004                           
  1005                           ;main.c: 271: {
  1006                           ;main.c: 272: ucTimerZeroPoint5s++;
  1007  0058  0AEB               	incf	main@ucTimerZeroPoint5s,f
  1008                           
  1009                           ;main.c: 273: }
  1010  0059  285B               	goto	l4190
  1011  005A                     l4188:	
  1012                           
  1013                           ;main.c: 274: else
  1014                           ;main.c: 275: ucTimerZeroPoint5s = 0;
  1015  005A  01EB               	clrf	main@ucTimerZeroPoint5s
  1016  005B                     l4190:	
  1017                           
  1018                           ;main.c: 277: if(ucTimerZeroPoint5s >= 1)
  1019  005B  086B               	movf	main@ucTimerZeroPoint5s,w
  1020  005C  1903               	btfsc	3,2
  1021  005D  2840               	goto	l4178
  1022                           
  1023                           ;main.c: 278: {
  1024                           ;main.c: 279: ucTimerZeroPoint5s = 0;
  1025  005E  01EB               	clrf	main@ucTimerZeroPoint5s
  1026  005F                     l4194:	
  1027                           
  1028                           ;main.c: 280: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  1029  005F  1283               	bcf	3,5	;RP0=0, select bank0
  1030  0060  01D4               	clrf	main@enumMainLoopStep
  1031  0061  0AD4               	incf	main@enumMainLoopStep,f
  1032  0062                     l714:	
  1033                           
  1034                           ;main.c: 281: }
  1035                           ;main.c: 282: break;
  1036  0062  2840               	goto	l4178
  1037  0063                     l4196:	
  1038                           
  1039                           ;main.c: 286: {
  1040                           ;main.c: 287: static unsigned char ucTimerZeroPoint3s = 0;
  1041                           ;main.c: 289: if(ucTimerZeroPoint3s < 1)
  1042  0063  08EA               	movf	main@ucTimerZeroPoint3s,f
  1043  0064  1D03               	skipz
  1044  0065  2868               	goto	l4200
  1045                           
  1046                           ;main.c: 290: {
  1047                           ;main.c: 291: ucTimerZeroPoint3s++;
  1048  0066  0AEA               	incf	main@ucTimerZeroPoint3s,f
  1049                           
  1050                           ;main.c: 292: }
  1051  0067  2840               	goto	l4178
  1052  0068                     l4200:	
  1053                           
  1054                           ;main.c: 297: if(1)
  1055  0068  01EA               	clrf	main@ucTimerZeroPoint3s
  1056  0069                     l4202:	
  1057                           
  1058                           ;main.c: 298: {
  1059                           ;main.c: 300: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
  1060  0069  3002               	movlw	2
  1061  006A  289E               	goto	L5
  1062  006B                     l723:	
  1063                           ;main.c: 308: }
  1064                           ;main.c: 310: case MAIN_LOOP_STEP_SECOND:
  1065                           
  1066                           ;main.c: 301: }
  1067                           
  1068  006B  3005               	movlw	5
  1069                           
  1070                           ;main.c: 311: {
  1071                           ;main.c: 312: static unsigned char ucTimerP5s = 0;
  1072                           ;main.c: 314: PA6 = 1;
  1073  006C  1705               	bsf	5,6
  1074                           
  1075                           ;main.c: 316: if(ucTimerP5s < 5)
  1076  006D  0266               	subwf	main@ucTimerP5s,w
  1077  006E  1803               	skipnc
  1078  006F  2872               	goto	l4210
  1079                           
  1080                           ;main.c: 317: ucTimerP5s++;
  1081  0070  0AE6               	incf	main@ucTimerP5s,f
  1082  0071  2840               	goto	l4178
  1083  0072                     l4210:	
  1084  0072  3003               	movlw	3
  1085                           
  1086                           ;main.c: 318: else
  1087                           ;main.c: 319: {
  1088                           ;main.c: 320: ucTimerP5s = 0;
  1089  0073  01E6               	clrf	main@ucTimerP5s
  1090                           
  1091                           ;main.c: 322: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  1092  0074  289E               	goto	L5
  1093  0075                     l4216:	
  1094                           
  1095                           ;main.c: 337: else
  1096                           ;main.c: 338: {
  1097                           ;main.c: 339: ucTimerADC1ZeroP5s++;
  1098  0075  0ADE               	incf	main@ucTimerADC1ZeroP5s,f
  1099                           
  1100                           ;main.c: 340: }
  1101                           ;main.c: 342: if(ucTimerADC1ZeroP5s >= 1)
  1102  0076  1903               	btfsc	3,2
  1103  0077  287B               	goto	l4224
  1104  0078  3004               	movlw	4
  1105                           
  1106                           ;main.c: 343: {
  1107                           ;main.c: 344: ucTimerADC1ZeroP5s = 0;
  1108  0079  01DE               	clrf	main@ucTimerADC1ZeroP5s
  1109                           
  1110                           ;main.c: 345: enumMainLoopStep = MAIN_LOOP_STEP_FOURTH;
  1111  007A  289E               	goto	L5
  1112  007B                     l4224:	
  1113                           ;main.c: 346: }
  1114                           
  1115                           
  1116                           ;main.c: 347: else
  1117                           ;main.c: 348: {
  1118                           ;main.c: 349: static unsigned char ucTimerRightP5s = 0;
  1119                           ;main.c: 351: if(getAdOriginalCh1Value() < 117)
  1120  007B  118A  23FA  118A   	fcall	_getAdOriginalCh1Value
  1121  007E  3000               	movlw	0
  1122  007F  0248               	subwf	?_getAdOriginalCh1Value+1,w
  1123  0080  3075               	movlw	117
  1124  0081  1903               	skipnz
  1125  0082  0247               	subwf	?_getAdOriginalCh1Value,w
  1126  0083  1803               	skipnc
  1127  0084  2887               	goto	l4228
  1128                           
  1129                           ;main.c: 352: {
  1130                           ;main.c: 353: ucTimerRightP5s++;
  1131  0085  0AE7               	incf	main@ucTimerRightP5s,f
  1132                           
  1133                           ;main.c: 354: }
  1134  0086  2888               	goto	l4230
  1135  0087                     l4228:	
  1136                           
  1137                           ;main.c: 355: else
  1138                           ;main.c: 356: {
  1139                           ;main.c: 357: ucTimerRightP5s = 0;
  1140  0087  01E7               	clrf	main@ucTimerRightP5s
  1141  0088                     l4230:	
  1142                           
  1143                           ;main.c: 358: }
  1144                           ;main.c: 360: if(ucTimerRightP5s >= 1)
  1145  0088  0867               	movf	main@ucTimerRightP5s,w
  1146  0089  1903               	btfsc	3,2
  1147  008A  2840               	goto	l4178
  1148  008B  3008               	movlw	8
  1149                           
  1150                           ;main.c: 361: {
  1151                           ;main.c: 362: ucTimerRightP5s = 0;
  1152  008C  01E7               	clrf	main@ucTimerRightP5s
  1153                           
  1154                           ;main.c: 363: enumMainLoopStep = MAIN_LOOP_STEP_3_HOUR_BRANCH;
  1155  008D  289E               	goto	L5
  1156  008E                     l4236:	
  1157                           ;main.c: 364: }
  1158                           
  1159                           
  1160                           ;main.c: 375: {
  1161                           ;main.c: 377: startTwelveHourTimer(600);
  1162  008E  3058               	movlw	88
  1163  008F  00A0               	movwf	?_startTwelveHourTimer
  1164  0090  3002               	movlw	2
  1165  0091  00A1               	movwf	?_startTwelveHourTimer+1
  1166  0092  118A  259C  118A   	fcall	_startTwelveHourTimer
  1167                           
  1168                           ;main.c: 378: enumMainLoopStep = MAIN_LOOP_STEP_FIFTH;
  1169  0095  3005               	movlw	5
  1170  0096  289E               	goto	L5
  1171  0097                     l4240:	
  1172                           ;main.c: 380: break;
  1173                           
  1174                           
  1175                           ;main.c: 384: {
  1176                           ;main.c: 386: if(isFinishedTwelveHoursTimer())
  1177  0097  118A  25CD  118A   	fcall	_isFinishedTwelveHoursTimer
  1178  009A  3A00               	xorlw	0
  1179  009B  1903               	skipnz
  1180  009C  2A37               	goto	l4566
  1181  009D                     l4242:	
  1182                           
  1183                           ;main.c: 387: {
  1184                           ;main.c: 388: enumMainLoopStep = MAIN_LOOP_STEP_12_HOUR_END;
  1185  009D  3009               	movlw	9
  1186  009E                     L5:	
  1187  009E  00D4               	movwf	main@enumMainLoopStep
  1188                           
  1189                           ;main.c: 389: }
  1190  009F  2840               	goto	l4178
  1191  00A0                     l4244:	
  1192                           
  1193                           ;main.c: 397: {
  1194                           ;main.c: 398: startTwentySecondsTimer();
  1195  00A0  118A  25C8  118A   	fcall	_startTwentySecondsTimer
  1196  00A3                     l4246:	
  1197                           
  1198                           ;main.c: 399: ucADC4_Step = ADC4_STEP_FIRST;
  1199  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  1200  00A4  01D5               	clrf	main@ucADC4_Step
  1201  00A5  0AD5               	incf	main@ucADC4_Step,f
  1202                           
  1203                           ;main.c: 400: break;
  1204  00A6  2840               	goto	l4178
  1205  00A7                     l4248:	
  1206                           
  1207                           ;main.c: 404: {
  1208                           ;main.c: 405: if(getAdOriginaCh4Value() < 1911)
  1209  00A7  118A  23F3  118A   	fcall	_getAdOriginaCh4Value
  1210  00AA  3007               	movlw	7
  1211  00AB  0248               	subwf	?_getAdOriginaCh4Value+1,w
  1212  00AC  3077               	movlw	119
  1213  00AD  1903               	skipnz
  1214  00AE  0247               	subwf	?_getAdOriginaCh4Value,w
  1215  00AF  1803               	skipnc
  1216  00B0  28B3               	goto	l4252
  1217                           
  1218                           ;main.c: 406: ucChannel4Type = LESS_THAN_1911;
  1219  00B1  01D6               	clrf	main@ucChannel4Type
  1220  00B2  28DA               	goto	l752
  1221  00B3                     l4252:	
  1222                           
  1223                           ;main.c: 407: else if(getAdOriginaCh4Value() < 2067)
  1224  00B3  118A  23F3  118A   	fcall	_getAdOriginaCh4Value
  1225  00B6  3008               	movlw	8
  1226  00B7  0248               	subwf	?_getAdOriginaCh4Value+1,w
  1227  00B8  3013               	movlw	19
  1228  00B9  1903               	skipnz
  1229  00BA  0247               	subwf	?_getAdOriginaCh4Value,w
  1230  00BB  1803               	skipnc
  1231  00BC  28C0               	goto	l4256
  1232                           
  1233                           ;main.c: 408: ucChannel4Type = BETWEEN_1911_AND_2067;
  1234  00BD  01D6               	clrf	main@ucChannel4Type
  1235  00BE  0AD6               	incf	main@ucChannel4Type,f
  1236  00BF  28DA               	goto	l752
  1237  00C0                     l4256:	
  1238                           
  1239                           ;main.c: 409: else if(getAdOriginaCh4Value() < 2204)
  1240  00C0  118A  23F3  118A   	fcall	_getAdOriginaCh4Value
  1241  00C3  3008               	movlw	8
  1242  00C4  0248               	subwf	?_getAdOriginaCh4Value+1,w
  1243  00C5  309C               	movlw	156
  1244  00C6  1903               	skipnz
  1245  00C7  0247               	subwf	?_getAdOriginaCh4Value,w
  1246  00C8  1803               	skipnc
  1247  00C9  28CC               	goto	l4260
  1248                           
  1249                           ;main.c: 410: ucChannel4Type = BETWEEN_2067_AND_2204;
  1250  00CA  3002               	movlw	2
  1251  00CB  28D9               	goto	L6
  1252  00CC                     l4260:	
  1253                           
  1254                           ;main.c: 411: else if(getAdOriginaCh4Value() < 2340)
  1255  00CC  118A  23F3  118A   	fcall	_getAdOriginaCh4Value
  1256  00CF  3009               	movlw	9
  1257  00D0  0248               	subwf	?_getAdOriginaCh4Value+1,w
  1258  00D1  3024               	movlw	36
  1259  00D2  1903               	skipnz
  1260  00D3  0247               	subwf	?_getAdOriginaCh4Value,w
  1261  00D4  1803               	skipnc
  1262  00D5  28D8               	goto	l4264
  1263                           
  1264                           ;main.c: 412: ucChannel4Type = BETWEEN_2204_AND_2340;
  1265  00D6  3003               	movlw	3
  1266  00D7  28D9               	goto	L6
  1267  00D8                     l4264:	
  1268                           
  1269                           ;main.c: 413: else
  1270                           ;main.c: 414: ucChannel4Type = MORE_THAN_2340;
  1271  00D8  3004               	movlw	4
  1272  00D9                     L6:	
  1273  00D9  00D6               	movwf	main@ucChannel4Type
  1274  00DA                     l752:	
  1275                           
  1276                           ;main.c: 416: ucADC4_Step = ADC4_STEP_SECOND;
  1277  00DA  3002               	movlw	2
  1278  00DB  2A26               	goto	L8
  1279  00DC                     l767:	
  1280                           ;main.c: 431: {
  1281                           ;main.c: 432: case 0:
  1282                           
  1283                           ;main.c: 417: break;
  1284                           
  1285                           
  1286                           ;main.c: 433: {
  1287                           ;main.c: 434: PB0 = 1;
  1288  00DC  1406               	bsf	6,0
  1289  00DD                     l4266:	
  1290                           
  1291                           ;main.c: 435: ucLoaderStep++;
  1292  00DD  0AD7               	incf	main@ucLoaderStep,f
  1293                           
  1294                           ;main.c: 436: break;
  1295  00DE  2840               	goto	l4178
  1296  00DF                     l4268:	
  1297                           
  1298                           ;main.c: 440: {
  1299                           ;main.c: 441: if(ucTimerDelay >= 5)
  1300  00DF  3005               	movlw	5
  1301  00E0  025F               	subwf	main@ucTimerDelay,w
  1302  00E1  1C03               	skipc
  1303  00E2  28E6               	goto	l4276
  1304                           
  1305                           ;main.c: 442: {
  1306                           ;main.c: 443: PA0 = 1;
  1307  00E3  1405               	bsf	5,0
  1308  00E4                     l4272:	
  1309                           
  1310                           ;main.c: 444: ucTimerDelay = 0;
  1311  00E4  01DF               	clrf	main@ucTimerDelay
  1312  00E5  28DD               	goto	l4266
  1313  00E6                     l4276:	
  1314                           
  1315                           ;main.c: 447: else
  1316                           ;main.c: 448: ucTimerDelay++;
  1317  00E6  0ADF               	incf	main@ucTimerDelay,f
  1318  00E7  2840               	goto	l4178
  1319  00E8                     l4278:	
  1320                           
  1321                           ;main.c: 453: {
  1322                           ;main.c: 454: if(ucTimerDelay >= 5)
  1323  00E8  3005               	movlw	5
  1324  00E9  025F               	subwf	main@ucTimerDelay,w
  1325  00EA  1C03               	skipc
  1326  00EB  28E6               	goto	l4276
  1327                           
  1328                           ;main.c: 455: {
  1329                           ;main.c: 456: PA1= 1;
  1330  00EC  1485               	bsf	5,1
  1331  00ED  28E4               	goto	l4272
  1332  00EE                     l4288:	
  1333                           
  1334                           ;main.c: 467: {
  1335                           ;main.c: 468: if(ucTimerDelay >= 5)
  1336  00EE  3005               	movlw	5
  1337  00EF  025F               	subwf	main@ucTimerDelay,w
  1338  00F0  1C03               	skipc
  1339  00F1  28E6               	goto	l4276
  1340                           
  1341                           ;main.c: 469: {
  1342                           ;main.c: 470: PA2= 1;
  1343  00F2  1505               	bsf	5,2
  1344  00F3  28E4               	goto	l4272
  1345  00F4                     l4298:	
  1346                           
  1347                           ;main.c: 480: {
  1348                           ;main.c: 481: if(ucTimerDelay >= 5)
  1349  00F4  3005               	movlw	5
  1350  00F5  025F               	subwf	main@ucTimerDelay,w
  1351  00F6  1C03               	skipc
  1352  00F7  28E6               	goto	l4276
  1353                           
  1354                           ;main.c: 482: {
  1355                           ;main.c: 484: vSetPA3(1);
  1356  00F8  3001               	movlw	1
  1357  00F9  118A  253C  118A   	fcall	_vSetPA3
  1358  00FC  28E4               	goto	l4272
  1359  00FD                     l4308:	
  1360                           
  1361                           ;main.c: 494: {
  1362                           ;main.c: 495: if(ucTimerDelay >= 5)
  1363  00FD  3005               	movlw	5
  1364  00FE  025F               	subwf	main@ucTimerDelay,w
  1365  00FF  1C03               	skipc
  1366  0100  28E6               	goto	l4276
  1367  0101  3000               	movlw	0
  1368                           
  1369                           ;main.c: 496: {
  1370                           ;main.c: 497: PB0 = 0;
  1371  0102  1006               	bcf	6,0
  1372                           
  1373                           ;main.c: 498: PA0 = 0;
  1374  0103  1005               	bcf	5,0
  1375                           
  1376                           ;main.c: 499: PA1 = 0;
  1377  0104  1085               	bcf	5,1
  1378                           
  1379                           ;main.c: 500: PA2 = 0;
  1380  0105  1105               	bcf	5,2
  1381                           
  1382                           ;main.c: 502: vSetPA3(0);
  1383  0106  118A  253C  118A   	fcall	_vSetPA3
  1384  0109  28E4               	goto	l4272
  1385  010A                     l4320:	
  1386                           
  1387                           ;main.c: 512: {
  1388                           ;main.c: 513: if(ucTimerDelay >= 2)
  1389  010A  3002               	movlw	2
  1390  010B  025F               	subwf	main@ucTimerDelay,w
  1391  010C  1C03               	skipc
  1392  010D  28E6               	goto	l4276
  1393                           
  1394                           ;main.c: 514: {
  1395                           ;main.c: 515: ucTimerDelay = 0;
  1396  010E  01DF               	clrf	main@ucTimerDelay
  1397                           
  1398                           ;main.c: 517: ucLoaderStep = 0;
  1399  010F  01D7               	clrf	main@ucLoaderStep
  1400  0110                     l4324:	
  1401                           
  1402                           ;main.c: 518: ucADC4_Step = ADC4_STEP_THIRD;
  1403  0110  3003               	movlw	3
  1404  0111  2A26               	goto	L8
  1405  0112                     l4330:	
  1406                           ;main.c: 519: }
  1407                           
  1408  0112  0857               	movf	main@ucLoaderStep,w
  1409                           
  1410                           ; Switch size 1, requested type "space"
  1411                           ; Number of cases is 7, Range of values is 0 to 6
  1412                           ; switch strategies available:
  1413                           ; Name         Instructions Cycles
  1414                           ; direct_byte           21     7 (fixed)
  1415                           ; simple_byte           22    12 (average)
  1416                           ; jumptable            260     6 (fixed)
  1417                           ; rangetable            11     6 (fixed)
  1418                           ; spacedrange           20     9 (fixed)
  1419                           ; locatedrange           7     3 (fixed)
  1420                           ;	Chosen strategy is direct_byte
  1421  0113  0084               	movwf	4
  1422  0114  3007               	movlw	7
  1423  0115  0204               	subwf	4,w
  1424  0116  1803               	skipnc
  1425  0117  2840               	goto	l4178
  1426  0118  3005               	movlw	high S4892
  1427  0119  008A               	movwf	10
  1428  011A  1003               	clrc
  1429  011B  0D04               	rlf	4,w
  1430  011C  3E56               	addlw	low S4892
  1431  011D  0082               	movwf	2
  1432  011E                     l795:	
  1433                           ;main.c: 538: {
  1434                           ;main.c: 539: case 0:
  1435                           
  1436                           
  1437                           ;main.c: 540: {
  1438                           ;main.c: 541: PB0 = 1;
  1439  011E  1406               	bsf	6,0
  1440  011F                     l4332:	
  1441                           
  1442                           ;main.c: 542: ucLoaderStep1++;
  1443  011F  0AD8               	incf	main@ucLoaderStep1,f
  1444                           
  1445                           ;main.c: 543: break;
  1446  0120  2840               	goto	l4178
  1447  0121                     l4334:	
  1448                           
  1449                           ;main.c: 547: {
  1450                           ;main.c: 548: if(ucTimerDelay1 >= 5)
  1451  0121  3005               	movlw	5
  1452  0122  0260               	subwf	main@ucTimerDelay1,w
  1453  0123  1C03               	skipc
  1454  0124  2928               	goto	l4342
  1455                           
  1456                           ;main.c: 549: {
  1457                           ;main.c: 550: PA0 = 1;
  1458  0125  1405               	bsf	5,0
  1459  0126                     l4338:	
  1460                           
  1461                           ;main.c: 551: ucTimerDelay1 = 0;
  1462  0126  01E0               	clrf	main@ucTimerDelay1
  1463  0127  291F               	goto	l4332
  1464  0128                     l4342:	
  1465                           
  1466                           ;main.c: 554: else
  1467                           ;main.c: 555: ucTimerDelay1++;
  1468  0128  0AE0               	incf	main@ucTimerDelay1,f
  1469  0129  2840               	goto	l4178
  1470  012A                     l4344:	
  1471                           
  1472                           ;main.c: 560: {
  1473                           ;main.c: 561: if(ucTimerDelay1 >= 5)
  1474  012A  3005               	movlw	5
  1475  012B  0260               	subwf	main@ucTimerDelay1,w
  1476  012C  1C03               	skipc
  1477  012D  2928               	goto	l4342
  1478                           
  1479                           ;main.c: 562: {
  1480                           ;main.c: 563: PA1= 1;
  1481  012E  1485               	bsf	5,1
  1482  012F  2926               	goto	l4338
  1483  0130                     l4354:	
  1484                           
  1485                           ;main.c: 573: {
  1486                           ;main.c: 574: if(ucTimerDelay1 >= 5)
  1487  0130  3005               	movlw	5
  1488  0131  0260               	subwf	main@ucTimerDelay1,w
  1489  0132  1C03               	skipc
  1490  0133  2928               	goto	l4342
  1491                           
  1492                           ;main.c: 575: {
  1493                           ;main.c: 576: PA2 = 1;
  1494  0134  1505               	bsf	5,2
  1495  0135  2926               	goto	l4338
  1496  0136                     l4364:	
  1497                           
  1498                           ;main.c: 586: {
  1499                           ;main.c: 587: if(ucTimerDelay1 >= 5)
  1500  0136  3005               	movlw	5
  1501  0137  0260               	subwf	main@ucTimerDelay1,w
  1502  0138  1C03               	skipc
  1503  0139  2928               	goto	l4342
  1504                           
  1505                           ;main.c: 588: {
  1506                           ;main.c: 590: vSetPA3(1);
  1507  013A  3001               	movlw	1
  1508  013B  118A  253C  118A   	fcall	_vSetPA3
  1509  013E  2926               	goto	l4338
  1510  013F                     l4374:	
  1511                           
  1512                           ;main.c: 600: {
  1513                           ;main.c: 601: if(ucTimerDelay1 >= 5)
  1514  013F  3005               	movlw	5
  1515  0140  0260               	subwf	main@ucTimerDelay1,w
  1516  0141  1C03               	skipc
  1517  0142  2928               	goto	l4342
  1518  0143  3000               	movlw	0
  1519                           
  1520                           ;main.c: 602: {
  1521                           ;main.c: 603: PA0 = 0;
  1522  0144  1005               	bcf	5,0
  1523                           
  1524                           ;main.c: 604: PA1 = 0;
  1525  0145  1085               	bcf	5,1
  1526                           
  1527                           ;main.c: 605: PA2 = 0;
  1528  0146  1105               	bcf	5,2
  1529                           
  1530                           ;main.c: 607: vSetPA3(0);
  1531  0147  118A  253C  118A   	fcall	_vSetPA3
  1532  014A  2926               	goto	l4338
  1533  014B                     l4386:	
  1534                           
  1535                           ;main.c: 617: {
  1536                           ;main.c: 618: if(ucTimerDelay1 >= 2)
  1537  014B  3002               	movlw	2
  1538  014C  0260               	subwf	main@ucTimerDelay1,w
  1539  014D  1C03               	skipc
  1540  014E  2928               	goto	l4342
  1541                           
  1542                           ;main.c: 619: {
  1543                           ;main.c: 620: ucTimerDelay1 = 0;
  1544  014F  01E0               	clrf	main@ucTimerDelay1
  1545                           
  1546                           ;main.c: 622: ucLoaderStep1 = 0;
  1547  0150  01D8               	clrf	main@ucLoaderStep1
  1548  0151  2910               	goto	l4324
  1549  0152                     l4396:	
  1550  0152  0858               	movf	main@ucLoaderStep1,w
  1551                           
  1552                           ; Switch size 1, requested type "space"
  1553                           ; Number of cases is 7, Range of values is 0 to 6
  1554                           ; switch strategies available:
  1555                           ; Name         Instructions Cycles
  1556                           ; direct_byte           21     7 (fixed)
  1557                           ; simple_byte           22    12 (average)
  1558                           ; jumptable            260     6 (fixed)
  1559                           ; rangetable            11     6 (fixed)
  1560                           ; spacedrange           20     9 (fixed)
  1561                           ; locatedrange           7     3 (fixed)
  1562                           ;	Chosen strategy is direct_byte
  1563  0153  0084               	movwf	4
  1564  0154  3007               	movlw	7
  1565  0155  0204               	subwf	4,w
  1566  0156  1803               	skipnc
  1567  0157  2840               	goto	l4178
  1568  0158  3005               	movlw	high S4894
  1569  0159  008A               	movwf	10
  1570  015A  1003               	clrc
  1571  015B  0D04               	rlf	4,w
  1572  015C  3E64               	addlw	low S4894
  1573  015D  0082               	movwf	2
  1574  015E                     l822:	
  1575                           ;main.c: 644: {
  1576                           ;main.c: 645: case 0:
  1577                           
  1578                           
  1579                           ;main.c: 646: {
  1580                           ;main.c: 647: PB0 = 1;
  1581  015E  1406               	bsf	6,0
  1582                           
  1583                           ;main.c: 648: PA0 = 1;
  1584  015F  1405               	bsf	5,0
  1585  0160                     l4398:	
  1586                           
  1587                           ;main.c: 649: ucLoaderStep2++;
  1588  0160  0AD9               	incf	main@ucLoaderStep2,f
  1589                           
  1590                           ;main.c: 650: break;
  1591  0161  2840               	goto	l4178
  1592  0162                     l4400:	
  1593                           
  1594                           ;main.c: 654: {
  1595                           ;main.c: 655: if(ucTimerDelay2 >= 5)
  1596  0162  3005               	movlw	5
  1597  0163  0261               	subwf	main@ucTimerDelay2,w
  1598  0164  1C03               	skipc
  1599  0165  2969               	goto	l4408
  1600                           
  1601                           ;main.c: 656: {
  1602                           ;main.c: 657: PA1 = 1;
  1603  0166  1485               	bsf	5,1
  1604  0167                     l4404:	
  1605                           
  1606                           ;main.c: 658: ucTimerDelay2 = 0;
  1607  0167  01E1               	clrf	main@ucTimerDelay2
  1608  0168  2960               	goto	l4398
  1609  0169                     l4408:	
  1610                           
  1611                           ;main.c: 661: else
  1612                           ;main.c: 662: ucTimerDelay2++;
  1613  0169  0AE1               	incf	main@ucTimerDelay2,f
  1614  016A  2840               	goto	l4178
  1615  016B                     l4410:	
  1616                           
  1617                           ;main.c: 667: {
  1618                           ;main.c: 668: if(ucTimerDelay2 >= 5)
  1619  016B  3005               	movlw	5
  1620  016C  0261               	subwf	main@ucTimerDelay2,w
  1621  016D  1C03               	skipc
  1622  016E  2969               	goto	l4408
  1623                           
  1624                           ;main.c: 669: {
  1625                           ;main.c: 670: PA2 = 1;
  1626  016F  1505               	bsf	5,2
  1627  0170  2967               	goto	l4404
  1628  0171                     l4420:	
  1629                           
  1630                           ;main.c: 680: {
  1631                           ;main.c: 681: if(ucTimerDelay2 >= 5)
  1632  0171  3005               	movlw	5
  1633  0172  0261               	subwf	main@ucTimerDelay2,w
  1634  0173  1C03               	skipc
  1635  0174  2969               	goto	l4408
  1636                           
  1637                           ;main.c: 682: {
  1638                           ;main.c: 684: vSetPA3(1);
  1639  0175  3001               	movlw	1
  1640  0176  118A  253C  118A   	fcall	_vSetPA3
  1641  0179  2967               	goto	l4404
  1642  017A                     l4430:	
  1643                           
  1644                           ;main.c: 694: {
  1645                           ;main.c: 695: if(ucTimerDelay2 >= 5)
  1646  017A  3005               	movlw	5
  1647  017B  0261               	subwf	main@ucTimerDelay2,w
  1648  017C  1C03               	skipc
  1649  017D  2969               	goto	l4408
  1650  017E  3000               	movlw	0
  1651                           
  1652                           ;main.c: 696: {
  1653                           ;main.c: 698: PA1 = 0;
  1654  017F  1085               	bcf	5,1
  1655                           
  1656                           ;main.c: 699: PA2 = 0;
  1657  0180  1105               	bcf	5,2
  1658                           
  1659                           ;main.c: 701: vSetPA3(0);
  1660  0181  118A  253C  118A   	fcall	_vSetPA3
  1661  0184  2967               	goto	l4404
  1662  0185                     l4442:	
  1663                           
  1664                           ;main.c: 711: {
  1665                           ;main.c: 712: if(ucTimerDelay2 >= 2)
  1666  0185  3002               	movlw	2
  1667  0186  0261               	subwf	main@ucTimerDelay2,w
  1668  0187  1C03               	skipc
  1669  0188  2969               	goto	l4408
  1670                           
  1671                           ;main.c: 713: {
  1672                           ;main.c: 714: ucTimerDelay2 = 0;
  1673  0189  01E1               	clrf	main@ucTimerDelay2
  1674                           
  1675                           ;main.c: 716: ucLoaderStep2 = 0;
  1676  018A  01D9               	clrf	main@ucLoaderStep2
  1677  018B  2910               	goto	l4324
  1678  018C                     l4452:	
  1679  018C  0859               	movf	main@ucLoaderStep2,w
  1680                           
  1681                           ; Switch size 1, requested type "space"
  1682                           ; Number of cases is 6, Range of values is 0 to 5
  1683                           ; switch strategies available:
  1684                           ; Name         Instructions Cycles
  1685                           ; direct_byte           19     7 (fixed)
  1686                           ; simple_byte           19    10 (average)
  1687                           ; jumptable            260     6 (fixed)
  1688                           ; rangetable            10     6 (fixed)
  1689                           ; spacedrange           18     9 (fixed)
  1690                           ; locatedrange           6     3 (fixed)
  1691                           ;	Chosen strategy is direct_byte
  1692  018D  0084               	movwf	4
  1693  018E  3006               	movlw	6
  1694  018F  0204               	subwf	4,w
  1695  0190  1803               	skipnc
  1696  0191  2840               	goto	l4178
  1697  0192  3005               	movlw	high S4896
  1698  0193  008A               	movwf	10
  1699  0194  1003               	clrc
  1700  0195  0D04               	rlf	4,w
  1701  0196  3E72               	addlw	low S4896
  1702  0197  0082               	movwf	2
  1703  0198                     l846:	
  1704                           ;main.c: 738: {
  1705                           ;main.c: 739: case 0:
  1706                           
  1707                           
  1708                           ;main.c: 740: {
  1709                           ;main.c: 741: PB0 = 1;
  1710  0198  1406               	bsf	6,0
  1711                           
  1712                           ;main.c: 742: PA0 = 1;
  1713  0199  1405               	bsf	5,0
  1714                           
  1715                           ;main.c: 743: PA1 = 1;
  1716  019A  1485               	bsf	5,1
  1717  019B                     l4454:	
  1718                           
  1719                           ;main.c: 744: ucLoaderStep3++;
  1720  019B  0ADA               	incf	main@ucLoaderStep3,f
  1721                           
  1722                           ;main.c: 745: break;
  1723  019C  2840               	goto	l4178
  1724  019D                     l4456:	
  1725                           
  1726                           ;main.c: 749: {
  1727                           ;main.c: 750: if(ucTimerDelay3 >= 5)
  1728  019D  3005               	movlw	5
  1729  019E  0262               	subwf	main@ucTimerDelay3,w
  1730  019F  1C03               	skipc
  1731  01A0  29A4               	goto	l4464
  1732                           
  1733                           ;main.c: 751: {
  1734                           ;main.c: 752: PA2 = 1;
  1735  01A1  1505               	bsf	5,2
  1736  01A2                     l4460:	
  1737                           
  1738                           ;main.c: 753: ucTimerDelay3 = 0;
  1739  01A2  01E2               	clrf	main@ucTimerDelay3
  1740  01A3  299B               	goto	l4454
  1741  01A4                     l4464:	
  1742                           
  1743                           ;main.c: 756: else
  1744                           ;main.c: 757: ucTimerDelay3++;
  1745  01A4  0AE2               	incf	main@ucTimerDelay3,f
  1746  01A5  2840               	goto	l4178
  1747  01A6                     l4466:	
  1748                           
  1749                           ;main.c: 762: {
  1750                           ;main.c: 763: if(ucTimerDelay3 >= 5)
  1751  01A6  3005               	movlw	5
  1752  01A7  0262               	subwf	main@ucTimerDelay3,w
  1753  01A8  1C03               	skipc
  1754  01A9  29A4               	goto	l4464
  1755                           
  1756                           ;main.c: 764: {
  1757                           ;main.c: 766: vSetPA3(1);
  1758  01AA  3001               	movlw	1
  1759  01AB  118A  253C  118A   	fcall	_vSetPA3
  1760  01AE  29A2               	goto	l4460
  1761  01AF                     l4476:	
  1762                           
  1763                           ;main.c: 777: {
  1764                           ;main.c: 778: if(ucTimerDelay3 >= 5)
  1765  01AF  3005               	movlw	5
  1766  01B0  0262               	subwf	main@ucTimerDelay3,w
  1767  01B1  1C03               	skipc
  1768  01B2  29A4               	goto	l4464
  1769  01B3  3000               	movlw	0
  1770                           
  1771                           ;main.c: 779: {
  1772                           ;main.c: 781: PA2 = 0;
  1773  01B4  1105               	bcf	5,2
  1774                           
  1775                           ;main.c: 783: vSetPA3(0);
  1776  01B5  118A  253C  118A   	fcall	_vSetPA3
  1777  01B8  29A2               	goto	l4460
  1778  01B9                     l4488:	
  1779                           
  1780                           ;main.c: 793: {
  1781                           ;main.c: 794: if(ucTimerDelay3 >= 2)
  1782  01B9  3002               	movlw	2
  1783  01BA  0262               	subwf	main@ucTimerDelay3,w
  1784  01BB  1C03               	skipc
  1785  01BC  29A4               	goto	l4464
  1786                           
  1787                           ;main.c: 795: {
  1788                           ;main.c: 796: ucTimerDelay3 = 0;
  1789  01BD  01E2               	clrf	main@ucTimerDelay3
  1790                           
  1791                           ;main.c: 798: ucLoaderStep3 = 0;
  1792  01BE  01DA               	clrf	main@ucLoaderStep3
  1793  01BF  2910               	goto	l4324
  1794  01C0                     l4498:	
  1795  01C0  085A               	movf	main@ucLoaderStep3,w
  1796                           
  1797                           ; Switch size 1, requested type "space"
  1798                           ; Number of cases is 5, Range of values is 0 to 4
  1799                           ; switch strategies available:
  1800                           ; Name         Instructions Cycles
  1801                           ; simple_byte           16     9 (average)
  1802                           ; direct_byte           17     7 (fixed)
  1803                           ; jumptable            260     6 (fixed)
  1804                           ; rangetable             9     6 (fixed)
  1805                           ; spacedrange           16     9 (fixed)
  1806                           ; locatedrange           5     3 (fixed)
  1807                           ;	Chosen strategy is simple_byte
  1808  01C1  3A00               	xorlw	0	; case 0
  1809  01C2  1903               	skipnz
  1810  01C3  2998               	goto	l846
  1811  01C4  3A01               	xorlw	1	; case 1
  1812  01C5  1903               	skipnz
  1813  01C6  299D               	goto	l4456
  1814  01C7  3A03               	xorlw	3	; case 2
  1815  01C8  1903               	skipnz
  1816  01C9  29A6               	goto	l4466
  1817  01CA  3A01               	xorlw	1	; case 3
  1818  01CB  1903               	skipnz
  1819  01CC  29AF               	goto	l4476
  1820  01CD  3A07               	xorlw	7	; case 4
  1821  01CE  1903               	skipnz
  1822  01CF  29B9               	goto	l4488
  1823  01D0  2862               	goto	l714
  1824  01D1                     l867:	
  1825                           ;main.c: 820: {
  1826                           ;main.c: 821: case 0:
  1827                           
  1828                           
  1829                           ;main.c: 822: {
  1830                           ;main.c: 823: PB0 = 1;
  1831  01D1  1406               	bsf	6,0
  1832                           
  1833                           ;main.c: 824: PA0 = 1;
  1834  01D2  1405               	bsf	5,0
  1835                           
  1836                           ;main.c: 825: PA1 = 1;
  1837  01D3  1485               	bsf	5,1
  1838                           
  1839                           ;main.c: 826: PA2 = 1;
  1840  01D4  1505               	bsf	5,2
  1841  01D5                     l4500:	
  1842                           
  1843                           ;main.c: 827: ucLoaderStep4++;
  1844  01D5  0ADB               	incf	main@ucLoaderStep4,f
  1845                           
  1846                           ;main.c: 828: break;
  1847  01D6  2840               	goto	l4178
  1848  01D7                     l4502:	
  1849                           
  1850                           ;main.c: 832: {
  1851                           ;main.c: 833: if(ucTimerDelay4 >= 5)
  1852  01D7  3005               	movlw	5
  1853  01D8  0263               	subwf	main@ucTimerDelay4,w
  1854  01D9  1C03               	skipc
  1855  01DA  29E1               	goto	l4510
  1856                           
  1857                           ;main.c: 834: {
  1858                           ;main.c: 836: vSetPA3(1);
  1859  01DB  3001               	movlw	1
  1860  01DC                     L9:	
  1861  01DC  118A  253C  118A   	fcall	_vSetPA3
  1862                           
  1863                           ;main.c: 837: ucTimerDelay4 = 0;
  1864  01DF  01E3               	clrf	main@ucTimerDelay4
  1865  01E0  29D5               	goto	l4500
  1866  01E1                     l4510:	
  1867                           
  1868                           ;main.c: 840: else
  1869                           ;main.c: 841: ucTimerDelay4++;
  1870  01E1  0AE3               	incf	main@ucTimerDelay4,f
  1871  01E2  2840               	goto	l4178
  1872  01E3                     l4512:	
  1873                           
  1874                           ;main.c: 846: {
  1875                           ;main.c: 847: if(ucTimerDelay4 >= 5)
  1876  01E3  3005               	movlw	5
  1877  01E4  0263               	subwf	main@ucTimerDelay4,w
  1878  01E5  1C03               	skipc
  1879  01E6  29E1               	goto	l4510
  1880                           
  1881                           ;main.c: 848: {
  1882                           ;main.c: 850: vSetPA3(0);
  1883  01E7  3000               	movlw	0
  1884  01E8  29DC               	goto	L9
  1885  01E9                     l4522:	
  1886                           
  1887                           ;main.c: 860: {
  1888                           ;main.c: 861: if(ucTimerDelay4 >= 2)
  1889  01E9  3002               	movlw	2
  1890  01EA  0263               	subwf	main@ucTimerDelay4,w
  1891  01EB  1C03               	skipc
  1892  01EC  29E1               	goto	l4510
  1893                           
  1894                           ;main.c: 862: {
  1895                           ;main.c: 863: ucTimerDelay4 = 0;
  1896  01ED  01E3               	clrf	main@ucTimerDelay4
  1897                           
  1898                           ;main.c: 865: ucLoaderStep4 = 0;
  1899  01EE  01DB               	clrf	main@ucLoaderStep4
  1900  01EF  2910               	goto	l4324
  1901  01F0                     l4532:	
  1902  01F0  085B               	movf	main@ucLoaderStep4,w
  1903                           
  1904                           ; Switch size 1, requested type "space"
  1905                           ; Number of cases is 4, Range of values is 0 to 3
  1906                           ; switch strategies available:
  1907                           ; Name         Instructions Cycles
  1908                           ; simple_byte           13     7 (average)
  1909                           ; direct_byte           15     7 (fixed)
  1910                           ; jumptable            260     6 (fixed)
  1911                           ; rangetable             8     6 (fixed)
  1912                           ; spacedrange           14     9 (fixed)
  1913                           ; locatedrange           4     3 (fixed)
  1914                           ;	Chosen strategy is simple_byte
  1915  01F1  3A00               	xorlw	0	; case 0
  1916  01F2  1903               	skipnz
  1917  01F3  29D1               	goto	l867
  1918  01F4  3A01               	xorlw	1	; case 1
  1919  01F5  1903               	skipnz
  1920  01F6  29D7               	goto	l4502
  1921  01F7  3A03               	xorlw	3	; case 2
  1922  01F8  1903               	skipnz
  1923  01F9  29E3               	goto	l4512
  1924  01FA  3A01               	xorlw	1	; case 3
  1925  01FB  1903               	skipnz
  1926  01FC  29E9               	goto	l4522
  1927  01FD  2862               	goto	l714
  1928  01FE                     l4536:	
  1929  01FE  0856               	movf	main@ucChannel4Type,w
  1930                           
  1931                           ; Switch size 1, requested type "space"
  1932                           ; Number of cases is 5, Range of values is 0 to 4
  1933                           ; switch strategies available:
  1934                           ; Name         Instructions Cycles
  1935                           ; simple_byte           16     9 (average)
  1936                           ; direct_byte           17     7 (fixed)
  1937                           ; jumptable            260     6 (fixed)
  1938                           ; rangetable             9     6 (fixed)
  1939                           ; spacedrange           16     9 (fixed)
  1940                           ; locatedrange           5     3 (fixed)
  1941                           ;	Chosen strategy is simple_byte
  1942  01FF  3A00               	xorlw	0	; case 0
  1943  0200  1903               	skipnz
  1944  0201  2912               	goto	l4330
  1945  0202  3A01               	xorlw	1	; case 1
  1946  0203  1903               	skipnz
  1947  0204  2952               	goto	l4396
  1948  0205  3A03               	xorlw	3	; case 2
  1949  0206  1903               	skipnz
  1950  0207  298C               	goto	l4452
  1951  0208  3A01               	xorlw	1	; case 3
  1952  0209  1903               	skipnz
  1953  020A  29C0               	goto	l4498
  1954  020B  3A07               	xorlw	7	; case 4
  1955  020C  1903               	skipnz
  1956  020D  29F0               	goto	l4532
  1957  020E  2862               	goto	l714
  1958  020F                     l4538:	
  1959                           
  1960                           ;main.c: 889: {
  1961                           ;main.c: 890: static unsigned char ucTimerDelayP5s = 0;
  1962                           ;main.c: 892: if(isFinishedTwentySecondsTimer())
  1963  020F  118A  25BD  118A   	fcall	_isFinishedTwentySecondsTimer
  1964  0212  3A00               	xorlw	0
  1965  0213  1903               	skipnz
  1966  0214  28A3               	goto	l4246
  1967                           
  1968                           ;main.c: 893: {
  1969                           ;main.c: 896: vsetPB6HignResistence(0);
  1970  0215  3000               	movlw	0
  1971  0216  118A  2528  118A   	fcall	_vsetPB6HignResistence
  1972  0219  3005               	movlw	5
  1973                           
  1974                           ;main.c: 897: PA6 = 0;
  1975  021A  1305               	bcf	5,6
  1976                           
  1977                           ;main.c: 904: if(ucTimerDelayP5s < 5)
  1978  021B  0264               	subwf	main@ucTimerDelayP5s,w
  1979  021C  1803               	skipnc
  1980  021D  2A20               	goto	l4548
  1981                           
  1982                           ;main.c: 905: {
  1983                           ;main.c: 906: ucTimerDelayP5s++;
  1984  021E  0AE4               	incf	main@ucTimerDelayP5s,f
  1985                           
  1986                           ;main.c: 907: }
  1987  021F  2840               	goto	l4178
  1988  0220                     l4548:	
  1989  0220  300F               	movlw	15
  1990                           
  1991                           ;main.c: 908: else
  1992                           ;main.c: 909: {
  1993                           ;main.c: 911: ucTimerDelayP5s = 0;
  1994  0221  01E4               	clrf	main@ucTimerDelayP5s
  1995                           
  1996                           ;main.c: 914: DACR0=0x0F;
  1997  0222  1683               	bsf	3,5	;RP0=1, select bank1
  1998  0223  0088               	movwf	8	;volatile
  1999                           
  2000                           ;main.c: 918: ucADC4_Step = ADC4_STEP_FOURTH;
  2001  0224  3004               	movlw	4
  2002  0225  1283               	bcf	3,5	;RP0=0, select bank0
  2003  0226                     L8:	
  2004  0226  00D5               	movwf	main@ucADC4_Step
  2005  0227  2840               	goto	l4178
  2006  0228                     l4554:	
  2007                           
  2008                           ;main.c: 928: {
  2009                           ;main.c: 929: static unsigned char ucTimer1s = 0;
  2010                           ;main.c: 930: if(ucTimer1s < 5)
  2011  0228  3005               	movlw	5
  2012  0229  025C               	subwf	main@ucTimer1s,w
  2013  022A  1803               	skipnc
  2014  022B  2A32               	goto	l4560
  2015  022C  3001               	movlw	1
  2016                           
  2017                           ;main.c: 931: {
  2018                           ;main.c: 932: ucTimer1s++;
  2019  022D  0ADC               	incf	main@ucTimer1s,f
  2020                           
  2021                           ;main.c: 935: vsetPB6HignResistence(1);
  2022  022E  118A  2528  118A   	fcall	_vsetPB6HignResistence
  2023                           
  2024                           ;main.c: 936: }
  2025  0231  2840               	goto	l4178
  2026  0232                     l4560:	
  2027                           
  2028                           ;main.c: 937: else
  2029                           ;main.c: 938: {
  2030                           ;main.c: 939: ucTimer1s = 0;
  2031  0232  01DC               	clrf	main@ucTimer1s
  2032                           
  2033                           ;main.c: 941: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  2034  0233  01D4               	clrf	main@enumMainLoopStep
  2035  0234  0AD4               	incf	main@enumMainLoopStep,f
  2036                           
  2037                           ;main.c: 942: ucADC4_Step = ADC4_STEP_INIT;
  2038  0235  01D5               	clrf	main@ucADC4_Step
  2039  0236  2840               	goto	l4178
  2040  0237                     l4566:	
  2041  0237  0855               	movf	main@ucADC4_Step,w
  2042                           
  2043                           ; Switch size 1, requested type "space"
  2044                           ; Number of cases is 5, Range of values is 0 to 4
  2045                           ; switch strategies available:
  2046                           ; Name         Instructions Cycles
  2047                           ; simple_byte           16     9 (average)
  2048                           ; direct_byte           17     7 (fixed)
  2049                           ; jumptable            260     6 (fixed)
  2050                           ; rangetable             9     6 (fixed)
  2051                           ; spacedrange           16     9 (fixed)
  2052                           ; locatedrange           5     3 (fixed)
  2053                           ;	Chosen strategy is simple_byte
  2054  0238  3A00               	xorlw	0	; case 0
  2055  0239  1903               	skipnz
  2056  023A  28A0               	goto	l4244
  2057  023B  3A01               	xorlw	1	; case 1
  2058  023C  1903               	skipnz
  2059  023D  28A7               	goto	l4248
  2060  023E  3A03               	xorlw	3	; case 2
  2061  023F  1903               	skipnz
  2062  0240  29FE               	goto	l4536
  2063  0241  3A01               	xorlw	1	; case 3
  2064  0242  1903               	skipnz
  2065  0243  2A0F               	goto	l4538
  2066  0244  3A07               	xorlw	7	; case 4
  2067  0245  1903               	skipnz
  2068  0246  2A28               	goto	l4554
  2069  0247  2862               	goto	l714
  2070  0248                     l897:	
  2071                           ;main.c: 968: {
  2072                           ;main.c: 969: case HOUR_3_BRANCH_STEP_FIRST:
  2073                           
  2074                           
  2075                           ;main.c: 970: {
  2076                           ;main.c: 971: PA7 = 1;
  2077  0248  1785               	bsf	5,7
  2078                           
  2079                           ;main.c: 972: PAOD7 = 1;
  2080  0249  1683               	bsf	3,5	;RP0=1, select bank3
  2081  024A  303C               	movlw	60
  2082  024B  1703               	bsf	3,6	;RP1=1, select bank3
  2083  024C  1787               	bsf	7,7
  2084                           
  2085                           ;main.c: 973: startThreeHoursTimer(60);
  2086  024D  1283               	bcf	3,5	;RP0=0, select bank0
  2087  024E  1303               	bcf	3,6	;RP1=0, select bank0
  2088  024F  00A0               	movwf	?_startThreeHoursTimer
  2089  0250  01A1               	clrf	?_startThreeHoursTimer+1
  2090  0251  118A  2593  118A   	fcall	_startThreeHoursTimer
  2091                           
  2092                           ;main.c: 975: enumBranchStep = HOUR_3_BRANCH_STEP_SECOND;
  2093  0254  01D2               	clrf	main@enumBranchStep
  2094  0255  0AD2               	incf	main@enumBranchStep,f
  2095                           
  2096                           ;main.c: 976: break;
  2097  0256  2840               	goto	l4178
  2098  0257                     l4572:	
  2099                           
  2100                           ;main.c: 980: {
  2101                           ;main.c: 981: static unsigned char ucTimer20s = 0;
  2102                           ;main.c: 983: if(ucTimer20s < 200)
  2103  0257  30C8               	movlw	200
  2104  0258  025D               	subwf	main@ucTimer20s,w
  2105  0259  1803               	skipnc
  2106  025A  2A65               	goto	l4586
  2107  025B  3001               	movlw	1
  2108                           
  2109                           ;main.c: 984: {
  2110                           ;main.c: 985: ucTimer20s++;
  2111  025C  0ADD               	incf	main@ucTimer20s,f
  2112                           
  2113                           ;main.c: 986: PB0 = 1;
  2114  025D  1406               	bsf	6,0
  2115                           
  2116                           ;main.c: 987: PA0 = 1;
  2117  025E  1405               	bsf	5,0
  2118                           
  2119                           ;main.c: 988: PA1 = 1;
  2120  025F  1485               	bsf	5,1
  2121                           
  2122                           ;main.c: 989: PA2 = 1;
  2123  0260  1505               	bsf	5,2
  2124                           
  2125                           ;main.c: 991: vSetPA3(1);
  2126  0261  118A  253C  118A   	fcall	_vSetPA3
  2127                           
  2128                           ;main.c: 992: }
  2129  0264  2840               	goto	l4178
  2130  0265                     l4586:	
  2131  0265  3002               	movlw	2
  2132                           
  2133                           ;main.c: 993: else
  2134                           ;main.c: 994: {
  2135                           ;main.c: 996: ucTimer20s = 0;
  2136  0266  01DD               	clrf	main@ucTimer20s
  2137                           
  2138                           ;main.c: 999: enumBranchStep = HOUR_3_BRANCH_STEP_THIRD;
  2139  0267  00D2               	movwf	main@enumBranchStep
  2140  0268  2840               	goto	l4178
  2141  0269                     l904:	
  2142                           ;main.c: 1002: }
  2143                           ;main.c: 1004: case HOUR_3_BRANCH_STEP_THIRD:
  2144                           
  2145                           
  2146                           ;main.c: 1005: {
  2147                           ;main.c: 1006: PA6 = 0;
  2148  0269  1305               	bcf	5,6
  2149                           
  2150                           ;main.c: 1008: if(isFinishedThreeHoursTimer())
  2151  026A  118A  25C3  118A   	fcall	_isFinishedThreeHoursTimer
  2152  026D  3A00               	xorlw	0
  2153  026E  1903               	skipnz
  2154  026F  2A72               	goto	l4596
  2155                           
  2156                           ;main.c: 1009: {
  2157                           ;main.c: 1010: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2158  0270  01D2               	clrf	main@enumBranchStep
  2159  0271  289D               	goto	l4242
  2160  0272                     l4596:	
  2161                           
  2162                           ;main.c: 1013: else
  2163                           ;main.c: 1014: {
  2164                           ;main.c: 1015: static unsigned char ucTimerX1P5s = 0;
  2165                           ;main.c: 1017: if(getAdOriginalCh1Value() < 130)
  2166  0272  118A  23FA  118A   	fcall	_getAdOriginalCh1Value
  2167  0275  3000               	movlw	0
  2168  0276  0248               	subwf	?_getAdOriginalCh1Value+1,w
  2169  0277  3082               	movlw	130
  2170  0278  1903               	skipnz
  2171  0279  0247               	subwf	?_getAdOriginalCh1Value,w
  2172  027A  1803               	skipnc
  2173  027B  2A7E               	goto	l4600
  2174                           
  2175                           ;main.c: 1018: {
  2176                           ;main.c: 1019: ucTimerX1P5s = 0;
  2177  027C  01E8               	clrf	main@ucTimerX1P5s
  2178                           
  2179                           ;main.c: 1020: }
  2180  027D  2A7F               	goto	l4602
  2181  027E                     l4600:	
  2182                           
  2183                           ;main.c: 1021: else
  2184                           ;main.c: 1022: {
  2185                           ;main.c: 1023: ucTimerX1P5s++;
  2186  027E  0AE8               	incf	main@ucTimerX1P5s,f
  2187  027F                     l4602:	
  2188                           
  2189                           ;main.c: 1024: }
  2190                           ;main.c: 1026: if(ucTimerX1P5s >= 1)
  2191  027F  0868               	movf	main@ucTimerX1P5s,w
  2192  0280  1903               	btfsc	3,2
  2193  0281  2A8E               	goto	l4616
  2194                           
  2195                           ;main.c: 1027: {
  2196                           ;main.c: 1028: ucTimerX1P5s = 0;
  2197  0282  01E8               	clrf	main@ucTimerX1P5s
  2198                           
  2199                           ;main.c: 1029: PAOD7 = 0;
  2200  0283  1683               	bsf	3,5	;RP0=1, select bank3
  2201  0284  1703               	bsf	3,6	;RP1=1, select bank3
  2202  0285  1387               	bcf	7,7
  2203                           
  2204                           ;main.c: 1030: PA7 = 0;
  2205  0286  1283               	bcf	3,5	;RP0=0, select bank0
  2206  0287  1303               	bcf	3,6	;RP1=0, select bank0
  2207  0288  1385               	bcf	5,7
  2208                           
  2209                           ;main.c: 1031: clearThreeHoursTimer();
  2210  0289  118A  253D  118A   	fcall	_clearThreeHoursTimer
  2211                           
  2212                           ;main.c: 1033: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2213  028C  01D2               	clrf	main@enumBranchStep
  2214  028D  2869               	goto	l4202
  2215  028E                     l4616:	
  2216                           
  2217                           ;main.c: 1037: else
  2218                           ;main.c: 1038: {
  2219                           ;main.c: 1039: static unsigned char ucTimerX2P5s = 0;
  2220                           ;main.c: 1041: if(getAdOriginalCh14Value() >= 1950)
  2221  028E  118A  2401  118A   	fcall	_getAdOriginalCh14Value
  2222  0291  3007               	movlw	7
  2223  0292  0248               	subwf	?_getAdOriginalCh14Value+1,w
  2224  0293  309E               	movlw	158
  2225  0294  1903               	skipnz
  2226  0295  0247               	subwf	?_getAdOriginalCh14Value,w
  2227  0296  1C03               	skipc
  2228  0297  2A9A               	goto	l4620
  2229                           
  2230                           ;main.c: 1042: {
  2231                           ;main.c: 1043: ucTimerX2P5s++;
  2232  0298  0AE9               	incf	main@ucTimerX2P5s,f
  2233                           
  2234                           ;main.c: 1044: }
  2235  0299  2A9B               	goto	l4622
  2236  029A                     l4620:	
  2237                           
  2238                           ;main.c: 1045: else
  2239                           ;main.c: 1046: {
  2240                           ;main.c: 1047: ucTimerX2P5s = 0;
  2241  029A  01E9               	clrf	main@ucTimerX2P5s
  2242  029B                     l4622:	
  2243                           
  2244                           ;main.c: 1048: }
  2245                           ;main.c: 1050: if(ucTimerX2P5s >= 1)
  2246  029B  0869               	movf	main@ucTimerX2P5s,w
  2247  029C  1903               	btfsc	3,2
  2248  029D  2AA0               	goto	l4626
  2249                           
  2250                           ;main.c: 1051: {
  2251                           ;main.c: 1052: ucTimerX2P5s = 0;
  2252  029E  01E9               	clrf	main@ucTimerX2P5s
  2253                           
  2254                           ;main.c: 1053: }
  2255  029F  2840               	goto	l4178
  2256  02A0                     l4626:	
  2257                           
  2258                           ;main.c: 1054: else
  2259                           ;main.c: 1055: {
  2260                           ;main.c: 1056: clearPinPortAndTimer();
  2261  02A0  118A  2506  118A   	fcall	_clearPinPortAndTimer
  2262  02A3  285F               	goto	l4194
  2263  02A4                     l4632:	
  2264  02A4  0852               	movf	main@enumBranchStep,w
  2265                           
  2266                           ; Switch size 1, requested type "space"
  2267                           ; Number of cases is 3, Range of values is 0 to 2
  2268                           ; switch strategies available:
  2269                           ; Name         Instructions Cycles
  2270                           ; simple_byte           10     6 (average)
  2271                           ; direct_byte           13     7 (fixed)
  2272                           ; jumptable            260     6 (fixed)
  2273                           ; rangetable             7     6 (fixed)
  2274                           ; spacedrange           12     9 (fixed)
  2275                           ; locatedrange           3     3 (fixed)
  2276                           ;	Chosen strategy is simple_byte
  2277  02A5  3A00               	xorlw	0	; case 0
  2278  02A6  1903               	skipnz
  2279  02A7  2A48               	goto	l897
  2280  02A8  3A01               	xorlw	1	; case 1
  2281  02A9  1903               	skipnz
  2282  02AA  2A57               	goto	l4572
  2283  02AB  3A03               	xorlw	3	; case 2
  2284  02AC  1903               	skipnz
  2285  02AD  2A69               	goto	l904
  2286  02AE  2862               	goto	l714
  2287  02AF                     l924:	
  2288                           ;main.c: 1086: {
  2289                           ;main.c: 1087: case INTERNAL_FIRST_STEP:
  2290                           
  2291  02AF  3000               	movlw	0
  2292                           
  2293                           ;main.c: 1088: {
  2294                           ;main.c: 1089: PB0 = 0;
  2295  02B0  1006               	bcf	6,0
  2296                           
  2297                           ;main.c: 1090: PB1 = 0;
  2298  02B1  1086               	bcf	6,1
  2299                           
  2300                           ;main.c: 1091: PA0 = 0;
  2301  02B2  1005               	bcf	5,0
  2302                           
  2303                           ;main.c: 1092: PA1 = 0;
  2304  02B3  1085               	bcf	5,1
  2305                           
  2306                           ;main.c: 1093: PA2 = 0;
  2307  02B4  1105               	bcf	5,2
  2308                           
  2309                           ;main.c: 1095: vSetPA3(0);
  2310  02B5  118A  253C  118A   	fcall	_vSetPA3
  2311                           
  2312                           ;main.c: 1098: vsetPB6HignResistence(0);
  2313  02B8  3000               	movlw	0
  2314  02B9  118A  2528  118A   	fcall	_vsetPB6HignResistence
  2315                           
  2316                           ;main.c: 1099: PA6 =0;
  2317  02BC  1305               	bcf	5,6
  2318                           
  2319                           ;main.c: 1101: enumInteralStep = INTERNAL_SECOND_STEP;
  2320  02BD  01D3               	clrf	main@enumInteralStep
  2321  02BE  0AD3               	incf	main@enumInteralStep,f
  2322                           
  2323                           ;main.c: 1102: break;
  2324  02BF  2840               	goto	l4178
  2325  02C0                     l4640:	
  2326                           
  2327                           ;main.c: 1106: {
  2328                           ;main.c: 1107: static unsigned char ucTimer1s = 0;
  2329                           ;main.c: 1109: if(getAdOriginalCh14Value() <= 1000)
  2330  02C0  118A  2401  118A   	fcall	_getAdOriginalCh14Value
  2331  02C3  3003               	movlw	3
  2332  02C4  0248               	subwf	?_getAdOriginalCh14Value+1,w
  2333  02C5  30E9               	movlw	233
  2334  02C6  1903               	skipnz
  2335  02C7  0247               	subwf	?_getAdOriginalCh14Value,w
  2336  02C8  1803               	skipnc
  2337  02C9  2ACC               	goto	l4644
  2338                           
  2339                           ;main.c: 1110: {
  2340                           ;main.c: 1111: ucTimer1s++;
  2341  02CA  0AD1               	incf	main@cTimer1s_815,f
  2342                           
  2343                           ;main.c: 1112: }
  2344  02CB  2ACD               	goto	l4646
  2345  02CC                     l4644:	
  2346                           
  2347                           ;main.c: 1113: else
  2348                           ;main.c: 1114: ucTimer1s = 0;
  2349  02CC  01D1               	clrf	main@cTimer1s_815
  2350  02CD                     l4646:	
  2351                           
  2352                           ;main.c: 1116: if(ucTimer1s >= 10)
  2353  02CD  300A               	movlw	10
  2354  02CE  0251               	subwf	main@cTimer1s_815,w
  2355  02CF  1C03               	skipc
  2356  02D0  2840               	goto	l4178
  2357                           
  2358                           ;main.c: 1117: {
  2359                           ;main.c: 1118: enumInteralStep = INTERNAL_THIRD_STEP;
  2360  02D1  3002               	movlw	2
  2361  02D2  00D3               	movwf	main@enumInteralStep
  2362                           
  2363                           ;main.c: 1119: ucTimer1s = 0;
  2364  02D3  01D1               	clrf	main@cTimer1s_815
  2365  02D4  2840               	goto	l4178
  2366  02D5                     l4652:	
  2367                           
  2368                           ;main.c: 1125: {
  2369                           ;main.c: 1126: static unsigned char ucTimerP3s = 0;
  2370                           ;main.c: 1128: if(getAdOriginalCh14Value() >= 1950)
  2371  02D5  118A  2401  118A   	fcall	_getAdOriginalCh14Value
  2372  02D8  3007               	movlw	7
  2373  02D9  0248               	subwf	?_getAdOriginalCh14Value+1,w
  2374  02DA  309E               	movlw	158
  2375  02DB  1903               	skipnz
  2376  02DC  0247               	subwf	?_getAdOriginalCh14Value,w
  2377  02DD  1C03               	skipc
  2378  02DE  2AE1               	goto	l4656
  2379                           
  2380                           ;main.c: 1129: {
  2381                           ;main.c: 1130: ucTimerP3s++;
  2382  02DF  0AE5               	incf	main@ucTimerP3s,f
  2383                           
  2384                           ;main.c: 1131: }
  2385  02E0  2AE2               	goto	l4658
  2386  02E1                     l4656:	
  2387                           
  2388                           ;main.c: 1132: else
  2389                           ;main.c: 1133: ucTimerP3s = 0;
  2390  02E1  01E5               	clrf	main@ucTimerP3s
  2391  02E2                     l4658:	
  2392                           
  2393                           ;main.c: 1135: if(ucTimerP3s >= 3)
  2394  02E2  3003               	movlw	3
  2395  02E3  0265               	subwf	main@ucTimerP3s,w
  2396  02E4  1C03               	skipc
  2397  02E5  2840               	goto	l4178
  2398                           
  2399                           ;main.c: 1136: {
  2400                           ;main.c: 1137: enumInteralStep = INTERNAL_FIRST_STEP;
  2401  02E6  01D3               	clrf	main@enumInteralStep
  2402                           
  2403                           ;main.c: 1138: ucTimerP3s = 0;
  2404  02E7  01E5               	clrf	main@ucTimerP3s
  2405                           
  2406                           ;main.c: 1139: clearAllTimer();
  2407  02E8  118A  2512  118A   	fcall	_clearAllTimer
  2408                           
  2409                           ;main.c: 1141: DACR0=0x0F;
  2410  02EB  300F               	movlw	15
  2411  02EC  0088               	movwf	8	;volatile
  2412                           
  2413                           ;main.c: 1142: initPin();
  2414  02ED  118A  251A  118A   	fcall	_initPin
  2415                           
  2416                           ;main.c: 1145: enumMainLoopStep = MAIN_LOOP_STEP_INIT;
  2417  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  2418  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  2419  02F2  01D4               	clrf	main@enumMainLoopStep
  2420  02F3  2840               	goto	l4178
  2421  02F4                     l4670:	
  2422  02F4  0853               	movf	main@enumInteralStep,w
  2423                           
  2424                           ; Switch size 1, requested type "space"
  2425                           ; Number of cases is 3, Range of values is 0 to 2
  2426                           ; switch strategies available:
  2427                           ; Name         Instructions Cycles
  2428                           ; simple_byte           10     6 (average)
  2429                           ; direct_byte           13     7 (fixed)
  2430                           ; jumptable            260     6 (fixed)
  2431                           ; rangetable             7     6 (fixed)
  2432                           ; spacedrange           12     9 (fixed)
  2433                           ; locatedrange           3     3 (fixed)
  2434                           ;	Chosen strategy is simple_byte
  2435  02F5  3A00               	xorlw	0	; case 0
  2436  02F6  1903               	skipnz
  2437  02F7  2AAF               	goto	l924
  2438  02F8  3A01               	xorlw	1	; case 1
  2439  02F9  1903               	skipnz
  2440  02FA  2AC0               	goto	l4640
  2441  02FB  3A03               	xorlw	3	; case 2
  2442  02FC  1903               	skipnz
  2443  02FD  2AD5               	goto	l4652
  2444  02FE  2862               	goto	l714
  2445  02FF                     l4674:	
  2446  02FF  0854               	movf	main@enumMainLoopStep,w
  2447                           
  2448                           ; Switch size 1, requested type "space"
  2449                           ; Number of cases is 8, Range of values is 0 to 9
  2450                           ; switch strategies available:
  2451                           ; Name         Instructions Cycles
  2452                           ; simple_byte           25    13 (average)
  2453                           ; direct_byte           27     7 (fixed)
  2454                           ; jumptable            260     6 (fixed)
  2455                           ; rangetable            14     6 (fixed)
  2456                           ; spacedrange           26     9 (fixed)
  2457                           ; locatedrange          10     3 (fixed)
  2458                           ;	Chosen strategy is simple_byte
  2459  0300  3A00               	xorlw	0	; case 0
  2460  0301  1903               	skipnz
  2461  0302  284E               	goto	l4184
  2462  0303  3A01               	xorlw	1	; case 1
  2463  0304  1903               	skipnz
  2464  0305  2863               	goto	l4196
  2465  0306  3A03               	xorlw	3	; case 2
  2466  0307  1903               	skipnz
  2467  0308  286B               	goto	l723
  2468  0309  3A01               	xorlw	1	; case 3
  2469  030A  1903               	skipnz
  2470  030B  2875               	goto	l4216
  2471  030C  3A07               	xorlw	7	; case 4
  2472  030D  1903               	skipnz
  2473  030E  288E               	goto	l4236
  2474  030F  3A01               	xorlw	1	; case 5
  2475  0310  1903               	skipnz
  2476  0311  2897               	goto	l4240
  2477  0312  3A0D               	xorlw	13	; case 8
  2478  0313  1903               	skipnz
  2479  0314  2AA4               	goto	l4632
  2480  0315  3A01               	xorlw	1	; case 9
  2481  0316  1903               	skipnz
  2482  0317  2AF4               	goto	l4670
  2483  0318  2862               	goto	l714
  2484  0319  118A  2811         	ljmp	start
  2485  031B                     __end_of_main:	
  2486                           
  2487                           	psect	swtext1
  2488  0556                     __pswtext1:	
  2489  0556                     S4892:	
  2490  0556  118A  28DC         	ljmp	l767
  2491  0558  118A  28DF         	ljmp	l4268
  2492  055A  118A  28E8         	ljmp	l4278
  2493  055C  118A  28EE         	ljmp	l4288
  2494  055E  118A  28F4         	ljmp	l4298
  2495  0560  118A  28FD         	ljmp	l4308
  2496  0562  118A  290A         	ljmp	l4320
  2497                           
  2498                           	psect	swtext2
  2499  0564                     __pswtext2:	
  2500  0564                     S4894:	
  2501  0564  118A  291E         	ljmp	l795
  2502  0566  118A  2921         	ljmp	l4334
  2503  0568  118A  292A         	ljmp	l4344
  2504  056A  118A  2930         	ljmp	l4354
  2505  056C  118A  2936         	ljmp	l4364
  2506  056E  118A  293F         	ljmp	l4374
  2507  0570  118A  294B         	ljmp	l4386
  2508                           
  2509                           	psect	swtext3
  2510  0572                     __pswtext3:	
  2511  0572                     S4896:	
  2512  0572  118A  295E         	ljmp	l822
  2513  0574  118A  2962         	ljmp	l4400
  2514  0576  118A  296B         	ljmp	l4410
  2515  0578  118A  2971         	ljmp	l4420
  2516  057A  118A  297A         	ljmp	l4430
  2517  057C  118A  2985         	ljmp	l4442
  2518                           
  2519                           	psect	text732
  2520  0506                     __ptext732:	
  2521 ;; =============== function _main ends ============
  2522                           
  2523                           
  2524 ;; *************** function _clearPinPortAndTimer *****************
  2525 ;; Defined at:
  2526 ;;		line 133 in file "D:\develop\ATK\AK7030-OTP\main.c"
  2527 ;; Parameters:    Size  Location     Type
  2528 ;;		None
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;		None
  2531 ;; Return value:  Size  Location     Type
  2532 ;;		None               void
  2533 ;; Registers used:
  2534 ;;		wreg, status,2, status,0, pclath, cstack
  2535 ;; Tracked objects:
  2536 ;;		On entry : 160/0
  2537 ;;		On exit  : 160/20
  2538 ;;		Unchanged: FFE9F/0
  2539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2540 ;;      Params:         0       0       0       0       0
  2541 ;;      Locals:         0       0       0       0       0
  2542 ;;      Temps:          0       0       0       0       0
  2543 ;;      Totals:         0       0       0       0       0
  2544 ;;Total ram usage:        0 bytes
  2545 ;; Hardware stack levels used:    1
  2546 ;; Hardware stack levels required when called:    4
  2547 ;; This function calls:
  2548 ;;		_vSetPA3
  2549 ;;		_clearAllTimer
  2550 ;; This function is called by:
  2551 ;;		_main
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554  0506                     _clearPinPortAndTimer:	
  2555  0506  3000               	movlw	0
  2556                           
  2557                           ;main.c: 134: PB0 = 0;
  2558                           
  2559                           ; Regs used in _clearPinPortAndTimer: [wreg+status,2+status,0+pclath+cstack]
  2560  0507  1006               	bcf	6,0
  2561                           
  2562                           ;main.c: 135: PA0 = 0;
  2563  0508  1005               	bcf	5,0
  2564                           
  2565                           ;main.c: 136: PA1 = 0;
  2566  0509  1085               	bcf	5,1
  2567                           
  2568                           ;main.c: 137: PA2 = 0;
  2569  050A  1105               	bcf	5,2
  2570                           
  2571                           ;main.c: 140: PAOD7 = 0;
  2572                           
  2573                           ;main.c: 139: vSetPA3(0);
  2574  050B  1683               	bsf	3,5	;RP0=1, select bank3
  2575  050C  1703               	bsf	3,6	;RP1=1, select bank3
  2576  050D  1387               	bcf	7,7
  2577                           
  2578                           ;main.c: 141: PA7 = 0;
  2579  050E  1283               	bcf	3,5	;RP0=0, select bank0
  2580  050F  1303               	bcf	3,6	;RP1=0, select bank0
  2581  0510  1385               	bcf	5,7
  2582                           
  2583                           ;main.c: 142: clearAllTimer();
  2584  0511  2D12               	ljmp	l4098
  2585  0512                     __end_of_clearPinPortAndTimer:	
  2586  0512                     __ptext738:	
  2587 ;; =============== function _initPin ends ============
  2588                           
  2589                           
  2590 ;; *************** function _clearAllTimer *****************
  2591 ;; Defined at:
  2592 ;;		line 124 in file "D:\develop\ATK\AK7030-OTP\main.c"
  2593 ;; Parameters:    Size  Location     Type
  2594 ;;		None
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;		None
  2597 ;; Return value:  Size  Location     Type
  2598 ;;		None               void
  2599 ;; Registers used:
  2600 ;;		status,2, status,0, pclath, cstack
  2601 ;; Tracked objects:
  2602 ;;		On entry : 160/0
  2603 ;;		On exit  : 160/20
  2604 ;;		Unchanged: FFE9F/0
  2605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2606 ;;      Params:         0       0       0       0       0
  2607 ;;      Locals:         0       0       0       0       0
  2608 ;;      Temps:          0       0       0       0       0
  2609 ;;      Totals:         0       0       0       0       0
  2610 ;;Total ram usage:        0 bytes
  2611 ;; Hardware stack levels used:    1
  2612 ;; Hardware stack levels required when called:    3
  2613 ;; This function calls:
  2614 ;;		_clearTwelveHoursTimer
  2615 ;;		_clearThreeHoursTimer
  2616 ;;		_clearTwentySecondsTimer
  2617 ;; This function is called by:
  2618 ;;		_clearPinPortAndTimer
  2619 ;;		_main
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622  0512                     _clearAllTimer:	
  2623  0512                     l4098:	
  2624                           ; Regs used in _clearAllTimer: [status,2+status,0+pclath+cstack]
  2625                           
  2626                           
  2627                           ;main.c: 125: clearTwelveHoursTimer();
  2628  0512  2517  118A         	fcall	_clearTwelveHoursTimer
  2629                           
  2630                           ;main.c: 126: clearThreeHoursTimer();
  2631  0514  253D  118A         	fcall	_clearThreeHoursTimer
  2632                           
  2633                           ;main.c: 127: clearTwentySecondsTimer();
  2634  0516  2D40               	ljmp	l3830
  2635  0517                     __end_of_clearAllTimer:	
  2636  0517                     __ptext761:	
  2637 ;; =============== function _clearThreeHoursTimer ends ============
  2638                           
  2639                           
  2640 ;; *************** function _clearTwelveHoursTimer *****************
  2641 ;; Defined at:
  2642 ;;		line 365 in file "D:\develop\ATK\AK7030-OTP\common.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;		None
  2645 ;; Auto vars:     Size  Location     Type
  2646 ;;		None
  2647 ;; Return value:  Size  Location     Type
  2648 ;;		None               void
  2649 ;; Registers used:
  2650 ;;		status,2
  2651 ;; Tracked objects:
  2652 ;;		On entry : 160/0
  2653 ;;		On exit  : 160/0
  2654 ;;		Unchanged: FFE9F/0
  2655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2656 ;;      Params:         0       0       0       0       0
  2657 ;;      Locals:         0       0       0       0       0
  2658 ;;      Temps:          0       0       0       0       0
  2659 ;;      Totals:         0       0       0       0       0
  2660 ;;Total ram usage:        0 bytes
  2661 ;; Hardware stack levels used:    1
  2662 ;; Hardware stack levels required when called:    2
  2663 ;; This function calls:
  2664 ;;		Nothing
  2665 ;; This function is called by:
  2666 ;;		_clearAllTimer
  2667 ;; This function uses a non-reentrant model
  2668 ;;
  2669  0517                     _clearTwelveHoursTimer:	
  2670                           
  2671                           ;common.c: 366: uiBigTimer = 0;
  2672                           
  2673                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  2674  0517  01C9               	clrf	_uiBigTimer
  2675  0518  01CA               	clrf	_uiBigTimer+1
  2676  0519  0008               	return
  2677  051A                     __end_of_clearTwelveHoursTimer:	
  2678  051A                     __ptext737:	
  2679 ;; =============== function _process_AD_Converter_Value ends ============
  2680                           
  2681                           
  2682 ;; *************** function _initPin *****************
  2683 ;; Defined at:
  2684 ;;		line 147 in file "D:\develop\ATK\AK7030-OTP\main.c"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;		None
  2687 ;; Auto vars:     Size  Location     Type
  2688 ;;		None
  2689 ;; Return value:  Size  Location     Type
  2690 ;;		None               void
  2691 ;; Registers used:
  2692 ;;		wreg, status,2, status,0, pclath, cstack
  2693 ;; Tracked objects:
  2694 ;;		On entry : 160/20
  2695 ;;		On exit  : 160/60
  2696 ;;		Unchanged: FFE9F/0
  2697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2698 ;;      Params:         0       0       0       0       0
  2699 ;;      Locals:         0       0       0       0       0
  2700 ;;      Temps:          0       0       0       0       0
  2701 ;;      Totals:         0       0       0       0       0
  2702 ;;Total ram usage:        0 bytes
  2703 ;; Hardware stack levels used:    1
  2704 ;; Hardware stack levels required when called:    3
  2705 ;; This function calls:
  2706 ;;		_vsetPB6HignResistence
  2707 ;;		_vSetPA3
  2708 ;; This function is called by:
  2709 ;;		_main
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712  051A                     _initPin:	
  2713                           
  2714                           ;main.c: 150: vsetPB6HignResistence(1);
  2715                           
  2716                           ; Regs used in _initPin: [wreg+status,2+status,0+pclath+cstack]
  2717  051A  3001               	movlw	1
  2718  051B  2528               	fcall	_vsetPB6HignResistence
  2719  051C  3000               	movlw	0
  2720                           
  2721                           ;main.c: 154: PA0 = 0;
  2722  051D  1005               	bcf	5,0
  2723                           
  2724                           ;main.c: 155: PA1 = 0;
  2725  051E  1085               	bcf	5,1
  2726  051F  1105               	bcf	5,2
  2727                           
  2728                           ;main.c: 159: PB0 = 0;
  2729                           
  2730                           ;main.c: 158: vSetPA3(0);
  2731  0520  1006               	bcf	6,0
  2732                           
  2733                           ;main.c: 160: PB1 = 1;
  2734  0521  1486               	bsf	6,1
  2735                           
  2736                           ;main.c: 161: PA6 = 0;
  2737  0522  1305               	bcf	5,6
  2738                           
  2739                           ;main.c: 162: PA7 = 0;
  2740  0523  1385               	bcf	5,7
  2741                           
  2742                           ;main.c: 163: PAOD7 = 0;
  2743  0524  1683               	bsf	3,5	;RP0=1, select bank3
  2744  0525  1703               	bsf	3,6	;RP1=1, select bank3
  2745  0526  1387               	bcf	7,7
  2746  0527  0008               	return
  2747  0528                     __end_of_initPin:	
  2748  0528                     __ptext762:	
  2749 ;; =============== function _clearTwelveHoursTimer ends ============
  2750                           
  2751                           
  2752 ;; *************** function _vsetPB6HignResistence *****************
  2753 ;; Defined at:
  2754 ;;		line 102 in file "D:\develop\ATK\AK7030-OTP\main.c"
  2755 ;; Parameters:    Size  Location     Type
  2756 ;;  ucValue         1    wreg     unsigned char 
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;  ucValue         1    0[BANK0 ] unsigned char 
  2759 ;; Return value:  Size  Location     Type
  2760 ;;		None               void
  2761 ;; Registers used:
  2762 ;;		wreg
  2763 ;; Tracked objects:
  2764 ;;		On entry : 40/20
  2765 ;;		On exit  : 60/0
  2766 ;;		Unchanged: FFF9F/0
  2767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2768 ;;      Params:         0       0       0       0       0
  2769 ;;      Locals:         0       1       0       0       0
  2770 ;;      Temps:          0       0       0       0       0
  2771 ;;      Totals:         0       1       0       0       0
  2772 ;;Total ram usage:        1 bytes
  2773 ;; Hardware stack levels used:    1
  2774 ;; Hardware stack levels required when called:    2
  2775 ;; This function calls:
  2776 ;;		Nothing
  2777 ;; This function is called by:
  2778 ;;		_initPin
  2779 ;;		_main
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782  0528                     _vsetPB6HignResistence:	
  2783                           
  2784                           ; Regs used in _vsetPB6HignResistence: [wreg]
  2785                           ;vsetPB6HignResistence@ucValue stored from wreg
  2786  0528  1283               	bcf	3,5	;RP0=0, select bank0
  2787  0529  00A0               	movwf	vsetPB6HignResistence@ucValue
  2788                           
  2789                           ;main.c: 103: if(1 == ucValue )
  2790  052A  0B20               	decfsz	vsetPB6HignResistence@ucValue,w
  2791  052B  2D34               	goto	l680
  2792                           
  2793                           ;main.c: 104: {
  2794                           ;main.c: 106: PB6 = 1;
  2795  052C  1706               	bsf	6,6
  2796                           
  2797                           ;main.c: 107: PBOD6 = 1;
  2798  052D  1683               	bsf	3,5	;RP0=1, select bank3
  2799  052E  1703               	bsf	3,6	;RP1=1, select bank3
  2800  052F  1708               	bsf	8,6
  2801                           
  2802                           ;main.c: 109: PA3 = 1;
  2803  0530  1283               	bcf	3,5	;RP0=0, select bank0
  2804  0531  1303               	bcf	3,6	;RP1=0, select bank0
  2805  0532  1585               	bsf	5,3
  2806                           
  2807                           ;main.c: 111: }
  2808  0533  0008               	return
  2809  0534                     l680:	
  2810                           
  2811                           ;main.c: 112: else
  2812                           ;main.c: 113: {
  2813                           ;main.c: 114: PB6 = 1;
  2814  0534  1706               	bsf	6,6
  2815                           
  2816                           ;main.c: 115: PBOD6 = 0;
  2817  0535  1683               	bsf	3,5	;RP0=1, select bank3
  2818  0536  1703               	bsf	3,6	;RP1=1, select bank3
  2819  0537  1308               	bcf	8,6
  2820                           
  2821                           ;main.c: 117: PA3 = 0;
  2822  0538  1283               	bcf	3,5	;RP0=0, select bank0
  2823  0539  1303               	bcf	3,6	;RP1=0, select bank0
  2824  053A  1185               	bcf	5,3
  2825  053B  0008               	return
  2826  053C                     __end_of_vsetPB6HignResistence:	
  2827  053C                     __ptext763:	
  2828 ;; =============== function _vsetPB6HignResistence ends ============
  2829                           
  2830                           
  2831 ;; *************** function _vSetPA3 *****************
  2832 ;; Defined at:
  2833 ;;		line 87 in file "D:\develop\ATK\AK7030-OTP\main.c"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;  ucValue         1    wreg     unsigned char 
  2836 ;; Auto vars:     Size  Location     Type
  2837 ;;		None
  2838 ;; Return value:  Size  Location     Type
  2839 ;;		None               void
  2840 ;; Registers used:
  2841 ;;		wreg
  2842 ;; Tracked objects:
  2843 ;;		On entry : 60/0
  2844 ;;		On exit  : 60/0
  2845 ;;		Unchanged: FFFFFF9F/0
  2846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2847 ;;      Params:         0       0       0       0       0
  2848 ;;      Locals:         0       0       0       0       0
  2849 ;;      Temps:          0       0       0       0       0
  2850 ;;      Totals:         0       0       0       0       0
  2851 ;;Total ram usage:        0 bytes
  2852 ;; Hardware stack levels used:    1
  2853 ;; Hardware stack levels required when called:    2
  2854 ;; This function calls:
  2855 ;;		Nothing
  2856 ;; This function is called by:
  2857 ;;		_clearPinPortAndTimer
  2858 ;;		_initPin
  2859 ;;		_main
  2860 ;; This function uses a non-reentrant model
  2861 ;;
  2862  053C                     _vSetPA3:	
  2863                           
  2864                           ; Regs used in _vSetPA3: [wreg]
  2865  053C  0008               	return
  2866  053D                     __end_of_vSetPA3:	
  2867  053D                     __ptext760:	
  2868 ;; =============== function _clearTwentySecondsTimer ends ============
  2869                           
  2870                           
  2871 ;; *************** function _clearThreeHoursTimer *****************
  2872 ;; Defined at:
  2873 ;;		line 371 in file "D:\develop\ATK\AK7030-OTP\common.c"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;		None
  2876 ;; Auto vars:     Size  Location     Type
  2877 ;;		None
  2878 ;; Return value:  Size  Location     Type
  2879 ;;		None               void
  2880 ;; Registers used:
  2881 ;;		status,2
  2882 ;; Tracked objects:
  2883 ;;		On entry : 160/0
  2884 ;;		On exit  : 160/0
  2885 ;;		Unchanged: FFE9F/0
  2886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2887 ;;      Params:         0       0       0       0       0
  2888 ;;      Locals:         0       0       0       0       0
  2889 ;;      Temps:          0       0       0       0       0
  2890 ;;      Totals:         0       0       0       0       0
  2891 ;;Total ram usage:        0 bytes
  2892 ;; Hardware stack levels used:    1
  2893 ;; Hardware stack levels required when called:    2
  2894 ;; This function calls:
  2895 ;;		Nothing
  2896 ;; This function is called by:
  2897 ;;		_clearAllTimer
  2898 ;;		_main
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901  053D                     _clearThreeHoursTimer:	
  2902                           
  2903                           ;common.c: 372: uiSmallTimer = 0;
  2904                           
  2905                           ; Regs used in _clearThreeHoursTimer: [status,2]
  2906  053D  01CB               	clrf	_uiSmallTimer
  2907  053E  01CC               	clrf	_uiSmallTimer+1
  2908  053F  0008               	return
  2909  0540                     __end_of_clearThreeHoursTimer:	
  2910  0540                     __ptext759:	
  2911 ;; =============== function _clock_config ends ============
  2912                           
  2913                           
  2914 ;; *************** function _clearTwentySecondsTimer *****************
  2915 ;; Defined at:
  2916 ;;		line 376 in file "D:\develop\ATK\AK7030-OTP\common.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;		None
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;		None
  2921 ;; Return value:  Size  Location     Type
  2922 ;;		None               void
  2923 ;; Registers used:
  2924 ;;		status,2
  2925 ;; Tracked objects:
  2926 ;;		On entry : 160/0
  2927 ;;		On exit  : 160/20
  2928 ;;		Unchanged: FFE9F/0
  2929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2930 ;;      Params:         0       0       0       0       0
  2931 ;;      Locals:         0       0       0       0       0
  2932 ;;      Temps:          0       0       0       0       0
  2933 ;;      Totals:         0       0       0       0       0
  2934 ;;Total ram usage:        0 bytes
  2935 ;; Hardware stack levels used:    1
  2936 ;; Hardware stack levels required when called:    2
  2937 ;; This function calls:
  2938 ;;		Nothing
  2939 ;; This function is called by:
  2940 ;;		_clearAllTimer
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943  0540                     _clearTwentySecondsTimer:	
  2944  0540                     l3830:	
  2945                           ; Regs used in _clearTwentySecondsTimer: [status,2]
  2946                           
  2947                           
  2948                           ;common.c: 377: uiTwentySecondsTimer = 0;
  2949  0540  1683               	bsf	3,5	;RP0=1, select bank1
  2950  0541  01A0               	clrf	_uiTwentySecondsTimer^(0+128)
  2951  0542  01A1               	clrf	(_uiTwentySecondsTimer+1)^(0+128)
  2952  0543  0008               	return
  2953  0544                     __end_of_clearTwentySecondsTimer:	
  2954                           
  2955                           	psect	text733
  2956  03F3                     __ptext733:	
  2957 ;; =============== function _clearPinPortAndTimer ends ============
  2958                           
  2959                           
  2960 ;; *************** function _getAdOriginaCh4Value *****************
  2961 ;; Defined at:
  2962 ;;		line 229 in file "D:\develop\ATK\AK7030-OTP\common.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;		None
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;		None
  2967 ;; Return value:  Size  Location     Type
  2968 ;;                  2   39[BANK0 ] unsigned int 
  2969 ;; Registers used:
  2970 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2971 ;; Tracked objects:
  2972 ;;		On entry : 60/0
  2973 ;;		On exit  : 160/0
  2974 ;;		Unchanged: FFE00/0
  2975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2976 ;;      Params:         0       2       0       0       0
  2977 ;;      Locals:         0       0       0       0       0
  2978 ;;      Temps:          0       0       0       0       0
  2979 ;;      Totals:         0       2       0       0       0
  2980 ;;Total ram usage:        2 bytes
  2981 ;; Hardware stack levels used:    1
  2982 ;; Hardware stack levels required when called:    3
  2983 ;; This function calls:
  2984 ;;		_Filter
  2985 ;; This function is called by:
  2986 ;;		_main
  2987 ;; This function uses a non-reentrant model
  2988 ;;
  2989  03F3                     _getAdOriginaCh4Value:	
  2990                           
  2991                           ;common.c: 231: return Filter(uiSampleChannelFourth);
  2992                           
  2993                           ; Regs used in _getAdOriginaCh4Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  2994  03F3  30D2               	movlw	_uiSampleChannelFourth& (0+255)
  2995  03F4  2408               	fcall	_Filter
  2996  03F5  0821               	movf	?_Filter+1,w
  2997  03F6  00C8               	movwf	?_getAdOriginaCh4Value+1
  2998  03F7  0820               	movf	?_Filter,w
  2999  03F8  00C7               	movwf	?_getAdOriginaCh4Value
  3000  03F9  0008               	return
  3001  03FA                     __end_of_getAdOriginaCh4Value:	
  3002  03FA                     __ptext734:	
  3003 ;; =============== function _getAdOriginaCh4Value ends ============
  3004                           
  3005                           
  3006 ;; *************** function _getAdOriginalCh1Value *****************
  3007 ;; Defined at:
  3008 ;;		line 217 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;		None
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;		None
  3013 ;; Return value:  Size  Location     Type
  3014 ;;                  2   39[BANK0 ] unsigned int 
  3015 ;; Registers used:
  3016 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3017 ;; Tracked objects:
  3018 ;;		On entry : 60/0
  3019 ;;		On exit  : 160/0
  3020 ;;		Unchanged: FFE00/0
  3021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3022 ;;      Params:         0       2       0       0       0
  3023 ;;      Locals:         0       0       0       0       0
  3024 ;;      Temps:          0       0       0       0       0
  3025 ;;      Totals:         0       2       0       0       0
  3026 ;;Total ram usage:        2 bytes
  3027 ;; Hardware stack levels used:    1
  3028 ;; Hardware stack levels required when called:    3
  3029 ;; This function calls:
  3030 ;;		_Filter
  3031 ;; This function is called by:
  3032 ;;		_main
  3033 ;; This function uses a non-reentrant model
  3034 ;;
  3035  03FA                     _getAdOriginalCh1Value:	
  3036                           
  3037                           ;common.c: 220: return Filter(uiSampleChannelFirst);
  3038                           
  3039                           ; Regs used in _getAdOriginalCh1Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  3040  03FA  30A2               	movlw	_uiSampleChannelFirst& (0+255)
  3041  03FB  2408               	fcall	_Filter
  3042  03FC  0821               	movf	?_Filter+1,w
  3043  03FD  00C8               	movwf	?_getAdOriginalCh1Value+1
  3044  03FE  0820               	movf	?_Filter,w
  3045  03FF  00C7               	movwf	?_getAdOriginalCh1Value
  3046  0400  0008               	return
  3047  0401                     __end_of_getAdOriginalCh1Value:	
  3048  0401                     __ptext735:	
  3049 ;; =============== function _getAdOriginalCh1Value ends ============
  3050                           
  3051                           
  3052 ;; *************** function _getAdOriginalCh14Value *****************
  3053 ;; Defined at:
  3054 ;;		line 240 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3055 ;; Parameters:    Size  Location     Type
  3056 ;;		None
  3057 ;; Auto vars:     Size  Location     Type
  3058 ;;		None
  3059 ;; Return value:  Size  Location     Type
  3060 ;;                  2   39[BANK0 ] unsigned int 
  3061 ;; Registers used:
  3062 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3063 ;; Tracked objects:
  3064 ;;		On entry : 60/0
  3065 ;;		On exit  : 160/0
  3066 ;;		Unchanged: FFE00/0
  3067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3068 ;;      Params:         0       2       0       0       0
  3069 ;;      Locals:         0       0       0       0       0
  3070 ;;      Temps:          0       0       0       0       0
  3071 ;;      Totals:         0       2       0       0       0
  3072 ;;Total ram usage:        2 bytes
  3073 ;; Hardware stack levels used:    1
  3074 ;; Hardware stack levels required when called:    3
  3075 ;; This function calls:
  3076 ;;		_Filter
  3077 ;; This function is called by:
  3078 ;;		_main
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081  0401                     _getAdOriginalCh14Value:	
  3082                           
  3083                           ;common.c: 242: return Filter(uiSampleChannelFourteenth);
  3084                           
  3085                           ; Regs used in _getAdOriginalCh14Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  3086  0401  30BA               	movlw	_uiSampleChannelFourteenth& (0+255)
  3087  0402  2408               	fcall	_Filter
  3088  0403  0821               	movf	?_Filter+1,w
  3089  0404  00C8               	movwf	?_getAdOriginalCh14Value+1
  3090  0405  0820               	movf	?_Filter,w
  3091  0406  00C7               	movwf	?_getAdOriginalCh14Value
  3092  0407  0008               	return
  3093  0408                     __end_of_getAdOriginalCh14Value:	
  3094  0408                     __ptext742:	
  3095 ;; =============== function _getAD_ConvertFlag ends ============
  3096                           
  3097                           
  3098 ;; *************** function _Filter *****************
  3099 ;; Defined at:
  3100 ;;		line 51 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;  tmpValue        1    wreg     PTR int 
  3103 ;;		 -> uiSampleChannelFourteenth(24), uiSampleChannelFourth(24), uiSampleChannelFirst(24), 
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;  tmpValue        1   34[BANK0 ] PTR int 
  3106 ;;		 -> uiSampleChannelFourteenth(24), uiSampleChannelFourth(24), uiSampleChannelFirst(24), 
  3107 ;;  cir             2   35[BANK0 ] int 
  3108 ;;  filter_buf     24    6[BANK0 ] unsigned int [12]
  3109 ;;  filter_sum      2   32[BANK0 ] unsigned int 
  3110 ;;  filter_temp     2   30[BANK0 ] unsigned int 
  3111 ;;  i               1   38[BANK0 ] unsigned char 
  3112 ;;  j               1   37[BANK0 ] unsigned char 
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  2    0[BANK0 ] unsigned int 
  3115 ;; Registers used:
  3116 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3117 ;; Tracked objects:
  3118 ;;		On entry : 60/0
  3119 ;;		On exit  : 160/0
  3120 ;;		Unchanged: FFE00/0
  3121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3122 ;;      Params:         0       2       0       0       0
  3123 ;;      Locals:         0      33       0       0       0
  3124 ;;      Temps:          0       4       0       0       0
  3125 ;;      Totals:         0      39       0       0       0
  3126 ;;Total ram usage:       39 bytes
  3127 ;; Hardware stack levels used:    1
  3128 ;; Hardware stack levels required when called:    2
  3129 ;; This function calls:
  3130 ;;		Nothing
  3131 ;; This function is called by:
  3132 ;;		_getAdOriginalCh1Value
  3133 ;;		_getAdOriginaCh4Value
  3134 ;;		_getAdOriginalCh14Value
  3135 ;; This function uses a non-reentrant model
  3136 ;;
  3137  0408                     _Filter:	
  3138                           
  3139                           ; Regs used in _Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  3140                           ;Filter@tmpValue stored from wreg
  3141  0408  00C2               	movwf	Filter@tmpValue
  3142  0409  01C5               	clrf	Filter@j
  3143                           
  3144                           ;common.c: 55: unsigned int filter_temp = 0, filter_sum = 0;
  3145  040A  01BE               	clrf	Filter@filter_temp
  3146  040B  01BF               	clrf	Filter@filter_temp+1
  3147  040C  01C0               	clrf	Filter@filter_sum
  3148  040D  01C1               	clrf	Filter@filter_sum+1
  3149                           
  3150                           ;common.c: 57: unsigned int filter_buf[12];
  3151                           ;common.c: 59: for(int cir = 0;cir < 12; cir++)
  3152  040E  01C3               	clrf	Filter@cir
  3153  040F  01C4               	clrf	Filter@cir+1
  3154  0410                     l3938:	
  3155                           
  3156                           ;common.c: 60: filter_buf[cir] = *tmpValue++;
  3157  0410  1283               	bcf	3,5	;RP0=0, select bank0
  3158  0411  1303               	bcf	3,6	;RP1=0, select bank0
  3159  0412  0842               	movf	Filter@tmpValue,w
  3160  0413  2496  118A         	fcall	PL3	;call to abstracted procedure
  3161  0415  1003               	clrc
  3162  0416  0D43               	rlf	Filter@cir,w
  3163  0417  249E  118A         	fcall	PL4	;call to abstracted procedure
  3164  0419  0AC2               	incf	Filter@tmpValue,f
  3165  041A  0AC2               	incf	Filter@tmpValue,f
  3166  041B  0AC3               	incf	Filter@cir,f
  3167  041C  1903               	skipnz
  3168  041D  0AC4               	incf	Filter@cir+1,f
  3169  041E  0844               	movf	Filter@cir+1,w
  3170  041F  3A80               	xorlw	128
  3171  0420  00FF               	movwf	127
  3172  0421  3080               	movlw	128
  3173  0422  027F               	subwf	127,w
  3174  0423  1D03               	skipz
  3175  0424  2C27               	goto	u955
  3176  0425  300C               	movlw	12
  3177  0426  0243               	subwf	Filter@cir,w
  3178  0427                     u955:	
  3179  0427  1C03               	skipc
  3180  0428  2C10               	goto	l3938
  3181                           
  3182                           ;common.c: 63: for(j = 0; j < 12 - 1; j++)
  3183  0429  1283               	bcf	3,5	;RP0=0, select bank0
  3184  042A  1303               	bcf	3,6	;RP1=0, select bank0
  3185  042B  01C5               	clrf	Filter@j
  3186  042C                     l3952:	
  3187                           
  3188                           ;common.c: 64: {
  3189                           ;common.c: 65: for(i = 0; i < 12 - 1 - j; i++)
  3190  042C  01C6               	clrf	Filter@i
  3191  042D                     l3960:	
  3192  042D  01A3               	clrf	??_Filter+1
  3193  042E  0845               	movf	Filter@j,w
  3194  042F  3C0B               	sublw	11
  3195  0430  00A2               	movwf	??_Filter
  3196  0431  1C03               	skipc
  3197  0432  03A3               	decf	??_Filter+1,f
  3198  0433  0823               	movf	??_Filter+1,w
  3199  0434  3A80               	xorlw	128
  3200  0435  3C80               	sublw	128
  3201  0436  1D03               	skipz
  3202  0437  2C3A               	goto	u975
  3203  0438  0822               	movf	??_Filter,w
  3204  0439  0246               	subwf	Filter@i,w
  3205  043A                     u975:	
  3206  043A  1803               	btfsc	3,0
  3207  043B  2C6F               	goto	l3962
  3208                           
  3209                           ;common.c: 66: {
  3210                           ;common.c: 67: if(filter_buf[i] > filter_buf[i + 1])
  3211  043C  1283               	bcf	3,5	;RP0=0, select bank0
  3212  043D  1303               	bcf	3,6	;RP1=0, select bank0
  3213  043E  1003               	clrc
  3214  043F  0D46               	rlf	Filter@i,w
  3215  0440  3E26               	addlw	Filter@filter_buf& (0+255)
  3216  0441  2496  118A         	fcall	PL3	;call to abstracted procedure
  3217  0443  24A6  118A         	fcall	PL6	;call to abstracted procedure
  3218  0445  0800               	movf	0,w
  3219  0446  00A4               	movwf	??_Filter+2
  3220  0447  0A84               	incf	4,f
  3221  0448  0800               	movf	0,w
  3222  0449  00A5               	movwf	??_Filter+3
  3223  044A  0823               	movf	??_Filter+1,w
  3224  044B  0225               	subwf	??_Filter+3,w
  3225  044C  1D03               	skipz
  3226  044D  2C50               	goto	u965
  3227  044E  0822               	movf	??_Filter,w
  3228  044F  0224               	subwf	??_Filter+2,w
  3229  0450                     u965:	
  3230  0450  1803               	skipnc
  3231  0451  2C6D               	goto	l3958
  3232                           
  3233                           ;common.c: 68: {
  3234                           ;common.c: 70: filter_temp = filter_buf[i];
  3235  0452  1003               	clrc
  3236  0453  0D46               	rlf	Filter@i,w
  3237  0454  3E26               	addlw	Filter@filter_buf& (0+255)
  3238  0455  0084               	movwf	4
  3239  0456  0800               	movf	0,w
  3240  0457  00BE               	movwf	Filter@filter_temp
  3241  0458  0A84               	incf	4,f
  3242  0459  0800               	movf	0,w
  3243  045A  00BF               	movwf	Filter@filter_temp+1
  3244                           
  3245                           ;common.c: 72: filter_buf[i] = filter_buf[i + 1];
  3246  045B  24A6  118A         	fcall	PL6	;call to abstracted procedure
  3247  045D  0800               	movf	0,w
  3248  045E  00A2               	movwf	??_Filter
  3249  045F  0A84               	incf	4,f
  3250  0460  0800               	movf	0,w
  3251  0461  00A3               	movwf	??_Filter+1
  3252  0462  1003               	clrc
  3253  0463  0D46               	rlf	Filter@i,w
  3254  0464  249E  118A         	fcall	PL4	;call to abstracted procedure
  3255                           
  3256                           ;common.c: 74: filter_buf[i + 1] = filter_temp;
  3257  0466  24A6  118A         	fcall	PL6	;call to abstracted procedure
  3258  0468  083E               	movf	Filter@filter_temp,w
  3259  0469  0080               	movwf	0
  3260  046A  0A84               	incf	4,f
  3261  046B  083F               	movf	Filter@filter_temp+1,w
  3262  046C  0080               	movwf	0
  3263  046D                     l3958:	
  3264  046D  0AC6               	incf	Filter@i,f
  3265  046E  2C2D               	goto	l3960
  3266  046F                     l3962:	
  3267  046F  1283               	bcf	3,5	;RP0=0, select bank0
  3268  0470  300B               	movlw	11
  3269  0471  1303               	bcf	3,6	;RP1=0, select bank0
  3270  0472  0AC5               	incf	Filter@j,f
  3271  0473  0245               	subwf	Filter@j,w
  3272  0474  1C03               	skipc
  3273  0475  2C2C               	goto	l3952
  3274                           
  3275                           ;common.c: 75: }
  3276                           ;common.c: 76: }
  3277                           ;common.c: 77: }
  3278                           ;common.c: 79: for(i = 2; i < 12 - 2; i++)
  3279  0476  3002               	movlw	2
  3280  0477  00C6               	movwf	Filter@i
  3281                           
  3282                           ;common.c: 80: {
  3283                           ;common.c: 81: filter_sum += filter_buf[i];
  3284  0478  1003               	clrc
  3285  0479                     L11:	
  3286  0479  0D46               	rlf	Filter@i,w
  3287  047A  3E26               	addlw	Filter@filter_buf& (0+255)
  3288  047B  2496  118A         	fcall	PL3	;call to abstracted procedure
  3289  047D  0822               	movf	??_Filter,w
  3290  047E  07C0               	addwf	Filter@filter_sum,f
  3291  047F  1803               	skipnc
  3292  0480  0AC1               	incf	Filter@filter_sum+1,f
  3293  0481  0823               	movf	??_Filter+1,w
  3294  0482  07C1               	addwf	Filter@filter_sum+1,f
  3295  0483  300A               	movlw	10
  3296  0484  0AC6               	incf	Filter@i,f
  3297  0485  0246               	subwf	Filter@i,w
  3298  0486  1C03               	skipc
  3299  0487  2C79               	goto	L11
  3300                           
  3301                           ;common.c: 82: }
  3302                           ;common.c: 84: return (filter_sum >> 3);
  3303  0488  0841               	movf	Filter@filter_sum+1,w
  3304  0489  00A1               	movwf	?_Filter+1
  3305  048A  0840               	movf	Filter@filter_sum,w
  3306  048B  00A0               	movwf	?_Filter
  3307  048C  1003               	clrc
  3308  048D  0CA1               	rrf	?_Filter+1,f
  3309  048E  0CA0               	rrf	?_Filter,f
  3310  048F  1003               	clrc
  3311  0490  0CA1               	rrf	?_Filter+1,f
  3312  0491  0CA0               	rrf	?_Filter,f
  3313  0492  1003               	clrc
  3314  0493  0CA1               	rrf	?_Filter+1,f
  3315  0494  0CA0               	rrf	?_Filter,f
  3316  0495  0008               	return
  3317  0496                     __end_of_Filter:	
  3318  0496                     PL3:	
  3319  0496  0084               	movwf	4
  3320  0497  1383               	bcf	3,7	;select IRP bank0
  3321  0498  0800               	movf	0,w
  3322  0499  00A2               	movwf	??_Filter
  3323  049A  0A84               	incf	4,f
  3324  049B  0800               	movf	0,w
  3325  049C  00A3               	movwf	??_Filter+1
  3326  049D  0008               	return
  3327  049E                     PL4:	
  3328  049E  3E26               	addlw	Filter@filter_buf& (0+255)
  3329  049F  0084               	movwf	4
  3330  04A0  0822               	movf	??_Filter,w
  3331  04A1  0080               	movwf	0
  3332  04A2  0A84               	incf	4,f
  3333  04A3  0823               	movf	??_Filter+1,w
  3334  04A4  0080               	movwf	0
  3335  04A5  0008               	return
  3336  04A6                     PL6:	
  3337  04A6  1003               	clrc
  3338  04A7  0D46               	rlf	Filter@i,w
  3339  04A8  3E02               	addlw	2
  3340  04A9  3E26               	addlw	Filter@filter_buf& (0+255)
  3341  04AA  0084               	movwf	4
  3342  04AB  0008               	return
  3343                           
  3344                           	psect	text736
  3345  04AC                     __ptext736:	
  3346 ;; =============== function _getAdOriginalCh14Value ends ============
  3347                           
  3348                           
  3349 ;; *************** function _process_AD_Converter_Value *****************
  3350 ;; Defined at:
  3351 ;;		line 251 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;		None
  3354 ;; Auto vars:     Size  Location     Type
  3355 ;;		None
  3356 ;; Return value:  Size  Location     Type
  3357 ;;		None               void
  3358 ;; Registers used:
  3359 ;;		wreg, status,2, status,0, pclath, cstack
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 60/0
  3363 ;;		Unchanged: FFF9F/0
  3364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3365 ;;      Params:         0       0       0       0       0
  3366 ;;      Locals:         0       0       0       0       0
  3367 ;;      Temps:          0       0       0       0       0
  3368 ;;      Totals:         0       0       0       0       0
  3369 ;;Total ram usage:        0 bytes
  3370 ;; Hardware stack levels used:    1
  3371 ;; Hardware stack levels required when called:    3
  3372 ;; This function calls:
  3373 ;;		_getAD_ConvertFlag
  3374 ;;		_setAD_ConvertFlag
  3375 ;;		_AD_Sample
  3376 ;;		_adc_test_init
  3377 ;;		_adc_start
  3378 ;; This function is called by:
  3379 ;;		_main
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382  04AC                     _process_AD_Converter_Value:	
  3383                           
  3384                           ;common.c: 252: if(getAD_ConvertFlag())
  3385                           
  3386                           ; Regs used in _process_AD_Converter_Value: [wreg+status,2+status,0+pclath+cstack]
  3387  04AC  24CA  118A         	fcall	_getAD_ConvertFlag
  3388  04AE  3A00               	xorlw	0
  3389  04AF  1903               	skipnz
  3390  04B0  0008               	return
  3391                           
  3392                           ;common.c: 253: {
  3393                           ;common.c: 254: setAD_ConvertFlag(0);
  3394  04B1  3000               	movlw	0
  3395  04B2  24CE  118A         	fcall	_setAD_ConvertFlag
  3396                           
  3397                           ;common.c: 255: AD_Sample();
  3398  04B4  24D1  118A         	fcall	_AD_Sample
  3399                           
  3400                           ;common.c: 256: if(4 == sampleChannelSelect)
  3401  04B6  086E               	movf	_sampleChannelSelect,w
  3402  04B7  3A04               	xorlw	4
  3403  04B8  1D03               	skipz
  3404  04B9  2CBE               	goto	l4126
  3405                           
  3406                           ;common.c: 257: adc_test_init(4,3);
  3407  04BA  3003               	movlw	3
  3408  04BB  00A0               	movwf	?_adc_test_init
  3409  04BC  3004               	movlw	4
  3410  04BD  2CC7               	goto	L10
  3411  04BE                     l4126:	
  3412                           
  3413                           ;common.c: 258: else if(1 == sampleChannelSelect)
  3414  04BE  0B6E               	decfsz	_sampleChannelSelect,w
  3415  04BF  2CC4               	goto	l4130
  3416                           
  3417                           ;common.c: 259: adc_test_init(1,3);
  3418  04C0  3003               	movlw	3
  3419  04C1  00A0               	movwf	?_adc_test_init
  3420  04C2  3001               	movlw	1
  3421  04C3  2CC7               	goto	L10
  3422  04C4                     l4130:	
  3423                           
  3424                           ;common.c: 260: else
  3425                           ;common.c: 261: adc_test_init(14,3);
  3426  04C4  3003               	movlw	3
  3427  04C5  00A0               	movwf	?_adc_test_init
  3428  04C6  300E               	movlw	14
  3429  04C7                     L10:	
  3430  04C7  24EE  118A         	fcall	_adc_test_init
  3431                           
  3432                           ;common.c: 263: adc_start();
  3433  04C9  2D03               	ljmp	l3870
  3434  04CA                     __end_of_process_AD_Converter_Value:	
  3435  04CA                     __ptext741:	
  3436 ;; =============== function _setAD_ConvertFlag ends ============
  3437                           
  3438                           
  3439 ;; *************** function _getAD_ConvertFlag *****************
  3440 ;; Defined at:
  3441 ;;		line 200 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3442 ;; Parameters:    Size  Location     Type
  3443 ;;		None
  3444 ;; Auto vars:     Size  Location     Type
  3445 ;;		None
  3446 ;; Return value:  Size  Location     Type
  3447 ;;                  1    wreg      unsigned char 
  3448 ;; Registers used:
  3449 ;;		wreg
  3450 ;; Tracked objects:
  3451 ;;		On entry : 0/0
  3452 ;;		On exit  : 60/0
  3453 ;;		Unchanged: FFF9F/0
  3454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3455 ;;      Params:         0       0       0       0       0
  3456 ;;      Locals:         0       0       0       0       0
  3457 ;;      Temps:          0       0       0       0       0
  3458 ;;      Totals:         0       0       0       0       0
  3459 ;;Total ram usage:        0 bytes
  3460 ;; Hardware stack levels used:    1
  3461 ;; Hardware stack levels required when called:    2
  3462 ;; This function calls:
  3463 ;;		Nothing
  3464 ;; This function is called by:
  3465 ;;		_process_AD_Converter_Value
  3466 ;; This function uses a non-reentrant model
  3467 ;;
  3468  04CA                     _getAD_ConvertFlag:	
  3469                           
  3470                           ;common.c: 201: return adc_convert_flag;
  3471                           
  3472                           ; Regs used in _getAD_ConvertFlag: [wreg]
  3473  04CA  1283               	bcf	3,5	;RP0=0, select bank0
  3474  04CB  1303               	bcf	3,6	;RP1=0, select bank0
  3475  04CC  084E               	movf	_adc_convert_flag,w
  3476  04CD  0008               	return
  3477  04CE                     __end_of_getAD_ConvertFlag:	
  3478  04CE                     __ptext740:	
  3479 ;; =============== function _AD_Sample ends ============
  3480                           
  3481                           
  3482 ;; *************** function _setAD_ConvertFlag *****************
  3483 ;; Defined at:
  3484 ;;		line 206 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3485 ;; Parameters:    Size  Location     Type
  3486 ;;  flag            1    wreg     unsigned char 
  3487 ;; Auto vars:     Size  Location     Type
  3488 ;;  flag            1    0[BANK0 ] unsigned char 
  3489 ;; Return value:  Size  Location     Type
  3490 ;;		None               void
  3491 ;; Registers used:
  3492 ;;		wreg
  3493 ;; Tracked objects:
  3494 ;;		On entry : 60/0
  3495 ;;		On exit  : 60/0
  3496 ;;		Unchanged: FFF9F/0
  3497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3498 ;;      Params:         0       0       0       0       0
  3499 ;;      Locals:         0       1       0       0       0
  3500 ;;      Temps:          0       0       0       0       0
  3501 ;;      Totals:         0       1       0       0       0
  3502 ;;Total ram usage:        1 bytes
  3503 ;; Hardware stack levels used:    1
  3504 ;; Hardware stack levels required when called:    2
  3505 ;; This function calls:
  3506 ;;		Nothing
  3507 ;; This function is called by:
  3508 ;;		_process_AD_Converter_Value
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511  04CE                     _setAD_ConvertFlag:	
  3512                           
  3513                           ; Regs used in _setAD_ConvertFlag: [wreg]
  3514                           ;setAD_ConvertFlag@flag stored from wreg
  3515  04CE  00A0               	movwf	setAD_ConvertFlag@flag
  3516                           
  3517                           ;common.c: 207: adc_convert_flag = flag;
  3518  04CF  00CE               	movwf	_adc_convert_flag
  3519  04D0  0008               	return
  3520  04D1                     __end_of_setAD_ConvertFlag:	
  3521  04D1                     __ptext739:	
  3522 ;; =============== function _clearAllTimer ends ============
  3523                           
  3524                           
  3525 ;; *************** function _AD_Sample *****************
  3526 ;; Defined at:
  3527 ;;		line 277 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3528 ;; Parameters:    Size  Location     Type
  3529 ;;		None
  3530 ;; Auto vars:     Size  Location     Type
  3531 ;;		None
  3532 ;; Return value:  Size  Location     Type
  3533 ;;		None               void
  3534 ;; Registers used:
  3535 ;;		wreg, status,2, status,0
  3536 ;; Tracked objects:
  3537 ;;		On entry : 60/0
  3538 ;;		On exit  : 60/0
  3539 ;;		Unchanged: FFF9F/0
  3540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3541 ;;      Params:         0       0       0       0       0
  3542 ;;      Locals:         0       0       0       0       0
  3543 ;;      Temps:          0       0       0       0       0
  3544 ;;      Totals:         0       0       0       0       0
  3545 ;;Total ram usage:        0 bytes
  3546 ;; Hardware stack levels used:    1
  3547 ;; Hardware stack levels required when called:    2
  3548 ;; This function calls:
  3549 ;;		Nothing
  3550 ;; This function is called by:
  3551 ;;		_process_AD_Converter_Value
  3552 ;; This function uses a non-reentrant model
  3553 ;;
  3554  04D1                     _AD_Sample:	
  3555                           
  3556                           ;common.c: 278: if(sampleTimes < 12)
  3557                           
  3558                           ; Regs used in _AD_Sample: [wreg+status,2+status,0]
  3559  04D1  300C               	movlw	12
  3560  04D2  024F               	subwf	_sampleTimes,w
  3561  04D3  1803               	skipnc
  3562  04D4  0008               	return
  3563  04D5  300C               	movlw	12
  3564                           
  3565                           ;common.c: 279: {
  3566                           ;common.c: 300: sampleTimes++;
  3567  04D6  0ACF               	incf	_sampleTimes,f
  3568                           
  3569                           ;common.c: 302: if(sampleTimes >= 12)
  3570  04D7  024F               	subwf	_sampleTimes,w
  3571  04D8  1C03               	skipc
  3572  04D9  0008               	return
  3573                           
  3574                           ;common.c: 303: {
  3575                           ;common.c: 304: sampleTimes = 0;
  3576  04DA  01CF               	clrf	_sampleTimes
  3577                           
  3578                           ;common.c: 306: if(sampleChannelSelect == 14)
  3579  04DB  086E               	movf	_sampleChannelSelect,w
  3580  04DC  3A0E               	xorlw	14
  3581  04DD  1D03               	skipz
  3582  04DE  2CE2               	goto	l4048
  3583                           
  3584                           ;common.c: 307: {
  3585                           ;common.c: 310: sampleChannelSelect = 1;
  3586  04DF  01EE               	clrf	_sampleChannelSelect
  3587  04E0  0AEE               	incf	_sampleChannelSelect,f
  3588                           
  3589                           ;common.c: 311: }
  3590  04E1  0008               	return
  3591  04E2                     l4048:	
  3592                           
  3593                           ;common.c: 312: else if(sampleChannelSelect == 4)
  3594  04E2  086E               	movf	_sampleChannelSelect,w
  3595  04E3  3A04               	xorlw	4
  3596  04E4  1D03               	skipz
  3597  04E5  2CE9               	goto	l4052
  3598  04E6                     l4050:	
  3599                           
  3600                           ;common.c: 313: {
  3601                           ;common.c: 315: sampleChannelSelect = 14;
  3602  04E6  300E               	movlw	14
  3603  04E7  00EE               	movwf	_sampleChannelSelect
  3604                           
  3605                           ;common.c: 316: }
  3606  04E8  0008               	return
  3607  04E9                     l4052:	
  3608                           
  3609                           ;common.c: 317: else if(sampleChannelSelect == 1)
  3610  04E9  0B6E               	decfsz	_sampleChannelSelect,w
  3611  04EA  2CE6               	goto	l4050
  3612                           
  3613                           ;common.c: 318: {
  3614                           ;common.c: 320: sampleChannelSelect = 4;
  3615  04EB  3004               	movlw	4
  3616  04EC  00EE               	movwf	_sampleChannelSelect
  3617                           
  3618                           ;common.c: 321: }
  3619  04ED  0008               	return
  3620  04EE                     __end_of_AD_Sample:	
  3621  04EE                     __ptext755:	
  3622 ;; =============== function _dac_init ends ============
  3623                           
  3624                           
  3625 ;; *************** function _adc_test_init *****************
  3626 ;; Defined at:
  3627 ;;		line 85 in file "D:\develop\ATK\AK7030-OTP\periph.c"
  3628 ;; Parameters:    Size  Location     Type
  3629 ;;  channel         1    wreg     unsigned char 
  3630 ;;  ref             1    0[BANK0 ] unsigned char 
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;  channel         1    2[BANK0 ] unsigned char 
  3633 ;; Return value:  Size  Location     Type
  3634 ;;		None               void
  3635 ;; Registers used:
  3636 ;;		wreg, status,2, status,0
  3637 ;; Tracked objects:
  3638 ;;		On entry : 60/0
  3639 ;;		On exit  : 60/20
  3640 ;;		Unchanged: FFF9F/0
  3641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3642 ;;      Params:         0       1       0       0       0
  3643 ;;      Locals:         0       1       0       0       0
  3644 ;;      Temps:          0       1       0       0       0
  3645 ;;      Totals:         0       3       0       0       0
  3646 ;;Total ram usage:        3 bytes
  3647 ;; Hardware stack levels used:    1
  3648 ;; Hardware stack levels required when called:    2
  3649 ;; This function calls:
  3650 ;;		Nothing
  3651 ;; This function is called by:
  3652 ;;		_main
  3653 ;;		_process_AD_Converter_Value
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656  04EE                     _adc_test_init:	
  3657                           
  3658                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  3659                           ;adc_test_init@channel stored from wreg
  3660  04EE  00A2               	movwf	adc_test_init@channel
  3661                           
  3662                           ;periph.c: 86: ADCON0 = 0x00;
  3663  04EF  019F               	clrf	31	;volatile
  3664                           
  3665                           ;periph.c: 87: ADCON0|=channel<<2;
  3666  04F0  00A1               	movwf	??_adc_test_init
  3667  04F1  1003               	clrc
  3668  04F2  0DA1               	rlf	??_adc_test_init,f
  3669  04F3  1003               	clrc
  3670  04F4  0D21               	rlf	??_adc_test_init,w
  3671  04F5  049F               	iorwf	31,f	;volatile
  3672                           
  3673                           ;periph.c: 88: ADCON1|=ref<<6;
  3674  04F6  0820               	movf	adc_test_init@ref,w
  3675  04F7  00A1               	movwf	??_adc_test_init
  3676  04F8  0CA1               	rrf	??_adc_test_init,f
  3677  04F9  0CA1               	rrf	??_adc_test_init,f
  3678  04FA  0C21               	rrf	??_adc_test_init,w
  3679  04FB  39C0               	andlw	192
  3680  04FC  1683               	bsf	3,5	;RP0=1, select bank1
  3681  04FD  049F               	iorwf	31,f	;volatile
  3682                           
  3683                           ;periph.c: 89: ADON=1;
  3684  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  3685  04FF  141F               	bsf	31,0
  3686                           
  3687                           ;periph.c: 90: ADIE=1;
  3688  0500  1683               	bsf	3,5	;RP0=1, select bank1
  3689  0501  150D               	bsf	13,2
  3690  0502  0008               	return
  3691  0503                     __end_of_adc_test_init:	
  3692  0503                     __ptext751:	
  3693 ;; =============== function _isPermitSampleTime ends ============
  3694                           
  3695                           
  3696 ;; *************** function _adc_start *****************
  3697 ;; Defined at:
  3698 ;;		line 100 in file "D:\develop\ATK\AK7030-OTP\periph.c"
  3699 ;; Parameters:    Size  Location     Type
  3700 ;;		None
  3701 ;; Auto vars:     Size  Location     Type
  3702 ;;		None
  3703 ;; Return value:  Size  Location     Type
  3704 ;;		None               void
  3705 ;; Registers used:
  3706 ;;		None
  3707 ;; Tracked objects:
  3708 ;;		On entry : 60/20
  3709 ;;		On exit  : 60/0
  3710 ;;		Unchanged: FFF9F/0
  3711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3712 ;;      Params:         0       0       0       0       0
  3713 ;;      Locals:         0       0       0       0       0
  3714 ;;      Temps:          0       0       0       0       0
  3715 ;;      Totals:         0       0       0       0       0
  3716 ;;Total ram usage:        0 bytes
  3717 ;; Hardware stack levels used:    1
  3718 ;; Hardware stack levels required when called:    2
  3719 ;; This function calls:
  3720 ;;		Nothing
  3721 ;; This function is called by:
  3722 ;;		_main
  3723 ;;		_process_AD_Converter_Value
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726  0503                     _adc_start:	
  3727  0503                     l3870:	
  3728                           ; Regs used in _adc_start: []
  3729                           
  3730                           
  3731                           ;periph.c: 101: GO=1;
  3732  0503  1283               	bcf	3,5	;RP0=0, select bank0
  3733  0504  149F               	bsf	31,1
  3734  0505  0008               	return
  3735  0506                     __end_of_adc_start:	
  3736                           
  3737                           	psect	text743
  3738  05C3                     __ptext743:	
  3739 ;; =============== function _Filter ends ============
  3740                           
  3741                           
  3742 ;; *************** function _isFinishedThreeHoursTimer *****************
  3743 ;; Defined at:
  3744 ;;		line 416 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3745 ;; Parameters:    Size  Location     Type
  3746 ;;		None
  3747 ;; Auto vars:     Size  Location     Type
  3748 ;;		None
  3749 ;; Return value:  Size  Location     Type
  3750 ;;                  1    wreg      unsigned char 
  3751 ;; Registers used:
  3752 ;;		wreg, status,2, status,0
  3753 ;; Tracked objects:
  3754 ;;		On entry : 60/0
  3755 ;;		On exit  : 60/0
  3756 ;;		Unchanged: FFF9F/0
  3757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3758 ;;      Params:         0       0       0       0       0
  3759 ;;      Locals:         0       0       0       0       0
  3760 ;;      Temps:          0       0       0       0       0
  3761 ;;      Totals:         0       0       0       0       0
  3762 ;;Total ram usage:        0 bytes
  3763 ;; Hardware stack levels used:    1
  3764 ;; Hardware stack levels required when called:    2
  3765 ;; This function calls:
  3766 ;;		Nothing
  3767 ;; This function is called by:
  3768 ;;		_main
  3769 ;; This function uses a non-reentrant model
  3770 ;;
  3771  05C3                     _isFinishedThreeHoursTimer:	
  3772                           
  3773                           ;common.c: 417: if(uiSmallTimer == 0)
  3774                           
  3775                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  3776  05C3  084C               	movf	_uiSmallTimer+1,w
  3777  05C4  044B               	iorwf	_uiSmallTimer,w
  3778  05C5  1903               	btfsc	3,2
  3779                           
  3780                           ;common.c: 418: return 1;
  3781  05C6  3401               	retlw	1
  3782                           
  3783                           ;common.c: 419: else
  3784                           ;common.c: 420: return 0;
  3785  05C7  3400               	retlw	0
  3786  05C8                     __end_of_isFinishedThreeHoursTimer:	
  3787                           
  3788                           	psect	text744
  3789  0593                     __ptext744:	
  3790 ;; =============== function _isFinishedThreeHoursTimer ends ============
  3791                           
  3792                           
  3793 ;; *************** function _startThreeHoursTimer *****************
  3794 ;; Defined at:
  3795 ;;		line 382 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3796 ;; Parameters:    Size  Location     Type
  3797 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  3798 ;; Auto vars:     Size  Location     Type
  3799 ;;		None
  3800 ;; Return value:  Size  Location     Type
  3801 ;;		None               void
  3802 ;; Registers used:
  3803 ;;		wreg, status,2, status,0
  3804 ;; Tracked objects:
  3805 ;;		On entry : 60/0
  3806 ;;		On exit  : 60/0
  3807 ;;		Unchanged: FFF9F/0
  3808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3809 ;;      Params:         0       2       0       0       0
  3810 ;;      Locals:         0       0       0       0       0
  3811 ;;      Temps:          0       0       0       0       0
  3812 ;;      Totals:         0       2       0       0       0
  3813 ;;Total ram usage:        2 bytes
  3814 ;; Hardware stack levels used:    1
  3815 ;; Hardware stack levels required when called:    2
  3816 ;; This function calls:
  3817 ;;		Nothing
  3818 ;; This function is called by:
  3819 ;;		_main
  3820 ;; This function uses a non-reentrant model
  3821 ;;
  3822  0593                     _startThreeHoursTimer:	
  3823                           
  3824                           ;common.c: 383: if(0 == uiSmallTimer)
  3825                           
  3826                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  3827  0593  084C               	movf	_uiSmallTimer+1,w
  3828  0594  044B               	iorwf	_uiSmallTimer,w
  3829  0595  1D03               	skipz
  3830  0596  0008               	return
  3831                           
  3832                           ;common.c: 384: uiSmallTimer = uiSetTime;
  3833  0597  0821               	movf	startThreeHoursTimer@uiSetTime+1,w
  3834  0598  00CC               	movwf	_uiSmallTimer+1
  3835  0599  0820               	movf	startThreeHoursTimer@uiSetTime,w
  3836  059A  00CB               	movwf	_uiSmallTimer
  3837  059B  0008               	return
  3838  059C                     __end_of_startThreeHoursTimer:	
  3839                           
  3840                           	psect	text745
  3841  05BD                     __ptext745:	
  3842 ;; =============== function _startThreeHoursTimer ends ============
  3843                           
  3844                           
  3845 ;; *************** function _isFinishedTwentySecondsTimer *****************
  3846 ;; Defined at:
  3847 ;;		line 399 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3848 ;; Parameters:    Size  Location     Type
  3849 ;;		None
  3850 ;; Auto vars:     Size  Location     Type
  3851 ;;		None
  3852 ;; Return value:  Size  Location     Type
  3853 ;;                  1    wreg      unsigned char 
  3854 ;; Registers used:
  3855 ;;		wreg, status,2, status,0
  3856 ;; Tracked objects:
  3857 ;;		On entry : 60/0
  3858 ;;		On exit  : 60/20
  3859 ;;		Unchanged: FFF9F/0
  3860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3861 ;;      Params:         0       0       0       0       0
  3862 ;;      Locals:         0       0       0       0       0
  3863 ;;      Temps:          0       0       0       0       0
  3864 ;;      Totals:         0       0       0       0       0
  3865 ;;Total ram usage:        0 bytes
  3866 ;; Hardware stack levels used:    1
  3867 ;; Hardware stack levels required when called:    2
  3868 ;; This function calls:
  3869 ;;		Nothing
  3870 ;; This function is called by:
  3871 ;;		_main
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874  05BD                     _isFinishedTwentySecondsTimer:	
  3875                           
  3876                           ;common.c: 400: if(0 == uiTwentySecondsTimer)
  3877                           
  3878                           ; Regs used in _isFinishedTwentySecondsTimer: [wreg+status,2+status,0]
  3879  05BD  1683               	bsf	3,5	;RP0=1, select bank1
  3880  05BE  0821               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  3881  05BF  0420               	iorwf	_uiTwentySecondsTimer^(0+128),w
  3882  05C0  1903               	btfsc	3,2
  3883                           
  3884                           ;common.c: 401: return 1;
  3885  05C1  3401               	retlw	1
  3886                           
  3887                           ;common.c: 402: else
  3888                           ;common.c: 403: return 0;
  3889  05C2  3400               	retlw	0
  3890  05C3                     __end_of_isFinishedTwentySecondsTimer:	
  3891                           
  3892                           	psect	text746
  3893  05C8                     __ptext746:	
  3894 ;; =============== function _isFinishedTwentySecondsTimer ends ============
  3895                           
  3896                           
  3897 ;; *************** function _startTwentySecondsTimer *****************
  3898 ;; Defined at:
  3899 ;;		line 393 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3900 ;; Parameters:    Size  Location     Type
  3901 ;;		None
  3902 ;; Auto vars:     Size  Location     Type
  3903 ;;		None
  3904 ;; Return value:  Size  Location     Type
  3905 ;;		None               void
  3906 ;; Registers used:
  3907 ;;		wreg
  3908 ;; Tracked objects:
  3909 ;;		On entry : 60/0
  3910 ;;		On exit  : 60/20
  3911 ;;		Unchanged: FFF9F/0
  3912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3913 ;;      Params:         0       0       0       0       0
  3914 ;;      Locals:         0       0       0       0       0
  3915 ;;      Temps:          0       0       0       0       0
  3916 ;;      Totals:         0       0       0       0       0
  3917 ;;Total ram usage:        0 bytes
  3918 ;; Hardware stack levels used:    1
  3919 ;; Hardware stack levels required when called:    2
  3920 ;; This function calls:
  3921 ;;		Nothing
  3922 ;; This function is called by:
  3923 ;;		_main
  3924 ;; This function uses a non-reentrant model
  3925 ;;
  3926  05C8                     _startTwentySecondsTimer:	
  3927                           
  3928                           ;common.c: 394: uiTwentySecondsTimer = 20;
  3929                           
  3930                           ; Regs used in _startTwentySecondsTimer: [wreg]
  3931  05C8  3014               	movlw	20
  3932  05C9  1683               	bsf	3,5	;RP0=1, select bank1
  3933  05CA  00A0               	movwf	_uiTwentySecondsTimer^(0+128)
  3934  05CB  01A1               	clrf	(_uiTwentySecondsTimer+1)^(0+128)
  3935  05CC  0008               	return
  3936  05CD                     __end_of_startTwentySecondsTimer:	
  3937                           
  3938                           	psect	text747
  3939  05CD                     __ptext747:	
  3940 ;; =============== function _startTwentySecondsTimer ends ============
  3941                           
  3942                           
  3943 ;; *************** function _isFinishedTwelveHoursTimer *****************
  3944 ;; Defined at:
  3945 ;;		line 408 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3946 ;; Parameters:    Size  Location     Type
  3947 ;;		None
  3948 ;; Auto vars:     Size  Location     Type
  3949 ;;		None
  3950 ;; Return value:  Size  Location     Type
  3951 ;;                  1    wreg      unsigned char 
  3952 ;; Registers used:
  3953 ;;		wreg, status,2, status,0
  3954 ;; Tracked objects:
  3955 ;;		On entry : 60/0
  3956 ;;		On exit  : 60/0
  3957 ;;		Unchanged: FFF9F/0
  3958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3959 ;;      Params:         0       0       0       0       0
  3960 ;;      Locals:         0       0       0       0       0
  3961 ;;      Temps:          0       0       0       0       0
  3962 ;;      Totals:         0       0       0       0       0
  3963 ;;Total ram usage:        0 bytes
  3964 ;; Hardware stack levels used:    1
  3965 ;; Hardware stack levels required when called:    2
  3966 ;; This function calls:
  3967 ;;		Nothing
  3968 ;; This function is called by:
  3969 ;;		_main
  3970 ;; This function uses a non-reentrant model
  3971 ;;
  3972  05CD                     _isFinishedTwelveHoursTimer:	
  3973                           
  3974                           ;common.c: 409: if(uiBigTimer == 0)
  3975                           
  3976                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  3977  05CD  084A               	movf	_uiBigTimer+1,w
  3978  05CE  0449               	iorwf	_uiBigTimer,w
  3979  05CF  1903               	btfsc	3,2
  3980                           
  3981                           ;common.c: 410: return 1;
  3982  05D0  3401               	retlw	1
  3983                           
  3984                           ;common.c: 411: else
  3985                           ;common.c: 412: return 0;
  3986  05D1  3400               	retlw	0
  3987  05D2                     __end_of_isFinishedTwelveHoursTimer:	
  3988                           
  3989                           	psect	text748
  3990  059C                     __ptext748:	
  3991 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  3992                           
  3993                           
  3994 ;; *************** function _startTwelveHourTimer *****************
  3995 ;; Defined at:
  3996 ;;		line 354 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3997 ;; Parameters:    Size  Location     Type
  3998 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  3999 ;; Auto vars:     Size  Location     Type
  4000 ;;		None
  4001 ;; Return value:  Size  Location     Type
  4002 ;;		None               void
  4003 ;; Registers used:
  4004 ;;		wreg, status,2, status,0
  4005 ;; Tracked objects:
  4006 ;;		On entry : 60/0
  4007 ;;		On exit  : 60/0
  4008 ;;		Unchanged: FFF9F/0
  4009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4010 ;;      Params:         0       2       0       0       0
  4011 ;;      Locals:         0       0       0       0       0
  4012 ;;      Temps:          0       0       0       0       0
  4013 ;;      Totals:         0       2       0       0       0
  4014 ;;Total ram usage:        2 bytes
  4015 ;; Hardware stack levels used:    1
  4016 ;; Hardware stack levels required when called:    2
  4017 ;; This function calls:
  4018 ;;		Nothing
  4019 ;; This function is called by:
  4020 ;;		_main
  4021 ;; This function uses a non-reentrant model
  4022 ;;
  4023  059C                     _startTwelveHourTimer:	
  4024                           
  4025                           ;common.c: 355: if(0 == uiBigTimer)
  4026                           
  4027                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  4028  059C  084A               	movf	_uiBigTimer+1,w
  4029  059D  0449               	iorwf	_uiBigTimer,w
  4030  059E  1D03               	skipz
  4031  059F  0008               	return
  4032                           
  4033                           ;common.c: 356: uiBigTimer = uiSetTime;
  4034  05A0  0821               	movf	startTwelveHourTimer@uiSetTime+1,w
  4035  05A1  00CA               	movwf	_uiBigTimer+1
  4036  05A2  0820               	movf	startTwelveHourTimer@uiSetTime,w
  4037  05A3  00C9               	movwf	_uiBigTimer
  4038  05A4  0008               	return
  4039  05A5                     __end_of_startTwelveHourTimer:	
  4040                           
  4041                           	psect	text749
  4042  05DF                     __ptext749:	
  4043 ;; =============== function _startTwelveHourTimer ends ============
  4044                           
  4045                           
  4046 ;; *************** function _clrSampeTime *****************
  4047 ;; Defined at:
  4048 ;;		line 434 in file "D:\develop\ATK\AK7030-OTP\common.c"
  4049 ;; Parameters:    Size  Location     Type
  4050 ;;		None
  4051 ;; Auto vars:     Size  Location     Type
  4052 ;;		None
  4053 ;; Return value:  Size  Location     Type
  4054 ;;		None               void
  4055 ;; Registers used:
  4056 ;;		status,2
  4057 ;; Tracked objects:
  4058 ;;		On entry : 60/0
  4059 ;;		On exit  : 60/0
  4060 ;;		Unchanged: FFF9F/0
  4061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4062 ;;      Params:         0       0       0       0       0
  4063 ;;      Locals:         0       0       0       0       0
  4064 ;;      Temps:          0       0       0       0       0
  4065 ;;      Totals:         0       0       0       0       0
  4066 ;;Total ram usage:        0 bytes
  4067 ;; Hardware stack levels used:    1
  4068 ;; Hardware stack levels required when called:    2
  4069 ;; This function calls:
  4070 ;;		Nothing
  4071 ;; This function is called by:
  4072 ;;		_main
  4073 ;; This function uses a non-reentrant model
  4074 ;;
  4075  05DF                     _clrSampeTime:	
  4076                           
  4077                           ;common.c: 435: timer.timer10msStopWatch = 0;
  4078                           
  4079                           ; Regs used in _clrSampeTime: [status,2]
  4080  05DF  01D0               	clrf	_timer
  4081  05E0  0008               	return
  4082  05E1                     __end_of_clrSampeTime:	
  4083                           
  4084                           	psect	text750
  4085  05D2                     __ptext750:	
  4086 ;; =============== function _clrSampeTime ends ============
  4087                           
  4088                           
  4089 ;; *************** function _isPermitSampleTime *****************
  4090 ;; Defined at:
  4091 ;;		line 424 in file "D:\develop\ATK\AK7030-OTP\common.c"
  4092 ;; Parameters:    Size  Location     Type
  4093 ;;		None
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;		None
  4096 ;; Return value:  Size  Location     Type
  4097 ;;                  1    wreg      unsigned char 
  4098 ;; Registers used:
  4099 ;;		wreg
  4100 ;; Tracked objects:
  4101 ;;		On entry : 60/0
  4102 ;;		On exit  : 60/0
  4103 ;;		Unchanged: FFF9F/0
  4104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4105 ;;      Params:         0       0       0       0       0
  4106 ;;      Locals:         0       0       0       0       0
  4107 ;;      Temps:          0       0       0       0       0
  4108 ;;      Totals:         0       0       0       0       0
  4109 ;;Total ram usage:        0 bytes
  4110 ;; Hardware stack levels used:    1
  4111 ;; Hardware stack levels required when called:    2
  4112 ;; This function calls:
  4113 ;;		Nothing
  4114 ;; This function is called by:
  4115 ;;		_main
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118  05D2                     _isPermitSampleTime:	
  4119                           
  4120                           ;common.c: 425: if(timer.timer10msStopWatch >= 10)
  4121                           
  4122                           ; Regs used in _isPermitSampleTime: [wreg]
  4123  05D2  300A               	movlw	10
  4124  05D3  0250               	subwf	_timer,w
  4125  05D4  1803               	btfsc	3,0
  4126                           
  4127                           ;common.c: 426: {
  4128                           ;common.c: 427: return 1;
  4129  05D5  3401               	retlw	1
  4130                           
  4131                           ;common.c: 429: else
  4132                           ;common.c: 430: return 0;
  4133  05D6  3400               	retlw	0
  4134  05D7                     __end_of_isPermitSampleTime:	
  4135                           
  4136                           	psect	text752
  4137  05AD                     __ptext752:	
  4138 ;; =============== function _adc_start ends ============
  4139                           
  4140                           
  4141 ;; *************** function _op2_init *****************
  4142 ;; Defined at:
  4143 ;;		line 45 in file "D:\develop\ATK\AK7030-OTP\periph.c"
  4144 ;; Parameters:    Size  Location     Type
  4145 ;;		None
  4146 ;; Auto vars:     Size  Location     Type
  4147 ;;		None
  4148 ;; Return value:  Size  Location     Type
  4149 ;;		None               void
  4150 ;; Registers used:
  4151 ;;		wreg
  4152 ;; Tracked objects:
  4153 ;;		On entry : 17F/20
  4154 ;;		On exit  : 17F/20
  4155 ;;		Unchanged: FFE80/0
  4156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4157 ;;      Params:         0       0       0       0       0
  4158 ;;      Locals:         0       0       0       0       0
  4159 ;;      Temps:          0       0       0       0       0
  4160 ;;      Totals:         0       0       0       0       0
  4161 ;;Total ram usage:        0 bytes
  4162 ;; Hardware stack levels used:    1
  4163 ;; Hardware stack levels required when called:    2
  4164 ;; This function calls:
  4165 ;;		Nothing
  4166 ;; This function is called by:
  4167 ;;		_main
  4168 ;; This function uses a non-reentrant model
  4169 ;;
  4170  05AD                     _op2_init:	
  4171                           
  4172                           ;periph.c: 52: OP2CON1=0x10;
  4173                           
  4174                           ; Regs used in _op2_init: [wreg]
  4175  05AD  3010               	movlw	16
  4176  05AE  009C               	movwf	28	;volatile
  4177                           
  4178                           ;periph.c: 54: OP2CON2=0x10;
  4179  05AF  009D               	movwf	29	;volatile
  4180                           
  4181                           ;periph.c: 55: OP2CON0=0x80;
  4182  05B0  3080               	movlw	128
  4183  05B1  009B               	movwf	27	;volatile
  4184                           
  4185                           ;periph.c: 58: TRISA7=0;
  4186  05B2  1385               	bcf	5,7
  4187                           
  4188                           ;periph.c: 60: TRISB7 = 1;
  4189  05B3  1786               	bsf	6,7
  4190  05B4  0008               	return
  4191  05B5                     __end_of_op2_init:	
  4192                           
  4193                           	psect	text753
  4194  057E                     __ptext753:	
  4195 ;; =============== function _op2_init ends ============
  4196                           
  4197                           
  4198 ;; *************** function _op1_init *****************
  4199 ;; Defined at:
  4200 ;;		line 26 in file "D:\develop\ATK\AK7030-OTP\periph.c"
  4201 ;; Parameters:    Size  Location     Type
  4202 ;;		None
  4203 ;; Auto vars:     Size  Location     Type
  4204 ;;		None
  4205 ;; Return value:  Size  Location     Type
  4206 ;;		None               void
  4207 ;; Registers used:
  4208 ;;		wreg
  4209 ;; Tracked objects:
  4210 ;;		On entry : 17F/20
  4211 ;;		On exit  : 17F/20
  4212 ;;		Unchanged: FFE80/0
  4213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4214 ;;      Params:         0       0       0       0       0
  4215 ;;      Locals:         0       0       0       0       0
  4216 ;;      Temps:          0       0       0       0       0
  4217 ;;      Totals:         0       0       0       0       0
  4218 ;;Total ram usage:        0 bytes
  4219 ;; Hardware stack levels used:    1
  4220 ;; Hardware stack levels required when called:    2
  4221 ;; This function calls:
  4222 ;;		Nothing
  4223 ;; This function is called by:
  4224 ;;		_main
  4225 ;; This function uses a non-reentrant model
  4226 ;;
  4227  057E                     _op1_init:	
  4228                           
  4229                           ;periph.c: 33: OP1CON1=0x02;
  4230                           
  4231                           ; Regs used in _op1_init: [wreg]
  4232  057E  3002               	movlw	2
  4233  057F  1283               	bcf	3,5	;RP0=0, select bank0
  4234  0580  009C               	movwf	28	;volatile
  4235                           
  4236                           ;periph.c: 34: OP1CON2=0xA0;
  4237  0581  30A0               	movlw	160
  4238  0582  009D               	movwf	29	;volatile
  4239                           
  4240                           ;periph.c: 35: OP1CON0=0x80;
  4241  0583  3080               	movlw	128
  4242  0584  009B               	movwf	27	;volatile
  4243                           
  4244                           ;periph.c: 38: TRISB3=1;
  4245  0585  1683               	bsf	3,5	;RP0=1, select bank1
  4246  0586  1586               	bsf	6,3
  4247                           
  4248                           ;periph.c: 40: TRISB5=0;
  4249  0587  1286               	bcf	6,5
  4250  0588  0008               	return
  4251  0589                     __end_of_op1_init:	
  4252                           
  4253                           	psect	text754
  4254  05D7                     __ptext754:	
  4255 ;; =============== function _op1_init ends ============
  4256                           
  4257                           
  4258 ;; *************** function _dac_init *****************
  4259 ;; Defined at:
  4260 ;;		line 14 in file "D:\develop\ATK\AK7030-OTP\periph.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;		None
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;		None
  4265 ;; Return value:  Size  Location     Type
  4266 ;;		None               void
  4267 ;; Registers used:
  4268 ;;		wreg
  4269 ;; Tracked objects:
  4270 ;;		On entry : 17F/20
  4271 ;;		On exit  : 17F/20
  4272 ;;		Unchanged: FFE80/0
  4273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4274 ;;      Params:         0       0       0       0       0
  4275 ;;      Locals:         0       0       0       0       0
  4276 ;;      Temps:          0       0       0       0       0
  4277 ;;      Totals:         0       0       0       0       0
  4278 ;;Total ram usage:        0 bytes
  4279 ;; Hardware stack levels used:    1
  4280 ;; Hardware stack levels required when called:    2
  4281 ;; This function calls:
  4282 ;;		Nothing
  4283 ;; This function is called by:
  4284 ;;		_main
  4285 ;; This function uses a non-reentrant model
  4286 ;;
  4287  05D7                     _dac_init:	
  4288                           
  4289                           ;periph.c: 15: DACCON|=1;
  4290                           
  4291                           ; Regs used in _dac_init: [wreg]
  4292  05D7  1407               	bsf	7,0	;volatile
  4293                           
  4294                           ;periph.c: 17: DACR0=0x0F;
  4295  05D8  300F               	movlw	15
  4296  05D9  0088               	movwf	8	;volatile
  4297                           
  4298                           ;periph.c: 18: DACCON|=(1)<<2;
  4299  05DA  1507               	bsf	7,2	;volatile
  4300  05DB  0008               	return
  4301  05DC                     __end_of_dac_init:	
  4302                           
  4303                           	psect	text756
  4304  05DC                     __ptext756:	
  4305 ;; =============== function _adc_test_init ends ============
  4306                           
  4307                           
  4308 ;; *************** function _timer1_interrupt_config *****************
  4309 ;; Defined at:
  4310 ;;		line 192 in file "D:\develop\ATK\AK7030-OTP\common.c"
  4311 ;; Parameters:    Size  Location     Type
  4312 ;;		None
  4313 ;; Auto vars:     Size  Location     Type
  4314 ;;		None
  4315 ;; Return value:  Size  Location     Type
  4316 ;;		None               void
  4317 ;; Registers used:
  4318 ;;		None
  4319 ;; Tracked objects:
  4320 ;;		On entry : 17F/20
  4321 ;;		On exit  : 17F/20
  4322 ;;		Unchanged: FFE80/0
  4323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4324 ;;      Params:         0       0       0       0       0
  4325 ;;      Locals:         0       0       0       0       0
  4326 ;;      Temps:          0       0       0       0       0
  4327 ;;      Totals:         0       0       0       0       0
  4328 ;;Total ram usage:        0 bytes
  4329 ;; Hardware stack levels used:    1
  4330 ;; Hardware stack levels required when called:    2
  4331 ;; This function calls:
  4332 ;;		Nothing
  4333 ;; This function is called by:
  4334 ;;		_main
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337  05DC                     _timer1_interrupt_config:	
  4338                           
  4339                           ;common.c: 193: GIE = 1;
  4340                           
  4341                           ; Regs used in _timer1_interrupt_config: []
  4342  05DC  178B               	bsf	11,7
  4343                           
  4344                           ;common.c: 194: PEIE = 1;
  4345  05DD  170B               	bsf	11,6
  4346  05DE  0008               	return
  4347  05DF                     __end_of_timer1_interrupt_config:	
  4348                           
  4349                           	psect	text757
  4350  0589                     __ptext757:	
  4351 ;; =============== function _timer1_interrupt_config ends ============
  4352                           
  4353                           
  4354 ;; *************** function _timer1_config *****************
  4355 ;; Defined at:
  4356 ;;		line 180 in file "D:\develop\ATK\AK7030-OTP\common.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;		None
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;		None
  4361 ;; Return value:  Size  Location     Type
  4362 ;;		None               void
  4363 ;; Registers used:
  4364 ;;		wreg
  4365 ;; Tracked objects:
  4366 ;;		On entry : 17F/40
  4367 ;;		On exit  : 17F/20
  4368 ;;		Unchanged: FFE80/0
  4369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4370 ;;      Params:         0       0       0       0       0
  4371 ;;      Locals:         0       0       0       0       0
  4372 ;;      Temps:          0       0       0       0       0
  4373 ;;      Totals:         0       0       0       0       0
  4374 ;;Total ram usage:        0 bytes
  4375 ;; Hardware stack levels used:    1
  4376 ;; Hardware stack levels required when called:    2
  4377 ;; This function calls:
  4378 ;;		Nothing
  4379 ;; This function is called by:
  4380 ;;		_main
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383  0589                     _timer1_config:	
  4384                           
  4385                           ;common.c: 182: TMR1H=0xCF;
  4386                           
  4387                           ; Regs used in _timer1_config: [wreg]
  4388  0589  30CF               	movlw	207
  4389  058A  1303               	bcf	3,6	;RP1=0, select bank0
  4390  058B  008F               	movwf	15	;volatile
  4391                           
  4392                           ;common.c: 183: TMR1L=0x2C;
  4393  058C  302C               	movlw	44
  4394  058D  008E               	movwf	14	;volatile
  4395                           
  4396                           ;common.c: 184: T1CON=0xE1;
  4397  058E  30E1               	movlw	225
  4398  058F  0090               	movwf	16	;volatile
  4399                           
  4400                           ;common.c: 185: TMR1IE=1;
  4401  0590  1683               	bsf	3,5	;RP0=1, select bank1
  4402  0591  140C               	bsf	12,0
  4403  0592  0008               	return
  4404  0593                     __end_of_timer1_config:	
  4405                           
  4406                           	psect	text758
  4407  05B5                     __ptext758:	
  4408 ;; =============== function _timer1_config ends ============
  4409                           
  4410                           
  4411 ;; *************** function _clock_config *****************
  4412 ;; Defined at:
  4413 ;;		line 172 in file "D:\develop\ATK\AK7030-OTP\common.c"
  4414 ;; Parameters:    Size  Location     Type
  4415 ;;		None
  4416 ;; Auto vars:     Size  Location     Type
  4417 ;;		None
  4418 ;; Return value:  Size  Location     Type
  4419 ;;		None               void
  4420 ;; Registers used:
  4421 ;;		wreg, status,2
  4422 ;; Tracked objects:
  4423 ;;		On entry : 17F/20
  4424 ;;		On exit  : 17F/40
  4425 ;;		Unchanged: FFE80/0
  4426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4427 ;;      Params:         0       0       0       0       0
  4428 ;;      Locals:         0       0       0       0       0
  4429 ;;      Temps:          0       0       0       0       0
  4430 ;;      Totals:         0       0       0       0       0
  4431 ;;Total ram usage:        0 bytes
  4432 ;; Hardware stack levels used:    1
  4433 ;; Hardware stack levels required when called:    2
  4434 ;; This function calls:
  4435 ;;		Nothing
  4436 ;; This function is called by:
  4437 ;;		_main
  4438 ;; This function uses a non-reentrant model
  4439 ;;
  4440  05B5                     _clock_config:	
  4441                           
  4442                           ;common.c: 174: CLKPR = 0x80;
  4443                           
  4444                           ; Regs used in _clock_config: [wreg+status,2]
  4445  05B5  3080               	movlw	128
  4446  05B6  1283               	bcf	3,5	;RP0=0, select bank2
  4447  05B7  1703               	bsf	3,6	;RP1=1, select bank2
  4448  05B8  0088               	movwf	8	;volatile
  4449                           
  4450                           ;common.c: 175: CLKPR = 0x00;
  4451  05B9  0188               	clrf	8	;volatile
  4452  05BA                     l1637:	
  4453                           ;common.c: 176: while(CLKPCE);
  4454                           
  4455  05BA  1F88               	btfss	8,7
  4456  05BB  0008               	return
  4457  05BC  2DBA               	goto	l1637
  4458  05BD                     __end_of_clock_config:	
  4459                           
  4460                           	psect	text764
  4461  031B                     __ptext764:	
  4462 ;; =============== function _vSetPA3 ends ============
  4463                           
  4464                           
  4465 ;; *************** function _ISR *****************
  4466 ;; Defined at:
  4467 ;;		line 439 in file "D:\develop\ATK\AK7030-OTP\common.c"
  4468 ;; Parameters:    Size  Location     Type
  4469 ;;		None
  4470 ;; Auto vars:     Size  Location     Type
  4471 ;;		None
  4472 ;; Return value:  Size  Location     Type
  4473 ;;		None               void
  4474 ;; Registers used:
  4475 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4476 ;; Tracked objects:
  4477 ;;		On entry : 0/0
  4478 ;;		On exit  : 60/0
  4479 ;;		Unchanged: FFE00/0
  4480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4481 ;;      Params:         0       0       0       0       0
  4482 ;;      Locals:         0       0       0       0       0
  4483 ;;      Temps:          4       0       0       0       0
  4484 ;;      Totals:         4       0       0       0       0
  4485 ;;Total ram usage:        4 bytes
  4486 ;; Hardware stack levels used:    1
  4487 ;; Hardware stack levels required when called:    1
  4488 ;; This function calls:
  4489 ;;		i1_setAD_ConvertFlag
  4490 ;;		_adc_get
  4491 ;;		_vPutSampleDataIntoTable
  4492 ;; This function is called by:
  4493 ;;		Interrupt level 1
  4494 ;; This function uses a non-reentrant model
  4495 ;;
  4496  031B                     _ISR:	
  4497                           
  4498                           ;common.c: 440: static unsigned char ucTimer1sCnt = 0;
  4499                           ;common.c: 442: if(TMR1IF == 1)
  4500  031B  1C0C               	btfss	12,0
  4501  031C  2B44               	goto	i1l4076
  4502  031D  3064               	movlw	100
  4503                           
  4504                           ;common.c: 443: {
  4505                           ;common.c: 444: TMR1IF = 0 ;
  4506  031E  100C               	bcf	12,0
  4507                           
  4508                           ;common.c: 445: timer.timer10msStopWatch++;
  4509  031F  0AD0               	incf	_timer,f
  4510                           
  4511                           ;common.c: 446: ucTimer1sCnt++;
  4512  0320  0ACD               	incf	ISR@ucTimer1sCnt,f
  4513                           
  4514                           ;common.c: 448: if(ucTimer1sCnt >= 100)
  4515  0321  024D               	subwf	ISR@ucTimer1sCnt,w
  4516  0322  1C03               	skipc
  4517  0323  2B44               	goto	i1l4076
  4518                           
  4519                           ;common.c: 449: {
  4520                           ;common.c: 450: ucTimer1sCnt = 0;
  4521  0324  01CD               	clrf	ISR@ucTimer1sCnt
  4522                           
  4523                           ;common.c: 451: if(uiBigTimer > 0)
  4524  0325  084A               	movf	_uiBigTimer+1,w
  4525  0326  0449               	iorwf	_uiBigTimer,w
  4526  0327  1903               	skipnz
  4527  0328  2B2F               	goto	i1l1733
  4528                           
  4529                           ;common.c: 452: uiBigTimer--;
  4530  0329  3001               	movlw	1
  4531  032A  02C9               	subwf	_uiBigTimer,f
  4532  032B  3000               	movlw	0
  4533  032C  1C03               	skipc
  4534  032D  03CA               	decf	_uiBigTimer+1,f
  4535  032E  02CA               	subwf	_uiBigTimer+1,f
  4536  032F                     i1l1733:	
  4537                           
  4538                           ;common.c: 454: if(uiSmallTimer)
  4539  032F  084C               	movf	_uiSmallTimer+1,w
  4540  0330  044B               	iorwf	_uiSmallTimer,w
  4541  0331  1903               	skipnz
  4542  0332  2B39               	goto	i1l1734
  4543                           
  4544                           ;common.c: 455: uiSmallTimer--;
  4545  0333  3001               	movlw	1
  4546  0334  02CB               	subwf	_uiSmallTimer,f
  4547  0335  3000               	movlw	0
  4548  0336  1C03               	skipc
  4549  0337  03CC               	decf	_uiSmallTimer+1,f
  4550  0338  02CC               	subwf	_uiSmallTimer+1,f
  4551  0339                     i1l1734:	
  4552                           
  4553                           ;common.c: 457: if(uiTwentySecondsTimer)
  4554  0339  1683               	bsf	3,5	;RP0=1, select bank1
  4555  033A  0821               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  4556  033B  0420               	iorwf	_uiTwentySecondsTimer^(0+128),w
  4557  033C  1903               	skipnz
  4558  033D  2B44               	goto	i1l4076
  4559                           
  4560                           ;common.c: 458: uiTwentySecondsTimer--;
  4561  033E  3001               	movlw	1
  4562  033F  02A0               	subwf	_uiTwentySecondsTimer^(0+128),f
  4563  0340  3000               	movlw	0
  4564  0341  1C03               	skipc
  4565  0342  03A1               	decf	(_uiTwentySecondsTimer+1)^(0+128),f
  4566  0343  02A1               	subwf	(_uiTwentySecondsTimer+1)^(0+128),f
  4567  0344                     i1l4076:	
  4568                           
  4569                           ;common.c: 459: }
  4570                           ;common.c: 460: }
  4571                           ;common.c: 462: if(ADIF)
  4572  0344  1283               	bcf	3,5	;RP0=0, select bank0
  4573  0345  1D0D               	btfss	13,2
  4574  0346  2B6B               	goto	i1l1741
  4575  0347  3001               	movlw	1
  4576                           
  4577                           ;common.c: 463: {
  4578                           ;common.c: 464: ADIF=0;
  4579  0348  110D               	bcf	13,2
  4580                           
  4581                           ;common.c: 465: setAD_ConvertFlag(1);
  4582  0349  23E0  118A         	fcall	i1_setAD_ConvertFlag
  4583                           
  4584                           ;common.c: 467: if(sampleChannelSelect == 4)
  4585  034B  086E               	movf	_sampleChannelSelect,w
  4586  034C  3A04               	xorlw	4
  4587  034D  1D03               	skipz
  4588  034E  2B57               	goto	i1l4086
  4589                           
  4590                           ;common.c: 468: {
  4591                           ;common.c: 471: vPutSampleDataIntoTable(adc_get(),4);
  4592  034F  2378  118A         	fcall	_adc_get
  4593  0351  0871               	movf	?_adc_get+1,w
  4594  0352  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4595  0353  0870               	movf	?_adc_get,w
  4596  0354  00F4               	movwf	?_vPutSampleDataIntoTable
  4597  0355  3004               	movlw	4
  4598  0356  2B69               	goto	L12
  4599  0357                     i1l4086:	
  4600                           ;common.c: 475: }
  4601                           
  4602                           
  4603                           ;common.c: 476: else if(sampleChannelSelect == 1)
  4604  0357  0B6E               	decfsz	_sampleChannelSelect,w
  4605  0358  2B62               	goto	i1l4090
  4606                           
  4607                           ;common.c: 477: {
  4608                           ;common.c: 479: vPutSampleDataIntoTable(adc_get(),1);
  4609  0359  2378  118A         	fcall	_adc_get
  4610  035B  0871               	movf	?_adc_get+1,w
  4611  035C  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4612  035D  0870               	movf	?_adc_get,w
  4613  035E  00F4               	movwf	?_vPutSampleDataIntoTable
  4614  035F  01F6               	clrf	?_vPutSampleDataIntoTable+2
  4615  0360  0AF6               	incf	?_vPutSampleDataIntoTable+2,f
  4616  0361  2B6A               	goto	L13
  4617  0362                     i1l4090:	
  4618                           ;common.c: 484: }
  4619                           
  4620                           
  4621                           ;common.c: 485: else
  4622                           ;common.c: 486: {
  4623                           ;common.c: 490: vPutSampleDataIntoTable(adc_get(),14);
  4624  0362  2378  118A         	fcall	_adc_get
  4625  0364  0871               	movf	?_adc_get+1,w
  4626  0365  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4627  0366  0870               	movf	?_adc_get,w
  4628  0367  00F4               	movwf	?_vPutSampleDataIntoTable
  4629  0368  300E               	movlw	14
  4630  0369                     L12:	
  4631  0369  00F6               	movwf	?_vPutSampleDataIntoTable+2
  4632  036A                     L13:	
  4633  036A  2383               	fcall	_vPutSampleDataIntoTable
  4634  036B                     i1l1741:	
  4635  036B  087C               	movf	??_ISR+3,w
  4636  036C  1283               	bcf	3,5	;RP0=0, select bank0
  4637  036D  1303               	bcf	3,6	;RP1=0, select bank0
  4638  036E  00FF               	movwf	127
  4639  036F  087B               	movf	??_ISR+2,w
  4640  0370  008A               	movwf	10
  4641  0371  087A               	movf	??_ISR+1,w
  4642  0372  0084               	movwf	4
  4643  0373  0E79               	swapf	??_ISR^(0+-128),w
  4644  0374  0083               	movwf	3
  4645  0375  0EFE               	swapf	126,f
  4646  0376  0E7E               	swapf	126,w
  4647  0377  0009               	retfie
  4648  0378                     __end_of_ISR:	
  4649  0378                     __ptext766:	
  4650 ;; =============== function i1_setAD_ConvertFlag ends ============
  4651                           
  4652                           
  4653 ;; *************** function _adc_get *****************
  4654 ;; Defined at:
  4655 ;;		line 105 in file "D:\develop\ATK\AK7030-OTP\periph.c"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;		None
  4658 ;; Auto vars:     Size  Location     Type
  4659 ;;  val             2    2[COMMON] unsigned int 
  4660 ;; Return value:  Size  Location     Type
  4661 ;;                  2    0[COMMON] unsigned int 
  4662 ;; Registers used:
  4663 ;;		wreg
  4664 ;; Tracked objects:
  4665 ;;		On entry : 60/0
  4666 ;;		On exit  : 60/20
  4667 ;;		Unchanged: FFF9F/0
  4668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4669 ;;      Params:         2       0       0       0       0
  4670 ;;      Locals:         2       0       0       0       0
  4671 ;;      Temps:          0       0       0       0       0
  4672 ;;      Totals:         4       0       0       0       0
  4673 ;;Total ram usage:        4 bytes
  4674 ;; Hardware stack levels used:    1
  4675 ;; This function calls:
  4676 ;;		Nothing
  4677 ;; This function is called by:
  4678 ;;		_ISR
  4679 ;; This function uses a non-reentrant model
  4680 ;;
  4681  0378                     _adc_get:	
  4682                           
  4683                           ;periph.c: 106: unsigned int val;
  4684                           ;periph.c: 107: val = (ADRESH<<8) | ADRESL;
  4685                           
  4686                           ; Regs used in _adc_get: [wreg]
  4687  0378  081E               	movf	30,w	;volatile
  4688  0379  00F3               	movwf	adc_get@val+1
  4689  037A  01F2               	clrf	adc_get@val
  4690  037B  1683               	bsf	3,5	;RP0=1, select bank1
  4691  037C  081E               	movf	30,w	;volatile
  4692  037D  04F2               	iorwf	adc_get@val,f
  4693                           
  4694                           ;periph.c: 108: return val;
  4695  037E  0873               	movf	adc_get@val+1,w
  4696  037F  00F1               	movwf	?_adc_get+1
  4697  0380  0872               	movf	adc_get@val,w
  4698  0381  00F0               	movwf	?_adc_get
  4699  0382  0008               	return
  4700  0383                     __end_of_adc_get:	
  4701  0383                     __ptext767:	
  4702 ;; =============== function _adc_get ends ============
  4703                           
  4704                           
  4705 ;; *************** function _vPutSampleDataIntoTable *****************
  4706 ;; Defined at:
  4707 ;;		line 97 in file "D:\develop\ATK\AK7030-OTP\common.c"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;  uiSampleData    2    4[COMMON] unsigned int 
  4710 ;;  channel         1    6[COMMON] unsigned char 
  4711 ;; Auto vars:     Size  Location     Type
  4712 ;;  i               2    7[COMMON] int 
  4713 ;; Return value:  Size  Location     Type
  4714 ;;		None               void
  4715 ;; Registers used:
  4716 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4717 ;; Tracked objects:
  4718 ;;		On entry : 60/20
  4719 ;;		On exit  : 0/0
  4720 ;;		Unchanged: FFE00/0
  4721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4722 ;;      Params:         3       0       0       0       0
  4723 ;;      Locals:         2       0       0       0       0
  4724 ;;      Temps:          0       0       0       0       0
  4725 ;;      Totals:         5       0       0       0       0
  4726 ;;Total ram usage:        5 bytes
  4727 ;; Hardware stack levels used:    1
  4728 ;; This function calls:
  4729 ;;		Nothing
  4730 ;; This function is called by:
  4731 ;;		_ISR
  4732 ;; This function uses a non-reentrant model
  4733 ;;
  4734  0383                     _vPutSampleDataIntoTable:	
  4735                           
  4736                           ;common.c: 99: static unsigned char ucChannelFirstLength = 0;
  4737                           ;common.c: 101: static unsigned char ucChannelFourthLength = 0;
  4738                           ;common.c: 103: static unsigned char ucChannelFourteenthLength = 0;
  4739                           ;common.c: 105: if(channel == 1)
  4740                           
  4741                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1]
  4742  0383  0B76               	decfsz	vPutSampleDataIntoTable@channel,w
  4743  0384  2B95               	goto	i1l3994
  4744                           
  4745                           ;common.c: 106: {
  4746                           ;common.c: 107: if(ucChannelFirstLength < 12)
  4747  0385  300C               	movlw	12
  4748  0386  027D               	subwf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4749  0387  1803               	skipnc
  4750  0388  2B8F               	goto	i1l3990
  4751                           
  4752                           ;common.c: 108: {
  4753                           ;common.c: 109: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  4754  0389  1003               	clrc
  4755  038A  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4756  038B  3EA2               	addlw	_uiSampleChannelFirst& (0+255)
  4757  038C  23E3               	fcall	PL2	;call to abstracted procedure
  4758                           
  4759                           ;common.c: 111: ucChannelFirstLength++;
  4760  038D  0AFD               	incf	vPutSampleDataIntoTable@ucChannelFirstLength,f
  4761                           
  4762                           ;common.c: 112: }
  4763  038E  0008               	return
  4764  038F                     i1l3990:	
  4765                           
  4766                           ;common.c: 113: else
  4767                           ;common.c: 114: {
  4768                           ;common.c: 115: ucChannelFirstLength = 0;
  4769  038F  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  4770                           
  4771                           ;common.c: 117: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  4772  0390  1003               	clrc
  4773  0391  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4774  0392  3EA2               	addlw	_uiSampleChannelFirst& (0+255)
  4775  0393  23E3               	fcall	PL2	;call to abstracted procedure
  4776  0394  0008               	return
  4777  0395                     i1l3994:	
  4778                           
  4779                           ;common.c: 120: else if(channel == 4)
  4780  0395  0876               	movf	vPutSampleDataIntoTable@channel,w
  4781  0396  3A04               	xorlw	4
  4782  0397  1D03               	skipz
  4783  0398  2BAA               	goto	i1l4006
  4784                           
  4785                           ;common.c: 121: {
  4786                           ;common.c: 122: if(ucChannelFourthLength < 12)
  4787  0399  300C               	movlw	12
  4788  039A  1283               	bcf	3,5	;RP0=0, select bank0
  4789  039B  026D               	subwf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4790  039C  1803               	skipnc
  4791  039D  2BA4               	goto	i1l4002
  4792                           
  4793                           ;common.c: 123: {
  4794                           ;common.c: 124: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  4795  039E  1003               	clrc
  4796  039F  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4797  03A0  3ED2               	addlw	_uiSampleChannelFourth& (0+255)
  4798  03A1  23E3               	fcall	PL2	;call to abstracted procedure
  4799                           
  4800                           ;common.c: 126: ucChannelFourthLength++;
  4801  03A2  0AED               	incf	vPutSampleDataIntoTable@ucChannelFourthLength,f
  4802                           
  4803                           ;common.c: 127: }
  4804  03A3  0008               	return
  4805  03A4                     i1l4002:	
  4806                           
  4807                           ;common.c: 128: else
  4808                           ;common.c: 129: {
  4809                           ;common.c: 130: ucChannelFourthLength = 0;
  4810  03A4  01ED               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  4811                           
  4812                           ;common.c: 132: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  4813  03A5  1003               	clrc
  4814  03A6  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4815  03A7  3ED2               	addlw	_uiSampleChannelFourth& (0+255)
  4816  03A8  23E3               	fcall	PL2	;call to abstracted procedure
  4817  03A9  0008               	return
  4818  03AA                     i1l4006:	
  4819                           
  4820                           ;common.c: 135: else if(channel == 14)
  4821  03AA  0876               	movf	vPutSampleDataIntoTable@channel,w
  4822  03AB  3A0E               	xorlw	14
  4823  03AC  1D03               	skipz
  4824  03AD  2BBF               	goto	i1l4018
  4825                           
  4826                           ;common.c: 136: {
  4827                           ;common.c: 137: if(ucChannelFourteenthLength < 12)
  4828  03AE  300C               	movlw	12
  4829  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  4830  03B0  026C               	subwf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4831  03B1  1803               	skipnc
  4832  03B2  2BB9               	goto	i1l4014
  4833                           
  4834                           ;common.c: 138: {
  4835                           ;common.c: 139: uiSampleChannelFourteenth[ucChannelFourteenthLength] = uiSampleData;
  4836  03B3  1003               	clrc
  4837  03B4  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4838  03B5  3EBA               	addlw	_uiSampleChannelFourteenth& (0+255)
  4839  03B6  23E3               	fcall	PL2	;call to abstracted procedure
  4840                           
  4841                           ;common.c: 141: ucChannelFourteenthLength++;
  4842  03B7  0AEC               	incf	vPutSampleDataIntoTable@ucChannelFourteenthLength,f
  4843                           
  4844                           ;common.c: 142: }
  4845  03B8  0008               	return
  4846  03B9                     i1l4014:	
  4847                           
  4848                           ;common.c: 143: else
  4849                           ;common.c: 144: {
  4850                           ;common.c: 145: ucChannelFourteenthLength = 0;
  4851  03B9  01EC               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4852                           
  4853                           ;common.c: 147: uiSampleChannelFourth[ucChannelFourteenthLength] = uiSampleData;
  4854  03BA  1003               	clrc
  4855  03BB  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4856  03BC  3ED2               	addlw	_uiSampleChannelFourth& (0+255)
  4857  03BD  23E3               	fcall	PL2	;call to abstracted procedure
  4858  03BE  0008               	return
  4859  03BF                     i1l4018:	
  4860                           
  4861                           ;common.c: 150: else
  4862                           ;common.c: 151: {
  4863                           ;common.c: 152: ucChannelFirstLength = 0;
  4864  03BF  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  4865                           
  4866                           ;common.c: 154: ucChannelFourthLength = 0;
  4867  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  4868  03C1  01ED               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  4869                           
  4870                           ;common.c: 156: ucChannelFourteenthLength = 0;
  4871  03C2  01EC               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4872                           
  4873                           ;common.c: 158: for(int i = 0;i < 12; i++)
  4874  03C3  01F7               	clrf	vPutSampleDataIntoTable@i
  4875  03C4  01F8               	clrf	vPutSampleDataIntoTable@i+1
  4876  03C5                     i1l4024:	
  4877                           
  4878                           ;common.c: 159: {
  4879                           ;common.c: 160: uiSampleChannelFirst[i] = 0;
  4880  03C5  1003               	clrc
  4881  03C6  0D77               	rlf	vPutSampleDataIntoTable@i,w
  4882  03C7  3EA2               	addlw	_uiSampleChannelFirst& (0+255)
  4883  03C8  0084               	movwf	4
  4884  03C9  1383               	bcf	3,7	;select IRP bank1
  4885  03CA  0180               	clrf	0
  4886                           
  4887                           ;common.c: 162: uiSampleChannelFourth[i] = 0;
  4888  03CB  23EB  118A         	fcall	PL5	;call to abstracted procedure
  4889                           
  4890                           ;common.c: 164: uiSampleChannelFourth[i] = 0;
  4891  03CD  23EB  118A         	fcall	PL5	;call to abstracted procedure
  4892  03CF  0A84               	incf	4,f
  4893  03D0  0180               	clrf	0
  4894  03D1  0AF7               	incf	vPutSampleDataIntoTable@i,f
  4895  03D2  1903               	skipnz
  4896  03D3  0AF8               	incf	vPutSampleDataIntoTable@i+1,f
  4897  03D4  0878               	movf	vPutSampleDataIntoTable@i+1,w
  4898  03D5  3A80               	xorlw	128
  4899  03D6  00FF               	movwf	127
  4900  03D7  3080               	movlw	128
  4901  03D8  027F               	subwf	127,w
  4902  03D9  1D03               	skipz
  4903  03DA  2BDD               	goto	u106_25
  4904  03DB  300C               	movlw	12
  4905  03DC  0277               	subwf	vPutSampleDataIntoTable@i,w
  4906  03DD                     u106_25:	
  4907  03DD  1803               	btfsc	3,0
  4908  03DE  0008               	return
  4909  03DF  2BC5               	goto	i1l4024
  4910  03E0                     __end_of_vPutSampleDataIntoTable:	
  4911  03E0                     __ptext765:	
  4912 ;; =============== function _ISR ends ============
  4913                           
  4914                           
  4915 ;; *************** function i1_setAD_ConvertFlag *****************
  4916 ;; Defined at:
  4917 ;;		line 206 in file "D:\develop\ATK\AK7030-OTP\common.c"
  4918 ;; Parameters:    Size  Location     Type
  4919 ;;  setAD_Conver    1    wreg     unsigned char 
  4920 ;; Auto vars:     Size  Location     Type
  4921 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  4922 ;; Return value:  Size  Location     Type
  4923 ;;		None               void
  4924 ;; Registers used:
  4925 ;;		wreg
  4926 ;; Tracked objects:
  4927 ;;		On entry : 60/0
  4928 ;;		On exit  : 60/0
  4929 ;;		Unchanged: FFF9F/0
  4930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4931 ;;      Params:         0       0       0       0       0
  4932 ;;      Locals:         1       0       0       0       0
  4933 ;;      Temps:          0       0       0       0       0
  4934 ;;      Totals:         1       0       0       0       0
  4935 ;;Total ram usage:        1 bytes
  4936 ;; Hardware stack levels used:    1
  4937 ;; This function calls:
  4938 ;;		Nothing
  4939 ;; This function is called by:
  4940 ;;		_ISR
  4941 ;; This function uses a non-reentrant model
  4942 ;;
  4943  03E0                     i1_setAD_ConvertFlag:	
  4944                           
  4945                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  4946                           ;i1setAD_ConvertFlag@flag stored from wreg
  4947  03E0  00F0               	movwf	i1setAD_ConvertFlag@flag
  4948                           
  4949                           ;common.c: 207: adc_convert_flag = flag;
  4950  03E1  00CE               	movwf	_adc_convert_flag
  4951  03E2  0008               	return
  4952  03E3                     __end_ofi1_setAD_ConvertFlag:	
  4953  03E3                     PL2:	
  4954  03E3  0084               	movwf	4
  4955  03E4  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  4956  03E5  1383               	bcf	3,7	;select IRP bank1
  4957  03E6  0080               	movwf	0
  4958  03E7  0A84               	incf	4,f
  4959  03E8  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  4960  03E9  0080               	movwf	0
  4961  03EA  0008               	return
  4962  03EB                     PL5:	
  4963  03EB  0A84               	incf	4,f
  4964  03EC  0180               	clrf	0
  4965  03ED  1003               	clrc
  4966  03EE  0D77               	rlf	vPutSampleDataIntoTable@i,w
  4967  03EF  3ED2               	addlw	_uiSampleChannelFourth& (0+255)
  4968  03F0  0084               	movwf	4
  4969  03F1  0180               	clrf	0
  4970  03F2  0008               	return
  4971                           
  4972                           	psect	intentry
  4973  0004                     __pintentry:	
  4974                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4975                           
  4976  0004                     interrupt_function:	
  4977  007E                     saved_w	set	btemp
  4978  0004  00FE               	movwf	btemp
  4979  0005  0E03               	swapf	3,w
  4980  0006  00F9               	movwf	??_ISR
  4981  0007  0804               	movf	4,w
  4982  0008  00FA               	movwf	??_ISR+1
  4983  0009  080A               	movf	10,w
  4984  000A  00FB               	movwf	??_ISR+2
  4985  000B  1283               	bcf	3,5	;RP0=0, select bank0
  4986  000C  1303               	bcf	3,6	;RP1=0, select bank0
  4987  000D  087F               	movf	btemp+1,w
  4988  000E  00FC               	movwf	??_ISR+3
  4989  000F  118A  2B1B         	ljmp	_ISR
  4990                           
  4991                           	psect	text768
  4992  0000                     __ptext768:	
  4993 ;; =============== function _vPutSampleDataIntoTable ends ============
  4994                           
  4995  007E                     btemp	set	126	;btemp
  4996  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon Jun 24 19:30:05 2019

                                  ??_clock_config 0020                                                 pc 0002  
                                              _GO 00F9                                                fsr 0004  
                        ?_timer1_interrupt_config 0070                                               l714 0062  
                                             l723 006B                                               l822 015E  
                                             l680 0534                                               l904 0269  
                                             l752 00DA                                               l691 0000  
                                             l924 02AF                                               l677 0000  
                                             l685 0000                                               l846 0198  
                                             l767 00DC                                               l688 0000  
                                             l867 01D1                                               l795 011E  
                                             l897 0248                                               _PA0 0028  
                                             _PA1 0029                                               _GIE 005F  
                                             _PB0 0030                                               _PA2 002A  
                                             _PB1 0031                                               _PA3 002B  
                                             _PA6 002E                                               _PA7 002F  
                                             _PB6 0036                                               _ISR 031B  
                                             u955 0427                                               u965 0450  
                                             u975 043A                                               fsr0 0004  
                                             indf 0000                            ??_startThreeHoursTimer 0022  
                                            S4892 0556                                              S4894 0564  
                                            S4896 0572                                              ?_ISR 0070  
                              __size_of_AD_Sample 001D                            ?_getAdOriginalCh1Value 0047  
                                            l1611 0000                                              l4100 0000  
                                            l4030 0000                                              l4110 0000  
                                            l4102 0000                                              l1703 0000  
                                            l1640 0000                                              l4040 0000  
                                            l4112 0000                                              l4104 0000  
                                            l4200 0068                                              l4034 0000  
                                            l4050 04E6                                              l4114 0000  
                                            l4106 0000                                              l4130 04C4  
                                            l4122 0000                                              l4210 0072  
                                            l4202 0069                                              l1643 0000  
                                            l2372 0000                                              l1652 0000  
                                            l4052 04E9                                              l4044 0000  
                                            l4036 0000                                              l4116 0000  
                                            l4108 0000                                              l4220 0000  
                                            l4212 0000                                              l1637 05BA  
                                            l1661 0000                                              l1646 0000  
                                            l1726 0000                                              l4054 0000  
                                            l4126 04BE                                              l4118 0000  
                                            l4134 0000                                              l4142 0000  
                                            l4150 0000                                              l4230 0088  
                                            l4222 0000                                              l4206 0000  
                                            l2375 0000                                              l1655 0000  
                                            l2392 0000                                              l4048 04E2  
                                            l4128 0000                                              l4152 0000  
                                            l4400 0162                                              l4320 010A  
                                            l4312 0000                                              l4240 0097  
                                            l4232 0000                                              l4224 007B  
                                            l4216 0075                                              l4160 0000  
                                            l1649 0000                                              l1690 0000  
                                            l2386 0000                                              l2378 0000  
                                            l4138 0000                                              l1658 0000  
                                            l4154 0000                                              l4146 0000  
                                            l4410 016B                                              l4330 0112  
                                            l4242 009D                                              l4234 0000  
                                            l4218 0000                                              l4170 0000  
                                            l4162 0000                                              l4148 0000  
                                            l4500 01D5                                              l4420 0171  
                                            l4404 0167                                              l4332 011F  
                                            l4324 0110                                              l4308 00FD  
                                            l4260 00CC                                              l4252 00B3  
                                            l4244 00A0                                              l4236 008E  
                                            l4228 0087                                              l4180 0000  
                                            l4172 0000                                              l4164 0000  
                                            l4156 0000                                              l1693 0000  
                                            l4510 01E1                                              l4502 01D7  
                                            l4430 017A                                              l4342 0128  
                                            l4334 0121                                              l4246 00A3  
                                            l4238 0000                                              l4190 005B  
                                            l4174 0000                                              l4166 0000  
                                            l4158 0000                                              l1696 0000  
                                            l4600 027E                                              l4512 01E3  
                                            l4408 0169                                              l4344 012A  
                                            l4272 00E4                                              l4264 00D8  
                                            l4256 00C0                                              l4248 00A7  
                                            l4192 0000                                              l4184 004E  
                                            l4176 0000                                              l4168 0000  
                                            l4098 0512                                              l4610 0000  
                                            l4602 027F                                              l4522 01E9  
                                            l4442 0185                                              l4434 0000  
                                            l4354 0130                                              l4338 0126  
                                            l4266 00DD                                              l4194 005F  
                                            l4178 0040                                              l4620 029A  
                                            l4612 0000                                              l4604 0000  
                                            l4532 01F0                                              l4460 01A2  
                                            l4452 018C                                              l4364 0136  
                                            l4276 00E6                                              l4268 00DF  
                                            l4196 0063                                              l4188 005A  
                                            l3822 0000                                              l3830 0540  
                                            l3902 0000                                              l4622 029B  
                                            l4606 0000                                              l4550 0000  
                                            l4542 0000                                              l4454 019B  
                                            l4374 013F                                              l4278 00E8  
                                            l3824 0000                                              l3832 0000  
                                            l3840 0000                                              l3904 0000  
                                            l3920 0000                                              l4640 02C0  
                                            l4632 02A4                                              l4624 0000  
                                            l4608 0000                                              l4616 028E  
                                            l4560 0232                                              l4552 0000  
                                            l4544 0000                                              l4536 01FE  
                                            l4480 0000                                              l4464 01A4  
                                            l4456 019D                                              l4288 00EE  
                                            l3826 0000                                              l3834 0000  
                                            l3850 0000                                              l3842 0000  
                                            l4650 0000                                              l4634 0000  
                                            l4626 02A0                                              l4570 0000  
                                            l4562 0000                                              l4554 0228  
                                            l4538 020F                                              l4466 01A6  
                                            l4386 014B                                              l4378 0000  
                                            l4298 00F4                                              l3828 0000  
                                            l3836 0000                                              l3844 0000  
                                            l3852 0000                                              l3860 0000  
                                            l3916 0000                                              l3940 0000  
                                            l3932 0000                                              l4652 02D5  
                                            l4644 02CC                                              l4636 0000  
                                            l4580 0000                                              l4572 0257  
                                            l4548 0220                                              l4476 01AF  
                                            l4396 0152                                              l3838 0000  
                                            l3846 0000                                              l3854 0000  
                                            l3862 0000                                              l3870 0503  
                                            l3942 0000                                              l4670 02F4  
                                            l4662 0000                                              l4646 02CD  
                                            l4638 0000                                              l4590 0000  
                                            l4582 0000                                              l4558 0000  
                                            l4398 0160                                              l4566 0237  
                                            l3848 0000                                              l3856 0000  
                                            l3864 0000                                              l3872 0000  
                                            l3960 042D                                              l3952 042C  
                                            l3944 0000                                              l4664 0000  
                                            l4656 02E1                                              l4584 0000  
                                            l4576 0000                                              l4568 0000  
                                            l4488 01B9                                              l3858 0000  
                                            l3866 0000                                              l3890 0000  
                                            l3962 046F                                              l3938 0410  
                                            l4666 0000                                              l4658 02E2  
                                            l4578 0000                                              l4586 0265  
                                            l4498 01C0                                              l4674 02FF  
                                            l3868 0000                                              l3884 0000  
                                            l3972 0000                                              l3964 0000  
                                            l4596 0272                                              l4588 0000  
                                            l3886 0000                                              l3974 0000  
                                            l3958 046D                                              _ADIE 046A  
                                            _ADIF 006A                                              l3978 0000  
                                            _ADON 00F8                    __size_of_vsetPB6HignResistence 0014  
                   startTwelveHourTimer@uiSetTime 0020                                              _PEIE 005E  
                   __end_of_vsetPB6HignResistence 053C                                              _main 0013  
                                            btemp 007E                           _clearTwentySecondsTimer 0540  
                                            start 0011                           ?_getAdOriginalCh14Value 0047  
                               main@ucTimerDelay1 0060                                 main@ucTimerDelay2 0061  
                               main@ucTimerDelay3 0062                                 main@ucTimerDelay4 0063  
                                           ??_ISR 0079                        __end_of_isPermitSampleTime 05D7  
                             _sampleChannelSelect 006E                            ??_getAdOriginaCh4Value 0049  
                                           ?_main 0070                                             _DACR0 0088  
                                           _CLKPR 0108                                             _T1CON 0010  
                                 __end_of_adc_get 0383                                             _PAOD7 0C3F  
                                           _PBOD6 0C46                                             _TMR1H 000F  
                                           _TMR1L 000E                             setAD_ConvertFlag@flag 0020  
                                 __end_of_vSetPA3 053D                           _vPutSampleDataIntoTable 0383  
                                 __end_of_initPin 0528                                             _timer 0050  
                                           pclath 000A                                             status 0003  
                                           wtemp0 007E                    __end_of_getAdOriginalCh14Value 0408  
                   __size_of_startTwelveHourTimer 0009                              __end_of_clrSampeTime 05E1  
                           __end_of_clearAllTimer 0517                                      __end_of_main 031B  
                          __size_of_adc_test_init 0015                                 __end_of_AD_Sample 04EE  
                                          ??_main 0049                              _clearPinPortAndTimer 0506  
                                          _ADCON0 001F                                            _ADCON1 009F  
                            __end_of_clock_config 05BD                                            _DACCON 0087  
                                          _ADRESH 001E                                            _ADRESL 009E  
                                          _CLKPCE 0847                                            i1l4000 0000  
                                          i1l4002 03A4                                            i1l4012 0000  
                                          i1l4004 0000                                            i1l4014 03B9  
                                          i1l4006 03AA                                            i1l4024 03C5  
                                          i1l4016 0000                                            i1l4026 0000  
                                          i1l4018 03BF                                            i1l4028 0000  
                                          i1l1652 0000                                            i1l1741 036B  
                                          i1l1733 032F                                            i1l1734 0339  
                                          i1l4062 0000                                            i1l4080 0000  
                                          i1l4064 0000                                            i1l4090 0362  
                                          i1l4082 0000                                            i1l4058 0000  
                                          i1l2395 0000                                            i1l4092 0000  
                                          i1l4068 0000                                            i1l4076 0344  
                                          u106_25 03DD                                            i1l4086 0357  
                                          i1l4096 0000                                            i1l4088 0000  
                                          i1l3990 038F                                            i1l3982 0000  
                                          i1l3992 0000                                            i1l3984 0000  
                                          i1l3994 0395                                            i1l3988 0000  
                                __end_of_dac_init 05DC                         ??_clearTwentySecondsTimer 0020  
                                          _TMR1IE 0460                                            _TMR1IF 0060  
                               _getAD_ConvertFlag 04CA                                 _setAD_ConvertFlag 04CE  
                                          _TRISA0 0428                                            _TRISA1 0429  
                                          _TRISB0 0430                                            _TRISA2 042A  
                                          _TRISB1 0431                                            _TRISA3 042B  
                                          _TRISB2 0432                                            _TRISB3 0433  
                                          _TRISB4 0434                                            _TRISA6 042E  
                                          _TRISB5 0435                                            _TRISA7 042F  
                                          _TRISB6 0436                                            _TRISB7 0437  
                                   main@ucTimer1s 005C                                ?_getAD_ConvertFlag 0070  
                                          _Filter 0408                                ?_setAD_ConvertFlag 0070  
                                __end_of_op1_init 0589                                  __end_of_op2_init 05B5  
                     ??_isFinishedThreeHoursTimer 0020                     __size_of_clearThreeHoursTimer 0003  
                                       ??_adc_get 0072                               ??_getAD_ConvertFlag 0020  
                             ??_setAD_ConvertFlag 0020                                            clrloop 05A6  
                                       ??_vSetPA3 0020                                  Filter@filter_buf 0026  
                                Filter@filter_sum 0040                                         ??_initPin 0021  
                       ??_vPutSampleDataIntoTable 0077                             ?_clearPinPortAndTimer 0070  
                                          saved_w 007E                           ??_clearTwelveHoursTimer 0020  
                     ?_process_AD_Converter_Value 0070                                     _adc_test_init 04EE  
                __size_of_startTwentySecondsTimer 0005                         __end_of_getAD_ConvertFlag 04CE  
                       __end_of_setAD_ConvertFlag 04D1                                __size_of_adc_start 0003  
                             main@ucTimerDelayP5s 0064                                    __pcstackCOMMON 0070  
                                    __pidataBANK0 0000                   __end_of_clearTwentySecondsTimer 0544  
                            _uiSampleChannelFirst 00A2                    vPutSampleDataIntoTable@channel 0076  
                             main@ucTimerRightP5s 0067                         _isFinishedThreeHoursTimer 05C3  
                         ??_getAdOriginalCh1Value 0049                             __end_of_timer1_config 0593  
                                  ?_adc_test_init 0020       vPutSampleDataIntoTable@ucChannelFirstLength 007D  
                __size_of_timer1_interrupt_config 0003                             __size_of_clrSampeTime 0002  
                                      __pbssBANK0 0049                                        __pbssBANK1 00A0  
                    __size_ofi1_setAD_ConvertFlag 0003                                        adc_get@val 0072  
                 __end_of_vPutSampleDataIntoTable 03E0                                           ?_Filter 0020  
                                      __pmaintext 0013                                        __pintentry 0004  
                             main@enumInteralStep 0053                                         ?_dac_init 0070  
                          ??_clearPinPortAndTimer 0020                             __size_of_clock_config 0008  
                                         _OP1CON0 001B                                           _OP1CON1 001C  
                                         _OP1CON2 001D                                           _OP2CON0 009B  
                                         _OP2CON1 009C                                           _OP2CON2 009D  
                                    _clrSampeTime 05DF                                 __end_of_adc_start 0506  
                            _uiTwentySecondsTimer 00A0                                         ?_op1_init 0070  
                                       ?_op2_init 0070                                _isPermitSampleTime 05D2  
                                         Filter@i 0046                                           Filter@j 0045  
                   __size_of_startThreeHoursTimer 0009                        __size_of_getAD_ConvertFlag 0004  
                      __size_of_setAD_ConvertFlag 0003                                    main@ucTimer20s 005D  
                                  main@ucTimerP3s 0065                                    main@ucTimerP5s 0066  
                             ?_isPermitSampleTime 0070                             _vsetPB6HignResistence 0528  
                                 __size_of_Filter 008E                                        _uiBigTimer 0049  
                                    _clock_config 05B5                                           _adc_get 0378  
            __end_of_isFinishedTwentySecondsTimer 05C3             __size_of_isFinishedTwentySecondsTimer 0006  
                    _isFinishedTwentySecondsTimer 05BD                              ??_isPermitSampleTime 0020  
                    __end_of_startTwelveHourTimer 05A5                                        ??_dac_init 0020  
                                         _vSetPA3 053C                                         _AD_Sample 04D1  
                                    __size_of_ISR 005D                                           _initPin 051A  
                   __size_of_getAdOriginaCh4Value 0007                                   ??_adc_test_init 0021  
                                      ??_op1_init 0020                                        ??_op2_init 0020  
                         _startTwentySecondsTimer 05C8                              end_of_initialization 0553  
                               Filter@filter_temp 003E                                  main@ucLoaderStep 0057  
                                      ?_AD_Sample 0070                     ?_isFinishedTwentySecondsTimer 0070  
                            main@enumMainLoopStep 0054                                main@ucChannel4Type 0056  
                    ??_isFinishedTwelveHoursTimer 0020                                         Filter@cir 0043  
                                _adc_convert_flag 004E                            __size_of_clearAllTimer 0005  
                    __end_of_clearThreeHoursTimer 0540                            main@ucTimerADC1ZeroP5s 005E  
                  __size_of_clearTwelveHoursTimer 0003                           _timer1_interrupt_config 05DC  
                   __end_of_clearTwelveHoursTimer 051A                            ?_vsetPB6HignResistence 0070  
              __size_of_isFinishedThreeHoursTimer 0005                                  main@ucTimerX1P5s 0068  
                                main@ucTimerX2P5s 0069                            main@ucTimerZeroPoint3s 006A  
                          main@ucTimerZeroPoint5s 006B                                  main@ucTimerDelay 005F  
                                  __end_of_Filter 0496                                   main@ucADC4_Step 0055  
             __size_of_isFinishedTwelveHoursTimer 0005                          vPutSampleDataIntoTable@i 0077  
                    vsetPB6HignResistence@ucValue 0020                               i1_setAD_ConvertFlag 03E0  
                       ??_startTwentySecondsTimer 0020                               start_initialization 0544  
                                     __end_of_ISR 0378                             _uiSampleChannelFourth 00D2  
                        ?_clearTwentySecondsTimer 0070                    __size_of_getAdOriginalCh1Value 0007  
                   __end_of_getAdOriginalCh1Value 0401                          ??_getAdOriginalCh14Value 0049  
                            ?i1_setAD_ConvertFlag 0070                              _startTwelveHourTimer 059C  
               __end_of_isFinishedThreeHoursTimer 05C8                                main@enumBranchStep 0052  
                                        ??_Filter 0022                                     _clearAllTimer 0512  
                                     __pdataBANK0 006E                          ?_vPutSampleDataIntoTable 0074  
                                     ??_AD_Sample 0020                         ??_timer1_interrupt_config 0020  
                                     __pbssCOMMON 007D                                 __size_of_dac_init 0005  
                                   __pcstackBANK0 0020                    ??_isFinishedTwentySecondsTimer 0020  
                                       _adc_start 0503                                 __size_of_op1_init 000B  
                               __size_of_op2_init 0008                             ??i1_setAD_ConvertFlag 0070  
                           ?_startTwelveHourTimer 0020                   __end_of_startTwentySecondsTimer 05CD  
                                  ?_clearAllTimer 0070                            __size_of_timer1_config 000A  
                            _clearThreeHoursTimer 053D                      __end_of_startThreeHoursTimer 059C  
                                       __ptext740 04CE                                         __ptext732 0506  
                                       __ptext741 04CA                                         __ptext733 03F3  
                                       __ptext750 05D2                                         __ptext742 0408  
                                       __ptext734 03FA                                         __ptext751 0503  
                                       __ptext743 05C3                                         __ptext735 0401  
                                       __ptext760 053D                                         __ptext752 05AD  
                                       __ptext744 0593                                         __ptext736 04AC  
                                       __ptext761 0517                                         __ptext753 057E  
                                       __ptext745 05BD                                         __ptext737 051A  
                                       __ptext762 0528                                         __ptext754 05D7  
                                       __ptext746 05C8                                         __ptext738 0512  
                                       __ptext763 053C                                         __ptext755 04EE  
                                       __ptext747 05CD                                         __ptext739 04D1  
                                       __ptext764 031B                                         __ptext756 05DC  
                                       __ptext748 059C                                         __ptext765 03E0  
                                       __ptext757 0589                                         __ptext749 05DF  
                                       __ptext766 0378                                         __ptext758 05B5  
                                       __ptext767 0383                                         __ptext759 0540  
                                       __ptext768 0000                                          ?_adc_get 0070  
                                       __pswtext1 0556                                         __pswtext2 0564  
                                       __pswtext3 0572                __end_of_isFinishedTwelveHoursTimer 05D2  
                      _isFinishedTwelveHoursTimer 05CD                                          ?_vSetPA3 0070  
                                 ISR@ucTimer1sCnt 004D                                          ?_initPin 0070  
                   __size_of_clearPinPortAndTimer 000C                         _uiSampleChannelFourteenth 00BA  
                                      ?_adc_start 0070                   __size_of_getAdOriginalCh14Value 0007  
                               interrupt_function 0004                      __end_of_getAdOriginaCh4Value 03FA  
                 __end_of_timer1_interrupt_config 05DF                             ?_clearThreeHoursTimer 0070  
                            adc_test_init@channel 0022               vPutSampleDataIntoTable@uiSampleData 0074  
    vPutSampleDataIntoTable@ucChannelFourthLength 006D                       __size_of_isPermitSampleTime 0005  
                                    _uiSmallTimer 004B                             __end_of_adc_test_init 0503  
                                   _timer1_config 0589                           ??_vsetPB6HignResistence 0020  
                    ??_process_AD_Converter_Value 0023                            ??_startTwelveHourTimer 0022  
                                 ??_clearAllTimer 0020                            _getAdOriginalCh14Value 0401  
                                __size_of_adc_get 000B               __size_of_process_AD_Converter_Value 001E  
                                        _dac_init 05D7  vPutSampleDataIntoTable@ucChannelFourteenthLength 006C  
                                __size_of_vSetPA3 0001                                  __size_of_initPin 000E  
                                main@cTimer1s_815 0051                                    Filter@tmpValue 0042  
                                  ?_timer1_config 0070                                          _op1_init 057E  
                                        _op2_init 05AD                                       ??_adc_start 0020  
                            _startThreeHoursTimer 0593                             _clearTwelveHoursTimer 0517  
                                   __size_of_main 0308                                          clear_ram 05A5  
                          ??_clearThreeHoursTimer 0020                  __size_of_clearTwentySecondsTimer 0004  
                                   ?_clrSampeTime 0070                              _getAdOriginaCh4Value 03F3  
                                     _sampleTimes 004F                             ?_startThreeHoursTimer 0020  
                __size_of_vPutSampleDataIntoTable 005D                                          intlevel1 0000  
                           _getAdOriginalCh1Value 03FA                        ?_isFinishedThreeHoursTimer 0070  
                               main@ucLoaderStep1 0058                                 main@ucLoaderStep2 0059  
                               main@ucLoaderStep3 005A                                 main@ucLoaderStep4 005B  
                                   ?_clock_config 0070                          ?_startTwentySecondsTimer 0070  
                   startThreeHoursTimer@uiSetTime 0020                           i1setAD_ConvertFlag@flag 0070  
                                  ??_clrSampeTime 0020                       ?_isFinishedTwelveHoursTimer 0070  
                           ?_getAdOriginaCh4Value 0047                                   ??_timer1_config 0020  
                     __end_ofi1_setAD_ConvertFlag 03E3                __end_of_process_AD_Converter_Value 04CA  
                      _process_AD_Converter_Value 04AC                            ?_clearTwelveHoursTimer 0070  
                                adc_test_init@ref 0020                      __end_of_clearPinPortAndTimer 0512  
