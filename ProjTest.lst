

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Fri Jun 21 15:34:20 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,delta=2
    16                           	psect	swtext1,local,class=CONST,delta=2
    17                           	psect	swtext2,local,class=CONST,delta=2
    18                           	psect	swtext3,local,class=CONST,delta=2
    19                           	psect	text778,local,class=CODE,delta=2
    20                           	psect	text779,local,class=CODE,delta=2
    21                           	psect	text781,local,class=CODE,delta=2
    22                           	psect	text790,local,class=CODE,delta=2
    23                           	psect	text791,local,class=CODE,delta=2
    24                           	psect	text792,local,class=CODE,delta=2
    25                           	psect	text793,local,class=CODE,delta=2
    26                           	psect	text794,local,class=CODE,delta=2
    27                           	psect	text795,local,class=CODE,delta=2
    28                           	psect	text796,local,class=CODE,delta=2
    29                           	psect	text797,local,class=CODE,delta=2
    30                           	psect	text799,local,class=CODE,delta=2
    31                           	psect	text800,local,class=CODE,delta=2
    32                           	psect	text801,local,class=CODE,delta=2
    33                           	psect	text803,local,class=CODE,delta=2
    34                           	psect	text804,local,class=CODE,delta=2
    35                           	psect	text805,local,class=CODE,delta=2
    36                           	psect	text806,local,class=CODE,delta=2
    37                           	psect	text810,local,class=CODE,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text814,local,class=CODE,delta=2
    40                           	psect	pa_nodes,global,class=CODE,delta=2
    41                           	dabs	1,0x7E,2
    42  000A                     	;#
    43                           
    44                           	psect	config
    45  2000  2FFF               	dw	12287	;#
    46  2001  3FDE               	dw	16350	;#
    47  2002  3FF8               	dw	16376	;#
    48                           
    49                           	psect	idataBANK0
    50  0000                     __pidataBANK0:	
    51  001F                     _ADCON0	set	31
    52  001E                     _ADRESH	set	30
    53  001B                     _OP1CON0	set	27
    54  001C                     _OP1CON1	set	28
    55  001D                     _OP1CON2	set	29
    56  0010                     _T1CON	set	16
    57  000F                     _TMR1H	set	15
    58  000E                     _TMR1L	set	14
    59  006A                     _ADIF	set	106
    60  00F8                     _ADON	set	248
    61  005F                     _GIE	set	95
    62  00F9                     _GO	set	249
    63  0028                     _PA0	set	40
    64  0029                     _PA1	set	41
    65  002A                     _PA2	set	42
    66  002B                     _PA3	set	43
    67  002E                     _PA6	set	46
    68  002F                     _PA7	set	47
    69  0030                     _PB0	set	48
    70  0031                     _PB1	set	49
    71  0036                     _PB6	set	54
    72  005E                     _PEIE	set	94
    73  0060                     _TMR1IF	set	96
    74  009F                     _ADCON1	set	159
    75  009E                     _ADRESL	set	158
    76  0087                     _DACCON	set	135
    77  0088                     _DACR0	set	136
    78  009B                     _OP2CON0	set	155
    79  009C                     _OP2CON1	set	156
    80  009D                     _OP2CON2	set	157
    81  046A                     _ADIE	set	1130
    82  0460                     _TMR1IE	set	1120
    83  0428                     _TRISA0	set	1064
    84  0429                     _TRISA1	set	1065
    85  042A                     _TRISA2	set	1066
    86  042B                     _TRISA3	set	1067
    87  042E                     _TRISA6	set	1070
    88  042F                     _TRISA7	set	1071
    89  0430                     _TRISB0	set	1072
    90  0431                     _TRISB1	set	1073
    91  0432                     _TRISB2	set	1074
    92  0433                     _TRISB3	set	1075
    93  0434                     _TRISB4	set	1076
    94  0435                     _TRISB5	set	1077
    95  0436                     _TRISB6	set	1078
    96  0437                     _TRISB7	set	1079
    97  0108                     _CLKPR	set	264
    98  0847                     _CLKPCE	set	2119
    99  0C3F                     _PAOD7	set	3135
   100  0C46                     _PBOD6	set	3142
   101                           
   102                           	psect	cinit
   103  05D2                     start_initialization:	
   104  05D2  3058               	movlw	low __pbssBANK0
   105                           
   106                           ; Clear objects allocated to COMMON
   107  05D3  01FD               	clrf	__pbssCOMMON& (0+127)
   108                           
   109                           ; Clear objects allocated to BANK0
   110  05D4  1383               	bcf	3,7	;select IRP bank0
   111  05D5  0084               	movwf	4
   112  05D6  306E               	movlw	low (__pbssBANK0+22)
   113  05D7  118A  2659  118A   	fcall	clear_ram
   114                           
   115                           ; Clear objects allocated to BANK1
   116  05DA  30A0               	movlw	low __pbssBANK1
   117  05DB  0084               	movwf	4
   118  05DC  30EA               	movlw	low (__pbssBANK1+74)
   119  05DD  118A  2659  118A   	fcall	clear_ram
   120  05E0  3090               	movlw	low __pbssBANK3
   121                           
   122                           ; Clear objects allocated to BANK3
   123  05E1  1783               	bsf	3,7	;select IRP bank2
   124  05E2  0084               	movwf	4
   125  05E3  30E0               	movlw	low (__pbssBANK3+80)
   126  05E4  118A  2659         	fcall	clear_ram
   127                           
   128                           ;initializer for _sampleChannelSelect
   129  05E6  300E               	movlw	14
   130  05E7  00EE               	movwf	__pdataBANK0& (0+127)
   131  05E8                     end_of_initialization:	
   132                           ;End of C runtime variable initialization code
   133                           
   134  05E8  0183               	clrf	3
   135  05E9  118A  2813         	ljmp	_main	;jump to C main() function
   136                           
   137                           	psect	bssCOMMON
   138  007D                     __pbssCOMMON:	
   139  007D                     vPutSampleDataIntoTable@ucChannelFirstLength:	
   140  007D                     	ds	1
   141                           
   142                           	psect	bssBANK0
   143  0058                     __pbssBANK0:	
   144  0058                     _sampleTimes:	
   145  0058                     	ds	1
   146  0059                     main@enumMainLoopStep:	
   147  0059                     	ds	1
   148  005A                     main@ucADC4_Step:	
   149  005A                     	ds	1
   150  005B                     main@ucChannel4Type:	
   151  005B                     	ds	1
   152  005C                     main@ucLoaderStep:	
   153  005C                     	ds	1
   154  005D                     main@ucLoaderStep1:	
   155  005D                     	ds	1
   156  005E                     main@ucLoaderStep2:	
   157  005E                     	ds	1
   158  005F                     main@ucLoaderStep3:	
   159  005F                     	ds	1
   160  0060                     main@ucLoaderStep4:	
   161  0060                     	ds	1
   162  0061                     main@ucTimer1s:	
   163  0061                     	ds	1
   164  0062                     main@ucTimerADC1ZeroP5s:	
   165  0062                     	ds	1
   166  0063                     main@ucTimerDelay:	
   167  0063                     	ds	1
   168  0064                     main@ucTimerDelay1:	
   169  0064                     	ds	1
   170  0065                     main@ucTimerDelay2:	
   171  0065                     	ds	1
   172  0066                     main@ucTimerDelay3:	
   173  0066                     	ds	1
   174  0067                     main@ucTimerDelay4:	
   175  0067                     	ds	1
   176  0068                     main@ucTimerP5s:	
   177  0068                     	ds	1
   178  0069                     main@ucTimerRightP5s:	
   179  0069                     	ds	1
   180  006A                     main@ucTimerZeroPoint3s:	
   181  006A                     	ds	1
   182  006B                     main@ucTimerZeroPoint5s:	
   183  006B                     	ds	1
   184  006C                     vPutSampleDataIntoTable@ucChannelFourteenthLength:	
   185  006C                     	ds	1
   186  006D                     vPutSampleDataIntoTable@ucChannelFourthLength:	
   187  006D                     	ds	1
   188                           
   189                           	psect	dataBANK0
   190  006E                     __pdataBANK0:	
   191  006E                     _sampleChannelSelect:	
   192  006E                     	ds	1
   193                           
   194                           	psect	bssBANK1
   195  00A0                     __pbssBANK1:	
   196  00A0                     _buffer_Sample_AD_Value:	
   197  00A0                     	ds	12
   198  00AC                     _adc_original_value:	
   199  00AC                     	ds	2
   200  00AE                     _multiFilterMaxValue:	
   201  00AE                     	ds	2
   202  00B0                     _multiFilterMinValue:	
   203  00B0                     	ds	2
   204  00B2                     _uiBigTimer:	
   205  00B2                     	ds	2
   206  00B4                     _uiSmallTimer:	
   207  00B4                     	ds	2
   208  00B6                     _uiTwentySecondsTimer:	
   209  00B6                     	ds	2
   210  00B8                     ISR@ucTimer1sCnt:	
   211  00B8                     	ds	1
   212  00B9                     _adc_convert_flag:	
   213  00B9                     	ds	1
   214  00BA                     _timer:	
   215  00BA                     	ds	1
   216  00BB                     main@cTimer1s_810:	
   217  00BB                     	ds	1
   218  00BC                     main@enumBranchStep:	
   219  00BC                     	ds	1
   220  00BD                     main@enumInteralStep:	
   221  00BD                     	ds	1
   222  00BE                     main@ucTimer20s:	
   223  00BE                     	ds	1
   224  00BF                     main@ucTimerP3s:	
   225  00BF                     	ds	1
   226  00C0                     main@ucTimerX1P5s:	
   227  00C0                     	ds	1
   228  00C1                     main@ucTimerX2P5s:	
   229  00C1                     	ds	1
   230  00C2                     _uiSampleChannelFourth:	
   231  00C2                     	ds	40
   232                           
   233                           	psect	bssBANK3
   234  0190                     __pbssBANK3:	
   235  0190                     _uiSampleChannelFirst:	
   236  0190                     	ds	40
   237  01B8                     _uiSampleChannelFourteenth:	
   238  01B8                     	ds	40
   239                           
   240                           	psect	clrtext
   241  0659                     clear_ram:	
   242                           ;	Called with FSR containing the base address, and
   243                           ;	W with the last address+1
   244                           
   245  0659  0064               	clrwdt	;clear the watchdog before getting into this loop
   246  065A                     clrloop:	
   247  065A  0180               	clrf	0	;clear RAM location pointed to by FSR
   248  065B  0A84               	incf	4,f	;increment pointer
   249  065C  0604               	xorwf	4,w	;XOR with final address
   250  065D  1903               	btfsc	3,2	;have we reached the end yet?
   251  065E  3400               	retlw	0	;all done for this memory range, return
   252  065F  0604               	xorwf	4,w	;XOR again to restore value
   253  0660  2E5A               	goto	clrloop	;do the next byte
   254                           
   255                           	psect	cstackCOMMON
   256  0070                     __pcstackCOMMON:	
   257  0070                     ?_clearTwelveHoursTimer:	
   258  0070                     ?_clearThreeHoursTimer:	
   259                           ; 0 bytes @ 0x0
   260                           
   261  0070                     ?_clearTwentySecondsTimer:	
   262                           ; 0 bytes @ 0x0
   263                           
   264  0070                     ?_clock_config:	
   265                           ; 0 bytes @ 0x0
   266                           
   267  0070                     ?_timer1_config:	
   268                           ; 0 bytes @ 0x0
   269                           
   270  0070                     ?_timer1_interrupt_config:	
   271                           ; 0 bytes @ 0x0
   272                           
   273  0070                     ?_dac_init:	
   274                           ; 0 bytes @ 0x0
   275                           
   276  0070                     ?_op1_init:	
   277                           ; 0 bytes @ 0x0
   278                           
   279  0070                     ?_op2_init:	
   280                           ; 0 bytes @ 0x0
   281                           
   282  0070                     ?_adc_start:	
   283                           ; 0 bytes @ 0x0
   284                           
   285  0070                     ?_clrSampeTime:	
   286                           ; 0 bytes @ 0x0
   287                           
   288  0070                     ?_process_AD_Converter_Value:	
   289                           ; 0 bytes @ 0x0
   290                           
   291  0070                     ?_startTwentySecondsTimer:	
   292                           ; 0 bytes @ 0x0
   293                           
   294  0070                     ?_AD_Sample:	
   295                           ; 0 bytes @ 0x0
   296                           
   297  0070                     ?_setAdcSampleChannel:	
   298                           ; 0 bytes @ 0x0
   299                           
   300  0070                     ?_clearAllTimer:	
   301                           ; 0 bytes @ 0x0
   302                           
   303  0070                     ?_clearPinPortAndTimer:	
   304                           ; 0 bytes @ 0x0
   305                           
   306  0070                     ?_initPin:	
   307                           ; 0 bytes @ 0x0
   308                           
   309  0070                     ?_main:	
   310                           ; 0 bytes @ 0x0
   311                           
   312  0070                     ?_setAD_ConvertFlag:	
   313                           ; 0 bytes @ 0x0
   314                           
   315  0070                     ?_ISR:	
   316                           ; 0 bytes @ 0x0
   317                           
   318  0070                     ?i1_setAD_ConvertFlag:	
   319                           ; 0 bytes @ 0x0
   320                           
   321  0070                     ??i1_setAD_ConvertFlag:	
   322                           ; 0 bytes @ 0x0
   323                           
   324  0070                     ?_isPermitSampleTime:	
   325                           ; 0 bytes @ 0x0
   326                           
   327  0070                     ?_isFinishedTwelveHoursTimer:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0070                     ?_isFinishedTwentySecondsTimer:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ?_isFinishedThreeHoursTimer:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ?_getAD_ConvertFlag:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     ?_adc_get:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     i1setAD_ConvertFlag@flag:	
   343                           ; 2 bytes @ 0x0
   344                           
   345                           
   346                           ; 1 bytes @ 0x0
   347  0070                     	ds	2
   348  0072                     ??_adc_get:	
   349  0072                     adc_get@val:	
   350                           ; 0 bytes @ 0x2
   351                           
   352                           
   353                           ; 2 bytes @ 0x2
   354  0072                     	ds	2
   355  0074                     ?_vPutSampleDataIntoTable:	
   356  0074                     vPutSampleDataIntoTable@uiSampleData:	
   357                           ; 0 bytes @ 0x4
   358                           
   359                           
   360                           ; 2 bytes @ 0x4
   361  0074                     	ds	2
   362  0076                     vPutSampleDataIntoTable@channel:	
   363                           
   364                           ; 1 bytes @ 0x6
   365  0076                     	ds	1
   366  0077                     ??_vPutSampleDataIntoTable:	
   367  0077                     vPutSampleDataIntoTable@i:	
   368                           ; 0 bytes @ 0x7
   369                           
   370                           
   371                           ; 2 bytes @ 0x7
   372  0077                     	ds	2
   373  0079                     ??_ISR:	
   374                           
   375                           ; 0 bytes @ 0x9
   376  0079                     	ds	4
   377                           
   378                           	psect	cstackBANK0
   379  0020                     __pcstackBANK0:	
   380  0020                     ??_clearTwelveHoursTimer:	
   381  0020                     ??_clearThreeHoursTimer:	
   382                           ; 0 bytes @ 0x0
   383                           
   384  0020                     ??_clearTwentySecondsTimer:	
   385                           ; 0 bytes @ 0x0
   386                           
   387  0020                     ??_clock_config:	
   388                           ; 0 bytes @ 0x0
   389                           
   390  0020                     ??_timer1_config:	
   391                           ; 0 bytes @ 0x0
   392                           
   393  0020                     ??_timer1_interrupt_config:	
   394                           ; 0 bytes @ 0x0
   395                           
   396  0020                     ?_adc_test_init:	
   397                           ; 0 bytes @ 0x0
   398                           
   399  0020                     ??_dac_init:	
   400                           ; 0 bytes @ 0x0
   401                           
   402  0020                     ??_op1_init:	
   403                           ; 0 bytes @ 0x0
   404                           
   405  0020                     ??_op2_init:	
   406                           ; 0 bytes @ 0x0
   407                           
   408  0020                     ??_adc_start:	
   409                           ; 0 bytes @ 0x0
   410                           
   411  0020                     ??_isPermitSampleTime:	
   412                           ; 0 bytes @ 0x0
   413                           
   414  0020                     ??_clrSampeTime:	
   415                           ; 0 bytes @ 0x0
   416                           
   417  0020                     ?_startTwelveHourTimer:	
   418                           ; 0 bytes @ 0x0
   419                           
   420  0020                     ??_isFinishedTwelveHoursTimer:	
   421                           ; 0 bytes @ 0x0
   422                           
   423  0020                     ??_startTwentySecondsTimer:	
   424                           ; 0 bytes @ 0x0
   425                           
   426  0020                     ??_isFinishedTwentySecondsTimer:	
   427                           ; 0 bytes @ 0x0
   428                           
   429  0020                     ?_startThreeHoursTimer:	
   430                           ; 0 bytes @ 0x0
   431                           
   432  0020                     ??_isFinishedThreeHoursTimer:	
   433                           ; 0 bytes @ 0x0
   434                           
   435  0020                     ??_setAdcSampleChannel:	
   436                           ; 0 bytes @ 0x0
   437                           
   438  0020                     ??_clearAllTimer:	
   439                           ; 0 bytes @ 0x0
   440                           
   441  0020                     ??_clearPinPortAndTimer:	
   442                           ; 0 bytes @ 0x0
   443                           
   444  0020                     ??_initPin:	
   445                           ; 0 bytes @ 0x0
   446                           
   447  0020                     ??_getAD_ConvertFlag:	
   448                           ; 0 bytes @ 0x0
   449                           
   450  0020                     ??_setAD_ConvertFlag:	
   451                           ; 0 bytes @ 0x0
   452                           
   453  0020                     ?_Filter:	
   454                           ; 0 bytes @ 0x0
   455                           
   456  0020                     ?_getAdOriginalValue:	
   457                           ; 2 bytes @ 0x0
   458                           
   459  0020                     setAD_ConvertFlag@flag:	
   460                           ; 2 bytes @ 0x0
   461                           
   462  0020                     adc_test_init@ref:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0020                     Filter@tmpValue:	
   466                           ; 1 bytes @ 0x0
   467                           
   468  0020                     startTwelveHourTimer@uiSetTime:	
   469                           ; 2 bytes @ 0x0
   470                           
   471  0020                     startThreeHoursTimer@uiSetTime:	
   472                           ; 2 bytes @ 0x0
   473                           
   474                           
   475                           ; 2 bytes @ 0x0
   476  0020                     	ds	1
   477  0021                     ??_adc_test_init:	
   478  0021                     setAdcSampleChannel@ucChannel:	
   479                           ; 0 bytes @ 0x1
   480                           
   481                           
   482                           ; 1 bytes @ 0x1
   483  0021                     	ds	1
   484  0022                     ??_startTwelveHourTimer:	
   485  0022                     ??_startThreeHoursTimer:	
   486                           ; 0 bytes @ 0x2
   487                           
   488  0022                     ??_AD_Sample:	
   489                           ; 0 bytes @ 0x2
   490                           
   491  0022                     ??_Filter:	
   492                           ; 0 bytes @ 0x2
   493                           
   494  0022                     ??_getAdOriginalValue:	
   495                           ; 0 bytes @ 0x2
   496                           
   497  0022                     adc_test_init@channel:	
   498                           ; 0 bytes @ 0x2
   499                           
   500                           
   501                           ; 1 bytes @ 0x2
   502  0022                     	ds	2
   503  0024                     AD_Sample@index:	
   504                           
   505                           ; 1 bytes @ 0x4
   506  0024                     	ds	1
   507  0025                     ??_process_AD_Converter_Value:	
   508                           
   509                           ; 0 bytes @ 0x5
   510  0025                     	ds	1
   511  0026                     Filter@filter_buf:	
   512                           
   513                           ; 40 bytes @ 0x6
   514  0026                     	ds	40
   515  004E                     Filter@filter_temp:	
   516                           
   517                           ; 2 bytes @ 0x2E
   518  004E                     	ds	2
   519  0050                     Filter@filter_sum:	
   520                           
   521                           ; 2 bytes @ 0x30
   522  0050                     	ds	2
   523  0052                     Filter@cir:	
   524                           
   525                           ; 2 bytes @ 0x32
   526  0052                     	ds	2
   527  0054                     Filter@j:	
   528                           
   529                           ; 1 bytes @ 0x34
   530  0054                     	ds	1
   531  0055                     Filter@i:	
   532                           
   533                           ; 1 bytes @ 0x35
   534  0055                     	ds	1
   535  0056                     ?_getAdOriginalCh14Value:	
   536  0056                     ?_getAdOriginalCh1Value:	
   537                           ; 2 bytes @ 0x36
   538                           
   539  0056                     ?_getAdOriginaCh4Value:	
   540                           ; 2 bytes @ 0x36
   541                           
   542                           
   543                           ; 2 bytes @ 0x36
   544  0056                     	ds	2
   545  0058                     ??_getAdOriginalCh14Value:	
   546  0058                     ??_getAdOriginalCh1Value:	
   547                           ; 0 bytes @ 0x38
   548                           
   549  0058                     ??_getAdOriginaCh4Value:	
   550                           ; 0 bytes @ 0x38
   551                           
   552  0058                     ??_main:	
   553                           ; 0 bytes @ 0x38
   554                           
   555                           
   556                           	psect	maintext
   557  0013                     __pmaintext:	
   558                           ; 0 bytes @ 0x38
   559 ;;Data sizes: Strings 0, constant 0, data 1, bss 177, persistent 0 stack 0
   560 ;;Auto spaces:   Size  Autos    Used
   561 ;; COMMON          14     13      14
   562 ;; BANK0           80     56      79
   563 ;; BANK1           80      0      74
   564 ;; BANK3           96      0      80
   565 ;; BANK2           96      0       0
   566 ;;
   567 ;; Pointer list with targets:
   568 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   569 ;;
   570 ;; ?_getAdOriginalCh14Value	unsigned int  size(1) Largest target is 0
   571 ;;
   572 ;; ?_getAdOriginaCh4Value	unsigned int  size(1) Largest target is 0
   573 ;;
   574 ;; ?_getAdOriginalCh1Value	unsigned int  size(1) Largest target is 0
   575 ;;
   576 ;; ?_getAdOriginalValue	unsigned int  size(1) Largest target is 0
   577 ;;
   578 ;; ?_Filter	unsigned int  size(1) Largest target is 0
   579 ;;
   580 ;; Filter@tmpValue	PTR int  size(2) Largest target is 40
   581 ;;		 -> uiSampleChannelFourteenth(BANK3[40]), uiSampleChannelFourth(BANK1[40]), uiSampleChannelFirst(BANK3[40]), 
   582 ;;
   583 ;;
   584 ;; Critical Paths under _main in COMMON
   585 ;;
   586 ;;   None.
   587 ;;
   588 ;; Critical Paths under _ISR in COMMON
   589 ;;
   590 ;;   _ISR->_vPutSampleDataIntoTable
   591 ;;   _vPutSampleDataIntoTable->_adc_get
   592 ;;
   593 ;; Critical Paths under _main in BANK0
   594 ;;
   595 ;;   _main->_getAdOriginalCh14Value
   596 ;;   _main->_getAdOriginalCh1Value
   597 ;;   _main->_getAdOriginaCh4Value
   598 ;;   _process_AD_Converter_Value->_AD_Sample
   599 ;;   _AD_Sample->_getAdOriginalValue
   600 ;;   _getAdOriginaCh4Value->_Filter
   601 ;;   _getAdOriginalCh1Value->_Filter
   602 ;;   _getAdOriginalCh14Value->_Filter
   603 ;;
   604 ;; Critical Paths under _ISR in BANK0
   605 ;;
   606 ;;   None.
   607 ;;
   608 ;; Critical Paths under _main in BANK1
   609 ;;
   610 ;;   None.
   611 ;;
   612 ;; Critical Paths under _ISR in BANK1
   613 ;;
   614 ;;   None.
   615 ;;
   616 ;; Critical Paths under _main in BANK3
   617 ;;
   618 ;;   None.
   619 ;;
   620 ;; Critical Paths under _ISR in BANK3
   621 ;;
   622 ;;   None.
   623 ;;
   624 ;; Critical Paths under _main in BANK2
   625 ;;
   626 ;;   None.
   627 ;;
   628 ;; Critical Paths under _ISR in BANK2
   629 ;;
   630 ;;   None.
   631 ;;
   632 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   633 ;;
   634 ;;
   635 ;;Call Graph Tables:
   636 ;;
   637 ;; ---------------------------------------------------------------------------------
   638 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   639 ;; ---------------------------------------------------------------------------------
   640 ;; (0) _main                                                 0     0      0    2104
   641 ;;                            _initPin
   642 ;;                       _clock_config
   643 ;;                      _timer1_config
   644 ;;            _timer1_interrupt_config
   645 ;;                      _adc_test_init
   646 ;;                           _dac_init
   647 ;;                           _op1_init
   648 ;;                           _op2_init
   649 ;;                          _adc_start
   650 ;;                 _isPermitSampleTime
   651 ;;                       _clrSampeTime
   652 ;;         _process_AD_Converter_Value
   653 ;;             _getAdOriginalCh14Value
   654 ;;               _clearPinPortAndTimer
   655 ;;              _getAdOriginalCh1Value
   656 ;;               _startTwelveHourTimer
   657 ;;         _isFinishedTwelveHoursTimer
   658 ;;            _startTwentySecondsTimer
   659 ;;               _getAdOriginaCh4Value
   660 ;;       _isFinishedTwentySecondsTimer
   661 ;;               _startThreeHoursTimer
   662 ;;          _isFinishedThreeHoursTimer
   663 ;;               _clearThreeHoursTimer
   664 ;;                      _clearAllTimer
   665 ;; ---------------------------------------------------------------------------------
   666 ;; (1) _process_AD_Converter_Value                           0     0      0     156
   667 ;;                  _getAD_ConvertFlag
   668 ;;                  _setAD_ConvertFlag
   669 ;;                          _AD_Sample
   670 ;;                      _adc_test_init
   671 ;;                _setAdcSampleChannel
   672 ;;                          _adc_start
   673 ;; ---------------------------------------------------------------------------------
   674 ;; (1) _clearPinPortAndTimer                                 0     0      0       0
   675 ;;                      _clearAllTimer
   676 ;; ---------------------------------------------------------------------------------
   677 ;; (2) _AD_Sample                                            3     3      0      68
   678 ;;                                              2 BANK0      3     3      0
   679 ;;                 _getAdOriginalValue
   680 ;; ---------------------------------------------------------------------------------
   681 ;; (1) _getAdOriginaCh4Value                                 2     0      2     620
   682 ;;                                             54 BANK0      2     0      2
   683 ;;                             _Filter
   684 ;; ---------------------------------------------------------------------------------
   685 ;; (1) _getAdOriginalCh1Value                                2     0      2     620
   686 ;;                                             54 BANK0      2     0      2
   687 ;;                             _Filter
   688 ;; ---------------------------------------------------------------------------------
   689 ;; (1) _getAdOriginalCh14Value                               2     0      2     620
   690 ;;                                             54 BANK0      2     0      2
   691 ;;                             _Filter
   692 ;; ---------------------------------------------------------------------------------
   693 ;; (1) _clearAllTimer                                        0     0      0       0
   694 ;;              _clearTwelveHoursTimer
   695 ;;               _clearThreeHoursTimer
   696 ;;            _clearTwentySecondsTimer
   697 ;; ---------------------------------------------------------------------------------
   698 ;; (2) _setAdcSampleChannel                                  2     2      0      22
   699 ;;                                              0 BANK0      2     2      0
   700 ;; ---------------------------------------------------------------------------------
   701 ;; (3) _getAdOriginalValue                                   2     0      2       0
   702 ;;                                              0 BANK0      2     0      2
   703 ;; ---------------------------------------------------------------------------------
   704 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   705 ;;                                              0 BANK0      1     1      0
   706 ;; ---------------------------------------------------------------------------------
   707 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   708 ;; ---------------------------------------------------------------------------------
   709 ;; (2) _Filter                                              54    52      2     620
   710 ;;                                              0 BANK0     54    52      2
   711 ;; ---------------------------------------------------------------------------------
   712 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   713 ;; ---------------------------------------------------------------------------------
   714 ;; (1) _startThreeHoursTimer                                 2     0      2      22
   715 ;;                                              0 BANK0      2     0      2
   716 ;; ---------------------------------------------------------------------------------
   717 ;; (1) _isFinishedTwentySecondsTimer                         0     0      0       0
   718 ;; ---------------------------------------------------------------------------------
   719 ;; (1) _startTwentySecondsTimer                              0     0      0       0
   720 ;; ---------------------------------------------------------------------------------
   721 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   722 ;; ---------------------------------------------------------------------------------
   723 ;; (1) _startTwelveHourTimer                                 2     0      2      22
   724 ;;                                              0 BANK0      2     0      2
   725 ;; ---------------------------------------------------------------------------------
   726 ;; (1) _clrSampeTime                                         0     0      0       0
   727 ;; ---------------------------------------------------------------------------------
   728 ;; (1) _isPermitSampleTime                                   0     0      0       0
   729 ;; ---------------------------------------------------------------------------------
   730 ;; (2) _adc_start                                            0     0      0       0
   731 ;; ---------------------------------------------------------------------------------
   732 ;; (1) _op2_init                                             0     0      0       0
   733 ;; ---------------------------------------------------------------------------------
   734 ;; (1) _op1_init                                             0     0      0       0
   735 ;; ---------------------------------------------------------------------------------
   736 ;; (1) _dac_init                                             0     0      0       0
   737 ;; ---------------------------------------------------------------------------------
   738 ;; (2) _adc_test_init                                        3     2      1      44
   739 ;;                                              0 BANK0      3     2      1
   740 ;; ---------------------------------------------------------------------------------
   741 ;; (1) _timer1_interrupt_config                              0     0      0       0
   742 ;; ---------------------------------------------------------------------------------
   743 ;; (1) _timer1_config                                        0     0      0       0
   744 ;; ---------------------------------------------------------------------------------
   745 ;; (1) _clock_config                                         0     0      0       0
   746 ;; ---------------------------------------------------------------------------------
   747 ;; (1) _initPin                                              0     0      0       0
   748 ;; ---------------------------------------------------------------------------------
   749 ;; (2) _clearTwentySecondsTimer                              0     0      0       0
   750 ;; ---------------------------------------------------------------------------------
   751 ;; (2) _clearThreeHoursTimer                                 0     0      0       0
   752 ;; ---------------------------------------------------------------------------------
   753 ;; (2) _clearTwelveHoursTimer                                0     0      0       0
   754 ;; ---------------------------------------------------------------------------------
   755 ;; Estimated maximum stack depth 3
   756 ;; ---------------------------------------------------------------------------------
   757 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   758 ;; ---------------------------------------------------------------------------------
   759 ;; (4) _ISR                                                  4     4      0     407
   760 ;;                                              9 COMMON     4     4      0
   761 ;;                i1_setAD_ConvertFlag
   762 ;;                            _adc_get
   763 ;;            _vPutSampleDataIntoTable
   764 ;; ---------------------------------------------------------------------------------
   765 ;; (5) i1_setAD_ConvertFlag                                  1     1      0      73
   766 ;;                                              0 COMMON     1     1      0
   767 ;; ---------------------------------------------------------------------------------
   768 ;; (5) _adc_get                                              4     2      2      24
   769 ;;                                              0 COMMON     4     2      2
   770 ;; ---------------------------------------------------------------------------------
   771 ;; (5) _vPutSampleDataIntoTable                              5     2      3     310
   772 ;;                                              4 COMMON     5     2      3
   773 ;;                            _adc_get (ARG)
   774 ;; ---------------------------------------------------------------------------------
   775 ;; Estimated maximum stack depth 5
   776 ;; ---------------------------------------------------------------------------------
   777 ;; Call Graph Graphs:
   778 ;; _main (ROOT)
   779 ;;   _initPin
   780 ;;   _clock_config
   781 ;;   _timer1_config
   782 ;;   _timer1_interrupt_config
   783 ;;   _adc_test_init
   784 ;;   _dac_init
   785 ;;   _op1_init
   786 ;;   _op2_init
   787 ;;   _adc_start
   788 ;;   _isPermitSampleTime
   789 ;;   _clrSampeTime
   790 ;;   _process_AD_Converter_Value
   791 ;;     _getAD_ConvertFlag
   792 ;;     _setAD_ConvertFlag
   793 ;;     _AD_Sample
   794 ;;       _getAdOriginalValue
   795 ;;     _adc_test_init
   796 ;;     _setAdcSampleChannel
   797 ;;     _adc_start
   798 ;;   _getAdOriginalCh14Value
   799 ;;     _Filter
   800 ;;   _clearPinPortAndTimer
   801 ;;     _clearAllTimer
   802 ;;       _clearTwelveHoursTimer
   803 ;;       _clearThreeHoursTimer
   804 ;;       _clearTwentySecondsTimer
   805 ;;   _getAdOriginalCh1Value
   806 ;;     _Filter
   807 ;;   _startTwelveHourTimer
   808 ;;   _isFinishedTwelveHoursTimer
   809 ;;   _startTwentySecondsTimer
   810 ;;   _getAdOriginaCh4Value
   811 ;;     _Filter
   812 ;;   _isFinishedTwentySecondsTimer
   813 ;;   _startThreeHoursTimer
   814 ;;   _isFinishedThreeHoursTimer
   815 ;;   _clearThreeHoursTimer
   816 ;;   _clearAllTimer
   817 ;;     _clearTwelveHoursTimer
   818 ;;     _clearThreeHoursTimer
   819 ;;     _clearTwentySecondsTimer
   820 ;;
   821 ;; _ISR (ROOT)
   822 ;;   i1_setAD_ConvertFlag
   823 ;;   _adc_get
   824 ;;   _vPutSampleDataIntoTable
   825 ;;     _adc_get (ARG)
   826 ;;
   827 ;; Address spaces:
   828 ;;Name               Size   Autos  Total    Cost      Usage
   829 ;;BANK3               60      0      50      10       83.3%
   830 ;;BITBANK3            60      0       0       9        0.0%
   831 ;;SFR3                 0      0       0       4        0.0%
   832 ;;BITSFR3              0      0       0       4        0.0%
   833 ;;BANK2               60      0       0      12        0.0%
   834 ;;BITBANK2            60      0       0      11        0.0%
   835 ;;SFR2                 0      0       0       5        0.0%
   836 ;;BITSFR2              0      0       0       5        0.0%
   837 ;;SFR1                 0      0       0       2        0.0%
   838 ;;BITSFR1              0      0       0       2        0.0%
   839 ;;BANK1               50      0      4A       8       92.5%
   840 ;;BITBANK1            50      0       0       7        0.0%
   841 ;;CODE                 0      0       0       0        0.0%
   842 ;;DATA                 0      0      FE       6        0.0%
   843 ;;ABS                  0      0      F7       3        0.0%
   844 ;;NULL                 0      0       0       0        0.0%
   845 ;;STACK                0      0       7       2        0.0%
   846 ;;BANK0               50     38      4F       5       98.8%
   847 ;;BITBANK0            50      0       0       4        0.0%
   848 ;;SFR0                 0      0       0       1        0.0%
   849 ;;BITSFR0              0      0       0       1        0.0%
   850 ;;COMMON               E      D       E       1      100.0%
   851 ;;BITCOMMON            E      0       0       0        0.0%
   852                           
   853                           
   854 ;; *************** function _main *****************
   855 ;; Defined at:
   856 ;;		line 129 in file "C:\190604\AK7030-OTP\main.c"
   857 ;; Parameters:    Size  Location     Type
   858 ;;		None
   859 ;; Auto vars:     Size  Location     Type
   860 ;;		None
   861 ;; Return value:  Size  Location     Type
   862 ;;		None               void
   863 ;; Registers used:
   864 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   865 ;; Tracked objects:
   866 ;;		On entry : 17F/0
   867 ;;		On exit  : 60/0
   868 ;;		Unchanged: FFE00/0
   869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   870 ;;      Params:         0       0       0       0       0
   871 ;;      Locals:         0       0       0       0       0
   872 ;;      Temps:          0       0       0       0       0
   873 ;;      Totals:         0       0       0       0       0
   874 ;;Total ram usage:        0 bytes
   875 ;; Hardware stack levels required when called:    5
   876 ;; This function calls:
   877 ;;		_initPin
   878 ;;		_clock_config
   879 ;;		_timer1_config
   880 ;;		_timer1_interrupt_config
   881 ;;		_adc_test_init
   882 ;;		_dac_init
   883 ;;		_op1_init
   884 ;;		_op2_init
   885 ;;		_adc_start
   886 ;;		_isPermitSampleTime
   887 ;;		_clrSampeTime
   888 ;;		_process_AD_Converter_Value
   889 ;;		_getAdOriginalCh14Value
   890 ;;		_clearPinPortAndTimer
   891 ;;		_getAdOriginalCh1Value
   892 ;;		_startTwelveHourTimer
   893 ;;		_isFinishedTwelveHoursTimer
   894 ;;		_startTwentySecondsTimer
   895 ;;		_getAdOriginaCh4Value
   896 ;;		_isFinishedTwentySecondsTimer
   897 ;;		_startThreeHoursTimer
   898 ;;		_isFinishedThreeHoursTimer
   899 ;;		_clearThreeHoursTimer
   900 ;;		_clearAllTimer
   901 ;; This function is called by:
   902 ;;		Startup code after reset
   903 ;; This function uses a non-reentrant model
   904 ;;
   905  0013                     _main:	
   906                           
   907                           ;main.c: 130: enum setp_Adc4
   908                           ;main.c: 131: {
   909                           ;main.c: 132: ADC4_STEP_INIT = 0,
   910                           ;main.c: 133: ADC4_STEP_FIRST,
   911                           ;main.c: 134: ADC4_STEP_SECOND,
   912                           ;main.c: 135: ADC4_STEP_THIRD,
   913                           ;main.c: 136: ADC4_STEP_FOURTH,
   914                           ;main.c: 137: ADC4_STEP_FIFTH,
   915                           ;main.c: 138: ADC4_STEP_SIXTH,
   916                           ;main.c: 139: };
   917                           ;main.c: 142: static unsigned char ucWaitTime1S = 0;
   918                           ;main.c: 144: static unsigned char ucWaitTimeO3s = 0;
   919                           ;main.c: 146: static unsigned char ucSmallTimerActionFlag = 0;
   920                           ;main.c: 148: static unsigned char ucSetSmallActionFlag = 0;
   921                           
   922                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   923  0013  1683               	bsf	3,5	;RP0=1, select bank1
   924  0014  1005               	bcf	5,0
   925                           
   926                           ;main.c: 151: TRISA1 = 0;
   927  0015  1085               	bcf	5,1
   928                           
   929                           ;main.c: 152: TRISA2 = 0;
   930  0016  1105               	bcf	5,2
   931                           
   932                           ;main.c: 153: TRISA3 = 0;
   933  0017  1185               	bcf	5,3
   934                           
   935                           ;main.c: 154: TRISB0 = 0;
   936  0018  1006               	bcf	6,0
   937                           
   938                           ;main.c: 155: TRISB1 = 0;
   939  0019  1086               	bcf	6,1
   940                           
   941                           ;main.c: 156: TRISA6 = 0;
   942  001A  1305               	bcf	5,6
   943                           
   944                           ;main.c: 157: TRISA7 = 0;
   945  001B  1385               	bcf	5,7
   946                           
   947                           ;main.c: 158: TRISB6 = 0;
   948  001C  1306               	bcf	6,6
   949                           
   950                           ;main.c: 161: initPin();
   951  001D  118A  25EB  118A   	fcall	_initPin
   952                           
   953                           ;main.c: 164: TRISB2 = 1;
   954  0020  1303               	bcf	3,6	;RP1=0, select bank1
   955  0021  1506               	bsf	6,2
   956                           
   957                           ;main.c: 166: TRISB7 = 1;
   958  0022  1786               	bsf	6,7
   959                           
   960                           ;main.c: 167: TRISB4 = 1;
   961  0023  1606               	bsf	6,4
   962                           
   963                           ;main.c: 169: clock_config();
   964  0024  118A  2669  118A   	fcall	_clock_config
   965                           
   966                           ;main.c: 170: timer1_config();
   967  0027  118A  264F  118A   	fcall	_timer1_config
   968                           
   969                           ;main.c: 171: timer1_interrupt_config();
   970  002A  118A  2694  118A   	fcall	_timer1_interrupt_config
   971                           
   972                           ;main.c: 173: adc_test_init(14,3);
   973  002D  3003               	movlw	3
   974  002E  1283               	bcf	3,5	;RP0=0, select bank0
   975  002F  00A0               	movwf	?_adc_test_init
   976  0030  300E               	movlw	14
   977  0031  118A  250B  118A   	fcall	_adc_test_init
   978                           
   979                           ;main.c: 175: dac_init();
   980  0034  118A  268F  118A   	fcall	_dac_init
   981                           
   982                           ;main.c: 176: op1_init();
   983  0037  118A  2644  118A   	fcall	_op1_init
   984                           
   985                           ;main.c: 177: op2_init();
   986  003A  118A  2661  118A   	fcall	_op2_init
   987                           
   988                           ;main.c: 180: adc_start();
   989  003D  118A  2598  118A   	fcall	_adc_start
   990  0040                     l4220:	
   991  0040  0064               	clrwdt	;#
   992                           
   993                           ;main.c: 215: if(isPermitSampleTime())
   994  0041  118A  2671  118A   	fcall	_isPermitSampleTime
   995  0044  3A00               	xorlw	0
   996  0045  1903               	skipnz
   997  0046  2840               	goto	l4220
   998                           
   999                           ;main.c: 216: {
  1000                           ;main.c: 217: clrSampeTime();
  1001  0047  118A  2697  118A   	fcall	_clrSampeTime
  1002                           
  1003                           ;main.c: 218: process_AD_Converter_Value();
  1004  004A  118A  24EA  118A   	fcall	_process_AD_Converter_Value
  1005                           
  1006                           ;main.c: 220: switch(enumMainLoopStep)
  1007  004D  2B12               	goto	l4706
  1008  004E                     l4228:	
  1009                           
  1010                           ;main.c: 223: {
  1011                           ;main.c: 224: static unsigned char ucTimerZeroPoint5s = 0;
  1012                           ;main.c: 225: if(getAdOriginalCh14Value() > 1950)
  1013  004E  118A  242F  118A   	fcall	_getAdOriginalCh14Value
  1014  0051  3007               	movlw	7
  1015  0052  0257               	subwf	?_getAdOriginalCh14Value+1,w
  1016  0053  309F               	movlw	159
  1017  0054  1903               	skipnz
  1018  0055  0256               	subwf	?_getAdOriginalCh14Value,w
  1019  0056  1C03               	skipc
  1020  0057  285A               	goto	l4232
  1021                           
  1022                           ;main.c: 226: {
  1023                           ;main.c: 227: ucTimerZeroPoint5s++;
  1024  0058  0AEB               	incf	main@ucTimerZeroPoint5s,f
  1025                           
  1026                           ;main.c: 228: }
  1027  0059  285B               	goto	l4234
  1028  005A                     l4232:	
  1029                           
  1030                           ;main.c: 229: else
  1031                           ;main.c: 230: ucTimerZeroPoint5s = 0;
  1032  005A  01EB               	clrf	main@ucTimerZeroPoint5s
  1033  005B                     l4234:	
  1034                           
  1035                           ;main.c: 232: if(ucTimerZeroPoint5s >= 1)
  1036  005B  086B               	movf	main@ucTimerZeroPoint5s,w
  1037  005C  1903               	btfsc	3,2
  1038  005D  2840               	goto	l4220
  1039                           
  1040                           ;main.c: 233: {
  1041                           ;main.c: 234: ucTimerZeroPoint5s = 0;
  1042  005E  01EB               	clrf	main@ucTimerZeroPoint5s
  1043  005F                     l4238:	
  1044                           
  1045                           ;main.c: 235: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  1046  005F  1283               	bcf	3,5	;RP0=0, select bank0
  1047  0060  01D9               	clrf	main@enumMainLoopStep
  1048  0061  0AD9               	incf	main@enumMainLoopStep,f
  1049  0062                     l706:	
  1050                           
  1051                           ;main.c: 236: }
  1052                           ;main.c: 237: break;
  1053  0062  2840               	goto	l4220
  1054  0063                     l4240:	
  1055                           
  1056                           ;main.c: 241: {
  1057                           ;main.c: 242: static unsigned char ucTimerZeroPoint3s = 0;
  1058                           ;main.c: 244: if(ucTimerZeroPoint3s < 1)
  1059  0063  08EA               	movf	main@ucTimerZeroPoint3s,f
  1060  0064  1D03               	skipz
  1061  0065  2868               	goto	l4244
  1062                           
  1063                           ;main.c: 245: {
  1064                           ;main.c: 246: ucTimerZeroPoint3s++;
  1065  0066  0AEA               	incf	main@ucTimerZeroPoint3s,f
  1066                           
  1067                           ;main.c: 247: }
  1068  0067  2840               	goto	l4220
  1069  0068                     l4244:	
  1070                           
  1071                           ;main.c: 248: else
  1072                           ;main.c: 249: {
  1073                           ;main.c: 250: ucTimerZeroPoint3s = 0;
  1074  0068  01EA               	clrf	main@ucTimerZeroPoint3s
  1075                           
  1076                           ;main.c: 252: if(getAdOriginalCh14Value() > 1950)
  1077  0069  118A  242F  118A   	fcall	_getAdOriginalCh14Value
  1078  006C  3007               	movlw	7
  1079  006D  0257               	subwf	?_getAdOriginalCh14Value+1,w
  1080  006E  309F               	movlw	159
  1081  006F  1903               	skipnz
  1082  0070  0256               	subwf	?_getAdOriginalCh14Value,w
  1083  0071  1C03               	skipc
  1084  0072  2875               	goto	l4250
  1085  0073                     l4248:	
  1086                           
  1087                           ;main.c: 253: {
  1088                           ;main.c: 255: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
  1089  0073  3002               	movlw	2
  1090  0074  28B8               	goto	L10
  1091  0075                     l4250:	
  1092                           ;main.c: 256: }
  1093                           
  1094                           
  1095                           ;main.c: 257: else
  1096                           ;main.c: 258: {
  1097                           ;main.c: 259: clearPinPortAndTimer();
  1098  0075  118A  25B5  118A   	fcall	_clearPinPortAndTimer
  1099  0078  2840               	goto	l4220
  1100  0079                     l715:	
  1101                           ;main.c: 263: }
  1102                           ;main.c: 265: case MAIN_LOOP_STEP_SECOND:
  1103                           
  1104  0079  3005               	movlw	5
  1105                           
  1106                           ;main.c: 266: {
  1107                           ;main.c: 267: static unsigned char ucTimerP5s = 0;
  1108                           ;main.c: 269: PA6 = 1;
  1109  007A  1705               	bsf	5,6
  1110                           
  1111                           ;main.c: 271: if(ucTimerP5s < 5)
  1112  007B  0268               	subwf	main@ucTimerP5s,w
  1113  007C  1803               	skipnc
  1114  007D  2880               	goto	l4256
  1115                           
  1116                           ;main.c: 272: ucTimerP5s++;
  1117  007E  0AE8               	incf	main@ucTimerP5s,f
  1118  007F  2840               	goto	l4220
  1119  0080                     l4256:	
  1120  0080  3003               	movlw	3
  1121                           
  1122                           ;main.c: 273: else
  1123                           ;main.c: 274: {
  1124                           ;main.c: 275: ucTimerP5s = 0;
  1125  0081  01E8               	clrf	main@ucTimerP5s
  1126                           
  1127                           ;main.c: 277: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  1128  0082  28B9               	goto	L5
  1129  0083                     l4260:	
  1130                           
  1131                           ;main.c: 284: {
  1132                           ;main.c: 285: static unsigned char ucTimerADC1ZeroP5s = 0;
  1133                           ;main.c: 287: if(getAdOriginalCh1Value() < 130)
  1134  0083  118A  2426  118A   	fcall	_getAdOriginalCh1Value
  1135  0086  3000               	movlw	0
  1136  0087  0257               	subwf	?_getAdOriginalCh1Value+1,w
  1137  0088  3082               	movlw	130
  1138  0089  1903               	skipnz
  1139  008A  0256               	subwf	?_getAdOriginalCh1Value,w
  1140  008B  1803               	skipnc
  1141  008C  288F               	goto	l4264
  1142                           
  1143                           ;main.c: 288: {
  1144                           ;main.c: 289: ucTimerADC1ZeroP5s = 0;
  1145  008D  01E2               	clrf	main@ucTimerADC1ZeroP5s
  1146                           
  1147                           ;main.c: 291: }
  1148  008E  2890               	goto	l4266
  1149  008F                     l4264:	
  1150                           
  1151                           ;main.c: 292: else
  1152                           ;main.c: 293: {
  1153                           ;main.c: 294: ucTimerADC1ZeroP5s++;
  1154  008F  0AE2               	incf	main@ucTimerADC1ZeroP5s,f
  1155  0090                     l4266:	
  1156                           
  1157                           ;main.c: 295: }
  1158                           ;main.c: 297: if(ucTimerADC1ZeroP5s >= 1)
  1159  0090  0862               	movf	main@ucTimerADC1ZeroP5s,w
  1160  0091  1903               	btfsc	3,2
  1161  0092  2896               	goto	l4272
  1162  0093  3004               	movlw	4
  1163                           
  1164                           ;main.c: 298: {
  1165                           ;main.c: 299: ucTimerADC1ZeroP5s = 0;
  1166  0094  01E2               	clrf	main@ucTimerADC1ZeroP5s
  1167                           
  1168                           ;main.c: 300: enumMainLoopStep = MAIN_LOOP_STEP_FOURTH;
  1169  0095  28B9               	goto	L5
  1170  0096                     l4272:	
  1171                           ;main.c: 301: }
  1172                           
  1173                           
  1174                           ;main.c: 302: else
  1175                           ;main.c: 303: {
  1176                           ;main.c: 304: static unsigned char ucTimerRightP5s = 0;
  1177                           ;main.c: 306: if(getAdOriginalCh1Value() < 117)
  1178  0096  118A  2426  118A   	fcall	_getAdOriginalCh1Value
  1179  0099  3000               	movlw	0
  1180  009A  0257               	subwf	?_getAdOriginalCh1Value+1,w
  1181  009B  3075               	movlw	117
  1182  009C  1903               	skipnz
  1183  009D  0256               	subwf	?_getAdOriginalCh1Value,w
  1184  009E  1803               	skipnc
  1185  009F  28A2               	goto	l4276
  1186                           
  1187                           ;main.c: 307: {
  1188                           ;main.c: 308: ucTimerRightP5s++;
  1189  00A0  0AE9               	incf	main@ucTimerRightP5s,f
  1190                           
  1191                           ;main.c: 309: }
  1192  00A1  28A3               	goto	l4278
  1193  00A2                     l4276:	
  1194                           
  1195                           ;main.c: 310: else
  1196                           ;main.c: 311: {
  1197                           ;main.c: 312: ucTimerRightP5s = 0;
  1198  00A2  01E9               	clrf	main@ucTimerRightP5s
  1199  00A3                     l4278:	
  1200                           
  1201                           ;main.c: 313: }
  1202                           ;main.c: 315: if(ucTimerRightP5s >= 1)
  1203  00A3  0869               	movf	main@ucTimerRightP5s,w
  1204  00A4  1903               	btfsc	3,2
  1205  00A5  2840               	goto	l4220
  1206  00A6  3008               	movlw	8
  1207                           
  1208                           ;main.c: 316: {
  1209                           ;main.c: 317: ucTimerRightP5s = 0;
  1210  00A7  01E9               	clrf	main@ucTimerRightP5s
  1211                           
  1212                           ;main.c: 318: enumMainLoopStep = MAIN_LOOP_STEP_3_HOUR_BRANCH;
  1213  00A8  28B9               	goto	L5
  1214  00A9                     l4284:	
  1215                           ;main.c: 319: }
  1216                           
  1217                           
  1218                           ;main.c: 330: {
  1219                           ;main.c: 332: startTwelveHourTimer(180);
  1220  00A9  30B4               	movlw	180
  1221  00AA  00A0               	movwf	?_startTwelveHourTimer
  1222  00AB  01A1               	clrf	?_startTwelveHourTimer+1
  1223  00AC  118A  262A  118A   	fcall	_startTwelveHourTimer
  1224                           
  1225                           ;main.c: 333: enumMainLoopStep = MAIN_LOOP_STEP_FIFTH;
  1226  00AF  3005               	movlw	5
  1227  00B0  28B8               	goto	L10
  1228  00B1                     l4288:	
  1229                           ;main.c: 335: break;
  1230                           
  1231                           
  1232                           ;main.c: 339: {
  1233                           ;main.c: 341: if(isFinishedTwelveHoursTimer())
  1234  00B1  118A  2684  118A   	fcall	_isFinishedTwelveHoursTimer
  1235  00B4  3A00               	xorlw	0
  1236  00B5  1903               	skipnz
  1237  00B6  2A3F               	goto	l4602
  1238  00B7                     l4290:	
  1239                           
  1240                           ;main.c: 342: {
  1241                           ;main.c: 343: enumMainLoopStep = MAIN_LOOP_STEP_12_HOUR_END;
  1242  00B7  3009               	movlw	9
  1243  00B8                     L10:	
  1244  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  1245  00B9                     L5:	
  1246  00B9  00D9               	movwf	main@enumMainLoopStep
  1247                           
  1248                           ;main.c: 344: }
  1249  00BA  2840               	goto	l4220
  1250  00BB                     l4292:	
  1251                           
  1252                           ;main.c: 352: {
  1253                           ;main.c: 353: startTwentySecondsTimer();
  1254  00BB  118A  268A  118A   	fcall	_startTwentySecondsTimer
  1255  00BE                     l4294:	
  1256                           
  1257                           ;main.c: 354: ucADC4_Step = ADC4_STEP_FIRST;
  1258  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1259  00BF  01DA               	clrf	main@ucADC4_Step
  1260  00C0  0ADA               	incf	main@ucADC4_Step,f
  1261                           
  1262                           ;main.c: 355: break;
  1263  00C1  2840               	goto	l4220
  1264  00C2                     l4296:	
  1265                           
  1266                           ;main.c: 359: {
  1267                           ;main.c: 360: if(getAdOriginaCh4Value() < 1911)
  1268  00C2  118A  241D  118A   	fcall	_getAdOriginaCh4Value
  1269  00C5  3007               	movlw	7
  1270  00C6  0257               	subwf	?_getAdOriginaCh4Value+1,w
  1271  00C7  3077               	movlw	119
  1272  00C8  1903               	skipnz
  1273  00C9  0256               	subwf	?_getAdOriginaCh4Value,w
  1274  00CA  1803               	skipnc
  1275  00CB  28CE               	goto	l4300
  1276                           
  1277                           ;main.c: 361: ucChannel4Type = LESS_THAN_1911;
  1278  00CC  01DB               	clrf	main@ucChannel4Type
  1279  00CD  28F5               	goto	l744
  1280  00CE                     l4300:	
  1281                           
  1282                           ;main.c: 362: else if(getAdOriginaCh4Value() < 2067)
  1283  00CE  118A  241D  118A   	fcall	_getAdOriginaCh4Value
  1284  00D1  3008               	movlw	8
  1285  00D2  0257               	subwf	?_getAdOriginaCh4Value+1,w
  1286  00D3  3013               	movlw	19
  1287  00D4  1903               	skipnz
  1288  00D5  0256               	subwf	?_getAdOriginaCh4Value,w
  1289  00D6  1803               	skipnc
  1290  00D7  28DB               	goto	l4304
  1291                           
  1292                           ;main.c: 363: ucChannel4Type = BETWEEN_1911_AND_2067;
  1293  00D8  01DB               	clrf	main@ucChannel4Type
  1294  00D9  0ADB               	incf	main@ucChannel4Type,f
  1295  00DA  28F5               	goto	l744
  1296  00DB                     l4304:	
  1297                           
  1298                           ;main.c: 364: else if(getAdOriginaCh4Value() < 2204)
  1299  00DB  118A  241D  118A   	fcall	_getAdOriginaCh4Value
  1300  00DE  3008               	movlw	8
  1301  00DF  0257               	subwf	?_getAdOriginaCh4Value+1,w
  1302  00E0  309C               	movlw	156
  1303  00E1  1903               	skipnz
  1304  00E2  0256               	subwf	?_getAdOriginaCh4Value,w
  1305  00E3  1803               	skipnc
  1306  00E4  28E7               	goto	l4308
  1307                           
  1308                           ;main.c: 365: ucChannel4Type = BETWEEN_2067_AND_2204;
  1309  00E5  3002               	movlw	2
  1310  00E6  28F4               	goto	L6
  1311  00E7                     l4308:	
  1312                           
  1313                           ;main.c: 366: else if(getAdOriginaCh4Value() < 2340)
  1314  00E7  118A  241D  118A   	fcall	_getAdOriginaCh4Value
  1315  00EA  3009               	movlw	9
  1316  00EB  0257               	subwf	?_getAdOriginaCh4Value+1,w
  1317  00EC  3024               	movlw	36
  1318  00ED  1903               	skipnz
  1319  00EE  0256               	subwf	?_getAdOriginaCh4Value,w
  1320  00EF  1803               	skipnc
  1321  00F0  28F3               	goto	l4312
  1322                           
  1323                           ;main.c: 367: ucChannel4Type = BETWEEN_2204_AND_2340;
  1324  00F1  3003               	movlw	3
  1325  00F2  28F4               	goto	L6
  1326  00F3                     l4312:	
  1327                           
  1328                           ;main.c: 368: else
  1329                           ;main.c: 369: ucChannel4Type = MORE_THAN_2340;
  1330  00F3  3004               	movlw	4
  1331  00F4                     L6:	
  1332  00F4  00DB               	movwf	main@ucChannel4Type
  1333  00F5                     l744:	
  1334                           
  1335                           ;main.c: 371: ucADC4_Step = ADC4_STEP_SECOND;
  1336  00F5  3002               	movlw	2
  1337  00F6  2A2C               	goto	L8
  1338  00F7                     l759:	
  1339                           ;main.c: 386: {
  1340                           ;main.c: 387: case 0:
  1341                           
  1342                           ;main.c: 372: break;
  1343                           
  1344                           
  1345                           ;main.c: 388: {
  1346                           ;main.c: 389: PB0 = 1;
  1347  00F7  1406               	bsf	6,0
  1348  00F8                     l4314:	
  1349                           
  1350                           ;main.c: 390: ucLoaderStep++;
  1351  00F8  0ADC               	incf	main@ucLoaderStep,f
  1352                           
  1353                           ;main.c: 391: break;
  1354  00F9  2840               	goto	l4220
  1355  00FA                     l4316:	
  1356                           
  1357                           ;main.c: 395: {
  1358                           ;main.c: 396: if(ucTimerDelay >= 5)
  1359  00FA  3005               	movlw	5
  1360  00FB  0263               	subwf	main@ucTimerDelay,w
  1361  00FC  1C03               	skipc
  1362  00FD  2901               	goto	l4324
  1363                           
  1364                           ;main.c: 397: {
  1365                           ;main.c: 398: PA0 = 1;
  1366  00FE  1405               	bsf	5,0
  1367  00FF                     l4320:	
  1368                           
  1369                           ;main.c: 399: ucTimerDelay = 0;
  1370  00FF  01E3               	clrf	main@ucTimerDelay
  1371  0100  28F8               	goto	l4314
  1372  0101                     l4324:	
  1373                           
  1374                           ;main.c: 402: else
  1375                           ;main.c: 403: ucTimerDelay++;
  1376  0101  0AE3               	incf	main@ucTimerDelay,f
  1377  0102  2840               	goto	l4220
  1378  0103                     l4326:	
  1379                           
  1380                           ;main.c: 408: {
  1381                           ;main.c: 409: if(ucTimerDelay >= 5)
  1382  0103  3005               	movlw	5
  1383  0104  0263               	subwf	main@ucTimerDelay,w
  1384  0105  1C03               	skipc
  1385  0106  2901               	goto	l4324
  1386                           
  1387                           ;main.c: 410: {
  1388                           ;main.c: 411: PA1= 1;
  1389  0107  1485               	bsf	5,1
  1390  0108  28FF               	goto	l4320
  1391  0109                     l4336:	
  1392                           
  1393                           ;main.c: 422: {
  1394                           ;main.c: 423: if(ucTimerDelay >= 5)
  1395  0109  3005               	movlw	5
  1396  010A  0263               	subwf	main@ucTimerDelay,w
  1397  010B  1C03               	skipc
  1398  010C  2901               	goto	l4324
  1399                           
  1400                           ;main.c: 424: {
  1401                           ;main.c: 425: PA2= 1;
  1402  010D  1505               	bsf	5,2
  1403  010E  28FF               	goto	l4320
  1404  010F                     l4346:	
  1405                           
  1406                           ;main.c: 435: {
  1407                           ;main.c: 436: if(ucTimerDelay >= 5)
  1408  010F  3005               	movlw	5
  1409  0110  0263               	subwf	main@ucTimerDelay,w
  1410  0111  1C03               	skipc
  1411  0112  2901               	goto	l4324
  1412                           
  1413                           ;main.c: 437: {
  1414                           ;main.c: 438: PA3 = 1;
  1415  0113  1585               	bsf	5,3
  1416  0114  28FF               	goto	l4320
  1417  0115                     l4356:	
  1418                           
  1419                           ;main.c: 448: {
  1420                           ;main.c: 449: if(ucTimerDelay >= 5)
  1421  0115  3005               	movlw	5
  1422  0116  0263               	subwf	main@ucTimerDelay,w
  1423  0117  1C03               	skipc
  1424  0118  2901               	goto	l4324
  1425                           
  1426                           ;main.c: 450: {
  1427                           ;main.c: 451: PB0 = 0;
  1428  0119  1006               	bcf	6,0
  1429                           
  1430                           ;main.c: 452: PA0 = 0;
  1431  011A  1005               	bcf	5,0
  1432                           
  1433                           ;main.c: 453: PA1 = 0;
  1434  011B  1085               	bcf	5,1
  1435                           
  1436                           ;main.c: 454: PA2 = 0;
  1437  011C  1105               	bcf	5,2
  1438                           
  1439                           ;main.c: 455: PA3 = 0;
  1440  011D  1185               	bcf	5,3
  1441  011E  28FF               	goto	l4320
  1442  011F                     l4366:	
  1443                           
  1444                           ;main.c: 465: {
  1445                           ;main.c: 466: if(ucTimerDelay >= 2)
  1446  011F  3002               	movlw	2
  1447  0120  0263               	subwf	main@ucTimerDelay,w
  1448  0121  1C03               	skipc
  1449  0122  2901               	goto	l4324
  1450                           
  1451                           ;main.c: 467: {
  1452                           ;main.c: 468: ucTimerDelay = 0;
  1453  0123  01E3               	clrf	main@ucTimerDelay
  1454                           
  1455                           ;main.c: 470: ucLoaderStep = 0;
  1456  0124  01DC               	clrf	main@ucLoaderStep
  1457  0125                     l4370:	
  1458                           
  1459                           ;main.c: 471: ucADC4_Step = ADC4_STEP_THIRD;
  1460  0125  3003               	movlw	3
  1461  0126  2A2C               	goto	L8
  1462  0127                     l4376:	
  1463                           ;main.c: 472: }
  1464                           
  1465  0127  085C               	movf	main@ucLoaderStep,w
  1466                           
  1467                           ; Switch size 1, requested type "space"
  1468                           ; Number of cases is 7, Range of values is 0 to 6
  1469                           ; switch strategies available:
  1470                           ; Name         Instructions Cycles
  1471                           ; direct_byte           21     7 (fixed)
  1472                           ; simple_byte           22    12 (average)
  1473                           ; jumptable            260     6 (fixed)
  1474                           ; rangetable            11     6 (fixed)
  1475                           ; spacedrange           20     9 (fixed)
  1476                           ; locatedrange           7     3 (fixed)
  1477                           ;	Chosen strategy is direct_byte
  1478  0128  0084               	movwf	4
  1479  0129  3007               	movlw	7
  1480  012A  0204               	subwf	4,w
  1481  012B  1803               	skipnc
  1482  012C  2840               	goto	l4220
  1483  012D  3006               	movlw	high S4924
  1484  012E  008A               	movwf	10
  1485  012F  1003               	clrc
  1486  0130  0D04               	rlf	4,w
  1487  0131  3E00               	addlw	low S4924
  1488  0132  0082               	movwf	2
  1489  0133                     l787:	
  1490                           ;main.c: 491: {
  1491                           ;main.c: 492: case 0:
  1492                           
  1493                           
  1494                           ;main.c: 493: {
  1495                           ;main.c: 494: PB0 = 1;
  1496  0133  1406               	bsf	6,0
  1497  0134                     l4378:	
  1498                           
  1499                           ;main.c: 495: ucLoaderStep1++;
  1500  0134  0ADD               	incf	main@ucLoaderStep1,f
  1501                           
  1502                           ;main.c: 496: break;
  1503  0135  2840               	goto	l4220
  1504  0136                     l4380:	
  1505                           
  1506                           ;main.c: 500: {
  1507                           ;main.c: 501: if(ucTimerDelay1 >= 5)
  1508  0136  3005               	movlw	5
  1509  0137  0264               	subwf	main@ucTimerDelay1,w
  1510  0138  1C03               	skipc
  1511  0139  293D               	goto	l4388
  1512                           
  1513                           ;main.c: 502: {
  1514                           ;main.c: 503: PA0 = 1;
  1515  013A  1405               	bsf	5,0
  1516  013B                     l4384:	
  1517                           
  1518                           ;main.c: 504: ucTimerDelay1 = 0;
  1519  013B  01E4               	clrf	main@ucTimerDelay1
  1520  013C  2934               	goto	l4378
  1521  013D                     l4388:	
  1522                           
  1523                           ;main.c: 507: else
  1524                           ;main.c: 508: ucTimerDelay1++;
  1525  013D  0AE4               	incf	main@ucTimerDelay1,f
  1526  013E  2840               	goto	l4220
  1527  013F                     l4390:	
  1528                           
  1529                           ;main.c: 513: {
  1530                           ;main.c: 514: if(ucTimerDelay1 >= 5)
  1531  013F  3005               	movlw	5
  1532  0140  0264               	subwf	main@ucTimerDelay1,w
  1533  0141  1C03               	skipc
  1534  0142  293D               	goto	l4388
  1535                           
  1536                           ;main.c: 515: {
  1537                           ;main.c: 516: PA1= 1;
  1538  0143  1485               	bsf	5,1
  1539  0144  293B               	goto	l4384
  1540  0145                     l4400:	
  1541                           
  1542                           ;main.c: 526: {
  1543                           ;main.c: 527: if(ucTimerDelay1 >= 5)
  1544  0145  3005               	movlw	5
  1545  0146  0264               	subwf	main@ucTimerDelay1,w
  1546  0147  1C03               	skipc
  1547  0148  293D               	goto	l4388
  1548                           
  1549                           ;main.c: 528: {
  1550                           ;main.c: 529: PA2 = 1;
  1551  0149  1505               	bsf	5,2
  1552  014A  293B               	goto	l4384
  1553  014B                     l4410:	
  1554                           
  1555                           ;main.c: 539: {
  1556                           ;main.c: 540: if(ucTimerDelay1 >= 5)
  1557  014B  3005               	movlw	5
  1558  014C  0264               	subwf	main@ucTimerDelay1,w
  1559  014D  1C03               	skipc
  1560  014E  293D               	goto	l4388
  1561                           
  1562                           ;main.c: 541: {
  1563                           ;main.c: 542: PA3 = 1;
  1564  014F  1585               	bsf	5,3
  1565  0150  293B               	goto	l4384
  1566  0151                     l4420:	
  1567                           
  1568                           ;main.c: 552: {
  1569                           ;main.c: 553: if(ucTimerDelay1 >= 5)
  1570  0151  3005               	movlw	5
  1571  0152  0264               	subwf	main@ucTimerDelay1,w
  1572  0153  1C03               	skipc
  1573  0154  293D               	goto	l4388
  1574                           
  1575                           ;main.c: 554: {
  1576                           ;main.c: 555: PA0 = 0;
  1577  0155  1005               	bcf	5,0
  1578                           
  1579                           ;main.c: 556: PA1 = 0;
  1580  0156  1085               	bcf	5,1
  1581                           
  1582                           ;main.c: 557: PA2 = 0;
  1583  0157  1105               	bcf	5,2
  1584                           
  1585                           ;main.c: 558: PA3 = 0;
  1586  0158  1185               	bcf	5,3
  1587  0159  293B               	goto	l4384
  1588  015A                     l4430:	
  1589                           
  1590                           ;main.c: 568: {
  1591                           ;main.c: 569: if(ucTimerDelay1 >= 2)
  1592  015A  3002               	movlw	2
  1593  015B  0264               	subwf	main@ucTimerDelay1,w
  1594  015C  1C03               	skipc
  1595  015D  293D               	goto	l4388
  1596                           
  1597                           ;main.c: 570: {
  1598                           ;main.c: 571: ucTimerDelay1 = 0;
  1599  015E  01E4               	clrf	main@ucTimerDelay1
  1600                           
  1601                           ;main.c: 573: ucLoaderStep1 = 0;
  1602  015F  01DD               	clrf	main@ucLoaderStep1
  1603  0160  2925               	goto	l4370
  1604  0161                     l4440:	
  1605  0161  085D               	movf	main@ucLoaderStep1,w
  1606                           
  1607                           ; Switch size 1, requested type "space"
  1608                           ; Number of cases is 7, Range of values is 0 to 6
  1609                           ; switch strategies available:
  1610                           ; Name         Instructions Cycles
  1611                           ; direct_byte           21     7 (fixed)
  1612                           ; simple_byte           22    12 (average)
  1613                           ; jumptable            260     6 (fixed)
  1614                           ; rangetable            11     6 (fixed)
  1615                           ; spacedrange           20     9 (fixed)
  1616                           ; locatedrange           7     3 (fixed)
  1617                           ;	Chosen strategy is direct_byte
  1618  0162  0084               	movwf	4
  1619  0163  3007               	movlw	7
  1620  0164  0204               	subwf	4,w
  1621  0165  1803               	skipnc
  1622  0166  2840               	goto	l4220
  1623  0167  3006               	movlw	high S4926
  1624  0168  008A               	movwf	10
  1625  0169  1003               	clrc
  1626  016A  0D04               	rlf	4,w
  1627  016B  3E0E               	addlw	low S4926
  1628  016C  0082               	movwf	2
  1629  016D                     l814:	
  1630                           ;main.c: 595: {
  1631                           ;main.c: 596: case 0:
  1632                           
  1633                           
  1634                           ;main.c: 597: {
  1635                           ;main.c: 598: PB0 = 1;
  1636  016D  1406               	bsf	6,0
  1637                           
  1638                           ;main.c: 599: PA0 = 1;
  1639  016E  1405               	bsf	5,0
  1640  016F                     l4442:	
  1641                           
  1642                           ;main.c: 600: ucLoaderStep2++;
  1643  016F  0ADE               	incf	main@ucLoaderStep2,f
  1644                           
  1645                           ;main.c: 601: break;
  1646  0170  2840               	goto	l4220
  1647  0171                     l4444:	
  1648                           
  1649                           ;main.c: 605: {
  1650                           ;main.c: 606: if(ucTimerDelay2 >= 5)
  1651  0171  3005               	movlw	5
  1652  0172  0265               	subwf	main@ucTimerDelay2,w
  1653  0173  1C03               	skipc
  1654  0174  2978               	goto	l4452
  1655                           
  1656                           ;main.c: 607: {
  1657                           ;main.c: 608: PA1 = 1;
  1658  0175  1485               	bsf	5,1
  1659  0176                     l4448:	
  1660                           
  1661                           ;main.c: 609: ucTimerDelay2 = 0;
  1662  0176  01E5               	clrf	main@ucTimerDelay2
  1663  0177  296F               	goto	l4442
  1664  0178                     l4452:	
  1665                           
  1666                           ;main.c: 612: else
  1667                           ;main.c: 613: ucTimerDelay2++;
  1668  0178  0AE5               	incf	main@ucTimerDelay2,f
  1669  0179  2840               	goto	l4220
  1670  017A                     l4454:	
  1671                           
  1672                           ;main.c: 618: {
  1673                           ;main.c: 619: if(ucTimerDelay2 >= 5)
  1674  017A  3005               	movlw	5
  1675  017B  0265               	subwf	main@ucTimerDelay2,w
  1676  017C  1C03               	skipc
  1677  017D  2978               	goto	l4452
  1678                           
  1679                           ;main.c: 620: {
  1680                           ;main.c: 621: PA2 = 1;
  1681  017E  1505               	bsf	5,2
  1682  017F  2976               	goto	l4448
  1683  0180                     l4464:	
  1684                           
  1685                           ;main.c: 631: {
  1686                           ;main.c: 632: if(ucTimerDelay2 >= 5)
  1687  0180  3005               	movlw	5
  1688  0181  0265               	subwf	main@ucTimerDelay2,w
  1689  0182  1C03               	skipc
  1690  0183  2978               	goto	l4452
  1691                           
  1692                           ;main.c: 633: {
  1693                           ;main.c: 634: PA3 = 1;
  1694  0184  1585               	bsf	5,3
  1695  0185  2976               	goto	l4448
  1696  0186                     l4474:	
  1697                           
  1698                           ;main.c: 644: {
  1699                           ;main.c: 645: if(ucTimerDelay2 >= 5)
  1700  0186  3005               	movlw	5
  1701  0187  0265               	subwf	main@ucTimerDelay2,w
  1702  0188  1C03               	skipc
  1703  0189  2978               	goto	l4452
  1704                           
  1705                           ;main.c: 646: {
  1706                           ;main.c: 648: PA1 = 0;
  1707  018A  1085               	bcf	5,1
  1708                           
  1709                           ;main.c: 649: PA2 = 0;
  1710  018B  1105               	bcf	5,2
  1711                           
  1712                           ;main.c: 650: PA3 = 0;
  1713  018C  1185               	bcf	5,3
  1714  018D  2976               	goto	l4448
  1715  018E                     l4484:	
  1716                           
  1717                           ;main.c: 660: {
  1718                           ;main.c: 661: if(ucTimerDelay2 >= 2)
  1719  018E  3002               	movlw	2
  1720  018F  0265               	subwf	main@ucTimerDelay2,w
  1721  0190  1C03               	skipc
  1722  0191  2978               	goto	l4452
  1723                           
  1724                           ;main.c: 662: {
  1725                           ;main.c: 663: ucTimerDelay2 = 0;
  1726  0192  01E5               	clrf	main@ucTimerDelay2
  1727                           
  1728                           ;main.c: 665: ucLoaderStep2 = 0;
  1729  0193  01DE               	clrf	main@ucLoaderStep2
  1730  0194  2925               	goto	l4370
  1731  0195                     l4494:	
  1732  0195  085E               	movf	main@ucLoaderStep2,w
  1733                           
  1734                           ; Switch size 1, requested type "space"
  1735                           ; Number of cases is 6, Range of values is 0 to 5
  1736                           ; switch strategies available:
  1737                           ; Name         Instructions Cycles
  1738                           ; direct_byte           19     7 (fixed)
  1739                           ; simple_byte           19    10 (average)
  1740                           ; jumptable            260     6 (fixed)
  1741                           ; rangetable            10     6 (fixed)
  1742                           ; spacedrange           18     9 (fixed)
  1743                           ; locatedrange           6     3 (fixed)
  1744                           ;	Chosen strategy is direct_byte
  1745  0196  0084               	movwf	4
  1746  0197  3006               	movlw	6
  1747  0198  0204               	subwf	4,w
  1748  0199  1803               	skipnc
  1749  019A  2840               	goto	l4220
  1750  019B  3006               	movlw	high S4928
  1751  019C  008A               	movwf	10
  1752  019D  1003               	clrc
  1753  019E  0D04               	rlf	4,w
  1754  019F  3E38               	addlw	low S4928
  1755  01A0  0082               	movwf	2
  1756  01A1                     l838:	
  1757                           ;main.c: 687: {
  1758                           ;main.c: 688: case 0:
  1759                           
  1760                           
  1761                           ;main.c: 689: {
  1762                           ;main.c: 690: PB0 = 1;
  1763  01A1  1406               	bsf	6,0
  1764                           
  1765                           ;main.c: 691: PA0 = 1;
  1766  01A2  1405               	bsf	5,0
  1767                           
  1768                           ;main.c: 692: PA1 = 1;
  1769  01A3  1485               	bsf	5,1
  1770  01A4                     l4496:	
  1771                           
  1772                           ;main.c: 693: ucLoaderStep3++;
  1773  01A4  0ADF               	incf	main@ucLoaderStep3,f
  1774                           
  1775                           ;main.c: 694: break;
  1776  01A5  2840               	goto	l4220
  1777  01A6                     l4498:	
  1778                           
  1779                           ;main.c: 698: {
  1780                           ;main.c: 699: if(ucTimerDelay3 >= 5)
  1781  01A6  3005               	movlw	5
  1782  01A7  0266               	subwf	main@ucTimerDelay3,w
  1783  01A8  1C03               	skipc
  1784  01A9  29AD               	goto	l4506
  1785                           
  1786                           ;main.c: 700: {
  1787                           ;main.c: 701: PA2 = 1;
  1788  01AA  1505               	bsf	5,2
  1789  01AB                     l4502:	
  1790                           
  1791                           ;main.c: 702: ucTimerDelay3 = 0;
  1792  01AB  01E6               	clrf	main@ucTimerDelay3
  1793  01AC  29A4               	goto	l4496
  1794  01AD                     l4506:	
  1795                           
  1796                           ;main.c: 705: else
  1797                           ;main.c: 706: ucTimerDelay3++;
  1798  01AD  0AE6               	incf	main@ucTimerDelay3,f
  1799  01AE  2840               	goto	l4220
  1800  01AF                     l4508:	
  1801                           
  1802                           ;main.c: 711: {
  1803                           ;main.c: 712: if(ucTimerDelay3 >= 5)
  1804  01AF  3005               	movlw	5
  1805  01B0  0266               	subwf	main@ucTimerDelay3,w
  1806  01B1  1C03               	skipc
  1807  01B2  29AD               	goto	l4506
  1808                           
  1809                           ;main.c: 713: {
  1810                           ;main.c: 714: PA3 = 1;
  1811  01B3  1585               	bsf	5,3
  1812  01B4  29AB               	goto	l4502
  1813  01B5                     l4518:	
  1814                           
  1815                           ;main.c: 725: {
  1816                           ;main.c: 726: if(ucTimerDelay3 >= 5)
  1817  01B5  3005               	movlw	5
  1818  01B6  0266               	subwf	main@ucTimerDelay3,w
  1819  01B7  1C03               	skipc
  1820  01B8  29AD               	goto	l4506
  1821                           
  1822                           ;main.c: 727: {
  1823                           ;main.c: 729: PA2 = 0;
  1824  01B9  1105               	bcf	5,2
  1825                           
  1826                           ;main.c: 730: PA3 = 0;
  1827  01BA  1185               	bcf	5,3
  1828  01BB  29AB               	goto	l4502
  1829  01BC                     l4528:	
  1830                           
  1831                           ;main.c: 740: {
  1832                           ;main.c: 741: if(ucTimerDelay3 >= 2)
  1833  01BC  3002               	movlw	2
  1834  01BD  0266               	subwf	main@ucTimerDelay3,w
  1835  01BE  1C03               	skipc
  1836  01BF  29AD               	goto	l4506
  1837                           
  1838                           ;main.c: 742: {
  1839                           ;main.c: 743: ucTimerDelay3 = 0;
  1840  01C0  01E6               	clrf	main@ucTimerDelay3
  1841                           
  1842                           ;main.c: 745: ucLoaderStep3 = 0;
  1843  01C1  01DF               	clrf	main@ucLoaderStep3
  1844  01C2  2925               	goto	l4370
  1845  01C3                     l4538:	
  1846  01C3  085F               	movf	main@ucLoaderStep3,w
  1847                           
  1848                           ; Switch size 1, requested type "space"
  1849                           ; Number of cases is 5, Range of values is 0 to 4
  1850                           ; switch strategies available:
  1851                           ; Name         Instructions Cycles
  1852                           ; simple_byte           16     9 (average)
  1853                           ; direct_byte           17     7 (fixed)
  1854                           ; jumptable            260     6 (fixed)
  1855                           ; rangetable             9     6 (fixed)
  1856                           ; spacedrange           16     9 (fixed)
  1857                           ; locatedrange           5     3 (fixed)
  1858                           ;	Chosen strategy is simple_byte
  1859  01C4  3A00               	xorlw	0	; case 0
  1860  01C5  1903               	skipnz
  1861  01C6  29A1               	goto	l838
  1862  01C7  3A01               	xorlw	1	; case 1
  1863  01C8  1903               	skipnz
  1864  01C9  29A6               	goto	l4498
  1865  01CA  3A03               	xorlw	3	; case 2
  1866  01CB  1903               	skipnz
  1867  01CC  29AF               	goto	l4508
  1868  01CD  3A01               	xorlw	1	; case 3
  1869  01CE  1903               	skipnz
  1870  01CF  29B5               	goto	l4518
  1871  01D0  3A07               	xorlw	7	; case 4
  1872  01D1  1903               	skipnz
  1873  01D2  29BC               	goto	l4528
  1874  01D3  2862               	goto	l706
  1875  01D4                     l859:	
  1876                           ;main.c: 767: {
  1877                           ;main.c: 768: case 0:
  1878                           
  1879                           
  1880                           ;main.c: 769: {
  1881                           ;main.c: 770: PB0 = 1;
  1882  01D4  1406               	bsf	6,0
  1883                           
  1884                           ;main.c: 771: PA0 = 1;
  1885  01D5  1405               	bsf	5,0
  1886                           
  1887                           ;main.c: 772: PA1 = 1;
  1888  01D6  1485               	bsf	5,1
  1889                           
  1890                           ;main.c: 773: PA2 = 1;
  1891  01D7  1505               	bsf	5,2
  1892  01D8                     l4540:	
  1893                           
  1894                           ;main.c: 774: ucLoaderStep4++;
  1895  01D8  0AE0               	incf	main@ucLoaderStep4,f
  1896                           
  1897                           ;main.c: 775: break;
  1898  01D9  2840               	goto	l4220
  1899  01DA                     l4542:	
  1900                           
  1901                           ;main.c: 779: {
  1902                           ;main.c: 780: if(ucTimerDelay4 >= 5)
  1903  01DA  3005               	movlw	5
  1904  01DB  0267               	subwf	main@ucTimerDelay4,w
  1905  01DC  1C03               	skipc
  1906  01DD  29E1               	goto	l4550
  1907                           
  1908                           ;main.c: 781: {
  1909                           ;main.c: 782: PA3 = 1;
  1910  01DE  1585               	bsf	5,3
  1911  01DF                     l4546:	
  1912                           
  1913                           ;main.c: 783: ucTimerDelay4 = 0;
  1914  01DF  01E7               	clrf	main@ucTimerDelay4
  1915  01E0  29D8               	goto	l4540
  1916  01E1                     l4550:	
  1917                           
  1918                           ;main.c: 786: else
  1919                           ;main.c: 787: ucTimerDelay4++;
  1920  01E1  0AE7               	incf	main@ucTimerDelay4,f
  1921  01E2  2840               	goto	l4220
  1922  01E3                     l4552:	
  1923                           
  1924                           ;main.c: 792: {
  1925                           ;main.c: 793: if(ucTimerDelay4 >= 5)
  1926  01E3  3005               	movlw	5
  1927  01E4  0267               	subwf	main@ucTimerDelay4,w
  1928  01E5  1C03               	skipc
  1929  01E6  29E1               	goto	l4550
  1930                           
  1931                           ;main.c: 794: {
  1932                           ;main.c: 795: PA3 = 0;
  1933  01E7  1185               	bcf	5,3
  1934  01E8  29DF               	goto	l4546
  1935  01E9                     l4562:	
  1936                           
  1937                           ;main.c: 805: {
  1938                           ;main.c: 806: if(ucTimerDelay4 >= 2)
  1939  01E9  3002               	movlw	2
  1940  01EA  0267               	subwf	main@ucTimerDelay4,w
  1941  01EB  1C03               	skipc
  1942  01EC  29E1               	goto	l4550
  1943                           
  1944                           ;main.c: 807: {
  1945                           ;main.c: 808: ucTimerDelay4 = 0;
  1946  01ED  01E7               	clrf	main@ucTimerDelay4
  1947                           
  1948                           ;main.c: 810: ucLoaderStep4 = 0;
  1949  01EE  01E0               	clrf	main@ucLoaderStep4
  1950  01EF  2925               	goto	l4370
  1951  01F0                     l4572:	
  1952  01F0  0860               	movf	main@ucLoaderStep4,w
  1953                           
  1954                           ; Switch size 1, requested type "space"
  1955                           ; Number of cases is 4, Range of values is 0 to 3
  1956                           ; switch strategies available:
  1957                           ; Name         Instructions Cycles
  1958                           ; simple_byte           13     7 (average)
  1959                           ; direct_byte           15     7 (fixed)
  1960                           ; jumptable            260     6 (fixed)
  1961                           ; rangetable             8     6 (fixed)
  1962                           ; spacedrange           14     9 (fixed)
  1963                           ; locatedrange           4     3 (fixed)
  1964                           ;	Chosen strategy is simple_byte
  1965  01F1  3A00               	xorlw	0	; case 0
  1966  01F2  1903               	skipnz
  1967  01F3  29D4               	goto	l859
  1968  01F4  3A01               	xorlw	1	; case 1
  1969  01F5  1903               	skipnz
  1970  01F6  29DA               	goto	l4542
  1971  01F7  3A03               	xorlw	3	; case 2
  1972  01F8  1903               	skipnz
  1973  01F9  29E3               	goto	l4552
  1974  01FA  3A01               	xorlw	1	; case 3
  1975  01FB  1903               	skipnz
  1976  01FC  29E9               	goto	l4562
  1977  01FD  2862               	goto	l706
  1978  01FE                     l4576:	
  1979  01FE  085B               	movf	main@ucChannel4Type,w
  1980                           
  1981                           ; Switch size 1, requested type "space"
  1982                           ; Number of cases is 5, Range of values is 0 to 4
  1983                           ; switch strategies available:
  1984                           ; Name         Instructions Cycles
  1985                           ; simple_byte           16     9 (average)
  1986                           ; direct_byte           17     7 (fixed)
  1987                           ; jumptable            260     6 (fixed)
  1988                           ; rangetable             9     6 (fixed)
  1989                           ; spacedrange           16     9 (fixed)
  1990                           ; locatedrange           5     3 (fixed)
  1991                           ;	Chosen strategy is simple_byte
  1992  01FF  3A00               	xorlw	0	; case 0
  1993  0200  1903               	skipnz
  1994  0201  2927               	goto	l4376
  1995  0202  3A01               	xorlw	1	; case 1
  1996  0203  1903               	skipnz
  1997  0204  2961               	goto	l4440
  1998  0205  3A03               	xorlw	3	; case 2
  1999  0206  1903               	skipnz
  2000  0207  2995               	goto	l4494
  2001  0208  3A01               	xorlw	1	; case 3
  2002  0209  1903               	skipnz
  2003  020A  29C3               	goto	l4538
  2004  020B  3A07               	xorlw	7	; case 4
  2005  020C  1903               	skipnz
  2006  020D  29F0               	goto	l4572
  2007  020E  2862               	goto	l706
  2008  020F                     l4578:	
  2009                           
  2010                           ;main.c: 834: {
  2011                           ;main.c: 835: if(isFinishedTwentySecondsTimer())
  2012  020F  118A  267E  118A   	fcall	_isFinishedTwentySecondsTimer
  2013  0212  3A00               	xorlw	0
  2014  0213  1903               	skipnz
  2015  0214  28BE               	goto	l4294
  2016                           
  2017                           ;main.c: 836: {
  2018                           ;main.c: 837: PBOD6 =0;
  2019  0215  1703               	bsf	3,6	;RP1=1, select bank3
  2020  0216  1308               	bcf	8,6
  2021                           
  2022                           ;main.c: 838: PB6 = 1;
  2023  0217  1283               	bcf	3,5	;RP0=0, select bank0
  2024  0218  1303               	bcf	3,6	;RP1=0, select bank0
  2025  0219  1706               	bsf	6,6
  2026                           
  2027                           ;main.c: 839: PA6 = 0;
  2028  021A  1305               	bcf	5,6
  2029                           
  2030                           ;main.c: 846: if((getAdOriginalCh14Value() > 2800))
  2031  021B  118A  242F  118A   	fcall	_getAdOriginalCh14Value
  2032  021E  300A               	movlw	10
  2033  021F  0257               	subwf	?_getAdOriginalCh14Value+1,w
  2034  0220  30F1               	movlw	241
  2035  0221  1903               	skipnz
  2036  0222  0256               	subwf	?_getAdOriginalCh14Value,w
  2037  0223  1C03               	skipc
  2038  0224  2A27               	goto	l4586
  2039                           
  2040                           ;main.c: 847: DACR0=0x0F;
  2041  0225  300F               	movlw	15
  2042  0226  2A28               	goto	L9
  2043  0227                     l4586:	
  2044                           
  2045                           ;main.c: 848: else
  2046                           ;main.c: 849: DACR0=0x07;
  2047  0227  3007               	movlw	7
  2048  0228                     L9:	
  2049  0228  1683               	bsf	3,5	;RP0=1, select bank1
  2050  0229  0088               	movwf	8	;volatile
  2051                           
  2052                           ;main.c: 851: ucADC4_Step = ADC4_STEP_FOURTH;
  2053  022A  3004               	movlw	4
  2054  022B  1283               	bcf	3,5	;RP0=0, select bank0
  2055  022C                     L8:	
  2056  022C  00DA               	movwf	main@ucADC4_Step
  2057                           
  2058                           ;main.c: 852: }
  2059  022D  2840               	goto	l4220
  2060  022E                     l4588:	
  2061                           
  2062                           ;main.c: 860: {
  2063                           ;main.c: 861: static unsigned char ucTimer1s = 0;
  2064                           ;main.c: 862: if(ucTimer1s < 5)
  2065  022E  3005               	movlw	5
  2066  022F  0261               	subwf	main@ucTimer1s,w
  2067  0230  1803               	skipnc
  2068  0231  2A34               	goto	l4592
  2069                           
  2070                           ;main.c: 863: {
  2071                           ;main.c: 864: ucTimer1s++;
  2072  0232  0AE1               	incf	main@ucTimer1s,f
  2073                           
  2074                           ;main.c: 865: }
  2075  0233  2840               	goto	l4220
  2076  0234                     l4592:	
  2077                           
  2078                           ;main.c: 866: else
  2079                           ;main.c: 867: {
  2080                           ;main.c: 868: ucTimer1s = 0;
  2081  0234  01E1               	clrf	main@ucTimer1s
  2082                           
  2083                           ;main.c: 869: PB6 = 1;
  2084  0235  1706               	bsf	6,6
  2085                           
  2086                           ;main.c: 870: PBOD6 = 1;
  2087  0236  1683               	bsf	3,5	;RP0=1, select bank3
  2088  0237  1703               	bsf	3,6	;RP1=1, select bank3
  2089  0238  1708               	bsf	8,6
  2090                           
  2091                           ;main.c: 871: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  2092  0239  1283               	bcf	3,5	;RP0=0, select bank0
  2093  023A  1303               	bcf	3,6	;RP1=0, select bank0
  2094  023B  01D9               	clrf	main@enumMainLoopStep
  2095  023C  0AD9               	incf	main@enumMainLoopStep,f
  2096                           
  2097                           ;main.c: 872: ucADC4_Step = ADC4_STEP_INIT;
  2098  023D  01DA               	clrf	main@ucADC4_Step
  2099  023E  2840               	goto	l4220
  2100  023F                     l4602:	
  2101  023F  1283               	bcf	3,5	;RP0=0, select bank0
  2102  0240  085A               	movf	main@ucADC4_Step,w
  2103                           
  2104                           ; Switch size 1, requested type "space"
  2105                           ; Number of cases is 5, Range of values is 0 to 4
  2106                           ; switch strategies available:
  2107                           ; Name         Instructions Cycles
  2108                           ; simple_byte           16     9 (average)
  2109                           ; direct_byte           17     7 (fixed)
  2110                           ; jumptable            260     6 (fixed)
  2111                           ; rangetable             9     6 (fixed)
  2112                           ; spacedrange           16     9 (fixed)
  2113                           ; locatedrange           5     3 (fixed)
  2114                           ;	Chosen strategy is simple_byte
  2115  0241  3A00               	xorlw	0	; case 0
  2116  0242  1903               	skipnz
  2117  0243  28BB               	goto	l4292
  2118  0244  3A01               	xorlw	1	; case 1
  2119  0245  1903               	skipnz
  2120  0246  28C2               	goto	l4296
  2121  0247  3A03               	xorlw	3	; case 2
  2122  0248  1903               	skipnz
  2123  0249  29FE               	goto	l4576
  2124  024A  3A01               	xorlw	1	; case 3
  2125  024B  1903               	skipnz
  2126  024C  2A0F               	goto	l4578
  2127  024D  3A07               	xorlw	7	; case 4
  2128  024E  1903               	skipnz
  2129  024F  2A2E               	goto	l4588
  2130  0250  2862               	goto	l706
  2131  0251                     l887:	
  2132                           ;main.c: 898: {
  2133                           ;main.c: 899: case HOUR_3_BRANCH_STEP_FIRST:
  2134                           
  2135                           
  2136                           ;main.c: 900: {
  2137                           ;main.c: 901: PA7 = 1;
  2138  0251  1283               	bcf	3,5	;RP0=0, select bank0
  2139  0252  1785               	bsf	5,7
  2140                           
  2141                           ;main.c: 902: PAOD7 = 1;
  2142  0253  1683               	bsf	3,5	;RP0=1, select bank3
  2143  0254  303C               	movlw	60
  2144  0255  1703               	bsf	3,6	;RP1=1, select bank3
  2145  0256  1787               	bsf	7,7
  2146                           
  2147                           ;main.c: 903: startThreeHoursTimer(60);
  2148  0257  1283               	bcf	3,5	;RP0=0, select bank0
  2149  0258  1303               	bcf	3,6	;RP1=0, select bank0
  2150  0259  00A0               	movwf	?_startThreeHoursTimer
  2151  025A  01A1               	clrf	?_startThreeHoursTimer+1
  2152  025B  118A  261C  118A   	fcall	_startThreeHoursTimer
  2153                           
  2154                           ;main.c: 905: enumBranchStep = HOUR_3_BRANCH_STEP_SECOND;
  2155  025E  01BC               	clrf	main@enumBranchStep^(0+128)
  2156  025F  0ABC               	incf	main@enumBranchStep^(0+128),f
  2157                           
  2158                           ;main.c: 906: break;
  2159  0260  2840               	goto	l4220
  2160  0261                     l4608:	
  2161                           
  2162                           ;main.c: 910: {
  2163                           ;main.c: 911: static unsigned char ucTimer20s = 0;
  2164                           ;main.c: 913: if(ucTimer20s < 200)
  2165  0261  30C8               	movlw	200
  2166  0262  023E               	subwf	main@ucTimer20s^(0+128),w
  2167  0263  1803               	skipnc
  2168  0264  2A6D               	goto	l4622
  2169                           
  2170                           ;main.c: 914: {
  2171                           ;main.c: 915: ucTimer20s++;
  2172  0265  0ABE               	incf	main@ucTimer20s^(0+128),f
  2173                           
  2174                           ;main.c: 916: PB0 = 1;
  2175  0266  1283               	bcf	3,5	;RP0=0, select bank0
  2176  0267  1406               	bsf	6,0
  2177                           
  2178                           ;main.c: 917: PA0 = 1;
  2179  0268  1405               	bsf	5,0
  2180                           
  2181                           ;main.c: 918: PA1 = 1;
  2182  0269  1485               	bsf	5,1
  2183                           
  2184                           ;main.c: 919: PA2 = 1;
  2185  026A  1505               	bsf	5,2
  2186                           
  2187                           ;main.c: 920: PA3 = 1;
  2188  026B  1585               	bsf	5,3
  2189                           
  2190                           ;main.c: 921: }
  2191  026C  2840               	goto	l4220
  2192  026D                     l4622:	
  2193  026D  3002               	movlw	2
  2194                           
  2195                           ;main.c: 922: else
  2196                           ;main.c: 923: {
  2197                           ;main.c: 925: ucTimer20s = 0;
  2198  026E  01BE               	clrf	main@ucTimer20s^(0+128)
  2199                           
  2200                           ;main.c: 928: enumBranchStep = HOUR_3_BRANCH_STEP_THIRD;
  2201  026F  00BC               	movwf	main@enumBranchStep^(0+128)
  2202  0270  2840               	goto	l4220
  2203  0271                     l894:	
  2204                           ;main.c: 931: }
  2205                           ;main.c: 933: case HOUR_3_BRANCH_STEP_THIRD:
  2206                           
  2207                           
  2208                           ;main.c: 934: {
  2209                           ;main.c: 935: PA6 = 0;
  2210  0271  1283               	bcf	3,5	;RP0=0, select bank0
  2211  0272  1305               	bcf	5,6
  2212                           
  2213                           ;main.c: 937: if(isFinishedThreeHoursTimer())
  2214  0273  118A  2678  118A   	fcall	_isFinishedThreeHoursTimer
  2215  0276  3A00               	xorlw	0
  2216  0277  1903               	skipnz
  2217  0278  2A7B               	goto	l4632
  2218                           
  2219                           ;main.c: 938: {
  2220                           ;main.c: 939: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2221  0279  01BC               	clrf	main@enumBranchStep^(0+128)
  2222  027A  28B7               	goto	l4290
  2223  027B                     l4632:	
  2224                           
  2225                           ;main.c: 942: else
  2226                           ;main.c: 943: {
  2227                           ;main.c: 944: static unsigned char ucTimerX1P5s = 0;
  2228                           ;main.c: 946: if(getAdOriginalCh1Value() < 130)
  2229  027B  118A  2426  118A   	fcall	_getAdOriginalCh1Value
  2230  027E  3000               	movlw	0
  2231  027F  0257               	subwf	?_getAdOriginalCh1Value+1,w
  2232  0280  3082               	movlw	130
  2233  0281  1903               	skipnz
  2234  0282  0256               	subwf	?_getAdOriginalCh1Value,w
  2235  0283  1803               	skipnc
  2236  0284  2A88               	goto	l4636
  2237                           
  2238                           ;main.c: 947: {
  2239                           ;main.c: 948: ucTimerX1P5s = 0;
  2240  0285  1683               	bsf	3,5	;RP0=1, select bank1
  2241  0286  01C0               	clrf	main@ucTimerX1P5s^(0+128)
  2242                           
  2243                           ;main.c: 949: }
  2244  0287  2A8A               	goto	l4638
  2245  0288                     l4636:	
  2246                           
  2247                           ;main.c: 950: else
  2248                           ;main.c: 951: {
  2249                           ;main.c: 952: ucTimerX1P5s++;
  2250  0288  1683               	bsf	3,5	;RP0=1, select bank1
  2251  0289  0AC0               	incf	main@ucTimerX1P5s^(0+128),f
  2252  028A                     l4638:	
  2253                           
  2254                           ;main.c: 953: }
  2255                           ;main.c: 955: if(ucTimerX1P5s >= 1)
  2256  028A  0840               	movf	main@ucTimerX1P5s^(0+128),w
  2257  028B  1903               	btfsc	3,2
  2258  028C  2A98               	goto	l4652
  2259                           
  2260                           ;main.c: 956: {
  2261                           ;main.c: 957: ucTimerX1P5s = 0;
  2262  028D  01C0               	clrf	main@ucTimerX1P5s^(0+128)
  2263                           
  2264                           ;main.c: 958: PAOD7 = 0;
  2265  028E  1703               	bsf	3,6	;RP1=1, select bank3
  2266  028F  1387               	bcf	7,7
  2267                           
  2268                           ;main.c: 959: PA7 = 0;
  2269  0290  1283               	bcf	3,5	;RP0=0, select bank0
  2270  0291  1303               	bcf	3,6	;RP1=0, select bank0
  2271  0292  1385               	bcf	5,7
  2272                           
  2273                           ;main.c: 960: clearThreeHoursTimer();
  2274  0293  118A  25CB  118A   	fcall	_clearThreeHoursTimer
  2275                           
  2276                           ;main.c: 962: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2277  0296  01BC               	clrf	main@enumBranchStep^(0+128)
  2278  0297  2873               	goto	l4248
  2279  0298                     l4652:	
  2280                           
  2281                           ;main.c: 966: else
  2282                           ;main.c: 967: {
  2283                           ;main.c: 968: static unsigned char ucTimerX2P5s = 0;
  2284                           ;main.c: 970: if(getAdOriginalCh14Value() >= 1950)
  2285  0298  118A  242F  118A   	fcall	_getAdOriginalCh14Value
  2286  029B  3007               	movlw	7
  2287  029C  0257               	subwf	?_getAdOriginalCh14Value+1,w
  2288  029D  309E               	movlw	158
  2289  029E  1903               	skipnz
  2290  029F  0256               	subwf	?_getAdOriginalCh14Value,w
  2291  02A0  1C03               	skipc
  2292  02A1  2AA5               	goto	l4656
  2293                           
  2294                           ;main.c: 971: {
  2295                           ;main.c: 972: ucTimerX2P5s++;
  2296  02A2  1683               	bsf	3,5	;RP0=1, select bank1
  2297  02A3  0AC1               	incf	main@ucTimerX2P5s^(0+128),f
  2298                           
  2299                           ;main.c: 973: }
  2300  02A4  2AA7               	goto	l4658
  2301  02A5                     l4656:	
  2302                           
  2303                           ;main.c: 974: else
  2304                           ;main.c: 975: {
  2305                           ;main.c: 976: ucTimerX2P5s = 0;
  2306  02A5  1683               	bsf	3,5	;RP0=1, select bank1
  2307  02A6  01C1               	clrf	main@ucTimerX2P5s^(0+128)
  2308  02A7                     l4658:	
  2309                           
  2310                           ;main.c: 977: }
  2311                           ;main.c: 979: if(ucTimerX2P5s >= 1)
  2312  02A7  0841               	movf	main@ucTimerX2P5s^(0+128),w
  2313  02A8  1903               	btfsc	3,2
  2314  02A9  2AAC               	goto	l4662
  2315                           
  2316                           ;main.c: 980: {
  2317                           ;main.c: 981: ucTimerX2P5s = 0;
  2318  02AA  01C1               	clrf	main@ucTimerX2P5s^(0+128)
  2319                           
  2320                           ;main.c: 982: }
  2321  02AB  2840               	goto	l4220
  2322  02AC                     l4662:	
  2323                           
  2324                           ;main.c: 983: else
  2325                           ;main.c: 984: {
  2326                           ;main.c: 985: clearPinPortAndTimer();
  2327  02AC  118A  25B5  118A   	fcall	_clearPinPortAndTimer
  2328  02AF  285F               	goto	l4238
  2329  02B0                     l4668:	
  2330  02B0  1683               	bsf	3,5	;RP0=1, select bank1
  2331  02B1  083C               	movf	main@enumBranchStep^(0+128),w
  2332                           
  2333                           ; Switch size 1, requested type "space"
  2334                           ; Number of cases is 3, Range of values is 0 to 2
  2335                           ; switch strategies available:
  2336                           ; Name         Instructions Cycles
  2337                           ; simple_byte           10     6 (average)
  2338                           ; direct_byte           13     7 (fixed)
  2339                           ; jumptable            260     6 (fixed)
  2340                           ; rangetable             7     6 (fixed)
  2341                           ; spacedrange           12     9 (fixed)
  2342                           ; locatedrange           3     3 (fixed)
  2343                           ;	Chosen strategy is simple_byte
  2344  02B2  3A00               	xorlw	0	; case 0
  2345  02B3  1903               	skipnz
  2346  02B4  2A51               	goto	l887
  2347  02B5  3A01               	xorlw	1	; case 1
  2348  02B6  1903               	skipnz
  2349  02B7  2A61               	goto	l4608
  2350  02B8  3A03               	xorlw	3	; case 2
  2351  02B9  1903               	skipnz
  2352  02BA  2A71               	goto	l894
  2353  02BB  2862               	goto	l706
  2354  02BC                     l914:	
  2355                           ;main.c: 1015: {
  2356                           ;main.c: 1016: case INTERNAL_FIRST_STEP:
  2357                           
  2358                           
  2359                           ;main.c: 1017: {
  2360                           ;main.c: 1018: PB0 = 0;
  2361  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  2362  02BD  1006               	bcf	6,0
  2363                           
  2364                           ;main.c: 1019: PB1 = 0;
  2365  02BE  1086               	bcf	6,1
  2366                           
  2367                           ;main.c: 1020: PA0 = 0;
  2368  02BF  1005               	bcf	5,0
  2369                           
  2370                           ;main.c: 1021: PA1 = 0;
  2371  02C0  1085               	bcf	5,1
  2372                           
  2373                           ;main.c: 1022: PA2 = 0;
  2374  02C1  1105               	bcf	5,2
  2375                           
  2376                           ;main.c: 1023: PA3 = 0;
  2377  02C2  1185               	bcf	5,3
  2378                           
  2379                           ;main.c: 1024: PBOD6 = 0;
  2380  02C3  1683               	bsf	3,5	;RP0=1, select bank3
  2381  02C4  1703               	bsf	3,6	;RP1=1, select bank3
  2382  02C5  1308               	bcf	8,6
  2383                           
  2384                           ;main.c: 1025: PB6 = 1;
  2385  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  2386  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  2387  02C8  1706               	bsf	6,6
  2388                           
  2389                           ;main.c: 1026: PA6 =0;
  2390  02C9  1305               	bcf	5,6
  2391                           
  2392                           ;main.c: 1028: enumInteralStep = INTERNAL_SECOND_STEP;
  2393  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  2394  02CB  01BD               	clrf	main@enumInteralStep^(0+128)
  2395  02CC  0ABD               	incf	main@enumInteralStep^(0+128),f
  2396                           
  2397                           ;main.c: 1029: break;
  2398  02CD  2840               	goto	l4220
  2399  02CE                     l4670:	
  2400                           
  2401                           ;main.c: 1033: {
  2402                           ;main.c: 1034: static unsigned char ucTimer1s = 0;
  2403                           ;main.c: 1036: if(getAdOriginalCh14Value() <= 1000)
  2404  02CE  118A  242F  118A   	fcall	_getAdOriginalCh14Value
  2405  02D1  3003               	movlw	3
  2406  02D2  0257               	subwf	?_getAdOriginalCh14Value+1,w
  2407  02D3  30E9               	movlw	233
  2408  02D4  1903               	skipnz
  2409  02D5  0256               	subwf	?_getAdOriginalCh14Value,w
  2410  02D6  1803               	skipnc
  2411  02D7  2ADB               	goto	l4674
  2412                           
  2413                           ;main.c: 1037: {
  2414                           ;main.c: 1038: ucTimer1s++;
  2415  02D8  1683               	bsf	3,5	;RP0=1, select bank1
  2416  02D9  0ABB               	incf	main@cTimer1s_810^(0+128),f
  2417                           
  2418                           ;main.c: 1039: }
  2419  02DA  2ADD               	goto	l4676
  2420  02DB                     l4674:	
  2421                           
  2422                           ;main.c: 1040: else
  2423                           ;main.c: 1041: ucTimer1s = 0;
  2424  02DB  1683               	bsf	3,5	;RP0=1, select bank1
  2425  02DC  01BB               	clrf	main@cTimer1s_810^(0+128)
  2426  02DD                     l4676:	
  2427                           
  2428                           ;main.c: 1043: if(ucTimer1s >= 10)
  2429  02DD  300A               	movlw	10
  2430  02DE  023B               	subwf	main@cTimer1s_810^(0+128),w
  2431  02DF  1C03               	skipc
  2432  02E0  2840               	goto	l4220
  2433                           
  2434                           ;main.c: 1044: {
  2435                           ;main.c: 1045: enumInteralStep = INTERNAL_THIRD_STEP;
  2436  02E1  3002               	movlw	2
  2437  02E2  00BD               	movwf	main@enumInteralStep^(0+128)
  2438                           
  2439                           ;main.c: 1046: ucTimer1s = 0;
  2440  02E3  01BB               	clrf	main@cTimer1s_810^(0+128)
  2441  02E4  2840               	goto	l4220
  2442  02E5                     l4682:	
  2443                           
  2444                           ;main.c: 1052: {
  2445                           ;main.c: 1053: static unsigned char ucTimerP3s = 0;
  2446                           ;main.c: 1055: if(getAdOriginalCh14Value() >= 1950)
  2447  02E5  118A  242F  118A   	fcall	_getAdOriginalCh14Value
  2448  02E8  3007               	movlw	7
  2449  02E9  0257               	subwf	?_getAdOriginalCh14Value+1,w
  2450  02EA  309E               	movlw	158
  2451  02EB  1903               	skipnz
  2452  02EC  0256               	subwf	?_getAdOriginalCh14Value,w
  2453  02ED  1C03               	skipc
  2454  02EE  2AF2               	goto	l4686
  2455                           
  2456                           ;main.c: 1056: {
  2457                           ;main.c: 1057: ucTimerP3s++;
  2458  02EF  1683               	bsf	3,5	;RP0=1, select bank1
  2459  02F0  0ABF               	incf	main@ucTimerP3s^(0+128),f
  2460                           
  2461                           ;main.c: 1058: }
  2462  02F1  2AF4               	goto	l4688
  2463  02F2                     l4686:	
  2464                           
  2465                           ;main.c: 1059: else
  2466                           ;main.c: 1060: ucTimerP3s = 0;
  2467  02F2  1683               	bsf	3,5	;RP0=1, select bank1
  2468  02F3  01BF               	clrf	main@ucTimerP3s^(0+128)
  2469  02F4                     l4688:	
  2470                           
  2471                           ;main.c: 1062: if(ucTimerP3s >= 3)
  2472  02F4  3003               	movlw	3
  2473  02F5  023F               	subwf	main@ucTimerP3s^(0+128),w
  2474  02F6  1C03               	skipc
  2475  02F7  2840               	goto	l4220
  2476                           
  2477                           ;main.c: 1063: {
  2478                           ;main.c: 1064: enumInteralStep = INTERNAL_FIRST_STEP;
  2479  02F8  01BD               	clrf	main@enumInteralStep^(0+128)
  2480                           
  2481                           ;main.c: 1065: ucTimerP3s = 0;
  2482  02F9  01BF               	clrf	main@ucTimerP3s^(0+128)
  2483                           
  2484                           ;main.c: 1066: clearAllTimer();
  2485  02FA  118A  25C2  118A   	fcall	_clearAllTimer
  2486                           
  2487                           ;main.c: 1068: DACR0=0x0F;
  2488  02FD  300F               	movlw	15
  2489  02FE  0088               	movwf	8	;volatile
  2490                           
  2491                           ;main.c: 1069: initPin();
  2492  02FF  118A  25EB  118A   	fcall	_initPin
  2493                           
  2494                           ;main.c: 1072: enumMainLoopStep = MAIN_LOOP_STEP_INIT;
  2495  0302  1283               	bcf	3,5	;RP0=0, select bank0
  2496  0303  1303               	bcf	3,6	;RP1=0, select bank0
  2497  0304  01D9               	clrf	main@enumMainLoopStep
  2498  0305  2840               	goto	l4220
  2499  0306                     l4702:	
  2500  0306  1683               	bsf	3,5	;RP0=1, select bank1
  2501  0307  083D               	movf	main@enumInteralStep^(0+128),w
  2502                           
  2503                           ; Switch size 1, requested type "space"
  2504                           ; Number of cases is 3, Range of values is 0 to 2
  2505                           ; switch strategies available:
  2506                           ; Name         Instructions Cycles
  2507                           ; simple_byte           10     6 (average)
  2508                           ; direct_byte           13     7 (fixed)
  2509                           ; jumptable            260     6 (fixed)
  2510                           ; rangetable             7     6 (fixed)
  2511                           ; spacedrange           12     9 (fixed)
  2512                           ; locatedrange           3     3 (fixed)
  2513                           ;	Chosen strategy is simple_byte
  2514  0308  3A00               	xorlw	0	; case 0
  2515  0309  1903               	skipnz
  2516  030A  2ABC               	goto	l914
  2517  030B  3A01               	xorlw	1	; case 1
  2518  030C  1903               	skipnz
  2519  030D  2ACE               	goto	l4670
  2520  030E  3A03               	xorlw	3	; case 2
  2521  030F  1903               	skipnz
  2522  0310  2AE5               	goto	l4682
  2523  0311  2862               	goto	l706
  2524  0312                     l4706:	
  2525  0312  1283               	bcf	3,5	;RP0=0, select bank0
  2526  0313  0859               	movf	main@enumMainLoopStep,w
  2527                           
  2528                           ; Switch size 1, requested type "space"
  2529                           ; Number of cases is 8, Range of values is 0 to 9
  2530                           ; switch strategies available:
  2531                           ; Name         Instructions Cycles
  2532                           ; simple_byte           25    13 (average)
  2533                           ; direct_byte           27     7 (fixed)
  2534                           ; jumptable            260     6 (fixed)
  2535                           ; rangetable            14     6 (fixed)
  2536                           ; spacedrange           26     9 (fixed)
  2537                           ; locatedrange          10     3 (fixed)
  2538                           ;	Chosen strategy is simple_byte
  2539  0314  3A00               	xorlw	0	; case 0
  2540  0315  1903               	skipnz
  2541  0316  284E               	goto	l4228
  2542  0317  3A01               	xorlw	1	; case 1
  2543  0318  1903               	skipnz
  2544  0319  2863               	goto	l4240
  2545  031A  3A03               	xorlw	3	; case 2
  2546  031B  1903               	skipnz
  2547  031C  2879               	goto	l715
  2548  031D  3A01               	xorlw	1	; case 3
  2549  031E  1903               	skipnz
  2550  031F  2883               	goto	l4260
  2551  0320  3A07               	xorlw	7	; case 4
  2552  0321  1903               	skipnz
  2553  0322  28A9               	goto	l4284
  2554  0323  3A01               	xorlw	1	; case 5
  2555  0324  1903               	skipnz
  2556  0325  28B1               	goto	l4288
  2557  0326  3A0D               	xorlw	13	; case 8
  2558  0327  1903               	skipnz
  2559  0328  2AB0               	goto	l4668
  2560  0329  3A01               	xorlw	1	; case 9
  2561  032A  1903               	skipnz
  2562  032B  2B06               	goto	l4702
  2563  032C  2862               	goto	l706
  2564  032D  118A  2811         	ljmp	start
  2565  032F                     __end_of_main:	
  2566                           
  2567                           	psect	swtext1
  2568  0600                     __pswtext1:	
  2569  0600                     S4924:	
  2570  0600  118A  28F7         	ljmp	l759
  2571  0602  118A  28FA         	ljmp	l4316
  2572  0604  118A  2903         	ljmp	l4326
  2573  0606  118A  2909         	ljmp	l4336
  2574  0608  118A  290F         	ljmp	l4346
  2575  060A  118A  2915         	ljmp	l4356
  2576  060C  118A  291F         	ljmp	l4366
  2577                           
  2578                           	psect	swtext2
  2579  060E                     __pswtext2:	
  2580  060E                     S4926:	
  2581  060E  118A  2933         	ljmp	l787
  2582  0610  118A  2936         	ljmp	l4380
  2583  0612  118A  293F         	ljmp	l4390
  2584  0614  118A  2945         	ljmp	l4400
  2585  0616  118A  294B         	ljmp	l4410
  2586  0618  118A  2951         	ljmp	l4420
  2587  061A  118A  295A         	ljmp	l4430
  2588                           
  2589                           	psect	swtext3
  2590  0638                     __pswtext3:	
  2591  0638                     S4928:	
  2592  0638  118A  296D         	ljmp	l814
  2593  063A  118A  2971         	ljmp	l4444
  2594  063C  118A  297A         	ljmp	l4454
  2595  063E  118A  2980         	ljmp	l4464
  2596  0640  118A  2986         	ljmp	l4474
  2597  0642  118A  298E         	ljmp	l4484
  2598                           
  2599                           	psect	text778
  2600  04EA                     __ptext778:	
  2601 ;; =============== function _main ends ============
  2602                           
  2603                           
  2604 ;; *************** function _process_AD_Converter_Value *****************
  2605 ;; Defined at:
  2606 ;;		line 249 in file "C:\190604\AK7030-OTP\common.c"
  2607 ;; Parameters:    Size  Location     Type
  2608 ;;		None
  2609 ;; Auto vars:     Size  Location     Type
  2610 ;;		None
  2611 ;; Return value:  Size  Location     Type
  2612 ;;		None               void
  2613 ;; Registers used:
  2614 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2615 ;; Tracked objects:
  2616 ;;		On entry : 60/20
  2617 ;;		On exit  : 40/0
  2618 ;;		Unchanged: FFE9F/0
  2619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2620 ;;      Params:         0       0       0       0       0
  2621 ;;      Locals:         0       0       0       0       0
  2622 ;;      Temps:          0       0       0       0       0
  2623 ;;      Totals:         0       0       0       0       0
  2624 ;;Total ram usage:        0 bytes
  2625 ;; Hardware stack levels used:    1
  2626 ;; Hardware stack levels required when called:    4
  2627 ;; This function calls:
  2628 ;;		_getAD_ConvertFlag
  2629 ;;		_setAD_ConvertFlag
  2630 ;;		_AD_Sample
  2631 ;;		_adc_test_init
  2632 ;;		_setAdcSampleChannel
  2633 ;;		_adc_start
  2634 ;; This function is called by:
  2635 ;;		_main
  2636 ;; This function uses a non-reentrant model
  2637 ;;
  2638  04EA                     _process_AD_Converter_Value:	
  2639                           
  2640                           ;common.c: 199: return adc_convert_flag;
  2641                           
  2642                           ; Regs used in _getAD_ConvertFlag: [wreg]
  2643                           
  2644                           ;common.c: 250: if(getAD_ConvertFlag())
  2645                           
  2646                           ; Regs used in _process_AD_Converter_Value: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2647  04EA  0839               	movf	_adc_convert_flag^(0+128),w
  2648  04EB  3A00               	xorlw	0
  2649  04EC  1903               	skipnz
  2650  04ED  0008               	return
  2651                           
  2652                           ;common.c: 251: {
  2653                           ;common.c: 252: setAD_ConvertFlag(0);
  2654  04EE  3000               	movlw	0
  2655  04EF  2522  118A         	fcall	_setAD_ConvertFlag
  2656                           
  2657                           ;common.c: 253: AD_Sample();
  2658  04F1  2527  118A         	fcall	_AD_Sample
  2659                           
  2660                           ;common.c: 254: if(4 == sampleChannelSelect)
  2661  04F3  086E               	movf	_sampleChannelSelect,w
  2662  04F4  3A04               	xorlw	4
  2663  04F5  1D03               	skipz
  2664  04F6  2CFB               	goto	l4190
  2665                           
  2666                           ;common.c: 255: adc_test_init(4,3);
  2667  04F7  3003               	movlw	3
  2668  04F8  00A0               	movwf	?_adc_test_init
  2669  04F9  3004               	movlw	4
  2670  04FA  2D04               	goto	L11
  2671  04FB                     l4190:	
  2672                           
  2673                           ;common.c: 256: else if(1 == sampleChannelSelect)
  2674  04FB  0B6E               	decfsz	_sampleChannelSelect,w
  2675  04FC  2D01               	goto	l4194
  2676                           
  2677                           ;common.c: 257: adc_test_init(1,3);
  2678  04FD  3003               	movlw	3
  2679  04FE  00A0               	movwf	?_adc_test_init
  2680  04FF  3001               	movlw	1
  2681  0500  2D04               	goto	L11
  2682  0501                     l4194:	
  2683                           
  2684                           ;common.c: 258: else
  2685                           ;common.c: 259: adc_test_init(14,3);
  2686  0501  3003               	movlw	3
  2687  0502  00A0               	movwf	?_adc_test_init
  2688  0503  300E               	movlw	14
  2689  0504                     L11:	
  2690  0504  250B  118A         	fcall	_adc_test_init
  2691                           
  2692                           ;common.c: 260: setAdcSampleChannel(sampleChannelSelect);
  2693  0506  1283               	bcf	3,5	;RP0=0, select bank0
  2694  0507  086E               	movf	_sampleChannelSelect,w
  2695  0508  259B  118A         	fcall	_setAdcSampleChannel
  2696                           
  2697                           ;common.c: 261: adc_start();
  2698  050A  2D98               	ljmp	l3898
  2699  050B                     __end_of_process_AD_Converter_Value:	
  2700  050B                     __ptext802:	
  2701 ;; =============== function _dac_init ends ============
  2702                           
  2703                           
  2704 ;; *************** function _adc_test_init *****************
  2705 ;; Defined at:
  2706 ;;		line 85 in file "C:\190604\AK7030-OTP\periph.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;  channel         1    wreg     unsigned char 
  2709 ;;  ref             1    0[BANK0 ] unsigned char 
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;  channel         1    2[BANK0 ] unsigned char 
  2712 ;; Return value:  Size  Location     Type
  2713 ;;		None               void
  2714 ;; Registers used:
  2715 ;;		wreg, status,2, status,0
  2716 ;; Tracked objects:
  2717 ;;		On entry : 60/0
  2718 ;;		On exit  : 60/20
  2719 ;;		Unchanged: FFF9F/0
  2720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2721 ;;      Params:         0       1       0       0       0
  2722 ;;      Locals:         0       1       0       0       0
  2723 ;;      Temps:          0       1       0       0       0
  2724 ;;      Totals:         0       3       0       0       0
  2725 ;;Total ram usage:        3 bytes
  2726 ;; Hardware stack levels used:    1
  2727 ;; Hardware stack levels required when called:    2
  2728 ;; This function calls:
  2729 ;;		Nothing
  2730 ;; This function is called by:
  2731 ;;		_main
  2732 ;;		_process_AD_Converter_Value
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735  050B                     _adc_test_init:	
  2736                           
  2737                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  2738                           ;adc_test_init@channel stored from wreg
  2739  050B  00A2               	movwf	adc_test_init@channel
  2740                           
  2741                           ;periph.c: 86: ADCON0 = 0x00;
  2742  050C  019F               	clrf	31	;volatile
  2743                           
  2744                           ;periph.c: 87: ADCON0|=channel<<2;
  2745  050D  00A1               	movwf	??_adc_test_init
  2746  050E  1003               	clrc
  2747  050F  0DA1               	rlf	??_adc_test_init,f
  2748  0510  1003               	clrc
  2749  0511  0D21               	rlf	??_adc_test_init,w
  2750  0512  049F               	iorwf	31,f	;volatile
  2751                           
  2752                           ;periph.c: 88: ADCON1|=ref<<6;
  2753  0513  0820               	movf	adc_test_init@ref,w
  2754  0514  00A1               	movwf	??_adc_test_init
  2755  0515  0CA1               	rrf	??_adc_test_init,f
  2756  0516  0CA1               	rrf	??_adc_test_init,f
  2757  0517  0C21               	rrf	??_adc_test_init,w
  2758  0518  39C0               	andlw	192
  2759  0519  1683               	bsf	3,5	;RP0=1, select bank1
  2760  051A  049F               	iorwf	31,f	;volatile
  2761                           
  2762                           ;periph.c: 89: ADON=1;
  2763  051B  1283               	bcf	3,5	;RP0=0, select bank0
  2764  051C  141F               	bsf	31,0
  2765                           
  2766                           ;periph.c: 90: ADIE=1;
  2767  051D  1683               	bsf	3,5	;RP0=1, select bank1
  2768  051E  150D               	bsf	13,2
  2769  051F  0008               	return
  2770  0520                     __end_of_adc_test_init:	
  2771  0520                     __ptext788:	
  2772 ;; =============== function _setAD_ConvertFlag ends ============
  2773                           
  2774                           
  2775 ;; *************** function _getAD_ConvertFlag *****************
  2776 ;; Defined at:
  2777 ;;		line 198 in file "C:\190604\AK7030-OTP\common.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;		None
  2780 ;; Auto vars:     Size  Location     Type
  2781 ;;		None
  2782 ;; Return value:  Size  Location     Type
  2783 ;;                  1    wreg      unsigned char 
  2784 ;; Registers used:
  2785 ;;		wreg
  2786 ;; Tracked objects:
  2787 ;;		On entry : 60/20
  2788 ;;		On exit  : 60/20
  2789 ;;		Unchanged: FFF9F/0
  2790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2791 ;;      Params:         0       0       0       0       0
  2792 ;;      Locals:         0       0       0       0       0
  2793 ;;      Temps:          0       0       0       0       0
  2794 ;;      Totals:         0       0       0       0       0
  2795 ;;Total ram usage:        0 bytes
  2796 ;; Hardware stack levels used:    1
  2797 ;; Hardware stack levels required when called:    2
  2798 ;; This function calls:
  2799 ;;		Nothing
  2800 ;; This function is called by:
  2801 ;;		_process_AD_Converter_Value
  2802 ;; This function uses a non-reentrant model
  2803 ;;
  2804  0520                     _getAD_ConvertFlag:	
  2805                           
  2806                           ;common.c: 199: return adc_convert_flag;
  2807                           
  2808                           ; Regs used in _getAD_ConvertFlag: [wreg]
  2809  0520  0839               	movf	_adc_convert_flag^(0+128),w
  2810  0521  0008               	return
  2811  0522                     __end_of_getAD_ConvertFlag:	
  2812  0522                     __ptext787:	
  2813 ;; =============== function _getAdOriginalValue ends ============
  2814                           
  2815                           
  2816 ;; *************** function _setAD_ConvertFlag *****************
  2817 ;; Defined at:
  2818 ;;		line 204 in file "C:\190604\AK7030-OTP\common.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;  flag            1    wreg     unsigned char 
  2821 ;; Auto vars:     Size  Location     Type
  2822 ;;  flag            1    0[BANK0 ] unsigned char 
  2823 ;; Return value:  Size  Location     Type
  2824 ;;		None               void
  2825 ;; Registers used:
  2826 ;;		wreg
  2827 ;; Tracked objects:
  2828 ;;		On entry : 60/20
  2829 ;;		On exit  : 60/20
  2830 ;;		Unchanged: FFF9F/0
  2831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2832 ;;      Params:         0       0       0       0       0
  2833 ;;      Locals:         0       1       0       0       0
  2834 ;;      Temps:          0       0       0       0       0
  2835 ;;      Totals:         0       1       0       0       0
  2836 ;;Total ram usage:        1 bytes
  2837 ;; Hardware stack levels used:    1
  2838 ;; Hardware stack levels required when called:    2
  2839 ;; This function calls:
  2840 ;;		Nothing
  2841 ;; This function is called by:
  2842 ;;		_process_AD_Converter_Value
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845  0522                     _setAD_ConvertFlag:	
  2846                           
  2847                           ; Regs used in _setAD_ConvertFlag: [wreg]
  2848                           ;setAD_ConvertFlag@flag stored from wreg
  2849  0522  1283               	bcf	3,5	;RP0=0, select bank0
  2850  0523  00A0               	movwf	setAD_ConvertFlag@flag
  2851                           
  2852                           ;common.c: 205: adc_convert_flag = flag;
  2853  0524  1683               	bsf	3,5	;RP0=1, select bank1
  2854  0525  00B9               	movwf	_adc_convert_flag^(0+128)
  2855  0526  0008               	return
  2856  0527                     __end_of_setAD_ConvertFlag:	
  2857  0527                     __ptext780:	
  2858 ;; =============== function _clearPinPortAndTimer ends ============
  2859                           
  2860                           
  2861 ;; *************** function _AD_Sample *****************
  2862 ;; Defined at:
  2863 ;;		line 275 in file "C:\190604\AK7030-OTP\common.c"
  2864 ;; Parameters:    Size  Location     Type
  2865 ;;		None
  2866 ;; Auto vars:     Size  Location     Type
  2867 ;;  index           1    4[BANK0 ] unsigned char 
  2868 ;; Return value:  Size  Location     Type
  2869 ;;		None               void
  2870 ;; Registers used:
  2871 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2872 ;; Tracked objects:
  2873 ;;		On entry : 60/20
  2874 ;;		On exit  : 60/0
  2875 ;;		Unchanged: FFE9F/0
  2876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2877 ;;      Params:         0       0       0       0       0
  2878 ;;      Locals:         0       1       0       0       0
  2879 ;;      Temps:          0       2       0       0       0
  2880 ;;      Totals:         0       3       0       0       0
  2881 ;;Total ram usage:        3 bytes
  2882 ;; Hardware stack levels used:    1
  2883 ;; Hardware stack levels required when called:    3
  2884 ;; This function calls:
  2885 ;;		_getAdOriginalValue
  2886 ;; This function is called by:
  2887 ;;		_process_AD_Converter_Value
  2888 ;; This function uses a non-reentrant model
  2889 ;;
  2890  0527                     _AD_Sample:	
  2891                           
  2892                           ;common.c: 276: if(sampleTimes < 6)
  2893                           
  2894                           ; Regs used in _AD_Sample: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2895  0527  3006               	movlw	6
  2896  0528  1283               	bcf	3,5	;RP0=0, select bank0
  2897  0529  0258               	subwf	_sampleTimes,w
  2898  052A  1803               	skipnc
  2899  052B  0008               	return
  2900                           
  2901                           ;common.c: 277: {
  2902                           ;common.c: 279: buffer_Sample_AD_Value[sampleTimes] = getAdOriginalValue();
  2903  052C  258F  118A         	fcall	_getAdOriginalValue
  2904  052E  1003               	clrc
  2905  052F  0D58               	rlf	_sampleTimes,w
  2906  0530  3EA0               	addlw	_buffer_Sample_AD_Value& (0+255)
  2907  0531  0084               	movwf	4
  2908  0532  0820               	movf	?_getAdOriginalValue,w
  2909  0533  1383               	bcf	3,7	;select IRP bank1
  2910  0534  0080               	movwf	0
  2911  0535  0A84               	incf	4,f
  2912  0536  0821               	movf	?_getAdOriginalValue+1,w
  2913  0537  0080               	movwf	0
  2914                           
  2915                           ;common.c: 281: if(sampleTimes == 0)
  2916  0538  08D8               	movf	_sampleTimes,f
  2917  0539  1D03               	skipz
  2918  053A  2D44               	goto	l4138
  2919                           
  2920                           ;common.c: 282: {
  2921                           ;common.c: 283: multiFilterMaxValue = buffer_Sample_AD_Value[0];
  2922  053B  1683               	bsf	3,5	;RP0=1, select bank1
  2923  053C  0821               	movf	(_buffer_Sample_AD_Value+1)^(0+128),w
  2924  053D  00AF               	movwf	(_multiFilterMaxValue+1)^(0+128)
  2925  053E  0820               	movf	_buffer_Sample_AD_Value^(0+128),w
  2926  053F  00AE               	movwf	_multiFilterMaxValue^(0+128)
  2927                           
  2928                           ;common.c: 284: multiFilterMinValue = buffer_Sample_AD_Value[0];
  2929  0540  0821               	movf	(_buffer_Sample_AD_Value+1)^(0+128),w
  2930  0541  00B1               	movwf	(_multiFilterMinValue+1)^(0+128)
  2931  0542  0820               	movf	_buffer_Sample_AD_Value^(0+128),w
  2932  0543  00B0               	movwf	_multiFilterMinValue^(0+128)
  2933  0544                     l4138:	
  2934                           
  2935                           ;common.c: 285: }
  2936                           ;common.c: 287: if(multiFilterMaxValue < buffer_Sample_AD_Value[sampleTimes])
  2937  0544  25A3  118A         	fcall	PL3	;call to abstracted procedure
  2938  0546  022F               	subwf	(_multiFilterMaxValue+1)^(0+128),w
  2939  0547  1D03               	skipz
  2940  0548  2D4D               	goto	u1205
  2941  0549  1283               	bcf	3,5	;RP0=0, select bank0
  2942  054A  0822               	movf	??_AD_Sample,w
  2943  054B  1683               	bsf	3,5	;RP0=1, select bank1
  2944  054C  022E               	subwf	_multiFilterMaxValue^(0+128),w
  2945  054D                     u1205:	
  2946  054D  1803               	skipnc
  2947  054E  2D57               	goto	l1691
  2948                           
  2949                           ;common.c: 288: {
  2950                           ;common.c: 289: multiFilterMaxValue = buffer_Sample_AD_Value[sampleTimes];
  2951  054F  1283               	bcf	3,5	;RP0=0, select bank0
  2952  0550  1003               	clrc
  2953  0551  25AF  118A         	fcall	PL9	;call to abstracted procedure
  2954  0553  00AE               	movwf	_multiFilterMaxValue^(0+128)
  2955  0554  0A84               	incf	4,f
  2956  0555  0800               	movf	0,w
  2957  0556  00AF               	movwf	(_multiFilterMaxValue+1)^(0+128)
  2958  0557                     l1691:	
  2959                           
  2960                           ;common.c: 290: }
  2961                           ;common.c: 291: if(multiFilterMinValue > buffer_Sample_AD_Value[sampleTimes])
  2962  0557  25A3  118A         	fcall	PL3	;call to abstracted procedure
  2963  0559  0831               	movf	(_multiFilterMinValue+1)^(0+128),w
  2964  055A  1283               	bcf	3,5	;RP0=0, select bank0
  2965  055B  0223               	subwf	??_AD_Sample+1,w
  2966  055C  1D03               	skipz
  2967  055D  2D62               	goto	u1215
  2968  055E  1683               	bsf	3,5	;RP0=1, select bank1
  2969  055F  0830               	movf	_multiFilterMinValue^(0+128),w
  2970  0560  1283               	bcf	3,5	;RP0=0, select bank0
  2971  0561  0222               	subwf	??_AD_Sample,w
  2972  0562                     u1215:	
  2973  0562  1803               	skipnc
  2974  0563  2D6B               	goto	l4144
  2975                           
  2976                           ;common.c: 292: {
  2977                           ;common.c: 293: multiFilterMinValue = buffer_Sample_AD_Value[sampleTimes];
  2978  0564  1003               	clrc
  2979  0565  25AF  118A         	fcall	PL9	;call to abstracted procedure
  2980  0567  00B0               	movwf	_multiFilterMinValue^(0+128)
  2981  0568  0A84               	incf	4,f
  2982  0569  0800               	movf	0,w
  2983  056A  00B1               	movwf	(_multiFilterMinValue+1)^(0+128)
  2984  056B                     l4144:	
  2985                           
  2986                           ;common.c: 298: sampleTimes++;
  2987  056B  1283               	bcf	3,5	;RP0=0, select bank0
  2988  056C  3006               	movlw	6
  2989  056D  0AD8               	incf	_sampleTimes,f
  2990                           
  2991                           ;common.c: 300: if(sampleTimes >= 6)
  2992  056E  0258               	subwf	_sampleTimes,w
  2993  056F  1C03               	skipc
  2994  0570  0008               	return
  2995                           
  2996                           ;common.c: 301: {
  2997                           ;common.c: 302: sampleTimes = 0;
  2998  0571  01D8               	clrf	_sampleTimes
  2999                           
  3000                           ;common.c: 305: {
  3001                           ;common.c: 307: sampleCH14Value = ((multiFilterSumValue - multiFilterMaxValue - multiFil
      +                          terMinValue))>> 2;
  3002  0572  086E               	movf	_sampleChannelSelect,w
  3003  0573  3A0E               	xorlw	14
  3004  0574  1D03               	skipz
  3005  0575  2D78               	goto	l4154
  3006                           
  3007                           ;common.c: 308: sampleChannelSelect = 4;
  3008  0576  3004               	movlw	4
  3009  0577  2D80               	goto	L12
  3010  0578                     l4154:	
  3011                           ;common.c: 309: }
  3012                           
  3013                           
  3014                           ;common.c: 311: {
  3015                           ;common.c: 312: sampleCH4Value = ((multiFilterSumValue - multiFilterMaxValue - multiFilt
      +                          erMinValue))>> 2;
  3016  0578  086E               	movf	_sampleChannelSelect,w
  3017  0579  3A04               	xorlw	4
  3018  057A  1D03               	skipz
  3019  057B  2D7F               	goto	l4160
  3020                           
  3021                           ;common.c: 313: sampleChannelSelect = 1;
  3022  057C  01EE               	clrf	_sampleChannelSelect
  3023  057D  0AEE               	incf	_sampleChannelSelect,f
  3024                           
  3025                           ;common.c: 314: }
  3026  057E  2D81               	goto	l4164
  3027  057F                     l4160:	
  3028                           
  3029                           ;common.c: 318: sampleChannelSelect = 14;
  3030  057F  300E               	movlw	14
  3031  0580                     L12:	
  3032  0580  00EE               	movwf	_sampleChannelSelect
  3033  0581                     l4164:	
  3034                           ;common.c: 319: }
  3035                           
  3036                           
  3037                           ;common.c: 324: }
  3038                           ;common.c: 326: for(unsigned char index = 0; index < 6;index++)
  3039  0581  01A4               	clrf	AD_Sample@index
  3040  0582                     l4170:	
  3041                           
  3042                           ;common.c: 327: buffer_Sample_AD_Value[index] = 0;
  3043  0582  1003               	clrc
  3044  0583  0D24               	rlf	AD_Sample@index,w
  3045  0584  3EA0               	addlw	_buffer_Sample_AD_Value& (0+255)
  3046  0585  0084               	movwf	4
  3047  0586  3006               	movlw	6
  3048  0587  0180               	clrf	0
  3049  0588  0A84               	incf	4,f
  3050  0589  0180               	clrf	0
  3051  058A  0AA4               	incf	AD_Sample@index,f
  3052  058B  0224               	subwf	AD_Sample@index,w
  3053  058C  1803               	btfsc	3,0
  3054  058D  0008               	return
  3055  058E  2D82               	goto	l4170
  3056  058F                     __end_of_AD_Sample:	
  3057  058F                     __ptext786:	
  3058 ;; =============== function _setAdcSampleChannel ends ============
  3059                           
  3060                           
  3061 ;; *************** function _getAdOriginalValue *****************
  3062 ;; Defined at:
  3063 ;;		line 210 in file "C:\190604\AK7030-OTP\common.c"
  3064 ;; Parameters:    Size  Location     Type
  3065 ;;		None
  3066 ;; Auto vars:     Size  Location     Type
  3067 ;;		None
  3068 ;; Return value:  Size  Location     Type
  3069 ;;                  2    0[BANK0 ] unsigned int 
  3070 ;; Registers used:
  3071 ;;		wreg
  3072 ;; Tracked objects:
  3073 ;;		On entry : 60/0
  3074 ;;		On exit  : 60/0
  3075 ;;		Unchanged: FFF9F/0
  3076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3077 ;;      Params:         0       2       0       0       0
  3078 ;;      Locals:         0       0       0       0       0
  3079 ;;      Temps:          0       0       0       0       0
  3080 ;;      Totals:         0       2       0       0       0
  3081 ;;Total ram usage:        2 bytes
  3082 ;; Hardware stack levels used:    1
  3083 ;; Hardware stack levels required when called:    2
  3084 ;; This function calls:
  3085 ;;		Nothing
  3086 ;; This function is called by:
  3087 ;;		_AD_Sample
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090  058F                     _getAdOriginalValue:	
  3091                           
  3092                           ;common.c: 211: return adc_original_value;
  3093                           
  3094                           ; Regs used in _getAdOriginalValue: [wreg]
  3095  058F  1683               	bsf	3,5	;RP0=1, select bank1
  3096  0590  082D               	movf	(_adc_original_value+1)^(0+128),w
  3097  0591  1283               	bcf	3,5	;RP0=0, select bank0
  3098  0592  00A1               	movwf	?_getAdOriginalValue+1
  3099  0593  1683               	bsf	3,5	;RP0=1, select bank1
  3100  0594  082C               	movf	_adc_original_value^(0+128),w
  3101  0595  1283               	bcf	3,5	;RP0=0, select bank0
  3102  0596  00A0               	movwf	?_getAdOriginalValue
  3103  0597  0008               	return
  3104  0598                     __end_of_getAdOriginalValue:	
  3105  0598                     __ptext798:	
  3106 ;; =============== function _isPermitSampleTime ends ============
  3107                           
  3108                           
  3109 ;; *************** function _adc_start *****************
  3110 ;; Defined at:
  3111 ;;		line 100 in file "C:\190604\AK7030-OTP\periph.c"
  3112 ;; Parameters:    Size  Location     Type
  3113 ;;		None
  3114 ;; Auto vars:     Size  Location     Type
  3115 ;;		None
  3116 ;; Return value:  Size  Location     Type
  3117 ;;		None               void
  3118 ;; Registers used:
  3119 ;;		None
  3120 ;; Tracked objects:
  3121 ;;		On entry : 40/20
  3122 ;;		On exit  : 60/0
  3123 ;;		Unchanged: FFF9F/0
  3124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3125 ;;      Params:         0       0       0       0       0
  3126 ;;      Locals:         0       0       0       0       0
  3127 ;;      Temps:          0       0       0       0       0
  3128 ;;      Totals:         0       0       0       0       0
  3129 ;;Total ram usage:        0 bytes
  3130 ;; Hardware stack levels used:    1
  3131 ;; Hardware stack levels required when called:    2
  3132 ;; This function calls:
  3133 ;;		Nothing
  3134 ;; This function is called by:
  3135 ;;		_main
  3136 ;;		_process_AD_Converter_Value
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139  0598                     _adc_start:	
  3140  0598                     l3898:	
  3141                           ; Regs used in _adc_start: []
  3142                           
  3143                           
  3144                           ;periph.c: 101: GO=1;
  3145  0598  1283               	bcf	3,5	;RP0=0, select bank0
  3146  0599  149F               	bsf	31,1
  3147  059A  0008               	return
  3148  059B                     __end_of_adc_start:	
  3149  059B                     __ptext785:	
  3150 ;; =============== function _clearAllTimer ends ============
  3151                           
  3152                           
  3153 ;; *************** function _setAdcSampleChannel *****************
  3154 ;; Defined at:
  3155 ;;		line 95 in file "C:\190604\AK7030-OTP\periph.c"
  3156 ;; Parameters:    Size  Location     Type
  3157 ;;  ucChannel       1    wreg     unsigned char 
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;  ucChannel       1    1[BANK0 ] unsigned char 
  3160 ;; Return value:  Size  Location     Type
  3161 ;;		None               void
  3162 ;; Registers used:
  3163 ;;		wreg, status,2, status,0
  3164 ;; Tracked objects:
  3165 ;;		On entry : 60/0
  3166 ;;		On exit  : 60/0
  3167 ;;		Unchanged: FFF9F/0
  3168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3169 ;;      Params:         0       0       0       0       0
  3170 ;;      Locals:         0       1       0       0       0
  3171 ;;      Temps:          0       1       0       0       0
  3172 ;;      Totals:         0       2       0       0       0
  3173 ;;Total ram usage:        2 bytes
  3174 ;; Hardware stack levels used:    1
  3175 ;; Hardware stack levels required when called:    2
  3176 ;; This function calls:
  3177 ;;		Nothing
  3178 ;; This function is called by:
  3179 ;;		_process_AD_Converter_Value
  3180 ;; This function uses a non-reentrant model
  3181 ;;
  3182  059B                     _setAdcSampleChannel:	
  3183                           
  3184                           ; Regs used in _setAdcSampleChannel: [wreg+status,2+status,0]
  3185                           ;setAdcSampleChannel@ucChannel stored from wreg
  3186  059B  00A1               	movwf	setAdcSampleChannel@ucChannel
  3187                           
  3188                           ;periph.c: 96: ADCON0|=ucChannel<<2;
  3189  059C  00A0               	movwf	??_setAdcSampleChannel
  3190  059D  1003               	clrc
  3191  059E  0DA0               	rlf	??_setAdcSampleChannel,f
  3192  059F  1003               	clrc
  3193  05A0  0D20               	rlf	??_setAdcSampleChannel,w
  3194  05A1  049F               	iorwf	31,f	;volatile
  3195  05A2  0008               	return
  3196  05A3                     __end_of_setAdcSampleChannel:	
  3197  05A3                     PL3:	
  3198  05A3  1283               	bcf	3,5	;RP0=0, select bank0
  3199  05A4  1003               	clrc
  3200  05A5  0D58               	rlf	_sampleTimes,w
  3201  05A6  3EA0               	addlw	_buffer_Sample_AD_Value& (0+255)
  3202  05A7  0084               	movwf	4
  3203  05A8  0800               	movf	0,w
  3204  05A9  00A2               	movwf	??_AD_Sample
  3205  05AA  0A84               	incf	4,f
  3206  05AB  0800               	movf	0,w
  3207  05AC  00A3               	movwf	??_AD_Sample+1
  3208  05AD  1683               	bsf	3,5	;RP0=1, select bank1
  3209  05AE  0008               	return
  3210  05AF                     PL9:	
  3211  05AF  0D58               	rlf	_sampleTimes,w
  3212  05B0  3EA0               	addlw	_buffer_Sample_AD_Value& (0+255)
  3213  05B1  0084               	movwf	4
  3214  05B2  0800               	movf	0,w
  3215  05B3  1683               	bsf	3,5	;RP0=1, select bank1
  3216  05B4  0008               	return
  3217                           
  3218                           	psect	text779
  3219  05B5                     __ptext779:	
  3220 ;; =============== function _process_AD_Converter_Value ends ============
  3221                           
  3222                           
  3223 ;; *************** function _clearPinPortAndTimer *****************
  3224 ;; Defined at:
  3225 ;;		line 92 in file "C:\190604\AK7030-OTP\main.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;		None
  3228 ;; Auto vars:     Size  Location     Type
  3229 ;;		None
  3230 ;; Return value:  Size  Location     Type
  3231 ;;		None               void
  3232 ;; Registers used:
  3233 ;;		status,2, status,0, pclath, cstack
  3234 ;; Tracked objects:
  3235 ;;		On entry : 140/0
  3236 ;;		On exit  : 160/20
  3237 ;;		Unchanged: FFE9F/0
  3238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3239 ;;      Params:         0       0       0       0       0
  3240 ;;      Locals:         0       0       0       0       0
  3241 ;;      Temps:          0       0       0       0       0
  3242 ;;      Totals:         0       0       0       0       0
  3243 ;;Total ram usage:        0 bytes
  3244 ;; Hardware stack levels used:    1
  3245 ;; Hardware stack levels required when called:    4
  3246 ;; This function calls:
  3247 ;;		_clearAllTimer
  3248 ;; This function is called by:
  3249 ;;		_main
  3250 ;; This function uses a non-reentrant model
  3251 ;;
  3252  05B5                     _clearPinPortAndTimer:	
  3253                           
  3254                           ;main.c: 93: PB0 = 0;
  3255                           
  3256                           ; Regs used in _clearPinPortAndTimer: [status,2+status,0+pclath+cstack]
  3257  05B5  1283               	bcf	3,5	;RP0=0, select bank0
  3258  05B6  1006               	bcf	6,0
  3259                           
  3260                           ;main.c: 94: PA0 = 0;
  3261  05B7  1005               	bcf	5,0
  3262                           
  3263                           ;main.c: 95: PA1 = 0;
  3264  05B8  1085               	bcf	5,1
  3265                           
  3266                           ;main.c: 96: PA2 = 0;
  3267  05B9  1105               	bcf	5,2
  3268                           
  3269                           ;main.c: 97: PA3 = 0;
  3270  05BA  1185               	bcf	5,3
  3271                           
  3272                           ;main.c: 98: PAOD7 = 0;
  3273  05BB  1683               	bsf	3,5	;RP0=1, select bank3
  3274  05BC  1703               	bsf	3,6	;RP1=1, select bank3
  3275  05BD  1387               	bcf	7,7
  3276                           
  3277                           ;main.c: 99: PA7 = 0;
  3278  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  3279  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  3280  05C0  1385               	bcf	5,7
  3281                           
  3282                           ;main.c: 100: clearAllTimer();
  3283  05C1  2DC2               	ljmp	l4116
  3284  05C2                     __end_of_clearPinPortAndTimer:	
  3285  05C2                     __ptext784:	
  3286 ;; =============== function _getAdOriginalCh14Value ends ============
  3287                           
  3288                           
  3289 ;; *************** function _clearAllTimer *****************
  3290 ;; Defined at:
  3291 ;;		line 83 in file "C:\190604\AK7030-OTP\main.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;		None
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;		None
  3296 ;; Return value:  Size  Location     Type
  3297 ;;		None               void
  3298 ;; Registers used:
  3299 ;;		status,2, status,0, pclath, cstack
  3300 ;; Tracked objects:
  3301 ;;		On entry : 140/20
  3302 ;;		On exit  : 160/20
  3303 ;;		Unchanged: FFE9F/0
  3304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3305 ;;      Params:         0       0       0       0       0
  3306 ;;      Locals:         0       0       0       0       0
  3307 ;;      Temps:          0       0       0       0       0
  3308 ;;      Totals:         0       0       0       0       0
  3309 ;;Total ram usage:        0 bytes
  3310 ;; Hardware stack levels used:    1
  3311 ;; Hardware stack levels required when called:    3
  3312 ;; This function calls:
  3313 ;;		_clearTwelveHoursTimer
  3314 ;;		_clearThreeHoursTimer
  3315 ;;		_clearTwentySecondsTimer
  3316 ;; This function is called by:
  3317 ;;		_clearPinPortAndTimer
  3318 ;;		_main
  3319 ;; This function uses a non-reentrant model
  3320 ;;
  3321  05C2                     _clearAllTimer:	
  3322  05C2                     l4116:	
  3323                           ; Regs used in _clearAllTimer: [status,2+status,0+pclath+cstack]
  3324                           
  3325                           
  3326                           ;main.c: 84: clearTwelveHoursTimer();
  3327  05C2  25C7  118A         	fcall	_clearTwelveHoursTimer
  3328                           
  3329                           ;main.c: 85: clearThreeHoursTimer();
  3330  05C4  25CB  118A         	fcall	_clearThreeHoursTimer
  3331                           
  3332                           ;main.c: 86: clearTwentySecondsTimer();
  3333  05C6  2DCF               	ljmp	l3856
  3334  05C7                     __end_of_clearAllTimer:	
  3335  05C7                     __ptext809:	
  3336 ;; =============== function _clearThreeHoursTimer ends ============
  3337                           
  3338                           
  3339 ;; *************** function _clearTwelveHoursTimer *****************
  3340 ;; Defined at:
  3341 ;;		line 363 in file "C:\190604\AK7030-OTP\common.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;		None
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;		None
  3346 ;; Return value:  Size  Location     Type
  3347 ;;		None               void
  3348 ;; Registers used:
  3349 ;;		status,2
  3350 ;; Tracked objects:
  3351 ;;		On entry : 140/20
  3352 ;;		On exit  : 160/20
  3353 ;;		Unchanged: FFE9F/0
  3354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3355 ;;      Params:         0       0       0       0       0
  3356 ;;      Locals:         0       0       0       0       0
  3357 ;;      Temps:          0       0       0       0       0
  3358 ;;      Totals:         0       0       0       0       0
  3359 ;;Total ram usage:        0 bytes
  3360 ;; Hardware stack levels used:    1
  3361 ;; Hardware stack levels required when called:    2
  3362 ;; This function calls:
  3363 ;;		Nothing
  3364 ;; This function is called by:
  3365 ;;		_clearAllTimer
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368  05C7                     _clearTwelveHoursTimer:	
  3369                           
  3370                           ;common.c: 364: uiBigTimer = 0;
  3371                           
  3372                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  3373  05C7  1683               	bsf	3,5	;RP0=1, select bank1
  3374  05C8  01B2               	clrf	_uiBigTimer^(0+128)
  3375  05C9  01B3               	clrf	(_uiBigTimer+1)^(0+128)
  3376  05CA  0008               	return
  3377  05CB                     __end_of_clearTwelveHoursTimer:	
  3378  05CB                     __ptext808:	
  3379 ;; =============== function _clearTwentySecondsTimer ends ============
  3380                           
  3381                           
  3382 ;; *************** function _clearThreeHoursTimer *****************
  3383 ;; Defined at:
  3384 ;;		line 369 in file "C:\190604\AK7030-OTP\common.c"
  3385 ;; Parameters:    Size  Location     Type
  3386 ;;		None
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;		None
  3389 ;; Return value:  Size  Location     Type
  3390 ;;		None               void
  3391 ;; Registers used:
  3392 ;;		status,2
  3393 ;; Tracked objects:
  3394 ;;		On entry : 140/0
  3395 ;;		On exit  : 160/20
  3396 ;;		Unchanged: FFE9F/0
  3397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3398 ;;      Params:         0       0       0       0       0
  3399 ;;      Locals:         0       0       0       0       0
  3400 ;;      Temps:          0       0       0       0       0
  3401 ;;      Totals:         0       0       0       0       0
  3402 ;;Total ram usage:        0 bytes
  3403 ;; Hardware stack levels used:    1
  3404 ;; Hardware stack levels required when called:    2
  3405 ;; This function calls:
  3406 ;;		Nothing
  3407 ;; This function is called by:
  3408 ;;		_clearAllTimer
  3409 ;;		_main
  3410 ;; This function uses a non-reentrant model
  3411 ;;
  3412  05CB                     _clearThreeHoursTimer:	
  3413                           
  3414                           ;common.c: 370: uiSmallTimer = 0;
  3415                           
  3416                           ; Regs used in _clearThreeHoursTimer: [status,2]
  3417  05CB  1683               	bsf	3,5	;RP0=1, select bank1
  3418  05CC  01B4               	clrf	_uiSmallTimer^(0+128)
  3419  05CD  01B5               	clrf	(_uiSmallTimer+1)^(0+128)
  3420  05CE  0008               	return
  3421  05CF                     __end_of_clearThreeHoursTimer:	
  3422  05CF                     __ptext807:	
  3423 ;; =============== function _initPin ends ============
  3424                           
  3425                           
  3426 ;; *************** function _clearTwentySecondsTimer *****************
  3427 ;; Defined at:
  3428 ;;		line 374 in file "C:\190604\AK7030-OTP\common.c"
  3429 ;; Parameters:    Size  Location     Type
  3430 ;;		None
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;		None
  3433 ;; Return value:  Size  Location     Type
  3434 ;;		None               void
  3435 ;; Registers used:
  3436 ;;		status,2
  3437 ;; Tracked objects:
  3438 ;;		On entry : 160/20
  3439 ;;		On exit  : 160/20
  3440 ;;		Unchanged: FFE9F/0
  3441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3442 ;;      Params:         0       0       0       0       0
  3443 ;;      Locals:         0       0       0       0       0
  3444 ;;      Temps:          0       0       0       0       0
  3445 ;;      Totals:         0       0       0       0       0
  3446 ;;Total ram usage:        0 bytes
  3447 ;; Hardware stack levels used:    1
  3448 ;; Hardware stack levels required when called:    2
  3449 ;; This function calls:
  3450 ;;		Nothing
  3451 ;; This function is called by:
  3452 ;;		_clearAllTimer
  3453 ;; This function uses a non-reentrant model
  3454 ;;
  3455  05CF                     _clearTwentySecondsTimer:	
  3456  05CF                     l3856:	
  3457                           ; Regs used in _clearTwentySecondsTimer: [status,2]
  3458                           
  3459                           
  3460                           ;common.c: 375: uiTwentySecondsTimer = 0;
  3461  05CF  01B6               	clrf	_uiTwentySecondsTimer^(0+128)
  3462  05D0  01B7               	clrf	(_uiTwentySecondsTimer+1)^(0+128)
  3463  05D1  0008               	return
  3464  05D2                     __end_of_clearTwentySecondsTimer:	
  3465                           
  3466                           	psect	text781
  3467  041D                     __ptext781:	
  3468 ;; =============== function _AD_Sample ends ============
  3469                           
  3470                           
  3471 ;; *************** function _getAdOriginaCh4Value *****************
  3472 ;; Defined at:
  3473 ;;		line 227 in file "C:\190604\AK7030-OTP\common.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;		None
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;		None
  3478 ;; Return value:  Size  Location     Type
  3479 ;;                  2   54[BANK0 ] unsigned int 
  3480 ;; Registers used:
  3481 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3482 ;; Tracked objects:
  3483 ;;		On entry : 60/0
  3484 ;;		On exit  : 160/0
  3485 ;;		Unchanged: FFE00/0
  3486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3487 ;;      Params:         0       2       0       0       0
  3488 ;;      Locals:         0       0       0       0       0
  3489 ;;      Temps:          0       0       0       0       0
  3490 ;;      Totals:         0       2       0       0       0
  3491 ;;Total ram usage:        2 bytes
  3492 ;; Hardware stack levels used:    1
  3493 ;; Hardware stack levels required when called:    3
  3494 ;; This function calls:
  3495 ;;		_Filter
  3496 ;; This function is called by:
  3497 ;;		_main
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500  041D                     _getAdOriginaCh4Value:	
  3501                           
  3502                           ;common.c: 229: return Filter(uiSampleChannelFourth);
  3503                           
  3504                           ; Regs used in _getAdOriginaCh4Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  3505  041D  30C2               	movlw	_uiSampleChannelFourth& (0+255)
  3506  041E  00A0               	movwf	?_Filter
  3507  041F  01A1               	clrf	?_Filter+1
  3508  0420  2438               	fcall	_Filter
  3509  0421  0821               	movf	?_Filter+1,w
  3510  0422  00D7               	movwf	?_getAdOriginaCh4Value+1
  3511  0423  0820               	movf	?_Filter,w
  3512  0424  00D6               	movwf	?_getAdOriginaCh4Value
  3513  0425  0008               	return
  3514  0426                     __end_of_getAdOriginaCh4Value:	
  3515  0426                     __ptext782:	
  3516 ;; =============== function _getAdOriginaCh4Value ends ============
  3517                           
  3518                           
  3519 ;; *************** function _getAdOriginalCh1Value *****************
  3520 ;; Defined at:
  3521 ;;		line 215 in file "C:\190604\AK7030-OTP\common.c"
  3522 ;; Parameters:    Size  Location     Type
  3523 ;;		None
  3524 ;; Auto vars:     Size  Location     Type
  3525 ;;		None
  3526 ;; Return value:  Size  Location     Type
  3527 ;;                  2   54[BANK0 ] unsigned int 
  3528 ;; Registers used:
  3529 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3530 ;; Tracked objects:
  3531 ;;		On entry : 40/0
  3532 ;;		On exit  : 160/0
  3533 ;;		Unchanged: FFE00/0
  3534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3535 ;;      Params:         0       2       0       0       0
  3536 ;;      Locals:         0       0       0       0       0
  3537 ;;      Temps:          0       0       0       0       0
  3538 ;;      Totals:         0       2       0       0       0
  3539 ;;Total ram usage:        2 bytes
  3540 ;; Hardware stack levels used:    1
  3541 ;; Hardware stack levels required when called:    3
  3542 ;; This function calls:
  3543 ;;		_Filter
  3544 ;; This function is called by:
  3545 ;;		_main
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548  0426                     _getAdOriginalCh1Value:	
  3549                           
  3550                           ;common.c: 218: return Filter(uiSampleChannelFirst);
  3551                           
  3552                           ; Regs used in _getAdOriginalCh1Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  3553  0426  3090               	movlw	_uiSampleChannelFirst& (0+255)
  3554  0427  24E5  118A         	fcall	PL10	;call to abstracted procedure
  3555  0429  2438               	fcall	_Filter
  3556  042A  0821               	movf	?_Filter+1,w
  3557  042B  00D7               	movwf	?_getAdOriginalCh1Value+1
  3558  042C  0820               	movf	?_Filter,w
  3559  042D  00D6               	movwf	?_getAdOriginalCh1Value
  3560  042E  0008               	return
  3561  042F                     __end_of_getAdOriginalCh1Value:	
  3562  042F                     __ptext783:	
  3563 ;; =============== function _getAdOriginalCh1Value ends ============
  3564                           
  3565                           
  3566 ;; *************** function _getAdOriginalCh14Value *****************
  3567 ;; Defined at:
  3568 ;;		line 238 in file "C:\190604\AK7030-OTP\common.c"
  3569 ;; Parameters:    Size  Location     Type
  3570 ;;		None
  3571 ;; Auto vars:     Size  Location     Type
  3572 ;;		None
  3573 ;; Return value:  Size  Location     Type
  3574 ;;                  2   54[BANK0 ] unsigned int 
  3575 ;; Registers used:
  3576 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3577 ;; Tracked objects:
  3578 ;;		On entry : 40/0
  3579 ;;		On exit  : 160/0
  3580 ;;		Unchanged: FFE00/0
  3581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3582 ;;      Params:         0       2       0       0       0
  3583 ;;      Locals:         0       0       0       0       0
  3584 ;;      Temps:          0       0       0       0       0
  3585 ;;      Totals:         0       2       0       0       0
  3586 ;;Total ram usage:        2 bytes
  3587 ;; Hardware stack levels used:    1
  3588 ;; Hardware stack levels required when called:    3
  3589 ;; This function calls:
  3590 ;;		_Filter
  3591 ;; This function is called by:
  3592 ;;		_main
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595  042F                     _getAdOriginalCh14Value:	
  3596                           
  3597                           ;common.c: 240: return Filter(uiSampleChannelFourteenth);
  3598                           
  3599                           ; Regs used in _getAdOriginalCh14Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  3600  042F  30B8               	movlw	_uiSampleChannelFourteenth& (0+255)
  3601  0430  24E5  118A         	fcall	PL10	;call to abstracted procedure
  3602  0432  2438               	fcall	_Filter
  3603  0433  0821               	movf	?_Filter+1,w
  3604  0434  00D7               	movwf	?_getAdOriginalCh14Value+1
  3605  0435  0820               	movf	?_Filter,w
  3606  0436  00D6               	movwf	?_getAdOriginalCh14Value
  3607  0437  0008               	return
  3608  0438                     __end_of_getAdOriginalCh14Value:	
  3609  0438                     __ptext789:	
  3610 ;; =============== function _getAD_ConvertFlag ends ============
  3611                           
  3612                           
  3613 ;; *************** function _Filter *****************
  3614 ;; Defined at:
  3615 ;;		line 49 in file "C:\190604\AK7030-OTP\common.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;  tmpValue        2    0[BANK0 ] PTR int 
  3618 ;;		 -> uiSampleChannelFourteenth(40), uiSampleChannelFourth(40), uiSampleChannelFirst(40), 
  3619 ;; Auto vars:     Size  Location     Type
  3620 ;;  cir             2   50[BANK0 ] int 
  3621 ;;  filter_buf     40    6[BANK0 ] unsigned int [20]
  3622 ;;  filter_sum      2   48[BANK0 ] unsigned int 
  3623 ;;  filter_temp     2   46[BANK0 ] unsigned int 
  3624 ;;  i               1   53[BANK0 ] unsigned char 
  3625 ;;  j               1   52[BANK0 ] unsigned char 
  3626 ;; Return value:  Size  Location     Type
  3627 ;;                  2    0[BANK0 ] unsigned int 
  3628 ;; Registers used:
  3629 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3630 ;; Tracked objects:
  3631 ;;		On entry : 60/0
  3632 ;;		On exit  : 160/0
  3633 ;;		Unchanged: FFE00/0
  3634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3635 ;;      Params:         0       2       0       0       0
  3636 ;;      Locals:         0      48       0       0       0
  3637 ;;      Temps:          0       4       0       0       0
  3638 ;;      Totals:         0      54       0       0       0
  3639 ;;Total ram usage:       54 bytes
  3640 ;; Hardware stack levels used:    1
  3641 ;; Hardware stack levels required when called:    2
  3642 ;; This function calls:
  3643 ;;		Nothing
  3644 ;; This function is called by:
  3645 ;;		_getAdOriginalCh1Value
  3646 ;;		_getAdOriginaCh4Value
  3647 ;;		_getAdOriginalCh14Value
  3648 ;; This function uses a non-reentrant model
  3649 ;;
  3650  0438                     _Filter:	
  3651                           
  3652                           ; Regs used in _Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  3653  0438  01D4               	clrf	Filter@j
  3654                           
  3655                           ;common.c: 53: unsigned int filter_temp = 0, filter_sum = 0;
  3656  0439  01CE               	clrf	Filter@filter_temp
  3657  043A  01CF               	clrf	Filter@filter_temp+1
  3658  043B  01D0               	clrf	Filter@filter_sum
  3659  043C  01D1               	clrf	Filter@filter_sum+1
  3660                           
  3661                           ;common.c: 55: unsigned int filter_buf[20];
  3662                           ;common.c: 57: for(int cir = 0;cir < 20; cir++)
  3663  043D  01D2               	clrf	Filter@cir
  3664  043E  01D3               	clrf	Filter@cir+1
  3665  043F                     l3966:	
  3666                           
  3667                           ;common.c: 58: filter_buf[cir] = *tmpValue++;
  3668  043F  1283               	bcf	3,5	;RP0=0, select bank0
  3669  0440  1303               	bcf	3,6	;RP1=0, select bank0
  3670  0441  0820               	movf	Filter@tmpValue,w
  3671  0442  0084               	movwf	4
  3672  0443  1783               	bsf	3,7
  3673  0444  1C21               	btfss	Filter@tmpValue+1,0
  3674  0445  1383               	bcf	3,7
  3675  0446  0800               	movf	0,w
  3676  0447  24D9  118A         	fcall	PL7	;call to abstracted procedure
  3677  0449  0D52               	rlf	Filter@cir,w
  3678  044A  3E26               	addlw	Filter@filter_buf& (0+255)
  3679  044B  0084               	movwf	4
  3680  044C  0822               	movf	??_Filter,w
  3681  044D  1383               	bcf	3,7	;select IRP bank0
  3682  044E  0080               	movwf	0
  3683  044F  0A84               	incf	4,f
  3684  0450  0823               	movf	??_Filter+1,w
  3685  0451  0080               	movwf	0
  3686  0452  3002               	movlw	2
  3687  0453  07A0               	addwf	Filter@tmpValue,f
  3688  0454  1803               	skipnc
  3689  0455  0AA1               	incf	Filter@tmpValue+1,f
  3690  0456  0AD2               	incf	Filter@cir,f
  3691  0457  1903               	skipnz
  3692  0458  0AD3               	incf	Filter@cir+1,f
  3693  0459  0853               	movf	Filter@cir+1,w
  3694  045A  3A80               	xorlw	128
  3695  045B  00FF               	movwf	127
  3696  045C  3080               	movlw	128
  3697  045D  027F               	subwf	127,w
  3698  045E  1D03               	skipz
  3699  045F  2C62               	goto	u985
  3700  0460  3014               	movlw	20
  3701  0461  0252               	subwf	Filter@cir,w
  3702  0462                     u985:	
  3703  0462  1C03               	skipc
  3704  0463  2C3F               	goto	l3966
  3705                           
  3706                           ;common.c: 61: for(j = 0; j < 20 - 1; j++)
  3707  0464  1283               	bcf	3,5	;RP0=0, select bank0
  3708  0465  1303               	bcf	3,6	;RP1=0, select bank0
  3709  0466  01D4               	clrf	Filter@j
  3710  0467                     l3980:	
  3711                           
  3712                           ;common.c: 62: {
  3713                           ;common.c: 63: for(i = 0; i < 20 - 1 - j; i++)
  3714  0467  01D5               	clrf	Filter@i
  3715  0468                     l3988:	
  3716  0468  01A3               	clrf	??_Filter+1
  3717  0469  0854               	movf	Filter@j,w
  3718  046A  3C13               	sublw	19
  3719  046B  00A2               	movwf	??_Filter
  3720  046C  1C03               	skipc
  3721  046D  03A3               	decf	??_Filter+1,f
  3722  046E  0823               	movf	??_Filter+1,w
  3723  046F  3A80               	xorlw	128
  3724  0470  3C80               	sublw	128
  3725  0471  1D03               	skipz
  3726  0472  2C75               	goto	u1005
  3727  0473  0822               	movf	??_Filter,w
  3728  0474  0255               	subwf	Filter@i,w
  3729  0475                     u1005:	
  3730  0475  1803               	btfsc	3,0
  3731  0476  2CAA               	goto	l3990
  3732                           
  3733                           ;common.c: 64: {
  3734                           ;common.c: 65: if(filter_buf[i] > filter_buf[i + 1])
  3735  0477  1283               	bcf	3,5	;RP0=0, select bank0
  3736  0478  1303               	bcf	3,6	;RP1=0, select bank0
  3737  0479  1003               	clrc
  3738  047A  24CF  118A         	fcall	PL5	;call to abstracted procedure
  3739  047C  24DF  118A         	fcall	PL8	;call to abstracted procedure
  3740  047E  0800               	movf	0,w
  3741  047F  00A4               	movwf	??_Filter+2
  3742  0480  0A84               	incf	4,f
  3743  0481  0800               	movf	0,w
  3744  0482  00A5               	movwf	??_Filter+3
  3745  0483  0823               	movf	??_Filter+1,w
  3746  0484  0225               	subwf	??_Filter+3,w
  3747  0485  1D03               	skipz
  3748  0486  2C89               	goto	u995
  3749  0487  0822               	movf	??_Filter,w
  3750  0488  0224               	subwf	??_Filter+2,w
  3751  0489                     u995:	
  3752  0489  1803               	skipnc
  3753  048A  2CA8               	goto	l3986
  3754                           
  3755                           ;common.c: 66: {
  3756                           ;common.c: 68: filter_temp = filter_buf[i];
  3757  048B  1003               	clrc
  3758  048C  0D55               	rlf	Filter@i,w
  3759  048D  3E26               	addlw	Filter@filter_buf& (0+255)
  3760  048E  0084               	movwf	4
  3761  048F  0800               	movf	0,w
  3762  0490  00CE               	movwf	Filter@filter_temp
  3763  0491  0A84               	incf	4,f
  3764  0492  0800               	movf	0,w
  3765  0493  00CF               	movwf	Filter@filter_temp+1
  3766                           
  3767                           ;common.c: 70: filter_buf[i] = filter_buf[i + 1];
  3768  0494  24DF  118A         	fcall	PL8	;call to abstracted procedure
  3769  0496  0800               	movf	0,w
  3770  0497  24D9  118A         	fcall	PL7	;call to abstracted procedure
  3771  0499  0D55               	rlf	Filter@i,w
  3772  049A  3E26               	addlw	Filter@filter_buf& (0+255)
  3773  049B  0084               	movwf	4
  3774  049C  0822               	movf	??_Filter,w
  3775  049D  0080               	movwf	0
  3776  049E  0A84               	incf	4,f
  3777  049F  0823               	movf	??_Filter+1,w
  3778  04A0  0080               	movwf	0
  3779                           
  3780                           ;common.c: 72: filter_buf[i + 1] = filter_temp;
  3781  04A1  24DF  118A         	fcall	PL8	;call to abstracted procedure
  3782  04A3  084E               	movf	Filter@filter_temp,w
  3783  04A4  0080               	movwf	0
  3784  04A5  0A84               	incf	4,f
  3785  04A6  084F               	movf	Filter@filter_temp+1,w
  3786  04A7  0080               	movwf	0
  3787  04A8                     l3986:	
  3788  04A8  0AD5               	incf	Filter@i,f
  3789  04A9  2C68               	goto	l3988
  3790  04AA                     l3990:	
  3791  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  3792  04AB  3013               	movlw	19
  3793  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  3794  04AD  0AD4               	incf	Filter@j,f
  3795  04AE  0254               	subwf	Filter@j,w
  3796  04AF  1C03               	skipc
  3797  04B0  2C67               	goto	l3980
  3798                           
  3799                           ;common.c: 73: }
  3800                           ;common.c: 74: }
  3801                           ;common.c: 75: }
  3802                           ;common.c: 77: for(i = 2; i < 20 - 2; i++)
  3803  04B1  3002               	movlw	2
  3804  04B2  00D5               	movwf	Filter@i
  3805                           
  3806                           ;common.c: 78: {
  3807                           ;common.c: 79: filter_sum += filter_buf[i];
  3808  04B3  1003               	clrc
  3809  04B4                     L13:	
  3810  04B4  24CF  118A         	fcall	PL5	;call to abstracted procedure
  3811  04B6  0822               	movf	??_Filter,w
  3812  04B7  07D0               	addwf	Filter@filter_sum,f
  3813  04B8  1803               	skipnc
  3814  04B9  0AD1               	incf	Filter@filter_sum+1,f
  3815  04BA  0823               	movf	??_Filter+1,w
  3816  04BB  07D1               	addwf	Filter@filter_sum+1,f
  3817  04BC  3012               	movlw	18
  3818  04BD  0AD5               	incf	Filter@i,f
  3819  04BE  0255               	subwf	Filter@i,w
  3820  04BF  1C03               	skipc
  3821  04C0  2CB4               	goto	L13
  3822                           
  3823                           ;common.c: 80: }
  3824                           ;common.c: 82: return (filter_sum >> 4);
  3825  04C1  0851               	movf	Filter@filter_sum+1,w
  3826  04C2  00A1               	movwf	?_Filter+1
  3827  04C3  0850               	movf	Filter@filter_sum,w
  3828  04C4  00A0               	movwf	?_Filter
  3829  04C5  300F               	movlw	15
  3830  04C6  0EA0               	swapf	?_Filter,f
  3831  04C7  0EA1               	swapf	?_Filter+1,f
  3832  04C8  05A0               	andwf	?_Filter,f
  3833  04C9  0821               	movf	?_Filter+1,w
  3834  04CA  39F0               	andlw	240
  3835  04CB  04A0               	iorwf	?_Filter,f
  3836  04CC  300F               	movlw	15
  3837  04CD  05A1               	andwf	?_Filter+1,f
  3838  04CE  0008               	return
  3839  04CF                     __end_of_Filter:	
  3840  04CF                     PL5:	
  3841  04CF  0D55               	rlf	Filter@i,w
  3842  04D0  3E26               	addlw	Filter@filter_buf& (0+255)
  3843  04D1  0084               	movwf	4
  3844  04D2  1383               	bcf	3,7	;select IRP bank0
  3845  04D3  0800               	movf	0,w
  3846  04D4  00A2               	movwf	??_Filter
  3847  04D5  0A84               	incf	4,f
  3848  04D6  0800               	movf	0,w
  3849  04D7  00A3               	movwf	??_Filter+1
  3850  04D8  0008               	return
  3851  04D9                     PL7:	
  3852  04D9  00A2               	movwf	??_Filter
  3853  04DA  0A84               	incf	4,f
  3854  04DB  0800               	movf	0,w
  3855  04DC  00A3               	movwf	??_Filter+1
  3856  04DD  1003               	clrc
  3857  04DE  0008               	return
  3858  04DF                     PL8:	
  3859  04DF  1003               	clrc
  3860  04E0  0D55               	rlf	Filter@i,w
  3861  04E1  3E02               	addlw	2
  3862  04E2  3E26               	addlw	Filter@filter_buf& (0+255)
  3863  04E3  0084               	movwf	4
  3864  04E4  0008               	return
  3865  04E5                     PL10:	
  3866  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  3867  04E6  00A0               	movwf	?_Filter
  3868  04E7  3001               	movlw	1
  3869  04E8  00A1               	movwf	?_Filter+1
  3870  04E9  0008               	return
  3871                           
  3872                           	psect	text790
  3873  0678                     __ptext790:	
  3874 ;; =============== function _Filter ends ============
  3875                           
  3876                           
  3877 ;; *************** function _isFinishedThreeHoursTimer *****************
  3878 ;; Defined at:
  3879 ;;		line 414 in file "C:\190604\AK7030-OTP\common.c"
  3880 ;; Parameters:    Size  Location     Type
  3881 ;;		None
  3882 ;; Auto vars:     Size  Location     Type
  3883 ;;		None
  3884 ;; Return value:  Size  Location     Type
  3885 ;;                  1    wreg      unsigned char 
  3886 ;; Registers used:
  3887 ;;		wreg, status,2, status,0
  3888 ;; Tracked objects:
  3889 ;;		On entry : 60/0
  3890 ;;		On exit  : 60/20
  3891 ;;		Unchanged: FFF9F/0
  3892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3893 ;;      Params:         0       0       0       0       0
  3894 ;;      Locals:         0       0       0       0       0
  3895 ;;      Temps:          0       0       0       0       0
  3896 ;;      Totals:         0       0       0       0       0
  3897 ;;Total ram usage:        0 bytes
  3898 ;; Hardware stack levels used:    1
  3899 ;; Hardware stack levels required when called:    2
  3900 ;; This function calls:
  3901 ;;		Nothing
  3902 ;; This function is called by:
  3903 ;;		_main
  3904 ;; This function uses a non-reentrant model
  3905 ;;
  3906  0678                     _isFinishedThreeHoursTimer:	
  3907                           
  3908                           ;common.c: 415: if(uiSmallTimer == 0)
  3909                           
  3910                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  3911  0678  1683               	bsf	3,5	;RP0=1, select bank1
  3912  0679  0835               	movf	(_uiSmallTimer+1)^(0+128),w
  3913  067A  0434               	iorwf	_uiSmallTimer^(0+128),w
  3914  067B  1903               	btfsc	3,2
  3915                           
  3916                           ;common.c: 416: return 1;
  3917  067C  3401               	retlw	1
  3918                           
  3919                           ;common.c: 417: else
  3920                           ;common.c: 418: return 0;
  3921  067D  3400               	retlw	0
  3922  067E                     __end_of_isFinishedThreeHoursTimer:	
  3923                           
  3924                           	psect	text791
  3925  061C                     __ptext791:	
  3926 ;; =============== function _isFinishedThreeHoursTimer ends ============
  3927                           
  3928                           
  3929 ;; *************** function _startThreeHoursTimer *****************
  3930 ;; Defined at:
  3931 ;;		line 380 in file "C:\190604\AK7030-OTP\common.c"
  3932 ;; Parameters:    Size  Location     Type
  3933 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;		None
  3936 ;; Return value:  Size  Location     Type
  3937 ;;		None               void
  3938 ;; Registers used:
  3939 ;;		wreg, status,2, status,0
  3940 ;; Tracked objects:
  3941 ;;		On entry : 60/0
  3942 ;;		On exit  : 60/20
  3943 ;;		Unchanged: FFF9F/0
  3944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3945 ;;      Params:         0       2       0       0       0
  3946 ;;      Locals:         0       0       0       0       0
  3947 ;;      Temps:          0       0       0       0       0
  3948 ;;      Totals:         0       2       0       0       0
  3949 ;;Total ram usage:        2 bytes
  3950 ;; Hardware stack levels used:    1
  3951 ;; Hardware stack levels required when called:    2
  3952 ;; This function calls:
  3953 ;;		Nothing
  3954 ;; This function is called by:
  3955 ;;		_main
  3956 ;; This function uses a non-reentrant model
  3957 ;;
  3958  061C                     _startThreeHoursTimer:	
  3959                           
  3960                           ;common.c: 381: if(0 == uiSmallTimer)
  3961                           
  3962                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  3963  061C  1683               	bsf	3,5	;RP0=1, select bank1
  3964  061D  0835               	movf	(_uiSmallTimer+1)^(0+128),w
  3965  061E  0434               	iorwf	_uiSmallTimer^(0+128),w
  3966  061F  1D03               	skipz
  3967  0620  0008               	return
  3968                           
  3969                           ;common.c: 382: uiSmallTimer = uiSetTime;
  3970  0621  1283               	bcf	3,5	;RP0=0, select bank0
  3971  0622  0821               	movf	startThreeHoursTimer@uiSetTime+1,w
  3972  0623  1683               	bsf	3,5	;RP0=1, select bank1
  3973  0624  00B5               	movwf	(_uiSmallTimer+1)^(0+128)
  3974  0625  1283               	bcf	3,5	;RP0=0, select bank0
  3975  0626  0820               	movf	startThreeHoursTimer@uiSetTime,w
  3976  0627  1683               	bsf	3,5	;RP0=1, select bank1
  3977  0628  00B4               	movwf	_uiSmallTimer^(0+128)
  3978  0629  0008               	return
  3979  062A                     __end_of_startThreeHoursTimer:	
  3980                           
  3981                           	psect	text792
  3982  067E                     __ptext792:	
  3983 ;; =============== function _startThreeHoursTimer ends ============
  3984                           
  3985                           
  3986 ;; *************** function _isFinishedTwentySecondsTimer *****************
  3987 ;; Defined at:
  3988 ;;		line 397 in file "C:\190604\AK7030-OTP\common.c"
  3989 ;; Parameters:    Size  Location     Type
  3990 ;;		None
  3991 ;; Auto vars:     Size  Location     Type
  3992 ;;		None
  3993 ;; Return value:  Size  Location     Type
  3994 ;;                  1    wreg      unsigned char 
  3995 ;; Registers used:
  3996 ;;		wreg, status,2, status,0
  3997 ;; Tracked objects:
  3998 ;;		On entry : 60/0
  3999 ;;		On exit  : 60/20
  4000 ;;		Unchanged: FFF9F/0
  4001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4002 ;;      Params:         0       0       0       0       0
  4003 ;;      Locals:         0       0       0       0       0
  4004 ;;      Temps:          0       0       0       0       0
  4005 ;;      Totals:         0       0       0       0       0
  4006 ;;Total ram usage:        0 bytes
  4007 ;; Hardware stack levels used:    1
  4008 ;; Hardware stack levels required when called:    2
  4009 ;; This function calls:
  4010 ;;		Nothing
  4011 ;; This function is called by:
  4012 ;;		_main
  4013 ;; This function uses a non-reentrant model
  4014 ;;
  4015  067E                     _isFinishedTwentySecondsTimer:	
  4016                           
  4017                           ;common.c: 398: if(0 == uiTwentySecondsTimer)
  4018                           
  4019                           ; Regs used in _isFinishedTwentySecondsTimer: [wreg+status,2+status,0]
  4020  067E  1683               	bsf	3,5	;RP0=1, select bank1
  4021  067F  0837               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  4022  0680  0436               	iorwf	_uiTwentySecondsTimer^(0+128),w
  4023  0681  1903               	btfsc	3,2
  4024                           
  4025                           ;common.c: 399: return 1;
  4026  0682  3401               	retlw	1
  4027                           
  4028                           ;common.c: 400: else
  4029                           ;common.c: 401: return 0;
  4030  0683  3400               	retlw	0
  4031  0684                     __end_of_isFinishedTwentySecondsTimer:	
  4032                           
  4033                           	psect	text793
  4034  068A                     __ptext793:	
  4035 ;; =============== function _isFinishedTwentySecondsTimer ends ============
  4036                           
  4037                           
  4038 ;; *************** function _startTwentySecondsTimer *****************
  4039 ;; Defined at:
  4040 ;;		line 391 in file "C:\190604\AK7030-OTP\common.c"
  4041 ;; Parameters:    Size  Location     Type
  4042 ;;		None
  4043 ;; Auto vars:     Size  Location     Type
  4044 ;;		None
  4045 ;; Return value:  Size  Location     Type
  4046 ;;		None               void
  4047 ;; Registers used:
  4048 ;;		wreg
  4049 ;; Tracked objects:
  4050 ;;		On entry : 60/0
  4051 ;;		On exit  : 60/20
  4052 ;;		Unchanged: FFF9F/0
  4053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4054 ;;      Params:         0       0       0       0       0
  4055 ;;      Locals:         0       0       0       0       0
  4056 ;;      Temps:          0       0       0       0       0
  4057 ;;      Totals:         0       0       0       0       0
  4058 ;;Total ram usage:        0 bytes
  4059 ;; Hardware stack levels used:    1
  4060 ;; Hardware stack levels required when called:    2
  4061 ;; This function calls:
  4062 ;;		Nothing
  4063 ;; This function is called by:
  4064 ;;		_main
  4065 ;; This function uses a non-reentrant model
  4066 ;;
  4067  068A                     _startTwentySecondsTimer:	
  4068                           
  4069                           ;common.c: 392: uiTwentySecondsTimer = 20;
  4070                           
  4071                           ; Regs used in _startTwentySecondsTimer: [wreg]
  4072  068A  3014               	movlw	20
  4073  068B  1683               	bsf	3,5	;RP0=1, select bank1
  4074  068C  00B6               	movwf	_uiTwentySecondsTimer^(0+128)
  4075  068D  01B7               	clrf	(_uiTwentySecondsTimer+1)^(0+128)
  4076  068E  0008               	return
  4077  068F                     __end_of_startTwentySecondsTimer:	
  4078                           
  4079                           	psect	text794
  4080  0684                     __ptext794:	
  4081 ;; =============== function _startTwentySecondsTimer ends ============
  4082                           
  4083                           
  4084 ;; *************** function _isFinishedTwelveHoursTimer *****************
  4085 ;; Defined at:
  4086 ;;		line 406 in file "C:\190604\AK7030-OTP\common.c"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;		None
  4089 ;; Auto vars:     Size  Location     Type
  4090 ;;		None
  4091 ;; Return value:  Size  Location     Type
  4092 ;;                  1    wreg      unsigned char 
  4093 ;; Registers used:
  4094 ;;		wreg, status,2, status,0
  4095 ;; Tracked objects:
  4096 ;;		On entry : 60/0
  4097 ;;		On exit  : 60/20
  4098 ;;		Unchanged: FFF9F/0
  4099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4100 ;;      Params:         0       0       0       0       0
  4101 ;;      Locals:         0       0       0       0       0
  4102 ;;      Temps:          0       0       0       0       0
  4103 ;;      Totals:         0       0       0       0       0
  4104 ;;Total ram usage:        0 bytes
  4105 ;; Hardware stack levels used:    1
  4106 ;; Hardware stack levels required when called:    2
  4107 ;; This function calls:
  4108 ;;		Nothing
  4109 ;; This function is called by:
  4110 ;;		_main
  4111 ;; This function uses a non-reentrant model
  4112 ;;
  4113  0684                     _isFinishedTwelveHoursTimer:	
  4114                           
  4115                           ;common.c: 407: if(uiBigTimer == 0)
  4116                           
  4117                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  4118  0684  1683               	bsf	3,5	;RP0=1, select bank1
  4119  0685  0833               	movf	(_uiBigTimer+1)^(0+128),w
  4120  0686  0432               	iorwf	_uiBigTimer^(0+128),w
  4121  0687  1903               	btfsc	3,2
  4122                           
  4123                           ;common.c: 408: return 1;
  4124  0688  3401               	retlw	1
  4125                           
  4126                           ;common.c: 409: else
  4127                           ;common.c: 410: return 0;
  4128  0689  3400               	retlw	0
  4129  068A                     __end_of_isFinishedTwelveHoursTimer:	
  4130                           
  4131                           	psect	text795
  4132  062A                     __ptext795:	
  4133 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  4134                           
  4135                           
  4136 ;; *************** function _startTwelveHourTimer *****************
  4137 ;; Defined at:
  4138 ;;		line 352 in file "C:\190604\AK7030-OTP\common.c"
  4139 ;; Parameters:    Size  Location     Type
  4140 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  4141 ;; Auto vars:     Size  Location     Type
  4142 ;;		None
  4143 ;; Return value:  Size  Location     Type
  4144 ;;		None               void
  4145 ;; Registers used:
  4146 ;;		wreg, status,2, status,0
  4147 ;; Tracked objects:
  4148 ;;		On entry : 60/0
  4149 ;;		On exit  : 60/20
  4150 ;;		Unchanged: FFF9F/0
  4151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4152 ;;      Params:         0       2       0       0       0
  4153 ;;      Locals:         0       0       0       0       0
  4154 ;;      Temps:          0       0       0       0       0
  4155 ;;      Totals:         0       2       0       0       0
  4156 ;;Total ram usage:        2 bytes
  4157 ;; Hardware stack levels used:    1
  4158 ;; Hardware stack levels required when called:    2
  4159 ;; This function calls:
  4160 ;;		Nothing
  4161 ;; This function is called by:
  4162 ;;		_main
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165  062A                     _startTwelveHourTimer:	
  4166                           
  4167                           ;common.c: 353: if(0 == uiBigTimer)
  4168                           
  4169                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  4170  062A  1683               	bsf	3,5	;RP0=1, select bank1
  4171  062B  0833               	movf	(_uiBigTimer+1)^(0+128),w
  4172  062C  0432               	iorwf	_uiBigTimer^(0+128),w
  4173  062D  1D03               	skipz
  4174  062E  0008               	return
  4175                           
  4176                           ;common.c: 354: uiBigTimer = uiSetTime;
  4177  062F  1283               	bcf	3,5	;RP0=0, select bank0
  4178  0630  0821               	movf	startTwelveHourTimer@uiSetTime+1,w
  4179  0631  1683               	bsf	3,5	;RP0=1, select bank1
  4180  0632  00B3               	movwf	(_uiBigTimer+1)^(0+128)
  4181  0633  1283               	bcf	3,5	;RP0=0, select bank0
  4182  0634  0820               	movf	startTwelveHourTimer@uiSetTime,w
  4183  0635  1683               	bsf	3,5	;RP0=1, select bank1
  4184  0636  00B2               	movwf	_uiBigTimer^(0+128)
  4185  0637  0008               	return
  4186  0638                     __end_of_startTwelveHourTimer:	
  4187                           
  4188                           	psect	text796
  4189  0697                     __ptext796:	
  4190 ;; =============== function _startTwelveHourTimer ends ============
  4191                           
  4192                           
  4193 ;; *************** function _clrSampeTime *****************
  4194 ;; Defined at:
  4195 ;;		line 432 in file "C:\190604\AK7030-OTP\common.c"
  4196 ;; Parameters:    Size  Location     Type
  4197 ;;		None
  4198 ;; Auto vars:     Size  Location     Type
  4199 ;;		None
  4200 ;; Return value:  Size  Location     Type
  4201 ;;		None               void
  4202 ;; Registers used:
  4203 ;;		status,2
  4204 ;; Tracked objects:
  4205 ;;		On entry : 60/20
  4206 ;;		On exit  : 60/20
  4207 ;;		Unchanged: FFF9F/0
  4208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4209 ;;      Params:         0       0       0       0       0
  4210 ;;      Locals:         0       0       0       0       0
  4211 ;;      Temps:          0       0       0       0       0
  4212 ;;      Totals:         0       0       0       0       0
  4213 ;;Total ram usage:        0 bytes
  4214 ;; Hardware stack levels used:    1
  4215 ;; Hardware stack levels required when called:    2
  4216 ;; This function calls:
  4217 ;;		Nothing
  4218 ;; This function is called by:
  4219 ;;		_main
  4220 ;; This function uses a non-reentrant model
  4221 ;;
  4222  0697                     _clrSampeTime:	
  4223                           
  4224                           ;common.c: 433: timer.timer10msStopWatch = 0;
  4225                           
  4226                           ; Regs used in _clrSampeTime: [status,2]
  4227  0697  01BA               	clrf	_timer^(0+128)
  4228  0698  0008               	return
  4229  0699                     __end_of_clrSampeTime:	
  4230                           
  4231                           	psect	text797
  4232  0671                     __ptext797:	
  4233 ;; =============== function _clrSampeTime ends ============
  4234                           
  4235                           
  4236 ;; *************** function _isPermitSampleTime *****************
  4237 ;; Defined at:
  4238 ;;		line 422 in file "C:\190604\AK7030-OTP\common.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;		None
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;		None
  4243 ;; Return value:  Size  Location     Type
  4244 ;;                  1    wreg      unsigned char 
  4245 ;; Registers used:
  4246 ;;		wreg
  4247 ;; Tracked objects:
  4248 ;;		On entry : 0/0
  4249 ;;		On exit  : 60/20
  4250 ;;		Unchanged: FFF9F/0
  4251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4252 ;;      Params:         0       0       0       0       0
  4253 ;;      Locals:         0       0       0       0       0
  4254 ;;      Temps:          0       0       0       0       0
  4255 ;;      Totals:         0       0       0       0       0
  4256 ;;Total ram usage:        0 bytes
  4257 ;; Hardware stack levels used:    1
  4258 ;; Hardware stack levels required when called:    2
  4259 ;; This function calls:
  4260 ;;		Nothing
  4261 ;; This function is called by:
  4262 ;;		_main
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265  0671                     _isPermitSampleTime:	
  4266                           
  4267                           ;common.c: 423: if(timer.timer10msStopWatch >= 10)
  4268                           
  4269                           ; Regs used in _isPermitSampleTime: [wreg]
  4270  0671  300A               	movlw	10
  4271  0672  1683               	bsf	3,5	;RP0=1, select bank1
  4272  0673  1303               	bcf	3,6	;RP1=0, select bank1
  4273  0674  023A               	subwf	_timer^(0+128),w
  4274  0675  1803               	btfsc	3,0
  4275                           
  4276                           ;common.c: 424: {
  4277                           ;common.c: 425: return 1;
  4278  0676  3401               	retlw	1
  4279                           
  4280                           ;common.c: 427: else
  4281                           ;common.c: 428: return 0;
  4282  0677  3400               	retlw	0
  4283  0678                     __end_of_isPermitSampleTime:	
  4284                           
  4285                           	psect	text799
  4286  0661                     __ptext799:	
  4287 ;; =============== function _adc_start ends ============
  4288                           
  4289                           
  4290 ;; *************** function _op2_init *****************
  4291 ;; Defined at:
  4292 ;;		line 45 in file "C:\190604\AK7030-OTP\periph.c"
  4293 ;; Parameters:    Size  Location     Type
  4294 ;;		None
  4295 ;; Auto vars:     Size  Location     Type
  4296 ;;		None
  4297 ;; Return value:  Size  Location     Type
  4298 ;;		None               void
  4299 ;; Registers used:
  4300 ;;		wreg
  4301 ;; Tracked objects:
  4302 ;;		On entry : 17F/20
  4303 ;;		On exit  : 17F/20
  4304 ;;		Unchanged: FFE80/0
  4305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4306 ;;      Params:         0       0       0       0       0
  4307 ;;      Locals:         0       0       0       0       0
  4308 ;;      Temps:          0       0       0       0       0
  4309 ;;      Totals:         0       0       0       0       0
  4310 ;;Total ram usage:        0 bytes
  4311 ;; Hardware stack levels used:    1
  4312 ;; Hardware stack levels required when called:    2
  4313 ;; This function calls:
  4314 ;;		Nothing
  4315 ;; This function is called by:
  4316 ;;		_main
  4317 ;; This function uses a non-reentrant model
  4318 ;;
  4319  0661                     _op2_init:	
  4320                           
  4321                           ;periph.c: 52: OP2CON1=0x10;
  4322                           
  4323                           ; Regs used in _op2_init: [wreg]
  4324  0661  3010               	movlw	16
  4325  0662  009C               	movwf	28	;volatile
  4326                           
  4327                           ;periph.c: 54: OP2CON2=0x10;
  4328  0663  009D               	movwf	29	;volatile
  4329                           
  4330                           ;periph.c: 55: OP2CON0=0x80;
  4331  0664  3080               	movlw	128
  4332  0665  009B               	movwf	27	;volatile
  4333                           
  4334                           ;periph.c: 58: TRISA7=0;
  4335  0666  1385               	bcf	5,7
  4336                           
  4337                           ;periph.c: 60: TRISB7 = 1;
  4338  0667  1786               	bsf	6,7
  4339  0668  0008               	return
  4340  0669                     __end_of_op2_init:	
  4341                           
  4342                           	psect	text800
  4343  0644                     __ptext800:	
  4344 ;; =============== function _op2_init ends ============
  4345                           
  4346                           
  4347 ;; *************** function _op1_init *****************
  4348 ;; Defined at:
  4349 ;;		line 26 in file "C:\190604\AK7030-OTP\periph.c"
  4350 ;; Parameters:    Size  Location     Type
  4351 ;;		None
  4352 ;; Auto vars:     Size  Location     Type
  4353 ;;		None
  4354 ;; Return value:  Size  Location     Type
  4355 ;;		None               void
  4356 ;; Registers used:
  4357 ;;		wreg
  4358 ;; Tracked objects:
  4359 ;;		On entry : 17F/20
  4360 ;;		On exit  : 17F/20
  4361 ;;		Unchanged: FFE80/0
  4362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4363 ;;      Params:         0       0       0       0       0
  4364 ;;      Locals:         0       0       0       0       0
  4365 ;;      Temps:          0       0       0       0       0
  4366 ;;      Totals:         0       0       0       0       0
  4367 ;;Total ram usage:        0 bytes
  4368 ;; Hardware stack levels used:    1
  4369 ;; Hardware stack levels required when called:    2
  4370 ;; This function calls:
  4371 ;;		Nothing
  4372 ;; This function is called by:
  4373 ;;		_main
  4374 ;; This function uses a non-reentrant model
  4375 ;;
  4376  0644                     _op1_init:	
  4377                           
  4378                           ;periph.c: 33: OP1CON1=0x02;
  4379                           
  4380                           ; Regs used in _op1_init: [wreg]
  4381  0644  3002               	movlw	2
  4382  0645  1283               	bcf	3,5	;RP0=0, select bank0
  4383  0646  009C               	movwf	28	;volatile
  4384                           
  4385                           ;periph.c: 34: OP1CON2=0xA0;
  4386  0647  30A0               	movlw	160
  4387  0648  009D               	movwf	29	;volatile
  4388                           
  4389                           ;periph.c: 35: OP1CON0=0x80;
  4390  0649  3080               	movlw	128
  4391  064A  009B               	movwf	27	;volatile
  4392                           
  4393                           ;periph.c: 38: TRISB3=1;
  4394  064B  1683               	bsf	3,5	;RP0=1, select bank1
  4395  064C  1586               	bsf	6,3
  4396                           
  4397                           ;periph.c: 40: TRISB5=0;
  4398  064D  1286               	bcf	6,5
  4399  064E  0008               	return
  4400  064F                     __end_of_op1_init:	
  4401                           
  4402                           	psect	text801
  4403  068F                     __ptext801:	
  4404 ;; =============== function _op1_init ends ============
  4405                           
  4406                           
  4407 ;; *************** function _dac_init *****************
  4408 ;; Defined at:
  4409 ;;		line 14 in file "C:\190604\AK7030-OTP\periph.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;		None
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;		None
  4414 ;; Return value:  Size  Location     Type
  4415 ;;		None               void
  4416 ;; Registers used:
  4417 ;;		wreg
  4418 ;; Tracked objects:
  4419 ;;		On entry : 17F/20
  4420 ;;		On exit  : 17F/20
  4421 ;;		Unchanged: FFE80/0
  4422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4423 ;;      Params:         0       0       0       0       0
  4424 ;;      Locals:         0       0       0       0       0
  4425 ;;      Temps:          0       0       0       0       0
  4426 ;;      Totals:         0       0       0       0       0
  4427 ;;Total ram usage:        0 bytes
  4428 ;; Hardware stack levels used:    1
  4429 ;; Hardware stack levels required when called:    2
  4430 ;; This function calls:
  4431 ;;		Nothing
  4432 ;; This function is called by:
  4433 ;;		_main
  4434 ;; This function uses a non-reentrant model
  4435 ;;
  4436  068F                     _dac_init:	
  4437                           
  4438                           ;periph.c: 15: DACCON|=1;
  4439                           
  4440                           ; Regs used in _dac_init: [wreg]
  4441  068F  1407               	bsf	7,0	;volatile
  4442                           
  4443                           ;periph.c: 17: DACR0=0x0F;
  4444  0690  300F               	movlw	15
  4445  0691  0088               	movwf	8	;volatile
  4446                           
  4447                           ;periph.c: 18: DACCON|=(1)<<2;
  4448  0692  1507               	bsf	7,2	;volatile
  4449  0693  0008               	return
  4450  0694                     __end_of_dac_init:	
  4451                           
  4452                           	psect	text803
  4453  0694                     __ptext803:	
  4454 ;; =============== function _adc_test_init ends ============
  4455                           
  4456                           
  4457 ;; *************** function _timer1_interrupt_config *****************
  4458 ;; Defined at:
  4459 ;;		line 190 in file "C:\190604\AK7030-OTP\common.c"
  4460 ;; Parameters:    Size  Location     Type
  4461 ;;		None
  4462 ;; Auto vars:     Size  Location     Type
  4463 ;;		None
  4464 ;; Return value:  Size  Location     Type
  4465 ;;		None               void
  4466 ;; Registers used:
  4467 ;;		None
  4468 ;; Tracked objects:
  4469 ;;		On entry : 17F/20
  4470 ;;		On exit  : 17F/20
  4471 ;;		Unchanged: FFE80/0
  4472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4473 ;;      Params:         0       0       0       0       0
  4474 ;;      Locals:         0       0       0       0       0
  4475 ;;      Temps:          0       0       0       0       0
  4476 ;;      Totals:         0       0       0       0       0
  4477 ;;Total ram usage:        0 bytes
  4478 ;; Hardware stack levels used:    1
  4479 ;; Hardware stack levels required when called:    2
  4480 ;; This function calls:
  4481 ;;		Nothing
  4482 ;; This function is called by:
  4483 ;;		_main
  4484 ;; This function uses a non-reentrant model
  4485 ;;
  4486  0694                     _timer1_interrupt_config:	
  4487                           
  4488                           ;common.c: 191: GIE = 1;
  4489                           
  4490                           ; Regs used in _timer1_interrupt_config: []
  4491  0694  178B               	bsf	11,7
  4492                           
  4493                           ;common.c: 192: PEIE = 1;
  4494  0695  170B               	bsf	11,6
  4495  0696  0008               	return
  4496  0697                     __end_of_timer1_interrupt_config:	
  4497                           
  4498                           	psect	text804
  4499  064F                     __ptext804:	
  4500 ;; =============== function _timer1_interrupt_config ends ============
  4501                           
  4502                           
  4503 ;; *************** function _timer1_config *****************
  4504 ;; Defined at:
  4505 ;;		line 178 in file "C:\190604\AK7030-OTP\common.c"
  4506 ;; Parameters:    Size  Location     Type
  4507 ;;		None
  4508 ;; Auto vars:     Size  Location     Type
  4509 ;;		None
  4510 ;; Return value:  Size  Location     Type
  4511 ;;		None               void
  4512 ;; Registers used:
  4513 ;;		wreg
  4514 ;; Tracked objects:
  4515 ;;		On entry : 17F/40
  4516 ;;		On exit  : 17F/20
  4517 ;;		Unchanged: FFE80/0
  4518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4519 ;;      Params:         0       0       0       0       0
  4520 ;;      Locals:         0       0       0       0       0
  4521 ;;      Temps:          0       0       0       0       0
  4522 ;;      Totals:         0       0       0       0       0
  4523 ;;Total ram usage:        0 bytes
  4524 ;; Hardware stack levels used:    1
  4525 ;; Hardware stack levels required when called:    2
  4526 ;; This function calls:
  4527 ;;		Nothing
  4528 ;; This function is called by:
  4529 ;;		_main
  4530 ;; This function uses a non-reentrant model
  4531 ;;
  4532  064F                     _timer1_config:	
  4533                           
  4534                           ;common.c: 180: TMR1H=0xCF;
  4535                           
  4536                           ; Regs used in _timer1_config: [wreg]
  4537  064F  30CF               	movlw	207
  4538  0650  1303               	bcf	3,6	;RP1=0, select bank0
  4539  0651  008F               	movwf	15	;volatile
  4540                           
  4541                           ;common.c: 181: TMR1L=0x2C;
  4542  0652  302C               	movlw	44
  4543  0653  008E               	movwf	14	;volatile
  4544                           
  4545                           ;common.c: 182: T1CON=0xE1;
  4546  0654  30E1               	movlw	225
  4547  0655  0090               	movwf	16	;volatile
  4548                           
  4549                           ;common.c: 183: TMR1IE=1;
  4550  0656  1683               	bsf	3,5	;RP0=1, select bank1
  4551  0657  140C               	bsf	12,0
  4552  0658  0008               	return
  4553  0659                     __end_of_timer1_config:	
  4554                           
  4555                           	psect	text805
  4556  0669                     __ptext805:	
  4557 ;; =============== function _timer1_config ends ============
  4558                           
  4559                           
  4560 ;; *************** function _clock_config *****************
  4561 ;; Defined at:
  4562 ;;		line 170 in file "C:\190604\AK7030-OTP\common.c"
  4563 ;; Parameters:    Size  Location     Type
  4564 ;;		None
  4565 ;; Auto vars:     Size  Location     Type
  4566 ;;		None
  4567 ;; Return value:  Size  Location     Type
  4568 ;;		None               void
  4569 ;; Registers used:
  4570 ;;		wreg, status,2
  4571 ;; Tracked objects:
  4572 ;;		On entry : 17F/20
  4573 ;;		On exit  : 17F/40
  4574 ;;		Unchanged: FFE80/0
  4575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4576 ;;      Params:         0       0       0       0       0
  4577 ;;      Locals:         0       0       0       0       0
  4578 ;;      Temps:          0       0       0       0       0
  4579 ;;      Totals:         0       0       0       0       0
  4580 ;;Total ram usage:        0 bytes
  4581 ;; Hardware stack levels used:    1
  4582 ;; Hardware stack levels required when called:    2
  4583 ;; This function calls:
  4584 ;;		Nothing
  4585 ;; This function is called by:
  4586 ;;		_main
  4587 ;; This function uses a non-reentrant model
  4588 ;;
  4589  0669                     _clock_config:	
  4590                           
  4591                           ;common.c: 172: CLKPR = 0x80;
  4592                           
  4593                           ; Regs used in _clock_config: [wreg+status,2]
  4594  0669  3080               	movlw	128
  4595  066A  1283               	bcf	3,5	;RP0=0, select bank2
  4596  066B  1703               	bsf	3,6	;RP1=1, select bank2
  4597  066C  0088               	movwf	8	;volatile
  4598                           
  4599                           ;common.c: 173: CLKPR = 0x00;
  4600  066D  0188               	clrf	8	;volatile
  4601  066E                     l1651:	
  4602                           ;common.c: 174: while(CLKPCE);
  4603                           
  4604  066E  1F88               	btfss	8,7
  4605  066F  0008               	return
  4606  0670  2E6E               	goto	l1651
  4607  0671                     __end_of_clock_config:	
  4608                           
  4609                           	psect	text806
  4610  05EB                     __ptext806:	
  4611 ;; =============== function _clock_config ends ============
  4612                           
  4613                           
  4614 ;; *************** function _initPin *****************
  4615 ;; Defined at:
  4616 ;;		line 105 in file "C:\190604\AK7030-OTP\main.c"
  4617 ;; Parameters:    Size  Location     Type
  4618 ;;		None
  4619 ;; Auto vars:     Size  Location     Type
  4620 ;;		None
  4621 ;; Return value:  Size  Location     Type
  4622 ;;		None               void
  4623 ;; Registers used:
  4624 ;;		None
  4625 ;; Tracked objects:
  4626 ;;		On entry : 160/20
  4627 ;;		On exit  : 160/60
  4628 ;;		Unchanged: FFE9F/0
  4629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4630 ;;      Params:         0       0       0       0       0
  4631 ;;      Locals:         0       0       0       0       0
  4632 ;;      Temps:          0       0       0       0       0
  4633 ;;      Totals:         0       0       0       0       0
  4634 ;;Total ram usage:        0 bytes
  4635 ;; Hardware stack levels used:    1
  4636 ;; Hardware stack levels required when called:    2
  4637 ;; This function calls:
  4638 ;;		Nothing
  4639 ;; This function is called by:
  4640 ;;		_main
  4641 ;; This function uses a non-reentrant model
  4642 ;;
  4643  05EB                     _initPin:	
  4644                           
  4645                           ;main.c: 106: PB6 = 1;
  4646                           
  4647                           ; Regs used in _initPin: []
  4648  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  4649  05EC  1706               	bsf	6,6
  4650                           
  4651                           ;main.c: 107: PBOD6 = 1;
  4652  05ED  1683               	bsf	3,5	;RP0=1, select bank3
  4653  05EE  1703               	bsf	3,6	;RP1=1, select bank3
  4654  05EF  1708               	bsf	8,6
  4655                           
  4656                           ;main.c: 111: PA0 = 0;
  4657  05F0  1283               	bcf	3,5	;RP0=0, select bank0
  4658  05F1  1303               	bcf	3,6	;RP1=0, select bank0
  4659  05F2  1005               	bcf	5,0
  4660                           
  4661                           ;main.c: 112: PA1 = 0;
  4662  05F3  1085               	bcf	5,1
  4663                           
  4664                           ;main.c: 113: PA2 = 0;
  4665  05F4  1105               	bcf	5,2
  4666                           
  4667                           ;main.c: 114: PA3 = 0;
  4668  05F5  1185               	bcf	5,3
  4669                           
  4670                           ;main.c: 115: PB0 = 0;
  4671  05F6  1006               	bcf	6,0
  4672                           
  4673                           ;main.c: 116: PB1 = 1;
  4674  05F7  1486               	bsf	6,1
  4675                           
  4676                           ;main.c: 117: PA6 = 0;
  4677  05F8  1305               	bcf	5,6
  4678                           
  4679                           ;main.c: 118: PA7 = 0;
  4680  05F9  1385               	bcf	5,7
  4681                           
  4682                           ;main.c: 119: PAOD7 = 0;
  4683  05FA  1683               	bsf	3,5	;RP0=1, select bank3
  4684  05FB  1703               	bsf	3,6	;RP1=1, select bank3
  4685  05FC  1387               	bcf	7,7
  4686  05FD  0008               	return
  4687  05FE                     __end_of_initPin:	
  4688                           
  4689                           	psect	text810
  4690  032F                     __ptext810:	
  4691 ;; =============== function _clearTwelveHoursTimer ends ============
  4692                           
  4693                           
  4694 ;; *************** function _ISR *****************
  4695 ;; Defined at:
  4696 ;;		line 437 in file "C:\190604\AK7030-OTP\common.c"
  4697 ;; Parameters:    Size  Location     Type
  4698 ;;		None
  4699 ;; Auto vars:     Size  Location     Type
  4700 ;;		None
  4701 ;; Return value:  Size  Location     Type
  4702 ;;		None               void
  4703 ;; Registers used:
  4704 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4705 ;; Tracked objects:
  4706 ;;		On entry : 0/0
  4707 ;;		On exit  : 60/0
  4708 ;;		Unchanged: FFE00/0
  4709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4710 ;;      Params:         0       0       0       0       0
  4711 ;;      Locals:         0       0       0       0       0
  4712 ;;      Temps:          4       0       0       0       0
  4713 ;;      Totals:         4       0       0       0       0
  4714 ;;Total ram usage:        4 bytes
  4715 ;; Hardware stack levels used:    1
  4716 ;; Hardware stack levels required when called:    1
  4717 ;; This function calls:
  4718 ;;		i1_setAD_ConvertFlag
  4719 ;;		_adc_get
  4720 ;;		_vPutSampleDataIntoTable
  4721 ;; This function is called by:
  4722 ;;		Interrupt level 1
  4723 ;; This function uses a non-reentrant model
  4724 ;;
  4725  032F                     _ISR:	
  4726                           
  4727                           ;common.c: 438: static unsigned char ucTimer1sCnt = 0;
  4728                           ;common.c: 440: if(TMR1IF == 1)
  4729  032F  1C0C               	btfss	12,0
  4730  0330  2B58               	goto	i1l4086
  4731                           
  4732                           ;common.c: 441: {
  4733                           ;common.c: 442: TMR1IF = 0 ;
  4734  0331  100C               	bcf	12,0
  4735                           
  4736                           ;common.c: 443: timer.timer10msStopWatch++;
  4737  0332  1683               	bsf	3,5	;RP0=1, select bank1
  4738  0333  3064               	movlw	100
  4739  0334  0ABA               	incf	_timer^(0+128),f
  4740                           
  4741                           ;common.c: 444: ucTimer1sCnt++;
  4742  0335  0AB8               	incf	ISR@ucTimer1sCnt^(0+128),f
  4743                           
  4744                           ;common.c: 446: if(ucTimer1sCnt >= 100)
  4745  0336  0238               	subwf	ISR@ucTimer1sCnt^(0+128),w
  4746  0337  1C03               	skipc
  4747  0338  2B58               	goto	i1l4086
  4748                           
  4749                           ;common.c: 447: {
  4750                           ;common.c: 448: ucTimer1sCnt = 0;
  4751  0339  01B8               	clrf	ISR@ucTimer1sCnt^(0+128)
  4752                           
  4753                           ;common.c: 449: if(uiBigTimer > 0)
  4754  033A  0833               	movf	(_uiBigTimer+1)^(0+128),w
  4755  033B  0432               	iorwf	_uiBigTimer^(0+128),w
  4756  033C  1903               	skipnz
  4757  033D  2B44               	goto	i1l1761
  4758                           
  4759                           ;common.c: 450: uiBigTimer--;
  4760  033E  3001               	movlw	1
  4761  033F  02B2               	subwf	_uiBigTimer^(0+128),f
  4762  0340  3000               	movlw	0
  4763  0341  1C03               	skipc
  4764  0342  03B3               	decf	(_uiBigTimer+1)^(0+128),f
  4765  0343  02B3               	subwf	(_uiBigTimer+1)^(0+128),f
  4766  0344                     i1l1761:	
  4767                           
  4768                           ;common.c: 452: if(uiSmallTimer)
  4769  0344  0835               	movf	(_uiSmallTimer+1)^(0+128),w
  4770  0345  0434               	iorwf	_uiSmallTimer^(0+128),w
  4771  0346  1903               	skipnz
  4772  0347  2B4E               	goto	i1l1762
  4773                           
  4774                           ;common.c: 453: uiSmallTimer--;
  4775  0348  3001               	movlw	1
  4776  0349  02B4               	subwf	_uiSmallTimer^(0+128),f
  4777  034A  3000               	movlw	0
  4778  034B  1C03               	skipc
  4779  034C  03B5               	decf	(_uiSmallTimer+1)^(0+128),f
  4780  034D  02B5               	subwf	(_uiSmallTimer+1)^(0+128),f
  4781  034E                     i1l1762:	
  4782                           
  4783                           ;common.c: 455: if(uiTwentySecondsTimer)
  4784  034E  0837               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  4785  034F  0436               	iorwf	_uiTwentySecondsTimer^(0+128),w
  4786  0350  1903               	skipnz
  4787  0351  2B58               	goto	i1l4086
  4788                           
  4789                           ;common.c: 456: uiTwentySecondsTimer--;
  4790  0352  3001               	movlw	1
  4791  0353  02B6               	subwf	_uiTwentySecondsTimer^(0+128),f
  4792  0354  3000               	movlw	0
  4793  0355  1C03               	skipc
  4794  0356  03B7               	decf	(_uiTwentySecondsTimer+1)^(0+128),f
  4795  0357  02B7               	subwf	(_uiTwentySecondsTimer+1)^(0+128),f
  4796  0358                     i1l4086:	
  4797                           
  4798                           ;common.c: 457: }
  4799                           ;common.c: 458: }
  4800                           ;common.c: 460: if(ADIF)
  4801  0358  1283               	bcf	3,5	;RP0=0, select bank0
  4802  0359  1D0D               	btfss	13,2
  4803  035A  2B8C               	goto	i1l1769
  4804  035B  3001               	movlw	1
  4805                           
  4806                           ;common.c: 461: {
  4807                           ;common.c: 462: ADIF=0;
  4808  035C  110D               	bcf	13,2
  4809                           
  4810                           ;common.c: 463: setAD_ConvertFlag(1);
  4811  035D  2400  118A         	fcall	i1_setAD_ConvertFlag
  4812                           
  4813                           ;common.c: 464: adc_original_value = adc_get();
  4814  035F  2399  118A         	fcall	_adc_get
  4815  0361  0871               	movf	?_adc_get+1,w
  4816  0362  00AD               	movwf	(_adc_original_value+1)^(0+128)
  4817  0363  0870               	movf	?_adc_get,w
  4818  0364  00AC               	movwf	_adc_original_value^(0+128)
  4819                           
  4820                           ;common.c: 465: if(sampleChannelSelect == 4)
  4821  0365  1283               	bcf	3,5	;RP0=0, select bank0
  4822  0366  086E               	movf	_sampleChannelSelect,w
  4823  0367  3A04               	xorlw	4
  4824  0368  1D03               	skipz
  4825  0369  2B74               	goto	i1l4100
  4826                           
  4827                           ;common.c: 466: {
  4828                           ;common.c: 467: adc_original_CH4_value = adc_get();
  4829  036A  2399  118A         	fcall	_adc_get
  4830                           
  4831                           ;common.c: 468: vPutSampleDataIntoTable(adc_get(),4);
  4832  036C  2399  118A         	fcall	_adc_get
  4833  036E  0871               	movf	?_adc_get+1,w
  4834  036F  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4835  0370  0870               	movf	?_adc_get,w
  4836  0371  00F4               	movwf	?_vPutSampleDataIntoTable
  4837  0372  3004               	movlw	4
  4838  0373  2B8A               	goto	L14
  4839  0374                     i1l4100:	
  4840                           ;common.c: 470: }
  4841                           
  4842                           
  4843                           ;common.c: 471: else if(sampleChannelSelect == 1)
  4844  0374  0B6E               	decfsz	_sampleChannelSelect,w
  4845  0375  2B81               	goto	i1l4106
  4846                           
  4847                           ;common.c: 472: {
  4848                           ;common.c: 473: adc_original_CH1_value = adc_get();
  4849  0376  2399  118A         	fcall	_adc_get
  4850                           
  4851                           ;common.c: 474: vPutSampleDataIntoTable(adc_get(),1);
  4852  0378  2399  118A         	fcall	_adc_get
  4853  037A  0871               	movf	?_adc_get+1,w
  4854  037B  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4855  037C  0870               	movf	?_adc_get,w
  4856  037D  00F4               	movwf	?_vPutSampleDataIntoTable
  4857  037E  01F6               	clrf	?_vPutSampleDataIntoTable+2
  4858  037F  0AF6               	incf	?_vPutSampleDataIntoTable+2,f
  4859  0380  2B8B               	goto	L15
  4860  0381                     i1l4106:	
  4861                           ;common.c: 475: }
  4862                           
  4863                           
  4864                           ;common.c: 476: else
  4865                           ;common.c: 477: {
  4866                           ;common.c: 478: adc_original_CH14_value = adc_get();
  4867  0381  2399  118A         	fcall	_adc_get
  4868                           
  4869                           ;common.c: 479: vPutSampleDataIntoTable(adc_get(),14);
  4870  0383  2399  118A         	fcall	_adc_get
  4871  0385  0871               	movf	?_adc_get+1,w
  4872  0386  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4873  0387  0870               	movf	?_adc_get,w
  4874  0388  00F4               	movwf	?_vPutSampleDataIntoTable
  4875  0389  300E               	movlw	14
  4876  038A                     L14:	
  4877  038A  00F6               	movwf	?_vPutSampleDataIntoTable+2
  4878  038B                     L15:	
  4879  038B  23A5               	fcall	_vPutSampleDataIntoTable
  4880  038C                     i1l1769:	
  4881  038C  087C               	movf	??_ISR+3,w
  4882  038D  1283               	bcf	3,5	;RP0=0, select bank0
  4883  038E  1303               	bcf	3,6	;RP1=0, select bank0
  4884  038F  00FF               	movwf	127
  4885  0390  087B               	movf	??_ISR+2,w
  4886  0391  008A               	movwf	10
  4887  0392  087A               	movf	??_ISR+1,w
  4888  0393  0084               	movwf	4
  4889  0394  0E79               	swapf	??_ISR^(0+-128),w
  4890  0395  0083               	movwf	3
  4891  0396  0EFE               	swapf	126,f
  4892  0397  0E7E               	swapf	126,w
  4893  0398  0009               	retfie
  4894  0399                     __end_of_ISR:	
  4895  0399                     __ptext812:	
  4896 ;; =============== function i1_setAD_ConvertFlag ends ============
  4897                           
  4898                           
  4899 ;; *************** function _adc_get *****************
  4900 ;; Defined at:
  4901 ;;		line 105 in file "C:\190604\AK7030-OTP\periph.c"
  4902 ;; Parameters:    Size  Location     Type
  4903 ;;		None
  4904 ;; Auto vars:     Size  Location     Type
  4905 ;;  val             2    2[COMMON] unsigned int 
  4906 ;; Return value:  Size  Location     Type
  4907 ;;                  2    0[COMMON] unsigned int 
  4908 ;; Registers used:
  4909 ;;		wreg
  4910 ;; Tracked objects:
  4911 ;;		On entry : 40/20
  4912 ;;		On exit  : 60/20
  4913 ;;		Unchanged: FFF9F/0
  4914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4915 ;;      Params:         2       0       0       0       0
  4916 ;;      Locals:         2       0       0       0       0
  4917 ;;      Temps:          0       0       0       0       0
  4918 ;;      Totals:         4       0       0       0       0
  4919 ;;Total ram usage:        4 bytes
  4920 ;; Hardware stack levels used:    1
  4921 ;; This function calls:
  4922 ;;		Nothing
  4923 ;; This function is called by:
  4924 ;;		_ISR
  4925 ;; This function uses a non-reentrant model
  4926 ;;
  4927  0399                     _adc_get:	
  4928                           
  4929                           ;periph.c: 106: unsigned int val;
  4930                           ;periph.c: 107: val = (ADRESH<<8) | ADRESL;
  4931                           
  4932                           ; Regs used in _adc_get: [wreg]
  4933  0399  1283               	bcf	3,5	;RP0=0, select bank0
  4934  039A  081E               	movf	30,w	;volatile
  4935  039B  00F3               	movwf	adc_get@val+1
  4936  039C  01F2               	clrf	adc_get@val
  4937  039D  1683               	bsf	3,5	;RP0=1, select bank1
  4938  039E  081E               	movf	30,w	;volatile
  4939  039F  04F2               	iorwf	adc_get@val,f
  4940                           
  4941                           ;periph.c: 108: return val;
  4942  03A0  0873               	movf	adc_get@val+1,w
  4943  03A1  00F1               	movwf	?_adc_get+1
  4944  03A2  0872               	movf	adc_get@val,w
  4945  03A3  00F0               	movwf	?_adc_get
  4946  03A4  0008               	return
  4947  03A5                     __end_of_adc_get:	
  4948  03A5                     __ptext813:	
  4949 ;; =============== function _adc_get ends ============
  4950                           
  4951                           
  4952 ;; *************** function _vPutSampleDataIntoTable *****************
  4953 ;; Defined at:
  4954 ;;		line 95 in file "C:\190604\AK7030-OTP\common.c"
  4955 ;; Parameters:    Size  Location     Type
  4956 ;;  uiSampleData    2    4[COMMON] unsigned int 
  4957 ;;  channel         1    6[COMMON] unsigned char 
  4958 ;; Auto vars:     Size  Location     Type
  4959 ;;  i               2    7[COMMON] int 
  4960 ;; Return value:  Size  Location     Type
  4961 ;;		None               void
  4962 ;; Registers used:
  4963 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4964 ;; Tracked objects:
  4965 ;;		On entry : 60/20
  4966 ;;		On exit  : 0/0
  4967 ;;		Unchanged: FFE00/0
  4968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4969 ;;      Params:         3       0       0       0       0
  4970 ;;      Locals:         2       0       0       0       0
  4971 ;;      Temps:          0       0       0       0       0
  4972 ;;      Totals:         5       0       0       0       0
  4973 ;;Total ram usage:        5 bytes
  4974 ;; Hardware stack levels used:    1
  4975 ;; This function calls:
  4976 ;;		Nothing
  4977 ;; This function is called by:
  4978 ;;		_ISR
  4979 ;; This function uses a non-reentrant model
  4980 ;;
  4981  03A5                     _vPutSampleDataIntoTable:	
  4982                           
  4983                           ;common.c: 97: static unsigned char ucChannelFirstLength = 0;
  4984                           ;common.c: 99: static unsigned char ucChannelFourthLength = 0;
  4985                           ;common.c: 101: static unsigned char ucChannelFourteenthLength = 0;
  4986                           ;common.c: 103: if(channel == 1)
  4987                           
  4988                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1]
  4989  03A5  0B76               	decfsz	vPutSampleDataIntoTable@channel,w
  4990  03A6  2BB7               	goto	i1l4020
  4991                           
  4992                           ;common.c: 104: {
  4993                           ;common.c: 105: if(ucChannelFirstLength < 20)
  4994  03A7  3014               	movlw	20
  4995  03A8  027D               	subwf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4996  03A9  1803               	skipnc
  4997  03AA  2BB1               	goto	i1l4016
  4998                           
  4999                           ;common.c: 106: {
  5000                           ;common.c: 107: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  5001  03AB  1003               	clrc
  5002  03AC  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  5003  03AD  3E90               	addlw	_uiSampleChannelFirst& (0+255)
  5004  03AE  240D               	fcall	PL4	;call to abstracted procedure
  5005                           
  5006                           ;common.c: 109: ucChannelFirstLength++;
  5007  03AF  0AFD               	incf	vPutSampleDataIntoTable@ucChannelFirstLength,f
  5008                           
  5009                           ;common.c: 110: }
  5010  03B0  0008               	return
  5011  03B1                     i1l4016:	
  5012                           
  5013                           ;common.c: 111: else
  5014                           ;common.c: 112: {
  5015                           ;common.c: 113: ucChannelFirstLength = 0;
  5016  03B1  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  5017                           
  5018                           ;common.c: 115: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  5019  03B2  1003               	clrc
  5020  03B3  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  5021  03B4  3E90               	addlw	_uiSampleChannelFirst& (0+255)
  5022  03B5  240D               	fcall	PL4	;call to abstracted procedure
  5023  03B6  0008               	return
  5024  03B7                     i1l4020:	
  5025                           
  5026                           ;common.c: 118: else if(channel == 4)
  5027  03B7  0876               	movf	vPutSampleDataIntoTable@channel,w
  5028  03B8  3A04               	xorlw	4
  5029  03B9  1D03               	skipz
  5030  03BA  2BCA               	goto	i1l4032
  5031                           
  5032                           ;common.c: 119: {
  5033                           ;common.c: 120: if(ucChannelFourthLength < 20)
  5034  03BB  3014               	movlw	20
  5035  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  5036  03BD  026D               	subwf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  5037  03BE  1803               	skipnc
  5038  03BF  2BC5               	goto	i1l4028
  5039                           
  5040                           ;common.c: 121: {
  5041                           ;common.c: 122: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  5042  03C0  1003               	clrc
  5043  03C1  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  5044  03C2  2404               	fcall	PL2	;call to abstracted procedure
  5045                           
  5046                           ;common.c: 124: ucChannelFourthLength++;
  5047  03C3  0AED               	incf	vPutSampleDataIntoTable@ucChannelFourthLength,f
  5048                           
  5049                           ;common.c: 125: }
  5050  03C4  0008               	return
  5051  03C5                     i1l4028:	
  5052                           
  5053                           ;common.c: 126: else
  5054                           ;common.c: 127: {
  5055                           ;common.c: 128: ucChannelFourthLength = 0;
  5056  03C5  01ED               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  5057                           
  5058                           ;common.c: 130: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  5059  03C6  1003               	clrc
  5060  03C7  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  5061  03C8  2404               	fcall	PL2	;call to abstracted procedure
  5062  03C9  0008               	return
  5063  03CA                     i1l4032:	
  5064                           
  5065                           ;common.c: 133: else if(channel == 14)
  5066  03CA  0876               	movf	vPutSampleDataIntoTable@channel,w
  5067  03CB  3A0E               	xorlw	14
  5068  03CC  1D03               	skipz
  5069  03CD  2BDE               	goto	i1l4044
  5070                           
  5071                           ;common.c: 134: {
  5072                           ;common.c: 135: if(ucChannelFourteenthLength < 20)
  5073  03CE  3014               	movlw	20
  5074  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  5075  03D0  026C               	subwf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  5076  03D1  1803               	skipnc
  5077  03D2  2BD9               	goto	i1l4040
  5078                           
  5079                           ;common.c: 136: {
  5080                           ;common.c: 137: uiSampleChannelFourteenth[ucChannelFourteenthLength] = uiSampleData;
  5081  03D3  1003               	clrc
  5082  03D4  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  5083  03D5  3EB8               	addlw	_uiSampleChannelFourteenth& (0+255)
  5084  03D6  240D               	fcall	PL4	;call to abstracted procedure
  5085                           
  5086                           ;common.c: 139: ucChannelFourteenthLength++;
  5087  03D7  0AEC               	incf	vPutSampleDataIntoTable@ucChannelFourteenthLength,f
  5088                           
  5089                           ;common.c: 140: }
  5090  03D8  0008               	return
  5091  03D9                     i1l4040:	
  5092                           
  5093                           ;common.c: 141: else
  5094                           ;common.c: 142: {
  5095                           ;common.c: 143: ucChannelFourteenthLength = 0;
  5096  03D9  01EC               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  5097                           
  5098                           ;common.c: 145: uiSampleChannelFourth[ucChannelFourteenthLength] = uiSampleData;
  5099  03DA  1003               	clrc
  5100  03DB  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  5101  03DC  2404               	fcall	PL2	;call to abstracted procedure
  5102  03DD  0008               	return
  5103  03DE                     i1l4044:	
  5104                           
  5105                           ;common.c: 148: else
  5106                           ;common.c: 149: {
  5107                           ;common.c: 150: ucChannelFirstLength = 0;
  5108  03DE  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  5109                           
  5110                           ;common.c: 152: ucChannelFourthLength = 0;
  5111  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  5112  03E0  01ED               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  5113                           
  5114                           ;common.c: 154: ucChannelFourteenthLength = 0;
  5115  03E1  01EC               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  5116                           
  5117                           ;common.c: 156: for(int i = 0;i < 20; i++)
  5118  03E2  01F7               	clrf	vPutSampleDataIntoTable@i
  5119  03E3  01F8               	clrf	vPutSampleDataIntoTable@i+1
  5120  03E4                     i1l4050:	
  5121                           
  5122                           ;common.c: 157: {
  5123                           ;common.c: 158: uiSampleChannelFirst[i] = 0;
  5124  03E4  1003               	clrc
  5125  03E5  0D77               	rlf	vPutSampleDataIntoTable@i,w
  5126  03E6  3E90               	addlw	_uiSampleChannelFirst& (0+255)
  5127  03E7  0084               	movwf	4
  5128  03E8  1783               	bsf	3,7	;select IRP bank3
  5129                           
  5130                           ;common.c: 160: uiSampleChannelFourth[i] = 0;
  5131  03E9  2415  118A         	fcall	PL6	;call to abstracted procedure
  5132  03EB  1383               	bcf	3,7	;select IRP bank1
  5133                           
  5134                           ;common.c: 162: uiSampleChannelFourth[i] = 0;
  5135  03EC  2415  118A         	fcall	PL6	;call to abstracted procedure
  5136  03EE  0180               	clrf	0
  5137  03EF  0A84               	incf	4,f
  5138  03F0  0180               	clrf	0
  5139  03F1  0AF7               	incf	vPutSampleDataIntoTable@i,f
  5140  03F2  1903               	skipnz
  5141  03F3  0AF8               	incf	vPutSampleDataIntoTable@i+1,f
  5142  03F4  0878               	movf	vPutSampleDataIntoTable@i+1,w
  5143  03F5  3A80               	xorlw	128
  5144  03F6  00FF               	movwf	127
  5145  03F7  3080               	movlw	128
  5146  03F8  027F               	subwf	127,w
  5147  03F9  1D03               	skipz
  5148  03FA  2BFD               	goto	u109_25
  5149  03FB  3014               	movlw	20
  5150  03FC  0277               	subwf	vPutSampleDataIntoTable@i,w
  5151  03FD                     u109_25:	
  5152  03FD  1803               	btfsc	3,0
  5153  03FE  0008               	return
  5154  03FF  2BE4               	goto	i1l4050
  5155  0400                     __end_of_vPutSampleDataIntoTable:	
  5156  0400                     __ptext811:	
  5157 ;; =============== function _ISR ends ============
  5158                           
  5159                           
  5160 ;; *************** function i1_setAD_ConvertFlag *****************
  5161 ;; Defined at:
  5162 ;;		line 204 in file "C:\190604\AK7030-OTP\common.c"
  5163 ;; Parameters:    Size  Location     Type
  5164 ;;  setAD_Conver    1    wreg     unsigned char 
  5165 ;; Auto vars:     Size  Location     Type
  5166 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  5167 ;; Return value:  Size  Location     Type
  5168 ;;		None               void
  5169 ;; Registers used:
  5170 ;;		wreg
  5171 ;; Tracked objects:
  5172 ;;		On entry : 60/0
  5173 ;;		On exit  : 60/20
  5174 ;;		Unchanged: FFF9F/0
  5175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5176 ;;      Params:         0       0       0       0       0
  5177 ;;      Locals:         1       0       0       0       0
  5178 ;;      Temps:          0       0       0       0       0
  5179 ;;      Totals:         1       0       0       0       0
  5180 ;;Total ram usage:        1 bytes
  5181 ;; Hardware stack levels used:    1
  5182 ;; This function calls:
  5183 ;;		Nothing
  5184 ;; This function is called by:
  5185 ;;		_ISR
  5186 ;; This function uses a non-reentrant model
  5187 ;;
  5188  0400                     i1_setAD_ConvertFlag:	
  5189                           
  5190                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  5191                           ;i1setAD_ConvertFlag@flag stored from wreg
  5192  0400  00F0               	movwf	i1setAD_ConvertFlag@flag
  5193                           
  5194                           ;common.c: 205: adc_convert_flag = flag;
  5195  0401  1683               	bsf	3,5	;RP0=1, select bank1
  5196  0402  00B9               	movwf	_adc_convert_flag^(0+128)
  5197  0403  0008               	return
  5198  0404                     __end_ofi1_setAD_ConvertFlag:	
  5199  0404                     PL2:	
  5200  0404  3EC2               	addlw	_uiSampleChannelFourth& (0+255)
  5201  0405  0084               	movwf	4
  5202  0406  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  5203  0407  1383               	bcf	3,7	;select IRP bank1
  5204  0408  0080               	movwf	0
  5205  0409  0A84               	incf	4,f
  5206  040A  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  5207  040B  0080               	movwf	0
  5208  040C  0008               	return
  5209  040D                     PL4:	
  5210  040D  0084               	movwf	4
  5211  040E  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  5212  040F  1783               	bsf	3,7	;select IRP bank3
  5213  0410  0080               	movwf	0
  5214  0411  0A84               	incf	4,f
  5215  0412  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  5216  0413  0080               	movwf	0
  5217  0414  0008               	return
  5218  0415                     PL6:	
  5219  0415  0180               	clrf	0
  5220  0416  0A84               	incf	4,f
  5221  0417  0180               	clrf	0
  5222  0418  1003               	clrc
  5223  0419  0D77               	rlf	vPutSampleDataIntoTable@i,w
  5224  041A  3EC2               	addlw	_uiSampleChannelFourth& (0+255)
  5225  041B  0084               	movwf	4
  5226  041C  0008               	return
  5227                           
  5228                           	psect	intentry
  5229  0004                     __pintentry:	
  5230                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5231                           
  5232  0004                     interrupt_function:	
  5233  007E                     saved_w	set	btemp
  5234  0004  00FE               	movwf	btemp
  5235  0005  0E03               	swapf	3,w
  5236  0006  00F9               	movwf	??_ISR
  5237  0007  0804               	movf	4,w
  5238  0008  00FA               	movwf	??_ISR+1
  5239  0009  080A               	movf	10,w
  5240  000A  00FB               	movwf	??_ISR+2
  5241  000B  1283               	bcf	3,5	;RP0=0, select bank0
  5242  000C  1303               	bcf	3,6	;RP1=0, select bank0
  5243  000D  087F               	movf	btemp+1,w
  5244  000E  00FC               	movwf	??_ISR+3
  5245  000F  118A  2B2F         	ljmp	_ISR
  5246                           
  5247                           	psect	text814
  5248  0000                     __ptext814:	
  5249 ;; =============== function _vPutSampleDataIntoTable ends ============
  5250                           
  5251  007E                     btemp	set	126	;btemp
  5252  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri Jun 21 15:34:20 2019

                                  ??_clock_config 0020                                                 pc 0002  
                                              _GO 00F9                                                fsr 0004  
                             ?_getAdOriginalValue 0020                          ?_timer1_interrupt_config 0070  
                                             l706 0062                                               l715 0079  
                                             l814 016D                                               l680 0000  
                                             l744 00F5                                               l914 02BC  
                                             l683 0000                                               l677 0000  
                                             l838 01A1                                               l759 00F7  
                                             l859 01D4                                               l787 0133  
                                             l894 0271                                               l887 0251  
                                             _PA0 0028                                               _PA1 0029  
                                             _GIE 005F                                               _PB0 0030  
                                             _PA2 002A                                               _PB1 0031  
                                             _PA3 002B                                               _PA6 002E  
                                             _PA7 002F                                               _PB6 0036  
                                             _ISR 032F                                               u985 0462  
                                             u995 0489                                               fsr0 0004  
                                             indf 0000                            ??_startThreeHoursTimer 0022  
                                            S4924 0600                                              S4926 060E  
                                            S4928 0638                                              ?_ISR 0070  
                              __size_of_AD_Sample 0068                            ?_getAdOriginalCh1Value 0056  
                                            l2400 0000                                              l4000 0000  
                                            l4002 0000                                              l2403 0000  
                                            l2420 0000                                              l2414 0000  
                                            l2406 0000                                              l4200 0000  
                                            l1721 0000                                              l1625 0000  
                                            l2417 0000                                              l4122 0000  
                                            l4130 0000                                              l4210 0000  
                                            l4202 0000                                              l1651 066E  
                                            l1731 0000                                              l1724 0000  
                                            l1660 0000                                              l4060 0000  
                                            l4116 05C2                                              l4300 00CE  
                                            l4220 0040                                              l4212 0000  
                                            l4204 0000                                              l1718 0000  
                                            l1654 0000                                              l4062 0000  
                                            l4118 0000                                              l4126 0000  
                                            l4150 0000                                              l4134 0000  
                                            l4222 0000                                              l4214 0000  
                                            l4206 0000                                              l1663 0000  
                                            l4056 0000                                              l1672 0000  
                                            l4160 057F                                              l4144 056B  
                                            l4400 0145                                              l4320 00FF  
                                            l4312 00F3                                              l4304 00DB  
                                            l4240 0063                                              l4232 005A  
                                            l4216 0000                                              l4208 0000  
                                            l1657 0000                                              l1754 0000  
                                            l1666 0000                                              l4066 0000  
                                            l4170 0582                                              l4154 0578  
                                            l4146 0000                                              l4138 0544  
                                            l4410 014B                                              l4314 00F8  
                                            l4250 0075                                              l4234 005B  
                                            l4226 0000                                              l4218 0000  
                                            l1675 0000                                              l1691 0557  
                                            l4172 0000                                              l4164 0581  
                                            l4180 0000                                              l4420 0151  
                                            l4324 0101                                              l4316 00FA  
                                            l4308 00E7                                              l4260 0083  
                                            l4252 0000                                              l4244 0068  
                                            l4236 0000                                              l4228 004E  
                                            l1669 0000                                              l1678 0000  
                                            l4174 0000                                              l4190 04FB  
                                            l4502 01AB                                              l4430 015A  
                                            l4326 0103                                              l4270 0000  
                                            l4246 0000                                              l4238 005F  
                                            l4176 0000                                              l4192 0000  
                                            l4184 0000                                              l4440 0161  
                                            l4336 0109                                              l4280 0000  
                                            l4272 0096                                              l4264 008F  
                                            l4256 0080                                              l4248 0073  
                                            l4178 0000                                              l4194 0501  
                                            l4186 0000                                              l4506 01AD  
                                            l4442 016F                                              l4370 0125  
                                            l4346 010F                                              l4290 00B7  
                                            l4602 023F                                              l4282 0000  
                                            l4266 0090                                              l4258 0000  
                                            l3900 0000                                              l4196 0000  
                                            l4620 0000                                              l4612 0000  
                                            l4604 0000                                              l4540 01D8  
                                            l4508 01AF                                              l4452 0178  
                                            l4444 0171                                              l4380 0136  
                                            l4356 0115                                              l4292 00BB  
                                            l4284 00A9                                              l4276 00A2  
                                            l4268 0000                                              l4702 0306  
                                            l4614 0000                                              l4622 026D  
                                            l4606 0000                                              l4550 01E1  
                                            l4542 01DA                                              l4518 01B5  
                                            l4454 017A                                              l4390 013F  
                                            l4366 011F                                              l4294 00BE  
                                            l4286 0000                                              l4278 00A3  
                                            l4198 0000                                              l3912 0000  
                                            l4640 0000                                              l4632 027B  
                                            l4624 0000                                              l4616 0000  
                                            l4608 0261                                              l4552 01E3  
                                            l4528 01BC                                              l4464 0180  
                                            l4448 0176                                              l4384 013B  
                                            l4376 0127                                              l4296 00C2  
                                            l4288 00B1                                              l3914 0000  
                                            l3930 0000                                              l4642 0000  
                                            l4626 0000                                              l4618 0000  
                                            l4562 01E9                                              l4546 01DF  
                                            l4538 01C3                                              l4474 0186  
                                            l4378 0134                                              l4706 0312  
                                            l3852 0000                                              l3860 0000  
                                            l3932 0000                                              l4660 0000  
                                            l4644 0000                                              l4652 0298  
                                            l4636 0288                                              l4572 01F0  
                                            l4484 018E                                              l4388 013D  
                                            l3854 0000                                              l3862 0000  
                                            l3870 0000                                              l3918 0000  
                                            l4670 02CE                                              l4662 02AC  
                                            l4646 0000                                              l4638 028A  
                                            l4582 0000                                              l4494 0195  
                                            l3856 05CF                                              l3864 0000  
                                            l3872 0000                                              l3880 0000  
                                            l3944 0000                                              l3960 0000  
                                            l4680 0000                                              l4656 02A5  
                                            l4648 0000                                              l4592 0234  
                                            l4576 01FE                                              l4496 01A4  
                                            l3858 0000                                              l3866 0000  
                                            l3874 0000                                              l3882 0000  
                                            l3890 0000                                              l3970 0000  
                                            l4682 02E5                                              l4674 02DB  
                                            l4658 02A7                                              l4594 0000  
                                            l4586 0227                                              l4578 020F  
                                            l4498 01A6                                              l3868 0000  
                                            l3876 0000                                              l3884 0000  
                                            l3892 0000                                              l3948 0000  
                                            l3980 0467                                              l3972 0000  
                                            l4692 0000                                              l4676 02DD  
                                            l4668 02B0                                              l4596 0000  
                                            l4588 022E                                              l3878 0000  
                                            l3886 0000                                              l3894 0000  
                                            l3990 04AA                                              l3966 043F  
                                            l4694 0000                                              l4686 02F2  
                                            l4598 0000                                              _ADIE 046A  
                                            l3888 0000                                              l3896 0000  
                                            l3992 0000                                              l3968 0000  
                                            l4696 0000                                              l4688 02F4  
                                            _ADIF 006A                                              l3898 0598  
                                            l3986 04A8                                              l4698 0000  
                                            l3988 0468                                              _ADON 00F8  
                   startTwelveHourTimer@uiSetTime 0020                                              u1005 0475  
                                            u1205 054D                                              u1215 0562  
                                            _PEIE 005E                              ??_getAdOriginalValue 0022  
                                            _main 0013                                              btemp 007E  
                         _clearTwentySecondsTimer 05CF                                              start 0011  
                         ?_getAdOriginalCh14Value 0056                                 main@ucTimerDelay1 0064  
                               main@ucTimerDelay2 0065                                 main@ucTimerDelay3 0066  
                               main@ucTimerDelay4 0067                                             ??_ISR 0079  
                      __end_of_isPermitSampleTime 0678                               _sampleChannelSelect 006E  
                          ??_getAdOriginaCh4Value 0058                                             ?_main 0070  
                                           _DACR0 0088                                             _CLKPR 0108  
                                           _T1CON 0010                                   __end_of_adc_get 03A5  
                                           _PAOD7 0C3F                                             _PBOD6 0C46  
                                           _TMR1H 000F                                             _TMR1L 000E  
                           setAD_ConvertFlag@flag 0020                           _vPutSampleDataIntoTable 03A5  
                                 __end_of_initPin 05FE                                             _timer 00BA  
                                           pclath 000A                                             status 0003  
                                           wtemp0 007E                    __end_of_getAdOriginalCh14Value 0438  
                   __size_of_startTwelveHourTimer 000E                              __end_of_clrSampeTime 0699  
                           __end_of_clearAllTimer 05C7                                      __end_of_main 032F  
                          __size_of_adc_test_init 0015                                 __end_of_AD_Sample 058F  
                                          ??_main 0058                              _clearPinPortAndTimer 05B5  
                                          _ADCON0 001F                                            _ADCON1 009F  
                            __end_of_clock_config 0671                                            _DACCON 0087  
                                          _ADRESH 001E                                            _ADRESL 009E  
                                          _CLKPCE 0847                                            i1l4010 0000  
                                          i1l4020 03B7                                            i1l4100 0374  
                                          i1l4030 0000                                            i1l4014 0000  
                                          i1l4110 0000                                            i1l4102 0000  
                                          i1l2423 0000                                            i1l4040 03D9  
                                          i1l4032 03CA                                            i1l4016 03B1  
                                          i1l4008 0000                                            i1l4104 0000  
                                          i1l4050 03E4                                            i1l4042 0000  
                                          i1l4026 0000                                            i1l4018 0000  
                                          i1l4114 0000                                            i1l4106 0381  
                                          i1l4052 0000                                            i1l4044 03DE  
                                          i1l4028 03C5                                            i1l4108 0000  
                                          i1l4054 0000                                            i1l4038 0000  
                                          i1l4072 0000                                            i1l1761 0344  
                                          i1l1666 0000                                            i1l4090 0000  
                                          i1l1762 034E                                            i1l4074 0000  
                                          i1l4092 0000                                            i1l4068 0000  
                                          i1l4094 0000                                            i1l4078 0000  
                                          i1l4086 0358                                            i1l1769 038C  
                                          i1l4098 0000                                            u109_25 03FD  
                                __end_of_dac_init 0694                         ??_clearTwentySecondsTimer 0020  
                                          _TMR1IE 0460                                            _TMR1IF 0060  
                               _getAD_ConvertFlag 0520                                 _setAD_ConvertFlag 0522  
                                          _TRISA0 0428                                            _TRISA1 0429  
                                          _TRISB0 0430                                            _TRISA2 042A  
                                          _TRISB1 0431                                            _TRISA3 042B  
                                          _TRISB2 0432                                            _TRISB3 0433  
                                          _TRISB4 0434                                            _TRISA6 042E  
                                          _TRISB5 0435                                            _TRISA7 042F  
                                          _TRISB6 0436                                            _TRISB7 0437  
                                   main@ucTimer1s 0061                                ?_getAD_ConvertFlag 0070  
                                          _Filter 0438                                ?_setAD_ConvertFlag 0070  
                                __end_of_op1_init 064F                                  __end_of_op2_init 0669  
                     ??_isFinishedThreeHoursTimer 0020                     __size_of_clearThreeHoursTimer 0004  
                                       ??_adc_get 0072                               ??_getAD_ConvertFlag 0020  
                             ??_setAD_ConvertFlag 0020                                            clrloop 065A  
                                Filter@filter_buf 0026                                  Filter@filter_sum 0050  
                                       ??_initPin 0020                         ??_vPutSampleDataIntoTable 0077  
                    __size_of_setAdcSampleChannel 0008                             ?_clearPinPortAndTimer 0070  
                                          saved_w 007E                           ??_clearTwelveHoursTimer 0020  
                     ?_process_AD_Converter_Value 0070                                     _adc_test_init 050B  
                __size_of_startTwentySecondsTimer 0005                         __end_of_getAD_ConvertFlag 0522  
                       __end_of_setAD_ConvertFlag 0527                                __size_of_adc_start 0003  
                                  __pcstackCOMMON 0070                                      __pidataBANK0 0000  
                 __end_of_clearTwentySecondsTimer 05D2                              _uiSampleChannelFirst 0190  
                  vPutSampleDataIntoTable@channel 0076                               main@ucTimerRightP5s 0069  
                       _isFinishedThreeHoursTimer 0678                           ??_getAdOriginalCh1Value 0058  
                           __end_of_timer1_config 0659                                    ?_adc_test_init 0020  
     vPutSampleDataIntoTable@ucChannelFirstLength 007D                  __size_of_timer1_interrupt_config 0003  
                           __size_of_clrSampeTime 0002                                        __pbssBANK0 0058  
                                      __pbssBANK1 00A0                                        __pbssBANK3 0190  
                    __size_ofi1_setAD_ConvertFlag 0004                                        adc_get@val 0072  
                 __end_of_vPutSampleDataIntoTable 0400                                           ?_Filter 0020  
                                      __pmaintext 0013                                        __pintentry 0004  
                             main@enumInteralStep 00BD                                         ?_dac_init 0070  
                          ??_clearPinPortAndTimer 0020                             __size_of_clock_config 0008  
                                         _OP1CON0 001B                                           _OP1CON1 001C  
                                         _OP1CON2 001D                                           _OP2CON0 009B  
                                         _OP2CON1 009C                                           _OP2CON2 009D  
                                    _clrSampeTime 0697                                 __end_of_adc_start 059B  
                            _uiTwentySecondsTimer 00B6                                         ?_op1_init 0070  
                                       ?_op2_init 0070                                _isPermitSampleTime 0671  
                                         Filter@i 0055                                           Filter@j 0054  
                          _buffer_Sample_AD_Value 00A0                                _adc_original_value 00AC  
                   __size_of_startThreeHoursTimer 000E                        __size_of_getAD_ConvertFlag 0002  
                      __size_of_setAD_ConvertFlag 0005                                    main@ucTimer20s 00BE  
                     __size_of_getAdOriginalValue 0009                                    main@ucTimerP3s 00BF  
                                  main@ucTimerP5s 0068                               ?_isPermitSampleTime 0070  
                                 __size_of_Filter 0097                                        _uiBigTimer 00B2  
                                    _clock_config 0669                                           _adc_get 0399  
                             _multiFilterMaxValue 00AE              __end_of_isFinishedTwentySecondsTimer 0684  
           __size_of_isFinishedTwentySecondsTimer 0006                      _isFinishedTwentySecondsTimer 067E  
                             _multiFilterMinValue 00B0                              ??_isPermitSampleTime 0020  
                    __end_of_startTwelveHourTimer 0638                                        ??_dac_init 0020  
                                       _AD_Sample 0527                                      __size_of_ISR 006A  
                                         _initPin 05EB                     __size_of_getAdOriginaCh4Value 0009  
                                 ??_adc_test_init 0021                                        ??_op1_init 0020  
                                      ??_op2_init 0020                           _startTwentySecondsTimer 068A  
                            end_of_initialization 05E8                                 Filter@filter_temp 004E  
                             _setAdcSampleChannel 059B                                  main@ucLoaderStep 005C  
                                      ?_AD_Sample 0070                     ?_isFinishedTwentySecondsTimer 0070  
                            main@enumMainLoopStep 0059                                main@ucChannel4Type 005B  
                    ??_isFinishedTwelveHoursTimer 0020                                         Filter@cir 0052  
                                _adc_convert_flag 00B9                              ?_setAdcSampleChannel 0070  
                          __size_of_clearAllTimer 0005                      __end_of_clearThreeHoursTimer 05CF  
                          main@ucTimerADC1ZeroP5s 0062                    __size_of_clearTwelveHoursTimer 0004  
                         _timer1_interrupt_config 0694                     __end_of_clearTwelveHoursTimer 05CB  
              __size_of_isFinishedThreeHoursTimer 0006                                    AD_Sample@index 0024  
                                main@ucTimerX1P5s 00C0                                  main@ucTimerX2P5s 00C1  
                          main@ucTimerZeroPoint3s 006A                            main@ucTimerZeroPoint5s 006B  
                                main@ucTimerDelay 0063                                    __end_of_Filter 04CF  
                                 main@ucADC4_Step 005A               __size_of_isFinishedTwelveHoursTimer 0006  
                        vPutSampleDataIntoTable@i 0077                               i1_setAD_ConvertFlag 0400  
                       ??_startTwentySecondsTimer 0020                             ??_setAdcSampleChannel 0020  
                             start_initialization 05D2                                       __end_of_ISR 0399  
                           _uiSampleChannelFourth 00C2                          ?_clearTwentySecondsTimer 0070  
                  __size_of_getAdOriginalCh1Value 0009                     __end_of_getAdOriginalCh1Value 042F  
                        ??_getAdOriginalCh14Value 0058                              ?i1_setAD_ConvertFlag 0070  
                            _startTwelveHourTimer 062A                 __end_of_isFinishedThreeHoursTimer 067E  
                              main@enumBranchStep 00BC                                          ??_Filter 0022  
                                   _clearAllTimer 05C2                                       __pdataBANK0 006E  
                        ?_vPutSampleDataIntoTable 0074                                       ??_AD_Sample 0022  
                       ??_timer1_interrupt_config 0020                                       __pbssCOMMON 007D  
                               __size_of_dac_init 0005                                     __pcstackBANK0 0020  
                  ??_isFinishedTwentySecondsTimer 0020                                         _adc_start 0598  
                               __size_of_op1_init 000B                                 __size_of_op2_init 0008  
                           ??i1_setAD_ConvertFlag 0070                             ?_startTwelveHourTimer 0020  
                 __end_of_startTwentySecondsTimer 068F                                    ?_clearAllTimer 0070  
                          __size_of_timer1_config 000A                              _clearThreeHoursTimer 05CB  
                    __end_of_startThreeHoursTimer 062A                                         __ptext800 0644  
                                       __ptext801 068F                                         __ptext810 032F  
                                       __ptext802 050B                                         __ptext811 0400  
                                       __ptext803 0694                                         __ptext812 0399  
                                       __ptext804 064F                                         __ptext813 03A5  
                                       __ptext805 0669                                         __ptext814 0000  
                                       __ptext806 05EB                                         __ptext807 05CF  
                                       __ptext808 05CB                                         __ptext809 05C7  
                                       __ptext780 0527                                         __ptext781 041D  
                                       __ptext790 0678                                         __ptext782 0426  
                                       __ptext791 061C                                         __ptext783 042F  
                                       __ptext792 067E                                         __ptext784 05C2  
                                       __ptext793 068A                                         __ptext785 059B  
                                       __ptext794 0684                                         __ptext786 058F  
                                       __ptext778 04EA                                         __ptext795 062A  
                                       __ptext787 0522                                         __ptext779 05B5  
                                       __ptext796 0697                                         __ptext788 0520  
                                       __ptext797 0671                                         __ptext789 0438  
                                       __ptext798 0598                                         __ptext799 0661  
                                        ?_adc_get 0070                                         __pswtext1 0600  
                                       __pswtext2 060E                                         __pswtext3 0638  
              __end_of_isFinishedTwelveHoursTimer 068A                        _isFinishedTwelveHoursTimer 0684  
                                 ISR@ucTimer1sCnt 00B8                                          ?_initPin 0070  
                   __size_of_clearPinPortAndTimer 000D                        __end_of_getAdOriginalValue 0598  
                       _uiSampleChannelFourteenth 01B8                                        ?_adc_start 0070  
                 __size_of_getAdOriginalCh14Value 0009                                 interrupt_function 0004  
                    __end_of_getAdOriginaCh4Value 0426                   __end_of_timer1_interrupt_config 0697  
                           ?_clearThreeHoursTimer 0070                              adc_test_init@channel 0022  
             vPutSampleDataIntoTable@uiSampleData 0074      vPutSampleDataIntoTable@ucChannelFourthLength 006D  
                     __size_of_isPermitSampleTime 0007                                      _uiSmallTimer 00B4  
                           __end_of_adc_test_init 0520                                     _timer1_config 064F  
                    ??_process_AD_Converter_Value 0025                            ??_startTwelveHourTimer 0022  
                                 ??_clearAllTimer 0020                            _getAdOriginalCh14Value 042F  
                                __size_of_adc_get 000C               __size_of_process_AD_Converter_Value 0021  
                                        _dac_init 068F  vPutSampleDataIntoTable@ucChannelFourteenthLength 006C  
                                __size_of_initPin 0013                                  main@cTimer1s_810 00BB  
                                  Filter@tmpValue 0020                                    ?_timer1_config 0070  
                                        _op1_init 0644                                          _op2_init 0661  
                                     ??_adc_start 0020                              _startThreeHoursTimer 061C  
                           _clearTwelveHoursTimer 05C7                                     __size_of_main 031C  
                                        clear_ram 0659                            ??_clearThreeHoursTimer 0020  
                __size_of_clearTwentySecondsTimer 0003                       __end_of_setAdcSampleChannel 05A3  
                                   ?_clrSampeTime 0070                              _getAdOriginaCh4Value 041D  
                                     _sampleTimes 0058                             ?_startThreeHoursTimer 0020  
                __size_of_vPutSampleDataIntoTable 005B                                          intlevel1 0000  
                           _getAdOriginalCh1Value 0426                      setAdcSampleChannel@ucChannel 0021  
                      ?_isFinishedThreeHoursTimer 0070                                 main@ucLoaderStep1 005D  
                               main@ucLoaderStep2 005E                                 main@ucLoaderStep3 005F  
                               main@ucLoaderStep4 0060                                     ?_clock_config 0070  
                        ?_startTwentySecondsTimer 0070                     startThreeHoursTimer@uiSetTime 0020  
                         i1setAD_ConvertFlag@flag 0070                                    ??_clrSampeTime 0020  
                     ?_isFinishedTwelveHoursTimer 0070                             ?_getAdOriginaCh4Value 0056  
                                 ??_timer1_config 0020                       __end_ofi1_setAD_ConvertFlag 0404  
              __end_of_process_AD_Converter_Value 050B                        _process_AD_Converter_Value 04EA  
                          ?_clearTwelveHoursTimer 0070                                  adc_test_init@ref 0020  
                    __end_of_clearPinPortAndTimer 05C2                                _getAdOriginalValue 058F  
