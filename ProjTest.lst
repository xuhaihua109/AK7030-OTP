

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Mon Jun 24 16:56:36 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,delta=2
    15                           	psect	swtext1,local,class=CONST,delta=2
    16                           	psect	swtext2,local,class=CONST,delta=2
    17                           	psect	swtext3,local,class=CONST,delta=2
    18                           	psect	text704,local,class=CODE,delta=2
    19                           	psect	text705,local,class=CODE,delta=2
    20                           	psect	text708,local,class=CODE,delta=2
    21                           	psect	text714,local,class=CODE,delta=2
    22                           	psect	text715,local,class=CODE,delta=2
    23                           	psect	text716,local,class=CODE,delta=2
    24                           	psect	text717,local,class=CODE,delta=2
    25                           	psect	text718,local,class=CODE,delta=2
    26                           	psect	text719,local,class=CODE,delta=2
    27                           	psect	text720,local,class=CODE,delta=2
    28                           	psect	text721,local,class=CODE,delta=2
    29                           	psect	text723,local,class=CODE,delta=2
    30                           	psect	text724,local,class=CODE,delta=2
    31                           	psect	text725,local,class=CODE,delta=2
    32                           	psect	text727,local,class=CODE,delta=2
    33                           	psect	text728,local,class=CODE,delta=2
    34                           	psect	text729,local,class=CODE,delta=2
    35                           	psect	text730,local,class=CODE,delta=2
    36                           	psect	text734,local,class=CODE,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text738,local,class=CODE,delta=2
    39                           	psect	pa_nodes,global,class=CODE,delta=2
    40                           	dabs	1,0x7E,2
    41  000A                     	;#
    42                           
    43                           	psect	config
    44  2000  2FFF               	dw	12287	;#
    45  2001  3FDE               	dw	16350	;#
    46  2002  3FF8               	dw	16376	;#
    47                           
    48                           	psect	idataBANK0
    49  0000                     __pidataBANK0:	
    50  001F                     _ADCON0	set	31
    51  001E                     _ADRESH	set	30
    52  001B                     _OP1CON0	set	27
    53  001C                     _OP1CON1	set	28
    54  001D                     _OP1CON2	set	29
    55  0010                     _T1CON	set	16
    56  000F                     _TMR1H	set	15
    57  000E                     _TMR1L	set	14
    58  006A                     _ADIF	set	106
    59  00F8                     _ADON	set	248
    60  005F                     _GIE	set	95
    61  00F9                     _GO	set	249
    62  0028                     _PA0	set	40
    63  0029                     _PA1	set	41
    64  002A                     _PA2	set	42
    65  002B                     _PA3	set	43
    66  002E                     _PA6	set	46
    67  002F                     _PA7	set	47
    68  0030                     _PB0	set	48
    69  0031                     _PB1	set	49
    70  0036                     _PB6	set	54
    71  005E                     _PEIE	set	94
    72  0060                     _TMR1IF	set	96
    73  009F                     _ADCON1	set	159
    74  009E                     _ADRESL	set	158
    75  0087                     _DACCON	set	135
    76  0088                     _DACR0	set	136
    77  009B                     _OP2CON0	set	155
    78  009C                     _OP2CON1	set	156
    79  009D                     _OP2CON2	set	157
    80  046A                     _ADIE	set	1130
    81  0460                     _TMR1IE	set	1120
    82  0428                     _TRISA0	set	1064
    83  0429                     _TRISA1	set	1065
    84  042A                     _TRISA2	set	1066
    85  042B                     _TRISA3	set	1067
    86  042E                     _TRISA6	set	1070
    87  042F                     _TRISA7	set	1071
    88  0430                     _TRISB0	set	1072
    89  0431                     _TRISB1	set	1073
    90  0432                     _TRISB2	set	1074
    91  0433                     _TRISB3	set	1075
    92  0434                     _TRISB4	set	1076
    93  0435                     _TRISB5	set	1077
    94  0436                     _TRISB6	set	1078
    95  0437                     _TRISB7	set	1079
    96  0108                     _CLKPR	set	264
    97  0847                     _CLKPCE	set	2119
    98  0C3F                     _PAOD7	set	3135
    99  0C46                     _PBOD6	set	3142
   100                           
   101                           	psect	cinit
   102  0531                     start_initialization:	
   103  0531  3049               	movlw	low __pbssBANK0
   104                           
   105                           ; Clear objects allocated to COMMON
   106  0532  01FD               	clrf	__pbssCOMMON& (0+127)
   107                           
   108                           ; Clear objects allocated to BANK0
   109  0533  1383               	bcf	3,7	;select IRP bank0
   110  0534  0084               	movwf	4
   111  0535  306E               	movlw	low (__pbssBANK0+37)
   112  0536  118A  2592  118A   	fcall	clear_ram
   113                           
   114                           ; Clear objects allocated to BANK1
   115  0539  30A0               	movlw	low __pbssBANK1
   116  053A  0084               	movwf	4
   117  053B  30EA               	movlw	low (__pbssBANK1+74)
   118  053C  118A  2592         	fcall	clear_ram
   119                           
   120                           ;initializer for _sampleChannelSelect
   121  053E  300E               	movlw	14
   122  053F  00EE               	movwf	__pdataBANK0& (0+127)
   123  0540                     end_of_initialization:	
   124                           ;End of C runtime variable initialization code
   125                           
   126  0540  0183               	clrf	3
   127  0541  118A  2813         	ljmp	_main	;jump to C main() function
   128                           
   129                           	psect	bssCOMMON
   130  007D                     __pbssCOMMON:	
   131  007D                     vPutSampleDataIntoTable@ucChannelFirstLength:	
   132  007D                     	ds	1
   133                           
   134                           	psect	bssBANK0
   135  0049                     __pbssBANK0:	
   136  0049                     _uiBigTimer:	
   137  0049                     	ds	2
   138  004B                     _uiSmallTimer:	
   139  004B                     	ds	2
   140  004D                     ISR@ucTimer1sCnt:	
   141  004D                     	ds	1
   142  004E                     _adc_convert_flag:	
   143  004E                     	ds	1
   144  004F                     _sampleTimes:	
   145  004F                     	ds	1
   146  0050                     _timer:	
   147  0050                     	ds	1
   148  0051                     main@cTimer1s_811:	
   149  0051                     	ds	1
   150  0052                     main@enumBranchStep:	
   151  0052                     	ds	1
   152  0053                     main@enumInteralStep:	
   153  0053                     	ds	1
   154  0054                     main@enumMainLoopStep:	
   155  0054                     	ds	1
   156  0055                     main@ucADC4_Step:	
   157  0055                     	ds	1
   158  0056                     main@ucChannel4Type:	
   159  0056                     	ds	1
   160  0057                     main@ucLoaderStep:	
   161  0057                     	ds	1
   162  0058                     main@ucLoaderStep1:	
   163  0058                     	ds	1
   164  0059                     main@ucLoaderStep2:	
   165  0059                     	ds	1
   166  005A                     main@ucLoaderStep3:	
   167  005A                     	ds	1
   168  005B                     main@ucLoaderStep4:	
   169  005B                     	ds	1
   170  005C                     main@ucTimer1s:	
   171  005C                     	ds	1
   172  005D                     main@ucTimer20s:	
   173  005D                     	ds	1
   174  005E                     main@ucTimerADC1ZeroP5s:	
   175  005E                     	ds	1
   176  005F                     main@ucTimerDelay:	
   177  005F                     	ds	1
   178  0060                     main@ucTimerDelay1:	
   179  0060                     	ds	1
   180  0061                     main@ucTimerDelay2:	
   181  0061                     	ds	1
   182  0062                     main@ucTimerDelay3:	
   183  0062                     	ds	1
   184  0063                     main@ucTimerDelay4:	
   185  0063                     	ds	1
   186  0064                     main@ucTimerDelayP5s:	
   187  0064                     	ds	1
   188  0065                     main@ucTimerP3s:	
   189  0065                     	ds	1
   190  0066                     main@ucTimerP5s:	
   191  0066                     	ds	1
   192  0067                     main@ucTimerRightP5s:	
   193  0067                     	ds	1
   194  0068                     main@ucTimerX1P5s:	
   195  0068                     	ds	1
   196  0069                     main@ucTimerX2P5s:	
   197  0069                     	ds	1
   198  006A                     main@ucTimerZeroPoint3s:	
   199  006A                     	ds	1
   200  006B                     main@ucTimerZeroPoint5s:	
   201  006B                     	ds	1
   202  006C                     vPutSampleDataIntoTable@ucChannelFourteenthLength:	
   203  006C                     	ds	1
   204  006D                     vPutSampleDataIntoTable@ucChannelFourthLength:	
   205  006D                     	ds	1
   206                           
   207                           	psect	dataBANK0
   208  006E                     __pdataBANK0:	
   209  006E                     _sampleChannelSelect:	
   210  006E                     	ds	1
   211                           
   212                           	psect	bssBANK1
   213  00A0                     __pbssBANK1:	
   214  00A0                     _uiTwentySecondsTimer:	
   215  00A0                     	ds	2
   216  00A2                     _uiSampleChannelFirst:	
   217  00A2                     	ds	24
   218  00BA                     _uiSampleChannelFourteenth:	
   219  00BA                     	ds	24
   220  00D2                     _uiSampleChannelFourth:	
   221  00D2                     	ds	24
   222                           
   223                           	psect	clrtext
   224  0592                     clear_ram:	
   225                           ;	Called with FSR containing the base address, and
   226                           ;	W with the last address+1
   227                           
   228  0592  0064               	clrwdt	;clear the watchdog before getting into this loop
   229  0593                     clrloop:	
   230  0593  0180               	clrf	0	;clear RAM location pointed to by FSR
   231  0594  0A84               	incf	4,f	;increment pointer
   232  0595  0604               	xorwf	4,w	;XOR with final address
   233  0596  1903               	btfsc	3,2	;have we reached the end yet?
   234  0597  3400               	retlw	0	;all done for this memory range, return
   235  0598  0604               	xorwf	4,w	;XOR again to restore value
   236  0599  2D93               	goto	clrloop	;do the next byte
   237                           
   238                           	psect	cstackCOMMON
   239  0070                     __pcstackCOMMON:	
   240  0070                     ?_clearTwelveHoursTimer:	
   241  0070                     ?_clearThreeHoursTimer:	
   242                           ; 0 bytes @ 0x0
   243                           
   244  0070                     ?_clearTwentySecondsTimer:	
   245                           ; 0 bytes @ 0x0
   246                           
   247  0070                     ?_clock_config:	
   248                           ; 0 bytes @ 0x0
   249                           
   250  0070                     ?_timer1_config:	
   251                           ; 0 bytes @ 0x0
   252                           
   253  0070                     ?_timer1_interrupt_config:	
   254                           ; 0 bytes @ 0x0
   255                           
   256  0070                     ?_dac_init:	
   257                           ; 0 bytes @ 0x0
   258                           
   259  0070                     ?_op1_init:	
   260                           ; 0 bytes @ 0x0
   261                           
   262  0070                     ?_op2_init:	
   263                           ; 0 bytes @ 0x0
   264                           
   265  0070                     ?_adc_start:	
   266                           ; 0 bytes @ 0x0
   267                           
   268  0070                     ?_process_AD_Converter_Value:	
   269                           ; 0 bytes @ 0x0
   270                           
   271  0070                     ?_clrSampeTime:	
   272                           ; 0 bytes @ 0x0
   273                           
   274  0070                     ?_startTwentySecondsTimer:	
   275                           ; 0 bytes @ 0x0
   276                           
   277  0070                     ?_AD_Sample:	
   278                           ; 0 bytes @ 0x0
   279                           
   280  0070                     ?_clearAllTimer:	
   281                           ; 0 bytes @ 0x0
   282                           
   283  0070                     ?_clearPinPortAndTimer:	
   284                           ; 0 bytes @ 0x0
   285                           
   286  0070                     ?_initPin:	
   287                           ; 0 bytes @ 0x0
   288                           
   289  0070                     ?_main:	
   290                           ; 0 bytes @ 0x0
   291                           
   292  0070                     ?_setAD_ConvertFlag:	
   293                           ; 0 bytes @ 0x0
   294                           
   295  0070                     ?_ISR:	
   296                           ; 0 bytes @ 0x0
   297                           
   298  0070                     ?i1_setAD_ConvertFlag:	
   299                           ; 0 bytes @ 0x0
   300                           
   301  0070                     ??i1_setAD_ConvertFlag:	
   302                           ; 0 bytes @ 0x0
   303                           
   304  0070                     ?_isPermitSampleTime:	
   305                           ; 0 bytes @ 0x0
   306                           
   307  0070                     ?_isFinishedTwelveHoursTimer:	
   308                           ; 1 bytes @ 0x0
   309                           
   310  0070                     ?_isFinishedTwentySecondsTimer:	
   311                           ; 1 bytes @ 0x0
   312                           
   313  0070                     ?_isFinishedThreeHoursTimer:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0070                     ?_getAD_ConvertFlag:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0070                     ?_adc_get:	
   320                           ; 1 bytes @ 0x0
   321                           
   322  0070                     i1setAD_ConvertFlag@flag:	
   323                           ; 2 bytes @ 0x0
   324                           
   325                           
   326                           ; 1 bytes @ 0x0
   327  0070                     	ds	2
   328  0072                     ??_adc_get:	
   329  0072                     adc_get@val:	
   330                           ; 0 bytes @ 0x2
   331                           
   332                           
   333                           ; 2 bytes @ 0x2
   334  0072                     	ds	2
   335  0074                     ?_vPutSampleDataIntoTable:	
   336  0074                     vPutSampleDataIntoTable@uiSampleData:	
   337                           ; 0 bytes @ 0x4
   338                           
   339                           
   340                           ; 2 bytes @ 0x4
   341  0074                     	ds	2
   342  0076                     vPutSampleDataIntoTable@channel:	
   343                           
   344                           ; 1 bytes @ 0x6
   345  0076                     	ds	1
   346  0077                     ??_vPutSampleDataIntoTable:	
   347  0077                     vPutSampleDataIntoTable@i:	
   348                           ; 0 bytes @ 0x7
   349                           
   350                           
   351                           ; 2 bytes @ 0x7
   352  0077                     	ds	2
   353  0079                     ??_ISR:	
   354                           
   355                           ; 0 bytes @ 0x9
   356  0079                     	ds	4
   357                           
   358                           	psect	cstackBANK0
   359  0020                     __pcstackBANK0:	
   360  0020                     ??_clearTwelveHoursTimer:	
   361  0020                     ??_clearThreeHoursTimer:	
   362                           ; 0 bytes @ 0x0
   363                           
   364  0020                     ??_clearTwentySecondsTimer:	
   365                           ; 0 bytes @ 0x0
   366                           
   367  0020                     ??_clock_config:	
   368                           ; 0 bytes @ 0x0
   369                           
   370  0020                     ??_timer1_config:	
   371                           ; 0 bytes @ 0x0
   372                           
   373  0020                     ??_timer1_interrupt_config:	
   374                           ; 0 bytes @ 0x0
   375                           
   376  0020                     ?_adc_test_init:	
   377                           ; 0 bytes @ 0x0
   378                           
   379  0020                     ??_dac_init:	
   380                           ; 0 bytes @ 0x0
   381                           
   382  0020                     ??_op1_init:	
   383                           ; 0 bytes @ 0x0
   384                           
   385  0020                     ??_op2_init:	
   386                           ; 0 bytes @ 0x0
   387                           
   388  0020                     ??_adc_start:	
   389                           ; 0 bytes @ 0x0
   390                           
   391  0020                     ??_isPermitSampleTime:	
   392                           ; 0 bytes @ 0x0
   393                           
   394  0020                     ??_clrSampeTime:	
   395                           ; 0 bytes @ 0x0
   396                           
   397  0020                     ?_startTwelveHourTimer:	
   398                           ; 0 bytes @ 0x0
   399                           
   400  0020                     ??_isFinishedTwelveHoursTimer:	
   401                           ; 0 bytes @ 0x0
   402                           
   403  0020                     ??_startTwentySecondsTimer:	
   404                           ; 0 bytes @ 0x0
   405                           
   406  0020                     ??_isFinishedTwentySecondsTimer:	
   407                           ; 0 bytes @ 0x0
   408                           
   409  0020                     ?_startThreeHoursTimer:	
   410                           ; 0 bytes @ 0x0
   411                           
   412  0020                     ??_isFinishedThreeHoursTimer:	
   413                           ; 0 bytes @ 0x0
   414                           
   415  0020                     ??_AD_Sample:	
   416                           ; 0 bytes @ 0x0
   417                           
   418  0020                     ??_clearAllTimer:	
   419                           ; 0 bytes @ 0x0
   420                           
   421  0020                     ??_clearPinPortAndTimer:	
   422                           ; 0 bytes @ 0x0
   423                           
   424  0020                     ??_initPin:	
   425                           ; 0 bytes @ 0x0
   426                           
   427  0020                     ??_getAD_ConvertFlag:	
   428                           ; 0 bytes @ 0x0
   429                           
   430  0020                     ??_setAD_ConvertFlag:	
   431                           ; 0 bytes @ 0x0
   432                           
   433  0020                     ?_Filter:	
   434                           ; 0 bytes @ 0x0
   435                           
   436  0020                     setAD_ConvertFlag@flag:	
   437                           ; 2 bytes @ 0x0
   438                           
   439  0020                     adc_test_init@ref:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0020                     startTwelveHourTimer@uiSetTime:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0020                     startThreeHoursTimer@uiSetTime:	
   446                           ; 2 bytes @ 0x0
   447                           
   448                           
   449                           ; 2 bytes @ 0x0
   450  0020                     	ds	1
   451  0021                     ??_adc_test_init:	
   452                           
   453                           ; 0 bytes @ 0x1
   454  0021                     	ds	1
   455  0022                     ??_startTwelveHourTimer:	
   456  0022                     ??_startThreeHoursTimer:	
   457                           ; 0 bytes @ 0x2
   458                           
   459  0022                     ??_Filter:	
   460                           ; 0 bytes @ 0x2
   461                           
   462  0022                     adc_test_init@channel:	
   463                           ; 0 bytes @ 0x2
   464                           
   465                           
   466                           ; 1 bytes @ 0x2
   467  0022                     	ds	1
   468  0023                     ??_process_AD_Converter_Value:	
   469                           
   470                           ; 0 bytes @ 0x3
   471  0023                     	ds	3
   472  0026                     Filter@filter_buf:	
   473                           
   474                           ; 24 bytes @ 0x6
   475  0026                     	ds	24
   476  003E                     Filter@filter_temp:	
   477                           
   478                           ; 2 bytes @ 0x1E
   479  003E                     	ds	2
   480  0040                     Filter@filter_sum:	
   481                           
   482                           ; 2 bytes @ 0x20
   483  0040                     	ds	2
   484  0042                     Filter@tmpValue:	
   485                           
   486                           ; 1 bytes @ 0x22
   487  0042                     	ds	1
   488  0043                     Filter@cir:	
   489                           
   490                           ; 2 bytes @ 0x23
   491  0043                     	ds	2
   492  0045                     Filter@j:	
   493                           
   494                           ; 1 bytes @ 0x25
   495  0045                     	ds	1
   496  0046                     Filter@i:	
   497                           
   498                           ; 1 bytes @ 0x26
   499  0046                     	ds	1
   500  0047                     ?_getAdOriginalCh14Value:	
   501  0047                     ?_getAdOriginalCh1Value:	
   502                           ; 2 bytes @ 0x27
   503                           
   504  0047                     ?_getAdOriginaCh4Value:	
   505                           ; 2 bytes @ 0x27
   506                           
   507                           
   508                           ; 2 bytes @ 0x27
   509  0047                     	ds	2
   510  0049                     ??_getAdOriginalCh14Value:	
   511  0049                     ??_getAdOriginalCh1Value:	
   512                           ; 0 bytes @ 0x29
   513                           
   514  0049                     ??_getAdOriginaCh4Value:	
   515                           ; 0 bytes @ 0x29
   516                           
   517  0049                     ??_main:	
   518                           ; 0 bytes @ 0x29
   519                           
   520                           
   521                           	psect	maintext
   522  0013                     __pmaintext:	
   523                           ; 0 bytes @ 0x29
   524 ;;Data sizes: Strings 0, constant 0, data 1, bss 112, persistent 0 stack 0
   525 ;;Auto spaces:   Size  Autos    Used
   526 ;; COMMON          14     13      14
   527 ;; BANK0           80     41      79
   528 ;; BANK1           80      0      74
   529 ;; BANK3           96      0       0
   530 ;; BANK2           96      0       0
   531 ;;
   532 ;; Pointer list with targets:
   533 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   534 ;;
   535 ;; ?_getAdOriginalCh14Value	unsigned int  size(1) Largest target is 0
   536 ;;
   537 ;; ?_getAdOriginaCh4Value	unsigned int  size(1) Largest target is 0
   538 ;;
   539 ;; ?_getAdOriginalCh1Value	unsigned int  size(1) Largest target is 0
   540 ;;
   541 ;; ?_Filter	unsigned int  size(1) Largest target is 0
   542 ;;
   543 ;; Filter@tmpValue	PTR int  size(1) Largest target is 24
   544 ;;		 -> uiSampleChannelFourteenth(BANK1[24]), uiSampleChannelFourth(BANK1[24]), uiSampleChannelFirst(BANK1[24]), 
   545 ;;
   546 ;;
   547 ;; Critical Paths under _main in COMMON
   548 ;;
   549 ;;   None.
   550 ;;
   551 ;; Critical Paths under _ISR in COMMON
   552 ;;
   553 ;;   _ISR->_vPutSampleDataIntoTable
   554 ;;   _vPutSampleDataIntoTable->_adc_get
   555 ;;
   556 ;; Critical Paths under _main in BANK0
   557 ;;
   558 ;;   _main->_getAdOriginalCh14Value
   559 ;;   _main->_getAdOriginalCh1Value
   560 ;;   _main->_getAdOriginaCh4Value
   561 ;;   _getAdOriginaCh4Value->_Filter
   562 ;;   _getAdOriginalCh1Value->_Filter
   563 ;;   _getAdOriginalCh14Value->_Filter
   564 ;;   _process_AD_Converter_Value->_adc_test_init
   565 ;;
   566 ;; Critical Paths under _ISR in BANK0
   567 ;;
   568 ;;   None.
   569 ;;
   570 ;; Critical Paths under _main in BANK1
   571 ;;
   572 ;;   None.
   573 ;;
   574 ;; Critical Paths under _ISR in BANK1
   575 ;;
   576 ;;   None.
   577 ;;
   578 ;; Critical Paths under _main in BANK3
   579 ;;
   580 ;;   None.
   581 ;;
   582 ;; Critical Paths under _ISR in BANK3
   583 ;;
   584 ;;   None.
   585 ;;
   586 ;; Critical Paths under _main in BANK2
   587 ;;
   588 ;;   None.
   589 ;;
   590 ;; Critical Paths under _ISR in BANK2
   591 ;;
   592 ;;   None.
   593 ;;
   594 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   595 ;;
   596 ;;
   597 ;;Call Graph Tables:
   598 ;;
   599 ;; ---------------------------------------------------------------------------------
   600 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   601 ;; ---------------------------------------------------------------------------------
   602 ;; (0) _main                                                 0     0      0    2014
   603 ;;                            _initPin
   604 ;;                       _clock_config
   605 ;;                      _timer1_config
   606 ;;            _timer1_interrupt_config
   607 ;;                      _adc_test_init
   608 ;;                           _dac_init
   609 ;;                           _op1_init
   610 ;;                           _op2_init
   611 ;;                          _adc_start
   612 ;;         _process_AD_Converter_Value
   613 ;;                 _isPermitSampleTime
   614 ;;                       _clrSampeTime
   615 ;;             _getAdOriginalCh14Value
   616 ;;               _clearPinPortAndTimer
   617 ;;              _getAdOriginalCh1Value
   618 ;;               _startTwelveHourTimer
   619 ;;         _isFinishedTwelveHoursTimer
   620 ;;            _startTwentySecondsTimer
   621 ;;               _getAdOriginaCh4Value
   622 ;;       _isFinishedTwentySecondsTimer
   623 ;;               _startThreeHoursTimer
   624 ;;          _isFinishedThreeHoursTimer
   625 ;;               _clearThreeHoursTimer
   626 ;;                      _clearAllTimer
   627 ;; ---------------------------------------------------------------------------------
   628 ;; (1) _clearPinPortAndTimer                                 0     0      0       0
   629 ;;                      _clearAllTimer
   630 ;; ---------------------------------------------------------------------------------
   631 ;; (1) _getAdOriginaCh4Value                                 2     0      2     620
   632 ;;                                             39 BANK0      2     0      2
   633 ;;                             _Filter
   634 ;; ---------------------------------------------------------------------------------
   635 ;; (1) _getAdOriginalCh1Value                                2     0      2     620
   636 ;;                                             39 BANK0      2     0      2
   637 ;;                             _Filter
   638 ;; ---------------------------------------------------------------------------------
   639 ;; (1) _getAdOriginalCh14Value                               2     0      2     620
   640 ;;                                             39 BANK0      2     0      2
   641 ;;                             _Filter
   642 ;; ---------------------------------------------------------------------------------
   643 ;; (1) _process_AD_Converter_Value                           0     0      0      66
   644 ;;                  _getAD_ConvertFlag
   645 ;;                  _setAD_ConvertFlag
   646 ;;                          _AD_Sample
   647 ;;                      _adc_test_init
   648 ;;                          _adc_start
   649 ;; ---------------------------------------------------------------------------------
   650 ;; (1) _clearAllTimer                                        0     0      0       0
   651 ;;              _clearTwelveHoursTimer
   652 ;;               _clearThreeHoursTimer
   653 ;;            _clearTwentySecondsTimer
   654 ;; ---------------------------------------------------------------------------------
   655 ;; (2) _AD_Sample                                            0     0      0       0
   656 ;; ---------------------------------------------------------------------------------
   657 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   658 ;;                                              0 BANK0      1     1      0
   659 ;; ---------------------------------------------------------------------------------
   660 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   661 ;; ---------------------------------------------------------------------------------
   662 ;; (2) _Filter                                              39    37      2     620
   663 ;;                                              0 BANK0     39    37      2
   664 ;; ---------------------------------------------------------------------------------
   665 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   666 ;; ---------------------------------------------------------------------------------
   667 ;; (1) _startThreeHoursTimer                                 2     0      2      22
   668 ;;                                              0 BANK0      2     0      2
   669 ;; ---------------------------------------------------------------------------------
   670 ;; (1) _isFinishedTwentySecondsTimer                         0     0      0       0
   671 ;; ---------------------------------------------------------------------------------
   672 ;; (1) _startTwentySecondsTimer                              0     0      0       0
   673 ;; ---------------------------------------------------------------------------------
   674 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   675 ;; ---------------------------------------------------------------------------------
   676 ;; (1) _startTwelveHourTimer                                 2     0      2      22
   677 ;;                                              0 BANK0      2     0      2
   678 ;; ---------------------------------------------------------------------------------
   679 ;; (1) _clrSampeTime                                         0     0      0       0
   680 ;; ---------------------------------------------------------------------------------
   681 ;; (1) _isPermitSampleTime                                   0     0      0       0
   682 ;; ---------------------------------------------------------------------------------
   683 ;; (2) _adc_start                                            0     0      0       0
   684 ;; ---------------------------------------------------------------------------------
   685 ;; (1) _op2_init                                             0     0      0       0
   686 ;; ---------------------------------------------------------------------------------
   687 ;; (1) _op1_init                                             0     0      0       0
   688 ;; ---------------------------------------------------------------------------------
   689 ;; (1) _dac_init                                             0     0      0       0
   690 ;; ---------------------------------------------------------------------------------
   691 ;; (2) _adc_test_init                                        3     2      1      44
   692 ;;                                              0 BANK0      3     2      1
   693 ;; ---------------------------------------------------------------------------------
   694 ;; (1) _timer1_interrupt_config                              0     0      0       0
   695 ;; ---------------------------------------------------------------------------------
   696 ;; (1) _timer1_config                                        0     0      0       0
   697 ;; ---------------------------------------------------------------------------------
   698 ;; (1) _clock_config                                         0     0      0       0
   699 ;; ---------------------------------------------------------------------------------
   700 ;; (1) _initPin                                              0     0      0       0
   701 ;; ---------------------------------------------------------------------------------
   702 ;; (2) _clearTwentySecondsTimer                              0     0      0       0
   703 ;; ---------------------------------------------------------------------------------
   704 ;; (2) _clearThreeHoursTimer                                 0     0      0       0
   705 ;; ---------------------------------------------------------------------------------
   706 ;; (2) _clearTwelveHoursTimer                                0     0      0       0
   707 ;; ---------------------------------------------------------------------------------
   708 ;; Estimated maximum stack depth 2
   709 ;; ---------------------------------------------------------------------------------
   710 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   711 ;; ---------------------------------------------------------------------------------
   712 ;; (4) _ISR                                                  4     4      0     407
   713 ;;                                              9 COMMON     4     4      0
   714 ;;                i1_setAD_ConvertFlag
   715 ;;                            _adc_get
   716 ;;            _vPutSampleDataIntoTable
   717 ;; ---------------------------------------------------------------------------------
   718 ;; (5) i1_setAD_ConvertFlag                                  1     1      0      73
   719 ;;                                              0 COMMON     1     1      0
   720 ;; ---------------------------------------------------------------------------------
   721 ;; (5) _adc_get                                              4     2      2      24
   722 ;;                                              0 COMMON     4     2      2
   723 ;; ---------------------------------------------------------------------------------
   724 ;; (5) _vPutSampleDataIntoTable                              5     2      3     310
   725 ;;                                              4 COMMON     5     2      3
   726 ;;                            _adc_get (ARG)
   727 ;; ---------------------------------------------------------------------------------
   728 ;; Estimated maximum stack depth 5
   729 ;; ---------------------------------------------------------------------------------
   730 ;; Call Graph Graphs:
   731 ;; _main (ROOT)
   732 ;;   _initPin
   733 ;;   _clock_config
   734 ;;   _timer1_config
   735 ;;   _timer1_interrupt_config
   736 ;;   _adc_test_init
   737 ;;   _dac_init
   738 ;;   _op1_init
   739 ;;   _op2_init
   740 ;;   _adc_start
   741 ;;   _process_AD_Converter_Value
   742 ;;     _getAD_ConvertFlag
   743 ;;     _setAD_ConvertFlag
   744 ;;     _AD_Sample
   745 ;;     _adc_test_init
   746 ;;     _adc_start
   747 ;;   _isPermitSampleTime
   748 ;;   _clrSampeTime
   749 ;;   _getAdOriginalCh14Value
   750 ;;     _Filter
   751 ;;   _clearPinPortAndTimer
   752 ;;     _clearAllTimer
   753 ;;       _clearTwelveHoursTimer
   754 ;;       _clearThreeHoursTimer
   755 ;;       _clearTwentySecondsTimer
   756 ;;   _getAdOriginalCh1Value
   757 ;;     _Filter
   758 ;;   _startTwelveHourTimer
   759 ;;   _isFinishedTwelveHoursTimer
   760 ;;   _startTwentySecondsTimer
   761 ;;   _getAdOriginaCh4Value
   762 ;;     _Filter
   763 ;;   _isFinishedTwentySecondsTimer
   764 ;;   _startThreeHoursTimer
   765 ;;   _isFinishedThreeHoursTimer
   766 ;;   _clearThreeHoursTimer
   767 ;;   _clearAllTimer
   768 ;;     _clearTwelveHoursTimer
   769 ;;     _clearThreeHoursTimer
   770 ;;     _clearTwentySecondsTimer
   771 ;;
   772 ;; _ISR (ROOT)
   773 ;;   i1_setAD_ConvertFlag
   774 ;;   _adc_get
   775 ;;   _vPutSampleDataIntoTable
   776 ;;     _adc_get (ARG)
   777 ;;
   778 ;; Address spaces:
   779 ;;Name               Size   Autos  Total    Cost      Usage
   780 ;;BANK3               60      0       0      10        0.0%
   781 ;;BITBANK3            60      0       0       9        0.0%
   782 ;;SFR3                 0      0       0       4        0.0%
   783 ;;BITSFR3              0      0       0       4        0.0%
   784 ;;BANK2               60      0       0      12        0.0%
   785 ;;BITBANK2            60      0       0      11        0.0%
   786 ;;SFR2                 0      0       0       5        0.0%
   787 ;;BITSFR2              0      0       0       5        0.0%
   788 ;;SFR1                 0      0       0       2        0.0%
   789 ;;BITSFR1              0      0       0       2        0.0%
   790 ;;BANK1               50      0      4A       8       92.5%
   791 ;;BITBANK1            50      0       0       7        0.0%
   792 ;;CODE                 0      0       0       0        0.0%
   793 ;;DATA                 0      0      AE       6        0.0%
   794 ;;ABS                  0      0      A7       3        0.0%
   795 ;;NULL                 0      0       0       0        0.0%
   796 ;;STACK                0      0       7       2        0.0%
   797 ;;BANK0               50     29      4F       5       98.8%
   798 ;;BITBANK0            50      0       0       4        0.0%
   799 ;;SFR0                 0      0       0       1        0.0%
   800 ;;BITSFR0              0      0       0       1        0.0%
   801 ;;COMMON               E      D       E       1      100.0%
   802 ;;BITCOMMON            E      0       0       0        0.0%
   803                           
   804                           
   805 ;; *************** function _main *****************
   806 ;; Defined at:
   807 ;;		line 129 in file "D:\develop\ATK\AK7030-OTP\main.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;		None
   810 ;; Auto vars:     Size  Location     Type
   811 ;;		None
   812 ;; Return value:  Size  Location     Type
   813 ;;		None               void
   814 ;; Registers used:
   815 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   816 ;; Tracked objects:
   817 ;;		On entry : 17F/0
   818 ;;		On exit  : 60/0
   819 ;;		Unchanged: FFE00/0
   820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   821 ;;      Params:         0       0       0       0       0
   822 ;;      Locals:         0       0       0       0       0
   823 ;;      Temps:          0       0       0       0       0
   824 ;;      Totals:         0       0       0       0       0
   825 ;;Total ram usage:        0 bytes
   826 ;; Hardware stack levels required when called:    5
   827 ;; This function calls:
   828 ;;		_initPin
   829 ;;		_clock_config
   830 ;;		_timer1_config
   831 ;;		_timer1_interrupt_config
   832 ;;		_adc_test_init
   833 ;;		_dac_init
   834 ;;		_op1_init
   835 ;;		_op2_init
   836 ;;		_adc_start
   837 ;;		_process_AD_Converter_Value
   838 ;;		_isPermitSampleTime
   839 ;;		_clrSampeTime
   840 ;;		_getAdOriginalCh14Value
   841 ;;		_clearPinPortAndTimer
   842 ;;		_getAdOriginalCh1Value
   843 ;;		_startTwelveHourTimer
   844 ;;		_isFinishedTwelveHoursTimer
   845 ;;		_startTwentySecondsTimer
   846 ;;		_getAdOriginaCh4Value
   847 ;;		_isFinishedTwentySecondsTimer
   848 ;;		_startThreeHoursTimer
   849 ;;		_isFinishedThreeHoursTimer
   850 ;;		_clearThreeHoursTimer
   851 ;;		_clearAllTimer
   852 ;; This function is called by:
   853 ;;		Startup code after reset
   854 ;; This function uses a non-reentrant model
   855 ;;
   856  0013                     _main:	
   857                           
   858                           ;main.c: 130: enum setp_Adc4
   859                           ;main.c: 131: {
   860                           ;main.c: 132: ADC4_STEP_INIT = 0,
   861                           ;main.c: 133: ADC4_STEP_FIRST,
   862                           ;main.c: 134: ADC4_STEP_SECOND,
   863                           ;main.c: 135: ADC4_STEP_THIRD,
   864                           ;main.c: 136: ADC4_STEP_FOURTH,
   865                           ;main.c: 137: ADC4_STEP_FIFTH,
   866                           ;main.c: 138: ADC4_STEP_SIXTH,
   867                           ;main.c: 139: };
   868                           ;main.c: 142: static unsigned char ucWaitTime1S = 0;
   869                           ;main.c: 144: static unsigned char ucWaitTimeO3s = 0;
   870                           ;main.c: 146: static unsigned char ucSmallTimerActionFlag = 0;
   871                           ;main.c: 148: static unsigned char ucSetSmallActionFlag = 0;
   872                           
   873                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   874  0013  1683               	bsf	3,5	;RP0=1, select bank1
   875  0014  1005               	bcf	5,0
   876                           
   877                           ;main.c: 151: TRISA1 = 0;
   878  0015  1085               	bcf	5,1
   879                           
   880                           ;main.c: 152: TRISA2 = 0;
   881  0016  1105               	bcf	5,2
   882                           
   883                           ;main.c: 153: TRISA3 = 0;
   884  0017  1185               	bcf	5,3
   885                           
   886                           ;main.c: 154: TRISB0 = 0;
   887  0018  1006               	bcf	6,0
   888                           
   889                           ;main.c: 155: TRISB1 = 0;
   890  0019  1086               	bcf	6,1
   891                           
   892                           ;main.c: 156: TRISA6 = 0;
   893  001A  1305               	bcf	5,6
   894                           
   895                           ;main.c: 157: TRISA7 = 0;
   896  001B  1385               	bcf	5,7
   897                           
   898                           ;main.c: 158: TRISB6 = 0;
   899  001C  1306               	bcf	6,6
   900                           
   901                           ;main.c: 161: initPin();
   902  001D  118A  251E  118A   	fcall	_initPin
   903                           
   904                           ;main.c: 164: TRISB2 = 1;
   905  0020  1303               	bcf	3,6	;RP1=0, select bank1
   906  0021  1506               	bsf	6,2
   907                           
   908                           ;main.c: 166: TRISB7 = 1;
   909  0022  1786               	bsf	6,7
   910                           
   911                           ;main.c: 167: TRISB4 = 1;
   912  0023  1606               	bsf	6,4
   913                           
   914                           ;main.c: 169: clock_config();
   915  0024  118A  25A2  118A   	fcall	_clock_config
   916                           
   917                           ;main.c: 170: timer1_config();
   918  0027  118A  2576  118A   	fcall	_timer1_config
   919                           
   920                           ;main.c: 171: timer1_interrupt_config();
   921  002A  118A  25C9  118A   	fcall	_timer1_interrupt_config
   922                           
   923                           ;main.c: 173: adc_test_init(14,3);
   924  002D  3003               	movlw	3
   925  002E  1283               	bcf	3,5	;RP0=0, select bank0
   926  002F  00A0               	movwf	?_adc_test_init
   927  0030  300E               	movlw	14
   928  0031  118A  24EB  118A   	fcall	_adc_test_init
   929                           
   930                           ;main.c: 175: dac_init();
   931  0034  118A  25C4  118A   	fcall	_dac_init
   932                           
   933                           ;main.c: 176: op1_init();
   934  0037  118A  256B  118A   	fcall	_op1_init
   935                           
   936                           ;main.c: 177: op2_init();
   937  003A  118A  259A  118A   	fcall	_op2_init
   938                           
   939                           ;main.c: 180: adc_start();
   940  003D  118A  2500  118A   	fcall	_adc_start
   941  0040                     l4118:	
   942  0040  0064               	clrwdt	;#
   943                           
   944                           ;main.c: 215: process_AD_Converter_Value();
   945  0041  118A  24A9  118A   	fcall	_process_AD_Converter_Value
   946                           
   947                           ;main.c: 217: if(isPermitSampleTime())
   948  0044  118A  25BF  118A   	fcall	_isPermitSampleTime
   949  0047  3A00               	xorlw	0
   950  0048  1903               	skipnz
   951  0049  2840               	goto	l4118
   952                           
   953                           ;main.c: 218: {
   954                           ;main.c: 219: clrSampeTime();
   955  004A  118A  25CC  118A   	fcall	_clrSampeTime
   956                           
   957                           ;main.c: 221: switch(enumMainLoopStep)
   958  004D  2AFC               	goto	l4608
   959  004E                     l4126:	
   960                           
   961                           ;main.c: 224: {
   962                           ;main.c: 225: static unsigned char ucTimerZeroPoint5s = 0;
   963                           ;main.c: 226: if(getAdOriginalCh14Value() > 1950)
   964  004E  118A  23FE  118A   	fcall	_getAdOriginalCh14Value
   965  0051  3007               	movlw	7
   966  0052  0248               	subwf	?_getAdOriginalCh14Value+1,w
   967  0053  309F               	movlw	159
   968  0054  1903               	skipnz
   969  0055  0247               	subwf	?_getAdOriginalCh14Value,w
   970  0056  1C03               	skipc
   971  0057  285A               	goto	l4130
   972                           
   973                           ;main.c: 227: {
   974                           ;main.c: 228: ucTimerZeroPoint5s++;
   975  0058  0AEB               	incf	main@ucTimerZeroPoint5s,f
   976                           
   977                           ;main.c: 229: }
   978  0059  285B               	goto	l4132
   979  005A                     l4130:	
   980                           
   981                           ;main.c: 230: else
   982                           ;main.c: 231: ucTimerZeroPoint5s = 0;
   983  005A  01EB               	clrf	main@ucTimerZeroPoint5s
   984  005B                     l4132:	
   985                           
   986                           ;main.c: 233: if(ucTimerZeroPoint5s >= 1)
   987  005B  086B               	movf	main@ucTimerZeroPoint5s,w
   988  005C  1903               	btfsc	3,2
   989  005D  2840               	goto	l4118
   990                           
   991                           ;main.c: 234: {
   992                           ;main.c: 235: ucTimerZeroPoint5s = 0;
   993  005E  01EB               	clrf	main@ucTimerZeroPoint5s
   994  005F                     l4136:	
   995                           
   996                           ;main.c: 236: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
   997  005F  1283               	bcf	3,5	;RP0=0, select bank0
   998  0060  01D4               	clrf	main@enumMainLoopStep
   999  0061  0AD4               	incf	main@enumMainLoopStep,f
  1000  0062                     l706:	
  1001                           
  1002                           ;main.c: 237: }
  1003                           ;main.c: 238: break;
  1004  0062  2840               	goto	l4118
  1005  0063                     l4138:	
  1006                           
  1007                           ;main.c: 242: {
  1008                           ;main.c: 243: static unsigned char ucTimerZeroPoint3s = 0;
  1009                           ;main.c: 245: if(ucTimerZeroPoint3s < 1)
  1010  0063  08EA               	movf	main@ucTimerZeroPoint3s,f
  1011  0064  1D03               	skipz
  1012  0065  2868               	goto	l4142
  1013                           
  1014                           ;main.c: 246: {
  1015                           ;main.c: 247: ucTimerZeroPoint3s++;
  1016  0066  0AEA               	incf	main@ucTimerZeroPoint3s,f
  1017                           
  1018                           ;main.c: 248: }
  1019  0067  2840               	goto	l4118
  1020  0068                     l4142:	
  1021                           
  1022                           ;main.c: 249: else
  1023                           ;main.c: 250: {
  1024                           ;main.c: 251: ucTimerZeroPoint3s = 0;
  1025  0068  01EA               	clrf	main@ucTimerZeroPoint3s
  1026                           
  1027                           ;main.c: 253: if(getAdOriginalCh14Value() > 1950)
  1028  0069  118A  23FE  118A   	fcall	_getAdOriginalCh14Value
  1029  006C  3007               	movlw	7
  1030  006D  0248               	subwf	?_getAdOriginalCh14Value+1,w
  1031  006E  309F               	movlw	159
  1032  006F  1903               	skipnz
  1033  0070  0247               	subwf	?_getAdOriginalCh14Value,w
  1034  0071  1C03               	skipc
  1035  0072  2875               	goto	l4148
  1036  0073                     l4146:	
  1037                           
  1038                           ;main.c: 254: {
  1039                           ;main.c: 256: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
  1040  0073  3002               	movlw	2
  1041  0074  28B9               	goto	L5
  1042  0075                     l4148:	
  1043                           ;main.c: 257: }
  1044                           
  1045                           
  1046                           ;main.c: 258: else
  1047                           ;main.c: 259: {
  1048                           ;main.c: 260: clearPinPortAndTimer();
  1049  0075  118A  2503  118A   	fcall	_clearPinPortAndTimer
  1050  0078  2840               	goto	l4118
  1051  0079                     l715:	
  1052                           ;main.c: 264: }
  1053                           ;main.c: 266: case MAIN_LOOP_STEP_SECOND:
  1054                           
  1055  0079  3005               	movlw	5
  1056                           
  1057                           ;main.c: 267: {
  1058                           ;main.c: 268: static unsigned char ucTimerP5s = 0;
  1059                           ;main.c: 270: PA6 = 1;
  1060  007A  1705               	bsf	5,6
  1061                           
  1062                           ;main.c: 272: if(ucTimerP5s < 5)
  1063  007B  0266               	subwf	main@ucTimerP5s,w
  1064  007C  1803               	skipnc
  1065  007D  2880               	goto	l4154
  1066                           
  1067                           ;main.c: 273: ucTimerP5s++;
  1068  007E  0AE6               	incf	main@ucTimerP5s,f
  1069  007F  2840               	goto	l4118
  1070  0080                     l4154:	
  1071  0080  3003               	movlw	3
  1072                           
  1073                           ;main.c: 274: else
  1074                           ;main.c: 275: {
  1075                           ;main.c: 276: ucTimerP5s = 0;
  1076  0081  01E6               	clrf	main@ucTimerP5s
  1077                           
  1078                           ;main.c: 278: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  1079  0082  28B9               	goto	L5
  1080  0083                     l4158:	
  1081                           
  1082                           ;main.c: 285: {
  1083                           ;main.c: 286: static unsigned char ucTimerADC1ZeroP5s = 0;
  1084                           ;main.c: 288: if(getAdOriginalCh1Value() < 130)
  1085  0083  118A  23F7  118A   	fcall	_getAdOriginalCh1Value
  1086  0086  3000               	movlw	0
  1087  0087  0248               	subwf	?_getAdOriginalCh1Value+1,w
  1088  0088  3082               	movlw	130
  1089  0089  1903               	skipnz
  1090  008A  0247               	subwf	?_getAdOriginalCh1Value,w
  1091  008B  1803               	skipnc
  1092  008C  288F               	goto	l4162
  1093                           
  1094                           ;main.c: 289: {
  1095                           ;main.c: 290: ucTimerADC1ZeroP5s = 0;
  1096  008D  01DE               	clrf	main@ucTimerADC1ZeroP5s
  1097                           
  1098                           ;main.c: 292: }
  1099  008E  2890               	goto	l4164
  1100  008F                     l4162:	
  1101                           
  1102                           ;main.c: 293: else
  1103                           ;main.c: 294: {
  1104                           ;main.c: 295: ucTimerADC1ZeroP5s++;
  1105  008F  0ADE               	incf	main@ucTimerADC1ZeroP5s,f
  1106  0090                     l4164:	
  1107                           
  1108                           ;main.c: 296: }
  1109                           ;main.c: 298: if(ucTimerADC1ZeroP5s >= 1)
  1110  0090  085E               	movf	main@ucTimerADC1ZeroP5s,w
  1111  0091  1903               	btfsc	3,2
  1112  0092  2896               	goto	l4170
  1113  0093  3004               	movlw	4
  1114                           
  1115                           ;main.c: 299: {
  1116                           ;main.c: 300: ucTimerADC1ZeroP5s = 0;
  1117  0094  01DE               	clrf	main@ucTimerADC1ZeroP5s
  1118                           
  1119                           ;main.c: 301: enumMainLoopStep = MAIN_LOOP_STEP_FOURTH;
  1120  0095  28B9               	goto	L5
  1121  0096                     l4170:	
  1122                           ;main.c: 302: }
  1123                           
  1124                           
  1125                           ;main.c: 303: else
  1126                           ;main.c: 304: {
  1127                           ;main.c: 305: static unsigned char ucTimerRightP5s = 0;
  1128                           ;main.c: 307: if(getAdOriginalCh1Value() < 117)
  1129  0096  118A  23F7  118A   	fcall	_getAdOriginalCh1Value
  1130  0099  3000               	movlw	0
  1131  009A  0248               	subwf	?_getAdOriginalCh1Value+1,w
  1132  009B  3075               	movlw	117
  1133  009C  1903               	skipnz
  1134  009D  0247               	subwf	?_getAdOriginalCh1Value,w
  1135  009E  1803               	skipnc
  1136  009F  28A2               	goto	l4174
  1137                           
  1138                           ;main.c: 308: {
  1139                           ;main.c: 309: ucTimerRightP5s++;
  1140  00A0  0AE7               	incf	main@ucTimerRightP5s,f
  1141                           
  1142                           ;main.c: 310: }
  1143  00A1  28A3               	goto	l4176
  1144  00A2                     l4174:	
  1145                           
  1146                           ;main.c: 311: else
  1147                           ;main.c: 312: {
  1148                           ;main.c: 313: ucTimerRightP5s = 0;
  1149  00A2  01E7               	clrf	main@ucTimerRightP5s
  1150  00A3                     l4176:	
  1151                           
  1152                           ;main.c: 314: }
  1153                           ;main.c: 316: if(ucTimerRightP5s >= 1)
  1154  00A3  0867               	movf	main@ucTimerRightP5s,w
  1155  00A4  1903               	btfsc	3,2
  1156  00A5  2840               	goto	l4118
  1157  00A6  3008               	movlw	8
  1158                           
  1159                           ;main.c: 317: {
  1160                           ;main.c: 318: ucTimerRightP5s = 0;
  1161  00A7  01E7               	clrf	main@ucTimerRightP5s
  1162                           
  1163                           ;main.c: 319: enumMainLoopStep = MAIN_LOOP_STEP_3_HOUR_BRANCH;
  1164  00A8  28B9               	goto	L5
  1165  00A9                     l4182:	
  1166                           ;main.c: 320: }
  1167                           
  1168                           
  1169                           ;main.c: 331: {
  1170                           ;main.c: 333: startTwelveHourTimer(600);
  1171  00A9  3058               	movlw	88
  1172  00AA  00A0               	movwf	?_startTwelveHourTimer
  1173  00AB  3002               	movlw	2
  1174  00AC  00A1               	movwf	?_startTwelveHourTimer+1
  1175  00AD  118A  2589  118A   	fcall	_startTwelveHourTimer
  1176                           
  1177                           ;main.c: 334: enumMainLoopStep = MAIN_LOOP_STEP_FIFTH;
  1178  00B0  3005               	movlw	5
  1179  00B1  28B9               	goto	L5
  1180  00B2                     l4186:	
  1181                           ;main.c: 336: break;
  1182                           
  1183                           
  1184                           ;main.c: 340: {
  1185                           ;main.c: 342: if(isFinishedTwelveHoursTimer())
  1186  00B2  118A  25BA  118A   	fcall	_isFinishedTwelveHoursTimer
  1187  00B5  3A00               	xorlw	0
  1188  00B6  1903               	skipnz
  1189  00B7  2A38               	goto	l4504
  1190  00B8                     l4188:	
  1191                           
  1192                           ;main.c: 343: {
  1193                           ;main.c: 344: enumMainLoopStep = MAIN_LOOP_STEP_12_HOUR_END;
  1194  00B8  3009               	movlw	9
  1195  00B9                     L5:	
  1196  00B9  00D4               	movwf	main@enumMainLoopStep
  1197                           
  1198                           ;main.c: 345: }
  1199  00BA  2840               	goto	l4118
  1200  00BB                     l4190:	
  1201                           
  1202                           ;main.c: 353: {
  1203                           ;main.c: 354: startTwentySecondsTimer();
  1204  00BB  118A  25B5  118A   	fcall	_startTwentySecondsTimer
  1205  00BE                     l4192:	
  1206                           
  1207                           ;main.c: 355: ucADC4_Step = ADC4_STEP_FIRST;
  1208  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1209  00BF  01D5               	clrf	main@ucADC4_Step
  1210  00C0  0AD5               	incf	main@ucADC4_Step,f
  1211                           
  1212                           ;main.c: 356: break;
  1213  00C1  2840               	goto	l4118
  1214  00C2                     l4194:	
  1215                           
  1216                           ;main.c: 360: {
  1217                           ;main.c: 361: if(getAdOriginaCh4Value() < 1911)
  1218  00C2  118A  23F0  118A   	fcall	_getAdOriginaCh4Value
  1219  00C5  3007               	movlw	7
  1220  00C6  0248               	subwf	?_getAdOriginaCh4Value+1,w
  1221  00C7  3077               	movlw	119
  1222  00C8  1903               	skipnz
  1223  00C9  0247               	subwf	?_getAdOriginaCh4Value,w
  1224  00CA  1803               	skipnc
  1225  00CB  28CE               	goto	l4198
  1226                           
  1227                           ;main.c: 362: ucChannel4Type = LESS_THAN_1911;
  1228  00CC  01D6               	clrf	main@ucChannel4Type
  1229  00CD  28F5               	goto	l744
  1230  00CE                     l4198:	
  1231                           
  1232                           ;main.c: 363: else if(getAdOriginaCh4Value() < 2067)
  1233  00CE  118A  23F0  118A   	fcall	_getAdOriginaCh4Value
  1234  00D1  3008               	movlw	8
  1235  00D2  0248               	subwf	?_getAdOriginaCh4Value+1,w
  1236  00D3  3013               	movlw	19
  1237  00D4  1903               	skipnz
  1238  00D5  0247               	subwf	?_getAdOriginaCh4Value,w
  1239  00D6  1803               	skipnc
  1240  00D7  28DB               	goto	l4202
  1241                           
  1242                           ;main.c: 364: ucChannel4Type = BETWEEN_1911_AND_2067;
  1243  00D8  01D6               	clrf	main@ucChannel4Type
  1244  00D9  0AD6               	incf	main@ucChannel4Type,f
  1245  00DA  28F5               	goto	l744
  1246  00DB                     l4202:	
  1247                           
  1248                           ;main.c: 365: else if(getAdOriginaCh4Value() < 2204)
  1249  00DB  118A  23F0  118A   	fcall	_getAdOriginaCh4Value
  1250  00DE  3008               	movlw	8
  1251  00DF  0248               	subwf	?_getAdOriginaCh4Value+1,w
  1252  00E0  309C               	movlw	156
  1253  00E1  1903               	skipnz
  1254  00E2  0247               	subwf	?_getAdOriginaCh4Value,w
  1255  00E3  1803               	skipnc
  1256  00E4  28E7               	goto	l4206
  1257                           
  1258                           ;main.c: 366: ucChannel4Type = BETWEEN_2067_AND_2204;
  1259  00E5  3002               	movlw	2
  1260  00E6  28F4               	goto	L6
  1261  00E7                     l4206:	
  1262                           
  1263                           ;main.c: 367: else if(getAdOriginaCh4Value() < 2340)
  1264  00E7  118A  23F0  118A   	fcall	_getAdOriginaCh4Value
  1265  00EA  3009               	movlw	9
  1266  00EB  0248               	subwf	?_getAdOriginaCh4Value+1,w
  1267  00EC  3024               	movlw	36
  1268  00ED  1903               	skipnz
  1269  00EE  0247               	subwf	?_getAdOriginaCh4Value,w
  1270  00EF  1803               	skipnc
  1271  00F0  28F3               	goto	l4210
  1272                           
  1273                           ;main.c: 368: ucChannel4Type = BETWEEN_2204_AND_2340;
  1274  00F1  3003               	movlw	3
  1275  00F2  28F4               	goto	L6
  1276  00F3                     l4210:	
  1277                           
  1278                           ;main.c: 369: else
  1279                           ;main.c: 370: ucChannel4Type = MORE_THAN_2340;
  1280  00F3  3004               	movlw	4
  1281  00F4                     L6:	
  1282  00F4  00D6               	movwf	main@ucChannel4Type
  1283  00F5                     l744:	
  1284                           
  1285                           ;main.c: 372: ucADC4_Step = ADC4_STEP_SECOND;
  1286  00F5  3002               	movlw	2
  1287  00F6  2A27               	goto	L8
  1288  00F7                     l759:	
  1289                           ;main.c: 387: {
  1290                           ;main.c: 388: case 0:
  1291                           
  1292                           ;main.c: 373: break;
  1293                           
  1294                           
  1295                           ;main.c: 389: {
  1296                           ;main.c: 390: PB0 = 1;
  1297  00F7  1406               	bsf	6,0
  1298  00F8                     l4212:	
  1299                           
  1300                           ;main.c: 391: ucLoaderStep++;
  1301  00F8  0AD7               	incf	main@ucLoaderStep,f
  1302                           
  1303                           ;main.c: 392: break;
  1304  00F9  2840               	goto	l4118
  1305  00FA                     l4214:	
  1306                           
  1307                           ;main.c: 396: {
  1308                           ;main.c: 397: if(ucTimerDelay >= 5)
  1309  00FA  3005               	movlw	5
  1310  00FB  025F               	subwf	main@ucTimerDelay,w
  1311  00FC  1C03               	skipc
  1312  00FD  2901               	goto	l4222
  1313                           
  1314                           ;main.c: 398: {
  1315                           ;main.c: 399: PA0 = 1;
  1316  00FE  1405               	bsf	5,0
  1317  00FF                     l4218:	
  1318                           
  1319                           ;main.c: 400: ucTimerDelay = 0;
  1320  00FF  01DF               	clrf	main@ucTimerDelay
  1321  0100  28F8               	goto	l4212
  1322  0101                     l4222:	
  1323                           
  1324                           ;main.c: 403: else
  1325                           ;main.c: 404: ucTimerDelay++;
  1326  0101  0ADF               	incf	main@ucTimerDelay,f
  1327  0102  2840               	goto	l4118
  1328  0103                     l4224:	
  1329                           
  1330                           ;main.c: 409: {
  1331                           ;main.c: 410: if(ucTimerDelay >= 5)
  1332  0103  3005               	movlw	5
  1333  0104  025F               	subwf	main@ucTimerDelay,w
  1334  0105  1C03               	skipc
  1335  0106  2901               	goto	l4222
  1336                           
  1337                           ;main.c: 411: {
  1338                           ;main.c: 412: PA1= 1;
  1339  0107  1485               	bsf	5,1
  1340  0108  28FF               	goto	l4218
  1341  0109                     l4234:	
  1342                           
  1343                           ;main.c: 423: {
  1344                           ;main.c: 424: if(ucTimerDelay >= 5)
  1345  0109  3005               	movlw	5
  1346  010A  025F               	subwf	main@ucTimerDelay,w
  1347  010B  1C03               	skipc
  1348  010C  2901               	goto	l4222
  1349                           
  1350                           ;main.c: 425: {
  1351                           ;main.c: 426: PA2= 1;
  1352  010D  1505               	bsf	5,2
  1353  010E  28FF               	goto	l4218
  1354  010F                     l4244:	
  1355                           
  1356                           ;main.c: 436: {
  1357                           ;main.c: 437: if(ucTimerDelay >= 5)
  1358  010F  3005               	movlw	5
  1359  0110  025F               	subwf	main@ucTimerDelay,w
  1360  0111  1C03               	skipc
  1361  0112  2901               	goto	l4222
  1362                           
  1363                           ;main.c: 438: {
  1364                           ;main.c: 439: PA3 = 1;
  1365  0113  1585               	bsf	5,3
  1366  0114  28FF               	goto	l4218
  1367  0115                     l4254:	
  1368                           
  1369                           ;main.c: 449: {
  1370                           ;main.c: 450: if(ucTimerDelay >= 5)
  1371  0115  3005               	movlw	5
  1372  0116  025F               	subwf	main@ucTimerDelay,w
  1373  0117  1C03               	skipc
  1374  0118  2901               	goto	l4222
  1375                           
  1376                           ;main.c: 451: {
  1377                           ;main.c: 452: PB0 = 0;
  1378  0119  1006               	bcf	6,0
  1379                           
  1380                           ;main.c: 453: PA0 = 0;
  1381  011A  1005               	bcf	5,0
  1382                           
  1383                           ;main.c: 454: PA1 = 0;
  1384  011B  1085               	bcf	5,1
  1385                           
  1386                           ;main.c: 455: PA2 = 0;
  1387  011C  1105               	bcf	5,2
  1388                           
  1389                           ;main.c: 456: PA3 = 0;
  1390  011D  1185               	bcf	5,3
  1391  011E  28FF               	goto	l4218
  1392  011F                     l4264:	
  1393                           
  1394                           ;main.c: 466: {
  1395                           ;main.c: 467: if(ucTimerDelay >= 2)
  1396  011F  3002               	movlw	2
  1397  0120  025F               	subwf	main@ucTimerDelay,w
  1398  0121  1C03               	skipc
  1399  0122  2901               	goto	l4222
  1400                           
  1401                           ;main.c: 468: {
  1402                           ;main.c: 469: ucTimerDelay = 0;
  1403  0123  01DF               	clrf	main@ucTimerDelay
  1404                           
  1405                           ;main.c: 471: ucLoaderStep = 0;
  1406  0124  01D7               	clrf	main@ucLoaderStep
  1407  0125                     l4268:	
  1408                           
  1409                           ;main.c: 472: ucADC4_Step = ADC4_STEP_THIRD;
  1410  0125  3003               	movlw	3
  1411  0126  2A27               	goto	L8
  1412  0127                     l4274:	
  1413                           ;main.c: 473: }
  1414                           
  1415  0127  0857               	movf	main@ucLoaderStep,w
  1416                           
  1417                           ; Switch size 1, requested type "space"
  1418                           ; Number of cases is 7, Range of values is 0 to 6
  1419                           ; switch strategies available:
  1420                           ; Name         Instructions Cycles
  1421                           ; direct_byte           21     7 (fixed)
  1422                           ; simple_byte           22    12 (average)
  1423                           ; jumptable            260     6 (fixed)
  1424                           ; rangetable            11     6 (fixed)
  1425                           ; spacedrange           20     9 (fixed)
  1426                           ; locatedrange           7     3 (fixed)
  1427                           ;	Chosen strategy is direct_byte
  1428  0128  0084               	movwf	4
  1429  0129  3007               	movlw	7
  1430  012A  0204               	subwf	4,w
  1431  012B  1803               	skipnc
  1432  012C  2840               	goto	l4118
  1433  012D  3005               	movlw	high S4826
  1434  012E  008A               	movwf	10
  1435  012F  1003               	clrc
  1436  0130  0D04               	rlf	4,w
  1437  0131  3E43               	addlw	low S4826
  1438  0132  0082               	movwf	2
  1439  0133                     l787:	
  1440                           ;main.c: 492: {
  1441                           ;main.c: 493: case 0:
  1442                           
  1443                           
  1444                           ;main.c: 494: {
  1445                           ;main.c: 495: PB0 = 1;
  1446  0133  1406               	bsf	6,0
  1447  0134                     l4276:	
  1448                           
  1449                           ;main.c: 496: ucLoaderStep1++;
  1450  0134  0AD8               	incf	main@ucLoaderStep1,f
  1451                           
  1452                           ;main.c: 497: break;
  1453  0135  2840               	goto	l4118
  1454  0136                     l4278:	
  1455                           
  1456                           ;main.c: 501: {
  1457                           ;main.c: 502: if(ucTimerDelay1 >= 5)
  1458  0136  3005               	movlw	5
  1459  0137  0260               	subwf	main@ucTimerDelay1,w
  1460  0138  1C03               	skipc
  1461  0139  293D               	goto	l4286
  1462                           
  1463                           ;main.c: 503: {
  1464                           ;main.c: 504: PA0 = 1;
  1465  013A  1405               	bsf	5,0
  1466  013B                     l4282:	
  1467                           
  1468                           ;main.c: 505: ucTimerDelay1 = 0;
  1469  013B  01E0               	clrf	main@ucTimerDelay1
  1470  013C  2934               	goto	l4276
  1471  013D                     l4286:	
  1472                           
  1473                           ;main.c: 508: else
  1474                           ;main.c: 509: ucTimerDelay1++;
  1475  013D  0AE0               	incf	main@ucTimerDelay1,f
  1476  013E  2840               	goto	l4118
  1477  013F                     l4288:	
  1478                           
  1479                           ;main.c: 514: {
  1480                           ;main.c: 515: if(ucTimerDelay1 >= 5)
  1481  013F  3005               	movlw	5
  1482  0140  0260               	subwf	main@ucTimerDelay1,w
  1483  0141  1C03               	skipc
  1484  0142  293D               	goto	l4286
  1485                           
  1486                           ;main.c: 516: {
  1487                           ;main.c: 517: PA1= 1;
  1488  0143  1485               	bsf	5,1
  1489  0144  293B               	goto	l4282
  1490  0145                     l4298:	
  1491                           
  1492                           ;main.c: 527: {
  1493                           ;main.c: 528: if(ucTimerDelay1 >= 5)
  1494  0145  3005               	movlw	5
  1495  0146  0260               	subwf	main@ucTimerDelay1,w
  1496  0147  1C03               	skipc
  1497  0148  293D               	goto	l4286
  1498                           
  1499                           ;main.c: 529: {
  1500                           ;main.c: 530: PA2 = 1;
  1501  0149  1505               	bsf	5,2
  1502  014A  293B               	goto	l4282
  1503  014B                     l4308:	
  1504                           
  1505                           ;main.c: 540: {
  1506                           ;main.c: 541: if(ucTimerDelay1 >= 5)
  1507  014B  3005               	movlw	5
  1508  014C  0260               	subwf	main@ucTimerDelay1,w
  1509  014D  1C03               	skipc
  1510  014E  293D               	goto	l4286
  1511                           
  1512                           ;main.c: 542: {
  1513                           ;main.c: 543: PA3 = 1;
  1514  014F  1585               	bsf	5,3
  1515  0150  293B               	goto	l4282
  1516  0151                     l4318:	
  1517                           
  1518                           ;main.c: 553: {
  1519                           ;main.c: 554: if(ucTimerDelay1 >= 5)
  1520  0151  3005               	movlw	5
  1521  0152  0260               	subwf	main@ucTimerDelay1,w
  1522  0153  1C03               	skipc
  1523  0154  293D               	goto	l4286
  1524                           
  1525                           ;main.c: 555: {
  1526                           ;main.c: 556: PA0 = 0;
  1527  0155  1005               	bcf	5,0
  1528                           
  1529                           ;main.c: 557: PA1 = 0;
  1530  0156  1085               	bcf	5,1
  1531                           
  1532                           ;main.c: 558: PA2 = 0;
  1533  0157  1105               	bcf	5,2
  1534                           
  1535                           ;main.c: 559: PA3 = 0;
  1536  0158  1185               	bcf	5,3
  1537  0159  293B               	goto	l4282
  1538  015A                     l4328:	
  1539                           
  1540                           ;main.c: 569: {
  1541                           ;main.c: 570: if(ucTimerDelay1 >= 2)
  1542  015A  3002               	movlw	2
  1543  015B  0260               	subwf	main@ucTimerDelay1,w
  1544  015C  1C03               	skipc
  1545  015D  293D               	goto	l4286
  1546                           
  1547                           ;main.c: 571: {
  1548                           ;main.c: 572: ucTimerDelay1 = 0;
  1549  015E  01E0               	clrf	main@ucTimerDelay1
  1550                           
  1551                           ;main.c: 574: ucLoaderStep1 = 0;
  1552  015F  01D8               	clrf	main@ucLoaderStep1
  1553  0160  2925               	goto	l4268
  1554  0161                     l4338:	
  1555  0161  0858               	movf	main@ucLoaderStep1,w
  1556                           
  1557                           ; Switch size 1, requested type "space"
  1558                           ; Number of cases is 7, Range of values is 0 to 6
  1559                           ; switch strategies available:
  1560                           ; Name         Instructions Cycles
  1561                           ; direct_byte           21     7 (fixed)
  1562                           ; simple_byte           22    12 (average)
  1563                           ; jumptable            260     6 (fixed)
  1564                           ; rangetable            11     6 (fixed)
  1565                           ; spacedrange           20     9 (fixed)
  1566                           ; locatedrange           7     3 (fixed)
  1567                           ;	Chosen strategy is direct_byte
  1568  0162  0084               	movwf	4
  1569  0163  3007               	movlw	7
  1570  0164  0204               	subwf	4,w
  1571  0165  1803               	skipnc
  1572  0166  2840               	goto	l4118
  1573  0167  3005               	movlw	high S4828
  1574  0168  008A               	movwf	10
  1575  0169  1003               	clrc
  1576  016A  0D04               	rlf	4,w
  1577  016B  3E51               	addlw	low S4828
  1578  016C  0082               	movwf	2
  1579  016D                     l814:	
  1580                           ;main.c: 596: {
  1581                           ;main.c: 597: case 0:
  1582                           
  1583                           
  1584                           ;main.c: 598: {
  1585                           ;main.c: 599: PB0 = 1;
  1586  016D  1406               	bsf	6,0
  1587                           
  1588                           ;main.c: 600: PA0 = 1;
  1589  016E  1405               	bsf	5,0
  1590  016F                     l4340:	
  1591                           
  1592                           ;main.c: 601: ucLoaderStep2++;
  1593  016F  0AD9               	incf	main@ucLoaderStep2,f
  1594                           
  1595                           ;main.c: 602: break;
  1596  0170  2840               	goto	l4118
  1597  0171                     l4342:	
  1598                           
  1599                           ;main.c: 606: {
  1600                           ;main.c: 607: if(ucTimerDelay2 >= 5)
  1601  0171  3005               	movlw	5
  1602  0172  0261               	subwf	main@ucTimerDelay2,w
  1603  0173  1C03               	skipc
  1604  0174  2978               	goto	l4350
  1605                           
  1606                           ;main.c: 608: {
  1607                           ;main.c: 609: PA1 = 1;
  1608  0175  1485               	bsf	5,1
  1609  0176                     l4346:	
  1610                           
  1611                           ;main.c: 610: ucTimerDelay2 = 0;
  1612  0176  01E1               	clrf	main@ucTimerDelay2
  1613  0177  296F               	goto	l4340
  1614  0178                     l4350:	
  1615                           
  1616                           ;main.c: 613: else
  1617                           ;main.c: 614: ucTimerDelay2++;
  1618  0178  0AE1               	incf	main@ucTimerDelay2,f
  1619  0179  2840               	goto	l4118
  1620  017A                     l4352:	
  1621                           
  1622                           ;main.c: 619: {
  1623                           ;main.c: 620: if(ucTimerDelay2 >= 5)
  1624  017A  3005               	movlw	5
  1625  017B  0261               	subwf	main@ucTimerDelay2,w
  1626  017C  1C03               	skipc
  1627  017D  2978               	goto	l4350
  1628                           
  1629                           ;main.c: 621: {
  1630                           ;main.c: 622: PA2 = 1;
  1631  017E  1505               	bsf	5,2
  1632  017F  2976               	goto	l4346
  1633  0180                     l4362:	
  1634                           
  1635                           ;main.c: 632: {
  1636                           ;main.c: 633: if(ucTimerDelay2 >= 5)
  1637  0180  3005               	movlw	5
  1638  0181  0261               	subwf	main@ucTimerDelay2,w
  1639  0182  1C03               	skipc
  1640  0183  2978               	goto	l4350
  1641                           
  1642                           ;main.c: 634: {
  1643                           ;main.c: 635: PA3 = 1;
  1644  0184  1585               	bsf	5,3
  1645  0185  2976               	goto	l4346
  1646  0186                     l4372:	
  1647                           
  1648                           ;main.c: 645: {
  1649                           ;main.c: 646: if(ucTimerDelay2 >= 5)
  1650  0186  3005               	movlw	5
  1651  0187  0261               	subwf	main@ucTimerDelay2,w
  1652  0188  1C03               	skipc
  1653  0189  2978               	goto	l4350
  1654                           
  1655                           ;main.c: 647: {
  1656                           ;main.c: 649: PA1 = 0;
  1657  018A  1085               	bcf	5,1
  1658                           
  1659                           ;main.c: 650: PA2 = 0;
  1660  018B  1105               	bcf	5,2
  1661                           
  1662                           ;main.c: 651: PA3 = 0;
  1663  018C  1185               	bcf	5,3
  1664  018D  2976               	goto	l4346
  1665  018E                     l4382:	
  1666                           
  1667                           ;main.c: 661: {
  1668                           ;main.c: 662: if(ucTimerDelay2 >= 2)
  1669  018E  3002               	movlw	2
  1670  018F  0261               	subwf	main@ucTimerDelay2,w
  1671  0190  1C03               	skipc
  1672  0191  2978               	goto	l4350
  1673                           
  1674                           ;main.c: 663: {
  1675                           ;main.c: 664: ucTimerDelay2 = 0;
  1676  0192  01E1               	clrf	main@ucTimerDelay2
  1677                           
  1678                           ;main.c: 666: ucLoaderStep2 = 0;
  1679  0193  01D9               	clrf	main@ucLoaderStep2
  1680  0194  2925               	goto	l4268
  1681  0195                     l4392:	
  1682  0195  0859               	movf	main@ucLoaderStep2,w
  1683                           
  1684                           ; Switch size 1, requested type "space"
  1685                           ; Number of cases is 6, Range of values is 0 to 5
  1686                           ; switch strategies available:
  1687                           ; Name         Instructions Cycles
  1688                           ; direct_byte           19     7 (fixed)
  1689                           ; simple_byte           19    10 (average)
  1690                           ; jumptable            260     6 (fixed)
  1691                           ; rangetable            10     6 (fixed)
  1692                           ; spacedrange           18     9 (fixed)
  1693                           ; locatedrange           6     3 (fixed)
  1694                           ;	Chosen strategy is direct_byte
  1695  0196  0084               	movwf	4
  1696  0197  3006               	movlw	6
  1697  0198  0204               	subwf	4,w
  1698  0199  1803               	skipnc
  1699  019A  2840               	goto	l4118
  1700  019B  3005               	movlw	high S4830
  1701  019C  008A               	movwf	10
  1702  019D  1003               	clrc
  1703  019E  0D04               	rlf	4,w
  1704  019F  3E5F               	addlw	low S4830
  1705  01A0  0082               	movwf	2
  1706  01A1                     l838:	
  1707                           ;main.c: 688: {
  1708                           ;main.c: 689: case 0:
  1709                           
  1710                           
  1711                           ;main.c: 690: {
  1712                           ;main.c: 691: PB0 = 1;
  1713  01A1  1406               	bsf	6,0
  1714                           
  1715                           ;main.c: 692: PA0 = 1;
  1716  01A2  1405               	bsf	5,0
  1717                           
  1718                           ;main.c: 693: PA1 = 1;
  1719  01A3  1485               	bsf	5,1
  1720  01A4                     l4394:	
  1721                           
  1722                           ;main.c: 694: ucLoaderStep3++;
  1723  01A4  0ADA               	incf	main@ucLoaderStep3,f
  1724                           
  1725                           ;main.c: 695: break;
  1726  01A5  2840               	goto	l4118
  1727  01A6                     l4396:	
  1728                           
  1729                           ;main.c: 699: {
  1730                           ;main.c: 700: if(ucTimerDelay3 >= 5)
  1731  01A6  3005               	movlw	5
  1732  01A7  0262               	subwf	main@ucTimerDelay3,w
  1733  01A8  1C03               	skipc
  1734  01A9  29AD               	goto	l4404
  1735                           
  1736                           ;main.c: 701: {
  1737                           ;main.c: 702: PA2 = 1;
  1738  01AA  1505               	bsf	5,2
  1739  01AB                     l4400:	
  1740                           
  1741                           ;main.c: 703: ucTimerDelay3 = 0;
  1742  01AB  01E2               	clrf	main@ucTimerDelay3
  1743  01AC  29A4               	goto	l4394
  1744  01AD                     l4404:	
  1745                           
  1746                           ;main.c: 706: else
  1747                           ;main.c: 707: ucTimerDelay3++;
  1748  01AD  0AE2               	incf	main@ucTimerDelay3,f
  1749  01AE  2840               	goto	l4118
  1750  01AF                     l4406:	
  1751                           
  1752                           ;main.c: 712: {
  1753                           ;main.c: 713: if(ucTimerDelay3 >= 5)
  1754  01AF  3005               	movlw	5
  1755  01B0  0262               	subwf	main@ucTimerDelay3,w
  1756  01B1  1C03               	skipc
  1757  01B2  29AD               	goto	l4404
  1758                           
  1759                           ;main.c: 714: {
  1760                           ;main.c: 715: PA3 = 1;
  1761  01B3  1585               	bsf	5,3
  1762  01B4  29AB               	goto	l4400
  1763  01B5                     l4416:	
  1764                           
  1765                           ;main.c: 726: {
  1766                           ;main.c: 727: if(ucTimerDelay3 >= 5)
  1767  01B5  3005               	movlw	5
  1768  01B6  0262               	subwf	main@ucTimerDelay3,w
  1769  01B7  1C03               	skipc
  1770  01B8  29AD               	goto	l4404
  1771                           
  1772                           ;main.c: 728: {
  1773                           ;main.c: 730: PA2 = 0;
  1774  01B9  1105               	bcf	5,2
  1775                           
  1776                           ;main.c: 731: PA3 = 0;
  1777  01BA  1185               	bcf	5,3
  1778  01BB  29AB               	goto	l4400
  1779  01BC                     l4426:	
  1780                           
  1781                           ;main.c: 741: {
  1782                           ;main.c: 742: if(ucTimerDelay3 >= 2)
  1783  01BC  3002               	movlw	2
  1784  01BD  0262               	subwf	main@ucTimerDelay3,w
  1785  01BE  1C03               	skipc
  1786  01BF  29AD               	goto	l4404
  1787                           
  1788                           ;main.c: 743: {
  1789                           ;main.c: 744: ucTimerDelay3 = 0;
  1790  01C0  01E2               	clrf	main@ucTimerDelay3
  1791                           
  1792                           ;main.c: 746: ucLoaderStep3 = 0;
  1793  01C1  01DA               	clrf	main@ucLoaderStep3
  1794  01C2  2925               	goto	l4268
  1795  01C3                     l4436:	
  1796  01C3  085A               	movf	main@ucLoaderStep3,w
  1797                           
  1798                           ; Switch size 1, requested type "space"
  1799                           ; Number of cases is 5, Range of values is 0 to 4
  1800                           ; switch strategies available:
  1801                           ; Name         Instructions Cycles
  1802                           ; simple_byte           16     9 (average)
  1803                           ; direct_byte           17     7 (fixed)
  1804                           ; jumptable            260     6 (fixed)
  1805                           ; rangetable             9     6 (fixed)
  1806                           ; spacedrange           16     9 (fixed)
  1807                           ; locatedrange           5     3 (fixed)
  1808                           ;	Chosen strategy is simple_byte
  1809  01C4  3A00               	xorlw	0	; case 0
  1810  01C5  1903               	skipnz
  1811  01C6  29A1               	goto	l838
  1812  01C7  3A01               	xorlw	1	; case 1
  1813  01C8  1903               	skipnz
  1814  01C9  29A6               	goto	l4396
  1815  01CA  3A03               	xorlw	3	; case 2
  1816  01CB  1903               	skipnz
  1817  01CC  29AF               	goto	l4406
  1818  01CD  3A01               	xorlw	1	; case 3
  1819  01CE  1903               	skipnz
  1820  01CF  29B5               	goto	l4416
  1821  01D0  3A07               	xorlw	7	; case 4
  1822  01D1  1903               	skipnz
  1823  01D2  29BC               	goto	l4426
  1824  01D3  2862               	goto	l706
  1825  01D4                     l859:	
  1826                           ;main.c: 768: {
  1827                           ;main.c: 769: case 0:
  1828                           
  1829                           
  1830                           ;main.c: 770: {
  1831                           ;main.c: 771: PB0 = 1;
  1832  01D4  1406               	bsf	6,0
  1833                           
  1834                           ;main.c: 772: PA0 = 1;
  1835  01D5  1405               	bsf	5,0
  1836                           
  1837                           ;main.c: 773: PA1 = 1;
  1838  01D6  1485               	bsf	5,1
  1839                           
  1840                           ;main.c: 774: PA2 = 1;
  1841  01D7  1505               	bsf	5,2
  1842  01D8                     l4438:	
  1843                           
  1844                           ;main.c: 775: ucLoaderStep4++;
  1845  01D8  0ADB               	incf	main@ucLoaderStep4,f
  1846                           
  1847                           ;main.c: 776: break;
  1848  01D9  2840               	goto	l4118
  1849  01DA                     l4440:	
  1850                           
  1851                           ;main.c: 780: {
  1852                           ;main.c: 781: if(ucTimerDelay4 >= 5)
  1853  01DA  3005               	movlw	5
  1854  01DB  0263               	subwf	main@ucTimerDelay4,w
  1855  01DC  1C03               	skipc
  1856  01DD  29E1               	goto	l4448
  1857                           
  1858                           ;main.c: 782: {
  1859                           ;main.c: 783: PA3 = 1;
  1860  01DE  1585               	bsf	5,3
  1861  01DF                     l4444:	
  1862                           
  1863                           ;main.c: 784: ucTimerDelay4 = 0;
  1864  01DF  01E3               	clrf	main@ucTimerDelay4
  1865  01E0  29D8               	goto	l4438
  1866  01E1                     l4448:	
  1867                           
  1868                           ;main.c: 787: else
  1869                           ;main.c: 788: ucTimerDelay4++;
  1870  01E1  0AE3               	incf	main@ucTimerDelay4,f
  1871  01E2  2840               	goto	l4118
  1872  01E3                     l4450:	
  1873                           
  1874                           ;main.c: 793: {
  1875                           ;main.c: 794: if(ucTimerDelay4 >= 5)
  1876  01E3  3005               	movlw	5
  1877  01E4  0263               	subwf	main@ucTimerDelay4,w
  1878  01E5  1C03               	skipc
  1879  01E6  29E1               	goto	l4448
  1880                           
  1881                           ;main.c: 795: {
  1882                           ;main.c: 796: PA3 = 0;
  1883  01E7  1185               	bcf	5,3
  1884  01E8  29DF               	goto	l4444
  1885  01E9                     l4460:	
  1886                           
  1887                           ;main.c: 806: {
  1888                           ;main.c: 807: if(ucTimerDelay4 >= 2)
  1889  01E9  3002               	movlw	2
  1890  01EA  0263               	subwf	main@ucTimerDelay4,w
  1891  01EB  1C03               	skipc
  1892  01EC  29E1               	goto	l4448
  1893                           
  1894                           ;main.c: 808: {
  1895                           ;main.c: 809: ucTimerDelay4 = 0;
  1896  01ED  01E3               	clrf	main@ucTimerDelay4
  1897                           
  1898                           ;main.c: 811: ucLoaderStep4 = 0;
  1899  01EE  01DB               	clrf	main@ucLoaderStep4
  1900  01EF  2925               	goto	l4268
  1901  01F0                     l4470:	
  1902  01F0  085B               	movf	main@ucLoaderStep4,w
  1903                           
  1904                           ; Switch size 1, requested type "space"
  1905                           ; Number of cases is 4, Range of values is 0 to 3
  1906                           ; switch strategies available:
  1907                           ; Name         Instructions Cycles
  1908                           ; simple_byte           13     7 (average)
  1909                           ; direct_byte           15     7 (fixed)
  1910                           ; jumptable            260     6 (fixed)
  1911                           ; rangetable             8     6 (fixed)
  1912                           ; spacedrange           14     9 (fixed)
  1913                           ; locatedrange           4     3 (fixed)
  1914                           ;	Chosen strategy is simple_byte
  1915  01F1  3A00               	xorlw	0	; case 0
  1916  01F2  1903               	skipnz
  1917  01F3  29D4               	goto	l859
  1918  01F4  3A01               	xorlw	1	; case 1
  1919  01F5  1903               	skipnz
  1920  01F6  29DA               	goto	l4440
  1921  01F7  3A03               	xorlw	3	; case 2
  1922  01F8  1903               	skipnz
  1923  01F9  29E3               	goto	l4450
  1924  01FA  3A01               	xorlw	1	; case 3
  1925  01FB  1903               	skipnz
  1926  01FC  29E9               	goto	l4460
  1927  01FD  2862               	goto	l706
  1928  01FE                     l4474:	
  1929  01FE  0856               	movf	main@ucChannel4Type,w
  1930                           
  1931                           ; Switch size 1, requested type "space"
  1932                           ; Number of cases is 5, Range of values is 0 to 4
  1933                           ; switch strategies available:
  1934                           ; Name         Instructions Cycles
  1935                           ; simple_byte           16     9 (average)
  1936                           ; direct_byte           17     7 (fixed)
  1937                           ; jumptable            260     6 (fixed)
  1938                           ; rangetable             9     6 (fixed)
  1939                           ; spacedrange           16     9 (fixed)
  1940                           ; locatedrange           5     3 (fixed)
  1941                           ;	Chosen strategy is simple_byte
  1942  01FF  3A00               	xorlw	0	; case 0
  1943  0200  1903               	skipnz
  1944  0201  2927               	goto	l4274
  1945  0202  3A01               	xorlw	1	; case 1
  1946  0203  1903               	skipnz
  1947  0204  2961               	goto	l4338
  1948  0205  3A03               	xorlw	3	; case 2
  1949  0206  1903               	skipnz
  1950  0207  2995               	goto	l4392
  1951  0208  3A01               	xorlw	1	; case 3
  1952  0209  1903               	skipnz
  1953  020A  29C3               	goto	l4436
  1954  020B  3A07               	xorlw	7	; case 4
  1955  020C  1903               	skipnz
  1956  020D  29F0               	goto	l4470
  1957  020E  2862               	goto	l706
  1958  020F                     l4476:	
  1959                           
  1960                           ;main.c: 835: {
  1961                           ;main.c: 836: static unsigned char ucTimerDelayP5s = 0;
  1962                           ;main.c: 838: if(isFinishedTwentySecondsTimer())
  1963  020F  118A  25AA  118A   	fcall	_isFinishedTwentySecondsTimer
  1964  0212  3A00               	xorlw	0
  1965  0213  1903               	skipnz
  1966  0214  28BE               	goto	l4192
  1967                           
  1968                           ;main.c: 839: {
  1969                           ;main.c: 840: PBOD6 =0;
  1970  0215  1703               	bsf	3,6	;RP1=1, select bank3
  1971  0216  1308               	bcf	8,6
  1972                           
  1973                           ;main.c: 841: PB6 = 1;
  1974  0217  1283               	bcf	3,5	;RP0=0, select bank0
  1975  0218  3005               	movlw	5
  1976  0219  1303               	bcf	3,6	;RP1=0, select bank0
  1977  021A  1706               	bsf	6,6
  1978                           
  1979                           ;main.c: 842: PA6 = 0;
  1980  021B  1305               	bcf	5,6
  1981                           
  1982                           ;main.c: 849: if(ucTimerDelayP5s < 5)
  1983  021C  0264               	subwf	main@ucTimerDelayP5s,w
  1984  021D  1803               	skipnc
  1985  021E  2A21               	goto	l4484
  1986                           
  1987                           ;main.c: 850: {
  1988                           ;main.c: 851: ucTimerDelayP5s++;
  1989  021F  0AE4               	incf	main@ucTimerDelayP5s,f
  1990                           
  1991                           ;main.c: 852: }
  1992  0220  2840               	goto	l4118
  1993  0221                     l4484:	
  1994  0221  300F               	movlw	15
  1995                           
  1996                           ;main.c: 853: else
  1997                           ;main.c: 854: {
  1998                           ;main.c: 856: ucTimerDelayP5s = 0;
  1999  0222  01E4               	clrf	main@ucTimerDelayP5s
  2000                           
  2001                           ;main.c: 859: DACR0=0x0F;
  2002  0223  1683               	bsf	3,5	;RP0=1, select bank1
  2003  0224  0088               	movwf	8	;volatile
  2004                           
  2005                           ;main.c: 863: ucADC4_Step = ADC4_STEP_FOURTH;
  2006  0225  3004               	movlw	4
  2007  0226  1283               	bcf	3,5	;RP0=0, select bank0
  2008  0227                     L8:	
  2009  0227  00D5               	movwf	main@ucADC4_Step
  2010  0228  2840               	goto	l4118
  2011  0229                     l4490:	
  2012                           
  2013                           ;main.c: 873: {
  2014                           ;main.c: 874: static unsigned char ucTimer1s = 0;
  2015                           ;main.c: 875: if(ucTimer1s < 5)
  2016  0229  3005               	movlw	5
  2017  022A  025C               	subwf	main@ucTimer1s,w
  2018  022B  1803               	skipnc
  2019  022C  2A33               	goto	l4498
  2020                           
  2021                           ;main.c: 876: {
  2022                           ;main.c: 877: ucTimer1s++;
  2023  022D  0ADC               	incf	main@ucTimer1s,f
  2024                           
  2025                           ;main.c: 878: PB6 = 1;
  2026  022E  1706               	bsf	6,6
  2027                           
  2028                           ;main.c: 879: PBOD6 = 1;
  2029  022F  1683               	bsf	3,5	;RP0=1, select bank3
  2030  0230  1703               	bsf	3,6	;RP1=1, select bank3
  2031  0231  1708               	bsf	8,6
  2032                           
  2033                           ;main.c: 880: }
  2034  0232  2840               	goto	l4118
  2035  0233                     l4498:	
  2036                           
  2037                           ;main.c: 881: else
  2038                           ;main.c: 882: {
  2039                           ;main.c: 883: ucTimer1s = 0;
  2040  0233  01DC               	clrf	main@ucTimer1s
  2041                           
  2042                           ;main.c: 886: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  2043  0234  01D4               	clrf	main@enumMainLoopStep
  2044  0235  0AD4               	incf	main@enumMainLoopStep,f
  2045                           
  2046                           ;main.c: 887: ucADC4_Step = ADC4_STEP_INIT;
  2047  0236  01D5               	clrf	main@ucADC4_Step
  2048  0237  2840               	goto	l4118
  2049  0238                     l4504:	
  2050  0238  0855               	movf	main@ucADC4_Step,w
  2051                           
  2052                           ; Switch size 1, requested type "space"
  2053                           ; Number of cases is 5, Range of values is 0 to 4
  2054                           ; switch strategies available:
  2055                           ; Name         Instructions Cycles
  2056                           ; simple_byte           16     9 (average)
  2057                           ; direct_byte           17     7 (fixed)
  2058                           ; jumptable            260     6 (fixed)
  2059                           ; rangetable             9     6 (fixed)
  2060                           ; spacedrange           16     9 (fixed)
  2061                           ; locatedrange           5     3 (fixed)
  2062                           ;	Chosen strategy is simple_byte
  2063  0239  3A00               	xorlw	0	; case 0
  2064  023A  1903               	skipnz
  2065  023B  28BB               	goto	l4190
  2066  023C  3A01               	xorlw	1	; case 1
  2067  023D  1903               	skipnz
  2068  023E  28C2               	goto	l4194
  2069  023F  3A03               	xorlw	3	; case 2
  2070  0240  1903               	skipnz
  2071  0241  29FE               	goto	l4474
  2072  0242  3A01               	xorlw	1	; case 3
  2073  0243  1903               	skipnz
  2074  0244  2A0F               	goto	l4476
  2075  0245  3A07               	xorlw	7	; case 4
  2076  0246  1903               	skipnz
  2077  0247  2A29               	goto	l4490
  2078  0248  2862               	goto	l706
  2079  0249                     l889:	
  2080                           ;main.c: 913: {
  2081                           ;main.c: 914: case HOUR_3_BRANCH_STEP_FIRST:
  2082                           
  2083                           
  2084                           ;main.c: 915: {
  2085                           ;main.c: 916: PA7 = 1;
  2086  0249  1785               	bsf	5,7
  2087                           
  2088                           ;main.c: 917: PAOD7 = 1;
  2089  024A  1683               	bsf	3,5	;RP0=1, select bank3
  2090  024B  303C               	movlw	60
  2091  024C  1703               	bsf	3,6	;RP1=1, select bank3
  2092  024D  1787               	bsf	7,7
  2093                           
  2094                           ;main.c: 918: startThreeHoursTimer(60);
  2095  024E  1283               	bcf	3,5	;RP0=0, select bank0
  2096  024F  1303               	bcf	3,6	;RP1=0, select bank0
  2097  0250  00A0               	movwf	?_startThreeHoursTimer
  2098  0251  01A1               	clrf	?_startThreeHoursTimer+1
  2099  0252  118A  2580  118A   	fcall	_startThreeHoursTimer
  2100                           
  2101                           ;main.c: 920: enumBranchStep = HOUR_3_BRANCH_STEP_SECOND;
  2102  0255  01D2               	clrf	main@enumBranchStep
  2103  0256  0AD2               	incf	main@enumBranchStep,f
  2104                           
  2105                           ;main.c: 921: break;
  2106  0257  2840               	goto	l4118
  2107  0258                     l4510:	
  2108                           
  2109                           ;main.c: 925: {
  2110                           ;main.c: 926: static unsigned char ucTimer20s = 0;
  2111                           ;main.c: 928: if(ucTimer20s < 200)
  2112  0258  30C8               	movlw	200
  2113  0259  025D               	subwf	main@ucTimer20s,w
  2114  025A  1803               	skipnc
  2115  025B  2A63               	goto	l4524
  2116                           
  2117                           ;main.c: 929: {
  2118                           ;main.c: 930: ucTimer20s++;
  2119  025C  0ADD               	incf	main@ucTimer20s,f
  2120                           
  2121                           ;main.c: 931: PB0 = 1;
  2122  025D  1406               	bsf	6,0
  2123                           
  2124                           ;main.c: 932: PA0 = 1;
  2125  025E  1405               	bsf	5,0
  2126                           
  2127                           ;main.c: 933: PA1 = 1;
  2128  025F  1485               	bsf	5,1
  2129                           
  2130                           ;main.c: 934: PA2 = 1;
  2131  0260  1505               	bsf	5,2
  2132                           
  2133                           ;main.c: 935: PA3 = 1;
  2134  0261  1585               	bsf	5,3
  2135                           
  2136                           ;main.c: 936: }
  2137  0262  2840               	goto	l4118
  2138  0263                     l4524:	
  2139  0263  3002               	movlw	2
  2140                           
  2141                           ;main.c: 937: else
  2142                           ;main.c: 938: {
  2143                           ;main.c: 940: ucTimer20s = 0;
  2144  0264  01DD               	clrf	main@ucTimer20s
  2145                           
  2146                           ;main.c: 943: enumBranchStep = HOUR_3_BRANCH_STEP_THIRD;
  2147  0265  00D2               	movwf	main@enumBranchStep
  2148  0266  2840               	goto	l4118
  2149  0267                     l896:	
  2150                           ;main.c: 946: }
  2151                           ;main.c: 948: case HOUR_3_BRANCH_STEP_THIRD:
  2152                           
  2153                           
  2154                           ;main.c: 949: {
  2155                           ;main.c: 950: PA6 = 0;
  2156  0267  1305               	bcf	5,6
  2157                           
  2158                           ;main.c: 952: if(isFinishedThreeHoursTimer())
  2159  0268  118A  25B0  118A   	fcall	_isFinishedThreeHoursTimer
  2160  026B  3A00               	xorlw	0
  2161  026C  1903               	skipnz
  2162  026D  2A70               	goto	l4534
  2163                           
  2164                           ;main.c: 953: {
  2165                           ;main.c: 954: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2166  026E  01D2               	clrf	main@enumBranchStep
  2167  026F  28B8               	goto	l4188
  2168  0270                     l4534:	
  2169                           
  2170                           ;main.c: 957: else
  2171                           ;main.c: 958: {
  2172                           ;main.c: 959: static unsigned char ucTimerX1P5s = 0;
  2173                           ;main.c: 961: if(getAdOriginalCh1Value() < 130)
  2174  0270  118A  23F7  118A   	fcall	_getAdOriginalCh1Value
  2175  0273  3000               	movlw	0
  2176  0274  0248               	subwf	?_getAdOriginalCh1Value+1,w
  2177  0275  3082               	movlw	130
  2178  0276  1903               	skipnz
  2179  0277  0247               	subwf	?_getAdOriginalCh1Value,w
  2180  0278  1803               	skipnc
  2181  0279  2A7C               	goto	l4538
  2182                           
  2183                           ;main.c: 962: {
  2184                           ;main.c: 963: ucTimerX1P5s = 0;
  2185  027A  01E8               	clrf	main@ucTimerX1P5s
  2186                           
  2187                           ;main.c: 964: }
  2188  027B  2A7D               	goto	l4540
  2189  027C                     l4538:	
  2190                           
  2191                           ;main.c: 965: else
  2192                           ;main.c: 966: {
  2193                           ;main.c: 967: ucTimerX1P5s++;
  2194  027C  0AE8               	incf	main@ucTimerX1P5s,f
  2195  027D                     l4540:	
  2196                           
  2197                           ;main.c: 968: }
  2198                           ;main.c: 970: if(ucTimerX1P5s >= 1)
  2199  027D  0868               	movf	main@ucTimerX1P5s,w
  2200  027E  1903               	btfsc	3,2
  2201  027F  2A8C               	goto	l4554
  2202                           
  2203                           ;main.c: 971: {
  2204                           ;main.c: 972: ucTimerX1P5s = 0;
  2205  0280  01E8               	clrf	main@ucTimerX1P5s
  2206                           
  2207                           ;main.c: 973: PAOD7 = 0;
  2208  0281  1683               	bsf	3,5	;RP0=1, select bank3
  2209  0282  1703               	bsf	3,6	;RP1=1, select bank3
  2210  0283  1387               	bcf	7,7
  2211                           
  2212                           ;main.c: 974: PA7 = 0;
  2213  0284  1283               	bcf	3,5	;RP0=0, select bank0
  2214  0285  1303               	bcf	3,6	;RP1=0, select bank0
  2215  0286  1385               	bcf	5,7
  2216                           
  2217                           ;main.c: 975: clearThreeHoursTimer();
  2218  0287  118A  2517  118A   	fcall	_clearThreeHoursTimer
  2219                           
  2220                           ;main.c: 977: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2221  028A  01D2               	clrf	main@enumBranchStep
  2222  028B  2873               	goto	l4146
  2223  028C                     l4554:	
  2224                           
  2225                           ;main.c: 981: else
  2226                           ;main.c: 982: {
  2227                           ;main.c: 983: static unsigned char ucTimerX2P5s = 0;
  2228                           ;main.c: 985: if(getAdOriginalCh14Value() >= 1950)
  2229  028C  118A  23FE  118A   	fcall	_getAdOriginalCh14Value
  2230  028F  3007               	movlw	7
  2231  0290  0248               	subwf	?_getAdOriginalCh14Value+1,w
  2232  0291  309E               	movlw	158
  2233  0292  1903               	skipnz
  2234  0293  0247               	subwf	?_getAdOriginalCh14Value,w
  2235  0294  1C03               	skipc
  2236  0295  2A98               	goto	l4558
  2237                           
  2238                           ;main.c: 986: {
  2239                           ;main.c: 987: ucTimerX2P5s++;
  2240  0296  0AE9               	incf	main@ucTimerX2P5s,f
  2241                           
  2242                           ;main.c: 988: }
  2243  0297  2A99               	goto	l4560
  2244  0298                     l4558:	
  2245                           
  2246                           ;main.c: 989: else
  2247                           ;main.c: 990: {
  2248                           ;main.c: 991: ucTimerX2P5s = 0;
  2249  0298  01E9               	clrf	main@ucTimerX2P5s
  2250  0299                     l4560:	
  2251                           
  2252                           ;main.c: 992: }
  2253                           ;main.c: 994: if(ucTimerX2P5s >= 1)
  2254  0299  0869               	movf	main@ucTimerX2P5s,w
  2255  029A  1903               	btfsc	3,2
  2256  029B  2A9E               	goto	l4564
  2257                           
  2258                           ;main.c: 995: {
  2259                           ;main.c: 996: ucTimerX2P5s = 0;
  2260  029C  01E9               	clrf	main@ucTimerX2P5s
  2261                           
  2262                           ;main.c: 997: }
  2263  029D  2840               	goto	l4118
  2264  029E                     l4564:	
  2265                           
  2266                           ;main.c: 998: else
  2267                           ;main.c: 999: {
  2268                           ;main.c: 1000: clearPinPortAndTimer();
  2269  029E  118A  2503  118A   	fcall	_clearPinPortAndTimer
  2270  02A1  285F               	goto	l4136
  2271  02A2                     l4570:	
  2272  02A2  0852               	movf	main@enumBranchStep,w
  2273                           
  2274                           ; Switch size 1, requested type "space"
  2275                           ; Number of cases is 3, Range of values is 0 to 2
  2276                           ; switch strategies available:
  2277                           ; Name         Instructions Cycles
  2278                           ; simple_byte           10     6 (average)
  2279                           ; direct_byte           13     7 (fixed)
  2280                           ; jumptable            260     6 (fixed)
  2281                           ; rangetable             7     6 (fixed)
  2282                           ; spacedrange           12     9 (fixed)
  2283                           ; locatedrange           3     3 (fixed)
  2284                           ;	Chosen strategy is simple_byte
  2285  02A3  3A00               	xorlw	0	; case 0
  2286  02A4  1903               	skipnz
  2287  02A5  2A49               	goto	l889
  2288  02A6  3A01               	xorlw	1	; case 1
  2289  02A7  1903               	skipnz
  2290  02A8  2A58               	goto	l4510
  2291  02A9  3A03               	xorlw	3	; case 2
  2292  02AA  1903               	skipnz
  2293  02AB  2A67               	goto	l896
  2294  02AC  2862               	goto	l706
  2295  02AD                     l916:	
  2296                           ;main.c: 1030: {
  2297                           ;main.c: 1031: case INTERNAL_FIRST_STEP:
  2298                           
  2299                           
  2300                           ;main.c: 1032: {
  2301                           ;main.c: 1033: PB0 = 0;
  2302  02AD  1006               	bcf	6,0
  2303                           
  2304                           ;main.c: 1034: PB1 = 0;
  2305  02AE  1086               	bcf	6,1
  2306                           
  2307                           ;main.c: 1035: PA0 = 0;
  2308  02AF  1005               	bcf	5,0
  2309                           
  2310                           ;main.c: 1036: PA1 = 0;
  2311  02B0  1085               	bcf	5,1
  2312                           
  2313                           ;main.c: 1037: PA2 = 0;
  2314  02B1  1105               	bcf	5,2
  2315                           
  2316                           ;main.c: 1038: PA3 = 0;
  2317  02B2  1185               	bcf	5,3
  2318                           
  2319                           ;main.c: 1039: PBOD6 = 0;
  2320  02B3  1683               	bsf	3,5	;RP0=1, select bank3
  2321  02B4  1703               	bsf	3,6	;RP1=1, select bank3
  2322  02B5  1308               	bcf	8,6
  2323                           
  2324                           ;main.c: 1040: PB6 = 1;
  2325  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  2326  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  2327  02B8  1706               	bsf	6,6
  2328                           
  2329                           ;main.c: 1041: PA6 =0;
  2330  02B9  1305               	bcf	5,6
  2331                           
  2332                           ;main.c: 1043: enumInteralStep = INTERNAL_SECOND_STEP;
  2333  02BA  01D3               	clrf	main@enumInteralStep
  2334  02BB  0AD3               	incf	main@enumInteralStep,f
  2335                           
  2336                           ;main.c: 1044: break;
  2337  02BC  2840               	goto	l4118
  2338  02BD                     l4572:	
  2339                           
  2340                           ;main.c: 1048: {
  2341                           ;main.c: 1049: static unsigned char ucTimer1s = 0;
  2342                           ;main.c: 1051: if(getAdOriginalCh14Value() <= 1000)
  2343  02BD  118A  23FE  118A   	fcall	_getAdOriginalCh14Value
  2344  02C0  3003               	movlw	3
  2345  02C1  0248               	subwf	?_getAdOriginalCh14Value+1,w
  2346  02C2  30E9               	movlw	233
  2347  02C3  1903               	skipnz
  2348  02C4  0247               	subwf	?_getAdOriginalCh14Value,w
  2349  02C5  1803               	skipnc
  2350  02C6  2AC9               	goto	l4576
  2351                           
  2352                           ;main.c: 1052: {
  2353                           ;main.c: 1053: ucTimer1s++;
  2354  02C7  0AD1               	incf	main@cTimer1s_811,f
  2355                           
  2356                           ;main.c: 1054: }
  2357  02C8  2ACA               	goto	l4578
  2358  02C9                     l4576:	
  2359                           
  2360                           ;main.c: 1055: else
  2361                           ;main.c: 1056: ucTimer1s = 0;
  2362  02C9  01D1               	clrf	main@cTimer1s_811
  2363  02CA                     l4578:	
  2364                           
  2365                           ;main.c: 1058: if(ucTimer1s >= 10)
  2366  02CA  300A               	movlw	10
  2367  02CB  0251               	subwf	main@cTimer1s_811,w
  2368  02CC  1C03               	skipc
  2369  02CD  2840               	goto	l4118
  2370                           
  2371                           ;main.c: 1059: {
  2372                           ;main.c: 1060: enumInteralStep = INTERNAL_THIRD_STEP;
  2373  02CE  3002               	movlw	2
  2374  02CF  00D3               	movwf	main@enumInteralStep
  2375                           
  2376                           ;main.c: 1061: ucTimer1s = 0;
  2377  02D0  01D1               	clrf	main@cTimer1s_811
  2378  02D1  2840               	goto	l4118
  2379  02D2                     l4584:	
  2380                           
  2381                           ;main.c: 1067: {
  2382                           ;main.c: 1068: static unsigned char ucTimerP3s = 0;
  2383                           ;main.c: 1070: if(getAdOriginalCh14Value() >= 1950)
  2384  02D2  118A  23FE  118A   	fcall	_getAdOriginalCh14Value
  2385  02D5  3007               	movlw	7
  2386  02D6  0248               	subwf	?_getAdOriginalCh14Value+1,w
  2387  02D7  309E               	movlw	158
  2388  02D8  1903               	skipnz
  2389  02D9  0247               	subwf	?_getAdOriginalCh14Value,w
  2390  02DA  1C03               	skipc
  2391  02DB  2ADE               	goto	l4588
  2392                           
  2393                           ;main.c: 1071: {
  2394                           ;main.c: 1072: ucTimerP3s++;
  2395  02DC  0AE5               	incf	main@ucTimerP3s,f
  2396                           
  2397                           ;main.c: 1073: }
  2398  02DD  2ADF               	goto	l4590
  2399  02DE                     l4588:	
  2400                           
  2401                           ;main.c: 1074: else
  2402                           ;main.c: 1075: ucTimerP3s = 0;
  2403  02DE  01E5               	clrf	main@ucTimerP3s
  2404  02DF                     l4590:	
  2405                           
  2406                           ;main.c: 1077: if(ucTimerP3s >= 3)
  2407  02DF  3003               	movlw	3
  2408  02E0  0265               	subwf	main@ucTimerP3s,w
  2409  02E1  1C03               	skipc
  2410  02E2  2840               	goto	l4118
  2411                           
  2412                           ;main.c: 1078: {
  2413                           ;main.c: 1079: enumInteralStep = INTERNAL_FIRST_STEP;
  2414  02E3  01D3               	clrf	main@enumInteralStep
  2415                           
  2416                           ;main.c: 1080: ucTimerP3s = 0;
  2417  02E4  01E5               	clrf	main@ucTimerP3s
  2418                           
  2419                           ;main.c: 1081: clearAllTimer();
  2420  02E5  118A  250F  118A   	fcall	_clearAllTimer
  2421                           
  2422                           ;main.c: 1083: DACR0=0x0F;
  2423  02E8  300F               	movlw	15
  2424  02E9  0088               	movwf	8	;volatile
  2425                           
  2426                           ;main.c: 1084: initPin();
  2427  02EA  118A  251E  118A   	fcall	_initPin
  2428                           
  2429                           ;main.c: 1087: enumMainLoopStep = MAIN_LOOP_STEP_INIT;
  2430  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  2431  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  2432  02EF  01D4               	clrf	main@enumMainLoopStep
  2433  02F0  2840               	goto	l4118
  2434  02F1                     l4604:	
  2435  02F1  0853               	movf	main@enumInteralStep,w
  2436                           
  2437                           ; Switch size 1, requested type "space"
  2438                           ; Number of cases is 3, Range of values is 0 to 2
  2439                           ; switch strategies available:
  2440                           ; Name         Instructions Cycles
  2441                           ; simple_byte           10     6 (average)
  2442                           ; direct_byte           13     7 (fixed)
  2443                           ; jumptable            260     6 (fixed)
  2444                           ; rangetable             7     6 (fixed)
  2445                           ; spacedrange           12     9 (fixed)
  2446                           ; locatedrange           3     3 (fixed)
  2447                           ;	Chosen strategy is simple_byte
  2448  02F2  3A00               	xorlw	0	; case 0
  2449  02F3  1903               	skipnz
  2450  02F4  2AAD               	goto	l916
  2451  02F5  3A01               	xorlw	1	; case 1
  2452  02F6  1903               	skipnz
  2453  02F7  2ABD               	goto	l4572
  2454  02F8  3A03               	xorlw	3	; case 2
  2455  02F9  1903               	skipnz
  2456  02FA  2AD2               	goto	l4584
  2457  02FB  2862               	goto	l706
  2458  02FC                     l4608:	
  2459  02FC  0854               	movf	main@enumMainLoopStep,w
  2460                           
  2461                           ; Switch size 1, requested type "space"
  2462                           ; Number of cases is 8, Range of values is 0 to 9
  2463                           ; switch strategies available:
  2464                           ; Name         Instructions Cycles
  2465                           ; simple_byte           25    13 (average)
  2466                           ; direct_byte           27     7 (fixed)
  2467                           ; jumptable            260     6 (fixed)
  2468                           ; rangetable            14     6 (fixed)
  2469                           ; spacedrange           26     9 (fixed)
  2470                           ; locatedrange          10     3 (fixed)
  2471                           ;	Chosen strategy is simple_byte
  2472  02FD  3A00               	xorlw	0	; case 0
  2473  02FE  1903               	skipnz
  2474  02FF  284E               	goto	l4126
  2475  0300  3A01               	xorlw	1	; case 1
  2476  0301  1903               	skipnz
  2477  0302  2863               	goto	l4138
  2478  0303  3A03               	xorlw	3	; case 2
  2479  0304  1903               	skipnz
  2480  0305  2879               	goto	l715
  2481  0306  3A01               	xorlw	1	; case 3
  2482  0307  1903               	skipnz
  2483  0308  2883               	goto	l4158
  2484  0309  3A07               	xorlw	7	; case 4
  2485  030A  1903               	skipnz
  2486  030B  28A9               	goto	l4182
  2487  030C  3A01               	xorlw	1	; case 5
  2488  030D  1903               	skipnz
  2489  030E  28B2               	goto	l4186
  2490  030F  3A0D               	xorlw	13	; case 8
  2491  0310  1903               	skipnz
  2492  0311  2AA2               	goto	l4570
  2493  0312  3A01               	xorlw	1	; case 9
  2494  0313  1903               	skipnz
  2495  0314  2AF1               	goto	l4604
  2496  0315  2862               	goto	l706
  2497  0316  118A  2811         	ljmp	start
  2498  0318                     __end_of_main:	
  2499                           
  2500                           	psect	swtext1
  2501  0543                     __pswtext1:	
  2502  0543                     S4826:	
  2503  0543  118A  28F7         	ljmp	l759
  2504  0545  118A  28FA         	ljmp	l4214
  2505  0547  118A  2903         	ljmp	l4224
  2506  0549  118A  2909         	ljmp	l4234
  2507  054B  118A  290F         	ljmp	l4244
  2508  054D  118A  2915         	ljmp	l4254
  2509  054F  118A  291F         	ljmp	l4264
  2510                           
  2511                           	psect	swtext2
  2512  0551                     __pswtext2:	
  2513  0551                     S4828:	
  2514  0551  118A  2933         	ljmp	l787
  2515  0553  118A  2936         	ljmp	l4278
  2516  0555  118A  293F         	ljmp	l4288
  2517  0557  118A  2945         	ljmp	l4298
  2518  0559  118A  294B         	ljmp	l4308
  2519  055B  118A  2951         	ljmp	l4318
  2520  055D  118A  295A         	ljmp	l4328
  2521                           
  2522                           	psect	swtext3
  2523  055F                     __pswtext3:	
  2524  055F                     S4830:	
  2525  055F  118A  296D         	ljmp	l814
  2526  0561  118A  2971         	ljmp	l4342
  2527  0563  118A  297A         	ljmp	l4352
  2528  0565  118A  2980         	ljmp	l4362
  2529  0567  118A  2986         	ljmp	l4372
  2530  0569  118A  298E         	ljmp	l4382
  2531                           
  2532                           	psect	text704
  2533  0503                     __ptext704:	
  2534 ;; =============== function _main ends ============
  2535                           
  2536                           
  2537 ;; *************** function _clearPinPortAndTimer *****************
  2538 ;; Defined at:
  2539 ;;		line 92 in file "D:\develop\ATK\AK7030-OTP\main.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;		None
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;		None
  2544 ;; Return value:  Size  Location     Type
  2545 ;;		None               void
  2546 ;; Registers used:
  2547 ;;		status,2, status,0, pclath, cstack
  2548 ;; Tracked objects:
  2549 ;;		On entry : 160/0
  2550 ;;		On exit  : 160/20
  2551 ;;		Unchanged: FFE9F/0
  2552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2553 ;;      Params:         0       0       0       0       0
  2554 ;;      Locals:         0       0       0       0       0
  2555 ;;      Temps:          0       0       0       0       0
  2556 ;;      Totals:         0       0       0       0       0
  2557 ;;Total ram usage:        0 bytes
  2558 ;; Hardware stack levels used:    1
  2559 ;; Hardware stack levels required when called:    4
  2560 ;; This function calls:
  2561 ;;		_clearAllTimer
  2562 ;; This function is called by:
  2563 ;;		_main
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566  0503                     _clearPinPortAndTimer:	
  2567                           
  2568                           ;main.c: 93: PB0 = 0;
  2569                           
  2570                           ; Regs used in _clearPinPortAndTimer: [status,2+status,0+pclath+cstack]
  2571  0503  1006               	bcf	6,0
  2572                           
  2573                           ;main.c: 94: PA0 = 0;
  2574  0504  1005               	bcf	5,0
  2575                           
  2576                           ;main.c: 95: PA1 = 0;
  2577  0505  1085               	bcf	5,1
  2578                           
  2579                           ;main.c: 96: PA2 = 0;
  2580  0506  1105               	bcf	5,2
  2581                           
  2582                           ;main.c: 97: PA3 = 0;
  2583  0507  1185               	bcf	5,3
  2584                           
  2585                           ;main.c: 98: PAOD7 = 0;
  2586  0508  1683               	bsf	3,5	;RP0=1, select bank3
  2587  0509  1703               	bsf	3,6	;RP1=1, select bank3
  2588  050A  1387               	bcf	7,7
  2589                           
  2590                           ;main.c: 99: PA7 = 0;
  2591  050B  1283               	bcf	3,5	;RP0=0, select bank0
  2592  050C  1303               	bcf	3,6	;RP1=0, select bank0
  2593  050D  1385               	bcf	5,7
  2594                           
  2595                           ;main.c: 100: clearAllTimer();
  2596  050E  2D0F               	ljmp	l4062
  2597  050F                     __end_of_clearPinPortAndTimer:	
  2598  050F                     __ptext709:	
  2599 ;; =============== function _process_AD_Converter_Value ends ============
  2600                           
  2601                           
  2602 ;; *************** function _clearAllTimer *****************
  2603 ;; Defined at:
  2604 ;;		line 83 in file "D:\develop\ATK\AK7030-OTP\main.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;		None
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;		None
  2609 ;; Return value:  Size  Location     Type
  2610 ;;		None               void
  2611 ;; Registers used:
  2612 ;;		status,2, status,0, pclath, cstack
  2613 ;; Tracked objects:
  2614 ;;		On entry : 160/0
  2615 ;;		On exit  : 160/20
  2616 ;;		Unchanged: FFE9F/0
  2617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2618 ;;      Params:         0       0       0       0       0
  2619 ;;      Locals:         0       0       0       0       0
  2620 ;;      Temps:          0       0       0       0       0
  2621 ;;      Totals:         0       0       0       0       0
  2622 ;;Total ram usage:        0 bytes
  2623 ;; Hardware stack levels used:    1
  2624 ;; Hardware stack levels required when called:    3
  2625 ;; This function calls:
  2626 ;;		_clearTwelveHoursTimer
  2627 ;;		_clearThreeHoursTimer
  2628 ;;		_clearTwentySecondsTimer
  2629 ;; This function is called by:
  2630 ;;		_clearPinPortAndTimer
  2631 ;;		_main
  2632 ;; This function uses a non-reentrant model
  2633 ;;
  2634  050F                     _clearAllTimer:	
  2635  050F                     l4062:	
  2636                           ; Regs used in _clearAllTimer: [status,2+status,0+pclath+cstack]
  2637                           
  2638                           
  2639                           ;main.c: 84: clearTwelveHoursTimer();
  2640  050F  2514  118A         	fcall	_clearTwelveHoursTimer
  2641                           
  2642                           ;main.c: 85: clearThreeHoursTimer();
  2643  0511  2517  118A         	fcall	_clearThreeHoursTimer
  2644                           
  2645                           ;main.c: 86: clearTwentySecondsTimer();
  2646  0513  2D1A               	ljmp	l3792
  2647  0514                     __end_of_clearAllTimer:	
  2648  0514                     __ptext733:	
  2649 ;; =============== function _clearThreeHoursTimer ends ============
  2650                           
  2651                           
  2652 ;; *************** function _clearTwelveHoursTimer *****************
  2653 ;; Defined at:
  2654 ;;		line 365 in file "D:\develop\ATK\AK7030-OTP\common.c"
  2655 ;; Parameters:    Size  Location     Type
  2656 ;;		None
  2657 ;; Auto vars:     Size  Location     Type
  2658 ;;		None
  2659 ;; Return value:  Size  Location     Type
  2660 ;;		None               void
  2661 ;; Registers used:
  2662 ;;		status,2
  2663 ;; Tracked objects:
  2664 ;;		On entry : 160/0
  2665 ;;		On exit  : 160/0
  2666 ;;		Unchanged: FFE9F/0
  2667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2668 ;;      Params:         0       0       0       0       0
  2669 ;;      Locals:         0       0       0       0       0
  2670 ;;      Temps:          0       0       0       0       0
  2671 ;;      Totals:         0       0       0       0       0
  2672 ;;Total ram usage:        0 bytes
  2673 ;; Hardware stack levels used:    1
  2674 ;; Hardware stack levels required when called:    2
  2675 ;; This function calls:
  2676 ;;		Nothing
  2677 ;; This function is called by:
  2678 ;;		_clearAllTimer
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681  0514                     _clearTwelveHoursTimer:	
  2682                           
  2683                           ;common.c: 366: uiBigTimer = 0;
  2684                           
  2685                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  2686  0514  01C9               	clrf	_uiBigTimer
  2687  0515  01CA               	clrf	_uiBigTimer+1
  2688  0516  0008               	return
  2689  0517                     __end_of_clearTwelveHoursTimer:	
  2690  0517                     __ptext732:	
  2691 ;; =============== function _clearTwentySecondsTimer ends ============
  2692                           
  2693                           
  2694 ;; *************** function _clearThreeHoursTimer *****************
  2695 ;; Defined at:
  2696 ;;		line 371 in file "D:\develop\ATK\AK7030-OTP\common.c"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;		None
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;		None
  2701 ;; Return value:  Size  Location     Type
  2702 ;;		None               void
  2703 ;; Registers used:
  2704 ;;		status,2
  2705 ;; Tracked objects:
  2706 ;;		On entry : 160/0
  2707 ;;		On exit  : 160/0
  2708 ;;		Unchanged: FFE9F/0
  2709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2710 ;;      Params:         0       0       0       0       0
  2711 ;;      Locals:         0       0       0       0       0
  2712 ;;      Temps:          0       0       0       0       0
  2713 ;;      Totals:         0       0       0       0       0
  2714 ;;Total ram usage:        0 bytes
  2715 ;; Hardware stack levels used:    1
  2716 ;; Hardware stack levels required when called:    2
  2717 ;; This function calls:
  2718 ;;		Nothing
  2719 ;; This function is called by:
  2720 ;;		_clearAllTimer
  2721 ;;		_main
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724  0517                     _clearThreeHoursTimer:	
  2725                           
  2726                           ;common.c: 372: uiSmallTimer = 0;
  2727                           
  2728                           ; Regs used in _clearThreeHoursTimer: [status,2]
  2729  0517  01CB               	clrf	_uiSmallTimer
  2730  0518  01CC               	clrf	_uiSmallTimer+1
  2731  0519  0008               	return
  2732  051A                     __end_of_clearThreeHoursTimer:	
  2733  051A                     __ptext731:	
  2734 ;; =============== function _initPin ends ============
  2735                           
  2736                           
  2737 ;; *************** function _clearTwentySecondsTimer *****************
  2738 ;; Defined at:
  2739 ;;		line 376 in file "D:\develop\ATK\AK7030-OTP\common.c"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;		None
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;		None
  2744 ;; Return value:  Size  Location     Type
  2745 ;;		None               void
  2746 ;; Registers used:
  2747 ;;		status,2
  2748 ;; Tracked objects:
  2749 ;;		On entry : 160/0
  2750 ;;		On exit  : 160/20
  2751 ;;		Unchanged: FFE9F/0
  2752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2753 ;;      Params:         0       0       0       0       0
  2754 ;;      Locals:         0       0       0       0       0
  2755 ;;      Temps:          0       0       0       0       0
  2756 ;;      Totals:         0       0       0       0       0
  2757 ;;Total ram usage:        0 bytes
  2758 ;; Hardware stack levels used:    1
  2759 ;; Hardware stack levels required when called:    2
  2760 ;; This function calls:
  2761 ;;		Nothing
  2762 ;; This function is called by:
  2763 ;;		_clearAllTimer
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766  051A                     _clearTwentySecondsTimer:	
  2767  051A                     l3792:	
  2768                           ; Regs used in _clearTwentySecondsTimer: [status,2]
  2769                           
  2770                           
  2771                           ;common.c: 377: uiTwentySecondsTimer = 0;
  2772  051A  1683               	bsf	3,5	;RP0=1, select bank1
  2773  051B  01A0               	clrf	_uiTwentySecondsTimer^(0+128)
  2774  051C  01A1               	clrf	(_uiTwentySecondsTimer+1)^(0+128)
  2775  051D  0008               	return
  2776  051E                     __end_of_clearTwentySecondsTimer:	
  2777                           
  2778                           	psect	text705
  2779  03F0                     __ptext705:	
  2780 ;; =============== function _clearPinPortAndTimer ends ============
  2781                           
  2782                           
  2783 ;; *************** function _getAdOriginaCh4Value *****************
  2784 ;; Defined at:
  2785 ;;		line 229 in file "D:\develop\ATK\AK7030-OTP\common.c"
  2786 ;; Parameters:    Size  Location     Type
  2787 ;;		None
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;		None
  2790 ;; Return value:  Size  Location     Type
  2791 ;;                  2   39[BANK0 ] unsigned int 
  2792 ;; Registers used:
  2793 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2794 ;; Tracked objects:
  2795 ;;		On entry : 60/0
  2796 ;;		On exit  : 160/0
  2797 ;;		Unchanged: FFE00/0
  2798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2799 ;;      Params:         0       2       0       0       0
  2800 ;;      Locals:         0       0       0       0       0
  2801 ;;      Temps:          0       0       0       0       0
  2802 ;;      Totals:         0       2       0       0       0
  2803 ;;Total ram usage:        2 bytes
  2804 ;; Hardware stack levels used:    1
  2805 ;; Hardware stack levels required when called:    3
  2806 ;; This function calls:
  2807 ;;		_Filter
  2808 ;; This function is called by:
  2809 ;;		_main
  2810 ;; This function uses a non-reentrant model
  2811 ;;
  2812  03F0                     _getAdOriginaCh4Value:	
  2813                           
  2814                           ;common.c: 231: return Filter(uiSampleChannelFourth);
  2815                           
  2816                           ; Regs used in _getAdOriginaCh4Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  2817  03F0  30D2               	movlw	_uiSampleChannelFourth& (0+255)
  2818  03F1  2405               	fcall	_Filter
  2819  03F2  0821               	movf	?_Filter+1,w
  2820  03F3  00C8               	movwf	?_getAdOriginaCh4Value+1
  2821  03F4  0820               	movf	?_Filter,w
  2822  03F5  00C7               	movwf	?_getAdOriginaCh4Value
  2823  03F6  0008               	return
  2824  03F7                     __end_of_getAdOriginaCh4Value:	
  2825  03F7                     __ptext706:	
  2826 ;; =============== function _getAdOriginaCh4Value ends ============
  2827                           
  2828                           
  2829 ;; *************** function _getAdOriginalCh1Value *****************
  2830 ;; Defined at:
  2831 ;;		line 217 in file "D:\develop\ATK\AK7030-OTP\common.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;		None
  2834 ;; Auto vars:     Size  Location     Type
  2835 ;;		None
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  2   39[BANK0 ] unsigned int 
  2838 ;; Registers used:
  2839 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2840 ;; Tracked objects:
  2841 ;;		On entry : 60/0
  2842 ;;		On exit  : 160/0
  2843 ;;		Unchanged: FFE00/0
  2844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2845 ;;      Params:         0       2       0       0       0
  2846 ;;      Locals:         0       0       0       0       0
  2847 ;;      Temps:          0       0       0       0       0
  2848 ;;      Totals:         0       2       0       0       0
  2849 ;;Total ram usage:        2 bytes
  2850 ;; Hardware stack levels used:    1
  2851 ;; Hardware stack levels required when called:    3
  2852 ;; This function calls:
  2853 ;;		_Filter
  2854 ;; This function is called by:
  2855 ;;		_main
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858  03F7                     _getAdOriginalCh1Value:	
  2859                           
  2860                           ;common.c: 220: return Filter(uiSampleChannelFirst);
  2861                           
  2862                           ; Regs used in _getAdOriginalCh1Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  2863  03F7  30A2               	movlw	_uiSampleChannelFirst& (0+255)
  2864  03F8  2405               	fcall	_Filter
  2865  03F9  0821               	movf	?_Filter+1,w
  2866  03FA  00C8               	movwf	?_getAdOriginalCh1Value+1
  2867  03FB  0820               	movf	?_Filter,w
  2868  03FC  00C7               	movwf	?_getAdOriginalCh1Value
  2869  03FD  0008               	return
  2870  03FE                     __end_of_getAdOriginalCh1Value:	
  2871  03FE                     __ptext707:	
  2872 ;; =============== function _getAdOriginalCh1Value ends ============
  2873                           
  2874                           
  2875 ;; *************** function _getAdOriginalCh14Value *****************
  2876 ;; Defined at:
  2877 ;;		line 240 in file "D:\develop\ATK\AK7030-OTP\common.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;		None
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;		None
  2882 ;; Return value:  Size  Location     Type
  2883 ;;                  2   39[BANK0 ] unsigned int 
  2884 ;; Registers used:
  2885 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2886 ;; Tracked objects:
  2887 ;;		On entry : 60/0
  2888 ;;		On exit  : 160/0
  2889 ;;		Unchanged: FFE00/0
  2890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2891 ;;      Params:         0       2       0       0       0
  2892 ;;      Locals:         0       0       0       0       0
  2893 ;;      Temps:          0       0       0       0       0
  2894 ;;      Totals:         0       2       0       0       0
  2895 ;;Total ram usage:        2 bytes
  2896 ;; Hardware stack levels used:    1
  2897 ;; Hardware stack levels required when called:    3
  2898 ;; This function calls:
  2899 ;;		_Filter
  2900 ;; This function is called by:
  2901 ;;		_main
  2902 ;; This function uses a non-reentrant model
  2903 ;;
  2904  03FE                     _getAdOriginalCh14Value:	
  2905                           
  2906                           ;common.c: 242: return Filter(uiSampleChannelFourteenth);
  2907                           
  2908                           ; Regs used in _getAdOriginalCh14Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  2909  03FE  30BA               	movlw	_uiSampleChannelFourteenth& (0+255)
  2910  03FF  2405               	fcall	_Filter
  2911  0400  0821               	movf	?_Filter+1,w
  2912  0401  00C8               	movwf	?_getAdOriginalCh14Value+1
  2913  0402  0820               	movf	?_Filter,w
  2914  0403  00C7               	movwf	?_getAdOriginalCh14Value
  2915  0404  0008               	return
  2916  0405                     __end_of_getAdOriginalCh14Value:	
  2917  0405                     __ptext713:	
  2918 ;; =============== function _getAD_ConvertFlag ends ============
  2919                           
  2920                           
  2921 ;; *************** function _Filter *****************
  2922 ;; Defined at:
  2923 ;;		line 51 in file "D:\develop\ATK\AK7030-OTP\common.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;  tmpValue        1    wreg     PTR int 
  2926 ;;		 -> uiSampleChannelFourteenth(24), uiSampleChannelFourth(24), uiSampleChannelFirst(24), 
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;  tmpValue        1   34[BANK0 ] PTR int 
  2929 ;;		 -> uiSampleChannelFourteenth(24), uiSampleChannelFourth(24), uiSampleChannelFirst(24), 
  2930 ;;  cir             2   35[BANK0 ] int 
  2931 ;;  filter_buf     24    6[BANK0 ] unsigned int [12]
  2932 ;;  filter_sum      2   32[BANK0 ] unsigned int 
  2933 ;;  filter_temp     2   30[BANK0 ] unsigned int 
  2934 ;;  i               1   38[BANK0 ] unsigned char 
  2935 ;;  j               1   37[BANK0 ] unsigned char 
  2936 ;; Return value:  Size  Location     Type
  2937 ;;                  2    0[BANK0 ] unsigned int 
  2938 ;; Registers used:
  2939 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2940 ;; Tracked objects:
  2941 ;;		On entry : 60/0
  2942 ;;		On exit  : 160/0
  2943 ;;		Unchanged: FFE00/0
  2944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2945 ;;      Params:         0       2       0       0       0
  2946 ;;      Locals:         0      33       0       0       0
  2947 ;;      Temps:          0       4       0       0       0
  2948 ;;      Totals:         0      39       0       0       0
  2949 ;;Total ram usage:       39 bytes
  2950 ;; Hardware stack levels used:    1
  2951 ;; Hardware stack levels required when called:    2
  2952 ;; This function calls:
  2953 ;;		Nothing
  2954 ;; This function is called by:
  2955 ;;		_getAdOriginalCh1Value
  2956 ;;		_getAdOriginaCh4Value
  2957 ;;		_getAdOriginalCh14Value
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960  0405                     _Filter:	
  2961                           
  2962                           ; Regs used in _Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  2963                           ;Filter@tmpValue stored from wreg
  2964  0405  00C2               	movwf	Filter@tmpValue
  2965  0406  01C5               	clrf	Filter@j
  2966                           
  2967                           ;common.c: 55: unsigned int filter_temp = 0, filter_sum = 0;
  2968  0407  01BE               	clrf	Filter@filter_temp
  2969  0408  01BF               	clrf	Filter@filter_temp+1
  2970  0409  01C0               	clrf	Filter@filter_sum
  2971  040A  01C1               	clrf	Filter@filter_sum+1
  2972                           
  2973                           ;common.c: 57: unsigned int filter_buf[12];
  2974                           ;common.c: 59: for(int cir = 0;cir < 12; cir++)
  2975  040B  01C3               	clrf	Filter@cir
  2976  040C  01C4               	clrf	Filter@cir+1
  2977  040D                     l3902:	
  2978                           
  2979                           ;common.c: 60: filter_buf[cir] = *tmpValue++;
  2980  040D  1283               	bcf	3,5	;RP0=0, select bank0
  2981  040E  1303               	bcf	3,6	;RP1=0, select bank0
  2982  040F  0842               	movf	Filter@tmpValue,w
  2983  0410  2493  118A         	fcall	PL3	;call to abstracted procedure
  2984  0412  1003               	clrc
  2985  0413  0D43               	rlf	Filter@cir,w
  2986  0414  249B  118A         	fcall	PL4	;call to abstracted procedure
  2987  0416  0AC2               	incf	Filter@tmpValue,f
  2988  0417  0AC2               	incf	Filter@tmpValue,f
  2989  0418  0AC3               	incf	Filter@cir,f
  2990  0419  1903               	skipnz
  2991  041A  0AC4               	incf	Filter@cir+1,f
  2992  041B  0844               	movf	Filter@cir+1,w
  2993  041C  3A80               	xorlw	128
  2994  041D  00FF               	movwf	127
  2995  041E  3080               	movlw	128
  2996  041F  027F               	subwf	127,w
  2997  0420  1D03               	skipz
  2998  0421  2C24               	goto	u955
  2999  0422  300C               	movlw	12
  3000  0423  0243               	subwf	Filter@cir,w
  3001  0424                     u955:	
  3002  0424  1C03               	skipc
  3003  0425  2C0D               	goto	l3902
  3004                           
  3005                           ;common.c: 63: for(j = 0; j < 12 - 1; j++)
  3006  0426  1283               	bcf	3,5	;RP0=0, select bank0
  3007  0427  1303               	bcf	3,6	;RP1=0, select bank0
  3008  0428  01C5               	clrf	Filter@j
  3009  0429                     l3916:	
  3010                           
  3011                           ;common.c: 64: {
  3012                           ;common.c: 65: for(i = 0; i < 12 - 1 - j; i++)
  3013  0429  01C6               	clrf	Filter@i
  3014  042A                     l3924:	
  3015  042A  01A3               	clrf	??_Filter+1
  3016  042B  0845               	movf	Filter@j,w
  3017  042C  3C0B               	sublw	11
  3018  042D  00A2               	movwf	??_Filter
  3019  042E  1C03               	skipc
  3020  042F  03A3               	decf	??_Filter+1,f
  3021  0430  0823               	movf	??_Filter+1,w
  3022  0431  3A80               	xorlw	128
  3023  0432  3C80               	sublw	128
  3024  0433  1D03               	skipz
  3025  0434  2C37               	goto	u975
  3026  0435  0822               	movf	??_Filter,w
  3027  0436  0246               	subwf	Filter@i,w
  3028  0437                     u975:	
  3029  0437  1803               	btfsc	3,0
  3030  0438  2C6C               	goto	l3926
  3031                           
  3032                           ;common.c: 66: {
  3033                           ;common.c: 67: if(filter_buf[i] > filter_buf[i + 1])
  3034  0439  1283               	bcf	3,5	;RP0=0, select bank0
  3035  043A  1303               	bcf	3,6	;RP1=0, select bank0
  3036  043B  1003               	clrc
  3037  043C  0D46               	rlf	Filter@i,w
  3038  043D  3E26               	addlw	Filter@filter_buf& (0+255)
  3039  043E  2493  118A         	fcall	PL3	;call to abstracted procedure
  3040  0440  24A3  118A         	fcall	PL6	;call to abstracted procedure
  3041  0442  0800               	movf	0,w
  3042  0443  00A4               	movwf	??_Filter+2
  3043  0444  0A84               	incf	4,f
  3044  0445  0800               	movf	0,w
  3045  0446  00A5               	movwf	??_Filter+3
  3046  0447  0823               	movf	??_Filter+1,w
  3047  0448  0225               	subwf	??_Filter+3,w
  3048  0449  1D03               	skipz
  3049  044A  2C4D               	goto	u965
  3050  044B  0822               	movf	??_Filter,w
  3051  044C  0224               	subwf	??_Filter+2,w
  3052  044D                     u965:	
  3053  044D  1803               	skipnc
  3054  044E  2C6A               	goto	l3922
  3055                           
  3056                           ;common.c: 68: {
  3057                           ;common.c: 70: filter_temp = filter_buf[i];
  3058  044F  1003               	clrc
  3059  0450  0D46               	rlf	Filter@i,w
  3060  0451  3E26               	addlw	Filter@filter_buf& (0+255)
  3061  0452  0084               	movwf	4
  3062  0453  0800               	movf	0,w
  3063  0454  00BE               	movwf	Filter@filter_temp
  3064  0455  0A84               	incf	4,f
  3065  0456  0800               	movf	0,w
  3066  0457  00BF               	movwf	Filter@filter_temp+1
  3067                           
  3068                           ;common.c: 72: filter_buf[i] = filter_buf[i + 1];
  3069  0458  24A3  118A         	fcall	PL6	;call to abstracted procedure
  3070  045A  0800               	movf	0,w
  3071  045B  00A2               	movwf	??_Filter
  3072  045C  0A84               	incf	4,f
  3073  045D  0800               	movf	0,w
  3074  045E  00A3               	movwf	??_Filter+1
  3075  045F  1003               	clrc
  3076  0460  0D46               	rlf	Filter@i,w
  3077  0461  249B  118A         	fcall	PL4	;call to abstracted procedure
  3078                           
  3079                           ;common.c: 74: filter_buf[i + 1] = filter_temp;
  3080  0463  24A3  118A         	fcall	PL6	;call to abstracted procedure
  3081  0465  083E               	movf	Filter@filter_temp,w
  3082  0466  0080               	movwf	0
  3083  0467  0A84               	incf	4,f
  3084  0468  083F               	movf	Filter@filter_temp+1,w
  3085  0469  0080               	movwf	0
  3086  046A                     l3922:	
  3087  046A  0AC6               	incf	Filter@i,f
  3088  046B  2C2A               	goto	l3924
  3089  046C                     l3926:	
  3090  046C  1283               	bcf	3,5	;RP0=0, select bank0
  3091  046D  300B               	movlw	11
  3092  046E  1303               	bcf	3,6	;RP1=0, select bank0
  3093  046F  0AC5               	incf	Filter@j,f
  3094  0470  0245               	subwf	Filter@j,w
  3095  0471  1C03               	skipc
  3096  0472  2C29               	goto	l3916
  3097                           
  3098                           ;common.c: 75: }
  3099                           ;common.c: 76: }
  3100                           ;common.c: 77: }
  3101                           ;common.c: 79: for(i = 2; i < 12 - 2; i++)
  3102  0473  3002               	movlw	2
  3103  0474  00C6               	movwf	Filter@i
  3104                           
  3105                           ;common.c: 80: {
  3106                           ;common.c: 81: filter_sum += filter_buf[i];
  3107  0475  1003               	clrc
  3108  0476                     L10:	
  3109  0476  0D46               	rlf	Filter@i,w
  3110  0477  3E26               	addlw	Filter@filter_buf& (0+255)
  3111  0478  2493  118A         	fcall	PL3	;call to abstracted procedure
  3112  047A  0822               	movf	??_Filter,w
  3113  047B  07C0               	addwf	Filter@filter_sum,f
  3114  047C  1803               	skipnc
  3115  047D  0AC1               	incf	Filter@filter_sum+1,f
  3116  047E  0823               	movf	??_Filter+1,w
  3117  047F  07C1               	addwf	Filter@filter_sum+1,f
  3118  0480  300A               	movlw	10
  3119  0481  0AC6               	incf	Filter@i,f
  3120  0482  0246               	subwf	Filter@i,w
  3121  0483  1C03               	skipc
  3122  0484  2C76               	goto	L10
  3123                           
  3124                           ;common.c: 82: }
  3125                           ;common.c: 84: return (filter_sum >> 3);
  3126  0485  0841               	movf	Filter@filter_sum+1,w
  3127  0486  00A1               	movwf	?_Filter+1
  3128  0487  0840               	movf	Filter@filter_sum,w
  3129  0488  00A0               	movwf	?_Filter
  3130  0489  1003               	clrc
  3131  048A  0CA1               	rrf	?_Filter+1,f
  3132  048B  0CA0               	rrf	?_Filter,f
  3133  048C  1003               	clrc
  3134  048D  0CA1               	rrf	?_Filter+1,f
  3135  048E  0CA0               	rrf	?_Filter,f
  3136  048F  1003               	clrc
  3137  0490  0CA1               	rrf	?_Filter+1,f
  3138  0491  0CA0               	rrf	?_Filter,f
  3139  0492  0008               	return
  3140  0493                     __end_of_Filter:	
  3141  0493                     PL3:	
  3142  0493  0084               	movwf	4
  3143  0494  1383               	bcf	3,7	;select IRP bank0
  3144  0495  0800               	movf	0,w
  3145  0496  00A2               	movwf	??_Filter
  3146  0497  0A84               	incf	4,f
  3147  0498  0800               	movf	0,w
  3148  0499  00A3               	movwf	??_Filter+1
  3149  049A  0008               	return
  3150  049B                     PL4:	
  3151  049B  3E26               	addlw	Filter@filter_buf& (0+255)
  3152  049C  0084               	movwf	4
  3153  049D  0822               	movf	??_Filter,w
  3154  049E  0080               	movwf	0
  3155  049F  0A84               	incf	4,f
  3156  04A0  0823               	movf	??_Filter+1,w
  3157  04A1  0080               	movwf	0
  3158  04A2  0008               	return
  3159  04A3                     PL6:	
  3160  04A3  1003               	clrc
  3161  04A4  0D46               	rlf	Filter@i,w
  3162  04A5  3E02               	addlw	2
  3163  04A6  3E26               	addlw	Filter@filter_buf& (0+255)
  3164  04A7  0084               	movwf	4
  3165  04A8  0008               	return
  3166                           
  3167                           	psect	text708
  3168  04A9                     __ptext708:	
  3169 ;; =============== function _getAdOriginalCh14Value ends ============
  3170                           
  3171                           
  3172 ;; *************** function _process_AD_Converter_Value *****************
  3173 ;; Defined at:
  3174 ;;		line 251 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;		None
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;		None
  3179 ;; Return value:  Size  Location     Type
  3180 ;;		None               void
  3181 ;; Registers used:
  3182 ;;		wreg, status,2, status,0, pclath, cstack
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 60/0
  3186 ;;		Unchanged: FFF9F/0
  3187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3188 ;;      Params:         0       0       0       0       0
  3189 ;;      Locals:         0       0       0       0       0
  3190 ;;      Temps:          0       0       0       0       0
  3191 ;;      Totals:         0       0       0       0       0
  3192 ;;Total ram usage:        0 bytes
  3193 ;; Hardware stack levels used:    1
  3194 ;; Hardware stack levels required when called:    3
  3195 ;; This function calls:
  3196 ;;		_getAD_ConvertFlag
  3197 ;;		_setAD_ConvertFlag
  3198 ;;		_AD_Sample
  3199 ;;		_adc_test_init
  3200 ;;		_adc_start
  3201 ;; This function is called by:
  3202 ;;		_main
  3203 ;; This function uses a non-reentrant model
  3204 ;;
  3205  04A9                     _process_AD_Converter_Value:	
  3206                           
  3207                           ;common.c: 252: if(getAD_ConvertFlag())
  3208                           
  3209                           ; Regs used in _process_AD_Converter_Value: [wreg+status,2+status,0+pclath+cstack]
  3210  04A9  24C7  118A         	fcall	_getAD_ConvertFlag
  3211  04AB  3A00               	xorlw	0
  3212  04AC  1903               	skipnz
  3213  04AD  0008               	return
  3214                           
  3215                           ;common.c: 253: {
  3216                           ;common.c: 254: setAD_ConvertFlag(0);
  3217  04AE  3000               	movlw	0
  3218  04AF  24CB  118A         	fcall	_setAD_ConvertFlag
  3219                           
  3220                           ;common.c: 255: AD_Sample();
  3221  04B1  24CE  118A         	fcall	_AD_Sample
  3222                           
  3223                           ;common.c: 256: if(4 == sampleChannelSelect)
  3224  04B3  086E               	movf	_sampleChannelSelect,w
  3225  04B4  3A04               	xorlw	4
  3226  04B5  1D03               	skipz
  3227  04B6  2CBB               	goto	l4072
  3228                           
  3229                           ;common.c: 257: adc_test_init(4,3);
  3230  04B7  3003               	movlw	3
  3231  04B8  00A0               	movwf	?_adc_test_init
  3232  04B9  3004               	movlw	4
  3233  04BA  2CC4               	goto	L9
  3234  04BB                     l4072:	
  3235                           
  3236                           ;common.c: 258: else if(1 == sampleChannelSelect)
  3237  04BB  0B6E               	decfsz	_sampleChannelSelect,w
  3238  04BC  2CC1               	goto	l4076
  3239                           
  3240                           ;common.c: 259: adc_test_init(1,3);
  3241  04BD  3003               	movlw	3
  3242  04BE  00A0               	movwf	?_adc_test_init
  3243  04BF  3001               	movlw	1
  3244  04C0  2CC4               	goto	L9
  3245  04C1                     l4076:	
  3246                           
  3247                           ;common.c: 260: else
  3248                           ;common.c: 261: adc_test_init(14,3);
  3249  04C1  3003               	movlw	3
  3250  04C2  00A0               	movwf	?_adc_test_init
  3251  04C3  300E               	movlw	14
  3252  04C4                     L9:	
  3253  04C4  24EB  118A         	fcall	_adc_test_init
  3254                           
  3255                           ;common.c: 263: adc_start();
  3256  04C6  2D00               	ljmp	l3834
  3257  04C7                     __end_of_process_AD_Converter_Value:	
  3258  04C7                     __ptext712:	
  3259 ;; =============== function _setAD_ConvertFlag ends ============
  3260                           
  3261                           
  3262 ;; *************** function _getAD_ConvertFlag *****************
  3263 ;; Defined at:
  3264 ;;		line 200 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3265 ;; Parameters:    Size  Location     Type
  3266 ;;		None
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;		None
  3269 ;; Return value:  Size  Location     Type
  3270 ;;                  1    wreg      unsigned char 
  3271 ;; Registers used:
  3272 ;;		wreg
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 60/0
  3276 ;;		Unchanged: FFF9F/0
  3277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3278 ;;      Params:         0       0       0       0       0
  3279 ;;      Locals:         0       0       0       0       0
  3280 ;;      Temps:          0       0       0       0       0
  3281 ;;      Totals:         0       0       0       0       0
  3282 ;;Total ram usage:        0 bytes
  3283 ;; Hardware stack levels used:    1
  3284 ;; Hardware stack levels required when called:    2
  3285 ;; This function calls:
  3286 ;;		Nothing
  3287 ;; This function is called by:
  3288 ;;		_process_AD_Converter_Value
  3289 ;; This function uses a non-reentrant model
  3290 ;;
  3291  04C7                     _getAD_ConvertFlag:	
  3292                           
  3293                           ;common.c: 201: return adc_convert_flag;
  3294                           
  3295                           ; Regs used in _getAD_ConvertFlag: [wreg]
  3296  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  3297  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  3298  04C9  084E               	movf	_adc_convert_flag,w
  3299  04CA  0008               	return
  3300  04CB                     __end_of_getAD_ConvertFlag:	
  3301  04CB                     __ptext711:	
  3302 ;; =============== function _AD_Sample ends ============
  3303                           
  3304                           
  3305 ;; *************** function _setAD_ConvertFlag *****************
  3306 ;; Defined at:
  3307 ;;		line 206 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;  flag            1    wreg     unsigned char 
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;  flag            1    0[BANK0 ] unsigned char 
  3312 ;; Return value:  Size  Location     Type
  3313 ;;		None               void
  3314 ;; Registers used:
  3315 ;;		wreg
  3316 ;; Tracked objects:
  3317 ;;		On entry : 60/0
  3318 ;;		On exit  : 60/0
  3319 ;;		Unchanged: FFF9F/0
  3320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3321 ;;      Params:         0       0       0       0       0
  3322 ;;      Locals:         0       1       0       0       0
  3323 ;;      Temps:          0       0       0       0       0
  3324 ;;      Totals:         0       1       0       0       0
  3325 ;;Total ram usage:        1 bytes
  3326 ;; Hardware stack levels used:    1
  3327 ;; Hardware stack levels required when called:    2
  3328 ;; This function calls:
  3329 ;;		Nothing
  3330 ;; This function is called by:
  3331 ;;		_process_AD_Converter_Value
  3332 ;; This function uses a non-reentrant model
  3333 ;;
  3334  04CB                     _setAD_ConvertFlag:	
  3335                           
  3336                           ; Regs used in _setAD_ConvertFlag: [wreg]
  3337                           ;setAD_ConvertFlag@flag stored from wreg
  3338  04CB  00A0               	movwf	setAD_ConvertFlag@flag
  3339                           
  3340                           ;common.c: 207: adc_convert_flag = flag;
  3341  04CC  00CE               	movwf	_adc_convert_flag
  3342  04CD  0008               	return
  3343  04CE                     __end_of_setAD_ConvertFlag:	
  3344  04CE                     __ptext710:	
  3345 ;; =============== function _clearAllTimer ends ============
  3346                           
  3347                           
  3348 ;; *************** function _AD_Sample *****************
  3349 ;; Defined at:
  3350 ;;		line 277 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;		None
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;		None
  3355 ;; Return value:  Size  Location     Type
  3356 ;;		None               void
  3357 ;; Registers used:
  3358 ;;		wreg, status,2, status,0
  3359 ;; Tracked objects:
  3360 ;;		On entry : 60/0
  3361 ;;		On exit  : 60/0
  3362 ;;		Unchanged: FFF9F/0
  3363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3364 ;;      Params:         0       0       0       0       0
  3365 ;;      Locals:         0       0       0       0       0
  3366 ;;      Temps:          0       0       0       0       0
  3367 ;;      Totals:         0       0       0       0       0
  3368 ;;Total ram usage:        0 bytes
  3369 ;; Hardware stack levels used:    1
  3370 ;; Hardware stack levels required when called:    2
  3371 ;; This function calls:
  3372 ;;		Nothing
  3373 ;; This function is called by:
  3374 ;;		_process_AD_Converter_Value
  3375 ;; This function uses a non-reentrant model
  3376 ;;
  3377  04CE                     _AD_Sample:	
  3378                           
  3379                           ;common.c: 278: if(sampleTimes < 12)
  3380                           
  3381                           ; Regs used in _AD_Sample: [wreg+status,2+status,0]
  3382  04CE  300C               	movlw	12
  3383  04CF  024F               	subwf	_sampleTimes,w
  3384  04D0  1803               	skipnc
  3385  04D1  0008               	return
  3386  04D2  300C               	movlw	12
  3387                           
  3388                           ;common.c: 279: {
  3389                           ;common.c: 300: sampleTimes++;
  3390  04D3  0ACF               	incf	_sampleTimes,f
  3391                           
  3392                           ;common.c: 302: if(sampleTimes >= 12)
  3393  04D4  024F               	subwf	_sampleTimes,w
  3394  04D5  1C03               	skipc
  3395  04D6  0008               	return
  3396                           
  3397                           ;common.c: 303: {
  3398                           ;common.c: 304: sampleTimes = 0;
  3399  04D7  01CF               	clrf	_sampleTimes
  3400                           
  3401                           ;common.c: 306: if(sampleChannelSelect == 14)
  3402  04D8  086E               	movf	_sampleChannelSelect,w
  3403  04D9  3A0E               	xorlw	14
  3404  04DA  1D03               	skipz
  3405  04DB  2CDF               	goto	l4012
  3406                           
  3407                           ;common.c: 307: {
  3408                           ;common.c: 310: sampleChannelSelect = 1;
  3409  04DC  01EE               	clrf	_sampleChannelSelect
  3410  04DD  0AEE               	incf	_sampleChannelSelect,f
  3411                           
  3412                           ;common.c: 311: }
  3413  04DE  0008               	return
  3414  04DF                     l4012:	
  3415                           
  3416                           ;common.c: 312: else if(sampleChannelSelect == 4)
  3417  04DF  086E               	movf	_sampleChannelSelect,w
  3418  04E0  3A04               	xorlw	4
  3419  04E1  1D03               	skipz
  3420  04E2  2CE6               	goto	l4016
  3421  04E3                     l4014:	
  3422                           
  3423                           ;common.c: 313: {
  3424                           ;common.c: 315: sampleChannelSelect = 14;
  3425  04E3  300E               	movlw	14
  3426  04E4  00EE               	movwf	_sampleChannelSelect
  3427                           
  3428                           ;common.c: 316: }
  3429  04E5  0008               	return
  3430  04E6                     l4016:	
  3431                           
  3432                           ;common.c: 317: else if(sampleChannelSelect == 1)
  3433  04E6  0B6E               	decfsz	_sampleChannelSelect,w
  3434  04E7  2CE3               	goto	l4014
  3435                           
  3436                           ;common.c: 318: {
  3437                           ;common.c: 320: sampleChannelSelect = 4;
  3438  04E8  3004               	movlw	4
  3439  04E9  00EE               	movwf	_sampleChannelSelect
  3440                           
  3441                           ;common.c: 321: }
  3442  04EA  0008               	return
  3443  04EB                     __end_of_AD_Sample:	
  3444  04EB                     __ptext726:	
  3445 ;; =============== function _dac_init ends ============
  3446                           
  3447                           
  3448 ;; *************** function _adc_test_init *****************
  3449 ;; Defined at:
  3450 ;;		line 85 in file "D:\develop\ATK\AK7030-OTP\periph.c"
  3451 ;; Parameters:    Size  Location     Type
  3452 ;;  channel         1    wreg     unsigned char 
  3453 ;;  ref             1    0[BANK0 ] unsigned char 
  3454 ;; Auto vars:     Size  Location     Type
  3455 ;;  channel         1    2[BANK0 ] unsigned char 
  3456 ;; Return value:  Size  Location     Type
  3457 ;;		None               void
  3458 ;; Registers used:
  3459 ;;		wreg, status,2, status,0
  3460 ;; Tracked objects:
  3461 ;;		On entry : 60/0
  3462 ;;		On exit  : 60/20
  3463 ;;		Unchanged: FFF9F/0
  3464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3465 ;;      Params:         0       1       0       0       0
  3466 ;;      Locals:         0       1       0       0       0
  3467 ;;      Temps:          0       1       0       0       0
  3468 ;;      Totals:         0       3       0       0       0
  3469 ;;Total ram usage:        3 bytes
  3470 ;; Hardware stack levels used:    1
  3471 ;; Hardware stack levels required when called:    2
  3472 ;; This function calls:
  3473 ;;		Nothing
  3474 ;; This function is called by:
  3475 ;;		_main
  3476 ;;		_process_AD_Converter_Value
  3477 ;; This function uses a non-reentrant model
  3478 ;;
  3479  04EB                     _adc_test_init:	
  3480                           
  3481                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  3482                           ;adc_test_init@channel stored from wreg
  3483  04EB  00A2               	movwf	adc_test_init@channel
  3484                           
  3485                           ;periph.c: 86: ADCON0 = 0x00;
  3486  04EC  019F               	clrf	31	;volatile
  3487                           
  3488                           ;periph.c: 87: ADCON0|=channel<<2;
  3489  04ED  00A1               	movwf	??_adc_test_init
  3490  04EE  1003               	clrc
  3491  04EF  0DA1               	rlf	??_adc_test_init,f
  3492  04F0  1003               	clrc
  3493  04F1  0D21               	rlf	??_adc_test_init,w
  3494  04F2  049F               	iorwf	31,f	;volatile
  3495                           
  3496                           ;periph.c: 88: ADCON1|=ref<<6;
  3497  04F3  0820               	movf	adc_test_init@ref,w
  3498  04F4  00A1               	movwf	??_adc_test_init
  3499  04F5  0CA1               	rrf	??_adc_test_init,f
  3500  04F6  0CA1               	rrf	??_adc_test_init,f
  3501  04F7  0C21               	rrf	??_adc_test_init,w
  3502  04F8  39C0               	andlw	192
  3503  04F9  1683               	bsf	3,5	;RP0=1, select bank1
  3504  04FA  049F               	iorwf	31,f	;volatile
  3505                           
  3506                           ;periph.c: 89: ADON=1;
  3507  04FB  1283               	bcf	3,5	;RP0=0, select bank0
  3508  04FC  141F               	bsf	31,0
  3509                           
  3510                           ;periph.c: 90: ADIE=1;
  3511  04FD  1683               	bsf	3,5	;RP0=1, select bank1
  3512  04FE  150D               	bsf	13,2
  3513  04FF  0008               	return
  3514  0500                     __end_of_adc_test_init:	
  3515  0500                     __ptext722:	
  3516 ;; =============== function _isPermitSampleTime ends ============
  3517                           
  3518                           
  3519 ;; *************** function _adc_start *****************
  3520 ;; Defined at:
  3521 ;;		line 100 in file "D:\develop\ATK\AK7030-OTP\periph.c"
  3522 ;; Parameters:    Size  Location     Type
  3523 ;;		None
  3524 ;; Auto vars:     Size  Location     Type
  3525 ;;		None
  3526 ;; Return value:  Size  Location     Type
  3527 ;;		None               void
  3528 ;; Registers used:
  3529 ;;		None
  3530 ;; Tracked objects:
  3531 ;;		On entry : 60/20
  3532 ;;		On exit  : 60/0
  3533 ;;		Unchanged: FFF9F/0
  3534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3535 ;;      Params:         0       0       0       0       0
  3536 ;;      Locals:         0       0       0       0       0
  3537 ;;      Temps:          0       0       0       0       0
  3538 ;;      Totals:         0       0       0       0       0
  3539 ;;Total ram usage:        0 bytes
  3540 ;; Hardware stack levels used:    1
  3541 ;; Hardware stack levels required when called:    2
  3542 ;; This function calls:
  3543 ;;		Nothing
  3544 ;; This function is called by:
  3545 ;;		_main
  3546 ;;		_process_AD_Converter_Value
  3547 ;; This function uses a non-reentrant model
  3548 ;;
  3549  0500                     _adc_start:	
  3550  0500                     l3834:	
  3551                           ; Regs used in _adc_start: []
  3552                           
  3553                           
  3554                           ;periph.c: 101: GO=1;
  3555  0500  1283               	bcf	3,5	;RP0=0, select bank0
  3556  0501  149F               	bsf	31,1
  3557  0502  0008               	return
  3558  0503                     __end_of_adc_start:	
  3559                           
  3560                           	psect	text714
  3561  05B0                     __ptext714:	
  3562 ;; =============== function _Filter ends ============
  3563                           
  3564                           
  3565 ;; *************** function _isFinishedThreeHoursTimer *****************
  3566 ;; Defined at:
  3567 ;;		line 416 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;		None
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;		None
  3572 ;; Return value:  Size  Location     Type
  3573 ;;                  1    wreg      unsigned char 
  3574 ;; Registers used:
  3575 ;;		wreg, status,2, status,0
  3576 ;; Tracked objects:
  3577 ;;		On entry : 60/0
  3578 ;;		On exit  : 60/0
  3579 ;;		Unchanged: FFF9F/0
  3580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3581 ;;      Params:         0       0       0       0       0
  3582 ;;      Locals:         0       0       0       0       0
  3583 ;;      Temps:          0       0       0       0       0
  3584 ;;      Totals:         0       0       0       0       0
  3585 ;;Total ram usage:        0 bytes
  3586 ;; Hardware stack levels used:    1
  3587 ;; Hardware stack levels required when called:    2
  3588 ;; This function calls:
  3589 ;;		Nothing
  3590 ;; This function is called by:
  3591 ;;		_main
  3592 ;; This function uses a non-reentrant model
  3593 ;;
  3594  05B0                     _isFinishedThreeHoursTimer:	
  3595                           
  3596                           ;common.c: 417: if(uiSmallTimer == 0)
  3597                           
  3598                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  3599  05B0  084C               	movf	_uiSmallTimer+1,w
  3600  05B1  044B               	iorwf	_uiSmallTimer,w
  3601  05B2  1903               	btfsc	3,2
  3602                           
  3603                           ;common.c: 418: return 1;
  3604  05B3  3401               	retlw	1
  3605                           
  3606                           ;common.c: 419: else
  3607                           ;common.c: 420: return 0;
  3608  05B4  3400               	retlw	0
  3609  05B5                     __end_of_isFinishedThreeHoursTimer:	
  3610                           
  3611                           	psect	text715
  3612  0580                     __ptext715:	
  3613 ;; =============== function _isFinishedThreeHoursTimer ends ============
  3614                           
  3615                           
  3616 ;; *************** function _startThreeHoursTimer *****************
  3617 ;; Defined at:
  3618 ;;		line 382 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;		None
  3623 ;; Return value:  Size  Location     Type
  3624 ;;		None               void
  3625 ;; Registers used:
  3626 ;;		wreg, status,2, status,0
  3627 ;; Tracked objects:
  3628 ;;		On entry : 60/0
  3629 ;;		On exit  : 60/0
  3630 ;;		Unchanged: FFF9F/0
  3631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3632 ;;      Params:         0       2       0       0       0
  3633 ;;      Locals:         0       0       0       0       0
  3634 ;;      Temps:          0       0       0       0       0
  3635 ;;      Totals:         0       2       0       0       0
  3636 ;;Total ram usage:        2 bytes
  3637 ;; Hardware stack levels used:    1
  3638 ;; Hardware stack levels required when called:    2
  3639 ;; This function calls:
  3640 ;;		Nothing
  3641 ;; This function is called by:
  3642 ;;		_main
  3643 ;; This function uses a non-reentrant model
  3644 ;;
  3645  0580                     _startThreeHoursTimer:	
  3646                           
  3647                           ;common.c: 383: if(0 == uiSmallTimer)
  3648                           
  3649                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  3650  0580  084C               	movf	_uiSmallTimer+1,w
  3651  0581  044B               	iorwf	_uiSmallTimer,w
  3652  0582  1D03               	skipz
  3653  0583  0008               	return
  3654                           
  3655                           ;common.c: 384: uiSmallTimer = uiSetTime;
  3656  0584  0821               	movf	startThreeHoursTimer@uiSetTime+1,w
  3657  0585  00CC               	movwf	_uiSmallTimer+1
  3658  0586  0820               	movf	startThreeHoursTimer@uiSetTime,w
  3659  0587  00CB               	movwf	_uiSmallTimer
  3660  0588  0008               	return
  3661  0589                     __end_of_startThreeHoursTimer:	
  3662                           
  3663                           	psect	text716
  3664  05AA                     __ptext716:	
  3665 ;; =============== function _startThreeHoursTimer ends ============
  3666                           
  3667                           
  3668 ;; *************** function _isFinishedTwentySecondsTimer *****************
  3669 ;; Defined at:
  3670 ;;		line 399 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;		None
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;		None
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  1    wreg      unsigned char 
  3677 ;; Registers used:
  3678 ;;		wreg, status,2, status,0
  3679 ;; Tracked objects:
  3680 ;;		On entry : 60/0
  3681 ;;		On exit  : 60/20
  3682 ;;		Unchanged: FFF9F/0
  3683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3684 ;;      Params:         0       0       0       0       0
  3685 ;;      Locals:         0       0       0       0       0
  3686 ;;      Temps:          0       0       0       0       0
  3687 ;;      Totals:         0       0       0       0       0
  3688 ;;Total ram usage:        0 bytes
  3689 ;; Hardware stack levels used:    1
  3690 ;; Hardware stack levels required when called:    2
  3691 ;; This function calls:
  3692 ;;		Nothing
  3693 ;; This function is called by:
  3694 ;;		_main
  3695 ;; This function uses a non-reentrant model
  3696 ;;
  3697  05AA                     _isFinishedTwentySecondsTimer:	
  3698                           
  3699                           ;common.c: 400: if(0 == uiTwentySecondsTimer)
  3700                           
  3701                           ; Regs used in _isFinishedTwentySecondsTimer: [wreg+status,2+status,0]
  3702  05AA  1683               	bsf	3,5	;RP0=1, select bank1
  3703  05AB  0821               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  3704  05AC  0420               	iorwf	_uiTwentySecondsTimer^(0+128),w
  3705  05AD  1903               	btfsc	3,2
  3706                           
  3707                           ;common.c: 401: return 1;
  3708  05AE  3401               	retlw	1
  3709                           
  3710                           ;common.c: 402: else
  3711                           ;common.c: 403: return 0;
  3712  05AF  3400               	retlw	0
  3713  05B0                     __end_of_isFinishedTwentySecondsTimer:	
  3714                           
  3715                           	psect	text717
  3716  05B5                     __ptext717:	
  3717 ;; =============== function _isFinishedTwentySecondsTimer ends ============
  3718                           
  3719                           
  3720 ;; *************** function _startTwentySecondsTimer *****************
  3721 ;; Defined at:
  3722 ;;		line 393 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;		None
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;		None
  3727 ;; Return value:  Size  Location     Type
  3728 ;;		None               void
  3729 ;; Registers used:
  3730 ;;		wreg
  3731 ;; Tracked objects:
  3732 ;;		On entry : 60/0
  3733 ;;		On exit  : 60/20
  3734 ;;		Unchanged: FFF9F/0
  3735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3736 ;;      Params:         0       0       0       0       0
  3737 ;;      Locals:         0       0       0       0       0
  3738 ;;      Temps:          0       0       0       0       0
  3739 ;;      Totals:         0       0       0       0       0
  3740 ;;Total ram usage:        0 bytes
  3741 ;; Hardware stack levels used:    1
  3742 ;; Hardware stack levels required when called:    2
  3743 ;; This function calls:
  3744 ;;		Nothing
  3745 ;; This function is called by:
  3746 ;;		_main
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749  05B5                     _startTwentySecondsTimer:	
  3750                           
  3751                           ;common.c: 394: uiTwentySecondsTimer = 20;
  3752                           
  3753                           ; Regs used in _startTwentySecondsTimer: [wreg]
  3754  05B5  3014               	movlw	20
  3755  05B6  1683               	bsf	3,5	;RP0=1, select bank1
  3756  05B7  00A0               	movwf	_uiTwentySecondsTimer^(0+128)
  3757  05B8  01A1               	clrf	(_uiTwentySecondsTimer+1)^(0+128)
  3758  05B9  0008               	return
  3759  05BA                     __end_of_startTwentySecondsTimer:	
  3760                           
  3761                           	psect	text718
  3762  05BA                     __ptext718:	
  3763 ;; =============== function _startTwentySecondsTimer ends ============
  3764                           
  3765                           
  3766 ;; *************** function _isFinishedTwelveHoursTimer *****************
  3767 ;; Defined at:
  3768 ;;		line 408 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;		None
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;		None
  3773 ;; Return value:  Size  Location     Type
  3774 ;;                  1    wreg      unsigned char 
  3775 ;; Registers used:
  3776 ;;		wreg, status,2, status,0
  3777 ;; Tracked objects:
  3778 ;;		On entry : 60/0
  3779 ;;		On exit  : 60/0
  3780 ;;		Unchanged: FFF9F/0
  3781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3782 ;;      Params:         0       0       0       0       0
  3783 ;;      Locals:         0       0       0       0       0
  3784 ;;      Temps:          0       0       0       0       0
  3785 ;;      Totals:         0       0       0       0       0
  3786 ;;Total ram usage:        0 bytes
  3787 ;; Hardware stack levels used:    1
  3788 ;; Hardware stack levels required when called:    2
  3789 ;; This function calls:
  3790 ;;		Nothing
  3791 ;; This function is called by:
  3792 ;;		_main
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795  05BA                     _isFinishedTwelveHoursTimer:	
  3796                           
  3797                           ;common.c: 409: if(uiBigTimer == 0)
  3798                           
  3799                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  3800  05BA  084A               	movf	_uiBigTimer+1,w
  3801  05BB  0449               	iorwf	_uiBigTimer,w
  3802  05BC  1903               	btfsc	3,2
  3803                           
  3804                           ;common.c: 410: return 1;
  3805  05BD  3401               	retlw	1
  3806                           
  3807                           ;common.c: 411: else
  3808                           ;common.c: 412: return 0;
  3809  05BE  3400               	retlw	0
  3810  05BF                     __end_of_isFinishedTwelveHoursTimer:	
  3811                           
  3812                           	psect	text719
  3813  0589                     __ptext719:	
  3814 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  3815                           
  3816                           
  3817 ;; *************** function _startTwelveHourTimer *****************
  3818 ;; Defined at:
  3819 ;;		line 354 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3820 ;; Parameters:    Size  Location     Type
  3821 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  3822 ;; Auto vars:     Size  Location     Type
  3823 ;;		None
  3824 ;; Return value:  Size  Location     Type
  3825 ;;		None               void
  3826 ;; Registers used:
  3827 ;;		wreg, status,2, status,0
  3828 ;; Tracked objects:
  3829 ;;		On entry : 60/0
  3830 ;;		On exit  : 60/0
  3831 ;;		Unchanged: FFF9F/0
  3832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3833 ;;      Params:         0       2       0       0       0
  3834 ;;      Locals:         0       0       0       0       0
  3835 ;;      Temps:          0       0       0       0       0
  3836 ;;      Totals:         0       2       0       0       0
  3837 ;;Total ram usage:        2 bytes
  3838 ;; Hardware stack levels used:    1
  3839 ;; Hardware stack levels required when called:    2
  3840 ;; This function calls:
  3841 ;;		Nothing
  3842 ;; This function is called by:
  3843 ;;		_main
  3844 ;; This function uses a non-reentrant model
  3845 ;;
  3846  0589                     _startTwelveHourTimer:	
  3847                           
  3848                           ;common.c: 355: if(0 == uiBigTimer)
  3849                           
  3850                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  3851  0589  084A               	movf	_uiBigTimer+1,w
  3852  058A  0449               	iorwf	_uiBigTimer,w
  3853  058B  1D03               	skipz
  3854  058C  0008               	return
  3855                           
  3856                           ;common.c: 356: uiBigTimer = uiSetTime;
  3857  058D  0821               	movf	startTwelveHourTimer@uiSetTime+1,w
  3858  058E  00CA               	movwf	_uiBigTimer+1
  3859  058F  0820               	movf	startTwelveHourTimer@uiSetTime,w
  3860  0590  00C9               	movwf	_uiBigTimer
  3861  0591  0008               	return
  3862  0592                     __end_of_startTwelveHourTimer:	
  3863                           
  3864                           	psect	text720
  3865  05CC                     __ptext720:	
  3866 ;; =============== function _startTwelveHourTimer ends ============
  3867                           
  3868                           
  3869 ;; *************** function _clrSampeTime *****************
  3870 ;; Defined at:
  3871 ;;		line 434 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3872 ;; Parameters:    Size  Location     Type
  3873 ;;		None
  3874 ;; Auto vars:     Size  Location     Type
  3875 ;;		None
  3876 ;; Return value:  Size  Location     Type
  3877 ;;		None               void
  3878 ;; Registers used:
  3879 ;;		status,2
  3880 ;; Tracked objects:
  3881 ;;		On entry : 60/0
  3882 ;;		On exit  : 60/0
  3883 ;;		Unchanged: FFF9F/0
  3884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3885 ;;      Params:         0       0       0       0       0
  3886 ;;      Locals:         0       0       0       0       0
  3887 ;;      Temps:          0       0       0       0       0
  3888 ;;      Totals:         0       0       0       0       0
  3889 ;;Total ram usage:        0 bytes
  3890 ;; Hardware stack levels used:    1
  3891 ;; Hardware stack levels required when called:    2
  3892 ;; This function calls:
  3893 ;;		Nothing
  3894 ;; This function is called by:
  3895 ;;		_main
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898  05CC                     _clrSampeTime:	
  3899                           
  3900                           ;common.c: 435: timer.timer10msStopWatch = 0;
  3901                           
  3902                           ; Regs used in _clrSampeTime: [status,2]
  3903  05CC  01D0               	clrf	_timer
  3904  05CD  0008               	return
  3905  05CE                     __end_of_clrSampeTime:	
  3906                           
  3907                           	psect	text721
  3908  05BF                     __ptext721:	
  3909 ;; =============== function _clrSampeTime ends ============
  3910                           
  3911                           
  3912 ;; *************** function _isPermitSampleTime *****************
  3913 ;; Defined at:
  3914 ;;		line 424 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;		None
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;		None
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  1    wreg      unsigned char 
  3921 ;; Registers used:
  3922 ;;		wreg
  3923 ;; Tracked objects:
  3924 ;;		On entry : 60/0
  3925 ;;		On exit  : 60/0
  3926 ;;		Unchanged: FFF9F/0
  3927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3928 ;;      Params:         0       0       0       0       0
  3929 ;;      Locals:         0       0       0       0       0
  3930 ;;      Temps:          0       0       0       0       0
  3931 ;;      Totals:         0       0       0       0       0
  3932 ;;Total ram usage:        0 bytes
  3933 ;; Hardware stack levels used:    1
  3934 ;; Hardware stack levels required when called:    2
  3935 ;; This function calls:
  3936 ;;		Nothing
  3937 ;; This function is called by:
  3938 ;;		_main
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941  05BF                     _isPermitSampleTime:	
  3942                           
  3943                           ;common.c: 425: if(timer.timer10msStopWatch >= 10)
  3944                           
  3945                           ; Regs used in _isPermitSampleTime: [wreg]
  3946  05BF  300A               	movlw	10
  3947  05C0  0250               	subwf	_timer,w
  3948  05C1  1803               	btfsc	3,0
  3949                           
  3950                           ;common.c: 426: {
  3951                           ;common.c: 427: return 1;
  3952  05C2  3401               	retlw	1
  3953                           
  3954                           ;common.c: 429: else
  3955                           ;common.c: 430: return 0;
  3956  05C3  3400               	retlw	0
  3957  05C4                     __end_of_isPermitSampleTime:	
  3958                           
  3959                           	psect	text723
  3960  059A                     __ptext723:	
  3961 ;; =============== function _adc_start ends ============
  3962                           
  3963                           
  3964 ;; *************** function _op2_init *****************
  3965 ;; Defined at:
  3966 ;;		line 45 in file "D:\develop\ATK\AK7030-OTP\periph.c"
  3967 ;; Parameters:    Size  Location     Type
  3968 ;;		None
  3969 ;; Auto vars:     Size  Location     Type
  3970 ;;		None
  3971 ;; Return value:  Size  Location     Type
  3972 ;;		None               void
  3973 ;; Registers used:
  3974 ;;		wreg
  3975 ;; Tracked objects:
  3976 ;;		On entry : 17F/20
  3977 ;;		On exit  : 17F/20
  3978 ;;		Unchanged: FFE80/0
  3979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3980 ;;      Params:         0       0       0       0       0
  3981 ;;      Locals:         0       0       0       0       0
  3982 ;;      Temps:          0       0       0       0       0
  3983 ;;      Totals:         0       0       0       0       0
  3984 ;;Total ram usage:        0 bytes
  3985 ;; Hardware stack levels used:    1
  3986 ;; Hardware stack levels required when called:    2
  3987 ;; This function calls:
  3988 ;;		Nothing
  3989 ;; This function is called by:
  3990 ;;		_main
  3991 ;; This function uses a non-reentrant model
  3992 ;;
  3993  059A                     _op2_init:	
  3994                           
  3995                           ;periph.c: 52: OP2CON1=0x10;
  3996                           
  3997                           ; Regs used in _op2_init: [wreg]
  3998  059A  3010               	movlw	16
  3999  059B  009C               	movwf	28	;volatile
  4000                           
  4001                           ;periph.c: 54: OP2CON2=0x10;
  4002  059C  009D               	movwf	29	;volatile
  4003                           
  4004                           ;periph.c: 55: OP2CON0=0x80;
  4005  059D  3080               	movlw	128
  4006  059E  009B               	movwf	27	;volatile
  4007                           
  4008                           ;periph.c: 58: TRISA7=0;
  4009  059F  1385               	bcf	5,7
  4010                           
  4011                           ;periph.c: 60: TRISB7 = 1;
  4012  05A0  1786               	bsf	6,7
  4013  05A1  0008               	return
  4014  05A2                     __end_of_op2_init:	
  4015                           
  4016                           	psect	text724
  4017  056B                     __ptext724:	
  4018 ;; =============== function _op2_init ends ============
  4019                           
  4020                           
  4021 ;; *************** function _op1_init *****************
  4022 ;; Defined at:
  4023 ;;		line 26 in file "D:\develop\ATK\AK7030-OTP\periph.c"
  4024 ;; Parameters:    Size  Location     Type
  4025 ;;		None
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;		None
  4028 ;; Return value:  Size  Location     Type
  4029 ;;		None               void
  4030 ;; Registers used:
  4031 ;;		wreg
  4032 ;; Tracked objects:
  4033 ;;		On entry : 17F/20
  4034 ;;		On exit  : 17F/20
  4035 ;;		Unchanged: FFE80/0
  4036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4037 ;;      Params:         0       0       0       0       0
  4038 ;;      Locals:         0       0       0       0       0
  4039 ;;      Temps:          0       0       0       0       0
  4040 ;;      Totals:         0       0       0       0       0
  4041 ;;Total ram usage:        0 bytes
  4042 ;; Hardware stack levels used:    1
  4043 ;; Hardware stack levels required when called:    2
  4044 ;; This function calls:
  4045 ;;		Nothing
  4046 ;; This function is called by:
  4047 ;;		_main
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050  056B                     _op1_init:	
  4051                           
  4052                           ;periph.c: 33: OP1CON1=0x02;
  4053                           
  4054                           ; Regs used in _op1_init: [wreg]
  4055  056B  3002               	movlw	2
  4056  056C  1283               	bcf	3,5	;RP0=0, select bank0
  4057  056D  009C               	movwf	28	;volatile
  4058                           
  4059                           ;periph.c: 34: OP1CON2=0xA0;
  4060  056E  30A0               	movlw	160
  4061  056F  009D               	movwf	29	;volatile
  4062                           
  4063                           ;periph.c: 35: OP1CON0=0x80;
  4064  0570  3080               	movlw	128
  4065  0571  009B               	movwf	27	;volatile
  4066                           
  4067                           ;periph.c: 38: TRISB3=1;
  4068  0572  1683               	bsf	3,5	;RP0=1, select bank1
  4069  0573  1586               	bsf	6,3
  4070                           
  4071                           ;periph.c: 40: TRISB5=0;
  4072  0574  1286               	bcf	6,5
  4073  0575  0008               	return
  4074  0576                     __end_of_op1_init:	
  4075                           
  4076                           	psect	text725
  4077  05C4                     __ptext725:	
  4078 ;; =============== function _op1_init ends ============
  4079                           
  4080                           
  4081 ;; *************** function _dac_init *****************
  4082 ;; Defined at:
  4083 ;;		line 14 in file "D:\develop\ATK\AK7030-OTP\periph.c"
  4084 ;; Parameters:    Size  Location     Type
  4085 ;;		None
  4086 ;; Auto vars:     Size  Location     Type
  4087 ;;		None
  4088 ;; Return value:  Size  Location     Type
  4089 ;;		None               void
  4090 ;; Registers used:
  4091 ;;		wreg
  4092 ;; Tracked objects:
  4093 ;;		On entry : 17F/20
  4094 ;;		On exit  : 17F/20
  4095 ;;		Unchanged: FFE80/0
  4096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4097 ;;      Params:         0       0       0       0       0
  4098 ;;      Locals:         0       0       0       0       0
  4099 ;;      Temps:          0       0       0       0       0
  4100 ;;      Totals:         0       0       0       0       0
  4101 ;;Total ram usage:        0 bytes
  4102 ;; Hardware stack levels used:    1
  4103 ;; Hardware stack levels required when called:    2
  4104 ;; This function calls:
  4105 ;;		Nothing
  4106 ;; This function is called by:
  4107 ;;		_main
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110  05C4                     _dac_init:	
  4111                           
  4112                           ;periph.c: 15: DACCON|=1;
  4113                           
  4114                           ; Regs used in _dac_init: [wreg]
  4115  05C4  1407               	bsf	7,0	;volatile
  4116                           
  4117                           ;periph.c: 17: DACR0=0x0F;
  4118  05C5  300F               	movlw	15
  4119  05C6  0088               	movwf	8	;volatile
  4120                           
  4121                           ;periph.c: 18: DACCON|=(1)<<2;
  4122  05C7  1507               	bsf	7,2	;volatile
  4123  05C8  0008               	return
  4124  05C9                     __end_of_dac_init:	
  4125                           
  4126                           	psect	text727
  4127  05C9                     __ptext727:	
  4128 ;; =============== function _adc_test_init ends ============
  4129                           
  4130                           
  4131 ;; *************** function _timer1_interrupt_config *****************
  4132 ;; Defined at:
  4133 ;;		line 192 in file "D:\develop\ATK\AK7030-OTP\common.c"
  4134 ;; Parameters:    Size  Location     Type
  4135 ;;		None
  4136 ;; Auto vars:     Size  Location     Type
  4137 ;;		None
  4138 ;; Return value:  Size  Location     Type
  4139 ;;		None               void
  4140 ;; Registers used:
  4141 ;;		None
  4142 ;; Tracked objects:
  4143 ;;		On entry : 17F/20
  4144 ;;		On exit  : 17F/20
  4145 ;;		Unchanged: FFE80/0
  4146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4147 ;;      Params:         0       0       0       0       0
  4148 ;;      Locals:         0       0       0       0       0
  4149 ;;      Temps:          0       0       0       0       0
  4150 ;;      Totals:         0       0       0       0       0
  4151 ;;Total ram usage:        0 bytes
  4152 ;; Hardware stack levels used:    1
  4153 ;; Hardware stack levels required when called:    2
  4154 ;; This function calls:
  4155 ;;		Nothing
  4156 ;; This function is called by:
  4157 ;;		_main
  4158 ;; This function uses a non-reentrant model
  4159 ;;
  4160  05C9                     _timer1_interrupt_config:	
  4161                           
  4162                           ;common.c: 193: GIE = 1;
  4163                           
  4164                           ; Regs used in _timer1_interrupt_config: []
  4165  05C9  178B               	bsf	11,7
  4166                           
  4167                           ;common.c: 194: PEIE = 1;
  4168  05CA  170B               	bsf	11,6
  4169  05CB  0008               	return
  4170  05CC                     __end_of_timer1_interrupt_config:	
  4171                           
  4172                           	psect	text728
  4173  0576                     __ptext728:	
  4174 ;; =============== function _timer1_interrupt_config ends ============
  4175                           
  4176                           
  4177 ;; *************** function _timer1_config *****************
  4178 ;; Defined at:
  4179 ;;		line 180 in file "D:\develop\ATK\AK7030-OTP\common.c"
  4180 ;; Parameters:    Size  Location     Type
  4181 ;;		None
  4182 ;; Auto vars:     Size  Location     Type
  4183 ;;		None
  4184 ;; Return value:  Size  Location     Type
  4185 ;;		None               void
  4186 ;; Registers used:
  4187 ;;		wreg
  4188 ;; Tracked objects:
  4189 ;;		On entry : 17F/40
  4190 ;;		On exit  : 17F/20
  4191 ;;		Unchanged: FFE80/0
  4192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4193 ;;      Params:         0       0       0       0       0
  4194 ;;      Locals:         0       0       0       0       0
  4195 ;;      Temps:          0       0       0       0       0
  4196 ;;      Totals:         0       0       0       0       0
  4197 ;;Total ram usage:        0 bytes
  4198 ;; Hardware stack levels used:    1
  4199 ;; Hardware stack levels required when called:    2
  4200 ;; This function calls:
  4201 ;;		Nothing
  4202 ;; This function is called by:
  4203 ;;		_main
  4204 ;; This function uses a non-reentrant model
  4205 ;;
  4206  0576                     _timer1_config:	
  4207                           
  4208                           ;common.c: 182: TMR1H=0xCF;
  4209                           
  4210                           ; Regs used in _timer1_config: [wreg]
  4211  0576  30CF               	movlw	207
  4212  0577  1303               	bcf	3,6	;RP1=0, select bank0
  4213  0578  008F               	movwf	15	;volatile
  4214                           
  4215                           ;common.c: 183: TMR1L=0x2C;
  4216  0579  302C               	movlw	44
  4217  057A  008E               	movwf	14	;volatile
  4218                           
  4219                           ;common.c: 184: T1CON=0xE1;
  4220  057B  30E1               	movlw	225
  4221  057C  0090               	movwf	16	;volatile
  4222                           
  4223                           ;common.c: 185: TMR1IE=1;
  4224  057D  1683               	bsf	3,5	;RP0=1, select bank1
  4225  057E  140C               	bsf	12,0
  4226  057F  0008               	return
  4227  0580                     __end_of_timer1_config:	
  4228                           
  4229                           	psect	text729
  4230  05A2                     __ptext729:	
  4231 ;; =============== function _timer1_config ends ============
  4232                           
  4233                           
  4234 ;; *************** function _clock_config *****************
  4235 ;; Defined at:
  4236 ;;		line 172 in file "D:\develop\ATK\AK7030-OTP\common.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;		None
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;		None
  4241 ;; Return value:  Size  Location     Type
  4242 ;;		None               void
  4243 ;; Registers used:
  4244 ;;		wreg, status,2
  4245 ;; Tracked objects:
  4246 ;;		On entry : 17F/20
  4247 ;;		On exit  : 17F/40
  4248 ;;		Unchanged: FFE80/0
  4249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4250 ;;      Params:         0       0       0       0       0
  4251 ;;      Locals:         0       0       0       0       0
  4252 ;;      Temps:          0       0       0       0       0
  4253 ;;      Totals:         0       0       0       0       0
  4254 ;;Total ram usage:        0 bytes
  4255 ;; Hardware stack levels used:    1
  4256 ;; Hardware stack levels required when called:    2
  4257 ;; This function calls:
  4258 ;;		Nothing
  4259 ;; This function is called by:
  4260 ;;		_main
  4261 ;; This function uses a non-reentrant model
  4262 ;;
  4263  05A2                     _clock_config:	
  4264                           
  4265                           ;common.c: 174: CLKPR = 0x80;
  4266                           
  4267                           ; Regs used in _clock_config: [wreg+status,2]
  4268  05A2  3080               	movlw	128
  4269  05A3  1283               	bcf	3,5	;RP0=0, select bank2
  4270  05A4  1703               	bsf	3,6	;RP1=1, select bank2
  4271  05A5  0088               	movwf	8	;volatile
  4272                           
  4273                           ;common.c: 175: CLKPR = 0x00;
  4274  05A6  0188               	clrf	8	;volatile
  4275  05A7                     l1629:	
  4276                           ;common.c: 176: while(CLKPCE);
  4277                           
  4278  05A7  1F88               	btfss	8,7
  4279  05A8  0008               	return
  4280  05A9  2DA7               	goto	l1629
  4281  05AA                     __end_of_clock_config:	
  4282                           
  4283                           	psect	text730
  4284  051E                     __ptext730:	
  4285 ;; =============== function _clock_config ends ============
  4286                           
  4287                           
  4288 ;; *************** function _initPin *****************
  4289 ;; Defined at:
  4290 ;;		line 105 in file "D:\develop\ATK\AK7030-OTP\main.c"
  4291 ;; Parameters:    Size  Location     Type
  4292 ;;		None
  4293 ;; Auto vars:     Size  Location     Type
  4294 ;;		None
  4295 ;; Return value:  Size  Location     Type
  4296 ;;		None               void
  4297 ;; Registers used:
  4298 ;;		None
  4299 ;; Tracked objects:
  4300 ;;		On entry : 160/20
  4301 ;;		On exit  : 160/60
  4302 ;;		Unchanged: FFE9F/0
  4303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4304 ;;      Params:         0       0       0       0       0
  4305 ;;      Locals:         0       0       0       0       0
  4306 ;;      Temps:          0       0       0       0       0
  4307 ;;      Totals:         0       0       0       0       0
  4308 ;;Total ram usage:        0 bytes
  4309 ;; Hardware stack levels used:    1
  4310 ;; Hardware stack levels required when called:    2
  4311 ;; This function calls:
  4312 ;;		Nothing
  4313 ;; This function is called by:
  4314 ;;		_main
  4315 ;; This function uses a non-reentrant model
  4316 ;;
  4317  051E                     _initPin:	
  4318                           
  4319                           ;main.c: 106: PB6 = 1;
  4320                           
  4321                           ; Regs used in _initPin: []
  4322  051E  1283               	bcf	3,5	;RP0=0, select bank0
  4323  051F  1706               	bsf	6,6
  4324                           
  4325                           ;main.c: 107: PBOD6 = 1;
  4326  0520  1683               	bsf	3,5	;RP0=1, select bank3
  4327  0521  1703               	bsf	3,6	;RP1=1, select bank3
  4328  0522  1708               	bsf	8,6
  4329                           
  4330                           ;main.c: 111: PA0 = 0;
  4331  0523  1283               	bcf	3,5	;RP0=0, select bank0
  4332  0524  1303               	bcf	3,6	;RP1=0, select bank0
  4333  0525  1005               	bcf	5,0
  4334                           
  4335                           ;main.c: 112: PA1 = 0;
  4336  0526  1085               	bcf	5,1
  4337                           
  4338                           ;main.c: 113: PA2 = 0;
  4339  0527  1105               	bcf	5,2
  4340                           
  4341                           ;main.c: 114: PA3 = 0;
  4342  0528  1185               	bcf	5,3
  4343                           
  4344                           ;main.c: 115: PB0 = 0;
  4345  0529  1006               	bcf	6,0
  4346                           
  4347                           ;main.c: 116: PB1 = 1;
  4348  052A  1486               	bsf	6,1
  4349                           
  4350                           ;main.c: 117: PA6 = 0;
  4351  052B  1305               	bcf	5,6
  4352                           
  4353                           ;main.c: 118: PA7 = 0;
  4354  052C  1385               	bcf	5,7
  4355                           
  4356                           ;main.c: 119: PAOD7 = 0;
  4357  052D  1683               	bsf	3,5	;RP0=1, select bank3
  4358  052E  1703               	bsf	3,6	;RP1=1, select bank3
  4359  052F  1387               	bcf	7,7
  4360  0530  0008               	return
  4361  0531                     __end_of_initPin:	
  4362                           
  4363                           	psect	text734
  4364  0318                     __ptext734:	
  4365 ;; =============== function _clearTwelveHoursTimer ends ============
  4366                           
  4367                           
  4368 ;; *************** function _ISR *****************
  4369 ;; Defined at:
  4370 ;;		line 439 in file "D:\develop\ATK\AK7030-OTP\common.c"
  4371 ;; Parameters:    Size  Location     Type
  4372 ;;		None
  4373 ;; Auto vars:     Size  Location     Type
  4374 ;;		None
  4375 ;; Return value:  Size  Location     Type
  4376 ;;		None               void
  4377 ;; Registers used:
  4378 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4379 ;; Tracked objects:
  4380 ;;		On entry : 0/0
  4381 ;;		On exit  : 60/0
  4382 ;;		Unchanged: FFE00/0
  4383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4384 ;;      Params:         0       0       0       0       0
  4385 ;;      Locals:         0       0       0       0       0
  4386 ;;      Temps:          4       0       0       0       0
  4387 ;;      Totals:         4       0       0       0       0
  4388 ;;Total ram usage:        4 bytes
  4389 ;; Hardware stack levels used:    1
  4390 ;; Hardware stack levels required when called:    1
  4391 ;; This function calls:
  4392 ;;		i1_setAD_ConvertFlag
  4393 ;;		_adc_get
  4394 ;;		_vPutSampleDataIntoTable
  4395 ;; This function is called by:
  4396 ;;		Interrupt level 1
  4397 ;; This function uses a non-reentrant model
  4398 ;;
  4399  0318                     _ISR:	
  4400                           
  4401                           ;common.c: 440: static unsigned char ucTimer1sCnt = 0;
  4402                           ;common.c: 442: if(TMR1IF == 1)
  4403  0318  1C0C               	btfss	12,0
  4404  0319  2B41               	goto	i1l4040
  4405  031A  3064               	movlw	100
  4406                           
  4407                           ;common.c: 443: {
  4408                           ;common.c: 444: TMR1IF = 0 ;
  4409  031B  100C               	bcf	12,0
  4410                           
  4411                           ;common.c: 445: timer.timer10msStopWatch++;
  4412  031C  0AD0               	incf	_timer,f
  4413                           
  4414                           ;common.c: 446: ucTimer1sCnt++;
  4415  031D  0ACD               	incf	ISR@ucTimer1sCnt,f
  4416                           
  4417                           ;common.c: 448: if(ucTimer1sCnt >= 100)
  4418  031E  024D               	subwf	ISR@ucTimer1sCnt,w
  4419  031F  1C03               	skipc
  4420  0320  2B41               	goto	i1l4040
  4421                           
  4422                           ;common.c: 449: {
  4423                           ;common.c: 450: ucTimer1sCnt = 0;
  4424  0321  01CD               	clrf	ISR@ucTimer1sCnt
  4425                           
  4426                           ;common.c: 451: if(uiBigTimer > 0)
  4427  0322  084A               	movf	_uiBigTimer+1,w
  4428  0323  0449               	iorwf	_uiBigTimer,w
  4429  0324  1903               	skipnz
  4430  0325  2B2C               	goto	i1l1725
  4431                           
  4432                           ;common.c: 452: uiBigTimer--;
  4433  0326  3001               	movlw	1
  4434  0327  02C9               	subwf	_uiBigTimer,f
  4435  0328  3000               	movlw	0
  4436  0329  1C03               	skipc
  4437  032A  03CA               	decf	_uiBigTimer+1,f
  4438  032B  02CA               	subwf	_uiBigTimer+1,f
  4439  032C                     i1l1725:	
  4440                           
  4441                           ;common.c: 454: if(uiSmallTimer)
  4442  032C  084C               	movf	_uiSmallTimer+1,w
  4443  032D  044B               	iorwf	_uiSmallTimer,w
  4444  032E  1903               	skipnz
  4445  032F  2B36               	goto	i1l1726
  4446                           
  4447                           ;common.c: 455: uiSmallTimer--;
  4448  0330  3001               	movlw	1
  4449  0331  02CB               	subwf	_uiSmallTimer,f
  4450  0332  3000               	movlw	0
  4451  0333  1C03               	skipc
  4452  0334  03CC               	decf	_uiSmallTimer+1,f
  4453  0335  02CC               	subwf	_uiSmallTimer+1,f
  4454  0336                     i1l1726:	
  4455                           
  4456                           ;common.c: 457: if(uiTwentySecondsTimer)
  4457  0336  1683               	bsf	3,5	;RP0=1, select bank1
  4458  0337  0821               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  4459  0338  0420               	iorwf	_uiTwentySecondsTimer^(0+128),w
  4460  0339  1903               	skipnz
  4461  033A  2B41               	goto	i1l4040
  4462                           
  4463                           ;common.c: 458: uiTwentySecondsTimer--;
  4464  033B  3001               	movlw	1
  4465  033C  02A0               	subwf	_uiTwentySecondsTimer^(0+128),f
  4466  033D  3000               	movlw	0
  4467  033E  1C03               	skipc
  4468  033F  03A1               	decf	(_uiTwentySecondsTimer+1)^(0+128),f
  4469  0340  02A1               	subwf	(_uiTwentySecondsTimer+1)^(0+128),f
  4470  0341                     i1l4040:	
  4471                           
  4472                           ;common.c: 459: }
  4473                           ;common.c: 460: }
  4474                           ;common.c: 462: if(ADIF)
  4475  0341  1283               	bcf	3,5	;RP0=0, select bank0
  4476  0342  1D0D               	btfss	13,2
  4477  0343  2B68               	goto	i1l1733
  4478  0344  3001               	movlw	1
  4479                           
  4480                           ;common.c: 463: {
  4481                           ;common.c: 464: ADIF=0;
  4482  0345  110D               	bcf	13,2
  4483                           
  4484                           ;common.c: 465: setAD_ConvertFlag(1);
  4485  0346  23DD  118A         	fcall	i1_setAD_ConvertFlag
  4486                           
  4487                           ;common.c: 467: if(sampleChannelSelect == 4)
  4488  0348  086E               	movf	_sampleChannelSelect,w
  4489  0349  3A04               	xorlw	4
  4490  034A  1D03               	skipz
  4491  034B  2B54               	goto	i1l4050
  4492                           
  4493                           ;common.c: 468: {
  4494                           ;common.c: 471: vPutSampleDataIntoTable(adc_get(),4);
  4495  034C  2375  118A         	fcall	_adc_get
  4496  034E  0871               	movf	?_adc_get+1,w
  4497  034F  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4498  0350  0870               	movf	?_adc_get,w
  4499  0351  00F4               	movwf	?_vPutSampleDataIntoTable
  4500  0352  3004               	movlw	4
  4501  0353  2B66               	goto	L11
  4502  0354                     i1l4050:	
  4503                           ;common.c: 475: }
  4504                           
  4505                           
  4506                           ;common.c: 476: else if(sampleChannelSelect == 1)
  4507  0354  0B6E               	decfsz	_sampleChannelSelect,w
  4508  0355  2B5F               	goto	i1l4054
  4509                           
  4510                           ;common.c: 477: {
  4511                           ;common.c: 479: vPutSampleDataIntoTable(adc_get(),1);
  4512  0356  2375  118A         	fcall	_adc_get
  4513  0358  0871               	movf	?_adc_get+1,w
  4514  0359  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4515  035A  0870               	movf	?_adc_get,w
  4516  035B  00F4               	movwf	?_vPutSampleDataIntoTable
  4517  035C  01F6               	clrf	?_vPutSampleDataIntoTable+2
  4518  035D  0AF6               	incf	?_vPutSampleDataIntoTable+2,f
  4519  035E  2B67               	goto	L12
  4520  035F                     i1l4054:	
  4521                           ;common.c: 484: }
  4522                           
  4523                           
  4524                           ;common.c: 485: else
  4525                           ;common.c: 486: {
  4526                           ;common.c: 490: vPutSampleDataIntoTable(adc_get(),14);
  4527  035F  2375  118A         	fcall	_adc_get
  4528  0361  0871               	movf	?_adc_get+1,w
  4529  0362  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4530  0363  0870               	movf	?_adc_get,w
  4531  0364  00F4               	movwf	?_vPutSampleDataIntoTable
  4532  0365  300E               	movlw	14
  4533  0366                     L11:	
  4534  0366  00F6               	movwf	?_vPutSampleDataIntoTable+2
  4535  0367                     L12:	
  4536  0367  2380               	fcall	_vPutSampleDataIntoTable
  4537  0368                     i1l1733:	
  4538  0368  087C               	movf	??_ISR+3,w
  4539  0369  1283               	bcf	3,5	;RP0=0, select bank0
  4540  036A  1303               	bcf	3,6	;RP1=0, select bank0
  4541  036B  00FF               	movwf	127
  4542  036C  087B               	movf	??_ISR+2,w
  4543  036D  008A               	movwf	10
  4544  036E  087A               	movf	??_ISR+1,w
  4545  036F  0084               	movwf	4
  4546  0370  0E79               	swapf	??_ISR^(0+-128),w
  4547  0371  0083               	movwf	3
  4548  0372  0EFE               	swapf	126,f
  4549  0373  0E7E               	swapf	126,w
  4550  0374  0009               	retfie
  4551  0375                     __end_of_ISR:	
  4552  0375                     __ptext736:	
  4553 ;; =============== function i1_setAD_ConvertFlag ends ============
  4554                           
  4555                           
  4556 ;; *************** function _adc_get *****************
  4557 ;; Defined at:
  4558 ;;		line 105 in file "D:\develop\ATK\AK7030-OTP\periph.c"
  4559 ;; Parameters:    Size  Location     Type
  4560 ;;		None
  4561 ;; Auto vars:     Size  Location     Type
  4562 ;;  val             2    2[COMMON] unsigned int 
  4563 ;; Return value:  Size  Location     Type
  4564 ;;                  2    0[COMMON] unsigned int 
  4565 ;; Registers used:
  4566 ;;		wreg
  4567 ;; Tracked objects:
  4568 ;;		On entry : 60/0
  4569 ;;		On exit  : 60/20
  4570 ;;		Unchanged: FFF9F/0
  4571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4572 ;;      Params:         2       0       0       0       0
  4573 ;;      Locals:         2       0       0       0       0
  4574 ;;      Temps:          0       0       0       0       0
  4575 ;;      Totals:         4       0       0       0       0
  4576 ;;Total ram usage:        4 bytes
  4577 ;; Hardware stack levels used:    1
  4578 ;; This function calls:
  4579 ;;		Nothing
  4580 ;; This function is called by:
  4581 ;;		_ISR
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584  0375                     _adc_get:	
  4585                           
  4586                           ;periph.c: 106: unsigned int val;
  4587                           ;periph.c: 107: val = (ADRESH<<8) | ADRESL;
  4588                           
  4589                           ; Regs used in _adc_get: [wreg]
  4590  0375  081E               	movf	30,w	;volatile
  4591  0376  00F3               	movwf	adc_get@val+1
  4592  0377  01F2               	clrf	adc_get@val
  4593  0378  1683               	bsf	3,5	;RP0=1, select bank1
  4594  0379  081E               	movf	30,w	;volatile
  4595  037A  04F2               	iorwf	adc_get@val,f
  4596                           
  4597                           ;periph.c: 108: return val;
  4598  037B  0873               	movf	adc_get@val+1,w
  4599  037C  00F1               	movwf	?_adc_get+1
  4600  037D  0872               	movf	adc_get@val,w
  4601  037E  00F0               	movwf	?_adc_get
  4602  037F  0008               	return
  4603  0380                     __end_of_adc_get:	
  4604  0380                     __ptext737:	
  4605 ;; =============== function _adc_get ends ============
  4606                           
  4607                           
  4608 ;; *************** function _vPutSampleDataIntoTable *****************
  4609 ;; Defined at:
  4610 ;;		line 97 in file "D:\develop\ATK\AK7030-OTP\common.c"
  4611 ;; Parameters:    Size  Location     Type
  4612 ;;  uiSampleData    2    4[COMMON] unsigned int 
  4613 ;;  channel         1    6[COMMON] unsigned char 
  4614 ;; Auto vars:     Size  Location     Type
  4615 ;;  i               2    7[COMMON] int 
  4616 ;; Return value:  Size  Location     Type
  4617 ;;		None               void
  4618 ;; Registers used:
  4619 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4620 ;; Tracked objects:
  4621 ;;		On entry : 60/20
  4622 ;;		On exit  : 0/0
  4623 ;;		Unchanged: FFE00/0
  4624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4625 ;;      Params:         3       0       0       0       0
  4626 ;;      Locals:         2       0       0       0       0
  4627 ;;      Temps:          0       0       0       0       0
  4628 ;;      Totals:         5       0       0       0       0
  4629 ;;Total ram usage:        5 bytes
  4630 ;; Hardware stack levels used:    1
  4631 ;; This function calls:
  4632 ;;		Nothing
  4633 ;; This function is called by:
  4634 ;;		_ISR
  4635 ;; This function uses a non-reentrant model
  4636 ;;
  4637  0380                     _vPutSampleDataIntoTable:	
  4638                           
  4639                           ;common.c: 99: static unsigned char ucChannelFirstLength = 0;
  4640                           ;common.c: 101: static unsigned char ucChannelFourthLength = 0;
  4641                           ;common.c: 103: static unsigned char ucChannelFourteenthLength = 0;
  4642                           ;common.c: 105: if(channel == 1)
  4643                           
  4644                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1]
  4645  0380  0B76               	decfsz	vPutSampleDataIntoTable@channel,w
  4646  0381  2B92               	goto	i1l3958
  4647                           
  4648                           ;common.c: 106: {
  4649                           ;common.c: 107: if(ucChannelFirstLength < 12)
  4650  0382  300C               	movlw	12
  4651  0383  027D               	subwf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4652  0384  1803               	skipnc
  4653  0385  2B8C               	goto	i1l3954
  4654                           
  4655                           ;common.c: 108: {
  4656                           ;common.c: 109: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  4657  0386  1003               	clrc
  4658  0387  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4659  0388  3EA2               	addlw	_uiSampleChannelFirst& (0+255)
  4660  0389  23E0               	fcall	PL2	;call to abstracted procedure
  4661                           
  4662                           ;common.c: 111: ucChannelFirstLength++;
  4663  038A  0AFD               	incf	vPutSampleDataIntoTable@ucChannelFirstLength,f
  4664                           
  4665                           ;common.c: 112: }
  4666  038B  0008               	return
  4667  038C                     i1l3954:	
  4668                           
  4669                           ;common.c: 113: else
  4670                           ;common.c: 114: {
  4671                           ;common.c: 115: ucChannelFirstLength = 0;
  4672  038C  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  4673                           
  4674                           ;common.c: 117: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  4675  038D  1003               	clrc
  4676  038E  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4677  038F  3EA2               	addlw	_uiSampleChannelFirst& (0+255)
  4678  0390  23E0               	fcall	PL2	;call to abstracted procedure
  4679  0391  0008               	return
  4680  0392                     i1l3958:	
  4681                           
  4682                           ;common.c: 120: else if(channel == 4)
  4683  0392  0876               	movf	vPutSampleDataIntoTable@channel,w
  4684  0393  3A04               	xorlw	4
  4685  0394  1D03               	skipz
  4686  0395  2BA7               	goto	i1l3970
  4687                           
  4688                           ;common.c: 121: {
  4689                           ;common.c: 122: if(ucChannelFourthLength < 12)
  4690  0396  300C               	movlw	12
  4691  0397  1283               	bcf	3,5	;RP0=0, select bank0
  4692  0398  026D               	subwf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4693  0399  1803               	skipnc
  4694  039A  2BA1               	goto	i1l3966
  4695                           
  4696                           ;common.c: 123: {
  4697                           ;common.c: 124: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  4698  039B  1003               	clrc
  4699  039C  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4700  039D  3ED2               	addlw	_uiSampleChannelFourth& (0+255)
  4701  039E  23E0               	fcall	PL2	;call to abstracted procedure
  4702                           
  4703                           ;common.c: 126: ucChannelFourthLength++;
  4704  039F  0AED               	incf	vPutSampleDataIntoTable@ucChannelFourthLength,f
  4705                           
  4706                           ;common.c: 127: }
  4707  03A0  0008               	return
  4708  03A1                     i1l3966:	
  4709                           
  4710                           ;common.c: 128: else
  4711                           ;common.c: 129: {
  4712                           ;common.c: 130: ucChannelFourthLength = 0;
  4713  03A1  01ED               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  4714                           
  4715                           ;common.c: 132: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  4716  03A2  1003               	clrc
  4717  03A3  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4718  03A4  3ED2               	addlw	_uiSampleChannelFourth& (0+255)
  4719  03A5  23E0               	fcall	PL2	;call to abstracted procedure
  4720  03A6  0008               	return
  4721  03A7                     i1l3970:	
  4722                           
  4723                           ;common.c: 135: else if(channel == 14)
  4724  03A7  0876               	movf	vPutSampleDataIntoTable@channel,w
  4725  03A8  3A0E               	xorlw	14
  4726  03A9  1D03               	skipz
  4727  03AA  2BBC               	goto	i1l3982
  4728                           
  4729                           ;common.c: 136: {
  4730                           ;common.c: 137: if(ucChannelFourteenthLength < 12)
  4731  03AB  300C               	movlw	12
  4732  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  4733  03AD  026C               	subwf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4734  03AE  1803               	skipnc
  4735  03AF  2BB6               	goto	i1l3978
  4736                           
  4737                           ;common.c: 138: {
  4738                           ;common.c: 139: uiSampleChannelFourteenth[ucChannelFourteenthLength] = uiSampleData;
  4739  03B0  1003               	clrc
  4740  03B1  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4741  03B2  3EBA               	addlw	_uiSampleChannelFourteenth& (0+255)
  4742  03B3  23E0               	fcall	PL2	;call to abstracted procedure
  4743                           
  4744                           ;common.c: 141: ucChannelFourteenthLength++;
  4745  03B4  0AEC               	incf	vPutSampleDataIntoTable@ucChannelFourteenthLength,f
  4746                           
  4747                           ;common.c: 142: }
  4748  03B5  0008               	return
  4749  03B6                     i1l3978:	
  4750                           
  4751                           ;common.c: 143: else
  4752                           ;common.c: 144: {
  4753                           ;common.c: 145: ucChannelFourteenthLength = 0;
  4754  03B6  01EC               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4755                           
  4756                           ;common.c: 147: uiSampleChannelFourth[ucChannelFourteenthLength] = uiSampleData;
  4757  03B7  1003               	clrc
  4758  03B8  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4759  03B9  3ED2               	addlw	_uiSampleChannelFourth& (0+255)
  4760  03BA  23E0               	fcall	PL2	;call to abstracted procedure
  4761  03BB  0008               	return
  4762  03BC                     i1l3982:	
  4763                           
  4764                           ;common.c: 150: else
  4765                           ;common.c: 151: {
  4766                           ;common.c: 152: ucChannelFirstLength = 0;
  4767  03BC  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  4768                           
  4769                           ;common.c: 154: ucChannelFourthLength = 0;
  4770  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  4771  03BE  01ED               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  4772                           
  4773                           ;common.c: 156: ucChannelFourteenthLength = 0;
  4774  03BF  01EC               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4775                           
  4776                           ;common.c: 158: for(int i = 0;i < 12; i++)
  4777  03C0  01F7               	clrf	vPutSampleDataIntoTable@i
  4778  03C1  01F8               	clrf	vPutSampleDataIntoTable@i+1
  4779  03C2                     i1l3988:	
  4780                           
  4781                           ;common.c: 159: {
  4782                           ;common.c: 160: uiSampleChannelFirst[i] = 0;
  4783  03C2  1003               	clrc
  4784  03C3  0D77               	rlf	vPutSampleDataIntoTable@i,w
  4785  03C4  3EA2               	addlw	_uiSampleChannelFirst& (0+255)
  4786  03C5  0084               	movwf	4
  4787  03C6  1383               	bcf	3,7	;select IRP bank1
  4788  03C7  0180               	clrf	0
  4789                           
  4790                           ;common.c: 162: uiSampleChannelFourth[i] = 0;
  4791  03C8  23E8  118A         	fcall	PL5	;call to abstracted procedure
  4792                           
  4793                           ;common.c: 164: uiSampleChannelFourth[i] = 0;
  4794  03CA  23E8  118A         	fcall	PL5	;call to abstracted procedure
  4795  03CC  0A84               	incf	4,f
  4796  03CD  0180               	clrf	0
  4797  03CE  0AF7               	incf	vPutSampleDataIntoTable@i,f
  4798  03CF  1903               	skipnz
  4799  03D0  0AF8               	incf	vPutSampleDataIntoTable@i+1,f
  4800  03D1  0878               	movf	vPutSampleDataIntoTable@i+1,w
  4801  03D2  3A80               	xorlw	128
  4802  03D3  00FF               	movwf	127
  4803  03D4  3080               	movlw	128
  4804  03D5  027F               	subwf	127,w
  4805  03D6  1D03               	skipz
  4806  03D7  2BDA               	goto	u106_25
  4807  03D8  300C               	movlw	12
  4808  03D9  0277               	subwf	vPutSampleDataIntoTable@i,w
  4809  03DA                     u106_25:	
  4810  03DA  1803               	btfsc	3,0
  4811  03DB  0008               	return
  4812  03DC  2BC2               	goto	i1l3988
  4813  03DD                     __end_of_vPutSampleDataIntoTable:	
  4814  03DD                     __ptext735:	
  4815 ;; =============== function _ISR ends ============
  4816                           
  4817                           
  4818 ;; *************** function i1_setAD_ConvertFlag *****************
  4819 ;; Defined at:
  4820 ;;		line 206 in file "D:\develop\ATK\AK7030-OTP\common.c"
  4821 ;; Parameters:    Size  Location     Type
  4822 ;;  setAD_Conver    1    wreg     unsigned char 
  4823 ;; Auto vars:     Size  Location     Type
  4824 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  4825 ;; Return value:  Size  Location     Type
  4826 ;;		None               void
  4827 ;; Registers used:
  4828 ;;		wreg
  4829 ;; Tracked objects:
  4830 ;;		On entry : 60/0
  4831 ;;		On exit  : 60/0
  4832 ;;		Unchanged: FFF9F/0
  4833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4834 ;;      Params:         0       0       0       0       0
  4835 ;;      Locals:         1       0       0       0       0
  4836 ;;      Temps:          0       0       0       0       0
  4837 ;;      Totals:         1       0       0       0       0
  4838 ;;Total ram usage:        1 bytes
  4839 ;; Hardware stack levels used:    1
  4840 ;; This function calls:
  4841 ;;		Nothing
  4842 ;; This function is called by:
  4843 ;;		_ISR
  4844 ;; This function uses a non-reentrant model
  4845 ;;
  4846  03DD                     i1_setAD_ConvertFlag:	
  4847                           
  4848                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  4849                           ;i1setAD_ConvertFlag@flag stored from wreg
  4850  03DD  00F0               	movwf	i1setAD_ConvertFlag@flag
  4851                           
  4852                           ;common.c: 207: adc_convert_flag = flag;
  4853  03DE  00CE               	movwf	_adc_convert_flag
  4854  03DF  0008               	return
  4855  03E0                     __end_ofi1_setAD_ConvertFlag:	
  4856  03E0                     PL2:	
  4857  03E0  0084               	movwf	4
  4858  03E1  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  4859  03E2  1383               	bcf	3,7	;select IRP bank1
  4860  03E3  0080               	movwf	0
  4861  03E4  0A84               	incf	4,f
  4862  03E5  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  4863  03E6  0080               	movwf	0
  4864  03E7  0008               	return
  4865  03E8                     PL5:	
  4866  03E8  0A84               	incf	4,f
  4867  03E9  0180               	clrf	0
  4868  03EA  1003               	clrc
  4869  03EB  0D77               	rlf	vPutSampleDataIntoTable@i,w
  4870  03EC  3ED2               	addlw	_uiSampleChannelFourth& (0+255)
  4871  03ED  0084               	movwf	4
  4872  03EE  0180               	clrf	0
  4873  03EF  0008               	return
  4874                           
  4875                           	psect	intentry
  4876  0004                     __pintentry:	
  4877                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4878                           
  4879  0004                     interrupt_function:	
  4880  007E                     saved_w	set	btemp
  4881  0004  00FE               	movwf	btemp
  4882  0005  0E03               	swapf	3,w
  4883  0006  00F9               	movwf	??_ISR
  4884  0007  0804               	movf	4,w
  4885  0008  00FA               	movwf	??_ISR+1
  4886  0009  080A               	movf	10,w
  4887  000A  00FB               	movwf	??_ISR+2
  4888  000B  1283               	bcf	3,5	;RP0=0, select bank0
  4889  000C  1303               	bcf	3,6	;RP1=0, select bank0
  4890  000D  087F               	movf	btemp+1,w
  4891  000E  00FC               	movwf	??_ISR+3
  4892  000F  118A  2B18         	ljmp	_ISR
  4893                           
  4894                           	psect	text738
  4895  0000                     __ptext738:	
  4896 ;; =============== function _vPutSampleDataIntoTable ends ============
  4897                           
  4898  007E                     btemp	set	126	;btemp
  4899  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon Jun 24 16:56:36 2019

                                  ??_clock_config 0020                                                 pc 0002  
                                              _GO 00F9                                                fsr 0004  
                        ?_timer1_interrupt_config 0070                                               l706 0062  
                                             l715 0079                                               l814 016D  
                                             l680 0000                                               l744 00F5  
                                             l683 0000                                               l916 02AD  
                                             l677 0000                                               l838 01A1  
                                             l759 00F7                                               l859 01D4  
                                             l787 0133                                               l896 0267  
                                             l889 0249                                               _PA0 0028  
                                             _PA1 0029                                               _GIE 005F  
                                             _PB0 0030                                               _PA2 002A  
                                             _PB1 0031                                               _PA3 002B  
                                             _PA6 002E                                               _PA7 002F  
                                             _PB6 0036                                               _ISR 0318  
                                             u955 0424                                               u965 044D  
                                             u975 0437                                               fsr0 0004  
                                             indf 0000                            ??_startThreeHoursTimer 0022  
                                            S4830 055F                                              S4826 0543  
                                            S4828 0551                                              ?_ISR 0070  
                              __size_of_AD_Sample 001D                            ?_getAdOriginalCh1Value 0047  
                                            l4000 0000                                              l1603 0000  
                                            l4012 04DF                                              l4004 0000  
                                            l4100 0000                                              l4014 04E3  
                                            l4110 0000                                              l4102 0000  
                                            l1632 0000                                              l4016 04E6  
                                            l4008 0000                                              l4120 0000  
                                            l4112 0000                                              l4104 0000  
                                            l1641 0000                                              l2370 0000  
                                            l4018 0000                                              l1650 0000  
                                            l4210 00F3                                              l4202 00DB  
                                            l4130 005A                                              l4122 0000  
                                            l4114 0000                                              l4106 0000  
                                            l1635 0000                                              l2364 0000  
                                            l1644 0000                                              l4212 00F8  
                                            l4132 005B                                              l4116 0000  
                                            l4108 0000                                              l1629 05A7  
                                            l1653 0000                                              l1638 0000  
                                            l1718 0000                                              l4062 050F  
                                            l4222 0101                                              l4214 00FA  
                                            l4206 00E7                                              l4150 0000  
                                            l4142 0068                                              l4134 0000  
                                            l4126 004E                                              l4118 0040  
                                            l2367 0000                                              l1647 0000  
                                            l2384 0000                                              l4072 04BB  
                                            l4064 0000                                              l4080 0000  
                                            l4400 01AB                                              l4224 0103  
                                            l4144 0000                                              l4136 005F  
                                            l1682 0000                                              l2378 0000  
                                            l4074 0000                                              l4234 0109  
                                            l4218 00FF                                              l4170 0096  
                                            l4162 008F                                              l4154 0080  
                                            l4146 0073                                              l4138 0063  
                                            l4076 04C1                                              l4068 0000  
                                            l4084 0000                                              l4092 0000  
                                            l4500 0000                                              l4404 01AD  
                                            l4340 016F                                              l4308 014B  
                                            l4244 010F                                              l4180 0000  
                                            l4164 0090                                              l4156 0000  
                                            l4148 0075                                              l1685 0000  
                                            l4094 0000                                              l4510 0258  
                                            l4406 01AF                                              l4350 0178  
                                            l4342 0171                                              l4318 0151  
                                            l4254 0115                                              l4190 00BB  
                                            l4182 00A9                                              l4174 00A2  
                                            l4166 0000                                              l4158 0083  
                                            l1695 0000                                              l1688 0000  
                                            l3800 0000                                              l4088 0000  
                                            l4600 0000                                              l4520 0000  
                                            l4440 01DA                                              l4416 01B5  
                                            l4352 017A                                              l4328 015A  
                                            l4264 011F                                              l4192 00BE  
                                            l4504 0238                                              l4184 0000  
                                            l4176 00A3                                              l4168 0000  
                                            l4096 0000                                              l3802 0000  
                                            l3810 0000                                              l4522 0000  
                                            l4514 0000                                              l4506 0000  
                                            l4450 01E3                                              l4426 01BC  
                                            l4362 0180                                              l4346 0176  
                                            l4338 0161                                              l4282 013B  
                                            l4274 0127                                              l4194 00C2  
                                            l4186 00B2                                              l4178 0000  
                                            l4098 0000                                              l3804 0000  
                                            l3812 0000                                              l3820 0000  
                                            l4604 02F1                                              l4540 027D  
                                            l4516 0000                                              l4524 0263  
                                            l4508 0000                                              l4460 01E9  
                                            l4444 01DF                                              l4436 01C3  
                                            l4372 0186                                              l4276 0134  
                                            l4268 0125                                              l4188 00B8  
                                            l3814 0000                                              l3806 0000  
                                            l3822 0000                                              l3830 0000  
                                            l3902 040D                                              l4550 0000  
                                            l4542 0000                                              l4534 0270  
                                            l4526 0000                                              l4518 0000  
                                            l4470 01F0                                              l4438 01D8  
                                            l4382 018E                                              l4286 013D  
                                            l4278 0136                                              l4198 00CE  
                                            l3808 0000                                              l3816 0000  
                                            l3824 0000                                              l3832 0000  
                                            l3904 0000                                              l4560 0299  
                                            l4544 0000                                              l4528 0000  
                                            l4480 0000                                              l4448 01E1  
                                            l4392 0195                                              l4288 013F  
                                            l4608 02FC                                              l3818 0000  
                                            l3826 0000                                              l3834 0500  
                                            l3850 0000                                              l3922 046A  
                                            l3906 0000                                              l4570 02A2  
                                            l4562 0000                                              l4546 0000  
                                            l4554 028C                                              l4538 027C  
                                            l4490 0229                                              l4474 01FE  
                                            l4394 01A4                                              l4298 0145  
                                            l3828 0000                                              l3836 0000  
                                            l3924 042A                                              l3916 0429  
                                            l3908 0000                                              l4572 02BD  
                                            l4564 029E                                              l4548 0000  
                                            l4484 0221                                              l4476 020F  
                                            l4396 01A6                                              l3790 0000  
                                            l3854 0000                                              l3942 0000  
                                            l3926 046C                                              l4590 02DF  
                                            l4582 0000                                              l4558 0298  
                                            l4494 0000                                              l4486 0000  
                                            l3792 051A                                              l3848 0000  
                                            l3880 0000                                              l3936 0000  
                                            l3928 0000                                              l4584 02D2  
                                            l4576 02C9                                              l4496 0000  
                                            l4488 0000                                              l3794 0000  
                                            l3866 0000                                              l3938 0000  
                                            l4594 0000                                              l4578 02CA  
                                            l4498 0233                                              l3788 0000  
                                            l3796 0000                                              l3868 0000  
                                            l3884 0000                                              l4596 0000  
                                            l4588 02DE                                              l3798 0000  
                                            l4598 0000                                              _ADIE 046A  
                                            l3896 0000                                              _ADIF 006A  
                                            l3994 0000                                              l3998 0000  
                                            _ADON 00F8                     startTwelveHourTimer@uiSetTime 0020  
                                            _PEIE 005E                                              _main 0013  
                                            btemp 007E                           _clearTwentySecondsTimer 051A  
                                            start 0011                           ?_getAdOriginalCh14Value 0047  
                               main@ucTimerDelay1 0060                                 main@ucTimerDelay2 0061  
                               main@ucTimerDelay3 0062                                 main@ucTimerDelay4 0063  
                                           ??_ISR 0079                        __end_of_isPermitSampleTime 05C4  
                             _sampleChannelSelect 006E                            ??_getAdOriginaCh4Value 0049  
                                           ?_main 0070                                             _DACR0 0088  
                                           _CLKPR 0108                                             _T1CON 0010  
                                 __end_of_adc_get 0380                                             _PAOD7 0C3F  
                                           _PBOD6 0C46                                             _TMR1H 000F  
                                           _TMR1L 000E                             setAD_ConvertFlag@flag 0020  
                         _vPutSampleDataIntoTable 0380                                   __end_of_initPin 0531  
                                           _timer 0050                                             pclath 000A  
                                           status 0003                                             wtemp0 007E  
                  __end_of_getAdOriginalCh14Value 0405                     __size_of_startTwelveHourTimer 0009  
                            __end_of_clrSampeTime 05CE                             __end_of_clearAllTimer 0514  
                                    __end_of_main 0318                            __size_of_adc_test_init 0015  
                               __end_of_AD_Sample 04EB                                            ??_main 0049  
                            _clearPinPortAndTimer 0503                                            _ADCON0 001F  
                                          _ADCON1 009F                              __end_of_clock_config 05AA  
                                          _DACCON 0087                                            _ADRESH 001E  
                                          _ADRESL 009E                                            _CLKPCE 0847  
                                          i1l4022 0000                                            i1l4032 0000  
                                          i1l4040 0341                                            i1l4050 0354  
                                          i1l4026 0000                                            i1l1644 0000  
                                          i1l4060 0000                                            i1l4052 0000  
                                          i1l4044 0000                                            i1l4028 0000  
                                          i1l1733 0368                                            i1l1725 032C  
                                          i1l4054 035F                                            i1l4046 0000  
                                          i1l1726 0336                                            i1l4056 0000  
                                          i1l2387 0000                                            u106_25 03DA  
                                          i1l3952 0000                                            i1l3970 03A7  
                                          i1l3954 038C                                            i1l3946 0000  
                                          i1l3980 0000                                            i1l3964 0000  
                                          i1l3956 0000                                            i1l3948 0000  
                                          i1l3990 0000                                            i1l3982 03BC  
                                          i1l3966 03A1                                            i1l3958 0392  
                                          i1l3992 0000                                            i1l3976 0000  
                                          i1l3968 0000                                            i1l3978 03B6  
                                          i1l3988 03C2                                  __end_of_dac_init 05C9  
                       ??_clearTwentySecondsTimer 0020                                            _TMR1IE 0460  
                                          _TMR1IF 0060                                 _getAD_ConvertFlag 04C7  
                               _setAD_ConvertFlag 04CB                                            _TRISA0 0428  
                                          _TRISA1 0429                                            _TRISB0 0430  
                                          _TRISA2 042A                                            _TRISB1 0431  
                                          _TRISA3 042B                                            _TRISB2 0432  
                                          _TRISB3 0433                                            _TRISB4 0434  
                                          _TRISA6 042E                                            _TRISB5 0435  
                                          _TRISA7 042F                                            _TRISB6 0436  
                                          _TRISB7 0437                                     main@ucTimer1s 005C  
                              ?_getAD_ConvertFlag 0070                                            _Filter 0405  
                              ?_setAD_ConvertFlag 0070                                  __end_of_op1_init 0576  
                                __end_of_op2_init 05A2                       ??_isFinishedThreeHoursTimer 0020  
                   __size_of_clearThreeHoursTimer 0003                                         ??_adc_get 0072  
                             ??_getAD_ConvertFlag 0020                               ??_setAD_ConvertFlag 0020  
                                          clrloop 0593                                  Filter@filter_buf 0026  
                                Filter@filter_sum 0040                                         ??_initPin 0020  
                       ??_vPutSampleDataIntoTable 0077                             ?_clearPinPortAndTimer 0070  
                                          saved_w 007E                           ??_clearTwelveHoursTimer 0020  
                     ?_process_AD_Converter_Value 0070                                     _adc_test_init 04EB  
                __size_of_startTwentySecondsTimer 0005                         __end_of_getAD_ConvertFlag 04CB  
                       __end_of_setAD_ConvertFlag 04CE                                __size_of_adc_start 0003  
                             main@ucTimerDelayP5s 0064                                    __pcstackCOMMON 0070  
                                    __pidataBANK0 0000                   __end_of_clearTwentySecondsTimer 051E  
                            _uiSampleChannelFirst 00A2                    vPutSampleDataIntoTable@channel 0076  
                             main@ucTimerRightP5s 0067                         _isFinishedThreeHoursTimer 05B0  
                         ??_getAdOriginalCh1Value 0049                             __end_of_timer1_config 0580  
                                  ?_adc_test_init 0020       vPutSampleDataIntoTable@ucChannelFirstLength 007D  
                __size_of_timer1_interrupt_config 0003                             __size_of_clrSampeTime 0002  
                                      __pbssBANK0 0049                                        __pbssBANK1 00A0  
                    __size_ofi1_setAD_ConvertFlag 0003                                        adc_get@val 0072  
                 __end_of_vPutSampleDataIntoTable 03DD                                           ?_Filter 0020  
                                      __pmaintext 0013                                        __pintentry 0004  
                             main@enumInteralStep 0053                                         ?_dac_init 0070  
                          ??_clearPinPortAndTimer 0020                             __size_of_clock_config 0008  
                                         _OP1CON0 001B                                           _OP1CON1 001C  
                                         _OP1CON2 001D                                           _OP2CON0 009B  
                                         _OP2CON1 009C                                           _OP2CON2 009D  
                                    _clrSampeTime 05CC                                 __end_of_adc_start 0503  
                            _uiTwentySecondsTimer 00A0                                         ?_op1_init 0070  
                                       ?_op2_init 0070                                _isPermitSampleTime 05BF  
                                         Filter@i 0046                                           Filter@j 0045  
                   __size_of_startThreeHoursTimer 0009                        __size_of_getAD_ConvertFlag 0004  
                      __size_of_setAD_ConvertFlag 0003                                    main@ucTimer20s 005D  
                                  main@ucTimerP3s 0065                                    main@ucTimerP5s 0066  
                             ?_isPermitSampleTime 0070                                   __size_of_Filter 008E  
                                      _uiBigTimer 0049                                      _clock_config 05A2  
                                         _adc_get 0375              __end_of_isFinishedTwentySecondsTimer 05B0  
           __size_of_isFinishedTwentySecondsTimer 0006                      _isFinishedTwentySecondsTimer 05AA  
                            ??_isPermitSampleTime 0020                      __end_of_startTwelveHourTimer 0592  
                                      ??_dac_init 0020                                         _AD_Sample 04CE  
                                    __size_of_ISR 005D                                           _initPin 051E  
                   __size_of_getAdOriginaCh4Value 0007                                   ??_adc_test_init 0021  
                                      ??_op1_init 0020                                        ??_op2_init 0020  
                         _startTwentySecondsTimer 05B5                              end_of_initialization 0540  
                               Filter@filter_temp 003E                                  main@ucLoaderStep 0057  
                                      ?_AD_Sample 0070                     ?_isFinishedTwentySecondsTimer 0070  
                            main@enumMainLoopStep 0054                                main@ucChannel4Type 0056  
                    ??_isFinishedTwelveHoursTimer 0020                                         Filter@cir 0043  
                                _adc_convert_flag 004E                            __size_of_clearAllTimer 0005  
                    __end_of_clearThreeHoursTimer 051A                            main@ucTimerADC1ZeroP5s 005E  
                  __size_of_clearTwelveHoursTimer 0003                           _timer1_interrupt_config 05C9  
                   __end_of_clearTwelveHoursTimer 0517                __size_of_isFinishedThreeHoursTimer 0005  
                                main@ucTimerX1P5s 0068                                  main@ucTimerX2P5s 0069  
                          main@ucTimerZeroPoint3s 006A                            main@ucTimerZeroPoint5s 006B  
                                main@ucTimerDelay 005F                                    __end_of_Filter 0493  
                                 main@ucADC4_Step 0055               __size_of_isFinishedTwelveHoursTimer 0005  
                        vPutSampleDataIntoTable@i 0077                               i1_setAD_ConvertFlag 03DD  
                       ??_startTwentySecondsTimer 0020                               start_initialization 0531  
                                     __end_of_ISR 0375                             _uiSampleChannelFourth 00D2  
                        ?_clearTwentySecondsTimer 0070                    __size_of_getAdOriginalCh1Value 0007  
                   __end_of_getAdOriginalCh1Value 03FE                          ??_getAdOriginalCh14Value 0049  
                            ?i1_setAD_ConvertFlag 0070                              _startTwelveHourTimer 0589  
               __end_of_isFinishedThreeHoursTimer 05B5                                main@enumBranchStep 0052  
                                        ??_Filter 0022                                     _clearAllTimer 050F  
                                     __pdataBANK0 006E                          ?_vPutSampleDataIntoTable 0074  
                                     ??_AD_Sample 0020                         ??_timer1_interrupt_config 0020  
                                     __pbssCOMMON 007D                                 __size_of_dac_init 0005  
                                   __pcstackBANK0 0020                    ??_isFinishedTwentySecondsTimer 0020  
                                       _adc_start 0500                                 __size_of_op1_init 000B  
                               __size_of_op2_init 0008                             ??i1_setAD_ConvertFlag 0070  
                           ?_startTwelveHourTimer 0020                   __end_of_startTwentySecondsTimer 05BA  
                                  ?_clearAllTimer 0070                            __size_of_timer1_config 000A  
                            _clearThreeHoursTimer 0517                      __end_of_startThreeHoursTimer 0589  
                                       __ptext710 04CE                                         __ptext711 04CB  
                                       __ptext720 05CC                                         __ptext712 04C7  
                                       __ptext704 0503                                         __ptext721 05BF  
                                       __ptext713 0405                                         __ptext705 03F0  
                                       __ptext730 051E                                         __ptext722 0500  
                                       __ptext714 05B0                                         __ptext706 03F7  
                                       __ptext731 051A                                         __ptext723 059A  
                                       __ptext715 0580                                         __ptext707 03FE  
                                       __ptext732 0517                                         __ptext724 056B  
                                       __ptext716 05AA                                         __ptext708 04A9  
                                       __ptext733 0514                                         __ptext725 05C4  
                                       __ptext717 05B5                                         __ptext709 050F  
                                       __ptext734 0318                                         __ptext726 04EB  
                                       __ptext718 05BA                                         __ptext735 03DD  
                                       __ptext727 05C9                                         __ptext719 0589  
                                       __ptext736 0375                                         __ptext728 0576  
                                       __ptext737 0380                                         __ptext729 05A2  
                                       __ptext738 0000                                          ?_adc_get 0070  
                                       __pswtext1 0543                                         __pswtext2 0551  
                                       __pswtext3 055F                __end_of_isFinishedTwelveHoursTimer 05BF  
                      _isFinishedTwelveHoursTimer 05BA                                   ISR@ucTimer1sCnt 004D  
                                        ?_initPin 0070                     __size_of_clearPinPortAndTimer 000C  
                       _uiSampleChannelFourteenth 00BA                                        ?_adc_start 0070  
                 __size_of_getAdOriginalCh14Value 0007                                 interrupt_function 0004  
                    __end_of_getAdOriginaCh4Value 03F7                   __end_of_timer1_interrupt_config 05CC  
                           ?_clearThreeHoursTimer 0070                              adc_test_init@channel 0022  
             vPutSampleDataIntoTable@uiSampleData 0074      vPutSampleDataIntoTable@ucChannelFourthLength 006D  
                     __size_of_isPermitSampleTime 0005                                      _uiSmallTimer 004B  
                           __end_of_adc_test_init 0500                                     _timer1_config 0576  
                    ??_process_AD_Converter_Value 0023                            ??_startTwelveHourTimer 0022  
                                 ??_clearAllTimer 0020                            _getAdOriginalCh14Value 03FE  
                                __size_of_adc_get 000B               __size_of_process_AD_Converter_Value 001E  
                                        _dac_init 05C4  vPutSampleDataIntoTable@ucChannelFourteenthLength 006C  
                                __size_of_initPin 0013                                  main@cTimer1s_811 0051  
                                  Filter@tmpValue 0042                                    ?_timer1_config 0070  
                                        _op1_init 056B                                          _op2_init 059A  
                                     ??_adc_start 0020                              _startThreeHoursTimer 0580  
                           _clearTwelveHoursTimer 0514                                     __size_of_main 0305  
                                        clear_ram 0592                            ??_clearThreeHoursTimer 0020  
                __size_of_clearTwentySecondsTimer 0004                                     ?_clrSampeTime 0070  
                            _getAdOriginaCh4Value 03F0                                       _sampleTimes 004F  
                           ?_startThreeHoursTimer 0020                  __size_of_vPutSampleDataIntoTable 005D  
                                        intlevel1 0000                             _getAdOriginalCh1Value 03F7  
                      ?_isFinishedThreeHoursTimer 0070                                 main@ucLoaderStep1 0058  
                               main@ucLoaderStep2 0059                                 main@ucLoaderStep3 005A  
                               main@ucLoaderStep4 005B                                     ?_clock_config 0070  
                        ?_startTwentySecondsTimer 0070                     startThreeHoursTimer@uiSetTime 0020  
                         i1setAD_ConvertFlag@flag 0070                                    ??_clrSampeTime 0020  
                     ?_isFinishedTwelveHoursTimer 0070                             ?_getAdOriginaCh4Value 0047  
                                 ??_timer1_config 0020                       __end_ofi1_setAD_ConvertFlag 03E0  
              __end_of_process_AD_Converter_Value 04C7                        _process_AD_Converter_Value 04A9  
                          ?_clearTwelveHoursTimer 0070                                  adc_test_init@ref 0020  
                    __end_of_clearPinPortAndTimer 050F  
