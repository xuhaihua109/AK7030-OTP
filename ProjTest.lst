

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Fri Jun 21 17:02:41 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,delta=2
    16                           	psect	swtext1,local,class=CONST,delta=2
    17                           	psect	swtext2,local,class=CONST,delta=2
    18                           	psect	swtext3,local,class=CONST,delta=2
    19                           	psect	text726,local,class=CODE,delta=2
    20                           	psect	text727,local,class=CODE,delta=2
    21                           	psect	text729,local,class=CODE,delta=2
    22                           	psect	text738,local,class=CODE,delta=2
    23                           	psect	text739,local,class=CODE,delta=2
    24                           	psect	text740,local,class=CODE,delta=2
    25                           	psect	text741,local,class=CODE,delta=2
    26                           	psect	text742,local,class=CODE,delta=2
    27                           	psect	text743,local,class=CODE,delta=2
    28                           	psect	text744,local,class=CODE,delta=2
    29                           	psect	text745,local,class=CODE,delta=2
    30                           	psect	text747,local,class=CODE,delta=2
    31                           	psect	text748,local,class=CODE,delta=2
    32                           	psect	text749,local,class=CODE,delta=2
    33                           	psect	text751,local,class=CODE,delta=2
    34                           	psect	text752,local,class=CODE,delta=2
    35                           	psect	text753,local,class=CODE,delta=2
    36                           	psect	text754,local,class=CODE,delta=2
    37                           	psect	text758,local,class=CODE,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text762,local,class=CODE,delta=2
    40                           	psect	pa_nodes,global,class=CODE,delta=2
    41                           	dabs	1,0x7E,2
    42  000A                     	;#
    43                           
    44                           	psect	config
    45  2000  2FFF               	dw	12287	;#
    46  2001  3FDE               	dw	16350	;#
    47  2002  3FF8               	dw	16376	;#
    48                           
    49                           	psect	idataBANK0
    50  0000                     __pidataBANK0:	
    51  001F                     _ADCON0	set	31
    52  001E                     _ADRESH	set	30
    53  001B                     _OP1CON0	set	27
    54  001C                     _OP1CON1	set	28
    55  001D                     _OP1CON2	set	29
    56  0010                     _T1CON	set	16
    57  000F                     _TMR1H	set	15
    58  000E                     _TMR1L	set	14
    59  006A                     _ADIF	set	106
    60  00F8                     _ADON	set	248
    61  005F                     _GIE	set	95
    62  00F9                     _GO	set	249
    63  0028                     _PA0	set	40
    64  0029                     _PA1	set	41
    65  002A                     _PA2	set	42
    66  002B                     _PA3	set	43
    67  002E                     _PA6	set	46
    68  002F                     _PA7	set	47
    69  0030                     _PB0	set	48
    70  0031                     _PB1	set	49
    71  0036                     _PB6	set	54
    72  005E                     _PEIE	set	94
    73  0060                     _TMR1IF	set	96
    74  009F                     _ADCON1	set	159
    75  009E                     _ADRESL	set	158
    76  0087                     _DACCON	set	135
    77  0088                     _DACR0	set	136
    78  009B                     _OP2CON0	set	155
    79  009C                     _OP2CON1	set	156
    80  009D                     _OP2CON2	set	157
    81  046A                     _ADIE	set	1130
    82  0460                     _TMR1IE	set	1120
    83  0428                     _TRISA0	set	1064
    84  0429                     _TRISA1	set	1065
    85  042A                     _TRISA2	set	1066
    86  042B                     _TRISA3	set	1067
    87  042E                     _TRISA6	set	1070
    88  042F                     _TRISA7	set	1071
    89  0430                     _TRISB0	set	1072
    90  0431                     _TRISB1	set	1073
    91  0432                     _TRISB2	set	1074
    92  0433                     _TRISB3	set	1075
    93  0434                     _TRISB4	set	1076
    94  0435                     _TRISB5	set	1077
    95  0436                     _TRISB6	set	1078
    96  0437                     _TRISB7	set	1079
    97  0108                     _CLKPR	set	264
    98  0847                     _CLKPCE	set	2119
    99  0C3F                     _PAOD7	set	3135
   100  0C46                     _PBOD6	set	3142
   101                           
   102                           	psect	cinit
   103  05B5                     start_initialization:	
   104  05B5  3048               	movlw	low __pbssBANK0
   105                           
   106                           ; Clear objects allocated to COMMON
   107  05B6  01FD               	clrf	__pbssCOMMON& (0+127)
   108                           
   109                           ; Clear objects allocated to BANK0
   110  05B7  1383               	bcf	3,7	;select IRP bank0
   111  05B8  0084               	movwf	4
   112  05B9  306E               	movlw	low (__pbssBANK0+38)
   113  05BA  118A  2633  118A   	fcall	clear_ram
   114                           
   115                           ; Clear objects allocated to BANK1
   116  05BD  30A0               	movlw	low __pbssBANK1
   117  05BE  0084               	movwf	4
   118  05BF  30EE               	movlw	low (__pbssBANK1+78)
   119  05C0  118A  2633  118A   	fcall	clear_ram
   120  05C3  3090               	movlw	low __pbssBANK3
   121                           
   122                           ; Clear objects allocated to BANK3
   123  05C4  1783               	bsf	3,7	;select IRP bank2
   124  05C5  0084               	movwf	4
   125  05C6  30A8               	movlw	low (__pbssBANK3+24)
   126  05C7  118A  2633         	fcall	clear_ram
   127                           
   128                           ;initializer for _sampleChannelSelect
   129  05C9  300E               	movlw	14
   130  05CA  00EE               	movwf	__pdataBANK0& (0+127)
   131  05CB                     end_of_initialization:	
   132                           ;End of C runtime variable initialization code
   133                           
   134  05CB  0183               	clrf	3
   135  05CC  118A  2813         	ljmp	_main	;jump to C main() function
   136                           
   137                           	psect	bssCOMMON
   138  007D                     __pbssCOMMON:	
   139  007D                     vPutSampleDataIntoTable@ucChannelFirstLength:	
   140  007D                     	ds	1
   141                           
   142                           	psect	bssBANK0
   143  0048                     __pbssBANK0:	
   144  0048                     _uiBigTimer:	
   145  0048                     	ds	2
   146  004A                     _uiSmallTimer:	
   147  004A                     	ds	2
   148  004C                     _uiTwentySecondsTimer:	
   149  004C                     	ds	2
   150  004E                     ISR@ucTimer1sCnt:	
   151  004E                     	ds	1
   152  004F                     _adc_convert_flag:	
   153  004F                     	ds	1
   154  0050                     _sampleTimes:	
   155  0050                     	ds	1
   156  0051                     _timer:	
   157  0051                     	ds	1
   158  0052                     main@cTimer1s_810:	
   159  0052                     	ds	1
   160  0053                     main@enumBranchStep:	
   161  0053                     	ds	1
   162  0054                     main@enumInteralStep:	
   163  0054                     	ds	1
   164  0055                     main@enumMainLoopStep:	
   165  0055                     	ds	1
   166  0056                     main@ucADC4_Step:	
   167  0056                     	ds	1
   168  0057                     main@ucChannel4Type:	
   169  0057                     	ds	1
   170  0058                     main@ucLoaderStep:	
   171  0058                     	ds	1
   172  0059                     main@ucLoaderStep1:	
   173  0059                     	ds	1
   174  005A                     main@ucLoaderStep2:	
   175  005A                     	ds	1
   176  005B                     main@ucLoaderStep3:	
   177  005B                     	ds	1
   178  005C                     main@ucLoaderStep4:	
   179  005C                     	ds	1
   180  005D                     main@ucTimer1s:	
   181  005D                     	ds	1
   182  005E                     main@ucTimer20s:	
   183  005E                     	ds	1
   184  005F                     main@ucTimerADC1ZeroP5s:	
   185  005F                     	ds	1
   186  0060                     main@ucTimerDelay:	
   187  0060                     	ds	1
   188  0061                     main@ucTimerDelay1:	
   189  0061                     	ds	1
   190  0062                     main@ucTimerDelay2:	
   191  0062                     	ds	1
   192  0063                     main@ucTimerDelay3:	
   193  0063                     	ds	1
   194  0064                     main@ucTimerDelay4:	
   195  0064                     	ds	1
   196  0065                     main@ucTimerP3s:	
   197  0065                     	ds	1
   198  0066                     main@ucTimerP5s:	
   199  0066                     	ds	1
   200  0067                     main@ucTimerRightP5s:	
   201  0067                     	ds	1
   202  0068                     main@ucTimerX1P5s:	
   203  0068                     	ds	1
   204  0069                     main@ucTimerX2P5s:	
   205  0069                     	ds	1
   206  006A                     main@ucTimerZeroPoint3s:	
   207  006A                     	ds	1
   208  006B                     main@ucTimerZeroPoint5s:	
   209  006B                     	ds	1
   210  006C                     vPutSampleDataIntoTable@ucChannelFourteenthLength:	
   211  006C                     	ds	1
   212  006D                     vPutSampleDataIntoTable@ucChannelFourthLength:	
   213  006D                     	ds	1
   214                           
   215                           	psect	dataBANK0
   216  006E                     __pdataBANK0:	
   217  006E                     _sampleChannelSelect:	
   218  006E                     	ds	1
   219                           
   220                           	psect	bssBANK1
   221  00A0                     __pbssBANK1:	
   222  00A0                     _buffer_Sample_AD_Value:	
   223  00A0                     	ds	24
   224  00B8                     _adc_original_value:	
   225  00B8                     	ds	2
   226  00BA                     _multiFilterMaxValue:	
   227  00BA                     	ds	2
   228  00BC                     _multiFilterMinValue:	
   229  00BC                     	ds	2
   230  00BE                     _uiSampleChannelFirst:	
   231  00BE                     	ds	24
   232  00D6                     _uiSampleChannelFourth:	
   233  00D6                     	ds	24
   234                           
   235                           	psect	bssBANK3
   236  0190                     __pbssBANK3:	
   237  0190                     _uiSampleChannelFourteenth:	
   238  0190                     	ds	24
   239                           
   240                           	psect	clrtext
   241  0633                     clear_ram:	
   242                           ;	Called with FSR containing the base address, and
   243                           ;	W with the last address+1
   244                           
   245  0633  0064               	clrwdt	;clear the watchdog before getting into this loop
   246  0634                     clrloop:	
   247  0634  0180               	clrf	0	;clear RAM location pointed to by FSR
   248  0635  0A84               	incf	4,f	;increment pointer
   249  0636  0604               	xorwf	4,w	;XOR with final address
   250  0637  1903               	btfsc	3,2	;have we reached the end yet?
   251  0638  3400               	retlw	0	;all done for this memory range, return
   252  0639  0604               	xorwf	4,w	;XOR again to restore value
   253  063A  2E34               	goto	clrloop	;do the next byte
   254                           
   255                           	psect	cstackCOMMON
   256  0070                     __pcstackCOMMON:	
   257  0070                     ?_clearTwelveHoursTimer:	
   258  0070                     ?_clearThreeHoursTimer:	
   259                           ; 0 bytes @ 0x0
   260                           
   261  0070                     ?_clearTwentySecondsTimer:	
   262                           ; 0 bytes @ 0x0
   263                           
   264  0070                     ?_clock_config:	
   265                           ; 0 bytes @ 0x0
   266                           
   267  0070                     ?_timer1_config:	
   268                           ; 0 bytes @ 0x0
   269                           
   270  0070                     ?_timer1_interrupt_config:	
   271                           ; 0 bytes @ 0x0
   272                           
   273  0070                     ?_dac_init:	
   274                           ; 0 bytes @ 0x0
   275                           
   276  0070                     ?_op1_init:	
   277                           ; 0 bytes @ 0x0
   278                           
   279  0070                     ?_op2_init:	
   280                           ; 0 bytes @ 0x0
   281                           
   282  0070                     ?_adc_start:	
   283                           ; 0 bytes @ 0x0
   284                           
   285  0070                     ?_clrSampeTime:	
   286                           ; 0 bytes @ 0x0
   287                           
   288  0070                     ?_process_AD_Converter_Value:	
   289                           ; 0 bytes @ 0x0
   290                           
   291  0070                     ?_startTwentySecondsTimer:	
   292                           ; 0 bytes @ 0x0
   293                           
   294  0070                     ?_AD_Sample:	
   295                           ; 0 bytes @ 0x0
   296                           
   297  0070                     ?_setAdcSampleChannel:	
   298                           ; 0 bytes @ 0x0
   299                           
   300  0070                     ?_clearAllTimer:	
   301                           ; 0 bytes @ 0x0
   302                           
   303  0070                     ?_clearPinPortAndTimer:	
   304                           ; 0 bytes @ 0x0
   305                           
   306  0070                     ?_initPin:	
   307                           ; 0 bytes @ 0x0
   308                           
   309  0070                     ?_main:	
   310                           ; 0 bytes @ 0x0
   311                           
   312  0070                     ?_setAD_ConvertFlag:	
   313                           ; 0 bytes @ 0x0
   314                           
   315  0070                     ?_ISR:	
   316                           ; 0 bytes @ 0x0
   317                           
   318  0070                     ?i1_setAD_ConvertFlag:	
   319                           ; 0 bytes @ 0x0
   320                           
   321  0070                     ??i1_setAD_ConvertFlag:	
   322                           ; 0 bytes @ 0x0
   323                           
   324  0070                     ?_isPermitSampleTime:	
   325                           ; 0 bytes @ 0x0
   326                           
   327  0070                     ?_isFinishedTwelveHoursTimer:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0070                     ?_isFinishedTwentySecondsTimer:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ?_isFinishedThreeHoursTimer:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ?_getAD_ConvertFlag:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     ?_adc_get:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     i1setAD_ConvertFlag@flag:	
   343                           ; 2 bytes @ 0x0
   344                           
   345                           
   346                           ; 1 bytes @ 0x0
   347  0070                     	ds	2
   348  0072                     ??_adc_get:	
   349  0072                     adc_get@val:	
   350                           ; 0 bytes @ 0x2
   351                           
   352                           
   353                           ; 2 bytes @ 0x2
   354  0072                     	ds	2
   355  0074                     ?_vPutSampleDataIntoTable:	
   356  0074                     vPutSampleDataIntoTable@uiSampleData:	
   357                           ; 0 bytes @ 0x4
   358                           
   359                           
   360                           ; 2 bytes @ 0x4
   361  0074                     	ds	2
   362  0076                     vPutSampleDataIntoTable@channel:	
   363                           
   364                           ; 1 bytes @ 0x6
   365  0076                     	ds	1
   366  0077                     ??_vPutSampleDataIntoTable:	
   367  0077                     vPutSampleDataIntoTable@i:	
   368                           ; 0 bytes @ 0x7
   369                           
   370                           
   371                           ; 2 bytes @ 0x7
   372  0077                     	ds	2
   373  0079                     ??_ISR:	
   374                           
   375                           ; 0 bytes @ 0x9
   376  0079                     	ds	4
   377                           
   378                           	psect	cstackBANK0
   379  0020                     __pcstackBANK0:	
   380  0020                     ??_clearTwelveHoursTimer:	
   381  0020                     ??_clearThreeHoursTimer:	
   382                           ; 0 bytes @ 0x0
   383                           
   384  0020                     ??_clearTwentySecondsTimer:	
   385                           ; 0 bytes @ 0x0
   386                           
   387  0020                     ??_clock_config:	
   388                           ; 0 bytes @ 0x0
   389                           
   390  0020                     ??_timer1_config:	
   391                           ; 0 bytes @ 0x0
   392                           
   393  0020                     ??_timer1_interrupt_config:	
   394                           ; 0 bytes @ 0x0
   395                           
   396  0020                     ?_adc_test_init:	
   397                           ; 0 bytes @ 0x0
   398                           
   399  0020                     ??_dac_init:	
   400                           ; 0 bytes @ 0x0
   401                           
   402  0020                     ??_op1_init:	
   403                           ; 0 bytes @ 0x0
   404                           
   405  0020                     ??_op2_init:	
   406                           ; 0 bytes @ 0x0
   407                           
   408  0020                     ??_adc_start:	
   409                           ; 0 bytes @ 0x0
   410                           
   411  0020                     ??_isPermitSampleTime:	
   412                           ; 0 bytes @ 0x0
   413                           
   414  0020                     ??_clrSampeTime:	
   415                           ; 0 bytes @ 0x0
   416                           
   417  0020                     ?_startTwelveHourTimer:	
   418                           ; 0 bytes @ 0x0
   419                           
   420  0020                     ??_isFinishedTwelveHoursTimer:	
   421                           ; 0 bytes @ 0x0
   422                           
   423  0020                     ??_startTwentySecondsTimer:	
   424                           ; 0 bytes @ 0x0
   425                           
   426  0020                     ??_isFinishedTwentySecondsTimer:	
   427                           ; 0 bytes @ 0x0
   428                           
   429  0020                     ?_startThreeHoursTimer:	
   430                           ; 0 bytes @ 0x0
   431                           
   432  0020                     ??_isFinishedThreeHoursTimer:	
   433                           ; 0 bytes @ 0x0
   434                           
   435  0020                     ??_setAdcSampleChannel:	
   436                           ; 0 bytes @ 0x0
   437                           
   438  0020                     ??_clearAllTimer:	
   439                           ; 0 bytes @ 0x0
   440                           
   441  0020                     ??_clearPinPortAndTimer:	
   442                           ; 0 bytes @ 0x0
   443                           
   444  0020                     ??_initPin:	
   445                           ; 0 bytes @ 0x0
   446                           
   447  0020                     ??_getAD_ConvertFlag:	
   448                           ; 0 bytes @ 0x0
   449                           
   450  0020                     ??_setAD_ConvertFlag:	
   451                           ; 0 bytes @ 0x0
   452                           
   453  0020                     ?_Filter:	
   454                           ; 0 bytes @ 0x0
   455                           
   456  0020                     ?_getAdOriginalValue:	
   457                           ; 2 bytes @ 0x0
   458                           
   459  0020                     setAD_ConvertFlag@flag:	
   460                           ; 2 bytes @ 0x0
   461                           
   462  0020                     adc_test_init@ref:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0020                     Filter@tmpValue:	
   466                           ; 1 bytes @ 0x0
   467                           
   468  0020                     startTwelveHourTimer@uiSetTime:	
   469                           ; 2 bytes @ 0x0
   470                           
   471  0020                     startThreeHoursTimer@uiSetTime:	
   472                           ; 2 bytes @ 0x0
   473                           
   474                           
   475                           ; 2 bytes @ 0x0
   476  0020                     	ds	1
   477  0021                     ??_adc_test_init:	
   478  0021                     setAdcSampleChannel@ucChannel:	
   479                           ; 0 bytes @ 0x1
   480                           
   481                           
   482                           ; 1 bytes @ 0x1
   483  0021                     	ds	1
   484  0022                     ??_startTwelveHourTimer:	
   485  0022                     ??_startThreeHoursTimer:	
   486                           ; 0 bytes @ 0x2
   487                           
   488  0022                     ??_AD_Sample:	
   489                           ; 0 bytes @ 0x2
   490                           
   491  0022                     ??_Filter:	
   492                           ; 0 bytes @ 0x2
   493                           
   494  0022                     ??_getAdOriginalValue:	
   495                           ; 0 bytes @ 0x2
   496                           
   497  0022                     adc_test_init@channel:	
   498                           ; 0 bytes @ 0x2
   499                           
   500                           
   501                           ; 1 bytes @ 0x2
   502  0022                     	ds	2
   503  0024                     AD_Sample@index:	
   504                           
   505                           ; 1 bytes @ 0x4
   506  0024                     	ds	1
   507  0025                     ??_process_AD_Converter_Value:	
   508                           
   509                           ; 0 bytes @ 0x5
   510  0025                     	ds	1
   511  0026                     Filter@filter_buf:	
   512                           
   513                           ; 24 bytes @ 0x6
   514  0026                     	ds	24
   515  003E                     Filter@filter_temp:	
   516                           
   517                           ; 2 bytes @ 0x1E
   518  003E                     	ds	2
   519  0040                     Filter@filter_sum:	
   520                           
   521                           ; 2 bytes @ 0x20
   522  0040                     	ds	2
   523  0042                     Filter@cir:	
   524                           
   525                           ; 2 bytes @ 0x22
   526  0042                     	ds	2
   527  0044                     Filter@j:	
   528                           
   529                           ; 1 bytes @ 0x24
   530  0044                     	ds	1
   531  0045                     Filter@i:	
   532                           
   533                           ; 1 bytes @ 0x25
   534  0045                     	ds	1
   535  0046                     ?_getAdOriginalCh14Value:	
   536  0046                     ?_getAdOriginalCh1Value:	
   537                           ; 2 bytes @ 0x26
   538                           
   539  0046                     ?_getAdOriginaCh4Value:	
   540                           ; 2 bytes @ 0x26
   541                           
   542                           
   543                           ; 2 bytes @ 0x26
   544  0046                     	ds	2
   545  0048                     ??_getAdOriginalCh14Value:	
   546  0048                     ??_getAdOriginalCh1Value:	
   547                           ; 0 bytes @ 0x28
   548                           
   549  0048                     ??_getAdOriginaCh4Value:	
   550                           ; 0 bytes @ 0x28
   551                           
   552  0048                     ??_main:	
   553                           ; 0 bytes @ 0x28
   554                           
   555                           
   556                           	psect	maintext
   557  0013                     __pmaintext:	
   558                           ; 0 bytes @ 0x28
   559 ;;Data sizes: Strings 0, constant 0, data 1, bss 141, persistent 0 stack 0
   560 ;;Auto spaces:   Size  Autos    Used
   561 ;; COMMON          14     13      14
   562 ;; BANK0           80     40      79
   563 ;; BANK1           80      0      78
   564 ;; BANK3           96      0      24
   565 ;; BANK2           96      0       0
   566 ;;
   567 ;; Pointer list with targets:
   568 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   569 ;;
   570 ;; ?_getAdOriginalCh14Value	unsigned int  size(1) Largest target is 0
   571 ;;
   572 ;; ?_getAdOriginaCh4Value	unsigned int  size(1) Largest target is 0
   573 ;;
   574 ;; ?_getAdOriginalCh1Value	unsigned int  size(1) Largest target is 0
   575 ;;
   576 ;; ?_getAdOriginalValue	unsigned int  size(1) Largest target is 0
   577 ;;
   578 ;; ?_Filter	unsigned int  size(1) Largest target is 0
   579 ;;
   580 ;; Filter@tmpValue	PTR int  size(2) Largest target is 24
   581 ;;		 -> uiSampleChannelFourteenth(BANK3[24]), uiSampleChannelFourth(BANK1[24]), uiSampleChannelFirst(BANK1[24]), 
   582 ;;
   583 ;;
   584 ;; Critical Paths under _main in COMMON
   585 ;;
   586 ;;   None.
   587 ;;
   588 ;; Critical Paths under _ISR in COMMON
   589 ;;
   590 ;;   _ISR->_vPutSampleDataIntoTable
   591 ;;   _vPutSampleDataIntoTable->_adc_get
   592 ;;
   593 ;; Critical Paths under _main in BANK0
   594 ;;
   595 ;;   _main->_getAdOriginalCh14Value
   596 ;;   _main->_getAdOriginalCh1Value
   597 ;;   _main->_getAdOriginaCh4Value
   598 ;;   _process_AD_Converter_Value->_AD_Sample
   599 ;;   _AD_Sample->_getAdOriginalValue
   600 ;;   _getAdOriginaCh4Value->_Filter
   601 ;;   _getAdOriginalCh1Value->_Filter
   602 ;;   _getAdOriginalCh14Value->_Filter
   603 ;;
   604 ;; Critical Paths under _ISR in BANK0
   605 ;;
   606 ;;   None.
   607 ;;
   608 ;; Critical Paths under _main in BANK1
   609 ;;
   610 ;;   None.
   611 ;;
   612 ;; Critical Paths under _ISR in BANK1
   613 ;;
   614 ;;   None.
   615 ;;
   616 ;; Critical Paths under _main in BANK3
   617 ;;
   618 ;;   None.
   619 ;;
   620 ;; Critical Paths under _ISR in BANK3
   621 ;;
   622 ;;   None.
   623 ;;
   624 ;; Critical Paths under _main in BANK2
   625 ;;
   626 ;;   None.
   627 ;;
   628 ;; Critical Paths under _ISR in BANK2
   629 ;;
   630 ;;   None.
   631 ;;
   632 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   633 ;;
   634 ;;
   635 ;;Call Graph Tables:
   636 ;;
   637 ;; ---------------------------------------------------------------------------------
   638 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   639 ;; ---------------------------------------------------------------------------------
   640 ;; (0) _main                                                 0     0      0    2104
   641 ;;                            _initPin
   642 ;;                       _clock_config
   643 ;;                      _timer1_config
   644 ;;            _timer1_interrupt_config
   645 ;;                      _adc_test_init
   646 ;;                           _dac_init
   647 ;;                           _op1_init
   648 ;;                           _op2_init
   649 ;;                          _adc_start
   650 ;;                 _isPermitSampleTime
   651 ;;                       _clrSampeTime
   652 ;;         _process_AD_Converter_Value
   653 ;;             _getAdOriginalCh14Value
   654 ;;               _clearPinPortAndTimer
   655 ;;              _getAdOriginalCh1Value
   656 ;;               _startTwelveHourTimer
   657 ;;         _isFinishedTwelveHoursTimer
   658 ;;            _startTwentySecondsTimer
   659 ;;               _getAdOriginaCh4Value
   660 ;;       _isFinishedTwentySecondsTimer
   661 ;;               _startThreeHoursTimer
   662 ;;          _isFinishedThreeHoursTimer
   663 ;;               _clearThreeHoursTimer
   664 ;;                      _clearAllTimer
   665 ;; ---------------------------------------------------------------------------------
   666 ;; (1) _process_AD_Converter_Value                           0     0      0     156
   667 ;;                  _getAD_ConvertFlag
   668 ;;                  _setAD_ConvertFlag
   669 ;;                          _AD_Sample
   670 ;;                      _adc_test_init
   671 ;;                _setAdcSampleChannel
   672 ;;                          _adc_start
   673 ;; ---------------------------------------------------------------------------------
   674 ;; (1) _clearPinPortAndTimer                                 0     0      0       0
   675 ;;                      _clearAllTimer
   676 ;; ---------------------------------------------------------------------------------
   677 ;; (2) _AD_Sample                                            3     3      0      68
   678 ;;                                              2 BANK0      3     3      0
   679 ;;                 _getAdOriginalValue
   680 ;; ---------------------------------------------------------------------------------
   681 ;; (1) _getAdOriginaCh4Value                                 2     0      2     620
   682 ;;                                             38 BANK0      2     0      2
   683 ;;                             _Filter
   684 ;; ---------------------------------------------------------------------------------
   685 ;; (1) _getAdOriginalCh1Value                                2     0      2     620
   686 ;;                                             38 BANK0      2     0      2
   687 ;;                             _Filter
   688 ;; ---------------------------------------------------------------------------------
   689 ;; (1) _getAdOriginalCh14Value                               2     0      2     620
   690 ;;                                             38 BANK0      2     0      2
   691 ;;                             _Filter
   692 ;; ---------------------------------------------------------------------------------
   693 ;; (1) _clearAllTimer                                        0     0      0       0
   694 ;;              _clearTwelveHoursTimer
   695 ;;               _clearThreeHoursTimer
   696 ;;            _clearTwentySecondsTimer
   697 ;; ---------------------------------------------------------------------------------
   698 ;; (2) _setAdcSampleChannel                                  2     2      0      22
   699 ;;                                              0 BANK0      2     2      0
   700 ;; ---------------------------------------------------------------------------------
   701 ;; (3) _getAdOriginalValue                                   2     0      2       0
   702 ;;                                              0 BANK0      2     0      2
   703 ;; ---------------------------------------------------------------------------------
   704 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   705 ;;                                              0 BANK0      1     1      0
   706 ;; ---------------------------------------------------------------------------------
   707 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   708 ;; ---------------------------------------------------------------------------------
   709 ;; (2) _Filter                                              38    36      2     620
   710 ;;                                              0 BANK0     38    36      2
   711 ;; ---------------------------------------------------------------------------------
   712 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   713 ;; ---------------------------------------------------------------------------------
   714 ;; (1) _startThreeHoursTimer                                 2     0      2      22
   715 ;;                                              0 BANK0      2     0      2
   716 ;; ---------------------------------------------------------------------------------
   717 ;; (1) _isFinishedTwentySecondsTimer                         0     0      0       0
   718 ;; ---------------------------------------------------------------------------------
   719 ;; (1) _startTwentySecondsTimer                              0     0      0       0
   720 ;; ---------------------------------------------------------------------------------
   721 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   722 ;; ---------------------------------------------------------------------------------
   723 ;; (1) _startTwelveHourTimer                                 2     0      2      22
   724 ;;                                              0 BANK0      2     0      2
   725 ;; ---------------------------------------------------------------------------------
   726 ;; (1) _clrSampeTime                                         0     0      0       0
   727 ;; ---------------------------------------------------------------------------------
   728 ;; (1) _isPermitSampleTime                                   0     0      0       0
   729 ;; ---------------------------------------------------------------------------------
   730 ;; (2) _adc_start                                            0     0      0       0
   731 ;; ---------------------------------------------------------------------------------
   732 ;; (1) _op2_init                                             0     0      0       0
   733 ;; ---------------------------------------------------------------------------------
   734 ;; (1) _op1_init                                             0     0      0       0
   735 ;; ---------------------------------------------------------------------------------
   736 ;; (1) _dac_init                                             0     0      0       0
   737 ;; ---------------------------------------------------------------------------------
   738 ;; (2) _adc_test_init                                        3     2      1      44
   739 ;;                                              0 BANK0      3     2      1
   740 ;; ---------------------------------------------------------------------------------
   741 ;; (1) _timer1_interrupt_config                              0     0      0       0
   742 ;; ---------------------------------------------------------------------------------
   743 ;; (1) _timer1_config                                        0     0      0       0
   744 ;; ---------------------------------------------------------------------------------
   745 ;; (1) _clock_config                                         0     0      0       0
   746 ;; ---------------------------------------------------------------------------------
   747 ;; (1) _initPin                                              0     0      0       0
   748 ;; ---------------------------------------------------------------------------------
   749 ;; (2) _clearTwentySecondsTimer                              0     0      0       0
   750 ;; ---------------------------------------------------------------------------------
   751 ;; (2) _clearThreeHoursTimer                                 0     0      0       0
   752 ;; ---------------------------------------------------------------------------------
   753 ;; (2) _clearTwelveHoursTimer                                0     0      0       0
   754 ;; ---------------------------------------------------------------------------------
   755 ;; Estimated maximum stack depth 3
   756 ;; ---------------------------------------------------------------------------------
   757 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   758 ;; ---------------------------------------------------------------------------------
   759 ;; (4) _ISR                                                  4     4      0     407
   760 ;;                                              9 COMMON     4     4      0
   761 ;;                i1_setAD_ConvertFlag
   762 ;;                            _adc_get
   763 ;;            _vPutSampleDataIntoTable
   764 ;; ---------------------------------------------------------------------------------
   765 ;; (5) i1_setAD_ConvertFlag                                  1     1      0      73
   766 ;;                                              0 COMMON     1     1      0
   767 ;; ---------------------------------------------------------------------------------
   768 ;; (5) _adc_get                                              4     2      2      24
   769 ;;                                              0 COMMON     4     2      2
   770 ;; ---------------------------------------------------------------------------------
   771 ;; (5) _vPutSampleDataIntoTable                              5     2      3     310
   772 ;;                                              4 COMMON     5     2      3
   773 ;;                            _adc_get (ARG)
   774 ;; ---------------------------------------------------------------------------------
   775 ;; Estimated maximum stack depth 5
   776 ;; ---------------------------------------------------------------------------------
   777 ;; Call Graph Graphs:
   778 ;; _main (ROOT)
   779 ;;   _initPin
   780 ;;   _clock_config
   781 ;;   _timer1_config
   782 ;;   _timer1_interrupt_config
   783 ;;   _adc_test_init
   784 ;;   _dac_init
   785 ;;   _op1_init
   786 ;;   _op2_init
   787 ;;   _adc_start
   788 ;;   _isPermitSampleTime
   789 ;;   _clrSampeTime
   790 ;;   _process_AD_Converter_Value
   791 ;;     _getAD_ConvertFlag
   792 ;;     _setAD_ConvertFlag
   793 ;;     _AD_Sample
   794 ;;       _getAdOriginalValue
   795 ;;     _adc_test_init
   796 ;;     _setAdcSampleChannel
   797 ;;     _adc_start
   798 ;;   _getAdOriginalCh14Value
   799 ;;     _Filter
   800 ;;   _clearPinPortAndTimer
   801 ;;     _clearAllTimer
   802 ;;       _clearTwelveHoursTimer
   803 ;;       _clearThreeHoursTimer
   804 ;;       _clearTwentySecondsTimer
   805 ;;   _getAdOriginalCh1Value
   806 ;;     _Filter
   807 ;;   _startTwelveHourTimer
   808 ;;   _isFinishedTwelveHoursTimer
   809 ;;   _startTwentySecondsTimer
   810 ;;   _getAdOriginaCh4Value
   811 ;;     _Filter
   812 ;;   _isFinishedTwentySecondsTimer
   813 ;;   _startThreeHoursTimer
   814 ;;   _isFinishedThreeHoursTimer
   815 ;;   _clearThreeHoursTimer
   816 ;;   _clearAllTimer
   817 ;;     _clearTwelveHoursTimer
   818 ;;     _clearThreeHoursTimer
   819 ;;     _clearTwentySecondsTimer
   820 ;;
   821 ;; _ISR (ROOT)
   822 ;;   i1_setAD_ConvertFlag
   823 ;;   _adc_get
   824 ;;   _vPutSampleDataIntoTable
   825 ;;     _adc_get (ARG)
   826 ;;
   827 ;; Address spaces:
   828 ;;Name               Size   Autos  Total    Cost      Usage
   829 ;;BANK3               60      0      18      10       25.0%
   830 ;;BITBANK3            60      0       0       9        0.0%
   831 ;;SFR3                 0      0       0       4        0.0%
   832 ;;BITSFR3              0      0       0       4        0.0%
   833 ;;BANK2               60      0       0      12        0.0%
   834 ;;BITBANK2            60      0       0      11        0.0%
   835 ;;SFR2                 0      0       0       5        0.0%
   836 ;;BITSFR2              0      0       0       5        0.0%
   837 ;;SFR1                 0      0       0       2        0.0%
   838 ;;BITSFR1              0      0       0       2        0.0%
   839 ;;BANK1               50      0      4E       8       97.5%
   840 ;;BITBANK1            50      0       0       7        0.0%
   841 ;;CODE                 0      0       0       0        0.0%
   842 ;;DATA                 0      0      CA       6        0.0%
   843 ;;ABS                  0      0      C3       3        0.0%
   844 ;;NULL                 0      0       0       0        0.0%
   845 ;;STACK                0      0       7       2        0.0%
   846 ;;BANK0               50     28      4F       5       98.8%
   847 ;;BITBANK0            50      0       0       4        0.0%
   848 ;;SFR0                 0      0       0       1        0.0%
   849 ;;BITSFR0              0      0       0       1        0.0%
   850 ;;COMMON               E      D       E       1      100.0%
   851 ;;BITCOMMON            E      0       0       0        0.0%
   852                           
   853                           
   854 ;; *************** function _main *****************
   855 ;; Defined at:
   856 ;;		line 129 in file "C:\190604\AK7030-OTP\main.c"
   857 ;; Parameters:    Size  Location     Type
   858 ;;		None
   859 ;; Auto vars:     Size  Location     Type
   860 ;;		None
   861 ;; Return value:  Size  Location     Type
   862 ;;		None               void
   863 ;; Registers used:
   864 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   865 ;; Tracked objects:
   866 ;;		On entry : 17F/0
   867 ;;		On exit  : 60/0
   868 ;;		Unchanged: FFE00/0
   869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   870 ;;      Params:         0       0       0       0       0
   871 ;;      Locals:         0       0       0       0       0
   872 ;;      Temps:          0       0       0       0       0
   873 ;;      Totals:         0       0       0       0       0
   874 ;;Total ram usage:        0 bytes
   875 ;; Hardware stack levels required when called:    5
   876 ;; This function calls:
   877 ;;		_initPin
   878 ;;		_clock_config
   879 ;;		_timer1_config
   880 ;;		_timer1_interrupt_config
   881 ;;		_adc_test_init
   882 ;;		_dac_init
   883 ;;		_op1_init
   884 ;;		_op2_init
   885 ;;		_adc_start
   886 ;;		_isPermitSampleTime
   887 ;;		_clrSampeTime
   888 ;;		_process_AD_Converter_Value
   889 ;;		_getAdOriginalCh14Value
   890 ;;		_clearPinPortAndTimer
   891 ;;		_getAdOriginalCh1Value
   892 ;;		_startTwelveHourTimer
   893 ;;		_isFinishedTwelveHoursTimer
   894 ;;		_startTwentySecondsTimer
   895 ;;		_getAdOriginaCh4Value
   896 ;;		_isFinishedTwentySecondsTimer
   897 ;;		_startThreeHoursTimer
   898 ;;		_isFinishedThreeHoursTimer
   899 ;;		_clearThreeHoursTimer
   900 ;;		_clearAllTimer
   901 ;; This function is called by:
   902 ;;		Startup code after reset
   903 ;; This function uses a non-reentrant model
   904 ;;
   905  0013                     _main:	
   906                           
   907                           ;main.c: 130: enum setp_Adc4
   908                           ;main.c: 131: {
   909                           ;main.c: 132: ADC4_STEP_INIT = 0,
   910                           ;main.c: 133: ADC4_STEP_FIRST,
   911                           ;main.c: 134: ADC4_STEP_SECOND,
   912                           ;main.c: 135: ADC4_STEP_THIRD,
   913                           ;main.c: 136: ADC4_STEP_FOURTH,
   914                           ;main.c: 137: ADC4_STEP_FIFTH,
   915                           ;main.c: 138: ADC4_STEP_SIXTH,
   916                           ;main.c: 139: };
   917                           ;main.c: 142: static unsigned char ucWaitTime1S = 0;
   918                           ;main.c: 144: static unsigned char ucWaitTimeO3s = 0;
   919                           ;main.c: 146: static unsigned char ucSmallTimerActionFlag = 0;
   920                           ;main.c: 148: static unsigned char ucSetSmallActionFlag = 0;
   921                           
   922                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   923  0013  1683               	bsf	3,5	;RP0=1, select bank1
   924  0014  1005               	bcf	5,0
   925                           
   926                           ;main.c: 151: TRISA1 = 0;
   927  0015  1085               	bcf	5,1
   928                           
   929                           ;main.c: 152: TRISA2 = 0;
   930  0016  1105               	bcf	5,2
   931                           
   932                           ;main.c: 153: TRISA3 = 0;
   933  0017  1185               	bcf	5,3
   934                           
   935                           ;main.c: 154: TRISB0 = 0;
   936  0018  1006               	bcf	6,0
   937                           
   938                           ;main.c: 155: TRISB1 = 0;
   939  0019  1086               	bcf	6,1
   940                           
   941                           ;main.c: 156: TRISA6 = 0;
   942  001A  1305               	bcf	5,6
   943                           
   944                           ;main.c: 157: TRISA7 = 0;
   945  001B  1385               	bcf	5,7
   946                           
   947                           ;main.c: 158: TRISB6 = 0;
   948  001C  1306               	bcf	6,6
   949                           
   950                           ;main.c: 161: initPin();
   951  001D  118A  25CE  118A   	fcall	_initPin
   952                           
   953                           ;main.c: 164: TRISB2 = 1;
   954  0020  1303               	bcf	3,6	;RP1=0, select bank1
   955  0021  1506               	bsf	6,2
   956                           
   957                           ;main.c: 166: TRISB7 = 1;
   958  0022  1786               	bsf	6,7
   959                           
   960                           ;main.c: 167: TRISB4 = 1;
   961  0023  1606               	bsf	6,4
   962                           
   963                           ;main.c: 169: clock_config();
   964  0024  118A  2643  118A   	fcall	_clock_config
   965                           
   966                           ;main.c: 170: timer1_config();
   967  0027  118A  2617  118A   	fcall	_timer1_config
   968                           
   969                           ;main.c: 171: timer1_interrupt_config();
   970  002A  118A  266A  118A   	fcall	_timer1_interrupt_config
   971                           
   972                           ;main.c: 173: adc_test_init(14,3);
   973  002D  3003               	movlw	3
   974  002E  1283               	bcf	3,5	;RP0=0, select bank0
   975  002F  00A0               	movwf	?_adc_test_init
   976  0030  300E               	movlw	14
   977  0031  118A  2429  118A   	fcall	_adc_test_init
   978                           
   979                           ;main.c: 175: dac_init();
   980  0034  118A  2661  118A   	fcall	_dac_init
   981                           
   982                           ;main.c: 176: op1_init();
   983  0037  118A  260C  118A   	fcall	_op1_init
   984                           
   985                           ;main.c: 177: op2_init();
   986  003A  118A  263B  118A   	fcall	_op2_init
   987                           
   988                           ;main.c: 180: adc_start();
   989  003D  118A  24B5  118A   	fcall	_adc_start
   990  0040                     l4224:	
   991  0040  0064               	clrwdt	;#
   992                           
   993                           ;main.c: 215: if(isPermitSampleTime())
   994  0041  118A  264B  118A   	fcall	_isPermitSampleTime
   995  0044  3A00               	xorlw	0
   996  0045  1903               	skipnz
   997  0046  2840               	goto	l4224
   998                           
   999                           ;main.c: 216: {
  1000                           ;main.c: 217: clrSampeTime();
  1001  0047  118A  266D  118A   	fcall	_clrSampeTime
  1002                           
  1003                           ;main.c: 218: process_AD_Converter_Value();
  1004  004A  118A  2408  118A   	fcall	_process_AD_Converter_Value
  1005                           
  1006                           ;main.c: 220: switch(enumMainLoopStep)
  1007  004D  2B02               	goto	l4710
  1008  004E                     l4232:	
  1009                           
  1010                           ;main.c: 223: {
  1011                           ;main.c: 224: static unsigned char ucTimerZeroPoint5s = 0;
  1012                           ;main.c: 225: if(getAdOriginalCh14Value() > 1950)
  1013  004E  118A  24E4  118A   	fcall	_getAdOriginalCh14Value
  1014  0051  3007               	movlw	7
  1015  0052  0247               	subwf	?_getAdOriginalCh14Value+1,w
  1016  0053  309F               	movlw	159
  1017  0054  1903               	skipnz
  1018  0055  0246               	subwf	?_getAdOriginalCh14Value,w
  1019  0056  1C03               	skipc
  1020  0057  285A               	goto	l4236
  1021                           
  1022                           ;main.c: 226: {
  1023                           ;main.c: 227: ucTimerZeroPoint5s++;
  1024  0058  0AEB               	incf	main@ucTimerZeroPoint5s,f
  1025                           
  1026                           ;main.c: 228: }
  1027  0059  285B               	goto	l4238
  1028  005A                     l4236:	
  1029                           
  1030                           ;main.c: 229: else
  1031                           ;main.c: 230: ucTimerZeroPoint5s = 0;
  1032  005A  01EB               	clrf	main@ucTimerZeroPoint5s
  1033  005B                     l4238:	
  1034                           
  1035                           ;main.c: 232: if(ucTimerZeroPoint5s >= 1)
  1036  005B  086B               	movf	main@ucTimerZeroPoint5s,w
  1037  005C  1903               	btfsc	3,2
  1038  005D  2840               	goto	l4224
  1039                           
  1040                           ;main.c: 233: {
  1041                           ;main.c: 234: ucTimerZeroPoint5s = 0;
  1042  005E  01EB               	clrf	main@ucTimerZeroPoint5s
  1043  005F                     l4242:	
  1044                           
  1045                           ;main.c: 235: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  1046  005F  01D5               	clrf	main@enumMainLoopStep
  1047  0060  0AD5               	incf	main@enumMainLoopStep,f
  1048  0061                     l706:	
  1049                           
  1050                           ;main.c: 236: }
  1051                           ;main.c: 237: break;
  1052  0061  2840               	goto	l4224
  1053  0062                     l4244:	
  1054                           
  1055                           ;main.c: 241: {
  1056                           ;main.c: 242: static unsigned char ucTimerZeroPoint3s = 0;
  1057                           ;main.c: 244: if(ucTimerZeroPoint3s < 1)
  1058  0062  08EA               	movf	main@ucTimerZeroPoint3s,f
  1059  0063  1D03               	skipz
  1060  0064  2867               	goto	l4248
  1061                           
  1062                           ;main.c: 245: {
  1063                           ;main.c: 246: ucTimerZeroPoint3s++;
  1064  0065  0AEA               	incf	main@ucTimerZeroPoint3s,f
  1065                           
  1066                           ;main.c: 247: }
  1067  0066  2840               	goto	l4224
  1068  0067                     l4248:	
  1069                           
  1070                           ;main.c: 248: else
  1071                           ;main.c: 249: {
  1072                           ;main.c: 250: ucTimerZeroPoint3s = 0;
  1073  0067  01EA               	clrf	main@ucTimerZeroPoint3s
  1074                           
  1075                           ;main.c: 252: if(getAdOriginalCh14Value() > 1950)
  1076  0068  118A  24E4  118A   	fcall	_getAdOriginalCh14Value
  1077  006B  3007               	movlw	7
  1078  006C  0247               	subwf	?_getAdOriginalCh14Value+1,w
  1079  006D  309F               	movlw	159
  1080  006E  1903               	skipnz
  1081  006F  0246               	subwf	?_getAdOriginalCh14Value,w
  1082  0070  1C03               	skipc
  1083  0071  2874               	goto	l4254
  1084  0072                     l4252:	
  1085                           
  1086                           ;main.c: 253: {
  1087                           ;main.c: 255: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
  1088  0072  3002               	movlw	2
  1089  0073  28B7               	goto	L5
  1090  0074                     l4254:	
  1091                           ;main.c: 256: }
  1092                           
  1093                           
  1094                           ;main.c: 257: else
  1095                           ;main.c: 258: {
  1096                           ;main.c: 259: clearPinPortAndTimer();
  1097  0074  118A  259B  118A   	fcall	_clearPinPortAndTimer
  1098  0077  2840               	goto	l4224
  1099  0078                     l715:	
  1100                           ;main.c: 263: }
  1101                           ;main.c: 265: case MAIN_LOOP_STEP_SECOND:
  1102                           
  1103  0078  3005               	movlw	5
  1104                           
  1105                           ;main.c: 266: {
  1106                           ;main.c: 267: static unsigned char ucTimerP5s = 0;
  1107                           ;main.c: 269: PA6 = 1;
  1108  0079  1705               	bsf	5,6
  1109                           
  1110                           ;main.c: 271: if(ucTimerP5s < 5)
  1111  007A  0266               	subwf	main@ucTimerP5s,w
  1112  007B  1803               	skipnc
  1113  007C  287F               	goto	l4260
  1114                           
  1115                           ;main.c: 272: ucTimerP5s++;
  1116  007D  0AE6               	incf	main@ucTimerP5s,f
  1117  007E  2840               	goto	l4224
  1118  007F                     l4260:	
  1119  007F  3003               	movlw	3
  1120                           
  1121                           ;main.c: 273: else
  1122                           ;main.c: 274: {
  1123                           ;main.c: 275: ucTimerP5s = 0;
  1124  0080  01E6               	clrf	main@ucTimerP5s
  1125                           
  1126                           ;main.c: 277: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  1127  0081  28B7               	goto	L5
  1128  0082                     l4264:	
  1129                           
  1130                           ;main.c: 284: {
  1131                           ;main.c: 285: static unsigned char ucTimerADC1ZeroP5s = 0;
  1132                           ;main.c: 287: if(getAdOriginalCh1Value() < 130)
  1133  0082  118A  24DB  118A   	fcall	_getAdOriginalCh1Value
  1134  0085  3000               	movlw	0
  1135  0086  0247               	subwf	?_getAdOriginalCh1Value+1,w
  1136  0087  3082               	movlw	130
  1137  0088  1903               	skipnz
  1138  0089  0246               	subwf	?_getAdOriginalCh1Value,w
  1139  008A  1803               	skipnc
  1140  008B  288E               	goto	l4268
  1141                           
  1142                           ;main.c: 288: {
  1143                           ;main.c: 289: ucTimerADC1ZeroP5s = 0;
  1144  008C  01DF               	clrf	main@ucTimerADC1ZeroP5s
  1145                           
  1146                           ;main.c: 291: }
  1147  008D  288F               	goto	l4270
  1148  008E                     l4268:	
  1149                           
  1150                           ;main.c: 292: else
  1151                           ;main.c: 293: {
  1152                           ;main.c: 294: ucTimerADC1ZeroP5s++;
  1153  008E  0ADF               	incf	main@ucTimerADC1ZeroP5s,f
  1154  008F                     l4270:	
  1155                           
  1156                           ;main.c: 295: }
  1157                           ;main.c: 297: if(ucTimerADC1ZeroP5s >= 1)
  1158  008F  085F               	movf	main@ucTimerADC1ZeroP5s,w
  1159  0090  1903               	btfsc	3,2
  1160  0091  2895               	goto	l4276
  1161  0092  3004               	movlw	4
  1162                           
  1163                           ;main.c: 298: {
  1164                           ;main.c: 299: ucTimerADC1ZeroP5s = 0;
  1165  0093  01DF               	clrf	main@ucTimerADC1ZeroP5s
  1166                           
  1167                           ;main.c: 300: enumMainLoopStep = MAIN_LOOP_STEP_FOURTH;
  1168  0094  28B7               	goto	L5
  1169  0095                     l4276:	
  1170                           ;main.c: 301: }
  1171                           
  1172                           
  1173                           ;main.c: 302: else
  1174                           ;main.c: 303: {
  1175                           ;main.c: 304: static unsigned char ucTimerRightP5s = 0;
  1176                           ;main.c: 306: if(getAdOriginalCh1Value() < 117)
  1177  0095  118A  24DB  118A   	fcall	_getAdOriginalCh1Value
  1178  0098  3000               	movlw	0
  1179  0099  0247               	subwf	?_getAdOriginalCh1Value+1,w
  1180  009A  3075               	movlw	117
  1181  009B  1903               	skipnz
  1182  009C  0246               	subwf	?_getAdOriginalCh1Value,w
  1183  009D  1803               	skipnc
  1184  009E  28A1               	goto	l4280
  1185                           
  1186                           ;main.c: 307: {
  1187                           ;main.c: 308: ucTimerRightP5s++;
  1188  009F  0AE7               	incf	main@ucTimerRightP5s,f
  1189                           
  1190                           ;main.c: 309: }
  1191  00A0  28A2               	goto	l4282
  1192  00A1                     l4280:	
  1193                           
  1194                           ;main.c: 310: else
  1195                           ;main.c: 311: {
  1196                           ;main.c: 312: ucTimerRightP5s = 0;
  1197  00A1  01E7               	clrf	main@ucTimerRightP5s
  1198  00A2                     l4282:	
  1199                           
  1200                           ;main.c: 313: }
  1201                           ;main.c: 315: if(ucTimerRightP5s >= 1)
  1202  00A2  0867               	movf	main@ucTimerRightP5s,w
  1203  00A3  1903               	btfsc	3,2
  1204  00A4  2840               	goto	l4224
  1205  00A5  3008               	movlw	8
  1206                           
  1207                           ;main.c: 316: {
  1208                           ;main.c: 317: ucTimerRightP5s = 0;
  1209  00A6  01E7               	clrf	main@ucTimerRightP5s
  1210                           
  1211                           ;main.c: 318: enumMainLoopStep = MAIN_LOOP_STEP_3_HOUR_BRANCH;
  1212  00A7  28B7               	goto	L5
  1213  00A8                     l4288:	
  1214                           ;main.c: 319: }
  1215                           
  1216                           
  1217                           ;main.c: 330: {
  1218                           ;main.c: 332: startTwelveHourTimer(180);
  1219  00A8  30B4               	movlw	180
  1220  00A9  00A0               	movwf	?_startTwelveHourTimer
  1221  00AA  01A1               	clrf	?_startTwelveHourTimer+1
  1222  00AB  118A  262A  118A   	fcall	_startTwelveHourTimer
  1223                           
  1224                           ;main.c: 333: enumMainLoopStep = MAIN_LOOP_STEP_FIFTH;
  1225  00AE  3005               	movlw	5
  1226  00AF  28B7               	goto	L5
  1227  00B0                     l4292:	
  1228                           ;main.c: 335: break;
  1229                           
  1230                           
  1231                           ;main.c: 339: {
  1232                           ;main.c: 341: if(isFinishedTwelveHoursTimer())
  1233  00B0  118A  265C  118A   	fcall	_isFinishedTwelveHoursTimer
  1234  00B3  3A00               	xorlw	0
  1235  00B4  1903               	skipnz
  1236  00B5  2A3D               	goto	l4606
  1237  00B6                     l4294:	
  1238                           
  1239                           ;main.c: 342: {
  1240                           ;main.c: 343: enumMainLoopStep = MAIN_LOOP_STEP_12_HOUR_END;
  1241  00B6  3009               	movlw	9
  1242  00B7                     L5:	
  1243  00B7  00D5               	movwf	main@enumMainLoopStep
  1244                           
  1245                           ;main.c: 344: }
  1246  00B8  2840               	goto	l4224
  1247  00B9                     l4296:	
  1248                           
  1249                           ;main.c: 352: {
  1250                           ;main.c: 353: startTwentySecondsTimer();
  1251  00B9  118A  2666  118A   	fcall	_startTwentySecondsTimer
  1252  00BC                     l4298:	
  1253                           
  1254                           ;main.c: 354: ucADC4_Step = ADC4_STEP_FIRST;
  1255  00BC  01D6               	clrf	main@ucADC4_Step
  1256  00BD  0AD6               	incf	main@ucADC4_Step,f
  1257                           
  1258                           ;main.c: 355: break;
  1259  00BE  2840               	goto	l4224
  1260  00BF                     l4300:	
  1261                           
  1262                           ;main.c: 359: {
  1263                           ;main.c: 360: if(getAdOriginaCh4Value() < 1911)
  1264  00BF  118A  24D2  118A   	fcall	_getAdOriginaCh4Value
  1265  00C2  3007               	movlw	7
  1266  00C3  0247               	subwf	?_getAdOriginaCh4Value+1,w
  1267  00C4  3077               	movlw	119
  1268  00C5  1903               	skipnz
  1269  00C6  0246               	subwf	?_getAdOriginaCh4Value,w
  1270  00C7  1803               	skipnc
  1271  00C8  28CB               	goto	l4304
  1272                           
  1273                           ;main.c: 361: ucChannel4Type = LESS_THAN_1911;
  1274  00C9  01D7               	clrf	main@ucChannel4Type
  1275  00CA  28F2               	goto	l744
  1276  00CB                     l4304:	
  1277                           
  1278                           ;main.c: 362: else if(getAdOriginaCh4Value() < 2067)
  1279  00CB  118A  24D2  118A   	fcall	_getAdOriginaCh4Value
  1280  00CE  3008               	movlw	8
  1281  00CF  0247               	subwf	?_getAdOriginaCh4Value+1,w
  1282  00D0  3013               	movlw	19
  1283  00D1  1903               	skipnz
  1284  00D2  0246               	subwf	?_getAdOriginaCh4Value,w
  1285  00D3  1803               	skipnc
  1286  00D4  28D8               	goto	l4308
  1287                           
  1288                           ;main.c: 363: ucChannel4Type = BETWEEN_1911_AND_2067;
  1289  00D5  01D7               	clrf	main@ucChannel4Type
  1290  00D6  0AD7               	incf	main@ucChannel4Type,f
  1291  00D7  28F2               	goto	l744
  1292  00D8                     l4308:	
  1293                           
  1294                           ;main.c: 364: else if(getAdOriginaCh4Value() < 2204)
  1295  00D8  118A  24D2  118A   	fcall	_getAdOriginaCh4Value
  1296  00DB  3008               	movlw	8
  1297  00DC  0247               	subwf	?_getAdOriginaCh4Value+1,w
  1298  00DD  309C               	movlw	156
  1299  00DE  1903               	skipnz
  1300  00DF  0246               	subwf	?_getAdOriginaCh4Value,w
  1301  00E0  1803               	skipnc
  1302  00E1  28E4               	goto	l4312
  1303                           
  1304                           ;main.c: 365: ucChannel4Type = BETWEEN_2067_AND_2204;
  1305  00E2  3002               	movlw	2
  1306  00E3  28F1               	goto	L6
  1307  00E4                     l4312:	
  1308                           
  1309                           ;main.c: 366: else if(getAdOriginaCh4Value() < 2340)
  1310  00E4  118A  24D2  118A   	fcall	_getAdOriginaCh4Value
  1311  00E7  3009               	movlw	9
  1312  00E8  0247               	subwf	?_getAdOriginaCh4Value+1,w
  1313  00E9  3024               	movlw	36
  1314  00EA  1903               	skipnz
  1315  00EB  0246               	subwf	?_getAdOriginaCh4Value,w
  1316  00EC  1803               	skipnc
  1317  00ED  28F0               	goto	l4316
  1318                           
  1319                           ;main.c: 367: ucChannel4Type = BETWEEN_2204_AND_2340;
  1320  00EE  3003               	movlw	3
  1321  00EF  28F1               	goto	L6
  1322  00F0                     l4316:	
  1323                           
  1324                           ;main.c: 368: else
  1325                           ;main.c: 369: ucChannel4Type = MORE_THAN_2340;
  1326  00F0  3004               	movlw	4
  1327  00F1                     L6:	
  1328  00F1  00D7               	movwf	main@ucChannel4Type
  1329  00F2                     l744:	
  1330                           
  1331                           ;main.c: 371: ucADC4_Step = ADC4_STEP_SECOND;
  1332  00F2  3002               	movlw	2
  1333  00F3  2A2A               	goto	L8
  1334  00F4                     l759:	
  1335                           ;main.c: 386: {
  1336                           ;main.c: 387: case 0:
  1337                           
  1338                           ;main.c: 372: break;
  1339                           
  1340                           
  1341                           ;main.c: 388: {
  1342                           ;main.c: 389: PB0 = 1;
  1343  00F4  1406               	bsf	6,0
  1344  00F5                     l4318:	
  1345                           
  1346                           ;main.c: 390: ucLoaderStep++;
  1347  00F5  0AD8               	incf	main@ucLoaderStep,f
  1348                           
  1349                           ;main.c: 391: break;
  1350  00F6  2840               	goto	l4224
  1351  00F7                     l4320:	
  1352                           
  1353                           ;main.c: 395: {
  1354                           ;main.c: 396: if(ucTimerDelay >= 5)
  1355  00F7  3005               	movlw	5
  1356  00F8  0260               	subwf	main@ucTimerDelay,w
  1357  00F9  1C03               	skipc
  1358  00FA  28FE               	goto	l4328
  1359                           
  1360                           ;main.c: 397: {
  1361                           ;main.c: 398: PA0 = 1;
  1362  00FB  1405               	bsf	5,0
  1363  00FC                     l4324:	
  1364                           
  1365                           ;main.c: 399: ucTimerDelay = 0;
  1366  00FC  01E0               	clrf	main@ucTimerDelay
  1367  00FD  28F5               	goto	l4318
  1368  00FE                     l4328:	
  1369                           
  1370                           ;main.c: 402: else
  1371                           ;main.c: 403: ucTimerDelay++;
  1372  00FE  0AE0               	incf	main@ucTimerDelay,f
  1373  00FF  2840               	goto	l4224
  1374  0100                     l4330:	
  1375                           
  1376                           ;main.c: 408: {
  1377                           ;main.c: 409: if(ucTimerDelay >= 5)
  1378  0100  3005               	movlw	5
  1379  0101  0260               	subwf	main@ucTimerDelay,w
  1380  0102  1C03               	skipc
  1381  0103  28FE               	goto	l4328
  1382                           
  1383                           ;main.c: 410: {
  1384                           ;main.c: 411: PA1= 1;
  1385  0104  1485               	bsf	5,1
  1386  0105  28FC               	goto	l4324
  1387  0106                     l4340:	
  1388                           
  1389                           ;main.c: 422: {
  1390                           ;main.c: 423: if(ucTimerDelay >= 5)
  1391  0106  3005               	movlw	5
  1392  0107  0260               	subwf	main@ucTimerDelay,w
  1393  0108  1C03               	skipc
  1394  0109  28FE               	goto	l4328
  1395                           
  1396                           ;main.c: 424: {
  1397                           ;main.c: 425: PA2= 1;
  1398  010A  1505               	bsf	5,2
  1399  010B  28FC               	goto	l4324
  1400  010C                     l4350:	
  1401                           
  1402                           ;main.c: 435: {
  1403                           ;main.c: 436: if(ucTimerDelay >= 5)
  1404  010C  3005               	movlw	5
  1405  010D  0260               	subwf	main@ucTimerDelay,w
  1406  010E  1C03               	skipc
  1407  010F  28FE               	goto	l4328
  1408                           
  1409                           ;main.c: 437: {
  1410                           ;main.c: 438: PA3 = 1;
  1411  0110  1585               	bsf	5,3
  1412  0111  28FC               	goto	l4324
  1413  0112                     l4360:	
  1414                           
  1415                           ;main.c: 448: {
  1416                           ;main.c: 449: if(ucTimerDelay >= 5)
  1417  0112  3005               	movlw	5
  1418  0113  0260               	subwf	main@ucTimerDelay,w
  1419  0114  1C03               	skipc
  1420  0115  28FE               	goto	l4328
  1421                           
  1422                           ;main.c: 450: {
  1423                           ;main.c: 451: PB0 = 0;
  1424  0116  1006               	bcf	6,0
  1425                           
  1426                           ;main.c: 452: PA0 = 0;
  1427  0117  1005               	bcf	5,0
  1428                           
  1429                           ;main.c: 453: PA1 = 0;
  1430  0118  1085               	bcf	5,1
  1431                           
  1432                           ;main.c: 454: PA2 = 0;
  1433  0119  1105               	bcf	5,2
  1434                           
  1435                           ;main.c: 455: PA3 = 0;
  1436  011A  1185               	bcf	5,3
  1437  011B  28FC               	goto	l4324
  1438  011C                     l4370:	
  1439                           
  1440                           ;main.c: 465: {
  1441                           ;main.c: 466: if(ucTimerDelay >= 2)
  1442  011C  3002               	movlw	2
  1443  011D  0260               	subwf	main@ucTimerDelay,w
  1444  011E  1C03               	skipc
  1445  011F  28FE               	goto	l4328
  1446                           
  1447                           ;main.c: 467: {
  1448                           ;main.c: 468: ucTimerDelay = 0;
  1449  0120  01E0               	clrf	main@ucTimerDelay
  1450                           
  1451                           ;main.c: 470: ucLoaderStep = 0;
  1452  0121  01D8               	clrf	main@ucLoaderStep
  1453  0122                     l4374:	
  1454                           
  1455                           ;main.c: 471: ucADC4_Step = ADC4_STEP_THIRD;
  1456  0122  3003               	movlw	3
  1457  0123  2A2A               	goto	L8
  1458  0124                     l4380:	
  1459                           ;main.c: 472: }
  1460                           
  1461  0124  0858               	movf	main@ucLoaderStep,w
  1462                           
  1463                           ; Switch size 1, requested type "space"
  1464                           ; Number of cases is 7, Range of values is 0 to 6
  1465                           ; switch strategies available:
  1466                           ; Name         Instructions Cycles
  1467                           ; direct_byte           21     7 (fixed)
  1468                           ; simple_byte           22    12 (average)
  1469                           ; jumptable            260     6 (fixed)
  1470                           ; rangetable            11     6 (fixed)
  1471                           ; spacedrange           20     9 (fixed)
  1472                           ; locatedrange           7     3 (fixed)
  1473                           ;	Chosen strategy is direct_byte
  1474  0125  0084               	movwf	4
  1475  0126  3007               	movlw	7
  1476  0127  0204               	subwf	4,w
  1477  0128  1803               	skipnc
  1478  0129  2840               	goto	l4224
  1479  012A  3005               	movlw	high S4928
  1480  012B  008A               	movwf	10
  1481  012C  1003               	clrc
  1482  012D  0D04               	rlf	4,w
  1483  012E  3EE1               	addlw	low S4928
  1484  012F  0082               	movwf	2
  1485  0130                     l787:	
  1486                           ;main.c: 491: {
  1487                           ;main.c: 492: case 0:
  1488                           
  1489                           
  1490                           ;main.c: 493: {
  1491                           ;main.c: 494: PB0 = 1;
  1492  0130  1406               	bsf	6,0
  1493  0131                     l4382:	
  1494                           
  1495                           ;main.c: 495: ucLoaderStep1++;
  1496  0131  0AD9               	incf	main@ucLoaderStep1,f
  1497                           
  1498                           ;main.c: 496: break;
  1499  0132  2840               	goto	l4224
  1500  0133                     l4384:	
  1501                           
  1502                           ;main.c: 500: {
  1503                           ;main.c: 501: if(ucTimerDelay1 >= 5)
  1504  0133  3005               	movlw	5
  1505  0134  0261               	subwf	main@ucTimerDelay1,w
  1506  0135  1C03               	skipc
  1507  0136  293A               	goto	l4392
  1508                           
  1509                           ;main.c: 502: {
  1510                           ;main.c: 503: PA0 = 1;
  1511  0137  1405               	bsf	5,0
  1512  0138                     l4388:	
  1513                           
  1514                           ;main.c: 504: ucTimerDelay1 = 0;
  1515  0138  01E1               	clrf	main@ucTimerDelay1
  1516  0139  2931               	goto	l4382
  1517  013A                     l4392:	
  1518                           
  1519                           ;main.c: 507: else
  1520                           ;main.c: 508: ucTimerDelay1++;
  1521  013A  0AE1               	incf	main@ucTimerDelay1,f
  1522  013B  2840               	goto	l4224
  1523  013C                     l4394:	
  1524                           
  1525                           ;main.c: 513: {
  1526                           ;main.c: 514: if(ucTimerDelay1 >= 5)
  1527  013C  3005               	movlw	5
  1528  013D  0261               	subwf	main@ucTimerDelay1,w
  1529  013E  1C03               	skipc
  1530  013F  293A               	goto	l4392
  1531                           
  1532                           ;main.c: 515: {
  1533                           ;main.c: 516: PA1= 1;
  1534  0140  1485               	bsf	5,1
  1535  0141  2938               	goto	l4388
  1536  0142                     l4404:	
  1537                           
  1538                           ;main.c: 526: {
  1539                           ;main.c: 527: if(ucTimerDelay1 >= 5)
  1540  0142  3005               	movlw	5
  1541  0143  0261               	subwf	main@ucTimerDelay1,w
  1542  0144  1C03               	skipc
  1543  0145  293A               	goto	l4392
  1544                           
  1545                           ;main.c: 528: {
  1546                           ;main.c: 529: PA2 = 1;
  1547  0146  1505               	bsf	5,2
  1548  0147  2938               	goto	l4388
  1549  0148                     l4414:	
  1550                           
  1551                           ;main.c: 539: {
  1552                           ;main.c: 540: if(ucTimerDelay1 >= 5)
  1553  0148  3005               	movlw	5
  1554  0149  0261               	subwf	main@ucTimerDelay1,w
  1555  014A  1C03               	skipc
  1556  014B  293A               	goto	l4392
  1557                           
  1558                           ;main.c: 541: {
  1559                           ;main.c: 542: PA3 = 1;
  1560  014C  1585               	bsf	5,3
  1561  014D  2938               	goto	l4388
  1562  014E                     l4424:	
  1563                           
  1564                           ;main.c: 552: {
  1565                           ;main.c: 553: if(ucTimerDelay1 >= 5)
  1566  014E  3005               	movlw	5
  1567  014F  0261               	subwf	main@ucTimerDelay1,w
  1568  0150  1C03               	skipc
  1569  0151  293A               	goto	l4392
  1570                           
  1571                           ;main.c: 554: {
  1572                           ;main.c: 555: PA0 = 0;
  1573  0152  1005               	bcf	5,0
  1574                           
  1575                           ;main.c: 556: PA1 = 0;
  1576  0153  1085               	bcf	5,1
  1577                           
  1578                           ;main.c: 557: PA2 = 0;
  1579  0154  1105               	bcf	5,2
  1580                           
  1581                           ;main.c: 558: PA3 = 0;
  1582  0155  1185               	bcf	5,3
  1583  0156  2938               	goto	l4388
  1584  0157                     l4434:	
  1585                           
  1586                           ;main.c: 568: {
  1587                           ;main.c: 569: if(ucTimerDelay1 >= 2)
  1588  0157  3002               	movlw	2
  1589  0158  0261               	subwf	main@ucTimerDelay1,w
  1590  0159  1C03               	skipc
  1591  015A  293A               	goto	l4392
  1592                           
  1593                           ;main.c: 570: {
  1594                           ;main.c: 571: ucTimerDelay1 = 0;
  1595  015B  01E1               	clrf	main@ucTimerDelay1
  1596                           
  1597                           ;main.c: 573: ucLoaderStep1 = 0;
  1598  015C  01D9               	clrf	main@ucLoaderStep1
  1599  015D  2922               	goto	l4374
  1600  015E                     l4444:	
  1601  015E  0859               	movf	main@ucLoaderStep1,w
  1602                           
  1603                           ; Switch size 1, requested type "space"
  1604                           ; Number of cases is 7, Range of values is 0 to 6
  1605                           ; switch strategies available:
  1606                           ; Name         Instructions Cycles
  1607                           ; direct_byte           21     7 (fixed)
  1608                           ; simple_byte           22    12 (average)
  1609                           ; jumptable            260     6 (fixed)
  1610                           ; rangetable            11     6 (fixed)
  1611                           ; spacedrange           20     9 (fixed)
  1612                           ; locatedrange           7     3 (fixed)
  1613                           ;	Chosen strategy is direct_byte
  1614  015F  0084               	movwf	4
  1615  0160  3007               	movlw	7
  1616  0161  0204               	subwf	4,w
  1617  0162  1803               	skipnc
  1618  0163  2840               	goto	l4224
  1619  0164  3005               	movlw	high S4930
  1620  0165  008A               	movwf	10
  1621  0166  1003               	clrc
  1622  0167  0D04               	rlf	4,w
  1623  0168  3EEF               	addlw	low S4930
  1624  0169  0082               	movwf	2
  1625  016A                     l814:	
  1626                           ;main.c: 595: {
  1627                           ;main.c: 596: case 0:
  1628                           
  1629                           
  1630                           ;main.c: 597: {
  1631                           ;main.c: 598: PB0 = 1;
  1632  016A  1406               	bsf	6,0
  1633                           
  1634                           ;main.c: 599: PA0 = 1;
  1635  016B  1405               	bsf	5,0
  1636  016C                     l4446:	
  1637                           
  1638                           ;main.c: 600: ucLoaderStep2++;
  1639  016C  0ADA               	incf	main@ucLoaderStep2,f
  1640                           
  1641                           ;main.c: 601: break;
  1642  016D  2840               	goto	l4224
  1643  016E                     l4448:	
  1644                           
  1645                           ;main.c: 605: {
  1646                           ;main.c: 606: if(ucTimerDelay2 >= 5)
  1647  016E  3005               	movlw	5
  1648  016F  0262               	subwf	main@ucTimerDelay2,w
  1649  0170  1C03               	skipc
  1650  0171  2975               	goto	l4456
  1651                           
  1652                           ;main.c: 607: {
  1653                           ;main.c: 608: PA1 = 1;
  1654  0172  1485               	bsf	5,1
  1655  0173                     l4452:	
  1656                           
  1657                           ;main.c: 609: ucTimerDelay2 = 0;
  1658  0173  01E2               	clrf	main@ucTimerDelay2
  1659  0174  296C               	goto	l4446
  1660  0175                     l4456:	
  1661                           
  1662                           ;main.c: 612: else
  1663                           ;main.c: 613: ucTimerDelay2++;
  1664  0175  0AE2               	incf	main@ucTimerDelay2,f
  1665  0176  2840               	goto	l4224
  1666  0177                     l4458:	
  1667                           
  1668                           ;main.c: 618: {
  1669                           ;main.c: 619: if(ucTimerDelay2 >= 5)
  1670  0177  3005               	movlw	5
  1671  0178  0262               	subwf	main@ucTimerDelay2,w
  1672  0179  1C03               	skipc
  1673  017A  2975               	goto	l4456
  1674                           
  1675                           ;main.c: 620: {
  1676                           ;main.c: 621: PA2 = 1;
  1677  017B  1505               	bsf	5,2
  1678  017C  2973               	goto	l4452
  1679  017D                     l4468:	
  1680                           
  1681                           ;main.c: 631: {
  1682                           ;main.c: 632: if(ucTimerDelay2 >= 5)
  1683  017D  3005               	movlw	5
  1684  017E  0262               	subwf	main@ucTimerDelay2,w
  1685  017F  1C03               	skipc
  1686  0180  2975               	goto	l4456
  1687                           
  1688                           ;main.c: 633: {
  1689                           ;main.c: 634: PA3 = 1;
  1690  0181  1585               	bsf	5,3
  1691  0182  2973               	goto	l4452
  1692  0183                     l4478:	
  1693                           
  1694                           ;main.c: 644: {
  1695                           ;main.c: 645: if(ucTimerDelay2 >= 5)
  1696  0183  3005               	movlw	5
  1697  0184  0262               	subwf	main@ucTimerDelay2,w
  1698  0185  1C03               	skipc
  1699  0186  2975               	goto	l4456
  1700                           
  1701                           ;main.c: 646: {
  1702                           ;main.c: 648: PA1 = 0;
  1703  0187  1085               	bcf	5,1
  1704                           
  1705                           ;main.c: 649: PA2 = 0;
  1706  0188  1105               	bcf	5,2
  1707                           
  1708                           ;main.c: 650: PA3 = 0;
  1709  0189  1185               	bcf	5,3
  1710  018A  2973               	goto	l4452
  1711  018B                     l4488:	
  1712                           
  1713                           ;main.c: 660: {
  1714                           ;main.c: 661: if(ucTimerDelay2 >= 2)
  1715  018B  3002               	movlw	2
  1716  018C  0262               	subwf	main@ucTimerDelay2,w
  1717  018D  1C03               	skipc
  1718  018E  2975               	goto	l4456
  1719                           
  1720                           ;main.c: 662: {
  1721                           ;main.c: 663: ucTimerDelay2 = 0;
  1722  018F  01E2               	clrf	main@ucTimerDelay2
  1723                           
  1724                           ;main.c: 665: ucLoaderStep2 = 0;
  1725  0190  01DA               	clrf	main@ucLoaderStep2
  1726  0191  2922               	goto	l4374
  1727  0192                     l4498:	
  1728  0192  085A               	movf	main@ucLoaderStep2,w
  1729                           
  1730                           ; Switch size 1, requested type "space"
  1731                           ; Number of cases is 6, Range of values is 0 to 5
  1732                           ; switch strategies available:
  1733                           ; Name         Instructions Cycles
  1734                           ; direct_byte           19     7 (fixed)
  1735                           ; simple_byte           19    10 (average)
  1736                           ; jumptable            260     6 (fixed)
  1737                           ; rangetable            10     6 (fixed)
  1738                           ; spacedrange           18     9 (fixed)
  1739                           ; locatedrange           6     3 (fixed)
  1740                           ;	Chosen strategy is direct_byte
  1741  0193  0084               	movwf	4
  1742  0194  3006               	movlw	6
  1743  0195  0204               	subwf	4,w
  1744  0196  1803               	skipnc
  1745  0197  2840               	goto	l4224
  1746  0198  3006               	movlw	high S4932
  1747  0199  008A               	movwf	10
  1748  019A  1003               	clrc
  1749  019B  0D04               	rlf	4,w
  1750  019C  3E00               	addlw	low S4932
  1751  019D  0082               	movwf	2
  1752  019E                     l838:	
  1753                           ;main.c: 687: {
  1754                           ;main.c: 688: case 0:
  1755                           
  1756                           
  1757                           ;main.c: 689: {
  1758                           ;main.c: 690: PB0 = 1;
  1759  019E  1406               	bsf	6,0
  1760                           
  1761                           ;main.c: 691: PA0 = 1;
  1762  019F  1405               	bsf	5,0
  1763                           
  1764                           ;main.c: 692: PA1 = 1;
  1765  01A0  1485               	bsf	5,1
  1766  01A1                     l4500:	
  1767                           
  1768                           ;main.c: 693: ucLoaderStep3++;
  1769  01A1  0ADB               	incf	main@ucLoaderStep3,f
  1770                           
  1771                           ;main.c: 694: break;
  1772  01A2  2840               	goto	l4224
  1773  01A3                     l4502:	
  1774                           
  1775                           ;main.c: 698: {
  1776                           ;main.c: 699: if(ucTimerDelay3 >= 5)
  1777  01A3  3005               	movlw	5
  1778  01A4  0263               	subwf	main@ucTimerDelay3,w
  1779  01A5  1C03               	skipc
  1780  01A6  29AA               	goto	l4510
  1781                           
  1782                           ;main.c: 700: {
  1783                           ;main.c: 701: PA2 = 1;
  1784  01A7  1505               	bsf	5,2
  1785  01A8                     l4506:	
  1786                           
  1787                           ;main.c: 702: ucTimerDelay3 = 0;
  1788  01A8  01E3               	clrf	main@ucTimerDelay3
  1789  01A9  29A1               	goto	l4500
  1790  01AA                     l4510:	
  1791                           
  1792                           ;main.c: 705: else
  1793                           ;main.c: 706: ucTimerDelay3++;
  1794  01AA  0AE3               	incf	main@ucTimerDelay3,f
  1795  01AB  2840               	goto	l4224
  1796  01AC                     l4512:	
  1797                           
  1798                           ;main.c: 711: {
  1799                           ;main.c: 712: if(ucTimerDelay3 >= 5)
  1800  01AC  3005               	movlw	5
  1801  01AD  0263               	subwf	main@ucTimerDelay3,w
  1802  01AE  1C03               	skipc
  1803  01AF  29AA               	goto	l4510
  1804                           
  1805                           ;main.c: 713: {
  1806                           ;main.c: 714: PA3 = 1;
  1807  01B0  1585               	bsf	5,3
  1808  01B1  29A8               	goto	l4506
  1809  01B2                     l4522:	
  1810                           
  1811                           ;main.c: 725: {
  1812                           ;main.c: 726: if(ucTimerDelay3 >= 5)
  1813  01B2  3005               	movlw	5
  1814  01B3  0263               	subwf	main@ucTimerDelay3,w
  1815  01B4  1C03               	skipc
  1816  01B5  29AA               	goto	l4510
  1817                           
  1818                           ;main.c: 727: {
  1819                           ;main.c: 729: PA2 = 0;
  1820  01B6  1105               	bcf	5,2
  1821                           
  1822                           ;main.c: 730: PA3 = 0;
  1823  01B7  1185               	bcf	5,3
  1824  01B8  29A8               	goto	l4506
  1825  01B9                     l4532:	
  1826                           
  1827                           ;main.c: 740: {
  1828                           ;main.c: 741: if(ucTimerDelay3 >= 2)
  1829  01B9  3002               	movlw	2
  1830  01BA  0263               	subwf	main@ucTimerDelay3,w
  1831  01BB  1C03               	skipc
  1832  01BC  29AA               	goto	l4510
  1833                           
  1834                           ;main.c: 742: {
  1835                           ;main.c: 743: ucTimerDelay3 = 0;
  1836  01BD  01E3               	clrf	main@ucTimerDelay3
  1837                           
  1838                           ;main.c: 745: ucLoaderStep3 = 0;
  1839  01BE  01DB               	clrf	main@ucLoaderStep3
  1840  01BF  2922               	goto	l4374
  1841  01C0                     l4542:	
  1842  01C0  085B               	movf	main@ucLoaderStep3,w
  1843                           
  1844                           ; Switch size 1, requested type "space"
  1845                           ; Number of cases is 5, Range of values is 0 to 4
  1846                           ; switch strategies available:
  1847                           ; Name         Instructions Cycles
  1848                           ; simple_byte           16     9 (average)
  1849                           ; direct_byte           17     7 (fixed)
  1850                           ; jumptable            260     6 (fixed)
  1851                           ; rangetable             9     6 (fixed)
  1852                           ; spacedrange           16     9 (fixed)
  1853                           ; locatedrange           5     3 (fixed)
  1854                           ;	Chosen strategy is simple_byte
  1855  01C1  3A00               	xorlw	0	; case 0
  1856  01C2  1903               	skipnz
  1857  01C3  299E               	goto	l838
  1858  01C4  3A01               	xorlw	1	; case 1
  1859  01C5  1903               	skipnz
  1860  01C6  29A3               	goto	l4502
  1861  01C7  3A03               	xorlw	3	; case 2
  1862  01C8  1903               	skipnz
  1863  01C9  29AC               	goto	l4512
  1864  01CA  3A01               	xorlw	1	; case 3
  1865  01CB  1903               	skipnz
  1866  01CC  29B2               	goto	l4522
  1867  01CD  3A07               	xorlw	7	; case 4
  1868  01CE  1903               	skipnz
  1869  01CF  29B9               	goto	l4532
  1870  01D0  2861               	goto	l706
  1871  01D1                     l859:	
  1872                           ;main.c: 767: {
  1873                           ;main.c: 768: case 0:
  1874                           
  1875                           
  1876                           ;main.c: 769: {
  1877                           ;main.c: 770: PB0 = 1;
  1878  01D1  1406               	bsf	6,0
  1879                           
  1880                           ;main.c: 771: PA0 = 1;
  1881  01D2  1405               	bsf	5,0
  1882                           
  1883                           ;main.c: 772: PA1 = 1;
  1884  01D3  1485               	bsf	5,1
  1885                           
  1886                           ;main.c: 773: PA2 = 1;
  1887  01D4  1505               	bsf	5,2
  1888  01D5                     l4544:	
  1889                           
  1890                           ;main.c: 774: ucLoaderStep4++;
  1891  01D5  0ADC               	incf	main@ucLoaderStep4,f
  1892                           
  1893                           ;main.c: 775: break;
  1894  01D6  2840               	goto	l4224
  1895  01D7                     l4546:	
  1896                           
  1897                           ;main.c: 779: {
  1898                           ;main.c: 780: if(ucTimerDelay4 >= 5)
  1899  01D7  3005               	movlw	5
  1900  01D8  0264               	subwf	main@ucTimerDelay4,w
  1901  01D9  1C03               	skipc
  1902  01DA  29DE               	goto	l4554
  1903                           
  1904                           ;main.c: 781: {
  1905                           ;main.c: 782: PA3 = 1;
  1906  01DB  1585               	bsf	5,3
  1907  01DC                     l4550:	
  1908                           
  1909                           ;main.c: 783: ucTimerDelay4 = 0;
  1910  01DC  01E4               	clrf	main@ucTimerDelay4
  1911  01DD  29D5               	goto	l4544
  1912  01DE                     l4554:	
  1913                           
  1914                           ;main.c: 786: else
  1915                           ;main.c: 787: ucTimerDelay4++;
  1916  01DE  0AE4               	incf	main@ucTimerDelay4,f
  1917  01DF  2840               	goto	l4224
  1918  01E0                     l4556:	
  1919                           
  1920                           ;main.c: 792: {
  1921                           ;main.c: 793: if(ucTimerDelay4 >= 5)
  1922  01E0  3005               	movlw	5
  1923  01E1  0264               	subwf	main@ucTimerDelay4,w
  1924  01E2  1C03               	skipc
  1925  01E3  29DE               	goto	l4554
  1926                           
  1927                           ;main.c: 794: {
  1928                           ;main.c: 795: PA3 = 0;
  1929  01E4  1185               	bcf	5,3
  1930  01E5  29DC               	goto	l4550
  1931  01E6                     l4566:	
  1932                           
  1933                           ;main.c: 805: {
  1934                           ;main.c: 806: if(ucTimerDelay4 >= 2)
  1935  01E6  3002               	movlw	2
  1936  01E7  0264               	subwf	main@ucTimerDelay4,w
  1937  01E8  1C03               	skipc
  1938  01E9  29DE               	goto	l4554
  1939                           
  1940                           ;main.c: 807: {
  1941                           ;main.c: 808: ucTimerDelay4 = 0;
  1942  01EA  01E4               	clrf	main@ucTimerDelay4
  1943                           
  1944                           ;main.c: 810: ucLoaderStep4 = 0;
  1945  01EB  01DC               	clrf	main@ucLoaderStep4
  1946  01EC  2922               	goto	l4374
  1947  01ED                     l4576:	
  1948  01ED  085C               	movf	main@ucLoaderStep4,w
  1949                           
  1950                           ; Switch size 1, requested type "space"
  1951                           ; Number of cases is 4, Range of values is 0 to 3
  1952                           ; switch strategies available:
  1953                           ; Name         Instructions Cycles
  1954                           ; simple_byte           13     7 (average)
  1955                           ; direct_byte           15     7 (fixed)
  1956                           ; jumptable            260     6 (fixed)
  1957                           ; rangetable             8     6 (fixed)
  1958                           ; spacedrange           14     9 (fixed)
  1959                           ; locatedrange           4     3 (fixed)
  1960                           ;	Chosen strategy is simple_byte
  1961  01EE  3A00               	xorlw	0	; case 0
  1962  01EF  1903               	skipnz
  1963  01F0  29D1               	goto	l859
  1964  01F1  3A01               	xorlw	1	; case 1
  1965  01F2  1903               	skipnz
  1966  01F3  29D7               	goto	l4546
  1967  01F4  3A03               	xorlw	3	; case 2
  1968  01F5  1903               	skipnz
  1969  01F6  29E0               	goto	l4556
  1970  01F7  3A01               	xorlw	1	; case 3
  1971  01F8  1903               	skipnz
  1972  01F9  29E6               	goto	l4566
  1973  01FA  2861               	goto	l706
  1974  01FB                     l4580:	
  1975  01FB  0857               	movf	main@ucChannel4Type,w
  1976                           
  1977                           ; Switch size 1, requested type "space"
  1978                           ; Number of cases is 5, Range of values is 0 to 4
  1979                           ; switch strategies available:
  1980                           ; Name         Instructions Cycles
  1981                           ; simple_byte           16     9 (average)
  1982                           ; direct_byte           17     7 (fixed)
  1983                           ; jumptable            260     6 (fixed)
  1984                           ; rangetable             9     6 (fixed)
  1985                           ; spacedrange           16     9 (fixed)
  1986                           ; locatedrange           5     3 (fixed)
  1987                           ;	Chosen strategy is simple_byte
  1988  01FC  3A00               	xorlw	0	; case 0
  1989  01FD  1903               	skipnz
  1990  01FE  2924               	goto	l4380
  1991  01FF  3A01               	xorlw	1	; case 1
  1992  0200  1903               	skipnz
  1993  0201  295E               	goto	l4444
  1994  0202  3A03               	xorlw	3	; case 2
  1995  0203  1903               	skipnz
  1996  0204  2992               	goto	l4498
  1997  0205  3A01               	xorlw	1	; case 3
  1998  0206  1903               	skipnz
  1999  0207  29C0               	goto	l4542
  2000  0208  3A07               	xorlw	7	; case 4
  2001  0209  1903               	skipnz
  2002  020A  29ED               	goto	l4576
  2003  020B  2861               	goto	l706
  2004  020C                     l4582:	
  2005                           
  2006                           ;main.c: 834: {
  2007                           ;main.c: 835: if(isFinishedTwentySecondsTimer())
  2008  020C  118A  2657  118A   	fcall	_isFinishedTwentySecondsTimer
  2009  020F  3A00               	xorlw	0
  2010  0210  1903               	skipnz
  2011  0211  28BC               	goto	l4298
  2012                           
  2013                           ;main.c: 836: {
  2014                           ;main.c: 837: PBOD6 =0;
  2015  0212  1683               	bsf	3,5	;RP0=1, select bank3
  2016  0213  1703               	bsf	3,6	;RP1=1, select bank3
  2017  0214  1308               	bcf	8,6
  2018                           
  2019                           ;main.c: 838: PB6 = 1;
  2020  0215  1283               	bcf	3,5	;RP0=0, select bank0
  2021  0216  1303               	bcf	3,6	;RP1=0, select bank0
  2022  0217  1706               	bsf	6,6
  2023                           
  2024                           ;main.c: 839: PA6 = 0;
  2025  0218  1305               	bcf	5,6
  2026                           
  2027                           ;main.c: 846: if((getAdOriginalCh14Value() > 2800))
  2028  0219  118A  24E4  118A   	fcall	_getAdOriginalCh14Value
  2029  021C  300A               	movlw	10
  2030  021D  0247               	subwf	?_getAdOriginalCh14Value+1,w
  2031  021E  30F1               	movlw	241
  2032  021F  1903               	skipnz
  2033  0220  0246               	subwf	?_getAdOriginalCh14Value,w
  2034  0221  1C03               	skipc
  2035  0222  2A25               	goto	l4590
  2036                           
  2037                           ;main.c: 847: DACR0=0x0F;
  2038  0223  300F               	movlw	15
  2039  0224  2A26               	goto	L9
  2040  0225                     l4590:	
  2041                           
  2042                           ;main.c: 848: else
  2043                           ;main.c: 849: DACR0=0x07;
  2044  0225  3007               	movlw	7
  2045  0226                     L9:	
  2046  0226  1683               	bsf	3,5	;RP0=1, select bank1
  2047  0227  0088               	movwf	8	;volatile
  2048                           
  2049                           ;main.c: 851: ucADC4_Step = ADC4_STEP_FOURTH;
  2050  0228  3004               	movlw	4
  2051  0229  1283               	bcf	3,5	;RP0=0, select bank0
  2052  022A                     L8:	
  2053  022A  00D6               	movwf	main@ucADC4_Step
  2054                           
  2055                           ;main.c: 852: }
  2056  022B  2840               	goto	l4224
  2057  022C                     l4592:	
  2058                           
  2059                           ;main.c: 860: {
  2060                           ;main.c: 861: static unsigned char ucTimer1s = 0;
  2061                           ;main.c: 862: if(ucTimer1s < 5)
  2062  022C  3005               	movlw	5
  2063  022D  025D               	subwf	main@ucTimer1s,w
  2064  022E  1803               	skipnc
  2065  022F  2A32               	goto	l4596
  2066                           
  2067                           ;main.c: 863: {
  2068                           ;main.c: 864: ucTimer1s++;
  2069  0230  0ADD               	incf	main@ucTimer1s,f
  2070                           
  2071                           ;main.c: 865: }
  2072  0231  2840               	goto	l4224
  2073  0232                     l4596:	
  2074                           
  2075                           ;main.c: 866: else
  2076                           ;main.c: 867: {
  2077                           ;main.c: 868: ucTimer1s = 0;
  2078  0232  01DD               	clrf	main@ucTimer1s
  2079                           
  2080                           ;main.c: 869: PB6 = 1;
  2081  0233  1706               	bsf	6,6
  2082                           
  2083                           ;main.c: 870: PBOD6 = 1;
  2084  0234  1683               	bsf	3,5	;RP0=1, select bank3
  2085  0235  1703               	bsf	3,6	;RP1=1, select bank3
  2086  0236  1708               	bsf	8,6
  2087                           
  2088                           ;main.c: 871: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  2089  0237  1283               	bcf	3,5	;RP0=0, select bank0
  2090  0238  1303               	bcf	3,6	;RP1=0, select bank0
  2091  0239  01D5               	clrf	main@enumMainLoopStep
  2092  023A  0AD5               	incf	main@enumMainLoopStep,f
  2093                           
  2094                           ;main.c: 872: ucADC4_Step = ADC4_STEP_INIT;
  2095  023B  01D6               	clrf	main@ucADC4_Step
  2096  023C  2840               	goto	l4224
  2097  023D                     l4606:	
  2098  023D  0856               	movf	main@ucADC4_Step,w
  2099                           
  2100                           ; Switch size 1, requested type "space"
  2101                           ; Number of cases is 5, Range of values is 0 to 4
  2102                           ; switch strategies available:
  2103                           ; Name         Instructions Cycles
  2104                           ; simple_byte           16     9 (average)
  2105                           ; direct_byte           17     7 (fixed)
  2106                           ; jumptable            260     6 (fixed)
  2107                           ; rangetable             9     6 (fixed)
  2108                           ; spacedrange           16     9 (fixed)
  2109                           ; locatedrange           5     3 (fixed)
  2110                           ;	Chosen strategy is simple_byte
  2111  023E  3A00               	xorlw	0	; case 0
  2112  023F  1903               	skipnz
  2113  0240  28B9               	goto	l4296
  2114  0241  3A01               	xorlw	1	; case 1
  2115  0242  1903               	skipnz
  2116  0243  28BF               	goto	l4300
  2117  0244  3A03               	xorlw	3	; case 2
  2118  0245  1903               	skipnz
  2119  0246  29FB               	goto	l4580
  2120  0247  3A01               	xorlw	1	; case 3
  2121  0248  1903               	skipnz
  2122  0249  2A0C               	goto	l4582
  2123  024A  3A07               	xorlw	7	; case 4
  2124  024B  1903               	skipnz
  2125  024C  2A2C               	goto	l4592
  2126  024D  2861               	goto	l706
  2127  024E                     l887:	
  2128                           ;main.c: 898: {
  2129                           ;main.c: 899: case HOUR_3_BRANCH_STEP_FIRST:
  2130                           
  2131                           
  2132                           ;main.c: 900: {
  2133                           ;main.c: 901: PA7 = 1;
  2134  024E  1785               	bsf	5,7
  2135                           
  2136                           ;main.c: 902: PAOD7 = 1;
  2137  024F  1683               	bsf	3,5	;RP0=1, select bank3
  2138  0250  303C               	movlw	60
  2139  0251  1703               	bsf	3,6	;RP1=1, select bank3
  2140  0252  1787               	bsf	7,7
  2141                           
  2142                           ;main.c: 903: startThreeHoursTimer(60);
  2143  0253  1283               	bcf	3,5	;RP0=0, select bank0
  2144  0254  1303               	bcf	3,6	;RP1=0, select bank0
  2145  0255  00A0               	movwf	?_startThreeHoursTimer
  2146  0256  01A1               	clrf	?_startThreeHoursTimer+1
  2147  0257  118A  2621  118A   	fcall	_startThreeHoursTimer
  2148                           
  2149                           ;main.c: 905: enumBranchStep = HOUR_3_BRANCH_STEP_SECOND;
  2150  025A  01D3               	clrf	main@enumBranchStep
  2151  025B  0AD3               	incf	main@enumBranchStep,f
  2152                           
  2153                           ;main.c: 906: break;
  2154  025C  2840               	goto	l4224
  2155  025D                     l4612:	
  2156                           
  2157                           ;main.c: 910: {
  2158                           ;main.c: 911: static unsigned char ucTimer20s = 0;
  2159                           ;main.c: 913: if(ucTimer20s < 200)
  2160  025D  30C8               	movlw	200
  2161  025E  025E               	subwf	main@ucTimer20s,w
  2162  025F  1803               	skipnc
  2163  0260  2A68               	goto	l4626
  2164                           
  2165                           ;main.c: 914: {
  2166                           ;main.c: 915: ucTimer20s++;
  2167  0261  0ADE               	incf	main@ucTimer20s,f
  2168                           
  2169                           ;main.c: 916: PB0 = 1;
  2170  0262  1406               	bsf	6,0
  2171                           
  2172                           ;main.c: 917: PA0 = 1;
  2173  0263  1405               	bsf	5,0
  2174                           
  2175                           ;main.c: 918: PA1 = 1;
  2176  0264  1485               	bsf	5,1
  2177                           
  2178                           ;main.c: 919: PA2 = 1;
  2179  0265  1505               	bsf	5,2
  2180                           
  2181                           ;main.c: 920: PA3 = 1;
  2182  0266  1585               	bsf	5,3
  2183                           
  2184                           ;main.c: 921: }
  2185  0267  2840               	goto	l4224
  2186  0268                     l4626:	
  2187  0268  3002               	movlw	2
  2188                           
  2189                           ;main.c: 922: else
  2190                           ;main.c: 923: {
  2191                           ;main.c: 925: ucTimer20s = 0;
  2192  0269  01DE               	clrf	main@ucTimer20s
  2193                           
  2194                           ;main.c: 928: enumBranchStep = HOUR_3_BRANCH_STEP_THIRD;
  2195  026A  00D3               	movwf	main@enumBranchStep
  2196  026B  2840               	goto	l4224
  2197  026C                     l894:	
  2198                           ;main.c: 931: }
  2199                           ;main.c: 933: case HOUR_3_BRANCH_STEP_THIRD:
  2200                           
  2201                           
  2202                           ;main.c: 934: {
  2203                           ;main.c: 935: PA6 = 0;
  2204  026C  1305               	bcf	5,6
  2205                           
  2206                           ;main.c: 937: if(isFinishedThreeHoursTimer())
  2207  026D  118A  2652  118A   	fcall	_isFinishedThreeHoursTimer
  2208  0270  3A00               	xorlw	0
  2209  0271  1903               	skipnz
  2210  0272  2A75               	goto	l4636
  2211                           
  2212                           ;main.c: 938: {
  2213                           ;main.c: 939: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2214  0273  01D3               	clrf	main@enumBranchStep
  2215  0274  28B6               	goto	l4294
  2216  0275                     l4636:	
  2217                           
  2218                           ;main.c: 942: else
  2219                           ;main.c: 943: {
  2220                           ;main.c: 944: static unsigned char ucTimerX1P5s = 0;
  2221                           ;main.c: 946: if(getAdOriginalCh1Value() < 130)
  2222  0275  118A  24DB  118A   	fcall	_getAdOriginalCh1Value
  2223  0278  3000               	movlw	0
  2224  0279  0247               	subwf	?_getAdOriginalCh1Value+1,w
  2225  027A  3082               	movlw	130
  2226  027B  1903               	skipnz
  2227  027C  0246               	subwf	?_getAdOriginalCh1Value,w
  2228  027D  1803               	skipnc
  2229  027E  2A81               	goto	l4640
  2230                           
  2231                           ;main.c: 947: {
  2232                           ;main.c: 948: ucTimerX1P5s = 0;
  2233  027F  01E8               	clrf	main@ucTimerX1P5s
  2234                           
  2235                           ;main.c: 949: }
  2236  0280  2A82               	goto	l4642
  2237  0281                     l4640:	
  2238                           
  2239                           ;main.c: 950: else
  2240                           ;main.c: 951: {
  2241                           ;main.c: 952: ucTimerX1P5s++;
  2242  0281  0AE8               	incf	main@ucTimerX1P5s,f
  2243  0282                     l4642:	
  2244                           
  2245                           ;main.c: 953: }
  2246                           ;main.c: 955: if(ucTimerX1P5s >= 1)
  2247  0282  0868               	movf	main@ucTimerX1P5s,w
  2248  0283  1903               	btfsc	3,2
  2249  0284  2A91               	goto	l4656
  2250                           
  2251                           ;main.c: 956: {
  2252                           ;main.c: 957: ucTimerX1P5s = 0;
  2253  0285  01E8               	clrf	main@ucTimerX1P5s
  2254                           
  2255                           ;main.c: 958: PAOD7 = 0;
  2256  0286  1683               	bsf	3,5	;RP0=1, select bank3
  2257  0287  1703               	bsf	3,6	;RP1=1, select bank3
  2258  0288  1387               	bcf	7,7
  2259                           
  2260                           ;main.c: 959: PA7 = 0;
  2261  0289  1283               	bcf	3,5	;RP0=0, select bank0
  2262  028A  1303               	bcf	3,6	;RP1=0, select bank0
  2263  028B  1385               	bcf	5,7
  2264                           
  2265                           ;main.c: 960: clearThreeHoursTimer();
  2266  028C  118A  25AF  118A   	fcall	_clearThreeHoursTimer
  2267                           
  2268                           ;main.c: 962: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2269  028F  01D3               	clrf	main@enumBranchStep
  2270  0290  2872               	goto	l4252
  2271  0291                     l4656:	
  2272                           
  2273                           ;main.c: 966: else
  2274                           ;main.c: 967: {
  2275                           ;main.c: 968: static unsigned char ucTimerX2P5s = 0;
  2276                           ;main.c: 970: if(getAdOriginalCh14Value() >= 1950)
  2277  0291  118A  24E4  118A   	fcall	_getAdOriginalCh14Value
  2278  0294  3007               	movlw	7
  2279  0295  0247               	subwf	?_getAdOriginalCh14Value+1,w
  2280  0296  309E               	movlw	158
  2281  0297  1903               	skipnz
  2282  0298  0246               	subwf	?_getAdOriginalCh14Value,w
  2283  0299  1C03               	skipc
  2284  029A  2A9D               	goto	l4660
  2285                           
  2286                           ;main.c: 971: {
  2287                           ;main.c: 972: ucTimerX2P5s++;
  2288  029B  0AE9               	incf	main@ucTimerX2P5s,f
  2289                           
  2290                           ;main.c: 973: }
  2291  029C  2A9E               	goto	l4662
  2292  029D                     l4660:	
  2293                           
  2294                           ;main.c: 974: else
  2295                           ;main.c: 975: {
  2296                           ;main.c: 976: ucTimerX2P5s = 0;
  2297  029D  01E9               	clrf	main@ucTimerX2P5s
  2298  029E                     l4662:	
  2299                           
  2300                           ;main.c: 977: }
  2301                           ;main.c: 979: if(ucTimerX2P5s >= 1)
  2302  029E  0869               	movf	main@ucTimerX2P5s,w
  2303  029F  1903               	btfsc	3,2
  2304  02A0  2AA3               	goto	l4666
  2305                           
  2306                           ;main.c: 980: {
  2307                           ;main.c: 981: ucTimerX2P5s = 0;
  2308  02A1  01E9               	clrf	main@ucTimerX2P5s
  2309                           
  2310                           ;main.c: 982: }
  2311  02A2  2840               	goto	l4224
  2312  02A3                     l4666:	
  2313                           
  2314                           ;main.c: 983: else
  2315                           ;main.c: 984: {
  2316                           ;main.c: 985: clearPinPortAndTimer();
  2317  02A3  118A  259B  118A   	fcall	_clearPinPortAndTimer
  2318  02A6  285F               	goto	l4242
  2319  02A7                     l4672:	
  2320  02A7  0853               	movf	main@enumBranchStep,w
  2321                           
  2322                           ; Switch size 1, requested type "space"
  2323                           ; Number of cases is 3, Range of values is 0 to 2
  2324                           ; switch strategies available:
  2325                           ; Name         Instructions Cycles
  2326                           ; simple_byte           10     6 (average)
  2327                           ; direct_byte           13     7 (fixed)
  2328                           ; jumptable            260     6 (fixed)
  2329                           ; rangetable             7     6 (fixed)
  2330                           ; spacedrange           12     9 (fixed)
  2331                           ; locatedrange           3     3 (fixed)
  2332                           ;	Chosen strategy is simple_byte
  2333  02A8  3A00               	xorlw	0	; case 0
  2334  02A9  1903               	skipnz
  2335  02AA  2A4E               	goto	l887
  2336  02AB  3A01               	xorlw	1	; case 1
  2337  02AC  1903               	skipnz
  2338  02AD  2A5D               	goto	l4612
  2339  02AE  3A03               	xorlw	3	; case 2
  2340  02AF  1903               	skipnz
  2341  02B0  2A6C               	goto	l894
  2342  02B1  2861               	goto	l706
  2343  02B2                     l914:	
  2344                           ;main.c: 1015: {
  2345                           ;main.c: 1016: case INTERNAL_FIRST_STEP:
  2346                           
  2347                           
  2348                           ;main.c: 1017: {
  2349                           ;main.c: 1018: PB0 = 0;
  2350  02B2  1006               	bcf	6,0
  2351                           
  2352                           ;main.c: 1019: PB1 = 0;
  2353  02B3  1086               	bcf	6,1
  2354                           
  2355                           ;main.c: 1020: PA0 = 0;
  2356  02B4  1005               	bcf	5,0
  2357                           
  2358                           ;main.c: 1021: PA1 = 0;
  2359  02B5  1085               	bcf	5,1
  2360                           
  2361                           ;main.c: 1022: PA2 = 0;
  2362  02B6  1105               	bcf	5,2
  2363                           
  2364                           ;main.c: 1023: PA3 = 0;
  2365  02B7  1185               	bcf	5,3
  2366                           
  2367                           ;main.c: 1024: PBOD6 = 0;
  2368  02B8  1683               	bsf	3,5	;RP0=1, select bank3
  2369  02B9  1703               	bsf	3,6	;RP1=1, select bank3
  2370  02BA  1308               	bcf	8,6
  2371                           
  2372                           ;main.c: 1025: PB6 = 1;
  2373  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  2374  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  2375  02BD  1706               	bsf	6,6
  2376                           
  2377                           ;main.c: 1026: PA6 =0;
  2378  02BE  1305               	bcf	5,6
  2379                           
  2380                           ;main.c: 1028: enumInteralStep = INTERNAL_SECOND_STEP;
  2381  02BF  01D4               	clrf	main@enumInteralStep
  2382  02C0  0AD4               	incf	main@enumInteralStep,f
  2383                           
  2384                           ;main.c: 1029: break;
  2385  02C1  2840               	goto	l4224
  2386  02C2                     l4674:	
  2387                           
  2388                           ;main.c: 1033: {
  2389                           ;main.c: 1034: static unsigned char ucTimer1s = 0;
  2390                           ;main.c: 1036: if(getAdOriginalCh14Value() <= 1000)
  2391  02C2  118A  24E4  118A   	fcall	_getAdOriginalCh14Value
  2392  02C5  3003               	movlw	3
  2393  02C6  0247               	subwf	?_getAdOriginalCh14Value+1,w
  2394  02C7  30E9               	movlw	233
  2395  02C8  1903               	skipnz
  2396  02C9  0246               	subwf	?_getAdOriginalCh14Value,w
  2397  02CA  1803               	skipnc
  2398  02CB  2ACE               	goto	l4678
  2399                           
  2400                           ;main.c: 1037: {
  2401                           ;main.c: 1038: ucTimer1s++;
  2402  02CC  0AD2               	incf	main@cTimer1s_810,f
  2403                           
  2404                           ;main.c: 1039: }
  2405  02CD  2ACF               	goto	l4680
  2406  02CE                     l4678:	
  2407                           
  2408                           ;main.c: 1040: else
  2409                           ;main.c: 1041: ucTimer1s = 0;
  2410  02CE  01D2               	clrf	main@cTimer1s_810
  2411  02CF                     l4680:	
  2412                           
  2413                           ;main.c: 1043: if(ucTimer1s >= 10)
  2414  02CF  300A               	movlw	10
  2415  02D0  0252               	subwf	main@cTimer1s_810,w
  2416  02D1  1C03               	skipc
  2417  02D2  2840               	goto	l4224
  2418                           
  2419                           ;main.c: 1044: {
  2420                           ;main.c: 1045: enumInteralStep = INTERNAL_THIRD_STEP;
  2421  02D3  3002               	movlw	2
  2422  02D4  00D4               	movwf	main@enumInteralStep
  2423                           
  2424                           ;main.c: 1046: ucTimer1s = 0;
  2425  02D5  01D2               	clrf	main@cTimer1s_810
  2426  02D6  2840               	goto	l4224
  2427  02D7                     l4686:	
  2428                           
  2429                           ;main.c: 1052: {
  2430                           ;main.c: 1053: static unsigned char ucTimerP3s = 0;
  2431                           ;main.c: 1055: if(getAdOriginalCh14Value() >= 1950)
  2432  02D7  118A  24E4  118A   	fcall	_getAdOriginalCh14Value
  2433  02DA  3007               	movlw	7
  2434  02DB  0247               	subwf	?_getAdOriginalCh14Value+1,w
  2435  02DC  309E               	movlw	158
  2436  02DD  1903               	skipnz
  2437  02DE  0246               	subwf	?_getAdOriginalCh14Value,w
  2438  02DF  1C03               	skipc
  2439  02E0  2AE3               	goto	l4690
  2440                           
  2441                           ;main.c: 1056: {
  2442                           ;main.c: 1057: ucTimerP3s++;
  2443  02E1  0AE5               	incf	main@ucTimerP3s,f
  2444                           
  2445                           ;main.c: 1058: }
  2446  02E2  2AE4               	goto	l4692
  2447  02E3                     l4690:	
  2448                           
  2449                           ;main.c: 1059: else
  2450                           ;main.c: 1060: ucTimerP3s = 0;
  2451  02E3  01E5               	clrf	main@ucTimerP3s
  2452  02E4                     l4692:	
  2453                           
  2454                           ;main.c: 1062: if(ucTimerP3s >= 3)
  2455  02E4  3003               	movlw	3
  2456  02E5  0265               	subwf	main@ucTimerP3s,w
  2457  02E6  1C03               	skipc
  2458  02E7  2840               	goto	l4224
  2459                           
  2460                           ;main.c: 1063: {
  2461                           ;main.c: 1064: enumInteralStep = INTERNAL_FIRST_STEP;
  2462  02E8  01D4               	clrf	main@enumInteralStep
  2463                           
  2464                           ;main.c: 1065: ucTimerP3s = 0;
  2465  02E9  01E5               	clrf	main@ucTimerP3s
  2466                           
  2467                           ;main.c: 1066: clearAllTimer();
  2468  02EA  118A  25A7  118A   	fcall	_clearAllTimer
  2469                           
  2470                           ;main.c: 1068: DACR0=0x0F;
  2471  02ED  300F               	movlw	15
  2472  02EE  1683               	bsf	3,5	;RP0=1, select bank1
  2473  02EF  0088               	movwf	8	;volatile
  2474                           
  2475                           ;main.c: 1069: initPin();
  2476  02F0  118A  25CE  118A   	fcall	_initPin
  2477                           
  2478                           ;main.c: 1072: enumMainLoopStep = MAIN_LOOP_STEP_INIT;
  2479  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  2480  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  2481  02F5  01D5               	clrf	main@enumMainLoopStep
  2482  02F6  2840               	goto	l4224
  2483  02F7                     l4706:	
  2484  02F7  0854               	movf	main@enumInteralStep,w
  2485                           
  2486                           ; Switch size 1, requested type "space"
  2487                           ; Number of cases is 3, Range of values is 0 to 2
  2488                           ; switch strategies available:
  2489                           ; Name         Instructions Cycles
  2490                           ; simple_byte           10     6 (average)
  2491                           ; direct_byte           13     7 (fixed)
  2492                           ; jumptable            260     6 (fixed)
  2493                           ; rangetable             7     6 (fixed)
  2494                           ; spacedrange           12     9 (fixed)
  2495                           ; locatedrange           3     3 (fixed)
  2496                           ;	Chosen strategy is simple_byte
  2497  02F8  3A00               	xorlw	0	; case 0
  2498  02F9  1903               	skipnz
  2499  02FA  2AB2               	goto	l914
  2500  02FB  3A01               	xorlw	1	; case 1
  2501  02FC  1903               	skipnz
  2502  02FD  2AC2               	goto	l4674
  2503  02FE  3A03               	xorlw	3	; case 2
  2504  02FF  1903               	skipnz
  2505  0300  2AD7               	goto	l4686
  2506  0301  2861               	goto	l706
  2507  0302                     l4710:	
  2508  0302  0855               	movf	main@enumMainLoopStep,w
  2509                           
  2510                           ; Switch size 1, requested type "space"
  2511                           ; Number of cases is 8, Range of values is 0 to 9
  2512                           ; switch strategies available:
  2513                           ; Name         Instructions Cycles
  2514                           ; simple_byte           25    13 (average)
  2515                           ; direct_byte           27     7 (fixed)
  2516                           ; jumptable            260     6 (fixed)
  2517                           ; rangetable            14     6 (fixed)
  2518                           ; spacedrange           26     9 (fixed)
  2519                           ; locatedrange          10     3 (fixed)
  2520                           ;	Chosen strategy is simple_byte
  2521  0303  3A00               	xorlw	0	; case 0
  2522  0304  1903               	skipnz
  2523  0305  284E               	goto	l4232
  2524  0306  3A01               	xorlw	1	; case 1
  2525  0307  1903               	skipnz
  2526  0308  2862               	goto	l4244
  2527  0309  3A03               	xorlw	3	; case 2
  2528  030A  1903               	skipnz
  2529  030B  2878               	goto	l715
  2530  030C  3A01               	xorlw	1	; case 3
  2531  030D  1903               	skipnz
  2532  030E  2882               	goto	l4264
  2533  030F  3A07               	xorlw	7	; case 4
  2534  0310  1903               	skipnz
  2535  0311  28A8               	goto	l4288
  2536  0312  3A01               	xorlw	1	; case 5
  2537  0313  1903               	skipnz
  2538  0314  28B0               	goto	l4292
  2539  0315  3A0D               	xorlw	13	; case 8
  2540  0316  1903               	skipnz
  2541  0317  2AA7               	goto	l4672
  2542  0318  3A01               	xorlw	1	; case 9
  2543  0319  1903               	skipnz
  2544  031A  2AF7               	goto	l4706
  2545  031B  2861               	goto	l706
  2546  031C  118A  2811         	ljmp	start
  2547  031E                     __end_of_main:	
  2548                           
  2549                           	psect	swtext1
  2550  05E1                     __pswtext1:	
  2551  05E1                     S4928:	
  2552  05E1  118A  28F4         	ljmp	l759
  2553  05E3  118A  28F7         	ljmp	l4320
  2554  05E5  118A  2900         	ljmp	l4330
  2555  05E7  118A  2906         	ljmp	l4340
  2556  05E9  118A  290C         	ljmp	l4350
  2557  05EB  118A  2912         	ljmp	l4360
  2558  05ED  118A  291C         	ljmp	l4370
  2559                           
  2560                           	psect	swtext2
  2561  05EF                     __pswtext2:	
  2562  05EF                     S4930:	
  2563  05EF  118A  2930         	ljmp	l787
  2564  05F1  118A  2933         	ljmp	l4384
  2565  05F3  118A  293C         	ljmp	l4394
  2566  05F5  118A  2942         	ljmp	l4404
  2567  05F7  118A  2948         	ljmp	l4414
  2568  05F9  118A  294E         	ljmp	l4424
  2569  05FB  118A  2957         	ljmp	l4434
  2570                           
  2571                           	psect	swtext3
  2572  0600                     __pswtext3:	
  2573  0600                     S4932:	
  2574  0600  118A  296A         	ljmp	l814
  2575  0602  118A  296E         	ljmp	l4448
  2576  0604  118A  2977         	ljmp	l4458
  2577  0606  118A  297D         	ljmp	l4468
  2578  0608  118A  2983         	ljmp	l4478
  2579  060A  118A  298B         	ljmp	l4488
  2580                           
  2581                           	psect	text726
  2582  0408                     __ptext726:	
  2583 ;; =============== function _main ends ============
  2584                           
  2585                           
  2586 ;; *************** function _process_AD_Converter_Value *****************
  2587 ;; Defined at:
  2588 ;;		line 249 in file "C:\190604\AK7030-OTP\common.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;		None
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;		None
  2593 ;; Return value:  Size  Location     Type
  2594 ;;		None               void
  2595 ;; Registers used:
  2596 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2597 ;; Tracked objects:
  2598 ;;		On entry : 60/0
  2599 ;;		On exit  : 60/0
  2600 ;;		Unchanged: FFE9F/0
  2601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2602 ;;      Params:         0       0       0       0       0
  2603 ;;      Locals:         0       0       0       0       0
  2604 ;;      Temps:          0       0       0       0       0
  2605 ;;      Totals:         0       0       0       0       0
  2606 ;;Total ram usage:        0 bytes
  2607 ;; Hardware stack levels used:    1
  2608 ;; Hardware stack levels required when called:    4
  2609 ;; This function calls:
  2610 ;;		_getAD_ConvertFlag
  2611 ;;		_setAD_ConvertFlag
  2612 ;;		_AD_Sample
  2613 ;;		_adc_test_init
  2614 ;;		_setAdcSampleChannel
  2615 ;;		_adc_start
  2616 ;; This function is called by:
  2617 ;;		_main
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620  0408                     _process_AD_Converter_Value:	
  2621                           
  2622                           ;common.c: 199: return adc_convert_flag;
  2623                           
  2624                           ; Regs used in _getAD_ConvertFlag: [wreg]
  2625                           
  2626                           ;common.c: 250: if(getAD_ConvertFlag())
  2627                           
  2628                           ; Regs used in _process_AD_Converter_Value: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2629  0408  084F               	movf	_adc_convert_flag,w
  2630  0409  3A00               	xorlw	0
  2631  040A  1903               	skipnz
  2632  040B  0008               	return
  2633                           
  2634                           ;common.c: 251: {
  2635                           ;common.c: 252: setAD_ConvertFlag(0);
  2636  040C  3000               	movlw	0
  2637  040D  2440  118A         	fcall	_setAD_ConvertFlag
  2638                           
  2639                           ;common.c: 253: AD_Sample();
  2640  040F  2443  118A         	fcall	_AD_Sample
  2641                           
  2642                           ;common.c: 254: if(4 == sampleChannelSelect)
  2643  0411  086E               	movf	_sampleChannelSelect,w
  2644  0412  3A04               	xorlw	4
  2645  0413  1D03               	skipz
  2646  0414  2C19               	goto	l4194
  2647                           
  2648                           ;common.c: 255: adc_test_init(4,3);
  2649  0415  3003               	movlw	3
  2650  0416  00A0               	movwf	?_adc_test_init
  2651  0417  3004               	movlw	4
  2652  0418  2C22               	goto	L10
  2653  0419                     l4194:	
  2654                           
  2655                           ;common.c: 256: else if(1 == sampleChannelSelect)
  2656  0419  0B6E               	decfsz	_sampleChannelSelect,w
  2657  041A  2C1F               	goto	l4198
  2658                           
  2659                           ;common.c: 257: adc_test_init(1,3);
  2660  041B  3003               	movlw	3
  2661  041C  00A0               	movwf	?_adc_test_init
  2662  041D  3001               	movlw	1
  2663  041E  2C22               	goto	L10
  2664  041F                     l4198:	
  2665                           
  2666                           ;common.c: 258: else
  2667                           ;common.c: 259: adc_test_init(14,3);
  2668  041F  3003               	movlw	3
  2669  0420  00A0               	movwf	?_adc_test_init
  2670  0421  300E               	movlw	14
  2671  0422                     L10:	
  2672  0422  2429  118A         	fcall	_adc_test_init
  2673                           
  2674                           ;common.c: 260: setAdcSampleChannel(sampleChannelSelect);
  2675  0424  1283               	bcf	3,5	;RP0=0, select bank0
  2676  0425  086E               	movf	_sampleChannelSelect,w
  2677  0426  24B8  118A         	fcall	_setAdcSampleChannel
  2678                           
  2679                           ;common.c: 261: adc_start();
  2680  0428  2CB5               	ljmp	l3900
  2681  0429                     __end_of_process_AD_Converter_Value:	
  2682  0429                     __ptext750:	
  2683 ;; =============== function _dac_init ends ============
  2684                           
  2685                           
  2686 ;; *************** function _adc_test_init *****************
  2687 ;; Defined at:
  2688 ;;		line 85 in file "C:\190604\AK7030-OTP\periph.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;  channel         1    wreg     unsigned char 
  2691 ;;  ref             1    0[BANK0 ] unsigned char 
  2692 ;; Auto vars:     Size  Location     Type
  2693 ;;  channel         1    2[BANK0 ] unsigned char 
  2694 ;; Return value:  Size  Location     Type
  2695 ;;		None               void
  2696 ;; Registers used:
  2697 ;;		wreg, status,2, status,0
  2698 ;; Tracked objects:
  2699 ;;		On entry : 60/0
  2700 ;;		On exit  : 60/20
  2701 ;;		Unchanged: FFF9F/0
  2702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2703 ;;      Params:         0       1       0       0       0
  2704 ;;      Locals:         0       1       0       0       0
  2705 ;;      Temps:          0       1       0       0       0
  2706 ;;      Totals:         0       3       0       0       0
  2707 ;;Total ram usage:        3 bytes
  2708 ;; Hardware stack levels used:    1
  2709 ;; Hardware stack levels required when called:    2
  2710 ;; This function calls:
  2711 ;;		Nothing
  2712 ;; This function is called by:
  2713 ;;		_main
  2714 ;;		_process_AD_Converter_Value
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717  0429                     _adc_test_init:	
  2718                           
  2719                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  2720                           ;adc_test_init@channel stored from wreg
  2721  0429  00A2               	movwf	adc_test_init@channel
  2722                           
  2723                           ;periph.c: 86: ADCON0 = 0x00;
  2724  042A  019F               	clrf	31	;volatile
  2725                           
  2726                           ;periph.c: 87: ADCON0|=channel<<2;
  2727  042B  00A1               	movwf	??_adc_test_init
  2728  042C  1003               	clrc
  2729  042D  0DA1               	rlf	??_adc_test_init,f
  2730  042E  1003               	clrc
  2731  042F  0D21               	rlf	??_adc_test_init,w
  2732  0430  049F               	iorwf	31,f	;volatile
  2733                           
  2734                           ;periph.c: 88: ADCON1|=ref<<6;
  2735  0431  0820               	movf	adc_test_init@ref,w
  2736  0432  00A1               	movwf	??_adc_test_init
  2737  0433  0CA1               	rrf	??_adc_test_init,f
  2738  0434  0CA1               	rrf	??_adc_test_init,f
  2739  0435  0C21               	rrf	??_adc_test_init,w
  2740  0436  39C0               	andlw	192
  2741  0437  1683               	bsf	3,5	;RP0=1, select bank1
  2742  0438  049F               	iorwf	31,f	;volatile
  2743                           
  2744                           ;periph.c: 89: ADON=1;
  2745  0439  1283               	bcf	3,5	;RP0=0, select bank0
  2746  043A  141F               	bsf	31,0
  2747                           
  2748                           ;periph.c: 90: ADIE=1;
  2749  043B  1683               	bsf	3,5	;RP0=1, select bank1
  2750  043C  150D               	bsf	13,2
  2751  043D  0008               	return
  2752  043E                     __end_of_adc_test_init:	
  2753  043E                     __ptext736:	
  2754 ;; =============== function _setAD_ConvertFlag ends ============
  2755                           
  2756                           
  2757 ;; *************** function _getAD_ConvertFlag *****************
  2758 ;; Defined at:
  2759 ;;		line 198 in file "C:\190604\AK7030-OTP\common.c"
  2760 ;; Parameters:    Size  Location     Type
  2761 ;;		None
  2762 ;; Auto vars:     Size  Location     Type
  2763 ;;		None
  2764 ;; Return value:  Size  Location     Type
  2765 ;;                  1    wreg      unsigned char 
  2766 ;; Registers used:
  2767 ;;		wreg
  2768 ;; Tracked objects:
  2769 ;;		On entry : 60/0
  2770 ;;		On exit  : 60/0
  2771 ;;		Unchanged: FFF9F/0
  2772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2773 ;;      Params:         0       0       0       0       0
  2774 ;;      Locals:         0       0       0       0       0
  2775 ;;      Temps:          0       0       0       0       0
  2776 ;;      Totals:         0       0       0       0       0
  2777 ;;Total ram usage:        0 bytes
  2778 ;; Hardware stack levels used:    1
  2779 ;; Hardware stack levels required when called:    2
  2780 ;; This function calls:
  2781 ;;		Nothing
  2782 ;; This function is called by:
  2783 ;;		_process_AD_Converter_Value
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786  043E                     _getAD_ConvertFlag:	
  2787                           
  2788                           ;common.c: 199: return adc_convert_flag;
  2789                           
  2790                           ; Regs used in _getAD_ConvertFlag: [wreg]
  2791  043E  084F               	movf	_adc_convert_flag,w
  2792  043F  0008               	return
  2793  0440                     __end_of_getAD_ConvertFlag:	
  2794  0440                     __ptext735:	
  2795 ;; =============== function _getAdOriginalValue ends ============
  2796                           
  2797                           
  2798 ;; *************** function _setAD_ConvertFlag *****************
  2799 ;; Defined at:
  2800 ;;		line 204 in file "C:\190604\AK7030-OTP\common.c"
  2801 ;; Parameters:    Size  Location     Type
  2802 ;;  flag            1    wreg     unsigned char 
  2803 ;; Auto vars:     Size  Location     Type
  2804 ;;  flag            1    0[BANK0 ] unsigned char 
  2805 ;; Return value:  Size  Location     Type
  2806 ;;		None               void
  2807 ;; Registers used:
  2808 ;;		wreg
  2809 ;; Tracked objects:
  2810 ;;		On entry : 60/0
  2811 ;;		On exit  : 60/0
  2812 ;;		Unchanged: FFF9F/0
  2813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2814 ;;      Params:         0       0       0       0       0
  2815 ;;      Locals:         0       1       0       0       0
  2816 ;;      Temps:          0       0       0       0       0
  2817 ;;      Totals:         0       1       0       0       0
  2818 ;;Total ram usage:        1 bytes
  2819 ;; Hardware stack levels used:    1
  2820 ;; Hardware stack levels required when called:    2
  2821 ;; This function calls:
  2822 ;;		Nothing
  2823 ;; This function is called by:
  2824 ;;		_process_AD_Converter_Value
  2825 ;; This function uses a non-reentrant model
  2826 ;;
  2827  0440                     _setAD_ConvertFlag:	
  2828                           
  2829                           ; Regs used in _setAD_ConvertFlag: [wreg]
  2830                           ;setAD_ConvertFlag@flag stored from wreg
  2831  0440  00A0               	movwf	setAD_ConvertFlag@flag
  2832                           
  2833                           ;common.c: 205: adc_convert_flag = flag;
  2834  0441  00CF               	movwf	_adc_convert_flag
  2835  0442  0008               	return
  2836  0443                     __end_of_setAD_ConvertFlag:	
  2837  0443                     __ptext728:	
  2838 ;; =============== function _clearPinPortAndTimer ends ============
  2839                           
  2840                           
  2841 ;; *************** function _AD_Sample *****************
  2842 ;; Defined at:
  2843 ;;		line 275 in file "C:\190604\AK7030-OTP\common.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;		None
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;  index           1    4[BANK0 ] unsigned char 
  2848 ;; Return value:  Size  Location     Type
  2849 ;;		None               void
  2850 ;; Registers used:
  2851 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2852 ;; Tracked objects:
  2853 ;;		On entry : 60/0
  2854 ;;		On exit  : 60/0
  2855 ;;		Unchanged: FFE9F/0
  2856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2857 ;;      Params:         0       0       0       0       0
  2858 ;;      Locals:         0       1       0       0       0
  2859 ;;      Temps:          0       2       0       0       0
  2860 ;;      Totals:         0       3       0       0       0
  2861 ;;Total ram usage:        3 bytes
  2862 ;; Hardware stack levels used:    1
  2863 ;; Hardware stack levels required when called:    3
  2864 ;; This function calls:
  2865 ;;		_getAdOriginalValue
  2866 ;; This function is called by:
  2867 ;;		_process_AD_Converter_Value
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870  0443                     _AD_Sample:	
  2871                           
  2872                           ;common.c: 276: if(sampleTimes < 12)
  2873                           
  2874                           ; Regs used in _AD_Sample: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2875  0443  300C               	movlw	12
  2876  0444  0250               	subwf	_sampleTimes,w
  2877  0445  1803               	skipnc
  2878  0446  0008               	return
  2879                           
  2880                           ;common.c: 277: {
  2881                           ;common.c: 279: buffer_Sample_AD_Value[sampleTimes] = getAdOriginalValue();
  2882  0447  24AC  118A         	fcall	_getAdOriginalValue
  2883  0449  1003               	clrc
  2884  044A  0D50               	rlf	_sampleTimes,w
  2885  044B  3EA0               	addlw	_buffer_Sample_AD_Value& (0+255)
  2886  044C  0084               	movwf	4
  2887  044D  0820               	movf	?_getAdOriginalValue,w
  2888  044E  1383               	bcf	3,7	;select IRP bank1
  2889  044F  0080               	movwf	0
  2890  0450  0A84               	incf	4,f
  2891  0451  0821               	movf	?_getAdOriginalValue+1,w
  2892  0452  0080               	movwf	0
  2893                           
  2894                           ;common.c: 281: if(sampleTimes == 0)
  2895  0453  08D0               	movf	_sampleTimes,f
  2896  0454  1D03               	skipz
  2897  0455  2C5F               	goto	l4142
  2898                           
  2899                           ;common.c: 282: {
  2900                           ;common.c: 283: multiFilterMaxValue = buffer_Sample_AD_Value[0];
  2901  0456  1683               	bsf	3,5	;RP0=1, select bank1
  2902  0457  0821               	movf	(_buffer_Sample_AD_Value+1)^(0+128),w
  2903  0458  00BB               	movwf	(_multiFilterMaxValue+1)^(0+128)
  2904  0459  0820               	movf	_buffer_Sample_AD_Value^(0+128),w
  2905  045A  00BA               	movwf	_multiFilterMaxValue^(0+128)
  2906                           
  2907                           ;common.c: 284: multiFilterMinValue = buffer_Sample_AD_Value[0];
  2908  045B  0821               	movf	(_buffer_Sample_AD_Value+1)^(0+128),w
  2909  045C  00BD               	movwf	(_multiFilterMinValue+1)^(0+128)
  2910  045D  0820               	movf	_buffer_Sample_AD_Value^(0+128),w
  2911  045E  00BC               	movwf	_multiFilterMinValue^(0+128)
  2912  045F                     l4142:	
  2913                           
  2914                           ;common.c: 285: }
  2915                           ;common.c: 287: if(multiFilterMaxValue < buffer_Sample_AD_Value[sampleTimes])
  2916  045F  24C0  118A         	fcall	PL3	;call to abstracted procedure
  2917  0461  023B               	subwf	(_multiFilterMaxValue+1)^(0+128),w
  2918  0462  1D03               	skipz
  2919  0463  2C68               	goto	u1215
  2920  0464  1283               	bcf	3,5	;RP0=0, select bank0
  2921  0465  0822               	movf	??_AD_Sample,w
  2922  0466  1683               	bsf	3,5	;RP0=1, select bank1
  2923  0467  023A               	subwf	_multiFilterMaxValue^(0+128),w
  2924  0468                     u1215:	
  2925  0468  1803               	skipnc
  2926  0469  2C72               	goto	l1691
  2927                           
  2928                           ;common.c: 288: {
  2929                           ;common.c: 289: multiFilterMaxValue = buffer_Sample_AD_Value[sampleTimes];
  2930  046A  1283               	bcf	3,5	;RP0=0, select bank0
  2931  046B  1003               	clrc
  2932  046C  24CC  118A         	fcall	PL8	;call to abstracted procedure
  2933  046E  00BA               	movwf	_multiFilterMaxValue^(0+128)
  2934  046F  0A84               	incf	4,f
  2935  0470  0800               	movf	0,w
  2936  0471  00BB               	movwf	(_multiFilterMaxValue+1)^(0+128)
  2937  0472                     l1691:	
  2938                           
  2939                           ;common.c: 290: }
  2940                           ;common.c: 291: if(multiFilterMinValue > buffer_Sample_AD_Value[sampleTimes])
  2941  0472  24C0  118A         	fcall	PL3	;call to abstracted procedure
  2942  0474  083D               	movf	(_multiFilterMinValue+1)^(0+128),w
  2943  0475  1283               	bcf	3,5	;RP0=0, select bank0
  2944  0476  0223               	subwf	??_AD_Sample+1,w
  2945  0477  1D03               	skipz
  2946  0478  2C7D               	goto	u1225
  2947  0479  1683               	bsf	3,5	;RP0=1, select bank1
  2948  047A  083C               	movf	_multiFilterMinValue^(0+128),w
  2949  047B  1283               	bcf	3,5	;RP0=0, select bank0
  2950  047C  0222               	subwf	??_AD_Sample,w
  2951  047D                     u1225:	
  2952  047D  1803               	skipnc
  2953  047E  2C86               	goto	l4148
  2954                           
  2955                           ;common.c: 292: {
  2956                           ;common.c: 293: multiFilterMinValue = buffer_Sample_AD_Value[sampleTimes];
  2957  047F  1003               	clrc
  2958  0480  24CC  118A         	fcall	PL8	;call to abstracted procedure
  2959  0482  00BC               	movwf	_multiFilterMinValue^(0+128)
  2960  0483  0A84               	incf	4,f
  2961  0484  0800               	movf	0,w
  2962  0485  00BD               	movwf	(_multiFilterMinValue+1)^(0+128)
  2963  0486                     l4148:	
  2964                           
  2965                           ;common.c: 298: sampleTimes++;
  2966  0486  1283               	bcf	3,5	;RP0=0, select bank0
  2967  0487  300C               	movlw	12
  2968  0488  0AD0               	incf	_sampleTimes,f
  2969                           
  2970                           ;common.c: 300: if(sampleTimes >= 12)
  2971  0489  0250               	subwf	_sampleTimes,w
  2972  048A  1C03               	skipc
  2973  048B  0008               	return
  2974                           
  2975                           ;common.c: 301: {
  2976                           ;common.c: 302: sampleTimes = 0;
  2977  048C  01D0               	clrf	_sampleTimes
  2978                           
  2979                           ;common.c: 305: {
  2980                           ;common.c: 307: sampleCH14Value = ((multiFilterSumValue - multiFilterMaxValue - multiFil
      +                          terMinValue))>> 2;
  2981  048D  086E               	movf	_sampleChannelSelect,w
  2982  048E  3A0E               	xorlw	14
  2983  048F  1D03               	skipz
  2984  0490  2C94               	goto	l4158
  2985  0491                     l4156:	
  2986                           
  2987                           ;common.c: 308: sampleChannelSelect = 1;
  2988  0491  01EE               	clrf	_sampleChannelSelect
  2989  0492  0AEE               	incf	_sampleChannelSelect,f
  2990                           
  2991                           ;common.c: 309: }
  2992  0493  2C9E               	goto	l4168
  2993  0494                     l4158:	
  2994                           
  2995                           ;common.c: 311: {
  2996                           ;common.c: 312: sampleCH4Value = ((multiFilterSumValue - multiFilterMaxValue - multiFilt
      +                          erMinValue))>> 2;
  2997  0494  086E               	movf	_sampleChannelSelect,w
  2998  0495  3A04               	xorlw	4
  2999  0496  1903               	btfsc	3,2
  3000  0497  2C91               	goto	l4156
  3001                           
  3002                           ;common.c: 316: {
  3003                           ;common.c: 317: sampleCH1Value = ((multiFilterSumValue - multiFilterMaxValue - multiFilt
      +                          erMinValue))>> 2;
  3004  0498  0B6E               	decfsz	_sampleChannelSelect,w
  3005  0499  2C9C               	goto	l4166
  3006                           
  3007                           ;common.c: 318: sampleChannelSelect = 4;
  3008  049A  3004               	movlw	4
  3009  049B  2C9D               	goto	L11
  3010  049C                     l4166:	
  3011                           ;common.c: 319: }
  3012                           
  3013                           
  3014                           ;common.c: 323: sampleChannelSelect = 14;
  3015  049C  300E               	movlw	14
  3016  049D                     L11:	
  3017  049D  00EE               	movwf	_sampleChannelSelect
  3018  049E                     l4168:	
  3019                           
  3020                           ;common.c: 324: }
  3021                           ;common.c: 326: for(unsigned char index = 0; index < 12;index++)
  3022  049E  01A4               	clrf	AD_Sample@index
  3023  049F                     l4174:	
  3024                           
  3025                           ;common.c: 327: buffer_Sample_AD_Value[index] = 0;
  3026  049F  1003               	clrc
  3027  04A0  0D24               	rlf	AD_Sample@index,w
  3028  04A1  3EA0               	addlw	_buffer_Sample_AD_Value& (0+255)
  3029  04A2  0084               	movwf	4
  3030  04A3  300C               	movlw	12
  3031  04A4  0180               	clrf	0
  3032  04A5  0A84               	incf	4,f
  3033  04A6  0180               	clrf	0
  3034  04A7  0AA4               	incf	AD_Sample@index,f
  3035  04A8  0224               	subwf	AD_Sample@index,w
  3036  04A9  1803               	btfsc	3,0
  3037  04AA  0008               	return
  3038  04AB  2C9F               	goto	l4174
  3039  04AC                     __end_of_AD_Sample:	
  3040  04AC                     __ptext734:	
  3041 ;; =============== function _setAdcSampleChannel ends ============
  3042                           
  3043                           
  3044 ;; *************** function _getAdOriginalValue *****************
  3045 ;; Defined at:
  3046 ;;		line 210 in file "C:\190604\AK7030-OTP\common.c"
  3047 ;; Parameters:    Size  Location     Type
  3048 ;;		None
  3049 ;; Auto vars:     Size  Location     Type
  3050 ;;		None
  3051 ;; Return value:  Size  Location     Type
  3052 ;;                  2    0[BANK0 ] unsigned int 
  3053 ;; Registers used:
  3054 ;;		wreg
  3055 ;; Tracked objects:
  3056 ;;		On entry : 60/0
  3057 ;;		On exit  : 60/0
  3058 ;;		Unchanged: FFF9F/0
  3059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3060 ;;      Params:         0       2       0       0       0
  3061 ;;      Locals:         0       0       0       0       0
  3062 ;;      Temps:          0       0       0       0       0
  3063 ;;      Totals:         0       2       0       0       0
  3064 ;;Total ram usage:        2 bytes
  3065 ;; Hardware stack levels used:    1
  3066 ;; Hardware stack levels required when called:    2
  3067 ;; This function calls:
  3068 ;;		Nothing
  3069 ;; This function is called by:
  3070 ;;		_AD_Sample
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073  04AC                     _getAdOriginalValue:	
  3074                           
  3075                           ;common.c: 211: return adc_original_value;
  3076                           
  3077                           ; Regs used in _getAdOriginalValue: [wreg]
  3078  04AC  1683               	bsf	3,5	;RP0=1, select bank1
  3079  04AD  0839               	movf	(_adc_original_value+1)^(0+128),w
  3080  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  3081  04AF  00A1               	movwf	?_getAdOriginalValue+1
  3082  04B0  1683               	bsf	3,5	;RP0=1, select bank1
  3083  04B1  0838               	movf	_adc_original_value^(0+128),w
  3084  04B2  1283               	bcf	3,5	;RP0=0, select bank0
  3085  04B3  00A0               	movwf	?_getAdOriginalValue
  3086  04B4  0008               	return
  3087  04B5                     __end_of_getAdOriginalValue:	
  3088  04B5                     __ptext746:	
  3089 ;; =============== function _isPermitSampleTime ends ============
  3090                           
  3091                           
  3092 ;; *************** function _adc_start *****************
  3093 ;; Defined at:
  3094 ;;		line 100 in file "C:\190604\AK7030-OTP\periph.c"
  3095 ;; Parameters:    Size  Location     Type
  3096 ;;		None
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;		None
  3099 ;; Return value:  Size  Location     Type
  3100 ;;		None               void
  3101 ;; Registers used:
  3102 ;;		None
  3103 ;; Tracked objects:
  3104 ;;		On entry : 40/20
  3105 ;;		On exit  : 60/0
  3106 ;;		Unchanged: FFF9F/0
  3107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3108 ;;      Params:         0       0       0       0       0
  3109 ;;      Locals:         0       0       0       0       0
  3110 ;;      Temps:          0       0       0       0       0
  3111 ;;      Totals:         0       0       0       0       0
  3112 ;;Total ram usage:        0 bytes
  3113 ;; Hardware stack levels used:    1
  3114 ;; Hardware stack levels required when called:    2
  3115 ;; This function calls:
  3116 ;;		Nothing
  3117 ;; This function is called by:
  3118 ;;		_main
  3119 ;;		_process_AD_Converter_Value
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122  04B5                     _adc_start:	
  3123  04B5                     l3900:	
  3124                           ; Regs used in _adc_start: []
  3125                           
  3126                           
  3127                           ;periph.c: 101: GO=1;
  3128  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  3129  04B6  149F               	bsf	31,1
  3130  04B7  0008               	return
  3131  04B8                     __end_of_adc_start:	
  3132  04B8                     __ptext733:	
  3133 ;; =============== function _clearAllTimer ends ============
  3134                           
  3135                           
  3136 ;; *************** function _setAdcSampleChannel *****************
  3137 ;; Defined at:
  3138 ;;		line 95 in file "C:\190604\AK7030-OTP\periph.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;  ucChannel       1    wreg     unsigned char 
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;  ucChannel       1    1[BANK0 ] unsigned char 
  3143 ;; Return value:  Size  Location     Type
  3144 ;;		None               void
  3145 ;; Registers used:
  3146 ;;		wreg, status,2, status,0
  3147 ;; Tracked objects:
  3148 ;;		On entry : 60/0
  3149 ;;		On exit  : 60/0
  3150 ;;		Unchanged: FFF9F/0
  3151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3152 ;;      Params:         0       0       0       0       0
  3153 ;;      Locals:         0       1       0       0       0
  3154 ;;      Temps:          0       1       0       0       0
  3155 ;;      Totals:         0       2       0       0       0
  3156 ;;Total ram usage:        2 bytes
  3157 ;; Hardware stack levels used:    1
  3158 ;; Hardware stack levels required when called:    2
  3159 ;; This function calls:
  3160 ;;		Nothing
  3161 ;; This function is called by:
  3162 ;;		_process_AD_Converter_Value
  3163 ;; This function uses a non-reentrant model
  3164 ;;
  3165  04B8                     _setAdcSampleChannel:	
  3166                           
  3167                           ; Regs used in _setAdcSampleChannel: [wreg+status,2+status,0]
  3168                           ;setAdcSampleChannel@ucChannel stored from wreg
  3169  04B8  00A1               	movwf	setAdcSampleChannel@ucChannel
  3170                           
  3171                           ;periph.c: 96: ADCON0|=ucChannel<<2;
  3172  04B9  00A0               	movwf	??_setAdcSampleChannel
  3173  04BA  1003               	clrc
  3174  04BB  0DA0               	rlf	??_setAdcSampleChannel,f
  3175  04BC  1003               	clrc
  3176  04BD  0D20               	rlf	??_setAdcSampleChannel,w
  3177  04BE  049F               	iorwf	31,f	;volatile
  3178  04BF  0008               	return
  3179  04C0                     __end_of_setAdcSampleChannel:	
  3180  04C0                     PL3:	
  3181  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  3182  04C1  1003               	clrc
  3183  04C2  0D50               	rlf	_sampleTimes,w
  3184  04C3  3EA0               	addlw	_buffer_Sample_AD_Value& (0+255)
  3185  04C4  0084               	movwf	4
  3186  04C5  0800               	movf	0,w
  3187  04C6  00A2               	movwf	??_AD_Sample
  3188  04C7  0A84               	incf	4,f
  3189  04C8  0800               	movf	0,w
  3190  04C9  00A3               	movwf	??_AD_Sample+1
  3191  04CA  1683               	bsf	3,5	;RP0=1, select bank1
  3192  04CB  0008               	return
  3193  04CC                     PL8:	
  3194  04CC  0D50               	rlf	_sampleTimes,w
  3195  04CD  3EA0               	addlw	_buffer_Sample_AD_Value& (0+255)
  3196  04CE  0084               	movwf	4
  3197  04CF  0800               	movf	0,w
  3198  04D0  1683               	bsf	3,5	;RP0=1, select bank1
  3199  04D1  0008               	return
  3200                           
  3201                           	psect	text727
  3202  059B                     __ptext727:	
  3203 ;; =============== function _process_AD_Converter_Value ends ============
  3204                           
  3205                           
  3206 ;; *************** function _clearPinPortAndTimer *****************
  3207 ;; Defined at:
  3208 ;;		line 92 in file "C:\190604\AK7030-OTP\main.c"
  3209 ;; Parameters:    Size  Location     Type
  3210 ;;		None
  3211 ;; Auto vars:     Size  Location     Type
  3212 ;;		None
  3213 ;; Return value:  Size  Location     Type
  3214 ;;		None               void
  3215 ;; Registers used:
  3216 ;;		status,2, status,0, pclath, cstack
  3217 ;; Tracked objects:
  3218 ;;		On entry : 160/0
  3219 ;;		On exit  : 160/0
  3220 ;;		Unchanged: FFE9F/0
  3221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3222 ;;      Params:         0       0       0       0       0
  3223 ;;      Locals:         0       0       0       0       0
  3224 ;;      Temps:          0       0       0       0       0
  3225 ;;      Totals:         0       0       0       0       0
  3226 ;;Total ram usage:        0 bytes
  3227 ;; Hardware stack levels used:    1
  3228 ;; Hardware stack levels required when called:    4
  3229 ;; This function calls:
  3230 ;;		_clearAllTimer
  3231 ;; This function is called by:
  3232 ;;		_main
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235  059B                     _clearPinPortAndTimer:	
  3236                           
  3237                           ;main.c: 93: PB0 = 0;
  3238                           
  3239                           ; Regs used in _clearPinPortAndTimer: [status,2+status,0+pclath+cstack]
  3240  059B  1006               	bcf	6,0
  3241                           
  3242                           ;main.c: 94: PA0 = 0;
  3243  059C  1005               	bcf	5,0
  3244                           
  3245                           ;main.c: 95: PA1 = 0;
  3246  059D  1085               	bcf	5,1
  3247                           
  3248                           ;main.c: 96: PA2 = 0;
  3249  059E  1105               	bcf	5,2
  3250                           
  3251                           ;main.c: 97: PA3 = 0;
  3252  059F  1185               	bcf	5,3
  3253                           
  3254                           ;main.c: 98: PAOD7 = 0;
  3255  05A0  1683               	bsf	3,5	;RP0=1, select bank3
  3256  05A1  1703               	bsf	3,6	;RP1=1, select bank3
  3257  05A2  1387               	bcf	7,7
  3258                           
  3259                           ;main.c: 99: PA7 = 0;
  3260  05A3  1283               	bcf	3,5	;RP0=0, select bank0
  3261  05A4  1303               	bcf	3,6	;RP1=0, select bank0
  3262  05A5  1385               	bcf	5,7
  3263                           
  3264                           ;main.c: 100: clearAllTimer();
  3265  05A6  2DA7               	ljmp	l4120
  3266  05A7                     __end_of_clearPinPortAndTimer:	
  3267  05A7                     __ptext732:	
  3268 ;; =============== function _getAdOriginalCh14Value ends ============
  3269                           
  3270                           
  3271 ;; *************** function _clearAllTimer *****************
  3272 ;; Defined at:
  3273 ;;		line 83 in file "C:\190604\AK7030-OTP\main.c"
  3274 ;; Parameters:    Size  Location     Type
  3275 ;;		None
  3276 ;; Auto vars:     Size  Location     Type
  3277 ;;		None
  3278 ;; Return value:  Size  Location     Type
  3279 ;;		None               void
  3280 ;; Registers used:
  3281 ;;		status,2, status,0, pclath, cstack
  3282 ;; Tracked objects:
  3283 ;;		On entry : 160/0
  3284 ;;		On exit  : 160/0
  3285 ;;		Unchanged: FFE9F/0
  3286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3287 ;;      Params:         0       0       0       0       0
  3288 ;;      Locals:         0       0       0       0       0
  3289 ;;      Temps:          0       0       0       0       0
  3290 ;;      Totals:         0       0       0       0       0
  3291 ;;Total ram usage:        0 bytes
  3292 ;; Hardware stack levels used:    1
  3293 ;; Hardware stack levels required when called:    3
  3294 ;; This function calls:
  3295 ;;		_clearTwelveHoursTimer
  3296 ;;		_clearThreeHoursTimer
  3297 ;;		_clearTwentySecondsTimer
  3298 ;; This function is called by:
  3299 ;;		_clearPinPortAndTimer
  3300 ;;		_main
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303  05A7                     _clearAllTimer:	
  3304  05A7                     l4120:	
  3305                           ; Regs used in _clearAllTimer: [status,2+status,0+pclath+cstack]
  3306                           
  3307                           
  3308                           ;main.c: 84: clearTwelveHoursTimer();
  3309  05A7  25AC  118A         	fcall	_clearTwelveHoursTimer
  3310                           
  3311                           ;main.c: 85: clearThreeHoursTimer();
  3312  05A9  25AF  118A         	fcall	_clearThreeHoursTimer
  3313                           
  3314                           ;main.c: 86: clearTwentySecondsTimer();
  3315  05AB  2DB2               	ljmp	l3858
  3316  05AC                     __end_of_clearAllTimer:	
  3317  05AC                     __ptext757:	
  3318 ;; =============== function _clearThreeHoursTimer ends ============
  3319                           
  3320                           
  3321 ;; *************** function _clearTwelveHoursTimer *****************
  3322 ;; Defined at:
  3323 ;;		line 363 in file "C:\190604\AK7030-OTP\common.c"
  3324 ;; Parameters:    Size  Location     Type
  3325 ;;		None
  3326 ;; Auto vars:     Size  Location     Type
  3327 ;;		None
  3328 ;; Return value:  Size  Location     Type
  3329 ;;		None               void
  3330 ;; Registers used:
  3331 ;;		status,2
  3332 ;; Tracked objects:
  3333 ;;		On entry : 160/0
  3334 ;;		On exit  : 160/0
  3335 ;;		Unchanged: FFE9F/0
  3336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3337 ;;      Params:         0       0       0       0       0
  3338 ;;      Locals:         0       0       0       0       0
  3339 ;;      Temps:          0       0       0       0       0
  3340 ;;      Totals:         0       0       0       0       0
  3341 ;;Total ram usage:        0 bytes
  3342 ;; Hardware stack levels used:    1
  3343 ;; Hardware stack levels required when called:    2
  3344 ;; This function calls:
  3345 ;;		Nothing
  3346 ;; This function is called by:
  3347 ;;		_clearAllTimer
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350  05AC                     _clearTwelveHoursTimer:	
  3351                           
  3352                           ;common.c: 364: uiBigTimer = 0;
  3353                           
  3354                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  3355  05AC  01C8               	clrf	_uiBigTimer
  3356  05AD  01C9               	clrf	_uiBigTimer+1
  3357  05AE  0008               	return
  3358  05AF                     __end_of_clearTwelveHoursTimer:	
  3359  05AF                     __ptext756:	
  3360 ;; =============== function _clearTwentySecondsTimer ends ============
  3361                           
  3362                           
  3363 ;; *************** function _clearThreeHoursTimer *****************
  3364 ;; Defined at:
  3365 ;;		line 369 in file "C:\190604\AK7030-OTP\common.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;		None
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;		None
  3370 ;; Return value:  Size  Location     Type
  3371 ;;		None               void
  3372 ;; Registers used:
  3373 ;;		status,2
  3374 ;; Tracked objects:
  3375 ;;		On entry : 160/0
  3376 ;;		On exit  : 160/0
  3377 ;;		Unchanged: FFE9F/0
  3378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3379 ;;      Params:         0       0       0       0       0
  3380 ;;      Locals:         0       0       0       0       0
  3381 ;;      Temps:          0       0       0       0       0
  3382 ;;      Totals:         0       0       0       0       0
  3383 ;;Total ram usage:        0 bytes
  3384 ;; Hardware stack levels used:    1
  3385 ;; Hardware stack levels required when called:    2
  3386 ;; This function calls:
  3387 ;;		Nothing
  3388 ;; This function is called by:
  3389 ;;		_clearAllTimer
  3390 ;;		_main
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393  05AF                     _clearThreeHoursTimer:	
  3394                           
  3395                           ;common.c: 370: uiSmallTimer = 0;
  3396                           
  3397                           ; Regs used in _clearThreeHoursTimer: [status,2]
  3398  05AF  01CA               	clrf	_uiSmallTimer
  3399  05B0  01CB               	clrf	_uiSmallTimer+1
  3400  05B1  0008               	return
  3401  05B2                     __end_of_clearThreeHoursTimer:	
  3402  05B2                     __ptext755:	
  3403 ;; =============== function _initPin ends ============
  3404                           
  3405                           
  3406 ;; *************** function _clearTwentySecondsTimer *****************
  3407 ;; Defined at:
  3408 ;;		line 374 in file "C:\190604\AK7030-OTP\common.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;		None
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;		None
  3413 ;; Return value:  Size  Location     Type
  3414 ;;		None               void
  3415 ;; Registers used:
  3416 ;;		status,2
  3417 ;; Tracked objects:
  3418 ;;		On entry : 160/0
  3419 ;;		On exit  : 160/0
  3420 ;;		Unchanged: FFE9F/0
  3421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3422 ;;      Params:         0       0       0       0       0
  3423 ;;      Locals:         0       0       0       0       0
  3424 ;;      Temps:          0       0       0       0       0
  3425 ;;      Totals:         0       0       0       0       0
  3426 ;;Total ram usage:        0 bytes
  3427 ;; Hardware stack levels used:    1
  3428 ;; Hardware stack levels required when called:    2
  3429 ;; This function calls:
  3430 ;;		Nothing
  3431 ;; This function is called by:
  3432 ;;		_clearAllTimer
  3433 ;; This function uses a non-reentrant model
  3434 ;;
  3435  05B2                     _clearTwentySecondsTimer:	
  3436  05B2                     l3858:	
  3437                           ; Regs used in _clearTwentySecondsTimer: [status,2]
  3438                           
  3439                           
  3440                           ;common.c: 375: uiTwentySecondsTimer = 0;
  3441  05B2  01CC               	clrf	_uiTwentySecondsTimer
  3442  05B3  01CD               	clrf	_uiTwentySecondsTimer+1
  3443  05B4  0008               	return
  3444  05B5                     __end_of_clearTwentySecondsTimer:	
  3445                           
  3446                           	psect	text729
  3447  04D2                     __ptext729:	
  3448 ;; =============== function _AD_Sample ends ============
  3449                           
  3450                           
  3451 ;; *************** function _getAdOriginaCh4Value *****************
  3452 ;; Defined at:
  3453 ;;		line 227 in file "C:\190604\AK7030-OTP\common.c"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;		None
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;		None
  3458 ;; Return value:  Size  Location     Type
  3459 ;;                  2   38[BANK0 ] unsigned int 
  3460 ;; Registers used:
  3461 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3462 ;; Tracked objects:
  3463 ;;		On entry : 60/0
  3464 ;;		On exit  : 160/0
  3465 ;;		Unchanged: FFE00/0
  3466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3467 ;;      Params:         0       2       0       0       0
  3468 ;;      Locals:         0       0       0       0       0
  3469 ;;      Temps:          0       0       0       0       0
  3470 ;;      Totals:         0       2       0       0       0
  3471 ;;Total ram usage:        2 bytes
  3472 ;; Hardware stack levels used:    1
  3473 ;; Hardware stack levels required when called:    3
  3474 ;; This function calls:
  3475 ;;		_Filter
  3476 ;; This function is called by:
  3477 ;;		_main
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480  04D2                     _getAdOriginaCh4Value:	
  3481                           
  3482                           ;common.c: 229: return Filter(uiSampleChannelFourth);
  3483                           
  3484                           ; Regs used in _getAdOriginaCh4Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  3485  04D2  30D6               	movlw	_uiSampleChannelFourth& (0+255)
  3486  04D3  00A0               	movwf	?_Filter
  3487  04D4  01A1               	clrf	?_Filter+1
  3488  04D5  24EE               	fcall	_Filter
  3489  04D6  0821               	movf	?_Filter+1,w
  3490  04D7  00C7               	movwf	?_getAdOriginaCh4Value+1
  3491  04D8  0820               	movf	?_Filter,w
  3492  04D9  00C6               	movwf	?_getAdOriginaCh4Value
  3493  04DA  0008               	return
  3494  04DB                     __end_of_getAdOriginaCh4Value:	
  3495  04DB                     __ptext730:	
  3496 ;; =============== function _getAdOriginaCh4Value ends ============
  3497                           
  3498                           
  3499 ;; *************** function _getAdOriginalCh1Value *****************
  3500 ;; Defined at:
  3501 ;;		line 215 in file "C:\190604\AK7030-OTP\common.c"
  3502 ;; Parameters:    Size  Location     Type
  3503 ;;		None
  3504 ;; Auto vars:     Size  Location     Type
  3505 ;;		None
  3506 ;; Return value:  Size  Location     Type
  3507 ;;                  2   38[BANK0 ] unsigned int 
  3508 ;; Registers used:
  3509 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3510 ;; Tracked objects:
  3511 ;;		On entry : 60/0
  3512 ;;		On exit  : 160/0
  3513 ;;		Unchanged: FFE00/0
  3514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3515 ;;      Params:         0       2       0       0       0
  3516 ;;      Locals:         0       0       0       0       0
  3517 ;;      Temps:          0       0       0       0       0
  3518 ;;      Totals:         0       2       0       0       0
  3519 ;;Total ram usage:        2 bytes
  3520 ;; Hardware stack levels used:    1
  3521 ;; Hardware stack levels required when called:    3
  3522 ;; This function calls:
  3523 ;;		_Filter
  3524 ;; This function is called by:
  3525 ;;		_main
  3526 ;; This function uses a non-reentrant model
  3527 ;;
  3528  04DB                     _getAdOriginalCh1Value:	
  3529                           
  3530                           ;common.c: 218: return Filter(uiSampleChannelFirst);
  3531                           
  3532                           ; Regs used in _getAdOriginalCh1Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  3533  04DB  30BE               	movlw	_uiSampleChannelFirst& (0+255)
  3534  04DC  00A0               	movwf	?_Filter
  3535  04DD  01A1               	clrf	?_Filter+1
  3536  04DE  24EE               	fcall	_Filter
  3537  04DF  0821               	movf	?_Filter+1,w
  3538  04E0  00C7               	movwf	?_getAdOriginalCh1Value+1
  3539  04E1  0820               	movf	?_Filter,w
  3540  04E2  00C6               	movwf	?_getAdOriginalCh1Value
  3541  04E3  0008               	return
  3542  04E4                     __end_of_getAdOriginalCh1Value:	
  3543  04E4                     __ptext731:	
  3544 ;; =============== function _getAdOriginalCh1Value ends ============
  3545                           
  3546                           
  3547 ;; *************** function _getAdOriginalCh14Value *****************
  3548 ;; Defined at:
  3549 ;;		line 238 in file "C:\190604\AK7030-OTP\common.c"
  3550 ;; Parameters:    Size  Location     Type
  3551 ;;		None
  3552 ;; Auto vars:     Size  Location     Type
  3553 ;;		None
  3554 ;; Return value:  Size  Location     Type
  3555 ;;                  2   38[BANK0 ] unsigned int 
  3556 ;; Registers used:
  3557 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3558 ;; Tracked objects:
  3559 ;;		On entry : 60/0
  3560 ;;		On exit  : 160/0
  3561 ;;		Unchanged: FFE00/0
  3562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3563 ;;      Params:         0       2       0       0       0
  3564 ;;      Locals:         0       0       0       0       0
  3565 ;;      Temps:          0       0       0       0       0
  3566 ;;      Totals:         0       2       0       0       0
  3567 ;;Total ram usage:        2 bytes
  3568 ;; Hardware stack levels used:    1
  3569 ;; Hardware stack levels required when called:    3
  3570 ;; This function calls:
  3571 ;;		_Filter
  3572 ;; This function is called by:
  3573 ;;		_main
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576  04E4                     _getAdOriginalCh14Value:	
  3577                           
  3578                           ;common.c: 240: return Filter(uiSampleChannelFourteenth);
  3579                           
  3580                           ; Regs used in _getAdOriginalCh14Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  3581  04E4  3090               	movlw	_uiSampleChannelFourteenth& (0+255)
  3582  04E5  00A0               	movwf	?_Filter
  3583  04E6  3001               	movlw	1
  3584  04E7  00A1               	movwf	?_Filter+1
  3585  04E8  24EE               	fcall	_Filter
  3586  04E9  0821               	movf	?_Filter+1,w
  3587  04EA  00C7               	movwf	?_getAdOriginalCh14Value+1
  3588  04EB  0820               	movf	?_Filter,w
  3589  04EC  00C6               	movwf	?_getAdOriginalCh14Value
  3590  04ED  0008               	return
  3591  04EE                     __end_of_getAdOriginalCh14Value:	
  3592  04EE                     __ptext737:	
  3593 ;; =============== function _getAD_ConvertFlag ends ============
  3594                           
  3595                           
  3596 ;; *************** function _Filter *****************
  3597 ;; Defined at:
  3598 ;;		line 49 in file "C:\190604\AK7030-OTP\common.c"
  3599 ;; Parameters:    Size  Location     Type
  3600 ;;  tmpValue        2    0[BANK0 ] PTR int 
  3601 ;;		 -> uiSampleChannelFourteenth(24), uiSampleChannelFourth(24), uiSampleChannelFirst(24), 
  3602 ;; Auto vars:     Size  Location     Type
  3603 ;;  cir             2   34[BANK0 ] int 
  3604 ;;  filter_buf     24    6[BANK0 ] unsigned int [12]
  3605 ;;  filter_sum      2   32[BANK0 ] unsigned int 
  3606 ;;  filter_temp     2   30[BANK0 ] unsigned int 
  3607 ;;  i               1   37[BANK0 ] unsigned char 
  3608 ;;  j               1   36[BANK0 ] unsigned char 
  3609 ;; Return value:  Size  Location     Type
  3610 ;;                  2    0[BANK0 ] unsigned int 
  3611 ;; Registers used:
  3612 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3613 ;; Tracked objects:
  3614 ;;		On entry : 60/0
  3615 ;;		On exit  : 160/0
  3616 ;;		Unchanged: FFE00/0
  3617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3618 ;;      Params:         0       2       0       0       0
  3619 ;;      Locals:         0      32       0       0       0
  3620 ;;      Temps:          0       4       0       0       0
  3621 ;;      Totals:         0      38       0       0       0
  3622 ;;Total ram usage:       38 bytes
  3623 ;; Hardware stack levels used:    1
  3624 ;; Hardware stack levels required when called:    2
  3625 ;; This function calls:
  3626 ;;		Nothing
  3627 ;; This function is called by:
  3628 ;;		_getAdOriginalCh1Value
  3629 ;;		_getAdOriginaCh4Value
  3630 ;;		_getAdOriginalCh14Value
  3631 ;; This function uses a non-reentrant model
  3632 ;;
  3633  04EE                     _Filter:	
  3634                           
  3635                           ; Regs used in _Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  3636  04EE  01C4               	clrf	Filter@j
  3637                           
  3638                           ;common.c: 53: unsigned int filter_temp = 0, filter_sum = 0;
  3639  04EF  01BE               	clrf	Filter@filter_temp
  3640  04F0  01BF               	clrf	Filter@filter_temp+1
  3641  04F1  01C0               	clrf	Filter@filter_sum
  3642  04F2  01C1               	clrf	Filter@filter_sum+1
  3643                           
  3644                           ;common.c: 55: unsigned int filter_buf[12];
  3645                           ;common.c: 57: for(int cir = 0;cir < 12; cir++)
  3646  04F3  01C2               	clrf	Filter@cir
  3647  04F4  01C3               	clrf	Filter@cir+1
  3648  04F5                     l3968:	
  3649                           
  3650                           ;common.c: 58: filter_buf[cir] = *tmpValue++;
  3651  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  3652  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  3653  04F7  0820               	movf	Filter@tmpValue,w
  3654  04F8  0084               	movwf	4
  3655  04F9  1783               	bsf	3,7
  3656  04FA  1C21               	btfss	Filter@tmpValue+1,0
  3657  04FB  1383               	bcf	3,7
  3658  04FC  0800               	movf	0,w
  3659  04FD  258F  118A         	fcall	PL6	;call to abstracted procedure
  3660  04FF  0D42               	rlf	Filter@cir,w
  3661  0500  3E26               	addlw	Filter@filter_buf& (0+255)
  3662  0501  0084               	movwf	4
  3663  0502  0822               	movf	??_Filter,w
  3664  0503  1383               	bcf	3,7	;select IRP bank0
  3665  0504  0080               	movwf	0
  3666  0505  0A84               	incf	4,f
  3667  0506  0823               	movf	??_Filter+1,w
  3668  0507  0080               	movwf	0
  3669  0508  3002               	movlw	2
  3670  0509  07A0               	addwf	Filter@tmpValue,f
  3671  050A  1803               	skipnc
  3672  050B  0AA1               	incf	Filter@tmpValue+1,f
  3673  050C  0AC2               	incf	Filter@cir,f
  3674  050D  1903               	skipnz
  3675  050E  0AC3               	incf	Filter@cir+1,f
  3676  050F  0843               	movf	Filter@cir+1,w
  3677  0510  3A80               	xorlw	128
  3678  0511  00FF               	movwf	127
  3679  0512  3080               	movlw	128
  3680  0513  027F               	subwf	127,w
  3681  0514  1D03               	skipz
  3682  0515  2D18               	goto	u995
  3683  0516  300C               	movlw	12
  3684  0517  0242               	subwf	Filter@cir,w
  3685  0518                     u995:	
  3686  0518  1C03               	skipc
  3687  0519  2CF5               	goto	l3968
  3688                           
  3689                           ;common.c: 61: for(j = 0; j < 12 - 1; j++)
  3690  051A  1283               	bcf	3,5	;RP0=0, select bank0
  3691  051B  1303               	bcf	3,6	;RP1=0, select bank0
  3692  051C  01C4               	clrf	Filter@j
  3693  051D                     l3982:	
  3694                           
  3695                           ;common.c: 62: {
  3696                           ;common.c: 63: for(i = 0; i < 12 - 1 - j; i++)
  3697  051D  01C5               	clrf	Filter@i
  3698  051E                     l3990:	
  3699  051E  01A3               	clrf	??_Filter+1
  3700  051F  0844               	movf	Filter@j,w
  3701  0520  3C0B               	sublw	11
  3702  0521  00A2               	movwf	??_Filter
  3703  0522  1C03               	skipc
  3704  0523  03A3               	decf	??_Filter+1,f
  3705  0524  0823               	movf	??_Filter+1,w
  3706  0525  3A80               	xorlw	128
  3707  0526  3C80               	sublw	128
  3708  0527  1D03               	skipz
  3709  0528  2D2B               	goto	u1015
  3710  0529  0822               	movf	??_Filter,w
  3711  052A  0245               	subwf	Filter@i,w
  3712  052B                     u1015:	
  3713  052B  1803               	btfsc	3,0
  3714  052C  2D60               	goto	l3992
  3715                           
  3716                           ;common.c: 64: {
  3717                           ;common.c: 65: if(filter_buf[i] > filter_buf[i + 1])
  3718  052D  1283               	bcf	3,5	;RP0=0, select bank0
  3719  052E  1303               	bcf	3,6	;RP1=0, select bank0
  3720  052F  1003               	clrc
  3721  0530  2585  118A         	fcall	PL4	;call to abstracted procedure
  3722  0532  2595  118A         	fcall	PL7	;call to abstracted procedure
  3723  0534  0800               	movf	0,w
  3724  0535  00A4               	movwf	??_Filter+2
  3725  0536  0A84               	incf	4,f
  3726  0537  0800               	movf	0,w
  3727  0538  00A5               	movwf	??_Filter+3
  3728  0539  0823               	movf	??_Filter+1,w
  3729  053A  0225               	subwf	??_Filter+3,w
  3730  053B  1D03               	skipz
  3731  053C  2D3F               	goto	u1005
  3732  053D  0822               	movf	??_Filter,w
  3733  053E  0224               	subwf	??_Filter+2,w
  3734  053F                     u1005:	
  3735  053F  1803               	skipnc
  3736  0540  2D5E               	goto	l3988
  3737                           
  3738                           ;common.c: 66: {
  3739                           ;common.c: 68: filter_temp = filter_buf[i];
  3740  0541  1003               	clrc
  3741  0542  0D45               	rlf	Filter@i,w
  3742  0543  3E26               	addlw	Filter@filter_buf& (0+255)
  3743  0544  0084               	movwf	4
  3744  0545  0800               	movf	0,w
  3745  0546  00BE               	movwf	Filter@filter_temp
  3746  0547  0A84               	incf	4,f
  3747  0548  0800               	movf	0,w
  3748  0549  00BF               	movwf	Filter@filter_temp+1
  3749                           
  3750                           ;common.c: 70: filter_buf[i] = filter_buf[i + 1];
  3751  054A  2595  118A         	fcall	PL7	;call to abstracted procedure
  3752  054C  0800               	movf	0,w
  3753  054D  258F  118A         	fcall	PL6	;call to abstracted procedure
  3754  054F  0D45               	rlf	Filter@i,w
  3755  0550  3E26               	addlw	Filter@filter_buf& (0+255)
  3756  0551  0084               	movwf	4
  3757  0552  0822               	movf	??_Filter,w
  3758  0553  0080               	movwf	0
  3759  0554  0A84               	incf	4,f
  3760  0555  0823               	movf	??_Filter+1,w
  3761  0556  0080               	movwf	0
  3762                           
  3763                           ;common.c: 72: filter_buf[i + 1] = filter_temp;
  3764  0557  2595  118A         	fcall	PL7	;call to abstracted procedure
  3765  0559  083E               	movf	Filter@filter_temp,w
  3766  055A  0080               	movwf	0
  3767  055B  0A84               	incf	4,f
  3768  055C  083F               	movf	Filter@filter_temp+1,w
  3769  055D  0080               	movwf	0
  3770  055E                     l3988:	
  3771  055E  0AC5               	incf	Filter@i,f
  3772  055F  2D1E               	goto	l3990
  3773  0560                     l3992:	
  3774  0560  1283               	bcf	3,5	;RP0=0, select bank0
  3775  0561  300B               	movlw	11
  3776  0562  1303               	bcf	3,6	;RP1=0, select bank0
  3777  0563  0AC4               	incf	Filter@j,f
  3778  0564  0244               	subwf	Filter@j,w
  3779  0565  1C03               	skipc
  3780  0566  2D1D               	goto	l3982
  3781                           
  3782                           ;common.c: 73: }
  3783                           ;common.c: 74: }
  3784                           ;common.c: 75: }
  3785                           ;common.c: 77: for(i = 2; i < 12 - 2; i++)
  3786  0567  3002               	movlw	2
  3787  0568  00C5               	movwf	Filter@i
  3788                           
  3789                           ;common.c: 78: {
  3790                           ;common.c: 79: filter_sum += filter_buf[i];
  3791  0569  1003               	clrc
  3792  056A                     L12:	
  3793  056A  2585  118A         	fcall	PL4	;call to abstracted procedure
  3794  056C  0822               	movf	??_Filter,w
  3795  056D  07C0               	addwf	Filter@filter_sum,f
  3796  056E  1803               	skipnc
  3797  056F  0AC1               	incf	Filter@filter_sum+1,f
  3798  0570  0823               	movf	??_Filter+1,w
  3799  0571  07C1               	addwf	Filter@filter_sum+1,f
  3800  0572  300A               	movlw	10
  3801  0573  0AC5               	incf	Filter@i,f
  3802  0574  0245               	subwf	Filter@i,w
  3803  0575  1C03               	skipc
  3804  0576  2D6A               	goto	L12
  3805                           
  3806                           ;common.c: 80: }
  3807                           ;common.c: 82: return (filter_sum >> 3);
  3808  0577  0841               	movf	Filter@filter_sum+1,w
  3809  0578  00A1               	movwf	?_Filter+1
  3810  0579  0840               	movf	Filter@filter_sum,w
  3811  057A  00A0               	movwf	?_Filter
  3812  057B  1003               	clrc
  3813  057C  0CA1               	rrf	?_Filter+1,f
  3814  057D  0CA0               	rrf	?_Filter,f
  3815  057E  1003               	clrc
  3816  057F  0CA1               	rrf	?_Filter+1,f
  3817  0580  0CA0               	rrf	?_Filter,f
  3818  0581  1003               	clrc
  3819  0582  0CA1               	rrf	?_Filter+1,f
  3820  0583  0CA0               	rrf	?_Filter,f
  3821  0584  0008               	return
  3822  0585                     __end_of_Filter:	
  3823  0585                     PL4:	
  3824  0585  0D45               	rlf	Filter@i,w
  3825  0586  3E26               	addlw	Filter@filter_buf& (0+255)
  3826  0587  0084               	movwf	4
  3827  0588  1383               	bcf	3,7	;select IRP bank0
  3828  0589  0800               	movf	0,w
  3829  058A  00A2               	movwf	??_Filter
  3830  058B  0A84               	incf	4,f
  3831  058C  0800               	movf	0,w
  3832  058D  00A3               	movwf	??_Filter+1
  3833  058E  0008               	return
  3834  058F                     PL6:	
  3835  058F  00A2               	movwf	??_Filter
  3836  0590  0A84               	incf	4,f
  3837  0591  0800               	movf	0,w
  3838  0592  00A3               	movwf	??_Filter+1
  3839  0593  1003               	clrc
  3840  0594  0008               	return
  3841  0595                     PL7:	
  3842  0595  1003               	clrc
  3843  0596  0D45               	rlf	Filter@i,w
  3844  0597  3E02               	addlw	2
  3845  0598  3E26               	addlw	Filter@filter_buf& (0+255)
  3846  0599  0084               	movwf	4
  3847  059A  0008               	return
  3848                           
  3849                           	psect	text738
  3850  0652                     __ptext738:	
  3851 ;; =============== function _Filter ends ============
  3852                           
  3853                           
  3854 ;; *************** function _isFinishedThreeHoursTimer *****************
  3855 ;; Defined at:
  3856 ;;		line 414 in file "C:\190604\AK7030-OTP\common.c"
  3857 ;; Parameters:    Size  Location     Type
  3858 ;;		None
  3859 ;; Auto vars:     Size  Location     Type
  3860 ;;		None
  3861 ;; Return value:  Size  Location     Type
  3862 ;;                  1    wreg      unsigned char 
  3863 ;; Registers used:
  3864 ;;		wreg, status,2, status,0
  3865 ;; Tracked objects:
  3866 ;;		On entry : 60/0
  3867 ;;		On exit  : 60/0
  3868 ;;		Unchanged: FFF9F/0
  3869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3870 ;;      Params:         0       0       0       0       0
  3871 ;;      Locals:         0       0       0       0       0
  3872 ;;      Temps:          0       0       0       0       0
  3873 ;;      Totals:         0       0       0       0       0
  3874 ;;Total ram usage:        0 bytes
  3875 ;; Hardware stack levels used:    1
  3876 ;; Hardware stack levels required when called:    2
  3877 ;; This function calls:
  3878 ;;		Nothing
  3879 ;; This function is called by:
  3880 ;;		_main
  3881 ;; This function uses a non-reentrant model
  3882 ;;
  3883  0652                     _isFinishedThreeHoursTimer:	
  3884                           
  3885                           ;common.c: 415: if(uiSmallTimer == 0)
  3886                           
  3887                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  3888  0652  084B               	movf	_uiSmallTimer+1,w
  3889  0653  044A               	iorwf	_uiSmallTimer,w
  3890  0654  1903               	btfsc	3,2
  3891                           
  3892                           ;common.c: 416: return 1;
  3893  0655  3401               	retlw	1
  3894                           
  3895                           ;common.c: 417: else
  3896                           ;common.c: 418: return 0;
  3897  0656  3400               	retlw	0
  3898  0657                     __end_of_isFinishedThreeHoursTimer:	
  3899                           
  3900                           	psect	text739
  3901  0621                     __ptext739:	
  3902 ;; =============== function _isFinishedThreeHoursTimer ends ============
  3903                           
  3904                           
  3905 ;; *************** function _startThreeHoursTimer *****************
  3906 ;; Defined at:
  3907 ;;		line 380 in file "C:\190604\AK7030-OTP\common.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;		None
  3912 ;; Return value:  Size  Location     Type
  3913 ;;		None               void
  3914 ;; Registers used:
  3915 ;;		wreg, status,2, status,0
  3916 ;; Tracked objects:
  3917 ;;		On entry : 60/0
  3918 ;;		On exit  : 60/0
  3919 ;;		Unchanged: FFF9F/0
  3920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3921 ;;      Params:         0       2       0       0       0
  3922 ;;      Locals:         0       0       0       0       0
  3923 ;;      Temps:          0       0       0       0       0
  3924 ;;      Totals:         0       2       0       0       0
  3925 ;;Total ram usage:        2 bytes
  3926 ;; Hardware stack levels used:    1
  3927 ;; Hardware stack levels required when called:    2
  3928 ;; This function calls:
  3929 ;;		Nothing
  3930 ;; This function is called by:
  3931 ;;		_main
  3932 ;; This function uses a non-reentrant model
  3933 ;;
  3934  0621                     _startThreeHoursTimer:	
  3935                           
  3936                           ;common.c: 381: if(0 == uiSmallTimer)
  3937                           
  3938                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  3939  0621  084B               	movf	_uiSmallTimer+1,w
  3940  0622  044A               	iorwf	_uiSmallTimer,w
  3941  0623  1D03               	skipz
  3942  0624  0008               	return
  3943                           
  3944                           ;common.c: 382: uiSmallTimer = uiSetTime;
  3945  0625  0821               	movf	startThreeHoursTimer@uiSetTime+1,w
  3946  0626  00CB               	movwf	_uiSmallTimer+1
  3947  0627  0820               	movf	startThreeHoursTimer@uiSetTime,w
  3948  0628  00CA               	movwf	_uiSmallTimer
  3949  0629  0008               	return
  3950  062A                     __end_of_startThreeHoursTimer:	
  3951                           
  3952                           	psect	text740
  3953  0657                     __ptext740:	
  3954 ;; =============== function _startThreeHoursTimer ends ============
  3955                           
  3956                           
  3957 ;; *************** function _isFinishedTwentySecondsTimer *****************
  3958 ;; Defined at:
  3959 ;;		line 397 in file "C:\190604\AK7030-OTP\common.c"
  3960 ;; Parameters:    Size  Location     Type
  3961 ;;		None
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;		None
  3964 ;; Return value:  Size  Location     Type
  3965 ;;                  1    wreg      unsigned char 
  3966 ;; Registers used:
  3967 ;;		wreg, status,2, status,0
  3968 ;; Tracked objects:
  3969 ;;		On entry : 60/0
  3970 ;;		On exit  : 60/0
  3971 ;;		Unchanged: FFF9F/0
  3972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3973 ;;      Params:         0       0       0       0       0
  3974 ;;      Locals:         0       0       0       0       0
  3975 ;;      Temps:          0       0       0       0       0
  3976 ;;      Totals:         0       0       0       0       0
  3977 ;;Total ram usage:        0 bytes
  3978 ;; Hardware stack levels used:    1
  3979 ;; Hardware stack levels required when called:    2
  3980 ;; This function calls:
  3981 ;;		Nothing
  3982 ;; This function is called by:
  3983 ;;		_main
  3984 ;; This function uses a non-reentrant model
  3985 ;;
  3986  0657                     _isFinishedTwentySecondsTimer:	
  3987                           
  3988                           ;common.c: 398: if(0 == uiTwentySecondsTimer)
  3989                           
  3990                           ; Regs used in _isFinishedTwentySecondsTimer: [wreg+status,2+status,0]
  3991  0657  084D               	movf	_uiTwentySecondsTimer+1,w
  3992  0658  044C               	iorwf	_uiTwentySecondsTimer,w
  3993  0659  1903               	btfsc	3,2
  3994                           
  3995                           ;common.c: 399: return 1;
  3996  065A  3401               	retlw	1
  3997                           
  3998                           ;common.c: 400: else
  3999                           ;common.c: 401: return 0;
  4000  065B  3400               	retlw	0
  4001  065C                     __end_of_isFinishedTwentySecondsTimer:	
  4002                           
  4003                           	psect	text741
  4004  0666                     __ptext741:	
  4005 ;; =============== function _isFinishedTwentySecondsTimer ends ============
  4006                           
  4007                           
  4008 ;; *************** function _startTwentySecondsTimer *****************
  4009 ;; Defined at:
  4010 ;;		line 391 in file "C:\190604\AK7030-OTP\common.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;		None
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;		None
  4015 ;; Return value:  Size  Location     Type
  4016 ;;		None               void
  4017 ;; Registers used:
  4018 ;;		wreg
  4019 ;; Tracked objects:
  4020 ;;		On entry : 60/0
  4021 ;;		On exit  : 60/0
  4022 ;;		Unchanged: FFF9F/0
  4023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4024 ;;      Params:         0       0       0       0       0
  4025 ;;      Locals:         0       0       0       0       0
  4026 ;;      Temps:          0       0       0       0       0
  4027 ;;      Totals:         0       0       0       0       0
  4028 ;;Total ram usage:        0 bytes
  4029 ;; Hardware stack levels used:    1
  4030 ;; Hardware stack levels required when called:    2
  4031 ;; This function calls:
  4032 ;;		Nothing
  4033 ;; This function is called by:
  4034 ;;		_main
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037  0666                     _startTwentySecondsTimer:	
  4038                           
  4039                           ;common.c: 392: uiTwentySecondsTimer = 20;
  4040                           
  4041                           ; Regs used in _startTwentySecondsTimer: [wreg]
  4042  0666  3014               	movlw	20
  4043  0667  00CC               	movwf	_uiTwentySecondsTimer
  4044  0668  01CD               	clrf	_uiTwentySecondsTimer+1
  4045  0669  0008               	return
  4046  066A                     __end_of_startTwentySecondsTimer:	
  4047                           
  4048                           	psect	text742
  4049  065C                     __ptext742:	
  4050 ;; =============== function _startTwentySecondsTimer ends ============
  4051                           
  4052                           
  4053 ;; *************** function _isFinishedTwelveHoursTimer *****************
  4054 ;; Defined at:
  4055 ;;		line 406 in file "C:\190604\AK7030-OTP\common.c"
  4056 ;; Parameters:    Size  Location     Type
  4057 ;;		None
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;		None
  4060 ;; Return value:  Size  Location     Type
  4061 ;;                  1    wreg      unsigned char 
  4062 ;; Registers used:
  4063 ;;		wreg, status,2, status,0
  4064 ;; Tracked objects:
  4065 ;;		On entry : 60/0
  4066 ;;		On exit  : 60/0
  4067 ;;		Unchanged: FFF9F/0
  4068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4069 ;;      Params:         0       0       0       0       0
  4070 ;;      Locals:         0       0       0       0       0
  4071 ;;      Temps:          0       0       0       0       0
  4072 ;;      Totals:         0       0       0       0       0
  4073 ;;Total ram usage:        0 bytes
  4074 ;; Hardware stack levels used:    1
  4075 ;; Hardware stack levels required when called:    2
  4076 ;; This function calls:
  4077 ;;		Nothing
  4078 ;; This function is called by:
  4079 ;;		_main
  4080 ;; This function uses a non-reentrant model
  4081 ;;
  4082  065C                     _isFinishedTwelveHoursTimer:	
  4083                           
  4084                           ;common.c: 407: if(uiBigTimer == 0)
  4085                           
  4086                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  4087  065C  0849               	movf	_uiBigTimer+1,w
  4088  065D  0448               	iorwf	_uiBigTimer,w
  4089  065E  1903               	btfsc	3,2
  4090                           
  4091                           ;common.c: 408: return 1;
  4092  065F  3401               	retlw	1
  4093                           
  4094                           ;common.c: 409: else
  4095                           ;common.c: 410: return 0;
  4096  0660  3400               	retlw	0
  4097  0661                     __end_of_isFinishedTwelveHoursTimer:	
  4098                           
  4099                           	psect	text743
  4100  062A                     __ptext743:	
  4101 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  4102                           
  4103                           
  4104 ;; *************** function _startTwelveHourTimer *****************
  4105 ;; Defined at:
  4106 ;;		line 352 in file "C:\190604\AK7030-OTP\common.c"
  4107 ;; Parameters:    Size  Location     Type
  4108 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  4109 ;; Auto vars:     Size  Location     Type
  4110 ;;		None
  4111 ;; Return value:  Size  Location     Type
  4112 ;;		None               void
  4113 ;; Registers used:
  4114 ;;		wreg, status,2, status,0
  4115 ;; Tracked objects:
  4116 ;;		On entry : 60/0
  4117 ;;		On exit  : 60/0
  4118 ;;		Unchanged: FFF9F/0
  4119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4120 ;;      Params:         0       2       0       0       0
  4121 ;;      Locals:         0       0       0       0       0
  4122 ;;      Temps:          0       0       0       0       0
  4123 ;;      Totals:         0       2       0       0       0
  4124 ;;Total ram usage:        2 bytes
  4125 ;; Hardware stack levels used:    1
  4126 ;; Hardware stack levels required when called:    2
  4127 ;; This function calls:
  4128 ;;		Nothing
  4129 ;; This function is called by:
  4130 ;;		_main
  4131 ;; This function uses a non-reentrant model
  4132 ;;
  4133  062A                     _startTwelveHourTimer:	
  4134                           
  4135                           ;common.c: 353: if(0 == uiBigTimer)
  4136                           
  4137                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  4138  062A  0849               	movf	_uiBigTimer+1,w
  4139  062B  0448               	iorwf	_uiBigTimer,w
  4140  062C  1D03               	skipz
  4141  062D  0008               	return
  4142                           
  4143                           ;common.c: 354: uiBigTimer = uiSetTime;
  4144  062E  0821               	movf	startTwelveHourTimer@uiSetTime+1,w
  4145  062F  00C9               	movwf	_uiBigTimer+1
  4146  0630  0820               	movf	startTwelveHourTimer@uiSetTime,w
  4147  0631  00C8               	movwf	_uiBigTimer
  4148  0632  0008               	return
  4149  0633                     __end_of_startTwelveHourTimer:	
  4150                           
  4151                           	psect	text744
  4152  066D                     __ptext744:	
  4153 ;; =============== function _startTwelveHourTimer ends ============
  4154                           
  4155                           
  4156 ;; *************** function _clrSampeTime *****************
  4157 ;; Defined at:
  4158 ;;		line 432 in file "C:\190604\AK7030-OTP\common.c"
  4159 ;; Parameters:    Size  Location     Type
  4160 ;;		None
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;		None
  4163 ;; Return value:  Size  Location     Type
  4164 ;;		None               void
  4165 ;; Registers used:
  4166 ;;		status,2
  4167 ;; Tracked objects:
  4168 ;;		On entry : 60/0
  4169 ;;		On exit  : 60/0
  4170 ;;		Unchanged: FFF9F/0
  4171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4172 ;;      Params:         0       0       0       0       0
  4173 ;;      Locals:         0       0       0       0       0
  4174 ;;      Temps:          0       0       0       0       0
  4175 ;;      Totals:         0       0       0       0       0
  4176 ;;Total ram usage:        0 bytes
  4177 ;; Hardware stack levels used:    1
  4178 ;; Hardware stack levels required when called:    2
  4179 ;; This function calls:
  4180 ;;		Nothing
  4181 ;; This function is called by:
  4182 ;;		_main
  4183 ;; This function uses a non-reentrant model
  4184 ;;
  4185  066D                     _clrSampeTime:	
  4186                           
  4187                           ;common.c: 433: timer.timer10msStopWatch = 0;
  4188                           
  4189                           ; Regs used in _clrSampeTime: [status,2]
  4190  066D  01D1               	clrf	_timer
  4191  066E  0008               	return
  4192  066F                     __end_of_clrSampeTime:	
  4193                           
  4194                           	psect	text745
  4195  064B                     __ptext745:	
  4196 ;; =============== function _clrSampeTime ends ============
  4197                           
  4198                           
  4199 ;; *************** function _isPermitSampleTime *****************
  4200 ;; Defined at:
  4201 ;;		line 422 in file "C:\190604\AK7030-OTP\common.c"
  4202 ;; Parameters:    Size  Location     Type
  4203 ;;		None
  4204 ;; Auto vars:     Size  Location     Type
  4205 ;;		None
  4206 ;; Return value:  Size  Location     Type
  4207 ;;                  1    wreg      unsigned char 
  4208 ;; Registers used:
  4209 ;;		wreg
  4210 ;; Tracked objects:
  4211 ;;		On entry : 0/0
  4212 ;;		On exit  : 60/0
  4213 ;;		Unchanged: FFF9F/0
  4214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4215 ;;      Params:         0       0       0       0       0
  4216 ;;      Locals:         0       0       0       0       0
  4217 ;;      Temps:          0       0       0       0       0
  4218 ;;      Totals:         0       0       0       0       0
  4219 ;;Total ram usage:        0 bytes
  4220 ;; Hardware stack levels used:    1
  4221 ;; Hardware stack levels required when called:    2
  4222 ;; This function calls:
  4223 ;;		Nothing
  4224 ;; This function is called by:
  4225 ;;		_main
  4226 ;; This function uses a non-reentrant model
  4227 ;;
  4228  064B                     _isPermitSampleTime:	
  4229                           
  4230                           ;common.c: 423: if(timer.timer10msStopWatch >= 10)
  4231                           
  4232                           ; Regs used in _isPermitSampleTime: [wreg]
  4233  064B  300A               	movlw	10
  4234  064C  1283               	bcf	3,5	;RP0=0, select bank0
  4235  064D  1303               	bcf	3,6	;RP1=0, select bank0
  4236  064E  0251               	subwf	_timer,w
  4237  064F  1803               	btfsc	3,0
  4238                           
  4239                           ;common.c: 424: {
  4240                           ;common.c: 425: return 1;
  4241  0650  3401               	retlw	1
  4242                           
  4243                           ;common.c: 427: else
  4244                           ;common.c: 428: return 0;
  4245  0651  3400               	retlw	0
  4246  0652                     __end_of_isPermitSampleTime:	
  4247                           
  4248                           	psect	text747
  4249  063B                     __ptext747:	
  4250 ;; =============== function _adc_start ends ============
  4251                           
  4252                           
  4253 ;; *************** function _op2_init *****************
  4254 ;; Defined at:
  4255 ;;		line 45 in file "C:\190604\AK7030-OTP\periph.c"
  4256 ;; Parameters:    Size  Location     Type
  4257 ;;		None
  4258 ;; Auto vars:     Size  Location     Type
  4259 ;;		None
  4260 ;; Return value:  Size  Location     Type
  4261 ;;		None               void
  4262 ;; Registers used:
  4263 ;;		wreg
  4264 ;; Tracked objects:
  4265 ;;		On entry : 17F/20
  4266 ;;		On exit  : 17F/20
  4267 ;;		Unchanged: FFE80/0
  4268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4269 ;;      Params:         0       0       0       0       0
  4270 ;;      Locals:         0       0       0       0       0
  4271 ;;      Temps:          0       0       0       0       0
  4272 ;;      Totals:         0       0       0       0       0
  4273 ;;Total ram usage:        0 bytes
  4274 ;; Hardware stack levels used:    1
  4275 ;; Hardware stack levels required when called:    2
  4276 ;; This function calls:
  4277 ;;		Nothing
  4278 ;; This function is called by:
  4279 ;;		_main
  4280 ;; This function uses a non-reentrant model
  4281 ;;
  4282  063B                     _op2_init:	
  4283                           
  4284                           ;periph.c: 52: OP2CON1=0x10;
  4285                           
  4286                           ; Regs used in _op2_init: [wreg]
  4287  063B  3010               	movlw	16
  4288  063C  009C               	movwf	28	;volatile
  4289                           
  4290                           ;periph.c: 54: OP2CON2=0x10;
  4291  063D  009D               	movwf	29	;volatile
  4292                           
  4293                           ;periph.c: 55: OP2CON0=0x80;
  4294  063E  3080               	movlw	128
  4295  063F  009B               	movwf	27	;volatile
  4296                           
  4297                           ;periph.c: 58: TRISA7=0;
  4298  0640  1385               	bcf	5,7
  4299                           
  4300                           ;periph.c: 60: TRISB7 = 1;
  4301  0641  1786               	bsf	6,7
  4302  0642  0008               	return
  4303  0643                     __end_of_op2_init:	
  4304                           
  4305                           	psect	text748
  4306  060C                     __ptext748:	
  4307 ;; =============== function _op2_init ends ============
  4308                           
  4309                           
  4310 ;; *************** function _op1_init *****************
  4311 ;; Defined at:
  4312 ;;		line 26 in file "C:\190604\AK7030-OTP\periph.c"
  4313 ;; Parameters:    Size  Location     Type
  4314 ;;		None
  4315 ;; Auto vars:     Size  Location     Type
  4316 ;;		None
  4317 ;; Return value:  Size  Location     Type
  4318 ;;		None               void
  4319 ;; Registers used:
  4320 ;;		wreg
  4321 ;; Tracked objects:
  4322 ;;		On entry : 17F/20
  4323 ;;		On exit  : 17F/20
  4324 ;;		Unchanged: FFE80/0
  4325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4326 ;;      Params:         0       0       0       0       0
  4327 ;;      Locals:         0       0       0       0       0
  4328 ;;      Temps:          0       0       0       0       0
  4329 ;;      Totals:         0       0       0       0       0
  4330 ;;Total ram usage:        0 bytes
  4331 ;; Hardware stack levels used:    1
  4332 ;; Hardware stack levels required when called:    2
  4333 ;; This function calls:
  4334 ;;		Nothing
  4335 ;; This function is called by:
  4336 ;;		_main
  4337 ;; This function uses a non-reentrant model
  4338 ;;
  4339  060C                     _op1_init:	
  4340                           
  4341                           ;periph.c: 33: OP1CON1=0x02;
  4342                           
  4343                           ; Regs used in _op1_init: [wreg]
  4344  060C  3002               	movlw	2
  4345  060D  1283               	bcf	3,5	;RP0=0, select bank0
  4346  060E  009C               	movwf	28	;volatile
  4347                           
  4348                           ;periph.c: 34: OP1CON2=0xA0;
  4349  060F  30A0               	movlw	160
  4350  0610  009D               	movwf	29	;volatile
  4351                           
  4352                           ;periph.c: 35: OP1CON0=0x80;
  4353  0611  3080               	movlw	128
  4354  0612  009B               	movwf	27	;volatile
  4355                           
  4356                           ;periph.c: 38: TRISB3=1;
  4357  0613  1683               	bsf	3,5	;RP0=1, select bank1
  4358  0614  1586               	bsf	6,3
  4359                           
  4360                           ;periph.c: 40: TRISB5=0;
  4361  0615  1286               	bcf	6,5
  4362  0616  0008               	return
  4363  0617                     __end_of_op1_init:	
  4364                           
  4365                           	psect	text749
  4366  0661                     __ptext749:	
  4367 ;; =============== function _op1_init ends ============
  4368                           
  4369                           
  4370 ;; *************** function _dac_init *****************
  4371 ;; Defined at:
  4372 ;;		line 14 in file "C:\190604\AK7030-OTP\periph.c"
  4373 ;; Parameters:    Size  Location     Type
  4374 ;;		None
  4375 ;; Auto vars:     Size  Location     Type
  4376 ;;		None
  4377 ;; Return value:  Size  Location     Type
  4378 ;;		None               void
  4379 ;; Registers used:
  4380 ;;		wreg
  4381 ;; Tracked objects:
  4382 ;;		On entry : 17F/20
  4383 ;;		On exit  : 17F/20
  4384 ;;		Unchanged: FFE80/0
  4385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4386 ;;      Params:         0       0       0       0       0
  4387 ;;      Locals:         0       0       0       0       0
  4388 ;;      Temps:          0       0       0       0       0
  4389 ;;      Totals:         0       0       0       0       0
  4390 ;;Total ram usage:        0 bytes
  4391 ;; Hardware stack levels used:    1
  4392 ;; Hardware stack levels required when called:    2
  4393 ;; This function calls:
  4394 ;;		Nothing
  4395 ;; This function is called by:
  4396 ;;		_main
  4397 ;; This function uses a non-reentrant model
  4398 ;;
  4399  0661                     _dac_init:	
  4400                           
  4401                           ;periph.c: 15: DACCON|=1;
  4402                           
  4403                           ; Regs used in _dac_init: [wreg]
  4404  0661  1407               	bsf	7,0	;volatile
  4405                           
  4406                           ;periph.c: 17: DACR0=0x0F;
  4407  0662  300F               	movlw	15
  4408  0663  0088               	movwf	8	;volatile
  4409                           
  4410                           ;periph.c: 18: DACCON|=(1)<<2;
  4411  0664  1507               	bsf	7,2	;volatile
  4412  0665  0008               	return
  4413  0666                     __end_of_dac_init:	
  4414                           
  4415                           	psect	text751
  4416  066A                     __ptext751:	
  4417 ;; =============== function _adc_test_init ends ============
  4418                           
  4419                           
  4420 ;; *************** function _timer1_interrupt_config *****************
  4421 ;; Defined at:
  4422 ;;		line 190 in file "C:\190604\AK7030-OTP\common.c"
  4423 ;; Parameters:    Size  Location     Type
  4424 ;;		None
  4425 ;; Auto vars:     Size  Location     Type
  4426 ;;		None
  4427 ;; Return value:  Size  Location     Type
  4428 ;;		None               void
  4429 ;; Registers used:
  4430 ;;		None
  4431 ;; Tracked objects:
  4432 ;;		On entry : 17F/20
  4433 ;;		On exit  : 17F/20
  4434 ;;		Unchanged: FFE80/0
  4435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4436 ;;      Params:         0       0       0       0       0
  4437 ;;      Locals:         0       0       0       0       0
  4438 ;;      Temps:          0       0       0       0       0
  4439 ;;      Totals:         0       0       0       0       0
  4440 ;;Total ram usage:        0 bytes
  4441 ;; Hardware stack levels used:    1
  4442 ;; Hardware stack levels required when called:    2
  4443 ;; This function calls:
  4444 ;;		Nothing
  4445 ;; This function is called by:
  4446 ;;		_main
  4447 ;; This function uses a non-reentrant model
  4448 ;;
  4449  066A                     _timer1_interrupt_config:	
  4450                           
  4451                           ;common.c: 191: GIE = 1;
  4452                           
  4453                           ; Regs used in _timer1_interrupt_config: []
  4454  066A  178B               	bsf	11,7
  4455                           
  4456                           ;common.c: 192: PEIE = 1;
  4457  066B  170B               	bsf	11,6
  4458  066C  0008               	return
  4459  066D                     __end_of_timer1_interrupt_config:	
  4460                           
  4461                           	psect	text752
  4462  0617                     __ptext752:	
  4463 ;; =============== function _timer1_interrupt_config ends ============
  4464                           
  4465                           
  4466 ;; *************** function _timer1_config *****************
  4467 ;; Defined at:
  4468 ;;		line 178 in file "C:\190604\AK7030-OTP\common.c"
  4469 ;; Parameters:    Size  Location     Type
  4470 ;;		None
  4471 ;; Auto vars:     Size  Location     Type
  4472 ;;		None
  4473 ;; Return value:  Size  Location     Type
  4474 ;;		None               void
  4475 ;; Registers used:
  4476 ;;		wreg
  4477 ;; Tracked objects:
  4478 ;;		On entry : 17F/40
  4479 ;;		On exit  : 17F/20
  4480 ;;		Unchanged: FFE80/0
  4481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4482 ;;      Params:         0       0       0       0       0
  4483 ;;      Locals:         0       0       0       0       0
  4484 ;;      Temps:          0       0       0       0       0
  4485 ;;      Totals:         0       0       0       0       0
  4486 ;;Total ram usage:        0 bytes
  4487 ;; Hardware stack levels used:    1
  4488 ;; Hardware stack levels required when called:    2
  4489 ;; This function calls:
  4490 ;;		Nothing
  4491 ;; This function is called by:
  4492 ;;		_main
  4493 ;; This function uses a non-reentrant model
  4494 ;;
  4495  0617                     _timer1_config:	
  4496                           
  4497                           ;common.c: 180: TMR1H=0xCF;
  4498                           
  4499                           ; Regs used in _timer1_config: [wreg]
  4500  0617  30CF               	movlw	207
  4501  0618  1303               	bcf	3,6	;RP1=0, select bank0
  4502  0619  008F               	movwf	15	;volatile
  4503                           
  4504                           ;common.c: 181: TMR1L=0x2C;
  4505  061A  302C               	movlw	44
  4506  061B  008E               	movwf	14	;volatile
  4507                           
  4508                           ;common.c: 182: T1CON=0xE1;
  4509  061C  30E1               	movlw	225
  4510  061D  0090               	movwf	16	;volatile
  4511                           
  4512                           ;common.c: 183: TMR1IE=1;
  4513  061E  1683               	bsf	3,5	;RP0=1, select bank1
  4514  061F  140C               	bsf	12,0
  4515  0620  0008               	return
  4516  0621                     __end_of_timer1_config:	
  4517                           
  4518                           	psect	text753
  4519  0643                     __ptext753:	
  4520 ;; =============== function _timer1_config ends ============
  4521                           
  4522                           
  4523 ;; *************** function _clock_config *****************
  4524 ;; Defined at:
  4525 ;;		line 170 in file "C:\190604\AK7030-OTP\common.c"
  4526 ;; Parameters:    Size  Location     Type
  4527 ;;		None
  4528 ;; Auto vars:     Size  Location     Type
  4529 ;;		None
  4530 ;; Return value:  Size  Location     Type
  4531 ;;		None               void
  4532 ;; Registers used:
  4533 ;;		wreg, status,2
  4534 ;; Tracked objects:
  4535 ;;		On entry : 17F/20
  4536 ;;		On exit  : 17F/40
  4537 ;;		Unchanged: FFE80/0
  4538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4539 ;;      Params:         0       0       0       0       0
  4540 ;;      Locals:         0       0       0       0       0
  4541 ;;      Temps:          0       0       0       0       0
  4542 ;;      Totals:         0       0       0       0       0
  4543 ;;Total ram usage:        0 bytes
  4544 ;; Hardware stack levels used:    1
  4545 ;; Hardware stack levels required when called:    2
  4546 ;; This function calls:
  4547 ;;		Nothing
  4548 ;; This function is called by:
  4549 ;;		_main
  4550 ;; This function uses a non-reentrant model
  4551 ;;
  4552  0643                     _clock_config:	
  4553                           
  4554                           ;common.c: 172: CLKPR = 0x80;
  4555                           
  4556                           ; Regs used in _clock_config: [wreg+status,2]
  4557  0643  3080               	movlw	128
  4558  0644  1283               	bcf	3,5	;RP0=0, select bank2
  4559  0645  1703               	bsf	3,6	;RP1=1, select bank2
  4560  0646  0088               	movwf	8	;volatile
  4561                           
  4562                           ;common.c: 173: CLKPR = 0x00;
  4563  0647  0188               	clrf	8	;volatile
  4564  0648                     l1651:	
  4565                           ;common.c: 174: while(CLKPCE);
  4566                           
  4567  0648  1F88               	btfss	8,7
  4568  0649  0008               	return
  4569  064A  2E48               	goto	l1651
  4570  064B                     __end_of_clock_config:	
  4571                           
  4572                           	psect	text754
  4573  05CE                     __ptext754:	
  4574 ;; =============== function _clock_config ends ============
  4575                           
  4576                           
  4577 ;; *************** function _initPin *****************
  4578 ;; Defined at:
  4579 ;;		line 105 in file "C:\190604\AK7030-OTP\main.c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;		None
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;		None
  4584 ;; Return value:  Size  Location     Type
  4585 ;;		None               void
  4586 ;; Registers used:
  4587 ;;		None
  4588 ;; Tracked objects:
  4589 ;;		On entry : 160/20
  4590 ;;		On exit  : 160/60
  4591 ;;		Unchanged: FFE9F/0
  4592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4593 ;;      Params:         0       0       0       0       0
  4594 ;;      Locals:         0       0       0       0       0
  4595 ;;      Temps:          0       0       0       0       0
  4596 ;;      Totals:         0       0       0       0       0
  4597 ;;Total ram usage:        0 bytes
  4598 ;; Hardware stack levels used:    1
  4599 ;; Hardware stack levels required when called:    2
  4600 ;; This function calls:
  4601 ;;		Nothing
  4602 ;; This function is called by:
  4603 ;;		_main
  4604 ;; This function uses a non-reentrant model
  4605 ;;
  4606  05CE                     _initPin:	
  4607                           
  4608                           ;main.c: 106: PB6 = 1;
  4609                           
  4610                           ; Regs used in _initPin: []
  4611  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  4612  05CF  1706               	bsf	6,6
  4613                           
  4614                           ;main.c: 107: PBOD6 = 1;
  4615  05D0  1683               	bsf	3,5	;RP0=1, select bank3
  4616  05D1  1703               	bsf	3,6	;RP1=1, select bank3
  4617  05D2  1708               	bsf	8,6
  4618                           
  4619                           ;main.c: 111: PA0 = 0;
  4620  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  4621  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  4622  05D5  1005               	bcf	5,0
  4623                           
  4624                           ;main.c: 112: PA1 = 0;
  4625  05D6  1085               	bcf	5,1
  4626                           
  4627                           ;main.c: 113: PA2 = 0;
  4628  05D7  1105               	bcf	5,2
  4629                           
  4630                           ;main.c: 114: PA3 = 0;
  4631  05D8  1185               	bcf	5,3
  4632                           
  4633                           ;main.c: 115: PB0 = 0;
  4634  05D9  1006               	bcf	6,0
  4635                           
  4636                           ;main.c: 116: PB1 = 1;
  4637  05DA  1486               	bsf	6,1
  4638                           
  4639                           ;main.c: 117: PA6 = 0;
  4640  05DB  1305               	bcf	5,6
  4641                           
  4642                           ;main.c: 118: PA7 = 0;
  4643  05DC  1385               	bcf	5,7
  4644                           
  4645                           ;main.c: 119: PAOD7 = 0;
  4646  05DD  1683               	bsf	3,5	;RP0=1, select bank3
  4647  05DE  1703               	bsf	3,6	;RP1=1, select bank3
  4648  05DF  1387               	bcf	7,7
  4649  05E0  0008               	return
  4650  05E1                     __end_of_initPin:	
  4651                           
  4652                           	psect	text758
  4653  031E                     __ptext758:	
  4654 ;; =============== function _clearTwelveHoursTimer ends ============
  4655                           
  4656                           
  4657 ;; *************** function _ISR *****************
  4658 ;; Defined at:
  4659 ;;		line 437 in file "C:\190604\AK7030-OTP\common.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;		None
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;		None
  4664 ;; Return value:  Size  Location     Type
  4665 ;;		None               void
  4666 ;; Registers used:
  4667 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/0
  4670 ;;		On exit  : 60/0
  4671 ;;		Unchanged: FFE00/0
  4672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4673 ;;      Params:         0       0       0       0       0
  4674 ;;      Locals:         0       0       0       0       0
  4675 ;;      Temps:          4       0       0       0       0
  4676 ;;      Totals:         4       0       0       0       0
  4677 ;;Total ram usage:        4 bytes
  4678 ;; Hardware stack levels used:    1
  4679 ;; Hardware stack levels required when called:    1
  4680 ;; This function calls:
  4681 ;;		i1_setAD_ConvertFlag
  4682 ;;		_adc_get
  4683 ;;		_vPutSampleDataIntoTable
  4684 ;; This function is called by:
  4685 ;;		Interrupt level 1
  4686 ;; This function uses a non-reentrant model
  4687 ;;
  4688  031E                     _ISR:	
  4689                           
  4690                           ;common.c: 438: static unsigned char ucTimer1sCnt = 0;
  4691                           ;common.c: 440: if(TMR1IF == 1)
  4692  031E  1C0C               	btfss	12,0
  4693  031F  2B46               	goto	i1l4090
  4694  0320  3064               	movlw	100
  4695                           
  4696                           ;common.c: 441: {
  4697                           ;common.c: 442: TMR1IF = 0 ;
  4698  0321  100C               	bcf	12,0
  4699                           
  4700                           ;common.c: 443: timer.timer10msStopWatch++;
  4701  0322  0AD1               	incf	_timer,f
  4702                           
  4703                           ;common.c: 444: ucTimer1sCnt++;
  4704  0323  0ACE               	incf	ISR@ucTimer1sCnt,f
  4705                           
  4706                           ;common.c: 446: if(ucTimer1sCnt >= 100)
  4707  0324  024E               	subwf	ISR@ucTimer1sCnt,w
  4708  0325  1C03               	skipc
  4709  0326  2B46               	goto	i1l4090
  4710                           
  4711                           ;common.c: 447: {
  4712                           ;common.c: 448: ucTimer1sCnt = 0;
  4713  0327  01CE               	clrf	ISR@ucTimer1sCnt
  4714                           
  4715                           ;common.c: 449: if(uiBigTimer > 0)
  4716  0328  0849               	movf	_uiBigTimer+1,w
  4717  0329  0448               	iorwf	_uiBigTimer,w
  4718  032A  1903               	skipnz
  4719  032B  2B32               	goto	i1l1761
  4720                           
  4721                           ;common.c: 450: uiBigTimer--;
  4722  032C  3001               	movlw	1
  4723  032D  02C8               	subwf	_uiBigTimer,f
  4724  032E  3000               	movlw	0
  4725  032F  1C03               	skipc
  4726  0330  03C9               	decf	_uiBigTimer+1,f
  4727  0331  02C9               	subwf	_uiBigTimer+1,f
  4728  0332                     i1l1761:	
  4729                           
  4730                           ;common.c: 452: if(uiSmallTimer)
  4731  0332  084B               	movf	_uiSmallTimer+1,w
  4732  0333  044A               	iorwf	_uiSmallTimer,w
  4733  0334  1903               	skipnz
  4734  0335  2B3C               	goto	i1l1762
  4735                           
  4736                           ;common.c: 453: uiSmallTimer--;
  4737  0336  3001               	movlw	1
  4738  0337  02CA               	subwf	_uiSmallTimer,f
  4739  0338  3000               	movlw	0
  4740  0339  1C03               	skipc
  4741  033A  03CB               	decf	_uiSmallTimer+1,f
  4742  033B  02CB               	subwf	_uiSmallTimer+1,f
  4743  033C                     i1l1762:	
  4744                           
  4745                           ;common.c: 455: if(uiTwentySecondsTimer)
  4746  033C  084D               	movf	_uiTwentySecondsTimer+1,w
  4747  033D  044C               	iorwf	_uiTwentySecondsTimer,w
  4748  033E  1903               	skipnz
  4749  033F  2B46               	goto	i1l4090
  4750                           
  4751                           ;common.c: 456: uiTwentySecondsTimer--;
  4752  0340  3001               	movlw	1
  4753  0341  02CC               	subwf	_uiTwentySecondsTimer,f
  4754  0342  3000               	movlw	0
  4755  0343  1C03               	skipc
  4756  0344  03CD               	decf	_uiTwentySecondsTimer+1,f
  4757  0345  02CD               	subwf	_uiTwentySecondsTimer+1,f
  4758  0346                     i1l4090:	
  4759                           
  4760                           ;common.c: 457: }
  4761                           ;common.c: 458: }
  4762                           ;common.c: 460: if(ADIF)
  4763  0346  1D0D               	btfss	13,2
  4764  0347  2B79               	goto	i1l1769
  4765  0348  3001               	movlw	1
  4766                           
  4767                           ;common.c: 461: {
  4768                           ;common.c: 462: ADIF=0;
  4769  0349  110D               	bcf	13,2
  4770                           
  4771                           ;common.c: 463: setAD_ConvertFlag(1);
  4772  034A  23F5  118A         	fcall	i1_setAD_ConvertFlag
  4773                           
  4774                           ;common.c: 464: adc_original_value = adc_get();
  4775  034C  2386  118A         	fcall	_adc_get
  4776  034E  0871               	movf	?_adc_get+1,w
  4777  034F  00B9               	movwf	(_adc_original_value+1)^(0+128)
  4778  0350  0870               	movf	?_adc_get,w
  4779  0351  00B8               	movwf	_adc_original_value^(0+128)
  4780                           
  4781                           ;common.c: 465: if(sampleChannelSelect == 4)
  4782  0352  1283               	bcf	3,5	;RP0=0, select bank0
  4783  0353  086E               	movf	_sampleChannelSelect,w
  4784  0354  3A04               	xorlw	4
  4785  0355  1D03               	skipz
  4786  0356  2B61               	goto	i1l4104
  4787                           
  4788                           ;common.c: 466: {
  4789                           ;common.c: 467: adc_original_CH4_value = adc_get();
  4790  0357  2386  118A         	fcall	_adc_get
  4791                           
  4792                           ;common.c: 468: vPutSampleDataIntoTable(adc_get(),4);
  4793  0359  2386  118A         	fcall	_adc_get
  4794  035B  0871               	movf	?_adc_get+1,w
  4795  035C  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4796  035D  0870               	movf	?_adc_get,w
  4797  035E  00F4               	movwf	?_vPutSampleDataIntoTable
  4798  035F  3004               	movlw	4
  4799  0360  2B77               	goto	L13
  4800  0361                     i1l4104:	
  4801                           ;common.c: 470: }
  4802                           
  4803                           
  4804                           ;common.c: 471: else if(sampleChannelSelect == 1)
  4805  0361  0B6E               	decfsz	_sampleChannelSelect,w
  4806  0362  2B6E               	goto	i1l4110
  4807                           
  4808                           ;common.c: 472: {
  4809                           ;common.c: 473: adc_original_CH1_value = adc_get();
  4810  0363  2386  118A         	fcall	_adc_get
  4811                           
  4812                           ;common.c: 474: vPutSampleDataIntoTable(adc_get(),1);
  4813  0365  2386  118A         	fcall	_adc_get
  4814  0367  0871               	movf	?_adc_get+1,w
  4815  0368  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4816  0369  0870               	movf	?_adc_get,w
  4817  036A  00F4               	movwf	?_vPutSampleDataIntoTable
  4818  036B  01F6               	clrf	?_vPutSampleDataIntoTable+2
  4819  036C  0AF6               	incf	?_vPutSampleDataIntoTable+2,f
  4820  036D  2B78               	goto	L14
  4821  036E                     i1l4110:	
  4822                           ;common.c: 475: }
  4823                           
  4824                           
  4825                           ;common.c: 476: else
  4826                           ;common.c: 477: {
  4827                           ;common.c: 478: adc_original_CH14_value = adc_get();
  4828  036E  2386  118A         	fcall	_adc_get
  4829                           
  4830                           ;common.c: 479: vPutSampleDataIntoTable(adc_get(),14);
  4831  0370  2386  118A         	fcall	_adc_get
  4832  0372  0871               	movf	?_adc_get+1,w
  4833  0373  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4834  0374  0870               	movf	?_adc_get,w
  4835  0375  00F4               	movwf	?_vPutSampleDataIntoTable
  4836  0376  300E               	movlw	14
  4837  0377                     L13:	
  4838  0377  00F6               	movwf	?_vPutSampleDataIntoTable+2
  4839  0378                     L14:	
  4840  0378  2392               	fcall	_vPutSampleDataIntoTable
  4841  0379                     i1l1769:	
  4842  0379  087C               	movf	??_ISR+3,w
  4843  037A  1283               	bcf	3,5	;RP0=0, select bank0
  4844  037B  1303               	bcf	3,6	;RP1=0, select bank0
  4845  037C  00FF               	movwf	127
  4846  037D  087B               	movf	??_ISR+2,w
  4847  037E  008A               	movwf	10
  4848  037F  087A               	movf	??_ISR+1,w
  4849  0380  0084               	movwf	4
  4850  0381  0E79               	swapf	??_ISR^(0+-128),w
  4851  0382  0083               	movwf	3
  4852  0383  0EFE               	swapf	126,f
  4853  0384  0E7E               	swapf	126,w
  4854  0385  0009               	retfie
  4855  0386                     __end_of_ISR:	
  4856  0386                     __ptext760:	
  4857 ;; =============== function i1_setAD_ConvertFlag ends ============
  4858                           
  4859                           
  4860 ;; *************** function _adc_get *****************
  4861 ;; Defined at:
  4862 ;;		line 105 in file "C:\190604\AK7030-OTP\periph.c"
  4863 ;; Parameters:    Size  Location     Type
  4864 ;;		None
  4865 ;; Auto vars:     Size  Location     Type
  4866 ;;  val             2    2[COMMON] unsigned int 
  4867 ;; Return value:  Size  Location     Type
  4868 ;;                  2    0[COMMON] unsigned int 
  4869 ;; Registers used:
  4870 ;;		wreg
  4871 ;; Tracked objects:
  4872 ;;		On entry : 40/0
  4873 ;;		On exit  : 60/20
  4874 ;;		Unchanged: FFF9F/0
  4875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4876 ;;      Params:         2       0       0       0       0
  4877 ;;      Locals:         2       0       0       0       0
  4878 ;;      Temps:          0       0       0       0       0
  4879 ;;      Totals:         4       0       0       0       0
  4880 ;;Total ram usage:        4 bytes
  4881 ;; Hardware stack levels used:    1
  4882 ;; This function calls:
  4883 ;;		Nothing
  4884 ;; This function is called by:
  4885 ;;		_ISR
  4886 ;; This function uses a non-reentrant model
  4887 ;;
  4888  0386                     _adc_get:	
  4889                           
  4890                           ;periph.c: 106: unsigned int val;
  4891                           ;periph.c: 107: val = (ADRESH<<8) | ADRESL;
  4892                           
  4893                           ; Regs used in _adc_get: [wreg]
  4894  0386  1283               	bcf	3,5	;RP0=0, select bank0
  4895  0387  081E               	movf	30,w	;volatile
  4896  0388  00F3               	movwf	adc_get@val+1
  4897  0389  01F2               	clrf	adc_get@val
  4898  038A  1683               	bsf	3,5	;RP0=1, select bank1
  4899  038B  081E               	movf	30,w	;volatile
  4900  038C  04F2               	iorwf	adc_get@val,f
  4901                           
  4902                           ;periph.c: 108: return val;
  4903  038D  0873               	movf	adc_get@val+1,w
  4904  038E  00F1               	movwf	?_adc_get+1
  4905  038F  0872               	movf	adc_get@val,w
  4906  0390  00F0               	movwf	?_adc_get
  4907  0391  0008               	return
  4908  0392                     __end_of_adc_get:	
  4909  0392                     __ptext761:	
  4910 ;; =============== function _adc_get ends ============
  4911                           
  4912                           
  4913 ;; *************** function _vPutSampleDataIntoTable *****************
  4914 ;; Defined at:
  4915 ;;		line 95 in file "C:\190604\AK7030-OTP\common.c"
  4916 ;; Parameters:    Size  Location     Type
  4917 ;;  uiSampleData    2    4[COMMON] unsigned int 
  4918 ;;  channel         1    6[COMMON] unsigned char 
  4919 ;; Auto vars:     Size  Location     Type
  4920 ;;  i               2    7[COMMON] int 
  4921 ;; Return value:  Size  Location     Type
  4922 ;;		None               void
  4923 ;; Registers used:
  4924 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4925 ;; Tracked objects:
  4926 ;;		On entry : 60/20
  4927 ;;		On exit  : 0/0
  4928 ;;		Unchanged: FFE00/0
  4929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4930 ;;      Params:         3       0       0       0       0
  4931 ;;      Locals:         2       0       0       0       0
  4932 ;;      Temps:          0       0       0       0       0
  4933 ;;      Totals:         5       0       0       0       0
  4934 ;;Total ram usage:        5 bytes
  4935 ;; Hardware stack levels used:    1
  4936 ;; This function calls:
  4937 ;;		Nothing
  4938 ;; This function is called by:
  4939 ;;		_ISR
  4940 ;; This function uses a non-reentrant model
  4941 ;;
  4942  0392                     _vPutSampleDataIntoTable:	
  4943                           
  4944                           ;common.c: 97: static unsigned char ucChannelFirstLength = 0;
  4945                           ;common.c: 99: static unsigned char ucChannelFourthLength = 0;
  4946                           ;common.c: 101: static unsigned char ucChannelFourteenthLength = 0;
  4947                           ;common.c: 103: if(channel == 1)
  4948                           
  4949                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1]
  4950  0392  0B76               	decfsz	vPutSampleDataIntoTable@channel,w
  4951  0393  2BA4               	goto	i1l4024
  4952                           
  4953                           ;common.c: 104: {
  4954                           ;common.c: 105: if(ucChannelFirstLength < 12)
  4955  0394  300C               	movlw	12
  4956  0395  027D               	subwf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4957  0396  1803               	skipnc
  4958  0397  2B9E               	goto	i1l4020
  4959                           
  4960                           ;common.c: 106: {
  4961                           ;common.c: 107: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  4962  0398  1003               	clrc
  4963  0399  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4964  039A  3EBE               	addlw	_uiSampleChannelFirst& (0+255)
  4965  039B  23F8               	fcall	PL2	;call to abstracted procedure
  4966                           
  4967                           ;common.c: 109: ucChannelFirstLength++;
  4968  039C  0AFD               	incf	vPutSampleDataIntoTable@ucChannelFirstLength,f
  4969                           
  4970                           ;common.c: 110: }
  4971  039D  0008               	return
  4972  039E                     i1l4020:	
  4973                           
  4974                           ;common.c: 111: else
  4975                           ;common.c: 112: {
  4976                           ;common.c: 113: ucChannelFirstLength = 0;
  4977  039E  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  4978                           
  4979                           ;common.c: 115: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  4980  039F  1003               	clrc
  4981  03A0  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4982  03A1  3EBE               	addlw	_uiSampleChannelFirst& (0+255)
  4983  03A2  23F8               	fcall	PL2	;call to abstracted procedure
  4984  03A3  0008               	return
  4985  03A4                     i1l4024:	
  4986                           
  4987                           ;common.c: 118: else if(channel == 4)
  4988  03A4  0876               	movf	vPutSampleDataIntoTable@channel,w
  4989  03A5  3A04               	xorlw	4
  4990  03A6  1D03               	skipz
  4991  03A7  2BB9               	goto	i1l4036
  4992                           
  4993                           ;common.c: 119: {
  4994                           ;common.c: 120: if(ucChannelFourthLength < 12)
  4995  03A8  300C               	movlw	12
  4996  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  4997  03AA  026D               	subwf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4998  03AB  1803               	skipnc
  4999  03AC  2BB3               	goto	i1l4032
  5000                           
  5001                           ;common.c: 121: {
  5002                           ;common.c: 122: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  5003  03AD  1003               	clrc
  5004  03AE  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  5005  03AF  3ED6               	addlw	_uiSampleChannelFourth& (0+255)
  5006  03B0  23F8               	fcall	PL2	;call to abstracted procedure
  5007                           
  5008                           ;common.c: 124: ucChannelFourthLength++;
  5009  03B1  0AED               	incf	vPutSampleDataIntoTable@ucChannelFourthLength,f
  5010                           
  5011                           ;common.c: 125: }
  5012  03B2  0008               	return
  5013  03B3                     i1l4032:	
  5014                           
  5015                           ;common.c: 126: else
  5016                           ;common.c: 127: {
  5017                           ;common.c: 128: ucChannelFourthLength = 0;
  5018  03B3  01ED               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  5019                           
  5020                           ;common.c: 130: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  5021  03B4  1003               	clrc
  5022  03B5  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  5023  03B6  3ED6               	addlw	_uiSampleChannelFourth& (0+255)
  5024  03B7  23F8               	fcall	PL2	;call to abstracted procedure
  5025  03B8  0008               	return
  5026  03B9                     i1l4036:	
  5027                           
  5028                           ;common.c: 133: else if(channel == 14)
  5029  03B9  0876               	movf	vPutSampleDataIntoTable@channel,w
  5030  03BA  3A0E               	xorlw	14
  5031  03BB  1D03               	skipz
  5032  03BC  2BD4               	goto	i1l4048
  5033                           
  5034                           ;common.c: 134: {
  5035                           ;common.c: 135: if(ucChannelFourteenthLength < 12)
  5036  03BD  300C               	movlw	12
  5037  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  5038  03BF  026C               	subwf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  5039  03C0  1803               	skipnc
  5040  03C1  2BCE               	goto	i1l4044
  5041                           
  5042                           ;common.c: 136: {
  5043                           ;common.c: 137: uiSampleChannelFourteenth[ucChannelFourteenthLength] = uiSampleData;
  5044  03C2  1003               	clrc
  5045  03C3  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  5046  03C4  3E90               	addlw	_uiSampleChannelFourteenth& (0+255)
  5047  03C5  0084               	movwf	4
  5048  03C6  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  5049  03C7  1783               	bsf	3,7	;select IRP bank3
  5050  03C8  0080               	movwf	0
  5051  03C9  0A84               	incf	4,f
  5052  03CA  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  5053  03CB  0080               	movwf	0
  5054                           
  5055                           ;common.c: 139: ucChannelFourteenthLength++;
  5056  03CC  0AEC               	incf	vPutSampleDataIntoTable@ucChannelFourteenthLength,f
  5057                           
  5058                           ;common.c: 140: }
  5059  03CD  0008               	return
  5060  03CE                     i1l4044:	
  5061                           
  5062                           ;common.c: 141: else
  5063                           ;common.c: 142: {
  5064                           ;common.c: 143: ucChannelFourteenthLength = 0;
  5065  03CE  01EC               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  5066                           
  5067                           ;common.c: 145: uiSampleChannelFourth[ucChannelFourteenthLength] = uiSampleData;
  5068  03CF  1003               	clrc
  5069  03D0  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  5070  03D1  3ED6               	addlw	_uiSampleChannelFourth& (0+255)
  5071  03D2  23F8               	fcall	PL2	;call to abstracted procedure
  5072  03D3  0008               	return
  5073  03D4                     i1l4048:	
  5074                           
  5075                           ;common.c: 148: else
  5076                           ;common.c: 149: {
  5077                           ;common.c: 150: ucChannelFirstLength = 0;
  5078  03D4  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  5079                           
  5080                           ;common.c: 152: ucChannelFourthLength = 0;
  5081  03D5  1283               	bcf	3,5	;RP0=0, select bank0
  5082  03D6  01ED               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  5083                           
  5084                           ;common.c: 154: ucChannelFourteenthLength = 0;
  5085  03D7  01EC               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  5086                           
  5087                           ;common.c: 156: for(int i = 0;i < 12; i++)
  5088  03D8  01F7               	clrf	vPutSampleDataIntoTable@i
  5089  03D9  01F8               	clrf	vPutSampleDataIntoTable@i+1
  5090  03DA                     i1l4054:	
  5091                           
  5092                           ;common.c: 157: {
  5093                           ;common.c: 158: uiSampleChannelFirst[i] = 0;
  5094  03DA  1003               	clrc
  5095  03DB  0D77               	rlf	vPutSampleDataIntoTable@i,w
  5096  03DC  3EBE               	addlw	_uiSampleChannelFirst& (0+255)
  5097  03DD  0084               	movwf	4
  5098  03DE  1383               	bcf	3,7	;select IRP bank1
  5099  03DF  0180               	clrf	0
  5100                           
  5101                           ;common.c: 160: uiSampleChannelFourth[i] = 0;
  5102  03E0  2400  118A         	fcall	PL5	;call to abstracted procedure
  5103                           
  5104                           ;common.c: 162: uiSampleChannelFourth[i] = 0;
  5105  03E2  2400  118A         	fcall	PL5	;call to abstracted procedure
  5106  03E4  0A84               	incf	4,f
  5107  03E5  0180               	clrf	0
  5108  03E6  0AF7               	incf	vPutSampleDataIntoTable@i,f
  5109  03E7  1903               	skipnz
  5110  03E8  0AF8               	incf	vPutSampleDataIntoTable@i+1,f
  5111  03E9  0878               	movf	vPutSampleDataIntoTable@i+1,w
  5112  03EA  3A80               	xorlw	128
  5113  03EB  00FF               	movwf	127
  5114  03EC  3080               	movlw	128
  5115  03ED  027F               	subwf	127,w
  5116  03EE  1D03               	skipz
  5117  03EF  2BF2               	goto	u110_25
  5118  03F0  300C               	movlw	12
  5119  03F1  0277               	subwf	vPutSampleDataIntoTable@i,w
  5120  03F2                     u110_25:	
  5121  03F2  1803               	btfsc	3,0
  5122  03F3  0008               	return
  5123  03F4  2BDA               	goto	i1l4054
  5124  03F5                     __end_of_vPutSampleDataIntoTable:	
  5125  03F5                     __ptext759:	
  5126 ;; =============== function _ISR ends ============
  5127                           
  5128                           
  5129 ;; *************** function i1_setAD_ConvertFlag *****************
  5130 ;; Defined at:
  5131 ;;		line 204 in file "C:\190604\AK7030-OTP\common.c"
  5132 ;; Parameters:    Size  Location     Type
  5133 ;;  setAD_Conver    1    wreg     unsigned char 
  5134 ;; Auto vars:     Size  Location     Type
  5135 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  5136 ;; Return value:  Size  Location     Type
  5137 ;;		None               void
  5138 ;; Registers used:
  5139 ;;		wreg
  5140 ;; Tracked objects:
  5141 ;;		On entry : 60/0
  5142 ;;		On exit  : 60/0
  5143 ;;		Unchanged: FFF9F/0
  5144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5145 ;;      Params:         0       0       0       0       0
  5146 ;;      Locals:         1       0       0       0       0
  5147 ;;      Temps:          0       0       0       0       0
  5148 ;;      Totals:         1       0       0       0       0
  5149 ;;Total ram usage:        1 bytes
  5150 ;; Hardware stack levels used:    1
  5151 ;; This function calls:
  5152 ;;		Nothing
  5153 ;; This function is called by:
  5154 ;;		_ISR
  5155 ;; This function uses a non-reentrant model
  5156 ;;
  5157  03F5                     i1_setAD_ConvertFlag:	
  5158                           
  5159                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  5160                           ;i1setAD_ConvertFlag@flag stored from wreg
  5161  03F5  00F0               	movwf	i1setAD_ConvertFlag@flag
  5162                           
  5163                           ;common.c: 205: adc_convert_flag = flag;
  5164  03F6  00CF               	movwf	_adc_convert_flag
  5165  03F7  0008               	return
  5166  03F8                     __end_ofi1_setAD_ConvertFlag:	
  5167  03F8                     PL2:	
  5168  03F8  0084               	movwf	4
  5169  03F9  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  5170  03FA  1383               	bcf	3,7	;select IRP bank1
  5171  03FB  0080               	movwf	0
  5172  03FC  0A84               	incf	4,f
  5173  03FD  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  5174  03FE  0080               	movwf	0
  5175  03FF  0008               	return
  5176  0400                     PL5:	
  5177  0400  0A84               	incf	4,f
  5178  0401  0180               	clrf	0
  5179  0402  1003               	clrc
  5180  0403  0D77               	rlf	vPutSampleDataIntoTable@i,w
  5181  0404  3ED6               	addlw	_uiSampleChannelFourth& (0+255)
  5182  0405  0084               	movwf	4
  5183  0406  0180               	clrf	0
  5184  0407  0008               	return
  5185                           
  5186                           	psect	intentry
  5187  0004                     __pintentry:	
  5188                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5189                           
  5190  0004                     interrupt_function:	
  5191  007E                     saved_w	set	btemp
  5192  0004  00FE               	movwf	btemp
  5193  0005  0E03               	swapf	3,w
  5194  0006  00F9               	movwf	??_ISR
  5195  0007  0804               	movf	4,w
  5196  0008  00FA               	movwf	??_ISR+1
  5197  0009  080A               	movf	10,w
  5198  000A  00FB               	movwf	??_ISR+2
  5199  000B  1283               	bcf	3,5	;RP0=0, select bank0
  5200  000C  1303               	bcf	3,6	;RP1=0, select bank0
  5201  000D  087F               	movf	btemp+1,w
  5202  000E  00FC               	movwf	??_ISR+3
  5203  000F  118A  2B1E         	ljmp	_ISR
  5204                           
  5205                           	psect	text762
  5206  0000                     __ptext762:	
  5207 ;; =============== function _vPutSampleDataIntoTable ends ============
  5208                           
  5209  007E                     btemp	set	126	;btemp
  5210  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri Jun 21 17:02:41 2019

                                  ??_clock_config 0020                                                 pc 0002  
                                              _GO 00F9                                                fsr 0004  
                             ?_getAdOriginalValue 0020                          ?_timer1_interrupt_config 0070  
                                             l706 0061                                               l715 0078  
                                             l814 016A                                               l680 0000  
                                             l744 00F2                                               l914 02B2  
                                             l683 0000                                               l677 0000  
                                             l838 019E                                               l759 00F4  
                                             l859 01D1                                               l787 0130  
                                             l894 026C                                               l887 024E  
                                             _PA0 0028                                               _PA1 0029  
                                             _GIE 005F                                               _PB0 0030  
                                             _PA2 002A                                               _PB1 0031  
                                             _PA3 002B                                               _PA6 002E  
                                             _PA7 002F                                               _PB6 0036  
                                             _ISR 031E                                               u995 0518  
                                             fsr0 0004                                               indf 0000  
                          ??_startThreeHoursTimer 0022                                              S4930 05EF  
                                            S4932 0600                                              S4928 05E1  
                                            ?_ISR 0070                                __size_of_AD_Sample 0069  
                          ?_getAdOriginalCh1Value 0046                                              l2400 0000  
                                            l4002 0000                                              l2403 0000  
                                            l2420 0000                                              l4004 0000  
                                            l2414 0000                                              l2406 0000  
                                            l4008 0000                                              l4120 05A7  
                                            l4200 0000                                              l1721 0000  
                                            l1625 0000                                              l2417 0000  
                                            l4122 0000                                              l4130 0000  
                                            l4210 0000                                              l4202 0000  
                                            l1651 0648                                              l1731 0000  
                                            l1724 0000                                              l1660 0000  
                                            l4060 0000                                              l4300 00BF  
                                            l4220 0000                                              l4212 0000  
                                            l4204 0000                                              l1718 0000  
                                            l1654 0000                                              l4070 0000  
                                            l4126 0000                                              l4150 0000  
                                            l4142 045F                                              l4134 0000  
                                            l4230 0000                                              l4222 0000  
                                            l4214 0000                                              l4206 0000  
                                            l1663 0000                                              l4064 0000  
                                            l1672 0000                                              l4320 00F7  
                                            l4312 00E4                                              l4304 00CB  
                                            l4240 0000                                              l4232 004E  
                                            l4224 0040                                              l4216 0000  
                                            l4208 0000                                              l1657 0000  
                                            l1754 0000                                              l1666 0000  
                                            l4066 0000                                              l4154 0000  
                                            l4138 0000                                              l4330 0100  
                                            l4250 0000                                              l4242 005F  
                                            l4226 0000                                              l4218 0000  
                                            l1675 0000                                              l1691 0472  
                                            l4164 0000                                              l4156 0491  
                                            l4148 0486                                              l4180 0000  
                                            l4500 01A1                                              l4404 0142  
                                            l4340 0106                                              l4324 00FC  
                                            l4316 00F0                                              l4308 00D8  
                                            l4260 007F                                              l4252 0072  
                                            l4244 0062                                              l4236 005A  
                                            l1669 0000                                              l1678 0000  
                                            l4174 049F                                              l4166 049C  
                                            l4158 0494                                              l4182 0000  
                                            l4190 0000                                              l4510 01AA  
                                            l4502 01A3                                              l4414 0148  
                                            l4350 010C                                              l4318 00F5  
                                            l4270 008F                                              l4262 0000  
                                            l4254 0074                                              l4238 005B  
                                            l4176 0000                                              l4168 049E  
                                            l4184 0000                                              l4600 0000  
                                            l4512 01AC                                              l4424 014E  
                                            l4360 0112                                              l4328 00FE  
                                            l4280 00A1                                              l4272 0000  
                                            l4264 0082                                              l4256 0000  
                                            l4248 0067                                              l4178 0000  
                                            l4194 0419                                              l4610 0000  
                                            l4602 0000                                              l4522 01B2  
                                            l4506 01A8                                              l4434 0157  
                                            l4370 011C                                              l4290 0000  
                                            l4282 00A2                                              l4274 0000  
                                            l3900 04B5                                              l4196 0000  
                                            l4188 0000                                              l4700 0000  
                                            l4620 0000                                              l4612 025D  
                                            l4532 01B9                                              l4452 0173  
                                            l4444 015E                                              l4380 0124  
                                            l4292 00B0                                              l4284 0000  
                                            l4276 0095                                              l4268 008E  
                                            l3902 0000                                              l4198 041F  
                                            l4702 0000                                              l4630 0000  
                                            l4622 0000                                              l4550 01DC  
                                            l4542 01C0                                              l4446 016C  
                                            l4382 0131                                              l4374 0122  
                                            l4294 00B6                                              l4606 023D  
                                            l4286 0000                                              l4710 0302  
                                            l3920 0000                                              l4640 0281  
                                            l4624 0000                                              l4616 0000  
                                            l4608 0000                                              l4544 01D5  
                                            l4456 0175                                              l4448 016E  
                                            l4392 013A                                              l4384 0133  
                                            l4296 00B9                                              l4288 00A8  
                                            l3914 0000                                              l4706 02F7  
                                            l4650 0000                                              l4642 0282  
                                            l4618 0000                                              l4626 0268  
                                            l4554 01DE                                              l4546 01D7  
                                            l4458 0177                                              l4394 013C  
                                            l4298 00BC                                              l3860 0000  
                                            l3916 0000                                              l3932 0000  
                                            l4660 029D                                              l4652 0000  
                                            l4644 0000                                              l4636 0275  
                                            l4628 0000                                              l4580 01FB  
                                            l4556 01E0                                              l4468 017D  
                                            l4388 0138                                              l3854 0000  
                                            l3862 0000                                              l3870 0000  
                                            l3934 0000                                              l3950 0000  
                                            l4662 029E                                              l4646 0000  
                                            l4590 0225                                              l4582 020C  
                                            l4566 01E6                                              l4478 0183  
                                            l3856 0000                                              l3864 0000  
                                            l3880 0000                                              l3872 0000  
                                            l4680 02CF                                              l4672 02A7  
                                            l4664 0000                                              l4648 0000  
                                            l4656 0291                                              l4592 022C  
                                            l4576 01ED                                              l4488 018B  
                                            l3858 05B2                                              l3866 0000  
                                            l3874 0000                                              l3882 0000  
                                            l3890 0000                                              l3946 0000  
                                            l3970 0000                                              l3962 0000  
                                            l4690 02E3                                              l4674 02C2  
                                            l4666 02A3                                              l4586 0000  
                                            l4498 0192                                              l3868 0000  
                                            l3876 0000                                              l3884 0000  
                                            l3892 0000                                              l3972 0000  
                                            l4692 02E4                                              l4684 0000  
                                            l4596 0232                                              l3878 0000  
                                            l3886 0000                                              l3894 0000  
                                            l3990 051E                                              l3982 051D  
                                            l3974 0000                                              l4686 02D7  
                                            l4678 02CE                                              l4598 0000  
                                            _ADIE 046A                                              l3888 0000  
                                            l3896 0000                                              l3992 0560  
                                            l3968 04F5                                              l4696 0000  
                                            _ADIF 006A                                              l3898 0000  
                                            l3994 0000                                              l4698 0000  
                                            l3988 055E                                              _ADON 00F8  
                   startTwelveHourTimer@uiSetTime 0020                                              u1005 053F  
                                            u1015 052B                                              u1215 0468  
                                            u1225 047D                                              _PEIE 005E  
                            ??_getAdOriginalValue 0022                                              _main 0013  
                                            btemp 007E                           _clearTwentySecondsTimer 05B2  
                                            start 0011                           ?_getAdOriginalCh14Value 0046  
                               main@ucTimerDelay1 0061                                 main@ucTimerDelay2 0062  
                               main@ucTimerDelay3 0063                                 main@ucTimerDelay4 0064  
                                           ??_ISR 0079                        __end_of_isPermitSampleTime 0652  
                             _sampleChannelSelect 006E                            ??_getAdOriginaCh4Value 0048  
                                           ?_main 0070                                             _DACR0 0088  
                                           _CLKPR 0108                                             _T1CON 0010  
                                 __end_of_adc_get 0392                                             _PAOD7 0C3F  
                                           _PBOD6 0C46                                             _TMR1H 000F  
                                           _TMR1L 000E                             setAD_ConvertFlag@flag 0020  
                         _vPutSampleDataIntoTable 0392                                   __end_of_initPin 05E1  
                                           _timer 0051                                             pclath 000A  
                                           status 0003                                             wtemp0 007E  
                  __end_of_getAdOriginalCh14Value 04EE                     __size_of_startTwelveHourTimer 0009  
                            __end_of_clrSampeTime 066F                             __end_of_clearAllTimer 05AC  
                                    __end_of_main 031E                            __size_of_adc_test_init 0015  
                               __end_of_AD_Sample 04AC                                            ??_main 0048  
                            _clearPinPortAndTimer 059B                                            _ADCON0 001F  
                                          _ADCON1 009F                              __end_of_clock_config 064B  
                                          _DACCON 0087                                            _ADRESH 001E  
                                          _ADRESL 009E                                            _CLKPCE 0847  
                                          u110_25 03F2                                            i1l4020 039E  
                                          i1l4012 0000                                            i1l4030 0000  
                                          i1l4022 0000                                            i1l4014 0000  
                                          i1l4110 036E                                            i1l4102 0000  
                                          i1l2423 0000                                            i1l4032 03B3  
                                          i1l4024 03A4                                            i1l4112 0000  
                                          i1l4104 0361                                            i1l4042 0000  
                                          i1l4034 0000                                            i1l4018 0000  
                                          i1l4114 0000                                            i1l4106 0000  
                                          i1l4044 03CE                                            i1l4036 03B9  
                                          i1l4108 0000                                            i1l4054 03DA  
                                          i1l4046 0000                                            i1l4118 0000  
                                          i1l4056 0000                                            i1l4048 03D4  
                                          i1l4072 0000                                            i1l1761 0332  
                                          i1l4058 0000                                            i1l1666 0000  
                                          i1l1762 033C                                            i1l4082 0000  
                                          i1l4090 0346                                            i1l4076 0000  
                                          i1l4094 0000                                            i1l4078 0000  
                                          i1l4096 0000                                            i1l1769 0379  
                                          i1l4098 0000                                  __end_of_dac_init 0666  
                       ??_clearTwentySecondsTimer 0020                                            _TMR1IE 0460  
                                          _TMR1IF 0060                                 _getAD_ConvertFlag 043E  
                               _setAD_ConvertFlag 0440                                            _TRISA0 0428  
                                          _TRISA1 0429                                            _TRISB0 0430  
                                          _TRISA2 042A                                            _TRISB1 0431  
                                          _TRISA3 042B                                            _TRISB2 0432  
                                          _TRISB3 0433                                            _TRISB4 0434  
                                          _TRISA6 042E                                            _TRISB5 0435  
                                          _TRISA7 042F                                            _TRISB6 0436  
                                          _TRISB7 0437                                     main@ucTimer1s 005D  
                              ?_getAD_ConvertFlag 0070                                            _Filter 04EE  
                              ?_setAD_ConvertFlag 0070                                  __end_of_op1_init 0617  
                                __end_of_op2_init 0643                       ??_isFinishedThreeHoursTimer 0020  
                   __size_of_clearThreeHoursTimer 0003                                         ??_adc_get 0072  
                             ??_getAD_ConvertFlag 0020                               ??_setAD_ConvertFlag 0020  
                                          clrloop 0634                                  Filter@filter_buf 0026  
                                Filter@filter_sum 0040                                         ??_initPin 0020  
                       ??_vPutSampleDataIntoTable 0077                      __size_of_setAdcSampleChannel 0008  
                           ?_clearPinPortAndTimer 0070                                            saved_w 007E  
                         ??_clearTwelveHoursTimer 0020                       ?_process_AD_Converter_Value 0070  
                                   _adc_test_init 0429                  __size_of_startTwentySecondsTimer 0004  
                       __end_of_getAD_ConvertFlag 0440                         __end_of_setAD_ConvertFlag 0443  
                              __size_of_adc_start 0003                                    __pcstackCOMMON 0070  
                                    __pidataBANK0 0000                   __end_of_clearTwentySecondsTimer 05B5  
                            _uiSampleChannelFirst 00BE                    vPutSampleDataIntoTable@channel 0076  
                             main@ucTimerRightP5s 0067                         _isFinishedThreeHoursTimer 0652  
                         ??_getAdOriginalCh1Value 0048                             __end_of_timer1_config 0621  
                                  ?_adc_test_init 0020       vPutSampleDataIntoTable@ucChannelFirstLength 007D  
                __size_of_timer1_interrupt_config 0003                             __size_of_clrSampeTime 0002  
                                      __pbssBANK0 0048                                        __pbssBANK1 00A0  
                                      __pbssBANK3 0190                      __size_ofi1_setAD_ConvertFlag 0003  
                                      adc_get@val 0072                   __end_of_vPutSampleDataIntoTable 03F5  
                                         ?_Filter 0020                                        __pmaintext 0013  
                                      __pintentry 0004                               main@enumInteralStep 0054  
                                       ?_dac_init 0070                            ??_clearPinPortAndTimer 0020  
                           __size_of_clock_config 0008                                           _OP1CON0 001B  
                                         _OP1CON1 001C                                           _OP1CON2 001D  
                                         _OP2CON0 009B                                           _OP2CON1 009C  
                                         _OP2CON2 009D                                      _clrSampeTime 066D  
                               __end_of_adc_start 04B8                              _uiTwentySecondsTimer 004C  
                                       ?_op1_init 0070                                         ?_op2_init 0070  
                              _isPermitSampleTime 064B                                           Filter@i 0045  
                                         Filter@j 0044                            _buffer_Sample_AD_Value 00A0  
                              _adc_original_value 00B8                     __size_of_startThreeHoursTimer 0009  
                      __size_of_getAD_ConvertFlag 0002                        __size_of_setAD_ConvertFlag 0003  
                                  main@ucTimer20s 005E                       __size_of_getAdOriginalValue 0009  
                                  main@ucTimerP3s 0065                                    main@ucTimerP5s 0066  
                             ?_isPermitSampleTime 0070                                   __size_of_Filter 0097  
                                      _uiBigTimer 0048                                      _clock_config 0643  
                                         _adc_get 0386                               _multiFilterMaxValue 00BA  
            __end_of_isFinishedTwentySecondsTimer 065C             __size_of_isFinishedTwentySecondsTimer 0005  
                    _isFinishedTwentySecondsTimer 0657                               _multiFilterMinValue 00BC  
                            ??_isPermitSampleTime 0020                      __end_of_startTwelveHourTimer 0633  
                                      ??_dac_init 0020                                         _AD_Sample 0443  
                                    __size_of_ISR 0068                                           _initPin 05CE  
                   __size_of_getAdOriginaCh4Value 0009                                   ??_adc_test_init 0021  
                                      ??_op1_init 0020                                        ??_op2_init 0020  
                         _startTwentySecondsTimer 0666                              end_of_initialization 05CB  
                               Filter@filter_temp 003E                               _setAdcSampleChannel 04B8  
                                main@ucLoaderStep 0058                                        ?_AD_Sample 0070  
                   ?_isFinishedTwentySecondsTimer 0070                              main@enumMainLoopStep 0055  
                              main@ucChannel4Type 0057                      ??_isFinishedTwelveHoursTimer 0020  
                                       Filter@cir 0042                                  _adc_convert_flag 004F  
                            ?_setAdcSampleChannel 0070                            __size_of_clearAllTimer 0005  
                    __end_of_clearThreeHoursTimer 05B2                            main@ucTimerADC1ZeroP5s 005F  
                  __size_of_clearTwelveHoursTimer 0003                           _timer1_interrupt_config 066A  
                   __end_of_clearTwelveHoursTimer 05AF                __size_of_isFinishedThreeHoursTimer 0005  
                                  AD_Sample@index 0024                                  main@ucTimerX1P5s 0068  
                                main@ucTimerX2P5s 0069                            main@ucTimerZeroPoint3s 006A  
                          main@ucTimerZeroPoint5s 006B                                  main@ucTimerDelay 0060  
                                  __end_of_Filter 0585                                   main@ucADC4_Step 0056  
             __size_of_isFinishedTwelveHoursTimer 0005                          vPutSampleDataIntoTable@i 0077  
                             i1_setAD_ConvertFlag 03F5                         ??_startTwentySecondsTimer 0020  
                           ??_setAdcSampleChannel 0020                               start_initialization 05B5  
                                     __end_of_ISR 0386                             _uiSampleChannelFourth 00D6  
                        ?_clearTwentySecondsTimer 0070                    __size_of_getAdOriginalCh1Value 0009  
                   __end_of_getAdOriginalCh1Value 04E4                          ??_getAdOriginalCh14Value 0048  
                            ?i1_setAD_ConvertFlag 0070                              _startTwelveHourTimer 062A  
               __end_of_isFinishedThreeHoursTimer 0657                                main@enumBranchStep 0053  
                                        ??_Filter 0022                                     _clearAllTimer 05A7  
                                     __pdataBANK0 006E                          ?_vPutSampleDataIntoTable 0074  
                                     ??_AD_Sample 0022                         ??_timer1_interrupt_config 0020  
                                     __pbssCOMMON 007D                                 __size_of_dac_init 0005  
                                   __pcstackBANK0 0020                    ??_isFinishedTwentySecondsTimer 0020  
                                       _adc_start 04B5                                 __size_of_op1_init 000B  
                               __size_of_op2_init 0008                             ??i1_setAD_ConvertFlag 0070  
                           ?_startTwelveHourTimer 0020                   __end_of_startTwentySecondsTimer 066A  
                                  ?_clearAllTimer 0070                            __size_of_timer1_config 000A  
                            _clearThreeHoursTimer 05AF                      __end_of_startThreeHoursTimer 062A  
                                       __ptext730 04DB                                         __ptext731 04E4  
                                       __ptext740 0657                                         __ptext732 05A7  
                                       __ptext741 0666                                         __ptext733 04B8  
                                       __ptext750 0429                                         __ptext742 065C  
                                       __ptext734 04AC                                         __ptext726 0408  
                                       __ptext751 066A                                         __ptext743 062A  
                                       __ptext735 0440                                         __ptext727 059B  
                                       __ptext760 0386                                         __ptext752 0617  
                                       __ptext744 066D                                         __ptext736 043E  
                                       __ptext728 0443                                         __ptext761 0392  
                                       __ptext753 0643                                         __ptext745 064B  
                                       __ptext737 04EE                                         __ptext729 04D2  
                                       __ptext762 0000                                         __ptext754 05CE  
                                       __ptext746 04B5                                         __ptext738 0652  
                                       __ptext755 05B2                                         __ptext747 063B  
                                       __ptext739 0621                                         __ptext756 05AF  
                                       __ptext748 060C                                         __ptext757 05AC  
                                       __ptext749 0661                                         __ptext758 031E  
                                       __ptext759 03F5                                          ?_adc_get 0070  
                                       __pswtext1 05E1                                         __pswtext2 05EF  
                                       __pswtext3 0600                __end_of_isFinishedTwelveHoursTimer 0661  
                      _isFinishedTwelveHoursTimer 065C                                   ISR@ucTimer1sCnt 004E  
                                        ?_initPin 0070                     __size_of_clearPinPortAndTimer 000C  
                      __end_of_getAdOriginalValue 04B5                         _uiSampleChannelFourteenth 0190  
                                      ?_adc_start 0070                   __size_of_getAdOriginalCh14Value 000A  
                               interrupt_function 0004                      __end_of_getAdOriginaCh4Value 04DB  
                 __end_of_timer1_interrupt_config 066D                             ?_clearThreeHoursTimer 0070  
                            adc_test_init@channel 0022               vPutSampleDataIntoTable@uiSampleData 0074  
    vPutSampleDataIntoTable@ucChannelFourthLength 006D                       __size_of_isPermitSampleTime 0007  
                                    _uiSmallTimer 004A                             __end_of_adc_test_init 043E  
                                   _timer1_config 0617                      ??_process_AD_Converter_Value 0025  
                          ??_startTwelveHourTimer 0022                                   ??_clearAllTimer 0020  
                          _getAdOriginalCh14Value 04E4                                  __size_of_adc_get 000C  
             __size_of_process_AD_Converter_Value 0021                                          _dac_init 0661  
vPutSampleDataIntoTable@ucChannelFourteenthLength 006C                                  __size_of_initPin 0013  
                                main@cTimer1s_810 0052                                    Filter@tmpValue 0020  
                                  ?_timer1_config 0070                                          _op1_init 060C  
                                        _op2_init 063B                                       ??_adc_start 0020  
                            _startThreeHoursTimer 0621                             _clearTwelveHoursTimer 05AC  
                                   __size_of_main 030B                                          clear_ram 0633  
                          ??_clearThreeHoursTimer 0020                  __size_of_clearTwentySecondsTimer 0003  
                     __end_of_setAdcSampleChannel 04C0                                     ?_clrSampeTime 0070  
                            _getAdOriginaCh4Value 04D2                                       _sampleTimes 0050  
                           ?_startThreeHoursTimer 0020                  __size_of_vPutSampleDataIntoTable 0063  
                                        intlevel1 0000                             _getAdOriginalCh1Value 04DB  
                    setAdcSampleChannel@ucChannel 0021                        ?_isFinishedThreeHoursTimer 0070  
                               main@ucLoaderStep1 0059                                 main@ucLoaderStep2 005A  
                               main@ucLoaderStep3 005B                                 main@ucLoaderStep4 005C  
                                   ?_clock_config 0070                          ?_startTwentySecondsTimer 0070  
                   startThreeHoursTimer@uiSetTime 0020                           i1setAD_ConvertFlag@flag 0070  
                                  ??_clrSampeTime 0020                       ?_isFinishedTwelveHoursTimer 0070  
                           ?_getAdOriginaCh4Value 0046                                   ??_timer1_config 0020  
                     __end_ofi1_setAD_ConvertFlag 03F8                __end_of_process_AD_Converter_Value 0429  
                      _process_AD_Converter_Value 0408                            ?_clearTwelveHoursTimer 0070  
                                adc_test_init@ref 0020                      __end_of_clearPinPortAndTimer 05A7  
                              _getAdOriginalValue 04AC  
