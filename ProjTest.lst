

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Sat Nov 16 21:49:18 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,delta=2
    16                           	psect	text1179,local,class=CODE,delta=2
    17                           	psect	text1180,local,class=CODE,delta=2
    18                           	psect	text1181,local,class=CODE,delta=2
    19                           	psect	text1182,local,class=CODE,delta=2
    20                           	psect	text1187,local,class=CODE,delta=2
    21                           	psect	text1188,local,class=CODE,delta=2
    22                           	psect	text1189,local,class=CODE,delta=2
    23                           	psect	text1190,local,class=CODE,delta=2
    24                           	psect	text1191,local,class=CODE,delta=2
    25                           	psect	text1192,local,class=CODE,delta=2
    26                           	psect	text1193,local,class=CODE,delta=2
    27                           	psect	text1194,local,class=CODE,delta=2
    28                           	psect	text1195,local,class=CODE,delta=2
    29                           	psect	text1196,local,class=CODE,delta=2
    30                           	psect	text1197,local,class=CODE,delta=2
    31                           	psect	text1198,local,class=CODE,delta=2
    32                           	psect	text1200,local,class=CODE,delta=2
    33                           	psect	text1202,local,class=CODE,delta=2
    34                           	psect	text1203,local,class=CODE,delta=2
    35                           	psect	text1204,local,class=CODE,delta=2
    36                           	psect	text1205,local,class=CODE,delta=2
    37                           	psect	text1206,local,class=CODE,delta=2
    38                           	psect	text1207,local,class=CODE,delta=2
    39                           	psect	text1215,local,class=CODE,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	text1221,local,class=CODE,delta=2
    42                           	psect	pa_nodes,global,class=CODE,delta=2
    43                           	dabs	1,0x7E,2
    44  000A                     	;#
    45                           
    46                           	psect	config
    47  2000  0FFF               	dw	4095	;#
    48  2001  3FDE               	dw	16350	;#
    49  2002  3FF8               	dw	16376	;#
    50                           
    51                           	psect	idataBANK0
    52  0000                     __pidataBANK0:	
    53  001F                     _ADCON0	set	31
    54  001E                     _ADRESH	set	30
    55  0017                     _CCP1CON	set	23
    56  0015                     _CCPR1L	set	21
    57  0010                     _T1CON	set	16
    58  0012                     _T2CON	set	18
    59  000F                     _TMR1H	set	15
    60  000E                     _TMR1L	set	14
    61  006A                     _ADIF	set	106
    62  00F8                     _ADON	set	248
    63  005F                     _GIE	set	95
    64  00F9                     _GO	set	249
    65  0032                     _PB2	set	50
    66  0033                     _PB3	set	51
    67  0034                     _PB4	set	52
    68  0035                     _PB5	set	53
    69  005E                     _PEIE	set	94
    70  0060                     _TMR1IF	set	96
    71  009F                     _ADCON1	set	159
    72  009E                     _ADRESL	set	158
    73  0092                     _PR2	set	146
    74  046A                     _ADIE	set	1130
    75  0460                     _TMR1IE	set	1120
    76  0430                     _TRISB0	set	1072
    77  0431                     _TRISB1	set	1073
    78  0432                     _TRISB2	set	1074
    79  0433                     _TRISB3	set	1075
    80  0434                     _TRISB4	set	1076
    81  0435                     _TRISB5	set	1077
    82  0108                     _CLKPR	set	264
    83  0847                     _CLKPCE	set	2119
    84  0C42                     _PBOD2	set	3138
    85                           
    86                           	psect	cinit
    87  0525                     start_initialization:	
    88  0525  303D               	movlw	low __pbssBANK0
    89                           
    90                           ; Clear objects allocated to COMMON
    91  0526  01FD               	clrf	__pbssCOMMON& (0+127)
    92                           
    93                           ; Clear objects allocated to BANK0
    94  0527  1383               	bcf	3,7	;select IRP bank0
    95  0528  0084               	movwf	4
    96  0529  3057               	movlw	low (__pbssBANK0+26)
    97  052A  118A  25A4  118A   	fcall	clear_ram
    98                           
    99                           ; Clear objects allocated to BANK1
   100  052D  30A0               	movlw	low __pbssBANK1
   101  052E  0084               	movwf	4
   102  052F  30C0               	movlw	low (__pbssBANK1+32)
   103  0530  118A  25A4         	fcall	clear_ram
   104                           
   105                           ;initializer for _sampleChannelSelect
   106  0532  300C               	movlw	12
   107  0533  00D7               	movwf	__pdataBANK0& (0+127)
   108                           
   109                           ;initializer for vPutSampleDataIntoTable@uiInitWidth
   110  0534  304B               	movlw	75
   111  0535  00D8               	movwf	(__pdataBANK0+1)& (0+127)
   112  0536                     end_of_initialization:	
   113                           ;End of C runtime variable initialization code
   114                           
   115  0536  0183               	clrf	3
   116  0537  118A  29FE         	ljmp	_main	;jump to C main() function
   117                           
   118                           	psect	bssCOMMON
   119  007D                     __pbssCOMMON:	
   120  007D                     vPutSampleDataIntoTable@ucChannelFirstLength:	
   121  007D                     	ds	1
   122                           
   123                           	psect	bssBANK0
   124  003D                     __pbssBANK0:	
   125  003D                     _uiBigTimer:	
   126  003D                     	ds	2
   127  003F                     _uiOneHourTimer:	
   128  003F                     	ds	2
   129  0041                     _uiSmallTimer:	
   130  0041                     	ds	2
   131  0043                     _uiTwentyMinTimer:	
   132  0043                     	ds	2
   133  0045                     vPutSampleDataIntoTable@uiCalWidthArrayNew:	
   134  0045                     	ds	2
   135  0047                     ISR@ucTimer1sCnt:	
   136  0047                     	ds	1
   137  0048                     _adc_convert_flag:	
   138  0048                     	ds	1
   139  0049                     _bBigTimerStartFlag:	
   140  0049                     	ds	1
   141  004A                     _bOneHourTimerStartFlag:	
   142  004A                     	ds	1
   143  004B                     _bSmallTimerStartFlag:	
   144  004B                     	ds	1
   145  004C                     _bTwentyMinStartFlag:	
   146  004C                     	ds	1
   147  004D                     _sampleTimes:	
   148  004D                     	ds	1
   149  004E                     _timer:	
   150  004E                     	ds	1
   151  004F                     main@cTimerP5s_786:	
   152  004F                     	ds	1
   153  0050                     main@cTimerP5s_792:	
   154  0050                     	ds	1
   155  0051                     main@ucStep:	
   156  0051                     	ds	1
   157  0052                     main@ucTimerP3s:	
   158  0052                     	ds	1
   159  0053                     main@ucTimerP5s:	
   160  0053                     	ds	1
   161  0054                     setPWM_Width@ucOldWidth:	
   162  0054                     	ds	1
   163  0055                     vPutSampleDataIntoTable@ucChannelFourteenthLength:	
   164  0055                     	ds	1
   165  0056                     vPutSampleDataIntoTable@ucChannelFourthLength:	
   166  0056                     	ds	1
   167                           
   168                           	psect	dataBANK0
   169  0057                     __pdataBANK0:	
   170  0057                     _sampleChannelSelect:	
   171  0057                     	ds	1
   172  0058                     vPutSampleDataIntoTable@uiInitWidth:	
   173  0058                     	ds	1
   174                           
   175                           	psect	bssBANK1
   176  00A0                     __pbssBANK1:	
   177  00A0                     _uiTwentySecondsTimer:	
   178  00A0                     	ds	2
   179  00A2                     main@ucDelay1s:	
   180  00A2                     	ds	2
   181  00A4                     main@uiTimerOneP5s:	
   182  00A4                     	ds	2
   183  00A6                     main@uiTimerThreeP5s:	
   184  00A6                     	ds	2
   185  00A8                     main@uiTimerTwoP5s:	
   186  00A8                     	ds	2
   187  00AA                     vPutSampleDataIntoTable@uiCalWidthArrayOld:	
   188  00AA                     	ds	2
   189  00AC                     vPutSampleDataIntoTable@uiCalWidthCnt:	
   190  00AC                     	ds	2
   191  00AE                     _uiSampleChannelFirst:	
   192  00AE                     	ds	6
   193  00B4                     _uiSampleChannelFourteenth:	
   194  00B4                     	ds	6
   195  00BA                     _uiSampleChannelFourth:	
   196  00BA                     	ds	6
   197                           
   198                           	psect	clrtext
   199  05A4                     clear_ram:	
   200                           ;	Called with FSR containing the base address, and
   201                           ;	W with the last address+1
   202                           
   203  05A4  0064               	clrwdt	;clear the watchdog before getting into this loop
   204  05A5                     clrloop:	
   205  05A5  0180               	clrf	0	;clear RAM location pointed to by FSR
   206  05A6  0A84               	incf	4,f	;increment pointer
   207  05A7  0604               	xorwf	4,w	;XOR with final address
   208  05A8  1903               	btfsc	3,2	;have we reached the end yet?
   209  05A9  3400               	retlw	0	;all done for this memory range, return
   210  05AA  0604               	xorwf	4,w	;XOR again to restore value
   211  05AB  2DA5               	goto	clrloop	;do the next byte
   212                           
   213                           	psect	cstackBANK1
   214  00C0                     __pcstackBANK1:	
   215  00C0                     FilterCh13@tmpValue:	
   216                           
   217                           ; 1 bytes @ 0x0
   218  00C0                     	ds	1
   219  00C1                     FilterCh13@filter_temp:	
   220                           
   221                           ; 2 bytes @ 0x1
   222  00C1                     	ds	2
   223  00C3                     FilterCh13@filter_sum:	
   224                           
   225                           ; 2 bytes @ 0x3
   226  00C3                     	ds	2
   227  00C5                     FilterCh13@filter_buf:	
   228                           
   229                           ; 6 bytes @ 0x5
   230  00C5                     	ds	6
   231  00CB                     FilterCh13@cir:	
   232                           
   233                           ; 2 bytes @ 0xB
   234  00CB                     	ds	2
   235  00CD                     FilterCh13@j:	
   236                           
   237                           ; 1 bytes @ 0xD
   238  00CD                     	ds	1
   239  00CE                     FilterCh13@i:	
   240                           
   241                           ; 1 bytes @ 0xE
   242  00CE                     	ds	1
   243  00CF                     ?_getAdOriginalCh13Value:	
   244                           
   245                           ; 2 bytes @ 0xF
   246  00CF                     	ds	2
   247  00D1                     ??_main:	
   248                           
   249                           ; 0 bytes @ 0x11
   250  00D1                     	ds	1
   251  00D2                     main@ucChValue:	
   252                           
   253                           ; 2 bytes @ 0x12
   254  00D2                     	ds	2
   255  00D4                     main@uiCh13Value:	
   256                           
   257                           ; 2 bytes @ 0x14
   258  00D4                     	ds	2
   259                           
   260                           	psect	cstackCOMMON
   261  0070                     __pcstackCOMMON:	
   262  0070                     ?_clock_config:	
   263  0070                     ?_timer1_config:	
   264                           ; 0 bytes @ 0x0
   265                           
   266  0070                     ?_timer1_interrupt_config:	
   267                           ; 0 bytes @ 0x0
   268                           
   269  0070                     ?_adc_start:	
   270                           ; 0 bytes @ 0x0
   271                           
   272  0070                     ?_process_AD_Converter_Value:	
   273                           ; 0 bytes @ 0x0
   274                           
   275  0070                     ?_clrSampeTime:	
   276                           ; 0 bytes @ 0x0
   277                           
   278  0070                     ?_clearTwentyMinTimer:	
   279                           ; 0 bytes @ 0x0
   280                           
   281  0070                     ?_clearTwelveHoursTimer:	
   282                           ; 0 bytes @ 0x0
   283                           
   284  0070                     ?_clearThreeHoursTimer:	
   285                           ; 0 bytes @ 0x0
   286                           
   287  0070                     ?_AD_Sample:	
   288                           ; 0 bytes @ 0x0
   289                           
   290  0070                     ?_initPB3:	
   291                           ; 0 bytes @ 0x0
   292                           
   293  0070                     ?_setPB3:	
   294                           ; 0 bytes @ 0x0
   295                           
   296  0070                     ?_initPB4:	
   297                           ; 0 bytes @ 0x0
   298                           
   299  0070                     ?_setPB4:	
   300                           ; 0 bytes @ 0x0
   301                           
   302  0070                     ?_initPB5:	
   303                           ; 0 bytes @ 0x0
   304                           
   305  0070                     ?_setPB5:	
   306                           ; 0 bytes @ 0x0
   307                           
   308  0070                     ?_initPB2_AsHighResistence:	
   309                           ; 0 bytes @ 0x0
   310                           
   311  0070                     ?_initPin:	
   312                           ; 0 bytes @ 0x0
   313                           
   314  0070                     ?_setPinInitVaule:	
   315                           ; 0 bytes @ 0x0
   316                           
   317  0070                     ?_selectAdChannel:	
   318                           ; 0 bytes @ 0x0
   319                           
   320  0070                     ?_reset:	
   321                           ; 0 bytes @ 0x0
   322                           
   323  0070                     ?_setPWM_Width:	
   324                           ; 0 bytes @ 0x0
   325                           
   326  0070                     ??_setPWM_Width:	
   327                           ; 0 bytes @ 0x0
   328                           
   329  0070                     ?_setAD_ConvertFlag:	
   330                           ; 0 bytes @ 0x0
   331                           
   332  0070                     ?_ISR:	
   333                           ; 0 bytes @ 0x0
   334                           
   335  0070                     ?i1_setAD_ConvertFlag:	
   336                           ; 0 bytes @ 0x0
   337                           
   338  0070                     ??i1_setAD_ConvertFlag:	
   339                           ; 0 bytes @ 0x0
   340                           
   341  0070                     ?_isPermitSampleTime:	
   342                           ; 0 bytes @ 0x0
   343                           
   344  0070                     ?_isFinishedTwentyMinTimer:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?_isFinishedTwelveHoursTimer:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ?_isFinishedThreeHoursTimer:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ?_isFinishedOneHoursTimer:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_getAD_ConvertFlag:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ?_adc_get:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ?_main:	
   363                           ; 2 bytes @ 0x0
   364                           
   365  0070                     ?_Filter:	
   366                           ; 2 bytes @ 0x0
   367                           
   368  0070                     setPWM_Width@ucWidth:	
   369                           ; 2 bytes @ 0x0
   370                           
   371  0070                     i1setAD_ConvertFlag@flag:	
   372                           ; 1 bytes @ 0x0
   373                           
   374                           
   375                           ; 1 bytes @ 0x0
   376  0070                     	ds	2
   377  0072                     ??_adc_get:	
   378  0072                     ??_Filter:	
   379                           ; 0 bytes @ 0x2
   380                           
   381  0072                     adc_get@val:	
   382                           ; 0 bytes @ 0x2
   383                           
   384                           
   385                           ; 2 bytes @ 0x2
   386  0072                     	ds	4
   387  0076                     ?_vPutSampleDataIntoTable:	
   388  0076                     vPutSampleDataIntoTable@uiSampleData:	
   389                           ; 0 bytes @ 0x6
   390                           
   391                           
   392                           ; 2 bytes @ 0x6
   393  0076                     	ds	2
   394  0078                     vPutSampleDataIntoTable@channel:	
   395                           
   396                           ; 1 bytes @ 0x8
   397  0078                     	ds	1
   398  0079                     ??_vPutSampleDataIntoTable:	
   399                           
   400                           ; 0 bytes @ 0x9
   401  0079                     	ds	4
   402                           
   403                           	psect	cstackBANK0
   404  0020                     __pcstackBANK0:	
   405  0020                     Filter@filter_temp:	
   406                           
   407                           ; 2 bytes @ 0x0
   408  0020                     	ds	2
   409  0022                     Filter@filter_sum:	
   410                           
   411                           ; 2 bytes @ 0x2
   412  0022                     	ds	2
   413  0024                     Filter@tmpValue:	
   414                           
   415                           ; 1 bytes @ 0x4
   416  0024                     	ds	1
   417  0025                     Filter@filter_buf:	
   418                           
   419                           ; 6 bytes @ 0x5
   420  0025                     	ds	6
   421  002B                     Filter@cir:	
   422                           
   423                           ; 2 bytes @ 0xB
   424  002B                     	ds	2
   425  002D                     Filter@j:	
   426                           
   427                           ; 1 bytes @ 0xD
   428  002D                     	ds	1
   429  002E                     Filter@i:	
   430                           
   431                           ; 1 bytes @ 0xE
   432  002E                     	ds	1
   433  002F                     vPutSampleDataIntoTable@uiDeviationValue:	
   434                           
   435                           ; 2 bytes @ 0xF
   436  002F                     	ds	2
   437  0031                     vPutSampleDataIntoTable@i:	
   438                           
   439                           ; 2 bytes @ 0x11
   440  0031                     	ds	2
   441  0033                     ??_ISR:	
   442                           
   443                           ; 0 bytes @ 0x13
   444  0033                     	ds	4
   445  0037                     ??_clock_config:	
   446  0037                     ??_timer1_config:	
   447                           ; 0 bytes @ 0x17
   448                           
   449  0037                     ??_timer1_interrupt_config:	
   450                           ; 0 bytes @ 0x17
   451                           
   452  0037                     ?_adc_test_init:	
   453                           ; 0 bytes @ 0x17
   454                           
   455  0037                     ?_startTwentyMinTimer:	
   456                           ; 0 bytes @ 0x17
   457                           
   458  0037                     ??_adc_start:	
   459                           ; 0 bytes @ 0x17
   460                           
   461  0037                     ??_isPermitSampleTime:	
   462                           ; 0 bytes @ 0x17
   463                           
   464  0037                     ??_clrSampeTime:	
   465                           ; 0 bytes @ 0x17
   466                           
   467  0037                     ??_isFinishedTwentyMinTimer:	
   468                           ; 0 bytes @ 0x17
   469                           
   470  0037                     ??_clearTwentyMinTimer:	
   471                           ; 0 bytes @ 0x17
   472                           
   473  0037                     ?_startTwelveHourTimer:	
   474                           ; 0 bytes @ 0x17
   475                           
   476  0037                     ??_isFinishedTwelveHoursTimer:	
   477                           ; 0 bytes @ 0x17
   478                           
   479  0037                     ??_clearTwelveHoursTimer:	
   480                           ; 0 bytes @ 0x17
   481                           
   482  0037                     ?_startThreeHoursTimer:	
   483                           ; 0 bytes @ 0x17
   484                           
   485  0037                     ??_isFinishedThreeHoursTimer:	
   486                           ; 0 bytes @ 0x17
   487                           
   488  0037                     ??_clearThreeHoursTimer:	
   489                           ; 0 bytes @ 0x17
   490                           
   491  0037                     ?_startOneHoursTimer:	
   492                           ; 0 bytes @ 0x17
   493                           
   494  0037                     ??_isFinishedOneHoursTimer:	
   495                           ; 0 bytes @ 0x17
   496                           
   497  0037                     ??_AD_Sample:	
   498                           ; 0 bytes @ 0x17
   499                           
   500  0037                     ??_initPB3:	
   501                           ; 0 bytes @ 0x17
   502                           
   503  0037                     ??_setPB3:	
   504                           ; 0 bytes @ 0x17
   505                           
   506  0037                     ??_initPB4:	
   507                           ; 0 bytes @ 0x17
   508                           
   509  0037                     ??_setPB4:	
   510                           ; 0 bytes @ 0x17
   511                           
   512  0037                     ??_initPB5:	
   513                           ; 0 bytes @ 0x17
   514                           
   515  0037                     ??_setPB5:	
   516                           ; 0 bytes @ 0x17
   517                           
   518  0037                     ??_initPB2_AsHighResistence:	
   519                           ; 0 bytes @ 0x17
   520                           
   521  0037                     ?_pwm_start:	
   522                           ; 0 bytes @ 0x17
   523                           
   524  0037                     ??_selectAdChannel:	
   525                           ; 0 bytes @ 0x17
   526                           
   527  0037                     ??_reset:	
   528                           ; 0 bytes @ 0x17
   529                           
   530  0037                     ??_getAD_ConvertFlag:	
   531                           ; 0 bytes @ 0x17
   532                           
   533  0037                     ??_setAD_ConvertFlag:	
   534                           ; 0 bytes @ 0x17
   535                           
   536  0037                     ?_FilterCh13:	
   537                           ; 0 bytes @ 0x17
   538                           
   539  0037                     initPB3@bValue:	
   540                           ; 2 bytes @ 0x17
   541                           
   542  0037                     setPB3@bValue:	
   543                           ; 1 bytes @ 0x17
   544                           
   545  0037                     initPB4@bValue:	
   546                           ; 1 bytes @ 0x17
   547                           
   548  0037                     setPB4@bValue:	
   549                           ; 1 bytes @ 0x17
   550                           
   551  0037                     initPB5@bValue:	
   552                           ; 1 bytes @ 0x17
   553                           
   554  0037                     setPB5@bValue:	
   555                           ; 1 bytes @ 0x17
   556                           
   557  0037                     pwm_start@ucPulseFrequency:	
   558                           ; 1 bytes @ 0x17
   559                           
   560  0037                     setAD_ConvertFlag@flag:	
   561                           ; 1 bytes @ 0x17
   562                           
   563  0037                     adc_test_init@ref:	
   564                           ; 1 bytes @ 0x17
   565                           
   566  0037                     startTwelveHourTimer@uiSetTime:	
   567                           ; 1 bytes @ 0x17
   568                           
   569  0037                     startThreeHoursTimer@uiSetTime:	
   570                           ; 2 bytes @ 0x17
   571                           
   572  0037                     startOneHoursTimer@uiSetTime:	
   573                           ; 2 bytes @ 0x17
   574                           
   575  0037                     startTwentyMinTimer@uiSetValue:	
   576                           ; 2 bytes @ 0x17
   577                           
   578                           
   579                           ; 2 bytes @ 0x17
   580  0037                     	ds	1
   581  0038                     ??_adc_test_init:	
   582  0038                     ??_pwm_start:	
   583                           ; 0 bytes @ 0x18
   584                           
   585  0038                     ??_initPin:	
   586                           ; 0 bytes @ 0x18
   587                           
   588  0038                     ??_setPinInitVaule:	
   589                           ; 0 bytes @ 0x18
   590                           
   591  0038                     pwm_start@ucPulseWidth:	
   592                           ; 0 bytes @ 0x18
   593                           
   594                           
   595                           ; 1 bytes @ 0x18
   596  0038                     	ds	1
   597  0039                     ??_startTwentyMinTimer:	
   598  0039                     ??_startTwelveHourTimer:	
   599                           ; 0 bytes @ 0x19
   600                           
   601  0039                     ??_startThreeHoursTimer:	
   602                           ; 0 bytes @ 0x19
   603                           
   604  0039                     ??_startOneHoursTimer:	
   605                           ; 0 bytes @ 0x19
   606                           
   607  0039                     ??_FilterCh13:	
   608                           ; 0 bytes @ 0x19
   609                           
   610  0039                     adc_test_init@channel:	
   611                           ; 0 bytes @ 0x19
   612                           
   613                           
   614                           ; 1 bytes @ 0x19
   615  0039                     	ds	1
   616  003A                     ??_process_AD_Converter_Value:	
   617                           
   618                           ; 0 bytes @ 0x1A
   619  003A                     	ds	3
   620  003D                     ??_getAdOriginalCh13Value:	
   621                           
   622                           	psect	maintext
   623  01FE                     __pmaintext:	
   624                           ; 0 bytes @ 0x1D
   625 ;;Data sizes: Strings 0, constant 0, data 2, bss 59, persistent 0 stack 0
   626 ;;Auto spaces:   Size  Autos    Used
   627 ;; COMMON          14     13      14
   628 ;; BANK0           80     29      57
   629 ;; BANK1           80     22      54
   630 ;; BANK3           96      0       0
   631 ;; BANK2           96      0       0
   632 ;;
   633 ;; Pointer list with targets:
   634 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   635 ;;
   636 ;; ?_getAdOriginalCh13Value	unsigned int  size(1) Largest target is 0
   637 ;;
   638 ;; ?_Filter	unsigned int  size(1) Largest target is 0
   639 ;;
   640 ;; ?_FilterCh13	unsigned int  size(1) Largest target is 0
   641 ;;
   642 ;; Filter@tmpValue	PTR int  size(1) Largest target is 6
   643 ;;		 -> uiSampleChannelFourteenth(BANK1[6]), uiSampleChannelFirst(BANK1[6]), 
   644 ;;
   645 ;; FilterCh13@tmpValue	PTR int  size(1) Largest target is 6
   646 ;;		 -> uiSampleChannelFourth(BANK1[6]), 
   647 ;;
   648 ;;
   649 ;; Critical Paths under _main in COMMON
   650 ;;
   651 ;;   None.
   652 ;;
   653 ;; Critical Paths under _ISR in COMMON
   654 ;;
   655 ;;   _ISR->_vPutSampleDataIntoTable
   656 ;;   _vPutSampleDataIntoTable->_Filter
   657 ;;
   658 ;; Critical Paths under _main in BANK0
   659 ;;
   660 ;;   _getAdOriginalCh13Value->_FilterCh13
   661 ;;   _process_AD_Converter_Value->_adc_test_init
   662 ;;   _setPinInitVaule->_setPB3
   663 ;;   _setPinInitVaule->_setPB4
   664 ;;   _setPinInitVaule->_setPB5
   665 ;;   _initPin->_initPB3
   666 ;;   _initPin->_initPB4
   667 ;;   _initPin->_initPB5
   668 ;;
   669 ;; Critical Paths under _ISR in BANK0
   670 ;;
   671 ;;   _ISR->_vPutSampleDataIntoTable
   672 ;;   _vPutSampleDataIntoTable->_Filter
   673 ;;
   674 ;; Critical Paths under _main in BANK1
   675 ;;
   676 ;;   _main->_getAdOriginalCh13Value
   677 ;;   _getAdOriginalCh13Value->_FilterCh13
   678 ;;
   679 ;; Critical Paths under _ISR in BANK1
   680 ;;
   681 ;;   None.
   682 ;;
   683 ;; Critical Paths under _main in BANK3
   684 ;;
   685 ;;   None.
   686 ;;
   687 ;; Critical Paths under _ISR in BANK3
   688 ;;
   689 ;;   None.
   690 ;;
   691 ;; Critical Paths under _main in BANK2
   692 ;;
   693 ;;   None.
   694 ;;
   695 ;; Critical Paths under _ISR in BANK2
   696 ;;
   697 ;;   None.
   698 ;;
   699 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   700 ;;
   701 ;;
   702 ;;Call Graph Tables:
   703 ;;
   704 ;; ---------------------------------------------------------------------------------
   705 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   706 ;; ---------------------------------------------------------------------------------
   707 ;; (0) _main                                                 5     5      0    1665
   708 ;;                                             17 BANK1      5     5      0
   709 ;;                            _initPin
   710 ;;                    _setPinInitVaule
   711 ;;                    _selectAdChannel
   712 ;;                       _clock_config
   713 ;;                      _timer1_config
   714 ;;            _timer1_interrupt_config
   715 ;;                      _adc_test_init
   716 ;;                _startTwentyMinTimer
   717 ;;                          _pwm_start
   718 ;;                          _adc_start
   719 ;;         _process_AD_Converter_Value
   720 ;;                 _isPermitSampleTime
   721 ;;                       _clrSampeTime
   722 ;;           _isFinishedTwentyMinTimer
   723 ;;             _getAdOriginalCh13Value
   724 ;;                             _setPB3
   725 ;;                             _setPB4
   726 ;;                             _setPB5
   727 ;;                _clearTwentyMinTimer
   728 ;;               _startTwelveHourTimer
   729 ;;         _isFinishedTwelveHoursTimer
   730 ;;              _clearTwelveHoursTimer
   731 ;;               _startThreeHoursTimer
   732 ;;          _isFinishedThreeHoursTimer
   733 ;;               _clearThreeHoursTimer
   734 ;;                 _startOneHoursTimer
   735 ;;            _isFinishedOneHoursTimer
   736 ;;                              _reset
   737 ;; ---------------------------------------------------------------------------------
   738 ;; (1) _getAdOriginalCh13Value                               2     0      2     915
   739 ;;                                             15 BANK1      2     0      2
   740 ;;                         _FilterCh13
   741 ;; ---------------------------------------------------------------------------------
   742 ;; (1) _process_AD_Converter_Value                           0     0      0      93
   743 ;;                  _getAD_ConvertFlag
   744 ;;                  _setAD_ConvertFlag
   745 ;;                          _AD_Sample
   746 ;;                      _adc_test_init
   747 ;;                          _adc_start
   748 ;; ---------------------------------------------------------------------------------
   749 ;; (1) _setPinInitVaule                                      0     0      0      93
   750 ;;                             _setPB3
   751 ;;                             _setPB4
   752 ;;                             _setPB5
   753 ;; ---------------------------------------------------------------------------------
   754 ;; (1) _initPin                                              0     0      0      93
   755 ;;           _initPB2_AsHighResistence
   756 ;;                            _initPB3
   757 ;;                            _initPB4
   758 ;;                            _initPB5
   759 ;; ---------------------------------------------------------------------------------
   760 ;; (2) _AD_Sample                                            0     0      0       0
   761 ;; ---------------------------------------------------------------------------------
   762 ;; (2) _setAD_ConvertFlag                                    1     1      0      31
   763 ;;                                             23 BANK0      1     1      0
   764 ;; ---------------------------------------------------------------------------------
   765 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   766 ;; ---------------------------------------------------------------------------------
   767 ;; (2) _FilterCh13                                          21    19      2     915
   768 ;;                                             23 BANK0      6     4      2
   769 ;;                                              0 BANK1     15    15      0
   770 ;; ---------------------------------------------------------------------------------
   771 ;; (1) _isFinishedOneHoursTimer                              0     0      0       0
   772 ;; ---------------------------------------------------------------------------------
   773 ;; (1) _startOneHoursTimer                                   2     0      2      31
   774 ;;                                             23 BANK0      2     0      2
   775 ;; ---------------------------------------------------------------------------------
   776 ;; (1) _clearThreeHoursTimer                                 0     0      0       0
   777 ;; ---------------------------------------------------------------------------------
   778 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   779 ;; ---------------------------------------------------------------------------------
   780 ;; (1) _startThreeHoursTimer                                 2     0      2      31
   781 ;;                                             23 BANK0      2     0      2
   782 ;; ---------------------------------------------------------------------------------
   783 ;; (1) _clearTwelveHoursTimer                                0     0      0       0
   784 ;; ---------------------------------------------------------------------------------
   785 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   786 ;; ---------------------------------------------------------------------------------
   787 ;; (1) _startTwelveHourTimer                                 2     0      2      31
   788 ;;                                             23 BANK0      2     0      2
   789 ;; ---------------------------------------------------------------------------------
   790 ;; (1) _clearTwentyMinTimer                                  0     0      0       0
   791 ;; ---------------------------------------------------------------------------------
   792 ;; (1) _isFinishedTwentyMinTimer                             0     0      0       0
   793 ;; ---------------------------------------------------------------------------------
   794 ;; (1) _clrSampeTime                                         0     0      0       0
   795 ;; ---------------------------------------------------------------------------------
   796 ;; (1) _isPermitSampleTime                                   0     0      0       0
   797 ;; ---------------------------------------------------------------------------------
   798 ;; (2) _adc_start                                            0     0      0       0
   799 ;; ---------------------------------------------------------------------------------
   800 ;; (1) _startTwentyMinTimer                                  2     0      2      31
   801 ;;                                             23 BANK0      2     0      2
   802 ;; ---------------------------------------------------------------------------------
   803 ;; (2) _adc_test_init                                        3     2      1      62
   804 ;;                                             23 BANK0      3     2      1
   805 ;; ---------------------------------------------------------------------------------
   806 ;; (1) _timer1_interrupt_config                              0     0      0       0
   807 ;; ---------------------------------------------------------------------------------
   808 ;; (1) _timer1_config                                        0     0      0       0
   809 ;; ---------------------------------------------------------------------------------
   810 ;; (1) _clock_config                                         0     0      0       0
   811 ;; ---------------------------------------------------------------------------------
   812 ;; (1) _reset                                                0     0      0       0
   813 ;; ---------------------------------------------------------------------------------
   814 ;; (1) _selectAdChannel                                      0     0      0       0
   815 ;; ---------------------------------------------------------------------------------
   816 ;; (1) _pwm_start                                            2     1      1      62
   817 ;;                                             23 BANK0      2     1      1
   818 ;; ---------------------------------------------------------------------------------
   819 ;; (2) _initPB2_AsHighResistence                             0     0      0       0
   820 ;; ---------------------------------------------------------------------------------
   821 ;; (1) _setPB5                                               1     1      0      31
   822 ;;                                             23 BANK0      1     1      0
   823 ;; ---------------------------------------------------------------------------------
   824 ;; (2) _initPB5                                              1     1      0      31
   825 ;;                                             23 BANK0      1     1      0
   826 ;; ---------------------------------------------------------------------------------
   827 ;; (1) _setPB4                                               1     1      0      31
   828 ;;                                             23 BANK0      1     1      0
   829 ;; ---------------------------------------------------------------------------------
   830 ;; (2) _initPB4                                              1     1      0      31
   831 ;;                                             23 BANK0      1     1      0
   832 ;; ---------------------------------------------------------------------------------
   833 ;; (1) _setPB3                                               1     1      0      31
   834 ;;                                             23 BANK0      1     1      0
   835 ;; ---------------------------------------------------------------------------------
   836 ;; (2) _initPB3                                              1     1      0      31
   837 ;;                                             23 BANK0      1     1      0
   838 ;; ---------------------------------------------------------------------------------
   839 ;; Estimated maximum stack depth 2
   840 ;; ---------------------------------------------------------------------------------
   841 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   842 ;; ---------------------------------------------------------------------------------
   843 ;; (3) _ISR                                                  4     4      0    1140
   844 ;;                                             19 BANK0      4     4      0
   845 ;;                i1_setAD_ConvertFlag
   846 ;;                            _adc_get
   847 ;;            _vPutSampleDataIntoTable
   848 ;; ---------------------------------------------------------------------------------
   849 ;; (4) _vPutSampleDataIntoTable                             11     8      3    1043
   850 ;;                                              6 COMMON     7     4      3
   851 ;;                                             15 BANK0      4     4      0
   852 ;;                             _Filter
   853 ;;                       _setPWM_Width
   854 ;;                            _adc_get (ARG)
   855 ;; ---------------------------------------------------------------------------------
   856 ;; (4) i1_setAD_ConvertFlag                                  1     1      0      73
   857 ;;                                              0 COMMON     1     1      0
   858 ;; ---------------------------------------------------------------------------------
   859 ;; (4) _adc_get                                              4     2      2      24
   860 ;;                                              0 COMMON     4     2      2
   861 ;; ---------------------------------------------------------------------------------
   862 ;; (5) _Filter                                              21    19      2     620
   863 ;;                                              0 COMMON     6     4      2
   864 ;;                                              0 BANK0     15    15      0
   865 ;; ---------------------------------------------------------------------------------
   866 ;; (5) _setPWM_Width                                         1     1      0      66
   867 ;;                                              0 COMMON     1     1      0
   868 ;; ---------------------------------------------------------------------------------
   869 ;; Estimated maximum stack depth 5
   870 ;; ---------------------------------------------------------------------------------
   871 ;; Call Graph Graphs:
   872 ;; _main (ROOT)
   873 ;;   _initPin
   874 ;;     _initPB2_AsHighResistence
   875 ;;     _initPB3
   876 ;;     _initPB4
   877 ;;     _initPB5
   878 ;;   _setPinInitVaule
   879 ;;     _setPB3
   880 ;;     _setPB4
   881 ;;     _setPB5
   882 ;;   _selectAdChannel
   883 ;;   _clock_config
   884 ;;   _timer1_config
   885 ;;   _timer1_interrupt_config
   886 ;;   _adc_test_init
   887 ;;   _startTwentyMinTimer
   888 ;;   _pwm_start
   889 ;;   _adc_start
   890 ;;   _process_AD_Converter_Value
   891 ;;     _getAD_ConvertFlag
   892 ;;     _setAD_ConvertFlag
   893 ;;     _AD_Sample
   894 ;;     _adc_test_init
   895 ;;     _adc_start
   896 ;;   _isPermitSampleTime
   897 ;;   _clrSampeTime
   898 ;;   _isFinishedTwentyMinTimer
   899 ;;   _getAdOriginalCh13Value
   900 ;;     _FilterCh13
   901 ;;   _setPB3
   902 ;;   _setPB4
   903 ;;   _setPB5
   904 ;;   _clearTwentyMinTimer
   905 ;;   _startTwelveHourTimer
   906 ;;   _isFinishedTwelveHoursTimer
   907 ;;   _clearTwelveHoursTimer
   908 ;;   _startThreeHoursTimer
   909 ;;   _isFinishedThreeHoursTimer
   910 ;;   _clearThreeHoursTimer
   911 ;;   _startOneHoursTimer
   912 ;;   _isFinishedOneHoursTimer
   913 ;;   _reset
   914 ;;
   915 ;; _ISR (ROOT)
   916 ;;   i1_setAD_ConvertFlag
   917 ;;   _adc_get
   918 ;;   _vPutSampleDataIntoTable
   919 ;;     _Filter
   920 ;;     _setPWM_Width
   921 ;;     _adc_get (ARG)
   922 ;;
   923 ;; Address spaces:
   924 ;;Name               Size   Autos  Total    Cost      Usage
   925 ;;BANK3               60      0       0      10        0.0%
   926 ;;BITBANK3            60      0       0       9        0.0%
   927 ;;SFR3                 0      0       0       4        0.0%
   928 ;;BITSFR3              0      0       0       4        0.0%
   929 ;;BANK2               60      0       0      12        0.0%
   930 ;;BITBANK2            60      0       0      11        0.0%
   931 ;;SFR2                 0      0       0       5        0.0%
   932 ;;BITSFR2              0      0       0       5        0.0%
   933 ;;SFR1                 0      0       0       2        0.0%
   934 ;;BITSFR1              0      0       0       2        0.0%
   935 ;;BANK1               50     16      36       8       67.5%
   936 ;;BITBANK1            50      0       0       7        0.0%
   937 ;;CODE                 0      0       0       0        0.0%
   938 ;;DATA                 0      0      85       6        0.0%
   939 ;;ABS                  0      0      7D       3        0.0%
   940 ;;NULL                 0      0       0       0        0.0%
   941 ;;STACK                0      0       8       2        0.0%
   942 ;;BANK0               50     1D      39       5       71.3%
   943 ;;BITBANK0            50      0       0       4        0.0%
   944 ;;SFR0                 0      0       0       1        0.0%
   945 ;;BITSFR0              0      0       0       1        0.0%
   946 ;;COMMON               E      D       E       1      100.0%
   947 ;;BITCOMMON            E      0       0       0        0.0%
   948                           
   949                           
   950 ;; *************** function _main *****************
   951 ;; Defined at:
   952 ;;		line 588 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;		None
   955 ;; Auto vars:     Size  Location     Type
   956 ;;  ucChValue       2   18[BANK1 ] unsigned int 
   957 ;;  uiCh13Value     2   20[BANK1 ] unsigned int 
   958 ;; Return value:  Size  Location     Type
   959 ;;                  2  743[COMMON] int 
   960 ;; Registers used:
   961 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   962 ;; Tracked objects:
   963 ;;		On entry : 17F/0
   964 ;;		On exit  : 60/0
   965 ;;		Unchanged: 0/0
   966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   967 ;;      Params:         0       0       0       0       0
   968 ;;      Locals:         0       0       4       0       0
   969 ;;      Temps:          0       0       1       0       0
   970 ;;      Totals:         0       0       5       0       0
   971 ;;Total ram usage:        5 bytes
   972 ;; Hardware stack levels required when called:    5
   973 ;; This function calls:
   974 ;;		_initPin
   975 ;;		_setPinInitVaule
   976 ;;		_selectAdChannel
   977 ;;		_clock_config
   978 ;;		_timer1_config
   979 ;;		_timer1_interrupt_config
   980 ;;		_adc_test_init
   981 ;;		_startTwentyMinTimer
   982 ;;		_pwm_start
   983 ;;		_adc_start
   984 ;;		_process_AD_Converter_Value
   985 ;;		_isPermitSampleTime
   986 ;;		_clrSampeTime
   987 ;;		_isFinishedTwentyMinTimer
   988 ;;		_getAdOriginalCh13Value
   989 ;;		_setPB3
   990 ;;		_setPB4
   991 ;;		_setPB5
   992 ;;		_clearTwentyMinTimer
   993 ;;		_startTwelveHourTimer
   994 ;;		_isFinishedTwelveHoursTimer
   995 ;;		_clearTwelveHoursTimer
   996 ;;		_startThreeHoursTimer
   997 ;;		_isFinishedThreeHoursTimer
   998 ;;		_clearThreeHoursTimer
   999 ;;		_startOneHoursTimer
  1000 ;;		_isFinishedOneHoursTimer
  1001 ;;		_reset
  1002 ;; This function is called by:
  1003 ;;		Startup code after reset
  1004 ;; This function uses a non-reentrant model
  1005 ;;
  1006  01FE                     _main:	
  1007                           
  1008                           ;main.c: 589: enum systemStep {
  1009                           ;main.c: 590: INIT_STEP = 0,
  1010                           ;main.c: 591: START_UP_PWM_STEP,
  1011                           ;main.c: 592: CHECK_10_HOUR_TIMER_STEP,
  1012                           ;main.c: 593: STARTUP_3_HOUR_TIMER_STEP,
  1013                           ;main.c: 594: CHECK_3_HOUR_TIMER_STEP,
  1014                           ;main.c: 595: STARTUP_1_HOUR_TIMER_STEP,
  1015                           ;main.c: 596: CHECK_1_HOUR_TIMER_STEP,
  1016                           ;main.c: 597: READY_FOR_RESET_STEP = 99,
  1017                           ;main.c: 598: DELAY_ONE_SECOND_FOR_PWM,
  1018                           ;main.c: 599: MEET_RESET_CONDITION_STEP,
  1019                           ;main.c: 600: RESET_STEP,
  1020                           ;main.c: 601: };
  1021                           ;main.c: 603: static enum systemStep ucStep = INIT_STEP;
  1022                           
  1023                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1024  01FE  118A  24BE  118A   	fcall	_initPin
  1025                           
  1026                           ;main.c: 617: setPinInitVaule();
  1027  0201  118A  24EF  118A   	fcall	_setPinInitVaule
  1028                           
  1029                           ;main.c: 618: selectAdChannel();
  1030  0204  118A  25C5  118A   	fcall	_selectAdChannel
  1031                           
  1032                           ;main.c: 620: clock_config();
  1033  0207  118A  25AC  118A   	fcall	_clock_config
  1034                           
  1035                           ;main.c: 621: timer1_config();
  1036  020A  118A  259A  118A   	fcall	_timer1_config
  1037                           
  1038                           ;main.c: 622: timer1_interrupt_config();
  1039  020D  118A  25C9  118A   	fcall	_timer1_interrupt_config
  1040                           
  1041                           ;main.c: 624: adc_test_init(12,3);
  1042  0210  3003               	movlw	3
  1043  0211  1283               	bcf	3,5	;RP0=0, select bank0
  1044  0212  00B7               	movwf	?_adc_test_init
  1045  0213  300C               	movlw	12
  1046  0214  118A  249F  118A   	fcall	_adc_test_init
  1047                           
  1048                           ;main.c: 636: startTwentyMinTimer( 60 );
  1049  0217  303C               	movlw	60
  1050  0218  1283               	bcf	3,5	;RP0=0, select bank0
  1051  0219  00B7               	movwf	?_startTwentyMinTimer
  1052  021A  01B8               	clrf	?_startTwentyMinTimer+1
  1053  021B  118A  2563  118A   	fcall	_startTwentyMinTimer
  1054                           
  1055                           ;main.c: 637: pwm_start(75,249);
  1056  021E  30F9               	movlw	249
  1057  021F  00B7               	movwf	?_pwm_start
  1058  0220  304B               	movlw	75
  1059  0221  118A  2510  118A   	fcall	_pwm_start
  1060                           
  1061                           ;main.c: 638: _delay(1000);
  1062  0224  30F9               	movlw	249
  1063  0225  1683               	bsf	3,5	;RP0=1, select bank1
  1064  0226  00D1               	movwf	??_main^(0+128)
  1065  0227                     u2257:	
  1066  0227  0064               	clrwdt
  1067  0228  0BD1               	decfsz	??_main^(0+128),f
  1068  0229  2A27               	goto	u2257
  1069  022A  2A2B               	nop2	;nop
  1070  022B  0064               	clrwdt
  1071                           
  1072                           ;main.c: 639: adc_start();
  1073  022C  118A  24BA  118A   	fcall	_adc_start
  1074  022F                     l4235:	
  1075  022F  0064               	clrwdt	;#
  1076                           
  1077                           ;main.c: 645: process_AD_Converter_Value();
  1078  0230  118A  246E  118A   	fcall	_process_AD_Converter_Value
  1079                           
  1080                           ;main.c: 647: if( isPermitSampleTime() )
  1081  0233  118A  25B4  118A   	fcall	_isPermitSampleTime
  1082  0236  3A00               	xorlw	0
  1083  0237  1903               	skipnz
  1084  0238  2A2F               	goto	l4235
  1085                           
  1086                           ;main.c: 648: {
  1087                           ;main.c: 651: clrSampeTime();
  1088  0239  118A  25CC  118A   	fcall	_clrSampeTime
  1089                           
  1090                           ;main.c: 660: switch(ucStep)
  1091  023C  2B8C               	goto	l4395
  1092  023D                     l4243:	
  1093                           
  1094                           ;main.c: 664: {
  1095                           ;main.c: 669: static unsigned char ucTimerP3s = 0;
  1096                           ;main.c: 671: if( isFinishedTwentyMinTimer() )
  1097  023D  118A  2590  118A   	fcall	_isFinishedTwentyMinTimer
  1098  0240  3A00               	xorlw	0
  1099  0241  1903               	skipnz
  1100  0242  2A47               	goto	l4249
  1101                           
  1102                           ;main.c: 672: {
  1103                           ;main.c: 673: ucStep = READY_FOR_RESET_STEP;
  1104  0243  3063               	movlw	99
  1105  0244  00D1               	movwf	main@ucStep
  1106                           
  1107                           ;main.c: 674: ucTimerP3s = 0;
  1108  0245  01D2               	clrf	main@ucTimerP3s
  1109                           
  1110                           ;main.c: 675: }
  1111  0246  2A2F               	goto	l4235
  1112  0247                     l4249:	
  1113                           
  1114                           ;main.c: 676: else
  1115                           ;main.c: 677: {
  1116                           ;main.c: 678: if( getAdOriginalCh13Value() > 90 )
  1117  0247  118A  23B1  118A   	fcall	_getAdOriginalCh13Value
  1118  024A  3000               	movlw	0
  1119  024B  0250               	subwf	(?_getAdOriginalCh13Value+1)^(0+128),w
  1120  024C  305B               	movlw	91
  1121  024D  1903               	skipnz
  1122  024E  024F               	subwf	?_getAdOriginalCh13Value^(0+128),w
  1123  024F  1C03               	skipc
  1124  0250  2A54               	goto	l4253
  1125                           
  1126                           ;main.c: 679: {
  1127                           ;main.c: 680: ucTimerP3s++;
  1128  0251  1283               	bcf	3,5	;RP0=0, select bank0
  1129  0252  0AD2               	incf	main@ucTimerP3s,f
  1130                           
  1131                           ;main.c: 681: }
  1132  0253  2A56               	goto	l4255
  1133  0254                     l4253:	
  1134                           
  1135                           ;main.c: 682: else
  1136                           ;main.c: 683: ucTimerP3s = 0;
  1137  0254  1283               	bcf	3,5	;RP0=0, select bank0
  1138  0255  01D2               	clrf	main@ucTimerP3s
  1139  0256                     l4255:	
  1140                           
  1141                           ;main.c: 685: if( ucTimerP3s >= 3)
  1142  0256  3003               	movlw	3
  1143  0257  0252               	subwf	main@ucTimerP3s,w
  1144  0258  1C03               	skipc
  1145  0259  2A2F               	goto	l4235
  1146                           
  1147                           ;main.c: 686: {
  1148                           ;main.c: 687: ucTimerP3s = 0;
  1149  025A  01D2               	clrf	main@ucTimerP3s
  1150                           
  1151                           ;main.c: 688: ucStep = START_UP_PWM_STEP;
  1152  025B  01D1               	clrf	main@ucStep
  1153  025C  0AD1               	incf	main@ucStep,f
  1154  025D                     l753:	
  1155                           
  1156                           ;main.c: 689: }
  1157                           ;main.c: 691: }
  1158                           ;main.c: 695: break;
  1159  025D  2A2F               	goto	l4235
  1160  025E                     l4261:	
  1161                           
  1162                           ;main.c: 699: {
  1163                           ;main.c: 709: setPB3(0);
  1164  025E  3000               	movlw	0
  1165  025F  118A  24F7  118A   	fcall	_setPB3
  1166                           
  1167                           ;main.c: 710: setPB4(1);
  1168  0262  3001               	movlw	1
  1169  0263  118A  2500  118A   	fcall	_setPB4
  1170                           
  1171                           ;main.c: 711: setPB5(0);
  1172  0266  3000               	movlw	0
  1173  0267  118A  2508  118A   	fcall	_setPB5
  1174                           
  1175                           ;main.c: 712: clearTwentyMinTimer();
  1176  026A  118A  25C1  118A   	fcall	_clearTwentyMinTimer
  1177                           
  1178                           ;main.c: 713: startTwelveHourTimer( 240);
  1179  026D  30F0               	movlw	240
  1180  026E  00B7               	movwf	?_startTwelveHourTimer
  1181  026F  01B8               	clrf	?_startTwelveHourTimer+1
  1182  0270  118A  2555  118A   	fcall	_startTwelveHourTimer
  1183                           
  1184                           ;main.c: 714: ucStep = CHECK_10_HOUR_TIMER_STEP;
  1185  0273  3002               	movlw	2
  1186  0274  2B88               	goto	L8
  1187  0275                     l4269:	
  1188                           ;main.c: 715: break;
  1189                           
  1190                           
  1191                           ;main.c: 719: {
  1192                           ;main.c: 724: static unsigned char ucTimerP5s = 0;
  1193                           ;main.c: 726: if( isFinishedTwelveHoursTimer () )
  1194  0275  118A  2586  118A   	fcall	_isFinishedTwelveHoursTimer
  1195  0278  3A00               	xorlw	0
  1196  0279  1903               	skipnz
  1197  027A  2A7D               	goto	l4273
  1198  027B                     l4271:	
  1199                           
  1200                           ;main.c: 727: ucStep = READY_FOR_RESET_STEP;
  1201  027B  3063               	movlw	99
  1202  027C  2B88               	goto	L8
  1203  027D                     l4273:	
  1204                           
  1205                           ;main.c: 728: else
  1206                           ;main.c: 729: {
  1207                           ;main.c: 730: if( getAdOriginalCh13Value() < 200 )
  1208  027D  118A  23B1  118A   	fcall	_getAdOriginalCh13Value
  1209  0280  3000               	movlw	0
  1210  0281  0250               	subwf	(?_getAdOriginalCh13Value+1)^(0+128),w
  1211  0282  30C8               	movlw	200
  1212  0283  1903               	skipnz
  1213  0284  024F               	subwf	?_getAdOriginalCh13Value^(0+128),w
  1214  0285  1803               	skipnc
  1215  0286  2A8A               	goto	l4277
  1216                           
  1217                           ;main.c: 731: ucTimerP5s++;
  1218  0287  1283               	bcf	3,5	;RP0=0, select bank0
  1219  0288  0AD3               	incf	main@ucTimerP5s,f
  1220  0289  2A8C               	goto	l4279
  1221  028A                     l4277:	
  1222                           
  1223                           ;main.c: 732: else
  1224                           ;main.c: 733: ucTimerP5s = 0;
  1225  028A  1283               	bcf	3,5	;RP0=0, select bank0
  1226  028B  01D3               	clrf	main@ucTimerP5s
  1227  028C                     l4279:	
  1228                           
  1229                           ;main.c: 735: if( ucTimerP5s >= 2)
  1230  028C  3002               	movlw	2
  1231  028D  0253               	subwf	main@ucTimerP5s,w
  1232  028E  1C03               	skipc
  1233  028F  2A2F               	goto	l4235
  1234  0290  3003               	movlw	3
  1235                           
  1236                           ;main.c: 736: {
  1237                           ;main.c: 737: ucTimerP5s = 0;
  1238  0291  01D3               	clrf	main@ucTimerP5s
  1239                           
  1240                           ;main.c: 738: ucStep = STARTUP_3_HOUR_TIMER_STEP;
  1241  0292  2B88               	goto	L8
  1242  0293                     l4285:	
  1243                           
  1244                           ;main.c: 746: {
  1245                           ;main.c: 747: clearTwelveHoursTimer();
  1246  0293  118A  25BD  118A   	fcall	_clearTwelveHoursTimer
  1247                           
  1248                           ;main.c: 748: startThreeHoursTimer(180);
  1249  0296  30B4               	movlw	180
  1250  0297  00B7               	movwf	?_startThreeHoursTimer
  1251  0298  01B8               	clrf	?_startThreeHoursTimer+1
  1252  0299  118A  2547  118A   	fcall	_startThreeHoursTimer
  1253                           
  1254                           ;main.c: 749: ucStep = CHECK_3_HOUR_TIMER_STEP;
  1255  029C  3004               	movlw	4
  1256  029D  2B88               	goto	L8
  1257  029E                     l4289:	
  1258                           ;main.c: 750: break;
  1259                           
  1260                           
  1261                           ;main.c: 754: {
  1262                           ;main.c: 755: static unsigned char ucTimerP5s = 0;
  1263                           ;main.c: 757: if( isFinishedThreeHoursTimer() )
  1264  029E  118A  257C  118A   	fcall	_isFinishedThreeHoursTimer
  1265  02A1  3A00               	xorlw	0
  1266  02A2  1D03               	btfss	3,2
  1267  02A3  2A7B               	goto	l4271
  1268                           
  1269                           ;main.c: 759: else
  1270                           ;main.c: 760: {
  1271                           ;main.c: 761: if( getAdOriginalCh13Value() < 75 )
  1272  02A4  118A  23B1  118A   	fcall	_getAdOriginalCh13Value
  1273  02A7  3000               	movlw	0
  1274  02A8  0250               	subwf	(?_getAdOriginalCh13Value+1)^(0+128),w
  1275  02A9  304B               	movlw	75
  1276  02AA  1903               	skipnz
  1277  02AB  024F               	subwf	?_getAdOriginalCh13Value^(0+128),w
  1278  02AC  1803               	skipnc
  1279  02AD  2AB1               	goto	l4297
  1280                           
  1281                           ;main.c: 762: ucTimerP5s++;
  1282  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  1283  02AF  0ACF               	incf	main@cTimerP5s_786,f
  1284  02B0  2AB3               	goto	l4299
  1285  02B1                     l4297:	
  1286                           
  1287                           ;main.c: 763: else
  1288                           ;main.c: 764: ucTimerP5s = 0;
  1289  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  1290  02B2  01CF               	clrf	main@cTimerP5s_786
  1291  02B3                     l4299:	
  1292                           
  1293                           ;main.c: 766: if( ucTimerP5s >= 2)
  1294  02B3  3002               	movlw	2
  1295  02B4  024F               	subwf	main@cTimerP5s_786,w
  1296  02B5  1C03               	skipc
  1297  02B6  2A2F               	goto	l4235
  1298  02B7  3005               	movlw	5
  1299                           
  1300                           ;main.c: 767: {
  1301                           ;main.c: 768: ucTimerP5s = 0;
  1302  02B8  01CF               	clrf	main@cTimerP5s_786
  1303                           
  1304                           ;main.c: 769: ucStep = STARTUP_1_HOUR_TIMER_STEP;
  1305  02B9  2B88               	goto	L8
  1306  02BA                     l4305:	
  1307                           
  1308                           ;main.c: 776: {
  1309                           ;main.c: 777: clearThreeHoursTimer();
  1310  02BA  118A  25B9  118A   	fcall	_clearThreeHoursTimer
  1311                           
  1312                           ;main.c: 778: startOneHoursTimer( 120 );
  1313  02BD  3078               	movlw	120
  1314  02BE  00B7               	movwf	?_startOneHoursTimer
  1315  02BF  01B8               	clrf	?_startOneHoursTimer+1
  1316  02C0  118A  2539  118A   	fcall	_startOneHoursTimer
  1317                           
  1318                           ;main.c: 779: setPB3(1);
  1319  02C3  3001               	movlw	1
  1320  02C4  118A  24F7  118A   	fcall	_setPB3
  1321                           
  1322                           ;main.c: 780: setPB4(0);
  1323  02C7  3000               	movlw	0
  1324  02C8  118A  2500  118A   	fcall	_setPB4
  1325                           
  1326                           ;main.c: 781: setPB5(1);
  1327  02CB  3001               	movlw	1
  1328  02CC  118A  2508  118A   	fcall	_setPB5
  1329                           
  1330                           ;main.c: 782: ucStep = CHECK_1_HOUR_TIMER_STEP;
  1331  02CF  3006               	movlw	6
  1332  02D0  2B88               	goto	L8
  1333  02D1                     l4317:	
  1334                           ;main.c: 783: break;
  1335                           
  1336                           
  1337                           ;main.c: 787: {
  1338                           ;main.c: 792: static unsigned int uiTimerOneP5s = 0;
  1339                           ;main.c: 793: static unsigned int uiTimerTwoP5s = 0;
  1340                           ;main.c: 794: static unsigned int uiTimerThreeP5s = 0;
  1341                           ;main.c: 796: unsigned int uiCh13Value = getAdOriginalCh13Value();
  1342  02D1  118A  23B1  118A   	fcall	_getAdOriginalCh13Value
  1343  02D4  0850               	movf	(?_getAdOriginalCh13Value+1)^(0+128),w
  1344  02D5  00D5               	movwf	(main@uiCh13Value+1)^(0+128)
  1345  02D6  084F               	movf	?_getAdOriginalCh13Value^(0+128),w
  1346  02D7  00D4               	movwf	main@uiCh13Value^(0+128)
  1347                           
  1348                           ;main.c: 799: if( isFinishedOneHoursTimer() )
  1349  02D8  118A  2571  118A   	fcall	_isFinishedOneHoursTimer
  1350  02DB  3A00               	xorlw	0
  1351  02DC  1D03               	btfss	3,2
  1352  02DD  2A7B               	goto	l4271
  1353                           
  1354                           ;main.c: 801: else
  1355                           ;main.c: 802: {
  1356                           ;main.c: 803: if( uiCh13Value > 85 )
  1357  02DE  3000               	movlw	0
  1358  02DF  1683               	bsf	3,5	;RP0=1, select bank1
  1359  02E0  0255               	subwf	(main@uiCh13Value+1)^(0+128),w
  1360  02E1  3056               	movlw	86
  1361  02E2  1903               	skipnz
  1362  02E3  0254               	subwf	main@uiCh13Value^(0+128),w
  1363  02E4  1C03               	skipc
  1364  02E5  2AF5               	goto	l4333
  1365                           
  1366                           ;main.c: 804: {
  1367                           ;main.c: 805: if( uiTimerOneP5s <= 1 )
  1368  02E6  3000               	movlw	0
  1369  02E7  0225               	subwf	(main@uiTimerOneP5s+1)^(0+128),w
  1370  02E8  3002               	movlw	2
  1371  02E9  1903               	skipnz
  1372  02EA  0224               	subwf	main@uiTimerOneP5s^(0+128),w
  1373  02EB  1803               	skipnc
  1374  02EC  2AF0               	goto	l4329
  1375                           
  1376                           ;main.c: 806: uiTimerOneP5s++;
  1377  02ED  0AA4               	incf	main@uiTimerOneP5s^(0+128),f
  1378  02EE  1903               	skipnz
  1379  02EF  0AA5               	incf	(main@uiTimerOneP5s+1)^(0+128),f
  1380  02F0                     l4329:	
  1381                           
  1382                           ;main.c: 807: uiTimerTwoP5s = 0;
  1383  02F0  01A8               	clrf	main@uiTimerTwoP5s^(0+128)
  1384  02F1  01A9               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1385                           
  1386                           ;main.c: 808: uiTimerThreeP5s = 0;
  1387  02F2  01A6               	clrf	main@uiTimerThreeP5s^(0+128)
  1388  02F3  01A7               	clrf	(main@uiTimerThreeP5s+1)^(0+128)
  1389                           
  1390                           ;main.c: 809: }
  1391  02F4  2AF7               	goto	l4335
  1392  02F5                     l4333:	
  1393                           
  1394                           ;main.c: 810: else
  1395                           ;main.c: 811: {
  1396                           ;main.c: 812: uiTimerOneP5s = 0;
  1397  02F5  01A4               	clrf	main@uiTimerOneP5s^(0+128)
  1398  02F6  01A5               	clrf	(main@uiTimerOneP5s+1)^(0+128)
  1399  02F7                     l4335:	
  1400                           
  1401                           ;main.c: 813: }
  1402                           ;main.c: 816: if(uiTimerOneP5s > 1)
  1403  02F7  3000               	movlw	0
  1404  02F8  0225               	subwf	(main@uiTimerOneP5s+1)^(0+128),w
  1405  02F9  3002               	movlw	2
  1406  02FA  1903               	skipnz
  1407  02FB  0224               	subwf	main@uiTimerOneP5s^(0+128),w
  1408                           
  1409                           ;main.c: 817: {
  1410                           ;main.c: 818: setPB3(0);
  1411  02FC  3000               	movlw	0
  1412  02FD  1C03               	skipc
  1413  02FE  2B10               	goto	L9
  1414  02FF  118A  24F7  118A   	fcall	_setPB3
  1415                           
  1416                           ;main.c: 819: setPB4(1);
  1417  0302  3001               	movlw	1
  1418  0303  118A  2500  118A   	fcall	_setPB4
  1419                           
  1420                           ;main.c: 820: setPB5(0);
  1421  0306  3000               	movlw	0
  1422  0307  118A  2508  118A   	fcall	_setPB5
  1423                           
  1424                           ;main.c: 822: uiTimerOneP5s = 0;
  1425  030A  1683               	bsf	3,5	;RP0=1, select bank1
  1426  030B  01A4               	clrf	main@uiTimerOneP5s^(0+128)
  1427  030C  01A5               	clrf	(main@uiTimerOneP5s+1)^(0+128)
  1428                           
  1429                           ;main.c: 823: uiTimerTwoP5s = 0;
  1430  030D  01A8               	clrf	main@uiTimerTwoP5s^(0+128)
  1431  030E  01A9               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1432                           
  1433                           ;main.c: 824: }
  1434  030F  2A2F               	goto	l4235
  1435  0310                     L9:	
  1436                           ;main.c: 825: else
  1437                           ;main.c: 826: {
  1438                           ;main.c: 827: if( uiCh13Value < 75 )
  1439                           
  1440  0310  0255               	subwf	(main@uiCh13Value+1)^(0+128),w
  1441  0311  304B               	movlw	75
  1442  0312  1903               	skipnz
  1443  0313  0254               	subwf	main@uiCh13Value^(0+128),w
  1444  0314  1803               	skipnc
  1445  0315  2B21               	goto	l4349
  1446                           
  1447                           ;main.c: 828: {
  1448                           ;main.c: 829: if( uiTimerTwoP5s <= 1)
  1449  0316  3000               	movlw	0
  1450  0317  0229               	subwf	(main@uiTimerTwoP5s+1)^(0+128),w
  1451  0318  3002               	movlw	2
  1452  0319  1903               	skipnz
  1453  031A  0228               	subwf	main@uiTimerTwoP5s^(0+128),w
  1454  031B  1803               	skipnc
  1455  031C  2B25               	goto	l4351
  1456                           
  1457                           ;main.c: 830: uiTimerTwoP5s++;
  1458  031D  0AA8               	incf	main@uiTimerTwoP5s^(0+128),f
  1459  031E  1903               	skipnz
  1460  031F  0AA9               	incf	(main@uiTimerTwoP5s+1)^(0+128),f
  1461  0320  2B25               	goto	l4351
  1462  0321                     l4349:	
  1463                           
  1464                           ;main.c: 832: else
  1465                           ;main.c: 833: {
  1466                           ;main.c: 834: uiTimerTwoP5s = 0;
  1467  0321  01A8               	clrf	main@uiTimerTwoP5s^(0+128)
  1468  0322  01A9               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1469                           
  1470                           ;main.c: 835: uiTimerThreeP5s = 0;
  1471  0323  01A6               	clrf	main@uiTimerThreeP5s^(0+128)
  1472  0324  01A7               	clrf	(main@uiTimerThreeP5s+1)^(0+128)
  1473  0325                     l4351:	
  1474                           
  1475                           ;main.c: 836: }
  1476                           ;main.c: 838: if(uiTimerTwoP5s > 1)
  1477  0325  3000               	movlw	0
  1478  0326  0229               	subwf	(main@uiTimerTwoP5s+1)^(0+128),w
  1479  0327  3002               	movlw	2
  1480  0328  1903               	skipnz
  1481  0329  0228               	subwf	main@uiTimerTwoP5s^(0+128),w
  1482  032A  1C03               	skipc
  1483  032B  2A2F               	goto	l4235
  1484                           
  1485                           ;main.c: 839: {
  1486                           ;main.c: 840: setPB3(1);
  1487  032C  3001               	movlw	1
  1488  032D  118A  24F7  118A   	fcall	_setPB3
  1489                           
  1490                           ;main.c: 841: setPB4(0);
  1491  0330  3000               	movlw	0
  1492  0331  118A  2500  118A   	fcall	_setPB4
  1493                           
  1494                           ;main.c: 842: setPB5(1);
  1495  0334  3001               	movlw	1
  1496  0335  118A  2508  118A   	fcall	_setPB5
  1497                           
  1498                           ;main.c: 844: if(uiCh13Value < 25)
  1499  0338  3000               	movlw	0
  1500  0339  1683               	bsf	3,5	;RP0=1, select bank1
  1501  033A  0255               	subwf	(main@uiCh13Value+1)^(0+128),w
  1502  033B  3019               	movlw	25
  1503  033C  1903               	skipnz
  1504  033D  0254               	subwf	main@uiCh13Value^(0+128),w
  1505  033E  1803               	skipnc
  1506  033F  2B44               	goto	l4359
  1507                           
  1508                           ;main.c: 845: uiTimerThreeP5s++;
  1509  0340  0AA6               	incf	main@uiTimerThreeP5s^(0+128),f
  1510  0341  1903               	skipnz
  1511  0342  0AA7               	incf	(main@uiTimerThreeP5s+1)^(0+128),f
  1512  0343  2B46               	goto	l4361
  1513  0344                     l4359:	
  1514                           
  1515                           ;main.c: 846: else
  1516                           ;main.c: 847: uiTimerThreeP5s = 0;
  1517  0344  01A6               	clrf	main@uiTimerThreeP5s^(0+128)
  1518  0345  01A7               	clrf	(main@uiTimerThreeP5s+1)^(0+128)
  1519  0346                     l4361:	
  1520                           
  1521                           ;main.c: 849: if(uiTimerThreeP5s > 5)
  1522  0346  3000               	movlw	0
  1523  0347  0227               	subwf	(main@uiTimerThreeP5s+1)^(0+128),w
  1524  0348  3006               	movlw	6
  1525  0349  1903               	skipnz
  1526  034A  0226               	subwf	main@uiTimerThreeP5s^(0+128),w
  1527  034B  1C03               	skipc
  1528  034C  2A2F               	goto	l4235
  1529  034D                     l4363:	
  1530                           
  1531                           ;main.c: 850: reset();
  1532  034D  118A  25CE  118A   	fcall	_reset
  1533  0350  2A2F               	goto	l4235
  1534  0351                     l4365:	
  1535                           
  1536                           ;main.c: 859: {
  1537                           ;main.c: 860: setPB3(0);
  1538  0351  3000               	movlw	0
  1539  0352  118A  24F7  118A   	fcall	_setPB3
  1540                           
  1541                           ;main.c: 861: setPB4(0);
  1542  0355  3000               	movlw	0
  1543  0356  118A  2500  118A   	fcall	_setPB4
  1544                           
  1545                           ;main.c: 862: setPB5(1);
  1546  0359  3001               	movlw	1
  1547  035A  118A  2508  118A   	fcall	_setPB5
  1548                           
  1549                           ;main.c: 866: ucStep = DELAY_ONE_SECOND_FOR_PWM;
  1550  035D  3064               	movlw	100
  1551  035E  2B88               	goto	L8
  1552  035F                     l4369:	
  1553                           ;main.c: 867: break;
  1554                           
  1555                           
  1556                           ;main.c: 871: {
  1557                           ;main.c: 872: static unsigned ucDelay1s = 0;
  1558                           ;main.c: 873: if(ucDelay1s <= 5)
  1559  035F  3000               	movlw	0
  1560  0360  1683               	bsf	3,5	;RP0=1, select bank1
  1561  0361  0223               	subwf	(main@ucDelay1s+1)^(0+128),w
  1562  0362  3006               	movlw	6
  1563  0363  1903               	skipnz
  1564  0364  0222               	subwf	main@ucDelay1s^(0+128),w
  1565  0365  1803               	skipnc
  1566  0366  2B6B               	goto	l4373
  1567                           
  1568                           ;main.c: 874: ucDelay1s++;
  1569  0367  0AA2               	incf	main@ucDelay1s^(0+128),f
  1570  0368  1903               	skipnz
  1571  0369  0AA3               	incf	(main@ucDelay1s+1)^(0+128),f
  1572  036A  2A2F               	goto	l4235
  1573  036B                     l4373:	
  1574  036B  3065               	movlw	101
  1575                           
  1576                           ;main.c: 875: else
  1577                           ;main.c: 876: {
  1578                           ;main.c: 877: ucDelay1s = 0;
  1579  036C  01A2               	clrf	main@ucDelay1s^(0+128)
  1580  036D  01A3               	clrf	(main@ucDelay1s+1)^(0+128)
  1581                           
  1582                           ;main.c: 878: ucStep = MEET_RESET_CONDITION_STEP;
  1583  036E  1283               	bcf	3,5	;RP0=0, select bank0
  1584  036F  2B88               	goto	L8
  1585  0370                     l4377:	
  1586                           
  1587                           ;main.c: 888: {
  1588                           ;main.c: 889: static unsigned char ucTimerP5s = 0;
  1589                           ;main.c: 890: unsigned int ucChValue = getAdOriginalCh13Value();
  1590  0370  118A  23B1  118A   	fcall	_getAdOriginalCh13Value
  1591  0373  0850               	movf	(?_getAdOriginalCh13Value+1)^(0+128),w
  1592  0374  00D3               	movwf	(main@ucChValue+1)^(0+128)
  1593  0375  084F               	movf	?_getAdOriginalCh13Value^(0+128),w
  1594  0376  00D2               	movwf	main@ucChValue^(0+128)
  1595                           
  1596                           ;main.c: 892: if( ucChValue > 50 )
  1597  0377  3000               	movlw	0
  1598  0378  0253               	subwf	(main@ucChValue+1)^(0+128),w
  1599  0379  3033               	movlw	51
  1600  037A  1903               	skipnz
  1601  037B  0252               	subwf	main@ucChValue^(0+128),w
  1602  037C  1C03               	skipc
  1603  037D  2B81               	goto	l4383
  1604                           
  1605                           ;main.c: 893: ucTimerP5s++;
  1606  037E  1283               	bcf	3,5	;RP0=0, select bank0
  1607  037F  0AD0               	incf	main@cTimerP5s_792,f
  1608  0380  2B83               	goto	l4385
  1609  0381                     l4383:	
  1610                           
  1611                           ;main.c: 894: else
  1612                           ;main.c: 895: ucTimerP5s = 0;
  1613  0381  1283               	bcf	3,5	;RP0=0, select bank0
  1614  0382  01D0               	clrf	main@cTimerP5s_792
  1615  0383                     l4385:	
  1616                           
  1617                           ;main.c: 897: if(ucTimerP5s >= 5)
  1618  0383  3005               	movlw	5
  1619  0384  0250               	subwf	main@cTimerP5s_792,w
  1620  0385  1C03               	skipc
  1621  0386  2A2F               	goto	l4235
  1622                           
  1623                           ;main.c: 898: ucStep = RESET_STEP;
  1624  0387  3066               	movlw	102
  1625  0388                     L8:	
  1626  0388  00D1               	movwf	main@ucStep
  1627  0389  2A2F               	goto	l4235
  1628  038A                     l4389:	
  1629                           
  1630                           ;main.c: 903: {
  1631                           ;main.c: 904: ucStep = INIT_STEP;
  1632  038A  01D1               	clrf	main@ucStep
  1633  038B  2B4D               	goto	l4363
  1634  038C                     l4395:	
  1635  038C  0851               	movf	main@ucStep,w
  1636                           
  1637                           ; Switch size 1, requested type "space"
  1638                           ; Number of cases is 11, Range of values is 0 to 102
  1639                           ; switch strategies available:
  1640                           ; Name         Instructions Cycles
  1641                           ; simple_byte           34    18 (average)
  1642                           ; direct_byte          213     7 (fixed)
  1643                           ; jumptable            260     6 (fixed)
  1644                           ; rangetable           107     6 (fixed)
  1645                           ; spacedrange          212     9 (fixed)
  1646                           ; locatedrange         103     3 (fixed)
  1647                           ;	Chosen strategy is simple_byte
  1648  038D  3A00               	xorlw	0	; case 0
  1649  038E  1903               	skipnz
  1650  038F  2A3D               	goto	l4243
  1651  0390  3A01               	xorlw	1	; case 1
  1652  0391  1903               	skipnz
  1653  0392  2A5E               	goto	l4261
  1654  0393  3A03               	xorlw	3	; case 2
  1655  0394  1903               	skipnz
  1656  0395  2A75               	goto	l4269
  1657  0396  3A01               	xorlw	1	; case 3
  1658  0397  1903               	skipnz
  1659  0398  2A93               	goto	l4285
  1660  0399  3A07               	xorlw	7	; case 4
  1661  039A  1903               	skipnz
  1662  039B  2A9E               	goto	l4289
  1663  039C  3A01               	xorlw	1	; case 5
  1664  039D  1903               	skipnz
  1665  039E  2ABA               	goto	l4305
  1666  039F  3A03               	xorlw	3	; case 6
  1667  03A0  1903               	skipnz
  1668  03A1  2AD1               	goto	l4317
  1669  03A2  3A65               	xorlw	101	; case 99
  1670  03A3  1903               	skipnz
  1671  03A4  2B51               	goto	l4365
  1672  03A5  3A07               	xorlw	7	; case 100
  1673  03A6  1903               	skipnz
  1674  03A7  2B5F               	goto	l4369
  1675  03A8  3A01               	xorlw	1	; case 101
  1676  03A9  1903               	skipnz
  1677  03AA  2B70               	goto	l4377
  1678  03AB  3A03               	xorlw	3	; case 102
  1679  03AC  1903               	skipnz
  1680  03AD  2B8A               	goto	l4389
  1681  03AE  2A5D               	goto	l753
  1682  03AF  118A  2811         	ljmp	start
  1683  03B1                     __end_of_main:	
  1684                           
  1685                           	psect	text1179
  1686  03B1                     __ptext1179:	
  1687 ;; =============== function _main ends ============
  1688                           
  1689                           
  1690 ;; *************** function _getAdOriginalCh13Value *****************
  1691 ;; Defined at:
  1692 ;;		line 344 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;		None
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;		None
  1697 ;; Return value:  Size  Location     Type
  1698 ;;                  2   15[BANK1 ] unsigned int 
  1699 ;; Registers used:
  1700 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1701 ;; Tracked objects:
  1702 ;;		On entry : 60/0
  1703 ;;		On exit  : 60/20
  1704 ;;		Unchanged: FFE00/0
  1705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1706 ;;      Params:         0       0       2       0       0
  1707 ;;      Locals:         0       0       0       0       0
  1708 ;;      Temps:          0       0       0       0       0
  1709 ;;      Totals:         0       0       2       0       0
  1710 ;;Total ram usage:        2 bytes
  1711 ;; Hardware stack levels used:    1
  1712 ;; Hardware stack levels required when called:    4
  1713 ;; This function calls:
  1714 ;;		_FilterCh13
  1715 ;; This function is called by:
  1716 ;;		_main
  1717 ;; This function uses a non-reentrant model
  1718 ;;
  1719  03B1                     _getAdOriginalCh13Value:	
  1720                           
  1721                           ;common.c: 346: return FilterCh13(uiSampleChannelFourth);
  1722                           
  1723                           ; Regs used in _getAdOriginalCh13Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  1724  03B1  30BA               	movlw	_uiSampleChannelFourth& (0+255)
  1725  03B2  23BB               	fcall	_FilterCh13
  1726  03B3  0838               	movf	?_FilterCh13+1,w
  1727  03B4  1683               	bsf	3,5	;RP0=1, select bank1
  1728  03B5  00D0               	movwf	(?_getAdOriginalCh13Value+1)^(0+128)
  1729  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  1730  03B7  0837               	movf	?_FilterCh13,w
  1731  03B8  1683               	bsf	3,5	;RP0=1, select bank1
  1732  03B9  00CF               	movwf	?_getAdOriginalCh13Value^(0+128)
  1733  03BA  0008               	return
  1734  03BB                     __end_of_getAdOriginalCh13Value:	
  1735  03BB                     __ptext1186:	
  1736 ;; =============== function _getAD_ConvertFlag ends ============
  1737                           
  1738                           
  1739 ;; *************** function _FilterCh13 *****************
  1740 ;; Defined at:
  1741 ;;		line 64 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  1742 ;; Parameters:    Size  Location     Type
  1743 ;;  tmpValue        1    wreg     PTR int 
  1744 ;;		 -> uiSampleChannelFourth(6), 
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;  tmpValue        1    0[BANK1 ] PTR int 
  1747 ;;		 -> uiSampleChannelFourth(6), 
  1748 ;;  cir             2   11[BANK1 ] int 
  1749 ;;  filter_buf      6    5[BANK1 ] unsigned int [3]
  1750 ;;  filter_sum      2    3[BANK1 ] unsigned int 
  1751 ;;  filter_temp     2    1[BANK1 ] unsigned int 
  1752 ;;  i               1   14[BANK1 ] unsigned char 
  1753 ;;  j               1   13[BANK1 ] unsigned char 
  1754 ;; Return value:  Size  Location     Type
  1755 ;;                  2   23[BANK0 ] unsigned int 
  1756 ;; Registers used:
  1757 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1758 ;; Tracked objects:
  1759 ;;		On entry : 60/0
  1760 ;;		On exit  : 60/0
  1761 ;;		Unchanged: FFE00/0
  1762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1763 ;;      Params:         0       2       0       0       0
  1764 ;;      Locals:         0       0      15       0       0
  1765 ;;      Temps:          0       4       0       0       0
  1766 ;;      Totals:         0       6      15       0       0
  1767 ;;Total ram usage:       21 bytes
  1768 ;; Hardware stack levels used:    1
  1769 ;; Hardware stack levels required when called:    3
  1770 ;; This function calls:
  1771 ;;		Nothing
  1772 ;; This function is called by:
  1773 ;;		_getAdOriginalCh13Value
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776  03BB                     _FilterCh13:	
  1777                           
  1778                           ; Regs used in _FilterCh13: [wreg-fsr0h+status,2+status,0+btemp+1]
  1779                           ;FilterCh13@tmpValue stored from wreg
  1780  03BB  1683               	bsf	3,5	;RP0=1, select bank1
  1781  03BC  00C0               	movwf	FilterCh13@tmpValue^(0+128)
  1782  03BD  01CD               	clrf	FilterCh13@j^(0+128)
  1783                           
  1784                           ;common.c: 67: unsigned int filter_temp = 0, filter_sum = 0;
  1785  03BE  01C1               	clrf	FilterCh13@filter_temp^(0+128)
  1786  03BF  01C2               	clrf	(FilterCh13@filter_temp+1)^(0+128)
  1787  03C0  01C3               	clrf	FilterCh13@filter_sum^(0+128)
  1788  03C1  01C4               	clrf	(FilterCh13@filter_sum+1)^(0+128)
  1789                           
  1790                           ;common.c: 69: unsigned int filter_buf[3];
  1791                           ;common.c: 71: for(int cir = 0;cir < 3; cir++)
  1792  03C2  01CB               	clrf	FilterCh13@cir^(0+128)
  1793  03C3  01CC               	clrf	(FilterCh13@cir+1)^(0+128)
  1794  03C4                     l4133:	
  1795                           
  1796                           ;common.c: 72: filter_buf[cir] = *tmpValue++;
  1797  03C4  1683               	bsf	3,5	;RP0=1, select bank1
  1798  03C5  1303               	bcf	3,6	;RP1=0, select bank1
  1799  03C6  0840               	movf	FilterCh13@tmpValue^(0+128),w
  1800  03C7  0084               	movwf	4
  1801  03C8  1383               	bcf	3,7	;select IRP bank0
  1802  03C9  2452  118A         	fcall	PL3	;call to abstracted procedure
  1803  03CB  1683               	bsf	3,5	;RP0=1, select bank1
  1804  03CC  1003               	clrc
  1805  03CD  0D4B               	rlf	FilterCh13@cir^(0+128),w
  1806  03CE  2459  118A         	fcall	PL5	;call to abstracted procedure
  1807  03D0  0AC0               	incf	FilterCh13@tmpValue^(0+128),f
  1808  03D1  0AC0               	incf	FilterCh13@tmpValue^(0+128),f
  1809  03D2  0ACB               	incf	FilterCh13@cir^(0+128),f
  1810  03D3  1903               	skipnz
  1811  03D4  0ACC               	incf	(FilterCh13@cir+1)^(0+128),f
  1812  03D5  084C               	movf	(FilterCh13@cir+1)^(0+128),w
  1813  03D6  3A80               	xorlw	128
  1814  03D7  00FF               	movwf	127
  1815  03D8  3080               	movlw	128
  1816  03D9  027F               	subwf	127,w
  1817  03DA  1D03               	skipz
  1818  03DB  2BDE               	goto	u1935
  1819  03DC  3003               	movlw	3
  1820  03DD  024B               	subwf	FilterCh13@cir^(0+128),w
  1821  03DE                     u1935:	
  1822  03DE  1C03               	skipc
  1823  03DF  2BC4               	goto	l4133
  1824                           
  1825                           ;common.c: 76: for(j = 0; j < 3 - 1; j++)
  1826  03E0  1683               	bsf	3,5	;RP0=1, select bank1
  1827  03E1  1303               	bcf	3,6	;RP1=0, select bank1
  1828  03E2  01CD               	clrf	FilterCh13@j^(0+128)
  1829  03E3                     l4147:	
  1830                           
  1831                           ;common.c: 77: {
  1832                           ;common.c: 78: for(i = 0; i < 3 - 1 - j; i++)
  1833  03E3  01CE               	clrf	FilterCh13@i^(0+128)
  1834  03E4                     l4155:	
  1835  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  1836  03E5  01BA               	clrf	??_FilterCh13+1
  1837  03E6  1683               	bsf	3,5	;RP0=1, select bank1
  1838  03E7  084D               	movf	FilterCh13@j^(0+128),w
  1839  03E8  3C02               	sublw	2
  1840  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  1841  03EA  00B9               	movwf	??_FilterCh13
  1842  03EB  1C03               	skipc
  1843  03EC  03BA               	decf	??_FilterCh13+1,f
  1844  03ED  083A               	movf	??_FilterCh13+1,w
  1845  03EE  3A80               	xorlw	128
  1846  03EF  3C80               	sublw	128
  1847  03F0  1D03               	skipz
  1848  03F1  2BF5               	goto	u1955
  1849  03F2  0839               	movf	??_FilterCh13,w
  1850  03F3  1683               	bsf	3,5	;RP0=1, select bank1
  1851  03F4  024E               	subwf	FilterCh13@i^(0+128),w
  1852  03F5                     u1955:	
  1853  03F5  1803               	btfsc	3,0
  1854  03F6  2C2C               	goto	l4157
  1855                           
  1856                           ;common.c: 79: {
  1857                           ;common.c: 80: if(filter_buf[i] > filter_buf[i + 1])
  1858  03F7  1683               	bsf	3,5	;RP0=1, select bank1
  1859  03F8  1303               	bcf	3,6	;RP1=0, select bank1
  1860  03F9  1003               	clrc
  1861  03FA  0D4E               	rlf	FilterCh13@i^(0+128),w
  1862  03FB  3EC5               	addlw	FilterCh13@filter_buf& (0+255)
  1863  03FC  0084               	movwf	4
  1864  03FD  1383               	bcf	3,7	;select IRP bank1
  1865  03FE  2452  118A         	fcall	PL3	;call to abstracted procedure
  1866  0400  1683               	bsf	3,5	;RP0=1, select bank1
  1867  0401  2463  118A         	fcall	PL8	;call to abstracted procedure
  1868  0403  0800               	movf	0,w
  1869  0404  1283               	bcf	3,5	;RP0=0, select bank0
  1870  0405  00BB               	movwf	??_FilterCh13+2
  1871  0406  0A84               	incf	4,f
  1872  0407  0800               	movf	0,w
  1873  0408  00BC               	movwf	??_FilterCh13+3
  1874  0409  083A               	movf	??_FilterCh13+1,w
  1875  040A  023C               	subwf	??_FilterCh13+3,w
  1876  040B  1D03               	skipz
  1877  040C  2C0F               	goto	u1945
  1878  040D  0839               	movf	??_FilterCh13,w
  1879  040E  023B               	subwf	??_FilterCh13+2,w
  1880  040F                     u1945:	
  1881  040F  1803               	skipnc
  1882  0410  2C29               	goto	l4153
  1883                           
  1884                           ;common.c: 81: {
  1885                           ;common.c: 83: filter_temp = filter_buf[i];
  1886  0411  1683               	bsf	3,5	;RP0=1, select bank1
  1887  0412  2469  118A         	fcall	PL10	;call to abstracted procedure
  1888  0414  0800               	movf	0,w
  1889  0415  00C1               	movwf	FilterCh13@filter_temp^(0+128)
  1890  0416  0A84               	incf	4,f
  1891  0417  0800               	movf	0,w
  1892  0418  00C2               	movwf	(FilterCh13@filter_temp+1)^(0+128)
  1893                           
  1894                           ;common.c: 85: filter_buf[i] = filter_buf[i + 1];
  1895  0419  2463  118A         	fcall	PL8	;call to abstracted procedure
  1896  041B  2452  118A         	fcall	PL3	;call to abstracted procedure
  1897  041D  1683               	bsf	3,5	;RP0=1, select bank1
  1898  041E  1003               	clrc
  1899  041F  0D4E               	rlf	FilterCh13@i^(0+128),w
  1900                           
  1901                           ;common.c: 87: filter_buf[i + 1] = filter_temp;
  1902  0420  2459  118A         	fcall	PL5	;call to abstracted procedure
  1903  0422  2463  118A         	fcall	PL8	;call to abstracted procedure
  1904  0424  0841               	movf	FilterCh13@filter_temp^(0+128),w
  1905  0425  0080               	movwf	0
  1906  0426  0A84               	incf	4,f
  1907  0427  0842               	movf	(FilterCh13@filter_temp+1)^(0+128),w
  1908  0428  0080               	movwf	0
  1909  0429                     l4153:	
  1910  0429  1683               	bsf	3,5	;RP0=1, select bank1
  1911  042A  0ACE               	incf	FilterCh13@i^(0+128),f
  1912  042B  2BE4               	goto	l4155
  1913  042C                     l4157:	
  1914  042C  1683               	bsf	3,5	;RP0=1, select bank1
  1915  042D  3002               	movlw	2
  1916  042E  1303               	bcf	3,6	;RP1=0, select bank1
  1917  042F  0ACD               	incf	FilterCh13@j^(0+128),f
  1918  0430  024D               	subwf	FilterCh13@j^(0+128),w
  1919  0431  1803               	btfsc	3,0
  1920  0432  2C44               	goto	l4171
  1921  0433  2BE3               	goto	l4147
  1922  0434                     l4165:	
  1923                           
  1924                           ;common.c: 93: {
  1925                           ;common.c: 94: filter_sum += filter_buf[i];
  1926  0434  2469  118A         	fcall	PL10	;call to abstracted procedure
  1927  0436  2452  118A         	fcall	PL3	;call to abstracted procedure
  1928  0438  0839               	movf	??_FilterCh13,w
  1929  0439  1683               	bsf	3,5	;RP0=1, select bank1
  1930  043A  07C3               	addwf	FilterCh13@filter_sum^(0+128),f
  1931  043B  1803               	skipnc
  1932  043C  0AC4               	incf	(FilterCh13@filter_sum+1)^(0+128),f
  1933  043D  1283               	bcf	3,5	;RP0=0, select bank0
  1934  043E  083A               	movf	??_FilterCh13+1,w
  1935  043F  1683               	bsf	3,5	;RP0=1, select bank1
  1936  0440  07C4               	addwf	(FilterCh13@filter_sum+1)^(0+128),f
  1937  0441  0ACE               	incf	FilterCh13@i^(0+128),f
  1938  0442  1903               	btfsc	3,2
  1939  0443  2C34               	goto	l4165
  1940  0444                     l4171:	
  1941                           
  1942                           ;common.c: 95: }
  1943                           ;common.c: 98: return (filter_sum >> 2 );
  1944  0444  0844               	movf	(FilterCh13@filter_sum+1)^(0+128),w
  1945  0445  1283               	bcf	3,5	;RP0=0, select bank0
  1946  0446  00B8               	movwf	?_FilterCh13+1
  1947  0447  1683               	bsf	3,5	;RP0=1, select bank1
  1948  0448  0843               	movf	FilterCh13@filter_sum^(0+128),w
  1949  0449  1283               	bcf	3,5	;RP0=0, select bank0
  1950  044A  00B7               	movwf	?_FilterCh13
  1951  044B  1003               	clrc
  1952  044C  0CB8               	rrf	?_FilterCh13+1,f
  1953  044D  0CB7               	rrf	?_FilterCh13,f
  1954  044E  1003               	clrc
  1955  044F  0CB8               	rrf	?_FilterCh13+1,f
  1956  0450  0CB7               	rrf	?_FilterCh13,f
  1957  0451  0008               	return
  1958  0452                     __end_of_FilterCh13:	
  1959  0452                     PL3:	
  1960  0452  0800               	movf	0,w
  1961  0453  1283               	bcf	3,5	;RP0=0, select bank0
  1962  0454  00B9               	movwf	??_FilterCh13
  1963  0455  0A84               	incf	4,f
  1964  0456  0800               	movf	0,w
  1965  0457  00BA               	movwf	??_FilterCh13+1
  1966  0458  0008               	return
  1967  0459                     PL5:	
  1968  0459  3EC5               	addlw	FilterCh13@filter_buf& (0+255)
  1969  045A  0084               	movwf	4
  1970  045B  1283               	bcf	3,5	;RP0=0, select bank0
  1971  045C  0839               	movf	??_FilterCh13,w
  1972  045D  0080               	movwf	0
  1973  045E  0A84               	incf	4,f
  1974  045F  083A               	movf	??_FilterCh13+1,w
  1975  0460  0080               	movwf	0
  1976  0461  1683               	bsf	3,5	;RP0=1, select bank1
  1977  0462  0008               	return
  1978  0463                     PL8:	
  1979  0463  1003               	clrc
  1980  0464  0D4E               	rlf	FilterCh13@i^(0+128),w
  1981  0465  3E02               	addlw	2
  1982  0466  3EC5               	addlw	FilterCh13@filter_buf& (0+255)
  1983  0467  0084               	movwf	4
  1984  0468  0008               	return
  1985  0469                     PL10:	
  1986  0469  1003               	clrc
  1987  046A  0D4E               	rlf	FilterCh13@i^(0+128),w
  1988  046B  3EC5               	addlw	FilterCh13@filter_buf& (0+255)
  1989  046C  0084               	movwf	4
  1990  046D  0008               	return
  1991                           
  1992                           	psect	text1180
  1993  046E                     __ptext1180:	
  1994 ;; =============== function _getAdOriginalCh13Value ends ============
  1995                           
  1996                           
  1997 ;; *************** function _process_AD_Converter_Value *****************
  1998 ;; Defined at:
  1999 ;;		line 366 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2000 ;; Parameters:    Size  Location     Type
  2001 ;;		None
  2002 ;; Auto vars:     Size  Location     Type
  2003 ;;		None
  2004 ;; Return value:  Size  Location     Type
  2005 ;;		None               void
  2006 ;; Registers used:
  2007 ;;		wreg, status,2, status,0, pclath, cstack
  2008 ;; Tracked objects:
  2009 ;;		On entry : 0/0
  2010 ;;		On exit  : 60/0
  2011 ;;		Unchanged: FFF9F/0
  2012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2013 ;;      Params:         0       0       0       0       0
  2014 ;;      Locals:         0       0       0       0       0
  2015 ;;      Temps:          0       0       0       0       0
  2016 ;;      Totals:         0       0       0       0       0
  2017 ;;Total ram usage:        0 bytes
  2018 ;; Hardware stack levels used:    1
  2019 ;; Hardware stack levels required when called:    4
  2020 ;; This function calls:
  2021 ;;		_getAD_ConvertFlag
  2022 ;;		_setAD_ConvertFlag
  2023 ;;		_AD_Sample
  2024 ;;		_adc_test_init
  2025 ;;		_adc_start
  2026 ;; This function is called by:
  2027 ;;		_main
  2028 ;; This function uses a non-reentrant model
  2029 ;;
  2030  046E                     _process_AD_Converter_Value:	
  2031                           
  2032                           ;common.c: 367: if(getAD_ConvertFlag())
  2033                           
  2034                           ; Regs used in _process_AD_Converter_Value: [wreg+status,2+status,0+pclath+cstack]
  2035  046E  2484  118A         	fcall	_getAD_ConvertFlag
  2036  0470  3A00               	xorlw	0
  2037  0471  1903               	skipnz
  2038  0472  0008               	return
  2039                           
  2040                           ;common.c: 368: {
  2041                           ;common.c: 369: setAD_ConvertFlag(0);
  2042  0473  3000               	movlw	0
  2043  0474  2488  118A         	fcall	_setAD_ConvertFlag
  2044                           
  2045                           ;common.c: 370: AD_Sample();
  2046  0476  248B  118A         	fcall	_AD_Sample
  2047                           
  2048                           ;common.c: 371: if(12 == sampleChannelSelect)
  2049  0478  0857               	movf	_sampleChannelSelect,w
  2050  0479  3A0C               	xorlw	12
  2051                           
  2052                           ;common.c: 372: adc_test_init(12,3);
  2053  047A  3003               	movlw	3
  2054  047B  00B7               	movwf	?_adc_test_init
  2055  047C  1D03               	skipz
  2056  047D  2C80               	goto	L11
  2057  047E  300C               	movlw	12
  2058  047F  2C81               	goto	L10
  2059  0480                     L11:	
  2060                           ;common.c: 373: else
  2061                           ;common.c: 374: adc_test_init(13,3);
  2062                           
  2063  0480  300D               	movlw	13
  2064  0481                     L10:	
  2065  0481  249F  118A         	fcall	_adc_test_init
  2066                           
  2067                           ;common.c: 375: adc_start();
  2068  0483  2CBA               	ljmp	l4017
  2069  0484                     __end_of_process_AD_Converter_Value:	
  2070  0484                     __ptext1185:	
  2071 ;; =============== function _setAD_ConvertFlag ends ============
  2072                           
  2073                           
  2074 ;; *************** function _getAD_ConvertFlag *****************
  2075 ;; Defined at:
  2076 ;;		line 315 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2077 ;; Parameters:    Size  Location     Type
  2078 ;;		None
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;		None
  2081 ;; Return value:  Size  Location     Type
  2082 ;;                  1    wreg      unsigned char 
  2083 ;; Registers used:
  2084 ;;		wreg
  2085 ;; Tracked objects:
  2086 ;;		On entry : 0/0
  2087 ;;		On exit  : 60/0
  2088 ;;		Unchanged: FFF9F/0
  2089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2090 ;;      Params:         0       0       0       0       0
  2091 ;;      Locals:         0       0       0       0       0
  2092 ;;      Temps:          0       0       0       0       0
  2093 ;;      Totals:         0       0       0       0       0
  2094 ;;Total ram usage:        0 bytes
  2095 ;; Hardware stack levels used:    1
  2096 ;; Hardware stack levels required when called:    3
  2097 ;; This function calls:
  2098 ;;		Nothing
  2099 ;; This function is called by:
  2100 ;;		_process_AD_Converter_Value
  2101 ;; This function uses a non-reentrant model
  2102 ;;
  2103  0484                     _getAD_ConvertFlag:	
  2104                           
  2105                           ;common.c: 316: return adc_convert_flag;
  2106                           
  2107                           ; Regs used in _getAD_ConvertFlag: [wreg]
  2108  0484  1283               	bcf	3,5	;RP0=0, select bank0
  2109  0485  1303               	bcf	3,6	;RP1=0, select bank0
  2110  0486  0848               	movf	_adc_convert_flag,w
  2111  0487  0008               	return
  2112  0488                     __end_of_getAD_ConvertFlag:	
  2113  0488                     __ptext1184:	
  2114 ;; =============== function _AD_Sample ends ============
  2115                           
  2116                           
  2117 ;; *************** function _setAD_ConvertFlag *****************
  2118 ;; Defined at:
  2119 ;;		line 321 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;  flag            1    wreg     unsigned char 
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;  flag            1   23[BANK0 ] unsigned char 
  2124 ;; Return value:  Size  Location     Type
  2125 ;;		None               void
  2126 ;; Registers used:
  2127 ;;		wreg
  2128 ;; Tracked objects:
  2129 ;;		On entry : 60/0
  2130 ;;		On exit  : 60/0
  2131 ;;		Unchanged: FFF9F/0
  2132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2133 ;;      Params:         0       0       0       0       0
  2134 ;;      Locals:         0       1       0       0       0
  2135 ;;      Temps:          0       0       0       0       0
  2136 ;;      Totals:         0       1       0       0       0
  2137 ;;Total ram usage:        1 bytes
  2138 ;; Hardware stack levels used:    1
  2139 ;; Hardware stack levels required when called:    3
  2140 ;; This function calls:
  2141 ;;		Nothing
  2142 ;; This function is called by:
  2143 ;;		_process_AD_Converter_Value
  2144 ;; This function uses a non-reentrant model
  2145 ;;
  2146  0488                     _setAD_ConvertFlag:	
  2147                           
  2148                           ; Regs used in _setAD_ConvertFlag: [wreg]
  2149                           ;setAD_ConvertFlag@flag stored from wreg
  2150  0488  00B7               	movwf	setAD_ConvertFlag@flag
  2151                           
  2152                           ;common.c: 322: adc_convert_flag = flag;
  2153  0489  00C8               	movwf	_adc_convert_flag
  2154  048A  0008               	return
  2155  048B                     __end_of_setAD_ConvertFlag:	
  2156  048B                     __ptext1183:	
  2157 ;; =============== function _initPin ends ============
  2158                           
  2159                           
  2160 ;; *************** function _AD_Sample *****************
  2161 ;; Defined at:
  2162 ;;		line 389 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;		None
  2165 ;; Auto vars:     Size  Location     Type
  2166 ;;		None
  2167 ;; Return value:  Size  Location     Type
  2168 ;;		None               void
  2169 ;; Registers used:
  2170 ;;		wreg, status,2, status,0
  2171 ;; Tracked objects:
  2172 ;;		On entry : 60/0
  2173 ;;		On exit  : 60/0
  2174 ;;		Unchanged: FFF9F/0
  2175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2176 ;;      Params:         0       0       0       0       0
  2177 ;;      Locals:         0       0       0       0       0
  2178 ;;      Temps:          0       0       0       0       0
  2179 ;;      Totals:         0       0       0       0       0
  2180 ;;Total ram usage:        0 bytes
  2181 ;; Hardware stack levels used:    1
  2182 ;; Hardware stack levels required when called:    3
  2183 ;; This function calls:
  2184 ;;		Nothing
  2185 ;; This function is called by:
  2186 ;;		_process_AD_Converter_Value
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189  048B                     _AD_Sample:	
  2190                           
  2191                           ;common.c: 390: if(sampleTimes < 3)
  2192                           
  2193                           ; Regs used in _AD_Sample: [wreg+status,2+status,0]
  2194  048B  3003               	movlw	3
  2195  048C  024D               	subwf	_sampleTimes,w
  2196  048D  1803               	skipnc
  2197  048E  0008               	return
  2198  048F  3003               	movlw	3
  2199                           
  2200                           ;common.c: 391: {
  2201                           ;common.c: 392: sampleTimes++;
  2202  0490  0ACD               	incf	_sampleTimes,f
  2203                           
  2204                           ;common.c: 394: if(sampleTimes >= 3)
  2205  0491  024D               	subwf	_sampleTimes,w
  2206  0492  1C03               	skipc
  2207  0493  0008               	return
  2208                           
  2209                           ;common.c: 395: {
  2210                           ;common.c: 396: sampleTimes = 0;
  2211  0494  01CD               	clrf	_sampleTimes
  2212                           
  2213                           ;common.c: 398: if(sampleChannelSelect == 12)
  2214  0495  0857               	movf	_sampleChannelSelect,w
  2215  0496  3A0C               	xorlw	12
  2216  0497  1D03               	skipz
  2217  0498  2C9C               	goto	l4195
  2218                           
  2219                           ;common.c: 399: {
  2220                           ;common.c: 400: sampleChannelSelect = 13;
  2221  0499  300D               	movlw	13
  2222  049A  00D7               	movwf	_sampleChannelSelect
  2223                           
  2224                           ;common.c: 401: }
  2225  049B  0008               	return
  2226  049C                     l4195:	
  2227                           
  2228                           ;common.c: 403: else
  2229                           ;common.c: 404: {
  2230                           ;common.c: 405: sampleChannelSelect = 12;
  2231  049C  300C               	movlw	12
  2232  049D  00D7               	movwf	_sampleChannelSelect
  2233  049E  0008               	return
  2234  049F                     __end_of_AD_Sample:	
  2235  049F                     __ptext1201:	
  2236 ;; =============== function _startTwentyMinTimer ends ============
  2237                           
  2238                           
  2239 ;; *************** function _adc_test_init *****************
  2240 ;; Defined at:
  2241 ;;		line 85 in file "D:\develop\AK7030-good\AK7030-OTP\periph.c"
  2242 ;; Parameters:    Size  Location     Type
  2243 ;;  channel         1    wreg     unsigned char 
  2244 ;;  ref             1   23[BANK0 ] unsigned char 
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;  channel         1   25[BANK0 ] unsigned char 
  2247 ;; Return value:  Size  Location     Type
  2248 ;;		None               void
  2249 ;; Registers used:
  2250 ;;		wreg, status,2, status,0
  2251 ;; Tracked objects:
  2252 ;;		On entry : 60/0
  2253 ;;		On exit  : 60/20
  2254 ;;		Unchanged: FFF9F/0
  2255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2256 ;;      Params:         0       1       0       0       0
  2257 ;;      Locals:         0       1       0       0       0
  2258 ;;      Temps:          0       1       0       0       0
  2259 ;;      Totals:         0       3       0       0       0
  2260 ;;Total ram usage:        3 bytes
  2261 ;; Hardware stack levels used:    1
  2262 ;; Hardware stack levels required when called:    3
  2263 ;; This function calls:
  2264 ;;		Nothing
  2265 ;; This function is called by:
  2266 ;;		_main
  2267 ;;		_process_AD_Converter_Value
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270  049F                     _adc_test_init:	
  2271                           
  2272                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  2273                           ;adc_test_init@channel stored from wreg
  2274  049F  00B9               	movwf	adc_test_init@channel
  2275                           
  2276                           ;periph.c: 86: ADCON0 = 0x40;
  2277  04A0  3040               	movlw	64
  2278  04A1  009F               	movwf	31	;volatile
  2279                           
  2280                           ;periph.c: 87: ADCON0|=channel<<2;
  2281  04A2  0839               	movf	adc_test_init@channel,w
  2282  04A3  00B8               	movwf	??_adc_test_init
  2283  04A4  1003               	clrc
  2284  04A5  0DB8               	rlf	??_adc_test_init,f
  2285  04A6  1003               	clrc
  2286  04A7  0D38               	rlf	??_adc_test_init,w
  2287  04A8  049F               	iorwf	31,f	;volatile
  2288                           
  2289                           ;periph.c: 88: ADCON1 = 0x35;
  2290  04A9  3035               	movlw	53
  2291  04AA  1683               	bsf	3,5	;RP0=1, select bank1
  2292  04AB  009F               	movwf	31	;volatile
  2293                           
  2294                           ;periph.c: 89: ADCON1|=ref<<6;
  2295  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  2296  04AD  0837               	movf	adc_test_init@ref,w
  2297  04AE  00B8               	movwf	??_adc_test_init
  2298  04AF  0CB8               	rrf	??_adc_test_init,f
  2299  04B0  0CB8               	rrf	??_adc_test_init,f
  2300  04B1  0C38               	rrf	??_adc_test_init,w
  2301  04B2  39C0               	andlw	192
  2302  04B3  1683               	bsf	3,5	;RP0=1, select bank1
  2303  04B4  049F               	iorwf	31,f	;volatile
  2304                           
  2305                           ;periph.c: 90: ADON=1;
  2306  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  2307  04B6  141F               	bsf	31,0
  2308                           
  2309                           ;periph.c: 91: ADIE=1;
  2310  04B7  1683               	bsf	3,5	;RP0=1, select bank1
  2311  04B8  150D               	bsf	13,2
  2312  04B9  0008               	return
  2313  04BA                     __end_of_adc_test_init:	
  2314  04BA                     __ptext1199:	
  2315 ;; =============== function _isPermitSampleTime ends ============
  2316                           
  2317                           
  2318 ;; *************** function _adc_start *****************
  2319 ;; Defined at:
  2320 ;;		line 101 in file "D:\develop\AK7030-good\AK7030-OTP\periph.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;		None
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;		None
  2325 ;; Return value:  Size  Location     Type
  2326 ;;		None               void
  2327 ;; Registers used:
  2328 ;;		None
  2329 ;; Tracked objects:
  2330 ;;		On entry : 0/0
  2331 ;;		On exit  : 60/0
  2332 ;;		Unchanged: FFF9F/0
  2333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2334 ;;      Params:         0       0       0       0       0
  2335 ;;      Locals:         0       0       0       0       0
  2336 ;;      Temps:          0       0       0       0       0
  2337 ;;      Totals:         0       0       0       0       0
  2338 ;;Total ram usage:        0 bytes
  2339 ;; Hardware stack levels used:    1
  2340 ;; Hardware stack levels required when called:    3
  2341 ;; This function calls:
  2342 ;;		Nothing
  2343 ;; This function is called by:
  2344 ;;		_main
  2345 ;;		_process_AD_Converter_Value
  2346 ;; This function uses a non-reentrant model
  2347 ;;
  2348  04BA                     _adc_start:	
  2349  04BA                     l4017:	
  2350                           ; Regs used in _adc_start: []
  2351                           
  2352                           
  2353                           ;periph.c: 102: GO=1;
  2354  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  2355  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  2356  04BC  149F               	bsf	31,1
  2357  04BD  0008               	return
  2358  04BE                     __end_of_adc_start:	
  2359                           
  2360                           	psect	text1181
  2361  04EF                     __ptext1181:	
  2362 ;; =============== function _process_AD_Converter_Value ends ============
  2363                           
  2364                           
  2365 ;; *************** function _setPinInitVaule *****************
  2366 ;; Defined at:
  2367 ;;		line 279 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;		None
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;		None
  2372 ;; Return value:  Size  Location     Type
  2373 ;;		None               void
  2374 ;; Registers used:
  2375 ;;		wreg, status,2, status,0, pclath, cstack
  2376 ;; Tracked objects:
  2377 ;;		On entry : 17F/20
  2378 ;;		On exit  : 17F/0
  2379 ;;		Unchanged: FFE80/0
  2380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2381 ;;      Params:         0       0       0       0       0
  2382 ;;      Locals:         0       0       0       0       0
  2383 ;;      Temps:          0       0       0       0       0
  2384 ;;      Totals:         0       0       0       0       0
  2385 ;;Total ram usage:        0 bytes
  2386 ;; Hardware stack levels used:    1
  2387 ;; Hardware stack levels required when called:    4
  2388 ;; This function calls:
  2389 ;;		_setPB3
  2390 ;;		_setPB4
  2391 ;;		_setPB5
  2392 ;; This function is called by:
  2393 ;;		_main
  2394 ;; This function uses a non-reentrant model
  2395 ;;
  2396  04EF                     _setPinInitVaule:	
  2397                           
  2398                           ;main.c: 281: setPB3(1);
  2399                           
  2400                           ; Regs used in _setPinInitVaule: [wreg+status,2+status,0+pclath+cstack]
  2401  04EF  3001               	movlw	1
  2402  04F0  24F7  118A         	fcall	_setPB3
  2403                           
  2404                           ;main.c: 282: setPB4(0);
  2405  04F2  3000               	movlw	0
  2406  04F3  2500  118A         	fcall	_setPB4
  2407                           
  2408                           ;main.c: 283: setPB5(1);
  2409  04F5  3001               	movlw	1
  2410  04F6  2D08               	ljmp	_setPB5
  2411  04F7                     __end_of_setPinInitVaule:	
  2412  04F7                     __ptext1213:	
  2413 ;; =============== function _initPB4 ends ============
  2414                           
  2415                           
  2416 ;; *************** function _setPB3 *****************
  2417 ;; Defined at:
  2418 ;;		line 140 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;  bValue          1    wreg     unsigned char 
  2421 ;; Auto vars:     Size  Location     Type
  2422 ;;  bValue          1   23[BANK0 ] unsigned char 
  2423 ;; Return value:  Size  Location     Type
  2424 ;;		None               void
  2425 ;; Registers used:
  2426 ;;		wreg
  2427 ;; Tracked objects:
  2428 ;;		On entry : 40/0
  2429 ;;		On exit  : 60/0
  2430 ;;		Unchanged: FFF9F/0
  2431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2432 ;;      Params:         0       0       0       0       0
  2433 ;;      Locals:         0       1       0       0       0
  2434 ;;      Temps:          0       0       0       0       0
  2435 ;;      Totals:         0       1       0       0       0
  2436 ;;Total ram usage:        1 bytes
  2437 ;; Hardware stack levels used:    1
  2438 ;; Hardware stack levels required when called:    3
  2439 ;; This function calls:
  2440 ;;		Nothing
  2441 ;; This function is called by:
  2442 ;;		_setPinInitVaule
  2443 ;;		_main
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446  04F7                     _setPB3:	
  2447                           
  2448                           ; Regs used in _setPB3: [wreg]
  2449                           ;setPB3@bValue stored from wreg
  2450  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  2451  04F8  00B7               	movwf	setPB3@bValue
  2452                           
  2453                           ;main.c: 141: if( bValue )
  2454  04F9  0837               	movf	setPB3@bValue,w
  2455  04FA  1903               	btfsc	3,2
  2456  04FB  2CFE               	goto	l682
  2457                           
  2458                           ;main.c: 143: PB3 = 1;
  2459  04FC  1586               	bsf	6,3
  2460  04FD  0008               	return
  2461  04FE                     l682:	
  2462                           
  2463                           ;main.c: 147: else
  2464                           ;main.c: 149: PB3= 0;
  2465  04FE  1186               	bcf	6,3
  2466  04FF  0008               	return
  2467  0500                     __end_of_setPB3:	
  2468  0500                     __ptext1211:	
  2469 ;; =============== function _initPB5 ends ============
  2470                           
  2471                           
  2472 ;; *************** function _setPB4 *****************
  2473 ;; Defined at:
  2474 ;;		line 175 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;  bValue          1    wreg     unsigned char 
  2477 ;; Auto vars:     Size  Location     Type
  2478 ;;  bValue          1   23[BANK0 ] unsigned char 
  2479 ;; Return value:  Size  Location     Type
  2480 ;;		None               void
  2481 ;; Registers used:
  2482 ;;		wreg
  2483 ;; Tracked objects:
  2484 ;;		On entry : 60/0
  2485 ;;		On exit  : 60/0
  2486 ;;		Unchanged: FFF9F/0
  2487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2488 ;;      Params:         0       0       0       0       0
  2489 ;;      Locals:         0       1       0       0       0
  2490 ;;      Temps:          0       0       0       0       0
  2491 ;;      Totals:         0       1       0       0       0
  2492 ;;Total ram usage:        1 bytes
  2493 ;; Hardware stack levels used:    1
  2494 ;; Hardware stack levels required when called:    3
  2495 ;; This function calls:
  2496 ;;		Nothing
  2497 ;; This function is called by:
  2498 ;;		_setPinInitVaule
  2499 ;;		_main
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502  0500                     _setPB4:	
  2503                           
  2504                           ; Regs used in _setPB4: [wreg]
  2505                           ;setPB4@bValue stored from wreg
  2506  0500  00B7               	movwf	setPB4@bValue
  2507                           
  2508                           ;main.c: 176: if( bValue )
  2509  0501  0837               	movf	setPB4@bValue,w
  2510  0502  1903               	btfsc	3,2
  2511  0503  2D06               	goto	l692
  2512                           
  2513                           ;main.c: 178: PB4 = 1;
  2514  0504  1606               	bsf	6,4
  2515  0505  0008               	return
  2516  0506                     l692:	
  2517                           
  2518                           ;main.c: 182: else
  2519                           ;main.c: 184: PB4= 0;
  2520  0506  1206               	bcf	6,4
  2521  0507  0008               	return
  2522  0508                     __end_of_setPB4:	
  2523  0508                     __ptext1209:	
  2524 ;; =============== function _initPB2_AsHighResistence ends ============
  2525                           
  2526                           
  2527 ;; *************** function _setPB5 *****************
  2528 ;; Defined at:
  2529 ;;		line 209 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2530 ;; Parameters:    Size  Location     Type
  2531 ;;  bValue          1    wreg     unsigned char 
  2532 ;; Auto vars:     Size  Location     Type
  2533 ;;  bValue          1   23[BANK0 ] unsigned char 
  2534 ;; Return value:  Size  Location     Type
  2535 ;;		None               void
  2536 ;; Registers used:
  2537 ;;		wreg
  2538 ;; Tracked objects:
  2539 ;;		On entry : 60/0
  2540 ;;		On exit  : 60/0
  2541 ;;		Unchanged: FFF9F/0
  2542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2543 ;;      Params:         0       0       0       0       0
  2544 ;;      Locals:         0       1       0       0       0
  2545 ;;      Temps:          0       0       0       0       0
  2546 ;;      Totals:         0       1       0       0       0
  2547 ;;Total ram usage:        1 bytes
  2548 ;; Hardware stack levels used:    1
  2549 ;; Hardware stack levels required when called:    3
  2550 ;; This function calls:
  2551 ;;		Nothing
  2552 ;; This function is called by:
  2553 ;;		_setPinInitVaule
  2554 ;;		_main
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557  0508                     _setPB5:	
  2558                           
  2559                           ; Regs used in _setPB5: [wreg]
  2560                           ;setPB5@bValue stored from wreg
  2561  0508  00B7               	movwf	setPB5@bValue
  2562                           
  2563                           ;main.c: 210: if( bValue )
  2564  0509  0837               	movf	setPB5@bValue,w
  2565  050A  1903               	btfsc	3,2
  2566  050B  2D0E               	goto	l702
  2567                           
  2568                           ;main.c: 212: PB5 = 1;
  2569  050C  1686               	bsf	6,5
  2570  050D  0008               	return
  2571  050E                     l702:	
  2572                           
  2573                           ;main.c: 216: else
  2574                           ;main.c: 218: PB5= 0;
  2575  050E  1286               	bcf	6,5
  2576  050F  0008               	return
  2577  0510                     __end_of_setPB5:	
  2578                           
  2579                           	psect	text1182
  2580  04BE                     __ptext1182:	
  2581 ;; =============== function _setPinInitVaule ends ============
  2582                           
  2583                           
  2584 ;; *************** function _initPin *****************
  2585 ;; Defined at:
  2586 ;;		line 263 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;		None
  2589 ;; Auto vars:     Size  Location     Type
  2590 ;;		None
  2591 ;; Return value:  Size  Location     Type
  2592 ;;		None               void
  2593 ;; Registers used:
  2594 ;;		wreg, status,2, status,0, pclath, cstack
  2595 ;; Tracked objects:
  2596 ;;		On entry : 17F/0
  2597 ;;		On exit  : 17F/20
  2598 ;;		Unchanged: FFE80/0
  2599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2600 ;;      Params:         0       0       0       0       0
  2601 ;;      Locals:         0       0       0       0       0
  2602 ;;      Temps:          0       0       0       0       0
  2603 ;;      Totals:         0       0       0       0       0
  2604 ;;Total ram usage:        0 bytes
  2605 ;; Hardware stack levels used:    1
  2606 ;; Hardware stack levels required when called:    4
  2607 ;; This function calls:
  2608 ;;		_initPB2_AsHighResistence
  2609 ;;		_initPB3
  2610 ;;		_initPB4
  2611 ;;		_initPB5
  2612 ;; This function is called by:
  2613 ;;		_main
  2614 ;; This function uses a non-reentrant model
  2615 ;;
  2616  04BE                     _initPin:	
  2617                           
  2618                           ;main.c: 265: initPB2_AsHighResistence();
  2619                           
  2620                           ; Regs used in _initPin: [wreg+status,2+status,0+pclath+cstack]
  2621  04BE  24D4  118A         	fcall	_initPB2_AsHighResistence
  2622                           
  2623                           ;main.c: 267: initPB3(0);
  2624  04C0  3000               	movlw	0
  2625  04C1  24C8  118A         	fcall	_initPB3
  2626                           
  2627                           ;main.c: 269: initPB4(0);
  2628  04C3  3000               	movlw	0
  2629  04C4  24D9  118A         	fcall	_initPB4
  2630                           
  2631                           ;main.c: 271: initPB5(0);
  2632  04C6  3000               	movlw	0
  2633  04C7  2CE4               	ljmp	_initPB5
  2634  04C8                     __end_of_initPin:	
  2635  04C8                     __ptext1214:	
  2636 ;; =============== function _setPB3 ends ============
  2637                           
  2638                           
  2639 ;; *************** function _initPB3 *****************
  2640 ;; Defined at:
  2641 ;;		line 123 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2642 ;; Parameters:    Size  Location     Type
  2643 ;;  bValue          1    wreg     unsigned char 
  2644 ;; Auto vars:     Size  Location     Type
  2645 ;;  bValue          1   23[BANK0 ] unsigned char 
  2646 ;; Return value:  Size  Location     Type
  2647 ;;		None               void
  2648 ;; Registers used:
  2649 ;;		wreg
  2650 ;; Tracked objects:
  2651 ;;		On entry : 17F/60
  2652 ;;		On exit  : 17F/20
  2653 ;;		Unchanged: FFE80/0
  2654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2655 ;;      Params:         0       0       0       0       0
  2656 ;;      Locals:         0       1       0       0       0
  2657 ;;      Temps:          0       0       0       0       0
  2658 ;;      Totals:         0       1       0       0       0
  2659 ;;Total ram usage:        1 bytes
  2660 ;; Hardware stack levels used:    1
  2661 ;; Hardware stack levels required when called:    3
  2662 ;; This function calls:
  2663 ;;		Nothing
  2664 ;; This function is called by:
  2665 ;;		_initPin
  2666 ;; This function uses a non-reentrant model
  2667 ;;
  2668  04C8                     _initPB3:	
  2669                           
  2670                           ; Regs used in _initPB3: [wreg]
  2671                           ;initPB3@bValue stored from wreg
  2672  04C8  1283               	bcf	3,5	;RP0=0, select bank0
  2673  04C9  1303               	bcf	3,6	;RP1=0, select bank0
  2674  04CA  00B7               	movwf	initPB3@bValue
  2675                           
  2676                           ;main.c: 124: if( bValue )
  2677  04CB  0837               	movf	initPB3@bValue,w
  2678  04CC  1903               	btfsc	3,2
  2679  04CD  2CD1               	goto	l677
  2680                           
  2681                           ;main.c: 126: TRISB3 = 1;
  2682  04CE  1683               	bsf	3,5	;RP0=1, select bank1
  2683  04CF  1586               	bsf	6,3
  2684  04D0  0008               	return
  2685  04D1                     l677:	
  2686                           
  2687                           ;main.c: 130: else
  2688                           ;main.c: 132: TRISB3 = 0;
  2689  04D1  1683               	bsf	3,5	;RP0=1, select bank1
  2690  04D2  1186               	bcf	6,3
  2691  04D3  0008               	return
  2692  04D4                     __end_of_initPB3:	
  2693  04D4                     __ptext1208:	
  2694 ;; =============== function _pwm_start ends ============
  2695                           
  2696                           
  2697 ;; *************** function _initPB2_AsHighResistence *****************
  2698 ;; Defined at:
  2699 ;;		line 226 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;		None
  2702 ;; Auto vars:     Size  Location     Type
  2703 ;;		None
  2704 ;; Return value:  Size  Location     Type
  2705 ;;		None               void
  2706 ;; Registers used:
  2707 ;;		None
  2708 ;; Tracked objects:
  2709 ;;		On entry : 17F/0
  2710 ;;		On exit  : 17F/60
  2711 ;;		Unchanged: FFE80/0
  2712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2713 ;;      Params:         0       0       0       0       0
  2714 ;;      Locals:         0       0       0       0       0
  2715 ;;      Temps:          0       0       0       0       0
  2716 ;;      Totals:         0       0       0       0       0
  2717 ;;Total ram usage:        0 bytes
  2718 ;; Hardware stack levels used:    1
  2719 ;; Hardware stack levels required when called:    3
  2720 ;; This function calls:
  2721 ;;		Nothing
  2722 ;; This function is called by:
  2723 ;;		_initPin
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726  04D4                     _initPB2_AsHighResistence:	
  2727                           
  2728                           ;main.c: 228: PB2 = 1;
  2729                           
  2730                           ; Regs used in _initPB2_AsHighResistence: []
  2731  04D4  1506               	bsf	6,2
  2732                           
  2733                           ;main.c: 229: PBOD2 = 1;
  2734  04D5  1683               	bsf	3,5	;RP0=1, select bank3
  2735  04D6  1703               	bsf	3,6	;RP1=1, select bank3
  2736  04D7  1508               	bsf	8,2
  2737  04D8  0008               	return
  2738  04D9                     __end_of_initPB2_AsHighResistence:	
  2739  04D9                     __ptext1212:	
  2740 ;; =============== function _setPB4 ends ============
  2741                           
  2742                           
  2743 ;; *************** function _initPB4 *****************
  2744 ;; Defined at:
  2745 ;;		line 158 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2746 ;; Parameters:    Size  Location     Type
  2747 ;;  bValue          1    wreg     unsigned char 
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;  bValue          1   23[BANK0 ] unsigned char 
  2750 ;; Return value:  Size  Location     Type
  2751 ;;		None               void
  2752 ;; Registers used:
  2753 ;;		wreg
  2754 ;; Tracked objects:
  2755 ;;		On entry : 17F/20
  2756 ;;		On exit  : 17F/20
  2757 ;;		Unchanged: FFE80/0
  2758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2759 ;;      Params:         0       0       0       0       0
  2760 ;;      Locals:         0       1       0       0       0
  2761 ;;      Temps:          0       0       0       0       0
  2762 ;;      Totals:         0       1       0       0       0
  2763 ;;Total ram usage:        1 bytes
  2764 ;; Hardware stack levels used:    1
  2765 ;; Hardware stack levels required when called:    3
  2766 ;; This function calls:
  2767 ;;		Nothing
  2768 ;; This function is called by:
  2769 ;;		_initPin
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772  04D9                     _initPB4:	
  2773                           
  2774                           ; Regs used in _initPB4: [wreg]
  2775                           ;initPB4@bValue stored from wreg
  2776  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  2777  04DA  00B7               	movwf	initPB4@bValue
  2778                           
  2779                           ;main.c: 159: if( bValue )
  2780  04DB  0837               	movf	initPB4@bValue,w
  2781  04DC  1903               	btfsc	3,2
  2782  04DD  2CE1               	goto	l687
  2783                           
  2784                           ;main.c: 161: TRISB4 = 1;
  2785  04DE  1683               	bsf	3,5	;RP0=1, select bank1
  2786  04DF  1606               	bsf	6,4
  2787  04E0  0008               	return
  2788  04E1                     l687:	
  2789                           
  2790                           ;main.c: 165: else
  2791                           ;main.c: 167: TRISB4= 0;
  2792  04E1  1683               	bsf	3,5	;RP0=1, select bank1
  2793  04E2  1206               	bcf	6,4
  2794  04E3  0008               	return
  2795  04E4                     __end_of_initPB4:	
  2796  04E4                     __ptext1210:	
  2797 ;; =============== function _setPB5 ends ============
  2798                           
  2799                           
  2800 ;; *************** function _initPB5 *****************
  2801 ;; Defined at:
  2802 ;;		line 192 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;  bValue          1    wreg     unsigned char 
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;  bValue          1   23[BANK0 ] unsigned char 
  2807 ;; Return value:  Size  Location     Type
  2808 ;;		None               void
  2809 ;; Registers used:
  2810 ;;		wreg
  2811 ;; Tracked objects:
  2812 ;;		On entry : 17F/20
  2813 ;;		On exit  : 17F/20
  2814 ;;		Unchanged: FFE80/0
  2815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2816 ;;      Params:         0       0       0       0       0
  2817 ;;      Locals:         0       1       0       0       0
  2818 ;;      Temps:          0       0       0       0       0
  2819 ;;      Totals:         0       1       0       0       0
  2820 ;;Total ram usage:        1 bytes
  2821 ;; Hardware stack levels used:    1
  2822 ;; Hardware stack levels required when called:    3
  2823 ;; This function calls:
  2824 ;;		Nothing
  2825 ;; This function is called by:
  2826 ;;		_initPin
  2827 ;; This function uses a non-reentrant model
  2828 ;;
  2829  04E4                     _initPB5:	
  2830                           
  2831                           ; Regs used in _initPB5: [wreg]
  2832                           ;initPB5@bValue stored from wreg
  2833  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  2834  04E5  00B7               	movwf	initPB5@bValue
  2835                           
  2836                           ;main.c: 193: if( bValue )
  2837  04E6  0837               	movf	initPB5@bValue,w
  2838  04E7  1903               	btfsc	3,2
  2839  04E8  2CEC               	goto	l697
  2840                           
  2841                           ;main.c: 195: TRISB5 = 1;
  2842  04E9  1683               	bsf	3,5	;RP0=1, select bank1
  2843  04EA  1686               	bsf	6,5
  2844  04EB  0008               	return
  2845  04EC                     l697:	
  2846                           
  2847                           ;main.c: 199: else
  2848                           ;main.c: 201: TRISB5= 0;
  2849  04EC  1683               	bsf	3,5	;RP0=1, select bank1
  2850  04ED  1286               	bcf	6,5
  2851  04EE  0008               	return
  2852  04EF                     __end_of_initPB5:	
  2853                           
  2854                           	psect	text1187
  2855  0571                     __ptext1187:	
  2856 ;; =============== function _FilterCh13 ends ============
  2857                           
  2858                           
  2859 ;; *************** function _isFinishedOneHoursTimer *****************
  2860 ;; Defined at:
  2861 ;;		line 555 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;		None
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;		None
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  1    wreg      unsigned char 
  2868 ;; Registers used:
  2869 ;;		wreg, status,2, status,0
  2870 ;; Tracked objects:
  2871 ;;		On entry : 60/20
  2872 ;;		On exit  : 60/0
  2873 ;;		Unchanged: FFF9F/0
  2874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2875 ;;      Params:         0       0       0       0       0
  2876 ;;      Locals:         0       0       0       0       0
  2877 ;;      Temps:          0       0       0       0       0
  2878 ;;      Totals:         0       0       0       0       0
  2879 ;;Total ram usage:        0 bytes
  2880 ;; Hardware stack levels used:    1
  2881 ;; Hardware stack levels required when called:    3
  2882 ;; This function calls:
  2883 ;;		Nothing
  2884 ;; This function is called by:
  2885 ;;		_main
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888  0571                     _isFinishedOneHoursTimer:	
  2889                           
  2890                           ;common.c: 556: if((uiOneHourTimer == 0) && bOneHourTimerStartFlag)
  2891                           
  2892                           ; Regs used in _isFinishedOneHoursTimer: [wreg+status,2+status,0]
  2893  0571  1283               	bcf	3,5	;RP0=0, select bank0
  2894  0572  0840               	movf	_uiOneHourTimer+1,w
  2895  0573  043F               	iorwf	_uiOneHourTimer,w
  2896  0574  1D03               	skipz
  2897  0575  3400               	retlw	0
  2898  0576  084A               	movf	_bOneHourTimerStartFlag,w
  2899  0577  1903               	btfsc	3,2
  2900  0578  3400               	retlw	0
  2901  0579  3001               	movlw	1
  2902                           
  2903                           ;common.c: 557: {
  2904                           ;common.c: 558: bOneHourTimerStartFlag = 0;
  2905  057A  01CA               	clrf	_bOneHourTimerStartFlag
  2906                           
  2907                           ;common.c: 559: return 1;
  2908  057B  0008               	return
  2909  057C                     __end_of_isFinishedOneHoursTimer:	
  2910                           ;common.c: 561: else
  2911                           ;common.c: 562: return 0;
  2912                           
  2913                           
  2914                           	psect	text1188
  2915  0539                     __ptext1188:	
  2916 ;; =============== function _isFinishedOneHoursTimer ends ============
  2917                           
  2918                           
  2919 ;; *************** function _startOneHoursTimer *****************
  2920 ;; Defined at:
  2921 ;;		line 472 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;  uiSetTime       2   23[BANK0 ] unsigned int 
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;		None
  2926 ;; Return value:  Size  Location     Type
  2927 ;;		None               void
  2928 ;; Registers used:
  2929 ;;		wreg, status,2, status,0
  2930 ;; Tracked objects:
  2931 ;;		On entry : 60/0
  2932 ;;		On exit  : 60/0
  2933 ;;		Unchanged: FFF9F/0
  2934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2935 ;;      Params:         0       2       0       0       0
  2936 ;;      Locals:         0       0       0       0       0
  2937 ;;      Temps:          0       0       0       0       0
  2938 ;;      Totals:         0       2       0       0       0
  2939 ;;Total ram usage:        2 bytes
  2940 ;; Hardware stack levels used:    1
  2941 ;; Hardware stack levels required when called:    3
  2942 ;; This function calls:
  2943 ;;		Nothing
  2944 ;; This function is called by:
  2945 ;;		_main
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948  0539                     _startOneHoursTimer:	
  2949                           
  2950                           ;common.c: 473: if(( 0 == uiOneHourTimer ) && ( 0 == bOneHourTimerStartFlag ))
  2951                           
  2952                           ; Regs used in _startOneHoursTimer: [wreg+status,2+status,0]
  2953  0539  0840               	movf	_uiOneHourTimer+1,w
  2954  053A  043F               	iorwf	_uiOneHourTimer,w
  2955  053B  1D03               	skipz
  2956  053C  0008               	return
  2957  053D  08CA               	movf	_bOneHourTimerStartFlag,f
  2958  053E  1D03               	skipz
  2959  053F  0008               	return
  2960                           
  2961                           ;common.c: 474: {
  2962                           ;common.c: 475: uiOneHourTimer = uiSetTime;
  2963  0540  0838               	movf	startOneHoursTimer@uiSetTime+1,w
  2964  0541  00C0               	movwf	_uiOneHourTimer+1
  2965  0542  0837               	movf	startOneHoursTimer@uiSetTime,w
  2966  0543  00BF               	movwf	_uiOneHourTimer
  2967                           
  2968                           ;common.c: 476: bOneHourTimerStartFlag = 1;
  2969  0544  01CA               	clrf	_bOneHourTimerStartFlag
  2970  0545  0ACA               	incf	_bOneHourTimerStartFlag,f
  2971  0546  0008               	return
  2972  0547                     __end_of_startOneHoursTimer:	
  2973                           
  2974                           	psect	text1189
  2975  05B9                     __ptext1189:	
  2976 ;; =============== function _startOneHoursTimer ends ============
  2977                           
  2978                           
  2979 ;; *************** function _clearThreeHoursTimer *****************
  2980 ;; Defined at:
  2981 ;;		line 439 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2982 ;; Parameters:    Size  Location     Type
  2983 ;;		None
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;		None
  2986 ;; Return value:  Size  Location     Type
  2987 ;;		None               void
  2988 ;; Registers used:
  2989 ;;		status,2
  2990 ;; Tracked objects:
  2991 ;;		On entry : 60/0
  2992 ;;		On exit  : 60/0
  2993 ;;		Unchanged: FFF9F/0
  2994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2995 ;;      Params:         0       0       0       0       0
  2996 ;;      Locals:         0       0       0       0       0
  2997 ;;      Temps:          0       0       0       0       0
  2998 ;;      Totals:         0       0       0       0       0
  2999 ;;Total ram usage:        0 bytes
  3000 ;; Hardware stack levels used:    1
  3001 ;; Hardware stack levels required when called:    3
  3002 ;; This function calls:
  3003 ;;		Nothing
  3004 ;; This function is called by:
  3005 ;;		_main
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008  05B9                     _clearThreeHoursTimer:	
  3009                           
  3010                           ;common.c: 440: uiSmallTimer = 0;
  3011                           
  3012                           ; Regs used in _clearThreeHoursTimer: [status,2]
  3013  05B9  01C1               	clrf	_uiSmallTimer
  3014  05BA  01C2               	clrf	_uiSmallTimer+1
  3015                           
  3016                           ;common.c: 441: bSmallTimerStartFlag = 0;
  3017  05BB  01CB               	clrf	_bSmallTimerStartFlag
  3018  05BC  0008               	return
  3019  05BD                     __end_of_clearThreeHoursTimer:	
  3020                           
  3021                           	psect	text1190
  3022  057C                     __ptext1190:	
  3023 ;; =============== function _clearThreeHoursTimer ends ============
  3024                           
  3025                           
  3026 ;; *************** function _isFinishedThreeHoursTimer *****************
  3027 ;; Defined at:
  3028 ;;		line 542 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;		None
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;		None
  3033 ;; Return value:  Size  Location     Type
  3034 ;;                  1    wreg      unsigned char 
  3035 ;; Registers used:
  3036 ;;		wreg, status,2, status,0
  3037 ;; Tracked objects:
  3038 ;;		On entry : 60/0
  3039 ;;		On exit  : 60/0
  3040 ;;		Unchanged: FFF9F/0
  3041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3042 ;;      Params:         0       0       0       0       0
  3043 ;;      Locals:         0       0       0       0       0
  3044 ;;      Temps:          0       0       0       0       0
  3045 ;;      Totals:         0       0       0       0       0
  3046 ;;Total ram usage:        0 bytes
  3047 ;; Hardware stack levels used:    1
  3048 ;; Hardware stack levels required when called:    3
  3049 ;; This function calls:
  3050 ;;		Nothing
  3051 ;; This function is called by:
  3052 ;;		_main
  3053 ;; This function uses a non-reentrant model
  3054 ;;
  3055  057C                     _isFinishedThreeHoursTimer:	
  3056                           
  3057                           ;common.c: 543: if((uiSmallTimer == 0) && bSmallTimerStartFlag)
  3058                           
  3059                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  3060  057C  0842               	movf	_uiSmallTimer+1,w
  3061  057D  0441               	iorwf	_uiSmallTimer,w
  3062  057E  1D03               	skipz
  3063  057F  3400               	retlw	0
  3064  0580  084B               	movf	_bSmallTimerStartFlag,w
  3065  0581  1903               	btfsc	3,2
  3066  0582  3400               	retlw	0
  3067  0583  3001               	movlw	1
  3068                           
  3069                           ;common.c: 544: {
  3070                           ;common.c: 545: bSmallTimerStartFlag = 0;
  3071  0584  01CB               	clrf	_bSmallTimerStartFlag
  3072                           
  3073                           ;common.c: 546: return 1;
  3074  0585  0008               	return
  3075  0586                     __end_of_isFinishedThreeHoursTimer:	
  3076                           ;common.c: 548: else
  3077                           ;common.c: 549: return 0;
  3078                           
  3079                           
  3080                           	psect	text1191
  3081  0547                     __ptext1191:	
  3082 ;; =============== function _isFinishedThreeHoursTimer ends ============
  3083                           
  3084                           
  3085 ;; *************** function _startThreeHoursTimer *****************
  3086 ;; Defined at:
  3087 ;;		line 459 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;  uiSetTime       2   23[BANK0 ] unsigned int 
  3090 ;; Auto vars:     Size  Location     Type
  3091 ;;		None
  3092 ;; Return value:  Size  Location     Type
  3093 ;;		None               void
  3094 ;; Registers used:
  3095 ;;		wreg, status,2, status,0
  3096 ;; Tracked objects:
  3097 ;;		On entry : 60/0
  3098 ;;		On exit  : 60/0
  3099 ;;		Unchanged: FFF9F/0
  3100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3101 ;;      Params:         0       2       0       0       0
  3102 ;;      Locals:         0       0       0       0       0
  3103 ;;      Temps:          0       0       0       0       0
  3104 ;;      Totals:         0       2       0       0       0
  3105 ;;Total ram usage:        2 bytes
  3106 ;; Hardware stack levels used:    1
  3107 ;; Hardware stack levels required when called:    3
  3108 ;; This function calls:
  3109 ;;		Nothing
  3110 ;; This function is called by:
  3111 ;;		_main
  3112 ;; This function uses a non-reentrant model
  3113 ;;
  3114  0547                     _startThreeHoursTimer:	
  3115                           
  3116                           ;common.c: 460: if(( 0 == uiSmallTimer ) && ( 0 == bSmallTimerStartFlag ))
  3117                           
  3118                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  3119  0547  0842               	movf	_uiSmallTimer+1,w
  3120  0548  0441               	iorwf	_uiSmallTimer,w
  3121  0549  1D03               	skipz
  3122  054A  0008               	return
  3123  054B  08CB               	movf	_bSmallTimerStartFlag,f
  3124  054C  1D03               	skipz
  3125  054D  0008               	return
  3126                           
  3127                           ;common.c: 461: {
  3128                           ;common.c: 462: uiSmallTimer = uiSetTime;
  3129  054E  0838               	movf	startThreeHoursTimer@uiSetTime+1,w
  3130  054F  00C2               	movwf	_uiSmallTimer+1
  3131  0550  0837               	movf	startThreeHoursTimer@uiSetTime,w
  3132  0551  00C1               	movwf	_uiSmallTimer
  3133                           
  3134                           ;common.c: 463: bSmallTimerStartFlag = 1;
  3135  0552  01CB               	clrf	_bSmallTimerStartFlag
  3136  0553  0ACB               	incf	_bSmallTimerStartFlag,f
  3137  0554  0008               	return
  3138  0555                     __end_of_startThreeHoursTimer:	
  3139                           
  3140                           	psect	text1192
  3141  05BD                     __ptext1192:	
  3142 ;; =============== function _startThreeHoursTimer ends ============
  3143                           
  3144                           
  3145 ;; *************** function _clearTwelveHoursTimer *****************
  3146 ;; Defined at:
  3147 ;;		line 432 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;		None
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;		None
  3152 ;; Return value:  Size  Location     Type
  3153 ;;		None               void
  3154 ;; Registers used:
  3155 ;;		status,2
  3156 ;; Tracked objects:
  3157 ;;		On entry : 60/0
  3158 ;;		On exit  : 60/0
  3159 ;;		Unchanged: FFF9F/0
  3160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3161 ;;      Params:         0       0       0       0       0
  3162 ;;      Locals:         0       0       0       0       0
  3163 ;;      Temps:          0       0       0       0       0
  3164 ;;      Totals:         0       0       0       0       0
  3165 ;;Total ram usage:        0 bytes
  3166 ;; Hardware stack levels used:    1
  3167 ;; Hardware stack levels required when called:    3
  3168 ;; This function calls:
  3169 ;;		Nothing
  3170 ;; This function is called by:
  3171 ;;		_main
  3172 ;; This function uses a non-reentrant model
  3173 ;;
  3174  05BD                     _clearTwelveHoursTimer:	
  3175                           
  3176                           ;common.c: 433: uiBigTimer = 0;
  3177                           
  3178                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  3179  05BD  01BD               	clrf	_uiBigTimer
  3180  05BE  01BE               	clrf	_uiBigTimer+1
  3181                           
  3182                           ;common.c: 434: bBigTimerStartFlag = 0;
  3183  05BF  01C9               	clrf	_bBigTimerStartFlag
  3184  05C0  0008               	return
  3185  05C1                     __end_of_clearTwelveHoursTimer:	
  3186                           
  3187                           	psect	text1193
  3188  0586                     __ptext1193:	
  3189 ;; =============== function _clearTwelveHoursTimer ends ============
  3190                           
  3191                           
  3192 ;; *************** function _isFinishedTwelveHoursTimer *****************
  3193 ;; Defined at:
  3194 ;;		line 531 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3195 ;; Parameters:    Size  Location     Type
  3196 ;;		None
  3197 ;; Auto vars:     Size  Location     Type
  3198 ;;		None
  3199 ;; Return value:  Size  Location     Type
  3200 ;;                  1    wreg      unsigned char 
  3201 ;; Registers used:
  3202 ;;		wreg, status,2, status,0
  3203 ;; Tracked objects:
  3204 ;;		On entry : 60/0
  3205 ;;		On exit  : 60/0
  3206 ;;		Unchanged: FFF9F/0
  3207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3208 ;;      Params:         0       0       0       0       0
  3209 ;;      Locals:         0       0       0       0       0
  3210 ;;      Temps:          0       0       0       0       0
  3211 ;;      Totals:         0       0       0       0       0
  3212 ;;Total ram usage:        0 bytes
  3213 ;; Hardware stack levels used:    1
  3214 ;; Hardware stack levels required when called:    3
  3215 ;; This function calls:
  3216 ;;		Nothing
  3217 ;; This function is called by:
  3218 ;;		_main
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221  0586                     _isFinishedTwelveHoursTimer:	
  3222                           
  3223                           ;common.c: 532: if(( uiBigTimer == 0 ) && bBigTimerStartFlag )
  3224                           
  3225                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  3226  0586  083E               	movf	_uiBigTimer+1,w
  3227  0587  043D               	iorwf	_uiBigTimer,w
  3228  0588  1D03               	skipz
  3229  0589  3400               	retlw	0
  3230  058A  0849               	movf	_bBigTimerStartFlag,w
  3231  058B  1903               	btfsc	3,2
  3232  058C  3400               	retlw	0
  3233  058D  3001               	movlw	1
  3234                           
  3235                           ;common.c: 533: {
  3236                           ;common.c: 534: bBigTimerStartFlag = 0;
  3237  058E  01C9               	clrf	_bBigTimerStartFlag
  3238                           
  3239                           ;common.c: 535: return 1;
  3240  058F  0008               	return
  3241  0590                     __end_of_isFinishedTwelveHoursTimer:	
  3242                           ;common.c: 537: else
  3243                           ;common.c: 538: return 0;
  3244                           
  3245                           
  3246                           	psect	text1194
  3247  0555                     __ptext1194:	
  3248 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  3249                           
  3250                           
  3251 ;; *************** function _startTwelveHourTimer *****************
  3252 ;; Defined at:
  3253 ;;		line 418 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;  uiSetTime       2   23[BANK0 ] unsigned int 
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;		None
  3258 ;; Return value:  Size  Location     Type
  3259 ;;		None               void
  3260 ;; Registers used:
  3261 ;;		wreg, status,2, status,0
  3262 ;; Tracked objects:
  3263 ;;		On entry : 60/0
  3264 ;;		On exit  : 60/0
  3265 ;;		Unchanged: FFF9F/0
  3266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3267 ;;      Params:         0       2       0       0       0
  3268 ;;      Locals:         0       0       0       0       0
  3269 ;;      Temps:          0       0       0       0       0
  3270 ;;      Totals:         0       2       0       0       0
  3271 ;;Total ram usage:        2 bytes
  3272 ;; Hardware stack levels used:    1
  3273 ;; Hardware stack levels required when called:    3
  3274 ;; This function calls:
  3275 ;;		Nothing
  3276 ;; This function is called by:
  3277 ;;		_main
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280  0555                     _startTwelveHourTimer:	
  3281                           
  3282                           ;common.c: 419: if((0 == uiBigTimer) && ( 0 == bBigTimerStartFlag))
  3283                           
  3284                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  3285  0555  083E               	movf	_uiBigTimer+1,w
  3286  0556  043D               	iorwf	_uiBigTimer,w
  3287  0557  1D03               	skipz
  3288  0558  0008               	return
  3289  0559  08C9               	movf	_bBigTimerStartFlag,f
  3290  055A  1D03               	skipz
  3291  055B  0008               	return
  3292                           
  3293                           ;common.c: 420: {
  3294                           ;common.c: 421: uiBigTimer = uiSetTime;
  3295  055C  0838               	movf	startTwelveHourTimer@uiSetTime+1,w
  3296  055D  00BE               	movwf	_uiBigTimer+1
  3297  055E  0837               	movf	startTwelveHourTimer@uiSetTime,w
  3298  055F  00BD               	movwf	_uiBigTimer
  3299                           
  3300                           ;common.c: 422: bBigTimerStartFlag = 1;
  3301  0560  01C9               	clrf	_bBigTimerStartFlag
  3302  0561  0AC9               	incf	_bBigTimerStartFlag,f
  3303  0562  0008               	return
  3304  0563                     __end_of_startTwelveHourTimer:	
  3305                           
  3306                           	psect	text1195
  3307  05C1                     __ptext1195:	
  3308 ;; =============== function _startTwelveHourTimer ends ============
  3309                           
  3310                           
  3311 ;; *************** function _clearTwentyMinTimer *****************
  3312 ;; Defined at:
  3313 ;;		line 452 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3314 ;; Parameters:    Size  Location     Type
  3315 ;;		None
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;		None
  3318 ;; Return value:  Size  Location     Type
  3319 ;;		None               void
  3320 ;; Registers used:
  3321 ;;		status,2
  3322 ;; Tracked objects:
  3323 ;;		On entry : 60/0
  3324 ;;		On exit  : 60/0
  3325 ;;		Unchanged: FFF9F/0
  3326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3327 ;;      Params:         0       0       0       0       0
  3328 ;;      Locals:         0       0       0       0       0
  3329 ;;      Temps:          0       0       0       0       0
  3330 ;;      Totals:         0       0       0       0       0
  3331 ;;Total ram usage:        0 bytes
  3332 ;; Hardware stack levels used:    1
  3333 ;; Hardware stack levels required when called:    3
  3334 ;; This function calls:
  3335 ;;		Nothing
  3336 ;; This function is called by:
  3337 ;;		_main
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340  05C1                     _clearTwentyMinTimer:	
  3341                           
  3342                           ;common.c: 453: uiTwentyMinTimer = 0;
  3343                           
  3344                           ; Regs used in _clearTwentyMinTimer: [status,2]
  3345  05C1  01C3               	clrf	_uiTwentyMinTimer
  3346  05C2  01C4               	clrf	_uiTwentyMinTimer+1
  3347                           
  3348                           ;common.c: 454: bTwentyMinStartFlag = 0;
  3349  05C3  01CC               	clrf	_bTwentyMinStartFlag
  3350  05C4  0008               	return
  3351  05C5                     __end_of_clearTwentyMinTimer:	
  3352                           
  3353                           	psect	text1196
  3354  0590                     __ptext1196:	
  3355 ;; =============== function _clearTwentyMinTimer ends ============
  3356                           
  3357                           
  3358 ;; *************** function _isFinishedTwentyMinTimer *****************
  3359 ;; Defined at:
  3360 ;;		line 507 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3361 ;; Parameters:    Size  Location     Type
  3362 ;;		None
  3363 ;; Auto vars:     Size  Location     Type
  3364 ;;		None
  3365 ;; Return value:  Size  Location     Type
  3366 ;;                  1    wreg      unsigned char 
  3367 ;; Registers used:
  3368 ;;		wreg, status,2, status,0
  3369 ;; Tracked objects:
  3370 ;;		On entry : 60/0
  3371 ;;		On exit  : 60/0
  3372 ;;		Unchanged: FFF9F/0
  3373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3374 ;;      Params:         0       0       0       0       0
  3375 ;;      Locals:         0       0       0       0       0
  3376 ;;      Temps:          0       0       0       0       0
  3377 ;;      Totals:         0       0       0       0       0
  3378 ;;Total ram usage:        0 bytes
  3379 ;; Hardware stack levels used:    1
  3380 ;; Hardware stack levels required when called:    3
  3381 ;; This function calls:
  3382 ;;		Nothing
  3383 ;; This function is called by:
  3384 ;;		_main
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387  0590                     _isFinishedTwentyMinTimer:	
  3388                           
  3389                           ;common.c: 508: if(( 0 == uiTwentyMinTimer ) && bTwentyMinStartFlag )
  3390                           
  3391                           ; Regs used in _isFinishedTwentyMinTimer: [wreg+status,2+status,0]
  3392  0590  0844               	movf	_uiTwentyMinTimer+1,w
  3393  0591  0443               	iorwf	_uiTwentyMinTimer,w
  3394  0592  1D03               	skipz
  3395  0593  3400               	retlw	0
  3396  0594  084C               	movf	_bTwentyMinStartFlag,w
  3397  0595  1903               	btfsc	3,2
  3398  0596  3400               	retlw	0
  3399  0597  3001               	movlw	1
  3400                           
  3401                           ;common.c: 509: {
  3402                           ;common.c: 510: bTwentyMinStartFlag = 0;
  3403  0598  01CC               	clrf	_bTwentyMinStartFlag
  3404                           
  3405                           ;common.c: 511: return 1;
  3406  0599  0008               	return
  3407  059A                     __end_of_isFinishedTwentyMinTimer:	
  3408                           ;common.c: 513: else
  3409                           ;common.c: 514: return 0;
  3410                           
  3411                           
  3412                           	psect	text1197
  3413  05CC                     __ptext1197:	
  3414 ;; =============== function _isFinishedTwentyMinTimer ends ============
  3415                           
  3416                           
  3417 ;; *************** function _clrSampeTime *****************
  3418 ;; Defined at:
  3419 ;;		line 577 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3420 ;; Parameters:    Size  Location     Type
  3421 ;;		None
  3422 ;; Auto vars:     Size  Location     Type
  3423 ;;		None
  3424 ;; Return value:  Size  Location     Type
  3425 ;;		None               void
  3426 ;; Registers used:
  3427 ;;		status,2
  3428 ;; Tracked objects:
  3429 ;;		On entry : 60/0
  3430 ;;		On exit  : 60/0
  3431 ;;		Unchanged: FFF9F/0
  3432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3433 ;;      Params:         0       0       0       0       0
  3434 ;;      Locals:         0       0       0       0       0
  3435 ;;      Temps:          0       0       0       0       0
  3436 ;;      Totals:         0       0       0       0       0
  3437 ;;Total ram usage:        0 bytes
  3438 ;; Hardware stack levels used:    1
  3439 ;; Hardware stack levels required when called:    3
  3440 ;; This function calls:
  3441 ;;		Nothing
  3442 ;; This function is called by:
  3443 ;;		_main
  3444 ;; This function uses a non-reentrant model
  3445 ;;
  3446  05CC                     _clrSampeTime:	
  3447                           
  3448                           ;common.c: 578: timer.timer10msStopWatch = 0;
  3449                           
  3450                           ; Regs used in _clrSampeTime: [status,2]
  3451  05CC  01CE               	clrf	_timer
  3452  05CD  0008               	return
  3453  05CE                     __end_of_clrSampeTime:	
  3454                           
  3455                           	psect	text1198
  3456  05B4                     __ptext1198:	
  3457 ;; =============== function _clrSampeTime ends ============
  3458                           
  3459                           
  3460 ;; *************** function _isPermitSampleTime *****************
  3461 ;; Defined at:
  3462 ;;		line 567 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;		None
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;		None
  3467 ;; Return value:  Size  Location     Type
  3468 ;;                  1    wreg      unsigned char 
  3469 ;; Registers used:
  3470 ;;		wreg
  3471 ;; Tracked objects:
  3472 ;;		On entry : 60/0
  3473 ;;		On exit  : 60/0
  3474 ;;		Unchanged: FFF9F/0
  3475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3476 ;;      Params:         0       0       0       0       0
  3477 ;;      Locals:         0       0       0       0       0
  3478 ;;      Temps:          0       0       0       0       0
  3479 ;;      Totals:         0       0       0       0       0
  3480 ;;Total ram usage:        0 bytes
  3481 ;; Hardware stack levels used:    1
  3482 ;; Hardware stack levels required when called:    3
  3483 ;; This function calls:
  3484 ;;		Nothing
  3485 ;; This function is called by:
  3486 ;;		_main
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489  05B4                     _isPermitSampleTime:	
  3490                           
  3491                           ;common.c: 568: if(timer.timer10msStopWatch >= 10)
  3492                           
  3493                           ; Regs used in _isPermitSampleTime: [wreg]
  3494  05B4  300A               	movlw	10
  3495  05B5  024E               	subwf	_timer,w
  3496  05B6  1803               	btfsc	3,0
  3497                           
  3498                           ;common.c: 569: {
  3499                           ;common.c: 570: return 1;
  3500  05B7  3401               	retlw	1
  3501                           
  3502                           ;common.c: 572: else
  3503                           ;common.c: 573: return 0;
  3504  05B8  3400               	retlw	0
  3505  05B9                     __end_of_isPermitSampleTime:	
  3506                           
  3507                           	psect	text1200
  3508  0563                     __ptext1200:	
  3509 ;; =============== function _adc_start ends ============
  3510                           
  3511                           
  3512 ;; *************** function _startTwentyMinTimer *****************
  3513 ;; Defined at:
  3514 ;;		line 497 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3515 ;; Parameters:    Size  Location     Type
  3516 ;;  uiSetValue      2   23[BANK0 ] unsigned int 
  3517 ;; Auto vars:     Size  Location     Type
  3518 ;;		None
  3519 ;; Return value:  Size  Location     Type
  3520 ;;		None               void
  3521 ;; Registers used:
  3522 ;;		wreg, status,2, status,0
  3523 ;; Tracked objects:
  3524 ;;		On entry : 17F/0
  3525 ;;		On exit  : 17F/0
  3526 ;;		Unchanged: FFE80/0
  3527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3528 ;;      Params:         0       2       0       0       0
  3529 ;;      Locals:         0       0       0       0       0
  3530 ;;      Temps:          0       0       0       0       0
  3531 ;;      Totals:         0       2       0       0       0
  3532 ;;Total ram usage:        2 bytes
  3533 ;; Hardware stack levels used:    1
  3534 ;; Hardware stack levels required when called:    3
  3535 ;; This function calls:
  3536 ;;		Nothing
  3537 ;; This function is called by:
  3538 ;;		_main
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541  0563                     _startTwentyMinTimer:	
  3542                           
  3543                           ;common.c: 498: if(( 0 == uiTwentyMinTimer) && ( 0 == bTwentyMinStartFlag))
  3544                           
  3545                           ; Regs used in _startTwentyMinTimer: [wreg+status,2+status,0]
  3546  0563  0844               	movf	_uiTwentyMinTimer+1,w
  3547  0564  0443               	iorwf	_uiTwentyMinTimer,w
  3548  0565  1D03               	skipz
  3549  0566  0008               	return
  3550  0567  08CC               	movf	_bTwentyMinStartFlag,f
  3551  0568  1D03               	skipz
  3552  0569  0008               	return
  3553                           
  3554                           ;common.c: 499: {
  3555                           ;common.c: 500: uiTwentyMinTimer = uiSetValue;
  3556  056A  0838               	movf	startTwentyMinTimer@uiSetValue+1,w
  3557  056B  00C4               	movwf	_uiTwentyMinTimer+1
  3558  056C  0837               	movf	startTwentyMinTimer@uiSetValue,w
  3559  056D  00C3               	movwf	_uiTwentyMinTimer
  3560                           
  3561                           ;common.c: 501: bTwentyMinStartFlag = 1;
  3562  056E  01CC               	clrf	_bTwentyMinStartFlag
  3563  056F  0ACC               	incf	_bTwentyMinStartFlag,f
  3564  0570  0008               	return
  3565  0571                     __end_of_startTwentyMinTimer:	
  3566                           
  3567                           	psect	text1202
  3568  05C9                     __ptext1202:	
  3569 ;; =============== function _adc_test_init ends ============
  3570                           
  3571                           
  3572 ;; *************** function _timer1_interrupt_config *****************
  3573 ;; Defined at:
  3574 ;;		line 307 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;		None
  3577 ;; Auto vars:     Size  Location     Type
  3578 ;;		None
  3579 ;; Return value:  Size  Location     Type
  3580 ;;		None               void
  3581 ;; Registers used:
  3582 ;;		None
  3583 ;; Tracked objects:
  3584 ;;		On entry : 17F/20
  3585 ;;		On exit  : 17F/20
  3586 ;;		Unchanged: FFE80/0
  3587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3588 ;;      Params:         0       0       0       0       0
  3589 ;;      Locals:         0       0       0       0       0
  3590 ;;      Temps:          0       0       0       0       0
  3591 ;;      Totals:         0       0       0       0       0
  3592 ;;Total ram usage:        0 bytes
  3593 ;; Hardware stack levels used:    1
  3594 ;; Hardware stack levels required when called:    3
  3595 ;; This function calls:
  3596 ;;		Nothing
  3597 ;; This function is called by:
  3598 ;;		_main
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601  05C9                     _timer1_interrupt_config:	
  3602                           
  3603                           ;common.c: 308: GIE = 1;
  3604                           
  3605                           ; Regs used in _timer1_interrupt_config: []
  3606  05C9  178B               	bsf	11,7
  3607                           
  3608                           ;common.c: 309: PEIE = 1;
  3609  05CA  170B               	bsf	11,6
  3610  05CB  0008               	return
  3611  05CC                     __end_of_timer1_interrupt_config:	
  3612                           
  3613                           	psect	text1203
  3614  059A                     __ptext1203:	
  3615 ;; =============== function _timer1_interrupt_config ends ============
  3616                           
  3617                           
  3618 ;; *************** function _timer1_config *****************
  3619 ;; Defined at:
  3620 ;;		line 295 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3621 ;; Parameters:    Size  Location     Type
  3622 ;;		None
  3623 ;; Auto vars:     Size  Location     Type
  3624 ;;		None
  3625 ;; Return value:  Size  Location     Type
  3626 ;;		None               void
  3627 ;; Registers used:
  3628 ;;		wreg
  3629 ;; Tracked objects:
  3630 ;;		On entry : 17F/40
  3631 ;;		On exit  : 17F/20
  3632 ;;		Unchanged: FFE80/0
  3633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3634 ;;      Params:         0       0       0       0       0
  3635 ;;      Locals:         0       0       0       0       0
  3636 ;;      Temps:          0       0       0       0       0
  3637 ;;      Totals:         0       0       0       0       0
  3638 ;;Total ram usage:        0 bytes
  3639 ;; Hardware stack levels used:    1
  3640 ;; Hardware stack levels required when called:    3
  3641 ;; This function calls:
  3642 ;;		Nothing
  3643 ;; This function is called by:
  3644 ;;		_main
  3645 ;; This function uses a non-reentrant model
  3646 ;;
  3647  059A                     _timer1_config:	
  3648                           
  3649                           ;common.c: 297: TMR1H=0xCF;
  3650                           
  3651                           ; Regs used in _timer1_config: [wreg]
  3652  059A  30CF               	movlw	207
  3653  059B  1303               	bcf	3,6	;RP1=0, select bank0
  3654  059C  008F               	movwf	15	;volatile
  3655                           
  3656                           ;common.c: 298: TMR1L=0x2C;
  3657  059D  302C               	movlw	44
  3658  059E  008E               	movwf	14	;volatile
  3659                           
  3660                           ;common.c: 299: T1CON=0xE1;
  3661  059F  30E1               	movlw	225
  3662  05A0  0090               	movwf	16	;volatile
  3663                           
  3664                           ;common.c: 300: TMR1IE=1;
  3665  05A1  1683               	bsf	3,5	;RP0=1, select bank1
  3666  05A2  140C               	bsf	12,0
  3667  05A3  0008               	return
  3668  05A4                     __end_of_timer1_config:	
  3669                           
  3670                           	psect	text1204
  3671  05AC                     __ptext1204:	
  3672 ;; =============== function _timer1_config ends ============
  3673                           
  3674                           
  3675 ;; *************** function _clock_config *****************
  3676 ;; Defined at:
  3677 ;;		line 287 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3678 ;; Parameters:    Size  Location     Type
  3679 ;;		None
  3680 ;; Auto vars:     Size  Location     Type
  3681 ;;		None
  3682 ;; Return value:  Size  Location     Type
  3683 ;;		None               void
  3684 ;; Registers used:
  3685 ;;		wreg, status,2
  3686 ;; Tracked objects:
  3687 ;;		On entry : 17F/20
  3688 ;;		On exit  : 17F/40
  3689 ;;		Unchanged: FFE80/0
  3690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3691 ;;      Params:         0       0       0       0       0
  3692 ;;      Locals:         0       0       0       0       0
  3693 ;;      Temps:          0       0       0       0       0
  3694 ;;      Totals:         0       0       0       0       0
  3695 ;;Total ram usage:        0 bytes
  3696 ;; Hardware stack levels used:    1
  3697 ;; Hardware stack levels required when called:    3
  3698 ;; This function calls:
  3699 ;;		Nothing
  3700 ;; This function is called by:
  3701 ;;		_main
  3702 ;; This function uses a non-reentrant model
  3703 ;;
  3704  05AC                     _clock_config:	
  3705                           
  3706                           ;common.c: 289: CLKPR = 0x80;
  3707                           
  3708                           ; Regs used in _clock_config: [wreg+status,2]
  3709  05AC  3080               	movlw	128
  3710  05AD  1283               	bcf	3,5	;RP0=0, select bank2
  3711  05AE  1703               	bsf	3,6	;RP1=1, select bank2
  3712  05AF  0088               	movwf	8	;volatile
  3713                           
  3714                           ;common.c: 290: CLKPR = 0x00;
  3715  05B0  0188               	clrf	8	;volatile
  3716  05B1                     l1563:	
  3717                           ;common.c: 291: while(CLKPCE);
  3718                           
  3719  05B1  1F88               	btfss	8,7
  3720  05B2  0008               	return
  3721  05B3  2DB1               	goto	l1563
  3722  05B4                     __end_of_clock_config:	
  3723                           
  3724                           	psect	text1205
  3725  05CE                     __ptext1205:	
  3726 ;; =============== function _clock_config ends ============
  3727                           
  3728                           
  3729 ;; *************** function _reset *****************
  3730 ;; Defined at:
  3731 ;;		line 301 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;		None
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;		None
  3736 ;; Return value:  Size  Location     Type
  3737 ;;		None               void
  3738 ;; Registers used:
  3739 ;;		None
  3740 ;; Tracked objects:
  3741 ;;		On entry : 40/20
  3742 ;;		On exit  : 40/20
  3743 ;;		Unchanged: FFFFFFBF/0
  3744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3745 ;;      Params:         0       0       0       0       0
  3746 ;;      Locals:         0       0       0       0       0
  3747 ;;      Temps:          0       0       0       0       0
  3748 ;;      Totals:         0       0       0       0       0
  3749 ;;Total ram usage:        0 bytes
  3750 ;; Hardware stack levels used:    1
  3751 ;; Hardware stack levels required when called:    3
  3752 ;; This function calls:
  3753 ;;		Nothing
  3754 ;; This function is called by:
  3755 ;;		_main
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758  05CE                     _reset:	
  3759  05CE                     l722:	
  3760                           ; Regs used in _reset: []
  3761                           ;main.c: 303: while(1);
  3762                           
  3763  05CE  2DCE               	goto	l722
  3764                           
  3765                           	psect	text1206
  3766  05C5                     __ptext1206:	
  3767  05C5                     __end_of_reset:	
  3768                           
  3769 ;; =============== function _reset ends ============
  3770 ;; *************** function _selectAdChannel *****************
  3771 ;; Defined at:
  3772 ;;		line 290 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  3773 ;; Parameters:    Size  Location     Type
  3774 ;;		None
  3775 ;; Auto vars:     Size  Location     Type
  3776 ;;		None
  3777 ;; Return value:  Size  Location     Type
  3778 ;;		None               void
  3779 ;; Registers used:
  3780 ;;		None
  3781 ;; Tracked objects:
  3782 ;;		On entry : 17F/0
  3783 ;;		On exit  : 17F/20
  3784 ;;		Unchanged: FFE80/0
  3785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3786 ;;      Params:         0       0       0       0       0
  3787 ;;      Locals:         0       0       0       0       0
  3788 ;;      Temps:          0       0       0       0       0
  3789 ;;      Totals:         0       0       0       0       0
  3790 ;;Total ram usage:        0 bytes
  3791 ;; Hardware stack levels used:    1
  3792 ;; Hardware stack levels required when called:    3
  3793 ;; This function calls:
  3794 ;;		Nothing
  3795 ;; This function is called by:
  3796 ;;		_main
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799  05C5                     _selectAdChannel:	
  3800                           
  3801                           ;main.c: 292: TRISB0 = 1;
  3802                           
  3803                           ; Regs used in _selectAdChannel: []
  3804  05C5  1683               	bsf	3,5	;RP0=1, select bank1
  3805  05C6  1406               	bsf	6,0
  3806                           
  3807                           ;main.c: 293: TRISB1 = 1;
  3808  05C7  1486               	bsf	6,1
  3809  05C8  0008               	return
  3810  05C9                     __end_of_selectAdChannel:	
  3811                           
  3812                           	psect	text1207
  3813  0510                     __ptext1207:	
  3814 ;; =============== function _selectAdChannel ends ============
  3815                           
  3816                           
  3817 ;; *************** function _pwm_start *****************
  3818 ;; Defined at:
  3819 ;;		line 238 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  3820 ;; Parameters:    Size  Location     Type
  3821 ;;  ucPulseWidth    1    wreg     unsigned char 
  3822 ;;  ucPulseFrequ    1   23[BANK0 ] unsigned char 
  3823 ;; Auto vars:     Size  Location     Type
  3824 ;;  ucPulseWidth    1   24[BANK0 ] unsigned char 
  3825 ;; Return value:  Size  Location     Type
  3826 ;;		None               void
  3827 ;; Registers used:
  3828 ;;		wreg, status,2, status,0
  3829 ;; Tracked objects:
  3830 ;;		On entry : 17F/0
  3831 ;;		On exit  : 17F/0
  3832 ;;		Unchanged: FFE80/0
  3833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3834 ;;      Params:         0       1       0       0       0
  3835 ;;      Locals:         0       1       0       0       0
  3836 ;;      Temps:          0       0       0       0       0
  3837 ;;      Totals:         0       2       0       0       0
  3838 ;;Total ram usage:        2 bytes
  3839 ;; Hardware stack levels used:    1
  3840 ;; Hardware stack levels required when called:    3
  3841 ;; This function calls:
  3842 ;;		Nothing
  3843 ;; This function is called by:
  3844 ;;		_main
  3845 ;; This function uses a non-reentrant model
  3846 ;;
  3847  0510                     _pwm_start:	
  3848                           
  3849                           ; Regs used in _pwm_start: [wreg+status,2+status,0]
  3850                           ;pwm_start@ucPulseWidth stored from wreg
  3851  0510  00B8               	movwf	pwm_start@ucPulseWidth
  3852                           
  3853                           ;main.c: 240: CCP1CON&= 0xf0;
  3854  0511  30F0               	movlw	240
  3855  0512  0597               	andwf	23,f	;volatile
  3856                           
  3857                           ;main.c: 242: T2CON=0x04;
  3858  0513  3004               	movlw	4
  3859  0514  0092               	movwf	18	;volatile
  3860                           
  3861                           ;main.c: 243: PR2 = ucPulseFrequency;
  3862  0515  0837               	movf	pwm_start@ucPulseFrequency,w
  3863  0516  1683               	bsf	3,5	;RP0=1, select bank1
  3864  0517  0092               	movwf	18	;volatile
  3865                           
  3866                           ;main.c: 244: CCPR1L = ucPulseWidth;
  3867  0518  1283               	bcf	3,5	;RP0=0, select bank0
  3868  0519  0838               	movf	pwm_start@ucPulseWidth,w
  3869  051A  0095               	movwf	21	;volatile
  3870                           
  3871                           ;main.c: 245: CCP1CON=0x00;
  3872  051B  0197               	clrf	23	;volatile
  3873                           
  3874                           ;main.c: 247: TRISB2=0;
  3875  051C  1683               	bsf	3,5	;RP0=1, select bank1
  3876  051D  300C               	movlw	12
  3877  051E  1106               	bcf	6,2
  3878                           
  3879                           ;main.c: 248: PBOD2 = 0;
  3880  051F  1703               	bsf	3,6	;RP1=1, select bank3
  3881  0520  1108               	bcf	8,2
  3882                           
  3883                           ;main.c: 250: CCP1CON|= 0x0c;
  3884  0521  1283               	bcf	3,5	;RP0=0, select bank0
  3885  0522  1303               	bcf	3,6	;RP1=0, select bank0
  3886  0523  0497               	iorwf	23,f	;volatile
  3887  0524  0008               	return
  3888  0525                     __end_of_pwm_start:	
  3889                           
  3890                           	psect	text1215
  3891  0013                     __ptext1215:	
  3892 ;; =============== function _initPB3 ends ============
  3893                           
  3894                           
  3895 ;; *************** function _ISR *****************
  3896 ;; Defined at:
  3897 ;;		line 585 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3898 ;; Parameters:    Size  Location     Type
  3899 ;;		None
  3900 ;; Auto vars:     Size  Location     Type
  3901 ;;		None
  3902 ;; Return value:  Size  Location     Type
  3903 ;;		None               void
  3904 ;; Registers used:
  3905 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3906 ;; Tracked objects:
  3907 ;;		On entry : 0/0
  3908 ;;		On exit  : 60/0
  3909 ;;		Unchanged: FFE00/0
  3910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3911 ;;      Params:         0       0       0       0       0
  3912 ;;      Locals:         0       0       0       0       0
  3913 ;;      Temps:          0       4       0       0       0
  3914 ;;      Totals:         0       4       0       0       0
  3915 ;;Total ram usage:        4 bytes
  3916 ;; Hardware stack levels used:    1
  3917 ;; Hardware stack levels required when called:    2
  3918 ;; This function calls:
  3919 ;;		i1_setAD_ConvertFlag
  3920 ;;		_adc_get
  3921 ;;		_vPutSampleDataIntoTable
  3922 ;; This function is called by:
  3923 ;;		Interrupt level 1
  3924 ;; This function uses a non-reentrant model
  3925 ;;
  3926  0013                     _ISR:	
  3927                           
  3928                           ;common.c: 586: static unsigned char ucTimer1sCnt = 0;
  3929                           ;common.c: 589: if(TMR1IF == 1)
  3930  0013  1C0C               	btfss	12,0
  3931  0014  2851               	goto	i1l3727
  3932  0015  3064               	movlw	100
  3933                           
  3934                           ;common.c: 590: {
  3935                           ;common.c: 591: TMR1IF = 0 ;
  3936  0016  100C               	bcf	12,0
  3937                           
  3938                           ;common.c: 592: timer.timer10msStopWatch++;
  3939  0017  0ACE               	incf	_timer,f
  3940                           
  3941                           ;common.c: 593: ucTimer1sCnt++;
  3942  0018  0AC7               	incf	ISR@ucTimer1sCnt,f
  3943                           
  3944                           ;common.c: 597: if(ucTimer1sCnt >= 100)
  3945  0019  0247               	subwf	ISR@ucTimer1sCnt,w
  3946  001A  1C03               	skipc
  3947  001B  2851               	goto	i1l3727
  3948                           
  3949                           ;common.c: 598: {
  3950                           ;common.c: 599: ucTimer1sCnt = 0;
  3951  001C  01C7               	clrf	ISR@ucTimer1sCnt
  3952                           
  3953                           ;common.c: 600: if(uiBigTimer > 0)
  3954  001D  083E               	movf	_uiBigTimer+1,w
  3955  001E  043D               	iorwf	_uiBigTimer,w
  3956  001F  1903               	skipnz
  3957  0020  2827               	goto	i1l1666
  3958                           
  3959                           ;common.c: 601: uiBigTimer--;
  3960  0021  3001               	movlw	1
  3961  0022  02BD               	subwf	_uiBigTimer,f
  3962  0023  3000               	movlw	0
  3963  0024  1C03               	skipc
  3964  0025  03BE               	decf	_uiBigTimer+1,f
  3965  0026  02BE               	subwf	_uiBigTimer+1,f
  3966  0027                     i1l1666:	
  3967                           
  3968                           ;common.c: 603: if(uiSmallTimer)
  3969  0027  0842               	movf	_uiSmallTimer+1,w
  3970  0028  0441               	iorwf	_uiSmallTimer,w
  3971  0029  1903               	skipnz
  3972  002A  2831               	goto	i1l1667
  3973                           
  3974                           ;common.c: 604: uiSmallTimer--;
  3975  002B  3001               	movlw	1
  3976  002C  02C1               	subwf	_uiSmallTimer,f
  3977  002D  3000               	movlw	0
  3978  002E  1C03               	skipc
  3979  002F  03C2               	decf	_uiSmallTimer+1,f
  3980  0030  02C2               	subwf	_uiSmallTimer+1,f
  3981  0031                     i1l1667:	
  3982                           
  3983                           ;common.c: 606: if(uiTwentySecondsTimer)
  3984  0031  1683               	bsf	3,5	;RP0=1, select bank1
  3985  0032  0821               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  3986  0033  0420               	iorwf	_uiTwentySecondsTimer^(0+128),w
  3987  0034  1903               	skipnz
  3988  0035  283C               	goto	i1l1668
  3989                           
  3990                           ;common.c: 607: uiTwentySecondsTimer--;
  3991  0036  3001               	movlw	1
  3992  0037  02A0               	subwf	_uiTwentySecondsTimer^(0+128),f
  3993  0038  3000               	movlw	0
  3994  0039  1C03               	skipc
  3995  003A  03A1               	decf	(_uiTwentySecondsTimer+1)^(0+128),f
  3996  003B  02A1               	subwf	(_uiTwentySecondsTimer+1)^(0+128),f
  3997  003C                     i1l1668:	
  3998                           
  3999                           ;common.c: 609: if(uiTwentyMinTimer)
  4000  003C  1283               	bcf	3,5	;RP0=0, select bank0
  4001  003D  0844               	movf	_uiTwentyMinTimer+1,w
  4002  003E  0443               	iorwf	_uiTwentyMinTimer,w
  4003  003F  1903               	skipnz
  4004  0040  2847               	goto	i1l1669
  4005                           
  4006                           ;common.c: 610: uiTwentyMinTimer--;
  4007  0041  3001               	movlw	1
  4008  0042  02C3               	subwf	_uiTwentyMinTimer,f
  4009  0043  3000               	movlw	0
  4010  0044  1C03               	skipc
  4011  0045  03C4               	decf	_uiTwentyMinTimer+1,f
  4012  0046  02C4               	subwf	_uiTwentyMinTimer+1,f
  4013  0047                     i1l1669:	
  4014                           
  4015                           ;common.c: 612: if( uiOneHourTimer )
  4016  0047  0840               	movf	_uiOneHourTimer+1,w
  4017  0048  043F               	iorwf	_uiOneHourTimer,w
  4018  0049  1903               	skipnz
  4019  004A  2851               	goto	i1l3727
  4020                           
  4021                           ;common.c: 613: uiOneHourTimer--;
  4022  004B  3001               	movlw	1
  4023  004C  02BF               	subwf	_uiOneHourTimer,f
  4024  004D  3000               	movlw	0
  4025  004E  1C03               	skipc
  4026  004F  03C0               	decf	_uiOneHourTimer+1,f
  4027  0050  02C0               	subwf	_uiOneHourTimer+1,f
  4028  0051                     i1l3727:	
  4029                           
  4030                           ;common.c: 614: }
  4031                           ;common.c: 615: }
  4032                           ;common.c: 617: if(ADIF)
  4033  0051  1D0D               	btfss	13,2
  4034  0052  286C               	goto	i1l1674
  4035  0053  3001               	movlw	1
  4036                           
  4037                           ;common.c: 618: {
  4038                           ;common.c: 620: ADIF=0;
  4039  0054  110D               	bcf	13,2
  4040                           
  4041                           ;common.c: 621: setAD_ConvertFlag(1);
  4042  0055  2084  118A         	fcall	i1_setAD_ConvertFlag
  4043                           
  4044                           ;common.c: 623: if(sampleChannelSelect == 12)
  4045  0057  0857               	movf	_sampleChannelSelect,w
  4046  0058  3A0C               	xorlw	12
  4047  0059  1D03               	skipz
  4048  005A  2863               	goto	i1l3737
  4049                           
  4050                           ;common.c: 624: {
  4051                           ;common.c: 627: vPutSampleDataIntoTable(adc_get(),12);
  4052  005B  2079  118A         	fcall	_adc_get
  4053  005D  0871               	movf	?_adc_get+1,w
  4054  005E  00F7               	movwf	?_vPutSampleDataIntoTable+1
  4055  005F  0870               	movf	?_adc_get,w
  4056  0060  00F6               	movwf	?_vPutSampleDataIntoTable
  4057  0061  300C               	movlw	12
  4058  0062  286A               	goto	L12
  4059  0063                     i1l3737:	
  4060                           ;common.c: 631: }
  4061                           
  4062                           
  4063                           ;common.c: 632: else
  4064                           ;common.c: 633: {
  4065                           ;common.c: 637: vPutSampleDataIntoTable(adc_get(),13);
  4066  0063  2079  118A         	fcall	_adc_get
  4067  0065  0871               	movf	?_adc_get+1,w
  4068  0066  00F7               	movwf	?_vPutSampleDataIntoTable+1
  4069  0067  0870               	movf	?_adc_get,w
  4070  0068  00F6               	movwf	?_vPutSampleDataIntoTable
  4071  0069  300D               	movlw	13
  4072  006A                     L12:	
  4073  006A  00F8               	movwf	?_vPutSampleDataIntoTable+2
  4074  006B  2087               	fcall	_vPutSampleDataIntoTable
  4075  006C                     i1l1674:	
  4076  006C  1283               	bcf	3,5	;RP0=0, select bank0
  4077  006D  1303               	bcf	3,6	;RP1=0, select bank0
  4078  006E  0836               	movf	??_ISR+3,w
  4079  006F  00FF               	movwf	127
  4080  0070  0835               	movf	??_ISR+2,w
  4081  0071  008A               	movwf	10
  4082  0072  0834               	movf	??_ISR+1,w
  4083  0073  0084               	movwf	4
  4084  0074  0E33               	swapf	??_ISR^0,w
  4085  0075  0083               	movwf	3
  4086  0076  0EFE               	swapf	126,f
  4087  0077  0E7E               	swapf	126,w
  4088  0078  0009               	retfie
  4089  0079                     __end_of_ISR:	
  4090  0079                     __ptext1218:	
  4091 ;; =============== function i1_setAD_ConvertFlag ends ============
  4092                           
  4093                           
  4094 ;; *************** function _adc_get *****************
  4095 ;; Defined at:
  4096 ;;		line 106 in file "D:\develop\AK7030-good\AK7030-OTP\periph.c"
  4097 ;; Parameters:    Size  Location     Type
  4098 ;;		None
  4099 ;; Auto vars:     Size  Location     Type
  4100 ;;  val             2    2[COMMON] unsigned int 
  4101 ;; Return value:  Size  Location     Type
  4102 ;;                  2    0[COMMON] unsigned int 
  4103 ;; Registers used:
  4104 ;;		wreg
  4105 ;; Tracked objects:
  4106 ;;		On entry : 60/0
  4107 ;;		On exit  : 60/20
  4108 ;;		Unchanged: FFF9F/0
  4109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4110 ;;      Params:         2       0       0       0       0
  4111 ;;      Locals:         2       0       0       0       0
  4112 ;;      Temps:          0       0       0       0       0
  4113 ;;      Totals:         4       0       0       0       0
  4114 ;;Total ram usage:        4 bytes
  4115 ;; Hardware stack levels used:    1
  4116 ;; This function calls:
  4117 ;;		Nothing
  4118 ;; This function is called by:
  4119 ;;		_ISR
  4120 ;; This function uses a non-reentrant model
  4121 ;;
  4122  0079                     _adc_get:	
  4123                           
  4124                           ;periph.c: 107: unsigned int val;
  4125                           ;periph.c: 108: val = (ADRESH<<8) | ADRESL;
  4126                           
  4127                           ; Regs used in _adc_get: [wreg]
  4128  0079  081E               	movf	30,w	;volatile
  4129  007A  00F3               	movwf	adc_get@val+1
  4130  007B  01F2               	clrf	adc_get@val
  4131  007C  1683               	bsf	3,5	;RP0=1, select bank1
  4132  007D  081E               	movf	30,w	;volatile
  4133  007E  04F2               	iorwf	adc_get@val,f
  4134                           
  4135                           ;periph.c: 109: return val;
  4136  007F  0873               	movf	adc_get@val+1,w
  4137  0080  00F1               	movwf	?_adc_get+1
  4138  0081  0872               	movf	adc_get@val,w
  4139  0082  00F0               	movwf	?_adc_get
  4140  0083  0008               	return
  4141  0084                     __end_of_adc_get:	
  4142  0084                     __ptext1217:	
  4143 ;; =============== function _vPutSampleDataIntoTable ends ============
  4144                           
  4145                           
  4146 ;; *************** function i1_setAD_ConvertFlag *****************
  4147 ;; Defined at:
  4148 ;;		line 321 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  4149 ;; Parameters:    Size  Location     Type
  4150 ;;  setAD_Conver    1    wreg     unsigned char 
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  4153 ;; Return value:  Size  Location     Type
  4154 ;;		None               void
  4155 ;; Registers used:
  4156 ;;		wreg
  4157 ;; Tracked objects:
  4158 ;;		On entry : 60/0
  4159 ;;		On exit  : 60/0
  4160 ;;		Unchanged: FFF9F/0
  4161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4162 ;;      Params:         0       0       0       0       0
  4163 ;;      Locals:         1       0       0       0       0
  4164 ;;      Temps:          0       0       0       0       0
  4165 ;;      Totals:         1       0       0       0       0
  4166 ;;Total ram usage:        1 bytes
  4167 ;; Hardware stack levels used:    1
  4168 ;; This function calls:
  4169 ;;		Nothing
  4170 ;; This function is called by:
  4171 ;;		_ISR
  4172 ;; This function uses a non-reentrant model
  4173 ;;
  4174  0084                     i1_setAD_ConvertFlag:	
  4175                           
  4176                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  4177                           ;i1setAD_ConvertFlag@flag stored from wreg
  4178  0084  00F0               	movwf	i1setAD_ConvertFlag@flag
  4179                           
  4180                           ;common.c: 322: adc_convert_flag = flag;
  4181  0085  00C8               	movwf	_adc_convert_flag
  4182  0086  0008               	return
  4183  0087                     __end_ofi1_setAD_ConvertFlag:	
  4184  0087                     __ptext1216:	
  4185 ;; =============== function _ISR ends ============
  4186                           
  4187                           
  4188 ;; *************** function _vPutSampleDataIntoTable *****************
  4189 ;; Defined at:
  4190 ;;		line 153 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  4191 ;; Parameters:    Size  Location     Type
  4192 ;;  uiSampleData    2    6[COMMON] unsigned int 
  4193 ;;  channel         1    8[COMMON] unsigned char 
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;  uiDeviationV    2   15[BANK0 ] unsigned int 
  4196 ;;  i               2   17[BANK0 ] int 
  4197 ;; Return value:  Size  Location     Type
  4198 ;;		None               void
  4199 ;; Registers used:
  4200 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4201 ;; Tracked objects:
  4202 ;;		On entry : 60/20
  4203 ;;		On exit  : 0/0
  4204 ;;		Unchanged: FFE00/0
  4205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4206 ;;      Params:         3       0       0       0       0
  4207 ;;      Locals:         0       4       0       0       0
  4208 ;;      Temps:          4       0       0       0       0
  4209 ;;      Totals:         7       4       0       0       0
  4210 ;;Total ram usage:       11 bytes
  4211 ;; Hardware stack levels used:    1
  4212 ;; Hardware stack levels required when called:    1
  4213 ;; This function calls:
  4214 ;;		_Filter
  4215 ;;		_setPWM_Width
  4216 ;; This function is called by:
  4217 ;;		_ISR
  4218 ;; This function uses a non-reentrant model
  4219 ;;
  4220  0087                     _vPutSampleDataIntoTable:	
  4221                           
  4222                           ;common.c: 155: static unsigned char ucChannelFirstLength = 0;
  4223                           ;common.c: 157: static unsigned char ucChannelFourthLength = 0;
  4224                           ;common.c: 159: static unsigned char ucChannelFourteenthLength = 0;
  4225                           ;common.c: 160: static unsigned int uiCalWidthArrayNew = 0;
  4226                           ;common.c: 161: static unsigned int uiCalWidthArrayOld = 0;
  4227                           ;common.c: 162: if(channel == 12)
  4228                           
  4229                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  4230  0087  0878               	movf	vPutSampleDataIntoTable@channel,w
  4231  0088  3A0C               	xorlw	12
  4232  0089  1D03               	skipz
  4233  008A  28FC               	goto	i1l3649
  4234                           
  4235                           ;common.c: 163: {
  4236                           ;common.c: 164: if(ucChannelFirstLength < 3)
  4237  008B  3003               	movlw	3
  4238  008C  027D               	subwf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4239  008D  1803               	skipnc
  4240  008E  28F6               	goto	i1l3645
  4241                           
  4242                           ;common.c: 165: {
  4243                           ;common.c: 167: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  4244  008F  1003               	clrc
  4245  0090  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4246  0091  3EAE               	addlw	_uiSampleChannelFirst& (0+255)
  4247  0092  21D8  118A         	fcall	PL2	;call to abstracted procedure
  4248                           
  4249                           ;common.c: 169: ucChannelFirstLength++;
  4250  0094  0AFD               	incf	vPutSampleDataIntoTable@ucChannelFirstLength,f
  4251                           
  4252                           ;common.c: 171: if( 3 == ucChannelFirstLength )
  4253  0095  087D               	movf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4254  0096  3A03               	xorlw	3
  4255  0097  1D03               	skipz
  4256  0098  0008               	return
  4257  0099  30AE               	movlw	_uiSampleChannelFirst& (0+255)
  4258                           
  4259                           ;common.c: 172: {
  4260                           ;common.c: 173: ucChannelFirstLength = 0;
  4261  009A  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  4262                           
  4263                           ;common.c: 177: static unsigned char bInitArrayFlag = 0;
  4264                           ;common.c: 179: static unsigned int uiCalWidthArray[1],uiCalWidthCnt = 0;
  4265                           ;common.c: 181: static unsigned char uiInitWidth = 75;
  4266                           ;common.c: 183: uiCalWidthArrayNew = Filter(uiSampleChannelFirst);
  4267  009B  2149  118A         	fcall	_Filter
  4268  009D  0871               	movf	?_Filter+1,w
  4269  009E  00C6               	movwf	vPutSampleDataIntoTable@uiCalWidthArrayNew+1
  4270  009F  0870               	movf	?_Filter,w
  4271  00A0  00C5               	movwf	vPutSampleDataIntoTable@uiCalWidthArrayNew
  4272                           
  4273                           ;common.c: 188: uiDeviationValue = ((uiCalWidthArrayNew+uiCalWidthArrayOld)>>1)+(uiCalWi
      +                          dthArrayNew-uiCalWidthArrayOld);
  4274  00A1  1683               	bsf	3,5	;RP0=1, select bank1
  4275  00A2  082A               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld^(0+128),w
  4276  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  4277  00A4  0745               	addwf	vPutSampleDataIntoTable@uiCalWidthArrayNew,w
  4278  00A5  00F9               	movwf	??_vPutSampleDataIntoTable
  4279  00A6  1683               	bsf	3,5	;RP0=1, select bank1
  4280  00A7  082B               	movf	(vPutSampleDataIntoTable@uiCalWidthArrayOld+1)^(0+128),w
  4281  00A8  1803               	skipnc
  4282  00A9  0A2B               	incf	(vPutSampleDataIntoTable@uiCalWidthArrayOld+1)^(0+128),w
  4283  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  4284  00AB  0746               	addwf	vPutSampleDataIntoTable@uiCalWidthArrayNew+1,w
  4285  00AC  00FA               	movwf	??_vPutSampleDataIntoTable+1
  4286  00AD  1003               	clrc
  4287  00AE  0CFA               	rrf	??_vPutSampleDataIntoTable+1,f
  4288  00AF  0CF9               	rrf	??_vPutSampleDataIntoTable,f
  4289  00B0  1683               	bsf	3,5	;RP0=1, select bank1
  4290  00B1  082A               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld^(0+128),w
  4291  00B2  0279               	subwf	??_vPutSampleDataIntoTable,w
  4292  00B3  00FB               	movwf	??_vPutSampleDataIntoTable+2
  4293  00B4  082B               	movf	(vPutSampleDataIntoTable@uiCalWidthArrayOld+1)^(0+128),w
  4294  00B5  1C03               	skipc
  4295  00B6  0A2B               	incf	(vPutSampleDataIntoTable@uiCalWidthArrayOld+1)^(0+128),w
  4296  00B7  027A               	subwf	??_vPutSampleDataIntoTable+1,w
  4297  00B8  00FC               	movwf	??_vPutSampleDataIntoTable+3
  4298  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  4299  00BA  0845               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew,w
  4300  00BB  077B               	addwf	??_vPutSampleDataIntoTable+2,w
  4301  00BC  00AF               	movwf	vPutSampleDataIntoTable@uiDeviationValue
  4302  00BD  0846               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew+1,w
  4303  00BE  1803               	skipnc
  4304  00BF  0A46               	incf	vPutSampleDataIntoTable@uiCalWidthArrayNew+1,w
  4305  00C0  077C               	addwf	??_vPutSampleDataIntoTable+3,w
  4306  00C1  00B0               	movwf	vPutSampleDataIntoTable@uiDeviationValue+1
  4307                           
  4308                           ;common.c: 189: if(uiCalWidthCnt>400)
  4309  00C2  3001               	movlw	1
  4310  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  4311  00C4  022D               	subwf	(vPutSampleDataIntoTable@uiCalWidthCnt+1)^(0+128),w
  4312  00C5  3091               	movlw	145
  4313  00C6  1903               	skipnz
  4314  00C7  022C               	subwf	vPutSampleDataIntoTable@uiCalWidthCnt^(0+128),w
  4315  00C8  1C03               	skipc
  4316  00C9  28CF               	goto	i1l1540
  4317                           
  4318                           ;common.c: 190: uiDeviationValue =400;
  4319  00CA  3090               	movlw	144
  4320  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  4321  00CC  00AF               	movwf	vPutSampleDataIntoTable@uiDeviationValue
  4322  00CD  3001               	movlw	1
  4323  00CE  00B0               	movwf	vPutSampleDataIntoTable@uiDeviationValue+1
  4324  00CF                     i1l1540:	
  4325                           
  4326                           ;common.c: 193: uiCalWidthArrayOld=uiCalWidthArrayNew;
  4327  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  4328  00D0  0846               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew+1,w
  4329  00D1  1683               	bsf	3,5	;RP0=1, select bank1
  4330  00D2  00AB               	movwf	(vPutSampleDataIntoTable@uiCalWidthArrayOld+1)^(0+128)
  4331  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  4332  00D4  0845               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew,w
  4333  00D5  1683               	bsf	3,5	;RP0=1, select bank1
  4334  00D6  00AA               	movwf	vPutSampleDataIntoTable@uiCalWidthArrayOld^(0+128)
  4335                           
  4336                           ;common.c: 198: if(uiDeviationValue > (312))
  4337  00D7  3001               	movlw	1
  4338  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  4339  00D9  0230               	subwf	vPutSampleDataIntoTable@uiDeviationValue+1,w
  4340  00DA  3039               	movlw	57
  4341  00DB  1903               	skipnz
  4342  00DC  022F               	subwf	vPutSampleDataIntoTable@uiDeviationValue,w
  4343  00DD  1C03               	skipc
  4344  00DE  28E1               	goto	i1l3633
  4345                           
  4346                           ;common.c: 199: {
  4347                           ;common.c: 202: uiInitWidth++;
  4348  00DF  0AD8               	incf	vPutSampleDataIntoTable@uiInitWidth,f
  4349                           
  4350                           ;common.c: 204: }
  4351  00E0  28E8               	goto	i1l3637
  4352  00E1                     i1l3633:	
  4353                           
  4354                           ;common.c: 205: else if(uiDeviationValue < (312))
  4355  00E1  3001               	movlw	1
  4356  00E2  0230               	subwf	vPutSampleDataIntoTable@uiDeviationValue+1,w
  4357  00E3  3038               	movlw	56
  4358  00E4  1903               	skipnz
  4359  00E5  022F               	subwf	vPutSampleDataIntoTable@uiDeviationValue,w
  4360  00E6  1C03               	btfss	3,0
  4361                           
  4362                           ;common.c: 206: {
  4363                           ;common.c: 209: uiInitWidth--;
  4364  00E7  03D8               	decf	vPutSampleDataIntoTable@uiInitWidth,f
  4365  00E8                     i1l3637:	
  4366                           ;common.c: 211: }
  4367                           
  4368                           
  4369                           ;common.c: 215: if(uiInitWidth > 249)
  4370  00E8  30FA               	movlw	250
  4371  00E9  0258               	subwf	vPutSampleDataIntoTable@uiInitWidth,w
  4372  00EA  1C03               	skipc
  4373  00EB  28EE               	goto	i1l1545
  4374                           
  4375                           ;common.c: 216: uiInitWidth = 249;
  4376  00EC  30F9               	movlw	249
  4377  00ED  00D8               	movwf	vPutSampleDataIntoTable@uiInitWidth
  4378  00EE                     i1l1545:	
  4379                           
  4380                           ;common.c: 218: if(uiInitWidth < 75)
  4381  00EE  304B               	movlw	75
  4382  00EF  0258               	subwf	vPutSampleDataIntoTable@uiInitWidth,w
  4383  00F0  1803               	skipnc
  4384  00F1  28F4               	goto	i1l3643
  4385                           
  4386                           ;common.c: 219: uiInitWidth = 75;
  4387  00F2  304B               	movlw	75
  4388  00F3  00D8               	movwf	vPutSampleDataIntoTable@uiInitWidth
  4389  00F4                     i1l3643:	
  4390                           
  4391                           ;common.c: 223: setPWM_Width(uiInitWidth);
  4392  00F4  0858               	movf	vPutSampleDataIntoTable@uiInitWidth,w
  4393  00F5  29CF               	ljmp	_setPWM_Width
  4394  00F6                     i1l3645:	
  4395                           
  4396                           ;common.c: 228: else
  4397                           ;common.c: 229: {
  4398                           ;common.c: 230: ucChannelFirstLength = 0;
  4399  00F6  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  4400                           
  4401                           ;common.c: 232: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  4402  00F7  1003               	clrc
  4403  00F8  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4404  00F9  3EAE               	addlw	_uiSampleChannelFirst& (0+255)
  4405  00FA  21D8               	fcall	PL2	;call to abstracted procedure
  4406  00FB  0008               	return
  4407  00FC                     i1l3649:	
  4408                           
  4409                           ;common.c: 235: else if(channel == 13)
  4410  00FC  0878               	movf	vPutSampleDataIntoTable@channel,w
  4411  00FD  3A0D               	xorlw	13
  4412  00FE  1D03               	skipz
  4413  00FF  2911               	goto	i1l3661
  4414                           
  4415                           ;common.c: 236: {
  4416                           ;common.c: 237: if(ucChannelFourthLength < 8)
  4417  0100  3008               	movlw	8
  4418  0101  1283               	bcf	3,5	;RP0=0, select bank0
  4419  0102  0256               	subwf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4420  0103  1803               	skipnc
  4421  0104  290B               	goto	i1l3657
  4422                           
  4423                           ;common.c: 238: {
  4424                           ;common.c: 239: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  4425  0105  1003               	clrc
  4426  0106  0D56               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4427  0107  3EBA               	addlw	_uiSampleChannelFourth& (0+255)
  4428  0108  21D8               	fcall	PL2	;call to abstracted procedure
  4429                           
  4430                           ;common.c: 241: ucChannelFourthLength++;
  4431  0109  0AD6               	incf	vPutSampleDataIntoTable@ucChannelFourthLength,f
  4432                           
  4433                           ;common.c: 242: }
  4434  010A  0008               	return
  4435  010B                     i1l3657:	
  4436                           
  4437                           ;common.c: 243: else
  4438                           ;common.c: 244: {
  4439                           ;common.c: 245: ucChannelFourthLength = 0;
  4440  010B  01D6               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  4441                           
  4442                           ;common.c: 247: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  4443  010C  1003               	clrc
  4444  010D  0D56               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4445  010E  3EBA               	addlw	_uiSampleChannelFourth& (0+255)
  4446  010F  21D8               	fcall	PL2	;call to abstracted procedure
  4447  0110  0008               	return
  4448  0111                     i1l3661:	
  4449                           
  4450                           ;common.c: 250: else if(channel == 14)
  4451  0111  0878               	movf	vPutSampleDataIntoTable@channel,w
  4452  0112  3A0E               	xorlw	14
  4453  0113  1D03               	skipz
  4454  0114  2926               	goto	i1l3673
  4455                           
  4456                           ;common.c: 251: {
  4457                           ;common.c: 252: if(ucChannelFourteenthLength < 3)
  4458  0115  3003               	movlw	3
  4459  0116  1283               	bcf	3,5	;RP0=0, select bank0
  4460  0117  0255               	subwf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4461  0118  1803               	skipnc
  4462  0119  2920               	goto	i1l3669
  4463                           
  4464                           ;common.c: 253: {
  4465                           ;common.c: 254: uiSampleChannelFourteenth[ucChannelFourteenthLength] = uiSampleData;
  4466  011A  1003               	clrc
  4467  011B  0D55               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4468  011C  3EB4               	addlw	_uiSampleChannelFourteenth& (0+255)
  4469  011D  21D8               	fcall	PL2	;call to abstracted procedure
  4470                           
  4471                           ;common.c: 256: ucChannelFourteenthLength++;
  4472  011E  0AD5               	incf	vPutSampleDataIntoTable@ucChannelFourteenthLength,f
  4473                           
  4474                           ;common.c: 257: }
  4475  011F  0008               	return
  4476  0120                     i1l3669:	
  4477                           
  4478                           ;common.c: 258: else
  4479                           ;common.c: 259: {
  4480                           ;common.c: 260: ucChannelFourteenthLength = 0;
  4481  0120  01D5               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4482                           
  4483                           ;common.c: 262: uiSampleChannelFourth[ucChannelFourteenthLength] = uiSampleData;
  4484  0121  1003               	clrc
  4485  0122  0D55               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4486  0123  3EBA               	addlw	_uiSampleChannelFourth& (0+255)
  4487  0124  21D8               	fcall	PL2	;call to abstracted procedure
  4488  0125  0008               	return
  4489  0126                     i1l3673:	
  4490                           
  4491                           ;common.c: 265: else
  4492                           ;common.c: 266: {
  4493                           ;common.c: 267: ucChannelFirstLength = 0;
  4494  0126  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  4495                           
  4496                           ;common.c: 269: ucChannelFourthLength = 0;
  4497  0127  1283               	bcf	3,5	;RP0=0, select bank0
  4498  0128  01D6               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  4499                           
  4500                           ;common.c: 271: ucChannelFourteenthLength = 0;
  4501  0129  01D5               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4502                           
  4503                           ;common.c: 273: for(int i = 0;i < 3; i++)
  4504  012A  01B1               	clrf	vPutSampleDataIntoTable@i
  4505  012B  01B2               	clrf	vPutSampleDataIntoTable@i+1
  4506  012C                     i1l3679:	
  4507                           
  4508                           ;common.c: 274: {
  4509                           ;common.c: 275: uiSampleChannelFirst[i] = 0;
  4510  012C  1283               	bcf	3,5	;RP0=0, select bank0
  4511  012D  1303               	bcf	3,6	;RP1=0, select bank0
  4512  012E  1003               	clrc
  4513  012F  0D31               	rlf	vPutSampleDataIntoTable@i,w
  4514  0130  3EAE               	addlw	_uiSampleChannelFirst& (0+255)
  4515  0131  0084               	movwf	4
  4516  0132  1383               	bcf	3,7	;select IRP bank1
  4517  0133  0180               	clrf	0
  4518                           
  4519                           ;common.c: 277: uiSampleChannelFourth[i] = 0;
  4520  0134  21E8  118A         	fcall	PL6	;call to abstracted procedure
  4521                           
  4522                           ;common.c: 279: uiSampleChannelFourth[i] = 0;
  4523  0136  21E8  118A         	fcall	PL6	;call to abstracted procedure
  4524  0138  0A84               	incf	4,f
  4525  0139  0180               	clrf	0
  4526  013A  0AB1               	incf	vPutSampleDataIntoTable@i,f
  4527  013B  1903               	skipnz
  4528  013C  0AB2               	incf	vPutSampleDataIntoTable@i+1,f
  4529  013D  0832               	movf	vPutSampleDataIntoTable@i+1,w
  4530  013E  3A80               	xorlw	128
  4531  013F  00FF               	movwf	127
  4532  0140  3080               	movlw	128
  4533  0141  027F               	subwf	127,w
  4534  0142  1D03               	skipz
  4535  0143  2946               	goto	u132_25
  4536  0144  3003               	movlw	3
  4537  0145  0231               	subwf	vPutSampleDataIntoTable@i,w
  4538  0146                     u132_25:	
  4539  0146  1803               	btfsc	3,0
  4540  0147  0008               	return
  4541  0148  292C               	goto	i1l3679
  4542  0149                     __end_of_vPutSampleDataIntoTable:	
  4543  0149                     __ptext1219:	
  4544 ;; =============== function _adc_get ends ============
  4545                           
  4546                           
  4547 ;; *************** function _Filter *****************
  4548 ;; Defined at:
  4549 ;;		line 105 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;  tmpValue        1    wreg     PTR int 
  4552 ;;		 -> uiSampleChannelFourteenth(6), uiSampleChannelFirst(6), 
  4553 ;; Auto vars:     Size  Location     Type
  4554 ;;  tmpValue        1    4[BANK0 ] PTR int 
  4555 ;;		 -> uiSampleChannelFourteenth(6), uiSampleChannelFirst(6), 
  4556 ;;  cir             2   11[BANK0 ] int 
  4557 ;;  filter_buf      6    5[BANK0 ] unsigned int [3]
  4558 ;;  filter_sum      2    2[BANK0 ] unsigned int 
  4559 ;;  filter_temp     2    0[BANK0 ] unsigned int 
  4560 ;;  i               1   14[BANK0 ] unsigned char 
  4561 ;;  j               1   13[BANK0 ] unsigned char 
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  2    0[COMMON] unsigned int 
  4564 ;; Registers used:
  4565 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4566 ;; Tracked objects:
  4567 ;;		On entry : 160/20
  4568 ;;		On exit  : 160/0
  4569 ;;		Unchanged: FFE00/0
  4570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4571 ;;      Params:         2       0       0       0       0
  4572 ;;      Locals:         0      15       0       0       0
  4573 ;;      Temps:          4       0       0       0       0
  4574 ;;      Totals:         6      15       0       0       0
  4575 ;;Total ram usage:       21 bytes
  4576 ;; Hardware stack levels used:    1
  4577 ;; This function calls:
  4578 ;;		Nothing
  4579 ;; This function is called by:
  4580 ;;		_vPutSampleDataIntoTable
  4581 ;; This function uses a non-reentrant model
  4582 ;;
  4583  0149                     _Filter:	
  4584                           
  4585                           ; Regs used in _Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  4586                           ;Filter@tmpValue stored from wreg
  4587  0149  1283               	bcf	3,5	;RP0=0, select bank0
  4588  014A  00A4               	movwf	Filter@tmpValue
  4589  014B  01AD               	clrf	Filter@j
  4590                           
  4591                           ;common.c: 109: unsigned int filter_temp = 0, filter_sum = 0;
  4592  014C  01A0               	clrf	Filter@filter_temp
  4593  014D  01A1               	clrf	Filter@filter_temp+1
  4594  014E  01A2               	clrf	Filter@filter_sum
  4595  014F  01A3               	clrf	Filter@filter_sum+1
  4596                           
  4597                           ;common.c: 111: unsigned int filter_buf[3];
  4598                           ;common.c: 113: for(int cir = 0;cir < 3; cir++)
  4599  0150  01AB               	clrf	Filter@cir
  4600  0151  01AC               	clrf	Filter@cir+1
  4601  0152                     i1l3567:	
  4602                           
  4603                           ;common.c: 114: filter_buf[cir] = *tmpValue++;
  4604  0152  1283               	bcf	3,5	;RP0=0, select bank0
  4605  0153  1303               	bcf	3,6	;RP1=0, select bank0
  4606  0154  0824               	movf	Filter@tmpValue,w
  4607  0155  21E0  118A         	fcall	PL4	;call to abstracted procedure
  4608  0157  1003               	clrc
  4609  0158  0D2B               	rlf	Filter@cir,w
  4610  0159  21F0  118A         	fcall	PL7	;call to abstracted procedure
  4611  015B  0AA4               	incf	Filter@tmpValue,f
  4612  015C  0AA4               	incf	Filter@tmpValue,f
  4613  015D  0AAB               	incf	Filter@cir,f
  4614  015E  1903               	skipnz
  4615  015F  0AAC               	incf	Filter@cir+1,f
  4616  0160  082C               	movf	Filter@cir+1,w
  4617  0161  3A80               	xorlw	128
  4618  0162  00FF               	movwf	127
  4619  0163  3080               	movlw	128
  4620  0164  027F               	subwf	127,w
  4621  0165  1D03               	skipz
  4622  0166  2969               	goto	u115_25
  4623  0167  3003               	movlw	3
  4624  0168  022B               	subwf	Filter@cir,w
  4625  0169                     u115_25:	
  4626  0169  1C03               	skipc
  4627  016A  2952               	goto	i1l3567
  4628                           
  4629                           ;common.c: 118: for(j = 0; j < 3 - 1; j++)
  4630  016B  1283               	bcf	3,5	;RP0=0, select bank0
  4631  016C  1303               	bcf	3,6	;RP1=0, select bank0
  4632  016D  01AD               	clrf	Filter@j
  4633                           
  4634                           ;common.c: 119: {
  4635                           ;common.c: 120: for(i = 0; i < 3 - 1 - j; i++)
  4636  016E  01AE               	clrf	Filter@i
  4637  016F                     i1l3589:	
  4638  016F  01F3               	clrf	??_Filter+1
  4639  0170  082D               	movf	Filter@j,w
  4640  0171  3C02               	sublw	2
  4641  0172  00F2               	movwf	??_Filter
  4642  0173  1C03               	skipc
  4643  0174  03F3               	decf	??_Filter+1,f
  4644  0175  0873               	movf	??_Filter+1,w
  4645  0176  3A80               	xorlw	128
  4646  0177  3C80               	sublw	128
  4647  0178  1D03               	skipz
  4648  0179  297C               	goto	u117_25
  4649  017A  0872               	movf	??_Filter,w
  4650  017B  022E               	subwf	Filter@i,w
  4651  017C                     u117_25:	
  4652  017C  1803               	btfsc	3,0
  4653  017D  29B1               	goto	i1l3591
  4654                           
  4655                           ;common.c: 121: {
  4656                           ;common.c: 122: if(filter_buf[i] > filter_buf[i + 1])
  4657  017E  1283               	bcf	3,5	;RP0=0, select bank0
  4658  017F  1303               	bcf	3,6	;RP1=0, select bank0
  4659  0180  1003               	clrc
  4660  0181  0D2E               	rlf	Filter@i,w
  4661  0182  3E25               	addlw	Filter@filter_buf& (0+255)
  4662  0183  21E0  118A         	fcall	PL4	;call to abstracted procedure
  4663  0185  21F8  118A         	fcall	PL9	;call to abstracted procedure
  4664  0187  0800               	movf	0,w
  4665  0188  00F4               	movwf	??_Filter+2
  4666  0189  0A84               	incf	4,f
  4667  018A  0800               	movf	0,w
  4668  018B  00F5               	movwf	??_Filter+3
  4669  018C  0873               	movf	??_Filter+1,w
  4670  018D  0275               	subwf	??_Filter+3,w
  4671  018E  1D03               	skipz
  4672  018F  2992               	goto	u116_25
  4673  0190  0872               	movf	??_Filter,w
  4674  0191  0274               	subwf	??_Filter+2,w
  4675  0192                     u116_25:	
  4676  0192  1803               	skipnc
  4677  0193  29AF               	goto	i1l3587
  4678                           
  4679                           ;common.c: 123: {
  4680                           ;common.c: 125: filter_temp = filter_buf[i];
  4681  0194  1003               	clrc
  4682  0195  0D2E               	rlf	Filter@i,w
  4683  0196  3E25               	addlw	Filter@filter_buf& (0+255)
  4684  0197  0084               	movwf	4
  4685  0198  0800               	movf	0,w
  4686  0199  00A0               	movwf	Filter@filter_temp
  4687  019A  0A84               	incf	4,f
  4688  019B  0800               	movf	0,w
  4689  019C  00A1               	movwf	Filter@filter_temp+1
  4690                           
  4691                           ;common.c: 127: filter_buf[i] = filter_buf[i + 1];
  4692  019D  21F8  118A         	fcall	PL9	;call to abstracted procedure
  4693  019F  0800               	movf	0,w
  4694  01A0  00F2               	movwf	??_Filter
  4695  01A1  0A84               	incf	4,f
  4696  01A2  0800               	movf	0,w
  4697  01A3  00F3               	movwf	??_Filter+1
  4698  01A4  1003               	clrc
  4699  01A5  0D2E               	rlf	Filter@i,w
  4700  01A6  21F0  118A         	fcall	PL7	;call to abstracted procedure
  4701                           
  4702                           ;common.c: 129: filter_buf[i + 1] = filter_temp;
  4703  01A8  21F8  118A         	fcall	PL9	;call to abstracted procedure
  4704  01AA  0820               	movf	Filter@filter_temp,w
  4705  01AB  0080               	movwf	0
  4706  01AC  0A84               	incf	4,f
  4707  01AD  0821               	movf	Filter@filter_temp+1,w
  4708  01AE  0080               	movwf	0
  4709  01AF                     i1l3587:	
  4710  01AF  0AAE               	incf	Filter@i,f
  4711  01B0  296F               	goto	i1l3589
  4712  01B1                     i1l3591:	
  4713  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  4714  01B2  3002               	movlw	2
  4715  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  4716  01B4  0AAD               	incf	Filter@j,f
  4717  01B5  022D               	subwf	Filter@j,w
  4718                           
  4719                           ;common.c: 130: }
  4720                           ;common.c: 131: }
  4721                           ;common.c: 132: }
  4722                           ;common.c: 134: for(i = 1; i < 3 - 1; i++)
  4723  01B6  01AE               	clrf	Filter@i
  4724  01B7  1C03               	skipc
  4725  01B8  296F               	goto	i1l3589
  4726  01B9  0AAE               	incf	Filter@i,f
  4727                           
  4728                           ;common.c: 135: {
  4729                           ;common.c: 136: filter_sum += filter_buf[i];
  4730  01BA  1003               	clrc
  4731  01BB                     L13:	
  4732  01BB  0D2E               	rlf	Filter@i,w
  4733  01BC  3E25               	addlw	Filter@filter_buf& (0+255)
  4734  01BD  21E0  118A         	fcall	PL4	;call to abstracted procedure
  4735  01BF  0872               	movf	??_Filter,w
  4736  01C0  07A2               	addwf	Filter@filter_sum,f
  4737  01C1  1803               	skipnc
  4738  01C2  0AA3               	incf	Filter@filter_sum+1,f
  4739  01C3  0873               	movf	??_Filter+1,w
  4740  01C4  07A3               	addwf	Filter@filter_sum+1,f
  4741  01C5  3002               	movlw	2
  4742  01C6  0AAE               	incf	Filter@i,f
  4743  01C7  022E               	subwf	Filter@i,w
  4744  01C8  1C03               	skipc
  4745  01C9  29BB               	goto	L13
  4746                           
  4747                           ;common.c: 137: }
  4748                           ;common.c: 140: return (filter_sum );
  4749  01CA  0823               	movf	Filter@filter_sum+1,w
  4750  01CB  00F1               	movwf	?_Filter+1
  4751  01CC  0822               	movf	Filter@filter_sum,w
  4752  01CD  00F0               	movwf	?_Filter
  4753  01CE  0008               	return
  4754  01CF                     __end_of_Filter:	
  4755  01CF                     __ptext1220:	
  4756 ;; =============== function _Filter ends ============
  4757                           
  4758                           
  4759 ;; *************** function _setPWM_Width *****************
  4760 ;; Defined at:
  4761 ;;		line 54 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  4762 ;; Parameters:    Size  Location     Type
  4763 ;;  ucWidth         1    wreg     unsigned char 
  4764 ;; Auto vars:     Size  Location     Type
  4765 ;;  ucWidth         1    0[COMMON] unsigned char 
  4766 ;; Return value:  Size  Location     Type
  4767 ;;		None               void
  4768 ;; Registers used:
  4769 ;;		wreg
  4770 ;; Tracked objects:
  4771 ;;		On entry : 160/0
  4772 ;;		On exit  : 160/0
  4773 ;;		Unchanged: FFE9F/0
  4774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4775 ;;      Params:         0       0       0       0       0
  4776 ;;      Locals:         1       0       0       0       0
  4777 ;;      Temps:          0       0       0       0       0
  4778 ;;      Totals:         1       0       0       0       0
  4779 ;;Total ram usage:        1 bytes
  4780 ;; Hardware stack levels used:    1
  4781 ;; This function calls:
  4782 ;;		Nothing
  4783 ;; This function is called by:
  4784 ;;		_vPutSampleDataIntoTable
  4785 ;; This function uses a non-reentrant model
  4786 ;;
  4787  01CF                     _setPWM_Width:	
  4788                           
  4789                           ; Regs used in _setPWM_Width: [wreg]
  4790                           ;setPWM_Width@ucWidth stored from wreg
  4791  01CF  00F0               	movwf	setPWM_Width@ucWidth
  4792                           
  4793                           ;common.c: 55: static unsigned char ucOldWidth = 0;
  4794                           ;common.c: 56: if( ucOldWidth != ucWidth)
  4795  01D0  0654               	xorwf	setPWM_Width@ucOldWidth,w
  4796  01D1  1903               	skipnz
  4797  01D2  0008               	return
  4798                           
  4799                           ;common.c: 57: {
  4800                           ;common.c: 58: CCPR1L = ucWidth;
  4801  01D3  0870               	movf	setPWM_Width@ucWidth,w
  4802  01D4  0095               	movwf	21	;volatile
  4803                           
  4804                           ;common.c: 59: ucOldWidth = ucWidth;
  4805  01D5  0870               	movf	setPWM_Width@ucWidth,w
  4806  01D6  00D4               	movwf	setPWM_Width@ucOldWidth
  4807  01D7  0008               	return
  4808  01D8                     __end_of_setPWM_Width:	
  4809  01D8                     PL2:	
  4810  01D8  0084               	movwf	4
  4811  01D9  0876               	movf	vPutSampleDataIntoTable@uiSampleData,w
  4812  01DA  1383               	bcf	3,7	;select IRP bank1
  4813  01DB  0080               	movwf	0
  4814  01DC  0A84               	incf	4,f
  4815  01DD  0877               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  4816  01DE  0080               	movwf	0
  4817  01DF  0008               	return
  4818  01E0                     PL4:	
  4819  01E0  0084               	movwf	4
  4820  01E1  1383               	bcf	3,7	;select IRP bank0
  4821  01E2  0800               	movf	0,w
  4822  01E3  00F2               	movwf	??_Filter
  4823  01E4  0A84               	incf	4,f
  4824  01E5  0800               	movf	0,w
  4825  01E6  00F3               	movwf	??_Filter+1
  4826  01E7  0008               	return
  4827  01E8                     PL6:	
  4828  01E8  0A84               	incf	4,f
  4829  01E9  0180               	clrf	0
  4830  01EA  1003               	clrc
  4831  01EB  0D31               	rlf	vPutSampleDataIntoTable@i,w
  4832  01EC  3EBA               	addlw	_uiSampleChannelFourth& (0+255)
  4833  01ED  0084               	movwf	4
  4834  01EE  0180               	clrf	0
  4835  01EF  0008               	return
  4836  01F0                     PL7:	
  4837  01F0  3E25               	addlw	Filter@filter_buf& (0+255)
  4838  01F1  0084               	movwf	4
  4839  01F2  0872               	movf	??_Filter,w
  4840  01F3  0080               	movwf	0
  4841  01F4  0A84               	incf	4,f
  4842  01F5  0873               	movf	??_Filter+1,w
  4843  01F6  0080               	movwf	0
  4844  01F7  0008               	return
  4845  01F8                     PL9:	
  4846  01F8  1003               	clrc
  4847  01F9  0D2E               	rlf	Filter@i,w
  4848  01FA  3E02               	addlw	2
  4849  01FB  3E25               	addlw	Filter@filter_buf& (0+255)
  4850  01FC  0084               	movwf	4
  4851  01FD  0008               	return
  4852                           
  4853                           	psect	intentry
  4854  0004                     __pintentry:	
  4855                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4856                           
  4857  0004                     interrupt_function:	
  4858  007E                     saved_w	set	btemp
  4859  0004  00FE               	movwf	btemp
  4860  0005  0E03               	swapf	3,w
  4861  0006  1283               	bcf	3,5	;RP0=0, select bank0
  4862  0007  1303               	bcf	3,6	;RP1=0, select bank0
  4863  0008  00B3               	movwf	??_ISR
  4864  0009  0804               	movf	4,w
  4865  000A  00B4               	movwf	??_ISR+1
  4866  000B  080A               	movf	10,w
  4867  000C  00B5               	movwf	??_ISR+2
  4868  000D  087F               	movf	btemp+1,w
  4869  000E  00B6               	movwf	??_ISR+3
  4870  000F  118A  2813         	ljmp	_ISR
  4871                           
  4872                           	psect	text1221
  4873  0000                     __ptext1221:	
  4874 ;; =============== function _setPWM_Width ends ============
  4875                           
  4876  007E                     btemp	set	126	;btemp
  4877  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sat Nov 16 21:49:18 2019

                                  ??_clock_config 0037                               ?_startOneHoursTimer 0037  
                                              _GO 00F9                                                fsr 0004  
                        ?_timer1_interrupt_config 0070                                               l702 050E  
                                             l710 0000                                               l713 0000  
                                             l722 05CE                                               l707 0000  
                                             l716 0000                                               l719 0000  
                                             l753 025D                                               l682 04FE  
                                             l692 0506                                               l677 04D1  
                                             l687 04E1                                               l697 04EC  
                                             _GIE 005F                                               _PB2 0032  
                                             _PB3 0033                                               _PB4 0034  
                                             _PB5 0035                                               _PR2 0092  
                                             _ISR 0013                                               fsr0 0004  
                                             indf 0000                            ??_startThreeHoursTimer 0039  
                                            ?_ISR 0070                              ??_startOneHoursTimer 0039  
                              __size_of_AD_Sample 0014                                              l1503 0000  
                                            l2321 0000                                              l4001 0000  
                                            l1610 0000                                              l4003 0000  
                                            l4005 0000                                              l1613 0000  
                                            l4101 0000                                              l4007 0000  
                                            l4015 0000                                              l2327 0000  
                                            l4031 0000                                              l4103 0000  
                                            l4111 0000                                              l4009 0000  
                                            l4017 04BA                                              l4033 0000  
                                            l4201 0000                                              l1563 05B1  
                                            l4019 0000                                              l1619 0000  
                                            l4051 0000                                              l4115 0000  
                                            l4203 0000                                              l4211 0000  
                                            l1572 0000                                              l4037 0000  
                                            l4109 0000                                              l4117 0000  
                                            l4133 03C4                                              l4205 0000  
                                            l1566 0000                                              l4039 0000  
                                            l4063 0000                                              l4135 0000  
                                            l4127 0000                                              l1575 0000  
                                            l4207 0000                                              l4311 0000  
                                            l4303 0000                                              l4231 0000  
                                            l4223 0000                                              l1584 0000  
                                            l1569 0000                                              l4049 0000  
                                            l4057 0000                                              l4065 0000  
                                            l4161 0000                                              l4153 0429  
                                            l4137 0000                                              l4313 0000  
                                            l4305 02BA                                              l4233 0000  
                                            l4225 0000                                              l1578 0000  
                                            l1659 0000                                              l4059 0000  
                                            l4075 0000                                              l4083 0000  
                                            l4091 0000                                              l4171 0444  
                                            l4155 03E4                                              l4147 03E3  
                                            l4139 0000                                              l4219 0000  
                                            l4331 0000                                              l4315 0000  
                                            l4307 0000                                              l4243 023D  
                                            l4235 022F                                              l4227 0000  
                                            l4077 0000                                              l4085 0000  
                                            l4173 0000                                              l4165 0434  
                                            l4157 042C                                              l4181 0000  
                                            l4341 0000                                              l4333 02F5  
                                            l4317 02D1                                              l4309 0000  
                                            l4261 025E                                              l4253 0254  
                                            l4237 0000                                              l4229 0000  
                                            l4167 0000                                              l4159 0000  
                                            l4191 0000                                              l4183 0000  
                                            l4351 0325                                              l4335 02F7  
                                            l4319 0000                                              l4271 027B  
                                            l4263 0000                                              l4255 0256  
                                            l4247 0000                                              l4239 0000  
                                            l4089 0000                                              l4169 0000  
                                            l4177 0000                                              l4361 0346  
                                            l4329 02F0                                              l4273 027D  
                                            l4265 0000                                              l4249 0247  
                                            l4195 049C                                              l4187 0000  
                                            l4363 034D                                              l4355 0000  
                                            l4339 0000                                              l4283 0000  
                                            l4267 0000                                              l4259 0000  
                                            l4197 0000                                              l4373 036B  
                                            l4365 0351                                              l4349 0321  
                                            l4285 0293                                              l4277 028A  
                                            l4269 0275                                              l4199 0000  
                                            l4383 0381                                              l4375 0000  
                                            l4367 0000                                              l4359 0344  
                                            l4287 0000                                              l4279 028C  
                                            l4385 0383                                              l4377 0370  
                                            l4369 035F                                              l4297 02B1  
                                            l4289 029E                                              l4379 0000  
                                            l4299 02B3                                              l4395 038C  
                                            l4389 038A                                              l3951 0000  
                                            l3945 0000                                              l3953 0000  
                                            l3961 0000                                              l3947 0000  
                                            l3955 0000                                              l3963 0000  
                                            l3971 0000                                              l3949 0000  
                                            l3957 0000                                              l3965 0000  
                                            l3981 0000                                              l3973 0000  
                                            l3959 0000                                              l3967 0000  
                                            l3983 0000                                              l3975 0000  
                                            l3991 0000                                              _ADIE 046A  
                                            _ADIF 006A                                              l3969 0000  
                                            l3985 0000                                              l3977 0000  
                                            l3993 0000                                              l3979 0000  
                                            l3987 0000                                              l3995 0000  
                                            l3989 0000                                              l3997 0000  
                                            l3999 0000                                              _ADON 00F8  
                   startTwelveHourTimer@uiSetTime 0037                                              u2257 0227  
                                            u1935 03DE                                              u1945 040F  
                                            u1955 03F5                                              _PEIE 005E  
                            FilterCh13@filter_buf 00C5                              FilterCh13@filter_sum 00C3  
                                            _main 01FE                                              btemp 007E  
                                            start 0011                           ?_getAdOriginalCh13Value 00CF  
                      ??_isFinishedTwentyMinTimer 0037                                             ??_ISR 0033  
                               ??_setPinInitVaule 0038                        __end_of_isPermitSampleTime 05B9  
                             _sampleChannelSelect 0057                                             ?_main 0070  
                                           _CLKPR 0108                                             _T1CON 0010  
                                           _T2CON 0012                                   __end_of_adc_get 0084  
                                           _PBOD2 0C42                                             _TMR1H 000F  
                                           _TMR1L 000E                             setAD_ConvertFlag@flag 0037  
                               ??_selectAdChannel 0037                             FilterCh13@filter_temp 00C1  
                                      _FilterCh13 03BB                                   __end_of_initPB3 04D4  
                                 __end_of_initPB4 04E4                                   __end_of_initPB5 04EF  
                         _vPutSampleDataIntoTable 0087                                   __end_of_initPin 04C8  
                                           _reset 05CE                                             _timer 004E  
                                           pclath 000A                               main@uiTimerThreeP5s 00A6  
                                           status 0003                                             wtemp0 007E  
                  __end_of_getAdOriginalCh13Value 03BB                     __size_of_startTwelveHourTimer 000E  
                            __end_of_clrSampeTime 05CE                                      __end_of_main 03B1  
                          __size_of_adc_test_init 001B                                 __end_of_AD_Sample 049F  
                                          ??_main 00D1                               setPWM_Width@ucWidth 0070  
                                   main@ucChValue 00D2                                     main@ucDelay1s 00A2  
                                          _ADCON0 001F                                            _ADCON1 009F  
                            __end_of_clock_config 05B4                                            _ADRESH 001E  
                                          _ADRESL 009E                                            _CCPR1L 0015  
                                          ?_reset 0070                                            _CLKPCE 0847  
                                          i1l2330 0000                                            i1l1516 0000  
                                          i1l1540 00CF                                            i1l1545 00EE  
                                          i1l3601 0000                                            i1l1578 0000  
                                          i1l1674 006C                                            i1l1666 0027  
                                          i1l3507 0000                                            i1l3603 0000  
                                          i1l1667 0031                                            i1l1668 003C  
                                          i1l3621 0000                                            i1l1669 0047  
                                          i1l3623 0000                                            i1l3615 0000  
                                          i1l3711 0000                                            i1l3561 0000  
                                          i1l3633 00E1                                            i1l3625 0000  
                                          i1l3617 0000                                            i1l3609 0000  
                                          i1l3705 0000                                            i1l3571 0000  
                                          i1l3643 00F4                                            i1l3627 0000  
                                          i1l3731 0000                                            i1l3715 0000  
                                          u115_25 0169                                            i1l3573 0000  
                                          i1l3661 0111                                            i1l3637 00E8  
                                          i1l3645 00F6                                            i1l3733 0000  
                                          i1l3709 0000                                            i1l3591 01B1  
                                          i1l3567 0152                                            i1l3743 0000  
                                          i1l3671 0000                                            i1l3655 0000  
                                          i1l3647 0000                                            i1l3727 0051  
                                          i1l3593 0000                                            i1l3569 0000  
                                          i1l3681 0000                                            i1l3673 0126  
                                          i1l3657 010B                                            i1l3649 00FC  
                                          i1l3737 0063                                            i1l3587 01AF  
                                          i1l3739 0000                                            i1l3683 0000  
                                          i1l3667 0000                                            i1l3659 0000  
                                          u116_25 0192                                            i1l3589 016F  
                                          u132_25 0146                                            i1l3669 0120  
                                          i1l3679 012C                                            u117_25 017C  
                                          _TMR1IE 0460                                            _TMR1IF 0060  
                               _getAD_ConvertFlag 0484                                 _setAD_ConvertFlag 0488  
                                          _TRISB0 0430                                            _TRISB1 0431  
                                          _TRISB2 0432                                            _TRISB3 0433  
                                          _TRISB4 0434                                            _TRISB5 0435  
                              ?_getAD_ConvertFlag 0070                                            _Filter 0149  
                              ?_setAD_ConvertFlag 0070                       ??_isFinishedThreeHoursTimer 0037  
                   __size_of_clearThreeHoursTimer 0004                                         ??_adc_get 0072  
                             ??_getAD_ConvertFlag 0037                            setPWM_Width@ucOldWidth 0054  
                             ??_setAD_ConvertFlag 0037                                            _setPB3 04F7  
                                          _setPB4 0500                                            _setPB5 0508  
                     __end_of_clearTwentyMinTimer 05C5                                            clrloop 05A5  
                                Filter@filter_buf 0025                                         ??_initPB3 0037  
                                       ??_initPB4 0037                                         ??_initPB5 0037  
                                Filter@filter_sum 0022                                         ??_initPin 0038  
                       ??_vPutSampleDataIntoTable 0079                                            saved_w 007E  
                         ??_clearTwelveHoursTimer 0037                                       ?_FilterCh13 0037  
                     ?_process_AD_Converter_Value 0070                                     _adc_test_init 049F  
                       __end_of_getAD_ConvertFlag 0488                         __end_of_setAD_ConvertFlag 048B  
                                   ?_setPWM_Width 0070                                __size_of_adc_start 0004  
                        _initPB2_AsHighResistence 04D4                  __size_of_isFinishedOneHoursTimer 000B  
                __end_of_isFinishedTwentyMinTimer 059A                                    __pcstackCOMMON 0070  
                                    __pidataBANK0 0000                                 main@uiTimerOneP5s 00A4  
                                   __end_of_reset 05C5                                 main@uiTimerTwoP5s 00A8  
                            _uiSampleChannelFirst 00AE                    vPutSampleDataIntoTable@channel 0078  
                       _isFinishedThreeHoursTimer 057C                             __end_of_timer1_config 05A4  
                                  ?_adc_test_init 0037                       __end_of_startTwentyMinTimer 0571  
     vPutSampleDataIntoTable@ucChannelFirstLength 007D                                           ??_reset 0037  
                __size_of_timer1_interrupt_config 0003                             __size_of_clrSampeTime 0002  
                                      __pbssBANK0 003D                                        __pbssBANK1 00A0  
                                  ??_setPWM_Width 0070                      __size_ofi1_setAD_ConvertFlag 0003  
                                 _setPinInitVaule 04EF                                        adc_get@val 0072  
                                _uiTwentyMinTimer 0043                   __end_of_vPutSampleDataIntoTable 0149  
                                         ?_Filter 0070                                        __pmaintext 01FE  
                             __size_of_FilterCh13 0097           vPutSampleDataIntoTable@uiDeviationValue 002F  
                                 _selectAdChannel 05C5                                        __pintentry 0004  
                                         _CCP1CON 0017                                        __ptext1200 0563  
                                      __ptext1201 049F                                        __ptext1210 04E4  
                                      __ptext1202 05C9                                        __ptext1211 0500  
                                      __ptext1203 059A                                        __ptext1220 01CF  
                                      __ptext1212 04D9                                        __ptext1204 05AC  
                                      __ptext1221 0000                                        __ptext1213 04F7  
                                      __ptext1205 05CE                                        __ptext1214 04C8  
                                      __ptext1206 05C5                                        __ptext1215 0013  
                                      __ptext1207 0510                                        __ptext1216 0087  
                                      __ptext1208 04D4                                        __ptext1217 0084  
                                      __ptext1209 0508                                        __ptext1218 0079  
                                      __ptext1219 0149                                        __ptext1180 046E  
                                      __ptext1181 04EF                                        __ptext1190 057C  
                                      __ptext1182 04BE                                           ?_setPB3 0070  
                                      __ptext1191 0547                                        __ptext1183 048B  
                                         ?_setPB4 0070                                        __ptext1192 05BD  
                                      __ptext1184 0488                                           ?_setPB5 0070  
                                      __ptext1193 0586                                        __ptext1185 0484  
                                      __ptext1194 0555                                        __ptext1186 03BB  
                                      __ptext1195 05C1                                        __ptext1187 0571  
                                      __ptext1179 03B1                                        __ptext1196 0590  
                                      __ptext1188 0539                                        __ptext1197 05CC  
                                      __ptext1189 05B9                                        __ptext1198 05B4  
                                      __ptext1199 04BA                             __size_of_clock_config 0008  
                                    _clrSampeTime 05CC                                 __end_of_adc_start 04BE  
                            _uiTwentySecondsTimer 00A0                                _isPermitSampleTime 05B4  
                                         Filter@i 002E                                           Filter@j 002D  
                              __size_of_pwm_start 0015                       __size_of_startOneHoursTimer 000E  
                   __size_of_startThreeHoursTimer 000E                        __size_of_getAD_ConvertFlag 0004  
                      __size_of_setAD_ConvertFlag 0003                                    main@ucTimerP3s 0052  
                                  main@ucTimerP5s 0053                               ?_isPermitSampleTime 0070  
                                 __size_of_Filter 0086                                        _uiBigTimer 003D  
                                    setPB3@bValue 0037                                      setPB4@bValue 0037  
                                    _clock_config 05AC                                      setPB5@bValue 0037  
                                         _adc_get 0079                                   __size_of_setPB3 0009  
                                 __size_of_setPB4 0008                                   __size_of_setPB5 0008  
                            ??_isPermitSampleTime 0037                      __end_of_startTwelveHourTimer 0563  
                                   initPB3@bValue 0037                                     initPB4@bValue 0037  
                                       _AD_Sample 048B                                           _initPB3 04C8  
                                         _initPB4 04D9                                           _initPB5 04E4  
                                    __size_of_ISR 0066                                     initPB5@bValue 0037  
                                         _initPin 04BE                              _bSmallTimerStartFlag 004B  
                                 ??_adc_test_init 0038                 __size_of_isFinishedTwentyMinTimer 000A  
                       ?_isFinishedTwentyMinTimer 0070                           __end_of_setPinInitVaule 04F7  
                            end_of_initialization 0536                                 Filter@filter_temp 0020  
                           pwm_start@ucPulseWidth 0038                           __end_of_selectAdChannel 05C9  
                         _isFinishedOneHoursTimer 0571                                 __end_of_pwm_start 0525  
                            __end_of_setPWM_Width 01D8                                        ?_AD_Sample 0070  
                    ??_isFinishedTwelveHoursTimer 0037                                         Filter@cir 002B  
                             _bTwentyMinStartFlag 004C                                  _adc_convert_flag 0048  
                                    ??_FilterCh13 0039                      __end_of_clearThreeHoursTimer 05BD  
                  __size_of_clearTwelveHoursTimer 0004                           _timer1_interrupt_config 05C9  
                   __end_of_clearTwelveHoursTimer 05C1                        ??_initPB2_AsHighResistence 0037  
              __size_of_isFinishedThreeHoursTimer 000A                                        main@ucStep 0051  
                                  __end_of_Filter 01CF                     startTwentyMinTimer@uiSetValue 0037  
             __size_of_isFinishedTwelveHoursTimer 000A                                FilterCh13@tmpValue 00C0  
                              __end_of_FilterCh13 0452                          vPutSampleDataIntoTable@i 0031  
                             i1_setAD_ConvertFlag 0084                                    __end_of_setPB3 0500  
                                  __end_of_setPB4 0508                                    __end_of_setPB5 0510  
                             start_initialization 0525                                       __end_of_ISR 0079  
                           _uiSampleChannelFourth 00BA                                  ?_setPinInitVaule 0070  
                        ??_getAdOriginalCh13Value 003D                      __size_of_clearTwentyMinTimer 0004  
                       ??_isFinishedOneHoursTimer 0037                              ?i1_setAD_ConvertFlag 0070  
                            _startTwelveHourTimer 0555                 __end_of_isFinishedThreeHoursTimer 0586  
                                ?_selectAdChannel 0070                                          ??_Filter 0072  
                                     __pdataBANK0 0057                                          ??_setPB3 0037  
                                        ??_setPB4 0037                                          ??_setPB5 0037  
                        ?_vPutSampleDataIntoTable 0076                                       ??_AD_Sample 0037  
                       ??_timer1_interrupt_config 0037                                       __pbssCOMMON 007D  
                                   __pcstackBANK0 0020                                     __pcstackBANK1 00C0  
                                       _adc_start 04BA                             ??i1_setAD_ConvertFlag 0070  
                                 main@uiCh13Value 00D4                             ?_startTwelveHourTimer 0037  
                    __size_of_startTwentyMinTimer 000E                            __size_of_timer1_config 000A  
                            _clearThreeHoursTimer 05B9                             __size_of_setPWM_Width 0009  
                    __end_of_startThreeHoursTimer 0555                                 main@cTimerP5s_792 0050  
                               main@cTimerP5s_786 004F                                          ?_adc_get 0070  
                 __end_of_isFinishedOneHoursTimer 057C                __end_of_isFinishedTwelveHoursTimer 0590  
                      _isFinishedTwelveHoursTimer 0586                                          ?_initPB3 0070  
                                        ?_initPB4 0070                                          ?_initPB5 0070  
                                 ISR@ucTimer1sCnt 0047                                          ?_initPin 0070  
                      __end_of_startOneHoursTimer 0547                  __end_of_initPB2_AsHighResistence 04D9  
                       _uiSampleChannelFourteenth 00B4                                        ?_adc_start 0070  
                 __size_of_getAdOriginalCh13Value 000A                                    __size_of_reset FFF7  
                               interrupt_function 0004                                      _setPWM_Width 01CF  
                 __end_of_timer1_interrupt_config 05CC                         pwm_start@ucPulseFrequency 0037  
                           ?_clearThreeHoursTimer 0070                              adc_test_init@channel 0039  
             vPutSampleDataIntoTable@uiSampleData 0076      vPutSampleDataIntoTable@ucChannelFourthLength 0056  
                     __size_of_isPermitSampleTime 0005                                         _pwm_start 0510  
       vPutSampleDataIntoTable@uiCalWidthArrayOld 00AA         vPutSampleDataIntoTable@uiCalWidthArrayNew 0045  
                                    _uiSmallTimer 0041              vPutSampleDataIntoTable@uiCalWidthCnt 00AC  
                           __end_of_adc_test_init 04BA                                     _timer1_config 059A  
                    ??_process_AD_Converter_Value 003A                            ??_startTwelveHourTimer 0039  
                          _getAdOriginalCh13Value 03B1                               _clearTwentyMinTimer 05C1  
                     startOneHoursTimer@uiSetTime 0037                                  __size_of_adc_get 000B  
             __size_of_process_AD_Converter_Value 0016                                        ?_pwm_start 0037  
                        _isFinishedTwentyMinTimer 0590  vPutSampleDataIntoTable@ucChannelFourteenthLength 0055  
                                __size_of_initPB3 000C                                  __size_of_initPB4 000B  
                                __size_of_initPB5 000B                                  __size_of_initPin 000A  
                                  Filter@tmpValue 0024                                    ?_timer1_config 0070  
                            ?_clearTwentyMinTimer 0070                                       ??_adc_start 0037  
                            _startThreeHoursTimer 0547                             _clearTwelveHoursTimer 05BD  
                                  _uiOneHourTimer 003F                                     __size_of_main 01B3  
              vPutSampleDataIntoTable@uiInitWidth 0058                                     FilterCh13@cir 00CB  
                                        clear_ram 05A4                            ??_clearThreeHoursTimer 0037  
               __size_of_initPB2_AsHighResistence 0005                         ?_initPB2_AsHighResistence 0070  
                          _bOneHourTimerStartFlag 004A                                     ?_clrSampeTime 0070  
                             _startTwentyMinTimer 0563                                       _sampleTimes 004D  
                           ??_clearTwentyMinTimer 0037                             ?_startThreeHoursTimer 0037  
                __size_of_vPutSampleDataIntoTable 00C2                                          intlevel1 0000  
                            ?_startTwentyMinTimer 0037                          __size_of_setPinInitVaule 0008  
                      ?_isFinishedThreeHoursTimer 0070                                     ?_clock_config 0070  
                        __size_of_selectAdChannel 0004                     startThreeHoursTimer@uiSetTime 0037  
                         i1setAD_ConvertFlag@flag 0070                                       ??_pwm_start 0038  
                                  ??_clrSampeTime 0037                       ?_isFinishedTwelveHoursTimer 0070  
                              _bBigTimerStartFlag 0049                                   ??_timer1_config 0037  
                                     FilterCh13@i 00CE                                       FilterCh13@j 00CD  
                     __end_ofi1_setAD_ConvertFlag 0087                __end_of_process_AD_Converter_Value 0484  
                      _process_AD_Converter_Value 046E                          ?_isFinishedOneHoursTimer 0070  
                          ?_clearTwelveHoursTimer 0070                                  adc_test_init@ref 0037  
                           ??_startTwentyMinTimer 0039                                _startOneHoursTimer 0539  
