

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Tue Jun 18 10:48:37 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,delta=2
    14                           	psect	swtext1,local,class=CONST,delta=2
    15                           	psect	swtext2,local,class=CONST,delta=2
    16                           	psect	swtext3,local,class=CONST,delta=2
    17                           	psect	text583,local,class=CODE,delta=2
    18                           	psect	text584,local,class=CODE,delta=2
    19                           	psect	text590,local,class=CODE,delta=2
    20                           	psect	text591,local,class=CODE,delta=2
    21                           	psect	text592,local,class=CODE,delta=2
    22                           	psect	text593,local,class=CODE,delta=2
    23                           	psect	text594,local,class=CODE,delta=2
    24                           	psect	text595,local,class=CODE,delta=2
    25                           	psect	text596,local,class=CODE,delta=2
    26                           	psect	text597,local,class=CODE,delta=2
    27                           	psect	text598,local,class=CODE,delta=2
    28                           	psect	text599,local,class=CODE,delta=2
    29                           	psect	text600,local,class=CODE,delta=2
    30                           	psect	text602,local,class=CODE,delta=2
    31                           	psect	text603,local,class=CODE,delta=2
    32                           	psect	text604,local,class=CODE,delta=2
    33                           	psect	text606,local,class=CODE,delta=2
    34                           	psect	text607,local,class=CODE,delta=2
    35                           	psect	text608,local,class=CODE,delta=2
    36                           	psect	text612,local,class=CODE,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text615,local,class=CODE,delta=2
    39                           	psect	pa_nodes,global,class=CODE,delta=2
    40                           	dabs	1,0x7E,2
    41  000A                     	;#
    42                           
    43                           	psect	config
    44  2000  2FFF               	dw	12287	;#
    45  2001  3FDE               	dw	16350	;#
    46  2002  3FF8               	dw	16376	;#
    47                           
    48                           	psect	idataBANK0
    49  0000                     __pidataBANK0:	
    50  001F                     _ADCON0	set	31
    51  001E                     _ADRESH	set	30
    52  001B                     _OP1CON0	set	27
    53  001C                     _OP1CON1	set	28
    54  001D                     _OP1CON2	set	29
    55  0010                     _T1CON	set	16
    56  000F                     _TMR1H	set	15
    57  000E                     _TMR1L	set	14
    58  006A                     _ADIF	set	106
    59  00F8                     _ADON	set	248
    60  005F                     _GIE	set	95
    61  00F9                     _GO	set	249
    62  0028                     _PA0	set	40
    63  0029                     _PA1	set	41
    64  002A                     _PA2	set	42
    65  002B                     _PA3	set	43
    66  002E                     _PA6	set	46
    67  002F                     _PA7	set	47
    68  0030                     _PB0	set	48
    69  0031                     _PB1	set	49
    70  0036                     _PB6	set	54
    71  005E                     _PEIE	set	94
    72  0060                     _TMR1IF	set	96
    73  009F                     _ADCON1	set	159
    74  009E                     _ADRESL	set	158
    75  0087                     _DACCON	set	135
    76  0088                     _DACR0	set	136
    77  009B                     _OP2CON0	set	155
    78  009C                     _OP2CON1	set	156
    79  009D                     _OP2CON2	set	157
    80  046A                     _ADIE	set	1130
    81  0460                     _TMR1IE	set	1120
    82  0428                     _TRISA0	set	1064
    83  0429                     _TRISA1	set	1065
    84  042A                     _TRISA2	set	1066
    85  042B                     _TRISA3	set	1067
    86  042E                     _TRISA6	set	1070
    87  042F                     _TRISA7	set	1071
    88  0430                     _TRISB0	set	1072
    89  0431                     _TRISB1	set	1073
    90  0432                     _TRISB2	set	1074
    91  0433                     _TRISB3	set	1075
    92  0434                     _TRISB4	set	1076
    93  0435                     _TRISB5	set	1077
    94  0436                     _TRISB6	set	1078
    95  0437                     _TRISB7	set	1079
    96  0108                     _CLKPR	set	264
    97  0847                     _CLKPCE	set	2119
    98  0C3F                     _PAOD7	set	3135
    99  0C46                     _PBOD6	set	3142
   100                           
   101                           	psect	cinit
   102  0450                     start_initialization:	
   103  0450  3020               	movlw	low __pbssBANK0
   104                           
   105                           ; Clear objects allocated to COMMON
   106  0451  01F6               	clrf	__pbssCOMMON& (0+127)
   107  0452  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   108  0453  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   109  0454  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   110  0455  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   111                           
   112                           ; Clear objects allocated to BANK0
   113  0456  1383               	bcf	3,7	;select IRP bank0
   114  0457  0084               	movwf	4
   115  0458  3056               	movlw	low (__pbssBANK0+54)
   116  0459  118A  249D         	fcall	clear_ram
   117                           
   118                           ;initializer for _sampleChannelSelect
   119  045B  300E               	movlw	14
   120  045C  00DB               	movwf	__pdataBANK0& (0+127)
   121  045D                     end_of_initialization:	
   122                           ;End of C runtime variable initialization code
   123                           
   124  045D  0183               	clrf	3
   125  045E  118A  280D         	ljmp	_main	;jump to C main() function
   126                           
   127                           	psect	bssCOMMON
   128  0076                     __pbssCOMMON:	
   129  0076                     _uiBigTimer:	
   130  0076                     	ds	2
   131  0078                     ISR@ucTimer1sCnt:	
   132  0078                     	ds	1
   133  0079                     _adc_convert_flag:	
   134  0079                     	ds	1
   135  007A                     _timer:	
   136  007A                     	ds	1
   137                           
   138                           	psect	bssBANK0
   139  0020                     __pbssBANK0:	
   140  0020                     _buffer_Sample_AD_Value:	
   141  0020                     	ds	12
   142  002C                     _adc_original_CH14_value:	
   143  002C                     	ds	2
   144  002E                     _adc_original_CH1_value:	
   145  002E                     	ds	2
   146  0030                     _adc_original_CH4_value:	
   147  0030                     	ds	2
   148  0032                     _adc_original_value:	
   149  0032                     	ds	2
   150  0034                     _multiFilterMaxValue:	
   151  0034                     	ds	2
   152  0036                     _multiFilterMinValue:	
   153  0036                     	ds	2
   154  0038                     _uiSmallTimer:	
   155  0038                     	ds	2
   156  003A                     _uiTwentySecondsTimer:	
   157  003A                     	ds	2
   158  003C                     _sampleTimes:	
   159  003C                     	ds	1
   160  003D                     main@cTimer1s_806:	
   161  003D                     	ds	1
   162  003E                     main@enumBranchStep:	
   163  003E                     	ds	1
   164  003F                     main@enumInteralStep:	
   165  003F                     	ds	1
   166  0040                     main@enumMainLoopStep:	
   167  0040                     	ds	1
   168  0041                     main@ucADC4_Step:	
   169  0041                     	ds	1
   170  0042                     main@ucChannel4Type:	
   171  0042                     	ds	1
   172  0043                     main@ucLoaderStep:	
   173  0043                     	ds	1
   174  0044                     main@ucLoaderStep1:	
   175  0044                     	ds	1
   176  0045                     main@ucLoaderStep2:	
   177  0045                     	ds	1
   178  0046                     main@ucLoaderStep3:	
   179  0046                     	ds	1
   180  0047                     main@ucLoaderStep4:	
   181  0047                     	ds	1
   182  0048                     main@ucTimer1s:	
   183  0048                     	ds	1
   184  0049                     main@ucTimer20s:	
   185  0049                     	ds	1
   186  004A                     main@ucTimerADC1ZeroP5s:	
   187  004A                     	ds	1
   188  004B                     main@ucTimerDelay:	
   189  004B                     	ds	1
   190  004C                     main@ucTimerDelay1:	
   191  004C                     	ds	1
   192  004D                     main@ucTimerDelay2:	
   193  004D                     	ds	1
   194  004E                     main@ucTimerDelay3:	
   195  004E                     	ds	1
   196  004F                     main@ucTimerDelay4:	
   197  004F                     	ds	1
   198  0050                     main@ucTimerP3s:	
   199  0050                     	ds	1
   200  0051                     main@ucTimerRightP5s:	
   201  0051                     	ds	1
   202  0052                     main@ucTimerX1P5s:	
   203  0052                     	ds	1
   204  0053                     main@ucTimerX2P5s:	
   205  0053                     	ds	1
   206  0054                     main@ucTimerZeroPoint3s:	
   207  0054                     	ds	1
   208  0055                     main@ucTimerZeroPoint5s:	
   209  0055                     	ds	1
   210                           
   211                           	psect	dataBANK0
   212  005B                     __pdataBANK0:	
   213  005B                     _sampleChannelSelect:	
   214  005B                     	ds	1
   215                           
   216                           	psect	clrtext
   217  049D                     clear_ram:	
   218                           ;	Called with FSR containing the base address, and
   219                           ;	W with the last address+1
   220                           
   221  049D  0064               	clrwdt	;clear the watchdog before getting into this loop
   222  049E                     clrloop:	
   223  049E  0180               	clrf	0	;clear RAM location pointed to by FSR
   224  049F  0A84               	incf	4,f	;increment pointer
   225  04A0  0604               	xorwf	4,w	;XOR with final address
   226  04A1  1903               	btfsc	3,2	;have we reached the end yet?
   227  04A2  3400               	retlw	0	;all done for this memory range, return
   228  04A3  0604               	xorwf	4,w	;XOR again to restore value
   229  04A4  2C9E               	goto	clrloop	;do the next byte
   230                           
   231                           	psect	cstackCOMMON
   232  0070                     __pcstackCOMMON:	
   233  0070                     ?_clearTwelveHoursTimer:	
   234  0070                     ?_clearThreeHoursTimer:	
   235                           ; 0 bytes @ 0x0
   236                           
   237  0070                     ?_clearTwentySecondsTimer:	
   238                           ; 0 bytes @ 0x0
   239                           
   240  0070                     ?_clock_config:	
   241                           ; 0 bytes @ 0x0
   242                           
   243  0070                     ?_timer1_config:	
   244                           ; 0 bytes @ 0x0
   245                           
   246  0070                     ?_timer1_interrupt_config:	
   247                           ; 0 bytes @ 0x0
   248                           
   249  0070                     ?_dac_init:	
   250                           ; 0 bytes @ 0x0
   251                           
   252  0070                     ?_op1_init:	
   253                           ; 0 bytes @ 0x0
   254                           
   255  0070                     ?_op2_init:	
   256                           ; 0 bytes @ 0x0
   257                           
   258  0070                     ?_adc_start:	
   259                           ; 0 bytes @ 0x0
   260                           
   261  0070                     ?_clrSampeTime:	
   262                           ; 0 bytes @ 0x0
   263                           
   264  0070                     ?_process_AD_Converter_Value:	
   265                           ; 0 bytes @ 0x0
   266                           
   267  0070                     ?_startTwelveHourTimer:	
   268                           ; 0 bytes @ 0x0
   269                           
   270  0070                     ?_startTwentySecondsTimer:	
   271                           ; 0 bytes @ 0x0
   272                           
   273  0070                     ?_startThreeHoursTimer:	
   274                           ; 0 bytes @ 0x0
   275                           
   276  0070                     ?_AD_Sample:	
   277                           ; 0 bytes @ 0x0
   278                           
   279  0070                     ?_clearAllTimer:	
   280                           ; 0 bytes @ 0x0
   281                           
   282  0070                     ?_clearPinPortAndTimer:	
   283                           ; 0 bytes @ 0x0
   284                           
   285  0070                     ?_main:	
   286                           ; 0 bytes @ 0x0
   287                           
   288  0070                     ?_setAD_ConvertFlag:	
   289                           ; 0 bytes @ 0x0
   290                           
   291  0070                     ?_ISR:	
   292                           ; 0 bytes @ 0x0
   293                           
   294  0070                     ?i1_setAD_ConvertFlag:	
   295                           ; 0 bytes @ 0x0
   296                           
   297  0070                     ??i1_setAD_ConvertFlag:	
   298                           ; 0 bytes @ 0x0
   299                           
   300  0070                     ?_isPermitSampleTime:	
   301                           ; 0 bytes @ 0x0
   302                           
   303  0070                     ?_isFinishedTwelveHoursTimer:	
   304                           ; 1 bytes @ 0x0
   305                           
   306  0070                     ?_isFinishedTwentySecondsTimer:	
   307                           ; 1 bytes @ 0x0
   308                           
   309  0070                     ?_isFinishedThreeHoursTimer:	
   310                           ; 1 bytes @ 0x0
   311                           
   312  0070                     ?_getAD_ConvertFlag:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0070                     ?_adc_get:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0070                     i1setAD_ConvertFlag@flag:	
   319                           ; 2 bytes @ 0x0
   320                           
   321                           
   322                           ; 1 bytes @ 0x0
   323  0070                     	ds	2
   324  0072                     ??_adc_get:	
   325  0072                     adc_get@val:	
   326                           ; 0 bytes @ 0x2
   327                           
   328                           
   329                           ; 2 bytes @ 0x2
   330  0072                     	ds	2
   331  0074                     ??_ISR:	
   332                           
   333                           ; 0 bytes @ 0x4
   334  0074                     	ds	2
   335                           
   336                           	psect	cstackBANK0
   337  0056                     __pcstackBANK0:	
   338  0056                     ??_clearTwelveHoursTimer:	
   339  0056                     ??_clearThreeHoursTimer:	
   340                           ; 0 bytes @ 0x0
   341                           
   342  0056                     ??_clearTwentySecondsTimer:	
   343                           ; 0 bytes @ 0x0
   344                           
   345  0056                     ??_clock_config:	
   346                           ; 0 bytes @ 0x0
   347                           
   348  0056                     ??_timer1_config:	
   349                           ; 0 bytes @ 0x0
   350                           
   351  0056                     ??_timer1_interrupt_config:	
   352                           ; 0 bytes @ 0x0
   353                           
   354  0056                     ?_adc_test_init:	
   355                           ; 0 bytes @ 0x0
   356                           
   357  0056                     ??_dac_init:	
   358                           ; 0 bytes @ 0x0
   359                           
   360  0056                     ??_op1_init:	
   361                           ; 0 bytes @ 0x0
   362                           
   363  0056                     ??_op2_init:	
   364                           ; 0 bytes @ 0x0
   365                           
   366  0056                     ??_adc_start:	
   367                           ; 0 bytes @ 0x0
   368                           
   369  0056                     ??_isPermitSampleTime:	
   370                           ; 0 bytes @ 0x0
   371                           
   372  0056                     ??_clrSampeTime:	
   373                           ; 0 bytes @ 0x0
   374                           
   375  0056                     ??_startTwelveHourTimer:	
   376                           ; 0 bytes @ 0x0
   377                           
   378  0056                     ??_isFinishedTwelveHoursTimer:	
   379                           ; 0 bytes @ 0x0
   380                           
   381  0056                     ??_startTwentySecondsTimer:	
   382                           ; 0 bytes @ 0x0
   383                           
   384  0056                     ??_isFinishedTwentySecondsTimer:	
   385                           ; 0 bytes @ 0x0
   386                           
   387  0056                     ??_startThreeHoursTimer:	
   388                           ; 0 bytes @ 0x0
   389                           
   390  0056                     ??_isFinishedThreeHoursTimer:	
   391                           ; 0 bytes @ 0x0
   392                           
   393  0056                     ??_clearAllTimer:	
   394                           ; 0 bytes @ 0x0
   395                           
   396  0056                     ??_clearPinPortAndTimer:	
   397                           ; 0 bytes @ 0x0
   398                           
   399  0056                     ??_getAD_ConvertFlag:	
   400                           ; 0 bytes @ 0x0
   401                           
   402  0056                     ??_setAD_ConvertFlag:	
   403                           ; 0 bytes @ 0x0
   404                           
   405  0056                     ?_getAdOriginalCh14Value:	
   406                           ; 0 bytes @ 0x0
   407                           
   408  0056                     ?_getAdOriginalCh1Value:	
   409                           ; 2 bytes @ 0x0
   410                           
   411  0056                     ?_getAdOriginaCh4Value:	
   412                           ; 2 bytes @ 0x0
   413                           
   414  0056                     ?_getAdOriginalValue:	
   415                           ; 2 bytes @ 0x0
   416                           
   417  0056                     setAD_ConvertFlag@flag:	
   418                           ; 2 bytes @ 0x0
   419                           
   420  0056                     adc_test_init@ref:	
   421                           ; 1 bytes @ 0x0
   422                           
   423                           
   424                           ; 1 bytes @ 0x0
   425  0056                     	ds	1
   426  0057                     ??_adc_test_init:	
   427                           
   428                           ; 0 bytes @ 0x1
   429  0057                     	ds	1
   430  0058                     ??_getAdOriginalCh14Value:	
   431  0058                     ??_getAdOriginalCh1Value:	
   432                           ; 0 bytes @ 0x2
   433                           
   434  0058                     ??_getAdOriginaCh4Value:	
   435                           ; 0 bytes @ 0x2
   436                           
   437  0058                     ??_AD_Sample:	
   438                           ; 0 bytes @ 0x2
   439                           
   440  0058                     ??_getAdOriginalValue:	
   441                           ; 0 bytes @ 0x2
   442                           
   443  0058                     adc_test_init@channel:	
   444                           ; 0 bytes @ 0x2
   445                           
   446                           
   447                           ; 1 bytes @ 0x2
   448  0058                     	ds	2
   449  005A                     AD_Sample@index:	
   450                           
   451                           ; 1 bytes @ 0x4
   452  005A                     	ds	1
   453  005B                     ??_process_AD_Converter_Value:	
   454  005B                     ??_main:	
   455                           ; 0 bytes @ 0x5
   456                           
   457                           
   458                           	psect	maintext
   459  000D                     __pmaintext:	
   460                           ; 0 bytes @ 0x5
   461 ;;Data sizes: Strings 0, constant 0, data 1, bss 59, persistent 0 stack 0
   462 ;;Auto spaces:   Size  Autos    Used
   463 ;; COMMON          14      6      11
   464 ;; BANK0           80      5      60
   465 ;; BANK1           80      0       0
   466 ;; BANK3           96      0       0
   467 ;; BANK2           96      0       0
   468 ;;
   469 ;; Pointer list with targets:
   470 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   471 ;;
   472 ;; ?_getAdOriginalCh14Value	unsigned int  size(1) Largest target is 0
   473 ;;
   474 ;; ?_getAdOriginaCh4Value	unsigned int  size(1) Largest target is 0
   475 ;;
   476 ;; ?_getAdOriginalCh1Value	unsigned int  size(1) Largest target is 0
   477 ;;
   478 ;; ?_getAdOriginalValue	unsigned int  size(1) Largest target is 0
   479 ;;
   480 ;;
   481 ;; Critical Paths under _main in COMMON
   482 ;;
   483 ;;   None.
   484 ;;
   485 ;; Critical Paths under _ISR in COMMON
   486 ;;
   487 ;;   _ISR->_adc_get
   488 ;;
   489 ;; Critical Paths under _main in BANK0
   490 ;;
   491 ;;   _process_AD_Converter_Value->_AD_Sample
   492 ;;   _AD_Sample->_getAdOriginalValue
   493 ;;
   494 ;; Critical Paths under _ISR in BANK0
   495 ;;
   496 ;;   None.
   497 ;;
   498 ;; Critical Paths under _main in BANK1
   499 ;;
   500 ;;   None.
   501 ;;
   502 ;; Critical Paths under _ISR in BANK1
   503 ;;
   504 ;;   None.
   505 ;;
   506 ;; Critical Paths under _main in BANK3
   507 ;;
   508 ;;   None.
   509 ;;
   510 ;; Critical Paths under _ISR in BANK3
   511 ;;
   512 ;;   None.
   513 ;;
   514 ;; Critical Paths under _main in BANK2
   515 ;;
   516 ;;   None.
   517 ;;
   518 ;; Critical Paths under _ISR in BANK2
   519 ;;
   520 ;;   None.
   521 ;;
   522 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   523 ;;
   524 ;;
   525 ;;Call Graph Tables:
   526 ;;
   527 ;; ---------------------------------------------------------------------------------
   528 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   529 ;; ---------------------------------------------------------------------------------
   530 ;; (0) _main                                                 0     0      0     178
   531 ;;                       _clock_config
   532 ;;                      _timer1_config
   533 ;;            _timer1_interrupt_config
   534 ;;                      _adc_test_init
   535 ;;                           _dac_init
   536 ;;                           _op1_init
   537 ;;                           _op2_init
   538 ;;                          _adc_start
   539 ;;                 _isPermitSampleTime
   540 ;;                       _clrSampeTime
   541 ;;         _process_AD_Converter_Value
   542 ;;             _getAdOriginalCh14Value
   543 ;;               _clearPinPortAndTimer
   544 ;;              _getAdOriginalCh1Value
   545 ;;               _startTwelveHourTimer
   546 ;;         _isFinishedTwelveHoursTimer
   547 ;;            _startTwentySecondsTimer
   548 ;;               _getAdOriginaCh4Value
   549 ;;       _isFinishedTwentySecondsTimer
   550 ;;               _startThreeHoursTimer
   551 ;;          _isFinishedThreeHoursTimer
   552 ;;               _clearThreeHoursTimer
   553 ;;                      _clearAllTimer
   554 ;; ---------------------------------------------------------------------------------
   555 ;; (1) _process_AD_Converter_Value                           0     0      0     134
   556 ;;                  _getAD_ConvertFlag
   557 ;;                  _setAD_ConvertFlag
   558 ;;                          _AD_Sample
   559 ;;                      _adc_test_init
   560 ;;                          _adc_start
   561 ;; ---------------------------------------------------------------------------------
   562 ;; (1) _clearPinPortAndTimer                                 0     0      0       0
   563 ;;                      _clearAllTimer
   564 ;; ---------------------------------------------------------------------------------
   565 ;; (2) _AD_Sample                                            3     3      0      68
   566 ;;                                              2 BANK0      3     3      0
   567 ;;                 _getAdOriginalValue
   568 ;; ---------------------------------------------------------------------------------
   569 ;; (1) _clearAllTimer                                        0     0      0       0
   570 ;;              _clearTwelveHoursTimer
   571 ;;               _clearThreeHoursTimer
   572 ;;            _clearTwentySecondsTimer
   573 ;; ---------------------------------------------------------------------------------
   574 ;; (3) _getAdOriginalValue                                   2     0      2       0
   575 ;;                                              0 BANK0      2     0      2
   576 ;; ---------------------------------------------------------------------------------
   577 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   578 ;;                                              0 BANK0      1     1      0
   579 ;; ---------------------------------------------------------------------------------
   580 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   581 ;; ---------------------------------------------------------------------------------
   582 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   583 ;; ---------------------------------------------------------------------------------
   584 ;; (1) _startThreeHoursTimer                                 0     0      0       0
   585 ;; ---------------------------------------------------------------------------------
   586 ;; (1) _isFinishedTwentySecondsTimer                         0     0      0       0
   587 ;; ---------------------------------------------------------------------------------
   588 ;; (1) _getAdOriginaCh4Value                                 2     0      2       0
   589 ;;                                              0 BANK0      2     0      2
   590 ;; ---------------------------------------------------------------------------------
   591 ;; (1) _startTwentySecondsTimer                              0     0      0       0
   592 ;; ---------------------------------------------------------------------------------
   593 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   594 ;; ---------------------------------------------------------------------------------
   595 ;; (1) _startTwelveHourTimer                                 0     0      0       0
   596 ;; ---------------------------------------------------------------------------------
   597 ;; (1) _getAdOriginalCh1Value                                2     0      2       0
   598 ;;                                              0 BANK0      2     0      2
   599 ;; ---------------------------------------------------------------------------------
   600 ;; (1) _getAdOriginalCh14Value                               2     0      2       0
   601 ;;                                              0 BANK0      2     0      2
   602 ;; ---------------------------------------------------------------------------------
   603 ;; (1) _clrSampeTime                                         0     0      0       0
   604 ;; ---------------------------------------------------------------------------------
   605 ;; (1) _isPermitSampleTime                                   0     0      0       0
   606 ;; ---------------------------------------------------------------------------------
   607 ;; (2) _adc_start                                            0     0      0       0
   608 ;; ---------------------------------------------------------------------------------
   609 ;; (1) _op2_init                                             0     0      0       0
   610 ;; ---------------------------------------------------------------------------------
   611 ;; (1) _op1_init                                             0     0      0       0
   612 ;; ---------------------------------------------------------------------------------
   613 ;; (1) _dac_init                                             0     0      0       0
   614 ;; ---------------------------------------------------------------------------------
   615 ;; (2) _adc_test_init                                        3     2      1      44
   616 ;;                                              0 BANK0      3     2      1
   617 ;; ---------------------------------------------------------------------------------
   618 ;; (1) _timer1_interrupt_config                              0     0      0       0
   619 ;; ---------------------------------------------------------------------------------
   620 ;; (1) _timer1_config                                        0     0      0       0
   621 ;; ---------------------------------------------------------------------------------
   622 ;; (1) _clock_config                                         0     0      0       0
   623 ;; ---------------------------------------------------------------------------------
   624 ;; (2) _clearTwentySecondsTimer                              0     0      0       0
   625 ;; ---------------------------------------------------------------------------------
   626 ;; (2) _clearThreeHoursTimer                                 0     0      0       0
   627 ;; ---------------------------------------------------------------------------------
   628 ;; (2) _clearTwelveHoursTimer                                0     0      0       0
   629 ;; ---------------------------------------------------------------------------------
   630 ;; Estimated maximum stack depth 3
   631 ;; ---------------------------------------------------------------------------------
   632 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   633 ;; ---------------------------------------------------------------------------------
   634 ;; (4) _ISR                                                  2     2      0      97
   635 ;;                                              4 COMMON     2     2      0
   636 ;;                i1_setAD_ConvertFlag
   637 ;;                            _adc_get
   638 ;; ---------------------------------------------------------------------------------
   639 ;; (5) i1_setAD_ConvertFlag                                  1     1      0      73
   640 ;;                                              0 COMMON     1     1      0
   641 ;; ---------------------------------------------------------------------------------
   642 ;; (5) _adc_get                                              4     2      2      24
   643 ;;                                              0 COMMON     4     2      2
   644 ;; ---------------------------------------------------------------------------------
   645 ;; Estimated maximum stack depth 5
   646 ;; ---------------------------------------------------------------------------------
   647 ;; Call Graph Graphs:
   648 ;; _main (ROOT)
   649 ;;   _clock_config
   650 ;;   _timer1_config
   651 ;;   _timer1_interrupt_config
   652 ;;   _adc_test_init
   653 ;;   _dac_init
   654 ;;   _op1_init
   655 ;;   _op2_init
   656 ;;   _adc_start
   657 ;;   _isPermitSampleTime
   658 ;;   _clrSampeTime
   659 ;;   _process_AD_Converter_Value
   660 ;;     _getAD_ConvertFlag
   661 ;;     _setAD_ConvertFlag
   662 ;;     _AD_Sample
   663 ;;       _getAdOriginalValue
   664 ;;     _adc_test_init
   665 ;;     _adc_start
   666 ;;   _getAdOriginalCh14Value
   667 ;;   _clearPinPortAndTimer
   668 ;;     _clearAllTimer
   669 ;;       _clearTwelveHoursTimer
   670 ;;       _clearThreeHoursTimer
   671 ;;       _clearTwentySecondsTimer
   672 ;;   _getAdOriginalCh1Value
   673 ;;   _startTwelveHourTimer
   674 ;;   _isFinishedTwelveHoursTimer
   675 ;;   _startTwentySecondsTimer
   676 ;;   _getAdOriginaCh4Value
   677 ;;   _isFinishedTwentySecondsTimer
   678 ;;   _startThreeHoursTimer
   679 ;;   _isFinishedThreeHoursTimer
   680 ;;   _clearThreeHoursTimer
   681 ;;   _clearAllTimer
   682 ;;     _clearTwelveHoursTimer
   683 ;;     _clearThreeHoursTimer
   684 ;;     _clearTwentySecondsTimer
   685 ;;
   686 ;; _ISR (ROOT)
   687 ;;   i1_setAD_ConvertFlag
   688 ;;   _adc_get
   689 ;;
   690 ;; Address spaces:
   691 ;;Name               Size   Autos  Total    Cost      Usage
   692 ;;BANK3               60      0       0      10        0.0%
   693 ;;BITBANK3            60      0       0       9        0.0%
   694 ;;SFR3                 0      0       0       4        0.0%
   695 ;;BITSFR3              0      0       0       4        0.0%
   696 ;;BANK2               60      0       0      12        0.0%
   697 ;;BITBANK2            60      0       0      11        0.0%
   698 ;;SFR2                 0      0       0       5        0.0%
   699 ;;BITSFR2              0      0       0       5        0.0%
   700 ;;SFR1                 0      0       0       2        0.0%
   701 ;;BITSFR1              0      0       0       2        0.0%
   702 ;;BANK1               50      0       0       8        0.0%
   703 ;;BITBANK1            50      0       0       7        0.0%
   704 ;;CODE                 0      0       0       0        0.0%
   705 ;;DATA                 0      0      4E       6        0.0%
   706 ;;ABS                  0      0      47       3        0.0%
   707 ;;NULL                 0      0       0       0        0.0%
   708 ;;STACK                0      0       7       2        0.0%
   709 ;;BANK0               50      5      3C       5       75.0%
   710 ;;BITBANK0            50      0       0       4        0.0%
   711 ;;SFR0                 0      0       0       1        0.0%
   712 ;;BITSFR0              0      0       0       1        0.0%
   713 ;;COMMON               E      6       B       1       78.6%
   714 ;;BITCOMMON            E      0       0       0        0.0%
   715                           
   716                           
   717 ;; *************** function _main *****************
   718 ;; Defined at:
   719 ;;		line 106 in file "C:\190604\AK7030-OTP\main.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;		None
   722 ;; Auto vars:     Size  Location     Type
   723 ;;		None
   724 ;; Return value:  Size  Location     Type
   725 ;;		None               void
   726 ;; Registers used:
   727 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   728 ;; Tracked objects:
   729 ;;		On entry : 17F/0
   730 ;;		On exit  : 60/0
   731 ;;		Unchanged: FFE00/0
   732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   733 ;;      Params:         0       0       0       0       0
   734 ;;      Locals:         0       0       0       0       0
   735 ;;      Temps:          0       0       0       0       0
   736 ;;      Totals:         0       0       0       0       0
   737 ;;Total ram usage:        0 bytes
   738 ;; Hardware stack levels required when called:    5
   739 ;; This function calls:
   740 ;;		_clock_config
   741 ;;		_timer1_config
   742 ;;		_timer1_interrupt_config
   743 ;;		_adc_test_init
   744 ;;		_dac_init
   745 ;;		_op1_init
   746 ;;		_op2_init
   747 ;;		_adc_start
   748 ;;		_isPermitSampleTime
   749 ;;		_clrSampeTime
   750 ;;		_process_AD_Converter_Value
   751 ;;		_getAdOriginalCh14Value
   752 ;;		_clearPinPortAndTimer
   753 ;;		_getAdOriginalCh1Value
   754 ;;		_startTwelveHourTimer
   755 ;;		_isFinishedTwelveHoursTimer
   756 ;;		_startTwentySecondsTimer
   757 ;;		_getAdOriginaCh4Value
   758 ;;		_isFinishedTwentySecondsTimer
   759 ;;		_startThreeHoursTimer
   760 ;;		_isFinishedThreeHoursTimer
   761 ;;		_clearThreeHoursTimer
   762 ;;		_clearAllTimer
   763 ;; This function is called by:
   764 ;;		Startup code after reset
   765 ;; This function uses a non-reentrant model
   766 ;;
   767  000D                     _main:	
   768                           
   769                           ;main.c: 107: enum setp_Adc4
   770                           ;main.c: 108: {
   771                           ;main.c: 109: ADC4_STEP_INIT = 0,
   772                           ;main.c: 110: ADC4_STEP_FIRST,
   773                           ;main.c: 111: ADC4_STEP_SECOND,
   774                           ;main.c: 112: ADC4_STEP_THIRD,
   775                           ;main.c: 113: ADC4_STEP_FOURTH,
   776                           ;main.c: 114: ADC4_STEP_FIFTH,
   777                           ;main.c: 115: ADC4_STEP_SIXTH,
   778                           ;main.c: 116: };
   779                           ;main.c: 119: static unsigned char ucWaitTime1S = 0;
   780                           ;main.c: 121: static unsigned char ucWaitTimeO3s = 0;
   781                           ;main.c: 123: static unsigned char ucSmallTimerActionFlag = 0;
   782                           ;main.c: 125: static unsigned char ucSetSmallActionFlag = 0;
   783                           
   784                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   785  000D  1683               	bsf	3,5	;RP0=1, select bank1
   786  000E  1005               	bcf	5,0
   787                           
   788                           ;main.c: 128: TRISA1 = 0;
   789  000F  1085               	bcf	5,1
   790                           
   791                           ;main.c: 129: TRISA2 = 0;
   792  0010  1105               	bcf	5,2
   793                           
   794                           ;main.c: 130: TRISA3 = 0;
   795  0011  1185               	bcf	5,3
   796                           
   797                           ;main.c: 131: TRISB0 = 0;
   798  0012  1006               	bcf	6,0
   799                           
   800                           ;main.c: 132: TRISB1 = 0;
   801  0013  1086               	bcf	6,1
   802                           
   803                           ;main.c: 133: TRISA6 = 0;
   804  0014  1305               	bcf	5,6
   805                           
   806                           ;main.c: 134: TRISA7 = 0;
   807  0015  1385               	bcf	5,7
   808                           
   809                           ;main.c: 135: TRISB6 = 0;
   810  0016  1306               	bcf	6,6
   811                           
   812                           ;main.c: 137: PBOD6 = 1;
   813  0017  1703               	bsf	3,6	;RP1=1, select bank3
   814  0018  1708               	bsf	8,6
   815                           
   816                           ;main.c: 139: PA0 = 0;
   817  0019  1283               	bcf	3,5	;RP0=0, select bank0
   818  001A  1303               	bcf	3,6	;RP1=0, select bank0
   819  001B  1005               	bcf	5,0
   820                           
   821                           ;main.c: 140: PA1 = 0;
   822  001C  1085               	bcf	5,1
   823                           
   824                           ;main.c: 141: PA2 = 0;
   825  001D  1105               	bcf	5,2
   826                           
   827                           ;main.c: 142: PA3 = 0;
   828  001E  1185               	bcf	5,3
   829                           
   830                           ;main.c: 143: PB0 = 0;
   831  001F  1006               	bcf	6,0
   832                           
   833                           ;main.c: 144: PB1 = 1;
   834  0020  1486               	bsf	6,1
   835                           
   836                           ;main.c: 145: PA6 = 0;
   837  0021  1305               	bcf	5,6
   838                           
   839                           ;main.c: 146: PA7 = 0;
   840  0022  1385               	bcf	5,7
   841                           
   842                           ;main.c: 149: TRISB2 = 1;
   843  0023  1683               	bsf	3,5	;RP0=1, select bank1
   844  0024  1506               	bsf	6,2
   845                           
   846                           ;main.c: 151: TRISB7 = 1;
   847  0025  1786               	bsf	6,7
   848                           
   849                           ;main.c: 152: TRISB4 = 1;
   850  0026  1606               	bsf	6,4
   851                           
   852                           ;main.c: 154: clock_config();
   853  0027  118A  24AD  118A   	fcall	_clock_config
   854                           
   855                           ;main.c: 155: timer1_config();
   856  002A  118A  2493  118A   	fcall	_timer1_config
   857                           
   858                           ;main.c: 156: timer1_interrupt_config();
   859  002D  118A  24ED  118A   	fcall	_timer1_interrupt_config
   860                           
   861                           ;main.c: 158: adc_test_init(14,3);
   862  0030  3003               	movlw	3
   863  0031  1283               	bcf	3,5	;RP0=0, select bank0
   864  0032  00D6               	movwf	?_adc_test_init
   865  0033  300E               	movlw	14
   866  0034  118A  23AC  118A   	fcall	_adc_test_init
   867                           
   868                           ;main.c: 160: dac_init();
   869  0037  118A  24E4  118A   	fcall	_dac_init
   870                           
   871                           ;main.c: 161: op1_init();
   872  003A  118A  2488  118A   	fcall	_op1_init
   873                           
   874                           ;main.c: 162: op2_init();
   875  003D  118A  24A5  118A   	fcall	_op2_init
   876                           
   877                           ;main.c: 165: adc_start();
   878  0040  118A  23C1  118A   	fcall	_adc_start
   879  0043                     l3949:	
   880  0043  0064               	clrwdt	;#
   881                           
   882                           ;main.c: 200: if(isPermitSampleTime())
   883  0044  118A  24DF  118A   	fcall	_isPermitSampleTime
   884  0047  3A00               	xorlw	0
   885  0048  1903               	skipnz
   886  0049  2843               	goto	l3949
   887                           
   888                           ;main.c: 201: {
   889                           ;main.c: 202: clrSampeTime();
   890  004A  118A  24F0  118A   	fcall	_clrSampeTime
   891                           
   892                           ;main.c: 203: process_AD_Converter_Value();
   893  004D  118A  2320  118A   	fcall	_process_AD_Converter_Value
   894                           
   895                           ;main.c: 205: switch(enumMainLoopStep)
   896  0050  2B02               	goto	l4447
   897  0051                     l3957:	
   898                           
   899                           ;main.c: 208: {
   900                           ;main.c: 209: static unsigned char ucTimerZeroPoint5s = 0;
   901                           ;main.c: 210: if(getAdOriginalCh14Value() > 1950)
   902  0051  118A  24DA  118A   	fcall	_getAdOriginalCh14Value
   903  0054  3007               	movlw	7
   904  0055  0257               	subwf	?_getAdOriginalCh14Value+1,w
   905  0056  309F               	movlw	159
   906  0057  1903               	skipnz
   907  0058  0256               	subwf	?_getAdOriginalCh14Value,w
   908  0059  1C03               	skipc
   909  005A  285D               	goto	l3961
   910                           
   911                           ;main.c: 211: {
   912                           ;main.c: 212: ucTimerZeroPoint5s++;
   913  005B  0AD5               	incf	main@ucTimerZeroPoint5s,f
   914                           
   915                           ;main.c: 213: }
   916  005C  285E               	goto	l3963
   917  005D                     l3961:	
   918                           
   919                           ;main.c: 214: else
   920                           ;main.c: 215: ucTimerZeroPoint5s = 0;
   921  005D  01D5               	clrf	main@ucTimerZeroPoint5s
   922  005E                     l3963:	
   923                           
   924                           ;main.c: 217: if(ucTimerZeroPoint5s >= 5)
   925  005E  3005               	movlw	5
   926  005F  0255               	subwf	main@ucTimerZeroPoint5s,w
   927  0060  1C03               	skipc
   928  0061  2843               	goto	l3949
   929                           
   930                           ;main.c: 218: {
   931                           ;main.c: 219: ucTimerZeroPoint5s = 0;
   932  0062  01D5               	clrf	main@ucTimerZeroPoint5s
   933  0063                     l3967:	
   934                           
   935                           ;main.c: 220: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
   936  0063  01C0               	clrf	main@enumMainLoopStep
   937  0064  0AC0               	incf	main@enumMainLoopStep,f
   938  0065                     l703:	
   939                           
   940                           ;main.c: 221: }
   941                           ;main.c: 222: break;
   942  0065  2843               	goto	l3949
   943  0066                     l3969:	
   944                           
   945                           ;main.c: 226: {
   946                           ;main.c: 227: static unsigned char ucTimerZeroPoint3s = 0;
   947                           ;main.c: 229: if(ucTimerZeroPoint3s < 3)
   948  0066  3003               	movlw	3
   949  0067  0254               	subwf	main@ucTimerZeroPoint3s,w
   950  0068  1803               	skipnc
   951  0069  286C               	goto	l3973
   952                           
   953                           ;main.c: 230: {
   954                           ;main.c: 231: ucTimerZeroPoint3s++;
   955  006A  0AD4               	incf	main@ucTimerZeroPoint3s,f
   956                           
   957                           ;main.c: 232: }
   958  006B  2843               	goto	l3949
   959  006C                     l3973:	
   960                           
   961                           ;main.c: 233: else
   962                           ;main.c: 234: {
   963                           ;main.c: 235: ucTimerZeroPoint3s = 0;
   964  006C  01D4               	clrf	main@ucTimerZeroPoint3s
   965                           
   966                           ;main.c: 237: if(getAdOriginalCh14Value() > 1950)
   967  006D  118A  24DA  118A   	fcall	_getAdOriginalCh14Value
   968  0070  3007               	movlw	7
   969  0071  0257               	subwf	?_getAdOriginalCh14Value+1,w
   970  0072  309F               	movlw	159
   971  0073  1903               	skipnz
   972  0074  0256               	subwf	?_getAdOriginalCh14Value,w
   973  0075  1C03               	skipc
   974  0076  2879               	goto	l3979
   975  0077                     l3977:	
   976                           
   977                           ;main.c: 238: {
   978                           ;main.c: 240: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
   979  0077  3002               	movlw	2
   980  0078  28B2               	goto	L5
   981  0079                     l3979:	
   982                           ;main.c: 241: }
   983                           
   984                           
   985                           ;main.c: 242: else
   986                           ;main.c: 243: {
   987                           ;main.c: 244: clearPinPortAndTimer();
   988  0079  118A  2436  118A   	fcall	_clearPinPortAndTimer
   989  007C  2843               	goto	l3949
   990  007D                     l712:	
   991                           ;main.c: 248: }
   992                           ;main.c: 250: case MAIN_LOOP_STEP_SECOND:
   993                           
   994  007D  3003               	movlw	3
   995                           
   996                           ;main.c: 251: {
   997                           ;main.c: 253: PA6 = 1;
   998  007E  1705               	bsf	5,6
   999                           
  1000                           ;main.c: 254: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  1001  007F  28B2               	goto	L5
  1002  0080                     l3983:	
  1003                           ;main.c: 256: break;
  1004                           
  1005                           
  1006                           ;main.c: 260: {
  1007                           ;main.c: 261: static unsigned char ucTimerADC1ZeroP5s = 0;
  1008                           ;main.c: 263: if(getAdOriginalCh1Value() < 130)
  1009  0080  118A  24D5  118A   	fcall	_getAdOriginalCh1Value
  1010  0083  3000               	movlw	0
  1011  0084  0257               	subwf	?_getAdOriginalCh1Value+1,w
  1012  0085  3082               	movlw	130
  1013  0086  1903               	skipnz
  1014  0087  0256               	subwf	?_getAdOriginalCh1Value,w
  1015  0088  1803               	skipnc
  1016  0089  288C               	goto	l3987
  1017                           
  1018                           ;main.c: 264: {
  1019                           ;main.c: 265: ucTimerADC1ZeroP5s = 0;
  1020  008A  01CA               	clrf	main@ucTimerADC1ZeroP5s
  1021                           
  1022                           ;main.c: 267: }
  1023  008B  288D               	goto	l3989
  1024  008C                     l3987:	
  1025                           
  1026                           ;main.c: 268: else
  1027                           ;main.c: 269: {
  1028                           ;main.c: 270: ucTimerADC1ZeroP5s++;
  1029  008C  0ACA               	incf	main@ucTimerADC1ZeroP5s,f
  1030  008D                     l3989:	
  1031                           
  1032                           ;main.c: 271: }
  1033                           ;main.c: 273: if(ucTimerADC1ZeroP5s >= 1)
  1034  008D  084A               	movf	main@ucTimerADC1ZeroP5s,w
  1035  008E  1903               	btfsc	3,2
  1036  008F  2893               	goto	l3995
  1037  0090  3004               	movlw	4
  1038                           
  1039                           ;main.c: 274: {
  1040                           ;main.c: 275: ucTimerADC1ZeroP5s = 0;
  1041  0091  01CA               	clrf	main@ucTimerADC1ZeroP5s
  1042                           
  1043                           ;main.c: 276: enumMainLoopStep = MAIN_LOOP_STEP_FOURTH;
  1044  0092  28B2               	goto	L5
  1045  0093                     l3995:	
  1046                           ;main.c: 277: }
  1047                           
  1048                           
  1049                           ;main.c: 278: else
  1050                           ;main.c: 279: {
  1051                           ;main.c: 280: static unsigned char ucTimerRightP5s = 0;
  1052                           ;main.c: 282: if(getAdOriginalCh1Value() < 117)
  1053  0093  118A  24D5  118A   	fcall	_getAdOriginalCh1Value
  1054  0096  3000               	movlw	0
  1055  0097  0257               	subwf	?_getAdOriginalCh1Value+1,w
  1056  0098  3075               	movlw	117
  1057  0099  1903               	skipnz
  1058  009A  0256               	subwf	?_getAdOriginalCh1Value,w
  1059  009B  1803               	skipnc
  1060  009C  289F               	goto	l3999
  1061                           
  1062                           ;main.c: 283: {
  1063                           ;main.c: 284: ucTimerRightP5s++;
  1064  009D  0AD1               	incf	main@ucTimerRightP5s,f
  1065                           
  1066                           ;main.c: 285: }
  1067  009E  28A0               	goto	l4001
  1068  009F                     l3999:	
  1069                           
  1070                           ;main.c: 286: else
  1071                           ;main.c: 287: {
  1072                           ;main.c: 288: ucTimerRightP5s = 0;
  1073  009F  01D1               	clrf	main@ucTimerRightP5s
  1074  00A0                     l4001:	
  1075                           
  1076                           ;main.c: 289: }
  1077                           ;main.c: 291: if(ucTimerRightP5s >= 1)
  1078  00A0  0851               	movf	main@ucTimerRightP5s,w
  1079  00A1  1903               	btfsc	3,2
  1080  00A2  2843               	goto	l3949
  1081  00A3  3008               	movlw	8
  1082                           
  1083                           ;main.c: 292: {
  1084                           ;main.c: 293: ucTimerRightP5s = 0;
  1085  00A4  01D1               	clrf	main@ucTimerRightP5s
  1086                           
  1087                           ;main.c: 294: enumMainLoopStep = MAIN_LOOP_STEP_3_HOUR_BRANCH;
  1088  00A5  28B2               	goto	L5
  1089  00A6                     l4007:	
  1090                           ;main.c: 295: }
  1091                           
  1092                           
  1093                           ;main.c: 306: {
  1094                           ;main.c: 308: startTwelveHourTimer();
  1095  00A6  118A  24D0  118A   	fcall	_startTwelveHourTimer
  1096                           
  1097                           ;main.c: 309: enumMainLoopStep = MAIN_LOOP_STEP_FIFTH;
  1098  00A9  3005               	movlw	5
  1099  00AA  28B2               	goto	L5
  1100  00AB                     l4011:	
  1101                           ;main.c: 311: break;
  1102                           
  1103                           
  1104                           ;main.c: 315: {
  1105                           ;main.c: 317: if(isFinishedTwelveHoursTimer())
  1106  00AB  118A  24CB  118A   	fcall	_isFinishedTwelveHoursTimer
  1107  00AE  3A00               	xorlw	0
  1108  00AF  1903               	skipnz
  1109  00B0  2A37               	goto	l4323
  1110  00B1                     l4013:	
  1111                           
  1112                           ;main.c: 318: {
  1113                           ;main.c: 319: enumMainLoopStep = MAIN_LOOP_STEP_12_HOUR_END;
  1114  00B1  3009               	movlw	9
  1115  00B2                     L5:	
  1116  00B2  00C0               	movwf	main@enumMainLoopStep
  1117                           
  1118                           ;main.c: 320: }
  1119  00B3  2843               	goto	l3949
  1120  00B4                     l4015:	
  1121                           
  1122                           ;main.c: 328: {
  1123                           ;main.c: 329: startTwentySecondsTimer();
  1124  00B4  118A  24E9  118A   	fcall	_startTwentySecondsTimer
  1125  00B7                     l4017:	
  1126                           
  1127                           ;main.c: 330: ucADC4_Step = ADC4_STEP_FIRST;
  1128  00B7  01C1               	clrf	main@ucADC4_Step
  1129  00B8  0AC1               	incf	main@ucADC4_Step,f
  1130                           
  1131                           ;main.c: 331: break;
  1132  00B9  2843               	goto	l3949
  1133  00BA                     l4019:	
  1134                           
  1135                           ;main.c: 335: {
  1136                           ;main.c: 336: if(getAdOriginaCh4Value() < 1911)
  1137  00BA  118A  24C6  118A   	fcall	_getAdOriginaCh4Value
  1138  00BD  3007               	movlw	7
  1139  00BE  0257               	subwf	?_getAdOriginaCh4Value+1,w
  1140  00BF  3077               	movlw	119
  1141  00C0  1903               	skipnz
  1142  00C1  0256               	subwf	?_getAdOriginaCh4Value,w
  1143  00C2  1803               	skipnc
  1144  00C3  28C6               	goto	l4023
  1145                           
  1146                           ;main.c: 337: ucChannel4Type = LESS_THAN_1911;
  1147  00C4  01C2               	clrf	main@ucChannel4Type
  1148  00C5  28ED               	goto	l737
  1149  00C6                     l4023:	
  1150                           
  1151                           ;main.c: 338: else if(getAdOriginaCh4Value() < 2067)
  1152  00C6  118A  24C6  118A   	fcall	_getAdOriginaCh4Value
  1153  00C9  3008               	movlw	8
  1154  00CA  0257               	subwf	?_getAdOriginaCh4Value+1,w
  1155  00CB  3013               	movlw	19
  1156  00CC  1903               	skipnz
  1157  00CD  0256               	subwf	?_getAdOriginaCh4Value,w
  1158  00CE  1803               	skipnc
  1159  00CF  28D3               	goto	l4027
  1160                           
  1161                           ;main.c: 339: ucChannel4Type = BETWEEN_1911_AND_2067;
  1162  00D0  01C2               	clrf	main@ucChannel4Type
  1163  00D1  0AC2               	incf	main@ucChannel4Type,f
  1164  00D2  28ED               	goto	l737
  1165  00D3                     l4027:	
  1166                           
  1167                           ;main.c: 340: else if(getAdOriginaCh4Value() < 2204)
  1168  00D3  118A  24C6  118A   	fcall	_getAdOriginaCh4Value
  1169  00D6  3008               	movlw	8
  1170  00D7  0257               	subwf	?_getAdOriginaCh4Value+1,w
  1171  00D8  309C               	movlw	156
  1172  00D9  1903               	skipnz
  1173  00DA  0256               	subwf	?_getAdOriginaCh4Value,w
  1174  00DB  1803               	skipnc
  1175  00DC  28DF               	goto	l4031
  1176                           
  1177                           ;main.c: 341: ucChannel4Type = BETWEEN_2067_AND_2204;
  1178  00DD  3002               	movlw	2
  1179  00DE  28EC               	goto	L6
  1180  00DF                     l4031:	
  1181                           
  1182                           ;main.c: 342: else if(getAdOriginaCh4Value() < 2340)
  1183  00DF  118A  24C6  118A   	fcall	_getAdOriginaCh4Value
  1184  00E2  3009               	movlw	9
  1185  00E3  0257               	subwf	?_getAdOriginaCh4Value+1,w
  1186  00E4  3024               	movlw	36
  1187  00E5  1903               	skipnz
  1188  00E6  0256               	subwf	?_getAdOriginaCh4Value,w
  1189  00E7  1803               	skipnc
  1190  00E8  28EB               	goto	l4035
  1191                           
  1192                           ;main.c: 343: ucChannel4Type = BETWEEN_2204_AND_2340;
  1193  00E9  3003               	movlw	3
  1194  00EA  28EC               	goto	L6
  1195  00EB                     l4035:	
  1196                           
  1197                           ;main.c: 344: else
  1198                           ;main.c: 345: ucChannel4Type = MORE_THAN_2340;
  1199  00EB  3004               	movlw	4
  1200  00EC                     L6:	
  1201  00EC  00C2               	movwf	main@ucChannel4Type
  1202  00ED                     l737:	
  1203                           
  1204                           ;main.c: 347: ucADC4_Step = ADC4_STEP_SECOND;
  1205  00ED  3002               	movlw	2
  1206  00EE  2A25               	goto	L8
  1207  00EF                     l752:	
  1208                           ;main.c: 362: {
  1209                           ;main.c: 363: case 0:
  1210                           
  1211                           ;main.c: 348: break;
  1212                           
  1213                           
  1214                           ;main.c: 364: {
  1215                           ;main.c: 365: PB0 = 1;
  1216  00EF  1406               	bsf	6,0
  1217  00F0                     l4037:	
  1218                           
  1219                           ;main.c: 366: ucLoaderStep++;
  1220  00F0  0AC3               	incf	main@ucLoaderStep,f
  1221                           
  1222                           ;main.c: 367: break;
  1223  00F1  2843               	goto	l3949
  1224  00F2                     l4039:	
  1225                           
  1226                           ;main.c: 371: {
  1227                           ;main.c: 372: if(ucTimerDelay >= 5)
  1228  00F2  3005               	movlw	5
  1229  00F3  024B               	subwf	main@ucTimerDelay,w
  1230  00F4  1C03               	skipc
  1231  00F5  28F9               	goto	l4047
  1232                           
  1233                           ;main.c: 373: {
  1234                           ;main.c: 374: PA0 = 1;
  1235  00F6  1405               	bsf	5,0
  1236  00F7                     l4043:	
  1237                           
  1238                           ;main.c: 375: ucTimerDelay = 0;
  1239  00F7  01CB               	clrf	main@ucTimerDelay
  1240  00F8  28F0               	goto	l4037
  1241  00F9                     l4047:	
  1242                           
  1243                           ;main.c: 378: else
  1244                           ;main.c: 379: ucTimerDelay++;
  1245  00F9  0ACB               	incf	main@ucTimerDelay,f
  1246  00FA  2843               	goto	l3949
  1247  00FB                     l4049:	
  1248                           
  1249                           ;main.c: 384: {
  1250                           ;main.c: 385: if(ucTimerDelay >= 5)
  1251  00FB  3005               	movlw	5
  1252  00FC  024B               	subwf	main@ucTimerDelay,w
  1253  00FD  1C03               	skipc
  1254  00FE  28F9               	goto	l4047
  1255                           
  1256                           ;main.c: 386: {
  1257                           ;main.c: 387: PA1= 1;
  1258  00FF  1485               	bsf	5,1
  1259  0100  28F7               	goto	l4043
  1260  0101                     l4059:	
  1261                           
  1262                           ;main.c: 398: {
  1263                           ;main.c: 399: if(ucTimerDelay >= 5)
  1264  0101  3005               	movlw	5
  1265  0102  024B               	subwf	main@ucTimerDelay,w
  1266  0103  1C03               	skipc
  1267  0104  28F9               	goto	l4047
  1268                           
  1269                           ;main.c: 400: {
  1270                           ;main.c: 401: PA2= 1;
  1271  0105  1505               	bsf	5,2
  1272  0106  28F7               	goto	l4043
  1273  0107                     l4069:	
  1274                           
  1275                           ;main.c: 411: {
  1276                           ;main.c: 412: if(ucTimerDelay >= 5)
  1277  0107  3005               	movlw	5
  1278  0108  024B               	subwf	main@ucTimerDelay,w
  1279  0109  1C03               	skipc
  1280  010A  28F9               	goto	l4047
  1281                           
  1282                           ;main.c: 413: {
  1283                           ;main.c: 414: PA3 = 1;
  1284  010B  1585               	bsf	5,3
  1285  010C  28F7               	goto	l4043
  1286  010D                     l4079:	
  1287                           
  1288                           ;main.c: 424: {
  1289                           ;main.c: 425: if(ucTimerDelay >= 5)
  1290  010D  3005               	movlw	5
  1291  010E  024B               	subwf	main@ucTimerDelay,w
  1292  010F  1C03               	skipc
  1293  0110  28F9               	goto	l4047
  1294                           
  1295                           ;main.c: 426: {
  1296                           ;main.c: 427: PB0 = 0;
  1297  0111  1006               	bcf	6,0
  1298                           
  1299                           ;main.c: 428: PA0 = 0;
  1300  0112  1005               	bcf	5,0
  1301                           
  1302                           ;main.c: 429: PA1 = 0;
  1303  0113  1085               	bcf	5,1
  1304                           
  1305                           ;main.c: 430: PA2 = 0;
  1306  0114  1105               	bcf	5,2
  1307                           
  1308                           ;main.c: 431: PA3 = 0;
  1309  0115  1185               	bcf	5,3
  1310  0116  28F7               	goto	l4043
  1311  0117                     l4089:	
  1312                           
  1313                           ;main.c: 441: {
  1314                           ;main.c: 442: if(ucTimerDelay >= 2)
  1315  0117  3002               	movlw	2
  1316  0118  024B               	subwf	main@ucTimerDelay,w
  1317  0119  1C03               	skipc
  1318  011A  28F9               	goto	l4047
  1319                           
  1320                           ;main.c: 443: {
  1321                           ;main.c: 444: ucTimerDelay = 0;
  1322  011B  01CB               	clrf	main@ucTimerDelay
  1323                           
  1324                           ;main.c: 446: ucLoaderStep = 0;
  1325  011C  01C3               	clrf	main@ucLoaderStep
  1326  011D                     l4093:	
  1327                           
  1328                           ;main.c: 447: ucADC4_Step = ADC4_STEP_THIRD;
  1329  011D  3003               	movlw	3
  1330  011E  2A25               	goto	L8
  1331  011F                     l4099:	
  1332                           ;main.c: 448: }
  1333                           
  1334  011F  0843               	movf	main@ucLoaderStep,w
  1335                           
  1336                           ; Switch size 1, requested type "space"
  1337                           ; Number of cases is 7, Range of values is 0 to 6
  1338                           ; switch strategies available:
  1339                           ; Name         Instructions Cycles
  1340                           ; direct_byte           21     7 (fixed)
  1341                           ; simple_byte           22    12 (average)
  1342                           ; jumptable            260     6 (fixed)
  1343                           ; rangetable            11     6 (fixed)
  1344                           ; spacedrange           20     9 (fixed)
  1345                           ; locatedrange           7     3 (fixed)
  1346                           ;	Chosen strategy is direct_byte
  1347  0120  0084               	movwf	4
  1348  0121  3007               	movlw	7
  1349  0122  0204               	subwf	4,w
  1350  0123  1803               	skipnc
  1351  0124  2843               	goto	l3949
  1352  0125  3004               	movlw	high S4665
  1353  0126  008A               	movwf	10
  1354  0127  1003               	clrc
  1355  0128  0D04               	rlf	4,w
  1356  0129  3E60               	addlw	low S4665
  1357  012A  0082               	movwf	2
  1358  012B                     l780:	
  1359                           ;main.c: 467: {
  1360                           ;main.c: 468: case 0:
  1361                           
  1362                           
  1363                           ;main.c: 469: {
  1364                           ;main.c: 470: PB0 = 1;
  1365  012B  1406               	bsf	6,0
  1366  012C                     l4101:	
  1367                           
  1368                           ;main.c: 471: ucLoaderStep1++;
  1369  012C  0AC4               	incf	main@ucLoaderStep1,f
  1370                           
  1371                           ;main.c: 472: break;
  1372  012D  2843               	goto	l3949
  1373  012E                     l4103:	
  1374                           
  1375                           ;main.c: 476: {
  1376                           ;main.c: 477: if(ucTimerDelay1 >= 5)
  1377  012E  3005               	movlw	5
  1378  012F  024C               	subwf	main@ucTimerDelay1,w
  1379  0130  1C03               	skipc
  1380  0131  2935               	goto	l4111
  1381                           
  1382                           ;main.c: 478: {
  1383                           ;main.c: 479: PA0 = 1;
  1384  0132  1405               	bsf	5,0
  1385  0133                     l4107:	
  1386                           
  1387                           ;main.c: 480: ucTimerDelay1 = 0;
  1388  0133  01CC               	clrf	main@ucTimerDelay1
  1389  0134  292C               	goto	l4101
  1390  0135                     l4111:	
  1391                           
  1392                           ;main.c: 483: else
  1393                           ;main.c: 484: ucTimerDelay1++;
  1394  0135  0ACC               	incf	main@ucTimerDelay1,f
  1395  0136  2843               	goto	l3949
  1396  0137                     l4113:	
  1397                           
  1398                           ;main.c: 489: {
  1399                           ;main.c: 490: if(ucTimerDelay1 >= 5)
  1400  0137  3005               	movlw	5
  1401  0138  024C               	subwf	main@ucTimerDelay1,w
  1402  0139  1C03               	skipc
  1403  013A  2935               	goto	l4111
  1404                           
  1405                           ;main.c: 491: {
  1406                           ;main.c: 492: PA1= 1;
  1407  013B  1485               	bsf	5,1
  1408  013C  2933               	goto	l4107
  1409  013D                     l4123:	
  1410                           
  1411                           ;main.c: 502: {
  1412                           ;main.c: 503: if(ucTimerDelay1 >= 5)
  1413  013D  3005               	movlw	5
  1414  013E  024C               	subwf	main@ucTimerDelay1,w
  1415  013F  1C03               	skipc
  1416  0140  2935               	goto	l4111
  1417                           
  1418                           ;main.c: 504: {
  1419                           ;main.c: 505: PA2 = 1;
  1420  0141  1505               	bsf	5,2
  1421  0142  2933               	goto	l4107
  1422  0143                     l4133:	
  1423                           
  1424                           ;main.c: 515: {
  1425                           ;main.c: 516: if(ucTimerDelay1 >= 5)
  1426  0143  3005               	movlw	5
  1427  0144  024C               	subwf	main@ucTimerDelay1,w
  1428  0145  1C03               	skipc
  1429  0146  2935               	goto	l4111
  1430                           
  1431                           ;main.c: 517: {
  1432                           ;main.c: 518: PA3 = 1;
  1433  0147  1585               	bsf	5,3
  1434  0148  2933               	goto	l4107
  1435  0149                     l4143:	
  1436                           
  1437                           ;main.c: 528: {
  1438                           ;main.c: 529: if(ucTimerDelay1 >= 5)
  1439  0149  3005               	movlw	5
  1440  014A  024C               	subwf	main@ucTimerDelay1,w
  1441  014B  1C03               	skipc
  1442  014C  2935               	goto	l4111
  1443                           
  1444                           ;main.c: 530: {
  1445                           ;main.c: 531: PA0 = 0;
  1446  014D  1005               	bcf	5,0
  1447                           
  1448                           ;main.c: 532: PA1 = 0;
  1449  014E  1085               	bcf	5,1
  1450                           
  1451                           ;main.c: 533: PA2 = 0;
  1452  014F  1105               	bcf	5,2
  1453                           
  1454                           ;main.c: 534: PA3 = 0;
  1455  0150  1185               	bcf	5,3
  1456  0151  2933               	goto	l4107
  1457  0152                     l4153:	
  1458                           
  1459                           ;main.c: 544: {
  1460                           ;main.c: 545: if(ucTimerDelay1 >= 2)
  1461  0152  3002               	movlw	2
  1462  0153  024C               	subwf	main@ucTimerDelay1,w
  1463  0154  1C03               	skipc
  1464  0155  2935               	goto	l4111
  1465                           
  1466                           ;main.c: 546: {
  1467                           ;main.c: 547: ucTimerDelay1 = 0;
  1468  0156  01CC               	clrf	main@ucTimerDelay1
  1469                           
  1470                           ;main.c: 549: ucLoaderStep1 = 0;
  1471  0157  01C4               	clrf	main@ucLoaderStep1
  1472  0158  291D               	goto	l4093
  1473  0159                     l4163:	
  1474  0159  0844               	movf	main@ucLoaderStep1,w
  1475                           
  1476                           ; Switch size 1, requested type "space"
  1477                           ; Number of cases is 7, Range of values is 0 to 6
  1478                           ; switch strategies available:
  1479                           ; Name         Instructions Cycles
  1480                           ; direct_byte           21     7 (fixed)
  1481                           ; simple_byte           22    12 (average)
  1482                           ; jumptable            260     6 (fixed)
  1483                           ; rangetable            11     6 (fixed)
  1484                           ; spacedrange           20     9 (fixed)
  1485                           ; locatedrange           7     3 (fixed)
  1486                           ;	Chosen strategy is direct_byte
  1487  015A  0084               	movwf	4
  1488  015B  3007               	movlw	7
  1489  015C  0204               	subwf	4,w
  1490  015D  1803               	skipnc
  1491  015E  2843               	goto	l3949
  1492  015F  3004               	movlw	high S4667
  1493  0160  008A               	movwf	10
  1494  0161  1003               	clrc
  1495  0162  0D04               	rlf	4,w
  1496  0163  3E6E               	addlw	low S4667
  1497  0164  0082               	movwf	2
  1498  0165                     l807:	
  1499                           ;main.c: 571: {
  1500                           ;main.c: 572: case 0:
  1501                           
  1502                           
  1503                           ;main.c: 573: {
  1504                           ;main.c: 574: PB0 = 1;
  1505  0165  1406               	bsf	6,0
  1506                           
  1507                           ;main.c: 575: PA0 = 1;
  1508  0166  1405               	bsf	5,0
  1509  0167                     l4165:	
  1510                           
  1511                           ;main.c: 576: ucLoaderStep2++;
  1512  0167  0AC5               	incf	main@ucLoaderStep2,f
  1513                           
  1514                           ;main.c: 577: break;
  1515  0168  2843               	goto	l3949
  1516  0169                     l4167:	
  1517                           
  1518                           ;main.c: 581: {
  1519                           ;main.c: 582: if(ucTimerDelay2 >= 5)
  1520  0169  3005               	movlw	5
  1521  016A  024D               	subwf	main@ucTimerDelay2,w
  1522  016B  1C03               	skipc
  1523  016C  2970               	goto	l4175
  1524                           
  1525                           ;main.c: 583: {
  1526                           ;main.c: 584: PA1 = 1;
  1527  016D  1485               	bsf	5,1
  1528  016E                     l4171:	
  1529                           
  1530                           ;main.c: 585: ucTimerDelay2 = 0;
  1531  016E  01CD               	clrf	main@ucTimerDelay2
  1532  016F  2967               	goto	l4165
  1533  0170                     l4175:	
  1534                           
  1535                           ;main.c: 588: else
  1536                           ;main.c: 589: ucTimerDelay2++;
  1537  0170  0ACD               	incf	main@ucTimerDelay2,f
  1538  0171  2843               	goto	l3949
  1539  0172                     l4177:	
  1540                           
  1541                           ;main.c: 594: {
  1542                           ;main.c: 595: if(ucTimerDelay2 >= 5)
  1543  0172  3005               	movlw	5
  1544  0173  024D               	subwf	main@ucTimerDelay2,w
  1545  0174  1C03               	skipc
  1546  0175  2970               	goto	l4175
  1547                           
  1548                           ;main.c: 596: {
  1549                           ;main.c: 597: PA2 = 1;
  1550  0176  1505               	bsf	5,2
  1551  0177  296E               	goto	l4171
  1552  0178                     l4187:	
  1553                           
  1554                           ;main.c: 607: {
  1555                           ;main.c: 608: if(ucTimerDelay2 >= 5)
  1556  0178  3005               	movlw	5
  1557  0179  024D               	subwf	main@ucTimerDelay2,w
  1558  017A  1C03               	skipc
  1559  017B  2970               	goto	l4175
  1560                           
  1561                           ;main.c: 609: {
  1562                           ;main.c: 610: PA3 = 1;
  1563  017C  1585               	bsf	5,3
  1564  017D  296E               	goto	l4171
  1565  017E                     l4197:	
  1566                           
  1567                           ;main.c: 620: {
  1568                           ;main.c: 621: if(ucTimerDelay2 >= 5)
  1569  017E  3005               	movlw	5
  1570  017F  024D               	subwf	main@ucTimerDelay2,w
  1571  0180  1C03               	skipc
  1572  0181  2970               	goto	l4175
  1573                           
  1574                           ;main.c: 622: {
  1575                           ;main.c: 624: PA1 = 0;
  1576  0182  1085               	bcf	5,1
  1577                           
  1578                           ;main.c: 625: PA2 = 0;
  1579  0183  1105               	bcf	5,2
  1580                           
  1581                           ;main.c: 626: PA3 = 0;
  1582  0184  1185               	bcf	5,3
  1583  0185  296E               	goto	l4171
  1584  0186                     l4207:	
  1585                           
  1586                           ;main.c: 636: {
  1587                           ;main.c: 637: if(ucTimerDelay2 >= 2)
  1588  0186  3002               	movlw	2
  1589  0187  024D               	subwf	main@ucTimerDelay2,w
  1590  0188  1C03               	skipc
  1591  0189  2970               	goto	l4175
  1592                           
  1593                           ;main.c: 638: {
  1594                           ;main.c: 639: ucTimerDelay2 = 0;
  1595  018A  01CD               	clrf	main@ucTimerDelay2
  1596                           
  1597                           ;main.c: 641: ucLoaderStep2 = 0;
  1598  018B  01C5               	clrf	main@ucLoaderStep2
  1599  018C  291D               	goto	l4093
  1600  018D                     l4217:	
  1601  018D  0845               	movf	main@ucLoaderStep2,w
  1602                           
  1603                           ; Switch size 1, requested type "space"
  1604                           ; Number of cases is 6, Range of values is 0 to 5
  1605                           ; switch strategies available:
  1606                           ; Name         Instructions Cycles
  1607                           ; direct_byte           19     7 (fixed)
  1608                           ; simple_byte           19    10 (average)
  1609                           ; jumptable            260     6 (fixed)
  1610                           ; rangetable            10     6 (fixed)
  1611                           ; spacedrange           18     9 (fixed)
  1612                           ; locatedrange           6     3 (fixed)
  1613                           ;	Chosen strategy is direct_byte
  1614  018E  0084               	movwf	4
  1615  018F  3006               	movlw	6
  1616  0190  0204               	subwf	4,w
  1617  0191  1803               	skipnc
  1618  0192  2843               	goto	l3949
  1619  0193  3004               	movlw	high S4669
  1620  0194  008A               	movwf	10
  1621  0195  1003               	clrc
  1622  0196  0D04               	rlf	4,w
  1623  0197  3E7C               	addlw	low S4669
  1624  0198  0082               	movwf	2
  1625  0199                     l831:	
  1626                           ;main.c: 663: {
  1627                           ;main.c: 664: case 0:
  1628                           
  1629                           
  1630                           ;main.c: 665: {
  1631                           ;main.c: 666: PB0 = 1;
  1632  0199  1406               	bsf	6,0
  1633                           
  1634                           ;main.c: 667: PA0 = 1;
  1635  019A  1405               	bsf	5,0
  1636                           
  1637                           ;main.c: 668: PA1 = 1;
  1638  019B  1485               	bsf	5,1
  1639  019C                     l4219:	
  1640                           
  1641                           ;main.c: 669: ucLoaderStep3++;
  1642  019C  0AC6               	incf	main@ucLoaderStep3,f
  1643                           
  1644                           ;main.c: 670: break;
  1645  019D  2843               	goto	l3949
  1646  019E                     l4221:	
  1647                           
  1648                           ;main.c: 674: {
  1649                           ;main.c: 675: if(ucTimerDelay3 >= 5)
  1650  019E  3005               	movlw	5
  1651  019F  024E               	subwf	main@ucTimerDelay3,w
  1652  01A0  1C03               	skipc
  1653  01A1  29A5               	goto	l4229
  1654                           
  1655                           ;main.c: 676: {
  1656                           ;main.c: 677: PA2 = 1;
  1657  01A2  1505               	bsf	5,2
  1658  01A3                     l4225:	
  1659                           
  1660                           ;main.c: 678: ucTimerDelay3 = 0;
  1661  01A3  01CE               	clrf	main@ucTimerDelay3
  1662  01A4  299C               	goto	l4219
  1663  01A5                     l4229:	
  1664                           
  1665                           ;main.c: 681: else
  1666                           ;main.c: 682: ucTimerDelay3++;
  1667  01A5  0ACE               	incf	main@ucTimerDelay3,f
  1668  01A6  2843               	goto	l3949
  1669  01A7                     l4231:	
  1670                           
  1671                           ;main.c: 687: {
  1672                           ;main.c: 688: if(ucTimerDelay3 >= 5)
  1673  01A7  3005               	movlw	5
  1674  01A8  024E               	subwf	main@ucTimerDelay3,w
  1675  01A9  1C03               	skipc
  1676  01AA  29A5               	goto	l4229
  1677                           
  1678                           ;main.c: 689: {
  1679                           ;main.c: 690: PA3 = 1;
  1680  01AB  1585               	bsf	5,3
  1681  01AC  29A3               	goto	l4225
  1682  01AD                     l4241:	
  1683                           
  1684                           ;main.c: 701: {
  1685                           ;main.c: 702: if(ucTimerDelay3 >= 5)
  1686  01AD  3005               	movlw	5
  1687  01AE  024E               	subwf	main@ucTimerDelay3,w
  1688  01AF  1C03               	skipc
  1689  01B0  29A5               	goto	l4229
  1690                           
  1691                           ;main.c: 703: {
  1692                           ;main.c: 705: PA2 = 0;
  1693  01B1  1105               	bcf	5,2
  1694                           
  1695                           ;main.c: 706: PA3 = 0;
  1696  01B2  1185               	bcf	5,3
  1697  01B3  29A3               	goto	l4225
  1698  01B4                     l4251:	
  1699                           
  1700                           ;main.c: 716: {
  1701                           ;main.c: 717: if(ucTimerDelay3 >= 2)
  1702  01B4  3002               	movlw	2
  1703  01B5  024E               	subwf	main@ucTimerDelay3,w
  1704  01B6  1C03               	skipc
  1705  01B7  29A5               	goto	l4229
  1706                           
  1707                           ;main.c: 718: {
  1708                           ;main.c: 719: ucTimerDelay3 = 0;
  1709  01B8  01CE               	clrf	main@ucTimerDelay3
  1710                           
  1711                           ;main.c: 721: ucLoaderStep3 = 0;
  1712  01B9  01C6               	clrf	main@ucLoaderStep3
  1713  01BA  291D               	goto	l4093
  1714  01BB                     l4261:	
  1715  01BB  0846               	movf	main@ucLoaderStep3,w
  1716                           
  1717                           ; Switch size 1, requested type "space"
  1718                           ; Number of cases is 5, Range of values is 0 to 4
  1719                           ; switch strategies available:
  1720                           ; Name         Instructions Cycles
  1721                           ; simple_byte           16     9 (average)
  1722                           ; direct_byte           17     7 (fixed)
  1723                           ; jumptable            260     6 (fixed)
  1724                           ; rangetable             9     6 (fixed)
  1725                           ; spacedrange           16     9 (fixed)
  1726                           ; locatedrange           5     3 (fixed)
  1727                           ;	Chosen strategy is simple_byte
  1728  01BC  3A00               	xorlw	0	; case 0
  1729  01BD  1903               	skipnz
  1730  01BE  2999               	goto	l831
  1731  01BF  3A01               	xorlw	1	; case 1
  1732  01C0  1903               	skipnz
  1733  01C1  299E               	goto	l4221
  1734  01C2  3A03               	xorlw	3	; case 2
  1735  01C3  1903               	skipnz
  1736  01C4  29A7               	goto	l4231
  1737  01C5  3A01               	xorlw	1	; case 3
  1738  01C6  1903               	skipnz
  1739  01C7  29AD               	goto	l4241
  1740  01C8  3A07               	xorlw	7	; case 4
  1741  01C9  1903               	skipnz
  1742  01CA  29B4               	goto	l4251
  1743  01CB  2865               	goto	l703
  1744  01CC                     l852:	
  1745                           ;main.c: 743: {
  1746                           ;main.c: 744: case 0:
  1747                           
  1748                           
  1749                           ;main.c: 745: {
  1750                           ;main.c: 746: PB0 = 1;
  1751  01CC  1406               	bsf	6,0
  1752                           
  1753                           ;main.c: 747: PA0 = 1;
  1754  01CD  1405               	bsf	5,0
  1755                           
  1756                           ;main.c: 748: PA1 = 1;
  1757  01CE  1485               	bsf	5,1
  1758                           
  1759                           ;main.c: 749: PA2 = 1;
  1760  01CF  1505               	bsf	5,2
  1761  01D0                     l4263:	
  1762                           
  1763                           ;main.c: 750: ucLoaderStep4++;
  1764  01D0  0AC7               	incf	main@ucLoaderStep4,f
  1765                           
  1766                           ;main.c: 751: break;
  1767  01D1  2843               	goto	l3949
  1768  01D2                     l4265:	
  1769                           
  1770                           ;main.c: 755: {
  1771                           ;main.c: 756: if(ucTimerDelay4 >= 5)
  1772  01D2  3005               	movlw	5
  1773  01D3  024F               	subwf	main@ucTimerDelay4,w
  1774  01D4  1C03               	skipc
  1775  01D5  29D9               	goto	l4273
  1776                           
  1777                           ;main.c: 757: {
  1778                           ;main.c: 758: PA3 = 1;
  1779  01D6  1585               	bsf	5,3
  1780  01D7                     l4269:	
  1781                           
  1782                           ;main.c: 759: ucTimerDelay4 = 0;
  1783  01D7  01CF               	clrf	main@ucTimerDelay4
  1784  01D8  29D0               	goto	l4263
  1785  01D9                     l4273:	
  1786                           
  1787                           ;main.c: 762: else
  1788                           ;main.c: 763: ucTimerDelay4++;
  1789  01D9  0ACF               	incf	main@ucTimerDelay4,f
  1790  01DA  2843               	goto	l3949
  1791  01DB                     l4275:	
  1792                           
  1793                           ;main.c: 768: {
  1794                           ;main.c: 769: if(ucTimerDelay4 >= 5)
  1795  01DB  3005               	movlw	5
  1796  01DC  024F               	subwf	main@ucTimerDelay4,w
  1797  01DD  1C03               	skipc
  1798  01DE  29D9               	goto	l4273
  1799                           
  1800                           ;main.c: 770: {
  1801                           ;main.c: 771: PA3 = 0;
  1802  01DF  1185               	bcf	5,3
  1803  01E0  29D7               	goto	l4269
  1804  01E1                     l4285:	
  1805                           
  1806                           ;main.c: 781: {
  1807                           ;main.c: 782: if(ucTimerDelay4 >= 2)
  1808  01E1  3002               	movlw	2
  1809  01E2  024F               	subwf	main@ucTimerDelay4,w
  1810  01E3  1C03               	skipc
  1811  01E4  29D9               	goto	l4273
  1812                           
  1813                           ;main.c: 783: {
  1814                           ;main.c: 784: ucTimerDelay4 = 0;
  1815  01E5  01CF               	clrf	main@ucTimerDelay4
  1816                           
  1817                           ;main.c: 786: ucLoaderStep4 = 0;
  1818  01E6  01C7               	clrf	main@ucLoaderStep4
  1819  01E7  291D               	goto	l4093
  1820  01E8                     l4295:	
  1821  01E8  0847               	movf	main@ucLoaderStep4,w
  1822                           
  1823                           ; Switch size 1, requested type "space"
  1824                           ; Number of cases is 4, Range of values is 0 to 3
  1825                           ; switch strategies available:
  1826                           ; Name         Instructions Cycles
  1827                           ; simple_byte           13     7 (average)
  1828                           ; direct_byte           15     7 (fixed)
  1829                           ; jumptable            260     6 (fixed)
  1830                           ; rangetable             8     6 (fixed)
  1831                           ; spacedrange           14     9 (fixed)
  1832                           ; locatedrange           4     3 (fixed)
  1833                           ;	Chosen strategy is simple_byte
  1834  01E9  3A00               	xorlw	0	; case 0
  1835  01EA  1903               	skipnz
  1836  01EB  29CC               	goto	l852
  1837  01EC  3A01               	xorlw	1	; case 1
  1838  01ED  1903               	skipnz
  1839  01EE  29D2               	goto	l4265
  1840  01EF  3A03               	xorlw	3	; case 2
  1841  01F0  1903               	skipnz
  1842  01F1  29DB               	goto	l4275
  1843  01F2  3A01               	xorlw	1	; case 3
  1844  01F3  1903               	skipnz
  1845  01F4  29E1               	goto	l4285
  1846  01F5  2865               	goto	l703
  1847  01F6                     l4299:	
  1848  01F6  0842               	movf	main@ucChannel4Type,w
  1849                           
  1850                           ; Switch size 1, requested type "space"
  1851                           ; Number of cases is 5, Range of values is 0 to 4
  1852                           ; switch strategies available:
  1853                           ; Name         Instructions Cycles
  1854                           ; simple_byte           16     9 (average)
  1855                           ; direct_byte           17     7 (fixed)
  1856                           ; jumptable            260     6 (fixed)
  1857                           ; rangetable             9     6 (fixed)
  1858                           ; spacedrange           16     9 (fixed)
  1859                           ; locatedrange           5     3 (fixed)
  1860                           ;	Chosen strategy is simple_byte
  1861  01F7  3A00               	xorlw	0	; case 0
  1862  01F8  1903               	skipnz
  1863  01F9  291F               	goto	l4099
  1864  01FA  3A01               	xorlw	1	; case 1
  1865  01FB  1903               	skipnz
  1866  01FC  2959               	goto	l4163
  1867  01FD  3A03               	xorlw	3	; case 2
  1868  01FE  1903               	skipnz
  1869  01FF  298D               	goto	l4217
  1870  0200  3A01               	xorlw	1	; case 3
  1871  0201  1903               	skipnz
  1872  0202  29BB               	goto	l4261
  1873  0203  3A07               	xorlw	7	; case 4
  1874  0204  1903               	skipnz
  1875  0205  29E8               	goto	l4295
  1876  0206  2865               	goto	l703
  1877  0207                     l4301:	
  1878                           
  1879                           ;main.c: 810: {
  1880                           ;main.c: 811: if(isFinishedTwentySecondsTimer())
  1881  0207  118A  24C1  118A   	fcall	_isFinishedTwentySecondsTimer
  1882  020A  3A00               	xorlw	0
  1883  020B  1903               	skipnz
  1884  020C  28B7               	goto	l4017
  1885                           
  1886                           ;main.c: 812: {
  1887                           ;main.c: 813: PBOD6 =0;
  1888  020D  1683               	bsf	3,5	;RP0=1, select bank3
  1889  020E  1703               	bsf	3,6	;RP1=1, select bank3
  1890  020F  1308               	bcf	8,6
  1891                           
  1892                           ;main.c: 814: PB6 = 1;
  1893  0210  1283               	bcf	3,5	;RP0=0, select bank0
  1894  0211  1303               	bcf	3,6	;RP1=0, select bank0
  1895  0212  1706               	bsf	6,6
  1896                           
  1897                           ;main.c: 815: PA6 = 0;
  1898  0213  1305               	bcf	5,6
  1899                           
  1900                           ;main.c: 822: if((getAdOriginalCh14Value() > 3900))
  1901  0214  118A  24DA  118A   	fcall	_getAdOriginalCh14Value
  1902  0217  300F               	movlw	15
  1903  0218  0257               	subwf	?_getAdOriginalCh14Value+1,w
  1904  0219  303D               	movlw	61
  1905  021A  1903               	skipnz
  1906  021B  0256               	subwf	?_getAdOriginalCh14Value,w
  1907  021C  1C03               	skipc
  1908  021D  2A20               	goto	l4309
  1909                           
  1910                           ;main.c: 823: DACR0=0x0F;
  1911  021E  300F               	movlw	15
  1912  021F  2A21               	goto	L9
  1913  0220                     l4309:	
  1914                           
  1915                           ;main.c: 824: else
  1916                           ;main.c: 825: DACR0=0x07;
  1917  0220  3007               	movlw	7
  1918  0221                     L9:	
  1919  0221  1683               	bsf	3,5	;RP0=1, select bank1
  1920  0222  0088               	movwf	8	;volatile
  1921                           
  1922                           ;main.c: 827: ucADC4_Step = ADC4_STEP_FOURTH;
  1923  0223  3004               	movlw	4
  1924  0224  1283               	bcf	3,5	;RP0=0, select bank0
  1925  0225                     L8:	
  1926  0225  00C1               	movwf	main@ucADC4_Step
  1927                           
  1928                           ;main.c: 828: }
  1929  0226  2843               	goto	l3949
  1930  0227                     l4311:	
  1931                           
  1932                           ;main.c: 836: {
  1933                           ;main.c: 837: static unsigned char ucTimer1s = 0;
  1934                           ;main.c: 838: if(ucTimer1s < 10)
  1935  0227  300A               	movlw	10
  1936  0228  0248               	subwf	main@ucTimer1s,w
  1937  0229  1803               	skipnc
  1938  022A  2A2D               	goto	l4315
  1939                           
  1940                           ;main.c: 839: {
  1941                           ;main.c: 840: ucTimer1s++;
  1942  022B  0AC8               	incf	main@ucTimer1s,f
  1943                           
  1944                           ;main.c: 841: }
  1945  022C  2843               	goto	l3949
  1946  022D                     l4315:	
  1947                           
  1948                           ;main.c: 842: else
  1949                           ;main.c: 843: {
  1950                           ;main.c: 844: ucTimer1s = 0;
  1951  022D  01C8               	clrf	main@ucTimer1s
  1952                           
  1953                           ;main.c: 845: PBOD6 = 1;
  1954  022E  1683               	bsf	3,5	;RP0=1, select bank3
  1955  022F  1703               	bsf	3,6	;RP1=1, select bank3
  1956  0230  1708               	bsf	8,6
  1957                           
  1958                           ;main.c: 846: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  1959  0231  1283               	bcf	3,5	;RP0=0, select bank0
  1960  0232  1303               	bcf	3,6	;RP1=0, select bank0
  1961  0233  01C0               	clrf	main@enumMainLoopStep
  1962  0234  0AC0               	incf	main@enumMainLoopStep,f
  1963                           
  1964                           ;main.c: 847: ucADC4_Step = ADC4_STEP_INIT;
  1965  0235  01C1               	clrf	main@ucADC4_Step
  1966  0236  2843               	goto	l3949
  1967  0237                     l4323:	
  1968  0237  0841               	movf	main@ucADC4_Step,w
  1969                           
  1970                           ; Switch size 1, requested type "space"
  1971                           ; Number of cases is 5, Range of values is 0 to 4
  1972                           ; switch strategies available:
  1973                           ; Name         Instructions Cycles
  1974                           ; simple_byte           16     9 (average)
  1975                           ; direct_byte           17     7 (fixed)
  1976                           ; jumptable            260     6 (fixed)
  1977                           ; rangetable             9     6 (fixed)
  1978                           ; spacedrange           16     9 (fixed)
  1979                           ; locatedrange           5     3 (fixed)
  1980                           ;	Chosen strategy is simple_byte
  1981  0238  3A00               	xorlw	0	; case 0
  1982  0239  1903               	skipnz
  1983  023A  28B4               	goto	l4015
  1984  023B  3A01               	xorlw	1	; case 1
  1985  023C  1903               	skipnz
  1986  023D  28BA               	goto	l4019
  1987  023E  3A03               	xorlw	3	; case 2
  1988  023F  1903               	skipnz
  1989  0240  29F6               	goto	l4299
  1990  0241  3A01               	xorlw	1	; case 3
  1991  0242  1903               	skipnz
  1992  0243  2A07               	goto	l4301
  1993  0244  3A07               	xorlw	7	; case 4
  1994  0245  1903               	skipnz
  1995  0246  2A27               	goto	l4311
  1996  0247  2865               	goto	l703
  1997  0248                     l880:	
  1998                           ;main.c: 873: {
  1999                           ;main.c: 874: case HOUR_3_BRANCH_STEP_FIRST:
  2000                           
  2001                           
  2002                           ;main.c: 875: {
  2003                           ;main.c: 876: PAOD7 = 1;
  2004  0248  1683               	bsf	3,5	;RP0=1, select bank3
  2005  0249  1703               	bsf	3,6	;RP1=1, select bank3
  2006  024A  1787               	bsf	7,7
  2007                           
  2008                           ;main.c: 877: startThreeHoursTimer();
  2009  024B  118A  24B5  118A   	fcall	_startThreeHoursTimer
  2010                           
  2011                           ;main.c: 879: enumBranchStep = HOUR_3_BRANCH_STEP_SECOND;
  2012  024E  01BE               	clrf	main@enumBranchStep
  2013  024F  0ABE               	incf	main@enumBranchStep,f
  2014                           
  2015                           ;main.c: 880: break;
  2016  0250  2843               	goto	l3949
  2017  0251                     l4329:	
  2018                           
  2019                           ;main.c: 884: {
  2020                           ;main.c: 885: static unsigned char ucTimer20s = 0;
  2021                           ;main.c: 887: if(ucTimer20s < 200)
  2022  0251  30C8               	movlw	200
  2023  0252  0249               	subwf	main@ucTimer20s,w
  2024  0253  1803               	skipnc
  2025  0254  2A57               	goto	l4333
  2026                           
  2027                           ;main.c: 888: ucTimer20s++;
  2028  0255  0AC9               	incf	main@ucTimer20s,f
  2029  0256  2843               	goto	l3949
  2030  0257                     l4333:	
  2031  0257  3002               	movlw	2
  2032                           
  2033                           ;main.c: 889: else
  2034                           ;main.c: 890: {
  2035                           ;main.c: 892: ucTimer20s = 0;
  2036  0258  01C9               	clrf	main@ucTimer20s
  2037                           
  2038                           ;main.c: 893: PB0 = 1;
  2039  0259  1406               	bsf	6,0
  2040                           
  2041                           ;main.c: 894: PA0 = 1;
  2042  025A  1405               	bsf	5,0
  2043                           
  2044                           ;main.c: 895: PA1 = 1;
  2045  025B  1485               	bsf	5,1
  2046                           
  2047                           ;main.c: 896: PA2 = 1;
  2048  025C  1505               	bsf	5,2
  2049                           
  2050                           ;main.c: 897: PA3 = 1;
  2051  025D  1585               	bsf	5,3
  2052                           
  2053                           ;main.c: 898: PA6 = 0;
  2054  025E  1305               	bcf	5,6
  2055                           
  2056                           ;main.c: 899: enumBranchStep = HOUR_3_BRANCH_STEP_THIRD;
  2057  025F  00BE               	movwf	main@enumBranchStep
  2058  0260  2843               	goto	l3949
  2059  0261                     l4349:	
  2060                           
  2061                           ;main.c: 905: {
  2062                           ;main.c: 906: if(isFinishedThreeHoursTimer())
  2063  0261  118A  24BC  118A   	fcall	_isFinishedThreeHoursTimer
  2064  0264  3A00               	xorlw	0
  2065  0265  1903               	skipnz
  2066  0266  2A69               	goto	l4355
  2067                           
  2068                           ;main.c: 907: {
  2069                           ;main.c: 908: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2070  0267  01BE               	clrf	main@enumBranchStep
  2071  0268  28B1               	goto	l4013
  2072  0269                     l4355:	
  2073                           
  2074                           ;main.c: 911: else
  2075                           ;main.c: 912: {
  2076                           ;main.c: 913: static unsigned char ucTimerX1P5s = 0;
  2077                           ;main.c: 915: if(getAdOriginalCh1Value() < 130)
  2078  0269  118A  24D5  118A   	fcall	_getAdOriginalCh1Value
  2079  026C  3000               	movlw	0
  2080  026D  0257               	subwf	?_getAdOriginalCh1Value+1,w
  2081  026E  3082               	movlw	130
  2082  026F  1903               	skipnz
  2083  0270  0256               	subwf	?_getAdOriginalCh1Value,w
  2084  0271  1803               	skipnc
  2085  0272  2A75               	goto	l4359
  2086                           
  2087                           ;main.c: 916: {
  2088                           ;main.c: 917: ucTimerX1P5s = 0;
  2089  0273  01D2               	clrf	main@ucTimerX1P5s
  2090                           
  2091                           ;main.c: 918: }
  2092  0274  2A76               	goto	l4361
  2093  0275                     l4359:	
  2094                           
  2095                           ;main.c: 919: else
  2096                           ;main.c: 920: {
  2097                           ;main.c: 921: ucTimerX1P5s++;
  2098  0275  0AD2               	incf	main@ucTimerX1P5s,f
  2099  0276                     l4361:	
  2100                           
  2101                           ;main.c: 922: }
  2102                           ;main.c: 924: if(ucTimerX1P5s >= 1)
  2103  0276  0852               	movf	main@ucTimerX1P5s,w
  2104  0277  1903               	btfsc	3,2
  2105  0278  2A85               	goto	l4375
  2106                           
  2107                           ;main.c: 925: {
  2108                           ;main.c: 926: ucTimerX1P5s = 0;
  2109  0279  01D2               	clrf	main@ucTimerX1P5s
  2110                           
  2111                           ;main.c: 927: PAOD7 = 0;
  2112  027A  1683               	bsf	3,5	;RP0=1, select bank3
  2113  027B  1703               	bsf	3,6	;RP1=1, select bank3
  2114  027C  1387               	bcf	7,7
  2115                           
  2116                           ;main.c: 928: PA7 = 0;
  2117  027D  1283               	bcf	3,5	;RP0=0, select bank0
  2118  027E  1303               	bcf	3,6	;RP1=0, select bank0
  2119  027F  1385               	bcf	5,7
  2120                           
  2121                           ;main.c: 929: clearThreeHoursTimer();
  2122  0280  118A  244A  118A   	fcall	_clearThreeHoursTimer
  2123                           
  2124                           ;main.c: 931: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2125  0283  01BE               	clrf	main@enumBranchStep
  2126  0284  2877               	goto	l3977
  2127  0285                     l4375:	
  2128                           
  2129                           ;main.c: 935: else
  2130                           ;main.c: 936: {
  2131                           ;main.c: 937: static unsigned char ucTimerX2P5s = 0;
  2132                           ;main.c: 939: if(getAdOriginalCh14Value() >= 1950)
  2133  0285  118A  24DA  118A   	fcall	_getAdOriginalCh14Value
  2134  0288  3007               	movlw	7
  2135  0289  0257               	subwf	?_getAdOriginalCh14Value+1,w
  2136  028A  309E               	movlw	158
  2137  028B  1903               	skipnz
  2138  028C  0256               	subwf	?_getAdOriginalCh14Value,w
  2139  028D  1C03               	skipc
  2140  028E  2A91               	goto	l4379
  2141                           
  2142                           ;main.c: 940: {
  2143                           ;main.c: 941: ucTimerX2P5s++;
  2144  028F  0AD3               	incf	main@ucTimerX2P5s,f
  2145                           
  2146                           ;main.c: 942: }
  2147  0290  2A92               	goto	l4381
  2148  0291                     l4379:	
  2149                           
  2150                           ;main.c: 943: else
  2151                           ;main.c: 944: {
  2152                           ;main.c: 945: ucTimerX2P5s = 0;
  2153  0291  01D3               	clrf	main@ucTimerX2P5s
  2154  0292                     l4381:	
  2155                           
  2156                           ;main.c: 946: }
  2157                           ;main.c: 948: if(ucTimerX2P5s >= 1)
  2158  0292  0853               	movf	main@ucTimerX2P5s,w
  2159  0293  1903               	btfsc	3,2
  2160  0294  2A97               	goto	l4385
  2161                           
  2162                           ;main.c: 949: {
  2163                           ;main.c: 950: ucTimerX2P5s = 0;
  2164  0295  01D3               	clrf	main@ucTimerX2P5s
  2165                           
  2166                           ;main.c: 951: }
  2167  0296  2843               	goto	l3949
  2168  0297                     l4385:	
  2169                           
  2170                           ;main.c: 952: else
  2171                           ;main.c: 953: {
  2172                           ;main.c: 954: clearPinPortAndTimer();
  2173  0297  118A  2436  118A   	fcall	_clearPinPortAndTimer
  2174  029A  2863               	goto	l3967
  2175  029B                     l4391:	
  2176  029B  083E               	movf	main@enumBranchStep,w
  2177                           
  2178                           ; Switch size 1, requested type "space"
  2179                           ; Number of cases is 3, Range of values is 0 to 2
  2180                           ; switch strategies available:
  2181                           ; Name         Instructions Cycles
  2182                           ; simple_byte           10     6 (average)
  2183                           ; direct_byte           13     7 (fixed)
  2184                           ; jumptable            260     6 (fixed)
  2185                           ; rangetable             7     6 (fixed)
  2186                           ; spacedrange           12     9 (fixed)
  2187                           ; locatedrange           3     3 (fixed)
  2188                           ;	Chosen strategy is simple_byte
  2189  029C  3A00               	xorlw	0	; case 0
  2190  029D  1903               	skipnz
  2191  029E  2A48               	goto	l880
  2192  029F  3A01               	xorlw	1	; case 1
  2193  02A0  1903               	skipnz
  2194  02A1  2A51               	goto	l4329
  2195  02A2  3A03               	xorlw	3	; case 2
  2196  02A3  1903               	skipnz
  2197  02A4  2A61               	goto	l4349
  2198  02A5  2865               	goto	l703
  2199  02A6                     l907:	
  2200                           ;main.c: 984: {
  2201                           ;main.c: 985: case INTERNAL_FIRST_STEP:
  2202                           
  2203                           
  2204                           ;main.c: 986: {
  2205                           ;main.c: 987: PB0 = 0;
  2206  02A6  1006               	bcf	6,0
  2207                           
  2208                           ;main.c: 988: PB1 = 0;
  2209  02A7  1086               	bcf	6,1
  2210                           
  2211                           ;main.c: 989: PA0 = 0;
  2212  02A8  1005               	bcf	5,0
  2213                           
  2214                           ;main.c: 990: PA1 = 0;
  2215  02A9  1085               	bcf	5,1
  2216                           
  2217                           ;main.c: 991: PA2 = 0;
  2218  02AA  1105               	bcf	5,2
  2219                           
  2220                           ;main.c: 992: PA3 = 0;
  2221  02AB  1185               	bcf	5,3
  2222                           
  2223                           ;main.c: 993: PBOD6 = 0;
  2224  02AC  1683               	bsf	3,5	;RP0=1, select bank3
  2225  02AD  1703               	bsf	3,6	;RP1=1, select bank3
  2226  02AE  1308               	bcf	8,6
  2227                           
  2228                           ;main.c: 994: PB6 = 1;
  2229  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  2230  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  2231  02B1  1706               	bsf	6,6
  2232                           
  2233                           ;main.c: 995: PA6 =0;
  2234  02B2  1305               	bcf	5,6
  2235                           
  2236                           ;main.c: 997: enumInteralStep = INTERNAL_SECOND_STEP;
  2237  02B3  01BF               	clrf	main@enumInteralStep
  2238  02B4  0ABF               	incf	main@enumInteralStep,f
  2239                           
  2240                           ;main.c: 998: break;
  2241  02B5  2843               	goto	l3949
  2242  02B6                     l4393:	
  2243                           
  2244                           ;main.c: 1002: {
  2245                           ;main.c: 1003: static unsigned char ucTimer1s = 0;
  2246                           ;main.c: 1005: if(getAdOriginalCh14Value() <= 1000)
  2247  02B6  118A  24DA  118A   	fcall	_getAdOriginalCh14Value
  2248  02B9  3003               	movlw	3
  2249  02BA  0257               	subwf	?_getAdOriginalCh14Value+1,w
  2250  02BB  30E9               	movlw	233
  2251  02BC  1903               	skipnz
  2252  02BD  0256               	subwf	?_getAdOriginalCh14Value,w
  2253  02BE  1803               	skipnc
  2254  02BF  2AC2               	goto	l4397
  2255                           
  2256                           ;main.c: 1006: {
  2257                           ;main.c: 1007: ucTimer1s++;
  2258  02C0  0ABD               	incf	main@cTimer1s_806,f
  2259                           
  2260                           ;main.c: 1008: }
  2261  02C1  2AC3               	goto	l4399
  2262  02C2                     l4397:	
  2263                           
  2264                           ;main.c: 1009: else
  2265                           ;main.c: 1010: ucTimer1s = 0;
  2266  02C2  01BD               	clrf	main@cTimer1s_806
  2267  02C3                     l4399:	
  2268                           
  2269                           ;main.c: 1012: if(ucTimer1s >= 10)
  2270  02C3  300A               	movlw	10
  2271  02C4  023D               	subwf	main@cTimer1s_806,w
  2272  02C5  1C03               	skipc
  2273  02C6  2843               	goto	l3949
  2274                           
  2275                           ;main.c: 1013: {
  2276                           ;main.c: 1014: enumInteralStep = INTERNAL_THIRD_STEP;
  2277  02C7  3002               	movlw	2
  2278  02C8  00BF               	movwf	main@enumInteralStep
  2279                           
  2280                           ;main.c: 1015: ucTimer1s = 0;
  2281  02C9  01BD               	clrf	main@cTimer1s_806
  2282  02CA  2843               	goto	l3949
  2283  02CB                     l4405:	
  2284                           
  2285                           ;main.c: 1021: {
  2286                           ;main.c: 1022: static unsigned char ucTimerP3s = 0;
  2287                           ;main.c: 1024: if(getAdOriginalCh14Value() >= 1950)
  2288  02CB  118A  24DA  118A   	fcall	_getAdOriginalCh14Value
  2289  02CE  3007               	movlw	7
  2290  02CF  0257               	subwf	?_getAdOriginalCh14Value+1,w
  2291  02D0  309E               	movlw	158
  2292  02D1  1903               	skipnz
  2293  02D2  0256               	subwf	?_getAdOriginalCh14Value,w
  2294  02D3  1C03               	skipc
  2295  02D4  2AD7               	goto	l4409
  2296                           
  2297                           ;main.c: 1025: {
  2298                           ;main.c: 1026: ucTimerP3s++;
  2299  02D5  0AD0               	incf	main@ucTimerP3s,f
  2300                           
  2301                           ;main.c: 1027: }
  2302  02D6  2AD8               	goto	l4411
  2303  02D7                     l4409:	
  2304                           
  2305                           ;main.c: 1028: else
  2306                           ;main.c: 1029: ucTimerP3s = 0;
  2307  02D7  01D0               	clrf	main@ucTimerP3s
  2308  02D8                     l4411:	
  2309                           
  2310                           ;main.c: 1031: if(ucTimerP3s >= 3)
  2311  02D8  3003               	movlw	3
  2312  02D9  0250               	subwf	main@ucTimerP3s,w
  2313  02DA  1C03               	skipc
  2314  02DB  2843               	goto	l3949
  2315                           
  2316                           ;main.c: 1032: {
  2317                           ;main.c: 1033: enumInteralStep = INTERNAL_FIRST_STEP;
  2318  02DC  01BF               	clrf	main@enumInteralStep
  2319                           
  2320                           ;main.c: 1034: ucTimerP3s = 0;
  2321  02DD  01D0               	clrf	main@ucTimerP3s
  2322                           
  2323                           ;main.c: 1035: clearAllTimer();
  2324  02DE  118A  2442  118A   	fcall	_clearAllTimer
  2325                           
  2326                           ;main.c: 1037: DACR0=0x0F;
  2327  02E1  300F               	movlw	15
  2328  02E2  1683               	bsf	3,5	;RP0=1, select bank1
  2329  02E3  0088               	movwf	8	;volatile
  2330                           
  2331                           ;main.c: 1038: PBOD6 = 1;
  2332  02E4  1703               	bsf	3,6	;RP1=1, select bank3
  2333  02E5  1708               	bsf	8,6
  2334                           
  2335                           ;main.c: 1040: PA0 = 0;
  2336  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  2337  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  2338  02E8  1005               	bcf	5,0
  2339                           
  2340                           ;main.c: 1041: PA1 = 0;
  2341  02E9  1085               	bcf	5,1
  2342                           
  2343                           ;main.c: 1042: PA2 = 0;
  2344  02EA  1105               	bcf	5,2
  2345                           
  2346                           ;main.c: 1043: PA3 = 1;
  2347  02EB  1585               	bsf	5,3
  2348                           
  2349                           ;main.c: 1044: PB0 = 0;
  2350  02EC  1006               	bcf	6,0
  2351                           
  2352                           ;main.c: 1045: PB1 = 0;
  2353  02ED  1086               	bcf	6,1
  2354                           
  2355                           ;main.c: 1046: PA6 = 0;
  2356  02EE  1305               	bcf	5,6
  2357                           
  2358                           ;main.c: 1047: PAOD7 = 0;
  2359  02EF  1683               	bsf	3,5	;RP0=1, select bank3
  2360  02F0  1703               	bsf	3,6	;RP1=1, select bank3
  2361  02F1  1387               	bcf	7,7
  2362                           
  2363                           ;main.c: 1048: PA7 = 0;
  2364  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  2365  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  2366  02F4  1385               	bcf	5,7
  2367                           
  2368                           ;main.c: 1051: enumMainLoopStep = MAIN_LOOP_STEP_INIT;
  2369  02F5  01C0               	clrf	main@enumMainLoopStep
  2370  02F6  2843               	goto	l3949
  2371  02F7                     l4443:	
  2372  02F7  083F               	movf	main@enumInteralStep,w
  2373                           
  2374                           ; Switch size 1, requested type "space"
  2375                           ; Number of cases is 3, Range of values is 0 to 2
  2376                           ; switch strategies available:
  2377                           ; Name         Instructions Cycles
  2378                           ; simple_byte           10     6 (average)
  2379                           ; direct_byte           13     7 (fixed)
  2380                           ; jumptable            260     6 (fixed)
  2381                           ; rangetable             7     6 (fixed)
  2382                           ; spacedrange           12     9 (fixed)
  2383                           ; locatedrange           3     3 (fixed)
  2384                           ;	Chosen strategy is simple_byte
  2385  02F8  3A00               	xorlw	0	; case 0
  2386  02F9  1903               	skipnz
  2387  02FA  2AA6               	goto	l907
  2388  02FB  3A01               	xorlw	1	; case 1
  2389  02FC  1903               	skipnz
  2390  02FD  2AB6               	goto	l4393
  2391  02FE  3A03               	xorlw	3	; case 2
  2392  02FF  1903               	skipnz
  2393  0300  2ACB               	goto	l4405
  2394  0301  2865               	goto	l703
  2395  0302                     l4447:	
  2396  0302  1283               	bcf	3,5	;RP0=0, select bank0
  2397  0303  1303               	bcf	3,6	;RP1=0, select bank0
  2398  0304  0840               	movf	main@enumMainLoopStep,w
  2399                           
  2400                           ; Switch size 1, requested type "space"
  2401                           ; Number of cases is 8, Range of values is 0 to 9
  2402                           ; switch strategies available:
  2403                           ; Name         Instructions Cycles
  2404                           ; simple_byte           25    13 (average)
  2405                           ; direct_byte           27     7 (fixed)
  2406                           ; jumptable            260     6 (fixed)
  2407                           ; rangetable            14     6 (fixed)
  2408                           ; spacedrange           26     9 (fixed)
  2409                           ; locatedrange          10     3 (fixed)
  2410                           ;	Chosen strategy is simple_byte
  2411  0305  3A00               	xorlw	0	; case 0
  2412  0306  1903               	skipnz
  2413  0307  2851               	goto	l3957
  2414  0308  3A01               	xorlw	1	; case 1
  2415  0309  1903               	skipnz
  2416  030A  2866               	goto	l3969
  2417  030B  3A03               	xorlw	3	; case 2
  2418  030C  1903               	skipnz
  2419  030D  287D               	goto	l712
  2420  030E  3A01               	xorlw	1	; case 3
  2421  030F  1903               	skipnz
  2422  0310  2880               	goto	l3983
  2423  0311  3A07               	xorlw	7	; case 4
  2424  0312  1903               	skipnz
  2425  0313  28A6               	goto	l4007
  2426  0314  3A01               	xorlw	1	; case 5
  2427  0315  1903               	skipnz
  2428  0316  28AB               	goto	l4011
  2429  0317  3A0D               	xorlw	13	; case 8
  2430  0318  1903               	skipnz
  2431  0319  2A9B               	goto	l4391
  2432  031A  3A01               	xorlw	1	; case 9
  2433  031B  1903               	skipnz
  2434  031C  2AF7               	goto	l4443
  2435  031D  2865               	goto	l703
  2436  031E  118A  280B         	ljmp	start
  2437  0320                     __end_of_main:	
  2438                           
  2439                           	psect	swtext1
  2440  0460                     __pswtext1:	
  2441  0460                     S4665:	
  2442  0460  118A  28EF         	ljmp	l752
  2443  0462  118A  28F2         	ljmp	l4039
  2444  0464  118A  28FB         	ljmp	l4049
  2445  0466  118A  2901         	ljmp	l4059
  2446  0468  118A  2907         	ljmp	l4069
  2447  046A  118A  290D         	ljmp	l4079
  2448  046C  118A  2917         	ljmp	l4089
  2449                           
  2450                           	psect	swtext2
  2451  046E                     __pswtext2:	
  2452  046E                     S4667:	
  2453  046E  118A  292B         	ljmp	l780
  2454  0470  118A  292E         	ljmp	l4103
  2455  0472  118A  2937         	ljmp	l4113
  2456  0474  118A  293D         	ljmp	l4123
  2457  0476  118A  2943         	ljmp	l4133
  2458  0478  118A  2949         	ljmp	l4143
  2459  047A  118A  2952         	ljmp	l4153
  2460                           
  2461                           	psect	swtext3
  2462  047C                     __pswtext3:	
  2463  047C                     S4669:	
  2464  047C  118A  2965         	ljmp	l807
  2465  047E  118A  2969         	ljmp	l4167
  2466  0480  118A  2972         	ljmp	l4177
  2467  0482  118A  2978         	ljmp	l4187
  2468  0484  118A  297E         	ljmp	l4197
  2469  0486  118A  2986         	ljmp	l4207
  2470                           
  2471                           	psect	text583
  2472  0320                     __ptext583:	
  2473 ;; =============== function _main ends ============
  2474                           
  2475                           
  2476 ;; *************** function _process_AD_Converter_Value *****************
  2477 ;; Defined at:
  2478 ;;		line 102 in file "C:\190604\AK7030-OTP\common.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;		None
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;		None
  2483 ;; Return value:  Size  Location     Type
  2484 ;;		None               void
  2485 ;; Registers used:
  2486 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: FFE9F/0
  2491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2492 ;;      Params:         0       0       0       0       0
  2493 ;;      Locals:         0       0       0       0       0
  2494 ;;      Temps:          0       0       0       0       0
  2495 ;;      Totals:         0       0       0       0       0
  2496 ;;Total ram usage:        0 bytes
  2497 ;; Hardware stack levels used:    1
  2498 ;; Hardware stack levels required when called:    4
  2499 ;; This function calls:
  2500 ;;		_getAD_ConvertFlag
  2501 ;;		_setAD_ConvertFlag
  2502 ;;		_AD_Sample
  2503 ;;		_adc_test_init
  2504 ;;		_adc_start
  2505 ;; This function is called by:
  2506 ;;		_main
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509  0320                     _process_AD_Converter_Value:	
  2510                           
  2511                           ;common.c: 67: return adc_convert_flag;
  2512                           
  2513                           ; Regs used in _getAD_ConvertFlag: [wreg]
  2514                           
  2515                           ;common.c: 103: if(getAD_ConvertFlag())
  2516                           
  2517                           ; Regs used in _process_AD_Converter_Value: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2518  0320  0879               	movf	_adc_convert_flag,w
  2519  0321  3A00               	xorlw	0
  2520  0322  1903               	skipnz
  2521  0323  0008               	return
  2522                           
  2523                           ;common.c: 104: {
  2524                           ;common.c: 105: setAD_ConvertFlag(0);
  2525  0324  3000               	movlw	0
  2526  0325  233F  118A         	fcall	_setAD_ConvertFlag
  2527                           
  2528                           ;common.c: 106: AD_Sample();
  2529  0327  2344  118A         	fcall	_AD_Sample
  2530                           
  2531                           ;common.c: 107: if(4 == sampleChannelSelect)
  2532  0329  085B               	movf	_sampleChannelSelect,w
  2533  032A  3A04               	xorlw	4
  2534  032B  1D03               	skipz
  2535  032C  2B31               	goto	l3925
  2536                           
  2537                           ;common.c: 108: adc_test_init(4,3);
  2538  032D  3003               	movlw	3
  2539  032E  00D6               	movwf	?_adc_test_init
  2540  032F  3004               	movlw	4
  2541  0330  2B3A               	goto	L10
  2542  0331                     l3925:	
  2543                           
  2544                           ;common.c: 109: else if(1 == sampleChannelSelect)
  2545  0331  0B5B               	decfsz	_sampleChannelSelect,w
  2546  0332  2B37               	goto	l3929
  2547                           
  2548                           ;common.c: 110: adc_test_init(1,3);
  2549  0333  3003               	movlw	3
  2550  0334  00D6               	movwf	?_adc_test_init
  2551  0335  3001               	movlw	1
  2552  0336  2B3A               	goto	L10
  2553  0337                     l3929:	
  2554                           
  2555                           ;common.c: 111: else
  2556                           ;common.c: 112: adc_test_init(14,3);
  2557  0337  3003               	movlw	3
  2558  0338  00D6               	movwf	?_adc_test_init
  2559  0339  300E               	movlw	14
  2560  033A                     L10:	
  2561  033A  23AC  118A         	fcall	_adc_test_init
  2562                           
  2563                           ;common.c: 114: adc_start();
  2564  033C  2BC1               	ljmp	l3741
  2565  033D                     __end_of_process_AD_Converter_Value:	
  2566  033D                     __ptext589:	
  2567 ;; =============== function _setAD_ConvertFlag ends ============
  2568                           
  2569                           
  2570 ;; *************** function _getAD_ConvertFlag *****************
  2571 ;; Defined at:
  2572 ;;		line 66 in file "C:\190604\AK7030-OTP\common.c"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;		None
  2575 ;; Auto vars:     Size  Location     Type
  2576 ;;		None
  2577 ;; Return value:  Size  Location     Type
  2578 ;;                  1    wreg      unsigned char 
  2579 ;; Registers used:
  2580 ;;		wreg
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/0
  2583 ;;		On exit  : 0/0
  2584 ;;		Unchanged: FFFFF/0
  2585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2586 ;;      Params:         0       0       0       0       0
  2587 ;;      Locals:         0       0       0       0       0
  2588 ;;      Temps:          0       0       0       0       0
  2589 ;;      Totals:         0       0       0       0       0
  2590 ;;Total ram usage:        0 bytes
  2591 ;; Hardware stack levels used:    1
  2592 ;; Hardware stack levels required when called:    2
  2593 ;; This function calls:
  2594 ;;		Nothing
  2595 ;; This function is called by:
  2596 ;;		_process_AD_Converter_Value
  2597 ;; This function uses a non-reentrant model
  2598 ;;
  2599  033D                     _getAD_ConvertFlag:	
  2600                           
  2601                           ;common.c: 67: return adc_convert_flag;
  2602                           
  2603                           ; Regs used in _getAD_ConvertFlag: [wreg]
  2604  033D  0879               	movf	_adc_convert_flag,w
  2605  033E  0008               	return
  2606  033F                     __end_of_getAD_ConvertFlag:	
  2607  033F                     __ptext588:	
  2608 ;; =============== function _getAdOriginalValue ends ============
  2609                           
  2610                           
  2611 ;; *************** function _setAD_ConvertFlag *****************
  2612 ;; Defined at:
  2613 ;;		line 72 in file "C:\190604\AK7030-OTP\common.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;  flag            1    wreg     unsigned char 
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;  flag            1    0[BANK0 ] unsigned char 
  2618 ;; Return value:  Size  Location     Type
  2619 ;;		None               void
  2620 ;; Registers used:
  2621 ;;		wreg
  2622 ;; Tracked objects:
  2623 ;;		On entry : 0/0
  2624 ;;		On exit  : 60/0
  2625 ;;		Unchanged: FFF9F/0
  2626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2627 ;;      Params:         0       0       0       0       0
  2628 ;;      Locals:         0       1       0       0       0
  2629 ;;      Temps:          0       0       0       0       0
  2630 ;;      Totals:         0       1       0       0       0
  2631 ;;Total ram usage:        1 bytes
  2632 ;; Hardware stack levels used:    1
  2633 ;; Hardware stack levels required when called:    2
  2634 ;; This function calls:
  2635 ;;		Nothing
  2636 ;; This function is called by:
  2637 ;;		_process_AD_Converter_Value
  2638 ;; This function uses a non-reentrant model
  2639 ;;
  2640  033F                     _setAD_ConvertFlag:	
  2641                           
  2642                           ; Regs used in _setAD_ConvertFlag: [wreg]
  2643                           ;setAD_ConvertFlag@flag stored from wreg
  2644  033F  1283               	bcf	3,5	;RP0=0, select bank0
  2645  0340  1303               	bcf	3,6	;RP1=0, select bank0
  2646  0341  00D6               	movwf	setAD_ConvertFlag@flag
  2647                           
  2648                           ;common.c: 73: adc_convert_flag = flag;
  2649  0342  00F9               	movwf	_adc_convert_flag
  2650  0343  0008               	return
  2651  0344                     __end_of_setAD_ConvertFlag:	
  2652  0344                     __ptext585:	
  2653 ;; =============== function _clearPinPortAndTimer ends ============
  2654                           
  2655                           
  2656 ;; *************** function _AD_Sample *****************
  2657 ;; Defined at:
  2658 ;;		line 128 in file "C:\190604\AK7030-OTP\common.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;		None
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;  index           1    4[BANK0 ] unsigned char 
  2663 ;; Return value:  Size  Location     Type
  2664 ;;		None               void
  2665 ;; Registers used:
  2666 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2667 ;; Tracked objects:
  2668 ;;		On entry : 60/0
  2669 ;;		On exit  : 60/0
  2670 ;;		Unchanged: FFE9F/0
  2671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2672 ;;      Params:         0       0       0       0       0
  2673 ;;      Locals:         0       1       0       0       0
  2674 ;;      Temps:          0       2       0       0       0
  2675 ;;      Totals:         0       3       0       0       0
  2676 ;;Total ram usage:        3 bytes
  2677 ;; Hardware stack levels used:    1
  2678 ;; Hardware stack levels required when called:    3
  2679 ;; This function calls:
  2680 ;;		_getAdOriginalValue
  2681 ;; This function is called by:
  2682 ;;		_process_AD_Converter_Value
  2683 ;; This function uses a non-reentrant model
  2684 ;;
  2685  0344                     _AD_Sample:	
  2686                           
  2687                           ;common.c: 129: if(sampleTimes < 6)
  2688                           
  2689                           ; Regs used in _AD_Sample: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2690  0344  3006               	movlw	6
  2691  0345  023C               	subwf	_sampleTimes,w
  2692  0346  1803               	skipnc
  2693  0347  0008               	return
  2694                           
  2695                           ;common.c: 130: {
  2696                           ;common.c: 132: buffer_Sample_AD_Value[sampleTimes] = getAdOriginalValue();
  2697  0348  23A7  118A         	fcall	_getAdOriginalValue
  2698  034A  1003               	clrc
  2699  034B  0D3C               	rlf	_sampleTimes,w
  2700  034C  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  2701  034D  0084               	movwf	4
  2702  034E  0856               	movf	?_getAdOriginalValue,w
  2703  034F  1383               	bcf	3,7	;select IRP bank0
  2704  0350  0080               	movwf	0
  2705  0351  0A84               	incf	4,f
  2706  0352  0857               	movf	?_getAdOriginalValue+1,w
  2707  0353  0080               	movwf	0
  2708                           
  2709                           ;common.c: 134: if(sampleTimes == 0)
  2710  0354  08BC               	movf	_sampleTimes,f
  2711  0355  1D03               	skipz
  2712  0356  2B5F               	goto	l3873
  2713                           
  2714                           ;common.c: 135: {
  2715                           ;common.c: 136: multiFilterMaxValue = buffer_Sample_AD_Value[0];
  2716  0357  0821               	movf	_buffer_Sample_AD_Value+1,w
  2717  0358  00B5               	movwf	_multiFilterMaxValue+1
  2718  0359  0820               	movf	_buffer_Sample_AD_Value,w
  2719  035A  00B4               	movwf	_multiFilterMaxValue
  2720                           
  2721                           ;common.c: 137: multiFilterMinValue = buffer_Sample_AD_Value[0];
  2722  035B  0821               	movf	_buffer_Sample_AD_Value+1,w
  2723  035C  00B7               	movwf	_multiFilterMinValue+1
  2724  035D  0820               	movf	_buffer_Sample_AD_Value,w
  2725  035E  00B6               	movwf	_multiFilterMinValue
  2726  035F                     l3873:	
  2727                           
  2728                           ;common.c: 138: }
  2729                           ;common.c: 140: if(multiFilterMaxValue < buffer_Sample_AD_Value[sampleTimes])
  2730  035F  23C4  118A         	fcall	PL2	;call to abstracted procedure
  2731  0361  0235               	subwf	_multiFilterMaxValue+1,w
  2732  0362  1D03               	skipz
  2733  0363  2B66               	goto	u915
  2734  0364  0858               	movf	??_AD_Sample,w
  2735  0365  0234               	subwf	_multiFilterMaxValue,w
  2736  0366                     u915:	
  2737  0366  1803               	skipnc
  2738  0367  2B71               	goto	l1640
  2739                           
  2740                           ;common.c: 141: {
  2741                           ;common.c: 142: multiFilterMaxValue = buffer_Sample_AD_Value[sampleTimes];
  2742  0368  1003               	clrc
  2743  0369  0D3C               	rlf	_sampleTimes,w
  2744  036A  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  2745  036B  0084               	movwf	4
  2746  036C  0800               	movf	0,w
  2747  036D  00B4               	movwf	_multiFilterMaxValue
  2748  036E  0A84               	incf	4,f
  2749  036F  0800               	movf	0,w
  2750  0370  00B5               	movwf	_multiFilterMaxValue+1
  2751  0371                     l1640:	
  2752                           
  2753                           ;common.c: 143: }
  2754                           ;common.c: 144: if(multiFilterMinValue > buffer_Sample_AD_Value[sampleTimes])
  2755  0371  23C4  118A         	fcall	PL2	;call to abstracted procedure
  2756  0373  0837               	movf	_multiFilterMinValue+1,w
  2757  0374  0259               	subwf	??_AD_Sample+1,w
  2758  0375  1D03               	skipz
  2759  0376  2B79               	goto	u925
  2760  0377  0836               	movf	_multiFilterMinValue,w
  2761  0378  0258               	subwf	??_AD_Sample,w
  2762  0379                     u925:	
  2763  0379  1803               	skipnc
  2764  037A  2B84               	goto	l3879
  2765                           
  2766                           ;common.c: 145: {
  2767                           ;common.c: 146: multiFilterMinValue = buffer_Sample_AD_Value[sampleTimes];
  2768  037B  1003               	clrc
  2769  037C  0D3C               	rlf	_sampleTimes,w
  2770  037D  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  2771  037E  0084               	movwf	4
  2772  037F  0800               	movf	0,w
  2773  0380  00B6               	movwf	_multiFilterMinValue
  2774  0381  0A84               	incf	4,f
  2775  0382  0800               	movf	0,w
  2776  0383  00B7               	movwf	_multiFilterMinValue+1
  2777  0384                     l3879:	
  2778  0384  3006               	movlw	6
  2779                           
  2780                           ;common.c: 151: sampleTimes++;
  2781  0385  0ABC               	incf	_sampleTimes,f
  2782                           
  2783                           ;common.c: 153: if(sampleTimes >= 6)
  2784  0386  023C               	subwf	_sampleTimes,w
  2785  0387  1C03               	skipc
  2786  0388  0008               	return
  2787                           
  2788                           ;common.c: 154: {
  2789                           ;common.c: 155: sampleTimes = 0;
  2790  0389  01BC               	clrf	_sampleTimes
  2791                           
  2792                           ;common.c: 158: {
  2793                           ;common.c: 160: sampleCH14Value = ((multiFilterSumValue - multiFilterMaxValue - multiFil
      +                          terMinValue))>> 2;
  2794  038A  085B               	movf	_sampleChannelSelect,w
  2795  038B  3A0E               	xorlw	14
  2796  038C  1D03               	skipz
  2797  038D  2B90               	goto	l3889
  2798                           
  2799                           ;common.c: 161: sampleChannelSelect = 4;
  2800  038E  3004               	movlw	4
  2801  038F  2B98               	goto	L11
  2802  0390                     l3889:	
  2803                           ;common.c: 162: }
  2804                           
  2805                           
  2806                           ;common.c: 164: {
  2807                           ;common.c: 165: sampleCH4Value = ((multiFilterSumValue - multiFilterMaxValue - multiFilt
      +                          erMinValue))>> 2;
  2808  0390  085B               	movf	_sampleChannelSelect,w
  2809  0391  3A04               	xorlw	4
  2810  0392  1D03               	skipz
  2811  0393  2B97               	goto	l3895
  2812                           
  2813                           ;common.c: 166: sampleChannelSelect = 1;
  2814  0394  01DB               	clrf	_sampleChannelSelect
  2815  0395  0ADB               	incf	_sampleChannelSelect,f
  2816                           
  2817                           ;common.c: 167: }
  2818  0396  2B99               	goto	l3899
  2819  0397                     l3895:	
  2820                           
  2821                           ;common.c: 171: sampleChannelSelect = 14;
  2822  0397  300E               	movlw	14
  2823  0398                     L11:	
  2824  0398  00DB               	movwf	_sampleChannelSelect
  2825  0399                     l3899:	
  2826                           ;common.c: 172: }
  2827                           
  2828                           
  2829                           ;common.c: 177: }
  2830                           ;common.c: 179: for(unsigned char index = 0; index < 6;index++)
  2831  0399  01DA               	clrf	AD_Sample@index
  2832  039A                     l3905:	
  2833                           
  2834                           ;common.c: 180: buffer_Sample_AD_Value[index] = 0;
  2835  039A  1003               	clrc
  2836  039B  0D5A               	rlf	AD_Sample@index,w
  2837  039C  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  2838  039D  0084               	movwf	4
  2839  039E  3006               	movlw	6
  2840  039F  0180               	clrf	0
  2841  03A0  0A84               	incf	4,f
  2842  03A1  0180               	clrf	0
  2843  03A2  0ADA               	incf	AD_Sample@index,f
  2844  03A3  025A               	subwf	AD_Sample@index,w
  2845  03A4  1803               	btfsc	3,0
  2846  03A5  0008               	return
  2847  03A6  2B9A               	goto	l3905
  2848  03A7                     __end_of_AD_Sample:	
  2849  03A7                     __ptext587:	
  2850 ;; =============== function _clearAllTimer ends ============
  2851                           
  2852                           
  2853 ;; *************** function _getAdOriginalValue *****************
  2854 ;; Defined at:
  2855 ;;		line 78 in file "C:\190604\AK7030-OTP\common.c"
  2856 ;; Parameters:    Size  Location     Type
  2857 ;;		None
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;		None
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  2    0[BANK0 ] unsigned int 
  2862 ;; Registers used:
  2863 ;;		wreg
  2864 ;; Tracked objects:
  2865 ;;		On entry : 60/0
  2866 ;;		On exit  : 60/0
  2867 ;;		Unchanged: FFF9F/0
  2868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2869 ;;      Params:         0       2       0       0       0
  2870 ;;      Locals:         0       0       0       0       0
  2871 ;;      Temps:          0       0       0       0       0
  2872 ;;      Totals:         0       2       0       0       0
  2873 ;;Total ram usage:        2 bytes
  2874 ;; Hardware stack levels used:    1
  2875 ;; Hardware stack levels required when called:    2
  2876 ;; This function calls:
  2877 ;;		Nothing
  2878 ;; This function is called by:
  2879 ;;		_AD_Sample
  2880 ;; This function uses a non-reentrant model
  2881 ;;
  2882  03A7                     _getAdOriginalValue:	
  2883                           
  2884                           ;common.c: 79: return adc_original_value;
  2885                           
  2886                           ; Regs used in _getAdOriginalValue: [wreg]
  2887  03A7  0833               	movf	_adc_original_value+1,w
  2888  03A8  00D7               	movwf	?_getAdOriginalValue+1
  2889  03A9  0832               	movf	_adc_original_value,w
  2890  03AA  00D6               	movwf	?_getAdOriginalValue
  2891  03AB  0008               	return
  2892  03AC                     __end_of_getAdOriginalValue:	
  2893  03AC                     __ptext605:	
  2894 ;; =============== function _dac_init ends ============
  2895                           
  2896                           
  2897 ;; *************** function _adc_test_init *****************
  2898 ;; Defined at:
  2899 ;;		line 85 in file "C:\190604\AK7030-OTP\periph.c"
  2900 ;; Parameters:    Size  Location     Type
  2901 ;;  channel         1    wreg     unsigned char 
  2902 ;;  ref             1    0[BANK0 ] unsigned char 
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;  channel         1    2[BANK0 ] unsigned char 
  2905 ;; Return value:  Size  Location     Type
  2906 ;;		None               void
  2907 ;; Registers used:
  2908 ;;		wreg, status,2, status,0
  2909 ;; Tracked objects:
  2910 ;;		On entry : 60/0
  2911 ;;		On exit  : 60/20
  2912 ;;		Unchanged: FFF9F/0
  2913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2914 ;;      Params:         0       1       0       0       0
  2915 ;;      Locals:         0       1       0       0       0
  2916 ;;      Temps:          0       1       0       0       0
  2917 ;;      Totals:         0       3       0       0       0
  2918 ;;Total ram usage:        3 bytes
  2919 ;; Hardware stack levels used:    1
  2920 ;; Hardware stack levels required when called:    2
  2921 ;; This function calls:
  2922 ;;		Nothing
  2923 ;; This function is called by:
  2924 ;;		_main
  2925 ;;		_process_AD_Converter_Value
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928  03AC                     _adc_test_init:	
  2929                           
  2930                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  2931                           ;adc_test_init@channel stored from wreg
  2932  03AC  00D8               	movwf	adc_test_init@channel
  2933                           
  2934                           ;periph.c: 86: ADCON0 = 0x00;
  2935  03AD  019F               	clrf	31	;volatile
  2936                           
  2937                           ;periph.c: 87: ADCON0|=channel<<2;
  2938  03AE  00D7               	movwf	??_adc_test_init
  2939  03AF  1003               	clrc
  2940  03B0  0DD7               	rlf	??_adc_test_init,f
  2941  03B1  1003               	clrc
  2942  03B2  0D57               	rlf	??_adc_test_init,w
  2943  03B3  049F               	iorwf	31,f	;volatile
  2944                           
  2945                           ;periph.c: 88: ADCON1|=ref<<6;
  2946  03B4  0856               	movf	adc_test_init@ref,w
  2947  03B5  00D7               	movwf	??_adc_test_init
  2948  03B6  0CD7               	rrf	??_adc_test_init,f
  2949  03B7  0CD7               	rrf	??_adc_test_init,f
  2950  03B8  0C57               	rrf	??_adc_test_init,w
  2951  03B9  39C0               	andlw	192
  2952  03BA  1683               	bsf	3,5	;RP0=1, select bank1
  2953  03BB  049F               	iorwf	31,f	;volatile
  2954                           
  2955                           ;periph.c: 89: ADON=1;
  2956  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  2957  03BD  141F               	bsf	31,0
  2958                           
  2959                           ;periph.c: 90: ADIE=1;
  2960  03BE  1683               	bsf	3,5	;RP0=1, select bank1
  2961  03BF  150D               	bsf	13,2
  2962  03C0  0008               	return
  2963  03C1                     __end_of_adc_test_init:	
  2964  03C1                     __ptext601:	
  2965 ;; =============== function _isPermitSampleTime ends ============
  2966                           
  2967                           
  2968 ;; *************** function _adc_start *****************
  2969 ;; Defined at:
  2970 ;;		line 100 in file "C:\190604\AK7030-OTP\periph.c"
  2971 ;; Parameters:    Size  Location     Type
  2972 ;;		None
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;		None
  2975 ;; Return value:  Size  Location     Type
  2976 ;;		None               void
  2977 ;; Registers used:
  2978 ;;		None
  2979 ;; Tracked objects:
  2980 ;;		On entry : 60/20
  2981 ;;		On exit  : 60/0
  2982 ;;		Unchanged: FFF9F/0
  2983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2984 ;;      Params:         0       0       0       0       0
  2985 ;;      Locals:         0       0       0       0       0
  2986 ;;      Temps:          0       0       0       0       0
  2987 ;;      Totals:         0       0       0       0       0
  2988 ;;Total ram usage:        0 bytes
  2989 ;; Hardware stack levels used:    1
  2990 ;; Hardware stack levels required when called:    2
  2991 ;; This function calls:
  2992 ;;		Nothing
  2993 ;; This function is called by:
  2994 ;;		_main
  2995 ;;		_process_AD_Converter_Value
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998  03C1                     _adc_start:	
  2999  03C1                     l3741:	
  3000                           ; Regs used in _adc_start: []
  3001                           
  3002                           
  3003                           ;periph.c: 101: GO=1;
  3004  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  3005  03C2  149F               	bsf	31,1
  3006  03C3  0008               	return
  3007  03C4                     __end_of_adc_start:	
  3008  03C4                     PL2:	
  3009  03C4  1003               	clrc
  3010  03C5  0D3C               	rlf	_sampleTimes,w
  3011  03C6  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  3012  03C7  0084               	movwf	4
  3013  03C8  0800               	movf	0,w
  3014  03C9  00D8               	movwf	??_AD_Sample
  3015  03CA  0A84               	incf	4,f
  3016  03CB  0800               	movf	0,w
  3017  03CC  00D9               	movwf	??_AD_Sample+1
  3018  03CD  0008               	return
  3019                           
  3020                           	psect	text584
  3021  0436                     __ptext584:	
  3022 ;; =============== function _process_AD_Converter_Value ends ============
  3023                           
  3024                           
  3025 ;; *************** function _clearPinPortAndTimer *****************
  3026 ;; Defined at:
  3027 ;;		line 92 in file "C:\190604\AK7030-OTP\main.c"
  3028 ;; Parameters:    Size  Location     Type
  3029 ;;		None
  3030 ;; Auto vars:     Size  Location     Type
  3031 ;;		None
  3032 ;; Return value:  Size  Location     Type
  3033 ;;		None               void
  3034 ;; Registers used:
  3035 ;;		status,2, status,0, pclath, cstack
  3036 ;; Tracked objects:
  3037 ;;		On entry : 60/0
  3038 ;;		On exit  : 60/0
  3039 ;;		Unchanged: FFF9F/0
  3040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3041 ;;      Params:         0       0       0       0       0
  3042 ;;      Locals:         0       0       0       0       0
  3043 ;;      Temps:          0       0       0       0       0
  3044 ;;      Totals:         0       0       0       0       0
  3045 ;;Total ram usage:        0 bytes
  3046 ;; Hardware stack levels used:    1
  3047 ;; Hardware stack levels required when called:    4
  3048 ;; This function calls:
  3049 ;;		_clearAllTimer
  3050 ;; This function is called by:
  3051 ;;		_main
  3052 ;; This function uses a non-reentrant model
  3053 ;;
  3054  0436                     _clearPinPortAndTimer:	
  3055                           
  3056                           ;main.c: 93: PB0 = 0;
  3057                           
  3058                           ; Regs used in _clearPinPortAndTimer: [status,2+status,0+pclath+cstack]
  3059  0436  1006               	bcf	6,0
  3060                           
  3061                           ;main.c: 94: PA0 = 0;
  3062  0437  1005               	bcf	5,0
  3063                           
  3064                           ;main.c: 95: PA1 = 0;
  3065  0438  1085               	bcf	5,1
  3066                           
  3067                           ;main.c: 96: PA2 = 0;
  3068  0439  1105               	bcf	5,2
  3069                           
  3070                           ;main.c: 97: PA3 = 0;
  3071  043A  1185               	bcf	5,3
  3072                           
  3073                           ;main.c: 98: PAOD7 = 0;
  3074  043B  1683               	bsf	3,5	;RP0=1, select bank3
  3075  043C  1703               	bsf	3,6	;RP1=1, select bank3
  3076  043D  1387               	bcf	7,7
  3077                           
  3078                           ;main.c: 99: PA7 = 0;
  3079  043E  1283               	bcf	3,5	;RP0=0, select bank0
  3080  043F  1303               	bcf	3,6	;RP1=0, select bank0
  3081  0440  1385               	bcf	5,7
  3082                           
  3083                           ;main.c: 100: clearAllTimer();
  3084  0441  2C42               	ljmp	l3863
  3085  0442                     __end_of_clearPinPortAndTimer:	
  3086  0442                     __ptext586:	
  3087 ;; =============== function _AD_Sample ends ============
  3088                           
  3089                           
  3090 ;; *************** function _clearAllTimer *****************
  3091 ;; Defined at:
  3092 ;;		line 83 in file "C:\190604\AK7030-OTP\main.c"
  3093 ;; Parameters:    Size  Location     Type
  3094 ;;		None
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;		None
  3097 ;; Return value:  Size  Location     Type
  3098 ;;		None               void
  3099 ;; Registers used:
  3100 ;;		status,2, status,0, pclath, cstack
  3101 ;; Tracked objects:
  3102 ;;		On entry : 60/0
  3103 ;;		On exit  : 60/0
  3104 ;;		Unchanged: FFF9F/0
  3105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3106 ;;      Params:         0       0       0       0       0
  3107 ;;      Locals:         0       0       0       0       0
  3108 ;;      Temps:          0       0       0       0       0
  3109 ;;      Totals:         0       0       0       0       0
  3110 ;;Total ram usage:        0 bytes
  3111 ;; Hardware stack levels used:    1
  3112 ;; Hardware stack levels required when called:    3
  3113 ;; This function calls:
  3114 ;;		_clearTwelveHoursTimer
  3115 ;;		_clearThreeHoursTimer
  3116 ;;		_clearTwentySecondsTimer
  3117 ;; This function is called by:
  3118 ;;		_clearPinPortAndTimer
  3119 ;;		_main
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122  0442                     _clearAllTimer:	
  3123  0442                     l3863:	
  3124                           ; Regs used in _clearAllTimer: [status,2+status,0+pclath+cstack]
  3125                           
  3126                           
  3127                           ;main.c: 84: clearTwelveHoursTimer();
  3128  0442  2447  118A         	fcall	_clearTwelveHoursTimer
  3129                           
  3130                           ;main.c: 85: clearThreeHoursTimer();
  3131  0444  244A  118A         	fcall	_clearThreeHoursTimer
  3132                           
  3133                           ;main.c: 86: clearTwentySecondsTimer();
  3134  0446  2C4D               	ljmp	l3701
  3135  0447                     __end_of_clearAllTimer:	
  3136  0447                     __ptext611:	
  3137 ;; =============== function _clearThreeHoursTimer ends ============
  3138                           
  3139                           
  3140 ;; *************** function _clearTwelveHoursTimer *****************
  3141 ;; Defined at:
  3142 ;;		line 215 in file "C:\190604\AK7030-OTP\common.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;		None
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;		None
  3147 ;; Return value:  Size  Location     Type
  3148 ;;		None               void
  3149 ;; Registers used:
  3150 ;;		status,2
  3151 ;; Tracked objects:
  3152 ;;		On entry : 60/0
  3153 ;;		On exit  : 60/0
  3154 ;;		Unchanged: FFF9F/0
  3155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3156 ;;      Params:         0       0       0       0       0
  3157 ;;      Locals:         0       0       0       0       0
  3158 ;;      Temps:          0       0       0       0       0
  3159 ;;      Totals:         0       0       0       0       0
  3160 ;;Total ram usage:        0 bytes
  3161 ;; Hardware stack levels used:    1
  3162 ;; Hardware stack levels required when called:    2
  3163 ;; This function calls:
  3164 ;;		Nothing
  3165 ;; This function is called by:
  3166 ;;		_clearAllTimer
  3167 ;; This function uses a non-reentrant model
  3168 ;;
  3169  0447                     _clearTwelveHoursTimer:	
  3170                           
  3171                           ;common.c: 216: uiBigTimer = 0;
  3172                           
  3173                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  3174  0447  01F6               	clrf	_uiBigTimer
  3175  0448  01F7               	clrf	_uiBigTimer+1
  3176  0449  0008               	return
  3177  044A                     __end_of_clearTwelveHoursTimer:	
  3178  044A                     __ptext610:	
  3179 ;; =============== function _clearTwentySecondsTimer ends ============
  3180                           
  3181                           
  3182 ;; *************** function _clearThreeHoursTimer *****************
  3183 ;; Defined at:
  3184 ;;		line 221 in file "C:\190604\AK7030-OTP\common.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;		None
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;		None
  3189 ;; Return value:  Size  Location     Type
  3190 ;;		None               void
  3191 ;; Registers used:
  3192 ;;		status,2
  3193 ;; Tracked objects:
  3194 ;;		On entry : 60/0
  3195 ;;		On exit  : 60/0
  3196 ;;		Unchanged: FFF9F/0
  3197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3198 ;;      Params:         0       0       0       0       0
  3199 ;;      Locals:         0       0       0       0       0
  3200 ;;      Temps:          0       0       0       0       0
  3201 ;;      Totals:         0       0       0       0       0
  3202 ;;Total ram usage:        0 bytes
  3203 ;; Hardware stack levels used:    1
  3204 ;; Hardware stack levels required when called:    2
  3205 ;; This function calls:
  3206 ;;		Nothing
  3207 ;; This function is called by:
  3208 ;;		_clearAllTimer
  3209 ;;		_main
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212  044A                     _clearThreeHoursTimer:	
  3213                           
  3214                           ;common.c: 222: uiSmallTimer = 0;
  3215                           
  3216                           ; Regs used in _clearThreeHoursTimer: [status,2]
  3217  044A  01B8               	clrf	_uiSmallTimer
  3218  044B  01B9               	clrf	_uiSmallTimer+1
  3219  044C  0008               	return
  3220  044D                     __end_of_clearThreeHoursTimer:	
  3221  044D                     __ptext609:	
  3222 ;; =============== function _clock_config ends ============
  3223                           
  3224                           
  3225 ;; *************** function _clearTwentySecondsTimer *****************
  3226 ;; Defined at:
  3227 ;;		line 226 in file "C:\190604\AK7030-OTP\common.c"
  3228 ;; Parameters:    Size  Location     Type
  3229 ;;		None
  3230 ;; Auto vars:     Size  Location     Type
  3231 ;;		None
  3232 ;; Return value:  Size  Location     Type
  3233 ;;		None               void
  3234 ;; Registers used:
  3235 ;;		status,2
  3236 ;; Tracked objects:
  3237 ;;		On entry : 60/0
  3238 ;;		On exit  : 60/0
  3239 ;;		Unchanged: FFF9F/0
  3240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3241 ;;      Params:         0       0       0       0       0
  3242 ;;      Locals:         0       0       0       0       0
  3243 ;;      Temps:          0       0       0       0       0
  3244 ;;      Totals:         0       0       0       0       0
  3245 ;;Total ram usage:        0 bytes
  3246 ;; Hardware stack levels used:    1
  3247 ;; Hardware stack levels required when called:    2
  3248 ;; This function calls:
  3249 ;;		Nothing
  3250 ;; This function is called by:
  3251 ;;		_clearAllTimer
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254  044D                     _clearTwentySecondsTimer:	
  3255  044D                     l3701:	
  3256                           ; Regs used in _clearTwentySecondsTimer: [status,2]
  3257                           
  3258                           
  3259                           ;common.c: 227: uiTwentySecondsTimer = 0;
  3260  044D  01BA               	clrf	_uiTwentySecondsTimer
  3261  044E  01BB               	clrf	_uiTwentySecondsTimer+1
  3262  044F  0008               	return
  3263  0450                     __end_of_clearTwentySecondsTimer:	
  3264                           
  3265                           	psect	text590
  3266  04BC                     __ptext590:	
  3267 ;; =============== function _getAD_ConvertFlag ends ============
  3268                           
  3269                           
  3270 ;; *************** function _isFinishedThreeHoursTimer *****************
  3271 ;; Defined at:
  3272 ;;		line 265 in file "C:\190604\AK7030-OTP\common.c"
  3273 ;; Parameters:    Size  Location     Type
  3274 ;;		None
  3275 ;; Auto vars:     Size  Location     Type
  3276 ;;		None
  3277 ;; Return value:  Size  Location     Type
  3278 ;;                  1    wreg      unsigned char 
  3279 ;; Registers used:
  3280 ;;		wreg, status,2, status,0
  3281 ;; Tracked objects:
  3282 ;;		On entry : 60/0
  3283 ;;		On exit  : 60/0
  3284 ;;		Unchanged: FFF9F/0
  3285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3286 ;;      Params:         0       0       0       0       0
  3287 ;;      Locals:         0       0       0       0       0
  3288 ;;      Temps:          0       0       0       0       0
  3289 ;;      Totals:         0       0       0       0       0
  3290 ;;Total ram usage:        0 bytes
  3291 ;; Hardware stack levels used:    1
  3292 ;; Hardware stack levels required when called:    2
  3293 ;; This function calls:
  3294 ;;		Nothing
  3295 ;; This function is called by:
  3296 ;;		_main
  3297 ;; This function uses a non-reentrant model
  3298 ;;
  3299  04BC                     _isFinishedThreeHoursTimer:	
  3300                           
  3301                           ;common.c: 266: if(uiSmallTimer == 0)
  3302                           
  3303                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  3304  04BC  0839               	movf	_uiSmallTimer+1,w
  3305  04BD  0438               	iorwf	_uiSmallTimer,w
  3306  04BE  1903               	btfsc	3,2
  3307                           
  3308                           ;common.c: 267: return 1;
  3309  04BF  3401               	retlw	1
  3310                           
  3311                           ;common.c: 268: else
  3312                           ;common.c: 269: return 0;
  3313  04C0  3400               	retlw	0
  3314  04C1                     __end_of_isFinishedThreeHoursTimer:	
  3315                           
  3316                           	psect	text591
  3317  04B5                     __ptext591:	
  3318 ;; =============== function _isFinishedThreeHoursTimer ends ============
  3319                           
  3320                           
  3321 ;; *************** function _startThreeHoursTimer *****************
  3322 ;; Defined at:
  3323 ;;		line 232 in file "C:\190604\AK7030-OTP\common.c"
  3324 ;; Parameters:    Size  Location     Type
  3325 ;;		None
  3326 ;; Auto vars:     Size  Location     Type
  3327 ;;		None
  3328 ;; Return value:  Size  Location     Type
  3329 ;;		None               void
  3330 ;; Registers used:
  3331 ;;		wreg
  3332 ;; Tracked objects:
  3333 ;;		On entry : 60/60
  3334 ;;		On exit  : 60/0
  3335 ;;		Unchanged: FFF9F/0
  3336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3337 ;;      Params:         0       0       0       0       0
  3338 ;;      Locals:         0       0       0       0       0
  3339 ;;      Temps:          0       0       0       0       0
  3340 ;;      Totals:         0       0       0       0       0
  3341 ;;Total ram usage:        0 bytes
  3342 ;; Hardware stack levels used:    1
  3343 ;; Hardware stack levels required when called:    2
  3344 ;; This function calls:
  3345 ;;		Nothing
  3346 ;; This function is called by:
  3347 ;;		_main
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350  04B5                     _startThreeHoursTimer:	
  3351                           
  3352                           ;common.c: 233: uiSmallTimer = 10800;
  3353                           
  3354                           ; Regs used in _startThreeHoursTimer: [wreg]
  3355  04B5  3030               	movlw	48
  3356  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  3357  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  3358  04B8  00B8               	movwf	_uiSmallTimer
  3359  04B9  302A               	movlw	42
  3360  04BA  00B9               	movwf	_uiSmallTimer+1
  3361  04BB  0008               	return
  3362  04BC                     __end_of_startThreeHoursTimer:	
  3363                           
  3364                           	psect	text592
  3365  04C1                     __ptext592:	
  3366 ;; =============== function _startThreeHoursTimer ends ============
  3367                           
  3368                           
  3369 ;; *************** function _isFinishedTwentySecondsTimer *****************
  3370 ;; Defined at:
  3371 ;;		line 248 in file "C:\190604\AK7030-OTP\common.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;		None
  3374 ;; Auto vars:     Size  Location     Type
  3375 ;;		None
  3376 ;; Return value:  Size  Location     Type
  3377 ;;                  1    wreg      unsigned char 
  3378 ;; Registers used:
  3379 ;;		wreg, status,2, status,0
  3380 ;; Tracked objects:
  3381 ;;		On entry : 60/0
  3382 ;;		On exit  : 60/0
  3383 ;;		Unchanged: FFF9F/0
  3384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3385 ;;      Params:         0       0       0       0       0
  3386 ;;      Locals:         0       0       0       0       0
  3387 ;;      Temps:          0       0       0       0       0
  3388 ;;      Totals:         0       0       0       0       0
  3389 ;;Total ram usage:        0 bytes
  3390 ;; Hardware stack levels used:    1
  3391 ;; Hardware stack levels required when called:    2
  3392 ;; This function calls:
  3393 ;;		Nothing
  3394 ;; This function is called by:
  3395 ;;		_main
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398  04C1                     _isFinishedTwentySecondsTimer:	
  3399                           
  3400                           ;common.c: 249: if(0 == uiTwentySecondsTimer)
  3401                           
  3402                           ; Regs used in _isFinishedTwentySecondsTimer: [wreg+status,2+status,0]
  3403  04C1  083B               	movf	_uiTwentySecondsTimer+1,w
  3404  04C2  043A               	iorwf	_uiTwentySecondsTimer,w
  3405  04C3  1903               	btfsc	3,2
  3406                           
  3407                           ;common.c: 250: return 1;
  3408  04C4  3401               	retlw	1
  3409                           
  3410                           ;common.c: 251: else
  3411                           ;common.c: 252: return 0;
  3412  04C5  3400               	retlw	0
  3413  04C6                     __end_of_isFinishedTwentySecondsTimer:	
  3414                           
  3415                           	psect	text593
  3416  04C6                     __ptext593:	
  3417 ;; =============== function _isFinishedTwentySecondsTimer ends ============
  3418                           
  3419                           
  3420 ;; *************** function _getAdOriginaCh4Value *****************
  3421 ;; Defined at:
  3422 ;;		line 89 in file "C:\190604\AK7030-OTP\common.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;		None
  3425 ;; Auto vars:     Size  Location     Type
  3426 ;;		None
  3427 ;; Return value:  Size  Location     Type
  3428 ;;                  2    0[BANK0 ] unsigned int 
  3429 ;; Registers used:
  3430 ;;		wreg
  3431 ;; Tracked objects:
  3432 ;;		On entry : 60/0
  3433 ;;		On exit  : 60/0
  3434 ;;		Unchanged: FFF9F/0
  3435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3436 ;;      Params:         0       2       0       0       0
  3437 ;;      Locals:         0       0       0       0       0
  3438 ;;      Temps:          0       0       0       0       0
  3439 ;;      Totals:         0       2       0       0       0
  3440 ;;Total ram usage:        2 bytes
  3441 ;; Hardware stack levels used:    1
  3442 ;; Hardware stack levels required when called:    2
  3443 ;; This function calls:
  3444 ;;		Nothing
  3445 ;; This function is called by:
  3446 ;;		_main
  3447 ;; This function uses a non-reentrant model
  3448 ;;
  3449  04C6                     _getAdOriginaCh4Value:	
  3450                           
  3451                           ;common.c: 90: return adc_original_CH4_value;
  3452                           
  3453                           ; Regs used in _getAdOriginaCh4Value: [wreg]
  3454  04C6  0831               	movf	_adc_original_CH4_value+1,w
  3455  04C7  00D7               	movwf	?_getAdOriginaCh4Value+1
  3456  04C8  0830               	movf	_adc_original_CH4_value,w
  3457  04C9  00D6               	movwf	?_getAdOriginaCh4Value
  3458  04CA  0008               	return
  3459  04CB                     __end_of_getAdOriginaCh4Value:	
  3460                           
  3461                           	psect	text594
  3462  04E9                     __ptext594:	
  3463 ;; =============== function _getAdOriginaCh4Value ends ============
  3464                           
  3465                           
  3466 ;; *************** function _startTwentySecondsTimer *****************
  3467 ;; Defined at:
  3468 ;;		line 242 in file "C:\190604\AK7030-OTP\common.c"
  3469 ;; Parameters:    Size  Location     Type
  3470 ;;		None
  3471 ;; Auto vars:     Size  Location     Type
  3472 ;;		None
  3473 ;; Return value:  Size  Location     Type
  3474 ;;		None               void
  3475 ;; Registers used:
  3476 ;;		wreg
  3477 ;; Tracked objects:
  3478 ;;		On entry : 60/0
  3479 ;;		On exit  : 60/0
  3480 ;;		Unchanged: FFF9F/0
  3481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3482 ;;      Params:         0       0       0       0       0
  3483 ;;      Locals:         0       0       0       0       0
  3484 ;;      Temps:          0       0       0       0       0
  3485 ;;      Totals:         0       0       0       0       0
  3486 ;;Total ram usage:        0 bytes
  3487 ;; Hardware stack levels used:    1
  3488 ;; Hardware stack levels required when called:    2
  3489 ;; This function calls:
  3490 ;;		Nothing
  3491 ;; This function is called by:
  3492 ;;		_main
  3493 ;; This function uses a non-reentrant model
  3494 ;;
  3495  04E9                     _startTwentySecondsTimer:	
  3496                           
  3497                           ;common.c: 243: uiTwentySecondsTimer = 20;
  3498                           
  3499                           ; Regs used in _startTwentySecondsTimer: [wreg]
  3500  04E9  3014               	movlw	20
  3501  04EA  00BA               	movwf	_uiTwentySecondsTimer
  3502  04EB  01BB               	clrf	_uiTwentySecondsTimer+1
  3503  04EC  0008               	return
  3504  04ED                     __end_of_startTwentySecondsTimer:	
  3505                           
  3506                           	psect	text595
  3507  04CB                     __ptext595:	
  3508 ;; =============== function _startTwentySecondsTimer ends ============
  3509                           
  3510                           
  3511 ;; *************** function _isFinishedTwelveHoursTimer *****************
  3512 ;; Defined at:
  3513 ;;		line 257 in file "C:\190604\AK7030-OTP\common.c"
  3514 ;; Parameters:    Size  Location     Type
  3515 ;;		None
  3516 ;; Auto vars:     Size  Location     Type
  3517 ;;		None
  3518 ;; Return value:  Size  Location     Type
  3519 ;;                  1    wreg      unsigned char 
  3520 ;; Registers used:
  3521 ;;		wreg, status,2, status,0
  3522 ;; Tracked objects:
  3523 ;;		On entry : 60/0
  3524 ;;		On exit  : 60/0
  3525 ;;		Unchanged: FFF9F/0
  3526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3527 ;;      Params:         0       0       0       0       0
  3528 ;;      Locals:         0       0       0       0       0
  3529 ;;      Temps:          0       0       0       0       0
  3530 ;;      Totals:         0       0       0       0       0
  3531 ;;Total ram usage:        0 bytes
  3532 ;; Hardware stack levels used:    1
  3533 ;; Hardware stack levels required when called:    2
  3534 ;; This function calls:
  3535 ;;		Nothing
  3536 ;; This function is called by:
  3537 ;;		_main
  3538 ;; This function uses a non-reentrant model
  3539 ;;
  3540  04CB                     _isFinishedTwelveHoursTimer:	
  3541                           
  3542                           ;common.c: 258: if(uiBigTimer == 0)
  3543                           
  3544                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  3545  04CB  0877               	movf	_uiBigTimer+1,w
  3546  04CC  0476               	iorwf	_uiBigTimer,w
  3547  04CD  1903               	btfsc	3,2
  3548                           
  3549                           ;common.c: 259: return 1;
  3550  04CE  3401               	retlw	1
  3551                           
  3552                           ;common.c: 260: else
  3553                           ;common.c: 261: return 0;
  3554  04CF  3400               	retlw	0
  3555  04D0                     __end_of_isFinishedTwelveHoursTimer:	
  3556                           
  3557                           	psect	text596
  3558  04D0                     __ptext596:	
  3559 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  3560                           
  3561                           
  3562 ;; *************** function _startTwelveHourTimer *****************
  3563 ;; Defined at:
  3564 ;;		line 205 in file "C:\190604\AK7030-OTP\common.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;		None
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;		None
  3569 ;; Return value:  Size  Location     Type
  3570 ;;		None               void
  3571 ;; Registers used:
  3572 ;;		wreg
  3573 ;; Tracked objects:
  3574 ;;		On entry : 60/0
  3575 ;;		On exit  : 60/0
  3576 ;;		Unchanged: FFF9F/0
  3577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3578 ;;      Params:         0       0       0       0       0
  3579 ;;      Locals:         0       0       0       0       0
  3580 ;;      Temps:          0       0       0       0       0
  3581 ;;      Totals:         0       0       0       0       0
  3582 ;;Total ram usage:        0 bytes
  3583 ;; Hardware stack levels used:    1
  3584 ;; Hardware stack levels required when called:    2
  3585 ;; This function calls:
  3586 ;;		Nothing
  3587 ;; This function is called by:
  3588 ;;		_main
  3589 ;; This function uses a non-reentrant model
  3590 ;;
  3591  04D0                     _startTwelveHourTimer:	
  3592                           
  3593                           ;common.c: 206: uiBigTimer = 43200;
  3594                           
  3595                           ; Regs used in _startTwelveHourTimer: [wreg]
  3596  04D0  30C0               	movlw	192
  3597  04D1  00F6               	movwf	_uiBigTimer
  3598  04D2  30A8               	movlw	168
  3599  04D3  00F7               	movwf	_uiBigTimer+1
  3600  04D4  0008               	return
  3601  04D5                     __end_of_startTwelveHourTimer:	
  3602                           
  3603                           	psect	text597
  3604  04D5                     __ptext597:	
  3605 ;; =============== function _startTwelveHourTimer ends ============
  3606                           
  3607                           
  3608 ;; *************** function _getAdOriginalCh1Value *****************
  3609 ;; Defined at:
  3610 ;;		line 83 in file "C:\190604\AK7030-OTP\common.c"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;		None
  3613 ;; Auto vars:     Size  Location     Type
  3614 ;;		None
  3615 ;; Return value:  Size  Location     Type
  3616 ;;                  2    0[BANK0 ] unsigned int 
  3617 ;; Registers used:
  3618 ;;		wreg
  3619 ;; Tracked objects:
  3620 ;;		On entry : 60/0
  3621 ;;		On exit  : 60/0
  3622 ;;		Unchanged: FFF9F/0
  3623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3624 ;;      Params:         0       2       0       0       0
  3625 ;;      Locals:         0       0       0       0       0
  3626 ;;      Temps:          0       0       0       0       0
  3627 ;;      Totals:         0       2       0       0       0
  3628 ;;Total ram usage:        2 bytes
  3629 ;; Hardware stack levels used:    1
  3630 ;; Hardware stack levels required when called:    2
  3631 ;; This function calls:
  3632 ;;		Nothing
  3633 ;; This function is called by:
  3634 ;;		_main
  3635 ;; This function uses a non-reentrant model
  3636 ;;
  3637  04D5                     _getAdOriginalCh1Value:	
  3638                           
  3639                           ;common.c: 84: return adc_original_CH1_value;
  3640                           
  3641                           ; Regs used in _getAdOriginalCh1Value: [wreg]
  3642  04D5  082F               	movf	_adc_original_CH1_value+1,w
  3643  04D6  00D7               	movwf	?_getAdOriginalCh1Value+1
  3644  04D7  082E               	movf	_adc_original_CH1_value,w
  3645  04D8  00D6               	movwf	?_getAdOriginalCh1Value
  3646  04D9  0008               	return
  3647  04DA                     __end_of_getAdOriginalCh1Value:	
  3648                           
  3649                           	psect	text598
  3650  04DA                     __ptext598:	
  3651 ;; =============== function _getAdOriginalCh1Value ends ============
  3652                           
  3653                           
  3654 ;; *************** function _getAdOriginalCh14Value *****************
  3655 ;; Defined at:
  3656 ;;		line 95 in file "C:\190604\AK7030-OTP\common.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;		None
  3659 ;; Auto vars:     Size  Location     Type
  3660 ;;		None
  3661 ;; Return value:  Size  Location     Type
  3662 ;;                  2    0[BANK0 ] unsigned int 
  3663 ;; Registers used:
  3664 ;;		wreg
  3665 ;; Tracked objects:
  3666 ;;		On entry : 60/0
  3667 ;;		On exit  : 60/0
  3668 ;;		Unchanged: FFF9F/0
  3669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3670 ;;      Params:         0       2       0       0       0
  3671 ;;      Locals:         0       0       0       0       0
  3672 ;;      Temps:          0       0       0       0       0
  3673 ;;      Totals:         0       2       0       0       0
  3674 ;;Total ram usage:        2 bytes
  3675 ;; Hardware stack levels used:    1
  3676 ;; Hardware stack levels required when called:    2
  3677 ;; This function calls:
  3678 ;;		Nothing
  3679 ;; This function is called by:
  3680 ;;		_main
  3681 ;; This function uses a non-reentrant model
  3682 ;;
  3683  04DA                     _getAdOriginalCh14Value:	
  3684                           
  3685                           ;common.c: 96: return adc_original_CH14_value;
  3686                           
  3687                           ; Regs used in _getAdOriginalCh14Value: [wreg]
  3688  04DA  082D               	movf	_adc_original_CH14_value+1,w
  3689  04DB  00D7               	movwf	?_getAdOriginalCh14Value+1
  3690  04DC  082C               	movf	_adc_original_CH14_value,w
  3691  04DD  00D6               	movwf	?_getAdOriginalCh14Value
  3692  04DE  0008               	return
  3693  04DF                     __end_of_getAdOriginalCh14Value:	
  3694                           
  3695                           	psect	text599
  3696  04F0                     __ptext599:	
  3697 ;; =============== function _getAdOriginalCh14Value ends ============
  3698                           
  3699                           
  3700 ;; *************** function _clrSampeTime *****************
  3701 ;; Defined at:
  3702 ;;		line 283 in file "C:\190604\AK7030-OTP\common.c"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;		None
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;		None
  3707 ;; Return value:  Size  Location     Type
  3708 ;;		None               void
  3709 ;; Registers used:
  3710 ;;		status,2
  3711 ;; Tracked objects:
  3712 ;;		On entry : 0/0
  3713 ;;		On exit  : 0/0
  3714 ;;		Unchanged: FFFFF/0
  3715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3716 ;;      Params:         0       0       0       0       0
  3717 ;;      Locals:         0       0       0       0       0
  3718 ;;      Temps:          0       0       0       0       0
  3719 ;;      Totals:         0       0       0       0       0
  3720 ;;Total ram usage:        0 bytes
  3721 ;; Hardware stack levels used:    1
  3722 ;; Hardware stack levels required when called:    2
  3723 ;; This function calls:
  3724 ;;		Nothing
  3725 ;; This function is called by:
  3726 ;;		_main
  3727 ;; This function uses a non-reentrant model
  3728 ;;
  3729  04F0                     _clrSampeTime:	
  3730                           
  3731                           ;common.c: 284: timer.timer10msStopWatch = 0;
  3732                           
  3733                           ; Regs used in _clrSampeTime: [status,2]
  3734  04F0  01FA               	clrf	_timer
  3735  04F1  0008               	return
  3736  04F2                     __end_of_clrSampeTime:	
  3737                           
  3738                           	psect	text600
  3739  04DF                     __ptext600:	
  3740 ;; =============== function _clrSampeTime ends ============
  3741                           
  3742                           
  3743 ;; *************** function _isPermitSampleTime *****************
  3744 ;; Defined at:
  3745 ;;		line 273 in file "C:\190604\AK7030-OTP\common.c"
  3746 ;; Parameters:    Size  Location     Type
  3747 ;;		None
  3748 ;; Auto vars:     Size  Location     Type
  3749 ;;		None
  3750 ;; Return value:  Size  Location     Type
  3751 ;;                  1    wreg      unsigned char 
  3752 ;; Registers used:
  3753 ;;		wreg
  3754 ;; Tracked objects:
  3755 ;;		On entry : 0/0
  3756 ;;		On exit  : 0/0
  3757 ;;		Unchanged: FFFFF/0
  3758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3759 ;;      Params:         0       0       0       0       0
  3760 ;;      Locals:         0       0       0       0       0
  3761 ;;      Temps:          0       0       0       0       0
  3762 ;;      Totals:         0       0       0       0       0
  3763 ;;Total ram usage:        0 bytes
  3764 ;; Hardware stack levels used:    1
  3765 ;; Hardware stack levels required when called:    2
  3766 ;; This function calls:
  3767 ;;		Nothing
  3768 ;; This function is called by:
  3769 ;;		_main
  3770 ;; This function uses a non-reentrant model
  3771 ;;
  3772  04DF                     _isPermitSampleTime:	
  3773                           
  3774                           ;common.c: 274: if(timer.timer10msStopWatch >= 10)
  3775                           
  3776                           ; Regs used in _isPermitSampleTime: [wreg]
  3777  04DF  300A               	movlw	10
  3778  04E0  027A               	subwf	_timer,w
  3779  04E1  1803               	btfsc	3,0
  3780                           
  3781                           ;common.c: 275: {
  3782                           ;common.c: 276: return 1;
  3783  04E2  3401               	retlw	1
  3784                           
  3785                           ;common.c: 278: else
  3786                           ;common.c: 279: return 0;
  3787  04E3  3400               	retlw	0
  3788  04E4                     __end_of_isPermitSampleTime:	
  3789                           
  3790                           	psect	text602
  3791  04A5                     __ptext602:	
  3792 ;; =============== function _adc_start ends ============
  3793                           
  3794                           
  3795 ;; *************** function _op2_init *****************
  3796 ;; Defined at:
  3797 ;;		line 45 in file "C:\190604\AK7030-OTP\periph.c"
  3798 ;; Parameters:    Size  Location     Type
  3799 ;;		None
  3800 ;; Auto vars:     Size  Location     Type
  3801 ;;		None
  3802 ;; Return value:  Size  Location     Type
  3803 ;;		None               void
  3804 ;; Registers used:
  3805 ;;		wreg
  3806 ;; Tracked objects:
  3807 ;;		On entry : 17F/20
  3808 ;;		On exit  : 17F/20
  3809 ;;		Unchanged: FFE80/0
  3810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3811 ;;      Params:         0       0       0       0       0
  3812 ;;      Locals:         0       0       0       0       0
  3813 ;;      Temps:          0       0       0       0       0
  3814 ;;      Totals:         0       0       0       0       0
  3815 ;;Total ram usage:        0 bytes
  3816 ;; Hardware stack levels used:    1
  3817 ;; Hardware stack levels required when called:    2
  3818 ;; This function calls:
  3819 ;;		Nothing
  3820 ;; This function is called by:
  3821 ;;		_main
  3822 ;; This function uses a non-reentrant model
  3823 ;;
  3824  04A5                     _op2_init:	
  3825                           
  3826                           ;periph.c: 52: OP2CON1=0x10;
  3827                           
  3828                           ; Regs used in _op2_init: [wreg]
  3829  04A5  3010               	movlw	16
  3830  04A6  009C               	movwf	28	;volatile
  3831                           
  3832                           ;periph.c: 54: OP2CON2=0x10;
  3833  04A7  009D               	movwf	29	;volatile
  3834                           
  3835                           ;periph.c: 55: OP2CON0=0x80;
  3836  04A8  3080               	movlw	128
  3837  04A9  009B               	movwf	27	;volatile
  3838                           
  3839                           ;periph.c: 58: TRISA7=0;
  3840  04AA  1385               	bcf	5,7
  3841                           
  3842                           ;periph.c: 60: TRISB7 = 1;
  3843  04AB  1786               	bsf	6,7
  3844  04AC  0008               	return
  3845  04AD                     __end_of_op2_init:	
  3846                           
  3847                           	psect	text603
  3848  0488                     __ptext603:	
  3849 ;; =============== function _op2_init ends ============
  3850                           
  3851                           
  3852 ;; *************** function _op1_init *****************
  3853 ;; Defined at:
  3854 ;;		line 26 in file "C:\190604\AK7030-OTP\periph.c"
  3855 ;; Parameters:    Size  Location     Type
  3856 ;;		None
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;		None
  3859 ;; Return value:  Size  Location     Type
  3860 ;;		None               void
  3861 ;; Registers used:
  3862 ;;		wreg
  3863 ;; Tracked objects:
  3864 ;;		On entry : 17F/20
  3865 ;;		On exit  : 17F/20
  3866 ;;		Unchanged: FFE80/0
  3867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3868 ;;      Params:         0       0       0       0       0
  3869 ;;      Locals:         0       0       0       0       0
  3870 ;;      Temps:          0       0       0       0       0
  3871 ;;      Totals:         0       0       0       0       0
  3872 ;;Total ram usage:        0 bytes
  3873 ;; Hardware stack levels used:    1
  3874 ;; Hardware stack levels required when called:    2
  3875 ;; This function calls:
  3876 ;;		Nothing
  3877 ;; This function is called by:
  3878 ;;		_main
  3879 ;; This function uses a non-reentrant model
  3880 ;;
  3881  0488                     _op1_init:	
  3882                           
  3883                           ;periph.c: 33: OP1CON1=0x02;
  3884                           
  3885                           ; Regs used in _op1_init: [wreg]
  3886  0488  3002               	movlw	2
  3887  0489  1283               	bcf	3,5	;RP0=0, select bank0
  3888  048A  009C               	movwf	28	;volatile
  3889                           
  3890                           ;periph.c: 34: OP1CON2=0xA0;
  3891  048B  30A0               	movlw	160
  3892  048C  009D               	movwf	29	;volatile
  3893                           
  3894                           ;periph.c: 35: OP1CON0=0x80;
  3895  048D  3080               	movlw	128
  3896  048E  009B               	movwf	27	;volatile
  3897                           
  3898                           ;periph.c: 38: TRISB3=1;
  3899  048F  1683               	bsf	3,5	;RP0=1, select bank1
  3900  0490  1586               	bsf	6,3
  3901                           
  3902                           ;periph.c: 40: TRISB5=0;
  3903  0491  1286               	bcf	6,5
  3904  0492  0008               	return
  3905  0493                     __end_of_op1_init:	
  3906                           
  3907                           	psect	text604
  3908  04E4                     __ptext604:	
  3909 ;; =============== function _op1_init ends ============
  3910                           
  3911                           
  3912 ;; *************** function _dac_init *****************
  3913 ;; Defined at:
  3914 ;;		line 14 in file "C:\190604\AK7030-OTP\periph.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;		None
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;		None
  3919 ;; Return value:  Size  Location     Type
  3920 ;;		None               void
  3921 ;; Registers used:
  3922 ;;		wreg
  3923 ;; Tracked objects:
  3924 ;;		On entry : 17F/20
  3925 ;;		On exit  : 17F/20
  3926 ;;		Unchanged: FFE80/0
  3927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3928 ;;      Params:         0       0       0       0       0
  3929 ;;      Locals:         0       0       0       0       0
  3930 ;;      Temps:          0       0       0       0       0
  3931 ;;      Totals:         0       0       0       0       0
  3932 ;;Total ram usage:        0 bytes
  3933 ;; Hardware stack levels used:    1
  3934 ;; Hardware stack levels required when called:    2
  3935 ;; This function calls:
  3936 ;;		Nothing
  3937 ;; This function is called by:
  3938 ;;		_main
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941  04E4                     _dac_init:	
  3942                           
  3943                           ;periph.c: 15: DACCON|=1;
  3944                           
  3945                           ; Regs used in _dac_init: [wreg]
  3946  04E4  1407               	bsf	7,0	;volatile
  3947                           
  3948                           ;periph.c: 17: DACR0=0x0F;
  3949  04E5  300F               	movlw	15
  3950  04E6  0088               	movwf	8	;volatile
  3951                           
  3952                           ;periph.c: 18: DACCON|=(1)<<2;
  3953  04E7  1507               	bsf	7,2	;volatile
  3954  04E8  0008               	return
  3955  04E9                     __end_of_dac_init:	
  3956                           
  3957                           	psect	text606
  3958  04ED                     __ptext606:	
  3959 ;; =============== function _adc_test_init ends ============
  3960                           
  3961                           
  3962 ;; *************** function _timer1_interrupt_config *****************
  3963 ;; Defined at:
  3964 ;;		line 58 in file "C:\190604\AK7030-OTP\common.c"
  3965 ;; Parameters:    Size  Location     Type
  3966 ;;		None
  3967 ;; Auto vars:     Size  Location     Type
  3968 ;;		None
  3969 ;; Return value:  Size  Location     Type
  3970 ;;		None               void
  3971 ;; Registers used:
  3972 ;;		None
  3973 ;; Tracked objects:
  3974 ;;		On entry : 17F/20
  3975 ;;		On exit  : 17F/20
  3976 ;;		Unchanged: FFE80/0
  3977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3978 ;;      Params:         0       0       0       0       0
  3979 ;;      Locals:         0       0       0       0       0
  3980 ;;      Temps:          0       0       0       0       0
  3981 ;;      Totals:         0       0       0       0       0
  3982 ;;Total ram usage:        0 bytes
  3983 ;; Hardware stack levels used:    1
  3984 ;; Hardware stack levels required when called:    2
  3985 ;; This function calls:
  3986 ;;		Nothing
  3987 ;; This function is called by:
  3988 ;;		_main
  3989 ;; This function uses a non-reentrant model
  3990 ;;
  3991  04ED                     _timer1_interrupt_config:	
  3992                           
  3993                           ;common.c: 59: GIE = 1;
  3994                           
  3995                           ; Regs used in _timer1_interrupt_config: []
  3996  04ED  178B               	bsf	11,7
  3997                           
  3998                           ;common.c: 60: PEIE = 1;
  3999  04EE  170B               	bsf	11,6
  4000  04EF  0008               	return
  4001  04F0                     __end_of_timer1_interrupt_config:	
  4002                           
  4003                           	psect	text607
  4004  0493                     __ptext607:	
  4005 ;; =============== function _timer1_interrupt_config ends ============
  4006                           
  4007                           
  4008 ;; *************** function _timer1_config *****************
  4009 ;; Defined at:
  4010 ;;		line 46 in file "C:\190604\AK7030-OTP\common.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;		None
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;		None
  4015 ;; Return value:  Size  Location     Type
  4016 ;;		None               void
  4017 ;; Registers used:
  4018 ;;		wreg
  4019 ;; Tracked objects:
  4020 ;;		On entry : 17F/40
  4021 ;;		On exit  : 17F/20
  4022 ;;		Unchanged: FFE80/0
  4023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4024 ;;      Params:         0       0       0       0       0
  4025 ;;      Locals:         0       0       0       0       0
  4026 ;;      Temps:          0       0       0       0       0
  4027 ;;      Totals:         0       0       0       0       0
  4028 ;;Total ram usage:        0 bytes
  4029 ;; Hardware stack levels used:    1
  4030 ;; Hardware stack levels required when called:    2
  4031 ;; This function calls:
  4032 ;;		Nothing
  4033 ;; This function is called by:
  4034 ;;		_main
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037  0493                     _timer1_config:	
  4038                           
  4039                           ;common.c: 48: TMR1H=0xCF;
  4040                           
  4041                           ; Regs used in _timer1_config: [wreg]
  4042  0493  30CF               	movlw	207
  4043  0494  1303               	bcf	3,6	;RP1=0, select bank0
  4044  0495  008F               	movwf	15	;volatile
  4045                           
  4046                           ;common.c: 49: TMR1L=0x2C;
  4047  0496  302C               	movlw	44
  4048  0497  008E               	movwf	14	;volatile
  4049                           
  4050                           ;common.c: 50: T1CON=0xE1;
  4051  0498  30E1               	movlw	225
  4052  0499  0090               	movwf	16	;volatile
  4053                           
  4054                           ;common.c: 51: TMR1IE=1;
  4055  049A  1683               	bsf	3,5	;RP0=1, select bank1
  4056  049B  140C               	bsf	12,0
  4057  049C  0008               	return
  4058  049D                     __end_of_timer1_config:	
  4059                           
  4060                           	psect	text608
  4061  04AD                     __ptext608:	
  4062 ;; =============== function _timer1_config ends ============
  4063                           
  4064                           
  4065 ;; *************** function _clock_config *****************
  4066 ;; Defined at:
  4067 ;;		line 38 in file "C:\190604\AK7030-OTP\common.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;		None
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;		None
  4072 ;; Return value:  Size  Location     Type
  4073 ;;		None               void
  4074 ;; Registers used:
  4075 ;;		wreg, status,2
  4076 ;; Tracked objects:
  4077 ;;		On entry : 17F/20
  4078 ;;		On exit  : 17F/40
  4079 ;;		Unchanged: FFE80/0
  4080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4081 ;;      Params:         0       0       0       0       0
  4082 ;;      Locals:         0       0       0       0       0
  4083 ;;      Temps:          0       0       0       0       0
  4084 ;;      Totals:         0       0       0       0       0
  4085 ;;Total ram usage:        0 bytes
  4086 ;; Hardware stack levels used:    1
  4087 ;; Hardware stack levels required when called:    2
  4088 ;; This function calls:
  4089 ;;		Nothing
  4090 ;; This function is called by:
  4091 ;;		_main
  4092 ;; This function uses a non-reentrant model
  4093 ;;
  4094  04AD                     _clock_config:	
  4095                           
  4096                           ;common.c: 40: CLKPR = 0x80;
  4097                           
  4098                           ; Regs used in _clock_config: [wreg+status,2]
  4099  04AD  3080               	movlw	128
  4100  04AE  1283               	bcf	3,5	;RP0=0, select bank2
  4101  04AF  1703               	bsf	3,6	;RP1=1, select bank2
  4102  04B0  0088               	movwf	8	;volatile
  4103                           
  4104                           ;common.c: 41: CLKPR = 0x00;
  4105  04B1  0188               	clrf	8	;volatile
  4106  04B2                     l1600:	
  4107                           ;common.c: 42: while(CLKPCE);
  4108                           
  4109  04B2  1F88               	btfss	8,7
  4110  04B3  0008               	return
  4111  04B4  2CB2               	goto	l1600
  4112  04B5                     __end_of_clock_config:	
  4113                           
  4114                           	psect	text612
  4115  03CE                     __ptext612:	
  4116 ;; =============== function _clearTwelveHoursTimer ends ============
  4117                           
  4118                           
  4119 ;; *************** function _ISR *****************
  4120 ;; Defined at:
  4121 ;;		line 288 in file "C:\190604\AK7030-OTP\common.c"
  4122 ;; Parameters:    Size  Location     Type
  4123 ;;		None
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;		None
  4126 ;; Return value:  Size  Location     Type
  4127 ;;		None               void
  4128 ;; Registers used:
  4129 ;;		wreg, status,2, status,0, pclath, cstack
  4130 ;; Tracked objects:
  4131 ;;		On entry : 0/0
  4132 ;;		On exit  : 60/0
  4133 ;;		Unchanged: FFF9F/0
  4134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4135 ;;      Params:         0       0       0       0       0
  4136 ;;      Locals:         0       0       0       0       0
  4137 ;;      Temps:          2       0       0       0       0
  4138 ;;      Totals:         2       0       0       0       0
  4139 ;;Total ram usage:        2 bytes
  4140 ;; Hardware stack levels used:    1
  4141 ;; Hardware stack levels required when called:    1
  4142 ;; This function calls:
  4143 ;;		i1_setAD_ConvertFlag
  4144 ;;		_adc_get
  4145 ;; This function is called by:
  4146 ;;		Interrupt level 1
  4147 ;; This function uses a non-reentrant model
  4148 ;;
  4149  03CE                     _ISR:	
  4150                           
  4151                           ;common.c: 289: static unsigned char ucTimer1sCnt = 0;
  4152                           ;common.c: 291: if(TMR1IF == 1)
  4153  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  4154  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  4155  03D0  1C0C               	btfss	12,0
  4156  03D1  2BF8               	goto	i1l3839
  4157  03D2  3064               	movlw	100
  4158                           
  4159                           ;common.c: 292: {
  4160                           ;common.c: 293: TMR1IF = 0 ;
  4161  03D3  100C               	bcf	12,0
  4162                           
  4163                           ;common.c: 294: timer.timer10msStopWatch++;
  4164  03D4  0AFA               	incf	_timer,f
  4165                           
  4166                           ;common.c: 295: ucTimer1sCnt++;
  4167  03D5  0AF8               	incf	ISR@ucTimer1sCnt,f
  4168                           
  4169                           ;common.c: 297: if(ucTimer1sCnt >= 100)
  4170  03D6  0278               	subwf	ISR@ucTimer1sCnt,w
  4171  03D7  1C03               	skipc
  4172  03D8  2BF8               	goto	i1l3839
  4173                           
  4174                           ;common.c: 298: {
  4175                           ;common.c: 299: ucTimer1sCnt = 0;
  4176  03D9  01F8               	clrf	ISR@ucTimer1sCnt
  4177                           
  4178                           ;common.c: 300: if(uiBigTimer > 0)
  4179  03DA  0877               	movf	_uiBigTimer+1,w
  4180  03DB  0476               	iorwf	_uiBigTimer,w
  4181  03DC  1903               	skipnz
  4182  03DD  2BE4               	goto	i1l1708
  4183                           
  4184                           ;common.c: 301: uiBigTimer--;
  4185  03DE  3001               	movlw	1
  4186  03DF  02F6               	subwf	_uiBigTimer,f
  4187  03E0  3000               	movlw	0
  4188  03E1  1C03               	skipc
  4189  03E2  03F7               	decf	_uiBigTimer+1,f
  4190  03E3  02F7               	subwf	_uiBigTimer+1,f
  4191  03E4                     i1l1708:	
  4192                           
  4193                           ;common.c: 303: if(uiSmallTimer)
  4194  03E4  0839               	movf	_uiSmallTimer+1,w
  4195  03E5  0438               	iorwf	_uiSmallTimer,w
  4196  03E6  1903               	skipnz
  4197  03E7  2BEE               	goto	i1l1709
  4198                           
  4199                           ;common.c: 304: uiSmallTimer--;
  4200  03E8  3001               	movlw	1
  4201  03E9  02B8               	subwf	_uiSmallTimer,f
  4202  03EA  3000               	movlw	0
  4203  03EB  1C03               	skipc
  4204  03EC  03B9               	decf	_uiSmallTimer+1,f
  4205  03ED  02B9               	subwf	_uiSmallTimer+1,f
  4206  03EE                     i1l1709:	
  4207                           
  4208                           ;common.c: 306: if(uiTwentySecondsTimer)
  4209  03EE  083B               	movf	_uiTwentySecondsTimer+1,w
  4210  03EF  043A               	iorwf	_uiTwentySecondsTimer,w
  4211  03F0  1903               	skipnz
  4212  03F1  2BF8               	goto	i1l3839
  4213                           
  4214                           ;common.c: 307: uiTwentySecondsTimer--;
  4215  03F2  3001               	movlw	1
  4216  03F3  02BA               	subwf	_uiTwentySecondsTimer,f
  4217  03F4  3000               	movlw	0
  4218  03F5  1C03               	skipc
  4219  03F6  03BB               	decf	_uiTwentySecondsTimer+1,f
  4220  03F7  02BB               	subwf	_uiTwentySecondsTimer+1,f
  4221  03F8                     i1l3839:	
  4222                           
  4223                           ;common.c: 308: }
  4224                           ;common.c: 309: }
  4225                           ;common.c: 311: if(ADIF)
  4226  03F8  1D0D               	btfss	13,2
  4227  03F9  2C21               	goto	i1l1716
  4228  03FA  3001               	movlw	1
  4229                           
  4230                           ;common.c: 312: {
  4231                           ;common.c: 313: ADIF=0;
  4232  03FB  110D               	bcf	13,2
  4233                           
  4234                           ;common.c: 314: setAD_ConvertFlag(1);
  4235  03FC  2433  118A         	fcall	i1_setAD_ConvertFlag
  4236                           
  4237                           ;common.c: 315: adc_original_value = adc_get();
  4238  03FE  2428  118A         	fcall	_adc_get
  4239  0400  0871               	movf	?_adc_get+1,w
  4240  0401  1283               	bcf	3,5	;RP0=0, select bank0
  4241  0402  00B3               	movwf	_adc_original_value+1
  4242  0403  0870               	movf	?_adc_get,w
  4243  0404  00B2               	movwf	_adc_original_value
  4244                           
  4245                           ;common.c: 316: if(sampleChannelSelect == 4)
  4246  0405  085B               	movf	_sampleChannelSelect,w
  4247  0406  3A04               	xorlw	4
  4248  0407  1D03               	skipz
  4249  0408  2C11               	goto	i1l3851
  4250                           
  4251                           ;common.c: 317: adc_original_CH4_value = adc_get();
  4252  0409  2428  118A         	fcall	_adc_get
  4253  040B  0871               	movf	?_adc_get+1,w
  4254  040C  1283               	bcf	3,5	;RP0=0, select bank0
  4255  040D  00B1               	movwf	_adc_original_CH4_value+1
  4256  040E  0870               	movf	?_adc_get,w
  4257  040F  00B0               	movwf	_adc_original_CH4_value
  4258  0410  2C21               	goto	i1l1716
  4259  0411                     i1l3851:	
  4260                           
  4261                           ;common.c: 318: else if(sampleChannelSelect == 1)
  4262  0411  0B5B               	decfsz	_sampleChannelSelect,w
  4263  0412  2C1B               	goto	i1l3855
  4264                           
  4265                           ;common.c: 319: adc_original_CH1_value = adc_get();
  4266  0413  2428  118A         	fcall	_adc_get
  4267  0415  0871               	movf	?_adc_get+1,w
  4268  0416  1283               	bcf	3,5	;RP0=0, select bank0
  4269  0417  00AF               	movwf	_adc_original_CH1_value+1
  4270  0418  0870               	movf	?_adc_get,w
  4271  0419  00AE               	movwf	_adc_original_CH1_value
  4272  041A  2C21               	goto	i1l1716
  4273  041B                     i1l3855:	
  4274                           
  4275                           ;common.c: 320: else
  4276                           ;common.c: 321: adc_original_CH14_value = adc_get();
  4277  041B  2428               	fcall	_adc_get
  4278  041C  0871               	movf	?_adc_get+1,w
  4279  041D  1283               	bcf	3,5	;RP0=0, select bank0
  4280  041E  00AD               	movwf	_adc_original_CH14_value+1
  4281  041F  0870               	movf	?_adc_get,w
  4282  0420  00AC               	movwf	_adc_original_CH14_value
  4283  0421                     i1l1716:	
  4284  0421  0875               	movf	??_ISR+1,w
  4285  0422  008A               	movwf	10
  4286  0423  0E74               	swapf	??_ISR^(0+-128),w
  4287  0424  0083               	movwf	3
  4288  0425  0EFE               	swapf	126,f
  4289  0426  0E7E               	swapf	126,w
  4290  0427  0009               	retfie
  4291  0428                     __end_of_ISR:	
  4292  0428                     __ptext614:	
  4293 ;; =============== function i1_setAD_ConvertFlag ends ============
  4294                           
  4295                           
  4296 ;; *************** function _adc_get *****************
  4297 ;; Defined at:
  4298 ;;		line 105 in file "C:\190604\AK7030-OTP\periph.c"
  4299 ;; Parameters:    Size  Location     Type
  4300 ;;		None
  4301 ;; Auto vars:     Size  Location     Type
  4302 ;;  val             2    2[COMMON] unsigned int 
  4303 ;; Return value:  Size  Location     Type
  4304 ;;                  2    0[COMMON] unsigned int 
  4305 ;; Registers used:
  4306 ;;		wreg
  4307 ;; Tracked objects:
  4308 ;;		On entry : 60/0
  4309 ;;		On exit  : 60/20
  4310 ;;		Unchanged: FFF9F/0
  4311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4312 ;;      Params:         2       0       0       0       0
  4313 ;;      Locals:         2       0       0       0       0
  4314 ;;      Temps:          0       0       0       0       0
  4315 ;;      Totals:         4       0       0       0       0
  4316 ;;Total ram usage:        4 bytes
  4317 ;; Hardware stack levels used:    1
  4318 ;; This function calls:
  4319 ;;		Nothing
  4320 ;; This function is called by:
  4321 ;;		_ISR
  4322 ;; This function uses a non-reentrant model
  4323 ;;
  4324  0428                     _adc_get:	
  4325                           
  4326                           ;periph.c: 106: unsigned int val;
  4327                           ;periph.c: 107: val = (ADRESH<<8) | ADRESL;
  4328                           
  4329                           ; Regs used in _adc_get: [wreg]
  4330  0428  081E               	movf	30,w	;volatile
  4331  0429  00F3               	movwf	adc_get@val+1
  4332  042A  01F2               	clrf	adc_get@val
  4333  042B  1683               	bsf	3,5	;RP0=1, select bank1
  4334  042C  081E               	movf	30,w	;volatile
  4335  042D  04F2               	iorwf	adc_get@val,f
  4336                           
  4337                           ;periph.c: 108: return val;
  4338  042E  0873               	movf	adc_get@val+1,w
  4339  042F  00F1               	movwf	?_adc_get+1
  4340  0430  0872               	movf	adc_get@val,w
  4341  0431  00F0               	movwf	?_adc_get
  4342  0432  0008               	return
  4343  0433                     __end_of_adc_get:	
  4344  0433                     __ptext613:	
  4345 ;; =============== function _ISR ends ============
  4346                           
  4347                           
  4348 ;; *************** function i1_setAD_ConvertFlag *****************
  4349 ;; Defined at:
  4350 ;;		line 72 in file "C:\190604\AK7030-OTP\common.c"
  4351 ;; Parameters:    Size  Location     Type
  4352 ;;  setAD_Conver    1    wreg     unsigned char 
  4353 ;; Auto vars:     Size  Location     Type
  4354 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  4355 ;; Return value:  Size  Location     Type
  4356 ;;		None               void
  4357 ;; Registers used:
  4358 ;;		wreg
  4359 ;; Tracked objects:
  4360 ;;		On entry : 60/0
  4361 ;;		On exit  : 60/0
  4362 ;;		Unchanged: FFF9F/0
  4363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4364 ;;      Params:         0       0       0       0       0
  4365 ;;      Locals:         1       0       0       0       0
  4366 ;;      Temps:          0       0       0       0       0
  4367 ;;      Totals:         1       0       0       0       0
  4368 ;;Total ram usage:        1 bytes
  4369 ;; Hardware stack levels used:    1
  4370 ;; This function calls:
  4371 ;;		Nothing
  4372 ;; This function is called by:
  4373 ;;		_ISR
  4374 ;; This function uses a non-reentrant model
  4375 ;;
  4376  0433                     i1_setAD_ConvertFlag:	
  4377                           
  4378                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  4379                           ;i1setAD_ConvertFlag@flag stored from wreg
  4380  0433  00F0               	movwf	i1setAD_ConvertFlag@flag
  4381                           
  4382                           ;common.c: 73: adc_convert_flag = flag;
  4383  0434  00F9               	movwf	_adc_convert_flag
  4384  0435  0008               	return
  4385  0436                     __end_ofi1_setAD_ConvertFlag:	
  4386                           
  4387                           	psect	intentry
  4388  0004                     __pintentry:	
  4389                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  4390                           
  4391  0004                     interrupt_function:	
  4392  007E                     saved_w	set	btemp
  4393  0004  00FE               	movwf	btemp
  4394  0005  0E03               	swapf	3,w
  4395  0006  00F4               	movwf	??_ISR
  4396  0007  080A               	movf	10,w
  4397  0008  00F5               	movwf	??_ISR+1
  4398  0009  118A  2BCE         	ljmp	_ISR
  4399                           
  4400                           	psect	text615
  4401  0000                     __ptext615:	
  4402 ;; =============== function _adc_get ends ============
  4403                           
  4404  007E                     btemp	set	126	;btemp
  4405  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Tue Jun 18 10:48:37 2019

                       ??_clock_config 0056                                      pc 0002  
                                   _GO 00F9                                     fsr 0004  
                  ?_getAdOriginalValue 0056               ?_timer1_interrupt_config 0070  
                                  l703 0065                                    l712 007D  
                                  l831 0199                                    l807 0165  
                                  l680 0000                                    l752 00EF  
                                  l737 00ED                                    l907 02A6  
                                  l852 01CC                                    l780 012B  
                                  l677 0000                                    l880 0248  
                                  _PA0 0028                                    _PA1 0029  
                                  _GIE 005F                                    _PB0 0030  
                                  _PA2 002A                                    _PB1 0031  
                                  _PA3 002B                                    _PA6 002E  
                                  _PA7 002F                                    _PB6 0036  
                                  _ISR 03CE                                    u915 0366  
                                  u925 0379                                    fsr0 0004  
                                  indf 0000                 ??_startThreeHoursTimer 0056  
                                 S4665 0460                                   S4667 046E  
                                 S4669 047C                                   ?_ISR 0070  
                   __size_of_AD_Sample 0063                 ?_getAdOriginalCh1Value 0056  
                                 l1600 04B2                                   l4001 00A0  
                                 l1603 0000                                   l4011 00AB  
                                 l4003 0000                                   l1612 0000  
                                 l1701 0000                                   l1621 0000  
                                 l4101 012C                                   l4013 00B1  
                                 l4005 0000                                   l1606 0000  
                                 l2350 0000                                   l1615 0000  
                                 l4111 0135                                   l4103 012E  
                                 l4031 00DF                                   l4023 00C6  
                                 l4015 00B4                                   l4007 00A6  
                                 l1624 0000                                   l1640 0371  
                                 l1609 0000                                   l2361 0000  
                                 l2353 0000                                   l4113 0137  
                                 l4017 00B7                                   l4009 0000  
                                 l1618 0000                                   l2347 0000  
                                 l1627 0000                                   l4123 013D  
                                 l4107 0133                                   l4043 00F7  
                                 l4035 00EB                                   l4027 00D3  
                                 l4019 00BA                                   l4301 0207  
                                 l4221 019E                                   l4133 0143  
                                 l4037 00F0                                   l2367 0000  
                                 l1663 0000                                   l4311 0227  
                                 l4231 01A7                                   l4207 0186  
                                 l4143 0149                                   l4047 00F9  
                                 l4039 00F2                                   l1672 0000  
                                 l4305 0000                                   l4241 01AD  
                                 l4225 01A3                                   l4217 018D  
                                 l4153 0152                                   l4049 00FB  
                                 l1666 0000                                   l1675 0000  
                                 l4411 02D8                                   l4403 0000  
                                 l4315 022D                                   l4251 01B4  
                                 l4219 019C                                   l4171 016E  
                                 l4163 0159                                   l4059 0101  
                                 l4323 0237                                   l1669 0000  
                                 l3701 044D                                   l4421 0000  
                                 l4405 02CB                                   l4341 0000  
                                 l4333 0257                                   l4325 0000  
                                 l4317 0000                                   l4309 0220  
                                 l4261 01BB                                   l4229 01A5  
                                 l4165 0167                                   l4093 011D  
                                 l4069 0107                                   l1678 0000  
                                 l3703 0000                                   l3711 0000  
                                 l4431 0000                                   l4423 0000  
                                 l4415 0000                                   l4343 0000  
                                 l4335 0000                                   l4327 0000  
                                 l4319 0000                                   l4263 01D0  
                                 l4175 0170                                   l4167 0169  
                                 l4079 010D                                   l3705 0000  
                                 l3721 0000                                   l3713 0000  
                                 l4433 0000                                   l4425 0000  
                                 l4417 0000                                   l4409 02D7  
                                 l4361 0276                                   l4345 0000  
                                 l4337 0000                                   l4329 0251  
                                 l4273 01D9                                   l4265 01D2  
                                 l4177 0172                                   l4089 0117  
                                 l3707 0000                                   l3715 0000  
                                 l3723 0000                                   l3731 0000  
                                 l3811 0000                                   l4443 02F7  
                                 l4435 0000                                   l4427 0000  
                                 l4419 0000                                   l4371 0000  
                                 l4363 0000                                   l4355 0269  
                                 l4347 0000                                   l4339 0000  
                                 l4275 01DB                                   l4187 0178  
                                 l4099 011F                                   l3709 0000  
                                 l3717 0000                                   l3725 0000  
                                 l3733 0000                                   l3741 03C1  
                                 l4437 0000                                   l4429 0000  
                                 l4381 0292                                   l4365 0000  
                                 l4349 0261                                   l4285 01E1  
                                 l4269 01D7                                   l4197 017E  
                                 l3719 0000                                   l3727 0000  
                                 l3735 0000                                   l3743 0000  
                                 l3815 0000                                   l3911 0000  
                                 l4439 0000                                   l4391 029B  
                                 l4383 0000                                   l4367 0000  
                                 l4375 0285                                   l4359 0275  
                                 l4295 01E8                                   l4447 0302  
                                 l3729 0000                                   l3737 0000  
                                 l3761 0000                                   l3817 0000  
                                 l3905 039A                                   l3913 0000  
                                 l3921 0000                                   l4393 02B6  
                                 l4385 0297                                   l4369 0000  
                                 l3739 0000                                   l3755 0000  
                                 l3907 0000                                   l3915 0000  
                                 l4379 0291                                   l4299 01F6  
                                 l3757 0000                                   l3765 0000  
                                 l3781 0000                                   l3909 0000  
                                 l3925 0331                                   l4397 02C2  
                                 l3941 0000                                   l3933 0000  
                                 l3767 0000                                   l3863 0442  
                                 l3927 0000                                   l3919 0000  
                                 l4399 02C3                                   l3951 0000  
                                 l3943 0000                                   l3935 0000  
                                 l3697 0000                                   l3785 0000  
                                 l3881 0000                                   l3873 035F  
                                 l3865 0000                                   l3929 0337  
                                 l3961 005D                                   l3945 0000  
                                 l3937 0000                                   l3699 0000  
                                 l3779 0000                                   l3963 005E  
                                 l3955 0000                                   l3947 0000  
                                 l3939 0000                                   l3797 0000  
                                 l3885 0000                                   l3869 0000  
                                 l3981 0000                                   l3973 006C  
                                 l3957 0051                                   l3949 0043  
                                 l3799 0000                                   l3895 0397  
                                 l3879 0384                                   l3991 0000  
                                 l3983 0080                                   l3975 0000  
                                 l3967 0063                                   _ADIE 046A  
                                 _ADIF 006A                                   l3889 0390  
                                 l3993 0000                                   l3977 0077  
                                 l3969 0066                                   l3899 0399  
                                 l3995 0093                                   l3987 008C  
                                 l3979 0079                                   l3989 008D  
                                 l3999 009F                                   _ADON 00F8  
                                 _PEIE 005E                   ??_getAdOriginalValue 0058  
                                 _main 000D                                   btemp 007E  
              _clearTwentySecondsTimer 044D                                   start 000B  
              ?_getAdOriginalCh14Value 0056                      main@ucTimerDelay1 004C  
                    main@ucTimerDelay2 004D                      main@ucTimerDelay3 004E  
                    main@ucTimerDelay4 004F                                  ??_ISR 0074  
           __end_of_isPermitSampleTime 04E4                    _sampleChannelSelect 005B  
               ??_getAdOriginaCh4Value 0058                                  ?_main 0070  
                                _DACR0 0088                                  _CLKPR 0108  
                                _T1CON 0010                        __end_of_adc_get 0433  
                                _PAOD7 0C3F                                  _PBOD6 0C46  
                                _TMR1H 000F                                  _TMR1L 000E  
                setAD_ConvertFlag@flag 0056                                  _timer 007A  
                                pclath 000A                                  status 0003  
                                wtemp0 007E         __end_of_getAdOriginalCh14Value 04DF  
        __size_of_startTwelveHourTimer 0005                   __end_of_clrSampeTime 04F2  
                __end_of_clearAllTimer 0447                           __end_of_main 0320  
               __size_of_adc_test_init 0015                      __end_of_AD_Sample 03A7  
                               ??_main 005B                   _clearPinPortAndTimer 0436  
                               _ADCON0 001F                                 _ADCON1 009F  
                 __end_of_clock_config 04B5                                 _DACCON 0087  
                               _ADRESH 001E                                 _ADRESL 009E  
                               _CLKPCE 0847                                 i1l1615 0000  
                               i1l2370 0000                                 i1l1716 0421  
                               i1l1708 03E4                                 i1l1709 03EE  
                               i1l3821 0000                                 i1l3831 0000  
                               i1l3825 0000                                 i1l3851 0411  
                               i1l3843 0000                                 i1l3827 0000  
                               i1l3861 0000                                 i1l3853 0000  
                               i1l3845 0000                                 i1l3855 041B  
                               i1l3847 0000                                 i1l3839 03F8  
                               i1l3857 0000                       __end_of_dac_init 04E9  
            ??_clearTwentySecondsTimer 0056                                 _TMR1IE 0460  
                               _TMR1IF 0060                      _getAD_ConvertFlag 033D  
                    _setAD_ConvertFlag 033F                                 _TRISA0 0428  
                               _TRISA1 0429                                 _TRISB0 0430  
                               _TRISA2 042A                                 _TRISB1 0431  
                               _TRISA3 042B                                 _TRISB2 0432  
                               _TRISB3 0433                                 _TRISB4 0434  
                               _TRISA6 042E                                 _TRISB5 0435  
                               _TRISA7 042F                                 _TRISB6 0436  
                               _TRISB7 0437                          main@ucTimer1s 0048  
                   ?_getAD_ConvertFlag 0070                     ?_setAD_ConvertFlag 0070  
                     __end_of_op1_init 0493                       __end_of_op2_init 04AD  
          ??_isFinishedThreeHoursTimer 0056          __size_of_clearThreeHoursTimer 0003  
                            ??_adc_get 0072                    ??_getAD_ConvertFlag 0056  
                  ??_setAD_ConvertFlag 0056                                 clrloop 049E  
                ?_clearPinPortAndTimer 0070                                 saved_w 007E  
              ??_clearTwelveHoursTimer 0056            ?_process_AD_Converter_Value 0070  
                        _adc_test_init 03AC       __size_of_startTwentySecondsTimer 0004  
            __end_of_getAD_ConvertFlag 033F              __end_of_setAD_ConvertFlag 0344  
                   __size_of_adc_start 0003                         __pcstackCOMMON 0070  
                         __pidataBANK0 0000        __end_of_clearTwentySecondsTimer 0450  
                  main@ucTimerRightP5s 0051              _isFinishedThreeHoursTimer 04BC  
              ??_getAdOriginalCh1Value 0058                _adc_original_CH14_value 002C  
                __end_of_timer1_config 049D                         ?_adc_test_init 0056  
     __size_of_timer1_interrupt_config 0003                  __size_of_clrSampeTime 0002  
                           __pbssBANK0 0020           __size_ofi1_setAD_ConvertFlag 0003  
                           adc_get@val 0072                             __pmaintext 000D  
                           __pintentry 0004                    main@enumInteralStep 003F  
                            ?_dac_init 0070                 ??_clearPinPortAndTimer 0056  
                __size_of_clock_config 0008                                _OP1CON0 001B  
                              _OP1CON1 001C                                _OP1CON2 001D  
                              _OP2CON0 009B                                _OP2CON1 009C  
                              _OP2CON2 009D                           _clrSampeTime 04F0  
                    __end_of_adc_start 03C4                   _uiTwentySecondsTimer 003A  
                            ?_op1_init 0070                              ?_op2_init 0070  
                   _isPermitSampleTime 04DF                 _buffer_Sample_AD_Value 0020  
                   _adc_original_value 0032          __size_of_startThreeHoursTimer 0007  
           __size_of_getAD_ConvertFlag 0002             __size_of_setAD_ConvertFlag 0005  
                       main@ucTimer20s 0049            __size_of_getAdOriginalValue 0005  
                       main@ucTimerP3s 0050                    ?_isPermitSampleTime 0070  
                           _uiBigTimer 0076                           _clock_config 04AD  
                              _adc_get 0428                    _multiFilterMaxValue 0034  
 __end_of_isFinishedTwentySecondsTimer 04C6  __size_of_isFinishedTwentySecondsTimer 0005  
         _isFinishedTwentySecondsTimer 04C1                    _multiFilterMinValue 0036  
                 ??_isPermitSampleTime 0056           __end_of_startTwelveHourTimer 04D5  
                           ??_dac_init 0056                              _AD_Sample 0344  
                         __size_of_ISR 005A          __size_of_getAdOriginaCh4Value 0005  
                      ??_adc_test_init 0057                             ??_op1_init 0056  
                           ??_op2_init 0056                _startTwentySecondsTimer 04E9  
                 end_of_initialization 045D                       main@ucLoaderStep 0043  
                           ?_AD_Sample 0070          ?_isFinishedTwentySecondsTimer 0070  
                 main@enumMainLoopStep 0040                     main@ucChannel4Type 0042  
         ??_isFinishedTwelveHoursTimer 0056                       _adc_convert_flag 0079  
               __size_of_clearAllTimer 0005           __end_of_clearThreeHoursTimer 044D  
               main@ucTimerADC1ZeroP5s 004A         __size_of_clearTwelveHoursTimer 0003  
              _timer1_interrupt_config 04ED          __end_of_clearTwelveHoursTimer 044A  
   __size_of_isFinishedThreeHoursTimer 0005                         AD_Sample@index 005A  
                     main@ucTimerX1P5s 0052                       main@ucTimerX2P5s 0053  
               main@ucTimerZeroPoint3s 0054                 main@ucTimerZeroPoint5s 0055  
                     main@ucTimerDelay 004B                        main@ucADC4_Step 0041  
  __size_of_isFinishedTwelveHoursTimer 0005                    i1_setAD_ConvertFlag 0433  
            ??_startTwentySecondsTimer 0056                    start_initialization 0450  
                          __end_of_ISR 0428               ?_clearTwentySecondsTimer 0070  
       __size_of_getAdOriginalCh1Value 0005          __end_of_getAdOriginalCh1Value 04DA  
             ??_getAdOriginalCh14Value 0058                   ?i1_setAD_ConvertFlag 0070  
                 _startTwelveHourTimer 04D0      __end_of_isFinishedThreeHoursTimer 04C1  
                   main@enumBranchStep 003E                          _clearAllTimer 0442  
                          __pdataBANK0 005B                            ??_AD_Sample 0058  
            ??_timer1_interrupt_config 0056                            __pbssCOMMON 0076  
                    __size_of_dac_init 0005                          __pcstackBANK0 0056  
       ??_isFinishedTwentySecondsTimer 0056                              _adc_start 03C1  
                    __size_of_op1_init 000B                      __size_of_op2_init 0008  
                ??i1_setAD_ConvertFlag 0070                  ?_startTwelveHourTimer 0070  
      __end_of_startTwentySecondsTimer 04ED                         ?_clearAllTimer 0070  
               __size_of_timer1_config 000A                   _clearThreeHoursTimer 044A  
         __end_of_startThreeHoursTimer 04BC                              __ptext600 04DF  
                            __ptext601 03C1                              __ptext610 044A  
                            __ptext602 04A5                              __ptext611 0447  
                            __ptext603 0488                              __ptext612 03CE  
                            __ptext604 04E4                              __ptext613 0433  
                            __ptext605 03AC                              __ptext614 0428  
                            __ptext606 04ED                              __ptext615 0000  
                            __ptext607 0493                              __ptext608 04AD  
                            __ptext609 044D                              __ptext590 04BC  
                            __ptext591 04B5                              __ptext583 0320  
                            __ptext592 04C1                              __ptext584 0436  
                            __ptext593 04C6                              __ptext585 0344  
                            __ptext594 04E9                              __ptext586 0442  
                            __ptext595 04CB                              __ptext587 03A7  
                            __ptext596 04D0                              __ptext588 033F  
                            __ptext597 04D5                              __ptext589 033D  
                            __ptext598 04DA                              __ptext599 04F0  
                             ?_adc_get 0070                 _adc_original_CH1_value 002E  
               _adc_original_CH4_value 0030                              __pswtext1 0460  
                            __pswtext2 046E                              __pswtext3 047C  
   __end_of_isFinishedTwelveHoursTimer 04D0             _isFinishedTwelveHoursTimer 04CB  
                      ISR@ucTimer1sCnt 0078          __size_of_clearPinPortAndTimer 000C  
           __end_of_getAdOriginalValue 03AC                             ?_adc_start 0070  
      __size_of_getAdOriginalCh14Value 0005                      interrupt_function 0004  
         __end_of_getAdOriginaCh4Value 04CB        __end_of_timer1_interrupt_config 04F0  
                ?_clearThreeHoursTimer 0070                   adc_test_init@channel 0058  
          __size_of_isPermitSampleTime 0005                           _uiSmallTimer 0038  
                __end_of_adc_test_init 03C1                          _timer1_config 0493  
         ??_process_AD_Converter_Value 005B                 ??_startTwelveHourTimer 0056  
                      ??_clearAllTimer 0056                 _getAdOriginalCh14Value 04DA  
                     __size_of_adc_get 000B    __size_of_process_AD_Converter_Value 001D  
                             _dac_init 04E4                       main@cTimer1s_806 003D  
                       ?_timer1_config 0070                               _op1_init 0488  
                             _op2_init 04A5                            ??_adc_start 0056  
                 _startThreeHoursTimer 04B5                  _clearTwelveHoursTimer 0447  
                        __size_of_main 0313                               clear_ram 049D  
               ??_clearThreeHoursTimer 0056       __size_of_clearTwentySecondsTimer 0003  
                        ?_clrSampeTime 0070                   _getAdOriginaCh4Value 04C6  
                          _sampleTimes 003C                  ?_startThreeHoursTimer 0070  
                             intlevel1 0000                  _getAdOriginalCh1Value 04D5  
           ?_isFinishedThreeHoursTimer 0070                      main@ucLoaderStep1 0044  
                    main@ucLoaderStep2 0045                      main@ucLoaderStep3 0046  
                    main@ucLoaderStep4 0047                          ?_clock_config 0070  
             ?_startTwentySecondsTimer 0070                i1setAD_ConvertFlag@flag 0070  
                       ??_clrSampeTime 0056            ?_isFinishedTwelveHoursTimer 0070  
                ?_getAdOriginaCh4Value 0056                        ??_timer1_config 0056  
          __end_ofi1_setAD_ConvertFlag 0436     __end_of_process_AD_Converter_Value 033D  
           _process_AD_Converter_Value 0320                 ?_clearTwelveHoursTimer 0070  
                     adc_test_init@ref 0056           __end_of_clearPinPortAndTimer 0442  
                   _getAdOriginalValue 03A7  
