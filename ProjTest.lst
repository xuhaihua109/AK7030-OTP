

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Fri May 08 06:08:31 2020

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	text1040,local,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,delta=2
    15                           	psect	swtext1,local,class=CONST,delta=2
    16                           	psect	swtext2,local,class=CONST,delta=2
    17                           	psect	swtext3,local,class=CONST,delta=2
    18                           	psect	text1042,local,class=CODE,delta=2
    19                           	psect	text1048,local,class=CODE,delta=2
    20                           	psect	text1056,local,class=CODE,delta=2
    21                           	psect	text1057,local,class=CODE,delta=2
    22                           	psect	text1058,local,class=CODE,delta=2
    23                           	psect	text1059,local,class=CODE,delta=2
    24                           	psect	text1060,local,class=CODE,delta=2
    25                           	psect	text1061,local,class=CODE,delta=2
    26                           	psect	text1062,local,class=CODE,delta=2
    27                           	psect	text1063,local,class=CODE,delta=2
    28                           	psect	text1064,local,class=CODE,delta=2
    29                           	psect	text1065,local,class=CODE,delta=2
    30                           	psect	text1067,local,class=CODE,delta=2
    31                           	psect	text1069,local,class=CODE,delta=2
    32                           	psect	text1070,local,class=CODE,delta=2
    33                           	psect	text1071,local,class=CODE,delta=2
    34                           	psect	text1072,local,class=CODE,delta=2
    35                           	psect	text1074,local,class=CODE,delta=2
    36                           	psect	text1078,local,class=CODE,delta=2
    37                           	psect	text1084,local,class=CODE,delta=2
    38                           	psect	text1089,local,class=CODE,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	text1093,local,class=CODE,delta=2
    41                           	psect	pa_nodes,global,class=CODE,delta=2
    42                           	dabs	1,0x7E,2
    43  000A                     	;#
    44                           
    45                           	psect	config
    46  2000  2FFF               	dw	12287	;#
    47  2001  3FDE               	dw	16350	;#
    48  2002  3FF8               	dw	16376	;#
    49                           
    50                           	psect	text1040
    51  0000                     __ptext1040:	
    52  001F                     _ADCON0	set	31
    53  001E                     _ADRESH	set	30
    54  001B                     _OP1CON0	set	27
    55  001C                     _OP1CON1	set	28
    56  001D                     _OP1CON2	set	29
    57  0010                     _T1CON	set	16
    58  000F                     _TMR1H	set	15
    59  000E                     _TMR1L	set	14
    60  006A                     _ADIF	set	106
    61  00F8                     _ADON	set	248
    62  005F                     _GIE	set	95
    63  00F9                     _GO	set	249
    64  0028                     _PA0	set	40
    65  0029                     _PA1	set	41
    66  002A                     _PA2	set	42
    67  002B                     _PA3	set	43
    68  002E                     _PA6	set	46
    69  0030                     _PB0	set	48
    70  0031                     _PB1	set	49
    71  0032                     _PB2	set	50
    72  0034                     _PB4	set	52
    73  0036                     _PB6	set	54
    74  0037                     _PB7	set	55
    75  005E                     _PEIE	set	94
    76  0060                     _TMR1IF	set	96
    77  009F                     _ADCON1	set	159
    78  009E                     _ADRESL	set	158
    79  009B                     _OP2CON0	set	155
    80  009C                     _OP2CON1	set	156
    81  009D                     _OP2CON2	set	157
    82  046A                     _ADIE	set	1130
    83  0460                     _TMR1IE	set	1120
    84  0428                     _TRISA0	set	1064
    85  0429                     _TRISA1	set	1065
    86  042A                     _TRISA2	set	1066
    87  042B                     _TRISA3	set	1067
    88  042E                     _TRISA6	set	1070
    89  042F                     _TRISA7	set	1071
    90  0430                     _TRISB0	set	1072
    91  0431                     _TRISB1	set	1073
    92  0432                     _TRISB2	set	1074
    93  0433                     _TRISB3	set	1075
    94  0434                     _TRISB4	set	1076
    95  0435                     _TRISB5	set	1077
    96  0436                     _TRISB6	set	1078
    97  0437                     _TRISB7	set	1079
    98  0108                     _CLKPR	set	264
    99  0847                     _CLKPCE	set	2119
   100  0C47                     _PBOD7	set	3143
   101                           
   102                           	psect	cinit
   103  0789                     start_initialization:	
   104  0789  304A               	movlw	low __pbssBANK0
   105                           
   106                           ; Clear objects allocated to COMMON
   107  078A  01FD               	clrf	__pbssCOMMON& (0+127)
   108                           
   109                           ; Clear objects allocated to BANK0
   110  078B  1383               	bcf	3,7	;select IRP bank0
   111  078C  0084               	movwf	4
   112  078D  306F               	movlw	low (__pbssBANK0+37)
   113  078E  158A  26BB  118A   	fcall	clear_ram
   114                           
   115                           ; Clear objects allocated to BANK1
   116  0791  30A0               	movlw	low __pbssBANK1
   117  0792  0084               	movwf	4
   118  0793  30DC               	movlw	low (__pbssBANK1+60)
   119  0794  158A  26BB  118A   	fcall	clear_ram
   120  0797  3090               	movlw	low __pbssBANK3
   121                           
   122                           ; Clear objects allocated to BANK3
   123  0798  1783               	bsf	3,7	;select IRP bank2
   124  0799  0084               	movwf	4
   125  079A  30D8               	movlw	low (__pbssBANK3+72)
   126  079B  158A  26BB         	fcall	clear_ram
   127  079D                     end_of_initialization:	
   128                           ;End of C runtime variable initialization code
   129                           
   130  079D  0183               	clrf	3
   131  079E  118A  2813         	ljmp	_main	;jump to C main() function
   132                           
   133                           	psect	bssCOMMON
   134  007D                     __pbssCOMMON:	
   135  007D                     vHandle20sTimerOut@ucTimeCnt:	
   136  007D                     	ds	1
   137                           
   138                           	psect	bssBANK0
   139  004A                     __pbssBANK0:	
   140  004A                     main@uiOldValue:	
   141  004A                     	ds	2
   142  004C                     _bBigTimerStartFlag:	
   143  004C                     	ds	1
   144  004D                     _bSmallTimerStartFlag:	
   145  004D                     	ds	1
   146  004E                     _bTwentyMinStartFlag:	
   147  004E                     	ds	1
   148  004F                     _bTwentySecStartFlag:	
   149  004F                     	ds	1
   150  0050                     _enumMainLoopStep:	
   151  0050                     	ds	1
   152  0051                     _sampleChannelSelect:	
   153  0051                     	ds	1
   154  0052                     _sampleTimes:	
   155  0052                     	ds	1
   156  0053                     _ucADC4_Step:	
   157  0053                     	ds	1
   158  0054                     _ucChannel5Type:	
   159  0054                     	ds	1
   160  0055                     main@bCheckTweHour:	
   161  0055                     	ds	1
   162  0056                     main@bInitFlag:	
   163  0056                     	ds	1
   164  0057                     main@ucFourthSuffix1TimerP3s:	
   165  0057                     	ds	1
   166  0058                     main@ucLoaderStep:	
   167  0058                     	ds	1
   168  0059                     main@ucLoaderStep1:	
   169  0059                     	ds	1
   170  005A                     main@ucLoaderStep2:	
   171  005A                     	ds	1
   172  005B                     main@ucLoaderStep3:	
   173  005B                     	ds	1
   174  005C                     main@ucLoaderStep4:	
   175  005C                     	ds	1
   176  005D                     main@ucTimerCntP3s:	
   177  005D                     	ds	1
   178  005E                     main@ucTimerDelay:	
   179  005E                     	ds	1
   180  005F                     main@ucTimerDelay1:	
   181  005F                     	ds	1
   182  0060                     main@ucTimerDelay2:	
   183  0060                     	ds	1
   184  0061                     main@ucTimerDelay3:	
   185  0061                     	ds	1
   186  0062                     main@ucTimerDelay4:	
   187  0062                     	ds	1
   188  0063                     main@ucTimerDelayP2sLess:	
   189  0063                     	ds	1
   190  0064                     main@ucTimerDelayP2sMore:	
   191  0064                     	ds	1
   192  0065                     main@ucTimerLargeZeroP5s:	
   193  0065                     	ds	1
   194  0066                     main@ucTimerLessZeroP5s:	
   195  0066                     	ds	1
   196  0067                     main@ucTimerP5s:	
   197  0067                     	ds	1
   198  0068                     main@ucTimerRightP5s:	
   199  0068                     	ds	1
   200  0069                     main@ucTimerZeroPoint3s:	
   201  0069                     	ds	1
   202  006A                     main@ucTimerZeroPoint5s:	
   203  006A                     	ds	1
   204  006B                     vPutSampleDataIntoTable@ucChannelFifthLength:	
   205  006B                     	ds	1
   206  006C                     vPutSampleDataIntoTable@ucChannelSecondLength:	
   207  006C                     	ds	1
   208  006D                     vPutSampleDataIntoTable@ucChannelSixthLength:	
   209  006D                     	ds	1
   210  006E                     vPutSampleDataIntoTable@ucChannelZeroLength:	
   211  006E                     	ds	1
   212                           
   213                           	psect	bssBANK1
   214  00A0                     __pbssBANK1:	
   215  00A0                     _uiBigTimer:	
   216  00A0                     	ds	2
   217  00A2                     _uiSmallTimer:	
   218  00A2                     	ds	2
   219  00A4                     _uiTwentyMinuteTimer:	
   220  00A4                     	ds	2
   221  00A6                     _uiTwentySecondsTimer:	
   222  00A6                     	ds	2
   223  00A8                     main@uiMaxValue:	
   224  00A8                     	ds	2
   225  00AA                     main@uiMinValue:	
   226  00AA                     	ds	2
   227  00AC                     ISR@ucTimer1sCnt:	
   228  00AC                     	ds	1
   229  00AD                     _adc_convert_flag:	
   230  00AD                     	ds	1
   231  00AE                     _bPause20secTimer:	
   232  00AE                     	ds	1
   233  00AF                     _timer:	
   234  00AF                     	ds	1
   235  00B0                     main@enumBranchStep:	
   236  00B0                     	ds	1
   237  00B1                     main@enumInteralStep:	
   238  00B1                     	ds	1
   239  00B2                     main@ucTimer1s:	
   240  00B2                     	ds	1
   241  00B3                     main@ucTimerLessX1P5s:	
   242  00B3                     	ds	1
   243  00B4                     main@ucTimerLessX2P5s:	
   244  00B4                     	ds	1
   245  00B5                     main@ucTimerP3s:	
   246  00B5                     	ds	1
   247  00B6                     main@ucTimerX1P5s:	
   248  00B6                     	ds	1
   249  00B7                     main@ucTimerX2P5s:	
   250  00B7                     	ds	1
   251  00B8                     vHandle20sTimerOut@ucTimerOnBehaviorStep:	
   252  00B8                     	ds	1
   253  00B9                     vHandle20sTimeron@ucCompareStep:	
   254  00B9                     	ds	1
   255  00BA                     vHandle20sTimeron@ucLessThanP3sCnt:	
   256  00BA                     	ds	1
   257  00BB                     vHandle20sTimeron@ucLessThanP8sCnt:	
   258  00BB                     	ds	1
   259  00BC                     vHandle20sTimeron@ucMoreThanP3sCnt:	
   260  00BC                     	ds	1
   261  00BD                     vHandle20sTimeron@ucMoreThanP8sCnt:	
   262  00BD                     	ds	1
   263  00BE                     vHandle20sTimeron@ucTimeCntP2s:	
   264  00BE                     	ds	1
   265  00BF                     vHandle20sTimeron@ucTimerCntLess:	
   266  00BF                     	ds	1
   267  00C0                     vHandle20sTimeron@ucTimerCntMore:	
   268  00C0                     	ds	1
   269  00C1                     vHandle20sTimeron@ucTimerCntN1:	
   270  00C1                     	ds	1
   271  00C2                     vHandle20sTimeron@ucTimerCntP5s:	
   272  00C2                     	ds	1
   273  00C3                     vHandle20sTimeron@waitLoopStep:	
   274  00C3                     	ds	1
   275  00C4                     _uiSampleChannelZero:	
   276  00C4                     	ds	24
   277                           
   278                           	psect	bssBANK3
   279  0190                     __pbssBANK3:	
   280  0190                     _uiSampleChannelFifth:	
   281  0190                     	ds	24
   282  01A8                     _uiSampleChannelSecond:	
   283  01A8                     	ds	24
   284  01C0                     _uiSampleChannelSixth:	
   285  01C0                     	ds	24
   286                           
   287                           	psect	clrtext
   288  0EBB                     clear_ram:	
   289                           ;	Called with FSR containing the base address, and
   290                           ;	W with the last address+1
   291                           
   292  0EBB  0064               	clrwdt	;clear the watchdog before getting into this loop
   293  0EBC                     clrloop:	
   294  0EBC  0180               	clrf	0	;clear RAM location pointed to by FSR
   295  0EBD  0A84               	incf	4,f	;increment pointer
   296  0EBE  0604               	xorwf	4,w	;XOR with final address
   297  0EBF  1903               	btfsc	3,2	;have we reached the end yet?
   298  0EC0  3400               	retlw	0	;all done for this memory range, return
   299  0EC1  0604               	xorwf	4,w	;XOR again to restore value
   300  0EC2  2EBC               	goto	clrloop	;do the next byte
   301                           
   302                           	psect	cstackCOMMON
   303  0070                     __pcstackCOMMON:	
   304  0070                     ?_clearTwelveHoursTimer:	
   305  0070                     ?_clearThreeHoursTimer:	
   306                           ; 0 bytes @ 0x0
   307                           
   308  0070                     ?_clearTwentySecondsTimer:	
   309                           ; 0 bytes @ 0x0
   310                           
   311  0070                     ?_clearTwentyMinuteTimer:	
   312                           ; 0 bytes @ 0x0
   313                           
   314  0070                     ?_clock_config:	
   315                           ; 0 bytes @ 0x0
   316                           
   317  0070                     ?_timer1_config:	
   318                           ; 0 bytes @ 0x0
   319                           
   320  0070                     ?_timer1_interrupt_config:	
   321                           ; 0 bytes @ 0x0
   322                           
   323  0070                     ?_op2_init:	
   324                           ; 0 bytes @ 0x0
   325                           
   326  0070                     ?_op1_init:	
   327                           ; 0 bytes @ 0x0
   328                           
   329  0070                     ?_adc_start:	
   330                           ; 0 bytes @ 0x0
   331                           
   332  0070                     ?_process_AD_Converter_Value:	
   333                           ; 0 bytes @ 0x0
   334                           
   335  0070                     ?_clrSampeTime:	
   336                           ; 0 bytes @ 0x0
   337                           
   338  0070                     ?_startTwentySecondsTimer:	
   339                           ; 0 bytes @ 0x0
   340                           
   341  0070                     ?_vHandle20sTimeron:	
   342                           ; 0 bytes @ 0x0
   343                           
   344  0070                     ?_vHandle20sTimerOut:	
   345                           ; 0 bytes @ 0x0
   346                           
   347  0070                     ?_vPause20sTimer:	
   348                           ; 0 bytes @ 0x0
   349                           
   350  0070                     ?_AD_Sample:	
   351                           ; 0 bytes @ 0x0
   352                           
   353  0070                     ?_clearAllTimer:	
   354                           ; 0 bytes @ 0x0
   355                           
   356  0070                     ?_clearPinPortAndTimer:	
   357                           ; 0 bytes @ 0x0
   358                           
   359  0070                     ?_initPin:	
   360                           ; 0 bytes @ 0x0
   361                           
   362  0070                     ?_setPB0:	
   363                           ; 0 bytes @ 0x0
   364                           
   365  0070                     ?_setPB1:	
   366                           ; 0 bytes @ 0x0
   367                           
   368  0070                     ?_setPB2:	
   369                           ; 0 bytes @ 0x0
   370                           
   371  0070                     ?_setPA0:	
   372                           ; 0 bytes @ 0x0
   373                           
   374  0070                     ?_setPA1:	
   375                           ; 0 bytes @ 0x0
   376                           
   377  0070                     ?_setPA2:	
   378                           ; 0 bytes @ 0x0
   379                           
   380  0070                     ?_setPA3:	
   381                           ; 0 bytes @ 0x0
   382                           
   383  0070                     ?_setPB6:	
   384                           ; 0 bytes @ 0x0
   385                           
   386  0070                     ?_setPB4:	
   387                           ; 0 bytes @ 0x0
   388                           
   389  0070                     ?_setPA6:	
   390                           ; 0 bytes @ 0x0
   391                           
   392  0070                     ?_setPB6AsInput:	
   393                           ; 0 bytes @ 0x0
   394                           
   395  0070                     ?_clearParaFunction1:	
   396                           ; 0 bytes @ 0x0
   397                           
   398  0070                     ?_main:	
   399                           ; 0 bytes @ 0x0
   400                           
   401  0070                     ?_setAD_ConvertFlag:	
   402                           ; 0 bytes @ 0x0
   403                           
   404  0070                     ?_ISR:	
   405                           ; 0 bytes @ 0x0
   406                           
   407  0070                     ?i1_setAD_ConvertFlag:	
   408                           ; 0 bytes @ 0x0
   409                           
   410  0070                     ??i1_setAD_ConvertFlag:	
   411                           ; 0 bytes @ 0x0
   412                           
   413  0070                     ?_isPermitSampleTime:	
   414                           ; 0 bytes @ 0x0
   415                           
   416  0070                     ?_isFinishedTwentyMinuteTimer:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ?_isFinishedTwelveHoursTimer:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?_isFinishedTwentySecondsTimer:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?_isFinishedThreeHoursTimer:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ?_getAD_ConvertFlag:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ?_adc_get:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     i1setAD_ConvertFlag@flag:	
   435                           ; 2 bytes @ 0x0
   436                           
   437                           
   438                           ; 1 bytes @ 0x0
   439  0070                     	ds	2
   440  0072                     ??_adc_get:	
   441  0072                     adc_get@val:	
   442                           ; 0 bytes @ 0x2
   443                           
   444                           
   445                           ; 2 bytes @ 0x2
   446  0072                     	ds	2
   447  0074                     ?_vPutSampleDataIntoTable:	
   448  0074                     vPutSampleDataIntoTable@uiSampleData:	
   449                           ; 0 bytes @ 0x4
   450                           
   451                           
   452                           ; 2 bytes @ 0x4
   453  0074                     	ds	2
   454  0076                     vPutSampleDataIntoTable@channel:	
   455                           
   456                           ; 1 bytes @ 0x6
   457  0076                     	ds	1
   458  0077                     ??_vPutSampleDataIntoTable:	
   459  0077                     vPutSampleDataIntoTable@i:	
   460                           ; 0 bytes @ 0x7
   461                           
   462                           
   463                           ; 2 bytes @ 0x7
   464  0077                     	ds	2
   465  0079                     ??_ISR:	
   466                           
   467                           ; 0 bytes @ 0x9
   468  0079                     	ds	4
   469                           
   470                           	psect	cstackBANK0
   471  0020                     __pcstackBANK0:	
   472  0020                     ??_clearTwelveHoursTimer:	
   473  0020                     ??_clearThreeHoursTimer:	
   474                           ; 0 bytes @ 0x0
   475                           
   476  0020                     ??_clearTwentySecondsTimer:	
   477                           ; 0 bytes @ 0x0
   478                           
   479  0020                     ??_clearTwentyMinuteTimer:	
   480                           ; 0 bytes @ 0x0
   481                           
   482  0020                     ??_clock_config:	
   483                           ; 0 bytes @ 0x0
   484                           
   485  0020                     ??_timer1_config:	
   486                           ; 0 bytes @ 0x0
   487                           
   488  0020                     ??_timer1_interrupt_config:	
   489                           ; 0 bytes @ 0x0
   490                           
   491  0020                     ??_op2_init:	
   492                           ; 0 bytes @ 0x0
   493                           
   494  0020                     ?_adc_test_init:	
   495                           ; 0 bytes @ 0x0
   496                           
   497  0020                     ??_op1_init:	
   498                           ; 0 bytes @ 0x0
   499                           
   500  0020                     ??_adc_start:	
   501                           ; 0 bytes @ 0x0
   502                           
   503  0020                     ?_startTwentyMinuteTimer:	
   504                           ; 0 bytes @ 0x0
   505                           
   506  0020                     ??_isPermitSampleTime:	
   507                           ; 0 bytes @ 0x0
   508                           
   509  0020                     ??_clrSampeTime:	
   510                           ; 0 bytes @ 0x0
   511                           
   512  0020                     ??_isFinishedTwentyMinuteTimer:	
   513                           ; 0 bytes @ 0x0
   514                           
   515  0020                     ?_startTwelveHourTimer:	
   516                           ; 0 bytes @ 0x0
   517                           
   518  0020                     ??_isFinishedTwelveHoursTimer:	
   519                           ; 0 bytes @ 0x0
   520                           
   521  0020                     ??_startTwentySecondsTimer:	
   522                           ; 0 bytes @ 0x0
   523                           
   524  0020                     ??_isFinishedTwentySecondsTimer:	
   525                           ; 0 bytes @ 0x0
   526                           
   527  0020                     ?_startThreeHoursTimer:	
   528                           ; 0 bytes @ 0x0
   529                           
   530  0020                     ??_isFinishedThreeHoursTimer:	
   531                           ; 0 bytes @ 0x0
   532                           
   533  0020                     ??_vPause20sTimer:	
   534                           ; 0 bytes @ 0x0
   535                           
   536  0020                     ??_clearAllTimer:	
   537                           ; 0 bytes @ 0x0
   538                           
   539  0020                     ??_clearPinPortAndTimer:	
   540                           ; 0 bytes @ 0x0
   541                           
   542  0020                     ??_initPin:	
   543                           ; 0 bytes @ 0x0
   544                           
   545  0020                     ??_setPB0:	
   546                           ; 0 bytes @ 0x0
   547                           
   548  0020                     ??_setPB1:	
   549                           ; 0 bytes @ 0x0
   550                           
   551  0020                     ??_setPB2:	
   552                           ; 0 bytes @ 0x0
   553                           
   554  0020                     ??_setPA0:	
   555                           ; 0 bytes @ 0x0
   556                           
   557  0020                     ??_setPA1:	
   558                           ; 0 bytes @ 0x0
   559                           
   560  0020                     ??_setPA2:	
   561                           ; 0 bytes @ 0x0
   562                           
   563  0020                     ??_setPA3:	
   564                           ; 0 bytes @ 0x0
   565                           
   566  0020                     ??_setPB6:	
   567                           ; 0 bytes @ 0x0
   568                           
   569  0020                     ??_setPB4:	
   570                           ; 0 bytes @ 0x0
   571                           
   572  0020                     ??_setPA6:	
   573                           ; 0 bytes @ 0x0
   574                           
   575  0020                     ??_setPB6AsInput:	
   576                           ; 0 bytes @ 0x0
   577                           
   578  0020                     ??_getAD_ConvertFlag:	
   579                           ; 0 bytes @ 0x0
   580                           
   581  0020                     ??_setAD_ConvertFlag:	
   582                           ; 0 bytes @ 0x0
   583                           
   584  0020                     ?_Filter:	
   585                           ; 0 bytes @ 0x0
   586                           
   587  0020                     setPB0@bValue:	
   588                           ; 2 bytes @ 0x0
   589                           
   590  0020                     setPB1@bValue:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0020                     setPB2@bValue:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0020                     setPA0@bValue:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0020                     setPA1@bValue:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0020                     setPA2@bValue:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0020                     setPA3@bValue:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0020                     setPB6@bValue:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0020                     setPB4@bValue:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0020                     setPA6@bValue:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0020                     vPause20sTimer@bValue:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0020                     setAD_ConvertFlag@flag:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0020                     adc_test_init@ref:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0020                     Filter@tmpValue:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0020                     startTwelveHourTimer@uiSetTime:	
   630                           ; 2 bytes @ 0x0
   631                           
   632  0020                     startThreeHoursTimer@uiSetTime:	
   633                           ; 2 bytes @ 0x0
   634                           
   635  0020                     startTwentyMinuteTimer@uiValue:	
   636                           ; 2 bytes @ 0x0
   637                           
   638                           
   639                           ; 2 bytes @ 0x0
   640  0020                     	ds	1
   641  0021                     ??_adc_test_init:	
   642  0021                     ??_vHandle20sTimerOut:	
   643                           ; 0 bytes @ 0x1
   644                           
   645  0021                     ??_clearParaFunction1:	
   646                           ; 0 bytes @ 0x1
   647                           
   648  0021                     vHandle20sTimerOut@bClearStep:	
   649                           ; 0 bytes @ 0x1
   650                           
   651                           
   652                           ; 1 bytes @ 0x1
   653  0021                     	ds	1
   654  0022                     ??_startTwentyMinuteTimer:	
   655  0022                     ??_startTwelveHourTimer:	
   656                           ; 0 bytes @ 0x2
   657                           
   658  0022                     ??_startThreeHoursTimer:	
   659                           ; 0 bytes @ 0x2
   660                           
   661  0022                     ??_Filter:	
   662                           ; 0 bytes @ 0x2
   663                           
   664  0022                     adc_test_init@channel:	
   665                           ; 0 bytes @ 0x2
   666                           
   667                           
   668                           ; 1 bytes @ 0x2
   669  0022                     	ds	1
   670  0023                     ??_process_AD_Converter_Value:	
   671  0023                     ??_AD_Sample:	
   672                           ; 0 bytes @ 0x3
   673                           
   674                           
   675                           ; 0 bytes @ 0x3
   676  0023                     	ds	3
   677  0026                     Filter@filter_buf:	
   678                           
   679                           ; 24 bytes @ 0x6
   680  0026                     	ds	24
   681  003E                     Filter@filter_temp:	
   682                           
   683                           ; 2 bytes @ 0x1E
   684  003E                     	ds	2
   685  0040                     Filter@filter_sum:	
   686                           
   687                           ; 2 bytes @ 0x20
   688  0040                     	ds	2
   689  0042                     Filter@cir:	
   690                           
   691                           ; 2 bytes @ 0x22
   692  0042                     	ds	2
   693  0044                     Filter@j:	
   694                           
   695                           ; 1 bytes @ 0x24
   696  0044                     	ds	1
   697  0045                     Filter@i:	
   698                           
   699                           ; 1 bytes @ 0x25
   700  0045                     	ds	1
   701  0046                     ?_getAdOriginalCh0Value:	
   702  0046                     ?_getAdOriginalCh6Value:	
   703                           ; 2 bytes @ 0x26
   704                           
   705  0046                     ?_getAdOriginalCh5Value:	
   706                           ; 2 bytes @ 0x26
   707                           
   708  0046                     ?_getAdOriginalCh2Value:	
   709                           ; 2 bytes @ 0x26
   710                           
   711                           
   712                           ; 2 bytes @ 0x26
   713  0046                     	ds	2
   714  0048                     ??_getAdOriginalCh0Value:	
   715  0048                     ??_getAdOriginalCh6Value:	
   716                           ; 0 bytes @ 0x28
   717                           
   718  0048                     ??_getAdOriginalCh5Value:	
   719                           ; 0 bytes @ 0x28
   720                           
   721  0048                     ??_vHandle20sTimeron:	
   722                           ; 0 bytes @ 0x28
   723                           
   724  0048                     ??_getAdOriginalCh2Value:	
   725                           ; 0 bytes @ 0x28
   726                           
   727  0048                     ??_main:	
   728                           ; 0 bytes @ 0x28
   729                           
   730  0048                     main@uiCh5Value:	
   731                           ; 0 bytes @ 0x28
   732                           
   733                           
   734                           ; 2 bytes @ 0x28
   735  0048                     	ds	2
   736                           
   737                           	psect	maintext
   738  0013                     __pmaintext:	
   739 ;;Data sizes: Strings 0, constant 0, data 0, bss 170, persistent 0 stack 0
   740 ;;Auto spaces:   Size  Autos    Used
   741 ;; COMMON          14     13      14
   742 ;; BANK0           80     42      79
   743 ;; BANK1           80      0      60
   744 ;; BANK3           96      0      72
   745 ;; BANK2           96      0       0
   746 ;;
   747 ;; Pointer list with targets:
   748 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   749 ;;
   750 ;; ?_getAdOriginalCh2Value	unsigned int  size(1) Largest target is 0
   751 ;;
   752 ;; ?_getAdOriginalCh6Value	unsigned int  size(1) Largest target is 0
   753 ;;
   754 ;; ?_getAdOriginalCh5Value	unsigned int  size(1) Largest target is 0
   755 ;;
   756 ;; ?_getAdOriginalCh0Value	unsigned int  size(1) Largest target is 0
   757 ;;
   758 ;; ?_Filter	unsigned int  size(1) Largest target is 0
   759 ;;
   760 ;; Filter@tmpValue	PTR int  size(2) Largest target is 24
   761 ;;		 -> uiSampleChannelSixth(BANK3[24]), uiSampleChannelFifth(BANK3[24]), uiSampleChannelSecond(BANK3[24]), uiSampleChan
      +nelZero(BANK1[24]), 
   762 ;;
   763 ;;
   764 ;; Critical Paths under _main in COMMON
   765 ;;
   766 ;;   None.
   767 ;;
   768 ;; Critical Paths under _ISR in COMMON
   769 ;;
   770 ;;   _ISR->_vPutSampleDataIntoTable
   771 ;;   _vPutSampleDataIntoTable->_adc_get
   772 ;;
   773 ;; Critical Paths under _main in BANK0
   774 ;;
   775 ;;   _main->_getAdOriginalCh0Value
   776 ;;   _main->_getAdOriginalCh6Value
   777 ;;   _main->_getAdOriginalCh5Value
   778 ;;   _vHandle20sTimeron->_getAdOriginalCh2Value
   779 ;;   _vHandle20sTimeron->_getAdOriginalCh6Value
   780 ;;   _clearParaFunction1->_setPA1
   781 ;;   _clearParaFunction1->_setPA0
   782 ;;   _clearParaFunction1->_setPB0
   783 ;;   _clearParaFunction1->_setPB1
   784 ;;   _clearParaFunction1->_setPB2
   785 ;;   _clearParaFunction1->_setPA3
   786 ;;   _clearParaFunction1->_setPB4
   787 ;;   _AD_Sample->_adc_test_init
   788 ;;   _getAdOriginalCh2Value->_Filter
   789 ;;   _vHandle20sTimerOut->_setPA3
   790 ;;   _vHandle20sTimerOut->_setPB4
   791 ;;   _vHandle20sTimerOut->_setPB6
   792 ;;   _getAdOriginalCh5Value->_Filter
   793 ;;   _getAdOriginalCh6Value->_Filter
   794 ;;   _getAdOriginalCh0Value->_Filter
   795 ;;
   796 ;; Critical Paths under _ISR in BANK0
   797 ;;
   798 ;;   None.
   799 ;;
   800 ;; Critical Paths under _main in BANK1
   801 ;;
   802 ;;   None.
   803 ;;
   804 ;; Critical Paths under _ISR in BANK1
   805 ;;
   806 ;;   None.
   807 ;;
   808 ;; Critical Paths under _main in BANK3
   809 ;;
   810 ;;   None.
   811 ;;
   812 ;; Critical Paths under _ISR in BANK3
   813 ;;
   814 ;;   None.
   815 ;;
   816 ;; Critical Paths under _main in BANK2
   817 ;;
   818 ;;   None.
   819 ;;
   820 ;; Critical Paths under _ISR in BANK2
   821 ;;
   822 ;;   None.
   823 ;;
   824 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   825 ;;
   826 ;;
   827 ;;Call Graph Tables:
   828 ;;
   829 ;; ---------------------------------------------------------------------------------
   830 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   831 ;; ---------------------------------------------------------------------------------
   832 ;; (0) _main                                                 2     2      0    3895
   833 ;;                                             40 BANK0      2     2      0
   834 ;;                            _initPin
   835 ;;                       _clock_config
   836 ;;                      _timer1_config
   837 ;;            _timer1_interrupt_config
   838 ;;                           _op2_init
   839 ;;                      _adc_test_init
   840 ;;                           _op1_init
   841 ;;                          _adc_start
   842 ;;             _startTwentyMinuteTimer
   843 ;;         _process_AD_Converter_Value
   844 ;;                 _isPermitSampleTime
   845 ;;                       _clrSampeTime
   846 ;;              _getAdOriginalCh0Value
   847 ;;        _isFinishedTwentyMinuteTimer
   848 ;;                 _clearParaFunction1
   849 ;;                             _setPA3
   850 ;;                             _setPB4
   851 ;;              _getAdOriginalCh6Value
   852 ;;               _startTwelveHourTimer
   853 ;;         _isFinishedTwelveHoursTimer
   854 ;;              _getAdOriginalCh5Value
   855 ;;                             _setPA1
   856 ;;                             _setPA0
   857 ;;                             _setPB0
   858 ;;                             _setPB1
   859 ;;                             _setPB2
   860 ;;            _startTwentySecondsTimer
   861 ;;       _isFinishedTwentySecondsTimer
   862 ;;                  _vHandle20sTimeron
   863 ;;                 _vHandle20sTimerOut
   864 ;;                             _setPA6
   865 ;;               _clearPinPortAndTimer
   866 ;;               _startThreeHoursTimer
   867 ;;          _isFinishedThreeHoursTimer
   868 ;;               _clearThreeHoursTimer
   869 ;;                             _setPA2
   870 ;;                             _setPB6
   871 ;;                      _clearAllTimer
   872 ;; ---------------------------------------------------------------------------------
   873 ;; (1) _vHandle20sTimeron                                    0     0      0    1306
   874 ;;              _getAdOriginalCh2Value
   875 ;;              _getAdOriginalCh6Value
   876 ;;                     _vPause20sTimer
   877 ;;                             _setPA3
   878 ;;                             _setPB6
   879 ;;                      _setPB6AsInput
   880 ;; ---------------------------------------------------------------------------------
   881 ;; (1) _process_AD_Converter_Value                           0     0      0      66
   882 ;;                  _getAD_ConvertFlag
   883 ;;                  _setAD_ConvertFlag
   884 ;;                          _AD_Sample
   885 ;;                          _adc_start
   886 ;; ---------------------------------------------------------------------------------
   887 ;; (1) _clearParaFunction1                                   0     0      0     154
   888 ;;                             _setPA1
   889 ;;                             _setPA0
   890 ;;                             _setPB0
   891 ;;                             _setPB1
   892 ;;                             _setPB2
   893 ;;                      _clearAllTimer
   894 ;;                             _setPA3
   895 ;;                             _setPB4
   896 ;; ---------------------------------------------------------------------------------
   897 ;; (1) _clearPinPortAndTimer                                 0     0      0       0
   898 ;;                      _clearAllTimer
   899 ;; ---------------------------------------------------------------------------------
   900 ;; (2) _AD_Sample                                            0     0      0      44
   901 ;;                      _adc_test_init
   902 ;; ---------------------------------------------------------------------------------
   903 ;; (2) _getAdOriginalCh2Value                                2     0      2     620
   904 ;;                                             38 BANK0      2     0      2
   905 ;;                             _Filter
   906 ;; ---------------------------------------------------------------------------------
   907 ;; (1) _vHandle20sTimerOut                                   1     1      0      89
   908 ;;                                              1 BANK0      1     1      0
   909 ;;                             _setPA3
   910 ;;                             _setPB4
   911 ;;                             _setPB6
   912 ;;                      _setPB6AsInput
   913 ;;            _clearTwentySecondsTimer
   914 ;; ---------------------------------------------------------------------------------
   915 ;; (1) _getAdOriginalCh5Value                                2     0      2     620
   916 ;;                                             38 BANK0      2     0      2
   917 ;;                             _Filter
   918 ;; ---------------------------------------------------------------------------------
   919 ;; (2) _getAdOriginalCh6Value                                2     0      2     620
   920 ;;                                             38 BANK0      2     0      2
   921 ;;                             _Filter
   922 ;; ---------------------------------------------------------------------------------
   923 ;; (1) _getAdOriginalCh0Value                                2     0      2     620
   924 ;;                                             38 BANK0      2     0      2
   925 ;;                             _Filter
   926 ;; ---------------------------------------------------------------------------------
   927 ;; (1) _clearAllTimer                                        0     0      0       0
   928 ;;              _clearTwelveHoursTimer
   929 ;;               _clearThreeHoursTimer
   930 ;;            _clearTwentySecondsTimer
   931 ;;             _clearTwentyMinuteTimer
   932 ;; ---------------------------------------------------------------------------------
   933 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   934 ;;                                              0 BANK0      1     1      0
   935 ;; ---------------------------------------------------------------------------------
   936 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   937 ;; ---------------------------------------------------------------------------------
   938 ;; (3) _Filter                                              38    36      2     620
   939 ;;                                              0 BANK0     38    36      2
   940 ;; ---------------------------------------------------------------------------------
   941 ;; (2) _vPause20sTimer                                       1     1      0      22
   942 ;;                                              0 BANK0      1     1      0
   943 ;; ---------------------------------------------------------------------------------
   944 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   945 ;; ---------------------------------------------------------------------------------
   946 ;; (1) _startThreeHoursTimer                                 2     0      2      22
   947 ;;                                              0 BANK0      2     0      2
   948 ;; ---------------------------------------------------------------------------------
   949 ;; (1) _isFinishedTwentySecondsTimer                         0     0      0       0
   950 ;; ---------------------------------------------------------------------------------
   951 ;; (1) _startTwentySecondsTimer                              0     0      0       0
   952 ;; ---------------------------------------------------------------------------------
   953 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   954 ;; ---------------------------------------------------------------------------------
   955 ;; (1) _startTwelveHourTimer                                 2     0      2      22
   956 ;;                                              0 BANK0      2     0      2
   957 ;; ---------------------------------------------------------------------------------
   958 ;; (1) _isFinishedTwentyMinuteTimer                          0     0      0       0
   959 ;; ---------------------------------------------------------------------------------
   960 ;; (1) _clrSampeTime                                         0     0      0       0
   961 ;; ---------------------------------------------------------------------------------
   962 ;; (1) _isPermitSampleTime                                   0     0      0       0
   963 ;; ---------------------------------------------------------------------------------
   964 ;; (1) _startTwentyMinuteTimer                               2     0      2      22
   965 ;;                                              0 BANK0      2     0      2
   966 ;; ---------------------------------------------------------------------------------
   967 ;; (2) _adc_start                                            0     0      0       0
   968 ;; ---------------------------------------------------------------------------------
   969 ;; (1) _op1_init                                             0     0      0       0
   970 ;; ---------------------------------------------------------------------------------
   971 ;; (3) _adc_test_init                                        3     2      1      44
   972 ;;                                              0 BANK0      3     2      1
   973 ;; ---------------------------------------------------------------------------------
   974 ;; (1) _op2_init                                             0     0      0       0
   975 ;; ---------------------------------------------------------------------------------
   976 ;; (1) _timer1_interrupt_config                              0     0      0       0
   977 ;; ---------------------------------------------------------------------------------
   978 ;; (1) _timer1_config                                        0     0      0       0
   979 ;; ---------------------------------------------------------------------------------
   980 ;; (1) _clock_config                                         0     0      0       0
   981 ;; ---------------------------------------------------------------------------------
   982 ;; (2) _setPB6AsInput                                        0     0      0       0
   983 ;; ---------------------------------------------------------------------------------
   984 ;; (1) _setPA6                                               1     1      0      22
   985 ;;                                              0 BANK0      1     1      0
   986 ;; ---------------------------------------------------------------------------------
   987 ;; (2) _setPB4                                               1     1      0      22
   988 ;;                                              0 BANK0      1     1      0
   989 ;; ---------------------------------------------------------------------------------
   990 ;; (1) _setPB6                                               1     1      0      22
   991 ;;                                              0 BANK0      1     1      0
   992 ;; ---------------------------------------------------------------------------------
   993 ;; (2) _setPA3                                               1     1      0      22
   994 ;;                                              0 BANK0      1     1      0
   995 ;; ---------------------------------------------------------------------------------
   996 ;; (1) _setPA2                                               1     1      0      22
   997 ;;                                              0 BANK0      1     1      0
   998 ;; ---------------------------------------------------------------------------------
   999 ;; (1) _setPA1                                               1     1      0      22
  1000 ;;                                              0 BANK0      1     1      0
  1001 ;; ---------------------------------------------------------------------------------
  1002 ;; (1) _setPA0                                               1     1      0      22
  1003 ;;                                              0 BANK0      1     1      0
  1004 ;; ---------------------------------------------------------------------------------
  1005 ;; (1) _setPB2                                               1     1      0      22
  1006 ;;                                              0 BANK0      1     1      0
  1007 ;; ---------------------------------------------------------------------------------
  1008 ;; (1) _setPB1                                               1     1      0      22
  1009 ;;                                              0 BANK0      1     1      0
  1010 ;; ---------------------------------------------------------------------------------
  1011 ;; (1) _setPB0                                               1     1      0      22
  1012 ;;                                              0 BANK0      1     1      0
  1013 ;; ---------------------------------------------------------------------------------
  1014 ;; (1) _initPin                                              0     0      0       0
  1015 ;; ---------------------------------------------------------------------------------
  1016 ;; (2) _clearTwentyMinuteTimer                               0     0      0       0
  1017 ;; ---------------------------------------------------------------------------------
  1018 ;; (2) _clearTwentySecondsTimer                              0     0      0       0
  1019 ;; ---------------------------------------------------------------------------------
  1020 ;; (2) _clearThreeHoursTimer                                 0     0      0       0
  1021 ;; ---------------------------------------------------------------------------------
  1022 ;; (2) _clearTwelveHoursTimer                                0     0      0       0
  1023 ;; ---------------------------------------------------------------------------------
  1024 ;; Estimated maximum stack depth 3
  1025 ;; ---------------------------------------------------------------------------------
  1026 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1027 ;; ---------------------------------------------------------------------------------
  1028 ;; (4) _ISR                                                  4     4      0     495
  1029 ;;                                              9 COMMON     4     4      0
  1030 ;;                i1_setAD_ConvertFlag
  1031 ;;                            _adc_get
  1032 ;;            _vPutSampleDataIntoTable
  1033 ;; ---------------------------------------------------------------------------------
  1034 ;; (5) i1_setAD_ConvertFlag                                  1     1      0      73
  1035 ;;                                              0 COMMON     1     1      0
  1036 ;; ---------------------------------------------------------------------------------
  1037 ;; (5) _adc_get                                              4     2      2      24
  1038 ;;                                              0 COMMON     4     2      2
  1039 ;; ---------------------------------------------------------------------------------
  1040 ;; (5) _vPutSampleDataIntoTable                              5     2      3     398
  1041 ;;                                              4 COMMON     5     2      3
  1042 ;;                            _adc_get (ARG)
  1043 ;; ---------------------------------------------------------------------------------
  1044 ;; Estimated maximum stack depth 5
  1045 ;; ---------------------------------------------------------------------------------
  1046 ;; Call Graph Graphs:
  1047 ;; _main (ROOT)
  1048 ;;   _initPin
  1049 ;;   _clock_config
  1050 ;;   _timer1_config
  1051 ;;   _timer1_interrupt_config
  1052 ;;   _op2_init
  1053 ;;   _adc_test_init
  1054 ;;   _op1_init
  1055 ;;   _adc_start
  1056 ;;   _startTwentyMinuteTimer
  1057 ;;   _process_AD_Converter_Value
  1058 ;;     _getAD_ConvertFlag
  1059 ;;     _setAD_ConvertFlag
  1060 ;;     _AD_Sample
  1061 ;;       _adc_test_init
  1062 ;;     _adc_start
  1063 ;;   _isPermitSampleTime
  1064 ;;   _clrSampeTime
  1065 ;;   _getAdOriginalCh0Value
  1066 ;;     _Filter
  1067 ;;   _isFinishedTwentyMinuteTimer
  1068 ;;   _clearParaFunction1
  1069 ;;     _setPA1
  1070 ;;     _setPA0
  1071 ;;     _setPB0
  1072 ;;     _setPB1
  1073 ;;     _setPB2
  1074 ;;     _clearAllTimer
  1075 ;;       _clearTwelveHoursTimer
  1076 ;;       _clearThreeHoursTimer
  1077 ;;       _clearTwentySecondsTimer
  1078 ;;       _clearTwentyMinuteTimer
  1079 ;;     _setPA3
  1080 ;;     _setPB4
  1081 ;;   _setPA3
  1082 ;;   _setPB4
  1083 ;;   _getAdOriginalCh6Value
  1084 ;;     _Filter
  1085 ;;   _startTwelveHourTimer
  1086 ;;   _isFinishedTwelveHoursTimer
  1087 ;;   _getAdOriginalCh5Value
  1088 ;;     _Filter
  1089 ;;   _setPA1
  1090 ;;   _setPA0
  1091 ;;   _setPB0
  1092 ;;   _setPB1
  1093 ;;   _setPB2
  1094 ;;   _startTwentySecondsTimer
  1095 ;;   _isFinishedTwentySecondsTimer
  1096 ;;   _vHandle20sTimeron
  1097 ;;     _getAdOriginalCh2Value
  1098 ;;       _Filter
  1099 ;;     _getAdOriginalCh6Value
  1100 ;;       _Filter
  1101 ;;     _vPause20sTimer
  1102 ;;     _setPA3
  1103 ;;     _setPB6
  1104 ;;     _setPB6AsInput
  1105 ;;   _vHandle20sTimerOut
  1106 ;;     _setPA3
  1107 ;;     _setPB4
  1108 ;;     _setPB6
  1109 ;;     _setPB6AsInput
  1110 ;;     _clearTwentySecondsTimer
  1111 ;;   _setPA6
  1112 ;;   _clearPinPortAndTimer
  1113 ;;     _clearAllTimer
  1114 ;;       _clearTwelveHoursTimer
  1115 ;;       _clearThreeHoursTimer
  1116 ;;       _clearTwentySecondsTimer
  1117 ;;       _clearTwentyMinuteTimer
  1118 ;;   _startThreeHoursTimer
  1119 ;;   _isFinishedThreeHoursTimer
  1120 ;;   _clearThreeHoursTimer
  1121 ;;   _setPA2
  1122 ;;   _setPB6
  1123 ;;   _clearAllTimer
  1124 ;;     _clearTwelveHoursTimer
  1125 ;;     _clearThreeHoursTimer
  1126 ;;     _clearTwentySecondsTimer
  1127 ;;     _clearTwentyMinuteTimer
  1128 ;;
  1129 ;; _ISR (ROOT)
  1130 ;;   i1_setAD_ConvertFlag
  1131 ;;   _adc_get
  1132 ;;   _vPutSampleDataIntoTable
  1133 ;;     _adc_get (ARG)
  1134 ;;
  1135 ;; Address spaces:
  1136 ;;Name               Size   Autos  Total    Cost      Usage
  1137 ;;BITCOMMON            E      0       0       0        0.0%
  1138 ;;NULL                 0      0       0       0        0.0%
  1139 ;;CODE                 0      0       0       0        0.0%
  1140 ;;COMMON               E      D       E       1      100.0%
  1141 ;;BITSFR0              0      0       0       1        0.0%
  1142 ;;SFR0                 0      0       0       1        0.0%
  1143 ;;BITSFR1              0      0       0       2        0.0%
  1144 ;;SFR1                 0      0       0       2        0.0%
  1145 ;;STACK                0      0       7       2        0.0%
  1146 ;;ABS                  0      0      E1       3        0.0%
  1147 ;;BITBANK0            50      0       0       4        0.0%
  1148 ;;BITSFR3              0      0       0       4        0.0%
  1149 ;;SFR3                 0      0       0       4        0.0%
  1150 ;;BANK0               50     2A      4F       5       98.8%
  1151 ;;BITSFR2              0      0       0       5        0.0%
  1152 ;;SFR2                 0      0       0       5        0.0%
  1153 ;;DATA                 0      0      E8       6        0.0%
  1154 ;;BITBANK1            50      0       0       7        0.0%
  1155 ;;BANK1               50      0      3C       8       75.0%
  1156 ;;BITBANK3            60      0       0       9        0.0%
  1157 ;;BANK3               60      0      48      10       75.0%
  1158 ;;BITBANK2            60      0       0      11        0.0%
  1159 ;;BANK2               60      0       0      12        0.0%
  1160                           
  1161                           
  1162 ;; *************** function _main *****************
  1163 ;; Defined at:
  1164 ;;		line 714 in file "C:\temp\dev\AK7030-OTP\main.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;		None
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;  uiCh5Value      2   40[BANK0 ] unsigned int 
  1169 ;; Return value:  Size  Location     Type
  1170 ;;		None               void
  1171 ;; Registers used:
  1172 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1173 ;; Tracked objects:
  1174 ;;		On entry : 17F/0
  1175 ;;		On exit  : 60/0
  1176 ;;		Unchanged: FFE00/0
  1177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1178 ;;      Params:         0       0       0       0       0
  1179 ;;      Locals:         0       2       0       0       0
  1180 ;;      Temps:          0       0       0       0       0
  1181 ;;      Totals:         0       2       0       0       0
  1182 ;;Total ram usage:        2 bytes
  1183 ;; Hardware stack levels required when called:    5
  1184 ;; This function calls:
  1185 ;;		_initPin
  1186 ;;		_clock_config
  1187 ;;		_timer1_config
  1188 ;;		_timer1_interrupt_config
  1189 ;;		_op2_init
  1190 ;;		_adc_test_init
  1191 ;;		_op1_init
  1192 ;;		_adc_start
  1193 ;;		_startTwentyMinuteTimer
  1194 ;;		_process_AD_Converter_Value
  1195 ;;		_isPermitSampleTime
  1196 ;;		_clrSampeTime
  1197 ;;		_getAdOriginalCh0Value
  1198 ;;		_isFinishedTwentyMinuteTimer
  1199 ;;		_clearParaFunction1
  1200 ;;		_setPA3
  1201 ;;		_setPB4
  1202 ;;		_getAdOriginalCh6Value
  1203 ;;		_startTwelveHourTimer
  1204 ;;		_isFinishedTwelveHoursTimer
  1205 ;;		_getAdOriginalCh5Value
  1206 ;;		_setPA1
  1207 ;;		_setPA0
  1208 ;;		_setPB0
  1209 ;;		_setPB1
  1210 ;;		_setPB2
  1211 ;;		_startTwentySecondsTimer
  1212 ;;		_isFinishedTwentySecondsTimer
  1213 ;;		_vHandle20sTimeron
  1214 ;;		_vHandle20sTimerOut
  1215 ;;		_setPA6
  1216 ;;		_clearPinPortAndTimer
  1217 ;;		_startThreeHoursTimer
  1218 ;;		_isFinishedThreeHoursTimer
  1219 ;;		_clearThreeHoursTimer
  1220 ;;		_setPA2
  1221 ;;		_setPB6
  1222 ;;		_clearAllTimer
  1223 ;; This function is called by:
  1224 ;;		Startup code after reset
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227  0013                     _main:	
  1228                           
  1229                           ;main.c: 724: static unsigned char bCheckTweHour = 0;
  1230                           ;main.c: 730: initPin();
  1231                           
  1232                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1233  0013  118A  2762  118A   	fcall	_initPin
  1234                           
  1235                           ;main.c: 733: TRISB3 = 1;
  1236  0016  1586               	bsf	6,3
  1237                           
  1238                           ;main.c: 735: TRISB5 = 1;
  1239  0017  1686               	bsf	6,5
  1240                           
  1241                           ;main.c: 737: TRISA7 = 1;
  1242  0018  1785               	bsf	5,7
  1243                           
  1244                           ;main.c: 739: TRISA6 = 1;
  1245  0019  1705               	bsf	5,6
  1246                           
  1247                           ;main.c: 741: clock_config();
  1248  001A  158A  26B3  118A   	fcall	_clock_config
  1249                           
  1250                           ;main.c: 742: timer1_config();
  1251  001D  158A  26CC  118A   	fcall	_timer1_config
  1252                           
  1253                           ;main.c: 743: timer1_interrupt_config();
  1254  0020  118A  27FB  118A   	fcall	_timer1_interrupt_config
  1255                           
  1256                           ;main.c: 744: op2_init();
  1257  0023  158A  26A4  118A   	fcall	_op2_init
  1258                           
  1259                           ;main.c: 746: adc_test_init(0,2);
  1260  0026  3002               	movlw	2
  1261  0027  1283               	bcf	3,5	;RP0=0, select bank0
  1262  0028  00A0               	movwf	?_adc_test_init
  1263  0029  3000               	movlw	0
  1264  002A  118A  274D  118A   	fcall	_adc_test_init
  1265                           
  1266                           ;main.c: 749: op1_init();
  1267  002D  158A  26E0  118A   	fcall	_op1_init
  1268                           
  1269                           ;main.c: 753: adc_start();
  1270  0030  118A  2728  118A   	fcall	_adc_start
  1271                           
  1272                           ;main.c: 766: startTwentyMinuteTimer(1200);
  1273  0033  30B0               	movlw	176
  1274  0034  00A0               	movwf	?_startTwentyMinuteTimer
  1275  0035  3004               	movlw	4
  1276  0036  00A1               	movwf	?_startTwentyMinuteTimer+1
  1277  0037  118A  27C8  118A   	fcall	_startTwentyMinuteTimer
  1278  003A                     l5047:	
  1279  003A  0064               	clrwdt	;#
  1280                           
  1281                           ;main.c: 773: process_AD_Converter_Value();
  1282  003B  118A  2714  118A   	fcall	_process_AD_Converter_Value
  1283                           
  1284                           ;main.c: 775: if( isPermitSampleTime() )
  1285  003E  158A  269E  118A   	fcall	_isPermitSampleTime
  1286  0041  3A00               	xorlw	0
  1287  0042  1903               	skipnz
  1288  0043  283A               	goto	l5047
  1289                           
  1290                           ;main.c: 776: {
  1291                           ;main.c: 779: clrSampeTime();
  1292  0044  118A  27FE  118A   	fcall	_clrSampeTime
  1293                           
  1294                           ;main.c: 794: switch(enumMainLoopStep)
  1295  0047  2C58               	goto	l5633
  1296  0048                     l5053:	
  1297                           
  1298                           ;main.c: 797: {
  1299                           ;main.c: 802: static unsigned char ucTimerZeroPoint5s = 0;
  1300                           ;main.c: 804: if(getAdOriginalCh0Value() <= 3150)
  1301  0048  118A  247F  118A   	fcall	_getAdOriginalCh0Value
  1302  004B  300C               	movlw	12
  1303  004C  0247               	subwf	?_getAdOriginalCh0Value+1,w
  1304  004D  304F               	movlw	79
  1305  004E  1903               	skipnz
  1306  004F  0246               	subwf	?_getAdOriginalCh0Value,w
  1307  0050  1803               	skipnc
  1308  0051  2854               	goto	l5057
  1309                           
  1310                           ;main.c: 805: {
  1311                           ;main.c: 806: ucTimerZeroPoint5s++;
  1312  0052  0AEA               	incf	main@ucTimerZeroPoint5s,f
  1313                           
  1314                           ;main.c: 807: }
  1315  0053  2855               	goto	l5059
  1316  0054                     l5057:	
  1317                           
  1318                           ;main.c: 808: else
  1319                           ;main.c: 809: ucTimerZeroPoint5s = 0;
  1320  0054  01EA               	clrf	main@ucTimerZeroPoint5s
  1321  0055                     l5059:	
  1322                           
  1323                           ;main.c: 811: if(ucTimerZeroPoint5s >= 5)
  1324  0055  3005               	movlw	5
  1325  0056  026A               	subwf	main@ucTimerZeroPoint5s,w
  1326  0057  1C03               	skipc
  1327  0058  285C               	goto	l5065
  1328                           
  1329                           ;main.c: 812: {
  1330                           ;main.c: 813: ucTimerZeroPoint5s = 0;
  1331  0059  01EA               	clrf	main@ucTimerZeroPoint5s
  1332                           
  1333                           ;main.c: 814: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  1334  005A  01D0               	clrf	_enumMainLoopStep
  1335  005B  0AD0               	incf	_enumMainLoopStep,f
  1336  005C                     l5065:	
  1337                           
  1338                           ;main.c: 815: }
  1339                           ;main.c: 817: if(isFinishedTwentyMinuteTimer())
  1340  005C  158A  26EB  118A   	fcall	_isFinishedTwentyMinuteTimer
  1341  005F  3A00               	xorlw	0
  1342  0060  1903               	skipnz
  1343  0061  283A               	goto	l5047
  1344  0062                     l5067:	
  1345                           
  1346                           ;main.c: 818: enumMainLoopStep = MAIN_LOOP_STEP_10_HOUR_END;
  1347  0062  3009               	movlw	9
  1348  0063  1283               	bcf	3,5	;RP0=0, select bank0
  1349  0064  00D0               	movwf	_enumMainLoopStep
  1350  0065                     l778:	
  1351                           
  1352                           ;main.c: 819: break;
  1353  0065  283A               	goto	l5047
  1354  0066                     l5069:	
  1355                           
  1356                           ;main.c: 823: {
  1357                           ;main.c: 828: static unsigned char ucTimerZeroPoint3s = 0;
  1358                           ;main.c: 830: static unsigned char ucTimerCntP3s = 0;
  1359                           ;main.c: 833: if(getAdOriginalCh0Value() <= 3150)
  1360  0066  118A  247F  118A   	fcall	_getAdOriginalCh0Value
  1361  0069  300C               	movlw	12
  1362  006A  0247               	subwf	?_getAdOriginalCh0Value+1,w
  1363  006B  304F               	movlw	79
  1364  006C  1903               	skipnz
  1365  006D  0246               	subwf	?_getAdOriginalCh0Value,w
  1366  006E  3003               	movlw	3
  1367  006F  1803               	skipnc
  1368  0070  287A               	goto	L12
  1369                           
  1370                           ;main.c: 834: {
  1371                           ;main.c: 835: ucTimerCntP3s++;
  1372  0071  0ADD               	incf	main@ucTimerCntP3s,f
  1373                           
  1374                           ;main.c: 836: if(ucTimerCntP3s >= 3)
  1375  0072  025D               	subwf	main@ucTimerCntP3s,w
  1376  0073  1C03               	skipc
  1377  0074  283A               	goto	l5047
  1378  0075  3002               	movlw	2
  1379                           
  1380                           ;main.c: 837: {
  1381                           ;main.c: 838: ucTimerCntP3s = 0;
  1382  0076  01DD               	clrf	main@ucTimerCntP3s
  1383                           
  1384                           ;main.c: 840: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
  1385  0077  00D0               	movwf	_enumMainLoopStep
  1386                           
  1387                           ;main.c: 842: ucTimerZeroPoint3s = 0;
  1388  0078  01E9               	clrf	main@ucTimerZeroPoint3s
  1389  0079  283A               	goto	l5047
  1390  007A                     L12:	
  1391                           
  1392                           ;main.c: 846: else
  1393                           ;main.c: 847: {
  1394                           ;main.c: 848: ucTimerZeroPoint3s++;
  1395  007A  0AE9               	incf	main@ucTimerZeroPoint3s,f
  1396                           
  1397                           ;main.c: 850: if(ucTimerZeroPoint3s >= 3)
  1398  007B  0269               	subwf	main@ucTimerZeroPoint3s,w
  1399  007C  1C03               	skipc
  1400  007D  283A               	goto	l5047
  1401                           
  1402                           ;main.c: 851: {
  1403                           ;main.c: 852: ucTimerZeroPoint3s = 0;
  1404  007E  01E9               	clrf	main@ucTimerZeroPoint3s
  1405                           
  1406                           ;main.c: 854: clearParaFunction1();
  1407  007F  118A  2495  118A   	fcall	_clearParaFunction1
  1408  0082  283A               	goto	l5047
  1409  0083                     l5089:	
  1410                           
  1411                           ;main.c: 862: {
  1412                           ;main.c: 867: static unsigned char ucTimerP5s = 0;
  1413                           ;main.c: 869: setPA3(1);
  1414  0083  3001               	movlw	1
  1415  0084  118A  262D  118A   	fcall	_setPA3
  1416                           
  1417                           ;main.c: 870: setPB4(1);
  1418  0087  3001               	movlw	1
  1419  0088  118A  2539  118A   	fcall	_setPB4
  1420                           
  1421                           ;main.c: 872: if(ucTimerP5s < 5)
  1422  008B  3005               	movlw	5
  1423  008C  0267               	subwf	main@ucTimerP5s,w
  1424  008D  1803               	skipnc
  1425  008E  2891               	goto	l5095
  1426                           
  1427                           ;main.c: 873: ucTimerP5s++;
  1428  008F  0AE7               	incf	main@ucTimerP5s,f
  1429  0090  283A               	goto	l5047
  1430  0091                     l5095:	
  1431  0091  30B0               	movlw	176
  1432                           
  1433                           ;main.c: 874: else
  1434                           ;main.c: 875: {
  1435                           ;main.c: 876: ucTimerP5s = 0;
  1436  0092  01E7               	clrf	main@ucTimerP5s
  1437                           
  1438                           ;main.c: 878: startTwentyMinuteTimer(1200);
  1439  0093  00A0               	movwf	?_startTwentyMinuteTimer
  1440  0094  3004               	movlw	4
  1441  0095  00A1               	movwf	?_startTwentyMinuteTimer+1
  1442  0096  118A  27C8  118A   	fcall	_startTwentyMinuteTimer
  1443                           
  1444                           ;main.c: 880: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  1445  0099  3003               	movlw	3
  1446  009A  2BC6               	goto	L1
  1447  009B                     l5101:	
  1448                           
  1449                           ;main.c: 887: {
  1450                           ;main.c: 892: static unsigned char ucTimerLessZeroP5s = 0;
  1451                           ;main.c: 894: static unsigned char ucTimerLargeZeroP5s = 0;
  1452                           ;main.c: 897: static unsigned char ucTimerRightP5s = 0;
  1453                           ;main.c: 899: if(getAdOriginalCh6Value() <= 137)
  1454  009B  118A  2636  118A   	fcall	_getAdOriginalCh6Value
  1455  009E  3000               	movlw	0
  1456  009F  0247               	subwf	?_getAdOriginalCh6Value+1,w
  1457  00A0  308A               	movlw	138
  1458  00A1  1903               	skipnz
  1459  00A2  0246               	subwf	?_getAdOriginalCh6Value,w
  1460  00A3  1803               	skipnc
  1461  00A4  28A8               	goto	l5107
  1462                           
  1463                           ;main.c: 900: {
  1464                           ;main.c: 901: ucTimerLargeZeroP5s = 0;
  1465  00A5  01E5               	clrf	main@ucTimerLargeZeroP5s
  1466                           
  1467                           ;main.c: 903: ucTimerLessZeroP5s++;
  1468  00A6  0AE6               	incf	main@ucTimerLessZeroP5s,f
  1469                           
  1470                           ;main.c: 904: }
  1471  00A7  28AB               	goto	l5113
  1472  00A8                     l5107:	
  1473                           
  1474                           ;main.c: 905: else
  1475                           ;main.c: 906: {
  1476                           ;main.c: 907: ucTimerLargeZeroP5s++;
  1477  00A8  0AE5               	incf	main@ucTimerLargeZeroP5s,f
  1478                           
  1479                           ;main.c: 909: ucTimerLessZeroP5s = 0;
  1480  00A9  01E6               	clrf	main@ucTimerLessZeroP5s
  1481                           
  1482                           ;main.c: 911: ucTimerRightP5s = 0;
  1483  00AA  01E8               	clrf	main@ucTimerRightP5s
  1484  00AB                     l5113:	
  1485                           
  1486                           ;main.c: 912: }
  1487                           ;main.c: 914: if(ucTimerLargeZeroP5s >= 3)
  1488  00AB  3003               	movlw	3
  1489  00AC  0265               	subwf	main@ucTimerLargeZeroP5s,w
  1490  00AD  1C03               	skipc
  1491  00AE  28B2               	goto	l5119
  1492  00AF  3004               	movlw	4
  1493                           
  1494                           ;main.c: 915: {
  1495                           ;main.c: 916: ucTimerLargeZeroP5s = 0;
  1496  00B0  01E5               	clrf	main@ucTimerLargeZeroP5s
  1497                           
  1498                           ;main.c: 917: enumMainLoopStep = MAIN_LOOP_STEP_FOURTH;
  1499  00B1  28CA               	goto	L2
  1500  00B2                     l5119:	
  1501                           ;main.c: 918: }
  1502                           
  1503                           
  1504                           ;main.c: 919: else if( ucTimerLessZeroP5s >= 3)
  1505  00B2  3003               	movlw	3
  1506  00B3  0266               	subwf	main@ucTimerLessZeroP5s,w
  1507  00B4  1C03               	skipc
  1508  00B5  28CB               	goto	l5133
  1509                           
  1510                           ;main.c: 920: {
  1511                           ;main.c: 922: if(getAdOriginalCh6Value() < 105)
  1512  00B6  118A  2636  118A   	fcall	_getAdOriginalCh6Value
  1513  00B9  3000               	movlw	0
  1514  00BA  0247               	subwf	?_getAdOriginalCh6Value+1,w
  1515  00BB  3069               	movlw	105
  1516  00BC  1903               	skipnz
  1517  00BD  0246               	subwf	?_getAdOriginalCh6Value,w
  1518  00BE  1803               	skipnc
  1519  00BF  28C2               	goto	l5125
  1520                           
  1521                           ;main.c: 923: {
  1522                           ;main.c: 924: ucTimerRightP5s++;
  1523  00C0  0AE8               	incf	main@ucTimerRightP5s,f
  1524                           
  1525                           ;main.c: 925: }
  1526  00C1  28C3               	goto	l5127
  1527  00C2                     l5125:	
  1528                           
  1529                           ;main.c: 926: else
  1530                           ;main.c: 927: {
  1531                           ;main.c: 928: ucTimerRightP5s = 0;
  1532  00C2  01E8               	clrf	main@ucTimerRightP5s
  1533  00C3                     l5127:	
  1534                           
  1535                           ;main.c: 929: }
  1536                           ;main.c: 931: if(ucTimerRightP5s >= 3)
  1537  00C3  3003               	movlw	3
  1538  00C4  0268               	subwf	main@ucTimerRightP5s,w
  1539  00C5  1C03               	skipc
  1540  00C6  28CB               	goto	l5133
  1541  00C7  3008               	movlw	8
  1542                           
  1543                           ;main.c: 932: {
  1544                           ;main.c: 933: ucTimerLargeZeroP5s = 0;
  1545  00C8  01E5               	clrf	main@ucTimerLargeZeroP5s
  1546                           
  1547                           ;main.c: 934: ucTimerRightP5s = 0;
  1548  00C9  01E8               	clrf	main@ucTimerRightP5s
  1549  00CA                     L2:	
  1550                           ;main.c: 935: enumMainLoopStep = MAIN_LOOP_STEP_3_HOUR_BRANCH;
  1551                           
  1552  00CA  00D0               	movwf	_enumMainLoopStep
  1553  00CB                     l5133:	
  1554                           ;main.c: 942: else
  1555                           ;main.c: 943: {
  1556                           ;main.c: 944: ;
  1557                           
  1558                           ;main.c: 936: }
  1559                           
  1560                           
  1561                           ;main.c: 945: }
  1562                           ;main.c: 947: if((MAIN_LOOP_STEP_3_HOUR_BRANCH == enumMainLoopStep) || (MAIN_LOOP_STEP_F
      +                          OURTH == enumMainLoopStep))
  1563  00CB  0850               	movf	_enumMainLoopStep,w
  1564  00CC  3A08               	xorlw	8
  1565  00CD  1903               	skipnz
  1566  00CE  28D3               	goto	l5137
  1567  00CF  0850               	movf	_enumMainLoopStep,w
  1568  00D0  3A04               	xorlw	4
  1569  00D1  1D03               	skipz
  1570  00D2  283A               	goto	l5047
  1571  00D3                     l5137:	
  1572                           
  1573                           ;main.c: 948: {
  1574                           ;main.c: 949: ucTimerRightP5s = 0;
  1575  00D3  01E8               	clrf	main@ucTimerRightP5s
  1576                           
  1577                           ;main.c: 950: ucTimerLargeZeroP5s = 0;
  1578  00D4  01E5               	clrf	main@ucTimerLargeZeroP5s
  1579                           
  1580                           ;main.c: 951: ucTimerLessZeroP5s = 0;
  1581  00D5  01E6               	clrf	main@ucTimerLessZeroP5s
  1582  00D6  283A               	goto	l5047
  1583  00D7                     l5139:	
  1584                           
  1585                           ;main.c: 959: {
  1586                           ;main.c: 965: startTwelveHourTimer(36000);
  1587  00D7  30A0               	movlw	160
  1588  00D8  00A0               	movwf	?_startTwelveHourTimer
  1589  00D9  308C               	movlw	140
  1590  00DA  00A1               	movwf	?_startTwelveHourTimer+1
  1591  00DB  118A  27B4  118A   	fcall	_startTwelveHourTimer
  1592                           
  1593                           ;main.c: 966: enumMainLoopStep = MAIN_LOOP_STEP_FIFTH;
  1594  00DE  3005               	movlw	5
  1595  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  1596  00E0  00D0               	movwf	_enumMainLoopStep
  1597                           
  1598                           ;main.c: 968: bCheckTweHour = 0;
  1599  00E1  01D5               	clrf	main@bCheckTweHour
  1600                           
  1601                           ;main.c: 970: break;
  1602  00E2  283A               	goto	l5047
  1603  00E3                     l5145:	
  1604                           
  1605                           ;main.c: 974: {
  1606                           ;main.c: 978: if(( isFinishedTwelveHoursTimer() && (! bCheckTweHour)))
  1607  00E3  158A  26F7  118A   	fcall	_isFinishedTwelveHoursTimer
  1608  00E6  3A00               	xorlw	0
  1609  00E7  1903               	skipnz
  1610  00E8  2B50               	goto	l5527
  1611  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  1612  00EA  08D5               	movf	main@bCheckTweHour,f
  1613  00EB  1D03               	skipz
  1614  00EC  2B50               	goto	l5527
  1615                           
  1616                           ;main.c: 979: {
  1617                           ;main.c: 980: enumMainLoopStep = MAIN_LOOP_STEP_10_HOUR_END;
  1618  00ED  3009               	movlw	9
  1619  00EE  00D0               	movwf	_enumMainLoopStep
  1620                           
  1621                           ;main.c: 981: bCheckTweHour = 1;
  1622  00EF  01D5               	clrf	main@bCheckTweHour
  1623  00F0  0AD5               	incf	main@bCheckTweHour,f
  1624                           
  1625                           ;main.c: 982: }
  1626  00F1  283A               	goto	l5047
  1627  00F2                     l819:	
  1628                           ;main.c: 987: {
  1629                           ;main.c: 988: case ADC4_STEP_INIT:
  1630                           
  1631                           
  1632                           ;main.c: 989: {
  1633                           ;main.c: 994: ucADC4_Step = ADC4_STEP_FIRST;
  1634  00F2  01D3               	clrf	_ucADC4_Step
  1635  00F3  0AD3               	incf	_ucADC4_Step,f
  1636                           
  1637                           ;main.c: 995: break;
  1638  00F4  283A               	goto	l5047
  1639  00F5                     l5153:	
  1640                           
  1641                           ;main.c: 1009: uiCh5Value = getAdOriginalCh5Value();
  1642  00F5  118A  2475  118A   	fcall	_getAdOriginalCh5Value
  1643  00F8  0847               	movf	?_getAdOriginalCh5Value+1,w
  1644  00F9  00C9               	movwf	main@uiCh5Value+1
  1645  00FA  0846               	movf	?_getAdOriginalCh5Value,w
  1646  00FB  00C8               	movwf	main@uiCh5Value
  1647                           
  1648                           ;main.c: 1011: if( 0 == bInitFlag)
  1649  00FC  08D6               	movf	main@bInitFlag,f
  1650  00FD  1D03               	skipz
  1651  00FE  2905               	goto	l5163
  1652                           
  1653                           ;main.c: 1012: {
  1654                           ;main.c: 1013: bInitFlag = 1;
  1655  00FF  01D6               	clrf	main@bInitFlag
  1656  0100  0AD6               	incf	main@bInitFlag,f
  1657                           
  1658                           ;main.c: 1014: uiOldValue = uiCh5Value;
  1659  0101  0849               	movf	main@uiCh5Value+1,w
  1660  0102  00CB               	movwf	main@uiOldValue+1
  1661  0103  0848               	movf	main@uiCh5Value,w
  1662  0104  00CA               	movwf	main@uiOldValue
  1663  0105                     l5163:	
  1664                           
  1665                           ;main.c: 1015: }
  1666                           ;main.c: 1019: if(LESS_THAN_1911 == ucChannel5Type)
  1667  0105  08D4               	movf	_ucChannel5Type,f
  1668  0106  1D03               	skipz
  1669  0107  290D               	goto	l5169
  1670                           
  1671                           ;main.c: 1020: {
  1672                           ;main.c: 1021: uiMinValue = 0;
  1673  0108  1683               	bsf	3,5	;RP0=1, select bank1
  1674  0109  302F               	movlw	47
  1675  010A  01AA               	clrf	main@uiMinValue^(0+128)
  1676  010B  01AB               	clrf	(main@uiMinValue+1)^(0+128)
  1677                           
  1678                           ;main.c: 1022: uiMaxValue = 3119;
  1679  010C  2915               	goto	L9
  1680  010D                     l5169:	
  1681                           ;main.c: 1023: }
  1682                           
  1683                           
  1684                           ;main.c: 1024: else if(BETWEEN_1911_AND_2067 == ucChannel5Type)
  1685  010D  0B54               	decfsz	_ucChannel5Type,w
  1686  010E  2918               	goto	l5173
  1687                           
  1688                           ;main.c: 1025: {
  1689                           ;main.c: 1026: uiMinValue = 3119 - 65;
  1690  010F  30EE               	movlw	238
  1691  0110  1683               	bsf	3,5	;RP0=1, select bank1
  1692  0111  00AA               	movwf	main@uiMinValue^(0+128)
  1693  0112  300B               	movlw	11
  1694  0113  00AB               	movwf	(main@uiMinValue^(0+128)+1)
  1695                           
  1696                           ;main.c: 1027: uiMaxValue = 3306;
  1697  0114  30EA               	movlw	234
  1698  0115                     L9:	
  1699  0115  00A8               	movwf	main@uiMaxValue^(0+128)
  1700  0116  300C               	movlw	12
  1701  0117  2936               	goto	L3
  1702  0118                     l5173:	
  1703                           ;main.c: 1028: }
  1704                           
  1705                           
  1706                           ;main.c: 1029: else if(BETWEEN_2067_AND_2204 == ucChannel5Type)
  1707  0118  0854               	movf	_ucChannel5Type,w
  1708  0119  3A02               	xorlw	2
  1709  011A  1D03               	skipz
  1710  011B  2925               	goto	l5177
  1711                           
  1712                           ;main.c: 1030: {
  1713                           ;main.c: 1031: uiMinValue = 3306 - 65;
  1714  011C  30A9               	movlw	169
  1715  011D  1683               	bsf	3,5	;RP0=1, select bank1
  1716  011E  00AA               	movwf	main@uiMinValue^(0+128)
  1717  011F  300C               	movlw	12
  1718  0120  00AB               	movwf	(main@uiMinValue^(0+128)+1)
  1719                           
  1720                           ;main.c: 1032: uiMaxValue = 3495;
  1721  0121  30A7               	movlw	167
  1722  0122  00A8               	movwf	main@uiMaxValue^(0+128)
  1723  0123  300D               	movlw	13
  1724  0124  2936               	goto	L3
  1725  0125                     l5177:	
  1726                           ;main.c: 1033: }
  1727                           
  1728                           
  1729                           ;main.c: 1034: else if(BETWEEN_2204_AND_2340 == ucChannel5Type)
  1730  0125  0854               	movf	_ucChannel5Type,w
  1731  0126  3A03               	xorlw	3
  1732  0127  1D03               	skipz
  1733  0128  292E               	goto	l5181
  1734                           
  1735                           ;main.c: 1035: {
  1736                           ;main.c: 1036: uiMinValue = 3495 - 65;
  1737  0129  3066               	movlw	102
  1738  012A  1683               	bsf	3,5	;RP0=1, select bank1
  1739  012B  00AA               	movwf	main@uiMinValue^(0+128)
  1740  012C  300D               	movlw	13
  1741  012D  2932               	goto	L10
  1742  012E                     l5181:	
  1743                           ;main.c: 1038: }
  1744                           
  1745                           ;main.c: 1037: uiMaxValue = 3684;
  1746                           
  1747                           
  1748                           ;main.c: 1039: else
  1749                           ;main.c: 1040: {
  1750                           ;main.c: 1041: uiMinValue = 3684 - 65;
  1751  012E  3023               	movlw	35
  1752  012F  1683               	bsf	3,5	;RP0=1, select bank1
  1753  0130  00AA               	movwf	main@uiMinValue^(0+128)
  1754  0131  300E               	movlw	14
  1755  0132                     L10:	
  1756  0132  00AB               	movwf	(main@uiMinValue^(0+128)+1)
  1757                           
  1758                           ;main.c: 1042: uiMaxValue = 3684;
  1759  0133  3064               	movlw	100
  1760  0134  00A8               	movwf	main@uiMaxValue^(0+128)
  1761  0135  300E               	movlw	14
  1762  0136                     L3:	
  1763  0136  00A9               	movwf	(main@uiMaxValue^(0+128)+1)
  1764                           
  1765                           ;main.c: 1043: }
  1766                           ;main.c: 1046: if(( uiCh5Value < uiMinValue )
  1767                           ;main.c: 1047: || ( uiCh5Value > uiMaxValue ))
  1768  0137  082B               	movf	(main@uiMinValue+1)^(0+128),w
  1769  0138  1283               	bcf	3,5	;RP0=0, select bank0
  1770  0139  0249               	subwf	main@uiCh5Value+1,w
  1771  013A  1D03               	skipz
  1772  013B  2940               	goto	u2435
  1773  013C  1683               	bsf	3,5	;RP0=1, select bank1
  1774  013D  082A               	movf	main@uiMinValue^(0+128),w
  1775  013E  1283               	bcf	3,5	;RP0=0, select bank0
  1776  013F  0248               	subwf	main@uiCh5Value,w
  1777  0140                     u2435:	
  1778  0140  1C03               	skipc
  1779  0141  294D               	goto	l5185
  1780  0142  0849               	movf	main@uiCh5Value+1,w
  1781  0143  1683               	bsf	3,5	;RP0=1, select bank1
  1782  0144  0229               	subwf	(main@uiMaxValue+1)^(0+128),w
  1783  0145  1D03               	skipz
  1784  0146  294B               	goto	u2445
  1785  0147  1283               	bcf	3,5	;RP0=0, select bank0
  1786  0148  0848               	movf	main@uiCh5Value,w
  1787  0149  1683               	bsf	3,5	;RP0=1, select bank1
  1788  014A  0228               	subwf	main@uiMaxValue^(0+128),w
  1789  014B                     u2445:	
  1790  014B  1803               	skipnc
  1791  014C  2952               	goto	l839
  1792  014D                     l5185:	
  1793                           
  1794                           ;main.c: 1048: {
  1795                           ;main.c: 1049: uiOldValue = uiCh5Value;
  1796  014D  1283               	bcf	3,5	;RP0=0, select bank0
  1797  014E  0849               	movf	main@uiCh5Value+1,w
  1798  014F  00CB               	movwf	main@uiOldValue+1
  1799  0150  0848               	movf	main@uiCh5Value,w
  1800  0151  00CA               	movwf	main@uiOldValue
  1801  0152                     l839:	
  1802                           
  1803                           ;main.c: 1050: }
  1804                           ;main.c: 1052: if( uiOldValue < 3119 )
  1805  0152  300C               	movlw	12
  1806  0153  1283               	bcf	3,5	;RP0=0, select bank0
  1807  0154  024B               	subwf	main@uiOldValue+1,w
  1808  0155  302F               	movlw	47
  1809  0156  1903               	skipnz
  1810  0157  024A               	subwf	main@uiOldValue,w
  1811  0158  1803               	skipnc
  1812  0159  295C               	goto	l5189
  1813                           
  1814                           ;main.c: 1053: ucChannel5Type = LESS_THAN_1911;
  1815  015A  01D4               	clrf	_ucChannel5Type
  1816  015B  297A               	goto	l843
  1817  015C                     l5189:	
  1818                           
  1819                           ;main.c: 1054: else if( uiOldValue < 3306 )
  1820  015C  300C               	movlw	12
  1821  015D  024B               	subwf	main@uiOldValue+1,w
  1822  015E  30EA               	movlw	234
  1823  015F  1903               	skipnz
  1824  0160  024A               	subwf	main@uiOldValue,w
  1825  0161  1803               	skipnc
  1826  0162  2966               	goto	l5193
  1827                           
  1828                           ;main.c: 1055: ucChannel5Type = BETWEEN_1911_AND_2067;
  1829  0163  01D4               	clrf	_ucChannel5Type
  1830  0164  0AD4               	incf	_ucChannel5Type,f
  1831  0165  297A               	goto	l843
  1832  0166                     l5193:	
  1833                           
  1834                           ;main.c: 1056: else if( uiOldValue < 3495 )
  1835  0166  300D               	movlw	13
  1836  0167  024B               	subwf	main@uiOldValue+1,w
  1837  0168  30A7               	movlw	167
  1838  0169  1903               	skipnz
  1839  016A  024A               	subwf	main@uiOldValue,w
  1840  016B  1803               	skipnc
  1841  016C  296F               	goto	l5197
  1842                           
  1843                           ;main.c: 1057: ucChannel5Type = BETWEEN_2067_AND_2204;
  1844  016D  3002               	movlw	2
  1845  016E  2979               	goto	L4
  1846  016F                     l5197:	
  1847                           
  1848                           ;main.c: 1058: else if( uiOldValue < 3684 )
  1849  016F  300E               	movlw	14
  1850  0170  024B               	subwf	main@uiOldValue+1,w
  1851  0171  3064               	movlw	100
  1852  0172  1903               	skipnz
  1853  0173  024A               	subwf	main@uiOldValue,w
  1854  0174  1803               	skipnc
  1855  0175  2978               	goto	l5201
  1856                           
  1857                           ;main.c: 1059: ucChannel5Type = BETWEEN_2204_AND_2340;
  1858  0176  3003               	movlw	3
  1859  0177  2979               	goto	L4
  1860  0178                     l5201:	
  1861                           
  1862                           ;main.c: 1060: else
  1863                           ;main.c: 1061: ucChannel5Type = MORE_THAN_2340;
  1864  0178  3004               	movlw	4
  1865  0179                     L4:	
  1866  0179  00D4               	movwf	_ucChannel5Type
  1867  017A                     l843:	
  1868                           
  1869                           ;main.c: 1063: ucADC4_Step = ADC4_STEP_SECOND;
  1870  017A  3002               	movlw	2
  1871  017B  2B43               	goto	L6
  1872  017C                     l5203:	
  1873                           ;main.c: 1064: break;
  1874                           
  1875                           
  1876                           ;main.c: 1083: {
  1877                           ;main.c: 1084: setPA1(1);
  1878  017C  3001               	movlw	1
  1879  017D  118A  24CC  118A   	fcall	_setPA1
  1880  0180                     l5205:	
  1881                           
  1882                           ;main.c: 1085: ucLoaderStep++;
  1883  0180  0AD8               	incf	main@ucLoaderStep,f
  1884                           
  1885                           ;main.c: 1086: break;
  1886  0181  283A               	goto	l5047
  1887  0182                     l5207:	
  1888                           
  1889                           ;main.c: 1090: {
  1890                           ;main.c: 1091: if(ucTimerDelay >= 5)
  1891  0182  3005               	movlw	5
  1892  0183  025E               	subwf	main@ucTimerDelay,w
  1893  0184  1C03               	skipc
  1894  0185  298C               	goto	l5215
  1895                           
  1896                           ;main.c: 1092: {
  1897                           ;main.c: 1093: setPA0(1);
  1898  0186  3001               	movlw	1
  1899  0187  118A  24C3  118A   	fcall	_setPA0
  1900  018A                     l5211:	
  1901                           
  1902                           ;main.c: 1094: ucTimerDelay = 0;
  1903  018A  01DE               	clrf	main@ucTimerDelay
  1904  018B  2980               	goto	l5205
  1905  018C                     l5215:	
  1906                           
  1907                           ;main.c: 1097: else
  1908                           ;main.c: 1098: ucTimerDelay++;
  1909  018C  0ADE               	incf	main@ucTimerDelay,f
  1910  018D  283A               	goto	l5047
  1911  018E                     l5217:	
  1912                           
  1913                           ;main.c: 1103: {
  1914                           ;main.c: 1104: if(ucTimerDelay >= 5)
  1915  018E  3005               	movlw	5
  1916  018F  025E               	subwf	main@ucTimerDelay,w
  1917  0190  1C03               	skipc
  1918  0191  298C               	goto	l5215
  1919                           
  1920                           ;main.c: 1105: {
  1921                           ;main.c: 1106: setPB0(1);
  1922  0192  3001               	movlw	1
  1923  0193  118A  24AB  118A   	fcall	_setPB0
  1924  0196  298A               	goto	l5211
  1925  0197                     l5227:	
  1926                           
  1927                           ;main.c: 1117: {
  1928                           ;main.c: 1118: if(ucTimerDelay >= 5)
  1929  0197  3005               	movlw	5
  1930  0198  025E               	subwf	main@ucTimerDelay,w
  1931  0199  1C03               	skipc
  1932  019A  298C               	goto	l5215
  1933                           
  1934                           ;main.c: 1119: {
  1935                           ;main.c: 1120: setPB1(1);
  1936  019B  3001               	movlw	1
  1937  019C  118A  24B3  118A   	fcall	_setPB1
  1938  019F  298A               	goto	l5211
  1939  01A0                     l5237:	
  1940                           
  1941                           ;main.c: 1130: {
  1942                           ;main.c: 1131: if(ucTimerDelay >= 5)
  1943  01A0  3005               	movlw	5
  1944  01A1  025E               	subwf	main@ucTimerDelay,w
  1945  01A2  1C03               	skipc
  1946  01A3  298C               	goto	l5215
  1947                           
  1948                           ;main.c: 1132: {
  1949                           ;main.c: 1133: setPB2(1);
  1950  01A4  3001               	movlw	1
  1951  01A5  118A  24BB  118A   	fcall	_setPB2
  1952  01A8  298A               	goto	l5211
  1953  01A9                     l5247:	
  1954                           
  1955                           ;main.c: 1143: {
  1956                           ;main.c: 1144: if(ucTimerDelay >= 5)
  1957  01A9  3005               	movlw	5
  1958  01AA  025E               	subwf	main@ucTimerDelay,w
  1959  01AB  1C03               	skipc
  1960  01AC  298C               	goto	l5215
  1961                           
  1962                           ;main.c: 1145: {
  1963                           ;main.c: 1146: setPA1(0);
  1964  01AD  3000               	movlw	0
  1965  01AE  118A  24CC  118A   	fcall	_setPA1
  1966                           
  1967                           ;main.c: 1147: setPA0(0);
  1968  01B1  3000               	movlw	0
  1969  01B2  118A  24C3  118A   	fcall	_setPA0
  1970                           
  1971                           ;main.c: 1148: setPB0(0);
  1972  01B5  3000               	movlw	0
  1973  01B6  118A  24AB  118A   	fcall	_setPB0
  1974                           
  1975                           ;main.c: 1149: setPB1(0);
  1976  01B9  3000               	movlw	0
  1977  01BA  118A  24B3  118A   	fcall	_setPB1
  1978                           
  1979                           ;main.c: 1150: setPB2(0);
  1980  01BD  3000               	movlw	0
  1981  01BE  118A  24BB  118A   	fcall	_setPB2
  1982  01C1  298A               	goto	l5211
  1983  01C2                     l5257:	
  1984                           
  1985                           ;main.c: 1160: {
  1986                           ;main.c: 1161: if(ucTimerDelay >= 1)
  1987  01C2  085E               	movf	main@ucTimerDelay,w
  1988  01C3  1903               	btfsc	3,2
  1989  01C4  298C               	goto	l5215
  1990                           
  1991                           ;main.c: 1162: {
  1992                           ;main.c: 1163: ucTimerDelay = 0;
  1993  01C5  01DE               	clrf	main@ucTimerDelay
  1994                           
  1995                           ;main.c: 1165: ucLoaderStep = 0;
  1996  01C6  01D8               	clrf	main@ucLoaderStep
  1997  01C7                     l5261:	
  1998                           
  1999                           ;main.c: 1166: ucADC4_Step = ADC4_STEP_THIRD;
  2000  01C7  3003               	movlw	3
  2001  01C8  2B43               	goto	L6
  2002  01C9                     l5267:	
  2003                           ;main.c: 1167: }
  2004                           
  2005  01C9  0858               	movf	main@ucLoaderStep,w
  2006                           
  2007                           ; Switch size 1, requested type "space"
  2008                           ; Number of cases is 7, Range of values is 0 to 6
  2009                           ; switch strategies available:
  2010                           ; Name         Instructions Cycles
  2011                           ; direct_byte           21     7 (fixed)
  2012                           ; simple_byte           22    12 (average)
  2013                           ; jumptable            260     6 (fixed)
  2014                           ; rangetable            11     6 (fixed)
  2015                           ; spacedrange           20     9 (fixed)
  2016                           ; locatedrange           7     3 (fixed)
  2017                           ;	Chosen strategy is direct_byte
  2018  01CA  0084               	movwf	4
  2019  01CB  3007               	movlw	7
  2020  01CC  0204               	subwf	4,w
  2021  01CD  1803               	skipnc
  2022  01CE  283A               	goto	l5047
  2023  01CF  3007               	movlw	high S5851
  2024  01D0  008A               	movwf	10
  2025  01D1  1003               	clrc
  2026  01D2  0D04               	rlf	4,w
  2027  01D3  3EED               	addlw	low S5851
  2028  01D4  0082               	movwf	2
  2029  01D5                     l5269:	
  2030                           
  2031                           ;main.c: 1188: {
  2032                           ;main.c: 1189: setPA1(1);
  2033  01D5  3001               	movlw	1
  2034  01D6  118A  24CC  118A   	fcall	_setPA1
  2035  01D9                     l5271:	
  2036                           
  2037                           ;main.c: 1190: ucLoaderStep1++;
  2038  01D9  0AD9               	incf	main@ucLoaderStep1,f
  2039                           
  2040                           ;main.c: 1191: break;
  2041  01DA  283A               	goto	l5047
  2042  01DB                     l5273:	
  2043                           
  2044                           ;main.c: 1195: {
  2045                           ;main.c: 1196: if(ucTimerDelay1 >= 5)
  2046  01DB  3005               	movlw	5
  2047  01DC  025F               	subwf	main@ucTimerDelay1,w
  2048  01DD  1C03               	skipc
  2049  01DE  29E5               	goto	l5281
  2050                           
  2051                           ;main.c: 1197: {
  2052                           ;main.c: 1198: setPA0(1);
  2053  01DF  3001               	movlw	1
  2054  01E0  118A  24C3  118A   	fcall	_setPA0
  2055  01E3                     l5277:	
  2056                           
  2057                           ;main.c: 1199: ucTimerDelay1 = 0;
  2058  01E3  01DF               	clrf	main@ucTimerDelay1
  2059  01E4  29D9               	goto	l5271
  2060  01E5                     l5281:	
  2061                           
  2062                           ;main.c: 1202: else
  2063                           ;main.c: 1203: ucTimerDelay1++;
  2064  01E5  0ADF               	incf	main@ucTimerDelay1,f
  2065  01E6  283A               	goto	l5047
  2066  01E7                     l5283:	
  2067                           
  2068                           ;main.c: 1208: {
  2069                           ;main.c: 1209: if(ucTimerDelay1 >= 5)
  2070  01E7  3005               	movlw	5
  2071  01E8  025F               	subwf	main@ucTimerDelay1,w
  2072  01E9  1C03               	skipc
  2073  01EA  29E5               	goto	l5281
  2074                           
  2075                           ;main.c: 1210: {
  2076                           ;main.c: 1211: setPB0(1);
  2077  01EB  3001               	movlw	1
  2078  01EC  118A  24AB  118A   	fcall	_setPB0
  2079  01EF  29E3               	goto	l5277
  2080  01F0                     l5293:	
  2081                           
  2082                           ;main.c: 1221: {
  2083                           ;main.c: 1222: if(ucTimerDelay1 >= 5)
  2084  01F0  3005               	movlw	5
  2085  01F1  025F               	subwf	main@ucTimerDelay1,w
  2086  01F2  1C03               	skipc
  2087  01F3  29E5               	goto	l5281
  2088                           
  2089                           ;main.c: 1223: {
  2090                           ;main.c: 1225: setPB1(1);
  2091  01F4  3001               	movlw	1
  2092  01F5  118A  24B3  118A   	fcall	_setPB1
  2093  01F8  29E3               	goto	l5277
  2094  01F9                     l5303:	
  2095                           
  2096                           ;main.c: 1235: {
  2097                           ;main.c: 1236: if(ucTimerDelay1 >= 5)
  2098  01F9  3005               	movlw	5
  2099  01FA  025F               	subwf	main@ucTimerDelay1,w
  2100  01FB  1C03               	skipc
  2101  01FC  29E5               	goto	l5281
  2102                           
  2103                           ;main.c: 1237: {
  2104                           ;main.c: 1239: setPB2(1);
  2105  01FD  3001               	movlw	1
  2106  01FE  118A  24BB  118A   	fcall	_setPB2
  2107  0201  29E3               	goto	l5277
  2108  0202                     l5313:	
  2109                           
  2110                           ;main.c: 1249: {
  2111                           ;main.c: 1250: if(ucTimerDelay1 >= 5)
  2112  0202  3005               	movlw	5
  2113  0203  025F               	subwf	main@ucTimerDelay1,w
  2114  0204  1C03               	skipc
  2115  0205  29E5               	goto	l5281
  2116                           
  2117                           ;main.c: 1251: {
  2118                           ;main.c: 1252: setPA0(0);
  2119  0206  3000               	movlw	0
  2120  0207  118A  24C3  118A   	fcall	_setPA0
  2121                           
  2122                           ;main.c: 1254: setPB0(0);
  2123  020A  3000               	movlw	0
  2124  020B  118A  24AB  118A   	fcall	_setPB0
  2125                           
  2126                           ;main.c: 1256: setPB1(0);
  2127  020E  3000               	movlw	0
  2128  020F  118A  24B3  118A   	fcall	_setPB1
  2129                           
  2130                           ;main.c: 1258: setPB2(0);
  2131  0212  3000               	movlw	0
  2132  0213  118A  24BB  118A   	fcall	_setPB2
  2133  0216  29E3               	goto	l5277
  2134  0217                     l5323:	
  2135                           
  2136                           ;main.c: 1268: {
  2137                           ;main.c: 1269: if(ucTimerDelay1 >= 1)
  2138  0217  085F               	movf	main@ucTimerDelay1,w
  2139  0218  1903               	btfsc	3,2
  2140  0219  29E5               	goto	l5281
  2141                           
  2142                           ;main.c: 1270: {
  2143                           ;main.c: 1271: ucTimerDelay1 = 0;
  2144  021A  01DF               	clrf	main@ucTimerDelay1
  2145                           
  2146                           ;main.c: 1273: ucLoaderStep1 = 0;
  2147  021B  01D9               	clrf	main@ucLoaderStep1
  2148  021C  29C7               	goto	l5261
  2149  021D                     l5333:	
  2150  021D  0859               	movf	main@ucLoaderStep1,w
  2151                           
  2152                           ; Switch size 1, requested type "space"
  2153                           ; Number of cases is 7, Range of values is 0 to 6
  2154                           ; switch strategies available:
  2155                           ; Name         Instructions Cycles
  2156                           ; direct_byte           21     7 (fixed)
  2157                           ; simple_byte           22    12 (average)
  2158                           ; jumptable            260     6 (fixed)
  2159                           ; rangetable            11     6 (fixed)
  2160                           ; spacedrange           20     9 (fixed)
  2161                           ; locatedrange           7     3 (fixed)
  2162                           ;	Chosen strategy is direct_byte
  2163  021E  0084               	movwf	4
  2164  021F  3007               	movlw	7
  2165  0220  0204               	subwf	4,w
  2166  0221  1803               	skipnc
  2167  0222  283A               	goto	l5047
  2168  0223  3008               	movlw	high S5853
  2169  0224  008A               	movwf	10
  2170  0225  1003               	clrc
  2171  0226  0D04               	rlf	4,w
  2172  0227  3E00               	addlw	low S5853
  2173  0228  0082               	movwf	2
  2174  0229                     l5335:	
  2175                           
  2176                           ;main.c: 1297: {
  2177                           ;main.c: 1299: setPA1(1);
  2178  0229  3001               	movlw	1
  2179  022A  118A  24CC  118A   	fcall	_setPA1
  2180                           
  2181                           ;main.c: 1301: setPA0(1);
  2182  022D  3001               	movlw	1
  2183  022E  118A  24C3  118A   	fcall	_setPA0
  2184  0231                     l5337:	
  2185                           
  2186                           ;main.c: 1302: ucLoaderStep2++;
  2187  0231  0ADA               	incf	main@ucLoaderStep2,f
  2188                           
  2189                           ;main.c: 1303: break;
  2190  0232  283A               	goto	l5047
  2191  0233                     l5339:	
  2192                           
  2193                           ;main.c: 1307: {
  2194                           ;main.c: 1308: if(ucTimerDelay2 >= 5)
  2195  0233  3005               	movlw	5
  2196  0234  0260               	subwf	main@ucTimerDelay2,w
  2197  0235  1C03               	skipc
  2198  0236  2A3D               	goto	l5347
  2199                           
  2200                           ;main.c: 1309: {
  2201                           ;main.c: 1311: setPB0(1);
  2202  0237  3001               	movlw	1
  2203  0238  118A  24AB  118A   	fcall	_setPB0
  2204  023B                     l5343:	
  2205                           
  2206                           ;main.c: 1312: ucTimerDelay2 = 0;
  2207  023B  01E0               	clrf	main@ucTimerDelay2
  2208  023C  2A31               	goto	l5337
  2209  023D                     l5347:	
  2210                           
  2211                           ;main.c: 1315: else
  2212                           ;main.c: 1316: ucTimerDelay2++;
  2213  023D  0AE0               	incf	main@ucTimerDelay2,f
  2214  023E  283A               	goto	l5047
  2215  023F                     l5349:	
  2216                           
  2217                           ;main.c: 1321: {
  2218                           ;main.c: 1322: if(ucTimerDelay2 >= 5)
  2219  023F  3005               	movlw	5
  2220  0240  0260               	subwf	main@ucTimerDelay2,w
  2221  0241  1C03               	skipc
  2222  0242  2A3D               	goto	l5347
  2223                           
  2224                           ;main.c: 1323: {
  2225                           ;main.c: 1325: setPB1(1);
  2226  0243  3001               	movlw	1
  2227  0244  118A  24B3  118A   	fcall	_setPB1
  2228  0247  2A3B               	goto	l5343
  2229  0248                     l5359:	
  2230                           
  2231                           ;main.c: 1335: {
  2232                           ;main.c: 1336: if(ucTimerDelay2 >= 5)
  2233  0248  3005               	movlw	5
  2234  0249  0260               	subwf	main@ucTimerDelay2,w
  2235  024A  1C03               	skipc
  2236  024B  2A3D               	goto	l5347
  2237                           
  2238                           ;main.c: 1337: {
  2239                           ;main.c: 1339: setPB2(1);
  2240  024C  3001               	movlw	1
  2241  024D  118A  24BB  118A   	fcall	_setPB2
  2242  0250  2A3B               	goto	l5343
  2243  0251                     l5369:	
  2244                           
  2245                           ;main.c: 1349: {
  2246                           ;main.c: 1350: if(ucTimerDelay2 >= 5)
  2247  0251  3005               	movlw	5
  2248  0252  0260               	subwf	main@ucTimerDelay2,w
  2249  0253  1C03               	skipc
  2250  0254  2A3D               	goto	l5347
  2251                           
  2252                           ;main.c: 1351: {
  2253                           ;main.c: 1354: setPB0(0);
  2254  0255  3000               	movlw	0
  2255  0256  118A  24AB  118A   	fcall	_setPB0
  2256                           
  2257                           ;main.c: 1356: setPB1(0);
  2258  0259  3000               	movlw	0
  2259  025A  118A  24B3  118A   	fcall	_setPB1
  2260                           
  2261                           ;main.c: 1358: setPB2(0);
  2262  025D  3000               	movlw	0
  2263  025E  118A  24BB  118A   	fcall	_setPB2
  2264  0261  2A3B               	goto	l5343
  2265  0262                     l5379:	
  2266                           
  2267                           ;main.c: 1368: {
  2268                           ;main.c: 1369: if(ucTimerDelay2 >= 1)
  2269  0262  0860               	movf	main@ucTimerDelay2,w
  2270  0263  1903               	btfsc	3,2
  2271  0264  2A3D               	goto	l5347
  2272                           
  2273                           ;main.c: 1370: {
  2274                           ;main.c: 1371: ucTimerDelay2 = 0;
  2275  0265  01E0               	clrf	main@ucTimerDelay2
  2276                           
  2277                           ;main.c: 1373: ucLoaderStep2 = 0;
  2278  0266  01DA               	clrf	main@ucLoaderStep2
  2279  0267  29C7               	goto	l5261
  2280  0268                     l5389:	
  2281  0268  085A               	movf	main@ucLoaderStep2,w
  2282                           
  2283                           ; Switch size 1, requested type "space"
  2284                           ; Number of cases is 6, Range of values is 0 to 5
  2285                           ; switch strategies available:
  2286                           ; Name         Instructions Cycles
  2287                           ; direct_byte           19     7 (fixed)
  2288                           ; simple_byte           19    10 (average)
  2289                           ; jumptable            260     6 (fixed)
  2290                           ; rangetable            10     6 (fixed)
  2291                           ; spacedrange           18     9 (fixed)
  2292                           ; locatedrange           6     3 (fixed)
  2293                           ;	Chosen strategy is direct_byte
  2294  0269  0084               	movwf	4
  2295  026A  3006               	movlw	6
  2296  026B  0204               	subwf	4,w
  2297  026C  1803               	skipnc
  2298  026D  283A               	goto	l5047
  2299  026E  3008               	movlw	high S5855
  2300  026F  008A               	movwf	10
  2301  0270  1003               	clrc
  2302  0271  0D04               	rlf	4,w
  2303  0272  3E0E               	addlw	low S5855
  2304  0273  0082               	movwf	2
  2305  0274                     l5391:	
  2306                           
  2307                           ;main.c: 1397: {
  2308                           ;main.c: 1399: setPB0(1);
  2309  0274  3001               	movlw	1
  2310  0275  118A  24AB  118A   	fcall	_setPB0
  2311                           
  2312                           ;main.c: 1401: setPA0(1);
  2313  0278  3001               	movlw	1
  2314  0279  118A  24C3  118A   	fcall	_setPA0
  2315                           
  2316                           ;main.c: 1403: setPA1(1);
  2317  027C  3001               	movlw	1
  2318  027D  118A  24CC  118A   	fcall	_setPA1
  2319  0280                     l5393:	
  2320                           
  2321                           ;main.c: 1404: ucLoaderStep3++;
  2322  0280  0ADB               	incf	main@ucLoaderStep3,f
  2323                           
  2324                           ;main.c: 1405: break;
  2325  0281  283A               	goto	l5047
  2326  0282                     l5395:	
  2327                           
  2328                           ;main.c: 1409: {
  2329                           ;main.c: 1410: if(ucTimerDelay3 >= 5)
  2330  0282  3005               	movlw	5
  2331  0283  0261               	subwf	main@ucTimerDelay3,w
  2332  0284  1C03               	skipc
  2333  0285  2A8C               	goto	l5403
  2334                           
  2335                           ;main.c: 1411: {
  2336                           ;main.c: 1413: setPB1(1);
  2337  0286  3001               	movlw	1
  2338  0287  118A  24B3  118A   	fcall	_setPB1
  2339  028A                     l5399:	
  2340                           
  2341                           ;main.c: 1414: ucTimerDelay3 = 0;
  2342  028A  01E1               	clrf	main@ucTimerDelay3
  2343  028B  2A80               	goto	l5393
  2344  028C                     l5403:	
  2345                           
  2346                           ;main.c: 1417: else
  2347                           ;main.c: 1418: ucTimerDelay3++;
  2348  028C  0AE1               	incf	main@ucTimerDelay3,f
  2349  028D  283A               	goto	l5047
  2350  028E                     l5405:	
  2351                           
  2352                           ;main.c: 1423: {
  2353                           ;main.c: 1424: if(ucTimerDelay3 >= 5)
  2354  028E  3005               	movlw	5
  2355  028F  0261               	subwf	main@ucTimerDelay3,w
  2356  0290  1C03               	skipc
  2357  0291  2A8C               	goto	l5403
  2358                           
  2359                           ;main.c: 1425: {
  2360                           ;main.c: 1427: setPB2(1);
  2361  0292  3001               	movlw	1
  2362  0293  118A  24BB  118A   	fcall	_setPB2
  2363  0296  2A8A               	goto	l5399
  2364  0297                     l5415:	
  2365                           
  2366                           ;main.c: 1438: {
  2367                           ;main.c: 1439: if(ucTimerDelay3 >= 5)
  2368  0297  3005               	movlw	5
  2369  0298  0261               	subwf	main@ucTimerDelay3,w
  2370  0299  1C03               	skipc
  2371  029A  2A8C               	goto	l5403
  2372                           
  2373                           ;main.c: 1440: {
  2374                           ;main.c: 1443: setPB1(0);
  2375  029B  3000               	movlw	0
  2376  029C  118A  24B3  118A   	fcall	_setPB1
  2377                           
  2378                           ;main.c: 1445: setPB2(0);
  2379  029F  3000               	movlw	0
  2380  02A0  118A  24BB  118A   	fcall	_setPB2
  2381  02A3  2A8A               	goto	l5399
  2382  02A4                     l5425:	
  2383                           
  2384                           ;main.c: 1455: {
  2385                           ;main.c: 1456: if(ucTimerDelay3 >= 1)
  2386  02A4  0861               	movf	main@ucTimerDelay3,w
  2387  02A5  1903               	btfsc	3,2
  2388  02A6  2A8C               	goto	l5403
  2389                           
  2390                           ;main.c: 1457: {
  2391                           ;main.c: 1458: ucTimerDelay3 = 0;
  2392  02A7  01E1               	clrf	main@ucTimerDelay3
  2393                           
  2394                           ;main.c: 1460: ucLoaderStep3 = 0;
  2395  02A8  01DB               	clrf	main@ucLoaderStep3
  2396  02A9  29C7               	goto	l5261
  2397  02AA                     l5435:	
  2398  02AA  085B               	movf	main@ucLoaderStep3,w
  2399                           
  2400                           ; Switch size 1, requested type "space"
  2401                           ; Number of cases is 5, Range of values is 0 to 4
  2402                           ; switch strategies available:
  2403                           ; Name         Instructions Cycles
  2404                           ; simple_byte           16     9 (average)
  2405                           ; direct_byte           17     7 (fixed)
  2406                           ; jumptable            260     6 (fixed)
  2407                           ; rangetable             9     6 (fixed)
  2408                           ; spacedrange           16     9 (fixed)
  2409                           ; locatedrange           5     3 (fixed)
  2410                           ;	Chosen strategy is simple_byte
  2411  02AB  3A00               	xorlw	0	; case 0
  2412  02AC  1903               	skipnz
  2413  02AD  2A74               	goto	l5391
  2414  02AE  3A01               	xorlw	1	; case 1
  2415  02AF  1903               	skipnz
  2416  02B0  2A82               	goto	l5395
  2417  02B1  3A03               	xorlw	3	; case 2
  2418  02B2  1903               	skipnz
  2419  02B3  2A8E               	goto	l5405
  2420  02B4  3A01               	xorlw	1	; case 3
  2421  02B5  1903               	skipnz
  2422  02B6  2A97               	goto	l5415
  2423  02B7  3A07               	xorlw	7	; case 4
  2424  02B8  1903               	skipnz
  2425  02B9  2AA4               	goto	l5425
  2426  02BA  2865               	goto	l778
  2427  02BB                     l5437:	
  2428                           
  2429                           ;main.c: 1484: {
  2430                           ;main.c: 1486: setPB0(1);
  2431  02BB  3001               	movlw	1
  2432  02BC  118A  24AB  118A   	fcall	_setPB0
  2433                           
  2434                           ;main.c: 1488: setPA0(1);
  2435  02BF  3001               	movlw	1
  2436  02C0  118A  24C3  118A   	fcall	_setPA0
  2437                           
  2438                           ;main.c: 1490: setPA1(1);
  2439  02C3  3001               	movlw	1
  2440  02C4  118A  24CC  118A   	fcall	_setPA1
  2441                           
  2442                           ;main.c: 1492: setPB1(1);
  2443  02C7  3001               	movlw	1
  2444  02C8  118A  24B3  118A   	fcall	_setPB1
  2445  02CB                     l5439:	
  2446                           
  2447                           ;main.c: 1493: ucLoaderStep4++;
  2448  02CB  0ADC               	incf	main@ucLoaderStep4,f
  2449                           
  2450                           ;main.c: 1494: break;
  2451  02CC  283A               	goto	l5047
  2452  02CD                     l5441:	
  2453                           
  2454                           ;main.c: 1498: {
  2455                           ;main.c: 1499: if(ucTimerDelay4 >= 5)
  2456  02CD  3005               	movlw	5
  2457  02CE  0262               	subwf	main@ucTimerDelay4,w
  2458  02CF  1C03               	skipc
  2459  02D0  2AD7               	goto	l5449
  2460                           
  2461                           ;main.c: 1500: {
  2462                           ;main.c: 1502: setPB2(1);
  2463  02D1  3001               	movlw	1
  2464  02D2                     L7:	
  2465  02D2  118A  24BB  118A   	fcall	_setPB2
  2466                           
  2467                           ;main.c: 1503: ucTimerDelay4 = 0;
  2468  02D5  01E2               	clrf	main@ucTimerDelay4
  2469  02D6  2ACB               	goto	l5439
  2470  02D7                     l5449:	
  2471                           
  2472                           ;main.c: 1506: else
  2473                           ;main.c: 1507: ucTimerDelay4++;
  2474  02D7  0AE2               	incf	main@ucTimerDelay4,f
  2475  02D8  283A               	goto	l5047
  2476  02D9                     l5451:	
  2477                           
  2478                           ;main.c: 1512: {
  2479                           ;main.c: 1513: if(ucTimerDelay4 >= 5)
  2480  02D9  3005               	movlw	5
  2481  02DA  0262               	subwf	main@ucTimerDelay4,w
  2482  02DB  1C03               	skipc
  2483  02DC  2AD7               	goto	l5449
  2484                           
  2485                           ;main.c: 1514: {
  2486                           ;main.c: 1516: setPB2(0);
  2487  02DD  3000               	movlw	0
  2488  02DE  2AD2               	goto	L7
  2489  02DF                     l5461:	
  2490                           
  2491                           ;main.c: 1526: {
  2492                           ;main.c: 1527: if(ucTimerDelay4 >= 1)
  2493  02DF  0862               	movf	main@ucTimerDelay4,w
  2494  02E0  1903               	btfsc	3,2
  2495  02E1  2AD7               	goto	l5449
  2496                           
  2497                           ;main.c: 1528: {
  2498                           ;main.c: 1529: ucTimerDelay4 = 0;
  2499  02E2  01E2               	clrf	main@ucTimerDelay4
  2500                           
  2501                           ;main.c: 1531: ucLoaderStep4 = 0;
  2502  02E3  01DC               	clrf	main@ucLoaderStep4
  2503  02E4  29C7               	goto	l5261
  2504  02E5                     l5471:	
  2505  02E5  085C               	movf	main@ucLoaderStep4,w
  2506                           
  2507                           ; Switch size 1, requested type "space"
  2508                           ; Number of cases is 4, Range of values is 0 to 3
  2509                           ; switch strategies available:
  2510                           ; Name         Instructions Cycles
  2511                           ; simple_byte           13     7 (average)
  2512                           ; direct_byte           15     7 (fixed)
  2513                           ; jumptable            260     6 (fixed)
  2514                           ; rangetable             8     6 (fixed)
  2515                           ; spacedrange           14     9 (fixed)
  2516                           ; locatedrange           4     3 (fixed)
  2517                           ;	Chosen strategy is simple_byte
  2518  02E6  3A00               	xorlw	0	; case 0
  2519  02E7  1903               	skipnz
  2520  02E8  2ABB               	goto	l5437
  2521  02E9  3A01               	xorlw	1	; case 1
  2522  02EA  1903               	skipnz
  2523  02EB  2ACD               	goto	l5441
  2524  02EC  3A03               	xorlw	3	; case 2
  2525  02ED  1903               	skipnz
  2526  02EE  2AD9               	goto	l5451
  2527  02EF  3A01               	xorlw	1	; case 3
  2528  02F0  1903               	skipnz
  2529  02F1  2ADF               	goto	l5461
  2530  02F2  2865               	goto	l778
  2531  02F3                     l5475:	
  2532  02F3  0854               	movf	_ucChannel5Type,w
  2533                           
  2534                           ; Switch size 1, requested type "space"
  2535                           ; Number of cases is 5, Range of values is 0 to 4
  2536                           ; switch strategies available:
  2537                           ; Name         Instructions Cycles
  2538                           ; simple_byte           16     9 (average)
  2539                           ; direct_byte           17     7 (fixed)
  2540                           ; jumptable            260     6 (fixed)
  2541                           ; rangetable             9     6 (fixed)
  2542                           ; spacedrange           16     9 (fixed)
  2543                           ; locatedrange           5     3 (fixed)
  2544                           ;	Chosen strategy is simple_byte
  2545  02F4  3A00               	xorlw	0	; case 0
  2546  02F5  1903               	skipnz
  2547  02F6  29C9               	goto	l5267
  2548  02F7  3A01               	xorlw	1	; case 1
  2549  02F8  1903               	skipnz
  2550  02F9  2A1D               	goto	l5333
  2551  02FA  3A03               	xorlw	3	; case 2
  2552  02FB  1903               	skipnz
  2553  02FC  2A68               	goto	l5389
  2554  02FD  3A01               	xorlw	1	; case 3
  2555  02FE  1903               	skipnz
  2556  02FF  2AAA               	goto	l5435
  2557  0300  3A07               	xorlw	7	; case 4
  2558  0301  1903               	skipnz
  2559  0302  2AE5               	goto	l5471
  2560  0303  2865               	goto	l778
  2561  0304                     l5477:	
  2562                           
  2563                           ;main.c: 1555: {
  2564                           ;main.c: 1559: static unsigned char ucTimerDelayP2sLess = 0;
  2565                           ;main.c: 1561: static unsigned char ucTimerDelayP2sMore = 0;
  2566                           ;main.c: 1563: if( getAdOriginalCh6Value() <= 242 )
  2567  0304  118A  2636  118A   	fcall	_getAdOriginalCh6Value
  2568  0307  3000               	movlw	0
  2569  0308  0247               	subwf	?_getAdOriginalCh6Value+1,w
  2570  0309  30F3               	movlw	243
  2571  030A  1903               	skipnz
  2572  030B  0246               	subwf	?_getAdOriginalCh6Value,w
  2573  030C  1803               	skipnc
  2574  030D  2B11               	goto	l5483
  2575                           
  2576                           ;main.c: 1564: {
  2577                           ;main.c: 1565: ucTimerDelayP2sLess++;
  2578  030E  0AE3               	incf	main@ucTimerDelayP2sLess,f
  2579                           
  2580                           ;main.c: 1567: ucTimerDelayP2sMore = 0;
  2581  030F  01E4               	clrf	main@ucTimerDelayP2sMore
  2582                           
  2583                           ;main.c: 1568: }
  2584  0310  2B13               	goto	l5487
  2585  0311                     l5483:	
  2586                           
  2587                           ;main.c: 1569: else
  2588                           ;main.c: 1570: {
  2589                           ;main.c: 1571: ucTimerDelayP2sMore++;
  2590  0311  0AE4               	incf	main@ucTimerDelayP2sMore,f
  2591                           
  2592                           ;main.c: 1572: ucTimerDelayP2sLess = 0;
  2593  0312  01E3               	clrf	main@ucTimerDelayP2sLess
  2594  0313                     l5487:	
  2595                           
  2596                           ;main.c: 1573: }
  2597                           ;main.c: 1575: if(ucTimerDelayP2sLess > 200)
  2598  0313  30C9               	movlw	201
  2599  0314  0263               	subwf	main@ucTimerDelayP2sLess,w
  2600  0315  1C03               	skipc
  2601  0316  2B19               	goto	l978
  2602                           
  2603                           ;main.c: 1576: ucTimerDelayP2sLess = 2;
  2604  0317  3002               	movlw	2
  2605  0318  00E3               	movwf	main@ucTimerDelayP2sLess
  2606  0319                     l978:	
  2607                           
  2608                           ;main.c: 1579: if(ucTimerDelayP2sMore > 200)
  2609  0319  30C9               	movlw	201
  2610  031A  0264               	subwf	main@ucTimerDelayP2sMore,w
  2611                           
  2612                           ;main.c: 1580: ucTimerDelayP2sMore = 2;
  2613  031B  3002               	movlw	2
  2614  031C  1803               	btfsc	3,0
  2615  031D  00E4               	movwf	main@ucTimerDelayP2sMore
  2616                           
  2617                           ;main.c: 1582: if( ucTimerDelayP2sLess >= 2)
  2618  031E  0263               	subwf	main@ucTimerDelayP2sLess,w
  2619  031F  1C03               	skipc
  2620  0320  2B35               	goto	l5503
  2621                           
  2622                           ;main.c: 1583: {
  2623                           ;main.c: 1584: ucTimerDelayP2sLess = 0;
  2624  0321  01E3               	clrf	main@ucTimerDelayP2sLess
  2625                           
  2626                           ;main.c: 1585: ucTimerDelayP2sMore = 0;
  2627  0322  01E4               	clrf	main@ucTimerDelayP2sMore
  2628                           
  2629                           ;main.c: 1587: startTwentySecondsTimer();
  2630  0323  118A  27DC  118A   	fcall	_startTwentySecondsTimer
  2631                           
  2632                           ;main.c: 1589: if( !isFinishedTwentySecondsTimer() )
  2633  0326  158A  26D6  118A   	fcall	_isFinishedTwentySecondsTimer
  2634  0329  3800               	iorlw	0
  2635  032A  1D03               	skipz
  2636  032B  2B30               	goto	l5501
  2637  032C                     l5499:	
  2638                           
  2639                           ;main.c: 1590: {
  2640                           ;main.c: 1595: vHandle20sTimeron();
  2641  032C  118A  2541  118A   	fcall	_vHandle20sTimeron
  2642                           
  2643                           ;main.c: 1596: }
  2644  032F  283A               	goto	l5047
  2645  0330                     l5501:	
  2646                           
  2647                           ;main.c: 1597: else
  2648                           ;main.c: 1599: {
  2649                           ;main.c: 1603: vHandle20sTimerOut(0);
  2650  0330  3000               	movlw	0
  2651  0331  118A  24E7  118A   	fcall	_vHandle20sTimerOut
  2652  0334  283A               	goto	l5047
  2653  0335                     l5503:	
  2654                           
  2655                           ;main.c: 1606: else if(ucTimerDelayP2sMore >= 2)
  2656  0335  3002               	movlw	2
  2657  0336  0264               	subwf	main@ucTimerDelayP2sMore,w
  2658  0337  1C03               	skipc
  2659  0338  283A               	goto	l5047
  2660                           
  2661                           ;main.c: 1607: {
  2662                           ;main.c: 1608: ucTimerDelayP2sMore = 0;
  2663  0339  01E4               	clrf	main@ucTimerDelayP2sMore
  2664                           
  2665                           ;main.c: 1609: ucTimerDelayP2sLess = 0;
  2666  033A  01E3               	clrf	main@ucTimerDelayP2sLess
  2667  033B  2B2C               	goto	l5499
  2668  033C                     l5509:	
  2669  033C  3004               	movlw	4
  2670                           
  2671                           ;main.c: 1938: {
  2672                           ;main.c: 1942: static unsigned char ucFourthSuffix1TimerP3s = 0;
  2673                           ;main.c: 1944: ucFourthSuffix1TimerP3s++;
  2674  033D  0AD7               	incf	main@ucFourthSuffix1TimerP3s,f
  2675                           
  2676                           ;main.c: 1946: if( ucFourthSuffix1TimerP3s > 3)
  2677  033E  0257               	subwf	main@ucFourthSuffix1TimerP3s,w
  2678  033F  1C03               	skipc
  2679  0340  283A               	goto	l5047
  2680  0341  300C               	movlw	12
  2681                           
  2682                           ;main.c: 1947: {
  2683                           ;main.c: 1948: ucFourthSuffix1TimerP3s = 0;
  2684  0342  01D7               	clrf	main@ucFourthSuffix1TimerP3s
  2685  0343                     L6:	
  2686                           ;main.c: 1949: ucADC4_Step = ADC4_STEP_FOURTH_SUFFIX2;
  2687                           
  2688  0343  00D3               	movwf	_ucADC4_Step
  2689  0344  283A               	goto	l5047
  2690  0345                     l5517:	
  2691                           
  2692                           ;main.c: 1956: {
  2693                           ;main.c: 1961: setPA6(0);
  2694  0345  3000               	movlw	0
  2695  0346  158A  26AB  118A   	fcall	_setPA6
  2696                           
  2697                           ;main.c: 1963: clearPinPortAndTimer();
  2698  0349  118A  2489  118A   	fcall	_clearPinPortAndTimer
  2699                           
  2700                           ;main.c: 1964: ucADC4_Step = ADC4_STEP_INIT;
  2701  034C  01D3               	clrf	_ucADC4_Step
  2702                           
  2703                           ;main.c: 1966: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  2704  034D  01D0               	clrf	_enumMainLoopStep
  2705  034E  0AD0               	incf	_enumMainLoopStep,f
  2706                           
  2707                           ;main.c: 1967: break;
  2708  034F  283A               	goto	l5047
  2709  0350                     l5527:	
  2710  0350  1283               	bcf	3,5	;RP0=0, select bank0
  2711  0351  0853               	movf	_ucADC4_Step,w
  2712                           
  2713                           ; Switch size 1, requested type "space"
  2714                           ; Number of cases is 7, Range of values is 0 to 12
  2715                           ; switch strategies available:
  2716                           ; Name         Instructions Cycles
  2717                           ; simple_byte           22    12 (average)
  2718                           ; direct_byte           33     7 (fixed)
  2719                           ; jumptable            260     6 (fixed)
  2720                           ; rangetable            17     6 (fixed)
  2721                           ; spacedrange           32     9 (fixed)
  2722                           ; locatedrange          13     3 (fixed)
  2723                           ;	Chosen strategy is simple_byte
  2724  0352  3A00               	xorlw	0	; case 0
  2725  0353  1903               	skipnz
  2726  0354  28F2               	goto	l819
  2727  0355  3A01               	xorlw	1	; case 1
  2728  0356  1903               	skipnz
  2729  0357  28F5               	goto	l5153
  2730  0358  3A03               	xorlw	3	; case 2
  2731  0359  1903               	skipnz
  2732  035A  2AF3               	goto	l5475
  2733  035B  3A01               	xorlw	1	; case 3
  2734  035C  1903               	skipnz
  2735  035D  2B04               	goto	l5477
  2736  035E  3A09               	xorlw	9	; case 10
  2737  035F  1903               	skipnz
  2738  0360  2865               	goto	l778
  2739  0361  3A01               	xorlw	1	; case 11
  2740  0362  1903               	skipnz
  2741  0363  2B3C               	goto	l5509
  2742  0364  3A07               	xorlw	7	; case 12
  2743  0365  1903               	skipnz
  2744  0366  2B45               	goto	l5517
  2745  0367  2865               	goto	l778
  2746  0368                     l997:	
  2747                           ;main.c: 1993: {
  2748                           ;main.c: 1994: case HOUR_3_BRANCH_STEP_FIRST:
  2749                           
  2750                           
  2751                           ;main.c: 1995: {
  2752                           ;main.c: 1997: PB7 = 1;
  2753  0368  1283               	bcf	3,5	;RP0=0, select bank0
  2754  0369  1786               	bsf	6,7
  2755                           
  2756                           ;main.c: 1998: PBOD7 = 1;
  2757  036A  1683               	bsf	3,5	;RP0=1, select bank3
  2758  036B  3030               	movlw	48
  2759  036C  1703               	bsf	3,6	;RP1=1, select bank3
  2760  036D  1788               	bsf	8,7
  2761                           
  2762                           ;main.c: 2003: startThreeHoursTimer(10800);
  2763  036E  1283               	bcf	3,5	;RP0=0, select bank0
  2764  036F  1303               	bcf	3,6	;RP1=0, select bank0
  2765  0370  00A0               	movwf	?_startThreeHoursTimer
  2766  0371  302A               	movlw	42
  2767  0372  00A1               	movwf	?_startThreeHoursTimer+1
  2768  0373  118A  27A0  118A   	fcall	_startThreeHoursTimer
  2769                           
  2770                           ;main.c: 2007: setPA0(1);
  2771  0376  3001               	movlw	1
  2772  0377  118A  24C3  118A   	fcall	_setPA0
  2773                           
  2774                           ;main.c: 2009: setPA1(1);
  2775  037A  3001               	movlw	1
  2776  037B  118A  24CC  118A   	fcall	_setPA1
  2777                           
  2778                           ;main.c: 2011: setPB0(1);
  2779  037E  3001               	movlw	1
  2780  037F  118A  24AB  118A   	fcall	_setPB0
  2781                           
  2782                           ;main.c: 2013: setPB1(1);
  2783  0382  3001               	movlw	1
  2784  0383  118A  24B3  118A   	fcall	_setPB1
  2785                           
  2786                           ;main.c: 2015: setPB2(1);
  2787  0386  3001               	movlw	1
  2788  0387  118A  24BB  118A   	fcall	_setPB2
  2789                           
  2790                           ;main.c: 2017: setPB4(0);
  2791  038A  3000               	movlw	0
  2792  038B  118A  2539  118A   	fcall	_setPB4
  2793                           
  2794                           ;main.c: 2019: enumBranchStep = HOUR_3_BRANCH_STEP_SECOND;
  2795  038E  1683               	bsf	3,5	;RP0=1, select bank1
  2796  038F  01B0               	clrf	main@enumBranchStep^(0+128)
  2797  0390  0AB0               	incf	main@enumBranchStep^(0+128),f
  2798                           
  2799                           ;main.c: 2020: break;
  2800  0391  283A               	goto	l5047
  2801  0392                     l5533:	
  2802                           
  2803                           ;main.c: 2024: {
  2804                           ;main.c: 2029: enumBranchStep = HOUR_3_BRANCH_STEP_THIRD;
  2805  0392  3002               	movlw	2
  2806  0393  00B0               	movwf	main@enumBranchStep^(0+128)
  2807                           
  2808                           ;main.c: 2030: break;
  2809  0394  283A               	goto	l5047
  2810  0395                     l5535:	
  2811                           
  2812                           ;main.c: 2034: {
  2813                           ;main.c: 2038: if( (isFinishedTwelveHoursTimer()) || (isFinishedThreeHoursTimer()))
  2814  0395  158A  26F7  118A   	fcall	_isFinishedTwelveHoursTimer
  2815  0398  3800               	iorlw	0
  2816  0399  1D03               	skipz
  2817  039A  2BA1               	goto	l5539
  2818  039B  158A  2703  118A   	fcall	_isFinishedThreeHoursTimer
  2819  039E  3A00               	xorlw	0
  2820  039F  1903               	skipnz
  2821  03A0  2BA4               	goto	l5543
  2822  03A1                     l5539:	
  2823                           
  2824                           ;main.c: 2039: {
  2825                           ;main.c: 2040: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2826  03A1  1683               	bsf	3,5	;RP0=1, select bank1
  2827  03A2  01B0               	clrf	main@enumBranchStep^(0+128)
  2828  03A3  2862               	goto	l5067
  2829  03A4                     l5543:	
  2830                           
  2831                           ;main.c: 2043: else
  2832                           ;main.c: 2044: {
  2833                           ;main.c: 2045: static unsigned char ucTimerX1P5s = 0;
  2834                           ;main.c: 2047: static unsigned char ucTimerLessX1P5s = 0;
  2835                           ;main.c: 2049: if(getAdOriginalCh6Value() <= 137)
  2836  03A4  118A  2636  118A   	fcall	_getAdOriginalCh6Value
  2837  03A7  3000               	movlw	0
  2838  03A8  0247               	subwf	?_getAdOriginalCh6Value+1,w
  2839  03A9  308A               	movlw	138
  2840  03AA  1903               	skipnz
  2841  03AB  0246               	subwf	?_getAdOriginalCh6Value,w
  2842  03AC  1803               	skipnc
  2843  03AD  2BB2               	goto	l5549
  2844                           
  2845                           ;main.c: 2050: {
  2846                           ;main.c: 2051: ucTimerX1P5s = 0;
  2847  03AE  1683               	bsf	3,5	;RP0=1, select bank1
  2848  03AF  01B6               	clrf	main@ucTimerX1P5s^(0+128)
  2849                           
  2850                           ;main.c: 2052: ucTimerLessX1P5s++;
  2851  03B0  0AB3               	incf	main@ucTimerLessX1P5s^(0+128),f
  2852                           
  2853                           ;main.c: 2053: }
  2854  03B1  2BB5               	goto	l5553
  2855  03B2                     l5549:	
  2856                           
  2857                           ;main.c: 2054: else
  2858                           ;main.c: 2055: {
  2859                           ;main.c: 2056: ucTimerX1P5s++;
  2860  03B2  1683               	bsf	3,5	;RP0=1, select bank1
  2861  03B3  0AB6               	incf	main@ucTimerX1P5s^(0+128),f
  2862                           
  2863                           ;main.c: 2057: ucTimerLessX1P5s = 0;
  2864  03B4  01B3               	clrf	main@ucTimerLessX1P5s^(0+128)
  2865  03B5                     l5553:	
  2866                           
  2867                           ;main.c: 2058: }
  2868                           ;main.c: 2060: if(ucTimerX1P5s >= 5)
  2869  03B5  3005               	movlw	5
  2870  03B6  0236               	subwf	main@ucTimerX1P5s^(0+128),w
  2871  03B7  1C03               	skipc
  2872  03B8  2BC9               	goto	l5567
  2873                           
  2874                           ;main.c: 2061: {
  2875                           ;main.c: 2062: ucTimerX1P5s = 0;
  2876  03B9  01B6               	clrf	main@ucTimerX1P5s^(0+128)
  2877                           
  2878                           ;main.c: 2064: ucTimerLessX1P5s = 0;
  2879  03BA  01B3               	clrf	main@ucTimerLessX1P5s^(0+128)
  2880                           
  2881                           ;main.c: 2068: PBOD7 = 0;
  2882  03BB  1703               	bsf	3,6	;RP1=1, select bank3
  2883  03BC  1388               	bcf	8,7
  2884                           
  2885                           ;main.c: 2069: PB7 = 0;
  2886  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  2887  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  2888  03BF  1386               	bcf	6,7
  2889                           
  2890                           ;main.c: 2074: clearThreeHoursTimer();
  2891  03C0  118A  24E1  118A   	fcall	_clearThreeHoursTimer
  2892                           
  2893                           ;main.c: 2076: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2894  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  2895  03C4  3002               	movlw	2
  2896  03C5  01B0               	clrf	main@enumBranchStep^(0+128)
  2897  03C6                     L1:	
  2898                           ;main.c: 2078: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
  2899                           
  2900  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  2901  03C7  00D0               	movwf	_enumMainLoopStep
  2902                           
  2903                           ;main.c: 2079: }
  2904  03C8  283A               	goto	l5047
  2905  03C9                     l5567:	
  2906                           
  2907                           ;main.c: 2080: else if(ucTimerLessX1P5s >= 5)
  2908  03C9  3005               	movlw	5
  2909  03CA  0233               	subwf	main@ucTimerLessX1P5s^(0+128),w
  2910  03CB  1C03               	skipc
  2911  03CC  283A               	goto	l5047
  2912                           
  2913                           ;main.c: 2081: {
  2914                           ;main.c: 2082: static unsigned char ucTimerX2P5s = 0;
  2915                           ;main.c: 2084: static unsigned char ucTimerLessX2P5s = 0;
  2916                           ;main.c: 2086: if(getAdOriginalCh6Value() > 32)
  2917  03CD  118A  2636  118A   	fcall	_getAdOriginalCh6Value
  2918  03D0  3000               	movlw	0
  2919  03D1  0247               	subwf	?_getAdOriginalCh6Value+1,w
  2920  03D2  3021               	movlw	33
  2921  03D3  1903               	skipnz
  2922  03D4  0246               	subwf	?_getAdOriginalCh6Value,w
  2923  03D5  1C03               	skipc
  2924  03D6  2BDA               	goto	l5575
  2925                           
  2926                           ;main.c: 2087: {
  2927                           ;main.c: 2088: ucTimerX2P5s++;
  2928  03D7  1683               	bsf	3,5	;RP0=1, select bank1
  2929  03D8  0AB7               	incf	main@ucTimerX2P5s^(0+128),f
  2930  03D9  2BDC               	goto	L8
  2931  03DA                     l5575:	
  2932                           ;main.c: 2090: }
  2933                           
  2934                           ;main.c: 2089: ucTimerLessX2P5s = 0;
  2935                           
  2936                           
  2937                           ;main.c: 2091: else
  2938                           ;main.c: 2092: {
  2939                           ;main.c: 2093: ucTimerX2P5s = 0;
  2940  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  2941  03DB  01B7               	clrf	main@ucTimerX2P5s^(0+128)
  2942  03DC                     L8:	
  2943  03DC  3005               	movlw	5
  2944                           
  2945                           ;main.c: 2095: ucTimerLessX2P5s = 0;
  2946  03DD  01B4               	clrf	main@ucTimerLessX2P5s^(0+128)
  2947                           
  2948                           ;main.c: 2097: }
  2949                           ;main.c: 2099: if(ucTimerX2P5s >= 5)
  2950  03DE  0237               	subwf	main@ucTimerX2P5s^(0+128),w
  2951  03DF  1C03               	skipc
  2952  03E0  283A               	goto	l5047
  2953                           
  2954                           ;main.c: 2100: {
  2955                           ;main.c: 2101: ucTimerX2P5s = 0;
  2956  03E1  01B7               	clrf	main@ucTimerX2P5s^(0+128)
  2957                           
  2958                           ;main.c: 2102: }
  2959  03E2  283A               	goto	l5047
  2960  03E3                     l5595:	
  2961  03E3  1683               	bsf	3,5	;RP0=1, select bank1
  2962  03E4  0830               	movf	main@enumBranchStep^(0+128),w
  2963                           
  2964                           ; Switch size 1, requested type "space"
  2965                           ; Number of cases is 3, Range of values is 0 to 2
  2966                           ; switch strategies available:
  2967                           ; Name         Instructions Cycles
  2968                           ; simple_byte           10     6 (average)
  2969                           ; direct_byte           13     7 (fixed)
  2970                           ; jumptable            260     6 (fixed)
  2971                           ; rangetable             7     6 (fixed)
  2972                           ; spacedrange           12     9 (fixed)
  2973                           ; locatedrange           3     3 (fixed)
  2974                           ;	Chosen strategy is simple_byte
  2975  03E5  3A00               	xorlw	0	; case 0
  2976  03E6  1903               	skipnz
  2977  03E7  2B68               	goto	l997
  2978  03E8  3A01               	xorlw	1	; case 1
  2979  03E9  1903               	skipnz
  2980  03EA  2B92               	goto	l5533
  2981  03EB  3A03               	xorlw	3	; case 2
  2982  03EC  1903               	skipnz
  2983  03ED  2B95               	goto	l5535
  2984  03EE  2865               	goto	l778
  2985  03EF                     l5597:	
  2986                           
  2987                           ;main.c: 2153: {
  2988                           ;main.c: 2158: setPA2(0);
  2989  03EF  3000               	movlw	0
  2990  03F0  158A  26C3  118A   	fcall	_setPA2
  2991                           
  2992                           ;main.c: 2159: setPA1(0);
  2993  03F3  3000               	movlw	0
  2994  03F4  118A  24CC  118A   	fcall	_setPA1
  2995                           
  2996                           ;main.c: 2160: setPA0(0);
  2997  03F7  3000               	movlw	0
  2998  03F8  118A  24C3  118A   	fcall	_setPA0
  2999                           
  3000                           ;main.c: 2161: setPB0(0);
  3001  03FB  3000               	movlw	0
  3002  03FC  118A  24AB  118A   	fcall	_setPB0
  3003                           
  3004                           ;main.c: 2162: setPB1(0);
  3005  03FF  3000               	movlw	0
  3006  0400  118A  24B3  118A   	fcall	_setPB1
  3007                           
  3008                           ;main.c: 2163: setPB2(0);
  3009  0403  3000               	movlw	0
  3010  0404  118A  24BB  118A   	fcall	_setPB2
  3011                           
  3012                           ;main.c: 2164: setPA3(0);
  3013  0407  3000               	movlw	0
  3014  0408  118A  262D  118A   	fcall	_setPA3
  3015                           
  3016                           ;main.c: 2165: setPB4(0);
  3017  040B  3000               	movlw	0
  3018  040C  118A  2539  118A   	fcall	_setPB4
  3019                           
  3020                           ;main.c: 2166: setPB6(1);
  3021  040F  3001               	movlw	1
  3022  0410  118A  263F  118A   	fcall	_setPB6
  3023                           
  3024                           ;main.c: 2168: enumInteralStep = INTERNAL_SECOND_STEP;
  3025  0413  1683               	bsf	3,5	;RP0=1, select bank1
  3026  0414  01B1               	clrf	main@enumInteralStep^(0+128)
  3027  0415  0AB1               	incf	main@enumInteralStep^(0+128),f
  3028                           
  3029                           ;main.c: 2169: break;
  3030  0416  283A               	goto	l5047
  3031  0417                     l5601:	
  3032                           
  3033                           ;main.c: 2173: {
  3034                           ;main.c: 2177: static unsigned char ucTimer1s = 0;
  3035                           ;main.c: 2179: if(getAdOriginalCh0Value() >= 4038)
  3036  0417  118A  247F  118A   	fcall	_getAdOriginalCh0Value
  3037  041A  300F               	movlw	15
  3038  041B  0247               	subwf	?_getAdOriginalCh0Value+1,w
  3039  041C  30C6               	movlw	198
  3040  041D  1903               	skipnz
  3041  041E  0246               	subwf	?_getAdOriginalCh0Value,w
  3042  041F  1C03               	skipc
  3043  0420  2C24               	goto	l5605
  3044                           
  3045                           ;main.c: 2180: {
  3046                           ;main.c: 2181: ucTimer1s++;
  3047  0421  1683               	bsf	3,5	;RP0=1, select bank1
  3048  0422  0AB2               	incf	main@ucTimer1s^(0+128),f
  3049                           
  3050                           ;main.c: 2182: }
  3051  0423  2C26               	goto	l5607
  3052  0424                     l5605:	
  3053                           
  3054                           ;main.c: 2183: else
  3055                           ;main.c: 2184: ucTimer1s = 0;
  3056  0424  1683               	bsf	3,5	;RP0=1, select bank1
  3057  0425  01B2               	clrf	main@ucTimer1s^(0+128)
  3058  0426                     l5607:	
  3059                           
  3060                           ;main.c: 2186: if(ucTimer1s >= 10)
  3061  0426  300A               	movlw	10
  3062  0427  0232               	subwf	main@ucTimer1s^(0+128),w
  3063  0428  1C03               	skipc
  3064  0429  283A               	goto	l5047
  3065                           
  3066                           ;main.c: 2187: {
  3067                           ;main.c: 2188: enumInteralStep = INTERNAL_THIRD_STEP;
  3068  042A  3002               	movlw	2
  3069  042B  00B1               	movwf	main@enumInteralStep^(0+128)
  3070                           
  3071                           ;main.c: 2189: ucTimer1s = 0;
  3072  042C  01B2               	clrf	main@ucTimer1s^(0+128)
  3073  042D  283A               	goto	l5047
  3074  042E                     l5613:	
  3075                           
  3076                           ;main.c: 2195: {
  3077                           ;main.c: 2199: static unsigned char ucTimerP3s = 0;
  3078                           ;main.c: 2201: if(getAdOriginalCh0Value() <= 3150)
  3079  042E  118A  247F  118A   	fcall	_getAdOriginalCh0Value
  3080  0431  300C               	movlw	12
  3081  0432  0247               	subwf	?_getAdOriginalCh0Value+1,w
  3082  0433  304F               	movlw	79
  3083  0434  1903               	skipnz
  3084  0435  0246               	subwf	?_getAdOriginalCh0Value,w
  3085  0436  1803               	skipnc
  3086  0437  2C3B               	goto	l5617
  3087                           
  3088                           ;main.c: 2202: {
  3089                           ;main.c: 2203: ucTimerP3s++;
  3090  0438  1683               	bsf	3,5	;RP0=1, select bank1
  3091  0439  0AB5               	incf	main@ucTimerP3s^(0+128),f
  3092                           
  3093                           ;main.c: 2204: }
  3094  043A  2C3D               	goto	l5619
  3095  043B                     l5617:	
  3096                           
  3097                           ;main.c: 2205: else
  3098                           ;main.c: 2206: ucTimerP3s = 0;
  3099  043B  1683               	bsf	3,5	;RP0=1, select bank1
  3100  043C  01B5               	clrf	main@ucTimerP3s^(0+128)
  3101  043D                     l5619:	
  3102                           
  3103                           ;main.c: 2208: if(ucTimerP3s >= 3)
  3104  043D  3003               	movlw	3
  3105  043E  0235               	subwf	main@ucTimerP3s^(0+128),w
  3106  043F  1C03               	skipc
  3107  0440  283A               	goto	l5047
  3108                           
  3109                           ;main.c: 2209: {
  3110                           ;main.c: 2210: enumInteralStep = INTERNAL_FIRST_STEP;
  3111  0441  01B1               	clrf	main@enumInteralStep^(0+128)
  3112                           
  3113                           ;main.c: 2211: ucTimerP3s = 0;
  3114  0442  01B5               	clrf	main@ucTimerP3s^(0+128)
  3115                           
  3116                           ;main.c: 2213: clearAllTimer();
  3117  0443  118A  24D4  118A   	fcall	_clearAllTimer
  3118                           
  3119                           ;main.c: 2215: initPin();
  3120  0446  118A  2762  118A   	fcall	_initPin
  3121                           
  3122                           ;main.c: 2218: enumMainLoopStep = MAIN_LOOP_STEP_INIT;
  3123  0449  1283               	bcf	3,5	;RP0=0, select bank0
  3124  044A  01D0               	clrf	_enumMainLoopStep
  3125  044B                     l1045:	
  3126  044B  2C4B               	goto	l1045
  3127  044C                     l5629:	
  3128  044C  1683               	bsf	3,5	;RP0=1, select bank1
  3129  044D  0831               	movf	main@enumInteralStep^(0+128),w
  3130                           
  3131                           ; Switch size 1, requested type "space"
  3132                           ; Number of cases is 3, Range of values is 0 to 2
  3133                           ; switch strategies available:
  3134                           ; Name         Instructions Cycles
  3135                           ; simple_byte           10     6 (average)
  3136                           ; direct_byte           13     7 (fixed)
  3137                           ; jumptable            260     6 (fixed)
  3138                           ; rangetable             7     6 (fixed)
  3139                           ; spacedrange           12     9 (fixed)
  3140                           ; locatedrange           3     3 (fixed)
  3141                           ;	Chosen strategy is simple_byte
  3142  044E  3A00               	xorlw	0	; case 0
  3143  044F  1903               	skipnz
  3144  0450  2BEF               	goto	l5597
  3145  0451  3A01               	xorlw	1	; case 1
  3146  0452  1903               	skipnz
  3147  0453  2C17               	goto	l5601
  3148  0454  3A03               	xorlw	3	; case 2
  3149  0455  1903               	skipnz
  3150  0456  2C2E               	goto	l5613
  3151  0457  2865               	goto	l778
  3152  0458                     l5633:	
  3153  0458  1283               	bcf	3,5	;RP0=0, select bank0
  3154  0459  0850               	movf	_enumMainLoopStep,w
  3155                           
  3156                           ; Switch size 1, requested type "space"
  3157                           ; Number of cases is 8, Range of values is 0 to 9
  3158                           ; switch strategies available:
  3159                           ; Name         Instructions Cycles
  3160                           ; simple_byte           25    13 (average)
  3161                           ; direct_byte           27     7 (fixed)
  3162                           ; jumptable            260     6 (fixed)
  3163                           ; rangetable            14     6 (fixed)
  3164                           ; spacedrange           26     9 (fixed)
  3165                           ; locatedrange          10     3 (fixed)
  3166                           ;	Chosen strategy is simple_byte
  3167  045A  3A00               	xorlw	0	; case 0
  3168  045B  1903               	skipnz
  3169  045C  2848               	goto	l5053
  3170  045D  3A01               	xorlw	1	; case 1
  3171  045E  1903               	skipnz
  3172  045F  2866               	goto	l5069
  3173  0460  3A03               	xorlw	3	; case 2
  3174  0461  1903               	skipnz
  3175  0462  2883               	goto	l5089
  3176  0463  3A01               	xorlw	1	; case 3
  3177  0464  1903               	skipnz
  3178  0465  289B               	goto	l5101
  3179  0466  3A07               	xorlw	7	; case 4
  3180  0467  1903               	skipnz
  3181  0468  28D7               	goto	l5139
  3182  0469  3A01               	xorlw	1	; case 5
  3183  046A  1903               	skipnz
  3184  046B  28E3               	goto	l5145
  3185  046C  3A0D               	xorlw	13	; case 8
  3186  046D  1903               	skipnz
  3187  046E  2BE3               	goto	l5595
  3188  046F  3A01               	xorlw	1	; case 9
  3189  0470  1903               	skipnz
  3190  0471  2C4C               	goto	l5629
  3191  0472  2865               	goto	l778
  3192  0473  118A  2811         	ljmp	start
  3193  0475                     __end_of_main:	
  3194                           
  3195                           	psect	swtext1
  3196  07ED                     __pswtext1:	
  3197  07ED                     S5851:	
  3198  07ED  118A  297C         	ljmp	l5203
  3199  07EF  118A  2982         	ljmp	l5207
  3200  07F1  118A  298E         	ljmp	l5217
  3201  07F3  118A  2997         	ljmp	l5227
  3202  07F5  118A  29A0         	ljmp	l5237
  3203  07F7  118A  29A9         	ljmp	l5247
  3204  07F9  118A  29C2         	ljmp	l5257
  3205                           
  3206                           	psect	swtext2
  3207  0800                     __pswtext2:	
  3208  0800                     S5853:	
  3209  0800  118A  29D5         	ljmp	l5269
  3210  0802  118A  29DB         	ljmp	l5273
  3211  0804  118A  29E7         	ljmp	l5283
  3212  0806  118A  29F0         	ljmp	l5293
  3213  0808  118A  29F9         	ljmp	l5303
  3214  080A  118A  2A02         	ljmp	l5313
  3215  080C  118A  2A17         	ljmp	l5323
  3216                           
  3217                           	psect	swtext3
  3218  080E                     __pswtext3:	
  3219  080E                     S5855:	
  3220  080E  118A  2A29         	ljmp	l5335
  3221  0810  118A  2A33         	ljmp	l5339
  3222  0812  118A  2A3F         	ljmp	l5349
  3223  0814  118A  2A48         	ljmp	l5359
  3224  0816  118A  2A51         	ljmp	l5369
  3225  0818  118A  2A62         	ljmp	l5379
  3226                           
  3227                           	psect	text1042
  3228  0714                     __ptext1042:	
  3229 ;; =============== function _vHandle20sTimeron ends ============
  3230                           
  3231                           
  3232 ;; *************** function _process_AD_Converter_Value *****************
  3233 ;; Defined at:
  3234 ;;		line 302 in file "C:\temp\dev\AK7030-OTP\common.c"
  3235 ;; Parameters:    Size  Location     Type
  3236 ;;		None
  3237 ;; Auto vars:     Size  Location     Type
  3238 ;;		None
  3239 ;; Return value:  Size  Location     Type
  3240 ;;		None               void
  3241 ;; Registers used:
  3242 ;;		wreg, status,2, status,0, pclath, cstack
  3243 ;; Tracked objects:
  3244 ;;		On entry : 0/20
  3245 ;;		On exit  : 40/0
  3246 ;;		Unchanged: FFF9F/0
  3247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3248 ;;      Params:         0       0       0       0       0
  3249 ;;      Locals:         0       0       0       0       0
  3250 ;;      Temps:          0       0       0       0       0
  3251 ;;      Totals:         0       0       0       0       0
  3252 ;;Total ram usage:        0 bytes
  3253 ;; Hardware stack levels used:    1
  3254 ;; Hardware stack levels required when called:    4
  3255 ;; This function calls:
  3256 ;;		_getAD_ConvertFlag
  3257 ;;		_setAD_ConvertFlag
  3258 ;;		_AD_Sample
  3259 ;;		_adc_start
  3260 ;; This function is called by:
  3261 ;;		_main
  3262 ;; This function uses a non-reentrant model
  3263 ;;
  3264  0714                     _process_AD_Converter_Value:	
  3265                           
  3266                           ;common.c: 303: if(getAD_ConvertFlag())
  3267                           
  3268                           ; Regs used in _process_AD_Converter_Value: [wreg+status,2+status,0+pclath+cstack]
  3269  0714  271F  118A         	fcall	_getAD_ConvertFlag
  3270  0716  3A00               	xorlw	0
  3271  0717  1903               	skipnz
  3272  0718  0008               	return
  3273                           
  3274                           ;common.c: 304: {
  3275                           ;common.c: 305: setAD_ConvertFlag(0);
  3276  0719  3000               	movlw	0
  3277  071A  2723  118A         	fcall	_setAD_ConvertFlag
  3278                           
  3279                           ;common.c: 306: AD_Sample();
  3280  071C  272B  118A         	fcall	_AD_Sample
  3281                           
  3282                           ;common.c: 318: adc_start();
  3283  071E  2F28               	ljmp	l4505
  3284  071F                     __end_of_process_AD_Converter_Value:	
  3285  071F                     __ptext1053:	
  3286 ;; =============== function _setAD_ConvertFlag ends ============
  3287                           
  3288                           
  3289 ;; *************** function _getAD_ConvertFlag *****************
  3290 ;; Defined at:
  3291 ;;		line 233 in file "C:\temp\dev\AK7030-OTP\common.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;		None
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;		None
  3296 ;; Return value:  Size  Location     Type
  3297 ;;                  1    wreg      unsigned char 
  3298 ;; Registers used:
  3299 ;;		wreg
  3300 ;; Tracked objects:
  3301 ;;		On entry : 0/20
  3302 ;;		On exit  : 60/20
  3303 ;;		Unchanged: FFF9F/0
  3304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3305 ;;      Params:         0       0       0       0       0
  3306 ;;      Locals:         0       0       0       0       0
  3307 ;;      Temps:          0       0       0       0       0
  3308 ;;      Totals:         0       0       0       0       0
  3309 ;;Total ram usage:        0 bytes
  3310 ;; Hardware stack levels used:    1
  3311 ;; Hardware stack levels required when called:    2
  3312 ;; This function calls:
  3313 ;;		Nothing
  3314 ;; This function is called by:
  3315 ;;		_process_AD_Converter_Value
  3316 ;; This function uses a non-reentrant model
  3317 ;;
  3318  071F                     _getAD_ConvertFlag:	
  3319                           
  3320                           ;common.c: 234: return adc_convert_flag;
  3321                           
  3322                           ; Regs used in _getAD_ConvertFlag: [wreg]
  3323  071F  1683               	bsf	3,5	;RP0=1, select bank1
  3324  0720  1303               	bcf	3,6	;RP1=0, select bank1
  3325  0721  082D               	movf	_adc_convert_flag^(0+128),w
  3326  0722  0008               	return
  3327  0723                     __end_of_getAD_ConvertFlag:	
  3328  0723                     __ptext1052:	
  3329 ;; =============== function _clearAllTimer ends ============
  3330                           
  3331                           
  3332 ;; *************** function _setAD_ConvertFlag *****************
  3333 ;; Defined at:
  3334 ;;		line 239 in file "C:\temp\dev\AK7030-OTP\common.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;  flag            1    wreg     unsigned char 
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;  flag            1    0[BANK0 ] unsigned char 
  3339 ;; Return value:  Size  Location     Type
  3340 ;;		None               void
  3341 ;; Registers used:
  3342 ;;		wreg
  3343 ;; Tracked objects:
  3344 ;;		On entry : 60/20
  3345 ;;		On exit  : 60/20
  3346 ;;		Unchanged: FFF9F/0
  3347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3348 ;;      Params:         0       0       0       0       0
  3349 ;;      Locals:         0       1       0       0       0
  3350 ;;      Temps:          0       0       0       0       0
  3351 ;;      Totals:         0       1       0       0       0
  3352 ;;Total ram usage:        1 bytes
  3353 ;; Hardware stack levels used:    1
  3354 ;; Hardware stack levels required when called:    2
  3355 ;; This function calls:
  3356 ;;		Nothing
  3357 ;; This function is called by:
  3358 ;;		_process_AD_Converter_Value
  3359 ;; This function uses a non-reentrant model
  3360 ;;
  3361  0723                     _setAD_ConvertFlag:	
  3362                           
  3363                           ; Regs used in _setAD_ConvertFlag: [wreg]
  3364                           ;setAD_ConvertFlag@flag stored from wreg
  3365  0723  1283               	bcf	3,5	;RP0=0, select bank0
  3366  0724  00A0               	movwf	setAD_ConvertFlag@flag
  3367                           
  3368                           ;common.c: 240: adc_convert_flag = flag;
  3369  0725  1683               	bsf	3,5	;RP0=1, select bank1
  3370  0726  00AD               	movwf	_adc_convert_flag^(0+128)
  3371  0727  0008               	return
  3372  0728                     __end_of_setAD_ConvertFlag:	
  3373  0728                     __ptext1066:	
  3374 ;; =============== function _startTwentyMinuteTimer ends ============
  3375                           
  3376                           
  3377 ;; *************** function _adc_start *****************
  3378 ;; Defined at:
  3379 ;;		line 100 in file "C:\temp\dev\AK7030-OTP\periph.c"
  3380 ;; Parameters:    Size  Location     Type
  3381 ;;		None
  3382 ;; Auto vars:     Size  Location     Type
  3383 ;;		None
  3384 ;; Return value:  Size  Location     Type
  3385 ;;		None               void
  3386 ;; Registers used:
  3387 ;;		None
  3388 ;; Tracked objects:
  3389 ;;		On entry : 40/20
  3390 ;;		On exit  : 60/0
  3391 ;;		Unchanged: FFF9F/0
  3392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3393 ;;      Params:         0       0       0       0       0
  3394 ;;      Locals:         0       0       0       0       0
  3395 ;;      Temps:          0       0       0       0       0
  3396 ;;      Totals:         0       0       0       0       0
  3397 ;;Total ram usage:        0 bytes
  3398 ;; Hardware stack levels used:    1
  3399 ;; Hardware stack levels required when called:    2
  3400 ;; This function calls:
  3401 ;;		Nothing
  3402 ;; This function is called by:
  3403 ;;		_main
  3404 ;;		_process_AD_Converter_Value
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407  0728                     _adc_start:	
  3408  0728                     l4505:	
  3409                           ; Regs used in _adc_start: []
  3410                           
  3411                           
  3412                           ;periph.c: 101: GO=1;
  3413  0728  1283               	bcf	3,5	;RP0=0, select bank0
  3414  0729  149F               	bsf	31,1
  3415  072A  0008               	return
  3416  072B                     __end_of_adc_start:	
  3417  072B                     __ptext1045:	
  3418 ;; =============== function _clearPinPortAndTimer ends ============
  3419                           
  3420                           
  3421 ;; *************** function _AD_Sample *****************
  3422 ;; Defined at:
  3423 ;;		line 332 in file "C:\temp\dev\AK7030-OTP\common.c"
  3424 ;; Parameters:    Size  Location     Type
  3425 ;;		None
  3426 ;; Auto vars:     Size  Location     Type
  3427 ;;		None
  3428 ;; Return value:  Size  Location     Type
  3429 ;;		None               void
  3430 ;; Registers used:
  3431 ;;		wreg, status,2, status,0, pclath, cstack
  3432 ;; Tracked objects:
  3433 ;;		On entry : 60/20
  3434 ;;		On exit  : 40/0
  3435 ;;		Unchanged: FFF9F/0
  3436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3437 ;;      Params:         0       0       0       0       0
  3438 ;;      Locals:         0       0       0       0       0
  3439 ;;      Temps:          0       0       0       0       0
  3440 ;;      Totals:         0       0       0       0       0
  3441 ;;Total ram usage:        0 bytes
  3442 ;; Hardware stack levels used:    1
  3443 ;; Hardware stack levels required when called:    3
  3444 ;; This function calls:
  3445 ;;		_adc_test_init
  3446 ;; This function is called by:
  3447 ;;		_process_AD_Converter_Value
  3448 ;; This function uses a non-reentrant model
  3449 ;;
  3450  072B                     _AD_Sample:	
  3451                           
  3452                           ;common.c: 333: if(sampleTimes < 12)
  3453                           
  3454                           ; Regs used in _AD_Sample: [wreg+status,2+status,0+pclath+cstack]
  3455  072B  300C               	movlw	12
  3456  072C  1283               	bcf	3,5	;RP0=0, select bank0
  3457  072D  0252               	subwf	_sampleTimes,w
  3458  072E  1803               	skipnc
  3459  072F  0008               	return
  3460  0730  300C               	movlw	12
  3461                           
  3462                           ;common.c: 334: {
  3463                           ;common.c: 336: sampleTimes++;
  3464  0731  0AD2               	incf	_sampleTimes,f
  3465                           
  3466                           ;common.c: 338: if(sampleTimes >= 12)
  3467  0732  0252               	subwf	_sampleTimes,w
  3468  0733  1C03               	skipc
  3469  0734  0008               	return
  3470                           
  3471                           ;common.c: 339: {
  3472                           ;common.c: 340: sampleTimes = 0;
  3473  0735  01D2               	clrf	_sampleTimes
  3474                           
  3475                           ;common.c: 342: if(sampleChannelSelect == 0)
  3476  0736  08D1               	movf	_sampleChannelSelect,f
  3477  0737  1D03               	skipz
  3478  0738  2F3B               	goto	l4851
  3479                           
  3480                           ;common.c: 343: {
  3481                           ;common.c: 346: sampleChannelSelect = 2;
  3482  0739  3002               	movlw	2
  3483  073A  2F46               	goto	L17
  3484  073B                     l4851:	
  3485                           ;common.c: 347: }
  3486                           
  3487                           
  3488                           ;common.c: 348: else if(sampleChannelSelect == 2)
  3489  073B  0851               	movf	_sampleChannelSelect,w
  3490  073C  3A02               	xorlw	2
  3491  073D  1D03               	skipz
  3492  073E  2F41               	goto	l4855
  3493                           
  3494                           ;common.c: 349: {
  3495                           ;common.c: 351: sampleChannelSelect = 5;
  3496  073F  3005               	movlw	5
  3497  0740  2F46               	goto	L17
  3498  0741                     l4855:	
  3499                           ;common.c: 352: }
  3500                           
  3501                           
  3502                           ;common.c: 353: else if(sampleChannelSelect == 5)
  3503  0741  0851               	movf	_sampleChannelSelect,w
  3504  0742  3A05               	xorlw	5
  3505  0743  1D03               	skipz
  3506  0744  2F48               	goto	l4859
  3507                           
  3508                           ;common.c: 354: {
  3509                           ;common.c: 356: sampleChannelSelect = 6;
  3510  0745  3006               	movlw	6
  3511  0746                     L17:	
  3512  0746  00D1               	movwf	_sampleChannelSelect
  3513                           
  3514                           ;common.c: 357: }
  3515  0747  2F49               	goto	l4861
  3516  0748                     l4859:	
  3517                           
  3518                           ;common.c: 358: else
  3519                           ;common.c: 359: {
  3520                           ;common.c: 361: sampleChannelSelect = 0;
  3521  0748  01D1               	clrf	_sampleChannelSelect
  3522  0749                     l4861:	
  3523                           
  3524                           ;common.c: 362: }
  3525                           ;common.c: 367: adc_test_init(sampleChannelSelect,3);
  3526  0749  3003               	movlw	3
  3527  074A  00A0               	movwf	?_adc_test_init
  3528  074B  0851               	movf	_sampleChannelSelect,w
  3529  074C  2F4D               	ljmp	_adc_test_init
  3530  074D                     __end_of_AD_Sample:	
  3531  074D                     __ptext1068:	
  3532 ;; =============== function _op1_init ends ============
  3533                           
  3534                           
  3535 ;; *************** function _adc_test_init *****************
  3536 ;; Defined at:
  3537 ;;		line 85 in file "C:\temp\dev\AK7030-OTP\periph.c"
  3538 ;; Parameters:    Size  Location     Type
  3539 ;;  channel         1    wreg     unsigned char 
  3540 ;;  ref             1    0[BANK0 ] unsigned char 
  3541 ;; Auto vars:     Size  Location     Type
  3542 ;;  channel         1    2[BANK0 ] unsigned char 
  3543 ;; Return value:  Size  Location     Type
  3544 ;;		None               void
  3545 ;; Registers used:
  3546 ;;		wreg, status,2, status,0
  3547 ;; Tracked objects:
  3548 ;;		On entry : 60/0
  3549 ;;		On exit  : 60/20
  3550 ;;		Unchanged: FFF9F/0
  3551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3552 ;;      Params:         0       1       0       0       0
  3553 ;;      Locals:         0       1       0       0       0
  3554 ;;      Temps:          0       1       0       0       0
  3555 ;;      Totals:         0       3       0       0       0
  3556 ;;Total ram usage:        3 bytes
  3557 ;; Hardware stack levels used:    1
  3558 ;; Hardware stack levels required when called:    2
  3559 ;; This function calls:
  3560 ;;		Nothing
  3561 ;; This function is called by:
  3562 ;;		_main
  3563 ;;		_AD_Sample
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566  074D                     _adc_test_init:	
  3567                           
  3568                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  3569                           ;adc_test_init@channel stored from wreg
  3570  074D  00A2               	movwf	adc_test_init@channel
  3571                           
  3572                           ;periph.c: 86: ADCON0 = 0x00;
  3573  074E  019F               	clrf	31	;volatile
  3574                           
  3575                           ;periph.c: 87: ADCON0|=channel<<2;
  3576  074F  00A1               	movwf	??_adc_test_init
  3577  0750  1003               	clrc
  3578  0751  0DA1               	rlf	??_adc_test_init,f
  3579  0752  1003               	clrc
  3580  0753  0D21               	rlf	??_adc_test_init,w
  3581  0754  049F               	iorwf	31,f	;volatile
  3582                           
  3583                           ;periph.c: 88: ADCON1|=ref<<6;
  3584  0755  0820               	movf	adc_test_init@ref,w
  3585  0756  00A1               	movwf	??_adc_test_init
  3586  0757  0CA1               	rrf	??_adc_test_init,f
  3587  0758  0CA1               	rrf	??_adc_test_init,f
  3588  0759  0C21               	rrf	??_adc_test_init,w
  3589  075A  39C0               	andlw	192
  3590  075B  1683               	bsf	3,5	;RP0=1, select bank1
  3591  075C  049F               	iorwf	31,f	;volatile
  3592                           
  3593                           ;periph.c: 89: ADON=1;
  3594  075D  1283               	bcf	3,5	;RP0=0, select bank0
  3595  075E  141F               	bsf	31,0
  3596                           
  3597                           ;periph.c: 90: ADIE=1;
  3598  075F  1683               	bsf	3,5	;RP0=1, select bank1
  3599  0760  150D               	bsf	13,2
  3600  0761  0008               	return
  3601  0762                     __end_of_adc_test_init:	
  3602                           
  3603                           	psect	text1048
  3604  0475                     __ptext1048:	
  3605 ;; =============== function _vHandle20sTimerOut ends ============
  3606                           
  3607                           
  3608 ;; *************** function _getAdOriginalCh5Value *****************
  3609 ;; Defined at:
  3610 ;;		line 272 in file "C:\temp\dev\AK7030-OTP\common.c"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;		None
  3613 ;; Auto vars:     Size  Location     Type
  3614 ;;		None
  3615 ;; Return value:  Size  Location     Type
  3616 ;;                  2   38[BANK0 ] unsigned int 
  3617 ;; Registers used:
  3618 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3619 ;; Tracked objects:
  3620 ;;		On entry : 60/0
  3621 ;;		On exit  : 160/0
  3622 ;;		Unchanged: FFE00/0
  3623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3624 ;;      Params:         0       2       0       0       0
  3625 ;;      Locals:         0       0       0       0       0
  3626 ;;      Temps:          0       0       0       0       0
  3627 ;;      Totals:         0       2       0       0       0
  3628 ;;Total ram usage:        2 bytes
  3629 ;; Hardware stack levels used:    1
  3630 ;; Hardware stack levels required when called:    3
  3631 ;; This function calls:
  3632 ;;		_Filter
  3633 ;; This function is called by:
  3634 ;;		_main
  3635 ;; This function uses a non-reentrant model
  3636 ;;
  3637  0475                     _getAdOriginalCh5Value:	
  3638                           
  3639                           ;common.c: 274: return Filter(uiSampleChannelFifth);
  3640                           
  3641                           ; Regs used in _getAdOriginalCh5Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  3642  0475  3090               	movlw	_uiSampleChannelFifth& (0+255)
  3643  0476  00A0               	movwf	?_Filter
  3644  0477  3001               	movlw	1
  3645  0478  00A1               	movwf	?_Filter+1
  3646  0479  2655               	fcall	_Filter
  3647  047A  0821               	movf	?_Filter+1,w
  3648  047B  00C7               	movwf	?_getAdOriginalCh5Value+1
  3649  047C  0820               	movf	?_Filter,w
  3650  047D  00C6               	movwf	?_getAdOriginalCh5Value
  3651  047E  0008               	return
  3652  047F                     __end_of_getAdOriginalCh5Value:	
  3653  047F                     __ptext1050:	
  3654 ;; =============== function _getAdOriginalCh6Value ends ============
  3655                           
  3656                           
  3657 ;; *************** function _getAdOriginalCh0Value *****************
  3658 ;; Defined at:
  3659 ;;		line 263 in file "C:\temp\dev\AK7030-OTP\common.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;		None
  3662 ;; Auto vars:     Size  Location     Type
  3663 ;;		None
  3664 ;; Return value:  Size  Location     Type
  3665 ;;                  2   38[BANK0 ] unsigned int 
  3666 ;; Registers used:
  3667 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3668 ;; Tracked objects:
  3669 ;;		On entry : 40/0
  3670 ;;		On exit  : 160/0
  3671 ;;		Unchanged: FFE00/0
  3672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3673 ;;      Params:         0       2       0       0       0
  3674 ;;      Locals:         0       0       0       0       0
  3675 ;;      Temps:          0       0       0       0       0
  3676 ;;      Totals:         0       2       0       0       0
  3677 ;;Total ram usage:        2 bytes
  3678 ;; Hardware stack levels used:    1
  3679 ;; Hardware stack levels required when called:    3
  3680 ;; This function calls:
  3681 ;;		_Filter
  3682 ;; This function is called by:
  3683 ;;		_main
  3684 ;; This function uses a non-reentrant model
  3685 ;;
  3686  047F                     _getAdOriginalCh0Value:	
  3687                           
  3688                           ;common.c: 265: return Filter(uiSampleChannelZero);
  3689                           
  3690                           ; Regs used in _getAdOriginalCh0Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  3691  047F  30C4               	movlw	_uiSampleChannelZero& (0+255)
  3692  0480  1283               	bcf	3,5	;RP0=0, select bank0
  3693  0481  00A0               	movwf	?_Filter
  3694  0482  01A1               	clrf	?_Filter+1
  3695  0483  2655               	fcall	_Filter
  3696  0484  0821               	movf	?_Filter+1,w
  3697  0485  00C7               	movwf	?_getAdOriginalCh0Value+1
  3698  0486  0820               	movf	?_Filter,w
  3699  0487  00C6               	movwf	?_getAdOriginalCh0Value
  3700  0488  0008               	return
  3701  0489                     __end_of_getAdOriginalCh0Value:	
  3702  0489                     __ptext1044:	
  3703 ;; =============== function _clearParaFunction1 ends ============
  3704                           
  3705                           
  3706 ;; *************** function _clearPinPortAndTimer *****************
  3707 ;; Defined at:
  3708 ;;		line 111 in file "C:\temp\dev\AK7030-OTP\main.c"
  3709 ;; Parameters:    Size  Location     Type
  3710 ;;		None
  3711 ;; Auto vars:     Size  Location     Type
  3712 ;;		None
  3713 ;; Return value:  Size  Location     Type
  3714 ;;		None               void
  3715 ;; Registers used:
  3716 ;;		status,2, status,0, pclath, cstack
  3717 ;; Tracked objects:
  3718 ;;		On entry : 60/0
  3719 ;;		On exit  : 60/0
  3720 ;;		Unchanged: FFF9F/0
  3721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3722 ;;      Params:         0       0       0       0       0
  3723 ;;      Locals:         0       0       0       0       0
  3724 ;;      Temps:          0       0       0       0       0
  3725 ;;      Totals:         0       0       0       0       0
  3726 ;;Total ram usage:        0 bytes
  3727 ;; Hardware stack levels used:    1
  3728 ;; Hardware stack levels required when called:    4
  3729 ;; This function calls:
  3730 ;;		_clearAllTimer
  3731 ;; This function is called by:
  3732 ;;		_main
  3733 ;; This function uses a non-reentrant model
  3734 ;;
  3735  0489                     _clearPinPortAndTimer:	
  3736                           
  3737                           ;main.c: 113: PB0 = 0;
  3738                           
  3739                           ; Regs used in _clearPinPortAndTimer: [status,2+status,0+pclath+cstack]
  3740  0489  1006               	bcf	6,0
  3741                           
  3742                           ;main.c: 114: PA0 = 0;
  3743  048A  1005               	bcf	5,0
  3744                           
  3745                           ;main.c: 115: PA1 = 0;
  3746  048B  1085               	bcf	5,1
  3747                           
  3748                           ;main.c: 116: PA2 = 0;
  3749  048C  1105               	bcf	5,2
  3750                           
  3751                           ;main.c: 117: PA3 = 0;
  3752  048D  1185               	bcf	5,3
  3753                           
  3754                           ;main.c: 120: PBOD7 = 0;
  3755  048E  1683               	bsf	3,5	;RP0=1, select bank3
  3756  048F  1703               	bsf	3,6	;RP1=1, select bank3
  3757  0490  1388               	bcf	8,7
  3758                           
  3759                           ;main.c: 121: PB7 = 0;
  3760  0491  1283               	bcf	3,5	;RP0=0, select bank0
  3761  0492  1303               	bcf	3,6	;RP1=0, select bank0
  3762  0493  1386               	bcf	6,7
  3763                           
  3764                           ;main.c: 122: clearAllTimer();
  3765  0494  2CD4               	ljmp	l4769
  3766  0495                     __end_of_clearPinPortAndTimer:	
  3767  0495                     __ptext1043:	
  3768 ;; =============== function _process_AD_Converter_Value ends ============
  3769                           
  3770                           
  3771 ;; *************** function _clearParaFunction1 *****************
  3772 ;; Defined at:
  3773 ;;		line 623 in file "C:\temp\dev\AK7030-OTP\main.c"
  3774 ;; Parameters:    Size  Location     Type
  3775 ;;		None
  3776 ;; Auto vars:     Size  Location     Type
  3777 ;;		None
  3778 ;; Return value:  Size  Location     Type
  3779 ;;		None               void
  3780 ;; Registers used:
  3781 ;;		wreg, status,2, status,0, pclath, cstack
  3782 ;; Tracked objects:
  3783 ;;		On entry : 160/0
  3784 ;;		On exit  : 160/0
  3785 ;;		Unchanged: FFE9F/0
  3786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3787 ;;      Params:         0       0       0       0       0
  3788 ;;      Locals:         0       0       0       0       0
  3789 ;;      Temps:          0       0       0       0       0
  3790 ;;      Totals:         0       0       0       0       0
  3791 ;;Total ram usage:        0 bytes
  3792 ;; Hardware stack levels used:    1
  3793 ;; Hardware stack levels required when called:    4
  3794 ;; This function calls:
  3795 ;;		_setPA1
  3796 ;;		_setPA0
  3797 ;;		_setPB0
  3798 ;;		_setPB1
  3799 ;;		_setPB2
  3800 ;;		_clearAllTimer
  3801 ;;		_setPA3
  3802 ;;		_setPB4
  3803 ;; This function is called by:
  3804 ;;		_main
  3805 ;; This function uses a non-reentrant model
  3806 ;;
  3807  0495                     _clearParaFunction1:	
  3808                           
  3809                           ;main.c: 624: setPA1(0);
  3810                           
  3811                           ; Regs used in _clearParaFunction1: [wreg+status,2+status,0+pclath+cstack]
  3812  0495  3000               	movlw	0
  3813  0496  24CC  118A         	fcall	_setPA1
  3814                           
  3815                           ;main.c: 625: setPA0(0);
  3816  0498  3000               	movlw	0
  3817  0499  24C3  118A         	fcall	_setPA0
  3818                           
  3819                           ;main.c: 627: setPB0(0);
  3820  049B  3000               	movlw	0
  3821  049C  24AB  118A         	fcall	_setPB0
  3822                           
  3823                           ;main.c: 628: setPB1(0);
  3824  049E  3000               	movlw	0
  3825  049F  24B3  118A         	fcall	_setPB1
  3826                           
  3827                           ;main.c: 629: setPB2(0);
  3828  04A1  3000               	movlw	0
  3829  04A2  24BB  118A         	fcall	_setPB2
  3830                           
  3831                           ;main.c: 631: clearAllTimer();
  3832  04A4  24D4  118A         	fcall	_clearAllTimer
  3833                           
  3834                           ;main.c: 633: setPA3(0);
  3835  04A6  3000               	movlw	0
  3836  04A7  262D  118A         	fcall	_setPA3
  3837                           
  3838                           ;main.c: 634: setPB4(0);
  3839  04A9  3000               	movlw	0
  3840  04AA  2D39               	ljmp	_setPB4
  3841  04AB                     __end_of_clearParaFunction1:	
  3842  04AB                     __ptext1083:	
  3843 ;; =============== function _setPB1 ends ============
  3844                           
  3845                           
  3846 ;; *************** function _setPB0 *****************
  3847 ;; Defined at:
  3848 ;;		line 167 in file "C:\temp\dev\AK7030-OTP\main.c"
  3849 ;; Parameters:    Size  Location     Type
  3850 ;;  bValue          1    wreg     unsigned char 
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;  bValue          1    0[BANK0 ] unsigned char 
  3853 ;; Return value:  Size  Location     Type
  3854 ;;		None               void
  3855 ;; Registers used:
  3856 ;;		wreg
  3857 ;; Tracked objects:
  3858 ;;		On entry : 60/0
  3859 ;;		On exit  : 60/0
  3860 ;;		Unchanged: FFF9F/0
  3861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3862 ;;      Params:         0       0       0       0       0
  3863 ;;      Locals:         0       1       0       0       0
  3864 ;;      Temps:          0       0       0       0       0
  3865 ;;      Totals:         0       1       0       0       0
  3866 ;;Total ram usage:        1 bytes
  3867 ;; Hardware stack levels used:    1
  3868 ;; Hardware stack levels required when called:    2
  3869 ;; This function calls:
  3870 ;;		Nothing
  3871 ;; This function is called by:
  3872 ;;		_clearParaFunction1
  3873 ;;		_main
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876  04AB                     _setPB0:	
  3877                           
  3878                           ; Regs used in _setPB0: [wreg]
  3879                           ;setPB0@bValue stored from wreg
  3880  04AB  00A0               	movwf	setPB0@bValue
  3881                           
  3882                           ;main.c: 168: if( bValue )
  3883  04AC  0820               	movf	setPB0@bValue,w
  3884  04AD  1903               	btfsc	3,2
  3885  04AE  2CB1               	goto	l706
  3886                           
  3887                           ;main.c: 170: PB0 = 1;
  3888  04AF  1406               	bsf	6,0
  3889  04B0  0008               	return
  3890  04B1                     l706:	
  3891                           
  3892                           ;main.c: 174: else
  3893                           ;main.c: 176: PB0 = 0;
  3894  04B1  1006               	bcf	6,0
  3895  04B2  0008               	return
  3896  04B3                     __end_of_setPB0:	
  3897  04B3                     __ptext1082:	
  3898 ;; =============== function _setPB2 ends ============
  3899                           
  3900                           
  3901 ;; *************** function _setPB1 *****************
  3902 ;; Defined at:
  3903 ;;		line 184 in file "C:\temp\dev\AK7030-OTP\main.c"
  3904 ;; Parameters:    Size  Location     Type
  3905 ;;  bValue          1    wreg     unsigned char 
  3906 ;; Auto vars:     Size  Location     Type
  3907 ;;  bValue          1    0[BANK0 ] unsigned char 
  3908 ;; Return value:  Size  Location     Type
  3909 ;;		None               void
  3910 ;; Registers used:
  3911 ;;		wreg
  3912 ;; Tracked objects:
  3913 ;;		On entry : 60/0
  3914 ;;		On exit  : 60/0
  3915 ;;		Unchanged: FFF9F/0
  3916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3917 ;;      Params:         0       0       0       0       0
  3918 ;;      Locals:         0       1       0       0       0
  3919 ;;      Temps:          0       0       0       0       0
  3920 ;;      Totals:         0       1       0       0       0
  3921 ;;Total ram usage:        1 bytes
  3922 ;; Hardware stack levels used:    1
  3923 ;; Hardware stack levels required when called:    2
  3924 ;; This function calls:
  3925 ;;		Nothing
  3926 ;; This function is called by:
  3927 ;;		_clearParaFunction1
  3928 ;;		_main
  3929 ;; This function uses a non-reentrant model
  3930 ;;
  3931  04B3                     _setPB1:	
  3932                           
  3933                           ; Regs used in _setPB1: [wreg]
  3934                           ;setPB1@bValue stored from wreg
  3935  04B3  00A0               	movwf	setPB1@bValue
  3936                           
  3937                           ;main.c: 185: if( bValue )
  3938  04B4  0820               	movf	setPB1@bValue,w
  3939  04B5  1903               	btfsc	3,2
  3940  04B6  2CB9               	goto	l711
  3941                           
  3942                           ;main.c: 187: PB1 = 1;
  3943  04B7  1486               	bsf	6,1
  3944  04B8  0008               	return
  3945  04B9                     l711:	
  3946                           
  3947                           ;main.c: 191: else
  3948                           ;main.c: 193: PB1 = 0;
  3949  04B9  1086               	bcf	6,1
  3950  04BA  0008               	return
  3951  04BB                     __end_of_setPB1:	
  3952  04BB                     __ptext1081:	
  3953 ;; =============== function _setPA0 ends ============
  3954                           
  3955                           
  3956 ;; *************** function _setPB2 *****************
  3957 ;; Defined at:
  3958 ;;		line 201 in file "C:\temp\dev\AK7030-OTP\main.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;  bValue          1    wreg     unsigned char 
  3961 ;; Auto vars:     Size  Location     Type
  3962 ;;  bValue          1    0[BANK0 ] unsigned char 
  3963 ;; Return value:  Size  Location     Type
  3964 ;;		None               void
  3965 ;; Registers used:
  3966 ;;		wreg
  3967 ;; Tracked objects:
  3968 ;;		On entry : 60/0
  3969 ;;		On exit  : 60/0
  3970 ;;		Unchanged: FFF9F/0
  3971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3972 ;;      Params:         0       0       0       0       0
  3973 ;;      Locals:         0       1       0       0       0
  3974 ;;      Temps:          0       0       0       0       0
  3975 ;;      Totals:         0       1       0       0       0
  3976 ;;Total ram usage:        1 bytes
  3977 ;; Hardware stack levels used:    1
  3978 ;; Hardware stack levels required when called:    2
  3979 ;; This function calls:
  3980 ;;		Nothing
  3981 ;; This function is called by:
  3982 ;;		_clearParaFunction1
  3983 ;;		_main
  3984 ;; This function uses a non-reentrant model
  3985 ;;
  3986  04BB                     _setPB2:	
  3987                           
  3988                           ; Regs used in _setPB2: [wreg]
  3989                           ;setPB2@bValue stored from wreg
  3990  04BB  00A0               	movwf	setPB2@bValue
  3991                           
  3992                           ;main.c: 202: if( bValue )
  3993  04BC  0820               	movf	setPB2@bValue,w
  3994  04BD  1903               	btfsc	3,2
  3995  04BE  2CC1               	goto	l716
  3996                           
  3997                           ;main.c: 204: PB2 = 1;
  3998  04BF  1506               	bsf	6,2
  3999  04C0  0008               	return
  4000  04C1                     l716:	
  4001                           
  4002                           ;main.c: 208: else
  4003                           ;main.c: 210: PB2 = 0;
  4004  04C1  1106               	bcf	6,2
  4005  04C2  0008               	return
  4006  04C3                     __end_of_setPB2:	
  4007  04C3                     __ptext1080:	
  4008 ;; =============== function _setPA1 ends ============
  4009                           
  4010                           
  4011 ;; *************** function _setPA0 *****************
  4012 ;; Defined at:
  4013 ;;		line 218 in file "C:\temp\dev\AK7030-OTP\main.c"
  4014 ;; Parameters:    Size  Location     Type
  4015 ;;  bValue          1    wreg     unsigned char 
  4016 ;; Auto vars:     Size  Location     Type
  4017 ;;  bValue          1    0[BANK0 ] unsigned char 
  4018 ;; Return value:  Size  Location     Type
  4019 ;;		None               void
  4020 ;; Registers used:
  4021 ;;		wreg
  4022 ;; Tracked objects:
  4023 ;;		On entry : 40/0
  4024 ;;		On exit  : 60/0
  4025 ;;		Unchanged: FFF9F/0
  4026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4027 ;;      Params:         0       0       0       0       0
  4028 ;;      Locals:         0       1       0       0       0
  4029 ;;      Temps:          0       0       0       0       0
  4030 ;;      Totals:         0       1       0       0       0
  4031 ;;Total ram usage:        1 bytes
  4032 ;; Hardware stack levels used:    1
  4033 ;; Hardware stack levels required when called:    2
  4034 ;; This function calls:
  4035 ;;		Nothing
  4036 ;; This function is called by:
  4037 ;;		_clearParaFunction1
  4038 ;;		_main
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041  04C3                     _setPA0:	
  4042                           
  4043                           ; Regs used in _setPA0: [wreg]
  4044                           ;setPA0@bValue stored from wreg
  4045  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  4046  04C4  00A0               	movwf	setPA0@bValue
  4047                           
  4048                           ;main.c: 219: if( bValue )
  4049  04C5  0820               	movf	setPA0@bValue,w
  4050  04C6  1903               	btfsc	3,2
  4051  04C7  2CCA               	goto	l721
  4052                           
  4053                           ;main.c: 221: PA0 = 1;
  4054  04C8  1405               	bsf	5,0
  4055  04C9  0008               	return
  4056  04CA                     l721:	
  4057                           
  4058                           ;main.c: 225: else
  4059                           ;main.c: 227: PA0 = 0;
  4060  04CA  1005               	bcf	5,0
  4061  04CB  0008               	return
  4062  04CC                     __end_of_setPA0:	
  4063  04CC                     __ptext1079:	
  4064 ;; =============== function _setPA2 ends ============
  4065                           
  4066                           
  4067 ;; *************** function _setPA1 *****************
  4068 ;; Defined at:
  4069 ;;		line 235 in file "C:\temp\dev\AK7030-OTP\main.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;  bValue          1    wreg     unsigned char 
  4072 ;; Auto vars:     Size  Location     Type
  4073 ;;  bValue          1    0[BANK0 ] unsigned char 
  4074 ;; Return value:  Size  Location     Type
  4075 ;;		None               void
  4076 ;; Registers used:
  4077 ;;		wreg
  4078 ;; Tracked objects:
  4079 ;;		On entry : 60/0
  4080 ;;		On exit  : 60/0
  4081 ;;		Unchanged: FFF9F/0
  4082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4083 ;;      Params:         0       0       0       0       0
  4084 ;;      Locals:         0       1       0       0       0
  4085 ;;      Temps:          0       0       0       0       0
  4086 ;;      Totals:         0       1       0       0       0
  4087 ;;Total ram usage:        1 bytes
  4088 ;; Hardware stack levels used:    1
  4089 ;; Hardware stack levels required when called:    2
  4090 ;; This function calls:
  4091 ;;		Nothing
  4092 ;; This function is called by:
  4093 ;;		_clearParaFunction1
  4094 ;;		_main
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097  04CC                     _setPA1:	
  4098                           
  4099                           ; Regs used in _setPA1: [wreg]
  4100                           ;setPA1@bValue stored from wreg
  4101  04CC  00A0               	movwf	setPA1@bValue
  4102                           
  4103                           ;main.c: 236: if( bValue )
  4104  04CD  0820               	movf	setPA1@bValue,w
  4105  04CE  1903               	btfsc	3,2
  4106  04CF  2CD2               	goto	l726
  4107                           
  4108                           ;main.c: 238: PA1 = 1;
  4109  04D0  1485               	bsf	5,1
  4110  04D1  0008               	return
  4111  04D2                     l726:	
  4112                           
  4113                           ;main.c: 242: else
  4114                           ;main.c: 244: PA1 = 0;
  4115  04D2  1085               	bcf	5,1
  4116  04D3  0008               	return
  4117  04D4                     __end_of_setPA1:	
  4118  04D4                     __ptext1051:	
  4119 ;; =============== function _getAdOriginalCh0Value ends ============
  4120                           
  4121                           
  4122 ;; *************** function _clearAllTimer *****************
  4123 ;; Defined at:
  4124 ;;		line 101 in file "C:\temp\dev\AK7030-OTP\main.c"
  4125 ;; Parameters:    Size  Location     Type
  4126 ;;		None
  4127 ;; Auto vars:     Size  Location     Type
  4128 ;;		None
  4129 ;; Return value:  Size  Location     Type
  4130 ;;		None               void
  4131 ;; Registers used:
  4132 ;;		status,2, status,0, pclath, cstack
  4133 ;; Tracked objects:
  4134 ;;		On entry : 40/20
  4135 ;;		On exit  : 60/0
  4136 ;;		Unchanged: FFF9F/0
  4137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4138 ;;      Params:         0       0       0       0       0
  4139 ;;      Locals:         0       0       0       0       0
  4140 ;;      Temps:          0       0       0       0       0
  4141 ;;      Totals:         0       0       0       0       0
  4142 ;;Total ram usage:        0 bytes
  4143 ;; Hardware stack levels used:    1
  4144 ;; Hardware stack levels required when called:    3
  4145 ;; This function calls:
  4146 ;;		_clearTwelveHoursTimer
  4147 ;;		_clearThreeHoursTimer
  4148 ;;		_clearTwentySecondsTimer
  4149 ;;		_clearTwentyMinuteTimer
  4150 ;; This function is called by:
  4151 ;;		_clearPinPortAndTimer
  4152 ;;		_clearParaFunction1
  4153 ;;		_main
  4154 ;; This function uses a non-reentrant model
  4155 ;;
  4156  04D4                     _clearAllTimer:	
  4157  04D4                     l4769:	
  4158                           ; Regs used in _clearAllTimer: [status,2+status,0+pclath+cstack]
  4159                           
  4160                           
  4161                           ;main.c: 102: clearTwelveHoursTimer();
  4162  04D4  24DB  118A         	fcall	_clearTwelveHoursTimer
  4163                           
  4164                           ;main.c: 103: clearThreeHoursTimer();
  4165  04D6  24E1  118A         	fcall	_clearThreeHoursTimer
  4166                           
  4167                           ;main.c: 104: clearTwentySecondsTimer();
  4168  04D8  26EC  118A         	fcall	_clearTwentySecondsTimer
  4169                           
  4170                           ;main.c: 105: clearTwentyMinuteTimer();
  4171  04DA  2EF4               	ljmp	l4431
  4172  04DB                     __end_of_clearAllTimer:	
  4173  04DB                     __ptext1088:	
  4174 ;; =============== function _clearThreeHoursTimer ends ============
  4175                           
  4176                           
  4177 ;; *************** function _clearTwelveHoursTimer *****************
  4178 ;; Defined at:
  4179 ;;		line 406 in file "C:\temp\dev\AK7030-OTP\common.c"
  4180 ;; Parameters:    Size  Location     Type
  4181 ;;		None
  4182 ;; Auto vars:     Size  Location     Type
  4183 ;;		None
  4184 ;; Return value:  Size  Location     Type
  4185 ;;		None               void
  4186 ;; Registers used:
  4187 ;;		status,2
  4188 ;; Tracked objects:
  4189 ;;		On entry : 40/20
  4190 ;;		On exit  : 60/0
  4191 ;;		Unchanged: FFF9F/0
  4192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4193 ;;      Params:         0       0       0       0       0
  4194 ;;      Locals:         0       0       0       0       0
  4195 ;;      Temps:          0       0       0       0       0
  4196 ;;      Totals:         0       0       0       0       0
  4197 ;;Total ram usage:        0 bytes
  4198 ;; Hardware stack levels used:    1
  4199 ;; Hardware stack levels required when called:    2
  4200 ;; This function calls:
  4201 ;;		Nothing
  4202 ;; This function is called by:
  4203 ;;		_clearAllTimer
  4204 ;; This function uses a non-reentrant model
  4205 ;;
  4206  04DB                     _clearTwelveHoursTimer:	
  4207                           
  4208                           ;common.c: 407: uiBigTimer = 0;
  4209                           
  4210                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  4211  04DB  1683               	bsf	3,5	;RP0=1, select bank1
  4212  04DC  01A0               	clrf	_uiBigTimer^(0+128)
  4213  04DD  01A1               	clrf	(_uiBigTimer+1)^(0+128)
  4214                           
  4215                           ;common.c: 408: bBigTimerStartFlag = 0;
  4216  04DE  1283               	bcf	3,5	;RP0=0, select bank0
  4217  04DF  01CC               	clrf	_bBigTimerStartFlag
  4218  04E0  0008               	return
  4219  04E1                     __end_of_clearTwelveHoursTimer:	
  4220  04E1                     __ptext1087:	
  4221 ;; =============== function _clearTwentySecondsTimer ends ============
  4222                           
  4223                           
  4224 ;; *************** function _clearThreeHoursTimer *****************
  4225 ;; Defined at:
  4226 ;;		line 413 in file "C:\temp\dev\AK7030-OTP\common.c"
  4227 ;; Parameters:    Size  Location     Type
  4228 ;;		None
  4229 ;; Auto vars:     Size  Location     Type
  4230 ;;		None
  4231 ;; Return value:  Size  Location     Type
  4232 ;;		None               void
  4233 ;; Registers used:
  4234 ;;		status,2
  4235 ;; Tracked objects:
  4236 ;;		On entry : 60/0
  4237 ;;		On exit  : 60/0
  4238 ;;		Unchanged: FFF9F/0
  4239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4240 ;;      Params:         0       0       0       0       0
  4241 ;;      Locals:         0       0       0       0       0
  4242 ;;      Temps:          0       0       0       0       0
  4243 ;;      Totals:         0       0       0       0       0
  4244 ;;Total ram usage:        0 bytes
  4245 ;; Hardware stack levels used:    1
  4246 ;; Hardware stack levels required when called:    2
  4247 ;; This function calls:
  4248 ;;		Nothing
  4249 ;; This function is called by:
  4250 ;;		_clearAllTimer
  4251 ;;		_main
  4252 ;; This function uses a non-reentrant model
  4253 ;;
  4254  04E1                     _clearThreeHoursTimer:	
  4255                           
  4256                           ;common.c: 414: uiSmallTimer = 0;
  4257                           
  4258                           ; Regs used in _clearThreeHoursTimer: [status,2]
  4259  04E1  1683               	bsf	3,5	;RP0=1, select bank1
  4260  04E2  01A2               	clrf	_uiSmallTimer^(0+128)
  4261  04E3  01A3               	clrf	(_uiSmallTimer+1)^(0+128)
  4262                           
  4263                           ;common.c: 415: bSmallTimerStartFlag = 0;
  4264  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  4265  04E5  01CD               	clrf	_bSmallTimerStartFlag
  4266  04E6  0008               	return
  4267  04E7                     __end_of_clearThreeHoursTimer:	
  4268  04E7                     __ptext1047:	
  4269 ;; =============== function _getAdOriginalCh2Value ends ============
  4270                           
  4271                           
  4272 ;; *************** function _vHandle20sTimerOut *****************
  4273 ;; Defined at:
  4274 ;;		line 2526 in file "C:\temp\dev\AK7030-OTP\main.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;  bClearStep      1    wreg     unsigned char 
  4277 ;; Auto vars:     Size  Location     Type
  4278 ;;  bClearStep      1    1[BANK0 ] unsigned char 
  4279 ;; Return value:  Size  Location     Type
  4280 ;;		None               void
  4281 ;; Registers used:
  4282 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4283 ;; Tracked objects:
  4284 ;;		On entry : 140/0
  4285 ;;		On exit  : 160/20
  4286 ;;		Unchanged: FFE9F/0
  4287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4288 ;;      Params:         0       0       0       0       0
  4289 ;;      Locals:         0       1       0       0       0
  4290 ;;      Temps:          0       0       0       0       0
  4291 ;;      Totals:         0       1       0       0       0
  4292 ;;Total ram usage:        1 bytes
  4293 ;; Hardware stack levels used:    1
  4294 ;; Hardware stack levels required when called:    3
  4295 ;; This function calls:
  4296 ;;		_setPA3
  4297 ;;		_setPB4
  4298 ;;		_setPB6
  4299 ;;		_setPB6AsInput
  4300 ;;		_clearTwentySecondsTimer
  4301 ;; This function is called by:
  4302 ;;		_main
  4303 ;; This function uses a non-reentrant model
  4304 ;;
  4305  04E7                     _vHandle20sTimerOut:	
  4306                           
  4307                           ; Regs used in _vHandle20sTimerOut: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4308                           ;vHandle20sTimerOut@bClearStep stored from wreg
  4309  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  4310  04E8  00A1               	movwf	vHandle20sTimerOut@bClearStep
  4311                           
  4312                           ;main.c: 2527: static unsigned char ucTimerOnBehaviorStep = 0;
  4313                           ;main.c: 2529: static unsigned char ucTimeCnt = 0;
  4314                           ;main.c: 2531: if( 1 == bClearStep)
  4315  04E9  0B21               	decfsz	vHandle20sTimerOut@bClearStep,w
  4316  04EA  2D26               	goto	l4833
  4317                           
  4318                           ;main.c: 2534: ucTimerOnBehaviorStep = 0;
  4319  04EB  1683               	bsf	3,5	;RP0=1, select bank1
  4320  04EC  01B8               	clrf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128)
  4321                           
  4322                           ;main.c: 2535: ucTimeCnt = 0;
  4323  04ED  01FD               	clrf	vHandle20sTimerOut@ucTimeCnt
  4324  04EE  2D26               	goto	l4833
  4325  04EF                     l4787:	
  4326                           
  4327                           ;main.c: 2541: {
  4328                           ;main.c: 2546: setPA3(0);
  4329  04EF  3000               	movlw	0
  4330  04F0  262D  118A         	fcall	_setPA3
  4331                           
  4332                           ;main.c: 2547: setPB4(0);
  4333  04F2  3000               	movlw	0
  4334  04F3  2539  118A         	fcall	_setPB4
  4335                           
  4336                           ;main.c: 2548: setPB6(1);
  4337  04F5  3001               	movlw	1
  4338  04F6  263F               	fcall	_setPB6
  4339                           
  4340                           ;main.c: 2549: ucTimeCnt = 0;
  4341  04F7  01FD               	clrf	vHandle20sTimerOut@ucTimeCnt
  4342                           
  4343                           ;main.c: 2550: ucTimerOnBehaviorStep = 1;
  4344  04F8  1683               	bsf	3,5	;RP0=1, select bank1
  4345  04F9  01B8               	clrf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128)
  4346  04FA  0AB8               	incf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128),f
  4347                           
  4348                           ;main.c: 2551: break;
  4349  04FB  0008               	return
  4350  04FC                     l4793:	
  4351  04FC  300A               	movlw	10
  4352                           
  4353                           ;main.c: 2555: {
  4354                           ;main.c: 2559: ucTimeCnt++;
  4355  04FD  0AFD               	incf	vHandle20sTimerOut@ucTimeCnt,f
  4356                           
  4357                           ;main.c: 2561: if( ucTimeCnt >= 10)
  4358  04FE  027D               	subwf	vHandle20sTimerOut@ucTimeCnt,w
  4359  04FF  1C03               	skipc
  4360  0500  0008               	return
  4361  0501  3002               	movlw	2
  4362                           
  4363                           ;main.c: 2562: {
  4364                           ;main.c: 2563: ucTimeCnt = 0;
  4365  0502  01FD               	clrf	vHandle20sTimerOut@ucTimeCnt
  4366                           
  4367                           ;main.c: 2564: ucTimerOnBehaviorStep = 2;
  4368  0503  00B8               	movwf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128)
  4369  0504  0008               	return
  4370  0505                     l4801:	
  4371                           
  4372                           ;main.c: 2570: {
  4373                           ;main.c: 2574: ucTimeCnt++;
  4374  0505  0AFD               	incf	vHandle20sTimerOut@ucTimeCnt,f
  4375                           
  4376                           ;main.c: 2576: if( ucTimeCnt >= 1)
  4377  0506  087D               	movf	vHandle20sTimerOut@ucTimeCnt,w
  4378  0507  1903               	btfsc	3,2
  4379  0508  0008               	return
  4380  0509  3003               	movlw	3
  4381                           
  4382                           ;main.c: 2577: {
  4383                           ;main.c: 2578: ucTimeCnt = 0;
  4384  050A  01FD               	clrf	vHandle20sTimerOut@ucTimeCnt
  4385                           
  4386                           ;main.c: 2580: ucTimerOnBehaviorStep = 3;
  4387  050B  00B8               	movwf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128)
  4388  050C  0008               	return
  4389  050D                     l4809:	
  4390                           
  4391                           ;main.c: 2586: {
  4392                           ;main.c: 2590: setPA3(1);
  4393  050D  3001               	movlw	1
  4394  050E  262D  118A         	fcall	_setPA3
  4395                           
  4396                           ;main.c: 2591: setPB4(1);
  4397  0510  3001               	movlw	1
  4398  0511  2539  118A         	fcall	_setPB4
  4399                           
  4400                           ;main.c: 2593: setPB6AsInput();
  4401  0513  264D               	fcall	_setPB6AsInput
  4402  0514  3004               	movlw	4
  4403                           
  4404                           ;main.c: 2594: ucTimeCnt = 0;
  4405  0515  01FD               	clrf	vHandle20sTimerOut@ucTimeCnt
  4406                           
  4407                           ;main.c: 2596: ucTimerOnBehaviorStep = 4;
  4408  0516  00B8               	movwf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128)
  4409                           
  4410                           ;main.c: 2597: break;
  4411  0517  0008               	return
  4412  0518                     l4817:	
  4413  0518  3002               	movlw	2
  4414                           
  4415                           ;main.c: 2600: {
  4416                           ;main.c: 2604: ucTimeCnt++;
  4417  0519  0AFD               	incf	vHandle20sTimerOut@ucTimeCnt,f
  4418                           
  4419                           ;main.c: 2606: if( ucTimeCnt >= 2)
  4420  051A  027D               	subwf	vHandle20sTimerOut@ucTimeCnt,w
  4421  051B  1C03               	skipc
  4422  051C  0008               	return
  4423                           
  4424                           ;main.c: 2607: {
  4425                           ;main.c: 2608: clearTwentySecondsTimer();
  4426  051D  26EC               	fcall	_clearTwentySecondsTimer
  4427                           
  4428                           ;main.c: 2610: ucTimeCnt = 0;
  4429  051E  01FD               	clrf	vHandle20sTimerOut@ucTimeCnt
  4430                           
  4431                           ;main.c: 2612: ucADC4_Step = ADC4_STEP_INIT;
  4432  051F  1283               	bcf	3,5	;RP0=0, select bank0
  4433  0520  3003               	movlw	3
  4434  0521  01D3               	clrf	_ucADC4_Step
  4435                           
  4436                           ;main.c: 2614: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  4437  0522  00D0               	movwf	_enumMainLoopStep
  4438                           
  4439                           ;main.c: 2616: ucTimerOnBehaviorStep = 0;
  4440  0523  1683               	bsf	3,5	;RP0=1, select bank1
  4441  0524  01B8               	clrf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128)
  4442  0525  0008               	return
  4443  0526                     l4833:	
  4444  0526  1683               	bsf	3,5	;RP0=1, select bank1
  4445  0527  0838               	movf	vHandle20sTimerOut@ucTimerOnBehaviorStep^(0+128),w
  4446                           
  4447                           ; Switch size 1, requested type "space"
  4448                           ; Number of cases is 5, Range of values is 0 to 4
  4449                           ; switch strategies available:
  4450                           ; Name         Instructions Cycles
  4451                           ; simple_byte           16     9 (average)
  4452                           ; direct_byte           17     7 (fixed)
  4453                           ; jumptable            260     6 (fixed)
  4454                           ; rangetable             9     6 (fixed)
  4455                           ; spacedrange           16     9 (fixed)
  4456                           ; locatedrange           5     3 (fixed)
  4457                           ;	Chosen strategy is simple_byte
  4458  0528  3A00               	xorlw	0	; case 0
  4459  0529  1903               	skipnz
  4460  052A  2CEF               	goto	l4787
  4461  052B  3A01               	xorlw	1	; case 1
  4462  052C  1903               	skipnz
  4463  052D  2CFC               	goto	l4793
  4464  052E  3A03               	xorlw	3	; case 2
  4465  052F  1903               	skipnz
  4466  0530  2D05               	goto	l4801
  4467  0531  3A01               	xorlw	1	; case 3
  4468  0532  1903               	skipnz
  4469  0533  2D0D               	goto	l4809
  4470  0534  3A07               	xorlw	7	; case 4
  4471  0535  1903               	skipnz
  4472  0536  2D18               	goto	l4817
  4473  0537  2D38               	goto	l1132
  4474  0538                     l1132:	
  4475  0538  0008               	return
  4476  0539                     __end_of_vHandle20sTimerOut:	
  4477  0539                     __ptext1075:	
  4478 ;; =============== function _setPA6 ends ============
  4479                           
  4480                           
  4481 ;; *************** function _setPB4 *****************
  4482 ;; Defined at:
  4483 ;;		line 311 in file "C:\temp\dev\AK7030-OTP\main.c"
  4484 ;; Parameters:    Size  Location     Type
  4485 ;;  bValue          1    wreg     unsigned char 
  4486 ;; Auto vars:     Size  Location     Type
  4487 ;;  bValue          1    0[BANK0 ] unsigned char 
  4488 ;; Return value:  Size  Location     Type
  4489 ;;		None               void
  4490 ;; Registers used:
  4491 ;;		wreg
  4492 ;; Tracked objects:
  4493 ;;		On entry : 60/0
  4494 ;;		On exit  : 60/0
  4495 ;;		Unchanged: FFF9F/0
  4496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4497 ;;      Params:         0       0       0       0       0
  4498 ;;      Locals:         0       1       0       0       0
  4499 ;;      Temps:          0       0       0       0       0
  4500 ;;      Totals:         0       1       0       0       0
  4501 ;;Total ram usage:        1 bytes
  4502 ;; Hardware stack levels used:    1
  4503 ;; Hardware stack levels required when called:    2
  4504 ;; This function calls:
  4505 ;;		Nothing
  4506 ;; This function is called by:
  4507 ;;		_clearParaFunction1
  4508 ;;		_main
  4509 ;;		_vHandle20sTimerOut
  4510 ;; This function uses a non-reentrant model
  4511 ;;
  4512  0539                     _setPB4:	
  4513                           
  4514                           ; Regs used in _setPB4: [wreg]
  4515                           ;setPB4@bValue stored from wreg
  4516  0539  00A0               	movwf	setPB4@bValue
  4517                           
  4518                           ;main.c: 312: if( bValue )
  4519  053A  0820               	movf	setPB4@bValue,w
  4520  053B  1903               	btfsc	3,2
  4521  053C  2D3F               	goto	l746
  4522                           
  4523                           ;main.c: 314: PB4 = 1;
  4524  053D  1606               	bsf	6,4
  4525  053E  0008               	return
  4526  053F                     l746:	
  4527                           
  4528                           ;main.c: 318: else
  4529                           ;main.c: 320: PB4 = 0;
  4530  053F  1206               	bcf	6,4
  4531  0540  0008               	return
  4532  0541                     __end_of_setPB4:	
  4533  0541                     __ptext1041:	
  4534 ;; =============== function _main ends ============
  4535                           
  4536                           
  4537 ;; *************** function _vHandle20sTimeron *****************
  4538 ;; Defined at:
  4539 ;;		line 2249 in file "C:\temp\dev\AK7030-OTP\main.c"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;		None
  4542 ;; Auto vars:     Size  Location     Type
  4543 ;;		None
  4544 ;; Return value:  Size  Location     Type
  4545 ;;		None               void
  4546 ;; Registers used:
  4547 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4548 ;; Tracked objects:
  4549 ;;		On entry : 140/0
  4550 ;;		On exit  : 140/0
  4551 ;;		Unchanged: FFE00/0
  4552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4553 ;;      Params:         0       0       0       0       0
  4554 ;;      Locals:         0       0       0       0       0
  4555 ;;      Temps:          0       0       0       0       0
  4556 ;;      Totals:         0       0       0       0       0
  4557 ;;Total ram usage:        0 bytes
  4558 ;; Hardware stack levels used:    1
  4559 ;; Hardware stack levels required when called:    4
  4560 ;; This function calls:
  4561 ;;		_getAdOriginalCh2Value
  4562 ;;		_getAdOriginalCh6Value
  4563 ;;		_vPause20sTimer
  4564 ;;		_setPA3
  4565 ;;		_setPB6
  4566 ;;		_setPB6AsInput
  4567 ;; This function is called by:
  4568 ;;		_main
  4569 ;; This function uses a non-reentrant model
  4570 ;;
  4571  0541                     _vHandle20sTimeron:	
  4572                           
  4573                           ;main.c: 2250: enum enum_waiting_loop_step
  4574                           ;main.c: 2251: {
  4575                           ;main.c: 2252: WAITING_LOOP_STEP1 = 0,
  4576                           ;main.c: 2253: WAITING_LOOP_STEP2,
  4577                           ;main.c: 2254: WAITING_LOOP_STEP3,
  4578                           ;main.c: 2255: WAITING_LOOP_STEP4,
  4579                           ;main.c: 2256: WAITING_LOOP_STEP5,
  4580                           ;main.c: 2257: WAITING_LOOP_STEP6,
  4581                           ;main.c: 2258: WAITING_LOOP_STEP7,
  4582                           ;main.c: 2259: WAITING_LOOP_STEP8,
  4583                           ;main.c: 2260: WAITING_LOOP_STEP9,
  4584                           ;main.c: 2261: };
  4585                           ;main.c: 2263: enum enumCmpStep
  4586                           ;main.c: 2264: {
  4587                           ;main.c: 2265: COMPARE_STEP0 = 0,
  4588                           ;main.c: 2266: COMPARE_STEP1,
  4589                           ;main.c: 2267: COMPARE_STEP2,
  4590                           
  4591                           ; Regs used in _vHandle20sTimeron: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4592  0541  2E0E               	goto	l5017
  4593  0542                     l4883:	
  4594                           
  4595                           ;main.c: 2284: {
  4596                           ;main.c: 2285: if((getAdOriginalCh2Value() > 1950))
  4597  0542  2624  118A         	fcall	_getAdOriginalCh2Value
  4598  0544  3007               	movlw	7
  4599  0545  0247               	subwf	?_getAdOriginalCh2Value+1,w
  4600  0546  309F               	movlw	159
  4601  0547  1903               	skipnz
  4602  0548  0246               	subwf	?_getAdOriginalCh2Value,w
  4603  0549  1C03               	skipc
  4604  054A  2D4F               	goto	l4889
  4605                           
  4606                           ;main.c: 2286: {
  4607                           ;main.c: 2287: ucTimerCntMore++;
  4608  054B  1683               	bsf	3,5	;RP0=1, select bank1
  4609  054C  0AC0               	incf	vHandle20sTimeron@ucTimerCntMore^(0+128),f
  4610                           
  4611                           ;main.c: 2288: ucTimerCntLess = 0;
  4612  054D  01BF               	clrf	vHandle20sTimeron@ucTimerCntLess^(0+128)
  4613                           
  4614                           ;main.c: 2289: }
  4615  054E  2D52               	goto	l4893
  4616  054F                     l4889:	
  4617                           
  4618                           ;main.c: 2290: else
  4619                           ;main.c: 2291: {
  4620                           ;main.c: 2292: ucTimerCntLess++;
  4621  054F  1683               	bsf	3,5	;RP0=1, select bank1
  4622  0550  0ABF               	incf	vHandle20sTimeron@ucTimerCntLess^(0+128),f
  4623                           
  4624                           ;main.c: 2293: ucTimerCntMore = 0;
  4625  0551  01C0               	clrf	vHandle20sTimeron@ucTimerCntMore^(0+128)
  4626  0552                     l4893:	
  4627                           
  4628                           ;main.c: 2294: }
  4629                           ;main.c: 2296: if(ucTimerCntMore >= 2)
  4630  0552  3002               	movlw	2
  4631  0553  0240               	subwf	vHandle20sTimeron@ucTimerCntMore^(0+128),w
  4632  0554  1C03               	skipc
  4633  0555  2D59               	goto	l4899
  4634                           
  4635                           ;main.c: 2297: {
  4636                           ;main.c: 2298: ucCompareStep = COMPARE_STEP1;
  4637  0556  01B9               	clrf	vHandle20sTimeron@ucCompareStep^(0+128)
  4638  0557  0AB9               	incf	vHandle20sTimeron@ucCompareStep^(0+128),f
  4639                           
  4640                           ;main.c: 2299: ucTimerCntMore = 0;
  4641  0558  01C0               	clrf	vHandle20sTimeron@ucTimerCntMore^(0+128)
  4642  0559                     l4899:	
  4643                           
  4644                           ;main.c: 2300: }
  4645                           ;main.c: 2302: if(ucTimerCntLess >= 2)
  4646  0559  3002               	movlw	2
  4647  055A  023F               	subwf	vHandle20sTimeron@ucTimerCntLess^(0+128),w
  4648  055B  1C03               	skipc
  4649  055C  2E1A               	goto	l5019
  4650                           
  4651                           ;main.c: 2303: {
  4652                           ;main.c: 2304: ucCompareStep = COMPARE_STEP2;
  4653  055D  3002               	movlw	2
  4654  055E  00B9               	movwf	vHandle20sTimeron@ucCompareStep^(0+128)
  4655                           
  4656                           ;main.c: 2305: ucTimerCntLess = 0;
  4657  055F  01BF               	clrf	vHandle20sTimeron@ucTimerCntLess^(0+128)
  4658  0560  2E1A               	goto	l5019
  4659  0561                     l4905:	
  4660                           
  4661                           ;main.c: 2314: {
  4662                           ;main.c: 2315: static unsigned char ucMoreThanP8sCnt = 0;
  4663                           ;main.c: 2317: static unsigned char ucLessThanP8sCnt = 0;
  4664                           ;main.c: 2319: static unsigned char ucTimerCntN1 = 0;
  4665                           ;main.c: 2321: if((getAdOriginalCh2Value() < 1950))
  4666  0561  2624  118A         	fcall	_getAdOriginalCh2Value
  4667  0563  3007               	movlw	7
  4668  0564  0247               	subwf	?_getAdOriginalCh2Value+1,w
  4669  0565  309E               	movlw	158
  4670  0566  1903               	skipnz
  4671  0567  0246               	subwf	?_getAdOriginalCh2Value,w
  4672  0568  1803               	skipnc
  4673  0569  2D76               	goto	l4921
  4674                           
  4675                           ;main.c: 2322: {
  4676                           ;main.c: 2323: ucTimerCntN1++;
  4677  056A  1683               	bsf	3,5	;RP0=1, select bank1
  4678  056B  3002               	movlw	2
  4679  056C  0AC1               	incf	vHandle20sTimeron@ucTimerCntN1^(0+128),f
  4680                           
  4681                           ;main.c: 2324: if(ucTimerCntN1 >= 2)
  4682  056D  0241               	subwf	vHandle20sTimeron@ucTimerCntN1^(0+128),w
  4683  056E  1C03               	skipc
  4684  056F  2E1A               	goto	l5019
  4685  0570  3002               	movlw	2
  4686                           
  4687                           ;main.c: 2325: {
  4688                           ;main.c: 2326: ucTimerCntN1 = 0;
  4689  0571  01C1               	clrf	vHandle20sTimeron@ucTimerCntN1^(0+128)
  4690                           
  4691                           ;main.c: 2327: ucCompareStep = COMPARE_STEP2;
  4692  0572  00B9               	movwf	vHandle20sTimeron@ucCompareStep^(0+128)
  4693                           
  4694                           ;main.c: 2329: ucLessThanP8sCnt = 0;
  4695  0573  01BB               	clrf	vHandle20sTimeron@ucLessThanP8sCnt^(0+128)
  4696                           
  4697                           ;main.c: 2331: ucMoreThanP8sCnt = 0;
  4698  0574  01BD               	clrf	vHandle20sTimeron@ucMoreThanP8sCnt^(0+128)
  4699  0575  2E1A               	goto	l5019
  4700  0576                     l4921:	
  4701                           
  4702                           ;main.c: 2335: else
  4703                           ;main.c: 2336: ucTimerCntN1 = 0;
  4704  0576  1683               	bsf	3,5	;RP0=1, select bank1
  4705  0577  01C1               	clrf	vHandle20sTimeron@ucTimerCntN1^(0+128)
  4706                           
  4707                           ;main.c: 2342: if((getAdOriginalCh6Value() < 81))
  4708  0578  2636  118A         	fcall	_getAdOriginalCh6Value
  4709  057A  3000               	movlw	0
  4710  057B  0247               	subwf	?_getAdOriginalCh6Value+1,w
  4711  057C  3051               	movlw	81
  4712  057D  1903               	skipnz
  4713  057E  0246               	subwf	?_getAdOriginalCh6Value,w
  4714  057F  1803               	skipnc
  4715  0580  2D85               	goto	l4929
  4716                           
  4717                           ;main.c: 2343: {
  4718                           ;main.c: 2344: ucLessThanP8sCnt++;
  4719  0581  1683               	bsf	3,5	;RP0=1, select bank1
  4720  0582  0ABB               	incf	vHandle20sTimeron@ucLessThanP8sCnt^(0+128),f
  4721                           
  4722                           ;main.c: 2345: ucMoreThanP8sCnt = 0;
  4723  0583  01BD               	clrf	vHandle20sTimeron@ucMoreThanP8sCnt^(0+128)
  4724                           
  4725                           ;main.c: 2346: }
  4726  0584  2D88               	goto	l4933
  4727  0585                     l4929:	
  4728                           
  4729                           ;main.c: 2347: else
  4730                           ;main.c: 2348: {
  4731                           ;main.c: 2349: ucMoreThanP8sCnt++;
  4732  0585  1683               	bsf	3,5	;RP0=1, select bank1
  4733  0586  0ABD               	incf	vHandle20sTimeron@ucMoreThanP8sCnt^(0+128),f
  4734                           
  4735                           ;main.c: 2350: ucLessThanP8sCnt = 0;
  4736  0587  01BB               	clrf	vHandle20sTimeron@ucLessThanP8sCnt^(0+128)
  4737  0588                     l4933:	
  4738                           
  4739                           ;main.c: 2351: }
  4740                           ;main.c: 2353: if( ucLessThanP8sCnt >= 8)
  4741  0588  3008               	movlw	8
  4742  0589  023B               	subwf	vHandle20sTimeron@ucLessThanP8sCnt^(0+128),w
  4743  058A  1C03               	skipc
  4744  058B  2D92               	goto	l4939
  4745                           
  4746                           ;main.c: 2354: {
  4747                           ;main.c: 2355: ucLessThanP8sCnt = 0;
  4748  058C  01BB               	clrf	vHandle20sTimeron@ucLessThanP8sCnt^(0+128)
  4749                           
  4750                           ;main.c: 2356: ucMoreThanP8sCnt = 0;
  4751  058D  01BD               	clrf	vHandle20sTimeron@ucMoreThanP8sCnt^(0+128)
  4752                           
  4753                           ;main.c: 2358: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  4754  058E  1283               	bcf	3,5	;RP0=0, select bank0
  4755  058F  01D0               	clrf	_enumMainLoopStep
  4756  0590  0AD0               	incf	_enumMainLoopStep,f
  4757  0591  2D9B               	goto	L15
  4758  0592                     l4939:	
  4759                           ;main.c: 2362: ;
  4760                           ;main.c: 2363: }
  4761                           
  4762                           ;main.c: 2361: ucCompareStep = COMPARE_STEP0;
  4763                           
  4764                           ;main.c: 2359: ucADC4_Step = ADC4_STEP_INIT;
  4765                           
  4766                           
  4767                           ;main.c: 2364: else if( ucMoreThanP8sCnt >= 8 )
  4768  0592  3008               	movlw	8
  4769  0593  023D               	subwf	vHandle20sTimeron@ucMoreThanP8sCnt^(0+128),w
  4770  0594  1C03               	skipc
  4771  0595  2E1A               	goto	l5019
  4772  0596  3003               	movlw	3
  4773                           
  4774                           ;main.c: 2365: {
  4775                           ;main.c: 2366: ucLessThanP8sCnt = 0;
  4776  0597  01BB               	clrf	vHandle20sTimeron@ucLessThanP8sCnt^(0+128)
  4777                           
  4778                           ;main.c: 2367: ucMoreThanP8sCnt = 0;
  4779  0598  01BD               	clrf	vHandle20sTimeron@ucMoreThanP8sCnt^(0+128)
  4780                           
  4781                           ;main.c: 2369: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  4782  0599  1283               	bcf	3,5	;RP0=0, select bank0
  4783  059A  00D0               	movwf	_enumMainLoopStep
  4784  059B                     L15:	
  4785                           
  4786                           ;main.c: 2370: ucADC4_Step = ADC4_STEP_INIT;
  4787  059B  01D3               	clrf	_ucADC4_Step
  4788  059C                     l4947:	
  4789                           
  4790                           ;main.c: 2372: ucCompareStep = COMPARE_STEP0;
  4791  059C  1683               	bsf	3,5	;RP0=1, select bank1
  4792  059D  01B9               	clrf	vHandle20sTimeron@ucCompareStep^(0+128)
  4793                           
  4794                           ;main.c: 2373: ;
  4795                           ;main.c: 2374: }
  4796  059E  2E1A               	goto	l5019
  4797  059F                     l4949:	
  4798                           
  4799                           ;main.c: 2397: {
  4800                           ;main.c: 2401: vPause20sTimer(1);
  4801  059F  3001               	movlw	1
  4802  05A0  2650  118A         	fcall	_vPause20sTimer
  4803  05A2  3000               	movlw	0
  4804                           
  4805                           ;main.c: 2402: ucTimeCntP2s = 0;
  4806  05A3  01BE               	clrf	vHandle20sTimeron@ucTimeCntP2s^(0+128)
  4807                           
  4808                           ;main.c: 2403: setPA3(0);
  4809  05A4  262D  118A         	fcall	_setPA3
  4810                           
  4811                           ;main.c: 2404: setPB6(1);
  4812  05A6  3001               	movlw	1
  4813  05A7  263F  118A         	fcall	_setPB6
  4814                           
  4815                           ;main.c: 2405: waitLoopStep = WAITING_LOOP_STEP2;
  4816  05A9  1683               	bsf	3,5	;RP0=1, select bank1
  4817  05AA  01C3               	clrf	vHandle20sTimeron@waitLoopStep^(0+128)
  4818  05AB  0AC3               	incf	vHandle20sTimeron@waitLoopStep^(0+128),f
  4819                           
  4820                           ;main.c: 2406: break;
  4821  05AC  2E1A               	goto	l5019
  4822  05AD                     l4959:	
  4823                           
  4824                           ;main.c: 2410: {
  4825                           ;main.c: 2414: if((getAdOriginalCh2Value() > 2300))
  4826  05AD  2624  118A         	fcall	_getAdOriginalCh2Value
  4827  05AF  3008               	movlw	8
  4828  05B0  0247               	subwf	?_getAdOriginalCh2Value+1,w
  4829  05B1  30FD               	movlw	253
  4830  05B2  1903               	skipnz
  4831  05B3  0246               	subwf	?_getAdOriginalCh2Value,w
  4832  05B4  1C03               	skipc
  4833  05B5  2DB9               	goto	l4963
  4834                           
  4835                           ;main.c: 2415: {
  4836                           ;main.c: 2416: ucTimeCntP2s++;
  4837  05B6  1683               	bsf	3,5	;RP0=1, select bank1
  4838  05B7  0ABE               	incf	vHandle20sTimeron@ucTimeCntP2s^(0+128),f
  4839                           
  4840                           ;main.c: 2417: }
  4841  05B8  2DBB               	goto	l4965
  4842  05B9                     l4963:	
  4843                           
  4844                           ;main.c: 2418: else
  4845                           ;main.c: 2419: ucTimeCntP2s = 0;
  4846  05B9  1683               	bsf	3,5	;RP0=1, select bank1
  4847  05BA  01BE               	clrf	vHandle20sTimeron@ucTimeCntP2s^(0+128)
  4848  05BB                     l4965:	
  4849                           
  4850                           ;main.c: 2421: if( ucTimeCntP2s >= 2)
  4851  05BB  3002               	movlw	2
  4852  05BC  023E               	subwf	vHandle20sTimeron@ucTimeCntP2s^(0+128),w
  4853  05BD  1C03               	skipc
  4854  05BE  2E1A               	goto	l5019
  4855  05BF  3002               	movlw	2
  4856                           
  4857                           ;main.c: 2422: {
  4858                           ;main.c: 2423: ucTimeCntP2s = 0;
  4859  05C0  01BE               	clrf	vHandle20sTimeron@ucTimeCntP2s^(0+128)
  4860                           
  4861                           ;main.c: 2424: waitLoopStep = WAITING_LOOP_STEP3;
  4862  05C1  2DD1               	goto	L14
  4863  05C2                     l4971:	
  4864                           
  4865                           ;main.c: 2430: {
  4866                           ;main.c: 2434: setPA3(1);
  4867  05C2  3001               	movlw	1
  4868  05C3  262D  118A         	fcall	_setPA3
  4869                           
  4870                           ;main.c: 2436: setPB6AsInput();
  4871  05C5  264D  118A         	fcall	_setPB6AsInput
  4872                           
  4873                           ;main.c: 2437: waitLoopStep = WAITING_LOOP_STEP4;
  4874  05C7  3003               	movlw	3
  4875  05C8  2DD1               	goto	L14
  4876  05C9                     l4975:	
  4877                           ;main.c: 2438: break;
  4878                           
  4879                           
  4880                           ;main.c: 2442: {
  4881                           ;main.c: 2446: static unsigned char ucTimerCntP5s = 0;
  4882                           ;main.c: 2447: if( ucTimerCntP5s < 5)
  4883  05C9  3005               	movlw	5
  4884  05CA  0242               	subwf	vHandle20sTimeron@ucTimerCntP5s^(0+128),w
  4885  05CB  1803               	skipnc
  4886  05CC  2DCF               	goto	l4979
  4887                           
  4888                           ;main.c: 2448: ucTimerCntP5s++;
  4889  05CD  0AC2               	incf	vHandle20sTimeron@ucTimerCntP5s^(0+128),f
  4890  05CE  2E1A               	goto	l5019
  4891  05CF                     l4979:	
  4892  05CF  3004               	movlw	4
  4893                           
  4894                           ;main.c: 2449: else
  4895                           ;main.c: 2450: {
  4896                           ;main.c: 2451: ucTimerCntP5s = 0;
  4897  05D0  01C2               	clrf	vHandle20sTimeron@ucTimerCntP5s^(0+128)
  4898  05D1                     L14:	
  4899                           ;main.c: 2452: waitLoopStep = WAITING_LOOP_STEP5;
  4900                           
  4901  05D1  00C3               	movwf	vHandle20sTimeron@waitLoopStep^(0+128)
  4902  05D2  2E1A               	goto	l5019
  4903  05D3                     l4983:	
  4904                           
  4905                           ;main.c: 2459: {
  4906                           ;main.c: 2463: static unsigned char ucMoreThanP3sCnt = 0;
  4907                           ;main.c: 2465: static unsigned char ucLessThanP3sCnt = 0;
  4908                           ;main.c: 2466: if((getAdOriginalCh6Value() < 81))
  4909  05D3  2636  118A         	fcall	_getAdOriginalCh6Value
  4910  05D5  3000               	movlw	0
  4911  05D6  0247               	subwf	?_getAdOriginalCh6Value+1,w
  4912  05D7  3051               	movlw	81
  4913  05D8  1903               	skipnz
  4914  05D9  0246               	subwf	?_getAdOriginalCh6Value,w
  4915  05DA  1803               	skipnc
  4916  05DB  2DE0               	goto	l4989
  4917                           
  4918                           ;main.c: 2467: {
  4919                           ;main.c: 2468: ucLessThanP3sCnt++;
  4920  05DC  1683               	bsf	3,5	;RP0=1, select bank1
  4921  05DD  0ABA               	incf	vHandle20sTimeron@ucLessThanP3sCnt^(0+128),f
  4922                           
  4923                           ;main.c: 2469: ucMoreThanP3sCnt = 0;
  4924  05DE  01BC               	clrf	vHandle20sTimeron@ucMoreThanP3sCnt^(0+128)
  4925                           
  4926                           ;main.c: 2470: }
  4927  05DF  2DE3               	goto	l4993
  4928  05E0                     l4989:	
  4929                           
  4930                           ;main.c: 2471: else
  4931                           ;main.c: 2472: {
  4932                           ;main.c: 2473: ucMoreThanP3sCnt++;
  4933  05E0  1683               	bsf	3,5	;RP0=1, select bank1
  4934  05E1  0ABC               	incf	vHandle20sTimeron@ucMoreThanP3sCnt^(0+128),f
  4935                           
  4936                           ;main.c: 2474: ucLessThanP3sCnt = 0;
  4937  05E2  01BA               	clrf	vHandle20sTimeron@ucLessThanP3sCnt^(0+128)
  4938  05E3                     l4993:	
  4939                           
  4940                           ;main.c: 2475: }
  4941                           ;main.c: 2477: if( ucLessThanP3sCnt >= 3)
  4942  05E3  3003               	movlw	3
  4943  05E4  023A               	subwf	vHandle20sTimeron@ucLessThanP3sCnt^(0+128),w
  4944  05E5  1C03               	skipc
  4945  05E6  2DF0               	goto	l4999
  4946                           
  4947                           ;main.c: 2478: {
  4948                           ;main.c: 2479: ucLessThanP3sCnt = 0;
  4949  05E7  01BA               	clrf	vHandle20sTimeron@ucLessThanP3sCnt^(0+128)
  4950                           
  4951                           ;main.c: 2480: ucMoreThanP3sCnt = 0;
  4952  05E8  01BC               	clrf	vHandle20sTimeron@ucMoreThanP3sCnt^(0+128)
  4953                           
  4954                           ;main.c: 2482: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  4955  05E9  1283               	bcf	3,5	;RP0=0, select bank0
  4956  05EA  01D0               	clrf	_enumMainLoopStep
  4957  05EB  0AD0               	incf	_enumMainLoopStep,f
  4958                           
  4959                           ;main.c: 2483: ucADC4_Step = ADC4_STEP_INIT;
  4960  05EC  01D3               	clrf	_ucADC4_Step
  4961                           
  4962                           ;main.c: 2485: waitLoopStep = WAITING_LOOP_STEP1;
  4963  05ED  1683               	bsf	3,5	;RP0=1, select bank1
  4964  05EE  01C3               	clrf	vHandle20sTimeron@waitLoopStep^(0+128)
  4965                           
  4966                           ;main.c: 2487: ucCompareStep = COMPARE_STEP0;
  4967  05EF  01B9               	clrf	vHandle20sTimeron@ucCompareStep^(0+128)
  4968  05F0                     l4999:	
  4969                           
  4970                           ;main.c: 2488: }
  4971                           ;main.c: 2490: if(ucMoreThanP3sCnt >= 3)
  4972  05F0  3003               	movlw	3
  4973  05F1  023C               	subwf	vHandle20sTimeron@ucMoreThanP3sCnt^(0+128),w
  4974  05F2  1C03               	skipc
  4975  05F3  2E1A               	goto	l5019
  4976  05F4  3003               	movlw	3
  4977                           
  4978                           ;main.c: 2491: {
  4979                           ;main.c: 2492: ucLessThanP3sCnt = 0;
  4980  05F5  01BA               	clrf	vHandle20sTimeron@ucLessThanP3sCnt^(0+128)
  4981                           
  4982                           ;main.c: 2493: ucMoreThanP3sCnt = 0;
  4983  05F6  01BC               	clrf	vHandle20sTimeron@ucMoreThanP3sCnt^(0+128)
  4984                           
  4985                           ;main.c: 2495: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  4986  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  4987  05F8  00D0               	movwf	_enumMainLoopStep
  4988                           
  4989                           ;main.c: 2496: ucADC4_Step = ADC4_STEP_INIT;
  4990  05F9  01D3               	clrf	_ucADC4_Step
  4991                           
  4992                           ;main.c: 2498: waitLoopStep = WAITING_LOOP_STEP1;
  4993  05FA  1683               	bsf	3,5	;RP0=1, select bank1
  4994  05FB  01C3               	clrf	vHandle20sTimeron@waitLoopStep^(0+128)
  4995  05FC  2D9C               	goto	l4947
  4996  05FD                     l5013:	
  4997  05FD  0843               	movf	vHandle20sTimeron@waitLoopStep^(0+128),w
  4998                           
  4999                           ; Switch size 1, requested type "space"
  5000                           ; Number of cases is 5, Range of values is 0 to 4
  5001                           ; switch strategies available:
  5002                           ; Name         Instructions Cycles
  5003                           ; simple_byte           16     9 (average)
  5004                           ; direct_byte           17     7 (fixed)
  5005                           ; jumptable            260     6 (fixed)
  5006                           ; rangetable             9     6 (fixed)
  5007                           ; spacedrange           16     9 (fixed)
  5008                           ; locatedrange           5     3 (fixed)
  5009                           ;	Chosen strategy is simple_byte
  5010  05FE  3A00               	xorlw	0	; case 0
  5011  05FF  1903               	skipnz
  5012  0600  2D9F               	goto	l4949
  5013  0601  3A01               	xorlw	1	; case 1
  5014  0602  1903               	skipnz
  5015  0603  2DAD               	goto	l4959
  5016  0604  3A03               	xorlw	3	; case 2
  5017  0605  1903               	skipnz
  5018  0606  2DC2               	goto	l4971
  5019  0607  3A01               	xorlw	1	; case 3
  5020  0608  1903               	skipnz
  5021  0609  2DC9               	goto	l4975
  5022  060A  3A07               	xorlw	7	; case 4
  5023  060B  1903               	skipnz
  5024  060C  2DD3               	goto	l4983
  5025  060D  2E1A               	goto	l5019
  5026  060E                     l5017:	
  5027  060E  1683               	bsf	3,5	;RP0=1, select bank1
  5028  060F  0839               	movf	vHandle20sTimeron@ucCompareStep^(0+128),w
  5029                           
  5030                           ; Switch size 1, requested type "space"
  5031                           ; Number of cases is 3, Range of values is 0 to 2
  5032                           ; switch strategies available:
  5033                           ; Name         Instructions Cycles
  5034                           ; simple_byte           10     6 (average)
  5035                           ; direct_byte           13     7 (fixed)
  5036                           ; jumptable            260     6 (fixed)
  5037                           ; rangetable             7     6 (fixed)
  5038                           ; spacedrange           12     9 (fixed)
  5039                           ; locatedrange           3     3 (fixed)
  5040                           ;	Chosen strategy is simple_byte
  5041  0610  3A00               	xorlw	0	; case 0
  5042  0611  1903               	skipnz
  5043  0612  2D42               	goto	l4883
  5044  0613  3A01               	xorlw	1	; case 1
  5045  0614  1903               	skipnz
  5046  0615  2D61               	goto	l4905
  5047  0616  3A03               	xorlw	3	; case 2
  5048  0617  1903               	skipnz
  5049  0618  2DFD               	goto	l5013
  5050  0619  2E1A               	goto	l5019
  5051  061A                     l5019:	
  5052                           
  5053                           ;main.c: 2515: if(ADC4_STEP_INIT == ucADC4_Step)
  5054  061A  1283               	bcf	3,5	;RP0=0, select bank0
  5055  061B  08D3               	movf	_ucADC4_Step,f
  5056  061C  1D03               	skipz
  5057  061D  0008               	return
  5058                           
  5059                           ;main.c: 2516: {
  5060                           ;main.c: 2517: ucTimerCntMore = 0;
  5061  061E  1683               	bsf	3,5	;RP0=1, select bank1
  5062  061F  3000               	movlw	0
  5063  0620  01C0               	clrf	vHandle20sTimeron@ucTimerCntMore^(0+128)
  5064                           
  5065                           ;main.c: 2518: ucTimerCntLess = 0;
  5066  0621  01BF               	clrf	vHandle20sTimeron@ucTimerCntLess^(0+128)
  5067                           
  5068                           ;main.c: 2519: ucCompareStep = COMPARE_STEP0;
  5069  0622  01B9               	clrf	vHandle20sTimeron@ucCompareStep^(0+128)
  5070                           
  5071                           ;main.c: 2521: vPause20sTimer(0);
  5072  0623  2E50               	ljmp	_vPause20sTimer
  5073  0624                     __end_of_vHandle20sTimeron:	
  5074  0624                     __ptext1046:	
  5075 ;; =============== function _AD_Sample ends ============
  5076                           
  5077                           
  5078 ;; *************** function _getAdOriginalCh2Value *****************
  5079 ;; Defined at:
  5080 ;;		line 291 in file "C:\temp\dev\AK7030-OTP\common.c"
  5081 ;; Parameters:    Size  Location     Type
  5082 ;;		None
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;		None
  5085 ;; Return value:  Size  Location     Type
  5086 ;;                  2   38[BANK0 ] unsigned int 
  5087 ;; Registers used:
  5088 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5089 ;; Tracked objects:
  5090 ;;		On entry : 140/20
  5091 ;;		On exit  : 160/0
  5092 ;;		Unchanged: FFE00/0
  5093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5094 ;;      Params:         0       2       0       0       0
  5095 ;;      Locals:         0       0       0       0       0
  5096 ;;      Temps:          0       0       0       0       0
  5097 ;;      Totals:         0       2       0       0       0
  5098 ;;Total ram usage:        2 bytes
  5099 ;; Hardware stack levels used:    1
  5100 ;; Hardware stack levels required when called:    3
  5101 ;; This function calls:
  5102 ;;		_Filter
  5103 ;; This function is called by:
  5104 ;;		_vHandle20sTimeron
  5105 ;; This function uses a non-reentrant model
  5106 ;;
  5107  0624                     _getAdOriginalCh2Value:	
  5108                           
  5109                           ;common.c: 293: return Filter(uiSampleChannelSecond);
  5110                           
  5111                           ; Regs used in _getAdOriginalCh2Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  5112  0624  30A8               	movlw	_uiSampleChannelSecond& (0+255)
  5113  0625  270F  118A         	fcall	PL8	;call to abstracted procedure
  5114  0627  2655               	fcall	_Filter
  5115  0628  0821               	movf	?_Filter+1,w
  5116  0629  00C7               	movwf	?_getAdOriginalCh2Value+1
  5117  062A  0820               	movf	?_Filter,w
  5118  062B  00C6               	movwf	?_getAdOriginalCh2Value
  5119  062C  0008               	return
  5120  062D                     __end_of_getAdOriginalCh2Value:	
  5121  062D                     __ptext1077:	
  5122 ;; =============== function _setPB6 ends ============
  5123                           
  5124                           
  5125 ;; *************** function _setPA3 *****************
  5126 ;; Defined at:
  5127 ;;		line 270 in file "C:\temp\dev\AK7030-OTP\main.c"
  5128 ;; Parameters:    Size  Location     Type
  5129 ;;  bValue          1    wreg     unsigned char 
  5130 ;; Auto vars:     Size  Location     Type
  5131 ;;  bValue          1    0[BANK0 ] unsigned char 
  5132 ;; Return value:  Size  Location     Type
  5133 ;;		None               void
  5134 ;; Registers used:
  5135 ;;		wreg
  5136 ;; Tracked objects:
  5137 ;;		On entry : 40/0
  5138 ;;		On exit  : 60/0
  5139 ;;		Unchanged: FFF9F/0
  5140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5141 ;;      Params:         0       0       0       0       0
  5142 ;;      Locals:         0       1       0       0       0
  5143 ;;      Temps:          0       0       0       0       0
  5144 ;;      Totals:         0       1       0       0       0
  5145 ;;Total ram usage:        1 bytes
  5146 ;; Hardware stack levels used:    1
  5147 ;; Hardware stack levels required when called:    2
  5148 ;; This function calls:
  5149 ;;		Nothing
  5150 ;; This function is called by:
  5151 ;;		_clearParaFunction1
  5152 ;;		_main
  5153 ;;		_vHandle20sTimeron
  5154 ;;		_vHandle20sTimerOut
  5155 ;; This function uses a non-reentrant model
  5156 ;;
  5157  062D                     _setPA3:	
  5158                           
  5159                           ; Regs used in _setPA3: [wreg]
  5160                           ;setPA3@bValue stored from wreg
  5161  062D  1283               	bcf	3,5	;RP0=0, select bank0
  5162  062E  00A0               	movwf	setPA3@bValue
  5163                           
  5164                           ;main.c: 271: if( bValue )
  5165  062F  0820               	movf	setPA3@bValue,w
  5166  0630  1903               	btfsc	3,2
  5167  0631  2E34               	goto	l736
  5168                           
  5169                           ;main.c: 273: PA3 = 1;
  5170  0632  1585               	bsf	5,3
  5171  0633  0008               	return
  5172  0634                     l736:	
  5173                           
  5174                           ;main.c: 277: else
  5175                           ;main.c: 279: PA3 = 0;
  5176  0634  1185               	bcf	5,3
  5177  0635  0008               	return
  5178  0636                     __end_of_setPA3:	
  5179  0636                     __ptext1049:	
  5180 ;; =============== function _getAdOriginalCh5Value ends ============
  5181                           
  5182                           
  5183 ;; *************** function _getAdOriginalCh6Value *****************
  5184 ;; Defined at:
  5185 ;;		line 282 in file "C:\temp\dev\AK7030-OTP\common.c"
  5186 ;; Parameters:    Size  Location     Type
  5187 ;;		None
  5188 ;; Auto vars:     Size  Location     Type
  5189 ;;		None
  5190 ;; Return value:  Size  Location     Type
  5191 ;;                  2   38[BANK0 ] unsigned int 
  5192 ;; Registers used:
  5193 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5194 ;; Tracked objects:
  5195 ;;		On entry : 40/0
  5196 ;;		On exit  : 160/0
  5197 ;;		Unchanged: FFE00/0
  5198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5199 ;;      Params:         0       2       0       0       0
  5200 ;;      Locals:         0       0       0       0       0
  5201 ;;      Temps:          0       0       0       0       0
  5202 ;;      Totals:         0       2       0       0       0
  5203 ;;Total ram usage:        2 bytes
  5204 ;; Hardware stack levels used:    1
  5205 ;; Hardware stack levels required when called:    3
  5206 ;; This function calls:
  5207 ;;		_Filter
  5208 ;; This function is called by:
  5209 ;;		_main
  5210 ;;		_vHandle20sTimeron
  5211 ;; This function uses a non-reentrant model
  5212 ;;
  5213  0636                     _getAdOriginalCh6Value:	
  5214                           
  5215                           ;common.c: 284: return Filter(uiSampleChannelSixth);
  5216                           
  5217                           ; Regs used in _getAdOriginalCh6Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  5218  0636  30C0               	movlw	_uiSampleChannelSixth& (0+255)
  5219  0637  270F  118A         	fcall	PL8	;call to abstracted procedure
  5220  0639  2655               	fcall	_Filter
  5221  063A  0821               	movf	?_Filter+1,w
  5222  063B  00C7               	movwf	?_getAdOriginalCh6Value+1
  5223  063C  0820               	movf	?_Filter,w
  5224  063D  00C6               	movwf	?_getAdOriginalCh6Value
  5225  063E  0008               	return
  5226  063F                     __end_of_getAdOriginalCh6Value:	
  5227  063F                     __ptext1076:	
  5228 ;; =============== function _setPB4 ends ============
  5229                           
  5230                           
  5231 ;; *************** function _setPB6 *****************
  5232 ;; Defined at:
  5233 ;;		line 287 in file "C:\temp\dev\AK7030-OTP\main.c"
  5234 ;; Parameters:    Size  Location     Type
  5235 ;;  bValue          1    wreg     unsigned char 
  5236 ;; Auto vars:     Size  Location     Type
  5237 ;;  bValue          1    0[BANK0 ] unsigned char 
  5238 ;; Return value:  Size  Location     Type
  5239 ;;		None               void
  5240 ;; Registers used:
  5241 ;;		wreg
  5242 ;; Tracked objects:
  5243 ;;		On entry : 60/0
  5244 ;;		On exit  : 60/0
  5245 ;;		Unchanged: FFF9F/0
  5246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5247 ;;      Params:         0       0       0       0       0
  5248 ;;      Locals:         0       1       0       0       0
  5249 ;;      Temps:          0       0       0       0       0
  5250 ;;      Totals:         0       1       0       0       0
  5251 ;;Total ram usage:        1 bytes
  5252 ;; Hardware stack levels used:    1
  5253 ;; Hardware stack levels required when called:    2
  5254 ;; This function calls:
  5255 ;;		Nothing
  5256 ;; This function is called by:
  5257 ;;		_main
  5258 ;;		_vHandle20sTimeron
  5259 ;;		_vHandle20sTimerOut
  5260 ;; This function uses a non-reentrant model
  5261 ;;
  5262  063F                     _setPB6:	
  5263                           
  5264                           ; Regs used in _setPB6: [wreg]
  5265                           ;setPB6@bValue stored from wreg
  5266  063F  00A0               	movwf	setPB6@bValue
  5267                           
  5268                           ;main.c: 288: if( bValue )
  5269  0640  0820               	movf	setPB6@bValue,w
  5270  0641  1903               	btfsc	3,2
  5271  0642  2E48               	goto	l741
  5272                           
  5273                           ;main.c: 290: {
  5274                           ;main.c: 291: TRISB6 = 0;
  5275  0643  1683               	bsf	3,5	;RP0=1, select bank1
  5276  0644  1306               	bcf	6,6
  5277                           
  5278                           ;main.c: 292: PB6 = 1;
  5279  0645  1283               	bcf	3,5	;RP0=0, select bank0
  5280  0646  1706               	bsf	6,6
  5281                           
  5282                           ;main.c: 293: }
  5283  0647  0008               	return
  5284  0648                     l741:	
  5285                           
  5286                           ;main.c: 297: else
  5287                           ;main.c: 299: {
  5288                           ;main.c: 300: TRISB6 = 0;
  5289  0648  1683               	bsf	3,5	;RP0=1, select bank1
  5290  0649  1306               	bcf	6,6
  5291                           
  5292                           ;main.c: 301: PB6 = 0;
  5293  064A  1283               	bcf	3,5	;RP0=0, select bank0
  5294  064B  1306               	bcf	6,6
  5295  064C  0008               	return
  5296  064D                     __end_of_setPB6:	
  5297  064D                     __ptext1073:	
  5298 ;; =============== function _clock_config ends ============
  5299                           
  5300                           
  5301 ;; *************** function _setPB6AsInput *****************
  5302 ;; Defined at:
  5303 ;;		line 373 in file "C:\temp\dev\AK7030-OTP\main.c"
  5304 ;; Parameters:    Size  Location     Type
  5305 ;;		None
  5306 ;; Auto vars:     Size  Location     Type
  5307 ;;		None
  5308 ;; Return value:  Size  Location     Type
  5309 ;;		None               void
  5310 ;; Registers used:
  5311 ;;		None
  5312 ;; Tracked objects:
  5313 ;;		On entry : 160/0
  5314 ;;		On exit  : 160/20
  5315 ;;		Unchanged: FFE9F/0
  5316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5317 ;;      Params:         0       0       0       0       0
  5318 ;;      Locals:         0       0       0       0       0
  5319 ;;      Temps:          0       0       0       0       0
  5320 ;;      Totals:         0       0       0       0       0
  5321 ;;Total ram usage:        0 bytes
  5322 ;; Hardware stack levels used:    1
  5323 ;; Hardware stack levels required when called:    2
  5324 ;; This function calls:
  5325 ;;		Nothing
  5326 ;; This function is called by:
  5327 ;;		_vHandle20sTimeron
  5328 ;;		_vHandle20sTimerOut
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331  064D                     _setPB6AsInput:	
  5332                           
  5333                           ;main.c: 375: TRISB6 = 1;
  5334                           
  5335                           ; Regs used in _setPB6AsInput: []
  5336  064D  1683               	bsf	3,5	;RP0=1, select bank1
  5337  064E  1706               	bsf	6,6
  5338  064F  0008               	return
  5339  0650                     __end_of_setPB6AsInput:	
  5340  0650                     __ptext1055:	
  5341 ;; =============== function _Filter ends ============
  5342                           
  5343                           
  5344 ;; *************** function _vPause20sTimer *****************
  5345 ;; Defined at:
  5346 ;;		line 59 in file "C:\temp\dev\AK7030-OTP\common.c"
  5347 ;; Parameters:    Size  Location     Type
  5348 ;;  bValue          1    wreg     unsigned char 
  5349 ;; Auto vars:     Size  Location     Type
  5350 ;;  bValue          1    0[BANK0 ] unsigned char 
  5351 ;; Return value:  Size  Location     Type
  5352 ;;		None               void
  5353 ;; Registers used:
  5354 ;;		wreg
  5355 ;; Tracked objects:
  5356 ;;		On entry : 140/20
  5357 ;;		On exit  : 160/20
  5358 ;;		Unchanged: FFE9F/0
  5359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5360 ;;      Params:         0       0       0       0       0
  5361 ;;      Locals:         0       1       0       0       0
  5362 ;;      Temps:          0       0       0       0       0
  5363 ;;      Totals:         0       1       0       0       0
  5364 ;;Total ram usage:        1 bytes
  5365 ;; Hardware stack levels used:    1
  5366 ;; Hardware stack levels required when called:    2
  5367 ;; This function calls:
  5368 ;;		Nothing
  5369 ;; This function is called by:
  5370 ;;		_vHandle20sTimeron
  5371 ;; This function uses a non-reentrant model
  5372 ;;
  5373  0650                     _vPause20sTimer:	
  5374                           
  5375                           ; Regs used in _vPause20sTimer: [wreg]
  5376                           ;vPause20sTimer@bValue stored from wreg
  5377  0650  1283               	bcf	3,5	;RP0=0, select bank0
  5378  0651  00A0               	movwf	vPause20sTimer@bValue
  5379                           
  5380                           ;common.c: 60: bPause20secTimer = bValue;
  5381  0652  1683               	bsf	3,5	;RP0=1, select bank1
  5382  0653  00AE               	movwf	_bPause20secTimer^(0+128)
  5383  0654  0008               	return
  5384  0655                     __end_of_vPause20sTimer:	
  5385  0655                     __ptext1054:	
  5386 ;; =============== function _getAD_ConvertFlag ends ============
  5387                           
  5388                           
  5389 ;; *************** function _Filter *****************
  5390 ;; Defined at:
  5391 ;;		line 67 in file "C:\temp\dev\AK7030-OTP\common.c"
  5392 ;; Parameters:    Size  Location     Type
  5393 ;;  tmpValue        2    0[BANK0 ] PTR int 
  5394 ;;		 -> uiSampleChannelSixth(24), uiSampleChannelFifth(24), uiSampleChannelSecond(24), uiSampleChannelZero(24), 
  5395 ;; Auto vars:     Size  Location     Type
  5396 ;;  cir             2   34[BANK0 ] int 
  5397 ;;  filter_buf     24    6[BANK0 ] unsigned int [12]
  5398 ;;  filter_sum      2   32[BANK0 ] unsigned int 
  5399 ;;  filter_temp     2   30[BANK0 ] unsigned int 
  5400 ;;  i               1   37[BANK0 ] unsigned char 
  5401 ;;  j               1   36[BANK0 ] unsigned char 
  5402 ;; Return value:  Size  Location     Type
  5403 ;;                  2    0[BANK0 ] unsigned int 
  5404 ;; Registers used:
  5405 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5406 ;; Tracked objects:
  5407 ;;		On entry : 60/0
  5408 ;;		On exit  : 160/0
  5409 ;;		Unchanged: FFE00/0
  5410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5411 ;;      Params:         0       2       0       0       0
  5412 ;;      Locals:         0      32       0       0       0
  5413 ;;      Temps:          0       4       0       0       0
  5414 ;;      Totals:         0      38       0       0       0
  5415 ;;Total ram usage:       38 bytes
  5416 ;; Hardware stack levels used:    1
  5417 ;; Hardware stack levels required when called:    2
  5418 ;; This function calls:
  5419 ;;		Nothing
  5420 ;; This function is called by:
  5421 ;;		_getAdOriginalCh0Value
  5422 ;;		_getAdOriginalCh5Value
  5423 ;;		_getAdOriginalCh6Value
  5424 ;;		_getAdOriginalCh2Value
  5425 ;; This function uses a non-reentrant model
  5426 ;;
  5427  0655                     _Filter:	
  5428                           
  5429                           ; Regs used in _Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  5430  0655  01C4               	clrf	Filter@j
  5431                           
  5432                           ;common.c: 71: unsigned int filter_temp = 0, filter_sum = 0;
  5433  0656  01BE               	clrf	Filter@filter_temp
  5434  0657  01BF               	clrf	Filter@filter_temp+1
  5435  0658  01C0               	clrf	Filter@filter_sum
  5436  0659  01C1               	clrf	Filter@filter_sum+1
  5437                           
  5438                           ;common.c: 73: unsigned int filter_buf[12];
  5439                           ;common.c: 75: for(int cir = 0;cir < 12; cir++)
  5440  065A  01C2               	clrf	Filter@cir
  5441  065B  01C3               	clrf	Filter@cir+1
  5442  065C                     l4623:	
  5443                           
  5444                           ;common.c: 76: filter_buf[cir] = *tmpValue++;
  5445  065C  1283               	bcf	3,5	;RP0=0, select bank0
  5446  065D  1303               	bcf	3,6	;RP1=0, select bank0
  5447  065E  0820               	movf	Filter@tmpValue,w
  5448  065F  0084               	movwf	4
  5449  0660  1783               	bsf	3,7
  5450  0661  1C21               	btfss	Filter@tmpValue+1,0
  5451  0662  1383               	bcf	3,7
  5452  0663  0800               	movf	0,w
  5453  0664  2709  118A         	fcall	PL7	;call to abstracted procedure
  5454  0666  0D42               	rlf	Filter@cir,w
  5455  0667  3E26               	addlw	Filter@filter_buf& (0+255)
  5456  0668  0084               	movwf	4
  5457  0669  0822               	movf	??_Filter,w
  5458  066A  1383               	bcf	3,7	;select IRP bank0
  5459  066B  0080               	movwf	0
  5460  066C  0A84               	incf	4,f
  5461  066D  0823               	movf	??_Filter+1,w
  5462  066E  0080               	movwf	0
  5463  066F  3002               	movlw	2
  5464  0670  07A0               	addwf	Filter@tmpValue,f
  5465  0671  1803               	skipnc
  5466  0672  0AA1               	incf	Filter@tmpValue+1,f
  5467  0673  0AC2               	incf	Filter@cir,f
  5468  0674  1903               	skipnz
  5469  0675  0AC3               	incf	Filter@cir+1,f
  5470  0676  0843               	movf	Filter@cir+1,w
  5471  0677  3A80               	xorlw	128
  5472  0678  00FF               	movwf	127
  5473  0679  3080               	movlw	128
  5474  067A  027F               	subwf	127,w
  5475  067B  1D03               	skipz
  5476  067C  2E7F               	goto	u1745
  5477  067D  300C               	movlw	12
  5478  067E  0242               	subwf	Filter@cir,w
  5479  067F                     u1745:	
  5480  067F  1C03               	skipc
  5481  0680  2E5C               	goto	l4623
  5482                           
  5483                           ;common.c: 79: for(j = 0; j < 12 - 1; j++)
  5484  0681  1283               	bcf	3,5	;RP0=0, select bank0
  5485  0682  1303               	bcf	3,6	;RP1=0, select bank0
  5486  0683  01C4               	clrf	Filter@j
  5487  0684                     l4637:	
  5488                           
  5489                           ;common.c: 80: {
  5490                           ;common.c: 81: for(i = 0; i < 12 - 1 - j; i++)
  5491  0684  01C5               	clrf	Filter@i
  5492  0685                     l4645:	
  5493  0685  01A3               	clrf	??_Filter+1
  5494  0686  0844               	movf	Filter@j,w
  5495  0687  3C0B               	sublw	11
  5496  0688  00A2               	movwf	??_Filter
  5497  0689  1C03               	skipc
  5498  068A  03A3               	decf	??_Filter+1,f
  5499  068B  0823               	movf	??_Filter+1,w
  5500  068C  3A80               	xorlw	128
  5501  068D  3C80               	sublw	128
  5502  068E  1D03               	skipz
  5503  068F  2E92               	goto	u1765
  5504  0690  0822               	movf	??_Filter,w
  5505  0691  0245               	subwf	Filter@i,w
  5506  0692                     u1765:	
  5507  0692  1803               	btfsc	3,0
  5508  0693  2EC7               	goto	l4647
  5509                           
  5510                           ;common.c: 82: {
  5511                           ;common.c: 83: if(filter_buf[i] > filter_buf[i + 1])
  5512  0694  1283               	bcf	3,5	;RP0=0, select bank0
  5513  0695  1303               	bcf	3,6	;RP1=0, select bank0
  5514  0696  1003               	clrc
  5515  0697  26F9  118A         	fcall	PL4	;call to abstracted procedure
  5516  0699  2703  118A         	fcall	PL5	;call to abstracted procedure
  5517  069B  0800               	movf	0,w
  5518  069C  00A4               	movwf	??_Filter+2
  5519  069D  0A84               	incf	4,f
  5520  069E  0800               	movf	0,w
  5521  069F  00A5               	movwf	??_Filter+3
  5522  06A0  0823               	movf	??_Filter+1,w
  5523  06A1  0225               	subwf	??_Filter+3,w
  5524  06A2  1D03               	skipz
  5525  06A3  2EA6               	goto	u1755
  5526  06A4  0822               	movf	??_Filter,w
  5527  06A5  0224               	subwf	??_Filter+2,w
  5528  06A6                     u1755:	
  5529  06A6  1803               	skipnc
  5530  06A7  2EC5               	goto	l4643
  5531                           
  5532                           ;common.c: 84: {
  5533                           ;common.c: 86: filter_temp = filter_buf[i];
  5534  06A8  1003               	clrc
  5535  06A9  0D45               	rlf	Filter@i,w
  5536  06AA  3E26               	addlw	Filter@filter_buf& (0+255)
  5537  06AB  0084               	movwf	4
  5538  06AC  0800               	movf	0,w
  5539  06AD  00BE               	movwf	Filter@filter_temp
  5540  06AE  0A84               	incf	4,f
  5541  06AF  0800               	movf	0,w
  5542  06B0  00BF               	movwf	Filter@filter_temp+1
  5543                           
  5544                           ;common.c: 88: filter_buf[i] = filter_buf[i + 1];
  5545  06B1  2703  118A         	fcall	PL5	;call to abstracted procedure
  5546  06B3  0800               	movf	0,w
  5547  06B4  2709  118A         	fcall	PL7	;call to abstracted procedure
  5548  06B6  0D45               	rlf	Filter@i,w
  5549  06B7  3E26               	addlw	Filter@filter_buf& (0+255)
  5550  06B8  0084               	movwf	4
  5551  06B9  0822               	movf	??_Filter,w
  5552  06BA  0080               	movwf	0
  5553  06BB  0A84               	incf	4,f
  5554  06BC  0823               	movf	??_Filter+1,w
  5555  06BD  0080               	movwf	0
  5556                           
  5557                           ;common.c: 90: filter_buf[i + 1] = filter_temp;
  5558  06BE  2703  118A         	fcall	PL5	;call to abstracted procedure
  5559  06C0  083E               	movf	Filter@filter_temp,w
  5560  06C1  0080               	movwf	0
  5561  06C2  0A84               	incf	4,f
  5562  06C3  083F               	movf	Filter@filter_temp+1,w
  5563  06C4  0080               	movwf	0
  5564  06C5                     l4643:	
  5565  06C5  0AC5               	incf	Filter@i,f
  5566  06C6  2E85               	goto	l4645
  5567  06C7                     l4647:	
  5568  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  5569  06C8  300B               	movlw	11
  5570  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  5571  06CA  0AC4               	incf	Filter@j,f
  5572  06CB  0244               	subwf	Filter@j,w
  5573  06CC  1C03               	skipc
  5574  06CD  2E84               	goto	l4637
  5575                           
  5576                           ;common.c: 91: }
  5577                           ;common.c: 92: }
  5578                           ;common.c: 93: }
  5579                           ;common.c: 95: for(i = 2; i < 12 - 2; i++)
  5580  06CE  3002               	movlw	2
  5581  06CF  00C5               	movwf	Filter@i
  5582                           
  5583                           ;common.c: 96: {
  5584                           ;common.c: 97: filter_sum += filter_buf[i];
  5585  06D0  1003               	clrc
  5586  06D1                     L18:	
  5587  06D1  26F9  118A         	fcall	PL4	;call to abstracted procedure
  5588  06D3  0822               	movf	??_Filter,w
  5589  06D4  07C0               	addwf	Filter@filter_sum,f
  5590  06D5  1803               	skipnc
  5591  06D6  0AC1               	incf	Filter@filter_sum+1,f
  5592  06D7  0823               	movf	??_Filter+1,w
  5593  06D8  07C1               	addwf	Filter@filter_sum+1,f
  5594  06D9  300A               	movlw	10
  5595  06DA  0AC5               	incf	Filter@i,f
  5596  06DB  0245               	subwf	Filter@i,w
  5597  06DC  1C03               	skipc
  5598  06DD  2ED1               	goto	L18
  5599                           
  5600                           ;common.c: 98: }
  5601                           ;common.c: 100: return (filter_sum >> 3);
  5602  06DE  0841               	movf	Filter@filter_sum+1,w
  5603  06DF  00A1               	movwf	?_Filter+1
  5604  06E0  0840               	movf	Filter@filter_sum,w
  5605  06E1  00A0               	movwf	?_Filter
  5606  06E2  1003               	clrc
  5607  06E3  0CA1               	rrf	?_Filter+1,f
  5608  06E4  0CA0               	rrf	?_Filter,f
  5609  06E5  1003               	clrc
  5610  06E6  0CA1               	rrf	?_Filter+1,f
  5611  06E7  0CA0               	rrf	?_Filter,f
  5612  06E8  1003               	clrc
  5613  06E9  0CA1               	rrf	?_Filter+1,f
  5614  06EA  0CA0               	rrf	?_Filter,f
  5615  06EB  0008               	return
  5616  06EC                     __end_of_Filter:	
  5617  06EC                     __ptext1086:	
  5618 ;; =============== function _clearTwentyMinuteTimer ends ============
  5619                           
  5620                           
  5621 ;; *************** function _clearTwentySecondsTimer *****************
  5622 ;; Defined at:
  5623 ;;		line 419 in file "C:\temp\dev\AK7030-OTP\common.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;		None
  5626 ;; Auto vars:     Size  Location     Type
  5627 ;;		None
  5628 ;; Return value:  Size  Location     Type
  5629 ;;		None               void
  5630 ;; Registers used:
  5631 ;;		status,2
  5632 ;; Tracked objects:
  5633 ;;		On entry : 40/20
  5634 ;;		On exit  : 60/20
  5635 ;;		Unchanged: FFF9F/0
  5636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5637 ;;      Params:         0       0       0       0       0
  5638 ;;      Locals:         0       0       0       0       0
  5639 ;;      Temps:          0       0       0       0       0
  5640 ;;      Totals:         0       0       0       0       0
  5641 ;;Total ram usage:        0 bytes
  5642 ;; Hardware stack levels used:    1
  5643 ;; Hardware stack levels required when called:    2
  5644 ;; This function calls:
  5645 ;;		Nothing
  5646 ;; This function is called by:
  5647 ;;		_clearAllTimer
  5648 ;;		_vHandle20sTimerOut
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651  06EC                     _clearTwentySecondsTimer:	
  5652                           
  5653                           ;common.c: 420: uiTwentySecondsTimer = 0;
  5654                           
  5655                           ; Regs used in _clearTwentySecondsTimer: [status,2]
  5656  06EC  1683               	bsf	3,5	;RP0=1, select bank1
  5657  06ED  01A6               	clrf	_uiTwentySecondsTimer^(0+128)
  5658  06EE  01A7               	clrf	(_uiTwentySecondsTimer+1)^(0+128)
  5659                           
  5660                           ;common.c: 421: bTwentySecStartFlag = 0;
  5661  06EF  1283               	bcf	3,5	;RP0=0, select bank0
  5662  06F0  01CF               	clrf	_bTwentySecStartFlag
  5663                           
  5664                           ;common.c: 422: bPause20secTimer = 0;
  5665  06F1  1683               	bsf	3,5	;RP0=1, select bank1
  5666  06F2  01AE               	clrf	_bPause20secTimer^(0+128)
  5667  06F3  0008               	return
  5668  06F4                     __end_of_clearTwentySecondsTimer:	
  5669  06F4                     __ptext1085:	
  5670 ;; =============== function _initPin ends ============
  5671                           
  5672                           
  5673 ;; *************** function _clearTwentyMinuteTimer *****************
  5674 ;; Defined at:
  5675 ;;		line 427 in file "C:\temp\dev\AK7030-OTP\common.c"
  5676 ;; Parameters:    Size  Location     Type
  5677 ;;		None
  5678 ;; Auto vars:     Size  Location     Type
  5679 ;;		None
  5680 ;; Return value:  Size  Location     Type
  5681 ;;		None               void
  5682 ;; Registers used:
  5683 ;;		status,2
  5684 ;; Tracked objects:
  5685 ;;		On entry : 60/20
  5686 ;;		On exit  : 60/0
  5687 ;;		Unchanged: FFF9F/0
  5688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5689 ;;      Params:         0       0       0       0       0
  5690 ;;      Locals:         0       0       0       0       0
  5691 ;;      Temps:          0       0       0       0       0
  5692 ;;      Totals:         0       0       0       0       0
  5693 ;;Total ram usage:        0 bytes
  5694 ;; Hardware stack levels used:    1
  5695 ;; Hardware stack levels required when called:    2
  5696 ;; This function calls:
  5697 ;;		Nothing
  5698 ;; This function is called by:
  5699 ;;		_clearAllTimer
  5700 ;; This function uses a non-reentrant model
  5701 ;;
  5702  06F4                     _clearTwentyMinuteTimer:	
  5703  06F4                     l4431:	
  5704                           ; Regs used in _clearTwentyMinuteTimer: [status,2]
  5705                           
  5706                           
  5707                           ;common.c: 428: uiTwentyMinuteTimer = 0;
  5708  06F4  01A4               	clrf	_uiTwentyMinuteTimer^(0+128)
  5709  06F5  01A5               	clrf	(_uiTwentyMinuteTimer+1)^(0+128)
  5710                           
  5711                           ;common.c: 429: bTwentyMinStartFlag = 0;
  5712  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  5713  06F7  01CE               	clrf	_bTwentyMinStartFlag
  5714  06F8  0008               	return
  5715  06F9                     __end_of_clearTwentyMinuteTimer:	
  5716  06F9                     PL4:	
  5717  06F9  0D45               	rlf	Filter@i,w
  5718  06FA  3E26               	addlw	Filter@filter_buf& (0+255)
  5719  06FB  0084               	movwf	4
  5720  06FC  1383               	bcf	3,7	;select IRP bank0
  5721  06FD  0800               	movf	0,w
  5722  06FE  00A2               	movwf	??_Filter
  5723  06FF  0A84               	incf	4,f
  5724  0700  0800               	movf	0,w
  5725  0701  00A3               	movwf	??_Filter+1
  5726  0702  0008               	return
  5727  0703                     PL5:	
  5728  0703  1003               	clrc
  5729  0704  0D45               	rlf	Filter@i,w
  5730  0705  3E02               	addlw	2
  5731  0706  3E26               	addlw	Filter@filter_buf& (0+255)
  5732  0707  0084               	movwf	4
  5733  0708  0008               	return
  5734  0709                     PL7:	
  5735  0709  00A2               	movwf	??_Filter
  5736  070A  0A84               	incf	4,f
  5737  070B  0800               	movf	0,w
  5738  070C  00A3               	movwf	??_Filter+1
  5739  070D  1003               	clrc
  5740  070E  0008               	return
  5741  070F                     PL8:	
  5742  070F  1283               	bcf	3,5	;RP0=0, select bank0
  5743  0710  00A0               	movwf	?_Filter
  5744  0711  3001               	movlw	1
  5745  0712  00A1               	movwf	?_Filter+1
  5746  0713  0008               	return
  5747                           
  5748                           	psect	text1056
  5749  0F03                     __ptext1056:	
  5750 ;; =============== function _vPause20sTimer ends ============
  5751                           
  5752                           
  5753 ;; *************** function _isFinishedThreeHoursTimer *****************
  5754 ;; Defined at:
  5755 ;;		line 503 in file "C:\temp\dev\AK7030-OTP\common.c"
  5756 ;; Parameters:    Size  Location     Type
  5757 ;;		None
  5758 ;; Auto vars:     Size  Location     Type
  5759 ;;		None
  5760 ;; Return value:  Size  Location     Type
  5761 ;;                  1    wreg      unsigned char 
  5762 ;; Registers used:
  5763 ;;		wreg, status,2, status,0
  5764 ;; Tracked objects:
  5765 ;;		On entry : 40/20
  5766 ;;		On exit  : 40/0
  5767 ;;		Unchanged: FFF9F/0
  5768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5769 ;;      Params:         0       0       0       0       0
  5770 ;;      Locals:         0       0       0       0       0
  5771 ;;      Temps:          0       0       0       0       0
  5772 ;;      Totals:         0       0       0       0       0
  5773 ;;Total ram usage:        0 bytes
  5774 ;; Hardware stack levels used:    1
  5775 ;; Hardware stack levels required when called:    2
  5776 ;; This function calls:
  5777 ;;		Nothing
  5778 ;; This function is called by:
  5779 ;;		_main
  5780 ;; This function uses a non-reentrant model
  5781 ;;
  5782  0F03                     _isFinishedThreeHoursTimer:	
  5783                           
  5784                           ;common.c: 504: if((uiSmallTimer == 0) && bSmallTimerStartFlag)
  5785                           
  5786                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  5787  0F03  1683               	bsf	3,5	;RP0=1, select bank1
  5788  0F04  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  5789  0F05  0422               	iorwf	_uiSmallTimer^(0+128),w
  5790  0F06  1D03               	skipz
  5791  0F07  3400               	retlw	0
  5792  0F08  1283               	bcf	3,5	;RP0=0, select bank0
  5793  0F09  084D               	movf	_bSmallTimerStartFlag,w
  5794  0F0A  1903               	btfsc	3,2
  5795  0F0B  3400               	retlw	0
  5796  0F0C  3001               	movlw	1
  5797                           
  5798                           ;common.c: 505: {
  5799                           ;common.c: 506: bSmallTimerStartFlag = 0;
  5800  0F0D  01CD               	clrf	_bSmallTimerStartFlag
  5801                           
  5802                           ;common.c: 507: return 1;
  5803  0F0E  0008               	return
  5804  0F0F                     __end_of_isFinishedThreeHoursTimer:	
  5805                           ;common.c: 509: else
  5806                           ;common.c: 510: return 0;
  5807                           
  5808                           
  5809                           	psect	text1057
  5810  07A0                     __ptext1057:	
  5811 ;; =============== function _isFinishedThreeHoursTimer ends ============
  5812                           
  5813                           
  5814 ;; *************** function _startThreeHoursTimer *****************
  5815 ;; Defined at:
  5816 ;;		line 434 in file "C:\temp\dev\AK7030-OTP\common.c"
  5817 ;; Parameters:    Size  Location     Type
  5818 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  5819 ;; Auto vars:     Size  Location     Type
  5820 ;;		None
  5821 ;; Return value:  Size  Location     Type
  5822 ;;		None               void
  5823 ;; Registers used:
  5824 ;;		wreg, status,2, status,0
  5825 ;; Tracked objects:
  5826 ;;		On entry : 60/0
  5827 ;;		On exit  : 40/0
  5828 ;;		Unchanged: FFF9F/0
  5829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5830 ;;      Params:         0       2       0       0       0
  5831 ;;      Locals:         0       0       0       0       0
  5832 ;;      Temps:          0       0       0       0       0
  5833 ;;      Totals:         0       2       0       0       0
  5834 ;;Total ram usage:        2 bytes
  5835 ;; Hardware stack levels used:    1
  5836 ;; Hardware stack levels required when called:    2
  5837 ;; This function calls:
  5838 ;;		Nothing
  5839 ;; This function is called by:
  5840 ;;		_main
  5841 ;; This function uses a non-reentrant model
  5842 ;;
  5843  07A0                     _startThreeHoursTimer:	
  5844                           
  5845                           ;common.c: 435: if(( 0 == uiSmallTimer ) && ( 0 == bSmallTimerStartFlag ))
  5846                           
  5847                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  5848  07A0  1683               	bsf	3,5	;RP0=1, select bank1
  5849  07A1  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  5850  07A2  0422               	iorwf	_uiSmallTimer^(0+128),w
  5851  07A3  1D03               	skipz
  5852  07A4  0008               	return
  5853  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  5854  07A6  08CD               	movf	_bSmallTimerStartFlag,f
  5855  07A7  1D03               	skipz
  5856  07A8  0008               	return
  5857                           
  5858                           ;common.c: 436: {
  5859                           ;common.c: 437: uiSmallTimer = uiSetTime;
  5860  07A9  0821               	movf	startThreeHoursTimer@uiSetTime+1,w
  5861  07AA  1683               	bsf	3,5	;RP0=1, select bank1
  5862  07AB  00A3               	movwf	(_uiSmallTimer+1)^(0+128)
  5863  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  5864  07AD  0820               	movf	startThreeHoursTimer@uiSetTime,w
  5865  07AE  1683               	bsf	3,5	;RP0=1, select bank1
  5866  07AF  00A2               	movwf	_uiSmallTimer^(0+128)
  5867                           
  5868                           ;common.c: 438: bSmallTimerStartFlag = 1;
  5869  07B0  1283               	bcf	3,5	;RP0=0, select bank0
  5870  07B1  01CD               	clrf	_bSmallTimerStartFlag
  5871  07B2  0ACD               	incf	_bSmallTimerStartFlag,f
  5872  07B3  0008               	return
  5873  07B4                     __end_of_startThreeHoursTimer:	
  5874                           
  5875                           	psect	text1058
  5876  0ED6                     __ptext1058:	
  5877 ;; =============== function _startThreeHoursTimer ends ============
  5878                           
  5879                           
  5880 ;; *************** function _isFinishedTwentySecondsTimer *****************
  5881 ;; Defined at:
  5882 ;;		line 468 in file "C:\temp\dev\AK7030-OTP\common.c"
  5883 ;; Parameters:    Size  Location     Type
  5884 ;;		None
  5885 ;; Auto vars:     Size  Location     Type
  5886 ;;		None
  5887 ;; Return value:  Size  Location     Type
  5888 ;;                  1    wreg      unsigned char 
  5889 ;; Registers used:
  5890 ;;		wreg, status,2, status,0
  5891 ;; Tracked objects:
  5892 ;;		On entry : 140/0
  5893 ;;		On exit  : 140/0
  5894 ;;		Unchanged: FFE9F/0
  5895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5896 ;;      Params:         0       0       0       0       0
  5897 ;;      Locals:         0       0       0       0       0
  5898 ;;      Temps:          0       0       0       0       0
  5899 ;;      Totals:         0       0       0       0       0
  5900 ;;Total ram usage:        0 bytes
  5901 ;; Hardware stack levels used:    1
  5902 ;; Hardware stack levels required when called:    2
  5903 ;; This function calls:
  5904 ;;		Nothing
  5905 ;; This function is called by:
  5906 ;;		_main
  5907 ;; This function uses a non-reentrant model
  5908 ;;
  5909  0ED6                     _isFinishedTwentySecondsTimer:	
  5910                           
  5911                           ;common.c: 469: if(( 0 == uiTwentySecondsTimer ) && bTwentySecStartFlag )
  5912                           
  5913                           ; Regs used in _isFinishedTwentySecondsTimer: [wreg+status,2+status,0]
  5914  0ED6  1683               	bsf	3,5	;RP0=1, select bank1
  5915  0ED7  0827               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  5916  0ED8  0426               	iorwf	_uiTwentySecondsTimer^(0+128),w
  5917  0ED9  1D03               	skipz
  5918  0EDA  3400               	retlw	0
  5919  0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  5920  0EDC  084F               	movf	_bTwentySecStartFlag,w
  5921  0EDD  1D03               	skipz
  5922                           
  5923                           ;common.c: 470: {
  5924                           ;common.c: 472: return 1;
  5925  0EDE  3401               	retlw	1
  5926                           
  5927                           ;common.c: 474: else
  5928                           ;common.c: 475: return 0;
  5929  0EDF  3400               	retlw	0
  5930  0EE0                     __end_of_isFinishedTwentySecondsTimer:	
  5931                           
  5932                           	psect	text1059
  5933  07DC                     __ptext1059:	
  5934 ;; =============== function _isFinishedTwentySecondsTimer ends ============
  5935                           
  5936                           
  5937 ;; *************** function _startTwentySecondsTimer *****************
  5938 ;; Defined at:
  5939 ;;		line 448 in file "C:\temp\dev\AK7030-OTP\common.c"
  5940 ;; Parameters:    Size  Location     Type
  5941 ;;		None
  5942 ;; Auto vars:     Size  Location     Type
  5943 ;;		None
  5944 ;; Return value:  Size  Location     Type
  5945 ;;		None               void
  5946 ;; Registers used:
  5947 ;;		wreg, status,2, status,0
  5948 ;; Tracked objects:
  5949 ;;		On entry : 160/0
  5950 ;;		On exit  : 140/0
  5951 ;;		Unchanged: FFE9F/0
  5952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5953 ;;      Params:         0       0       0       0       0
  5954 ;;      Locals:         0       0       0       0       0
  5955 ;;      Temps:          0       0       0       0       0
  5956 ;;      Totals:         0       0       0       0       0
  5957 ;;Total ram usage:        0 bytes
  5958 ;; Hardware stack levels used:    1
  5959 ;; Hardware stack levels required when called:    2
  5960 ;; This function calls:
  5961 ;;		Nothing
  5962 ;; This function is called by:
  5963 ;;		_main
  5964 ;; This function uses a non-reentrant model
  5965 ;;
  5966  07DC                     _startTwentySecondsTimer:	
  5967                           
  5968                           ;common.c: 449: if(( 0 == uiTwentySecondsTimer) && ( 0 == bTwentySecStartFlag))
  5969                           
  5970                           ; Regs used in _startTwentySecondsTimer: [wreg+status,2+status,0]
  5971  07DC  1683               	bsf	3,5	;RP0=1, select bank1
  5972  07DD  0827               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  5973  07DE  0426               	iorwf	_uiTwentySecondsTimer^(0+128),w
  5974  07DF  1D03               	skipz
  5975  07E0  0008               	return
  5976  07E1  1283               	bcf	3,5	;RP0=0, select bank0
  5977  07E2  08CF               	movf	_bTwentySecStartFlag,f
  5978  07E3  1D03               	skipz
  5979  07E4  0008               	return
  5980                           
  5981                           ;common.c: 450: {
  5982                           ;common.c: 451: uiTwentySecondsTimer = 20;
  5983  07E5  3014               	movlw	20
  5984  07E6  1683               	bsf	3,5	;RP0=1, select bank1
  5985  07E7  00A6               	movwf	_uiTwentySecondsTimer^(0+128)
  5986  07E8  01A7               	clrf	(_uiTwentySecondsTimer+1)^(0+128)
  5987                           
  5988                           ;common.c: 452: bTwentySecStartFlag = 1;
  5989  07E9  1283               	bcf	3,5	;RP0=0, select bank0
  5990  07EA  01CF               	clrf	_bTwentySecStartFlag
  5991  07EB  0ACF               	incf	_bTwentySecStartFlag,f
  5992  07EC  0008               	return
  5993  07ED                     __end_of_startTwentySecondsTimer:	
  5994                           
  5995                           	psect	text1060
  5996  0EF7                     __ptext1060:	
  5997 ;; =============== function _startTwentySecondsTimer ends ============
  5998                           
  5999                           
  6000 ;; *************** function _isFinishedTwelveHoursTimer *****************
  6001 ;; Defined at:
  6002 ;;		line 492 in file "C:\temp\dev\AK7030-OTP\common.c"
  6003 ;; Parameters:    Size  Location     Type
  6004 ;;		None
  6005 ;; Auto vars:     Size  Location     Type
  6006 ;;		None
  6007 ;; Return value:  Size  Location     Type
  6008 ;;                  1    wreg      unsigned char 
  6009 ;; Registers used:
  6010 ;;		wreg, status,2, status,0
  6011 ;; Tracked objects:
  6012 ;;		On entry : 40/0
  6013 ;;		On exit  : 40/0
  6014 ;;		Unchanged: FFF9F/0
  6015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6016 ;;      Params:         0       0       0       0       0
  6017 ;;      Locals:         0       0       0       0       0
  6018 ;;      Temps:          0       0       0       0       0
  6019 ;;      Totals:         0       0       0       0       0
  6020 ;;Total ram usage:        0 bytes
  6021 ;; Hardware stack levels used:    1
  6022 ;; Hardware stack levels required when called:    2
  6023 ;; This function calls:
  6024 ;;		Nothing
  6025 ;; This function is called by:
  6026 ;;		_main
  6027 ;; This function uses a non-reentrant model
  6028 ;;
  6029  0EF7                     _isFinishedTwelveHoursTimer:	
  6030                           
  6031                           ;common.c: 493: if(( uiBigTimer == 0 ) && bBigTimerStartFlag )
  6032                           
  6033                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  6034  0EF7  1683               	bsf	3,5	;RP0=1, select bank1
  6035  0EF8  0821               	movf	(_uiBigTimer+1)^(0+128),w
  6036  0EF9  0420               	iorwf	_uiBigTimer^(0+128),w
  6037  0EFA  1D03               	skipz
  6038  0EFB  3400               	retlw	0
  6039  0EFC  1283               	bcf	3,5	;RP0=0, select bank0
  6040  0EFD  084C               	movf	_bBigTimerStartFlag,w
  6041  0EFE  1903               	btfsc	3,2
  6042  0EFF  3400               	retlw	0
  6043  0F00  3001               	movlw	1
  6044                           
  6045                           ;common.c: 494: {
  6046                           ;common.c: 495: bBigTimerStartFlag = 0;
  6047  0F01  01CC               	clrf	_bBigTimerStartFlag
  6048                           
  6049                           ;common.c: 496: return 1;
  6050  0F02  0008               	return
  6051  0F03                     __end_of_isFinishedTwelveHoursTimer:	
  6052                           ;common.c: 498: else
  6053                           ;common.c: 499: return 0;
  6054                           
  6055                           
  6056                           	psect	text1061
  6057  07B4                     __ptext1061:	
  6058 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  6059                           
  6060                           
  6061 ;; *************** function _startTwelveHourTimer *****************
  6062 ;; Defined at:
  6063 ;;		line 392 in file "C:\temp\dev\AK7030-OTP\common.c"
  6064 ;; Parameters:    Size  Location     Type
  6065 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  6066 ;; Auto vars:     Size  Location     Type
  6067 ;;		None
  6068 ;; Return value:  Size  Location     Type
  6069 ;;		None               void
  6070 ;; Registers used:
  6071 ;;		wreg, status,2, status,0
  6072 ;; Tracked objects:
  6073 ;;		On entry : 60/0
  6074 ;;		On exit  : 40/0
  6075 ;;		Unchanged: FFF9F/0
  6076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6077 ;;      Params:         0       2       0       0       0
  6078 ;;      Locals:         0       0       0       0       0
  6079 ;;      Temps:          0       0       0       0       0
  6080 ;;      Totals:         0       2       0       0       0
  6081 ;;Total ram usage:        2 bytes
  6082 ;; Hardware stack levels used:    1
  6083 ;; Hardware stack levels required when called:    2
  6084 ;; This function calls:
  6085 ;;		Nothing
  6086 ;; This function is called by:
  6087 ;;		_main
  6088 ;; This function uses a non-reentrant model
  6089 ;;
  6090  07B4                     _startTwelveHourTimer:	
  6091                           
  6092                           ;common.c: 393: if((0 == uiBigTimer) && ( 0 == bBigTimerStartFlag))
  6093                           
  6094                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  6095  07B4  1683               	bsf	3,5	;RP0=1, select bank1
  6096  07B5  0821               	movf	(_uiBigTimer+1)^(0+128),w
  6097  07B6  0420               	iorwf	_uiBigTimer^(0+128),w
  6098  07B7  1D03               	skipz
  6099  07B8  0008               	return
  6100  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  6101  07BA  08CC               	movf	_bBigTimerStartFlag,f
  6102  07BB  1D03               	skipz
  6103  07BC  0008               	return
  6104                           
  6105                           ;common.c: 394: {
  6106                           ;common.c: 395: uiBigTimer = uiSetTime;
  6107  07BD  0821               	movf	startTwelveHourTimer@uiSetTime+1,w
  6108  07BE  1683               	bsf	3,5	;RP0=1, select bank1
  6109  07BF  00A1               	movwf	(_uiBigTimer+1)^(0+128)
  6110  07C0  1283               	bcf	3,5	;RP0=0, select bank0
  6111  07C1  0820               	movf	startTwelveHourTimer@uiSetTime,w
  6112  07C2  1683               	bsf	3,5	;RP0=1, select bank1
  6113  07C3  00A0               	movwf	_uiBigTimer^(0+128)
  6114                           
  6115                           ;common.c: 396: bBigTimerStartFlag = 1;
  6116  07C4  1283               	bcf	3,5	;RP0=0, select bank0
  6117  07C5  01CC               	clrf	_bBigTimerStartFlag
  6118  07C6  0ACC               	incf	_bBigTimerStartFlag,f
  6119  07C7  0008               	return
  6120  07C8                     __end_of_startTwelveHourTimer:	
  6121                           
  6122                           	psect	text1062
  6123  0EEB                     __ptext1062:	
  6124 ;; =============== function _startTwelveHourTimer ends ============
  6125                           
  6126                           
  6127 ;; *************** function _isFinishedTwentyMinuteTimer *****************
  6128 ;; Defined at:
  6129 ;;		line 480 in file "C:\temp\dev\AK7030-OTP\common.c"
  6130 ;; Parameters:    Size  Location     Type
  6131 ;;		None
  6132 ;; Auto vars:     Size  Location     Type
  6133 ;;		None
  6134 ;; Return value:  Size  Location     Type
  6135 ;;                  1    wreg      unsigned char 
  6136 ;; Registers used:
  6137 ;;		wreg, status,2, status,0
  6138 ;; Tracked objects:
  6139 ;;		On entry : 160/0
  6140 ;;		On exit  : 140/0
  6141 ;;		Unchanged: FFE9F/0
  6142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6143 ;;      Params:         0       0       0       0       0
  6144 ;;      Locals:         0       0       0       0       0
  6145 ;;      Temps:          0       0       0       0       0
  6146 ;;      Totals:         0       0       0       0       0
  6147 ;;Total ram usage:        0 bytes
  6148 ;; Hardware stack levels used:    1
  6149 ;; Hardware stack levels required when called:    2
  6150 ;; This function calls:
  6151 ;;		Nothing
  6152 ;; This function is called by:
  6153 ;;		_main
  6154 ;; This function uses a non-reentrant model
  6155 ;;
  6156  0EEB                     _isFinishedTwentyMinuteTimer:	
  6157                           
  6158                           ;common.c: 481: if(( 0 == uiTwentyMinuteTimer ) && bTwentyMinStartFlag )
  6159                           
  6160                           ; Regs used in _isFinishedTwentyMinuteTimer: [wreg+status,2+status,0]
  6161  0EEB  1683               	bsf	3,5	;RP0=1, select bank1
  6162  0EEC  0825               	movf	(_uiTwentyMinuteTimer+1)^(0+128),w
  6163  0EED  0424               	iorwf	_uiTwentyMinuteTimer^(0+128),w
  6164  0EEE  1D03               	skipz
  6165  0EEF  3400               	retlw	0
  6166  0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  6167  0EF1  084E               	movf	_bTwentyMinStartFlag,w
  6168  0EF2  1903               	btfsc	3,2
  6169  0EF3  3400               	retlw	0
  6170  0EF4  3001               	movlw	1
  6171                           
  6172                           ;common.c: 482: {
  6173                           ;common.c: 483: bTwentyMinStartFlag = 0;
  6174  0EF5  01CE               	clrf	_bTwentyMinStartFlag
  6175                           
  6176                           ;common.c: 484: return 1;
  6177  0EF6  0008               	return
  6178  0EF7                     __end_of_isFinishedTwentyMinuteTimer:	
  6179                           ;common.c: 486: else
  6180                           ;common.c: 487: return 0;
  6181                           
  6182                           
  6183                           	psect	text1063
  6184  07FE                     __ptext1063:	
  6185 ;; =============== function _isFinishedTwentyMinuteTimer ends ============
  6186                           
  6187                           
  6188 ;; *************** function _clrSampeTime *****************
  6189 ;; Defined at:
  6190 ;;		line 524 in file "C:\temp\dev\AK7030-OTP\common.c"
  6191 ;; Parameters:    Size  Location     Type
  6192 ;;		None
  6193 ;; Auto vars:     Size  Location     Type
  6194 ;;		None
  6195 ;; Return value:  Size  Location     Type
  6196 ;;		None               void
  6197 ;; Registers used:
  6198 ;;		status,2
  6199 ;; Tracked objects:
  6200 ;;		On entry : 60/20
  6201 ;;		On exit  : 60/20
  6202 ;;		Unchanged: FFF9F/0
  6203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6204 ;;      Params:         0       0       0       0       0
  6205 ;;      Locals:         0       0       0       0       0
  6206 ;;      Temps:          0       0       0       0       0
  6207 ;;      Totals:         0       0       0       0       0
  6208 ;;Total ram usage:        0 bytes
  6209 ;; Hardware stack levels used:    1
  6210 ;; Hardware stack levels required when called:    2
  6211 ;; This function calls:
  6212 ;;		Nothing
  6213 ;; This function is called by:
  6214 ;;		_main
  6215 ;; This function uses a non-reentrant model
  6216 ;;
  6217  07FE                     _clrSampeTime:	
  6218                           
  6219                           ;common.c: 525: timer.timer10msStopWatch = 0;
  6220                           
  6221                           ; Regs used in _clrSampeTime: [status,2]
  6222  07FE  01AF               	clrf	_timer^(0+128)
  6223  07FF  0008               	return
  6224  0800                     __end_of_clrSampeTime:	
  6225                           
  6226                           	psect	text1064
  6227  0E9E                     __ptext1064:	
  6228 ;; =============== function _clrSampeTime ends ============
  6229                           
  6230                           
  6231 ;; *************** function _isPermitSampleTime *****************
  6232 ;; Defined at:
  6233 ;;		line 514 in file "C:\temp\dev\AK7030-OTP\common.c"
  6234 ;; Parameters:    Size  Location     Type
  6235 ;;		None
  6236 ;; Auto vars:     Size  Location     Type
  6237 ;;		None
  6238 ;; Return value:  Size  Location     Type
  6239 ;;                  1    wreg      unsigned char 
  6240 ;; Registers used:
  6241 ;;		wreg
  6242 ;; Tracked objects:
  6243 ;;		On entry : 40/20
  6244 ;;		On exit  : 60/20
  6245 ;;		Unchanged: FFF9F/0
  6246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6247 ;;      Params:         0       0       0       0       0
  6248 ;;      Locals:         0       0       0       0       0
  6249 ;;      Temps:          0       0       0       0       0
  6250 ;;      Totals:         0       0       0       0       0
  6251 ;;Total ram usage:        0 bytes
  6252 ;; Hardware stack levels used:    1
  6253 ;; Hardware stack levels required when called:    2
  6254 ;; This function calls:
  6255 ;;		Nothing
  6256 ;; This function is called by:
  6257 ;;		_main
  6258 ;; This function uses a non-reentrant model
  6259 ;;
  6260  0E9E                     _isPermitSampleTime:	
  6261                           
  6262                           ;common.c: 515: if(timer.timer10msStopWatch >= 10)
  6263                           
  6264                           ; Regs used in _isPermitSampleTime: [wreg]
  6265  0E9E  300A               	movlw	10
  6266  0E9F  1683               	bsf	3,5	;RP0=1, select bank1
  6267  0EA0  022F               	subwf	_timer^(0+128),w
  6268  0EA1  1803               	btfsc	3,0
  6269                           
  6270                           ;common.c: 516: {
  6271                           ;common.c: 517: return 1;
  6272  0EA2  3401               	retlw	1
  6273                           
  6274                           ;common.c: 519: else
  6275                           ;common.c: 520: return 0;
  6276  0EA3  3400               	retlw	0
  6277  0EA4                     __end_of_isPermitSampleTime:	
  6278                           
  6279                           	psect	text1065
  6280  07C8                     __ptext1065:	
  6281 ;; =============== function _isPermitSampleTime ends ============
  6282                           
  6283                           
  6284 ;; *************** function _startTwentyMinuteTimer *****************
  6285 ;; Defined at:
  6286 ;;		line 458 in file "C:\temp\dev\AK7030-OTP\common.c"
  6287 ;; Parameters:    Size  Location     Type
  6288 ;;  uiValue         2    0[BANK0 ] unsigned int 
  6289 ;; Auto vars:     Size  Location     Type
  6290 ;;		None
  6291 ;; Return value:  Size  Location     Type
  6292 ;;		None               void
  6293 ;; Registers used:
  6294 ;;		wreg, status,2, status,0
  6295 ;; Tracked objects:
  6296 ;;		On entry : 60/0
  6297 ;;		On exit  : 40/0
  6298 ;;		Unchanged: FFF9F/0
  6299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6300 ;;      Params:         0       2       0       0       0
  6301 ;;      Locals:         0       0       0       0       0
  6302 ;;      Temps:          0       0       0       0       0
  6303 ;;      Totals:         0       2       0       0       0
  6304 ;;Total ram usage:        2 bytes
  6305 ;; Hardware stack levels used:    1
  6306 ;; Hardware stack levels required when called:    2
  6307 ;; This function calls:
  6308 ;;		Nothing
  6309 ;; This function is called by:
  6310 ;;		_main
  6311 ;; This function uses a non-reentrant model
  6312 ;;
  6313  07C8                     _startTwentyMinuteTimer:	
  6314                           
  6315                           ;common.c: 459: if(( 0 == uiTwentyMinuteTimer) && ( 0 == bTwentyMinStartFlag))
  6316                           
  6317                           ; Regs used in _startTwentyMinuteTimer: [wreg+status,2+status,0]
  6318  07C8  1683               	bsf	3,5	;RP0=1, select bank1
  6319  07C9  0825               	movf	(_uiTwentyMinuteTimer+1)^(0+128),w
  6320  07CA  0424               	iorwf	_uiTwentyMinuteTimer^(0+128),w
  6321  07CB  1D03               	skipz
  6322  07CC  0008               	return
  6323  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  6324  07CE  08CE               	movf	_bTwentyMinStartFlag,f
  6325  07CF  1D03               	skipz
  6326  07D0  0008               	return
  6327                           
  6328                           ;common.c: 460: {
  6329                           ;common.c: 461: uiTwentyMinuteTimer = uiValue;
  6330  07D1  0821               	movf	startTwentyMinuteTimer@uiValue+1,w
  6331  07D2  1683               	bsf	3,5	;RP0=1, select bank1
  6332  07D3  00A5               	movwf	(_uiTwentyMinuteTimer+1)^(0+128)
  6333  07D4  1283               	bcf	3,5	;RP0=0, select bank0
  6334  07D5  0820               	movf	startTwentyMinuteTimer@uiValue,w
  6335  07D6  1683               	bsf	3,5	;RP0=1, select bank1
  6336  07D7  00A4               	movwf	_uiTwentyMinuteTimer^(0+128)
  6337                           
  6338                           ;common.c: 462: bTwentyMinStartFlag = 1;
  6339  07D8  1283               	bcf	3,5	;RP0=0, select bank0
  6340  07D9  01CE               	clrf	_bTwentyMinStartFlag
  6341  07DA  0ACE               	incf	_bTwentyMinStartFlag,f
  6342  07DB  0008               	return
  6343  07DC                     __end_of_startTwentyMinuteTimer:	
  6344                           
  6345                           	psect	text1067
  6346  0EE0                     __ptext1067:	
  6347 ;; =============== function _adc_start ends ============
  6348                           
  6349                           
  6350 ;; *************** function _op1_init *****************
  6351 ;; Defined at:
  6352 ;;		line 26 in file "C:\temp\dev\AK7030-OTP\periph.c"
  6353 ;; Parameters:    Size  Location     Type
  6354 ;;		None
  6355 ;; Auto vars:     Size  Location     Type
  6356 ;;		None
  6357 ;; Return value:  Size  Location     Type
  6358 ;;		None               void
  6359 ;; Registers used:
  6360 ;;		wreg
  6361 ;; Tracked objects:
  6362 ;;		On entry : 17F/20
  6363 ;;		On exit  : 17F/20
  6364 ;;		Unchanged: FFE80/0
  6365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6366 ;;      Params:         0       0       0       0       0
  6367 ;;      Locals:         0       0       0       0       0
  6368 ;;      Temps:          0       0       0       0       0
  6369 ;;      Totals:         0       0       0       0       0
  6370 ;;Total ram usage:        0 bytes
  6371 ;; Hardware stack levels used:    1
  6372 ;; Hardware stack levels required when called:    2
  6373 ;; This function calls:
  6374 ;;		Nothing
  6375 ;; This function is called by:
  6376 ;;		_main
  6377 ;; This function uses a non-reentrant model
  6378 ;;
  6379  0EE0                     _op1_init:	
  6380                           
  6381                           ;periph.c: 33: OP1CON1=0x02;
  6382                           
  6383                           ; Regs used in _op1_init: [wreg]
  6384  0EE0  3002               	movlw	2
  6385  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  6386  0EE2  009C               	movwf	28	;volatile
  6387                           
  6388                           ;periph.c: 34: OP1CON2=0xA0;
  6389  0EE3  30A0               	movlw	160
  6390  0EE4  009D               	movwf	29	;volatile
  6391                           
  6392                           ;periph.c: 35: OP1CON0=0x80;
  6393  0EE5  3080               	movlw	128
  6394  0EE6  009B               	movwf	27	;volatile
  6395                           
  6396                           ;periph.c: 38: TRISB3=1;
  6397  0EE7  1683               	bsf	3,5	;RP0=1, select bank1
  6398  0EE8  1586               	bsf	6,3
  6399                           
  6400                           ;periph.c: 40: TRISB5=0;
  6401  0EE9  1286               	bcf	6,5
  6402  0EEA  0008               	return
  6403  0EEB                     __end_of_op1_init:	
  6404                           
  6405                           	psect	text1069
  6406  0EA4                     __ptext1069:	
  6407 ;; =============== function _adc_test_init ends ============
  6408                           
  6409                           
  6410 ;; *************** function _op2_init *****************
  6411 ;; Defined at:
  6412 ;;		line 45 in file "C:\temp\dev\AK7030-OTP\periph.c"
  6413 ;; Parameters:    Size  Location     Type
  6414 ;;		None
  6415 ;; Auto vars:     Size  Location     Type
  6416 ;;		None
  6417 ;; Return value:  Size  Location     Type
  6418 ;;		None               void
  6419 ;; Registers used:
  6420 ;;		wreg
  6421 ;; Tracked objects:
  6422 ;;		On entry : 17F/20
  6423 ;;		On exit  : 17F/20
  6424 ;;		Unchanged: FFE80/0
  6425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6426 ;;      Params:         0       0       0       0       0
  6427 ;;      Locals:         0       0       0       0       0
  6428 ;;      Temps:          0       0       0       0       0
  6429 ;;      Totals:         0       0       0       0       0
  6430 ;;Total ram usage:        0 bytes
  6431 ;; Hardware stack levels used:    1
  6432 ;; Hardware stack levels required when called:    2
  6433 ;; This function calls:
  6434 ;;		Nothing
  6435 ;; This function is called by:
  6436 ;;		_main
  6437 ;; This function uses a non-reentrant model
  6438 ;;
  6439  0EA4                     _op2_init:	
  6440                           
  6441                           ;periph.c: 52: OP2CON1=0x14;
  6442                           
  6443                           ; Regs used in _op2_init: [wreg]
  6444  0EA4  3014               	movlw	20
  6445  0EA5  009C               	movwf	28	;volatile
  6446                           
  6447                           ;periph.c: 54: OP2CON2=0x10;
  6448  0EA6  3010               	movlw	16
  6449  0EA7  009D               	movwf	29	;volatile
  6450                           
  6451                           ;periph.c: 55: OP2CON0=0x80;
  6452  0EA8  3080               	movlw	128
  6453  0EA9  009B               	movwf	27	;volatile
  6454  0EAA  0008               	return
  6455  0EAB                     __end_of_op2_init:	
  6456                           
  6457                           	psect	text1070
  6458  07FB                     __ptext1070:	
  6459 ;; =============== function _op2_init ends ============
  6460                           
  6461                           
  6462 ;; *************** function _timer1_interrupt_config *****************
  6463 ;; Defined at:
  6464 ;;		line 225 in file "C:\temp\dev\AK7030-OTP\common.c"
  6465 ;; Parameters:    Size  Location     Type
  6466 ;;		None
  6467 ;; Auto vars:     Size  Location     Type
  6468 ;;		None
  6469 ;; Return value:  Size  Location     Type
  6470 ;;		None               void
  6471 ;; Registers used:
  6472 ;;		None
  6473 ;; Tracked objects:
  6474 ;;		On entry : 17F/20
  6475 ;;		On exit  : 17F/20
  6476 ;;		Unchanged: FFE80/0
  6477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6478 ;;      Params:         0       0       0       0       0
  6479 ;;      Locals:         0       0       0       0       0
  6480 ;;      Temps:          0       0       0       0       0
  6481 ;;      Totals:         0       0       0       0       0
  6482 ;;Total ram usage:        0 bytes
  6483 ;; Hardware stack levels used:    1
  6484 ;; Hardware stack levels required when called:    2
  6485 ;; This function calls:
  6486 ;;		Nothing
  6487 ;; This function is called by:
  6488 ;;		_main
  6489 ;; This function uses a non-reentrant model
  6490 ;;
  6491  07FB                     _timer1_interrupt_config:	
  6492                           
  6493                           ;common.c: 226: GIE = 1;
  6494                           
  6495                           ; Regs used in _timer1_interrupt_config: []
  6496  07FB  178B               	bsf	11,7
  6497                           
  6498                           ;common.c: 227: PEIE = 1;
  6499  07FC  170B               	bsf	11,6
  6500  07FD  0008               	return
  6501  07FE                     __end_of_timer1_interrupt_config:	
  6502                           
  6503                           	psect	text1071
  6504  0ECC                     __ptext1071:	
  6505 ;; =============== function _timer1_interrupt_config ends ============
  6506                           
  6507                           
  6508 ;; *************** function _timer1_config *****************
  6509 ;; Defined at:
  6510 ;;		line 213 in file "C:\temp\dev\AK7030-OTP\common.c"
  6511 ;; Parameters:    Size  Location     Type
  6512 ;;		None
  6513 ;; Auto vars:     Size  Location     Type
  6514 ;;		None
  6515 ;; Return value:  Size  Location     Type
  6516 ;;		None               void
  6517 ;; Registers used:
  6518 ;;		wreg
  6519 ;; Tracked objects:
  6520 ;;		On entry : 17F/40
  6521 ;;		On exit  : 17F/20
  6522 ;;		Unchanged: FFE80/0
  6523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6524 ;;      Params:         0       0       0       0       0
  6525 ;;      Locals:         0       0       0       0       0
  6526 ;;      Temps:          0       0       0       0       0
  6527 ;;      Totals:         0       0       0       0       0
  6528 ;;Total ram usage:        0 bytes
  6529 ;; Hardware stack levels used:    1
  6530 ;; Hardware stack levels required when called:    2
  6531 ;; This function calls:
  6532 ;;		Nothing
  6533 ;; This function is called by:
  6534 ;;		_main
  6535 ;; This function uses a non-reentrant model
  6536 ;;
  6537  0ECC                     _timer1_config:	
  6538                           
  6539                           ;common.c: 215: TMR1H=0xCF;
  6540                           
  6541                           ; Regs used in _timer1_config: [wreg]
  6542  0ECC  30CF               	movlw	207
  6543  0ECD  1303               	bcf	3,6	;RP1=0, select bank0
  6544  0ECE  008F               	movwf	15	;volatile
  6545                           
  6546                           ;common.c: 216: TMR1L=0x2C;
  6547  0ECF  302C               	movlw	44
  6548  0ED0  008E               	movwf	14	;volatile
  6549                           
  6550                           ;common.c: 217: T1CON=0xE1;
  6551  0ED1  30E1               	movlw	225
  6552  0ED2  0090               	movwf	16	;volatile
  6553                           
  6554                           ;common.c: 218: TMR1IE=1;
  6555  0ED3  1683               	bsf	3,5	;RP0=1, select bank1
  6556  0ED4  140C               	bsf	12,0
  6557  0ED5  0008               	return
  6558  0ED6                     __end_of_timer1_config:	
  6559                           
  6560                           	psect	text1072
  6561  0EB3                     __ptext1072:	
  6562 ;; =============== function _timer1_config ends ============
  6563                           
  6564                           
  6565 ;; *************** function _clock_config *****************
  6566 ;; Defined at:
  6567 ;;		line 205 in file "C:\temp\dev\AK7030-OTP\common.c"
  6568 ;; Parameters:    Size  Location     Type
  6569 ;;		None
  6570 ;; Auto vars:     Size  Location     Type
  6571 ;;		None
  6572 ;; Return value:  Size  Location     Type
  6573 ;;		None               void
  6574 ;; Registers used:
  6575 ;;		wreg, status,2
  6576 ;; Tracked objects:
  6577 ;;		On entry : 17F/20
  6578 ;;		On exit  : 17F/40
  6579 ;;		Unchanged: FFE80/0
  6580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6581 ;;      Params:         0       0       0       0       0
  6582 ;;      Locals:         0       0       0       0       0
  6583 ;;      Temps:          0       0       0       0       0
  6584 ;;      Totals:         0       0       0       0       0
  6585 ;;Total ram usage:        0 bytes
  6586 ;; Hardware stack levels used:    1
  6587 ;; Hardware stack levels required when called:    2
  6588 ;; This function calls:
  6589 ;;		Nothing
  6590 ;; This function is called by:
  6591 ;;		_main
  6592 ;; This function uses a non-reentrant model
  6593 ;;
  6594  0EB3                     _clock_config:	
  6595                           
  6596                           ;common.c: 207: CLKPR = 0x80;
  6597                           
  6598                           ; Regs used in _clock_config: [wreg+status,2]
  6599  0EB3  3080               	movlw	128
  6600  0EB4  1283               	bcf	3,5	;RP0=0, select bank2
  6601  0EB5  1703               	bsf	3,6	;RP1=1, select bank2
  6602  0EB6  0088               	movwf	8	;volatile
  6603                           
  6604                           ;common.c: 208: CLKPR = 0x00;
  6605  0EB7  0188               	clrf	8	;volatile
  6606  0EB8                     l1852:	
  6607                           ;common.c: 209: while(CLKPCE);
  6608                           
  6609  0EB8  1F88               	btfss	8,7
  6610  0EB9  0008               	return
  6611  0EBA  2EB8               	goto	l1852
  6612  0EBB                     __end_of_clock_config:	
  6613                           
  6614                           	psect	text1074
  6615  0EAB                     __ptext1074:	
  6616 ;; =============== function _setPB6AsInput ends ============
  6617                           
  6618                           
  6619 ;; *************** function _setPA6 *****************
  6620 ;; Defined at:
  6621 ;;		line 357 in file "C:\temp\dev\AK7030-OTP\main.c"
  6622 ;; Parameters:    Size  Location     Type
  6623 ;;  bValue          1    wreg     unsigned char 
  6624 ;; Auto vars:     Size  Location     Type
  6625 ;;  bValue          1    0[BANK0 ] unsigned char 
  6626 ;; Return value:  Size  Location     Type
  6627 ;;		None               void
  6628 ;; Registers used:
  6629 ;;		wreg
  6630 ;; Tracked objects:
  6631 ;;		On entry : 60/0
  6632 ;;		On exit  : 60/0
  6633 ;;		Unchanged: FFF9F/0
  6634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6635 ;;      Params:         0       0       0       0       0
  6636 ;;      Locals:         0       1       0       0       0
  6637 ;;      Temps:          0       0       0       0       0
  6638 ;;      Totals:         0       1       0       0       0
  6639 ;;Total ram usage:        1 bytes
  6640 ;; Hardware stack levels used:    1
  6641 ;; Hardware stack levels required when called:    2
  6642 ;; This function calls:
  6643 ;;		Nothing
  6644 ;; This function is called by:
  6645 ;;		_main
  6646 ;; This function uses a non-reentrant model
  6647 ;;
  6648  0EAB                     _setPA6:	
  6649                           
  6650                           ; Regs used in _setPA6: [wreg]
  6651                           ;setPA6@bValue stored from wreg
  6652  0EAB  00A0               	movwf	setPA6@bValue
  6653                           
  6654                           ;main.c: 358: if( bValue )
  6655  0EAC  0820               	movf	setPA6@bValue,w
  6656  0EAD  1903               	btfsc	3,2
  6657  0EAE  2EB1               	goto	l756
  6658                           
  6659                           ;main.c: 360: PA6 = 1;
  6660  0EAF  1705               	bsf	5,6
  6661  0EB0  0008               	return
  6662  0EB1                     l756:	
  6663                           
  6664                           ;main.c: 364: else
  6665                           ;main.c: 366: PA6= 0;
  6666  0EB1  1305               	bcf	5,6
  6667  0EB2  0008               	return
  6668  0EB3                     __end_of_setPA6:	
  6669                           
  6670                           	psect	text1078
  6671  0EC3                     __ptext1078:	
  6672 ;; =============== function _setPA3 ends ============
  6673                           
  6674                           
  6675 ;; *************** function _setPA2 *****************
  6676 ;; Defined at:
  6677 ;;		line 253 in file "C:\temp\dev\AK7030-OTP\main.c"
  6678 ;; Parameters:    Size  Location     Type
  6679 ;;  bValue          1    wreg     unsigned char 
  6680 ;; Auto vars:     Size  Location     Type
  6681 ;;  bValue          1    0[BANK0 ] unsigned char 
  6682 ;; Return value:  Size  Location     Type
  6683 ;;		None               void
  6684 ;; Registers used:
  6685 ;;		wreg
  6686 ;; Tracked objects:
  6687 ;;		On entry : 40/20
  6688 ;;		On exit  : 60/0
  6689 ;;		Unchanged: FFF9F/0
  6690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6691 ;;      Params:         0       0       0       0       0
  6692 ;;      Locals:         0       1       0       0       0
  6693 ;;      Temps:          0       0       0       0       0
  6694 ;;      Totals:         0       1       0       0       0
  6695 ;;Total ram usage:        1 bytes
  6696 ;; Hardware stack levels used:    1
  6697 ;; Hardware stack levels required when called:    2
  6698 ;; This function calls:
  6699 ;;		Nothing
  6700 ;; This function is called by:
  6701 ;;		_main
  6702 ;; This function uses a non-reentrant model
  6703 ;;
  6704  0EC3                     _setPA2:	
  6705                           
  6706                           ; Regs used in _setPA2: [wreg]
  6707                           ;setPA2@bValue stored from wreg
  6708  0EC3  1283               	bcf	3,5	;RP0=0, select bank0
  6709  0EC4  00A0               	movwf	setPA2@bValue
  6710                           
  6711                           ;main.c: 254: if( bValue )
  6712  0EC5  0820               	movf	setPA2@bValue,w
  6713  0EC6  1903               	btfsc	3,2
  6714  0EC7  2ECA               	goto	l731
  6715                           
  6716                           ;main.c: 256: PA2 = 1;
  6717  0EC8  1505               	bsf	5,2
  6718  0EC9  0008               	return
  6719  0ECA                     l731:	
  6720                           
  6721                           ;main.c: 260: else
  6722                           ;main.c: 262: PA2 = 0;
  6723  0ECA  1105               	bcf	5,2
  6724  0ECB  0008               	return
  6725  0ECC                     __end_of_setPA2:	
  6726                           
  6727                           	psect	text1084
  6728  0762                     __ptext1084:	
  6729 ;; =============== function _setPB0 ends ============
  6730                           
  6731                           
  6732 ;; *************** function _initPin *****************
  6733 ;; Defined at:
  6734 ;;		line 130 in file "C:\temp\dev\AK7030-OTP\main.c"
  6735 ;; Parameters:    Size  Location     Type
  6736 ;;		None
  6737 ;; Auto vars:     Size  Location     Type
  6738 ;;		None
  6739 ;; Return value:  Size  Location     Type
  6740 ;;		None               void
  6741 ;; Registers used:
  6742 ;;		None
  6743 ;; Tracked objects:
  6744 ;;		On entry : 160/0
  6745 ;;		On exit  : 160/20
  6746 ;;		Unchanged: FFE9F/0
  6747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6748 ;;      Params:         0       0       0       0       0
  6749 ;;      Locals:         0       0       0       0       0
  6750 ;;      Temps:          0       0       0       0       0
  6751 ;;      Totals:         0       0       0       0       0
  6752 ;;Total ram usage:        0 bytes
  6753 ;; Hardware stack levels used:    1
  6754 ;; Hardware stack levels required when called:    2
  6755 ;; This function calls:
  6756 ;;		Nothing
  6757 ;; This function is called by:
  6758 ;;		_main
  6759 ;; This function uses a non-reentrant model
  6760 ;;
  6761  0762                     _initPin:	
  6762                           
  6763                           ;main.c: 133: TRISB0 = 0;
  6764                           
  6765                           ; Regs used in _initPin: []
  6766  0762  1683               	bsf	3,5	;RP0=1, select bank1
  6767  0763  1006               	bcf	6,0
  6768                           
  6769                           ;main.c: 134: PB0 = 0;
  6770  0764  1283               	bcf	3,5	;RP0=0, select bank0
  6771  0765  1006               	bcf	6,0
  6772                           
  6773                           ;main.c: 135: TRISB1 = 0;
  6774  0766  1683               	bsf	3,5	;RP0=1, select bank1
  6775  0767  1086               	bcf	6,1
  6776                           
  6777                           ;main.c: 136: PB1 = 0;
  6778  0768  1283               	bcf	3,5	;RP0=0, select bank0
  6779  0769  1086               	bcf	6,1
  6780                           
  6781                           ;main.c: 137: TRISB2 = 0;
  6782  076A  1683               	bsf	3,5	;RP0=1, select bank1
  6783  076B  1106               	bcf	6,2
  6784                           
  6785                           ;main.c: 138: PB2 = 0;
  6786  076C  1283               	bcf	3,5	;RP0=0, select bank0
  6787  076D  1106               	bcf	6,2
  6788                           
  6789                           ;main.c: 139: TRISA0 = 0;
  6790  076E  1683               	bsf	3,5	;RP0=1, select bank1
  6791  076F  1005               	bcf	5,0
  6792                           
  6793                           ;main.c: 140: PA0 = 0;
  6794  0770  1283               	bcf	3,5	;RP0=0, select bank0
  6795  0771  1005               	bcf	5,0
  6796                           
  6797                           ;main.c: 141: TRISA1 = 0;
  6798  0772  1683               	bsf	3,5	;RP0=1, select bank1
  6799  0773  1085               	bcf	5,1
  6800                           
  6801                           ;main.c: 142: PA1 = 0;
  6802  0774  1283               	bcf	3,5	;RP0=0, select bank0
  6803  0775  1085               	bcf	5,1
  6804                           
  6805                           ;main.c: 143: TRISA2 = 0;
  6806  0776  1683               	bsf	3,5	;RP0=1, select bank1
  6807  0777  1105               	bcf	5,2
  6808                           
  6809                           ;main.c: 144: PA2 = 1;
  6810  0778  1283               	bcf	3,5	;RP0=0, select bank0
  6811  0779  1505               	bsf	5,2
  6812                           
  6813                           ;main.c: 146: TRISA3 = 0;
  6814  077A  1683               	bsf	3,5	;RP0=1, select bank1
  6815  077B  1185               	bcf	5,3
  6816                           
  6817                           ;main.c: 147: PA3 = 0;
  6818  077C  1283               	bcf	3,5	;RP0=0, select bank0
  6819  077D  1185               	bcf	5,3
  6820                           
  6821                           ;main.c: 148: TRISB4 = 0;
  6822  077E  1683               	bsf	3,5	;RP0=1, select bank1
  6823  077F  1206               	bcf	6,4
  6824                           
  6825                           ;main.c: 149: PB4 = 0;
  6826  0780  1283               	bcf	3,5	;RP0=0, select bank0
  6827  0781  1206               	bcf	6,4
  6828                           
  6829                           ;main.c: 150: TRISB7 = 0;
  6830  0782  1683               	bsf	3,5	;RP0=1, select bank1
  6831  0783  1386               	bcf	6,7
  6832                           
  6833                           ;main.c: 151: PB7 = 0;
  6834  0784  1283               	bcf	3,5	;RP0=0, select bank0
  6835  0785  1386               	bcf	6,7
  6836                           
  6837                           ;main.c: 153: TRISB6 = 1;
  6838  0786  1683               	bsf	3,5	;RP0=1, select bank1
  6839  0787  1706               	bsf	6,6
  6840  0788  0008               	return
  6841  0789                     __end_of_initPin:	
  6842                           
  6843                           	psect	text1089
  6844  0F0F                     __ptext1089:	
  6845 ;; =============== function _clearTwelveHoursTimer ends ============
  6846                           
  6847                           
  6848 ;; *************** function _ISR *****************
  6849 ;; Defined at:
  6850 ;;		line 529 in file "C:\temp\dev\AK7030-OTP\common.c"
  6851 ;; Parameters:    Size  Location     Type
  6852 ;;		None
  6853 ;; Auto vars:     Size  Location     Type
  6854 ;;		None
  6855 ;; Return value:  Size  Location     Type
  6856 ;;		None               void
  6857 ;; Registers used:
  6858 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6859 ;; Tracked objects:
  6860 ;;		On entry : 0/0
  6861 ;;		On exit  : 60/0
  6862 ;;		Unchanged: FFE00/0
  6863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6864 ;;      Params:         0       0       0       0       0
  6865 ;;      Locals:         0       0       0       0       0
  6866 ;;      Temps:          4       0       0       0       0
  6867 ;;      Totals:         4       0       0       0       0
  6868 ;;Total ram usage:        4 bytes
  6869 ;; Hardware stack levels used:    1
  6870 ;; Hardware stack levels required when called:    1
  6871 ;; This function calls:
  6872 ;;		i1_setAD_ConvertFlag
  6873 ;;		_adc_get
  6874 ;;		_vPutSampleDataIntoTable
  6875 ;; This function is called by:
  6876 ;;		Interrupt level 1
  6877 ;; This function uses a non-reentrant model
  6878 ;;
  6879  0F0F                     _ISR:	
  6880                           
  6881                           ;common.c: 530: static unsigned char ucTimer1sCnt = 0;
  6882                           ;common.c: 532: if(TMR1IF == 1)
  6883  0F0F  1C0C               	btfss	12,0
  6884  0F10  2F45               	goto	i1l4755
  6885                           
  6886                           ;common.c: 533: {
  6887                           ;common.c: 534: TMR1IF = 0 ;
  6888  0F11  100C               	bcf	12,0
  6889                           
  6890                           ;common.c: 535: timer.timer10msStopWatch++;
  6891  0F12  1683               	bsf	3,5	;RP0=1, select bank1
  6892  0F13  3064               	movlw	100
  6893  0F14  0AAF               	incf	_timer^(0+128),f
  6894                           
  6895                           ;common.c: 536: ucTimer1sCnt++;
  6896  0F15  0AAC               	incf	ISR@ucTimer1sCnt^(0+128),f
  6897                           
  6898                           ;common.c: 538: if(ucTimer1sCnt >= 100)
  6899  0F16  022C               	subwf	ISR@ucTimer1sCnt^(0+128),w
  6900  0F17  1C03               	skipc
  6901  0F18  2F45               	goto	i1l4755
  6902                           
  6903                           ;common.c: 539: {
  6904                           ;common.c: 540: ucTimer1sCnt = 0;
  6905  0F19  01AC               	clrf	ISR@ucTimer1sCnt^(0+128)
  6906                           
  6907                           ;common.c: 541: if(uiBigTimer > 0)
  6908  0F1A  0821               	movf	(_uiBigTimer+1)^(0+128),w
  6909  0F1B  0420               	iorwf	_uiBigTimer^(0+128),w
  6910  0F1C  1903               	skipnz
  6911  0F1D  2F24               	goto	i1l1963
  6912                           
  6913                           ;common.c: 542: uiBigTimer--;
  6914  0F1E  3001               	movlw	1
  6915  0F1F  02A0               	subwf	_uiBigTimer^(0+128),f
  6916  0F20  3000               	movlw	0
  6917  0F21  1C03               	skipc
  6918  0F22  03A1               	decf	(_uiBigTimer+1)^(0+128),f
  6919  0F23  02A1               	subwf	(_uiBigTimer+1)^(0+128),f
  6920  0F24                     i1l1963:	
  6921                           
  6922                           ;common.c: 544: if(uiSmallTimer)
  6923  0F24  0823               	movf	(_uiSmallTimer+1)^(0+128),w
  6924  0F25  0422               	iorwf	_uiSmallTimer^(0+128),w
  6925  0F26  1903               	skipnz
  6926  0F27  2F2E               	goto	i1l1964
  6927                           
  6928                           ;common.c: 545: uiSmallTimer--;
  6929  0F28  3001               	movlw	1
  6930  0F29  02A2               	subwf	_uiSmallTimer^(0+128),f
  6931  0F2A  3000               	movlw	0
  6932  0F2B  1C03               	skipc
  6933  0F2C  03A3               	decf	(_uiSmallTimer+1)^(0+128),f
  6934  0F2D  02A3               	subwf	(_uiSmallTimer+1)^(0+128),f
  6935  0F2E                     i1l1964:	
  6936                           
  6937                           ;common.c: 547: if((uiTwentySecondsTimer)&& (0 == bPause20secTimer))
  6938  0F2E  0827               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  6939  0F2F  0426               	iorwf	_uiTwentySecondsTimer^(0+128),w
  6940  0F30  1903               	skipnz
  6941  0F31  2F3B               	goto	i1l1965
  6942  0F32  08AE               	movf	_bPause20secTimer^(0+128),f
  6943  0F33  1D03               	skipz
  6944  0F34  2F3B               	goto	i1l1965
  6945                           
  6946                           ;common.c: 548: uiTwentySecondsTimer--;
  6947  0F35  3001               	movlw	1
  6948  0F36  02A6               	subwf	_uiTwentySecondsTimer^(0+128),f
  6949  0F37  3000               	movlw	0
  6950  0F38  1C03               	skipc
  6951  0F39  03A7               	decf	(_uiTwentySecondsTimer+1)^(0+128),f
  6952  0F3A  02A7               	subwf	(_uiTwentySecondsTimer+1)^(0+128),f
  6953  0F3B                     i1l1965:	
  6954                           
  6955                           ;common.c: 550: if((uiTwentyMinuteTimer))
  6956  0F3B  0825               	movf	(_uiTwentyMinuteTimer+1)^(0+128),w
  6957  0F3C  0424               	iorwf	_uiTwentyMinuteTimer^(0+128),w
  6958  0F3D  1903               	skipnz
  6959  0F3E  2F45               	goto	i1l4755
  6960                           
  6961                           ;common.c: 551: uiTwentyMinuteTimer--;
  6962  0F3F  3001               	movlw	1
  6963  0F40  02A4               	subwf	_uiTwentyMinuteTimer^(0+128),f
  6964  0F41  3000               	movlw	0
  6965  0F42  1C03               	skipc
  6966  0F43  03A5               	decf	(_uiTwentyMinuteTimer+1)^(0+128),f
  6967  0F44  02A5               	subwf	(_uiTwentyMinuteTimer+1)^(0+128),f
  6968  0F45                     i1l4755:	
  6969                           
  6970                           ;common.c: 552: }
  6971                           ;common.c: 553: }
  6972                           ;common.c: 555: if(ADIF)
  6973  0F45  1283               	bcf	3,5	;RP0=0, select bank0
  6974  0F46  1D0D               	btfss	13,2
  6975  0F47  2F56               	goto	i1l1968
  6976  0F48  3001               	movlw	1
  6977                           
  6978                           ;common.c: 556: {
  6979                           ;common.c: 557: ADIF=0;
  6980  0F49  110D               	bcf	13,2
  6981                           
  6982                           ;common.c: 558: setAD_ConvertFlag(1);
  6983  0F4A  27E4  158A         	fcall	i1_setAD_ConvertFlag
  6984                           
  6985                           ;common.c: 559: vPutSampleDataIntoTable(adc_get(),sampleChannelSelect);
  6986  0F4C  27D8  158A         	fcall	_adc_get
  6987  0F4E  0871               	movf	?_adc_get+1,w
  6988  0F4F  00F5               	movwf	?_vPutSampleDataIntoTable+1
  6989  0F50  0870               	movf	?_adc_get,w
  6990  0F51  00F4               	movwf	?_vPutSampleDataIntoTable
  6991  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  6992  0F53  0851               	movf	_sampleChannelSelect,w
  6993  0F54  00F6               	movwf	?_vPutSampleDataIntoTable+2
  6994  0F55  2763               	fcall	_vPutSampleDataIntoTable
  6995  0F56                     i1l1968:	
  6996  0F56  087C               	movf	??_ISR+3,w
  6997  0F57  1283               	bcf	3,5	;RP0=0, select bank0
  6998  0F58  1303               	bcf	3,6	;RP1=0, select bank0
  6999  0F59  00FF               	movwf	127
  7000  0F5A  087B               	movf	??_ISR+2,w
  7001  0F5B  008A               	movwf	10
  7002  0F5C  087A               	movf	??_ISR+1,w
  7003  0F5D  0084               	movwf	4
  7004  0F5E  0E79               	swapf	??_ISR^(0+-128),w
  7005  0F5F  0083               	movwf	3
  7006  0F60  0EFE               	swapf	126,f
  7007  0F61  0E7E               	swapf	126,w
  7008  0F62  0009               	retfie
  7009  0F63                     __end_of_ISR:	
  7010  0F63                     __ptext1092:	
  7011 ;; =============== function _adc_get ends ============
  7012                           
  7013                           
  7014 ;; *************** function _vPutSampleDataIntoTable *****************
  7015 ;; Defined at:
  7016 ;;		line 109 in file "C:\temp\dev\AK7030-OTP\common.c"
  7017 ;; Parameters:    Size  Location     Type
  7018 ;;  uiSampleData    2    4[COMMON] unsigned int 
  7019 ;;  channel         1    6[COMMON] unsigned char 
  7020 ;; Auto vars:     Size  Location     Type
  7021 ;;  i               2    7[COMMON] int 
  7022 ;; Return value:  Size  Location     Type
  7023 ;;		None               void
  7024 ;; Registers used:
  7025 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  7026 ;; Tracked objects:
  7027 ;;		On entry : 60/0
  7028 ;;		On exit  : 0/0
  7029 ;;		Unchanged: FFE00/0
  7030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7031 ;;      Params:         3       0       0       0       0
  7032 ;;      Locals:         2       0       0       0       0
  7033 ;;      Temps:          0       0       0       0       0
  7034 ;;      Totals:         5       0       0       0       0
  7035 ;;Total ram usage:        5 bytes
  7036 ;; Hardware stack levels used:    1
  7037 ;; This function calls:
  7038 ;;		Nothing
  7039 ;; This function is called by:
  7040 ;;		_ISR
  7041 ;; This function uses a non-reentrant model
  7042 ;;
  7043  0F63                     _vPutSampleDataIntoTable:	
  7044                           
  7045                           ;common.c: 111: static unsigned char ucChannelZeroLength = 0;
  7046                           ;common.c: 113: static unsigned char ucChannelSecondLength = 0;
  7047                           ;common.c: 115: static unsigned char ucChannelFifthLength = 0;
  7048                           ;common.c: 117: static unsigned char ucChannelSixthLength = 0;
  7049                           ;common.c: 119: if(channel == 0)
  7050                           
  7051                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1]
  7052  0F63  08F6               	movf	vPutSampleDataIntoTable@channel,f
  7053  0F64  1D03               	skipz
  7054  0F65  2F72               	goto	i1l4679
  7055                           
  7056                           ;common.c: 120: {
  7057                           ;common.c: 121: if(ucChannelZeroLength < 12)
  7058  0F66  300C               	movlw	12
  7059  0F67  026E               	subwf	vPutSampleDataIntoTable@ucChannelZeroLength,w
  7060  0F68  1803               	skipnc
  7061  0F69  2F6E               	goto	i1l4675
  7062                           
  7063                           ;common.c: 122: {
  7064                           ;common.c: 123: uiSampleChannelZero[ucChannelZeroLength] = uiSampleData;
  7065  0F6A  1003               	clrc
  7066  0F6B  27F0               	fcall	PL3	;call to abstracted procedure
  7067                           
  7068                           ;common.c: 125: ucChannelZeroLength++;
  7069  0F6C  0AEE               	incf	vPutSampleDataIntoTable@ucChannelZeroLength,f
  7070                           
  7071                           ;common.c: 126: }
  7072  0F6D  0008               	return
  7073  0F6E                     i1l4675:	
  7074                           
  7075                           ;common.c: 127: else
  7076                           ;common.c: 128: {
  7077                           ;common.c: 129: ucChannelZeroLength = 0;
  7078  0F6E  01EE               	clrf	vPutSampleDataIntoTable@ucChannelZeroLength
  7079                           
  7080                           ;common.c: 131: uiSampleChannelZero[ucChannelZeroLength] = uiSampleData;
  7081  0F6F  1003               	clrc
  7082  0F70  27F0               	fcall	PL3	;call to abstracted procedure
  7083  0F71  0008               	return
  7084  0F72                     i1l4679:	
  7085                           
  7086                           ;common.c: 134: else if(channel == 2)
  7087  0F72  0876               	movf	vPutSampleDataIntoTable@channel,w
  7088  0F73  3A02               	xorlw	2
  7089  0F74  1D03               	skipz
  7090  0F75  2F86               	goto	i1l4691
  7091                           
  7092                           ;common.c: 135: {
  7093                           ;common.c: 136: if(ucChannelSecondLength < 12)
  7094  0F76  300C               	movlw	12
  7095  0F77  026C               	subwf	vPutSampleDataIntoTable@ucChannelSecondLength,w
  7096  0F78  1803               	skipnc
  7097  0F79  2F80               	goto	i1l4687
  7098                           
  7099                           ;common.c: 137: {
  7100                           ;common.c: 138: uiSampleChannelSecond[ucChannelSecondLength] = uiSampleData;
  7101  0F7A  1003               	clrc
  7102  0F7B  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelSecondLength,w
  7103  0F7C  3EA8               	addlw	_uiSampleChannelSecond& (0+255)
  7104  0F7D  27E8               	fcall	PL2	;call to abstracted procedure
  7105                           
  7106                           ;common.c: 140: ucChannelSecondLength++;
  7107  0F7E  0AEC               	incf	vPutSampleDataIntoTable@ucChannelSecondLength,f
  7108                           
  7109                           ;common.c: 141: }
  7110  0F7F  0008               	return
  7111  0F80                     i1l4687:	
  7112                           
  7113                           ;common.c: 142: else
  7114                           ;common.c: 143: {
  7115                           ;common.c: 144: ucChannelSecondLength = 0;
  7116  0F80  01EC               	clrf	vPutSampleDataIntoTable@ucChannelSecondLength
  7117                           
  7118                           ;common.c: 146: uiSampleChannelSecond[ucChannelSecondLength] = uiSampleData;
  7119  0F81  1003               	clrc
  7120  0F82  0D6C               	rlf	vPutSampleDataIntoTable@ucChannelSecondLength,w
  7121  0F83  3EA8               	addlw	_uiSampleChannelSecond& (0+255)
  7122  0F84  27E8               	fcall	PL2	;call to abstracted procedure
  7123  0F85  0008               	return
  7124  0F86                     i1l4691:	
  7125                           
  7126                           ;common.c: 149: else if(channel == 5)
  7127  0F86  0876               	movf	vPutSampleDataIntoTable@channel,w
  7128  0F87  3A05               	xorlw	5
  7129  0F88  1D03               	skipz
  7130  0F89  2F9A               	goto	i1l4703
  7131                           
  7132                           ;common.c: 150: {
  7133                           ;common.c: 151: if(ucChannelFifthLength < 12)
  7134  0F8A  300C               	movlw	12
  7135  0F8B  026B               	subwf	vPutSampleDataIntoTable@ucChannelFifthLength,w
  7136  0F8C  1803               	skipnc
  7137  0F8D  2F94               	goto	i1l4699
  7138                           
  7139                           ;common.c: 152: {
  7140                           ;common.c: 153: uiSampleChannelFifth[ucChannelFifthLength] = uiSampleData;
  7141  0F8E  1003               	clrc
  7142  0F8F  0D6B               	rlf	vPutSampleDataIntoTable@ucChannelFifthLength,w
  7143  0F90  3E90               	addlw	_uiSampleChannelFifth& (0+255)
  7144  0F91  27E8               	fcall	PL2	;call to abstracted procedure
  7145                           
  7146                           ;common.c: 155: ucChannelFifthLength++;
  7147  0F92  0AEB               	incf	vPutSampleDataIntoTable@ucChannelFifthLength,f
  7148                           
  7149                           ;common.c: 156: }
  7150  0F93  0008               	return
  7151  0F94                     i1l4699:	
  7152                           
  7153                           ;common.c: 157: else
  7154                           ;common.c: 158: {
  7155                           ;common.c: 159: ucChannelFifthLength = 0;
  7156  0F94  01EB               	clrf	vPutSampleDataIntoTable@ucChannelFifthLength
  7157                           
  7158                           ;common.c: 161: uiSampleChannelFifth[ucChannelFifthLength] = uiSampleData;
  7159  0F95  1003               	clrc
  7160  0F96  0D6B               	rlf	vPutSampleDataIntoTable@ucChannelFifthLength,w
  7161  0F97  3E90               	addlw	_uiSampleChannelFifth& (0+255)
  7162  0F98  27E8               	fcall	PL2	;call to abstracted procedure
  7163  0F99  0008               	return
  7164  0F9A                     i1l4703:	
  7165                           
  7166                           ;common.c: 164: else if(channel == 6)
  7167  0F9A  0876               	movf	vPutSampleDataIntoTable@channel,w
  7168  0F9B  3A06               	xorlw	6
  7169  0F9C  1D03               	skipz
  7170  0F9D  2FAE               	goto	i1l4715
  7171                           
  7172                           ;common.c: 165: {
  7173                           ;common.c: 166: if(ucChannelSixthLength < 12)
  7174  0F9E  300C               	movlw	12
  7175  0F9F  026D               	subwf	vPutSampleDataIntoTable@ucChannelSixthLength,w
  7176  0FA0  1803               	skipnc
  7177  0FA1  2FA8               	goto	i1l4711
  7178                           
  7179                           ;common.c: 167: {
  7180                           ;common.c: 168: uiSampleChannelSixth[ucChannelSixthLength] = uiSampleData;
  7181  0FA2  1003               	clrc
  7182  0FA3  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelSixthLength,w
  7183  0FA4  3EC0               	addlw	_uiSampleChannelSixth& (0+255)
  7184  0FA5  27E8               	fcall	PL2	;call to abstracted procedure
  7185                           
  7186                           ;common.c: 170: ucChannelSixthLength++;
  7187  0FA6  0AED               	incf	vPutSampleDataIntoTable@ucChannelSixthLength,f
  7188                           
  7189                           ;common.c: 171: }
  7190  0FA7  0008               	return
  7191  0FA8                     i1l4711:	
  7192                           
  7193                           ;common.c: 172: else
  7194                           ;common.c: 173: {
  7195                           ;common.c: 174: ucChannelSixthLength = 0;
  7196  0FA8  01ED               	clrf	vPutSampleDataIntoTable@ucChannelSixthLength
  7197                           
  7198                           ;common.c: 176: uiSampleChannelSixth[ucChannelSixthLength] = uiSampleData;
  7199  0FA9  1003               	clrc
  7200  0FAA  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelSixthLength,w
  7201  0FAB  3EC0               	addlw	_uiSampleChannelSixth& (0+255)
  7202  0FAC  27E8               	fcall	PL2	;call to abstracted procedure
  7203  0FAD  0008               	return
  7204  0FAE                     i1l4715:	
  7205                           
  7206                           ;common.c: 179: else
  7207                           ;common.c: 180: {
  7208                           ;common.c: 181: ucChannelZeroLength = 0;
  7209  0FAE  01EE               	clrf	vPutSampleDataIntoTable@ucChannelZeroLength
  7210                           
  7211                           ;common.c: 183: ucChannelSecondLength = 0;
  7212  0FAF  01EC               	clrf	vPutSampleDataIntoTable@ucChannelSecondLength
  7213                           
  7214                           ;common.c: 185: ucChannelFifthLength = 0;
  7215  0FB0  01EB               	clrf	vPutSampleDataIntoTable@ucChannelFifthLength
  7216                           
  7217                           ;common.c: 187: ucChannelSixthLength = 0;
  7218  0FB1  01ED               	clrf	vPutSampleDataIntoTable@ucChannelSixthLength
  7219                           
  7220                           ;common.c: 189: for(int i = 0;i < 12; i++)
  7221  0FB2  01F7               	clrf	vPutSampleDataIntoTable@i
  7222  0FB3  01F8               	clrf	vPutSampleDataIntoTable@i+1
  7223  0FB4                     i1l4721:	
  7224                           
  7225                           ;common.c: 190: {
  7226                           ;common.c: 191: uiSampleChannelZero[i] = 0;
  7227  0FB4  1003               	clrc
  7228  0FB5  0D77               	rlf	vPutSampleDataIntoTable@i,w
  7229  0FB6  3EC4               	addlw	_uiSampleChannelZero& (0+255)
  7230  0FB7  0084               	movwf	4
  7231  0FB8  1383               	bcf	3,7	;select IRP bank1
  7232                           
  7233                           ;common.c: 193: uiSampleChannelSecond[i] = 0;
  7234  0FB9  27FA  158A         	fcall	PL6	;call to abstracted procedure
  7235  0FBB  3EA8               	addlw	_uiSampleChannelSecond& (0+255)
  7236  0FBC  0084               	movwf	4
  7237  0FBD  1783               	bsf	3,7	;select IRP bank3
  7238                           
  7239                           ;common.c: 195: uiSampleChannelFifth[i] = 0;
  7240  0FBE  27FA  158A         	fcall	PL6	;call to abstracted procedure
  7241  0FC0  3E90               	addlw	_uiSampleChannelFifth& (0+255)
  7242  0FC1  0084               	movwf	4
  7243                           
  7244                           ;common.c: 197: uiSampleChannelSixth[i] = 0;
  7245  0FC2  27FA  158A         	fcall	PL6	;call to abstracted procedure
  7246  0FC4  3EC0               	addlw	_uiSampleChannelSixth& (0+255)
  7247  0FC5  0084               	movwf	4
  7248  0FC6  0180               	clrf	0
  7249  0FC7  0A84               	incf	4,f
  7250  0FC8  0180               	clrf	0
  7251  0FC9  0AF7               	incf	vPutSampleDataIntoTable@i,f
  7252  0FCA  1903               	skipnz
  7253  0FCB  0AF8               	incf	vPutSampleDataIntoTable@i+1,f
  7254  0FCC  0878               	movf	vPutSampleDataIntoTable@i+1,w
  7255  0FCD  3A80               	xorlw	128
  7256  0FCE  00FF               	movwf	127
  7257  0FCF  3080               	movlw	128
  7258  0FD0  027F               	subwf	127,w
  7259  0FD1  1D03               	skipz
  7260  0FD2  2FD5               	goto	u187_25
  7261  0FD3  300C               	movlw	12
  7262  0FD4  0277               	subwf	vPutSampleDataIntoTable@i,w
  7263  0FD5                     u187_25:	
  7264  0FD5  1803               	btfsc	3,0
  7265  0FD6  0008               	return
  7266  0FD7  2FB4               	goto	i1l4721
  7267  0FD8                     __end_of_vPutSampleDataIntoTable:	
  7268  0FD8                     __ptext1091:	
  7269 ;; =============== function i1_setAD_ConvertFlag ends ============
  7270                           
  7271                           
  7272 ;; *************** function _adc_get *****************
  7273 ;; Defined at:
  7274 ;;		line 105 in file "C:\temp\dev\AK7030-OTP\periph.c"
  7275 ;; Parameters:    Size  Location     Type
  7276 ;;		None
  7277 ;; Auto vars:     Size  Location     Type
  7278 ;;  val             2    2[COMMON] unsigned int 
  7279 ;; Return value:  Size  Location     Type
  7280 ;;                  2    0[COMMON] unsigned int 
  7281 ;; Registers used:
  7282 ;;		wreg
  7283 ;; Tracked objects:
  7284 ;;		On entry : 60/20
  7285 ;;		On exit  : 60/20
  7286 ;;		Unchanged: FFF9F/0
  7287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7288 ;;      Params:         2       0       0       0       0
  7289 ;;      Locals:         2       0       0       0       0
  7290 ;;      Temps:          0       0       0       0       0
  7291 ;;      Totals:         4       0       0       0       0
  7292 ;;Total ram usage:        4 bytes
  7293 ;; Hardware stack levels used:    1
  7294 ;; This function calls:
  7295 ;;		Nothing
  7296 ;; This function is called by:
  7297 ;;		_ISR
  7298 ;; This function uses a non-reentrant model
  7299 ;;
  7300  0FD8                     _adc_get:	
  7301                           
  7302                           ;periph.c: 106: unsigned int val;
  7303                           ;periph.c: 107: val = (ADRESH<<8) | ADRESL;
  7304                           
  7305                           ; Regs used in _adc_get: [wreg]
  7306  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  7307  0FD9  081E               	movf	30,w	;volatile
  7308  0FDA  00F3               	movwf	adc_get@val+1
  7309  0FDB  01F2               	clrf	adc_get@val
  7310  0FDC  1683               	bsf	3,5	;RP0=1, select bank1
  7311  0FDD  081E               	movf	30,w	;volatile
  7312  0FDE  04F2               	iorwf	adc_get@val,f
  7313                           
  7314                           ;periph.c: 108: return val;
  7315  0FDF  0873               	movf	adc_get@val+1,w
  7316  0FE0  00F1               	movwf	?_adc_get+1
  7317  0FE1  0872               	movf	adc_get@val,w
  7318  0FE2  00F0               	movwf	?_adc_get
  7319  0FE3  0008               	return
  7320  0FE4                     __end_of_adc_get:	
  7321  0FE4                     __ptext1090:	
  7322 ;; =============== function _ISR ends ============
  7323                           
  7324                           
  7325 ;; *************** function i1_setAD_ConvertFlag *****************
  7326 ;; Defined at:
  7327 ;;		line 239 in file "C:\temp\dev\AK7030-OTP\common.c"
  7328 ;; Parameters:    Size  Location     Type
  7329 ;;  setAD_Conver    1    wreg     unsigned char 
  7330 ;; Auto vars:     Size  Location     Type
  7331 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  7332 ;; Return value:  Size  Location     Type
  7333 ;;		None               void
  7334 ;; Registers used:
  7335 ;;		wreg
  7336 ;; Tracked objects:
  7337 ;;		On entry : 60/0
  7338 ;;		On exit  : 60/20
  7339 ;;		Unchanged: FFF9F/0
  7340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7341 ;;      Params:         0       0       0       0       0
  7342 ;;      Locals:         1       0       0       0       0
  7343 ;;      Temps:          0       0       0       0       0
  7344 ;;      Totals:         1       0       0       0       0
  7345 ;;Total ram usage:        1 bytes
  7346 ;; Hardware stack levels used:    1
  7347 ;; This function calls:
  7348 ;;		Nothing
  7349 ;; This function is called by:
  7350 ;;		_ISR
  7351 ;; This function uses a non-reentrant model
  7352 ;;
  7353  0FE4                     i1_setAD_ConvertFlag:	
  7354                           
  7355                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  7356                           ;i1setAD_ConvertFlag@flag stored from wreg
  7357  0FE4  00F0               	movwf	i1setAD_ConvertFlag@flag
  7358                           
  7359                           ;common.c: 240: adc_convert_flag = flag;
  7360  0FE5  1683               	bsf	3,5	;RP0=1, select bank1
  7361  0FE6  00AD               	movwf	_adc_convert_flag^(0+128)
  7362  0FE7  0008               	return
  7363  0FE8                     __end_ofi1_setAD_ConvertFlag:	
  7364  0FE8                     PL2:	
  7365  0FE8  0084               	movwf	4
  7366  0FE9  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  7367  0FEA  1783               	bsf	3,7	;select IRP bank3
  7368  0FEB  0080               	movwf	0
  7369  0FEC  0A84               	incf	4,f
  7370  0FED  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  7371  0FEE  0080               	movwf	0
  7372  0FEF  0008               	return
  7373  0FF0                     PL3:	
  7374  0FF0  0D6E               	rlf	vPutSampleDataIntoTable@ucChannelZeroLength,w
  7375  0FF1  3EC4               	addlw	_uiSampleChannelZero& (0+255)
  7376  0FF2  0084               	movwf	4
  7377  0FF3  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  7378  0FF4  1383               	bcf	3,7	;select IRP bank1
  7379  0FF5  0080               	movwf	0
  7380  0FF6  0A84               	incf	4,f
  7381  0FF7  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  7382  0FF8  0080               	movwf	0
  7383  0FF9  0008               	return
  7384  0FFA                     PL6:	
  7385  0FFA  0180               	clrf	0
  7386  0FFB  0A84               	incf	4,f
  7387  0FFC  0180               	clrf	0
  7388  0FFD  1003               	clrc
  7389  0FFE  0D77               	rlf	vPutSampleDataIntoTable@i,w
  7390  0FFF  0008               	return
  7391                           
  7392                           	psect	intentry
  7393  0004                     __pintentry:	
  7394                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7395                           
  7396  0004                     interrupt_function:	
  7397  007E                     saved_w	set	btemp
  7398  0004  00FE               	movwf	btemp
  7399  0005  0E03               	swapf	3,w
  7400  0006  00F9               	movwf	??_ISR
  7401  0007  0804               	movf	4,w
  7402  0008  00FA               	movwf	??_ISR+1
  7403  0009  080A               	movf	10,w
  7404  000A  00FB               	movwf	??_ISR+2
  7405  000B  1283               	bcf	3,5	;RP0=0, select bank0
  7406  000C  1303               	bcf	3,6	;RP1=0, select bank0
  7407  000D  087F               	movf	btemp+1,w
  7408  000E  00FC               	movwf	??_ISR+3
  7409  000F  158A  2F0F         	ljmp	_ISR
  7410                           
  7411                           	psect	text1093
  7412  0000                     __ptext1093:	
  7413 ;; =============== function _vPutSampleDataIntoTable ends ============
  7414                           
  7415  007E                     btemp	set	126	;btemp
  7416  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri May 08 06:08:31 2020

                              ??_clock_config 0020                                             pc 0002  
                                          _GO 00F9                                            fsr 0004  
                    ?_timer1_interrupt_config 0070                                           l700 0000  
                                         l703 0000                                           l711 04B9  
                                         l721 04CA                                           l706 04B1  
                                         l731 0ECA                                           l716 04C1  
                                         l741 0648                                           l726 04D2  
                                         l736 0634                                           l761 0000  
                                         l746 053F                                           l843 017A  
                                         l819 00F2                                           l756 0EB1  
                                         l764 0000                                           l839 0152  
                                         l697 0000                                           l778 0065  
                                         l978 0319                                           _PA0 0028  
                                         _PA1 0029                                           _GIE 005F  
                                         _PB0 0030                                           _PA2 002A  
                                         l997 0368                                           _PB1 0031  
                                         _PA3 002B                                           _PB2 0032  
                                         _PB4 0034                                           _PA6 002E  
                                         _PB6 0036                                           _PB7 0037  
                                         _ISR 0F0F                                           fsr0 0004  
                                         indf 0000                                _ucChannel5Type 0054  
                      ??_startThreeHoursTimer 0022                                          S5851 07ED  
                                        S5853 0800                                          S5855 080E  
                                        ?_ISR 0070                            __size_of_AD_Sample 0022  
                      ?_getAdOriginalCh0Value 0046                        ?_getAdOriginalCh2Value 0046  
                                        l1132 0538                                          l1045 044B  
                                        l5003 0000                                          l2604 0000  
                                        l1820 0000                                          l2621 0000  
                                        l5013 05FD                                          l5005 0000  
                                        l5101 009B                                          l1910 0000  
                                        l2607 0000                                          l2615 0000  
                                        l1807 0000                                          l5023 0000  
                                        l5007 0000                                          l5111 0000  
                                        l5031 0000                                          l1913 0000  
                                        l5017 060E                                          l5201 0178  
                                        l5113 00AB                                          l5105 0000  
                                        l5041 0000                                          l5033 0000  
                                        l5025 0000                                          l1907 0000  
                                        l5019 061A                                          l5211 018A  
                                        l5203 017C                                          l5131 0000  
                                        l5107 00A8                                          l5043 0000  
                                        l5035 0000                                          l5027 0000  
                                        l1916 0000                                          l1852 0EB8  
                                        l1861 0000                                          l4501 0000  
                                        l5205 0180                                          l5141 0000  
                                        l5125 00C2                                          l5133 00CB  
                                        l5117 0000                                          l5109 0000  
                                        l5053 0048                                          l5045 0000  
                                        l5037 0000                                          l5029 0000  
                                        l4431 06F4                                          l1855 0000  
                                        l4503 0000                                          l5303 01F9  
                                        l5215 018C                                          l5207 0182  
                                        l5151 0000                                          l5143 0000  
                                        l5127 00C3                                          l5119 00B2  
                                        l5063 0000                                          l5047 003A  
                                        l5039 0000                                          l1864 0000  
                                        l4425 0000                                          l4433 0000  
                                        l4441 0000                                          l4505 0728  
                                        l4513 0000                                          l1873 0000  
                                        l5313 0202                                          l5217 018E  
                                        l5161 0000                                          l5153 00F5  
                                        l5145 00E3                                          l5137 00D3  
                                        l5073 0000                                          l5065 005C  
                                        l5057 0054                                          l5049 0000  
                                        l1858 0000                                          l1882 0000  
                                        l4427 0000                                          l4435 0000  
                                        l4443 0000                                          l4451 0000  
                                        l4507 0000                                          l4515 0000  
                                        l4603 0000                                          l1867 0000  
                                        l5403 028C                                          l5323 0217  
                                        l5227 0197                                          l5171 0000  
                                        l5163 0105                                          l5155 0000  
                                        l5139 00D7                                          l5091 0000  
                                        l5083 0000                                          l5067 0062  
                                        l5059 0055                                          l1956 0000  
                                        l1876 0000                                          l4429 0000  
                                        l4437 0000                                          l4445 0000  
                                        l4453 0000                                          l4461 0000  
                                        l4533 0000                                          l4605 0000  
                                        l5501 0330                                          l5405 028E  
                                        l5333 021D                                          l5325 0000  
                                        l5261 01C7                                          l5237 01A0  
                                        l5181 012E                                          l5173 0118  
                                        l5157 0000                                          l5077 0000  
                                        l5069 0066                                          l4439 0000  
                                        l4447 0000                                          l4455 0000  
                                        l4463 0000                                          l4471 0000  
                                        l4527 0000                                          l4535 0000  
                                        l4551 0000                                          l4615 0000  
                                        l4623 065C                                          l1879 0000  
                                        l5511 0000                                          l5503 0335  
                                        l5415 0297                                          l5343 023B  
                                        l5335 0229                                          l5271 01D9  
                                        l5247 01A9                                          l5167 0000  
                                        l5095 0091                                          l5087 0000  
                                        l5079 0000                                          l4449 0000  
                                        l4457 0000                                          l4465 0000  
                                        l4473 0000                                          l4481 0000  
                                        l4529 0000                                          l4545 0000  
                                        l4553 0000                                          l4625 0000  
                                        l4617 0000                                          l4801 0505  
                                        l5601 0417                                          l5521 0000  
                                        l5441 02CD                                          l5425 02A4  
                                        l5337 0231                                          l5281 01E5  
                                        l5273 01DB                                          l5257 01C2  
                                        l5193 0166                                          l5185 014D  
                                        l5177 0125                                          l5169 010D  
                                        l5097 0000                                          l5089 0083  
                                        l4459 0000                                          l4467 0000  
                                        l4475 0000                                          l4483 0000  
                                        l4491 0000                                          l4643 06C5  
                                        l4627 0000                                          l4731 0000  
                                        l4811 0000                                          l4803 0000  
                                        l5611 0000                                          l5531 0000  
                                        l5523 0000                                          l5515 0000  
                                        l5451 02D9                                          l5435 02AA  
                                        l5427 0000                                          l5347 023D  
                                        l5339 0233                                          l5283 01E7  
                                        l5267 01C9                                          l5259 0000  
                                        l5099 0000                                          l4469 0000  
                                        l4477 0000                                          l4485 0000  
                                        l4493 0000                                          l4557 0000  
                                        l4581 0000                                          l4645 0685  
                                        l4637 0684                                          l4629 0000  
                                        l4813 0000                                          l4805 0000  
                                        l5613 042E                                          l5605 0424  
                                        l5533 0392                                          l5517 0345  
                                        l5509 033C                                          l5461 02DF  
                                        l5437 02BB                                          l5381 0000  
                                        l5349 023F                                          l5293 01F0  
                                        l5277 01E3                                          l5269 01D5  
                                        l5197 016F                                          l5189 015C  
                                        l4479 0000                                          l4487 0000  
                                        l4495 0000                                          l4559 0000  
                                        l4575 0000                                          l4591 0000  
                                        l4663 0000                                          l4647 06C7  
                                        l4727 0000                                          l4823 0000  
                                        l4815 0000                                          l4807 0000  
                                        l4903 0000                                          l5623 0000  
                                        l5607 0426                                          l5551 0000  
                                        l5543 03A4                                          l5535 0395  
                                        l5519 0000                                          l5471 02E5  
                                        l5463 0000                                          l5439 02CB  
                                        l5391 0274                                          l5359 0248  
                                        l5527 0350                                          l4497 0000  
                                        l4489 0000                                          l4569 0000  
                                        l4577 0000                                          l4657 0000  
                                        l4649 0000                                          l4825 0000  
                                        l4817 0518                                          l4809 050D  
                                        l4833 0526                                          l4913 0000  
                                        l4921 0576                                          l4905 0561  
                                        l5625 0000                                          l5617 043B  
                                        l5561 0000                                          l5553 03B5  
                                        l5529 0000                                          l5481 0000  
                                        l5449 02D7                                          l5393 0280  
                                        l5369 0251                                          l5633 0458  
                                        l4499 0000                                          l4659 0000  
                                        l4771 0000                                          l4827 0000  
                                        l4819 0000                                          l4835 0000  
                                        l4851 073B                                          l4843 0000  
                                        l4931 0000                                          l4923 0000  
                                        l4915 0000                                          l5619 043D  
                                        l5563 0000                                          l5547 0000  
                                        l5539 03A1                                          l5483 0311  
                                        l5475 02F3                                          l5395 0282  
                                        l5379 0262                                          l4597 0000  
                                        l4829 0000                                          l4861 0749  
                                        l4933 0588                                          l4917 0000  
                                        l4909 0000                                          l5629 044C  
                                        l5573 0000                                          l5565 0000  
                                        l5557 0000                                          l5549 03B2  
                                        l5485 0000                                          l5477 0304  
                                        l5389 0268                                          l4599 0000  
                                        l4775 0000                                          l4791 0000  
                                        l4783 0000                                          l4855 0741  
                                        l4847 0000                                          l4839 0000  
                                        l4863 0000                                          l4871 0000  
                                        l4951 0000                                          l4943 0000  
                                        l4927 0000                                          l5575 03DA  
                                        l5559 0000                                          l5567 03C9  
                                        l5495 0000                                          l5487 0313  
                                        l5399 028A                                          _ADIE 046A  
                                        _ADIF 006A                                          l4769 04D4  
                                        l4793 04FC                                          l4785 0000  
                                        l4865 0000                                          l4873 0000  
                                        l4953 0000                                          l4945 0000  
                                        l4937 0000                                          l4929 0585  
                                        l4881 0000                                          l5497 0000  
                                        l4779 0000                                          l4795 0000  
                                        l4787 04EF                                          l4859 0748  
                                        l4867 0000                                          l4875 0000  
                                        l4971 05C2                                          l4963 05B9  
                                        l4955 0000                                          l4947 059C  
                                        l4939 0592                                          l4891 0000  
                                        l4883 0542                                          l5595 03E3  
                                        l5499 032C                                          l4789 0000  
                                        l4869 0000                                          l4981 0000  
                                        l4973 0000                                          l4965 05BB  
                                        l4957 0000                                          l4949 059F  
                                        l4893 0552                                          l5597 03EF  
                                        l4799 0000                                          l4879 0000  
                                        l4991 0000                                          l4983 05D3  
                                        l4975 05C9                                          l4959 05AD  
                                        l4887 0000                                          l5599 0000  
                                        l4993 05E3                                          l4969 0000  
                                        l4897 0000                                          l4889 054F  
                                        l4987 0000                                          l4979 05CF  
                                        l4899 0559                                          l4997 0000  
                                        l4989 05E0                                          l4999 05F0  
                                        _ADON 00F8                        ?_getAdOriginalCh5Value 0046  
                      ?_getAdOriginalCh6Value 0046                 startTwelveHourTimer@uiSetTime 0020  
                                        u2435 0140                                          u2445 014B  
                                        u1745 067F                                          u1755 06A6  
                                        u1765 0692                                          _PEIE 005E  
           vHandle20sTimeron@ucMoreThanP3sCnt 00BC             vHandle20sTimeron@ucMoreThanP8sCnt 00BD  
                                        _main 0013                             _vHandle20sTimeron 0541  
                                        btemp 007E                                _vPause20sTimer 0650  
                     _clearTwentySecondsTimer 06EC                                          start 0011  
                          ?_vHandle20sTimeron 0070                             main@ucTimerDelay1 005F  
                           main@ucTimerDelay2 0060                             main@ucTimerDelay3 0061  
                           main@ucTimerDelay4 0062                             main@ucTimerCntP3s 005D  
                                       ??_ISR 0079                    __end_of_isPermitSampleTime 0EA4  
                         ??_vHandle20sTimeron 0048                                 main@bInitFlag 0056  
                         _sampleChannelSelect 0051                                         ?_main 0070  
                                       _CLKPR 0108                                         _T1CON 0010  
                             __end_of_adc_get 0FE4                                         _PBOD7 0C47  
                 vHandle20sTimerOut@ucTimeCnt 007D                                         _TMR1H 000F  
                                       _TMR1L 000E                         setAD_ConvertFlag@flag 0020  
                          _vHandle20sTimerOut 04E7                       _vPutSampleDataIntoTable 0F63  
                             __end_of_initPin 0789                          vPause20sTimer@bValue 0020  
                                       _timer 00AF                     __end_of_vHandle20sTimeron 0624  
                                       pclath 000A               __size_of_startTwentyMinuteTimer 0014  
                      __end_of_vPause20sTimer 0655                                         status 0003  
                                       wtemp0 007E                           ?_vHandle20sTimerOut 0070  
               __size_of_startTwelveHourTimer 0014                          __end_of_clrSampeTime 0800  
                       __end_of_clearAllTimer 04DB                                  __end_of_main 0475  
                      __size_of_adc_test_init 0015                             __end_of_AD_Sample 074D  
                                      ??_main 0048                          ??_vHandle20sTimerOut 0021  
                        _clearPinPortAndTimer 0489                                        _ADCON0 001F  
                                      _ADCON1 009F                          __end_of_clock_config 0EBB  
                                      _ADRESH 001E                                        _ADRESL 009E  
                                      _CLKPCE 0847                                        i1l2624 0000  
                                      i1l1867 0000                                        i1l1963 0F24  
                                      i1l1964 0F2E                                        i1l4701 0000  
                                      i1l1965 0F3B                                        i1l4711 0FA8  
                                      i1l4703 0F9A                                        i1l1968 0F56  
                                      i1l4721 0FB4                                        i1l4713 0000  
                                      i1l4723 0000                                        i1l4715 0FAE  
                                      i1l4725 0000                                        i1l4709 0000  
                                      i1l4733 0000                                        i1l4743 0000  
                                      i1l4673 0000                                        i1l4761 0000  
                                      i1l4737 0000                                        i1l4691 0F86  
                                      i1l4675 0F6E                                        i1l4667 0000  
                                      i1l4763 0000                                        i1l4739 0000  
                                      i1l4755 0F45                                        i1l4685 0000  
                                      i1l4677 0000                                        i1l4687 0F80  
                                      i1l4679 0F72                                        i1l4767 0000  
                                      i1l4759 0000                                        i1l4697 0000  
                                      i1l4689 0000                                        i1l4699 0F94  
                                      u187_25 0FD5                     ??_clearTwentySecondsTimer 0020  
                                      _TMR1IE 0460                                        _TMR1IF 0060  
                      __size_of_setPB6AsInput 0003                               ?_vPause20sTimer 0070  
                           _getAD_ConvertFlag 071F                             _setAD_ConvertFlag 0723  
                                      _TRISA0 0428                                        _TRISA1 0429  
                                      _TRISB0 0430                                        _TRISA2 042A  
                                      _TRISB1 0431                                        _TRISA3 042B  
                                      _TRISB2 0432                                        _TRISB3 0433  
                                      _TRISB4 0434                                        _TRISA6 042E  
                                      _TRISB5 0435                                        _TRISA7 042F  
                                      _TRISB6 0436                                        _TRISB7 0437  
                               main@ucTimer1s 00B2                            ?_getAD_ConvertFlag 0070  
                                      _Filter 0655                            ?_setAD_ConvertFlag 0070  
                            __end_of_op1_init 0EEB                              __end_of_op2_init 0EAB  
                 ??_isFinishedThreeHoursTimer 0020           __end_of_isFinishedTwentyMinuteTimer 0EF7  
                 _isFinishedTwentyMinuteTimer 0EEB                 __size_of_clearThreeHoursTimer 0006  
                                   ??_adc_get 0072                           ??_getAD_ConvertFlag 0020  
                         ??_setAD_ConvertFlag 0020                        _startTwentyMinuteTimer 07C8  
                 __size_of_clearParaFunction1 0016                                        _setPA0 04C3  
                                      _setPA1 04CC                                        _setPA2 0EC3  
                                      _setPB0 04AB                                        _setPB1 04B3  
                                      _setPA3 062D                                        _setPB2 04BB  
                                      _setPA6 0EAB                                        _setPB4 0539  
                                      _setPB6 063F                                        clrloop 0EBC  
                            Filter@filter_buf 0026                              Filter@filter_sum 0040  
                                   ??_initPin 0020                       main@ucTimerDelayP2sLess 0063  
                     main@ucTimerDelayP2sMore 0064                     ??_vPutSampleDataIntoTable 0077  
                       ?_clearPinPortAndTimer 0070                                        saved_w 007E  
                     ??_clearTwelveHoursTimer 0020                   ?_process_AD_Converter_Value 0070  
                               _adc_test_init 074D              __size_of_startTwentySecondsTimer 0011  
                   __end_of_getAD_ConvertFlag 0723                     __end_of_setAD_ConvertFlag 0728  
                  __size_of_vHandle20sTimeron 00E3   vPutSampleDataIntoTable@ucChannelFifthLength 006B  
                          __size_of_adc_start 0003                                __pcstackCOMMON 0070  
             __end_of_clearTwentySecondsTimer 06F4                          _uiSampleChannelFifth 0190  
                               _setPB6AsInput 064D                          _uiSampleChannelSixth 01C0  
  vPutSampleDataIntoTable@ucChannelZeroLength 006E                      ??_clearTwentyMinuteTimer 0020  
              vPutSampleDataIntoTable@channel 0076                       ??_getAdOriginalCh0Value 0048  
                         main@ucTimerRightP5s 0068                     _isFinishedThreeHoursTimer 0F03  
                     ??_getAdOriginalCh2Value 0048                       ??_getAdOriginalCh5Value 0048  
                       __end_of_timer1_config 0ED6                       ??_getAdOriginalCh6Value 0048  
                              ?_adc_test_init 0020              __size_of_timer1_interrupt_config 0003  
                      main@ucTimerLessZeroP5s 0066                         __size_of_clrSampeTime 0002  
                                  __pbssBANK0 004A                                    __pbssBANK1 00A0  
                                  __pbssBANK3 0190                  __size_ofi1_setAD_ConvertFlag 0004  
                                  adc_get@val 0072               __end_of_vPutSampleDataIntoTable 0FD8  
                                     ?_Filter 0020                                    __pmaintext 0013  
                              main@uiCh5Value 0048                                    __pintentry 0004  
                         main@enumInteralStep 00B1                                    __ptext1040 0000  
                                  __ptext1041 0541                                    __ptext1050 047F  
                                  __ptext1042 0714                                    __ptext1051 04D4  
                                  __ptext1043 0495                                    __ptext1060 0EF7  
                                  __ptext1052 0723                                    __ptext1044 0489  
                                  __ptext1061 07B4                                    __ptext1053 071F  
                                  __ptext1045 072B                                    __ptext1070 07FB  
                                  __ptext1062 0EEB                                    __ptext1054 0655  
                                  __ptext1046 0624                                    __ptext1071 0ECC  
                                  __ptext1063 07FE                                    __ptext1055 0650  
                                  __ptext1047 04E7                                    __ptext1080 04C3  
                                  __ptext1072 0EB3                                    __ptext1064 0E9E  
                                  __ptext1056 0F03                                    __ptext1048 0475  
                                  __ptext1081 04BB                                    __ptext1073 064D  
                                  __ptext1065 07C8                                    __ptext1057 07A0  
                                  __ptext1049 0636                                ?_setPB6AsInput 0070  
                                     ?_setPA0 0070                                    __ptext1090 0FE4  
                                  __ptext1082 04B3                                    __ptext1074 0EAB  
                                  __ptext1066 0728                                    __ptext1058 0ED6  
                                     ?_setPA1 0070                                    __ptext1091 0FD8  
                                  __ptext1083 04AB                                    __ptext1075 0539  
                                  __ptext1067 0EE0                                    __ptext1059 07DC  
                                     ?_setPA2 0070                                       ?_setPB0 0070  
                                  __ptext1092 0F63                                    __ptext1084 0762  
                                  __ptext1076 063F                                    __ptext1068 074D  
                                     ?_setPA3 0070                                       ?_setPB1 0070  
                                  __ptext1093 0000                                    __ptext1085 06F4  
                                  __ptext1077 062D                                    __ptext1069 0EA4  
                                     ?_setPB2 0070                                    __ptext1086 06EC  
                                  __ptext1078 0EC3                                    __ptext1087 04E1  
                                  __ptext1079 04CC                                       ?_setPA6 0070  
                                     ?_setPB4 0070                                    __ptext1088 04DB  
                                  __ptext1089 0F0F                                       ?_setPB6 0070  
                      ??_clearPinPortAndTimer 0020                         __size_of_clock_config 0008  
                                     _OP1CON0 001B                                       _OP1CON1 001C  
                                     _OP1CON2 001D                                       _OP2CON0 009B  
                                     _OP2CON1 009C                                       _OP2CON2 009D  
                                _clrSampeTime 07FE                             __end_of_adc_start 072B  
                        _uiTwentySecondsTimer 00A6                                     ?_op1_init 0070  
                                   ?_op2_init 0070                            _isPermitSampleTime 0E9E  
                                     Filter@i 0045                                       Filter@j 0044  
               __size_of_startThreeHoursTimer 0014                    __size_of_getAD_ConvertFlag 0004  
                  __size_of_setAD_ConvertFlag 0005                                main@ucTimerP3s 00B5  
                              main@ucTimerP5s 0067                           ?_isPermitSampleTime 0070  
                              main@uiMaxValue 00A8                                main@uiMinValue 00AA  
                                setPA0@bValue 0020                                main@uiOldValue 004A  
                                setPA1@bValue 0020                               __size_of_Filter 0097  
                                setPA2@bValue 0020                                  setPB0@bValue 0020  
                                  _uiBigTimer 00A0                                  setPA3@bValue 0020  
                                setPB1@bValue 0020                                  setPB2@bValue 0020  
                                setPA6@bValue 0020                                  setPB4@bValue 0020  
                                _clock_config 0EB3                                       _adc_get 0FD8  
                                setPB6@bValue 0020                              _bPause20secTimer 00AE  
                             __size_of_setPA0 0009                               __size_of_setPA1 0008  
                             __size_of_setPB0 0008                               __size_of_setPA2 0009  
                             __size_of_setPB1 0008                               __size_of_setPA3 0009  
                             __size_of_setPB2 0008                               __size_of_setPB4 0008  
                             __size_of_setPA6 0008                               __size_of_setPB6 000E  
        __end_of_isFinishedTwentySecondsTimer 0EE0         __size_of_isFinishedTwentySecondsTimer 000A  
                _isFinishedTwentySecondsTimer 0ED6                          ??_isPermitSampleTime 0020  
                __end_of_startTwelveHourTimer 07C8                                     _AD_Sample 072B  
                                __size_of_ISR 0054               __size_of_clearTwentyMinuteTimer 0005  
                                     _initPin 0762                          _bSmallTimerStartFlag 004D  
                             ??_adc_test_init 0021                                    ??_op1_init 0020  
                                  ??_op2_init 0020                       _startTwentySecondsTimer 07DC  
                            ??_vPause20sTimer 0020                          end_of_initialization 079D  
                           Filter@filter_temp 003E                       ?_startTwentyMinuteTimer 0020  
                            main@ucLoaderStep 0058                               ??_setPB6AsInput 0020  
                                  ?_AD_Sample 0070                 startTwentyMinuteTimer@uiValue 0020  
                 __size_of_vHandle20sTimerOut 0052                 ?_isFinishedTwentySecondsTimer 0070  
                ??_isFinishedTwelveHoursTimer 0020                                     Filter@cir 0042  
                         _bTwentyMinStartFlag 004E                              _adc_convert_flag 00AD  
                      __size_of_clearAllTimer 0007                  __end_of_clearThreeHoursTimer 04E7  
                     main@ucTimerLargeZeroP5s 0065                __size_of_clearTwelveHoursTimer 0006  
                     _timer1_interrupt_config 07FB                 __end_of_clearTwelveHoursTimer 04E1  
           vHandle20sTimeron@ucLessThanP3sCnt 00BA             vHandle20sTimeron@ucLessThanP8sCnt 00BB  
          __size_of_isFinishedThreeHoursTimer 000C                        _clearTwentyMinuteTimer 06F4  
              __end_of_startTwentyMinuteTimer 07DC                              main@ucTimerX1P5s 00B6  
                            main@ucTimerX2P5s 00B7                        main@ucTimerZeroPoint3s 0069  
                      main@ucTimerZeroPoint5s 006A                              main@ucTimerDelay 005E  
                              __end_of_Filter 06EC                    __end_of_clearParaFunction1 04AB  
                         _bTwentySecStartFlag 004F           __size_of_isFinishedTwelveHoursTimer 000C  
 vPutSampleDataIntoTable@ucChannelSixthLength 006D                      vPutSampleDataIntoTable@i 0077  
                         i1_setAD_ConvertFlag 0FE4                                __end_of_setPA0 04CC  
                              __end_of_setPA1 04D4                                __end_of_setPB0 04B3  
                              __end_of_setPA2 0ECC                                __end_of_setPB1 04BB  
                              __end_of_setPA3 0636                                __end_of_setPB2 04C3  
                              __end_of_setPB4 0541                                __end_of_setPA6 0EB3  
                              __end_of_setPB6 064D                     ??_startTwentySecondsTimer 0020  
                         start_initialization 0789                                   __end_of_ISR 0F63  
                        main@ucTimerLessX1P5s 00B3                          main@ucTimerLessX2P5s 00B4  
              __size_of_getAdOriginalCh0Value 000A                      ?_clearTwentySecondsTimer 0070  
              __size_of_getAdOriginalCh2Value 0009                         _uiSampleChannelSecond 01A8  
               __end_of_getAdOriginalCh0Value 0489                 __end_of_getAdOriginalCh2Value 062D  
              __size_of_getAdOriginalCh5Value 000A                __size_of_getAdOriginalCh6Value 0009  
               __end_of_getAdOriginalCh5Value 047F                 __end_of_getAdOriginalCh6Value 063F  
                        ?i1_setAD_ConvertFlag 0070                          _startTwelveHourTimer 07B4  
           __end_of_isFinishedThreeHoursTimer 0F0F                            main@enumBranchStep 00B0  
                                    ??_Filter 0022                                 _clearAllTimer 04D4  
               vHandle20sTimeron@ucTimeCntP2s 00BE                                   _ucADC4_Step 0053  
              vHandle20sTimeron@ucCompareStep 00B9                                      ??_setPA0 0020  
                                    ??_setPA1 0020                                      ??_setPA2 0020  
                                    ??_setPB0 0020                                      ??_setPA3 0020  
                                    ??_setPB1 0020                                      ??_setPB2 0020  
                                    ??_setPA6 0020                                      ??_setPB4 0020  
                                    ??_setPB6 0020                 vHandle20sTimeron@ucTimerCntN1 00C1  
                    ?_vPutSampleDataIntoTable 0074                                   ??_AD_Sample 0023  
                   ??_timer1_interrupt_config 0020                                   __pbssCOMMON 007D  
                               __pcstackBANK0 0020                ??_isFinishedTwentySecondsTimer 0020  
                                   _adc_start 0728               vHandle20sTimeron@ucTimerCntLess 00BF  
                            _enumMainLoopStep 0050               vHandle20sTimeron@ucTimerCntMore 00C0  
                           __size_of_op1_init 000B                           _uiSampleChannelZero 00C4  
                           __size_of_op2_init 0007                         ??i1_setAD_ConvertFlag 0070  
                       ?_startTwelveHourTimer 0020               __end_of_startTwentySecondsTimer 07ED  
                              ?_clearAllTimer 0070                        __size_of_timer1_config 000A  
                        _clearThreeHoursTimer 04E1                  __end_of_startThreeHoursTimer 07B4  
                         _uiTwentyMinuteTimer 00A4                                      ?_adc_get 0070  
                                   __pswtext1 07ED                                     __pswtext2 0800  
                                   __pswtext3 080E            __end_of_isFinishedTwelveHoursTimer 0F03  
                  _isFinishedTwelveHoursTimer 0EF7                               ISR@ucTimer1sCnt 00AC  
                                    ?_initPin 0070                 __size_of_clearPinPortAndTimer 000C  
                                  ?_adc_start 0070                             interrupt_function 0004  
             __end_of_timer1_interrupt_config 07FE                         ?_clearThreeHoursTimer 0070  
                ?_isFinishedTwentyMinuteTimer 0070                          adc_test_init@channel 0022  
         vPutSampleDataIntoTable@uiSampleData 0074                   __size_of_isPermitSampleTime 0006  
                                _uiSmallTimer 00A2                         __end_of_adc_test_init 0762  
                               _timer1_config 0ECC                  ??_process_AD_Converter_Value 0023  
                     ?_clearTwentyMinuteTimer 0070                        ??_startTwelveHourTimer 0022  
                             ??_clearAllTimer 0020                   main@ucFourthSuffix1TimerP3s 0057  
               ??_isFinishedTwentyMinuteTimer 0020                    __end_of_vHandle20sTimerOut 0539  
                       __end_of_setPB6AsInput 0650                              __size_of_adc_get 000C  
              vHandle20sTimeron@ucTimerCntP5s 00C2           __size_of_process_AD_Converter_Value 000B  
               vHandle20sTimeron@waitLoopStep 00C3                            _clearParaFunction1 0495  
                            __size_of_initPin 0027                                Filter@tmpValue 0020  
                              ?_timer1_config 0070                                      _op1_init 0EE0  
                                    _op2_init 0EA4                __end_of_clearTwentyMinuteTimer 06F9  
                                 ??_adc_start 0020  vPutSampleDataIntoTable@ucChannelSecondLength 006C  
                        _startThreeHoursTimer 07A0                           ?_clearParaFunction1 0070  
                       _clearTwelveHoursTimer 04DB                                 __size_of_main 0462  
                     __size_of_vPause20sTimer 0005                                      clear_ram 0EBB  
                      ??_clearThreeHoursTimer 0020              __size_of_clearTwentySecondsTimer 0008  
                        ??_clearParaFunction1 0021                                 ?_clrSampeTime 0070  
     vHandle20sTimerOut@ucTimerOnBehaviorStep 00B8                                   _sampleTimes 0052  
        __size_of_isFinishedTwentyMinuteTimer 000C                         ?_startThreeHoursTimer 0020  
            __size_of_vPutSampleDataIntoTable 0075                                      intlevel1 0000  
                       _getAdOriginalCh0Value 047F                         _getAdOriginalCh2Value 0624  
                       _getAdOriginalCh5Value 0475                         _getAdOriginalCh6Value 0636  
                  ?_isFinishedThreeHoursTimer 0070                  vHandle20sTimerOut@bClearStep 0021  
                           main@ucLoaderStep1 0059                             main@ucLoaderStep2 005A  
                           main@ucLoaderStep3 005B                             main@ucLoaderStep4 005C  
                               ?_clock_config 0070                      ?_startTwentySecondsTimer 0070  
               startThreeHoursTimer@uiSetTime 0020                       i1setAD_ConvertFlag@flag 0070  
                              ??_clrSampeTime 0020                   ?_isFinishedTwelveHoursTimer 0070  
                          _bBigTimerStartFlag 004C                               ??_timer1_config 0020  
                           main@bCheckTweHour 0055                   __end_ofi1_setAD_ConvertFlag 0FE8  
          __end_of_process_AD_Converter_Value 071F                    _process_AD_Converter_Value 0714  
                      ?_clearTwelveHoursTimer 0070                      ??_startTwentyMinuteTimer 0022  
                            adc_test_init@ref 0020                  __end_of_clearPinPortAndTimer 0495  
