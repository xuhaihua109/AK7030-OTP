

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Mon Jun 17 15:32:30 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,delta=2
    14                           	psect	swtext1,local,class=CONST,delta=2
    15                           	psect	swtext2,local,class=CONST,delta=2
    16                           	psect	swtext3,local,class=CONST,delta=2
    17                           	psect	text583,local,class=CODE,delta=2
    18                           	psect	text584,local,class=CODE,delta=2
    19                           	psect	text590,local,class=CODE,delta=2
    20                           	psect	text591,local,class=CODE,delta=2
    21                           	psect	text592,local,class=CODE,delta=2
    22                           	psect	text593,local,class=CODE,delta=2
    23                           	psect	text594,local,class=CODE,delta=2
    24                           	psect	text595,local,class=CODE,delta=2
    25                           	psect	text596,local,class=CODE,delta=2
    26                           	psect	text597,local,class=CODE,delta=2
    27                           	psect	text598,local,class=CODE,delta=2
    28                           	psect	text599,local,class=CODE,delta=2
    29                           	psect	text600,local,class=CODE,delta=2
    30                           	psect	text602,local,class=CODE,delta=2
    31                           	psect	text603,local,class=CODE,delta=2
    32                           	psect	text604,local,class=CODE,delta=2
    33                           	psect	text606,local,class=CODE,delta=2
    34                           	psect	text607,local,class=CODE,delta=2
    35                           	psect	text608,local,class=CODE,delta=2
    36                           	psect	text612,local,class=CODE,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text615,local,class=CODE,delta=2
    39                           	psect	pa_nodes,global,class=CODE,delta=2
    40                           	dabs	1,0x7E,2
    41  000A                     	;#
    42                           
    43                           	psect	config
    44  2000  2FFF               	dw	12287	;#
    45  2001  3FDE               	dw	16350	;#
    46  2002  3FF8               	dw	16376	;#
    47                           
    48                           	psect	idataBANK0
    49  0000                     __pidataBANK0:	
    50  001F                     _ADCON0	set	31
    51  001E                     _ADRESH	set	30
    52  001B                     _OP1CON0	set	27
    53  001C                     _OP1CON1	set	28
    54  001D                     _OP1CON2	set	29
    55  0010                     _T1CON	set	16
    56  000F                     _TMR1H	set	15
    57  000E                     _TMR1L	set	14
    58  006A                     _ADIF	set	106
    59  00F8                     _ADON	set	248
    60  005F                     _GIE	set	95
    61  00F9                     _GO	set	249
    62  0028                     _PA0	set	40
    63  0029                     _PA1	set	41
    64  002A                     _PA2	set	42
    65  002B                     _PA3	set	43
    66  002E                     _PA6	set	46
    67  002F                     _PA7	set	47
    68  0030                     _PB0	set	48
    69  0031                     _PB1	set	49
    70  0036                     _PB6	set	54
    71  005E                     _PEIE	set	94
    72  0060                     _TMR1IF	set	96
    73  009F                     _ADCON1	set	159
    74  009E                     _ADRESL	set	158
    75  0087                     _DACCON	set	135
    76  0088                     _DACR0	set	136
    77  009B                     _OP2CON0	set	155
    78  009C                     _OP2CON1	set	156
    79  009D                     _OP2CON2	set	157
    80  046A                     _ADIE	set	1130
    81  0460                     _TMR1IE	set	1120
    82  0428                     _TRISA0	set	1064
    83  0429                     _TRISA1	set	1065
    84  042A                     _TRISA2	set	1066
    85  042B                     _TRISA3	set	1067
    86  042E                     _TRISA6	set	1070
    87  042F                     _TRISA7	set	1071
    88  0430                     _TRISB0	set	1072
    89  0431                     _TRISB1	set	1073
    90  0432                     _TRISB2	set	1074
    91  0433                     _TRISB3	set	1075
    92  0434                     _TRISB4	set	1076
    93  0435                     _TRISB5	set	1077
    94  0437                     _TRISB7	set	1079
    95  0108                     _CLKPR	set	264
    96  0847                     _CLKPCE	set	2119
    97  0C3F                     _PAOD7	set	3135
    98  0C46                     _PBOD6	set	3142
    99                           
   100                           	psect	cinit
   101  043B                     start_initialization:	
   102  043B  3020               	movlw	low __pbssBANK0
   103                           
   104                           ; Clear objects allocated to COMMON
   105  043C  01F6               	clrf	__pbssCOMMON& (0+127)
   106  043D  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   107  043E  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   108  043F  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   109  0440  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   110                           
   111                           ; Clear objects allocated to BANK0
   112  0441  1383               	bcf	3,7	;select IRP bank0
   113  0442  0084               	movwf	4
   114  0443  3056               	movlw	low (__pbssBANK0+54)
   115  0444  118A  2488         	fcall	clear_ram
   116                           
   117                           ;initializer for _sampleChannelSelect
   118  0446  300E               	movlw	14
   119  0447  00DB               	movwf	__pdataBANK0& (0+127)
   120  0448                     end_of_initialization:	
   121                           ;End of C runtime variable initialization code
   122                           
   123  0448  0183               	clrf	3
   124  0449  118A  280D         	ljmp	_main	;jump to C main() function
   125                           
   126                           	psect	bssCOMMON
   127  0076                     __pbssCOMMON:	
   128  0076                     _uiBigTimer:	
   129  0076                     	ds	2
   130  0078                     ISR@ucTimer1sCnt:	
   131  0078                     	ds	1
   132  0079                     _adc_convert_flag:	
   133  0079                     	ds	1
   134  007A                     _timer:	
   135  007A                     	ds	1
   136                           
   137                           	psect	bssBANK0
   138  0020                     __pbssBANK0:	
   139  0020                     _buffer_Sample_AD_Value:	
   140  0020                     	ds	12
   141  002C                     _adc_original_CH14_value:	
   142  002C                     	ds	2
   143  002E                     _adc_original_CH1_value:	
   144  002E                     	ds	2
   145  0030                     _adc_original_CH4_value:	
   146  0030                     	ds	2
   147  0032                     _adc_original_value:	
   148  0032                     	ds	2
   149  0034                     _multiFilterMaxValue:	
   150  0034                     	ds	2
   151  0036                     _multiFilterMinValue:	
   152  0036                     	ds	2
   153  0038                     _uiSmallTimer:	
   154  0038                     	ds	2
   155  003A                     _uiTwentySecondsTimer:	
   156  003A                     	ds	2
   157  003C                     _sampleTimes:	
   158  003C                     	ds	1
   159  003D                     main@cTimer1s_806:	
   160  003D                     	ds	1
   161  003E                     main@enumBranchStep:	
   162  003E                     	ds	1
   163  003F                     main@enumInteralStep:	
   164  003F                     	ds	1
   165  0040                     main@enumMainLoopStep:	
   166  0040                     	ds	1
   167  0041                     main@ucADC4_Step:	
   168  0041                     	ds	1
   169  0042                     main@ucChannel4Type:	
   170  0042                     	ds	1
   171  0043                     main@ucLoaderStep:	
   172  0043                     	ds	1
   173  0044                     main@ucLoaderStep1:	
   174  0044                     	ds	1
   175  0045                     main@ucLoaderStep2:	
   176  0045                     	ds	1
   177  0046                     main@ucLoaderStep3:	
   178  0046                     	ds	1
   179  0047                     main@ucLoaderStep4:	
   180  0047                     	ds	1
   181  0048                     main@ucTimer1s:	
   182  0048                     	ds	1
   183  0049                     main@ucTimer20s:	
   184  0049                     	ds	1
   185  004A                     main@ucTimerADC1ZeroP5s:	
   186  004A                     	ds	1
   187  004B                     main@ucTimerDelay:	
   188  004B                     	ds	1
   189  004C                     main@ucTimerDelay1:	
   190  004C                     	ds	1
   191  004D                     main@ucTimerDelay2:	
   192  004D                     	ds	1
   193  004E                     main@ucTimerDelay3:	
   194  004E                     	ds	1
   195  004F                     main@ucTimerDelay4:	
   196  004F                     	ds	1
   197  0050                     main@ucTimerP3s:	
   198  0050                     	ds	1
   199  0051                     main@ucTimerRightP5s:	
   200  0051                     	ds	1
   201  0052                     main@ucTimerX1P5s:	
   202  0052                     	ds	1
   203  0053                     main@ucTimerX2P5s:	
   204  0053                     	ds	1
   205  0054                     main@ucTimerZeroPoint3s:	
   206  0054                     	ds	1
   207  0055                     main@ucTimerZeroPoint5s:	
   208  0055                     	ds	1
   209                           
   210                           	psect	dataBANK0
   211  005B                     __pdataBANK0:	
   212  005B                     _sampleChannelSelect:	
   213  005B                     	ds	1
   214                           
   215                           	psect	clrtext
   216  0488                     clear_ram:	
   217                           ;	Called with FSR containing the base address, and
   218                           ;	W with the last address+1
   219                           
   220  0488  0064               	clrwdt	;clear the watchdog before getting into this loop
   221  0489                     clrloop:	
   222  0489  0180               	clrf	0	;clear RAM location pointed to by FSR
   223  048A  0A84               	incf	4,f	;increment pointer
   224  048B  0604               	xorwf	4,w	;XOR with final address
   225  048C  1903               	btfsc	3,2	;have we reached the end yet?
   226  048D  3400               	retlw	0	;all done for this memory range, return
   227  048E  0604               	xorwf	4,w	;XOR again to restore value
   228  048F  2C89               	goto	clrloop	;do the next byte
   229                           
   230                           	psect	cstackCOMMON
   231  0070                     __pcstackCOMMON:	
   232  0070                     ?_clearTwelveHoursTimer:	
   233  0070                     ?_clearThreeHoursTimer:	
   234                           ; 0 bytes @ 0x0
   235                           
   236  0070                     ?_clearTwentySecondsTimer:	
   237                           ; 0 bytes @ 0x0
   238                           
   239  0070                     ?_clock_config:	
   240                           ; 0 bytes @ 0x0
   241                           
   242  0070                     ?_timer1_config:	
   243                           ; 0 bytes @ 0x0
   244                           
   245  0070                     ?_timer1_interrupt_config:	
   246                           ; 0 bytes @ 0x0
   247                           
   248  0070                     ?_dac_init:	
   249                           ; 0 bytes @ 0x0
   250                           
   251  0070                     ?_op1_init:	
   252                           ; 0 bytes @ 0x0
   253                           
   254  0070                     ?_op2_init:	
   255                           ; 0 bytes @ 0x0
   256                           
   257  0070                     ?_adc_start:	
   258                           ; 0 bytes @ 0x0
   259                           
   260  0070                     ?_clrSampeTime:	
   261                           ; 0 bytes @ 0x0
   262                           
   263  0070                     ?_process_AD_Converter_Value:	
   264                           ; 0 bytes @ 0x0
   265                           
   266  0070                     ?_startTwelveHourTimer:	
   267                           ; 0 bytes @ 0x0
   268                           
   269  0070                     ?_startTwentySecondsTimer:	
   270                           ; 0 bytes @ 0x0
   271                           
   272  0070                     ?_startThreeHoursTimer:	
   273                           ; 0 bytes @ 0x0
   274                           
   275  0070                     ?_AD_Sample:	
   276                           ; 0 bytes @ 0x0
   277                           
   278  0070                     ?_clearAllTimer:	
   279                           ; 0 bytes @ 0x0
   280                           
   281  0070                     ?_clearPinPortAndTimer:	
   282                           ; 0 bytes @ 0x0
   283                           
   284  0070                     ?_main:	
   285                           ; 0 bytes @ 0x0
   286                           
   287  0070                     ?_setAD_ConvertFlag:	
   288                           ; 0 bytes @ 0x0
   289                           
   290  0070                     ?_ISR:	
   291                           ; 0 bytes @ 0x0
   292                           
   293  0070                     ?i1_setAD_ConvertFlag:	
   294                           ; 0 bytes @ 0x0
   295                           
   296  0070                     ??i1_setAD_ConvertFlag:	
   297                           ; 0 bytes @ 0x0
   298                           
   299  0070                     ?_isPermitSampleTime:	
   300                           ; 0 bytes @ 0x0
   301                           
   302  0070                     ?_isFinishedTwelveHoursTimer:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0070                     ?_isFinishedTwentySecondsTimer:	
   306                           ; 1 bytes @ 0x0
   307                           
   308  0070                     ?_isFinishedThreeHoursTimer:	
   309                           ; 1 bytes @ 0x0
   310                           
   311  0070                     ?_getAD_ConvertFlag:	
   312                           ; 1 bytes @ 0x0
   313                           
   314  0070                     ?_adc_get:	
   315                           ; 1 bytes @ 0x0
   316                           
   317  0070                     i1setAD_ConvertFlag@flag:	
   318                           ; 2 bytes @ 0x0
   319                           
   320                           
   321                           ; 1 bytes @ 0x0
   322  0070                     	ds	2
   323  0072                     ??_adc_get:	
   324  0072                     adc_get@val:	
   325                           ; 0 bytes @ 0x2
   326                           
   327                           
   328                           ; 2 bytes @ 0x2
   329  0072                     	ds	2
   330  0074                     ??_ISR:	
   331                           
   332                           ; 0 bytes @ 0x4
   333  0074                     	ds	2
   334                           
   335                           	psect	cstackBANK0
   336  0056                     __pcstackBANK0:	
   337  0056                     ??_clearTwelveHoursTimer:	
   338  0056                     ??_clearThreeHoursTimer:	
   339                           ; 0 bytes @ 0x0
   340                           
   341  0056                     ??_clearTwentySecondsTimer:	
   342                           ; 0 bytes @ 0x0
   343                           
   344  0056                     ??_clock_config:	
   345                           ; 0 bytes @ 0x0
   346                           
   347  0056                     ??_timer1_config:	
   348                           ; 0 bytes @ 0x0
   349                           
   350  0056                     ??_timer1_interrupt_config:	
   351                           ; 0 bytes @ 0x0
   352                           
   353  0056                     ?_adc_test_init:	
   354                           ; 0 bytes @ 0x0
   355                           
   356  0056                     ??_dac_init:	
   357                           ; 0 bytes @ 0x0
   358                           
   359  0056                     ??_op1_init:	
   360                           ; 0 bytes @ 0x0
   361                           
   362  0056                     ??_op2_init:	
   363                           ; 0 bytes @ 0x0
   364                           
   365  0056                     ??_adc_start:	
   366                           ; 0 bytes @ 0x0
   367                           
   368  0056                     ??_isPermitSampleTime:	
   369                           ; 0 bytes @ 0x0
   370                           
   371  0056                     ??_clrSampeTime:	
   372                           ; 0 bytes @ 0x0
   373                           
   374  0056                     ??_startTwelveHourTimer:	
   375                           ; 0 bytes @ 0x0
   376                           
   377  0056                     ??_isFinishedTwelveHoursTimer:	
   378                           ; 0 bytes @ 0x0
   379                           
   380  0056                     ??_startTwentySecondsTimer:	
   381                           ; 0 bytes @ 0x0
   382                           
   383  0056                     ??_isFinishedTwentySecondsTimer:	
   384                           ; 0 bytes @ 0x0
   385                           
   386  0056                     ??_startThreeHoursTimer:	
   387                           ; 0 bytes @ 0x0
   388                           
   389  0056                     ??_isFinishedThreeHoursTimer:	
   390                           ; 0 bytes @ 0x0
   391                           
   392  0056                     ??_clearAllTimer:	
   393                           ; 0 bytes @ 0x0
   394                           
   395  0056                     ??_clearPinPortAndTimer:	
   396                           ; 0 bytes @ 0x0
   397                           
   398  0056                     ??_getAD_ConvertFlag:	
   399                           ; 0 bytes @ 0x0
   400                           
   401  0056                     ??_setAD_ConvertFlag:	
   402                           ; 0 bytes @ 0x0
   403                           
   404  0056                     ?_getAdOriginalCh14Value:	
   405                           ; 0 bytes @ 0x0
   406                           
   407  0056                     ?_getAdOriginalCh1Value:	
   408                           ; 2 bytes @ 0x0
   409                           
   410  0056                     ?_getAdOriginaCh4Value:	
   411                           ; 2 bytes @ 0x0
   412                           
   413  0056                     ?_getAdOriginalValue:	
   414                           ; 2 bytes @ 0x0
   415                           
   416  0056                     setAD_ConvertFlag@flag:	
   417                           ; 2 bytes @ 0x0
   418                           
   419  0056                     adc_test_init@ref:	
   420                           ; 1 bytes @ 0x0
   421                           
   422                           
   423                           ; 1 bytes @ 0x0
   424  0056                     	ds	1
   425  0057                     ??_adc_test_init:	
   426                           
   427                           ; 0 bytes @ 0x1
   428  0057                     	ds	1
   429  0058                     ??_getAdOriginalCh14Value:	
   430  0058                     ??_getAdOriginalCh1Value:	
   431                           ; 0 bytes @ 0x2
   432                           
   433  0058                     ??_getAdOriginaCh4Value:	
   434                           ; 0 bytes @ 0x2
   435                           
   436  0058                     ??_AD_Sample:	
   437                           ; 0 bytes @ 0x2
   438                           
   439  0058                     ??_getAdOriginalValue:	
   440                           ; 0 bytes @ 0x2
   441                           
   442  0058                     adc_test_init@channel:	
   443                           ; 0 bytes @ 0x2
   444                           
   445                           
   446                           ; 1 bytes @ 0x2
   447  0058                     	ds	2
   448  005A                     AD_Sample@index:	
   449                           
   450                           ; 1 bytes @ 0x4
   451  005A                     	ds	1
   452  005B                     ??_process_AD_Converter_Value:	
   453  005B                     ??_main:	
   454                           ; 0 bytes @ 0x5
   455                           
   456                           
   457                           	psect	maintext
   458  000D                     __pmaintext:	
   459                           ; 0 bytes @ 0x5
   460 ;;Data sizes: Strings 0, constant 0, data 1, bss 59, persistent 0 stack 0
   461 ;;Auto spaces:   Size  Autos    Used
   462 ;; COMMON          14      6      11
   463 ;; BANK0           80      5      60
   464 ;; BANK1           80      0       0
   465 ;; BANK3           96      0       0
   466 ;; BANK2           96      0       0
   467 ;;
   468 ;; Pointer list with targets:
   469 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   470 ;;
   471 ;; ?_getAdOriginalCh14Value	unsigned int  size(1) Largest target is 0
   472 ;;
   473 ;; ?_getAdOriginaCh4Value	unsigned int  size(1) Largest target is 0
   474 ;;
   475 ;; ?_getAdOriginalCh1Value	unsigned int  size(1) Largest target is 0
   476 ;;
   477 ;; ?_getAdOriginalValue	unsigned int  size(1) Largest target is 0
   478 ;;
   479 ;;
   480 ;; Critical Paths under _main in COMMON
   481 ;;
   482 ;;   None.
   483 ;;
   484 ;; Critical Paths under _ISR in COMMON
   485 ;;
   486 ;;   _ISR->_adc_get
   487 ;;
   488 ;; Critical Paths under _main in BANK0
   489 ;;
   490 ;;   _process_AD_Converter_Value->_AD_Sample
   491 ;;   _AD_Sample->_getAdOriginalValue
   492 ;;
   493 ;; Critical Paths under _ISR in BANK0
   494 ;;
   495 ;;   None.
   496 ;;
   497 ;; Critical Paths under _main in BANK1
   498 ;;
   499 ;;   None.
   500 ;;
   501 ;; Critical Paths under _ISR in BANK1
   502 ;;
   503 ;;   None.
   504 ;;
   505 ;; Critical Paths under _main in BANK3
   506 ;;
   507 ;;   None.
   508 ;;
   509 ;; Critical Paths under _ISR in BANK3
   510 ;;
   511 ;;   None.
   512 ;;
   513 ;; Critical Paths under _main in BANK2
   514 ;;
   515 ;;   None.
   516 ;;
   517 ;; Critical Paths under _ISR in BANK2
   518 ;;
   519 ;;   None.
   520 ;;
   521 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   522 ;;
   523 ;;
   524 ;;Call Graph Tables:
   525 ;;
   526 ;; ---------------------------------------------------------------------------------
   527 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   528 ;; ---------------------------------------------------------------------------------
   529 ;; (0) _main                                                 0     0      0     178
   530 ;;                       _clock_config
   531 ;;                      _timer1_config
   532 ;;            _timer1_interrupt_config
   533 ;;                      _adc_test_init
   534 ;;                           _dac_init
   535 ;;                           _op1_init
   536 ;;                           _op2_init
   537 ;;                          _adc_start
   538 ;;                 _isPermitSampleTime
   539 ;;                       _clrSampeTime
   540 ;;         _process_AD_Converter_Value
   541 ;;             _getAdOriginalCh14Value
   542 ;;               _clearPinPortAndTimer
   543 ;;              _getAdOriginalCh1Value
   544 ;;               _startTwelveHourTimer
   545 ;;         _isFinishedTwelveHoursTimer
   546 ;;            _startTwentySecondsTimer
   547 ;;               _getAdOriginaCh4Value
   548 ;;       _isFinishedTwentySecondsTimer
   549 ;;               _startThreeHoursTimer
   550 ;;          _isFinishedThreeHoursTimer
   551 ;;               _clearThreeHoursTimer
   552 ;;                      _clearAllTimer
   553 ;; ---------------------------------------------------------------------------------
   554 ;; (1) _process_AD_Converter_Value                           0     0      0     134
   555 ;;                  _getAD_ConvertFlag
   556 ;;                  _setAD_ConvertFlag
   557 ;;                          _AD_Sample
   558 ;;                      _adc_test_init
   559 ;;                          _adc_start
   560 ;; ---------------------------------------------------------------------------------
   561 ;; (1) _clearPinPortAndTimer                                 0     0      0       0
   562 ;;                      _clearAllTimer
   563 ;; ---------------------------------------------------------------------------------
   564 ;; (2) _AD_Sample                                            3     3      0      68
   565 ;;                                              2 BANK0      3     3      0
   566 ;;                 _getAdOriginalValue
   567 ;; ---------------------------------------------------------------------------------
   568 ;; (1) _clearAllTimer                                        0     0      0       0
   569 ;;              _clearTwelveHoursTimer
   570 ;;               _clearThreeHoursTimer
   571 ;;            _clearTwentySecondsTimer
   572 ;; ---------------------------------------------------------------------------------
   573 ;; (3) _getAdOriginalValue                                   2     0      2       0
   574 ;;                                              0 BANK0      2     0      2
   575 ;; ---------------------------------------------------------------------------------
   576 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   577 ;;                                              0 BANK0      1     1      0
   578 ;; ---------------------------------------------------------------------------------
   579 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   580 ;; ---------------------------------------------------------------------------------
   581 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   582 ;; ---------------------------------------------------------------------------------
   583 ;; (1) _startThreeHoursTimer                                 0     0      0       0
   584 ;; ---------------------------------------------------------------------------------
   585 ;; (1) _isFinishedTwentySecondsTimer                         0     0      0       0
   586 ;; ---------------------------------------------------------------------------------
   587 ;; (1) _getAdOriginaCh4Value                                 2     0      2       0
   588 ;;                                              0 BANK0      2     0      2
   589 ;; ---------------------------------------------------------------------------------
   590 ;; (1) _startTwentySecondsTimer                              0     0      0       0
   591 ;; ---------------------------------------------------------------------------------
   592 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   593 ;; ---------------------------------------------------------------------------------
   594 ;; (1) _startTwelveHourTimer                                 0     0      0       0
   595 ;; ---------------------------------------------------------------------------------
   596 ;; (1) _getAdOriginalCh1Value                                2     0      2       0
   597 ;;                                              0 BANK0      2     0      2
   598 ;; ---------------------------------------------------------------------------------
   599 ;; (1) _getAdOriginalCh14Value                               2     0      2       0
   600 ;;                                              0 BANK0      2     0      2
   601 ;; ---------------------------------------------------------------------------------
   602 ;; (1) _clrSampeTime                                         0     0      0       0
   603 ;; ---------------------------------------------------------------------------------
   604 ;; (1) _isPermitSampleTime                                   0     0      0       0
   605 ;; ---------------------------------------------------------------------------------
   606 ;; (2) _adc_start                                            0     0      0       0
   607 ;; ---------------------------------------------------------------------------------
   608 ;; (1) _op2_init                                             0     0      0       0
   609 ;; ---------------------------------------------------------------------------------
   610 ;; (1) _op1_init                                             0     0      0       0
   611 ;; ---------------------------------------------------------------------------------
   612 ;; (1) _dac_init                                             0     0      0       0
   613 ;; ---------------------------------------------------------------------------------
   614 ;; (2) _adc_test_init                                        3     2      1      44
   615 ;;                                              0 BANK0      3     2      1
   616 ;; ---------------------------------------------------------------------------------
   617 ;; (1) _timer1_interrupt_config                              0     0      0       0
   618 ;; ---------------------------------------------------------------------------------
   619 ;; (1) _timer1_config                                        0     0      0       0
   620 ;; ---------------------------------------------------------------------------------
   621 ;; (1) _clock_config                                         0     0      0       0
   622 ;; ---------------------------------------------------------------------------------
   623 ;; (2) _clearTwentySecondsTimer                              0     0      0       0
   624 ;; ---------------------------------------------------------------------------------
   625 ;; (2) _clearThreeHoursTimer                                 0     0      0       0
   626 ;; ---------------------------------------------------------------------------------
   627 ;; (2) _clearTwelveHoursTimer                                0     0      0       0
   628 ;; ---------------------------------------------------------------------------------
   629 ;; Estimated maximum stack depth 3
   630 ;; ---------------------------------------------------------------------------------
   631 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   632 ;; ---------------------------------------------------------------------------------
   633 ;; (4) _ISR                                                  2     2      0      97
   634 ;;                                              4 COMMON     2     2      0
   635 ;;                i1_setAD_ConvertFlag
   636 ;;                            _adc_get
   637 ;; ---------------------------------------------------------------------------------
   638 ;; (5) i1_setAD_ConvertFlag                                  1     1      0      73
   639 ;;                                              0 COMMON     1     1      0
   640 ;; ---------------------------------------------------------------------------------
   641 ;; (5) _adc_get                                              4     2      2      24
   642 ;;                                              0 COMMON     4     2      2
   643 ;; ---------------------------------------------------------------------------------
   644 ;; Estimated maximum stack depth 5
   645 ;; ---------------------------------------------------------------------------------
   646 ;; Call Graph Graphs:
   647 ;; _main (ROOT)
   648 ;;   _clock_config
   649 ;;   _timer1_config
   650 ;;   _timer1_interrupt_config
   651 ;;   _adc_test_init
   652 ;;   _dac_init
   653 ;;   _op1_init
   654 ;;   _op2_init
   655 ;;   _adc_start
   656 ;;   _isPermitSampleTime
   657 ;;   _clrSampeTime
   658 ;;   _process_AD_Converter_Value
   659 ;;     _getAD_ConvertFlag
   660 ;;     _setAD_ConvertFlag
   661 ;;     _AD_Sample
   662 ;;       _getAdOriginalValue
   663 ;;     _adc_test_init
   664 ;;     _adc_start
   665 ;;   _getAdOriginalCh14Value
   666 ;;   _clearPinPortAndTimer
   667 ;;     _clearAllTimer
   668 ;;       _clearTwelveHoursTimer
   669 ;;       _clearThreeHoursTimer
   670 ;;       _clearTwentySecondsTimer
   671 ;;   _getAdOriginalCh1Value
   672 ;;   _startTwelveHourTimer
   673 ;;   _isFinishedTwelveHoursTimer
   674 ;;   _startTwentySecondsTimer
   675 ;;   _getAdOriginaCh4Value
   676 ;;   _isFinishedTwentySecondsTimer
   677 ;;   _startThreeHoursTimer
   678 ;;   _isFinishedThreeHoursTimer
   679 ;;   _clearThreeHoursTimer
   680 ;;   _clearAllTimer
   681 ;;     _clearTwelveHoursTimer
   682 ;;     _clearThreeHoursTimer
   683 ;;     _clearTwentySecondsTimer
   684 ;;
   685 ;; _ISR (ROOT)
   686 ;;   i1_setAD_ConvertFlag
   687 ;;   _adc_get
   688 ;;
   689 ;; Address spaces:
   690 ;;Name               Size   Autos  Total    Cost      Usage
   691 ;;BANK3               60      0       0      10        0.0%
   692 ;;BITBANK3            60      0       0       9        0.0%
   693 ;;SFR3                 0      0       0       4        0.0%
   694 ;;BITSFR3              0      0       0       4        0.0%
   695 ;;BANK2               60      0       0      12        0.0%
   696 ;;BITBANK2            60      0       0      11        0.0%
   697 ;;SFR2                 0      0       0       5        0.0%
   698 ;;BITSFR2              0      0       0       5        0.0%
   699 ;;SFR1                 0      0       0       2        0.0%
   700 ;;BITSFR1              0      0       0       2        0.0%
   701 ;;BANK1               50      0       0       8        0.0%
   702 ;;BITBANK1            50      0       0       7        0.0%
   703 ;;CODE                 0      0       0       0        0.0%
   704 ;;DATA                 0      0      4E       6        0.0%
   705 ;;ABS                  0      0      47       3        0.0%
   706 ;;NULL                 0      0       0       0        0.0%
   707 ;;STACK                0      0       7       2        0.0%
   708 ;;BANK0               50      5      3C       5       75.0%
   709 ;;BITBANK0            50      0       0       4        0.0%
   710 ;;SFR0                 0      0       0       1        0.0%
   711 ;;BITSFR0              0      0       0       1        0.0%
   712 ;;COMMON               E      6       B       1       78.6%
   713 ;;BITCOMMON            E      0       0       0        0.0%
   714                           
   715                           
   716 ;; *************** function _main *****************
   717 ;; Defined at:
   718 ;;		line 105 in file "C:\190604\AK7030-OTP\main.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;		None
   721 ;; Auto vars:     Size  Location     Type
   722 ;;		None
   723 ;; Return value:  Size  Location     Type
   724 ;;		None               void
   725 ;; Registers used:
   726 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   727 ;; Tracked objects:
   728 ;;		On entry : 17F/0
   729 ;;		On exit  : 60/0
   730 ;;		Unchanged: FFE00/0
   731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   732 ;;      Params:         0       0       0       0       0
   733 ;;      Locals:         0       0       0       0       0
   734 ;;      Temps:          0       0       0       0       0
   735 ;;      Totals:         0       0       0       0       0
   736 ;;Total ram usage:        0 bytes
   737 ;; Hardware stack levels required when called:    5
   738 ;; This function calls:
   739 ;;		_clock_config
   740 ;;		_timer1_config
   741 ;;		_timer1_interrupt_config
   742 ;;		_adc_test_init
   743 ;;		_dac_init
   744 ;;		_op1_init
   745 ;;		_op2_init
   746 ;;		_adc_start
   747 ;;		_isPermitSampleTime
   748 ;;		_clrSampeTime
   749 ;;		_process_AD_Converter_Value
   750 ;;		_getAdOriginalCh14Value
   751 ;;		_clearPinPortAndTimer
   752 ;;		_getAdOriginalCh1Value
   753 ;;		_startTwelveHourTimer
   754 ;;		_isFinishedTwelveHoursTimer
   755 ;;		_startTwentySecondsTimer
   756 ;;		_getAdOriginaCh4Value
   757 ;;		_isFinishedTwentySecondsTimer
   758 ;;		_startThreeHoursTimer
   759 ;;		_isFinishedThreeHoursTimer
   760 ;;		_clearThreeHoursTimer
   761 ;;		_clearAllTimer
   762 ;; This function is called by:
   763 ;;		Startup code after reset
   764 ;; This function uses a non-reentrant model
   765 ;;
   766  000D                     _main:	
   767                           
   768                           ;main.c: 106: enum setp_Adc4
   769                           ;main.c: 107: {
   770                           ;main.c: 108: ADC4_STEP_INIT = 0,
   771                           ;main.c: 109: ADC4_STEP_FIRST,
   772                           ;main.c: 110: ADC4_STEP_SECOND,
   773                           ;main.c: 111: ADC4_STEP_THIRD,
   774                           ;main.c: 112: ADC4_STEP_FOURTH,
   775                           ;main.c: 113: ADC4_STEP_FIFTH,
   776                           ;main.c: 114: ADC4_STEP_SIXTH,
   777                           ;main.c: 115: };
   778                           ;main.c: 118: static unsigned char ucWaitTime1S = 0;
   779                           ;main.c: 120: static unsigned char ucWaitTimeO3s = 0;
   780                           ;main.c: 122: static unsigned char ucSmallTimerActionFlag = 0;
   781                           ;main.c: 124: static unsigned char ucSetSmallActionFlag = 0;
   782                           
   783                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   784  000D  1683               	bsf	3,5	;RP0=1, select bank1
   785  000E  1005               	bcf	5,0
   786                           
   787                           ;main.c: 127: TRISA1 = 0;
   788  000F  1085               	bcf	5,1
   789                           
   790                           ;main.c: 128: TRISA2 = 0;
   791  0010  1105               	bcf	5,2
   792                           
   793                           ;main.c: 129: TRISA3 = 0;
   794  0011  1185               	bcf	5,3
   795                           
   796                           ;main.c: 130: TRISB0 = 0;
   797  0012  1006               	bcf	6,0
   798                           
   799                           ;main.c: 131: TRISB1 = 0;
   800  0013  1086               	bcf	6,1
   801                           
   802                           ;main.c: 132: TRISA6 = 0;
   803  0014  1305               	bcf	5,6
   804                           
   805                           ;main.c: 133: TRISA7 = 0;
   806  0015  1385               	bcf	5,7
   807                           
   808                           ;main.c: 135: PBOD6 = 1;
   809  0016  1703               	bsf	3,6	;RP1=1, select bank3
   810  0017  1708               	bsf	8,6
   811                           
   812                           ;main.c: 137: PA0 = 0;
   813  0018  1283               	bcf	3,5	;RP0=0, select bank0
   814  0019  1303               	bcf	3,6	;RP1=0, select bank0
   815  001A  1005               	bcf	5,0
   816                           
   817                           ;main.c: 138: PA1 = 0;
   818  001B  1085               	bcf	5,1
   819                           
   820                           ;main.c: 139: PA2 = 0;
   821  001C  1105               	bcf	5,2
   822                           
   823                           ;main.c: 140: PA3 = 0;
   824  001D  1185               	bcf	5,3
   825                           
   826                           ;main.c: 141: PB0 = 0;
   827  001E  1006               	bcf	6,0
   828                           
   829                           ;main.c: 142: PB1 = 1;
   830  001F  1486               	bsf	6,1
   831                           
   832                           ;main.c: 143: PA6 = 0;
   833  0020  1305               	bcf	5,6
   834                           
   835                           ;main.c: 144: PA7 = 0;
   836  0021  1385               	bcf	5,7
   837                           
   838                           ;main.c: 146: TRISB2 = 1;
   839  0022  1683               	bsf	3,5	;RP0=1, select bank1
   840  0023  1506               	bsf	6,2
   841                           
   842                           ;main.c: 148: TRISB7 = 1;
   843  0024  1786               	bsf	6,7
   844                           
   845                           ;main.c: 149: TRISB4 = 1;
   846  0025  1606               	bsf	6,4
   847                           
   848                           ;main.c: 151: clock_config();
   849  0026  118A  2498  118A   	fcall	_clock_config
   850                           
   851                           ;main.c: 152: timer1_config();
   852  0029  118A  247E  118A   	fcall	_timer1_config
   853                           
   854                           ;main.c: 153: timer1_interrupt_config();
   855  002C  118A  24D8  118A   	fcall	_timer1_interrupt_config
   856                           
   857                           ;main.c: 155: adc_test_init(14,3);
   858  002F  3003               	movlw	3
   859  0030  1283               	bcf	3,5	;RP0=0, select bank0
   860  0031  00D6               	movwf	?_adc_test_init
   861  0032  300E               	movlw	14
   862  0033  118A  239C  118A   	fcall	_adc_test_init
   863                           
   864                           ;main.c: 157: dac_init();
   865  0036  118A  24CF  118A   	fcall	_dac_init
   866                           
   867                           ;main.c: 158: op1_init();
   868  0039  118A  2473  118A   	fcall	_op1_init
   869                           
   870                           ;main.c: 159: op2_init();
   871  003C  118A  2490  118A   	fcall	_op2_init
   872                           
   873                           ;main.c: 162: adc_start();
   874  003F  118A  23B1  118A   	fcall	_adc_start
   875  0042                     l3947:	
   876  0042  0064               	clrwdt	;#
   877                           
   878                           ;main.c: 197: if(isPermitSampleTime())
   879  0043  118A  24CA  118A   	fcall	_isPermitSampleTime
   880  0046  3A00               	xorlw	0
   881  0047  1903               	skipnz
   882  0048  2842               	goto	l3947
   883                           
   884                           ;main.c: 198: {
   885                           ;main.c: 199: clrSampeTime();
   886  0049  118A  24DB  118A   	fcall	_clrSampeTime
   887                           
   888                           ;main.c: 200: process_AD_Converter_Value();
   889  004C  118A  2310  118A   	fcall	_process_AD_Converter_Value
   890                           
   891                           ;main.c: 202: switch(enumMainLoopStep)
   892  004F  2AF2               	goto	l4443
   893  0050                     l3955:	
   894                           
   895                           ;main.c: 205: {
   896                           ;main.c: 206: static unsigned char ucTimerZeroPoint5s = 0;
   897                           ;main.c: 207: if(getAdOriginalCh14Value() > 1950)
   898  0050  118A  24C5  118A   	fcall	_getAdOriginalCh14Value
   899  0053  3007               	movlw	7
   900  0054  0257               	subwf	?_getAdOriginalCh14Value+1,w
   901  0055  309F               	movlw	159
   902  0056  1903               	skipnz
   903  0057  0256               	subwf	?_getAdOriginalCh14Value,w
   904  0058  1C03               	skipc
   905  0059  285C               	goto	l3959
   906                           
   907                           ;main.c: 208: {
   908                           ;main.c: 209: ucTimerZeroPoint5s++;
   909  005A  0AD5               	incf	main@ucTimerZeroPoint5s,f
   910                           
   911                           ;main.c: 210: }
   912  005B  285D               	goto	l3961
   913  005C                     l3959:	
   914                           
   915                           ;main.c: 211: else
   916                           ;main.c: 212: ucTimerZeroPoint5s = 0;
   917  005C  01D5               	clrf	main@ucTimerZeroPoint5s
   918  005D                     l3961:	
   919                           
   920                           ;main.c: 214: if(ucTimerZeroPoint5s >= 5)
   921  005D  3005               	movlw	5
   922  005E  0255               	subwf	main@ucTimerZeroPoint5s,w
   923  005F  1C03               	skipc
   924  0060  2842               	goto	l3947
   925                           
   926                           ;main.c: 215: {
   927                           ;main.c: 216: ucTimerZeroPoint5s = 0;
   928  0061  01D5               	clrf	main@ucTimerZeroPoint5s
   929  0062                     l3965:	
   930                           
   931                           ;main.c: 217: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
   932  0062  01C0               	clrf	main@enumMainLoopStep
   933  0063  0AC0               	incf	main@enumMainLoopStep,f
   934  0064                     l703:	
   935                           
   936                           ;main.c: 218: }
   937                           ;main.c: 219: break;
   938  0064  2842               	goto	l3947
   939  0065                     l3967:	
   940                           
   941                           ;main.c: 223: {
   942                           ;main.c: 224: static unsigned char ucTimerZeroPoint3s = 0;
   943                           ;main.c: 226: if(ucTimerZeroPoint3s < 3)
   944  0065  3003               	movlw	3
   945  0066  0254               	subwf	main@ucTimerZeroPoint3s,w
   946  0067  1803               	skipnc
   947  0068  286B               	goto	l3971
   948                           
   949                           ;main.c: 227: {
   950                           ;main.c: 228: ucTimerZeroPoint3s++;
   951  0069  0AD4               	incf	main@ucTimerZeroPoint3s,f
   952                           
   953                           ;main.c: 229: }
   954  006A  2842               	goto	l3947
   955  006B                     l3971:	
   956                           
   957                           ;main.c: 230: else
   958                           ;main.c: 231: {
   959                           ;main.c: 232: ucTimerZeroPoint3s = 0;
   960  006B  01D4               	clrf	main@ucTimerZeroPoint3s
   961                           
   962                           ;main.c: 234: if(getAdOriginalCh14Value() > 1950)
   963  006C  118A  24C5  118A   	fcall	_getAdOriginalCh14Value
   964  006F  3007               	movlw	7
   965  0070  0257               	subwf	?_getAdOriginalCh14Value+1,w
   966  0071  309F               	movlw	159
   967  0072  1903               	skipnz
   968  0073  0256               	subwf	?_getAdOriginalCh14Value,w
   969  0074  1C03               	skipc
   970  0075  2878               	goto	l3977
   971  0076                     l3975:	
   972                           
   973                           ;main.c: 235: {
   974                           ;main.c: 237: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
   975  0076  3002               	movlw	2
   976  0077  28B1               	goto	L5
   977  0078                     l3977:	
   978                           ;main.c: 238: }
   979                           
   980                           
   981                           ;main.c: 239: else
   982                           ;main.c: 240: {
   983                           ;main.c: 241: clearPinPortAndTimer();
   984  0078  118A  2426  118A   	fcall	_clearPinPortAndTimer
   985  007B  2842               	goto	l3947
   986  007C                     l712:	
   987                           ;main.c: 245: }
   988                           ;main.c: 247: case MAIN_LOOP_STEP_SECOND:
   989                           
   990  007C  3003               	movlw	3
   991                           
   992                           ;main.c: 248: {
   993                           ;main.c: 250: PA6 = 1;
   994  007D  1705               	bsf	5,6
   995                           
   996                           ;main.c: 251: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
   997  007E  28B1               	goto	L5
   998  007F                     l3981:	
   999                           ;main.c: 253: break;
  1000                           
  1001                           
  1002                           ;main.c: 257: {
  1003                           ;main.c: 258: static unsigned char ucTimerADC1ZeroP5s = 0;
  1004                           ;main.c: 260: if(getAdOriginalCh1Value() < 130)
  1005  007F  118A  24C0  118A   	fcall	_getAdOriginalCh1Value
  1006  0082  3000               	movlw	0
  1007  0083  0257               	subwf	?_getAdOriginalCh1Value+1,w
  1008  0084  3082               	movlw	130
  1009  0085  1903               	skipnz
  1010  0086  0256               	subwf	?_getAdOriginalCh1Value,w
  1011  0087  1803               	skipnc
  1012  0088  288B               	goto	l3985
  1013                           
  1014                           ;main.c: 261: {
  1015                           ;main.c: 262: ucTimerADC1ZeroP5s = 0;
  1016  0089  01CA               	clrf	main@ucTimerADC1ZeroP5s
  1017                           
  1018                           ;main.c: 264: }
  1019  008A  288C               	goto	l3987
  1020  008B                     l3985:	
  1021                           
  1022                           ;main.c: 265: else
  1023                           ;main.c: 266: {
  1024                           ;main.c: 267: ucTimerADC1ZeroP5s++;
  1025  008B  0ACA               	incf	main@ucTimerADC1ZeroP5s,f
  1026  008C                     l3987:	
  1027                           
  1028                           ;main.c: 268: }
  1029                           ;main.c: 270: if(ucTimerADC1ZeroP5s >= 1)
  1030  008C  084A               	movf	main@ucTimerADC1ZeroP5s,w
  1031  008D  1903               	btfsc	3,2
  1032  008E  2892               	goto	l3993
  1033  008F  3004               	movlw	4
  1034                           
  1035                           ;main.c: 271: {
  1036                           ;main.c: 272: ucTimerADC1ZeroP5s = 0;
  1037  0090  01CA               	clrf	main@ucTimerADC1ZeroP5s
  1038                           
  1039                           ;main.c: 273: enumMainLoopStep = MAIN_LOOP_STEP_FOURTH;
  1040  0091  28B1               	goto	L5
  1041  0092                     l3993:	
  1042                           ;main.c: 274: }
  1043                           
  1044                           
  1045                           ;main.c: 275: else
  1046                           ;main.c: 276: {
  1047                           ;main.c: 277: static unsigned char ucTimerRightP5s = 0;
  1048                           ;main.c: 279: if(getAdOriginalCh1Value() < 117)
  1049  0092  118A  24C0  118A   	fcall	_getAdOriginalCh1Value
  1050  0095  3000               	movlw	0
  1051  0096  0257               	subwf	?_getAdOriginalCh1Value+1,w
  1052  0097  3075               	movlw	117
  1053  0098  1903               	skipnz
  1054  0099  0256               	subwf	?_getAdOriginalCh1Value,w
  1055  009A  1803               	skipnc
  1056  009B  289E               	goto	l3997
  1057                           
  1058                           ;main.c: 280: {
  1059                           ;main.c: 281: ucTimerRightP5s++;
  1060  009C  0AD1               	incf	main@ucTimerRightP5s,f
  1061                           
  1062                           ;main.c: 282: }
  1063  009D  289F               	goto	l3999
  1064  009E                     l3997:	
  1065                           
  1066                           ;main.c: 283: else
  1067                           ;main.c: 284: {
  1068                           ;main.c: 285: ucTimerRightP5s = 0;
  1069  009E  01D1               	clrf	main@ucTimerRightP5s
  1070  009F                     l3999:	
  1071                           
  1072                           ;main.c: 286: }
  1073                           ;main.c: 288: if(ucTimerRightP5s >= 1)
  1074  009F  0851               	movf	main@ucTimerRightP5s,w
  1075  00A0  1903               	btfsc	3,2
  1076  00A1  2842               	goto	l3947
  1077  00A2  3008               	movlw	8
  1078                           
  1079                           ;main.c: 289: {
  1080                           ;main.c: 290: ucTimerRightP5s = 0;
  1081  00A3  01D1               	clrf	main@ucTimerRightP5s
  1082                           
  1083                           ;main.c: 291: enumMainLoopStep = MAIN_LOOP_STEP_3_HOUR_BRANCH;
  1084  00A4  28B1               	goto	L5
  1085  00A5                     l4005:	
  1086                           ;main.c: 292: }
  1087                           
  1088                           
  1089                           ;main.c: 303: {
  1090                           ;main.c: 305: startTwelveHourTimer();
  1091  00A5  118A  24BB  118A   	fcall	_startTwelveHourTimer
  1092                           
  1093                           ;main.c: 306: enumMainLoopStep = MAIN_LOOP_STEP_FIFTH;
  1094  00A8  3005               	movlw	5
  1095  00A9  28B1               	goto	L5
  1096  00AA                     l4009:	
  1097                           ;main.c: 308: break;
  1098                           
  1099                           
  1100                           ;main.c: 312: {
  1101                           ;main.c: 314: if(isFinishedTwelveHoursTimer())
  1102  00AA  118A  24B6  118A   	fcall	_isFinishedTwelveHoursTimer
  1103  00AD  3A00               	xorlw	0
  1104  00AE  1903               	skipnz
  1105  00AF  2A37               	goto	l4323
  1106  00B0                     l4011:	
  1107                           
  1108                           ;main.c: 315: {
  1109                           ;main.c: 316: enumMainLoopStep = MAIN_LOOP_STEP_12_HOUR_END;
  1110  00B0  3009               	movlw	9
  1111  00B1                     L5:	
  1112  00B1  00C0               	movwf	main@enumMainLoopStep
  1113                           
  1114                           ;main.c: 317: }
  1115  00B2  2842               	goto	l3947
  1116  00B3                     l4013:	
  1117                           
  1118                           ;main.c: 325: {
  1119                           ;main.c: 326: startTwentySecondsTimer();
  1120  00B3  118A  24D4  118A   	fcall	_startTwentySecondsTimer
  1121  00B6                     l4015:	
  1122                           
  1123                           ;main.c: 327: ucADC4_Step = ADC4_STEP_FIRST;
  1124  00B6  01C1               	clrf	main@ucADC4_Step
  1125  00B7  0AC1               	incf	main@ucADC4_Step,f
  1126                           
  1127                           ;main.c: 328: break;
  1128  00B8  2842               	goto	l3947
  1129  00B9                     l4017:	
  1130                           
  1131                           ;main.c: 332: {
  1132                           ;main.c: 333: if(getAdOriginaCh4Value() < 1911)
  1133  00B9  118A  24B1  118A   	fcall	_getAdOriginaCh4Value
  1134  00BC  3007               	movlw	7
  1135  00BD  0257               	subwf	?_getAdOriginaCh4Value+1,w
  1136  00BE  3077               	movlw	119
  1137  00BF  1903               	skipnz
  1138  00C0  0256               	subwf	?_getAdOriginaCh4Value,w
  1139  00C1  1803               	skipnc
  1140  00C2  28C5               	goto	l4021
  1141                           
  1142                           ;main.c: 334: ucChannel4Type = LESS_THAN_1911;
  1143  00C3  01C2               	clrf	main@ucChannel4Type
  1144  00C4  28EC               	goto	l737
  1145  00C5                     l4021:	
  1146                           
  1147                           ;main.c: 335: else if(getAdOriginaCh4Value() < 2067)
  1148  00C5  118A  24B1  118A   	fcall	_getAdOriginaCh4Value
  1149  00C8  3008               	movlw	8
  1150  00C9  0257               	subwf	?_getAdOriginaCh4Value+1,w
  1151  00CA  3013               	movlw	19
  1152  00CB  1903               	skipnz
  1153  00CC  0256               	subwf	?_getAdOriginaCh4Value,w
  1154  00CD  1803               	skipnc
  1155  00CE  28D2               	goto	l4025
  1156                           
  1157                           ;main.c: 336: ucChannel4Type = BETWEEN_1911_AND_2067;
  1158  00CF  01C2               	clrf	main@ucChannel4Type
  1159  00D0  0AC2               	incf	main@ucChannel4Type,f
  1160  00D1  28EC               	goto	l737
  1161  00D2                     l4025:	
  1162                           
  1163                           ;main.c: 337: else if(getAdOriginaCh4Value() < 2204)
  1164  00D2  118A  24B1  118A   	fcall	_getAdOriginaCh4Value
  1165  00D5  3008               	movlw	8
  1166  00D6  0257               	subwf	?_getAdOriginaCh4Value+1,w
  1167  00D7  309C               	movlw	156
  1168  00D8  1903               	skipnz
  1169  00D9  0256               	subwf	?_getAdOriginaCh4Value,w
  1170  00DA  1803               	skipnc
  1171  00DB  28DE               	goto	l4029
  1172                           
  1173                           ;main.c: 338: ucChannel4Type = BETWEEN_2067_AND_2204;
  1174  00DC  3002               	movlw	2
  1175  00DD  28EB               	goto	L6
  1176  00DE                     l4029:	
  1177                           
  1178                           ;main.c: 339: else if(getAdOriginaCh4Value() < 2340)
  1179  00DE  118A  24B1  118A   	fcall	_getAdOriginaCh4Value
  1180  00E1  3009               	movlw	9
  1181  00E2  0257               	subwf	?_getAdOriginaCh4Value+1,w
  1182  00E3  3024               	movlw	36
  1183  00E4  1903               	skipnz
  1184  00E5  0256               	subwf	?_getAdOriginaCh4Value,w
  1185  00E6  1803               	skipnc
  1186  00E7  28EA               	goto	l4033
  1187                           
  1188                           ;main.c: 340: ucChannel4Type = BETWEEN_2204_AND_2340;
  1189  00E8  3003               	movlw	3
  1190  00E9  28EB               	goto	L6
  1191  00EA                     l4033:	
  1192                           
  1193                           ;main.c: 341: else
  1194                           ;main.c: 342: ucChannel4Type = MORE_THAN_2340;
  1195  00EA  3004               	movlw	4
  1196  00EB                     L6:	
  1197  00EB  00C2               	movwf	main@ucChannel4Type
  1198  00EC                     l737:	
  1199                           
  1200                           ;main.c: 344: ucADC4_Step = ADC4_STEP_SECOND;
  1201  00EC  3002               	movlw	2
  1202  00ED  2A24               	goto	L8
  1203  00EE                     l752:	
  1204                           ;main.c: 359: {
  1205                           ;main.c: 360: case 0:
  1206                           
  1207                           ;main.c: 345: break;
  1208                           
  1209                           
  1210                           ;main.c: 361: {
  1211                           ;main.c: 362: PB0 = 1;
  1212  00EE  1406               	bsf	6,0
  1213  00EF                     l4035:	
  1214                           
  1215                           ;main.c: 363: ucLoaderStep++;
  1216  00EF  0AC3               	incf	main@ucLoaderStep,f
  1217                           
  1218                           ;main.c: 364: break;
  1219  00F0  2842               	goto	l3947
  1220  00F1                     l4037:	
  1221                           
  1222                           ;main.c: 368: {
  1223                           ;main.c: 369: if(ucTimerDelay >= 5)
  1224  00F1  3005               	movlw	5
  1225  00F2  024B               	subwf	main@ucTimerDelay,w
  1226  00F3  1C03               	skipc
  1227  00F4  28F8               	goto	l4045
  1228                           
  1229                           ;main.c: 370: {
  1230                           ;main.c: 371: PA0 = 1;
  1231  00F5  1405               	bsf	5,0
  1232  00F6                     l4041:	
  1233                           
  1234                           ;main.c: 372: ucTimerDelay = 0;
  1235  00F6  01CB               	clrf	main@ucTimerDelay
  1236  00F7  28EF               	goto	l4035
  1237  00F8                     l4045:	
  1238                           
  1239                           ;main.c: 375: else
  1240                           ;main.c: 376: ucTimerDelay++;
  1241  00F8  0ACB               	incf	main@ucTimerDelay,f
  1242  00F9  2842               	goto	l3947
  1243  00FA                     l4047:	
  1244                           
  1245                           ;main.c: 381: {
  1246                           ;main.c: 382: if(ucTimerDelay >= 5)
  1247  00FA  3005               	movlw	5
  1248  00FB  024B               	subwf	main@ucTimerDelay,w
  1249  00FC  1C03               	skipc
  1250  00FD  28F8               	goto	l4045
  1251                           
  1252                           ;main.c: 383: {
  1253                           ;main.c: 384: PA1= 1;
  1254  00FE  1485               	bsf	5,1
  1255  00FF  28F6               	goto	l4041
  1256  0100                     l4057:	
  1257                           
  1258                           ;main.c: 395: {
  1259                           ;main.c: 396: if(ucTimerDelay >= 5)
  1260  0100  3005               	movlw	5
  1261  0101  024B               	subwf	main@ucTimerDelay,w
  1262  0102  1C03               	skipc
  1263  0103  28F8               	goto	l4045
  1264                           
  1265                           ;main.c: 397: {
  1266                           ;main.c: 398: PA2= 1;
  1267  0104  1505               	bsf	5,2
  1268  0105  28F6               	goto	l4041
  1269  0106                     l4067:	
  1270                           
  1271                           ;main.c: 408: {
  1272                           ;main.c: 409: if(ucTimerDelay >= 5)
  1273  0106  3005               	movlw	5
  1274  0107  024B               	subwf	main@ucTimerDelay,w
  1275  0108  1C03               	skipc
  1276  0109  28F8               	goto	l4045
  1277                           
  1278                           ;main.c: 410: {
  1279                           ;main.c: 411: PA3 = 1;
  1280  010A  1585               	bsf	5,3
  1281  010B  28F6               	goto	l4041
  1282  010C                     l4077:	
  1283                           
  1284                           ;main.c: 421: {
  1285                           ;main.c: 422: if(ucTimerDelay >= 5)
  1286  010C  3005               	movlw	5
  1287  010D  024B               	subwf	main@ucTimerDelay,w
  1288  010E  1C03               	skipc
  1289  010F  28F8               	goto	l4045
  1290                           
  1291                           ;main.c: 423: {
  1292                           ;main.c: 424: PB0 = 0;
  1293  0110  1006               	bcf	6,0
  1294                           
  1295                           ;main.c: 425: PA0 = 0;
  1296  0111  1005               	bcf	5,0
  1297                           
  1298                           ;main.c: 426: PA1 = 0;
  1299  0112  1085               	bcf	5,1
  1300                           
  1301                           ;main.c: 427: PA2 = 0;
  1302  0113  1105               	bcf	5,2
  1303                           
  1304                           ;main.c: 428: PA3 = 0;
  1305  0114  1185               	bcf	5,3
  1306  0115  28F6               	goto	l4041
  1307  0116                     l4087:	
  1308                           
  1309                           ;main.c: 438: {
  1310                           ;main.c: 439: if(ucTimerDelay >= 2)
  1311  0116  3002               	movlw	2
  1312  0117  024B               	subwf	main@ucTimerDelay,w
  1313  0118  1C03               	skipc
  1314  0119  28F8               	goto	l4045
  1315                           
  1316                           ;main.c: 440: {
  1317                           ;main.c: 441: ucTimerDelay = 0;
  1318  011A  01CB               	clrf	main@ucTimerDelay
  1319                           
  1320                           ;main.c: 443: ucLoaderStep = 0;
  1321  011B  01C3               	clrf	main@ucLoaderStep
  1322  011C                     l4091:	
  1323                           
  1324                           ;main.c: 444: ucADC4_Step = ADC4_STEP_THIRD;
  1325  011C  3003               	movlw	3
  1326  011D  2A24               	goto	L8
  1327  011E                     l4097:	
  1328                           ;main.c: 445: }
  1329                           
  1330  011E  0843               	movf	main@ucLoaderStep,w
  1331                           
  1332                           ; Switch size 1, requested type "space"
  1333                           ; Number of cases is 7, Range of values is 0 to 6
  1334                           ; switch strategies available:
  1335                           ; Name         Instructions Cycles
  1336                           ; direct_byte           21     7 (fixed)
  1337                           ; simple_byte           22    12 (average)
  1338                           ; jumptable            260     6 (fixed)
  1339                           ; rangetable            11     6 (fixed)
  1340                           ; spacedrange           20     9 (fixed)
  1341                           ; locatedrange           7     3 (fixed)
  1342                           ;	Chosen strategy is direct_byte
  1343  011F  0084               	movwf	4
  1344  0120  3007               	movlw	7
  1345  0121  0204               	subwf	4,w
  1346  0122  1803               	skipnc
  1347  0123  2842               	goto	l3947
  1348  0124  3004               	movlw	high S4661
  1349  0125  008A               	movwf	10
  1350  0126  1003               	clrc
  1351  0127  0D04               	rlf	4,w
  1352  0128  3E4B               	addlw	low S4661
  1353  0129  0082               	movwf	2
  1354  012A                     l780:	
  1355                           ;main.c: 464: {
  1356                           ;main.c: 465: case 0:
  1357                           
  1358                           
  1359                           ;main.c: 466: {
  1360                           ;main.c: 467: PB0 = 1;
  1361  012A  1406               	bsf	6,0
  1362  012B                     l4099:	
  1363                           
  1364                           ;main.c: 468: ucLoaderStep1++;
  1365  012B  0AC4               	incf	main@ucLoaderStep1,f
  1366                           
  1367                           ;main.c: 469: break;
  1368  012C  2842               	goto	l3947
  1369  012D                     l4101:	
  1370                           
  1371                           ;main.c: 473: {
  1372                           ;main.c: 474: if(ucTimerDelay1 >= 5)
  1373  012D  3005               	movlw	5
  1374  012E  024C               	subwf	main@ucTimerDelay1,w
  1375  012F  1C03               	skipc
  1376  0130  2934               	goto	l4109
  1377                           
  1378                           ;main.c: 475: {
  1379                           ;main.c: 476: PA0 = 1;
  1380  0131  1405               	bsf	5,0
  1381  0132                     l4105:	
  1382                           
  1383                           ;main.c: 477: ucTimerDelay1 = 0;
  1384  0132  01CC               	clrf	main@ucTimerDelay1
  1385  0133  292B               	goto	l4099
  1386  0134                     l4109:	
  1387                           
  1388                           ;main.c: 480: else
  1389                           ;main.c: 481: ucTimerDelay1++;
  1390  0134  0ACC               	incf	main@ucTimerDelay1,f
  1391  0135  2842               	goto	l3947
  1392  0136                     l4111:	
  1393                           
  1394                           ;main.c: 486: {
  1395                           ;main.c: 487: if(ucTimerDelay1 >= 5)
  1396  0136  3005               	movlw	5
  1397  0137  024C               	subwf	main@ucTimerDelay1,w
  1398  0138  1C03               	skipc
  1399  0139  2934               	goto	l4109
  1400                           
  1401                           ;main.c: 488: {
  1402                           ;main.c: 489: PA1= 1;
  1403  013A  1485               	bsf	5,1
  1404  013B  2932               	goto	l4105
  1405  013C                     l4121:	
  1406                           
  1407                           ;main.c: 499: {
  1408                           ;main.c: 500: if(ucTimerDelay1 >= 5)
  1409  013C  3005               	movlw	5
  1410  013D  024C               	subwf	main@ucTimerDelay1,w
  1411  013E  1C03               	skipc
  1412  013F  2934               	goto	l4109
  1413                           
  1414                           ;main.c: 501: {
  1415                           ;main.c: 502: PA2 = 1;
  1416  0140  1505               	bsf	5,2
  1417  0141  2932               	goto	l4105
  1418  0142                     l4131:	
  1419                           
  1420                           ;main.c: 512: {
  1421                           ;main.c: 513: if(ucTimerDelay1 >= 5)
  1422  0142  3005               	movlw	5
  1423  0143  024C               	subwf	main@ucTimerDelay1,w
  1424  0144  1C03               	skipc
  1425  0145  2934               	goto	l4109
  1426                           
  1427                           ;main.c: 514: {
  1428                           ;main.c: 515: PA3 = 1;
  1429  0146  1585               	bsf	5,3
  1430  0147  2932               	goto	l4105
  1431  0148                     l4141:	
  1432                           
  1433                           ;main.c: 525: {
  1434                           ;main.c: 526: if(ucTimerDelay1 >= 5)
  1435  0148  3005               	movlw	5
  1436  0149  024C               	subwf	main@ucTimerDelay1,w
  1437  014A  1C03               	skipc
  1438  014B  2934               	goto	l4109
  1439                           
  1440                           ;main.c: 527: {
  1441                           ;main.c: 528: PA0 = 0;
  1442  014C  1005               	bcf	5,0
  1443                           
  1444                           ;main.c: 529: PA1 = 0;
  1445  014D  1085               	bcf	5,1
  1446                           
  1447                           ;main.c: 530: PA2 = 0;
  1448  014E  1105               	bcf	5,2
  1449                           
  1450                           ;main.c: 531: PA3 = 0;
  1451  014F  1185               	bcf	5,3
  1452  0150  2932               	goto	l4105
  1453  0151                     l4151:	
  1454                           
  1455                           ;main.c: 541: {
  1456                           ;main.c: 542: if(ucTimerDelay1 >= 2)
  1457  0151  3002               	movlw	2
  1458  0152  024C               	subwf	main@ucTimerDelay1,w
  1459  0153  1C03               	skipc
  1460  0154  2934               	goto	l4109
  1461                           
  1462                           ;main.c: 543: {
  1463                           ;main.c: 544: ucTimerDelay1 = 0;
  1464  0155  01CC               	clrf	main@ucTimerDelay1
  1465                           
  1466                           ;main.c: 546: ucLoaderStep1 = 0;
  1467  0156  01C4               	clrf	main@ucLoaderStep1
  1468  0157  291C               	goto	l4091
  1469  0158                     l4161:	
  1470  0158  0844               	movf	main@ucLoaderStep1,w
  1471                           
  1472                           ; Switch size 1, requested type "space"
  1473                           ; Number of cases is 7, Range of values is 0 to 6
  1474                           ; switch strategies available:
  1475                           ; Name         Instructions Cycles
  1476                           ; direct_byte           21     7 (fixed)
  1477                           ; simple_byte           22    12 (average)
  1478                           ; jumptable            260     6 (fixed)
  1479                           ; rangetable            11     6 (fixed)
  1480                           ; spacedrange           20     9 (fixed)
  1481                           ; locatedrange           7     3 (fixed)
  1482                           ;	Chosen strategy is direct_byte
  1483  0159  0084               	movwf	4
  1484  015A  3007               	movlw	7
  1485  015B  0204               	subwf	4,w
  1486  015C  1803               	skipnc
  1487  015D  2842               	goto	l3947
  1488  015E  3004               	movlw	high S4663
  1489  015F  008A               	movwf	10
  1490  0160  1003               	clrc
  1491  0161  0D04               	rlf	4,w
  1492  0162  3E59               	addlw	low S4663
  1493  0163  0082               	movwf	2
  1494  0164                     l807:	
  1495                           ;main.c: 568: {
  1496                           ;main.c: 569: case 0:
  1497                           
  1498                           
  1499                           ;main.c: 570: {
  1500                           ;main.c: 571: PB0 = 1;
  1501  0164  1406               	bsf	6,0
  1502                           
  1503                           ;main.c: 572: PA0 = 1;
  1504  0165  1405               	bsf	5,0
  1505  0166                     l4163:	
  1506                           
  1507                           ;main.c: 573: ucLoaderStep2++;
  1508  0166  0AC5               	incf	main@ucLoaderStep2,f
  1509                           
  1510                           ;main.c: 574: break;
  1511  0167  2842               	goto	l3947
  1512  0168                     l4165:	
  1513                           
  1514                           ;main.c: 578: {
  1515                           ;main.c: 579: if(ucTimerDelay2 >= 5)
  1516  0168  3005               	movlw	5
  1517  0169  024D               	subwf	main@ucTimerDelay2,w
  1518  016A  1C03               	skipc
  1519  016B  296F               	goto	l4173
  1520                           
  1521                           ;main.c: 580: {
  1522                           ;main.c: 581: PA1 = 1;
  1523  016C  1485               	bsf	5,1
  1524  016D                     l4169:	
  1525                           
  1526                           ;main.c: 582: ucTimerDelay2 = 0;
  1527  016D  01CD               	clrf	main@ucTimerDelay2
  1528  016E  2966               	goto	l4163
  1529  016F                     l4173:	
  1530                           
  1531                           ;main.c: 585: else
  1532                           ;main.c: 586: ucTimerDelay2++;
  1533  016F  0ACD               	incf	main@ucTimerDelay2,f
  1534  0170  2842               	goto	l3947
  1535  0171                     l4175:	
  1536                           
  1537                           ;main.c: 591: {
  1538                           ;main.c: 592: if(ucTimerDelay2 >= 5)
  1539  0171  3005               	movlw	5
  1540  0172  024D               	subwf	main@ucTimerDelay2,w
  1541  0173  1C03               	skipc
  1542  0174  296F               	goto	l4173
  1543                           
  1544                           ;main.c: 593: {
  1545                           ;main.c: 594: PA2 = 1;
  1546  0175  1505               	bsf	5,2
  1547  0176  296D               	goto	l4169
  1548  0177                     l4185:	
  1549                           
  1550                           ;main.c: 604: {
  1551                           ;main.c: 605: if(ucTimerDelay2 >= 5)
  1552  0177  3005               	movlw	5
  1553  0178  024D               	subwf	main@ucTimerDelay2,w
  1554  0179  1C03               	skipc
  1555  017A  296F               	goto	l4173
  1556                           
  1557                           ;main.c: 606: {
  1558                           ;main.c: 607: PA3 = 1;
  1559  017B  1585               	bsf	5,3
  1560  017C  296D               	goto	l4169
  1561  017D                     l4195:	
  1562                           
  1563                           ;main.c: 617: {
  1564                           ;main.c: 618: if(ucTimerDelay2 >= 5)
  1565  017D  3005               	movlw	5
  1566  017E  024D               	subwf	main@ucTimerDelay2,w
  1567  017F  1C03               	skipc
  1568  0180  296F               	goto	l4173
  1569                           
  1570                           ;main.c: 619: {
  1571                           ;main.c: 621: PA1 = 0;
  1572  0181  1085               	bcf	5,1
  1573                           
  1574                           ;main.c: 622: PA2 = 0;
  1575  0182  1105               	bcf	5,2
  1576                           
  1577                           ;main.c: 623: PA3 = 0;
  1578  0183  1185               	bcf	5,3
  1579  0184  296D               	goto	l4169
  1580  0185                     l4205:	
  1581                           
  1582                           ;main.c: 633: {
  1583                           ;main.c: 634: if(ucTimerDelay2 >= 2)
  1584  0185  3002               	movlw	2
  1585  0186  024D               	subwf	main@ucTimerDelay2,w
  1586  0187  1C03               	skipc
  1587  0188  296F               	goto	l4173
  1588                           
  1589                           ;main.c: 635: {
  1590                           ;main.c: 636: ucTimerDelay2 = 0;
  1591  0189  01CD               	clrf	main@ucTimerDelay2
  1592                           
  1593                           ;main.c: 638: ucLoaderStep2 = 0;
  1594  018A  01C5               	clrf	main@ucLoaderStep2
  1595  018B  291C               	goto	l4091
  1596  018C                     l4215:	
  1597  018C  0845               	movf	main@ucLoaderStep2,w
  1598                           
  1599                           ; Switch size 1, requested type "space"
  1600                           ; Number of cases is 6, Range of values is 0 to 5
  1601                           ; switch strategies available:
  1602                           ; Name         Instructions Cycles
  1603                           ; direct_byte           19     7 (fixed)
  1604                           ; simple_byte           19    10 (average)
  1605                           ; jumptable            260     6 (fixed)
  1606                           ; rangetable            10     6 (fixed)
  1607                           ; spacedrange           18     9 (fixed)
  1608                           ; locatedrange           6     3 (fixed)
  1609                           ;	Chosen strategy is direct_byte
  1610  018D  0084               	movwf	4
  1611  018E  3006               	movlw	6
  1612  018F  0204               	subwf	4,w
  1613  0190  1803               	skipnc
  1614  0191  2842               	goto	l3947
  1615  0192  3004               	movlw	high S4665
  1616  0193  008A               	movwf	10
  1617  0194  1003               	clrc
  1618  0195  0D04               	rlf	4,w
  1619  0196  3E67               	addlw	low S4665
  1620  0197  0082               	movwf	2
  1621  0198                     l831:	
  1622                           ;main.c: 660: {
  1623                           ;main.c: 661: case 0:
  1624                           
  1625                           
  1626                           ;main.c: 662: {
  1627                           ;main.c: 663: PB0 = 1;
  1628  0198  1406               	bsf	6,0
  1629                           
  1630                           ;main.c: 664: PA0 = 1;
  1631  0199  1405               	bsf	5,0
  1632                           
  1633                           ;main.c: 665: PA1 = 1;
  1634  019A  1485               	bsf	5,1
  1635  019B                     l4217:	
  1636                           
  1637                           ;main.c: 666: ucLoaderStep3++;
  1638  019B  0AC6               	incf	main@ucLoaderStep3,f
  1639                           
  1640                           ;main.c: 667: break;
  1641  019C  2842               	goto	l3947
  1642  019D                     l4219:	
  1643                           
  1644                           ;main.c: 671: {
  1645                           ;main.c: 672: if(ucTimerDelay3 >= 5)
  1646  019D  3005               	movlw	5
  1647  019E  024E               	subwf	main@ucTimerDelay3,w
  1648  019F  1C03               	skipc
  1649  01A0  29A4               	goto	l4227
  1650                           
  1651                           ;main.c: 673: {
  1652                           ;main.c: 674: PA2 = 1;
  1653  01A1  1505               	bsf	5,2
  1654  01A2                     l4223:	
  1655                           
  1656                           ;main.c: 675: ucTimerDelay3 = 0;
  1657  01A2  01CE               	clrf	main@ucTimerDelay3
  1658  01A3  299B               	goto	l4217
  1659  01A4                     l4227:	
  1660                           
  1661                           ;main.c: 678: else
  1662                           ;main.c: 679: ucTimerDelay3++;
  1663  01A4  0ACE               	incf	main@ucTimerDelay3,f
  1664  01A5  2842               	goto	l3947
  1665  01A6                     l4229:	
  1666                           
  1667                           ;main.c: 684: {
  1668                           ;main.c: 685: if(ucTimerDelay3 >= 5)
  1669  01A6  3005               	movlw	5
  1670  01A7  024E               	subwf	main@ucTimerDelay3,w
  1671  01A8  1C03               	skipc
  1672  01A9  29A4               	goto	l4227
  1673                           
  1674                           ;main.c: 686: {
  1675                           ;main.c: 687: PA3 = 1;
  1676  01AA  1585               	bsf	5,3
  1677  01AB  29A2               	goto	l4223
  1678  01AC                     l4239:	
  1679                           
  1680                           ;main.c: 698: {
  1681                           ;main.c: 699: if(ucTimerDelay3 >= 5)
  1682  01AC  3005               	movlw	5
  1683  01AD  024E               	subwf	main@ucTimerDelay3,w
  1684  01AE  1C03               	skipc
  1685  01AF  29A4               	goto	l4227
  1686                           
  1687                           ;main.c: 700: {
  1688                           ;main.c: 702: PA2 = 0;
  1689  01B0  1105               	bcf	5,2
  1690                           
  1691                           ;main.c: 703: PA3 = 0;
  1692  01B1  1185               	bcf	5,3
  1693  01B2  29A2               	goto	l4223
  1694  01B3                     l4249:	
  1695                           
  1696                           ;main.c: 713: {
  1697                           ;main.c: 714: if(ucTimerDelay3 >= 2)
  1698  01B3  3002               	movlw	2
  1699  01B4  024E               	subwf	main@ucTimerDelay3,w
  1700  01B5  1C03               	skipc
  1701  01B6  29A4               	goto	l4227
  1702                           
  1703                           ;main.c: 715: {
  1704                           ;main.c: 716: ucTimerDelay3 = 0;
  1705  01B7  01CE               	clrf	main@ucTimerDelay3
  1706                           
  1707                           ;main.c: 718: ucLoaderStep3 = 0;
  1708  01B8  01C6               	clrf	main@ucLoaderStep3
  1709  01B9  291C               	goto	l4091
  1710  01BA                     l4259:	
  1711  01BA  0846               	movf	main@ucLoaderStep3,w
  1712                           
  1713                           ; Switch size 1, requested type "space"
  1714                           ; Number of cases is 5, Range of values is 0 to 4
  1715                           ; switch strategies available:
  1716                           ; Name         Instructions Cycles
  1717                           ; simple_byte           16     9 (average)
  1718                           ; direct_byte           17     7 (fixed)
  1719                           ; jumptable            260     6 (fixed)
  1720                           ; rangetable             9     6 (fixed)
  1721                           ; spacedrange           16     9 (fixed)
  1722                           ; locatedrange           5     3 (fixed)
  1723                           ;	Chosen strategy is simple_byte
  1724  01BB  3A00               	xorlw	0	; case 0
  1725  01BC  1903               	skipnz
  1726  01BD  2998               	goto	l831
  1727  01BE  3A01               	xorlw	1	; case 1
  1728  01BF  1903               	skipnz
  1729  01C0  299D               	goto	l4219
  1730  01C1  3A03               	xorlw	3	; case 2
  1731  01C2  1903               	skipnz
  1732  01C3  29A6               	goto	l4229
  1733  01C4  3A01               	xorlw	1	; case 3
  1734  01C5  1903               	skipnz
  1735  01C6  29AC               	goto	l4239
  1736  01C7  3A07               	xorlw	7	; case 4
  1737  01C8  1903               	skipnz
  1738  01C9  29B3               	goto	l4249
  1739  01CA  2864               	goto	l703
  1740  01CB                     l852:	
  1741                           ;main.c: 740: {
  1742                           ;main.c: 741: case 0:
  1743                           
  1744                           
  1745                           ;main.c: 742: {
  1746                           ;main.c: 743: PB0 = 1;
  1747  01CB  1406               	bsf	6,0
  1748                           
  1749                           ;main.c: 744: PA0 = 1;
  1750  01CC  1405               	bsf	5,0
  1751                           
  1752                           ;main.c: 745: PA1 = 1;
  1753  01CD  1485               	bsf	5,1
  1754                           
  1755                           ;main.c: 746: PA2 = 1;
  1756  01CE  1505               	bsf	5,2
  1757  01CF                     l4261:	
  1758                           
  1759                           ;main.c: 747: ucLoaderStep4++;
  1760  01CF  0AC7               	incf	main@ucLoaderStep4,f
  1761                           
  1762                           ;main.c: 748: break;
  1763  01D0  2842               	goto	l3947
  1764  01D1                     l4263:	
  1765                           
  1766                           ;main.c: 752: {
  1767                           ;main.c: 753: if(ucTimerDelay4 >= 5)
  1768  01D1  3005               	movlw	5
  1769  01D2  024F               	subwf	main@ucTimerDelay4,w
  1770  01D3  1C03               	skipc
  1771  01D4  29D8               	goto	l4271
  1772                           
  1773                           ;main.c: 754: {
  1774                           ;main.c: 755: PA3 = 1;
  1775  01D5  1585               	bsf	5,3
  1776  01D6                     l4267:	
  1777                           
  1778                           ;main.c: 756: ucTimerDelay4 = 0;
  1779  01D6  01CF               	clrf	main@ucTimerDelay4
  1780  01D7  29CF               	goto	l4261
  1781  01D8                     l4271:	
  1782                           
  1783                           ;main.c: 759: else
  1784                           ;main.c: 760: ucTimerDelay4++;
  1785  01D8  0ACF               	incf	main@ucTimerDelay4,f
  1786  01D9  2842               	goto	l3947
  1787  01DA                     l4273:	
  1788                           
  1789                           ;main.c: 765: {
  1790                           ;main.c: 766: if(ucTimerDelay4 >= 5)
  1791  01DA  3005               	movlw	5
  1792  01DB  024F               	subwf	main@ucTimerDelay4,w
  1793  01DC  1C03               	skipc
  1794  01DD  29D8               	goto	l4271
  1795                           
  1796                           ;main.c: 767: {
  1797                           ;main.c: 768: PA3 = 0;
  1798  01DE  1185               	bcf	5,3
  1799  01DF  29D6               	goto	l4267
  1800  01E0                     l4283:	
  1801                           
  1802                           ;main.c: 778: {
  1803                           ;main.c: 779: if(ucTimerDelay4 >= 2)
  1804  01E0  3002               	movlw	2
  1805  01E1  024F               	subwf	main@ucTimerDelay4,w
  1806  01E2  1C03               	skipc
  1807  01E3  29D8               	goto	l4271
  1808                           
  1809                           ;main.c: 780: {
  1810                           ;main.c: 781: ucTimerDelay4 = 0;
  1811  01E4  01CF               	clrf	main@ucTimerDelay4
  1812                           
  1813                           ;main.c: 783: ucLoaderStep4 = 0;
  1814  01E5  01C7               	clrf	main@ucLoaderStep4
  1815  01E6  291C               	goto	l4091
  1816  01E7                     l4293:	
  1817  01E7  0847               	movf	main@ucLoaderStep4,w
  1818                           
  1819                           ; Switch size 1, requested type "space"
  1820                           ; Number of cases is 4, Range of values is 0 to 3
  1821                           ; switch strategies available:
  1822                           ; Name         Instructions Cycles
  1823                           ; simple_byte           13     7 (average)
  1824                           ; direct_byte           15     7 (fixed)
  1825                           ; jumptable            260     6 (fixed)
  1826                           ; rangetable             8     6 (fixed)
  1827                           ; spacedrange           14     9 (fixed)
  1828                           ; locatedrange           4     3 (fixed)
  1829                           ;	Chosen strategy is simple_byte
  1830  01E8  3A00               	xorlw	0	; case 0
  1831  01E9  1903               	skipnz
  1832  01EA  29CB               	goto	l852
  1833  01EB  3A01               	xorlw	1	; case 1
  1834  01EC  1903               	skipnz
  1835  01ED  29D1               	goto	l4263
  1836  01EE  3A03               	xorlw	3	; case 2
  1837  01EF  1903               	skipnz
  1838  01F0  29DA               	goto	l4273
  1839  01F1  3A01               	xorlw	1	; case 3
  1840  01F2  1903               	skipnz
  1841  01F3  29E0               	goto	l4283
  1842  01F4  2864               	goto	l703
  1843  01F5                     l4297:	
  1844  01F5  0842               	movf	main@ucChannel4Type,w
  1845                           
  1846                           ; Switch size 1, requested type "space"
  1847                           ; Number of cases is 5, Range of values is 0 to 4
  1848                           ; switch strategies available:
  1849                           ; Name         Instructions Cycles
  1850                           ; simple_byte           16     9 (average)
  1851                           ; direct_byte           17     7 (fixed)
  1852                           ; jumptable            260     6 (fixed)
  1853                           ; rangetable             9     6 (fixed)
  1854                           ; spacedrange           16     9 (fixed)
  1855                           ; locatedrange           5     3 (fixed)
  1856                           ;	Chosen strategy is simple_byte
  1857  01F6  3A00               	xorlw	0	; case 0
  1858  01F7  1903               	skipnz
  1859  01F8  291E               	goto	l4097
  1860  01F9  3A01               	xorlw	1	; case 1
  1861  01FA  1903               	skipnz
  1862  01FB  2958               	goto	l4161
  1863  01FC  3A03               	xorlw	3	; case 2
  1864  01FD  1903               	skipnz
  1865  01FE  298C               	goto	l4215
  1866  01FF  3A01               	xorlw	1	; case 3
  1867  0200  1903               	skipnz
  1868  0201  29BA               	goto	l4259
  1869  0202  3A07               	xorlw	7	; case 4
  1870  0203  1903               	skipnz
  1871  0204  29E7               	goto	l4293
  1872  0205  2864               	goto	l703
  1873  0206                     l4299:	
  1874                           
  1875                           ;main.c: 807: {
  1876                           ;main.c: 808: if(isFinishedTwentySecondsTimer())
  1877  0206  118A  24AC  118A   	fcall	_isFinishedTwentySecondsTimer
  1878  0209  3A00               	xorlw	0
  1879  020A  1903               	skipnz
  1880  020B  28B6               	goto	l4015
  1881                           
  1882                           ;main.c: 809: {
  1883                           ;main.c: 810: PBOD6 =0;
  1884  020C  1683               	bsf	3,5	;RP0=1, select bank3
  1885  020D  1703               	bsf	3,6	;RP1=1, select bank3
  1886  020E  1308               	bcf	8,6
  1887                           
  1888                           ;main.c: 811: PB6 = 1;
  1889  020F  1283               	bcf	3,5	;RP0=0, select bank0
  1890  0210  1303               	bcf	3,6	;RP1=0, select bank0
  1891  0211  1706               	bsf	6,6
  1892                           
  1893                           ;main.c: 812: PA6 = 0;
  1894  0212  1305               	bcf	5,6
  1895                           
  1896                           ;main.c: 819: if((getAdOriginalCh14Value() > 3900))
  1897  0213  118A  24C5  118A   	fcall	_getAdOriginalCh14Value
  1898  0216  300F               	movlw	15
  1899  0217  0257               	subwf	?_getAdOriginalCh14Value+1,w
  1900  0218  303D               	movlw	61
  1901  0219  1903               	skipnz
  1902  021A  0256               	subwf	?_getAdOriginalCh14Value,w
  1903  021B  1C03               	skipc
  1904  021C  2A1F               	goto	l4307
  1905                           
  1906                           ;main.c: 820: DACR0=0x0F;
  1907  021D  300F               	movlw	15
  1908  021E  2A20               	goto	L9
  1909  021F                     l4307:	
  1910                           
  1911                           ;main.c: 821: else
  1912                           ;main.c: 822: DACR0=0x07;
  1913  021F  3007               	movlw	7
  1914  0220                     L9:	
  1915  0220  1683               	bsf	3,5	;RP0=1, select bank1
  1916  0221  0088               	movwf	8	;volatile
  1917                           
  1918                           ;main.c: 824: ucADC4_Step = ADC4_STEP_FOURTH;
  1919  0222  3004               	movlw	4
  1920  0223  1283               	bcf	3,5	;RP0=0, select bank0
  1921  0224                     L8:	
  1922  0224  00C1               	movwf	main@ucADC4_Step
  1923                           
  1924                           ;main.c: 825: }
  1925  0225  2842               	goto	l3947
  1926  0226                     l4309:	
  1927                           
  1928                           ;main.c: 833: {
  1929                           ;main.c: 834: static unsigned char ucTimer1s = 0;
  1930                           ;main.c: 835: if(ucTimer1s < 10)
  1931  0226  300A               	movlw	10
  1932  0227  0248               	subwf	main@ucTimer1s,w
  1933  0228  1803               	skipnc
  1934  0229  2A2D               	goto	l4315
  1935                           
  1936                           ;main.c: 836: {
  1937                           ;main.c: 837: ucTimer1s++;
  1938  022A  0AC8               	incf	main@ucTimer1s,f
  1939                           
  1940                           ;main.c: 838: PB6 = 1;
  1941  022B  1706               	bsf	6,6
  1942                           
  1943                           ;main.c: 839: }
  1944  022C  2842               	goto	l3947
  1945  022D                     l4315:	
  1946                           
  1947                           ;main.c: 840: else
  1948                           ;main.c: 841: {
  1949                           ;main.c: 842: ucTimer1s = 0;
  1950  022D  01C8               	clrf	main@ucTimer1s
  1951                           
  1952                           ;main.c: 843: PBOD6 = 1;
  1953  022E  1683               	bsf	3,5	;RP0=1, select bank3
  1954  022F  1703               	bsf	3,6	;RP1=1, select bank3
  1955  0230  1708               	bsf	8,6
  1956                           
  1957                           ;main.c: 844: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  1958  0231  1283               	bcf	3,5	;RP0=0, select bank0
  1959  0232  1303               	bcf	3,6	;RP1=0, select bank0
  1960  0233  01C0               	clrf	main@enumMainLoopStep
  1961  0234  0AC0               	incf	main@enumMainLoopStep,f
  1962                           
  1963                           ;main.c: 845: ucADC4_Step = ADC4_STEP_INIT;
  1964  0235  01C1               	clrf	main@ucADC4_Step
  1965  0236  2842               	goto	l3947
  1966  0237                     l4323:	
  1967  0237  0841               	movf	main@ucADC4_Step,w
  1968                           
  1969                           ; Switch size 1, requested type "space"
  1970                           ; Number of cases is 5, Range of values is 0 to 4
  1971                           ; switch strategies available:
  1972                           ; Name         Instructions Cycles
  1973                           ; simple_byte           16     9 (average)
  1974                           ; direct_byte           17     7 (fixed)
  1975                           ; jumptable            260     6 (fixed)
  1976                           ; rangetable             9     6 (fixed)
  1977                           ; spacedrange           16     9 (fixed)
  1978                           ; locatedrange           5     3 (fixed)
  1979                           ;	Chosen strategy is simple_byte
  1980  0238  3A00               	xorlw	0	; case 0
  1981  0239  1903               	skipnz
  1982  023A  28B3               	goto	l4013
  1983  023B  3A01               	xorlw	1	; case 1
  1984  023C  1903               	skipnz
  1985  023D  28B9               	goto	l4017
  1986  023E  3A03               	xorlw	3	; case 2
  1987  023F  1903               	skipnz
  1988  0240  29F5               	goto	l4297
  1989  0241  3A01               	xorlw	1	; case 3
  1990  0242  1903               	skipnz
  1991  0243  2A06               	goto	l4299
  1992  0244  3A07               	xorlw	7	; case 4
  1993  0245  1903               	skipnz
  1994  0246  2A26               	goto	l4309
  1995  0247  2864               	goto	l703
  1996  0248                     l880:	
  1997                           ;main.c: 871: {
  1998                           ;main.c: 872: case HOUR_3_BRANCH_STEP_FIRST:
  1999                           
  2000                           
  2001                           ;main.c: 873: {
  2002                           ;main.c: 874: PAOD7 = 1;
  2003  0248  1683               	bsf	3,5	;RP0=1, select bank3
  2004  0249  1703               	bsf	3,6	;RP1=1, select bank3
  2005  024A  1787               	bsf	7,7
  2006                           
  2007                           ;main.c: 875: startThreeHoursTimer();
  2008  024B  118A  24A0  118A   	fcall	_startThreeHoursTimer
  2009                           
  2010                           ;main.c: 877: enumBranchStep = HOUR_3_BRANCH_STEP_SECOND;
  2011  024E  01BE               	clrf	main@enumBranchStep
  2012  024F  0ABE               	incf	main@enumBranchStep,f
  2013                           
  2014                           ;main.c: 878: break;
  2015  0250  2842               	goto	l3947
  2016  0251                     l4329:	
  2017                           
  2018                           ;main.c: 882: {
  2019                           ;main.c: 883: static unsigned char ucTimer20s = 0;
  2020                           ;main.c: 885: if(ucTimer20s < 20)
  2021  0251  3014               	movlw	20
  2022  0252  0249               	subwf	main@ucTimer20s,w
  2023  0253  1803               	skipnc
  2024  0254  2A57               	goto	l4333
  2025                           
  2026                           ;main.c: 886: ucTimer20s++;
  2027  0255  0AC9               	incf	main@ucTimer20s,f
  2028  0256  2A60               	goto	l4349
  2029  0257                     l4333:	
  2030  0257  3002               	movlw	2
  2031                           
  2032                           ;main.c: 887: else
  2033                           ;main.c: 888: {
  2034                           ;main.c: 889: ucTimer20s = 0;
  2035  0258  01C9               	clrf	main@ucTimer20s
  2036                           
  2037                           ;main.c: 890: PB0 = 1;
  2038  0259  1406               	bsf	6,0
  2039                           
  2040                           ;main.c: 891: PA0 = 1;
  2041  025A  1405               	bsf	5,0
  2042                           
  2043                           ;main.c: 892: PA1 = 1;
  2044  025B  1485               	bsf	5,1
  2045                           
  2046                           ;main.c: 893: PA2 = 1;
  2047  025C  1505               	bsf	5,2
  2048                           
  2049                           ;main.c: 894: PA3 = 1;
  2050  025D  1585               	bsf	5,3
  2051                           
  2052                           ;main.c: 895: PA6 = 0;
  2053  025E  1305               	bcf	5,6
  2054                           
  2055                           ;main.c: 897: enumBranchStep = HOUR_3_BRANCH_STEP_THIRD;
  2056  025F  00BE               	movwf	main@enumBranchStep
  2057  0260                     l4349:	
  2058                           
  2059                           ;main.c: 902: {
  2060                           ;main.c: 903: if(isFinishedThreeHoursTimer())
  2061  0260  118A  24A7  118A   	fcall	_isFinishedThreeHoursTimer
  2062  0263  3A00               	xorlw	0
  2063  0264  1903               	skipnz
  2064  0265  2A68               	goto	l4355
  2065                           
  2066                           ;main.c: 904: {
  2067                           ;main.c: 905: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2068  0266  01BE               	clrf	main@enumBranchStep
  2069  0267  28B0               	goto	l4011
  2070  0268                     l4355:	
  2071                           
  2072                           ;main.c: 908: else
  2073                           ;main.c: 909: {
  2074                           ;main.c: 910: static unsigned char ucTimerX1P5s = 0;
  2075                           ;main.c: 912: if(getAdOriginalCh1Value() < 0x0082)
  2076  0268  118A  24C0  118A   	fcall	_getAdOriginalCh1Value
  2077  026B  3000               	movlw	0
  2078  026C  0257               	subwf	?_getAdOriginalCh1Value+1,w
  2079  026D  3082               	movlw	130
  2080  026E  1903               	skipnz
  2081  026F  0256               	subwf	?_getAdOriginalCh1Value,w
  2082  0270  1803               	skipnc
  2083  0271  2A74               	goto	l4359
  2084                           
  2085                           ;main.c: 913: {
  2086                           ;main.c: 914: ucTimerX1P5s = 0;
  2087  0272  01D2               	clrf	main@ucTimerX1P5s
  2088                           
  2089                           ;main.c: 915: }
  2090  0273  2A75               	goto	l4361
  2091  0274                     l4359:	
  2092                           
  2093                           ;main.c: 916: else
  2094                           ;main.c: 917: {
  2095                           ;main.c: 918: ucTimerX1P5s++;
  2096  0274  0AD2               	incf	main@ucTimerX1P5s,f
  2097  0275                     l4361:	
  2098                           
  2099                           ;main.c: 919: }
  2100                           ;main.c: 921: if(ucTimerX1P5s >= 1)
  2101  0275  0852               	movf	main@ucTimerX1P5s,w
  2102  0276  1903               	btfsc	3,2
  2103  0277  2A7F               	goto	l4373
  2104                           
  2105                           ;main.c: 922: {
  2106                           ;main.c: 923: ucTimerX1P5s = 0;
  2107  0278  01D2               	clrf	main@ucTimerX1P5s
  2108                           
  2109                           ;main.c: 924: PA7 = 0;
  2110  0279  1385               	bcf	5,7
  2111                           
  2112                           ;main.c: 925: clearThreeHoursTimer();
  2113  027A  118A  2435  118A   	fcall	_clearThreeHoursTimer
  2114                           
  2115                           ;main.c: 927: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2116  027D  01BE               	clrf	main@enumBranchStep
  2117  027E  2876               	goto	l3975
  2118  027F                     l4373:	
  2119                           
  2120                           ;main.c: 931: else
  2121                           ;main.c: 932: {
  2122                           ;main.c: 933: static unsigned char ucTimerX2P5s = 0;
  2123                           ;main.c: 935: if(getAdOriginalCh14Value() >= 1950)
  2124  027F  118A  24C5  118A   	fcall	_getAdOriginalCh14Value
  2125  0282  3007               	movlw	7
  2126  0283  0257               	subwf	?_getAdOriginalCh14Value+1,w
  2127  0284  309E               	movlw	158
  2128  0285  1903               	skipnz
  2129  0286  0256               	subwf	?_getAdOriginalCh14Value,w
  2130  0287  1C03               	skipc
  2131  0288  2A8B               	goto	l4377
  2132                           
  2133                           ;main.c: 936: {
  2134                           ;main.c: 937: ucTimerX2P5s++;
  2135  0289  0AD3               	incf	main@ucTimerX2P5s,f
  2136                           
  2137                           ;main.c: 938: }
  2138  028A  2A8C               	goto	l4379
  2139  028B                     l4377:	
  2140                           
  2141                           ;main.c: 939: else
  2142                           ;main.c: 940: {
  2143                           ;main.c: 941: ucTimerX2P5s = 0;
  2144  028B  01D3               	clrf	main@ucTimerX2P5s
  2145  028C                     l4379:	
  2146                           
  2147                           ;main.c: 942: }
  2148                           ;main.c: 944: if(ucTimerX2P5s >= 1)
  2149  028C  0853               	movf	main@ucTimerX2P5s,w
  2150  028D  1903               	btfsc	3,2
  2151  028E  2A91               	goto	l4383
  2152                           
  2153                           ;main.c: 945: {
  2154                           ;main.c: 946: ucTimerX2P5s = 0;
  2155  028F  01D3               	clrf	main@ucTimerX2P5s
  2156                           
  2157                           ;main.c: 947: }
  2158  0290  2842               	goto	l3947
  2159  0291                     l4383:	
  2160                           
  2161                           ;main.c: 948: else
  2162                           ;main.c: 949: {
  2163                           ;main.c: 950: clearPinPortAndTimer();
  2164  0291  118A  2426  118A   	fcall	_clearPinPortAndTimer
  2165  0294  2862               	goto	l3965
  2166  0295                     l4389:	
  2167  0295  083E               	movf	main@enumBranchStep,w
  2168                           
  2169                           ; Switch size 1, requested type "space"
  2170                           ; Number of cases is 3, Range of values is 0 to 2
  2171                           ; switch strategies available:
  2172                           ; Name         Instructions Cycles
  2173                           ; simple_byte           10     6 (average)
  2174                           ; direct_byte           13     7 (fixed)
  2175                           ; jumptable            260     6 (fixed)
  2176                           ; rangetable             7     6 (fixed)
  2177                           ; spacedrange           12     9 (fixed)
  2178                           ; locatedrange           3     3 (fixed)
  2179                           ;	Chosen strategy is simple_byte
  2180  0296  3A00               	xorlw	0	; case 0
  2181  0297  1903               	skipnz
  2182  0298  2A48               	goto	l880
  2183  0299  3A01               	xorlw	1	; case 1
  2184  029A  1903               	skipnz
  2185  029B  2A51               	goto	l4329
  2186  029C  3A03               	xorlw	3	; case 2
  2187  029D  1903               	skipnz
  2188  029E  2A60               	goto	l4349
  2189  029F  2864               	goto	l703
  2190  02A0                     l907:	
  2191                           ;main.c: 980: {
  2192                           ;main.c: 981: case INTERNAL_FIRST_STEP:
  2193                           
  2194                           
  2195                           ;main.c: 982: {
  2196                           ;main.c: 983: PB0 = 0;
  2197  02A0  1006               	bcf	6,0
  2198                           
  2199                           ;main.c: 984: PB1 = 0;
  2200  02A1  1086               	bcf	6,1
  2201                           
  2202                           ;main.c: 985: PA0 = 0;
  2203  02A2  1005               	bcf	5,0
  2204                           
  2205                           ;main.c: 986: PA1 = 0;
  2206  02A3  1085               	bcf	5,1
  2207                           
  2208                           ;main.c: 987: PA2 = 0;
  2209  02A4  1105               	bcf	5,2
  2210                           
  2211                           ;main.c: 988: PA3 = 0;
  2212  02A5  1185               	bcf	5,3
  2213                           
  2214                           ;main.c: 989: PB6 = 1;
  2215  02A6  1706               	bsf	6,6
  2216                           
  2217                           ;main.c: 990: PA6 =0;
  2218  02A7  1305               	bcf	5,6
  2219                           
  2220                           ;main.c: 992: enumInteralStep = INTERNAL_SECOND_STEP;
  2221  02A8  01BF               	clrf	main@enumInteralStep
  2222  02A9  0ABF               	incf	main@enumInteralStep,f
  2223                           
  2224                           ;main.c: 993: break;
  2225  02AA  2842               	goto	l3947
  2226  02AB                     l4391:	
  2227                           
  2228                           ;main.c: 997: {
  2229                           ;main.c: 998: static unsigned char ucTimer1s = 0;
  2230                           ;main.c: 1000: if(getAdOriginalCh14Value() <= 1000)
  2231  02AB  118A  24C5  118A   	fcall	_getAdOriginalCh14Value
  2232  02AE  3003               	movlw	3
  2233  02AF  0257               	subwf	?_getAdOriginalCh14Value+1,w
  2234  02B0  30E9               	movlw	233
  2235  02B1  1903               	skipnz
  2236  02B2  0256               	subwf	?_getAdOriginalCh14Value,w
  2237  02B3  1803               	skipnc
  2238  02B4  2AB7               	goto	l4395
  2239                           
  2240                           ;main.c: 1001: {
  2241                           ;main.c: 1002: ucTimer1s++;
  2242  02B5  0ABD               	incf	main@cTimer1s_806,f
  2243                           
  2244                           ;main.c: 1003: }
  2245  02B6  2AB8               	goto	l4397
  2246  02B7                     l4395:	
  2247                           
  2248                           ;main.c: 1004: else
  2249                           ;main.c: 1005: ucTimer1s = 0;
  2250  02B7  01BD               	clrf	main@cTimer1s_806
  2251  02B8                     l4397:	
  2252                           
  2253                           ;main.c: 1007: if(ucTimer1s >= 10)
  2254  02B8  300A               	movlw	10
  2255  02B9  023D               	subwf	main@cTimer1s_806,w
  2256  02BA  1C03               	skipc
  2257  02BB  2842               	goto	l3947
  2258                           
  2259                           ;main.c: 1008: {
  2260                           ;main.c: 1009: enumInteralStep = INTERNAL_THIRD_STEP;
  2261  02BC  3002               	movlw	2
  2262  02BD  00BF               	movwf	main@enumInteralStep
  2263                           
  2264                           ;main.c: 1010: ucTimer1s = 0;
  2265  02BE  01BD               	clrf	main@cTimer1s_806
  2266  02BF  2842               	goto	l3947
  2267  02C0                     l4403:	
  2268                           
  2269                           ;main.c: 1016: {
  2270                           ;main.c: 1017: static unsigned char ucTimerP3s = 0;
  2271                           ;main.c: 1019: if(getAdOriginalCh14Value() >= 1950)
  2272  02C0  118A  24C5  118A   	fcall	_getAdOriginalCh14Value
  2273  02C3  3007               	movlw	7
  2274  02C4  0257               	subwf	?_getAdOriginalCh14Value+1,w
  2275  02C5  309E               	movlw	158
  2276  02C6  1903               	skipnz
  2277  02C7  0256               	subwf	?_getAdOriginalCh14Value,w
  2278  02C8  1C03               	skipc
  2279  02C9  2ACC               	goto	l4407
  2280                           
  2281                           ;main.c: 1020: {
  2282                           ;main.c: 1021: ucTimerP3s++;
  2283  02CA  0AD0               	incf	main@ucTimerP3s,f
  2284                           
  2285                           ;main.c: 1022: }
  2286  02CB  2ACD               	goto	l4409
  2287  02CC                     l4407:	
  2288                           
  2289                           ;main.c: 1023: else
  2290                           ;main.c: 1024: ucTimerP3s = 0;
  2291  02CC  01D0               	clrf	main@ucTimerP3s
  2292  02CD                     l4409:	
  2293                           
  2294                           ;main.c: 1026: if(ucTimerP3s >= 3)
  2295  02CD  3003               	movlw	3
  2296  02CE  0250               	subwf	main@ucTimerP3s,w
  2297  02CF  1C03               	skipc
  2298  02D0  2842               	goto	l3947
  2299                           
  2300                           ;main.c: 1027: {
  2301                           ;main.c: 1028: enumInteralStep = INTERNAL_FIRST_STEP;
  2302  02D1  01BF               	clrf	main@enumInteralStep
  2303                           
  2304                           ;main.c: 1029: ucTimerP3s = 0;
  2305  02D2  01D0               	clrf	main@ucTimerP3s
  2306                           
  2307                           ;main.c: 1030: clearAllTimer();
  2308  02D3  118A  242D  118A   	fcall	_clearAllTimer
  2309                           
  2310                           ;main.c: 1032: DACR0=0x0F;
  2311  02D6  300F               	movlw	15
  2312  02D7  1683               	bsf	3,5	;RP0=1, select bank1
  2313  02D8  0088               	movwf	8	;volatile
  2314                           
  2315                           ;main.c: 1033: PBOD6 = 1;
  2316  02D9  1703               	bsf	3,6	;RP1=1, select bank3
  2317  02DA  1708               	bsf	8,6
  2318                           
  2319                           ;main.c: 1035: PA0 = 0;
  2320  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  2321  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  2322  02DD  1005               	bcf	5,0
  2323                           
  2324                           ;main.c: 1036: PA1 = 0;
  2325  02DE  1085               	bcf	5,1
  2326                           
  2327                           ;main.c: 1037: PA2 = 0;
  2328  02DF  1105               	bcf	5,2
  2329                           
  2330                           ;main.c: 1038: PA3 = 1;
  2331  02E0  1585               	bsf	5,3
  2332                           
  2333                           ;main.c: 1039: PB0 = 0;
  2334  02E1  1006               	bcf	6,0
  2335                           
  2336                           ;main.c: 1040: PB1 = 0;
  2337  02E2  1086               	bcf	6,1
  2338                           
  2339                           ;main.c: 1041: PA6 = 0;
  2340  02E3  1305               	bcf	5,6
  2341                           
  2342                           ;main.c: 1042: PA7 = 0;
  2343  02E4  1385               	bcf	5,7
  2344                           
  2345                           ;main.c: 1045: enumMainLoopStep = MAIN_LOOP_STEP_INIT;
  2346  02E5  01C0               	clrf	main@enumMainLoopStep
  2347  02E6  2842               	goto	l3947
  2348  02E7                     l4439:	
  2349  02E7  083F               	movf	main@enumInteralStep,w
  2350                           
  2351                           ; Switch size 1, requested type "space"
  2352                           ; Number of cases is 3, Range of values is 0 to 2
  2353                           ; switch strategies available:
  2354                           ; Name         Instructions Cycles
  2355                           ; simple_byte           10     6 (average)
  2356                           ; direct_byte           13     7 (fixed)
  2357                           ; jumptable            260     6 (fixed)
  2358                           ; rangetable             7     6 (fixed)
  2359                           ; spacedrange           12     9 (fixed)
  2360                           ; locatedrange           3     3 (fixed)
  2361                           ;	Chosen strategy is simple_byte
  2362  02E8  3A00               	xorlw	0	; case 0
  2363  02E9  1903               	skipnz
  2364  02EA  2AA0               	goto	l907
  2365  02EB  3A01               	xorlw	1	; case 1
  2366  02EC  1903               	skipnz
  2367  02ED  2AAB               	goto	l4391
  2368  02EE  3A03               	xorlw	3	; case 2
  2369  02EF  1903               	skipnz
  2370  02F0  2AC0               	goto	l4403
  2371  02F1  2864               	goto	l703
  2372  02F2                     l4443:	
  2373  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  2374  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  2375  02F4  0840               	movf	main@enumMainLoopStep,w
  2376                           
  2377                           ; Switch size 1, requested type "space"
  2378                           ; Number of cases is 8, Range of values is 0 to 9
  2379                           ; switch strategies available:
  2380                           ; Name         Instructions Cycles
  2381                           ; simple_byte           25    13 (average)
  2382                           ; direct_byte           27     7 (fixed)
  2383                           ; jumptable            260     6 (fixed)
  2384                           ; rangetable            14     6 (fixed)
  2385                           ; spacedrange           26     9 (fixed)
  2386                           ; locatedrange          10     3 (fixed)
  2387                           ;	Chosen strategy is simple_byte
  2388  02F5  3A00               	xorlw	0	; case 0
  2389  02F6  1903               	skipnz
  2390  02F7  2850               	goto	l3955
  2391  02F8  3A01               	xorlw	1	; case 1
  2392  02F9  1903               	skipnz
  2393  02FA  2865               	goto	l3967
  2394  02FB  3A03               	xorlw	3	; case 2
  2395  02FC  1903               	skipnz
  2396  02FD  287C               	goto	l712
  2397  02FE  3A01               	xorlw	1	; case 3
  2398  02FF  1903               	skipnz
  2399  0300  287F               	goto	l3981
  2400  0301  3A07               	xorlw	7	; case 4
  2401  0302  1903               	skipnz
  2402  0303  28A5               	goto	l4005
  2403  0304  3A01               	xorlw	1	; case 5
  2404  0305  1903               	skipnz
  2405  0306  28AA               	goto	l4009
  2406  0307  3A0D               	xorlw	13	; case 8
  2407  0308  1903               	skipnz
  2408  0309  2A95               	goto	l4389
  2409  030A  3A01               	xorlw	1	; case 9
  2410  030B  1903               	skipnz
  2411  030C  2AE7               	goto	l4439
  2412  030D  2864               	goto	l703
  2413  030E  118A  280B         	ljmp	start
  2414  0310                     __end_of_main:	
  2415                           
  2416                           	psect	swtext1
  2417  044B                     __pswtext1:	
  2418  044B                     S4661:	
  2419  044B  118A  28EE         	ljmp	l752
  2420  044D  118A  28F1         	ljmp	l4037
  2421  044F  118A  28FA         	ljmp	l4047
  2422  0451  118A  2900         	ljmp	l4057
  2423  0453  118A  2906         	ljmp	l4067
  2424  0455  118A  290C         	ljmp	l4077
  2425  0457  118A  2916         	ljmp	l4087
  2426                           
  2427                           	psect	swtext2
  2428  0459                     __pswtext2:	
  2429  0459                     S4663:	
  2430  0459  118A  292A         	ljmp	l780
  2431  045B  118A  292D         	ljmp	l4101
  2432  045D  118A  2936         	ljmp	l4111
  2433  045F  118A  293C         	ljmp	l4121
  2434  0461  118A  2942         	ljmp	l4131
  2435  0463  118A  2948         	ljmp	l4141
  2436  0465  118A  2951         	ljmp	l4151
  2437                           
  2438                           	psect	swtext3
  2439  0467                     __pswtext3:	
  2440  0467                     S4665:	
  2441  0467  118A  2964         	ljmp	l807
  2442  0469  118A  2968         	ljmp	l4165
  2443  046B  118A  2971         	ljmp	l4175
  2444  046D  118A  2977         	ljmp	l4185
  2445  046F  118A  297D         	ljmp	l4195
  2446  0471  118A  2985         	ljmp	l4205
  2447                           
  2448                           	psect	text583
  2449  0310                     __ptext583:	
  2450 ;; =============== function _main ends ============
  2451                           
  2452                           
  2453 ;; *************** function _process_AD_Converter_Value *****************
  2454 ;; Defined at:
  2455 ;;		line 102 in file "C:\190604\AK7030-OTP\common.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;		None
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;		None
  2460 ;; Return value:  Size  Location     Type
  2461 ;;		None               void
  2462 ;; Registers used:
  2463 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: FFE9F/0
  2468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2469 ;;      Params:         0       0       0       0       0
  2470 ;;      Locals:         0       0       0       0       0
  2471 ;;      Temps:          0       0       0       0       0
  2472 ;;      Totals:         0       0       0       0       0
  2473 ;;Total ram usage:        0 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:    4
  2476 ;; This function calls:
  2477 ;;		_getAD_ConvertFlag
  2478 ;;		_setAD_ConvertFlag
  2479 ;;		_AD_Sample
  2480 ;;		_adc_test_init
  2481 ;;		_adc_start
  2482 ;; This function is called by:
  2483 ;;		_main
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486  0310                     _process_AD_Converter_Value:	
  2487                           
  2488                           ;common.c: 67: return adc_convert_flag;
  2489                           
  2490                           ; Regs used in _getAD_ConvertFlag: [wreg]
  2491                           
  2492                           ;common.c: 103: if(getAD_ConvertFlag())
  2493                           
  2494                           ; Regs used in _process_AD_Converter_Value: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2495  0310  0879               	movf	_adc_convert_flag,w
  2496  0311  3A00               	xorlw	0
  2497  0312  1903               	skipnz
  2498  0313  0008               	return
  2499                           
  2500                           ;common.c: 104: {
  2501                           ;common.c: 105: setAD_ConvertFlag(0);
  2502  0314  3000               	movlw	0
  2503  0315  232F  118A         	fcall	_setAD_ConvertFlag
  2504                           
  2505                           ;common.c: 106: AD_Sample();
  2506  0317  2334  118A         	fcall	_AD_Sample
  2507                           
  2508                           ;common.c: 107: if(4 == sampleChannelSelect)
  2509  0319  085B               	movf	_sampleChannelSelect,w
  2510  031A  3A04               	xorlw	4
  2511  031B  1D03               	skipz
  2512  031C  2B21               	goto	l3923
  2513                           
  2514                           ;common.c: 108: adc_test_init(4,3);
  2515  031D  3003               	movlw	3
  2516  031E  00D6               	movwf	?_adc_test_init
  2517  031F  3004               	movlw	4
  2518  0320  2B2A               	goto	L10
  2519  0321                     l3923:	
  2520                           
  2521                           ;common.c: 109: else if(1 == sampleChannelSelect)
  2522  0321  0B5B               	decfsz	_sampleChannelSelect,w
  2523  0322  2B27               	goto	l3927
  2524                           
  2525                           ;common.c: 110: adc_test_init(1,3);
  2526  0323  3003               	movlw	3
  2527  0324  00D6               	movwf	?_adc_test_init
  2528  0325  3001               	movlw	1
  2529  0326  2B2A               	goto	L10
  2530  0327                     l3927:	
  2531                           
  2532                           ;common.c: 111: else
  2533                           ;common.c: 112: adc_test_init(14,3);
  2534  0327  3003               	movlw	3
  2535  0328  00D6               	movwf	?_adc_test_init
  2536  0329  300E               	movlw	14
  2537  032A                     L10:	
  2538  032A  239C  118A         	fcall	_adc_test_init
  2539                           
  2540                           ;common.c: 114: adc_start();
  2541  032C  2BB1               	ljmp	l3739
  2542  032D                     __end_of_process_AD_Converter_Value:	
  2543  032D                     __ptext589:	
  2544 ;; =============== function _setAD_ConvertFlag ends ============
  2545                           
  2546                           
  2547 ;; *************** function _getAD_ConvertFlag *****************
  2548 ;; Defined at:
  2549 ;;		line 66 in file "C:\190604\AK7030-OTP\common.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;		None
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;		None
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  1    wreg      unsigned char 
  2556 ;; Registers used:
  2557 ;;		wreg
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: FFFFF/0
  2562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2563 ;;      Params:         0       0       0       0       0
  2564 ;;      Locals:         0       0       0       0       0
  2565 ;;      Temps:          0       0       0       0       0
  2566 ;;      Totals:         0       0       0       0       0
  2567 ;;Total ram usage:        0 bytes
  2568 ;; Hardware stack levels used:    1
  2569 ;; Hardware stack levels required when called:    2
  2570 ;; This function calls:
  2571 ;;		Nothing
  2572 ;; This function is called by:
  2573 ;;		_process_AD_Converter_Value
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576  032D                     _getAD_ConvertFlag:	
  2577                           
  2578                           ;common.c: 67: return adc_convert_flag;
  2579                           
  2580                           ; Regs used in _getAD_ConvertFlag: [wreg]
  2581  032D  0879               	movf	_adc_convert_flag,w
  2582  032E  0008               	return
  2583  032F                     __end_of_getAD_ConvertFlag:	
  2584  032F                     __ptext588:	
  2585 ;; =============== function _getAdOriginalValue ends ============
  2586                           
  2587                           
  2588 ;; *************** function _setAD_ConvertFlag *****************
  2589 ;; Defined at:
  2590 ;;		line 72 in file "C:\190604\AK7030-OTP\common.c"
  2591 ;; Parameters:    Size  Location     Type
  2592 ;;  flag            1    wreg     unsigned char 
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;  flag            1    0[BANK0 ] unsigned char 
  2595 ;; Return value:  Size  Location     Type
  2596 ;;		None               void
  2597 ;; Registers used:
  2598 ;;		wreg
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 60/0
  2602 ;;		Unchanged: FFF9F/0
  2603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2604 ;;      Params:         0       0       0       0       0
  2605 ;;      Locals:         0       1       0       0       0
  2606 ;;      Temps:          0       0       0       0       0
  2607 ;;      Totals:         0       1       0       0       0
  2608 ;;Total ram usage:        1 bytes
  2609 ;; Hardware stack levels used:    1
  2610 ;; Hardware stack levels required when called:    2
  2611 ;; This function calls:
  2612 ;;		Nothing
  2613 ;; This function is called by:
  2614 ;;		_process_AD_Converter_Value
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617  032F                     _setAD_ConvertFlag:	
  2618                           
  2619                           ; Regs used in _setAD_ConvertFlag: [wreg]
  2620                           ;setAD_ConvertFlag@flag stored from wreg
  2621  032F  1283               	bcf	3,5	;RP0=0, select bank0
  2622  0330  1303               	bcf	3,6	;RP1=0, select bank0
  2623  0331  00D6               	movwf	setAD_ConvertFlag@flag
  2624                           
  2625                           ;common.c: 73: adc_convert_flag = flag;
  2626  0332  00F9               	movwf	_adc_convert_flag
  2627  0333  0008               	return
  2628  0334                     __end_of_setAD_ConvertFlag:	
  2629  0334                     __ptext585:	
  2630 ;; =============== function _clearPinPortAndTimer ends ============
  2631                           
  2632                           
  2633 ;; *************** function _AD_Sample *****************
  2634 ;; Defined at:
  2635 ;;		line 128 in file "C:\190604\AK7030-OTP\common.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;		None
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;  index           1    4[BANK0 ] unsigned char 
  2640 ;; Return value:  Size  Location     Type
  2641 ;;		None               void
  2642 ;; Registers used:
  2643 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2644 ;; Tracked objects:
  2645 ;;		On entry : 60/0
  2646 ;;		On exit  : 60/0
  2647 ;;		Unchanged: FFE9F/0
  2648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2649 ;;      Params:         0       0       0       0       0
  2650 ;;      Locals:         0       1       0       0       0
  2651 ;;      Temps:          0       2       0       0       0
  2652 ;;      Totals:         0       3       0       0       0
  2653 ;;Total ram usage:        3 bytes
  2654 ;; Hardware stack levels used:    1
  2655 ;; Hardware stack levels required when called:    3
  2656 ;; This function calls:
  2657 ;;		_getAdOriginalValue
  2658 ;; This function is called by:
  2659 ;;		_process_AD_Converter_Value
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662  0334                     _AD_Sample:	
  2663                           
  2664                           ;common.c: 129: if(sampleTimes < 6)
  2665                           
  2666                           ; Regs used in _AD_Sample: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2667  0334  3006               	movlw	6
  2668  0335  023C               	subwf	_sampleTimes,w
  2669  0336  1803               	skipnc
  2670  0337  0008               	return
  2671                           
  2672                           ;common.c: 130: {
  2673                           ;common.c: 132: buffer_Sample_AD_Value[sampleTimes] = getAdOriginalValue();
  2674  0338  2397  118A         	fcall	_getAdOriginalValue
  2675  033A  1003               	clrc
  2676  033B  0D3C               	rlf	_sampleTimes,w
  2677  033C  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  2678  033D  0084               	movwf	4
  2679  033E  0856               	movf	?_getAdOriginalValue,w
  2680  033F  1383               	bcf	3,7	;select IRP bank0
  2681  0340  0080               	movwf	0
  2682  0341  0A84               	incf	4,f
  2683  0342  0857               	movf	?_getAdOriginalValue+1,w
  2684  0343  0080               	movwf	0
  2685                           
  2686                           ;common.c: 134: if(sampleTimes == 0)
  2687  0344  08BC               	movf	_sampleTimes,f
  2688  0345  1D03               	skipz
  2689  0346  2B4F               	goto	l3871
  2690                           
  2691                           ;common.c: 135: {
  2692                           ;common.c: 136: multiFilterMaxValue = buffer_Sample_AD_Value[0];
  2693  0347  0821               	movf	_buffer_Sample_AD_Value+1,w
  2694  0348  00B5               	movwf	_multiFilterMaxValue+1
  2695  0349  0820               	movf	_buffer_Sample_AD_Value,w
  2696  034A  00B4               	movwf	_multiFilterMaxValue
  2697                           
  2698                           ;common.c: 137: multiFilterMinValue = buffer_Sample_AD_Value[0];
  2699  034B  0821               	movf	_buffer_Sample_AD_Value+1,w
  2700  034C  00B7               	movwf	_multiFilterMinValue+1
  2701  034D  0820               	movf	_buffer_Sample_AD_Value,w
  2702  034E  00B6               	movwf	_multiFilterMinValue
  2703  034F                     l3871:	
  2704                           
  2705                           ;common.c: 138: }
  2706                           ;common.c: 140: if(multiFilterMaxValue < buffer_Sample_AD_Value[sampleTimes])
  2707  034F  23B4  118A         	fcall	PL2	;call to abstracted procedure
  2708  0351  0235               	subwf	_multiFilterMaxValue+1,w
  2709  0352  1D03               	skipz
  2710  0353  2B56               	goto	u915
  2711  0354  0858               	movf	??_AD_Sample,w
  2712  0355  0234               	subwf	_multiFilterMaxValue,w
  2713  0356                     u915:	
  2714  0356  1803               	skipnc
  2715  0357  2B61               	goto	l1640
  2716                           
  2717                           ;common.c: 141: {
  2718                           ;common.c: 142: multiFilterMaxValue = buffer_Sample_AD_Value[sampleTimes];
  2719  0358  1003               	clrc
  2720  0359  0D3C               	rlf	_sampleTimes,w
  2721  035A  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  2722  035B  0084               	movwf	4
  2723  035C  0800               	movf	0,w
  2724  035D  00B4               	movwf	_multiFilterMaxValue
  2725  035E  0A84               	incf	4,f
  2726  035F  0800               	movf	0,w
  2727  0360  00B5               	movwf	_multiFilterMaxValue+1
  2728  0361                     l1640:	
  2729                           
  2730                           ;common.c: 143: }
  2731                           ;common.c: 144: if(multiFilterMinValue > buffer_Sample_AD_Value[sampleTimes])
  2732  0361  23B4  118A         	fcall	PL2	;call to abstracted procedure
  2733  0363  0837               	movf	_multiFilterMinValue+1,w
  2734  0364  0259               	subwf	??_AD_Sample+1,w
  2735  0365  1D03               	skipz
  2736  0366  2B69               	goto	u925
  2737  0367  0836               	movf	_multiFilterMinValue,w
  2738  0368  0258               	subwf	??_AD_Sample,w
  2739  0369                     u925:	
  2740  0369  1803               	skipnc
  2741  036A  2B74               	goto	l3877
  2742                           
  2743                           ;common.c: 145: {
  2744                           ;common.c: 146: multiFilterMinValue = buffer_Sample_AD_Value[sampleTimes];
  2745  036B  1003               	clrc
  2746  036C  0D3C               	rlf	_sampleTimes,w
  2747  036D  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  2748  036E  0084               	movwf	4
  2749  036F  0800               	movf	0,w
  2750  0370  00B6               	movwf	_multiFilterMinValue
  2751  0371  0A84               	incf	4,f
  2752  0372  0800               	movf	0,w
  2753  0373  00B7               	movwf	_multiFilterMinValue+1
  2754  0374                     l3877:	
  2755  0374  3006               	movlw	6
  2756                           
  2757                           ;common.c: 151: sampleTimes++;
  2758  0375  0ABC               	incf	_sampleTimes,f
  2759                           
  2760                           ;common.c: 153: if(sampleTimes >= 6)
  2761  0376  023C               	subwf	_sampleTimes,w
  2762  0377  1C03               	skipc
  2763  0378  0008               	return
  2764                           
  2765                           ;common.c: 154: {
  2766                           ;common.c: 155: sampleTimes = 0;
  2767  0379  01BC               	clrf	_sampleTimes
  2768                           
  2769                           ;common.c: 158: {
  2770                           ;common.c: 160: sampleCH14Value = ((multiFilterSumValue - multiFilterMaxValue - multiFil
      +                          terMinValue))>> 2;
  2771  037A  085B               	movf	_sampleChannelSelect,w
  2772  037B  3A0E               	xorlw	14
  2773  037C  1D03               	skipz
  2774  037D  2B80               	goto	l3887
  2775                           
  2776                           ;common.c: 161: sampleChannelSelect = 4;
  2777  037E  3004               	movlw	4
  2778  037F  2B88               	goto	L11
  2779  0380                     l3887:	
  2780                           ;common.c: 162: }
  2781                           
  2782                           
  2783                           ;common.c: 164: {
  2784                           ;common.c: 165: sampleCH4Value = ((multiFilterSumValue - multiFilterMaxValue - multiFilt
      +                          erMinValue))>> 2;
  2785  0380  085B               	movf	_sampleChannelSelect,w
  2786  0381  3A04               	xorlw	4
  2787  0382  1D03               	skipz
  2788  0383  2B87               	goto	l3893
  2789                           
  2790                           ;common.c: 166: sampleChannelSelect = 1;
  2791  0384  01DB               	clrf	_sampleChannelSelect
  2792  0385  0ADB               	incf	_sampleChannelSelect,f
  2793                           
  2794                           ;common.c: 167: }
  2795  0386  2B89               	goto	l3897
  2796  0387                     l3893:	
  2797                           
  2798                           ;common.c: 171: sampleChannelSelect = 14;
  2799  0387  300E               	movlw	14
  2800  0388                     L11:	
  2801  0388  00DB               	movwf	_sampleChannelSelect
  2802  0389                     l3897:	
  2803                           ;common.c: 172: }
  2804                           
  2805                           
  2806                           ;common.c: 177: }
  2807                           ;common.c: 179: for(unsigned char index = 0; index < 6;index++)
  2808  0389  01DA               	clrf	AD_Sample@index
  2809  038A                     l3903:	
  2810                           
  2811                           ;common.c: 180: buffer_Sample_AD_Value[index] = 0;
  2812  038A  1003               	clrc
  2813  038B  0D5A               	rlf	AD_Sample@index,w
  2814  038C  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  2815  038D  0084               	movwf	4
  2816  038E  3006               	movlw	6
  2817  038F  0180               	clrf	0
  2818  0390  0A84               	incf	4,f
  2819  0391  0180               	clrf	0
  2820  0392  0ADA               	incf	AD_Sample@index,f
  2821  0393  025A               	subwf	AD_Sample@index,w
  2822  0394  1803               	btfsc	3,0
  2823  0395  0008               	return
  2824  0396  2B8A               	goto	l3903
  2825  0397                     __end_of_AD_Sample:	
  2826  0397                     __ptext587:	
  2827 ;; =============== function _clearAllTimer ends ============
  2828                           
  2829                           
  2830 ;; *************** function _getAdOriginalValue *****************
  2831 ;; Defined at:
  2832 ;;		line 78 in file "C:\190604\AK7030-OTP\common.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;		None
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;		None
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  2    0[BANK0 ] unsigned int 
  2839 ;; Registers used:
  2840 ;;		wreg
  2841 ;; Tracked objects:
  2842 ;;		On entry : 60/0
  2843 ;;		On exit  : 60/0
  2844 ;;		Unchanged: FFF9F/0
  2845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2846 ;;      Params:         0       2       0       0       0
  2847 ;;      Locals:         0       0       0       0       0
  2848 ;;      Temps:          0       0       0       0       0
  2849 ;;      Totals:         0       2       0       0       0
  2850 ;;Total ram usage:        2 bytes
  2851 ;; Hardware stack levels used:    1
  2852 ;; Hardware stack levels required when called:    2
  2853 ;; This function calls:
  2854 ;;		Nothing
  2855 ;; This function is called by:
  2856 ;;		_AD_Sample
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859  0397                     _getAdOriginalValue:	
  2860                           
  2861                           ;common.c: 79: return adc_original_value;
  2862                           
  2863                           ; Regs used in _getAdOriginalValue: [wreg]
  2864  0397  0833               	movf	_adc_original_value+1,w
  2865  0398  00D7               	movwf	?_getAdOriginalValue+1
  2866  0399  0832               	movf	_adc_original_value,w
  2867  039A  00D6               	movwf	?_getAdOriginalValue
  2868  039B  0008               	return
  2869  039C                     __end_of_getAdOriginalValue:	
  2870  039C                     __ptext605:	
  2871 ;; =============== function _dac_init ends ============
  2872                           
  2873                           
  2874 ;; *************** function _adc_test_init *****************
  2875 ;; Defined at:
  2876 ;;		line 85 in file "C:\190604\AK7030-OTP\periph.c"
  2877 ;; Parameters:    Size  Location     Type
  2878 ;;  channel         1    wreg     unsigned char 
  2879 ;;  ref             1    0[BANK0 ] unsigned char 
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;  channel         1    2[BANK0 ] unsigned char 
  2882 ;; Return value:  Size  Location     Type
  2883 ;;		None               void
  2884 ;; Registers used:
  2885 ;;		wreg, status,2, status,0
  2886 ;; Tracked objects:
  2887 ;;		On entry : 60/0
  2888 ;;		On exit  : 60/20
  2889 ;;		Unchanged: FFF9F/0
  2890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2891 ;;      Params:         0       1       0       0       0
  2892 ;;      Locals:         0       1       0       0       0
  2893 ;;      Temps:          0       1       0       0       0
  2894 ;;      Totals:         0       3       0       0       0
  2895 ;;Total ram usage:        3 bytes
  2896 ;; Hardware stack levels used:    1
  2897 ;; Hardware stack levels required when called:    2
  2898 ;; This function calls:
  2899 ;;		Nothing
  2900 ;; This function is called by:
  2901 ;;		_main
  2902 ;;		_process_AD_Converter_Value
  2903 ;; This function uses a non-reentrant model
  2904 ;;
  2905  039C                     _adc_test_init:	
  2906                           
  2907                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  2908                           ;adc_test_init@channel stored from wreg
  2909  039C  00D8               	movwf	adc_test_init@channel
  2910                           
  2911                           ;periph.c: 86: ADCON0 = 0x00;
  2912  039D  019F               	clrf	31	;volatile
  2913                           
  2914                           ;periph.c: 87: ADCON0|=channel<<2;
  2915  039E  00D7               	movwf	??_adc_test_init
  2916  039F  1003               	clrc
  2917  03A0  0DD7               	rlf	??_adc_test_init,f
  2918  03A1  1003               	clrc
  2919  03A2  0D57               	rlf	??_adc_test_init,w
  2920  03A3  049F               	iorwf	31,f	;volatile
  2921                           
  2922                           ;periph.c: 88: ADCON1|=ref<<6;
  2923  03A4  0856               	movf	adc_test_init@ref,w
  2924  03A5  00D7               	movwf	??_adc_test_init
  2925  03A6  0CD7               	rrf	??_adc_test_init,f
  2926  03A7  0CD7               	rrf	??_adc_test_init,f
  2927  03A8  0C57               	rrf	??_adc_test_init,w
  2928  03A9  39C0               	andlw	192
  2929  03AA  1683               	bsf	3,5	;RP0=1, select bank1
  2930  03AB  049F               	iorwf	31,f	;volatile
  2931                           
  2932                           ;periph.c: 89: ADON=1;
  2933  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  2934  03AD  141F               	bsf	31,0
  2935                           
  2936                           ;periph.c: 90: ADIE=1;
  2937  03AE  1683               	bsf	3,5	;RP0=1, select bank1
  2938  03AF  150D               	bsf	13,2
  2939  03B0  0008               	return
  2940  03B1                     __end_of_adc_test_init:	
  2941  03B1                     __ptext601:	
  2942 ;; =============== function _isPermitSampleTime ends ============
  2943                           
  2944                           
  2945 ;; *************** function _adc_start *****************
  2946 ;; Defined at:
  2947 ;;		line 100 in file "C:\190604\AK7030-OTP\periph.c"
  2948 ;; Parameters:    Size  Location     Type
  2949 ;;		None
  2950 ;; Auto vars:     Size  Location     Type
  2951 ;;		None
  2952 ;; Return value:  Size  Location     Type
  2953 ;;		None               void
  2954 ;; Registers used:
  2955 ;;		None
  2956 ;; Tracked objects:
  2957 ;;		On entry : 60/20
  2958 ;;		On exit  : 60/0
  2959 ;;		Unchanged: FFF9F/0
  2960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2961 ;;      Params:         0       0       0       0       0
  2962 ;;      Locals:         0       0       0       0       0
  2963 ;;      Temps:          0       0       0       0       0
  2964 ;;      Totals:         0       0       0       0       0
  2965 ;;Total ram usage:        0 bytes
  2966 ;; Hardware stack levels used:    1
  2967 ;; Hardware stack levels required when called:    2
  2968 ;; This function calls:
  2969 ;;		Nothing
  2970 ;; This function is called by:
  2971 ;;		_main
  2972 ;;		_process_AD_Converter_Value
  2973 ;; This function uses a non-reentrant model
  2974 ;;
  2975  03B1                     _adc_start:	
  2976  03B1                     l3739:	
  2977                           ; Regs used in _adc_start: []
  2978                           
  2979                           
  2980                           ;periph.c: 101: GO=1;
  2981  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  2982  03B2  149F               	bsf	31,1
  2983  03B3  0008               	return
  2984  03B4                     __end_of_adc_start:	
  2985  03B4                     PL2:	
  2986  03B4  1003               	clrc
  2987  03B5  0D3C               	rlf	_sampleTimes,w
  2988  03B6  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  2989  03B7  0084               	movwf	4
  2990  03B8  0800               	movf	0,w
  2991  03B9  00D8               	movwf	??_AD_Sample
  2992  03BA  0A84               	incf	4,f
  2993  03BB  0800               	movf	0,w
  2994  03BC  00D9               	movwf	??_AD_Sample+1
  2995  03BD  0008               	return
  2996                           
  2997                           	psect	text584
  2998  0426                     __ptext584:	
  2999 ;; =============== function _process_AD_Converter_Value ends ============
  3000                           
  3001                           
  3002 ;; *************** function _clearPinPortAndTimer *****************
  3003 ;; Defined at:
  3004 ;;		line 92 in file "C:\190604\AK7030-OTP\main.c"
  3005 ;; Parameters:    Size  Location     Type
  3006 ;;		None
  3007 ;; Auto vars:     Size  Location     Type
  3008 ;;		None
  3009 ;; Return value:  Size  Location     Type
  3010 ;;		None               void
  3011 ;; Registers used:
  3012 ;;		status,2, status,0, pclath, cstack
  3013 ;; Tracked objects:
  3014 ;;		On entry : 60/0
  3015 ;;		On exit  : 60/0
  3016 ;;		Unchanged: FFF9F/0
  3017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3018 ;;      Params:         0       0       0       0       0
  3019 ;;      Locals:         0       0       0       0       0
  3020 ;;      Temps:          0       0       0       0       0
  3021 ;;      Totals:         0       0       0       0       0
  3022 ;;Total ram usage:        0 bytes
  3023 ;; Hardware stack levels used:    1
  3024 ;; Hardware stack levels required when called:    4
  3025 ;; This function calls:
  3026 ;;		_clearAllTimer
  3027 ;; This function is called by:
  3028 ;;		_main
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031  0426                     _clearPinPortAndTimer:	
  3032                           
  3033                           ;main.c: 93: PB0 = 0;
  3034                           
  3035                           ; Regs used in _clearPinPortAndTimer: [status,2+status,0+pclath+cstack]
  3036  0426  1006               	bcf	6,0
  3037                           
  3038                           ;main.c: 94: PA0 = 0;
  3039  0427  1005               	bcf	5,0
  3040                           
  3041                           ;main.c: 95: PA1 = 0;
  3042  0428  1085               	bcf	5,1
  3043                           
  3044                           ;main.c: 96: PA2 = 0;
  3045  0429  1105               	bcf	5,2
  3046                           
  3047                           ;main.c: 97: PA3 = 0;
  3048  042A  1185               	bcf	5,3
  3049                           
  3050                           ;main.c: 98: PA7 = 0;
  3051  042B  1385               	bcf	5,7
  3052                           
  3053                           ;main.c: 99: clearAllTimer();
  3054  042C  2C2D               	ljmp	l3861
  3055  042D                     __end_of_clearPinPortAndTimer:	
  3056  042D                     __ptext586:	
  3057 ;; =============== function _AD_Sample ends ============
  3058                           
  3059                           
  3060 ;; *************** function _clearAllTimer *****************
  3061 ;; Defined at:
  3062 ;;		line 83 in file "C:\190604\AK7030-OTP\main.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;		None
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;		None
  3067 ;; Return value:  Size  Location     Type
  3068 ;;		None               void
  3069 ;; Registers used:
  3070 ;;		status,2, status,0, pclath, cstack
  3071 ;; Tracked objects:
  3072 ;;		On entry : 60/0
  3073 ;;		On exit  : 60/0
  3074 ;;		Unchanged: FFF9F/0
  3075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3076 ;;      Params:         0       0       0       0       0
  3077 ;;      Locals:         0       0       0       0       0
  3078 ;;      Temps:          0       0       0       0       0
  3079 ;;      Totals:         0       0       0       0       0
  3080 ;;Total ram usage:        0 bytes
  3081 ;; Hardware stack levels used:    1
  3082 ;; Hardware stack levels required when called:    3
  3083 ;; This function calls:
  3084 ;;		_clearTwelveHoursTimer
  3085 ;;		_clearThreeHoursTimer
  3086 ;;		_clearTwentySecondsTimer
  3087 ;; This function is called by:
  3088 ;;		_clearPinPortAndTimer
  3089 ;;		_main
  3090 ;; This function uses a non-reentrant model
  3091 ;;
  3092  042D                     _clearAllTimer:	
  3093  042D                     l3861:	
  3094                           ; Regs used in _clearAllTimer: [status,2+status,0+pclath+cstack]
  3095                           
  3096                           
  3097                           ;main.c: 84: clearTwelveHoursTimer();
  3098  042D  2432  118A         	fcall	_clearTwelveHoursTimer
  3099                           
  3100                           ;main.c: 85: clearThreeHoursTimer();
  3101  042F  2435  118A         	fcall	_clearThreeHoursTimer
  3102                           
  3103                           ;main.c: 86: clearTwentySecondsTimer();
  3104  0431  2C38               	ljmp	l3699
  3105  0432                     __end_of_clearAllTimer:	
  3106  0432                     __ptext611:	
  3107 ;; =============== function _clearThreeHoursTimer ends ============
  3108                           
  3109                           
  3110 ;; *************** function _clearTwelveHoursTimer *****************
  3111 ;; Defined at:
  3112 ;;		line 215 in file "C:\190604\AK7030-OTP\common.c"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;		None
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;		None
  3117 ;; Return value:  Size  Location     Type
  3118 ;;		None               void
  3119 ;; Registers used:
  3120 ;;		status,2
  3121 ;; Tracked objects:
  3122 ;;		On entry : 60/0
  3123 ;;		On exit  : 60/0
  3124 ;;		Unchanged: FFF9F/0
  3125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3126 ;;      Params:         0       0       0       0       0
  3127 ;;      Locals:         0       0       0       0       0
  3128 ;;      Temps:          0       0       0       0       0
  3129 ;;      Totals:         0       0       0       0       0
  3130 ;;Total ram usage:        0 bytes
  3131 ;; Hardware stack levels used:    1
  3132 ;; Hardware stack levels required when called:    2
  3133 ;; This function calls:
  3134 ;;		Nothing
  3135 ;; This function is called by:
  3136 ;;		_clearAllTimer
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139  0432                     _clearTwelveHoursTimer:	
  3140                           
  3141                           ;common.c: 216: uiBigTimer = 0;
  3142                           
  3143                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  3144  0432  01F6               	clrf	_uiBigTimer
  3145  0433  01F7               	clrf	_uiBigTimer+1
  3146  0434  0008               	return
  3147  0435                     __end_of_clearTwelveHoursTimer:	
  3148  0435                     __ptext610:	
  3149 ;; =============== function _clearTwentySecondsTimer ends ============
  3150                           
  3151                           
  3152 ;; *************** function _clearThreeHoursTimer *****************
  3153 ;; Defined at:
  3154 ;;		line 221 in file "C:\190604\AK7030-OTP\common.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;		None
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;		None
  3159 ;; Return value:  Size  Location     Type
  3160 ;;		None               void
  3161 ;; Registers used:
  3162 ;;		status,2
  3163 ;; Tracked objects:
  3164 ;;		On entry : 60/0
  3165 ;;		On exit  : 60/0
  3166 ;;		Unchanged: FFF9F/0
  3167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3168 ;;      Params:         0       0       0       0       0
  3169 ;;      Locals:         0       0       0       0       0
  3170 ;;      Temps:          0       0       0       0       0
  3171 ;;      Totals:         0       0       0       0       0
  3172 ;;Total ram usage:        0 bytes
  3173 ;; Hardware stack levels used:    1
  3174 ;; Hardware stack levels required when called:    2
  3175 ;; This function calls:
  3176 ;;		Nothing
  3177 ;; This function is called by:
  3178 ;;		_clearAllTimer
  3179 ;;		_main
  3180 ;; This function uses a non-reentrant model
  3181 ;;
  3182  0435                     _clearThreeHoursTimer:	
  3183                           
  3184                           ;common.c: 222: uiSmallTimer = 0;
  3185                           
  3186                           ; Regs used in _clearThreeHoursTimer: [status,2]
  3187  0435  01B8               	clrf	_uiSmallTimer
  3188  0436  01B9               	clrf	_uiSmallTimer+1
  3189  0437  0008               	return
  3190  0438                     __end_of_clearThreeHoursTimer:	
  3191  0438                     __ptext609:	
  3192 ;; =============== function _clock_config ends ============
  3193                           
  3194                           
  3195 ;; *************** function _clearTwentySecondsTimer *****************
  3196 ;; Defined at:
  3197 ;;		line 226 in file "C:\190604\AK7030-OTP\common.c"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;		None
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;		None
  3202 ;; Return value:  Size  Location     Type
  3203 ;;		None               void
  3204 ;; Registers used:
  3205 ;;		status,2
  3206 ;; Tracked objects:
  3207 ;;		On entry : 60/0
  3208 ;;		On exit  : 60/0
  3209 ;;		Unchanged: FFF9F/0
  3210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3211 ;;      Params:         0       0       0       0       0
  3212 ;;      Locals:         0       0       0       0       0
  3213 ;;      Temps:          0       0       0       0       0
  3214 ;;      Totals:         0       0       0       0       0
  3215 ;;Total ram usage:        0 bytes
  3216 ;; Hardware stack levels used:    1
  3217 ;; Hardware stack levels required when called:    2
  3218 ;; This function calls:
  3219 ;;		Nothing
  3220 ;; This function is called by:
  3221 ;;		_clearAllTimer
  3222 ;; This function uses a non-reentrant model
  3223 ;;
  3224  0438                     _clearTwentySecondsTimer:	
  3225  0438                     l3699:	
  3226                           ; Regs used in _clearTwentySecondsTimer: [status,2]
  3227                           
  3228                           
  3229                           ;common.c: 227: uiTwentySecondsTimer = 0;
  3230  0438  01BA               	clrf	_uiTwentySecondsTimer
  3231  0439  01BB               	clrf	_uiTwentySecondsTimer+1
  3232  043A  0008               	return
  3233  043B                     __end_of_clearTwentySecondsTimer:	
  3234                           
  3235                           	psect	text590
  3236  04A7                     __ptext590:	
  3237 ;; =============== function _getAD_ConvertFlag ends ============
  3238                           
  3239                           
  3240 ;; *************** function _isFinishedThreeHoursTimer *****************
  3241 ;; Defined at:
  3242 ;;		line 265 in file "C:\190604\AK7030-OTP\common.c"
  3243 ;; Parameters:    Size  Location     Type
  3244 ;;		None
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;		None
  3247 ;; Return value:  Size  Location     Type
  3248 ;;                  1    wreg      unsigned char 
  3249 ;; Registers used:
  3250 ;;		wreg, status,2, status,0
  3251 ;; Tracked objects:
  3252 ;;		On entry : 60/0
  3253 ;;		On exit  : 60/0
  3254 ;;		Unchanged: FFF9F/0
  3255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3256 ;;      Params:         0       0       0       0       0
  3257 ;;      Locals:         0       0       0       0       0
  3258 ;;      Temps:          0       0       0       0       0
  3259 ;;      Totals:         0       0       0       0       0
  3260 ;;Total ram usage:        0 bytes
  3261 ;; Hardware stack levels used:    1
  3262 ;; Hardware stack levels required when called:    2
  3263 ;; This function calls:
  3264 ;;		Nothing
  3265 ;; This function is called by:
  3266 ;;		_main
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269  04A7                     _isFinishedThreeHoursTimer:	
  3270                           
  3271                           ;common.c: 266: if(uiSmallTimer == 0)
  3272                           
  3273                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  3274  04A7  0839               	movf	_uiSmallTimer+1,w
  3275  04A8  0438               	iorwf	_uiSmallTimer,w
  3276  04A9  1903               	btfsc	3,2
  3277                           
  3278                           ;common.c: 267: return 1;
  3279  04AA  3401               	retlw	1
  3280                           
  3281                           ;common.c: 268: else
  3282                           ;common.c: 269: return 0;
  3283  04AB  3400               	retlw	0
  3284  04AC                     __end_of_isFinishedThreeHoursTimer:	
  3285                           
  3286                           	psect	text591
  3287  04A0                     __ptext591:	
  3288 ;; =============== function _isFinishedThreeHoursTimer ends ============
  3289                           
  3290                           
  3291 ;; *************** function _startThreeHoursTimer *****************
  3292 ;; Defined at:
  3293 ;;		line 232 in file "C:\190604\AK7030-OTP\common.c"
  3294 ;; Parameters:    Size  Location     Type
  3295 ;;		None
  3296 ;; Auto vars:     Size  Location     Type
  3297 ;;		None
  3298 ;; Return value:  Size  Location     Type
  3299 ;;		None               void
  3300 ;; Registers used:
  3301 ;;		wreg
  3302 ;; Tracked objects:
  3303 ;;		On entry : 60/60
  3304 ;;		On exit  : 60/0
  3305 ;;		Unchanged: FFF9F/0
  3306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3307 ;;      Params:         0       0       0       0       0
  3308 ;;      Locals:         0       0       0       0       0
  3309 ;;      Temps:          0       0       0       0       0
  3310 ;;      Totals:         0       0       0       0       0
  3311 ;;Total ram usage:        0 bytes
  3312 ;; Hardware stack levels used:    1
  3313 ;; Hardware stack levels required when called:    2
  3314 ;; This function calls:
  3315 ;;		Nothing
  3316 ;; This function is called by:
  3317 ;;		_main
  3318 ;; This function uses a non-reentrant model
  3319 ;;
  3320  04A0                     _startThreeHoursTimer:	
  3321                           
  3322                           ;common.c: 233: uiSmallTimer = 10800;
  3323                           
  3324                           ; Regs used in _startThreeHoursTimer: [wreg]
  3325  04A0  3030               	movlw	48
  3326  04A1  1283               	bcf	3,5	;RP0=0, select bank0
  3327  04A2  1303               	bcf	3,6	;RP1=0, select bank0
  3328  04A3  00B8               	movwf	_uiSmallTimer
  3329  04A4  302A               	movlw	42
  3330  04A5  00B9               	movwf	_uiSmallTimer+1
  3331  04A6  0008               	return
  3332  04A7                     __end_of_startThreeHoursTimer:	
  3333                           
  3334                           	psect	text592
  3335  04AC                     __ptext592:	
  3336 ;; =============== function _startThreeHoursTimer ends ============
  3337                           
  3338                           
  3339 ;; *************** function _isFinishedTwentySecondsTimer *****************
  3340 ;; Defined at:
  3341 ;;		line 248 in file "C:\190604\AK7030-OTP\common.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;		None
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;		None
  3346 ;; Return value:  Size  Location     Type
  3347 ;;                  1    wreg      unsigned char 
  3348 ;; Registers used:
  3349 ;;		wreg, status,2, status,0
  3350 ;; Tracked objects:
  3351 ;;		On entry : 60/0
  3352 ;;		On exit  : 60/0
  3353 ;;		Unchanged: FFF9F/0
  3354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3355 ;;      Params:         0       0       0       0       0
  3356 ;;      Locals:         0       0       0       0       0
  3357 ;;      Temps:          0       0       0       0       0
  3358 ;;      Totals:         0       0       0       0       0
  3359 ;;Total ram usage:        0 bytes
  3360 ;; Hardware stack levels used:    1
  3361 ;; Hardware stack levels required when called:    2
  3362 ;; This function calls:
  3363 ;;		Nothing
  3364 ;; This function is called by:
  3365 ;;		_main
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368  04AC                     _isFinishedTwentySecondsTimer:	
  3369                           
  3370                           ;common.c: 249: if(0 == uiTwentySecondsTimer)
  3371                           
  3372                           ; Regs used in _isFinishedTwentySecondsTimer: [wreg+status,2+status,0]
  3373  04AC  083B               	movf	_uiTwentySecondsTimer+1,w
  3374  04AD  043A               	iorwf	_uiTwentySecondsTimer,w
  3375  04AE  1903               	btfsc	3,2
  3376                           
  3377                           ;common.c: 250: return 1;
  3378  04AF  3401               	retlw	1
  3379                           
  3380                           ;common.c: 251: else
  3381                           ;common.c: 252: return 0;
  3382  04B0  3400               	retlw	0
  3383  04B1                     __end_of_isFinishedTwentySecondsTimer:	
  3384                           
  3385                           	psect	text593
  3386  04B1                     __ptext593:	
  3387 ;; =============== function _isFinishedTwentySecondsTimer ends ============
  3388                           
  3389                           
  3390 ;; *************** function _getAdOriginaCh4Value *****************
  3391 ;; Defined at:
  3392 ;;		line 89 in file "C:\190604\AK7030-OTP\common.c"
  3393 ;; Parameters:    Size  Location     Type
  3394 ;;		None
  3395 ;; Auto vars:     Size  Location     Type
  3396 ;;		None
  3397 ;; Return value:  Size  Location     Type
  3398 ;;                  2    0[BANK0 ] unsigned int 
  3399 ;; Registers used:
  3400 ;;		wreg
  3401 ;; Tracked objects:
  3402 ;;		On entry : 60/0
  3403 ;;		On exit  : 60/0
  3404 ;;		Unchanged: FFF9F/0
  3405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3406 ;;      Params:         0       2       0       0       0
  3407 ;;      Locals:         0       0       0       0       0
  3408 ;;      Temps:          0       0       0       0       0
  3409 ;;      Totals:         0       2       0       0       0
  3410 ;;Total ram usage:        2 bytes
  3411 ;; Hardware stack levels used:    1
  3412 ;; Hardware stack levels required when called:    2
  3413 ;; This function calls:
  3414 ;;		Nothing
  3415 ;; This function is called by:
  3416 ;;		_main
  3417 ;; This function uses a non-reentrant model
  3418 ;;
  3419  04B1                     _getAdOriginaCh4Value:	
  3420                           
  3421                           ;common.c: 90: return adc_original_CH4_value;
  3422                           
  3423                           ; Regs used in _getAdOriginaCh4Value: [wreg]
  3424  04B1  0831               	movf	_adc_original_CH4_value+1,w
  3425  04B2  00D7               	movwf	?_getAdOriginaCh4Value+1
  3426  04B3  0830               	movf	_adc_original_CH4_value,w
  3427  04B4  00D6               	movwf	?_getAdOriginaCh4Value
  3428  04B5  0008               	return
  3429  04B6                     __end_of_getAdOriginaCh4Value:	
  3430                           
  3431                           	psect	text594
  3432  04D4                     __ptext594:	
  3433 ;; =============== function _getAdOriginaCh4Value ends ============
  3434                           
  3435                           
  3436 ;; *************** function _startTwentySecondsTimer *****************
  3437 ;; Defined at:
  3438 ;;		line 242 in file "C:\190604\AK7030-OTP\common.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;		None
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;		None
  3443 ;; Return value:  Size  Location     Type
  3444 ;;		None               void
  3445 ;; Registers used:
  3446 ;;		wreg
  3447 ;; Tracked objects:
  3448 ;;		On entry : 60/0
  3449 ;;		On exit  : 60/0
  3450 ;;		Unchanged: FFF9F/0
  3451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3452 ;;      Params:         0       0       0       0       0
  3453 ;;      Locals:         0       0       0       0       0
  3454 ;;      Temps:          0       0       0       0       0
  3455 ;;      Totals:         0       0       0       0       0
  3456 ;;Total ram usage:        0 bytes
  3457 ;; Hardware stack levels used:    1
  3458 ;; Hardware stack levels required when called:    2
  3459 ;; This function calls:
  3460 ;;		Nothing
  3461 ;; This function is called by:
  3462 ;;		_main
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465  04D4                     _startTwentySecondsTimer:	
  3466                           
  3467                           ;common.c: 243: uiTwentySecondsTimer = 20;
  3468                           
  3469                           ; Regs used in _startTwentySecondsTimer: [wreg]
  3470  04D4  3014               	movlw	20
  3471  04D5  00BA               	movwf	_uiTwentySecondsTimer
  3472  04D6  01BB               	clrf	_uiTwentySecondsTimer+1
  3473  04D7  0008               	return
  3474  04D8                     __end_of_startTwentySecondsTimer:	
  3475                           
  3476                           	psect	text595
  3477  04B6                     __ptext595:	
  3478 ;; =============== function _startTwentySecondsTimer ends ============
  3479                           
  3480                           
  3481 ;; *************** function _isFinishedTwelveHoursTimer *****************
  3482 ;; Defined at:
  3483 ;;		line 257 in file "C:\190604\AK7030-OTP\common.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;		None
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;		None
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  1    wreg      unsigned char 
  3490 ;; Registers used:
  3491 ;;		wreg, status,2, status,0
  3492 ;; Tracked objects:
  3493 ;;		On entry : 60/0
  3494 ;;		On exit  : 60/0
  3495 ;;		Unchanged: FFF9F/0
  3496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3497 ;;      Params:         0       0       0       0       0
  3498 ;;      Locals:         0       0       0       0       0
  3499 ;;      Temps:          0       0       0       0       0
  3500 ;;      Totals:         0       0       0       0       0
  3501 ;;Total ram usage:        0 bytes
  3502 ;; Hardware stack levels used:    1
  3503 ;; Hardware stack levels required when called:    2
  3504 ;; This function calls:
  3505 ;;		Nothing
  3506 ;; This function is called by:
  3507 ;;		_main
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510  04B6                     _isFinishedTwelveHoursTimer:	
  3511                           
  3512                           ;common.c: 258: if(uiBigTimer == 0)
  3513                           
  3514                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  3515  04B6  0877               	movf	_uiBigTimer+1,w
  3516  04B7  0476               	iorwf	_uiBigTimer,w
  3517  04B8  1903               	btfsc	3,2
  3518                           
  3519                           ;common.c: 259: return 1;
  3520  04B9  3401               	retlw	1
  3521                           
  3522                           ;common.c: 260: else
  3523                           ;common.c: 261: return 0;
  3524  04BA  3400               	retlw	0
  3525  04BB                     __end_of_isFinishedTwelveHoursTimer:	
  3526                           
  3527                           	psect	text596
  3528  04BB                     __ptext596:	
  3529 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  3530                           
  3531                           
  3532 ;; *************** function _startTwelveHourTimer *****************
  3533 ;; Defined at:
  3534 ;;		line 205 in file "C:\190604\AK7030-OTP\common.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;		None
  3537 ;; Auto vars:     Size  Location     Type
  3538 ;;		None
  3539 ;; Return value:  Size  Location     Type
  3540 ;;		None               void
  3541 ;; Registers used:
  3542 ;;		wreg
  3543 ;; Tracked objects:
  3544 ;;		On entry : 60/0
  3545 ;;		On exit  : 60/0
  3546 ;;		Unchanged: FFF9F/0
  3547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3548 ;;      Params:         0       0       0       0       0
  3549 ;;      Locals:         0       0       0       0       0
  3550 ;;      Temps:          0       0       0       0       0
  3551 ;;      Totals:         0       0       0       0       0
  3552 ;;Total ram usage:        0 bytes
  3553 ;; Hardware stack levels used:    1
  3554 ;; Hardware stack levels required when called:    2
  3555 ;; This function calls:
  3556 ;;		Nothing
  3557 ;; This function is called by:
  3558 ;;		_main
  3559 ;; This function uses a non-reentrant model
  3560 ;;
  3561  04BB                     _startTwelveHourTimer:	
  3562                           
  3563                           ;common.c: 206: uiBigTimer = 43200;
  3564                           
  3565                           ; Regs used in _startTwelveHourTimer: [wreg]
  3566  04BB  30C0               	movlw	192
  3567  04BC  00F6               	movwf	_uiBigTimer
  3568  04BD  30A8               	movlw	168
  3569  04BE  00F7               	movwf	_uiBigTimer+1
  3570  04BF  0008               	return
  3571  04C0                     __end_of_startTwelveHourTimer:	
  3572                           
  3573                           	psect	text597
  3574  04C0                     __ptext597:	
  3575 ;; =============== function _startTwelveHourTimer ends ============
  3576                           
  3577                           
  3578 ;; *************** function _getAdOriginalCh1Value *****************
  3579 ;; Defined at:
  3580 ;;		line 83 in file "C:\190604\AK7030-OTP\common.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;		None
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;		None
  3585 ;; Return value:  Size  Location     Type
  3586 ;;                  2    0[BANK0 ] unsigned int 
  3587 ;; Registers used:
  3588 ;;		wreg
  3589 ;; Tracked objects:
  3590 ;;		On entry : 60/0
  3591 ;;		On exit  : 60/0
  3592 ;;		Unchanged: FFF9F/0
  3593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3594 ;;      Params:         0       2       0       0       0
  3595 ;;      Locals:         0       0       0       0       0
  3596 ;;      Temps:          0       0       0       0       0
  3597 ;;      Totals:         0       2       0       0       0
  3598 ;;Total ram usage:        2 bytes
  3599 ;; Hardware stack levels used:    1
  3600 ;; Hardware stack levels required when called:    2
  3601 ;; This function calls:
  3602 ;;		Nothing
  3603 ;; This function is called by:
  3604 ;;		_main
  3605 ;; This function uses a non-reentrant model
  3606 ;;
  3607  04C0                     _getAdOriginalCh1Value:	
  3608                           
  3609                           ;common.c: 84: return adc_original_CH1_value;
  3610                           
  3611                           ; Regs used in _getAdOriginalCh1Value: [wreg]
  3612  04C0  082F               	movf	_adc_original_CH1_value+1,w
  3613  04C1  00D7               	movwf	?_getAdOriginalCh1Value+1
  3614  04C2  082E               	movf	_adc_original_CH1_value,w
  3615  04C3  00D6               	movwf	?_getAdOriginalCh1Value
  3616  04C4  0008               	return
  3617  04C5                     __end_of_getAdOriginalCh1Value:	
  3618                           
  3619                           	psect	text598
  3620  04C5                     __ptext598:	
  3621 ;; =============== function _getAdOriginalCh1Value ends ============
  3622                           
  3623                           
  3624 ;; *************** function _getAdOriginalCh14Value *****************
  3625 ;; Defined at:
  3626 ;;		line 95 in file "C:\190604\AK7030-OTP\common.c"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;		None
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;		None
  3631 ;; Return value:  Size  Location     Type
  3632 ;;                  2    0[BANK0 ] unsigned int 
  3633 ;; Registers used:
  3634 ;;		wreg
  3635 ;; Tracked objects:
  3636 ;;		On entry : 60/0
  3637 ;;		On exit  : 60/0
  3638 ;;		Unchanged: FFF9F/0
  3639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3640 ;;      Params:         0       2       0       0       0
  3641 ;;      Locals:         0       0       0       0       0
  3642 ;;      Temps:          0       0       0       0       0
  3643 ;;      Totals:         0       2       0       0       0
  3644 ;;Total ram usage:        2 bytes
  3645 ;; Hardware stack levels used:    1
  3646 ;; Hardware stack levels required when called:    2
  3647 ;; This function calls:
  3648 ;;		Nothing
  3649 ;; This function is called by:
  3650 ;;		_main
  3651 ;; This function uses a non-reentrant model
  3652 ;;
  3653  04C5                     _getAdOriginalCh14Value:	
  3654                           
  3655                           ;common.c: 96: return adc_original_CH14_value;
  3656                           
  3657                           ; Regs used in _getAdOriginalCh14Value: [wreg]
  3658  04C5  082D               	movf	_adc_original_CH14_value+1,w
  3659  04C6  00D7               	movwf	?_getAdOriginalCh14Value+1
  3660  04C7  082C               	movf	_adc_original_CH14_value,w
  3661  04C8  00D6               	movwf	?_getAdOriginalCh14Value
  3662  04C9  0008               	return
  3663  04CA                     __end_of_getAdOriginalCh14Value:	
  3664                           
  3665                           	psect	text599
  3666  04DB                     __ptext599:	
  3667 ;; =============== function _getAdOriginalCh14Value ends ============
  3668                           
  3669                           
  3670 ;; *************** function _clrSampeTime *****************
  3671 ;; Defined at:
  3672 ;;		line 283 in file "C:\190604\AK7030-OTP\common.c"
  3673 ;; Parameters:    Size  Location     Type
  3674 ;;		None
  3675 ;; Auto vars:     Size  Location     Type
  3676 ;;		None
  3677 ;; Return value:  Size  Location     Type
  3678 ;;		None               void
  3679 ;; Registers used:
  3680 ;;		status,2
  3681 ;; Tracked objects:
  3682 ;;		On entry : 0/0
  3683 ;;		On exit  : 0/0
  3684 ;;		Unchanged: FFFFF/0
  3685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3686 ;;      Params:         0       0       0       0       0
  3687 ;;      Locals:         0       0       0       0       0
  3688 ;;      Temps:          0       0       0       0       0
  3689 ;;      Totals:         0       0       0       0       0
  3690 ;;Total ram usage:        0 bytes
  3691 ;; Hardware stack levels used:    1
  3692 ;; Hardware stack levels required when called:    2
  3693 ;; This function calls:
  3694 ;;		Nothing
  3695 ;; This function is called by:
  3696 ;;		_main
  3697 ;; This function uses a non-reentrant model
  3698 ;;
  3699  04DB                     _clrSampeTime:	
  3700                           
  3701                           ;common.c: 284: timer.timer10msStopWatch = 0;
  3702                           
  3703                           ; Regs used in _clrSampeTime: [status,2]
  3704  04DB  01FA               	clrf	_timer
  3705  04DC  0008               	return
  3706  04DD                     __end_of_clrSampeTime:	
  3707                           
  3708                           	psect	text600
  3709  04CA                     __ptext600:	
  3710 ;; =============== function _clrSampeTime ends ============
  3711                           
  3712                           
  3713 ;; *************** function _isPermitSampleTime *****************
  3714 ;; Defined at:
  3715 ;;		line 273 in file "C:\190604\AK7030-OTP\common.c"
  3716 ;; Parameters:    Size  Location     Type
  3717 ;;		None
  3718 ;; Auto vars:     Size  Location     Type
  3719 ;;		None
  3720 ;; Return value:  Size  Location     Type
  3721 ;;                  1    wreg      unsigned char 
  3722 ;; Registers used:
  3723 ;;		wreg
  3724 ;; Tracked objects:
  3725 ;;		On entry : 0/0
  3726 ;;		On exit  : 0/0
  3727 ;;		Unchanged: FFFFF/0
  3728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3729 ;;      Params:         0       0       0       0       0
  3730 ;;      Locals:         0       0       0       0       0
  3731 ;;      Temps:          0       0       0       0       0
  3732 ;;      Totals:         0       0       0       0       0
  3733 ;;Total ram usage:        0 bytes
  3734 ;; Hardware stack levels used:    1
  3735 ;; Hardware stack levels required when called:    2
  3736 ;; This function calls:
  3737 ;;		Nothing
  3738 ;; This function is called by:
  3739 ;;		_main
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742  04CA                     _isPermitSampleTime:	
  3743                           
  3744                           ;common.c: 274: if(timer.timer10msStopWatch >= 10)
  3745                           
  3746                           ; Regs used in _isPermitSampleTime: [wreg]
  3747  04CA  300A               	movlw	10
  3748  04CB  027A               	subwf	_timer,w
  3749  04CC  1803               	btfsc	3,0
  3750                           
  3751                           ;common.c: 275: {
  3752                           ;common.c: 276: return 1;
  3753  04CD  3401               	retlw	1
  3754                           
  3755                           ;common.c: 278: else
  3756                           ;common.c: 279: return 0;
  3757  04CE  3400               	retlw	0
  3758  04CF                     __end_of_isPermitSampleTime:	
  3759                           
  3760                           	psect	text602
  3761  0490                     __ptext602:	
  3762 ;; =============== function _adc_start ends ============
  3763                           
  3764                           
  3765 ;; *************** function _op2_init *****************
  3766 ;; Defined at:
  3767 ;;		line 45 in file "C:\190604\AK7030-OTP\periph.c"
  3768 ;; Parameters:    Size  Location     Type
  3769 ;;		None
  3770 ;; Auto vars:     Size  Location     Type
  3771 ;;		None
  3772 ;; Return value:  Size  Location     Type
  3773 ;;		None               void
  3774 ;; Registers used:
  3775 ;;		wreg
  3776 ;; Tracked objects:
  3777 ;;		On entry : 17F/20
  3778 ;;		On exit  : 17F/20
  3779 ;;		Unchanged: FFE80/0
  3780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3781 ;;      Params:         0       0       0       0       0
  3782 ;;      Locals:         0       0       0       0       0
  3783 ;;      Temps:          0       0       0       0       0
  3784 ;;      Totals:         0       0       0       0       0
  3785 ;;Total ram usage:        0 bytes
  3786 ;; Hardware stack levels used:    1
  3787 ;; Hardware stack levels required when called:    2
  3788 ;; This function calls:
  3789 ;;		Nothing
  3790 ;; This function is called by:
  3791 ;;		_main
  3792 ;; This function uses a non-reentrant model
  3793 ;;
  3794  0490                     _op2_init:	
  3795                           
  3796                           ;periph.c: 52: OP2CON1=0x10;
  3797                           
  3798                           ; Regs used in _op2_init: [wreg]
  3799  0490  3010               	movlw	16
  3800  0491  009C               	movwf	28	;volatile
  3801                           
  3802                           ;periph.c: 54: OP2CON2=0x10;
  3803  0492  009D               	movwf	29	;volatile
  3804                           
  3805                           ;periph.c: 55: OP2CON0=0x80;
  3806  0493  3080               	movlw	128
  3807  0494  009B               	movwf	27	;volatile
  3808                           
  3809                           ;periph.c: 58: TRISA7=0;
  3810  0495  1385               	bcf	5,7
  3811                           
  3812                           ;periph.c: 60: TRISB7 = 1;
  3813  0496  1786               	bsf	6,7
  3814  0497  0008               	return
  3815  0498                     __end_of_op2_init:	
  3816                           
  3817                           	psect	text603
  3818  0473                     __ptext603:	
  3819 ;; =============== function _op2_init ends ============
  3820                           
  3821                           
  3822 ;; *************** function _op1_init *****************
  3823 ;; Defined at:
  3824 ;;		line 26 in file "C:\190604\AK7030-OTP\periph.c"
  3825 ;; Parameters:    Size  Location     Type
  3826 ;;		None
  3827 ;; Auto vars:     Size  Location     Type
  3828 ;;		None
  3829 ;; Return value:  Size  Location     Type
  3830 ;;		None               void
  3831 ;; Registers used:
  3832 ;;		wreg
  3833 ;; Tracked objects:
  3834 ;;		On entry : 17F/20
  3835 ;;		On exit  : 17F/20
  3836 ;;		Unchanged: FFE80/0
  3837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3838 ;;      Params:         0       0       0       0       0
  3839 ;;      Locals:         0       0       0       0       0
  3840 ;;      Temps:          0       0       0       0       0
  3841 ;;      Totals:         0       0       0       0       0
  3842 ;;Total ram usage:        0 bytes
  3843 ;; Hardware stack levels used:    1
  3844 ;; Hardware stack levels required when called:    2
  3845 ;; This function calls:
  3846 ;;		Nothing
  3847 ;; This function is called by:
  3848 ;;		_main
  3849 ;; This function uses a non-reentrant model
  3850 ;;
  3851  0473                     _op1_init:	
  3852                           
  3853                           ;periph.c: 33: OP1CON1=0x02;
  3854                           
  3855                           ; Regs used in _op1_init: [wreg]
  3856  0473  3002               	movlw	2
  3857  0474  1283               	bcf	3,5	;RP0=0, select bank0
  3858  0475  009C               	movwf	28	;volatile
  3859                           
  3860                           ;periph.c: 34: OP1CON2=0xA0;
  3861  0476  30A0               	movlw	160
  3862  0477  009D               	movwf	29	;volatile
  3863                           
  3864                           ;periph.c: 35: OP1CON0=0x80;
  3865  0478  3080               	movlw	128
  3866  0479  009B               	movwf	27	;volatile
  3867                           
  3868                           ;periph.c: 38: TRISB3=1;
  3869  047A  1683               	bsf	3,5	;RP0=1, select bank1
  3870  047B  1586               	bsf	6,3
  3871                           
  3872                           ;periph.c: 40: TRISB5=0;
  3873  047C  1286               	bcf	6,5
  3874  047D  0008               	return
  3875  047E                     __end_of_op1_init:	
  3876                           
  3877                           	psect	text604
  3878  04CF                     __ptext604:	
  3879 ;; =============== function _op1_init ends ============
  3880                           
  3881                           
  3882 ;; *************** function _dac_init *****************
  3883 ;; Defined at:
  3884 ;;		line 14 in file "C:\190604\AK7030-OTP\periph.c"
  3885 ;; Parameters:    Size  Location     Type
  3886 ;;		None
  3887 ;; Auto vars:     Size  Location     Type
  3888 ;;		None
  3889 ;; Return value:  Size  Location     Type
  3890 ;;		None               void
  3891 ;; Registers used:
  3892 ;;		wreg
  3893 ;; Tracked objects:
  3894 ;;		On entry : 17F/20
  3895 ;;		On exit  : 17F/20
  3896 ;;		Unchanged: FFE80/0
  3897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3898 ;;      Params:         0       0       0       0       0
  3899 ;;      Locals:         0       0       0       0       0
  3900 ;;      Temps:          0       0       0       0       0
  3901 ;;      Totals:         0       0       0       0       0
  3902 ;;Total ram usage:        0 bytes
  3903 ;; Hardware stack levels used:    1
  3904 ;; Hardware stack levels required when called:    2
  3905 ;; This function calls:
  3906 ;;		Nothing
  3907 ;; This function is called by:
  3908 ;;		_main
  3909 ;; This function uses a non-reentrant model
  3910 ;;
  3911  04CF                     _dac_init:	
  3912                           
  3913                           ;periph.c: 15: DACCON|=1;
  3914                           
  3915                           ; Regs used in _dac_init: [wreg]
  3916  04CF  1407               	bsf	7,0	;volatile
  3917                           
  3918                           ;periph.c: 17: DACR0=0x0F;
  3919  04D0  300F               	movlw	15
  3920  04D1  0088               	movwf	8	;volatile
  3921                           
  3922                           ;periph.c: 18: DACCON|=(1)<<2;
  3923  04D2  1507               	bsf	7,2	;volatile
  3924  04D3  0008               	return
  3925  04D4                     __end_of_dac_init:	
  3926                           
  3927                           	psect	text606
  3928  04D8                     __ptext606:	
  3929 ;; =============== function _adc_test_init ends ============
  3930                           
  3931                           
  3932 ;; *************** function _timer1_interrupt_config *****************
  3933 ;; Defined at:
  3934 ;;		line 58 in file "C:\190604\AK7030-OTP\common.c"
  3935 ;; Parameters:    Size  Location     Type
  3936 ;;		None
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;		None
  3939 ;; Return value:  Size  Location     Type
  3940 ;;		None               void
  3941 ;; Registers used:
  3942 ;;		None
  3943 ;; Tracked objects:
  3944 ;;		On entry : 17F/20
  3945 ;;		On exit  : 17F/20
  3946 ;;		Unchanged: FFE80/0
  3947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3948 ;;      Params:         0       0       0       0       0
  3949 ;;      Locals:         0       0       0       0       0
  3950 ;;      Temps:          0       0       0       0       0
  3951 ;;      Totals:         0       0       0       0       0
  3952 ;;Total ram usage:        0 bytes
  3953 ;; Hardware stack levels used:    1
  3954 ;; Hardware stack levels required when called:    2
  3955 ;; This function calls:
  3956 ;;		Nothing
  3957 ;; This function is called by:
  3958 ;;		_main
  3959 ;; This function uses a non-reentrant model
  3960 ;;
  3961  04D8                     _timer1_interrupt_config:	
  3962                           
  3963                           ;common.c: 59: GIE = 1;
  3964                           
  3965                           ; Regs used in _timer1_interrupt_config: []
  3966  04D8  178B               	bsf	11,7
  3967                           
  3968                           ;common.c: 60: PEIE = 1;
  3969  04D9  170B               	bsf	11,6
  3970  04DA  0008               	return
  3971  04DB                     __end_of_timer1_interrupt_config:	
  3972                           
  3973                           	psect	text607
  3974  047E                     __ptext607:	
  3975 ;; =============== function _timer1_interrupt_config ends ============
  3976                           
  3977                           
  3978 ;; *************** function _timer1_config *****************
  3979 ;; Defined at:
  3980 ;;		line 46 in file "C:\190604\AK7030-OTP\common.c"
  3981 ;; Parameters:    Size  Location     Type
  3982 ;;		None
  3983 ;; Auto vars:     Size  Location     Type
  3984 ;;		None
  3985 ;; Return value:  Size  Location     Type
  3986 ;;		None               void
  3987 ;; Registers used:
  3988 ;;		wreg
  3989 ;; Tracked objects:
  3990 ;;		On entry : 17F/40
  3991 ;;		On exit  : 17F/20
  3992 ;;		Unchanged: FFE80/0
  3993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3994 ;;      Params:         0       0       0       0       0
  3995 ;;      Locals:         0       0       0       0       0
  3996 ;;      Temps:          0       0       0       0       0
  3997 ;;      Totals:         0       0       0       0       0
  3998 ;;Total ram usage:        0 bytes
  3999 ;; Hardware stack levels used:    1
  4000 ;; Hardware stack levels required when called:    2
  4001 ;; This function calls:
  4002 ;;		Nothing
  4003 ;; This function is called by:
  4004 ;;		_main
  4005 ;; This function uses a non-reentrant model
  4006 ;;
  4007  047E                     _timer1_config:	
  4008                           
  4009                           ;common.c: 48: TMR1H=0xCF;
  4010                           
  4011                           ; Regs used in _timer1_config: [wreg]
  4012  047E  30CF               	movlw	207
  4013  047F  1303               	bcf	3,6	;RP1=0, select bank0
  4014  0480  008F               	movwf	15	;volatile
  4015                           
  4016                           ;common.c: 49: TMR1L=0x2C;
  4017  0481  302C               	movlw	44
  4018  0482  008E               	movwf	14	;volatile
  4019                           
  4020                           ;common.c: 50: T1CON=0xE1;
  4021  0483  30E1               	movlw	225
  4022  0484  0090               	movwf	16	;volatile
  4023                           
  4024                           ;common.c: 51: TMR1IE=1;
  4025  0485  1683               	bsf	3,5	;RP0=1, select bank1
  4026  0486  140C               	bsf	12,0
  4027  0487  0008               	return
  4028  0488                     __end_of_timer1_config:	
  4029                           
  4030                           	psect	text608
  4031  0498                     __ptext608:	
  4032 ;; =============== function _timer1_config ends ============
  4033                           
  4034                           
  4035 ;; *************** function _clock_config *****************
  4036 ;; Defined at:
  4037 ;;		line 38 in file "C:\190604\AK7030-OTP\common.c"
  4038 ;; Parameters:    Size  Location     Type
  4039 ;;		None
  4040 ;; Auto vars:     Size  Location     Type
  4041 ;;		None
  4042 ;; Return value:  Size  Location     Type
  4043 ;;		None               void
  4044 ;; Registers used:
  4045 ;;		wreg, status,2
  4046 ;; Tracked objects:
  4047 ;;		On entry : 17F/20
  4048 ;;		On exit  : 17F/40
  4049 ;;		Unchanged: FFE80/0
  4050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4051 ;;      Params:         0       0       0       0       0
  4052 ;;      Locals:         0       0       0       0       0
  4053 ;;      Temps:          0       0       0       0       0
  4054 ;;      Totals:         0       0       0       0       0
  4055 ;;Total ram usage:        0 bytes
  4056 ;; Hardware stack levels used:    1
  4057 ;; Hardware stack levels required when called:    2
  4058 ;; This function calls:
  4059 ;;		Nothing
  4060 ;; This function is called by:
  4061 ;;		_main
  4062 ;; This function uses a non-reentrant model
  4063 ;;
  4064  0498                     _clock_config:	
  4065                           
  4066                           ;common.c: 40: CLKPR = 0x80;
  4067                           
  4068                           ; Regs used in _clock_config: [wreg+status,2]
  4069  0498  3080               	movlw	128
  4070  0499  1283               	bcf	3,5	;RP0=0, select bank2
  4071  049A  1703               	bsf	3,6	;RP1=1, select bank2
  4072  049B  0088               	movwf	8	;volatile
  4073                           
  4074                           ;common.c: 41: CLKPR = 0x00;
  4075  049C  0188               	clrf	8	;volatile
  4076  049D                     l1600:	
  4077                           ;common.c: 42: while(CLKPCE);
  4078                           
  4079  049D  1F88               	btfss	8,7
  4080  049E  0008               	return
  4081  049F  2C9D               	goto	l1600
  4082  04A0                     __end_of_clock_config:	
  4083                           
  4084                           	psect	text612
  4085  03BE                     __ptext612:	
  4086 ;; =============== function _clearTwelveHoursTimer ends ============
  4087                           
  4088                           
  4089 ;; *************** function _ISR *****************
  4090 ;; Defined at:
  4091 ;;		line 288 in file "C:\190604\AK7030-OTP\common.c"
  4092 ;; Parameters:    Size  Location     Type
  4093 ;;		None
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;		None
  4096 ;; Return value:  Size  Location     Type
  4097 ;;		None               void
  4098 ;; Registers used:
  4099 ;;		wreg, status,2, status,0, pclath, cstack
  4100 ;; Tracked objects:
  4101 ;;		On entry : 0/0
  4102 ;;		On exit  : 60/0
  4103 ;;		Unchanged: FFF9F/0
  4104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4105 ;;      Params:         0       0       0       0       0
  4106 ;;      Locals:         0       0       0       0       0
  4107 ;;      Temps:          2       0       0       0       0
  4108 ;;      Totals:         2       0       0       0       0
  4109 ;;Total ram usage:        2 bytes
  4110 ;; Hardware stack levels used:    1
  4111 ;; Hardware stack levels required when called:    1
  4112 ;; This function calls:
  4113 ;;		i1_setAD_ConvertFlag
  4114 ;;		_adc_get
  4115 ;; This function is called by:
  4116 ;;		Interrupt level 1
  4117 ;; This function uses a non-reentrant model
  4118 ;;
  4119  03BE                     _ISR:	
  4120                           
  4121                           ;common.c: 289: static unsigned char ucTimer1sCnt = 0;
  4122                           ;common.c: 291: if(TMR1IF == 1)
  4123  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  4124  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  4125  03C0  1C0C               	btfss	12,0
  4126  03C1  2BE8               	goto	i1l3837
  4127  03C2  3064               	movlw	100
  4128                           
  4129                           ;common.c: 292: {
  4130                           ;common.c: 293: TMR1IF = 0 ;
  4131  03C3  100C               	bcf	12,0
  4132                           
  4133                           ;common.c: 294: timer.timer10msStopWatch++;
  4134  03C4  0AFA               	incf	_timer,f
  4135                           
  4136                           ;common.c: 295: ucTimer1sCnt++;
  4137  03C5  0AF8               	incf	ISR@ucTimer1sCnt,f
  4138                           
  4139                           ;common.c: 297: if(ucTimer1sCnt >= 100)
  4140  03C6  0278               	subwf	ISR@ucTimer1sCnt,w
  4141  03C7  1C03               	skipc
  4142  03C8  2BE8               	goto	i1l3837
  4143                           
  4144                           ;common.c: 298: {
  4145                           ;common.c: 299: ucTimer1sCnt = 0;
  4146  03C9  01F8               	clrf	ISR@ucTimer1sCnt
  4147                           
  4148                           ;common.c: 300: if(uiBigTimer > 0)
  4149  03CA  0877               	movf	_uiBigTimer+1,w
  4150  03CB  0476               	iorwf	_uiBigTimer,w
  4151  03CC  1903               	skipnz
  4152  03CD  2BD4               	goto	i1l1708
  4153                           
  4154                           ;common.c: 301: uiBigTimer--;
  4155  03CE  3001               	movlw	1
  4156  03CF  02F6               	subwf	_uiBigTimer,f
  4157  03D0  3000               	movlw	0
  4158  03D1  1C03               	skipc
  4159  03D2  03F7               	decf	_uiBigTimer+1,f
  4160  03D3  02F7               	subwf	_uiBigTimer+1,f
  4161  03D4                     i1l1708:	
  4162                           
  4163                           ;common.c: 303: if(uiSmallTimer)
  4164  03D4  0839               	movf	_uiSmallTimer+1,w
  4165  03D5  0438               	iorwf	_uiSmallTimer,w
  4166  03D6  1903               	skipnz
  4167  03D7  2BDE               	goto	i1l1709
  4168                           
  4169                           ;common.c: 304: uiSmallTimer--;
  4170  03D8  3001               	movlw	1
  4171  03D9  02B8               	subwf	_uiSmallTimer,f
  4172  03DA  3000               	movlw	0
  4173  03DB  1C03               	skipc
  4174  03DC  03B9               	decf	_uiSmallTimer+1,f
  4175  03DD  02B9               	subwf	_uiSmallTimer+1,f
  4176  03DE                     i1l1709:	
  4177                           
  4178                           ;common.c: 306: if(uiTwentySecondsTimer)
  4179  03DE  083B               	movf	_uiTwentySecondsTimer+1,w
  4180  03DF  043A               	iorwf	_uiTwentySecondsTimer,w
  4181  03E0  1903               	skipnz
  4182  03E1  2BE8               	goto	i1l3837
  4183                           
  4184                           ;common.c: 307: uiTwentySecondsTimer--;
  4185  03E2  3001               	movlw	1
  4186  03E3  02BA               	subwf	_uiTwentySecondsTimer,f
  4187  03E4  3000               	movlw	0
  4188  03E5  1C03               	skipc
  4189  03E6  03BB               	decf	_uiTwentySecondsTimer+1,f
  4190  03E7  02BB               	subwf	_uiTwentySecondsTimer+1,f
  4191  03E8                     i1l3837:	
  4192                           
  4193                           ;common.c: 308: }
  4194                           ;common.c: 309: }
  4195                           ;common.c: 311: if(ADIF)
  4196  03E8  1D0D               	btfss	13,2
  4197  03E9  2C11               	goto	i1l1716
  4198  03EA  3001               	movlw	1
  4199                           
  4200                           ;common.c: 312: {
  4201                           ;common.c: 313: ADIF=0;
  4202  03EB  110D               	bcf	13,2
  4203                           
  4204                           ;common.c: 314: setAD_ConvertFlag(1);
  4205  03EC  2423  118A         	fcall	i1_setAD_ConvertFlag
  4206                           
  4207                           ;common.c: 315: adc_original_value = adc_get();
  4208  03EE  2418  118A         	fcall	_adc_get
  4209  03F0  0871               	movf	?_adc_get+1,w
  4210  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  4211  03F2  00B3               	movwf	_adc_original_value+1
  4212  03F3  0870               	movf	?_adc_get,w
  4213  03F4  00B2               	movwf	_adc_original_value
  4214                           
  4215                           ;common.c: 316: if(sampleChannelSelect == 4)
  4216  03F5  085B               	movf	_sampleChannelSelect,w
  4217  03F6  3A04               	xorlw	4
  4218  03F7  1D03               	skipz
  4219  03F8  2C01               	goto	i1l3849
  4220                           
  4221                           ;common.c: 317: adc_original_CH4_value = adc_get();
  4222  03F9  2418  118A         	fcall	_adc_get
  4223  03FB  0871               	movf	?_adc_get+1,w
  4224  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  4225  03FD  00B1               	movwf	_adc_original_CH4_value+1
  4226  03FE  0870               	movf	?_adc_get,w
  4227  03FF  00B0               	movwf	_adc_original_CH4_value
  4228  0400  2C11               	goto	i1l1716
  4229  0401                     i1l3849:	
  4230                           
  4231                           ;common.c: 318: else if(sampleChannelSelect == 1)
  4232  0401  0B5B               	decfsz	_sampleChannelSelect,w
  4233  0402  2C0B               	goto	i1l3853
  4234                           
  4235                           ;common.c: 319: adc_original_CH1_value = adc_get();
  4236  0403  2418  118A         	fcall	_adc_get
  4237  0405  0871               	movf	?_adc_get+1,w
  4238  0406  1283               	bcf	3,5	;RP0=0, select bank0
  4239  0407  00AF               	movwf	_adc_original_CH1_value+1
  4240  0408  0870               	movf	?_adc_get,w
  4241  0409  00AE               	movwf	_adc_original_CH1_value
  4242  040A  2C11               	goto	i1l1716
  4243  040B                     i1l3853:	
  4244                           
  4245                           ;common.c: 320: else
  4246                           ;common.c: 321: adc_original_CH14_value = adc_get();
  4247  040B  2418               	fcall	_adc_get
  4248  040C  0871               	movf	?_adc_get+1,w
  4249  040D  1283               	bcf	3,5	;RP0=0, select bank0
  4250  040E  00AD               	movwf	_adc_original_CH14_value+1
  4251  040F  0870               	movf	?_adc_get,w
  4252  0410  00AC               	movwf	_adc_original_CH14_value
  4253  0411                     i1l1716:	
  4254  0411  0875               	movf	??_ISR+1,w
  4255  0412  008A               	movwf	10
  4256  0413  0E74               	swapf	??_ISR^(0+-128),w
  4257  0414  0083               	movwf	3
  4258  0415  0EFE               	swapf	126,f
  4259  0416  0E7E               	swapf	126,w
  4260  0417  0009               	retfie
  4261  0418                     __end_of_ISR:	
  4262  0418                     __ptext614:	
  4263 ;; =============== function i1_setAD_ConvertFlag ends ============
  4264                           
  4265                           
  4266 ;; *************** function _adc_get *****************
  4267 ;; Defined at:
  4268 ;;		line 105 in file "C:\190604\AK7030-OTP\periph.c"
  4269 ;; Parameters:    Size  Location     Type
  4270 ;;		None
  4271 ;; Auto vars:     Size  Location     Type
  4272 ;;  val             2    2[COMMON] unsigned int 
  4273 ;; Return value:  Size  Location     Type
  4274 ;;                  2    0[COMMON] unsigned int 
  4275 ;; Registers used:
  4276 ;;		wreg
  4277 ;; Tracked objects:
  4278 ;;		On entry : 60/0
  4279 ;;		On exit  : 60/20
  4280 ;;		Unchanged: FFF9F/0
  4281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4282 ;;      Params:         2       0       0       0       0
  4283 ;;      Locals:         2       0       0       0       0
  4284 ;;      Temps:          0       0       0       0       0
  4285 ;;      Totals:         4       0       0       0       0
  4286 ;;Total ram usage:        4 bytes
  4287 ;; Hardware stack levels used:    1
  4288 ;; This function calls:
  4289 ;;		Nothing
  4290 ;; This function is called by:
  4291 ;;		_ISR
  4292 ;; This function uses a non-reentrant model
  4293 ;;
  4294  0418                     _adc_get:	
  4295                           
  4296                           ;periph.c: 106: unsigned int val;
  4297                           ;periph.c: 107: val = (ADRESH<<8) | ADRESL;
  4298                           
  4299                           ; Regs used in _adc_get: [wreg]
  4300  0418  081E               	movf	30,w	;volatile
  4301  0419  00F3               	movwf	adc_get@val+1
  4302  041A  01F2               	clrf	adc_get@val
  4303  041B  1683               	bsf	3,5	;RP0=1, select bank1
  4304  041C  081E               	movf	30,w	;volatile
  4305  041D  04F2               	iorwf	adc_get@val,f
  4306                           
  4307                           ;periph.c: 108: return val;
  4308  041E  0873               	movf	adc_get@val+1,w
  4309  041F  00F1               	movwf	?_adc_get+1
  4310  0420  0872               	movf	adc_get@val,w
  4311  0421  00F0               	movwf	?_adc_get
  4312  0422  0008               	return
  4313  0423                     __end_of_adc_get:	
  4314  0423                     __ptext613:	
  4315 ;; =============== function _ISR ends ============
  4316                           
  4317                           
  4318 ;; *************** function i1_setAD_ConvertFlag *****************
  4319 ;; Defined at:
  4320 ;;		line 72 in file "C:\190604\AK7030-OTP\common.c"
  4321 ;; Parameters:    Size  Location     Type
  4322 ;;  setAD_Conver    1    wreg     unsigned char 
  4323 ;; Auto vars:     Size  Location     Type
  4324 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  4325 ;; Return value:  Size  Location     Type
  4326 ;;		None               void
  4327 ;; Registers used:
  4328 ;;		wreg
  4329 ;; Tracked objects:
  4330 ;;		On entry : 60/0
  4331 ;;		On exit  : 60/0
  4332 ;;		Unchanged: FFF9F/0
  4333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4334 ;;      Params:         0       0       0       0       0
  4335 ;;      Locals:         1       0       0       0       0
  4336 ;;      Temps:          0       0       0       0       0
  4337 ;;      Totals:         1       0       0       0       0
  4338 ;;Total ram usage:        1 bytes
  4339 ;; Hardware stack levels used:    1
  4340 ;; This function calls:
  4341 ;;		Nothing
  4342 ;; This function is called by:
  4343 ;;		_ISR
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346  0423                     i1_setAD_ConvertFlag:	
  4347                           
  4348                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  4349                           ;i1setAD_ConvertFlag@flag stored from wreg
  4350  0423  00F0               	movwf	i1setAD_ConvertFlag@flag
  4351                           
  4352                           ;common.c: 73: adc_convert_flag = flag;
  4353  0424  00F9               	movwf	_adc_convert_flag
  4354  0425  0008               	return
  4355  0426                     __end_ofi1_setAD_ConvertFlag:	
  4356                           
  4357                           	psect	intentry
  4358  0004                     __pintentry:	
  4359                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  4360                           
  4361  0004                     interrupt_function:	
  4362  007E                     saved_w	set	btemp
  4363  0004  00FE               	movwf	btemp
  4364  0005  0E03               	swapf	3,w
  4365  0006  00F4               	movwf	??_ISR
  4366  0007  080A               	movf	10,w
  4367  0008  00F5               	movwf	??_ISR+1
  4368  0009  118A  2BBE         	ljmp	_ISR
  4369                           
  4370                           	psect	text615
  4371  0000                     __ptext615:	
  4372 ;; =============== function _adc_get ends ============
  4373                           
  4374  007E                     btemp	set	126	;btemp
  4375  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon Jun 17 15:32:30 2019

                       ??_clock_config 0056                                      pc 0002  
                                   _GO 00F9                                     fsr 0004  
                  ?_getAdOriginalValue 0056               ?_timer1_interrupt_config 0070  
                                  l703 0064                                    l712 007C  
                                  l831 0198                                    l807 0164  
                                  l680 0000                                    l752 00EE  
                                  l737 00EC                                    l907 02A0  
                                  l852 01CB                                    l780 012A  
                                  l677 0000                                    l880 0248  
                                  _PA0 0028                                    _PA1 0029  
                                  _GIE 005F                                    _PB0 0030  
                                  _PA2 002A                                    _PB1 0031  
                                  _PA3 002B                                    _PA6 002E  
                                  _PA7 002F                                    _PB6 0036  
                                  _ISR 03BE                                    u915 0356  
                                  u925 0369                                    fsr0 0004  
                                  indf 0000                 ??_startThreeHoursTimer 0056  
                                 S4661 044B                                   S4663 0459  
                                 S4665 0467                                   ?_ISR 0070  
                   __size_of_AD_Sample 0063                 ?_getAdOriginalCh1Value 0056  
                                 l1600 049D                                   l4001 0000  
                                 l1603 0000                                   l4011 00B0  
                                 l4003 0000                                   l1612 0000  
                                 l1701 0000                                   l1621 0000  
                                 l4101 012D                                   l4021 00C5  
                                 l4013 00B3                                   l4005 00A5  
                                 l1606 0000                                   l2350 0000  
                                 l1615 0000                                   l4111 0136  
                                 l4015 00B6                                   l4007 0000  
                                 l1624 0000                                   l1640 0361  
                                 l1609 0000                                   l2361 0000  
                                 l2353 0000                                   l4121 013C  
                                 l4105 0132                                   l4041 00F6  
                                 l4033 00EA                                   l4025 00D2  
                                 l4017 00B9                                   l4009 00AA  
                                 l1618 0000                                   l2347 0000  
                                 l1627 0000                                   l4131 0142  
                                 l4035 00EF                                   l4205 0185  
                                 l4141 0148                                   l4109 0134  
                                 l4045 00F8                                   l4037 00F1  
                                 l4029 00DE                                   l2367 0000  
                                 l1663 0000                                   l4303 0000  
                                 l4223 01A2                                   l4215 018C  
                                 l4151 0151                                   l4047 00FA  
                                 l1672 0000                                   l4401 0000  
                                 l4313 0000                                   l4217 019B  
                                 l4161 0158                                   l4057 0100  
                                 l1666 0000                                   l1675 0000  
                                 l4403 02C0                                   l4315 022D  
                                 l4307 021F                                   l4227 01A4  
                                 l4219 019D                                   l4163 0166  
                                 l4091 011C                                   l4067 0106  
                                 l4323 0237                                   l1669 0000  
                                 l3701 0000                                   l4421 0000  
                                 l4413 0000                                   l4341 0000  
                                 l4333 0257                                   l4325 0000  
                                 l4317 0000                                   l4309 0226  
                                 l4261 01CF                                   l4229 01A6  
                                 l4173 016F                                   l4165 0168  
                                 l4077 010C                                   l1678 0000  
                                 l3703 0000                                   l3711 0000  
                                 l4431 0000                                   l4423 0000  
                                 l4415 0000                                   l4407 02CC  
                                 l4343 0000                                   l4335 0000  
                                 l4327 0000                                   l4319 0000  
                                 l4271 01D8                                   l4263 01D1  
                                 l4239 01AC                                   l4175 0171  
                                 l4087 0116                                   l3705 0000  
                                 l3713 0000                                   l3721 0000  
                                 l4433 0000                                   l4425 0000  
                                 l4417 0000                                   l4409 02CD  
                                 l4361 0275                                   l4345 0000  
                                 l4337 0000                                   l4329 0251  
                                 l4273 01DA                                   l4249 01B3  
                                 l4185 0177                                   l4169 016D  
                                 l4097 011E                                   l3707 0000  
                                 l3715 0000                                   l3723 0000  
                                 l3731 0000                                   l4435 0000  
                                 l4427 0000                                   l4419 0000  
                                 l4363 0000                                   l4355 0268  
                                 l4347 0000                                   l4339 0000  
                                 l4283 01E0                                   l4267 01D6  
                                 l4259 01BA                                   l4195 017D  
                                 l4099 012B                                   l4443 02F2  
                                 l3709 0000                                   l3717 0000  
                                 l3725 0000                                   l3733 0000  
                                 l3741 0000                                   l3813 0000  
                                 l4429 0000                                   l4381 0000  
                                 l4365 0000                                   l4373 027F  
                                 l4349 0260                                   l4293 01E7  
                                 l3719 0000                                   l3727 0000  
                                 l3735 0000                                   l3815 0000  
                                 l3903 038A                                   l3911 0000  
                                 l4439 02E7                                   l4391 02AB  
                                 l4383 0291                                   l4367 0000  
                                 l4359 0274                                   l3729 0000  
                                 l3737 0000                                   l3753 0000  
                                 l3809 0000                                   l3905 0000  
                                 l3913 0000                                   l4377 028B  
                                 l4369 0000                                   l4297 01F5  
                                 l3739 03B1                                   l3755 0000  
                                 l3763 0000                                   l3907 0000  
                                 l3923 0321                                   l4395 02B7  
                                 l4379 028C                                   l4299 0206  
                                 l3931 0000                                   l3765 0000  
                                 l3861 042D                                   l3909 0000  
                                 l3925 0000                                   l3917 0000  
                                 l4397 02B8                                   l4389 0295  
                                 l3941 0000                                   l3933 0000  
                                 l3695 0000                                   l3759 0000  
                                 l3783 0000                                   l3871 034F  
                                 l3863 0000                                   l3927 0327  
                                 l3919 0000                                   l3943 0000  
                                 l3935 0000                                   l3697 0000  
                                 l3777 0000                                   l3961 005D  
                                 l3953 0000                                   l3945 0000  
                                 l3937 0000                                   l3699 0438  
                                 l3779 0000                                   l3795 0000  
                                 l3883 0000                                   l3867 0000  
                                 l3971 006B                                   l3955 0050  
                                 l3947 0042                                   l3939 0000  
                                 l3797 0000                                   l3893 0387  
                                 l3877 0374                                   l3981 007F  
                                 l3973 0000                                   l3965 0062  
                                 l3949 0000                                   l3887 0380  
                                 l3879 0000                                   l3991 0000  
                                 l3975 0076                                   l3967 0065  
                                 l3959 005C                                   _ADIE 046A  
                                 _ADIF 006A                                   l3897 0389  
                                 l3993 0092                                   l3985 008B  
                                 l3977 0078                                   l3987 008C  
                                 l3979 0000                                   l3997 009E  
                                 l3989 0000                                   l3999 009F  
                                 _ADON 00F8                                   _PEIE 005E  
                 ??_getAdOriginalValue 0058                                   _main 000D  
                                 btemp 007E                _clearTwentySecondsTimer 0438  
                                 start 000B                ?_getAdOriginalCh14Value 0056  
                    main@ucTimerDelay1 004C                      main@ucTimerDelay2 004D  
                    main@ucTimerDelay3 004E                      main@ucTimerDelay4 004F  
                                ??_ISR 0074             __end_of_isPermitSampleTime 04CF  
                  _sampleChannelSelect 005B                 ??_getAdOriginaCh4Value 0058  
                                ?_main 0070                                  _DACR0 0088  
                                _CLKPR 0108                                  _T1CON 0010  
                      __end_of_adc_get 0423                                  _PAOD7 0C3F  
                                _PBOD6 0C46                                  _TMR1H 000F  
                                _TMR1L 000E                  setAD_ConvertFlag@flag 0056  
                                _timer 007A                                  pclath 000A  
                                status 0003                                  wtemp0 007E  
       __end_of_getAdOriginalCh14Value 04CA          __size_of_startTwelveHourTimer 0005  
                 __end_of_clrSampeTime 04DD                  __end_of_clearAllTimer 0432  
                         __end_of_main 0310                 __size_of_adc_test_init 0015  
                    __end_of_AD_Sample 0397                                 ??_main 005B  
                 _clearPinPortAndTimer 0426                                 _ADCON0 001F  
                               _ADCON1 009F                   __end_of_clock_config 04A0  
                               _DACCON 0087                                 _ADRESH 001E  
                               _ADRESL 009E                                 _CLKPCE 0847  
                               i1l1615 0000                                 i1l2370 0000  
                               i1l1716 0411                                 i1l1708 03D4  
                               i1l1709 03DE                                 i1l3823 0000  
                               i1l3841 0000                                 i1l3825 0000  
                               i1l3851 0000                                 i1l3843 0000  
                               i1l3819 0000                                 i1l3853 040B  
                               i1l3845 0000                                 i1l3829 0000  
                               i1l3837 03E8                                 i1l3855 0000  
                               i1l3849 0401                                 i1l3859 0000  
                     __end_of_dac_init 04D4              ??_clearTwentySecondsTimer 0056  
                               _TMR1IE 0460                                 _TMR1IF 0060  
                    _getAD_ConvertFlag 032D                      _setAD_ConvertFlag 032F  
                               _TRISA0 0428                                 _TRISA1 0429  
                               _TRISB0 0430                                 _TRISA2 042A  
                               _TRISB1 0431                                 _TRISA3 042B  
                               _TRISB2 0432                                 _TRISB3 0433  
                               _TRISB4 0434                                 _TRISA6 042E  
                               _TRISB5 0435                                 _TRISA7 042F  
                               _TRISB7 0437                          main@ucTimer1s 0048  
                   ?_getAD_ConvertFlag 0070                     ?_setAD_ConvertFlag 0070  
                     __end_of_op1_init 047E                       __end_of_op2_init 0498  
          ??_isFinishedThreeHoursTimer 0056          __size_of_clearThreeHoursTimer 0003  
                            ??_adc_get 0072                    ??_getAD_ConvertFlag 0056  
                  ??_setAD_ConvertFlag 0056                                 clrloop 0489  
                ?_clearPinPortAndTimer 0070                                 saved_w 007E  
              ??_clearTwelveHoursTimer 0056            ?_process_AD_Converter_Value 0070  
                        _adc_test_init 039C       __size_of_startTwentySecondsTimer 0004  
            __end_of_getAD_ConvertFlag 032F              __end_of_setAD_ConvertFlag 0334  
                   __size_of_adc_start 0003                         __pcstackCOMMON 0070  
                         __pidataBANK0 0000        __end_of_clearTwentySecondsTimer 043B  
                  main@ucTimerRightP5s 0051              _isFinishedThreeHoursTimer 04A7  
              ??_getAdOriginalCh1Value 0058                _adc_original_CH14_value 002C  
                __end_of_timer1_config 0488                         ?_adc_test_init 0056  
     __size_of_timer1_interrupt_config 0003                  __size_of_clrSampeTime 0002  
                           __pbssBANK0 0020           __size_ofi1_setAD_ConvertFlag 0003  
                           adc_get@val 0072                             __pmaintext 000D  
                           __pintentry 0004                    main@enumInteralStep 003F  
                            ?_dac_init 0070                 ??_clearPinPortAndTimer 0056  
                __size_of_clock_config 0008                                _OP1CON0 001B  
                              _OP1CON1 001C                                _OP1CON2 001D  
                              _OP2CON0 009B                                _OP2CON1 009C  
                              _OP2CON2 009D                           _clrSampeTime 04DB  
                    __end_of_adc_start 03B4                   _uiTwentySecondsTimer 003A  
                            ?_op1_init 0070                              ?_op2_init 0070  
                   _isPermitSampleTime 04CA                 _buffer_Sample_AD_Value 0020  
                   _adc_original_value 0032          __size_of_startThreeHoursTimer 0007  
           __size_of_getAD_ConvertFlag 0002             __size_of_setAD_ConvertFlag 0005  
                       main@ucTimer20s 0049            __size_of_getAdOriginalValue 0005  
                       main@ucTimerP3s 0050                    ?_isPermitSampleTime 0070  
                           _uiBigTimer 0076                           _clock_config 0498  
                              _adc_get 0418                    _multiFilterMaxValue 0034  
 __end_of_isFinishedTwentySecondsTimer 04B1  __size_of_isFinishedTwentySecondsTimer 0005  
         _isFinishedTwentySecondsTimer 04AC                    _multiFilterMinValue 0036  
                 ??_isPermitSampleTime 0056           __end_of_startTwelveHourTimer 04C0  
                           ??_dac_init 0056                              _AD_Sample 0334  
                         __size_of_ISR 005A          __size_of_getAdOriginaCh4Value 0005  
                      ??_adc_test_init 0057                             ??_op1_init 0056  
                           ??_op2_init 0056                _startTwentySecondsTimer 04D4  
                 end_of_initialization 0448                       main@ucLoaderStep 0043  
                           ?_AD_Sample 0070          ?_isFinishedTwentySecondsTimer 0070  
                 main@enumMainLoopStep 0040                     main@ucChannel4Type 0042  
         ??_isFinishedTwelveHoursTimer 0056                       _adc_convert_flag 0079  
               __size_of_clearAllTimer 0005           __end_of_clearThreeHoursTimer 0438  
               main@ucTimerADC1ZeroP5s 004A         __size_of_clearTwelveHoursTimer 0003  
              _timer1_interrupt_config 04D8          __end_of_clearTwelveHoursTimer 0435  
   __size_of_isFinishedThreeHoursTimer 0005                         AD_Sample@index 005A  
                     main@ucTimerX1P5s 0052                       main@ucTimerX2P5s 0053  
               main@ucTimerZeroPoint3s 0054                 main@ucTimerZeroPoint5s 0055  
                     main@ucTimerDelay 004B                        main@ucADC4_Step 0041  
  __size_of_isFinishedTwelveHoursTimer 0005                    i1_setAD_ConvertFlag 0423  
            ??_startTwentySecondsTimer 0056                    start_initialization 043B  
                          __end_of_ISR 0418               ?_clearTwentySecondsTimer 0070  
       __size_of_getAdOriginalCh1Value 0005          __end_of_getAdOriginalCh1Value 04C5  
             ??_getAdOriginalCh14Value 0058                   ?i1_setAD_ConvertFlag 0070  
                 _startTwelveHourTimer 04BB      __end_of_isFinishedThreeHoursTimer 04AC  
                   main@enumBranchStep 003E                          _clearAllTimer 042D  
                          __pdataBANK0 005B                            ??_AD_Sample 0058  
            ??_timer1_interrupt_config 0056                            __pbssCOMMON 0076  
                    __size_of_dac_init 0005                          __pcstackBANK0 0056  
       ??_isFinishedTwentySecondsTimer 0056                              _adc_start 03B1  
                    __size_of_op1_init 000B                      __size_of_op2_init 0008  
                ??i1_setAD_ConvertFlag 0070                  ?_startTwelveHourTimer 0070  
      __end_of_startTwentySecondsTimer 04D8                         ?_clearAllTimer 0070  
               __size_of_timer1_config 000A                   _clearThreeHoursTimer 0435  
         __end_of_startThreeHoursTimer 04A7                              __ptext600 04CA  
                            __ptext601 03B1                              __ptext610 0435  
                            __ptext602 0490                              __ptext611 0432  
                            __ptext603 0473                              __ptext612 03BE  
                            __ptext604 04CF                              __ptext613 0423  
                            __ptext605 039C                              __ptext614 0418  
                            __ptext606 04D8                              __ptext615 0000  
                            __ptext607 047E                              __ptext608 0498  
                            __ptext609 0438                              __ptext590 04A7  
                            __ptext591 04A0                              __ptext583 0310  
                            __ptext592 04AC                              __ptext584 0426  
                            __ptext593 04B1                              __ptext585 0334  
                            __ptext594 04D4                              __ptext586 042D  
                            __ptext595 04B6                              __ptext587 0397  
                            __ptext596 04BB                              __ptext588 032F  
                            __ptext597 04C0                              __ptext589 032D  
                            __ptext598 04C5                              __ptext599 04DB  
                             ?_adc_get 0070                 _adc_original_CH1_value 002E  
               _adc_original_CH4_value 0030                              __pswtext1 044B  
                            __pswtext2 0459                              __pswtext3 0467  
   __end_of_isFinishedTwelveHoursTimer 04BB             _isFinishedTwelveHoursTimer 04B6  
                      ISR@ucTimer1sCnt 0078          __size_of_clearPinPortAndTimer 0007  
           __end_of_getAdOriginalValue 039C                             ?_adc_start 0070  
      __size_of_getAdOriginalCh14Value 0005                      interrupt_function 0004  
         __end_of_getAdOriginaCh4Value 04B6        __end_of_timer1_interrupt_config 04DB  
                ?_clearThreeHoursTimer 0070                   adc_test_init@channel 0058  
          __size_of_isPermitSampleTime 0005                           _uiSmallTimer 0038  
                __end_of_adc_test_init 03B1                          _timer1_config 047E  
         ??_process_AD_Converter_Value 005B                 ??_startTwelveHourTimer 0056  
                      ??_clearAllTimer 0056                 _getAdOriginalCh14Value 04C5  
                     __size_of_adc_get 000B    __size_of_process_AD_Converter_Value 001D  
                             _dac_init 04CF                       main@cTimer1s_806 003D  
                       ?_timer1_config 0070                               _op1_init 0473  
                             _op2_init 0490                            ??_adc_start 0056  
                 _startThreeHoursTimer 04A0                  _clearTwelveHoursTimer 0432  
                        __size_of_main 0303                               clear_ram 0488  
               ??_clearThreeHoursTimer 0056       __size_of_clearTwentySecondsTimer 0003  
                        ?_clrSampeTime 0070                   _getAdOriginaCh4Value 04B1  
                          _sampleTimes 003C                  ?_startThreeHoursTimer 0070  
                             intlevel1 0000                  _getAdOriginalCh1Value 04C0  
           ?_isFinishedThreeHoursTimer 0070                      main@ucLoaderStep1 0044  
                    main@ucLoaderStep2 0045                      main@ucLoaderStep3 0046  
                    main@ucLoaderStep4 0047                          ?_clock_config 0070  
             ?_startTwentySecondsTimer 0070                i1setAD_ConvertFlag@flag 0070  
                       ??_clrSampeTime 0056            ?_isFinishedTwelveHoursTimer 0070  
                ?_getAdOriginaCh4Value 0056                        ??_timer1_config 0056  
          __end_ofi1_setAD_ConvertFlag 0426     __end_of_process_AD_Converter_Value 032D  
           _process_AD_Converter_Value 0310                 ?_clearTwelveHoursTimer 0070  
                     adc_test_init@ref 0056           __end_of_clearPinPortAndTimer 042D  
                   _getAdOriginalValue 0397  
