

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Sun Nov 17 22:37:44 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,delta=2
    16                           	psect	text1214,local,class=CODE,delta=2
    17                           	psect	text1215,local,class=CODE,delta=2
    18                           	psect	text1216,local,class=CODE,delta=2
    19                           	psect	text1217,local,class=CODE,delta=2
    20                           	psect	text1222,local,class=CODE,delta=2
    21                           	psect	text1223,local,class=CODE,delta=2
    22                           	psect	text1224,local,class=CODE,delta=2
    23                           	psect	text1225,local,class=CODE,delta=2
    24                           	psect	text1226,local,class=CODE,delta=2
    25                           	psect	text1227,local,class=CODE,delta=2
    26                           	psect	text1228,local,class=CODE,delta=2
    27                           	psect	text1229,local,class=CODE,delta=2
    28                           	psect	text1230,local,class=CODE,delta=2
    29                           	psect	text1231,local,class=CODE,delta=2
    30                           	psect	text1232,local,class=CODE,delta=2
    31                           	psect	text1233,local,class=CODE,delta=2
    32                           	psect	text1234,local,class=CODE,delta=2
    33                           	psect	text1236,local,class=CODE,delta=2
    34                           	psect	text1238,local,class=CODE,delta=2
    35                           	psect	text1239,local,class=CODE,delta=2
    36                           	psect	text1240,local,class=CODE,delta=2
    37                           	psect	text1241,local,class=CODE,delta=2
    38                           	psect	text1242,local,class=CODE,delta=2
    39                           	psect	text1243,local,class=CODE,delta=2
    40                           	psect	text1251,local,class=CODE,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	text1258,local,class=CODE,delta=2
    43                           	psect	pa_nodes,global,class=CODE,delta=2
    44                           	dabs	1,0x7E,2
    45  000A                     	;#
    46                           
    47                           	psect	config
    48  2000  0FFF               	dw	4095	;#
    49  2001  3FDE               	dw	16350	;#
    50  2002  3FF8               	dw	16376	;#
    51                           
    52                           	psect	idataBANK0
    53  0000                     __pidataBANK0:	
    54  001F                     _ADCON0	set	31
    55  001E                     _ADRESH	set	30
    56  0017                     _CCP1CON	set	23
    57  0015                     _CCPR1L	set	21
    58  0010                     _T1CON	set	16
    59  0012                     _T2CON	set	18
    60  000F                     _TMR1H	set	15
    61  000E                     _TMR1L	set	14
    62  006A                     _ADIF	set	106
    63  00F8                     _ADON	set	248
    64  005F                     _GIE	set	95
    65  00F9                     _GO	set	249
    66  0032                     _PB2	set	50
    67  0033                     _PB3	set	51
    68  0034                     _PB4	set	52
    69  0035                     _PB5	set	53
    70  005E                     _PEIE	set	94
    71  0060                     _TMR1IF	set	96
    72  009F                     _ADCON1	set	159
    73  009E                     _ADRESL	set	158
    74  0092                     _PR2	set	146
    75  046A                     _ADIE	set	1130
    76  0460                     _TMR1IE	set	1120
    77  0430                     _TRISB0	set	1072
    78  0431                     _TRISB1	set	1073
    79  0432                     _TRISB2	set	1074
    80  0433                     _TRISB3	set	1075
    81  0434                     _TRISB4	set	1076
    82  0435                     _TRISB5	set	1077
    83  0108                     _CLKPR	set	264
    84  0847                     _CLKPCE	set	2119
    85  0C42                     _PBOD2	set	3138
    86                           
    87                           	psect	cinit
    88  053A                     start_initialization:	
    89  053A  3020               	movlw	low __pbssBANK0
    90                           
    91                           ; Clear objects allocated to COMMON
    92  053B  01FD               	clrf	__pbssCOMMON& (0+127)
    93                           
    94                           ; Clear objects allocated to BANK0
    95  053C  1383               	bcf	3,7	;select IRP bank0
    96  053D  0084               	movwf	4
    97  053E  303D               	movlw	low (__pbssBANK0+29)
    98  053F  118A  25B9  118A   	fcall	clear_ram
    99                           
   100                           ; Clear objects allocated to BANK1
   101  0542  30A0               	movlw	low __pbssBANK1
   102  0543  0084               	movwf	4
   103  0544  30C8               	movlw	low (__pbssBANK1+40)
   104  0545  118A  25B9         	fcall	clear_ram
   105                           
   106                           ;initializer for _sampleChannelSelect
   107  0547  300C               	movlw	12
   108  0548  00D9               	movwf	__pdataBANK0& (0+127)
   109                           
   110                           ;initializer for vPutSampleDataIntoTable@uiInitWidth
   111  0549  304B               	movlw	75
   112  054A  00DA               	movwf	(__pdataBANK0+1)& (0+127)
   113  054B                     end_of_initialization:	
   114                           ;End of C runtime variable initialization code
   115                           
   116  054B  0183               	clrf	3
   117  054C  118A  2A10         	ljmp	_main	;jump to C main() function
   118                           
   119                           	psect	bssCOMMON
   120  007D                     __pbssCOMMON:	
   121  007D                     vPutSampleDataIntoTable@ucCh12Length:	
   122  007D                     	ds	1
   123                           
   124                           	psect	bssBANK0
   125  0020                     __pbssBANK0:	
   126  0020                     _uiBigTimer:	
   127  0020                     	ds	2
   128  0022                     _uiOneHourTimer:	
   129  0022                     	ds	2
   130  0024                     _uiSmallTimer:	
   131  0024                     	ds	2
   132  0026                     _uiTwentyMinTimer:	
   133  0026                     	ds	2
   134  0028                     vPutSampleDataIntoTable@uiCalWidthArrayNew:	
   135  0028                     	ds	2
   136  002A                     vPutSampleDataIntoTable@uiCalWidthArrayOld:	
   137  002A                     	ds	2
   138  002C                     ISR@ucTimer1sCnt:	
   139  002C                     	ds	1
   140  002D                     _adc_convert_flag:	
   141  002D                     	ds	1
   142  002E                     _bBigTimerStartFlag:	
   143  002E                     	ds	1
   144  002F                     _bOneHourTimerStartFlag:	
   145  002F                     	ds	1
   146  0030                     _bSmallTimerStartFlag:	
   147  0030                     	ds	1
   148  0031                     _bTwentyMinStartFlag:	
   149  0031                     	ds	1
   150  0032                     _bWaitResetFlag:	
   151  0032                     	ds	1
   152  0033                     _sampleTimes:	
   153  0033                     	ds	1
   154  0034                     _timer:	
   155  0034                     	ds	1
   156  0035                     main@cTimerP5s_781:	
   157  0035                     	ds	1
   158  0036                     main@cTimerP5s_787:	
   159  0036                     	ds	1
   160  0037                     main@ucStep:	
   161  0037                     	ds	1
   162  0038                     main@ucTimerP3s:	
   163  0038                     	ds	1
   164  0039                     main@ucTimerP5s:	
   165  0039                     	ds	1
   166  003A                     setPWM_Width@ucOldWidth:	
   167  003A                     	ds	1
   168  003B                     vPutSampleDataIntoTable@ucCh13Length:	
   169  003B                     	ds	1
   170  003C                     vPutSampleDataIntoTable@ucChannelFourteenthLength:	
   171  003C                     	ds	1
   172                           
   173                           	psect	dataBANK0
   174  0059                     __pdataBANK0:	
   175  0059                     _sampleChannelSelect:	
   176  0059                     	ds	1
   177  005A                     vPutSampleDataIntoTable@uiInitWidth:	
   178  005A                     	ds	1
   179                           
   180                           	psect	bssBANK1
   181  00A0                     __pbssBANK1:	
   182  00A0                     _uiTwentySecondsTimer:	
   183  00A0                     	ds	2
   184  00A2                     main@ucDelay1s:	
   185  00A2                     	ds	2
   186  00A4                     main@uiTimerOneP5s:	
   187  00A4                     	ds	2
   188  00A6                     main@uiTimerThreeP5s:	
   189  00A6                     	ds	2
   190  00A8                     main@uiTimerTwoP5s:	
   191  00A8                     	ds	2
   192  00AA                     vPutSampleDataIntoTable@uiCalWidthCnt:	
   193  00AA                     	ds	2
   194  00AC                     _uiSampleCh13:	
   195  00AC                     	ds	16
   196  00BC                     _uiSampleCh12:	
   197  00BC                     	ds	6
   198  00C2                     _uiSampleChannelFourteenth:	
   199  00C2                     	ds	6
   200                           
   201                           	psect	clrtext
   202  05B9                     clear_ram:	
   203                           ;	Called with FSR containing the base address, and
   204                           ;	W with the last address+1
   205                           
   206  05B9  0064               	clrwdt	;clear the watchdog before getting into this loop
   207  05BA                     clrloop:	
   208  05BA  0180               	clrf	0	;clear RAM location pointed to by FSR
   209  05BB  0A84               	incf	4,f	;increment pointer
   210  05BC  0604               	xorwf	4,w	;XOR with final address
   211  05BD  1903               	btfsc	3,2	;have we reached the end yet?
   212  05BE  3400               	retlw	0	;all done for this memory range, return
   213  05BF  0604               	xorwf	4,w	;XOR again to restore value
   214  05C0  2DBA               	goto	clrloop	;do the next byte
   215                           
   216                           	psect	cstackBANK1
   217  00C8                     __pcstackBANK1:	
   218  00C8                     FilterCh13@tmpValue:	
   219                           
   220                           ; 1 bytes @ 0x0
   221  00C8                     	ds	1
   222  00C9                     FilterCh13@filter_temp:	
   223                           
   224                           ; 2 bytes @ 0x1
   225  00C9                     	ds	2
   226  00CB                     FilterCh13@filter_sum:	
   227                           
   228                           ; 2 bytes @ 0x3
   229  00CB                     	ds	2
   230  00CD                     FilterCh13@filter_buf:	
   231                           
   232                           ; 6 bytes @ 0x5
   233  00CD                     	ds	6
   234  00D3                     FilterCh13@cir:	
   235                           
   236                           ; 2 bytes @ 0xB
   237  00D3                     	ds	2
   238  00D5                     FilterCh13@j:	
   239                           
   240                           ; 1 bytes @ 0xD
   241  00D5                     	ds	1
   242  00D6                     FilterCh13@i:	
   243                           
   244                           ; 1 bytes @ 0xE
   245  00D6                     	ds	1
   246  00D7                     ?_getAdOriginalCh13Value:	
   247                           
   248                           ; 2 bytes @ 0xF
   249  00D7                     	ds	2
   250  00D9                     main@ucChValue:	
   251                           
   252                           ; 2 bytes @ 0x11
   253  00D9                     	ds	2
   254  00DB                     main@uiCh13Value:	
   255                           
   256                           ; 2 bytes @ 0x13
   257  00DB                     	ds	2
   258                           
   259                           	psect	cstackCOMMON
   260  0070                     __pcstackCOMMON:	
   261  0070                     ?_clock_config:	
   262  0070                     ?_timer1_config:	
   263                           ; 0 bytes @ 0x0
   264                           
   265  0070                     ?_timer1_interrupt_config:	
   266                           ; 0 bytes @ 0x0
   267                           
   268  0070                     ?_adc_start:	
   269                           ; 0 bytes @ 0x0
   270                           
   271  0070                     ?_process_AD_Converter_Value:	
   272                           ; 0 bytes @ 0x0
   273                           
   274  0070                     ?_clrSampeTime:	
   275                           ; 0 bytes @ 0x0
   276                           
   277  0070                     ?_clearTwentyMinTimer:	
   278                           ; 0 bytes @ 0x0
   279                           
   280  0070                     ?_clearTwelveHoursTimer:	
   281                           ; 0 bytes @ 0x0
   282                           
   283  0070                     ?_clearThreeHoursTimer:	
   284                           ; 0 bytes @ 0x0
   285                           
   286  0070                     ?_setWaitResetFlag:	
   287                           ; 0 bytes @ 0x0
   288                           
   289  0070                     ?_AD_Sample:	
   290                           ; 0 bytes @ 0x0
   291                           
   292  0070                     ?_initPB3:	
   293                           ; 0 bytes @ 0x0
   294                           
   295  0070                     ?_setPB3:	
   296                           ; 0 bytes @ 0x0
   297                           
   298  0070                     ?_initPB4:	
   299                           ; 0 bytes @ 0x0
   300                           
   301  0070                     ?_setPB4:	
   302                           ; 0 bytes @ 0x0
   303                           
   304  0070                     ?_initPB5:	
   305                           ; 0 bytes @ 0x0
   306                           
   307  0070                     ?_setPB5:	
   308                           ; 0 bytes @ 0x0
   309                           
   310  0070                     ?_initPB2_AsHighResistence:	
   311                           ; 0 bytes @ 0x0
   312                           
   313  0070                     ?_initPin:	
   314                           ; 0 bytes @ 0x0
   315                           
   316  0070                     ?_setPinInitVaule:	
   317                           ; 0 bytes @ 0x0
   318                           
   319  0070                     ?_selectAdChannel:	
   320                           ; 0 bytes @ 0x0
   321                           
   322  0070                     ?_reset:	
   323                           ; 0 bytes @ 0x0
   324                           
   325  0070                     ??_getWaitResetFlag:	
   326                           ; 0 bytes @ 0x0
   327                           
   328  0070                     ?_setPWM_Width:	
   329                           ; 0 bytes @ 0x0
   330                           
   331  0070                     ??_setPWM_Width:	
   332                           ; 0 bytes @ 0x0
   333                           
   334  0070                     ?_setAD_ConvertFlag:	
   335                           ; 0 bytes @ 0x0
   336                           
   337  0070                     ?_ISR:	
   338                           ; 0 bytes @ 0x0
   339                           
   340  0070                     ?i1_setAD_ConvertFlag:	
   341                           ; 0 bytes @ 0x0
   342                           
   343  0070                     ??i1_setAD_ConvertFlag:	
   344                           ; 0 bytes @ 0x0
   345                           
   346  0070                     ?_isPermitSampleTime:	
   347                           ; 0 bytes @ 0x0
   348                           
   349  0070                     ?_isFinishedTwentyMinTimer:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ?_isFinishedTwelveHoursTimer:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     ?_isFinishedThreeHoursTimer:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     ?_isFinishedOneHoursTimer:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0070                     ?_getWaitResetFlag:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0070                     ?_getAD_ConvertFlag:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0070                     ?_adc_get:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0070                     ?_main:	
   371                           ; 2 bytes @ 0x0
   372                           
   373  0070                     ?_Filter:	
   374                           ; 2 bytes @ 0x0
   375                           
   376  0070                     setPWM_Width@ucWidth:	
   377                           ; 2 bytes @ 0x0
   378                           
   379  0070                     i1setAD_ConvertFlag@flag:	
   380                           ; 1 bytes @ 0x0
   381                           
   382                           
   383                           ; 1 bytes @ 0x0
   384  0070                     	ds	2
   385  0072                     ??_adc_get:	
   386  0072                     ??_Filter:	
   387                           ; 0 bytes @ 0x2
   388                           
   389  0072                     adc_get@val:	
   390                           ; 0 bytes @ 0x2
   391                           
   392                           
   393                           ; 2 bytes @ 0x2
   394  0072                     	ds	4
   395  0076                     ?_vPutSampleDataIntoTable:	
   396  0076                     vPutSampleDataIntoTable@uiSampleData:	
   397                           ; 0 bytes @ 0x6
   398                           
   399                           
   400                           ; 2 bytes @ 0x6
   401  0076                     	ds	2
   402  0078                     vPutSampleDataIntoTable@channel:	
   403                           
   404                           ; 1 bytes @ 0x8
   405  0078                     	ds	1
   406  0079                     ??_vPutSampleDataIntoTable:	
   407  0079                     ??_ISR:	
   408                           ; 0 bytes @ 0x9
   409                           
   410                           
   411                           ; 0 bytes @ 0x9
   412  0079                     	ds	4
   413                           
   414                           	psect	cstackBANK0
   415  003D                     __pcstackBANK0:	
   416  003D                     Filter@filter_temp:	
   417                           
   418                           ; 2 bytes @ 0x0
   419  003D                     	ds	2
   420  003F                     Filter@filter_sum:	
   421                           
   422                           ; 2 bytes @ 0x2
   423  003F                     	ds	2
   424  0041                     Filter@tmpValue:	
   425                           
   426                           ; 1 bytes @ 0x4
   427  0041                     	ds	1
   428  0042                     Filter@filter_buf:	
   429                           
   430                           ; 6 bytes @ 0x5
   431  0042                     	ds	6
   432  0048                     Filter@cir:	
   433                           
   434                           ; 2 bytes @ 0xB
   435  0048                     	ds	2
   436  004A                     Filter@j:	
   437                           
   438                           ; 1 bytes @ 0xD
   439  004A                     	ds	1
   440  004B                     Filter@i:	
   441                           
   442                           ; 1 bytes @ 0xE
   443  004B                     	ds	1
   444  004C                     vPutSampleDataIntoTable@uiAbstractValue:	
   445                           
   446                           ; 2 bytes @ 0xF
   447  004C                     	ds	2
   448  004E                     vPutSampleDataIntoTable@uiDeviationValue:	
   449                           
   450                           ; 2 bytes @ 0x11
   451  004E                     	ds	2
   452  0050                     vPutSampleDataIntoTable@i:	
   453                           
   454                           ; 2 bytes @ 0x13
   455  0050                     	ds	2
   456  0052                     ??_clock_config:	
   457  0052                     ??_timer1_config:	
   458                           ; 0 bytes @ 0x15
   459                           
   460  0052                     ??_timer1_interrupt_config:	
   461                           ; 0 bytes @ 0x15
   462                           
   463  0052                     ?_adc_test_init:	
   464                           ; 0 bytes @ 0x15
   465                           
   466  0052                     ?_startTwentyMinTimer:	
   467                           ; 0 bytes @ 0x15
   468                           
   469  0052                     ??_adc_start:	
   470                           ; 0 bytes @ 0x15
   471                           
   472  0052                     ??_isPermitSampleTime:	
   473                           ; 0 bytes @ 0x15
   474                           
   475  0052                     ??_clrSampeTime:	
   476                           ; 0 bytes @ 0x15
   477                           
   478  0052                     ??_isFinishedTwentyMinTimer:	
   479                           ; 0 bytes @ 0x15
   480                           
   481  0052                     ??_clearTwentyMinTimer:	
   482                           ; 0 bytes @ 0x15
   483                           
   484  0052                     ?_startTwelveHourTimer:	
   485                           ; 0 bytes @ 0x15
   486                           
   487  0052                     ??_isFinishedTwelveHoursTimer:	
   488                           ; 0 bytes @ 0x15
   489                           
   490  0052                     ??_clearTwelveHoursTimer:	
   491                           ; 0 bytes @ 0x15
   492                           
   493  0052                     ?_startThreeHoursTimer:	
   494                           ; 0 bytes @ 0x15
   495                           
   496  0052                     ??_isFinishedThreeHoursTimer:	
   497                           ; 0 bytes @ 0x15
   498                           
   499  0052                     ??_clearThreeHoursTimer:	
   500                           ; 0 bytes @ 0x15
   501                           
   502  0052                     ?_startOneHoursTimer:	
   503                           ; 0 bytes @ 0x15
   504                           
   505  0052                     ??_isFinishedOneHoursTimer:	
   506                           ; 0 bytes @ 0x15
   507                           
   508  0052                     ??_setWaitResetFlag:	
   509                           ; 0 bytes @ 0x15
   510                           
   511  0052                     ??_AD_Sample:	
   512                           ; 0 bytes @ 0x15
   513                           
   514  0052                     ??_initPB3:	
   515                           ; 0 bytes @ 0x15
   516                           
   517  0052                     ??_setPB3:	
   518                           ; 0 bytes @ 0x15
   519                           
   520  0052                     ??_initPB4:	
   521                           ; 0 bytes @ 0x15
   522                           
   523  0052                     ??_setPB4:	
   524                           ; 0 bytes @ 0x15
   525                           
   526  0052                     ??_initPB5:	
   527                           ; 0 bytes @ 0x15
   528                           
   529  0052                     ??_setPB5:	
   530                           ; 0 bytes @ 0x15
   531                           
   532  0052                     ??_initPB2_AsHighResistence:	
   533                           ; 0 bytes @ 0x15
   534                           
   535  0052                     ?_pwm_start:	
   536                           ; 0 bytes @ 0x15
   537                           
   538  0052                     ??_selectAdChannel:	
   539                           ; 0 bytes @ 0x15
   540                           
   541  0052                     ??_reset:	
   542                           ; 0 bytes @ 0x15
   543                           
   544  0052                     ??_getAD_ConvertFlag:	
   545                           ; 0 bytes @ 0x15
   546                           
   547  0052                     ??_setAD_ConvertFlag:	
   548                           ; 0 bytes @ 0x15
   549                           
   550  0052                     ?_FilterCh13:	
   551                           ; 0 bytes @ 0x15
   552                           
   553  0052                     initPB3@bValue:	
   554                           ; 2 bytes @ 0x15
   555                           
   556  0052                     setPB3@bValue:	
   557                           ; 1 bytes @ 0x15
   558                           
   559  0052                     initPB4@bValue:	
   560                           ; 1 bytes @ 0x15
   561                           
   562  0052                     setPB4@bValue:	
   563                           ; 1 bytes @ 0x15
   564                           
   565  0052                     initPB5@bValue:	
   566                           ; 1 bytes @ 0x15
   567                           
   568  0052                     setPB5@bValue:	
   569                           ; 1 bytes @ 0x15
   570                           
   571  0052                     pwm_start@ucPulseFrequency:	
   572                           ; 1 bytes @ 0x15
   573                           
   574  0052                     setWaitResetFlag@bValue:	
   575                           ; 1 bytes @ 0x15
   576                           
   577  0052                     setAD_ConvertFlag@flag:	
   578                           ; 1 bytes @ 0x15
   579                           
   580  0052                     adc_test_init@ref:	
   581                           ; 1 bytes @ 0x15
   582                           
   583  0052                     startTwelveHourTimer@uiSetTime:	
   584                           ; 1 bytes @ 0x15
   585                           
   586  0052                     startThreeHoursTimer@uiSetTime:	
   587                           ; 2 bytes @ 0x15
   588                           
   589  0052                     startOneHoursTimer@uiSetTime:	
   590                           ; 2 bytes @ 0x15
   591                           
   592  0052                     startTwentyMinTimer@uiSetValue:	
   593                           ; 2 bytes @ 0x15
   594                           
   595                           
   596                           ; 2 bytes @ 0x15
   597  0052                     	ds	1
   598  0053                     ??_adc_test_init:	
   599  0053                     ??_pwm_start:	
   600                           ; 0 bytes @ 0x16
   601                           
   602  0053                     ??_initPin:	
   603                           ; 0 bytes @ 0x16
   604                           
   605  0053                     ??_setPinInitVaule:	
   606                           ; 0 bytes @ 0x16
   607                           
   608  0053                     pwm_start@ucPulseWidth:	
   609                           ; 0 bytes @ 0x16
   610                           
   611                           
   612                           ; 1 bytes @ 0x16
   613  0053                     	ds	1
   614  0054                     ??_startTwentyMinTimer:	
   615  0054                     ??_startTwelveHourTimer:	
   616                           ; 0 bytes @ 0x17
   617                           
   618  0054                     ??_startThreeHoursTimer:	
   619                           ; 0 bytes @ 0x17
   620                           
   621  0054                     ??_startOneHoursTimer:	
   622                           ; 0 bytes @ 0x17
   623                           
   624  0054                     ??_FilterCh13:	
   625                           ; 0 bytes @ 0x17
   626                           
   627  0054                     adc_test_init@channel:	
   628                           ; 0 bytes @ 0x17
   629                           
   630                           
   631                           ; 1 bytes @ 0x17
   632  0054                     	ds	1
   633  0055                     ??_process_AD_Converter_Value:	
   634                           
   635                           ; 0 bytes @ 0x18
   636  0055                     	ds	3
   637  0058                     ??_getAdOriginalCh13Value:	
   638  0058                     ??_main:	
   639                           ; 0 bytes @ 0x1B
   640                           
   641                           
   642                           ; 0 bytes @ 0x1B
   643  0058                     	ds	1
   644                           
   645                           	psect	maintext
   646  0210                     __pmaintext:	
   647 ;;Data sizes: Strings 0, constant 0, data 2, bss 70, persistent 0 stack 0
   648 ;;Auto spaces:   Size  Autos    Used
   649 ;; COMMON          14     13      14
   650 ;; BANK0           80     28      59
   651 ;; BANK1           80     21      61
   652 ;; BANK3           96      0       0
   653 ;; BANK2           96      0       0
   654 ;;
   655 ;; Pointer list with targets:
   656 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   657 ;;
   658 ;; ?_getAdOriginalCh13Value	unsigned int  size(1) Largest target is 0
   659 ;;
   660 ;; ?_Filter	unsigned int  size(1) Largest target is 0
   661 ;;
   662 ;; ?_FilterCh13	unsigned int  size(1) Largest target is 0
   663 ;;
   664 ;; Filter@tmpValue	PTR int  size(1) Largest target is 6
   665 ;;		 -> uiSampleChannelFourteenth(BANK1[6]), uiSampleCh12(BANK1[6]), 
   666 ;;
   667 ;; FilterCh13@tmpValue	PTR int  size(1) Largest target is 16
   668 ;;		 -> uiSampleCh13(BANK1[16]), 
   669 ;;
   670 ;;
   671 ;; Critical Paths under _main in COMMON
   672 ;;
   673 ;;   None.
   674 ;;
   675 ;; Critical Paths under _ISR in COMMON
   676 ;;
   677 ;;   _ISR->_vPutSampleDataIntoTable
   678 ;;   _vPutSampleDataIntoTable->_Filter
   679 ;;
   680 ;; Critical Paths under _main in BANK0
   681 ;;
   682 ;;   _getAdOriginalCh13Value->_FilterCh13
   683 ;;   _process_AD_Converter_Value->_adc_test_init
   684 ;;   _setPinInitVaule->_setPB3
   685 ;;   _setPinInitVaule->_setPB4
   686 ;;   _setPinInitVaule->_setPB5
   687 ;;   _initPin->_initPB3
   688 ;;   _initPin->_initPB4
   689 ;;   _initPin->_initPB5
   690 ;;
   691 ;; Critical Paths under _ISR in BANK0
   692 ;;
   693 ;;   _ISR->_vPutSampleDataIntoTable
   694 ;;   _vPutSampleDataIntoTable->_Filter
   695 ;;
   696 ;; Critical Paths under _main in BANK1
   697 ;;
   698 ;;   _main->_getAdOriginalCh13Value
   699 ;;   _getAdOriginalCh13Value->_FilterCh13
   700 ;;
   701 ;; Critical Paths under _ISR in BANK1
   702 ;;
   703 ;;   None.
   704 ;;
   705 ;; Critical Paths under _main in BANK3
   706 ;;
   707 ;;   None.
   708 ;;
   709 ;; Critical Paths under _ISR in BANK3
   710 ;;
   711 ;;   None.
   712 ;;
   713 ;; Critical Paths under _main in BANK2
   714 ;;
   715 ;;   None.
   716 ;;
   717 ;; Critical Paths under _ISR in BANK2
   718 ;;
   719 ;;   None.
   720 ;;
   721 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   722 ;;
   723 ;;
   724 ;;Call Graph Tables:
   725 ;;
   726 ;; ---------------------------------------------------------------------------------
   727 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   728 ;; ---------------------------------------------------------------------------------
   729 ;; (0) _main                                                 5     5      0    1696
   730 ;;                                             27 BANK0      1     1      0
   731 ;;                                             17 BANK1      4     4      0
   732 ;;                            _initPin
   733 ;;                    _setPinInitVaule
   734 ;;                    _selectAdChannel
   735 ;;                       _clock_config
   736 ;;                      _timer1_config
   737 ;;            _timer1_interrupt_config
   738 ;;                      _adc_test_init
   739 ;;                _startTwentyMinTimer
   740 ;;                          _adc_start
   741 ;;         _process_AD_Converter_Value
   742 ;;                 _isPermitSampleTime
   743 ;;                       _clrSampeTime
   744 ;;           _isFinishedTwentyMinTimer
   745 ;;             _getAdOriginalCh13Value
   746 ;;                          _pwm_start
   747 ;;                             _setPB3
   748 ;;                             _setPB4
   749 ;;                             _setPB5
   750 ;;                _clearTwentyMinTimer
   751 ;;               _startTwelveHourTimer
   752 ;;         _isFinishedTwelveHoursTimer
   753 ;;              _clearTwelveHoursTimer
   754 ;;               _startThreeHoursTimer
   755 ;;          _isFinishedThreeHoursTimer
   756 ;;               _clearThreeHoursTimer
   757 ;;                 _startOneHoursTimer
   758 ;;            _isFinishedOneHoursTimer
   759 ;;                              _reset
   760 ;;                   _setWaitResetFlag
   761 ;; ---------------------------------------------------------------------------------
   762 ;; (1) _getAdOriginalCh13Value                               2     0      2     915
   763 ;;                                             15 BANK1      2     0      2
   764 ;;                         _FilterCh13
   765 ;; ---------------------------------------------------------------------------------
   766 ;; (1) _process_AD_Converter_Value                           0     0      0      93
   767 ;;                  _getAD_ConvertFlag
   768 ;;                  _setAD_ConvertFlag
   769 ;;                          _AD_Sample
   770 ;;                      _adc_test_init
   771 ;;                          _adc_start
   772 ;; ---------------------------------------------------------------------------------
   773 ;; (1) _setPinInitVaule                                      0     0      0      93
   774 ;;                             _setPB3
   775 ;;                             _setPB4
   776 ;;                             _setPB5
   777 ;; ---------------------------------------------------------------------------------
   778 ;; (1) _initPin                                              0     0      0      93
   779 ;;           _initPB2_AsHighResistence
   780 ;;                            _initPB3
   781 ;;                            _initPB4
   782 ;;                            _initPB5
   783 ;; ---------------------------------------------------------------------------------
   784 ;; (2) _AD_Sample                                            0     0      0       0
   785 ;; ---------------------------------------------------------------------------------
   786 ;; (2) _setAD_ConvertFlag                                    1     1      0      31
   787 ;;                                             21 BANK0      1     1      0
   788 ;; ---------------------------------------------------------------------------------
   789 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   790 ;; ---------------------------------------------------------------------------------
   791 ;; (2) _FilterCh13                                          21    19      2     915
   792 ;;                                             21 BANK0      6     4      2
   793 ;;                                              0 BANK1     15    15      0
   794 ;; ---------------------------------------------------------------------------------
   795 ;; (1) _setWaitResetFlag                                     1     1      0      31
   796 ;;                                             21 BANK0      1     1      0
   797 ;; ---------------------------------------------------------------------------------
   798 ;; (1) _isFinishedOneHoursTimer                              0     0      0       0
   799 ;; ---------------------------------------------------------------------------------
   800 ;; (1) _startOneHoursTimer                                   2     0      2      31
   801 ;;                                             21 BANK0      2     0      2
   802 ;; ---------------------------------------------------------------------------------
   803 ;; (1) _clearThreeHoursTimer                                 0     0      0       0
   804 ;; ---------------------------------------------------------------------------------
   805 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   806 ;; ---------------------------------------------------------------------------------
   807 ;; (1) _startThreeHoursTimer                                 2     0      2      31
   808 ;;                                             21 BANK0      2     0      2
   809 ;; ---------------------------------------------------------------------------------
   810 ;; (1) _clearTwelveHoursTimer                                0     0      0       0
   811 ;; ---------------------------------------------------------------------------------
   812 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   813 ;; ---------------------------------------------------------------------------------
   814 ;; (1) _startTwelveHourTimer                                 2     0      2      31
   815 ;;                                             21 BANK0      2     0      2
   816 ;; ---------------------------------------------------------------------------------
   817 ;; (1) _clearTwentyMinTimer                                  0     0      0       0
   818 ;; ---------------------------------------------------------------------------------
   819 ;; (1) _isFinishedTwentyMinTimer                             0     0      0       0
   820 ;; ---------------------------------------------------------------------------------
   821 ;; (1) _clrSampeTime                                         0     0      0       0
   822 ;; ---------------------------------------------------------------------------------
   823 ;; (1) _isPermitSampleTime                                   0     0      0       0
   824 ;; ---------------------------------------------------------------------------------
   825 ;; (2) _adc_start                                            0     0      0       0
   826 ;; ---------------------------------------------------------------------------------
   827 ;; (1) _startTwentyMinTimer                                  2     0      2      31
   828 ;;                                             21 BANK0      2     0      2
   829 ;; ---------------------------------------------------------------------------------
   830 ;; (2) _adc_test_init                                        3     2      1      62
   831 ;;                                             21 BANK0      3     2      1
   832 ;; ---------------------------------------------------------------------------------
   833 ;; (1) _timer1_interrupt_config                              0     0      0       0
   834 ;; ---------------------------------------------------------------------------------
   835 ;; (1) _timer1_config                                        0     0      0       0
   836 ;; ---------------------------------------------------------------------------------
   837 ;; (1) _clock_config                                         0     0      0       0
   838 ;; ---------------------------------------------------------------------------------
   839 ;; (1) _reset                                                0     0      0       0
   840 ;; ---------------------------------------------------------------------------------
   841 ;; (1) _selectAdChannel                                      0     0      0       0
   842 ;; ---------------------------------------------------------------------------------
   843 ;; (1) _pwm_start                                            2     1      1      62
   844 ;;                                             21 BANK0      2     1      1
   845 ;; ---------------------------------------------------------------------------------
   846 ;; (2) _initPB2_AsHighResistence                             0     0      0       0
   847 ;; ---------------------------------------------------------------------------------
   848 ;; (1) _setPB5                                               1     1      0      31
   849 ;;                                             21 BANK0      1     1      0
   850 ;; ---------------------------------------------------------------------------------
   851 ;; (2) _initPB5                                              1     1      0      31
   852 ;;                                             21 BANK0      1     1      0
   853 ;; ---------------------------------------------------------------------------------
   854 ;; (1) _setPB4                                               1     1      0      31
   855 ;;                                             21 BANK0      1     1      0
   856 ;; ---------------------------------------------------------------------------------
   857 ;; (2) _initPB4                                              1     1      0      31
   858 ;;                                             21 BANK0      1     1      0
   859 ;; ---------------------------------------------------------------------------------
   860 ;; (1) _setPB3                                               1     1      0      31
   861 ;;                                             21 BANK0      1     1      0
   862 ;; ---------------------------------------------------------------------------------
   863 ;; (2) _initPB3                                              1     1      0      31
   864 ;;                                             21 BANK0      1     1      0
   865 ;; ---------------------------------------------------------------------------------
   866 ;; Estimated maximum stack depth 2
   867 ;; ---------------------------------------------------------------------------------
   868 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   869 ;; ---------------------------------------------------------------------------------
   870 ;; (3) _ISR                                                  4     4      0    1170
   871 ;;                                              9 COMMON     4     4      0
   872 ;;                i1_setAD_ConvertFlag
   873 ;;                            _adc_get
   874 ;;            _vPutSampleDataIntoTable
   875 ;; ---------------------------------------------------------------------------------
   876 ;; (4) _vPutSampleDataIntoTable                              9     6      3    1073
   877 ;;                                              6 COMMON     3     0      3
   878 ;;                                             15 BANK0      6     6      0
   879 ;;                             _Filter
   880 ;;                   _getWaitResetFlag
   881 ;;                       _setPWM_Width
   882 ;;                            _adc_get (ARG)
   883 ;; ---------------------------------------------------------------------------------
   884 ;; (4) i1_setAD_ConvertFlag                                  1     1      0      73
   885 ;;                                              0 COMMON     1     1      0
   886 ;; ---------------------------------------------------------------------------------
   887 ;; (4) _adc_get                                              4     2      2      24
   888 ;;                                              0 COMMON     4     2      2
   889 ;; ---------------------------------------------------------------------------------
   890 ;; (5) _Filter                                              21    19      2     620
   891 ;;                                              0 COMMON     6     4      2
   892 ;;                                              0 BANK0     15    15      0
   893 ;; ---------------------------------------------------------------------------------
   894 ;; (5) _setPWM_Width                                         1     1      0      66
   895 ;;                                              0 COMMON     1     1      0
   896 ;; ---------------------------------------------------------------------------------
   897 ;; (5) _getWaitResetFlag                                     0     0      0       0
   898 ;; ---------------------------------------------------------------------------------
   899 ;; Estimated maximum stack depth 5
   900 ;; ---------------------------------------------------------------------------------
   901 ;; Call Graph Graphs:
   902 ;; _main (ROOT)
   903 ;;   _initPin
   904 ;;     _initPB2_AsHighResistence
   905 ;;     _initPB3
   906 ;;     _initPB4
   907 ;;     _initPB5
   908 ;;   _setPinInitVaule
   909 ;;     _setPB3
   910 ;;     _setPB4
   911 ;;     _setPB5
   912 ;;   _selectAdChannel
   913 ;;   _clock_config
   914 ;;   _timer1_config
   915 ;;   _timer1_interrupt_config
   916 ;;   _adc_test_init
   917 ;;   _startTwentyMinTimer
   918 ;;   _adc_start
   919 ;;   _process_AD_Converter_Value
   920 ;;     _getAD_ConvertFlag
   921 ;;     _setAD_ConvertFlag
   922 ;;     _AD_Sample
   923 ;;     _adc_test_init
   924 ;;     _adc_start
   925 ;;   _isPermitSampleTime
   926 ;;   _clrSampeTime
   927 ;;   _isFinishedTwentyMinTimer
   928 ;;   _getAdOriginalCh13Value
   929 ;;     _FilterCh13
   930 ;;   _pwm_start
   931 ;;   _setPB3
   932 ;;   _setPB4
   933 ;;   _setPB5
   934 ;;   _clearTwentyMinTimer
   935 ;;   _startTwelveHourTimer
   936 ;;   _isFinishedTwelveHoursTimer
   937 ;;   _clearTwelveHoursTimer
   938 ;;   _startThreeHoursTimer
   939 ;;   _isFinishedThreeHoursTimer
   940 ;;   _clearThreeHoursTimer
   941 ;;   _startOneHoursTimer
   942 ;;   _isFinishedOneHoursTimer
   943 ;;   _reset
   944 ;;   _setWaitResetFlag
   945 ;;
   946 ;; _ISR (ROOT)
   947 ;;   i1_setAD_ConvertFlag
   948 ;;   _adc_get
   949 ;;   _vPutSampleDataIntoTable
   950 ;;     _Filter
   951 ;;     _getWaitResetFlag
   952 ;;     _setPWM_Width
   953 ;;     _adc_get (ARG)
   954 ;;
   955 ;; Address spaces:
   956 ;;Name               Size   Autos  Total    Cost      Usage
   957 ;;BANK3               60      0       0      10        0.0%
   958 ;;BITBANK3            60      0       0       9        0.0%
   959 ;;SFR3                 0      0       0       4        0.0%
   960 ;;BITSFR3              0      0       0       4        0.0%
   961 ;;BANK2               60      0       0      12        0.0%
   962 ;;BITBANK2            60      0       0      11        0.0%
   963 ;;SFR2                 0      0       0       5        0.0%
   964 ;;BITSFR2              0      0       0       5        0.0%
   965 ;;SFR1                 0      0       0       2        0.0%
   966 ;;BITSFR1              0      0       0       2        0.0%
   967 ;;BANK1               50     15      3D       8       76.3%
   968 ;;BITBANK1            50      0       0       7        0.0%
   969 ;;CODE                 0      0       0       0        0.0%
   970 ;;DATA                 0      0      8E       6        0.0%
   971 ;;ABS                  0      0      86       3        0.0%
   972 ;;NULL                 0      0       0       0        0.0%
   973 ;;STACK                0      0       8       2        0.0%
   974 ;;BANK0               50     1C      3B       5       73.8%
   975 ;;BITBANK0            50      0       0       4        0.0%
   976 ;;SFR0                 0      0       0       1        0.0%
   977 ;;BITSFR0              0      0       0       1        0.0%
   978 ;;COMMON               E      D       E       1      100.0%
   979 ;;BITCOMMON            E      0       0       0        0.0%
   980                           
   981                           
   982 ;; *************** function _main *****************
   983 ;; Defined at:
   984 ;;		line 498 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;		None
   987 ;; Auto vars:     Size  Location     Type
   988 ;;  ucChValue       2   17[BANK1 ] unsigned int 
   989 ;;  uiCh13Value     2   19[BANK1 ] unsigned int 
   990 ;; Return value:  Size  Location     Type
   991 ;;                  2  727[COMMON] int 
   992 ;; Registers used:
   993 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   994 ;; Tracked objects:
   995 ;;		On entry : 17F/0
   996 ;;		On exit  : 60/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   999 ;;      Params:         0       0       0       0       0
  1000 ;;      Locals:         0       0       4       0       0
  1001 ;;      Temps:          0       1       0       0       0
  1002 ;;      Totals:         0       1       4       0       0
  1003 ;;Total ram usage:        5 bytes
  1004 ;; Hardware stack levels required when called:    5
  1005 ;; This function calls:
  1006 ;;		_initPin
  1007 ;;		_setPinInitVaule
  1008 ;;		_selectAdChannel
  1009 ;;		_clock_config
  1010 ;;		_timer1_config
  1011 ;;		_timer1_interrupt_config
  1012 ;;		_adc_test_init
  1013 ;;		_startTwentyMinTimer
  1014 ;;		_adc_start
  1015 ;;		_process_AD_Converter_Value
  1016 ;;		_isPermitSampleTime
  1017 ;;		_clrSampeTime
  1018 ;;		_isFinishedTwentyMinTimer
  1019 ;;		_getAdOriginalCh13Value
  1020 ;;		_pwm_start
  1021 ;;		_setPB3
  1022 ;;		_setPB4
  1023 ;;		_setPB5
  1024 ;;		_clearTwentyMinTimer
  1025 ;;		_startTwelveHourTimer
  1026 ;;		_isFinishedTwelveHoursTimer
  1027 ;;		_clearTwelveHoursTimer
  1028 ;;		_startThreeHoursTimer
  1029 ;;		_isFinishedThreeHoursTimer
  1030 ;;		_clearThreeHoursTimer
  1031 ;;		_startOneHoursTimer
  1032 ;;		_isFinishedOneHoursTimer
  1033 ;;		_reset
  1034 ;;		_setWaitResetFlag
  1035 ;; This function is called by:
  1036 ;;		Startup code after reset
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039  0210                     _main:	
  1040                           
  1041                           ;main.c: 499: enum systemStep {
  1042                           ;main.c: 500: INIT_STEP = 0,
  1043                           ;main.c: 501: START_UP_PWM_STEP,
  1044                           ;main.c: 502: CHECK_10_HOUR_TIMER_STEP,
  1045                           ;main.c: 503: STARTUP_3_HOUR_TIMER_STEP,
  1046                           ;main.c: 504: CHECK_3_HOUR_TIMER_STEP,
  1047                           ;main.c: 505: STARTUP_1_HOUR_TIMER_STEP,
  1048                           ;main.c: 506: CHECK_1_HOUR_TIMER_STEP,
  1049                           ;main.c: 507: READY_FOR_RESET_STEP = 99,
  1050                           ;main.c: 508: DELAY_ONE_SECOND_FOR_PWM,
  1051                           ;main.c: 509: MEET_RESET_CONDITION_STEP,
  1052                           ;main.c: 510: RESET_STEP,
  1053                           ;main.c: 511: };
  1054                           ;main.c: 513: static enum systemStep ucStep = INIT_STEP;
  1055                           
  1056                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1057  0210  118A  24D3  118A   	fcall	_initPin
  1058                           
  1059                           ;main.c: 527: setPinInitVaule();
  1060  0213  118A  2504  118A   	fcall	_setPinInitVaule
  1061                           
  1062                           ;main.c: 528: selectAdChannel();
  1063  0216  118A  25DA  118A   	fcall	_selectAdChannel
  1064                           
  1065                           ;main.c: 530: clock_config();
  1066  0219  118A  25C1  118A   	fcall	_clock_config
  1067                           
  1068                           ;main.c: 531: timer1_config();
  1069  021C  118A  25AF  118A   	fcall	_timer1_config
  1070                           
  1071                           ;main.c: 532: timer1_interrupt_config();
  1072  021F  118A  25E1  118A   	fcall	_timer1_interrupt_config
  1073                           
  1074                           ;main.c: 534: adc_test_init(12,3);
  1075  0222  3003               	movlw	3
  1076  0223  1283               	bcf	3,5	;RP0=0, select bank0
  1077  0224  00D2               	movwf	?_adc_test_init
  1078  0225  300C               	movlw	12
  1079  0226  118A  24B4  118A   	fcall	_adc_test_init
  1080                           
  1081                           ;main.c: 540: startTwentyMinTimer( 60 );
  1082  0229  303C               	movlw	60
  1083  022A  1283               	bcf	3,5	;RP0=0, select bank0
  1084  022B  00D2               	movwf	?_startTwentyMinTimer
  1085  022C  01D3               	clrf	?_startTwentyMinTimer+1
  1086  022D  118A  2578  118A   	fcall	_startTwentyMinTimer
  1087                           
  1088                           ;main.c: 541: _delay(1000);
  1089  0230  30F9               	movlw	249
  1090  0231  00D8               	movwf	??_main
  1091  0232                     u2297:	
  1092  0232  0064               	clrwdt
  1093  0233  0BD8               	decfsz	??_main,f
  1094  0234  2A32               	goto	u2297
  1095  0235  2A36               	nop2	;nop
  1096  0236  0064               	clrwdt
  1097                           
  1098                           ;main.c: 542: adc_start();
  1099  0237  118A  24CF  118A   	fcall	_adc_start
  1100  023A                     l4272:	
  1101  023A  0064               	clrwdt	;#
  1102                           
  1103                           ;main.c: 555: process_AD_Converter_Value();
  1104  023B  118A  2483  118A   	fcall	_process_AD_Converter_Value
  1105                           
  1106                           ;main.c: 557: if( isPermitSampleTime() )
  1107  023E  118A  25C9  118A   	fcall	_isPermitSampleTime
  1108  0241  3A00               	xorlw	0
  1109  0242  1903               	skipnz
  1110  0243  2A3A               	goto	l4272
  1111                           
  1112                           ;main.c: 558: {
  1113                           ;main.c: 561: clrSampeTime();
  1114  0244  118A  25E4  118A   	fcall	_clrSampeTime
  1115                           
  1116                           ;main.c: 570: switch(ucStep)
  1117  0247  2BA1               	goto	l4432
  1118  0248                     l4280:	
  1119                           
  1120                           ;main.c: 574: {
  1121                           ;main.c: 579: static unsigned char ucTimerP3s = 0;
  1122                           ;main.c: 581: if( isFinishedTwentyMinTimer() )
  1123  0248  118A  25A5  118A   	fcall	_isFinishedTwentyMinTimer
  1124  024B  3A00               	xorlw	0
  1125  024C  1903               	skipnz
  1126  024D  2A52               	goto	l4286
  1127                           
  1128                           ;main.c: 582: {
  1129                           ;main.c: 583: ucStep = READY_FOR_RESET_STEP;
  1130  024E  3063               	movlw	99
  1131  024F  00B7               	movwf	main@ucStep
  1132                           
  1133                           ;main.c: 584: ucTimerP3s = 0;
  1134  0250  01B8               	clrf	main@ucTimerP3s
  1135                           
  1136                           ;main.c: 585: }
  1137  0251  2A3A               	goto	l4272
  1138  0252                     l4286:	
  1139                           
  1140                           ;main.c: 586: else
  1141                           ;main.c: 587: {
  1142                           ;main.c: 588: if( getAdOriginalCh13Value() > 90 )
  1143  0252  118A  23C6  118A   	fcall	_getAdOriginalCh13Value
  1144  0255  3000               	movlw	0
  1145  0256  0258               	subwf	(?_getAdOriginalCh13Value+1)^(0+128),w
  1146  0257  305B               	movlw	91
  1147  0258  1903               	skipnz
  1148  0259  0257               	subwf	?_getAdOriginalCh13Value^(0+128),w
  1149  025A  1C03               	skipc
  1150  025B  2A5F               	goto	l4290
  1151                           
  1152                           ;main.c: 589: {
  1153                           ;main.c: 590: ucTimerP3s++;
  1154  025C  1283               	bcf	3,5	;RP0=0, select bank0
  1155  025D  0AB8               	incf	main@ucTimerP3s,f
  1156                           
  1157                           ;main.c: 591: }
  1158  025E  2A61               	goto	l4292
  1159  025F                     l4290:	
  1160                           
  1161                           ;main.c: 592: else
  1162                           ;main.c: 593: ucTimerP3s = 0;
  1163  025F  1283               	bcf	3,5	;RP0=0, select bank0
  1164  0260  01B8               	clrf	main@ucTimerP3s
  1165  0261                     l4292:	
  1166                           
  1167                           ;main.c: 595: if( ucTimerP3s >= 3)
  1168  0261  3003               	movlw	3
  1169  0262  0238               	subwf	main@ucTimerP3s,w
  1170  0263  1C03               	skipc
  1171  0264  2A3A               	goto	l4272
  1172                           
  1173                           ;main.c: 596: {
  1174                           ;main.c: 597: ucTimerP3s = 0;
  1175  0265  01B8               	clrf	main@ucTimerP3s
  1176                           
  1177                           ;main.c: 598: ucStep = START_UP_PWM_STEP;
  1178  0266  01B7               	clrf	main@ucStep
  1179  0267  0AB7               	incf	main@ucStep,f
  1180  0268                     l737:	
  1181                           
  1182                           ;main.c: 599: }
  1183                           ;main.c: 601: }
  1184                           ;main.c: 605: break;
  1185  0268  2A3A               	goto	l4272
  1186  0269                     l4298:	
  1187                           
  1188                           ;main.c: 609: {
  1189                           ;main.c: 614: pwm_start(75,249);
  1190  0269  30F9               	movlw	249
  1191  026A  00D2               	movwf	?_pwm_start
  1192  026B  304B               	movlw	75
  1193  026C  118A  2525  118A   	fcall	_pwm_start
  1194                           
  1195                           ;main.c: 616: setPB3(0);
  1196  026F  3000               	movlw	0
  1197  0270  118A  250C  118A   	fcall	_setPB3
  1198                           
  1199                           ;main.c: 617: setPB4(1);
  1200  0273  3001               	movlw	1
  1201  0274  118A  2515  118A   	fcall	_setPB4
  1202                           
  1203                           ;main.c: 618: setPB5(0);
  1204  0277  3000               	movlw	0
  1205  0278  118A  251D  118A   	fcall	_setPB5
  1206                           
  1207                           ;main.c: 619: clearTwentyMinTimer();
  1208  027B  118A  25D6  118A   	fcall	_clearTwentyMinTimer
  1209                           
  1210                           ;main.c: 620: startTwelveHourTimer( 240);
  1211  027E  30F0               	movlw	240
  1212  027F  00D2               	movwf	?_startTwelveHourTimer
  1213  0280  01D3               	clrf	?_startTwelveHourTimer+1
  1214  0281  118A  256A  118A   	fcall	_startTwelveHourTimer
  1215                           
  1216                           ;main.c: 621: ucStep = CHECK_10_HOUR_TIMER_STEP;
  1217  0284  3002               	movlw	2
  1218  0285  2B9D               	goto	L8
  1219  0286                     l4306:	
  1220                           ;main.c: 622: break;
  1221                           
  1222                           
  1223                           ;main.c: 626: {
  1224                           ;main.c: 631: static unsigned char ucTimerP5s = 0;
  1225                           ;main.c: 633: if( isFinishedTwelveHoursTimer () )
  1226  0286  118A  259B  118A   	fcall	_isFinishedTwelveHoursTimer
  1227  0289  3A00               	xorlw	0
  1228  028A  1903               	skipnz
  1229  028B  2A8E               	goto	l4310
  1230  028C                     l4308:	
  1231                           
  1232                           ;main.c: 634: ucStep = READY_FOR_RESET_STEP;
  1233  028C  3063               	movlw	99
  1234  028D  2B9D               	goto	L8
  1235  028E                     l4310:	
  1236                           
  1237                           ;main.c: 635: else
  1238                           ;main.c: 636: {
  1239                           ;main.c: 637: if( getAdOriginalCh13Value() < 200 )
  1240  028E  118A  23C6  118A   	fcall	_getAdOriginalCh13Value
  1241  0291  3000               	movlw	0
  1242  0292  0258               	subwf	(?_getAdOriginalCh13Value+1)^(0+128),w
  1243  0293  30C8               	movlw	200
  1244  0294  1903               	skipnz
  1245  0295  0257               	subwf	?_getAdOriginalCh13Value^(0+128),w
  1246  0296  1803               	skipnc
  1247  0297  2A9B               	goto	l4314
  1248                           
  1249                           ;main.c: 638: ucTimerP5s++;
  1250  0298  1283               	bcf	3,5	;RP0=0, select bank0
  1251  0299  0AB9               	incf	main@ucTimerP5s,f
  1252  029A  2A9D               	goto	l4316
  1253  029B                     l4314:	
  1254                           
  1255                           ;main.c: 639: else
  1256                           ;main.c: 640: ucTimerP5s = 0;
  1257  029B  1283               	bcf	3,5	;RP0=0, select bank0
  1258  029C  01B9               	clrf	main@ucTimerP5s
  1259  029D                     l4316:	
  1260                           
  1261                           ;main.c: 642: if( ucTimerP5s >= 2)
  1262  029D  3002               	movlw	2
  1263  029E  0239               	subwf	main@ucTimerP5s,w
  1264  029F  1C03               	skipc
  1265  02A0  2A3A               	goto	l4272
  1266  02A1  3003               	movlw	3
  1267                           
  1268                           ;main.c: 643: {
  1269                           ;main.c: 644: ucTimerP5s = 0;
  1270  02A2  01B9               	clrf	main@ucTimerP5s
  1271                           
  1272                           ;main.c: 645: ucStep = STARTUP_3_HOUR_TIMER_STEP;
  1273  02A3  2B9D               	goto	L8
  1274  02A4                     l4322:	
  1275                           
  1276                           ;main.c: 653: {
  1277                           ;main.c: 654: clearTwelveHoursTimer();
  1278  02A4  118A  25D2  118A   	fcall	_clearTwelveHoursTimer
  1279                           
  1280                           ;main.c: 655: startThreeHoursTimer(180);
  1281  02A7  30B4               	movlw	180
  1282  02A8  00D2               	movwf	?_startThreeHoursTimer
  1283  02A9  01D3               	clrf	?_startThreeHoursTimer+1
  1284  02AA  118A  255C  118A   	fcall	_startThreeHoursTimer
  1285                           
  1286                           ;main.c: 656: ucStep = CHECK_3_HOUR_TIMER_STEP;
  1287  02AD  3004               	movlw	4
  1288  02AE  2B9D               	goto	L8
  1289  02AF                     l4326:	
  1290                           ;main.c: 657: break;
  1291                           
  1292                           
  1293                           ;main.c: 661: {
  1294                           ;main.c: 662: static unsigned char ucTimerP5s = 0;
  1295                           ;main.c: 664: if( isFinishedThreeHoursTimer() )
  1296  02AF  118A  2591  118A   	fcall	_isFinishedThreeHoursTimer
  1297  02B2  3A00               	xorlw	0
  1298  02B3  1D03               	btfss	3,2
  1299  02B4  2A8C               	goto	l4308
  1300                           
  1301                           ;main.c: 666: else
  1302                           ;main.c: 667: {
  1303                           ;main.c: 668: if( getAdOriginalCh13Value() < 75 )
  1304  02B5  118A  23C6  118A   	fcall	_getAdOriginalCh13Value
  1305  02B8  3000               	movlw	0
  1306  02B9  0258               	subwf	(?_getAdOriginalCh13Value+1)^(0+128),w
  1307  02BA  304B               	movlw	75
  1308  02BB  1903               	skipnz
  1309  02BC  0257               	subwf	?_getAdOriginalCh13Value^(0+128),w
  1310  02BD  1803               	skipnc
  1311  02BE  2AC2               	goto	l4334
  1312                           
  1313                           ;main.c: 669: ucTimerP5s++;
  1314  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  1315  02C0  0AB5               	incf	main@cTimerP5s_781,f
  1316  02C1  2AC4               	goto	l4336
  1317  02C2                     l4334:	
  1318                           
  1319                           ;main.c: 670: else
  1320                           ;main.c: 671: ucTimerP5s = 0;
  1321  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  1322  02C3  01B5               	clrf	main@cTimerP5s_781
  1323  02C4                     l4336:	
  1324                           
  1325                           ;main.c: 673: if( ucTimerP5s >= 2)
  1326  02C4  3002               	movlw	2
  1327  02C5  0235               	subwf	main@cTimerP5s_781,w
  1328  02C6  1C03               	skipc
  1329  02C7  2A3A               	goto	l4272
  1330  02C8  3005               	movlw	5
  1331                           
  1332                           ;main.c: 674: {
  1333                           ;main.c: 675: ucTimerP5s = 0;
  1334  02C9  01B5               	clrf	main@cTimerP5s_781
  1335                           
  1336                           ;main.c: 676: ucStep = STARTUP_1_HOUR_TIMER_STEP;
  1337  02CA  2B9D               	goto	L8
  1338  02CB                     l4342:	
  1339                           
  1340                           ;main.c: 683: {
  1341                           ;main.c: 684: clearThreeHoursTimer();
  1342  02CB  118A  25CE  118A   	fcall	_clearThreeHoursTimer
  1343                           
  1344                           ;main.c: 685: startOneHoursTimer( 120 );
  1345  02CE  3078               	movlw	120
  1346  02CF  00D2               	movwf	?_startOneHoursTimer
  1347  02D0  01D3               	clrf	?_startOneHoursTimer+1
  1348  02D1  118A  254E  118A   	fcall	_startOneHoursTimer
  1349                           
  1350                           ;main.c: 686: setPB3(1);
  1351  02D4  3001               	movlw	1
  1352  02D5  118A  250C  118A   	fcall	_setPB3
  1353                           
  1354                           ;main.c: 687: setPB4(0);
  1355  02D8  3000               	movlw	0
  1356  02D9  118A  2515  118A   	fcall	_setPB4
  1357                           
  1358                           ;main.c: 688: setPB5(1);
  1359  02DC  3001               	movlw	1
  1360  02DD  118A  251D  118A   	fcall	_setPB5
  1361                           
  1362                           ;main.c: 689: ucStep = CHECK_1_HOUR_TIMER_STEP;
  1363  02E0  3006               	movlw	6
  1364  02E1  2B9D               	goto	L8
  1365  02E2                     l4354:	
  1366                           ;main.c: 690: break;
  1367                           
  1368                           
  1369                           ;main.c: 694: {
  1370                           ;main.c: 699: static unsigned int uiTimerOneP5s = 0;
  1371                           ;main.c: 700: static unsigned int uiTimerTwoP5s = 0;
  1372                           ;main.c: 701: static unsigned int uiTimerThreeP5s = 0;
  1373                           ;main.c: 703: unsigned int uiCh13Value = getAdOriginalCh13Value();
  1374  02E2  118A  23C6  118A   	fcall	_getAdOriginalCh13Value
  1375  02E5  0858               	movf	(?_getAdOriginalCh13Value+1)^(0+128),w
  1376  02E6  00DC               	movwf	(main@uiCh13Value+1)^(0+128)
  1377  02E7  0857               	movf	?_getAdOriginalCh13Value^(0+128),w
  1378  02E8  00DB               	movwf	main@uiCh13Value^(0+128)
  1379                           
  1380                           ;main.c: 706: if( isFinishedOneHoursTimer() )
  1381  02E9  118A  2586  118A   	fcall	_isFinishedOneHoursTimer
  1382  02EC  3A00               	xorlw	0
  1383  02ED  1D03               	btfss	3,2
  1384  02EE  2A8C               	goto	l4308
  1385                           
  1386                           ;main.c: 708: else
  1387                           ;main.c: 709: {
  1388                           ;main.c: 710: if( uiCh13Value > 85 )
  1389  02EF  3000               	movlw	0
  1390  02F0  1683               	bsf	3,5	;RP0=1, select bank1
  1391  02F1  025C               	subwf	(main@uiCh13Value+1)^(0+128),w
  1392  02F2  3056               	movlw	86
  1393  02F3  1903               	skipnz
  1394  02F4  025B               	subwf	main@uiCh13Value^(0+128),w
  1395  02F5  1C03               	skipc
  1396  02F6  2B06               	goto	l4370
  1397                           
  1398                           ;main.c: 711: {
  1399                           ;main.c: 712: if( uiTimerOneP5s <= 1 )
  1400  02F7  3000               	movlw	0
  1401  02F8  0225               	subwf	(main@uiTimerOneP5s+1)^(0+128),w
  1402  02F9  3002               	movlw	2
  1403  02FA  1903               	skipnz
  1404  02FB  0224               	subwf	main@uiTimerOneP5s^(0+128),w
  1405  02FC  1803               	skipnc
  1406  02FD  2B01               	goto	l4366
  1407                           
  1408                           ;main.c: 713: uiTimerOneP5s++;
  1409  02FE  0AA4               	incf	main@uiTimerOneP5s^(0+128),f
  1410  02FF  1903               	skipnz
  1411  0300  0AA5               	incf	(main@uiTimerOneP5s+1)^(0+128),f
  1412  0301                     l4366:	
  1413                           
  1414                           ;main.c: 714: uiTimerTwoP5s = 0;
  1415  0301  01A8               	clrf	main@uiTimerTwoP5s^(0+128)
  1416  0302  01A9               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1417                           
  1418                           ;main.c: 715: uiTimerThreeP5s = 0;
  1419  0303  01A6               	clrf	main@uiTimerThreeP5s^(0+128)
  1420  0304  01A7               	clrf	(main@uiTimerThreeP5s+1)^(0+128)
  1421                           
  1422                           ;main.c: 716: }
  1423  0305  2B08               	goto	l4372
  1424  0306                     l4370:	
  1425                           
  1426                           ;main.c: 717: else
  1427                           ;main.c: 718: {
  1428                           ;main.c: 719: uiTimerOneP5s = 0;
  1429  0306  01A4               	clrf	main@uiTimerOneP5s^(0+128)
  1430  0307  01A5               	clrf	(main@uiTimerOneP5s+1)^(0+128)
  1431  0308                     l4372:	
  1432                           
  1433                           ;main.c: 720: }
  1434                           ;main.c: 723: if(uiTimerOneP5s > 1)
  1435  0308  3000               	movlw	0
  1436  0309  0225               	subwf	(main@uiTimerOneP5s+1)^(0+128),w
  1437  030A  3002               	movlw	2
  1438  030B  1903               	skipnz
  1439  030C  0224               	subwf	main@uiTimerOneP5s^(0+128),w
  1440                           
  1441                           ;main.c: 724: {
  1442                           ;main.c: 725: setPB3(0);
  1443  030D  3000               	movlw	0
  1444  030E  1C03               	skipc
  1445  030F  2B21               	goto	L9
  1446  0310  118A  250C  118A   	fcall	_setPB3
  1447                           
  1448                           ;main.c: 726: setPB4(1);
  1449  0313  3001               	movlw	1
  1450  0314  118A  2515  118A   	fcall	_setPB4
  1451                           
  1452                           ;main.c: 727: setPB5(0);
  1453  0317  3000               	movlw	0
  1454  0318  118A  251D  118A   	fcall	_setPB5
  1455                           
  1456                           ;main.c: 729: uiTimerOneP5s = 0;
  1457  031B  1683               	bsf	3,5	;RP0=1, select bank1
  1458  031C  01A4               	clrf	main@uiTimerOneP5s^(0+128)
  1459  031D  01A5               	clrf	(main@uiTimerOneP5s+1)^(0+128)
  1460                           
  1461                           ;main.c: 730: uiTimerTwoP5s = 0;
  1462  031E  01A8               	clrf	main@uiTimerTwoP5s^(0+128)
  1463  031F  01A9               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1464                           
  1465                           ;main.c: 731: }
  1466  0320  2A3A               	goto	l4272
  1467  0321                     L9:	
  1468                           ;main.c: 732: else
  1469                           ;main.c: 733: {
  1470                           ;main.c: 734: if( uiCh13Value < 75 )
  1471                           
  1472  0321  025C               	subwf	(main@uiCh13Value+1)^(0+128),w
  1473  0322  304B               	movlw	75
  1474  0323  1903               	skipnz
  1475  0324  025B               	subwf	main@uiCh13Value^(0+128),w
  1476  0325  1803               	skipnc
  1477  0326  2B32               	goto	l4386
  1478                           
  1479                           ;main.c: 735: {
  1480                           ;main.c: 736: if( uiTimerTwoP5s <= 1)
  1481  0327  3000               	movlw	0
  1482  0328  0229               	subwf	(main@uiTimerTwoP5s+1)^(0+128),w
  1483  0329  3002               	movlw	2
  1484  032A  1903               	skipnz
  1485  032B  0228               	subwf	main@uiTimerTwoP5s^(0+128),w
  1486  032C  1803               	skipnc
  1487  032D  2B36               	goto	l4388
  1488                           
  1489                           ;main.c: 737: uiTimerTwoP5s++;
  1490  032E  0AA8               	incf	main@uiTimerTwoP5s^(0+128),f
  1491  032F  1903               	skipnz
  1492  0330  0AA9               	incf	(main@uiTimerTwoP5s+1)^(0+128),f
  1493  0331  2B36               	goto	l4388
  1494  0332                     l4386:	
  1495                           
  1496                           ;main.c: 739: else
  1497                           ;main.c: 740: {
  1498                           ;main.c: 741: uiTimerTwoP5s = 0;
  1499  0332  01A8               	clrf	main@uiTimerTwoP5s^(0+128)
  1500  0333  01A9               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1501                           
  1502                           ;main.c: 742: uiTimerThreeP5s = 0;
  1503  0334  01A6               	clrf	main@uiTimerThreeP5s^(0+128)
  1504  0335  01A7               	clrf	(main@uiTimerThreeP5s+1)^(0+128)
  1505  0336                     l4388:	
  1506                           
  1507                           ;main.c: 743: }
  1508                           ;main.c: 745: if(uiTimerTwoP5s > 1)
  1509  0336  3000               	movlw	0
  1510  0337  0229               	subwf	(main@uiTimerTwoP5s+1)^(0+128),w
  1511  0338  3002               	movlw	2
  1512  0339  1903               	skipnz
  1513  033A  0228               	subwf	main@uiTimerTwoP5s^(0+128),w
  1514  033B  1C03               	skipc
  1515  033C  2A3A               	goto	l4272
  1516                           
  1517                           ;main.c: 746: {
  1518                           ;main.c: 747: setPB3(1);
  1519  033D  3001               	movlw	1
  1520  033E  118A  250C  118A   	fcall	_setPB3
  1521                           
  1522                           ;main.c: 748: setPB4(0);
  1523  0341  3000               	movlw	0
  1524  0342  118A  2515  118A   	fcall	_setPB4
  1525                           
  1526                           ;main.c: 749: setPB5(1);
  1527  0345  3001               	movlw	1
  1528  0346  118A  251D  118A   	fcall	_setPB5
  1529                           
  1530                           ;main.c: 751: if(uiCh13Value < 25)
  1531  0349  3000               	movlw	0
  1532  034A  1683               	bsf	3,5	;RP0=1, select bank1
  1533  034B  025C               	subwf	(main@uiCh13Value+1)^(0+128),w
  1534  034C  3019               	movlw	25
  1535  034D  1903               	skipnz
  1536  034E  025B               	subwf	main@uiCh13Value^(0+128),w
  1537  034F  1803               	skipnc
  1538  0350  2B55               	goto	l4396
  1539                           
  1540                           ;main.c: 752: uiTimerThreeP5s++;
  1541  0351  0AA6               	incf	main@uiTimerThreeP5s^(0+128),f
  1542  0352  1903               	skipnz
  1543  0353  0AA7               	incf	(main@uiTimerThreeP5s+1)^(0+128),f
  1544  0354  2B57               	goto	l4398
  1545  0355                     l4396:	
  1546                           
  1547                           ;main.c: 753: else
  1548                           ;main.c: 754: uiTimerThreeP5s = 0;
  1549  0355  01A6               	clrf	main@uiTimerThreeP5s^(0+128)
  1550  0356  01A7               	clrf	(main@uiTimerThreeP5s+1)^(0+128)
  1551  0357                     l4398:	
  1552                           
  1553                           ;main.c: 756: if(uiTimerThreeP5s > 5)
  1554  0357  3000               	movlw	0
  1555  0358  0227               	subwf	(main@uiTimerThreeP5s+1)^(0+128),w
  1556  0359  3006               	movlw	6
  1557  035A  1903               	skipnz
  1558  035B  0226               	subwf	main@uiTimerThreeP5s^(0+128),w
  1559  035C  1C03               	skipc
  1560  035D  2A3A               	goto	l4272
  1561  035E                     l4400:	
  1562                           
  1563                           ;main.c: 757: reset();
  1564  035E  118A  25E6  118A   	fcall	_reset
  1565  0361  2A3A               	goto	l4272
  1566  0362                     l4402:	
  1567                           
  1568                           ;main.c: 766: {
  1569                           ;main.c: 767: setPB3(0);
  1570  0362  3000               	movlw	0
  1571  0363  118A  250C  118A   	fcall	_setPB3
  1572                           
  1573                           ;main.c: 768: setPB4(0);
  1574  0366  3000               	movlw	0
  1575  0367  118A  2515  118A   	fcall	_setPB4
  1576                           
  1577                           ;main.c: 769: setPB5(1);
  1578  036A  3001               	movlw	1
  1579  036B  118A  251D  118A   	fcall	_setPB5
  1580                           
  1581                           ;main.c: 772: setWaitResetFlag(1);
  1582  036E  3001               	movlw	1
  1583  036F  118A  25DE  118A   	fcall	_setWaitResetFlag
  1584                           
  1585                           ;main.c: 778: ucStep = DELAY_ONE_SECOND_FOR_PWM;
  1586  0372  3064               	movlw	100
  1587  0373  2B9D               	goto	L8
  1588  0374                     l4406:	
  1589                           ;main.c: 779: break;
  1590                           
  1591                           
  1592                           ;main.c: 783: {
  1593                           ;main.c: 784: static unsigned ucDelay1s = 0;
  1594                           ;main.c: 785: if(ucDelay1s <= 5)
  1595  0374  3000               	movlw	0
  1596  0375  1683               	bsf	3,5	;RP0=1, select bank1
  1597  0376  0223               	subwf	(main@ucDelay1s+1)^(0+128),w
  1598  0377  3006               	movlw	6
  1599  0378  1903               	skipnz
  1600  0379  0222               	subwf	main@ucDelay1s^(0+128),w
  1601  037A  1803               	skipnc
  1602  037B  2B80               	goto	l4410
  1603                           
  1604                           ;main.c: 786: ucDelay1s++;
  1605  037C  0AA2               	incf	main@ucDelay1s^(0+128),f
  1606  037D  1903               	skipnz
  1607  037E  0AA3               	incf	(main@ucDelay1s+1)^(0+128),f
  1608  037F  2A3A               	goto	l4272
  1609  0380                     l4410:	
  1610  0380  3065               	movlw	101
  1611                           
  1612                           ;main.c: 787: else
  1613                           ;main.c: 788: {
  1614                           ;main.c: 789: ucDelay1s = 0;
  1615  0381  01A2               	clrf	main@ucDelay1s^(0+128)
  1616  0382  01A3               	clrf	(main@ucDelay1s+1)^(0+128)
  1617                           
  1618                           ;main.c: 790: ucStep = MEET_RESET_CONDITION_STEP;
  1619  0383  1283               	bcf	3,5	;RP0=0, select bank0
  1620  0384  2B9D               	goto	L8
  1621  0385                     l4414:	
  1622                           
  1623                           ;main.c: 800: {
  1624                           ;main.c: 801: static unsigned char ucTimerP5s = 0;
  1625                           ;main.c: 802: unsigned int ucChValue = getAdOriginalCh13Value();
  1626  0385  118A  23C6  118A   	fcall	_getAdOriginalCh13Value
  1627  0388  0858               	movf	(?_getAdOriginalCh13Value+1)^(0+128),w
  1628  0389  00DA               	movwf	(main@ucChValue+1)^(0+128)
  1629  038A  0857               	movf	?_getAdOriginalCh13Value^(0+128),w
  1630  038B  00D9               	movwf	main@ucChValue^(0+128)
  1631                           
  1632                           ;main.c: 804: if( ucChValue > 50 )
  1633  038C  3000               	movlw	0
  1634  038D  025A               	subwf	(main@ucChValue+1)^(0+128),w
  1635  038E  3033               	movlw	51
  1636  038F  1903               	skipnz
  1637  0390  0259               	subwf	main@ucChValue^(0+128),w
  1638  0391  1C03               	skipc
  1639  0392  2B96               	goto	l4420
  1640                           
  1641                           ;main.c: 805: ucTimerP5s++;
  1642  0393  1283               	bcf	3,5	;RP0=0, select bank0
  1643  0394  0AB6               	incf	main@cTimerP5s_787,f
  1644  0395  2B98               	goto	l4422
  1645  0396                     l4420:	
  1646                           
  1647                           ;main.c: 806: else
  1648                           ;main.c: 807: ucTimerP5s = 0;
  1649  0396  1283               	bcf	3,5	;RP0=0, select bank0
  1650  0397  01B6               	clrf	main@cTimerP5s_787
  1651  0398                     l4422:	
  1652                           
  1653                           ;main.c: 809: if(ucTimerP5s >= 5)
  1654  0398  3005               	movlw	5
  1655  0399  0236               	subwf	main@cTimerP5s_787,w
  1656  039A  1C03               	skipc
  1657  039B  2A3A               	goto	l4272
  1658                           
  1659                           ;main.c: 810: ucStep = RESET_STEP;
  1660  039C  3066               	movlw	102
  1661  039D                     L8:	
  1662  039D  00B7               	movwf	main@ucStep
  1663  039E  2A3A               	goto	l4272
  1664  039F                     l4426:	
  1665                           
  1666                           ;main.c: 815: {
  1667                           ;main.c: 816: ucStep = INIT_STEP;
  1668  039F  01B7               	clrf	main@ucStep
  1669  03A0  2B5E               	goto	l4400
  1670  03A1                     l4432:	
  1671  03A1  0837               	movf	main@ucStep,w
  1672                           
  1673                           ; Switch size 1, requested type "space"
  1674                           ; Number of cases is 11, Range of values is 0 to 102
  1675                           ; switch strategies available:
  1676                           ; Name         Instructions Cycles
  1677                           ; simple_byte           34    18 (average)
  1678                           ; direct_byte          213     7 (fixed)
  1679                           ; jumptable            260     6 (fixed)
  1680                           ; rangetable           107     6 (fixed)
  1681                           ; spacedrange          212     9 (fixed)
  1682                           ; locatedrange         103     3 (fixed)
  1683                           ;	Chosen strategy is simple_byte
  1684  03A2  3A00               	xorlw	0	; case 0
  1685  03A3  1903               	skipnz
  1686  03A4  2A48               	goto	l4280
  1687  03A5  3A01               	xorlw	1	; case 1
  1688  03A6  1903               	skipnz
  1689  03A7  2A69               	goto	l4298
  1690  03A8  3A03               	xorlw	3	; case 2
  1691  03A9  1903               	skipnz
  1692  03AA  2A86               	goto	l4306
  1693  03AB  3A01               	xorlw	1	; case 3
  1694  03AC  1903               	skipnz
  1695  03AD  2AA4               	goto	l4322
  1696  03AE  3A07               	xorlw	7	; case 4
  1697  03AF  1903               	skipnz
  1698  03B0  2AAF               	goto	l4326
  1699  03B1  3A01               	xorlw	1	; case 5
  1700  03B2  1903               	skipnz
  1701  03B3  2ACB               	goto	l4342
  1702  03B4  3A03               	xorlw	3	; case 6
  1703  03B5  1903               	skipnz
  1704  03B6  2AE2               	goto	l4354
  1705  03B7  3A65               	xorlw	101	; case 99
  1706  03B8  1903               	skipnz
  1707  03B9  2B62               	goto	l4402
  1708  03BA  3A07               	xorlw	7	; case 100
  1709  03BB  1903               	skipnz
  1710  03BC  2B74               	goto	l4406
  1711  03BD  3A01               	xorlw	1	; case 101
  1712  03BE  1903               	skipnz
  1713  03BF  2B85               	goto	l4414
  1714  03C0  3A03               	xorlw	3	; case 102
  1715  03C1  1903               	skipnz
  1716  03C2  2B9F               	goto	l4426
  1717  03C3  2A68               	goto	l737
  1718  03C4  118A  2811         	ljmp	start
  1719  03C6                     __end_of_main:	
  1720                           
  1721                           	psect	text1214
  1722  03C6                     __ptext1214:	
  1723 ;; =============== function _main ends ============
  1724                           
  1725                           
  1726 ;; *************** function _getAdOriginalCh13Value *****************
  1727 ;; Defined at:
  1728 ;;		line 362 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;		None
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;		None
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  2   15[BANK1 ] unsigned int 
  1735 ;; Registers used:
  1736 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1737 ;; Tracked objects:
  1738 ;;		On entry : 60/0
  1739 ;;		On exit  : 60/20
  1740 ;;		Unchanged: FFE00/0
  1741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1742 ;;      Params:         0       0       2       0       0
  1743 ;;      Locals:         0       0       0       0       0
  1744 ;;      Temps:          0       0       0       0       0
  1745 ;;      Totals:         0       0       2       0       0
  1746 ;;Total ram usage:        2 bytes
  1747 ;; Hardware stack levels used:    1
  1748 ;; Hardware stack levels required when called:    4
  1749 ;; This function calls:
  1750 ;;		_FilterCh13
  1751 ;; This function is called by:
  1752 ;;		_main
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755  03C6                     _getAdOriginalCh13Value:	
  1756                           
  1757                           ;common.c: 364: return FilterCh13(uiSampleCh13);
  1758                           
  1759                           ; Regs used in _getAdOriginalCh13Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  1760  03C6  30AC               	movlw	_uiSampleCh13& (0+255)
  1761  03C7  23D0               	fcall	_FilterCh13
  1762  03C8  0853               	movf	?_FilterCh13+1,w
  1763  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  1764  03CA  00D8               	movwf	(?_getAdOriginalCh13Value+1)^(0+128)
  1765  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  1766  03CC  0852               	movf	?_FilterCh13,w
  1767  03CD  1683               	bsf	3,5	;RP0=1, select bank1
  1768  03CE  00D7               	movwf	?_getAdOriginalCh13Value^(0+128)
  1769  03CF  0008               	return
  1770  03D0                     __end_of_getAdOriginalCh13Value:	
  1771  03D0                     __ptext1221:	
  1772 ;; =============== function _getAD_ConvertFlag ends ============
  1773                           
  1774                           
  1775 ;; *************** function _FilterCh13 *****************
  1776 ;; Defined at:
  1777 ;;		line 75 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;  tmpValue        1    wreg     PTR int 
  1780 ;;		 -> uiSampleCh13(16), 
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;  tmpValue        1    0[BANK1 ] PTR int 
  1783 ;;		 -> uiSampleCh13(16), 
  1784 ;;  cir             2   11[BANK1 ] int 
  1785 ;;  filter_buf      6    5[BANK1 ] unsigned int [3]
  1786 ;;  filter_sum      2    3[BANK1 ] unsigned int 
  1787 ;;  filter_temp     2    1[BANK1 ] unsigned int 
  1788 ;;  i               1   14[BANK1 ] unsigned char 
  1789 ;;  j               1   13[BANK1 ] unsigned char 
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  2   21[BANK0 ] unsigned int 
  1792 ;; Registers used:
  1793 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1794 ;; Tracked objects:
  1795 ;;		On entry : 60/0
  1796 ;;		On exit  : 60/0
  1797 ;;		Unchanged: FFE00/0
  1798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1799 ;;      Params:         0       2       0       0       0
  1800 ;;      Locals:         0       0      15       0       0
  1801 ;;      Temps:          0       4       0       0       0
  1802 ;;      Totals:         0       6      15       0       0
  1803 ;;Total ram usage:       21 bytes
  1804 ;; Hardware stack levels used:    1
  1805 ;; Hardware stack levels required when called:    3
  1806 ;; This function calls:
  1807 ;;		Nothing
  1808 ;; This function is called by:
  1809 ;;		_getAdOriginalCh13Value
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812  03D0                     _FilterCh13:	
  1813                           
  1814                           ; Regs used in _FilterCh13: [wreg-fsr0h+status,2+status,0+btemp+1]
  1815                           ;FilterCh13@tmpValue stored from wreg
  1816  03D0  1683               	bsf	3,5	;RP0=1, select bank1
  1817  03D1  00C8               	movwf	FilterCh13@tmpValue^(0+128)
  1818  03D2  01D5               	clrf	FilterCh13@j^(0+128)
  1819                           
  1820                           ;common.c: 78: unsigned int filter_temp = 0, filter_sum = 0;
  1821  03D3  01C9               	clrf	FilterCh13@filter_temp^(0+128)
  1822  03D4  01CA               	clrf	(FilterCh13@filter_temp+1)^(0+128)
  1823  03D5  01CB               	clrf	FilterCh13@filter_sum^(0+128)
  1824  03D6  01CC               	clrf	(FilterCh13@filter_sum+1)^(0+128)
  1825                           
  1826                           ;common.c: 80: unsigned int filter_buf[3];
  1827                           ;common.c: 82: for(int cir = 0;cir < 3; cir++)
  1828  03D7  01D3               	clrf	FilterCh13@cir^(0+128)
  1829  03D8  01D4               	clrf	(FilterCh13@cir+1)^(0+128)
  1830  03D9                     l4170:	
  1831                           
  1832                           ;common.c: 83: filter_buf[cir] = *tmpValue++;
  1833  03D9  1683               	bsf	3,5	;RP0=1, select bank1
  1834  03DA  1303               	bcf	3,6	;RP1=0, select bank1
  1835  03DB  0848               	movf	FilterCh13@tmpValue^(0+128),w
  1836  03DC  0084               	movwf	4
  1837  03DD  1383               	bcf	3,7	;select IRP bank0
  1838  03DE  2467  118A         	fcall	PL3	;call to abstracted procedure
  1839  03E0  1683               	bsf	3,5	;RP0=1, select bank1
  1840  03E1  1003               	clrc
  1841  03E2  0D53               	rlf	FilterCh13@cir^(0+128),w
  1842  03E3  246E  118A         	fcall	PL5	;call to abstracted procedure
  1843  03E5  0AC8               	incf	FilterCh13@tmpValue^(0+128),f
  1844  03E6  0AC8               	incf	FilterCh13@tmpValue^(0+128),f
  1845  03E7  0AD3               	incf	FilterCh13@cir^(0+128),f
  1846  03E8  1903               	skipnz
  1847  03E9  0AD4               	incf	(FilterCh13@cir+1)^(0+128),f
  1848  03EA  0854               	movf	(FilterCh13@cir+1)^(0+128),w
  1849  03EB  3A80               	xorlw	128
  1850  03EC  00FF               	movwf	127
  1851  03ED  3080               	movlw	128
  1852  03EE  027F               	subwf	127,w
  1853  03EF  1D03               	skipz
  1854  03F0  2BF3               	goto	u1975
  1855  03F1  3003               	movlw	3
  1856  03F2  0253               	subwf	FilterCh13@cir^(0+128),w
  1857  03F3                     u1975:	
  1858  03F3  1C03               	skipc
  1859  03F4  2BD9               	goto	l4170
  1860                           
  1861                           ;common.c: 87: for(j = 0; j < 3 - 1; j++)
  1862  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  1863  03F6  1303               	bcf	3,6	;RP1=0, select bank1
  1864  03F7  01D5               	clrf	FilterCh13@j^(0+128)
  1865  03F8                     l4184:	
  1866                           
  1867                           ;common.c: 88: {
  1868                           ;common.c: 89: for(i = 0; i < 3 - 1 - j; i++)
  1869  03F8  01D6               	clrf	FilterCh13@i^(0+128)
  1870  03F9                     l4192:	
  1871  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  1872  03FA  01D5               	clrf	??_FilterCh13+1
  1873  03FB  1683               	bsf	3,5	;RP0=1, select bank1
  1874  03FC  0855               	movf	FilterCh13@j^(0+128),w
  1875  03FD  3C02               	sublw	2
  1876  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  1877  03FF  00D4               	movwf	??_FilterCh13
  1878  0400  1C03               	skipc
  1879  0401  03D5               	decf	??_FilterCh13+1,f
  1880  0402  0855               	movf	??_FilterCh13+1,w
  1881  0403  3A80               	xorlw	128
  1882  0404  3C80               	sublw	128
  1883  0405  1D03               	skipz
  1884  0406  2C0A               	goto	u1995
  1885  0407  0854               	movf	??_FilterCh13,w
  1886  0408  1683               	bsf	3,5	;RP0=1, select bank1
  1887  0409  0256               	subwf	FilterCh13@i^(0+128),w
  1888  040A                     u1995:	
  1889  040A  1803               	btfsc	3,0
  1890  040B  2C41               	goto	l4194
  1891                           
  1892                           ;common.c: 90: {
  1893                           ;common.c: 91: if(filter_buf[i] > filter_buf[i + 1])
  1894  040C  1683               	bsf	3,5	;RP0=1, select bank1
  1895  040D  1303               	bcf	3,6	;RP1=0, select bank1
  1896  040E  1003               	clrc
  1897  040F  0D56               	rlf	FilterCh13@i^(0+128),w
  1898  0410  3ECD               	addlw	FilterCh13@filter_buf& (0+255)
  1899  0411  0084               	movwf	4
  1900  0412  1383               	bcf	3,7	;select IRP bank1
  1901  0413  2467  118A         	fcall	PL3	;call to abstracted procedure
  1902  0415  1683               	bsf	3,5	;RP0=1, select bank1
  1903  0416  2478  118A         	fcall	PL7	;call to abstracted procedure
  1904  0418  0800               	movf	0,w
  1905  0419  1283               	bcf	3,5	;RP0=0, select bank0
  1906  041A  00D6               	movwf	??_FilterCh13+2
  1907  041B  0A84               	incf	4,f
  1908  041C  0800               	movf	0,w
  1909  041D  00D7               	movwf	??_FilterCh13+3
  1910  041E  0855               	movf	??_FilterCh13+1,w
  1911  041F  0257               	subwf	??_FilterCh13+3,w
  1912  0420  1D03               	skipz
  1913  0421  2C24               	goto	u1985
  1914  0422  0854               	movf	??_FilterCh13,w
  1915  0423  0256               	subwf	??_FilterCh13+2,w
  1916  0424                     u1985:	
  1917  0424  1803               	skipnc
  1918  0425  2C3E               	goto	l4190
  1919                           
  1920                           ;common.c: 92: {
  1921                           ;common.c: 94: filter_temp = filter_buf[i];
  1922  0426  1683               	bsf	3,5	;RP0=1, select bank1
  1923  0427  247E  118A         	fcall	PL9	;call to abstracted procedure
  1924  0429  0800               	movf	0,w
  1925  042A  00C9               	movwf	FilterCh13@filter_temp^(0+128)
  1926  042B  0A84               	incf	4,f
  1927  042C  0800               	movf	0,w
  1928  042D  00CA               	movwf	(FilterCh13@filter_temp+1)^(0+128)
  1929                           
  1930                           ;common.c: 96: filter_buf[i] = filter_buf[i + 1];
  1931  042E  2478  118A         	fcall	PL7	;call to abstracted procedure
  1932  0430  2467  118A         	fcall	PL3	;call to abstracted procedure
  1933  0432  1683               	bsf	3,5	;RP0=1, select bank1
  1934  0433  1003               	clrc
  1935  0434  0D56               	rlf	FilterCh13@i^(0+128),w
  1936                           
  1937                           ;common.c: 98: filter_buf[i + 1] = filter_temp;
  1938  0435  246E  118A         	fcall	PL5	;call to abstracted procedure
  1939  0437  2478  118A         	fcall	PL7	;call to abstracted procedure
  1940  0439  0849               	movf	FilterCh13@filter_temp^(0+128),w
  1941  043A  0080               	movwf	0
  1942  043B  0A84               	incf	4,f
  1943  043C  084A               	movf	(FilterCh13@filter_temp+1)^(0+128),w
  1944  043D  0080               	movwf	0
  1945  043E                     l4190:	
  1946  043E  1683               	bsf	3,5	;RP0=1, select bank1
  1947  043F  0AD6               	incf	FilterCh13@i^(0+128),f
  1948  0440  2BF9               	goto	l4192
  1949  0441                     l4194:	
  1950  0441  1683               	bsf	3,5	;RP0=1, select bank1
  1951  0442  3002               	movlw	2
  1952  0443  1303               	bcf	3,6	;RP1=0, select bank1
  1953  0444  0AD5               	incf	FilterCh13@j^(0+128),f
  1954  0445  0255               	subwf	FilterCh13@j^(0+128),w
  1955  0446  1803               	btfsc	3,0
  1956  0447  2C59               	goto	l4208
  1957  0448  2BF8               	goto	l4184
  1958  0449                     l4202:	
  1959                           
  1960                           ;common.c: 104: {
  1961                           ;common.c: 105: filter_sum += filter_buf[i];
  1962  0449  247E  118A         	fcall	PL9	;call to abstracted procedure
  1963  044B  2467  118A         	fcall	PL3	;call to abstracted procedure
  1964  044D  0854               	movf	??_FilterCh13,w
  1965  044E  1683               	bsf	3,5	;RP0=1, select bank1
  1966  044F  07CB               	addwf	FilterCh13@filter_sum^(0+128),f
  1967  0450  1803               	skipnc
  1968  0451  0ACC               	incf	(FilterCh13@filter_sum+1)^(0+128),f
  1969  0452  1283               	bcf	3,5	;RP0=0, select bank0
  1970  0453  0855               	movf	??_FilterCh13+1,w
  1971  0454  1683               	bsf	3,5	;RP0=1, select bank1
  1972  0455  07CC               	addwf	(FilterCh13@filter_sum+1)^(0+128),f
  1973  0456  0AD6               	incf	FilterCh13@i^(0+128),f
  1974  0457  1903               	btfsc	3,2
  1975  0458  2C49               	goto	l4202
  1976  0459                     l4208:	
  1977                           
  1978                           ;common.c: 106: }
  1979                           ;common.c: 109: return (filter_sum >> 2 );
  1980  0459  084C               	movf	(FilterCh13@filter_sum+1)^(0+128),w
  1981  045A  1283               	bcf	3,5	;RP0=0, select bank0
  1982  045B  00D3               	movwf	?_FilterCh13+1
  1983  045C  1683               	bsf	3,5	;RP0=1, select bank1
  1984  045D  084B               	movf	FilterCh13@filter_sum^(0+128),w
  1985  045E  1283               	bcf	3,5	;RP0=0, select bank0
  1986  045F  00D2               	movwf	?_FilterCh13
  1987  0460  1003               	clrc
  1988  0461  0CD3               	rrf	?_FilterCh13+1,f
  1989  0462  0CD2               	rrf	?_FilterCh13,f
  1990  0463  1003               	clrc
  1991  0464  0CD3               	rrf	?_FilterCh13+1,f
  1992  0465  0CD2               	rrf	?_FilterCh13,f
  1993  0466  0008               	return
  1994  0467                     __end_of_FilterCh13:	
  1995  0467                     PL3:	
  1996  0467  0800               	movf	0,w
  1997  0468  1283               	bcf	3,5	;RP0=0, select bank0
  1998  0469  00D4               	movwf	??_FilterCh13
  1999  046A  0A84               	incf	4,f
  2000  046B  0800               	movf	0,w
  2001  046C  00D5               	movwf	??_FilterCh13+1
  2002  046D  0008               	return
  2003  046E                     PL5:	
  2004  046E  3ECD               	addlw	FilterCh13@filter_buf& (0+255)
  2005  046F  0084               	movwf	4
  2006  0470  1283               	bcf	3,5	;RP0=0, select bank0
  2007  0471  0854               	movf	??_FilterCh13,w
  2008  0472  0080               	movwf	0
  2009  0473  0A84               	incf	4,f
  2010  0474  0855               	movf	??_FilterCh13+1,w
  2011  0475  0080               	movwf	0
  2012  0476  1683               	bsf	3,5	;RP0=1, select bank1
  2013  0477  0008               	return
  2014  0478                     PL7:	
  2015  0478  1003               	clrc
  2016  0479  0D56               	rlf	FilterCh13@i^(0+128),w
  2017  047A  3E02               	addlw	2
  2018  047B  3ECD               	addlw	FilterCh13@filter_buf& (0+255)
  2019  047C  0084               	movwf	4
  2020  047D  0008               	return
  2021  047E                     PL9:	
  2022  047E  1003               	clrc
  2023  047F  0D56               	rlf	FilterCh13@i^(0+128),w
  2024  0480  3ECD               	addlw	FilterCh13@filter_buf& (0+255)
  2025  0481  0084               	movwf	4
  2026  0482  0008               	return
  2027                           
  2028                           	psect	text1215
  2029  0483                     __ptext1215:	
  2030 ;; =============== function _getAdOriginalCh13Value ends ============
  2031                           
  2032                           
  2033 ;; *************** function _process_AD_Converter_Value *****************
  2034 ;; Defined at:
  2035 ;;		line 384 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;		None
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;		None
  2040 ;; Return value:  Size  Location     Type
  2041 ;;		None               void
  2042 ;; Registers used:
  2043 ;;		wreg, status,2, status,0, pclath, cstack
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 60/0
  2047 ;;		Unchanged: FFF9F/0
  2048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2049 ;;      Params:         0       0       0       0       0
  2050 ;;      Locals:         0       0       0       0       0
  2051 ;;      Temps:          0       0       0       0       0
  2052 ;;      Totals:         0       0       0       0       0
  2053 ;;Total ram usage:        0 bytes
  2054 ;; Hardware stack levels used:    1
  2055 ;; Hardware stack levels required when called:    4
  2056 ;; This function calls:
  2057 ;;		_getAD_ConvertFlag
  2058 ;;		_setAD_ConvertFlag
  2059 ;;		_AD_Sample
  2060 ;;		_adc_test_init
  2061 ;;		_adc_start
  2062 ;; This function is called by:
  2063 ;;		_main
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066  0483                     _process_AD_Converter_Value:	
  2067                           
  2068                           ;common.c: 385: if(getAD_ConvertFlag())
  2069                           
  2070                           ; Regs used in _process_AD_Converter_Value: [wreg+status,2+status,0+pclath+cstack]
  2071  0483  2499  118A         	fcall	_getAD_ConvertFlag
  2072  0485  3A00               	xorlw	0
  2073  0486  1903               	skipnz
  2074  0487  0008               	return
  2075                           
  2076                           ;common.c: 386: {
  2077                           ;common.c: 387: setAD_ConvertFlag(0);
  2078  0488  3000               	movlw	0
  2079  0489  249D  118A         	fcall	_setAD_ConvertFlag
  2080                           
  2081                           ;common.c: 388: AD_Sample();
  2082  048B  24A0  118A         	fcall	_AD_Sample
  2083                           
  2084                           ;common.c: 389: if(12 == sampleChannelSelect)
  2085  048D  0859               	movf	_sampleChannelSelect,w
  2086  048E  3A0C               	xorlw	12
  2087                           
  2088                           ;common.c: 390: adc_test_init(12,3);
  2089  048F  3003               	movlw	3
  2090  0490  00D2               	movwf	?_adc_test_init
  2091  0491  1D03               	skipz
  2092  0492  2C95               	goto	L11
  2093  0493  300C               	movlw	12
  2094  0494  2C96               	goto	L10
  2095  0495                     L11:	
  2096                           ;common.c: 391: else
  2097                           ;common.c: 392: adc_test_init(13,3);
  2098                           
  2099  0495  300D               	movlw	13
  2100  0496                     L10:	
  2101  0496  24B4  118A         	fcall	_adc_test_init
  2102                           
  2103                           ;common.c: 393: adc_start();
  2104  0498  2CCF               	ljmp	l4052
  2105  0499                     __end_of_process_AD_Converter_Value:	
  2106  0499                     __ptext1220:	
  2107 ;; =============== function _setAD_ConvertFlag ends ============
  2108                           
  2109                           
  2110 ;; *************** function _getAD_ConvertFlag *****************
  2111 ;; Defined at:
  2112 ;;		line 333 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;		None
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;		None
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  1    wreg      unsigned char 
  2119 ;; Registers used:
  2120 ;;		wreg
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 60/0
  2124 ;;		Unchanged: FFF9F/0
  2125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2126 ;;      Params:         0       0       0       0       0
  2127 ;;      Locals:         0       0       0       0       0
  2128 ;;      Temps:          0       0       0       0       0
  2129 ;;      Totals:         0       0       0       0       0
  2130 ;;Total ram usage:        0 bytes
  2131 ;; Hardware stack levels used:    1
  2132 ;; Hardware stack levels required when called:    3
  2133 ;; This function calls:
  2134 ;;		Nothing
  2135 ;; This function is called by:
  2136 ;;		_process_AD_Converter_Value
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139  0499                     _getAD_ConvertFlag:	
  2140                           
  2141                           ;common.c: 334: return adc_convert_flag;
  2142                           
  2143                           ; Regs used in _getAD_ConvertFlag: [wreg]
  2144  0499  1283               	bcf	3,5	;RP0=0, select bank0
  2145  049A  1303               	bcf	3,6	;RP1=0, select bank0
  2146  049B  082D               	movf	_adc_convert_flag,w
  2147  049C  0008               	return
  2148  049D                     __end_of_getAD_ConvertFlag:	
  2149  049D                     __ptext1219:	
  2150 ;; =============== function _AD_Sample ends ============
  2151                           
  2152                           
  2153 ;; *************** function _setAD_ConvertFlag *****************
  2154 ;; Defined at:
  2155 ;;		line 339 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2156 ;; Parameters:    Size  Location     Type
  2157 ;;  flag            1    wreg     unsigned char 
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;  flag            1   21[BANK0 ] unsigned char 
  2160 ;; Return value:  Size  Location     Type
  2161 ;;		None               void
  2162 ;; Registers used:
  2163 ;;		wreg
  2164 ;; Tracked objects:
  2165 ;;		On entry : 60/0
  2166 ;;		On exit  : 60/0
  2167 ;;		Unchanged: FFF9F/0
  2168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2169 ;;      Params:         0       0       0       0       0
  2170 ;;      Locals:         0       1       0       0       0
  2171 ;;      Temps:          0       0       0       0       0
  2172 ;;      Totals:         0       1       0       0       0
  2173 ;;Total ram usage:        1 bytes
  2174 ;; Hardware stack levels used:    1
  2175 ;; Hardware stack levels required when called:    3
  2176 ;; This function calls:
  2177 ;;		Nothing
  2178 ;; This function is called by:
  2179 ;;		_process_AD_Converter_Value
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182  049D                     _setAD_ConvertFlag:	
  2183                           
  2184                           ; Regs used in _setAD_ConvertFlag: [wreg]
  2185                           ;setAD_ConvertFlag@flag stored from wreg
  2186  049D  00D2               	movwf	setAD_ConvertFlag@flag
  2187                           
  2188                           ;common.c: 340: adc_convert_flag = flag;
  2189  049E  00AD               	movwf	_adc_convert_flag
  2190  049F  0008               	return
  2191  04A0                     __end_of_setAD_ConvertFlag:	
  2192  04A0                     __ptext1218:	
  2193 ;; =============== function _initPin ends ============
  2194                           
  2195                           
  2196 ;; *************** function _AD_Sample *****************
  2197 ;; Defined at:
  2198 ;;		line 407 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2199 ;; Parameters:    Size  Location     Type
  2200 ;;		None
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;		None
  2203 ;; Return value:  Size  Location     Type
  2204 ;;		None               void
  2205 ;; Registers used:
  2206 ;;		wreg, status,2, status,0
  2207 ;; Tracked objects:
  2208 ;;		On entry : 60/0
  2209 ;;		On exit  : 60/0
  2210 ;;		Unchanged: FFF9F/0
  2211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2212 ;;      Params:         0       0       0       0       0
  2213 ;;      Locals:         0       0       0       0       0
  2214 ;;      Temps:          0       0       0       0       0
  2215 ;;      Totals:         0       0       0       0       0
  2216 ;;Total ram usage:        0 bytes
  2217 ;; Hardware stack levels used:    1
  2218 ;; Hardware stack levels required when called:    3
  2219 ;; This function calls:
  2220 ;;		Nothing
  2221 ;; This function is called by:
  2222 ;;		_process_AD_Converter_Value
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225  04A0                     _AD_Sample:	
  2226                           
  2227                           ;common.c: 408: if(sampleTimes < 3)
  2228                           
  2229                           ; Regs used in _AD_Sample: [wreg+status,2+status,0]
  2230  04A0  3003               	movlw	3
  2231  04A1  0233               	subwf	_sampleTimes,w
  2232  04A2  1803               	skipnc
  2233  04A3  0008               	return
  2234  04A4  3003               	movlw	3
  2235                           
  2236                           ;common.c: 409: {
  2237                           ;common.c: 410: sampleTimes++;
  2238  04A5  0AB3               	incf	_sampleTimes,f
  2239                           
  2240                           ;common.c: 412: if(sampleTimes >= 3)
  2241  04A6  0233               	subwf	_sampleTimes,w
  2242  04A7  1C03               	skipc
  2243  04A8  0008               	return
  2244                           
  2245                           ;common.c: 413: {
  2246                           ;common.c: 414: sampleTimes = 0;
  2247  04A9  01B3               	clrf	_sampleTimes
  2248                           
  2249                           ;common.c: 416: if(sampleChannelSelect == 12)
  2250  04AA  0859               	movf	_sampleChannelSelect,w
  2251  04AB  3A0C               	xorlw	12
  2252  04AC  1D03               	skipz
  2253  04AD  2CB1               	goto	l4232
  2254                           
  2255                           ;common.c: 417: {
  2256                           ;common.c: 418: sampleChannelSelect = 13;
  2257  04AE  300D               	movlw	13
  2258  04AF  00D9               	movwf	_sampleChannelSelect
  2259                           
  2260                           ;common.c: 419: }
  2261  04B0  0008               	return
  2262  04B1                     l4232:	
  2263                           
  2264                           ;common.c: 421: else
  2265                           ;common.c: 422: {
  2266                           ;common.c: 423: sampleChannelSelect = 12;
  2267  04B1  300C               	movlw	12
  2268  04B2  00D9               	movwf	_sampleChannelSelect
  2269  04B3  0008               	return
  2270  04B4                     __end_of_AD_Sample:	
  2271  04B4                     __ptext1237:	
  2272 ;; =============== function _startTwentyMinTimer ends ============
  2273                           
  2274                           
  2275 ;; *************** function _adc_test_init *****************
  2276 ;; Defined at:
  2277 ;;		line 85 in file "D:\develop\AK7030-good\AK7030-OTP\periph.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;  channel         1    wreg     unsigned char 
  2280 ;;  ref             1   21[BANK0 ] unsigned char 
  2281 ;; Auto vars:     Size  Location     Type
  2282 ;;  channel         1   23[BANK0 ] unsigned char 
  2283 ;; Return value:  Size  Location     Type
  2284 ;;		None               void
  2285 ;; Registers used:
  2286 ;;		wreg, status,2, status,0
  2287 ;; Tracked objects:
  2288 ;;		On entry : 60/0
  2289 ;;		On exit  : 60/20
  2290 ;;		Unchanged: FFF9F/0
  2291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2292 ;;      Params:         0       1       0       0       0
  2293 ;;      Locals:         0       1       0       0       0
  2294 ;;      Temps:          0       1       0       0       0
  2295 ;;      Totals:         0       3       0       0       0
  2296 ;;Total ram usage:        3 bytes
  2297 ;; Hardware stack levels used:    1
  2298 ;; Hardware stack levels required when called:    3
  2299 ;; This function calls:
  2300 ;;		Nothing
  2301 ;; This function is called by:
  2302 ;;		_main
  2303 ;;		_process_AD_Converter_Value
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306  04B4                     _adc_test_init:	
  2307                           
  2308                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  2309                           ;adc_test_init@channel stored from wreg
  2310  04B4  00D4               	movwf	adc_test_init@channel
  2311                           
  2312                           ;periph.c: 86: ADCON0 = 0x40;
  2313  04B5  3040               	movlw	64
  2314  04B6  009F               	movwf	31	;volatile
  2315                           
  2316                           ;periph.c: 87: ADCON0|=channel<<2;
  2317  04B7  0854               	movf	adc_test_init@channel,w
  2318  04B8  00D3               	movwf	??_adc_test_init
  2319  04B9  1003               	clrc
  2320  04BA  0DD3               	rlf	??_adc_test_init,f
  2321  04BB  1003               	clrc
  2322  04BC  0D53               	rlf	??_adc_test_init,w
  2323  04BD  049F               	iorwf	31,f	;volatile
  2324                           
  2325                           ;periph.c: 88: ADCON1 = 0x35;
  2326  04BE  3035               	movlw	53
  2327  04BF  1683               	bsf	3,5	;RP0=1, select bank1
  2328  04C0  009F               	movwf	31	;volatile
  2329                           
  2330                           ;periph.c: 89: ADCON1|=ref<<6;
  2331  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  2332  04C2  0852               	movf	adc_test_init@ref,w
  2333  04C3  00D3               	movwf	??_adc_test_init
  2334  04C4  0CD3               	rrf	??_adc_test_init,f
  2335  04C5  0CD3               	rrf	??_adc_test_init,f
  2336  04C6  0C53               	rrf	??_adc_test_init,w
  2337  04C7  39C0               	andlw	192
  2338  04C8  1683               	bsf	3,5	;RP0=1, select bank1
  2339  04C9  049F               	iorwf	31,f	;volatile
  2340                           
  2341                           ;periph.c: 90: ADON=1;
  2342  04CA  1283               	bcf	3,5	;RP0=0, select bank0
  2343  04CB  141F               	bsf	31,0
  2344                           
  2345                           ;periph.c: 91: ADIE=1;
  2346  04CC  1683               	bsf	3,5	;RP0=1, select bank1
  2347  04CD  150D               	bsf	13,2
  2348  04CE  0008               	return
  2349  04CF                     __end_of_adc_test_init:	
  2350  04CF                     __ptext1235:	
  2351 ;; =============== function _isPermitSampleTime ends ============
  2352                           
  2353                           
  2354 ;; *************** function _adc_start *****************
  2355 ;; Defined at:
  2356 ;;		line 101 in file "D:\develop\AK7030-good\AK7030-OTP\periph.c"
  2357 ;; Parameters:    Size  Location     Type
  2358 ;;		None
  2359 ;; Auto vars:     Size  Location     Type
  2360 ;;		None
  2361 ;; Return value:  Size  Location     Type
  2362 ;;		None               void
  2363 ;; Registers used:
  2364 ;;		None
  2365 ;; Tracked objects:
  2366 ;;		On entry : 0/0
  2367 ;;		On exit  : 60/0
  2368 ;;		Unchanged: FFF9F/0
  2369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2370 ;;      Params:         0       0       0       0       0
  2371 ;;      Locals:         0       0       0       0       0
  2372 ;;      Temps:          0       0       0       0       0
  2373 ;;      Totals:         0       0       0       0       0
  2374 ;;Total ram usage:        0 bytes
  2375 ;; Hardware stack levels used:    1
  2376 ;; Hardware stack levels required when called:    3
  2377 ;; This function calls:
  2378 ;;		Nothing
  2379 ;; This function is called by:
  2380 ;;		_main
  2381 ;;		_process_AD_Converter_Value
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384  04CF                     _adc_start:	
  2385  04CF                     l4052:	
  2386                           ; Regs used in _adc_start: []
  2387                           
  2388                           
  2389                           ;periph.c: 102: GO=1;
  2390  04CF  1283               	bcf	3,5	;RP0=0, select bank0
  2391  04D0  1303               	bcf	3,6	;RP1=0, select bank0
  2392  04D1  149F               	bsf	31,1
  2393  04D2  0008               	return
  2394  04D3                     __end_of_adc_start:	
  2395                           
  2396                           	psect	text1216
  2397  0504                     __ptext1216:	
  2398 ;; =============== function _process_AD_Converter_Value ends ============
  2399                           
  2400                           
  2401 ;; *************** function _setPinInitVaule *****************
  2402 ;; Defined at:
  2403 ;;		line 272 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2404 ;; Parameters:    Size  Location     Type
  2405 ;;		None
  2406 ;; Auto vars:     Size  Location     Type
  2407 ;;		None
  2408 ;; Return value:  Size  Location     Type
  2409 ;;		None               void
  2410 ;; Registers used:
  2411 ;;		wreg, status,2, status,0, pclath, cstack
  2412 ;; Tracked objects:
  2413 ;;		On entry : 17F/20
  2414 ;;		On exit  : 17F/0
  2415 ;;		Unchanged: FFE80/0
  2416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2417 ;;      Params:         0       0       0       0       0
  2418 ;;      Locals:         0       0       0       0       0
  2419 ;;      Temps:          0       0       0       0       0
  2420 ;;      Totals:         0       0       0       0       0
  2421 ;;Total ram usage:        0 bytes
  2422 ;; Hardware stack levels used:    1
  2423 ;; Hardware stack levels required when called:    4
  2424 ;; This function calls:
  2425 ;;		_setPB3
  2426 ;;		_setPB4
  2427 ;;		_setPB5
  2428 ;; This function is called by:
  2429 ;;		_main
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432  0504                     _setPinInitVaule:	
  2433                           
  2434                           ;main.c: 274: setPB3(1);
  2435                           
  2436                           ; Regs used in _setPinInitVaule: [wreg+status,2+status,0+pclath+cstack]
  2437  0504  3001               	movlw	1
  2438  0505  250C  118A         	fcall	_setPB3
  2439                           
  2440                           ;main.c: 275: setPB4(0);
  2441  0507  3000               	movlw	0
  2442  0508  2515  118A         	fcall	_setPB4
  2443                           
  2444                           ;main.c: 276: setPB5(1);
  2445  050A  3001               	movlw	1
  2446  050B  2D1D               	ljmp	_setPB5
  2447  050C                     __end_of_setPinInitVaule:	
  2448  050C                     __ptext1249:	
  2449 ;; =============== function _initPB4 ends ============
  2450                           
  2451                           
  2452 ;; *************** function _setPB3 *****************
  2453 ;; Defined at:
  2454 ;;		line 133 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;  bValue          1    wreg     unsigned char 
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;  bValue          1   21[BANK0 ] unsigned char 
  2459 ;; Return value:  Size  Location     Type
  2460 ;;		None               void
  2461 ;; Registers used:
  2462 ;;		wreg
  2463 ;; Tracked objects:
  2464 ;;		On entry : 40/0
  2465 ;;		On exit  : 60/0
  2466 ;;		Unchanged: FFF9F/0
  2467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2468 ;;      Params:         0       0       0       0       0
  2469 ;;      Locals:         0       1       0       0       0
  2470 ;;      Temps:          0       0       0       0       0
  2471 ;;      Totals:         0       1       0       0       0
  2472 ;;Total ram usage:        1 bytes
  2473 ;; Hardware stack levels used:    1
  2474 ;; Hardware stack levels required when called:    3
  2475 ;; This function calls:
  2476 ;;		Nothing
  2477 ;; This function is called by:
  2478 ;;		_setPinInitVaule
  2479 ;;		_main
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482  050C                     _setPB3:	
  2483                           
  2484                           ; Regs used in _setPB3: [wreg]
  2485                           ;setPB3@bValue stored from wreg
  2486  050C  1283               	bcf	3,5	;RP0=0, select bank0
  2487  050D  00D2               	movwf	setPB3@bValue
  2488                           
  2489                           ;main.c: 134: if( bValue )
  2490  050E  0852               	movf	setPB3@bValue,w
  2491  050F  1903               	btfsc	3,2
  2492  0510  2D13               	goto	l682
  2493                           
  2494                           ;main.c: 136: PB3 = 1;
  2495  0511  1586               	bsf	6,3
  2496  0512  0008               	return
  2497  0513                     l682:	
  2498                           
  2499                           ;main.c: 140: else
  2500                           ;main.c: 142: PB3= 0;
  2501  0513  1186               	bcf	6,3
  2502  0514  0008               	return
  2503  0515                     __end_of_setPB3:	
  2504  0515                     __ptext1247:	
  2505 ;; =============== function _initPB5 ends ============
  2506                           
  2507                           
  2508 ;; *************** function _setPB4 *****************
  2509 ;; Defined at:
  2510 ;;		line 168 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;  bValue          1    wreg     unsigned char 
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;  bValue          1   21[BANK0 ] unsigned char 
  2515 ;; Return value:  Size  Location     Type
  2516 ;;		None               void
  2517 ;; Registers used:
  2518 ;;		wreg
  2519 ;; Tracked objects:
  2520 ;;		On entry : 60/0
  2521 ;;		On exit  : 60/0
  2522 ;;		Unchanged: FFF9F/0
  2523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2524 ;;      Params:         0       0       0       0       0
  2525 ;;      Locals:         0       1       0       0       0
  2526 ;;      Temps:          0       0       0       0       0
  2527 ;;      Totals:         0       1       0       0       0
  2528 ;;Total ram usage:        1 bytes
  2529 ;; Hardware stack levels used:    1
  2530 ;; Hardware stack levels required when called:    3
  2531 ;; This function calls:
  2532 ;;		Nothing
  2533 ;; This function is called by:
  2534 ;;		_setPinInitVaule
  2535 ;;		_main
  2536 ;; This function uses a non-reentrant model
  2537 ;;
  2538  0515                     _setPB4:	
  2539                           
  2540                           ; Regs used in _setPB4: [wreg]
  2541                           ;setPB4@bValue stored from wreg
  2542  0515  00D2               	movwf	setPB4@bValue
  2543                           
  2544                           ;main.c: 169: if( bValue )
  2545  0516  0852               	movf	setPB4@bValue,w
  2546  0517  1903               	btfsc	3,2
  2547  0518  2D1B               	goto	l692
  2548                           
  2549                           ;main.c: 171: PB4 = 1;
  2550  0519  1606               	bsf	6,4
  2551  051A  0008               	return
  2552  051B                     l692:	
  2553                           
  2554                           ;main.c: 175: else
  2555                           ;main.c: 177: PB4= 0;
  2556  051B  1206               	bcf	6,4
  2557  051C  0008               	return
  2558  051D                     __end_of_setPB4:	
  2559  051D                     __ptext1245:	
  2560 ;; =============== function _initPB2_AsHighResistence ends ============
  2561                           
  2562                           
  2563 ;; *************** function _setPB5 *****************
  2564 ;; Defined at:
  2565 ;;		line 202 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;  bValue          1    wreg     unsigned char 
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;  bValue          1   21[BANK0 ] unsigned char 
  2570 ;; Return value:  Size  Location     Type
  2571 ;;		None               void
  2572 ;; Registers used:
  2573 ;;		wreg
  2574 ;; Tracked objects:
  2575 ;;		On entry : 60/0
  2576 ;;		On exit  : 60/0
  2577 ;;		Unchanged: FFF9F/0
  2578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2579 ;;      Params:         0       0       0       0       0
  2580 ;;      Locals:         0       1       0       0       0
  2581 ;;      Temps:          0       0       0       0       0
  2582 ;;      Totals:         0       1       0       0       0
  2583 ;;Total ram usage:        1 bytes
  2584 ;; Hardware stack levels used:    1
  2585 ;; Hardware stack levels required when called:    3
  2586 ;; This function calls:
  2587 ;;		Nothing
  2588 ;; This function is called by:
  2589 ;;		_setPinInitVaule
  2590 ;;		_main
  2591 ;; This function uses a non-reentrant model
  2592 ;;
  2593  051D                     _setPB5:	
  2594                           
  2595                           ; Regs used in _setPB5: [wreg]
  2596                           ;setPB5@bValue stored from wreg
  2597  051D  00D2               	movwf	setPB5@bValue
  2598                           
  2599                           ;main.c: 203: if( bValue )
  2600  051E  0852               	movf	setPB5@bValue,w
  2601  051F  1903               	btfsc	3,2
  2602  0520  2D23               	goto	l702
  2603                           
  2604                           ;main.c: 205: PB5 = 1;
  2605  0521  1686               	bsf	6,5
  2606  0522  0008               	return
  2607  0523                     l702:	
  2608                           
  2609                           ;main.c: 209: else
  2610                           ;main.c: 211: PB5= 0;
  2611  0523  1286               	bcf	6,5
  2612  0524  0008               	return
  2613  0525                     __end_of_setPB5:	
  2614                           
  2615                           	psect	text1217
  2616  04D3                     __ptext1217:	
  2617 ;; =============== function _setPinInitVaule ends ============
  2618                           
  2619                           
  2620 ;; *************** function _initPin *****************
  2621 ;; Defined at:
  2622 ;;		line 256 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2623 ;; Parameters:    Size  Location     Type
  2624 ;;		None
  2625 ;; Auto vars:     Size  Location     Type
  2626 ;;		None
  2627 ;; Return value:  Size  Location     Type
  2628 ;;		None               void
  2629 ;; Registers used:
  2630 ;;		wreg, status,2, status,0, pclath, cstack
  2631 ;; Tracked objects:
  2632 ;;		On entry : 17F/0
  2633 ;;		On exit  : 17F/20
  2634 ;;		Unchanged: FFE80/0
  2635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2636 ;;      Params:         0       0       0       0       0
  2637 ;;      Locals:         0       0       0       0       0
  2638 ;;      Temps:          0       0       0       0       0
  2639 ;;      Totals:         0       0       0       0       0
  2640 ;;Total ram usage:        0 bytes
  2641 ;; Hardware stack levels used:    1
  2642 ;; Hardware stack levels required when called:    4
  2643 ;; This function calls:
  2644 ;;		_initPB2_AsHighResistence
  2645 ;;		_initPB3
  2646 ;;		_initPB4
  2647 ;;		_initPB5
  2648 ;; This function is called by:
  2649 ;;		_main
  2650 ;; This function uses a non-reentrant model
  2651 ;;
  2652  04D3                     _initPin:	
  2653                           
  2654                           ;main.c: 258: initPB2_AsHighResistence();
  2655                           
  2656                           ; Regs used in _initPin: [wreg+status,2+status,0+pclath+cstack]
  2657  04D3  24E9  118A         	fcall	_initPB2_AsHighResistence
  2658                           
  2659                           ;main.c: 260: initPB3(0);
  2660  04D5  3000               	movlw	0
  2661  04D6  24DD  118A         	fcall	_initPB3
  2662                           
  2663                           ;main.c: 262: initPB4(0);
  2664  04D8  3000               	movlw	0
  2665  04D9  24EE  118A         	fcall	_initPB4
  2666                           
  2667                           ;main.c: 264: initPB5(0);
  2668  04DB  3000               	movlw	0
  2669  04DC  2CF9               	ljmp	_initPB5
  2670  04DD                     __end_of_initPin:	
  2671  04DD                     __ptext1250:	
  2672 ;; =============== function _setPB3 ends ============
  2673                           
  2674                           
  2675 ;; *************** function _initPB3 *****************
  2676 ;; Defined at:
  2677 ;;		line 116 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;  bValue          1    wreg     unsigned char 
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;  bValue          1   21[BANK0 ] unsigned char 
  2682 ;; Return value:  Size  Location     Type
  2683 ;;		None               void
  2684 ;; Registers used:
  2685 ;;		wreg
  2686 ;; Tracked objects:
  2687 ;;		On entry : 17F/60
  2688 ;;		On exit  : 17F/20
  2689 ;;		Unchanged: FFE80/0
  2690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2691 ;;      Params:         0       0       0       0       0
  2692 ;;      Locals:         0       1       0       0       0
  2693 ;;      Temps:          0       0       0       0       0
  2694 ;;      Totals:         0       1       0       0       0
  2695 ;;Total ram usage:        1 bytes
  2696 ;; Hardware stack levels used:    1
  2697 ;; Hardware stack levels required when called:    3
  2698 ;; This function calls:
  2699 ;;		Nothing
  2700 ;; This function is called by:
  2701 ;;		_initPin
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704  04DD                     _initPB3:	
  2705                           
  2706                           ; Regs used in _initPB3: [wreg]
  2707                           ;initPB3@bValue stored from wreg
  2708  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  2709  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  2710  04DF  00D2               	movwf	initPB3@bValue
  2711                           
  2712                           ;main.c: 117: if( bValue )
  2713  04E0  0852               	movf	initPB3@bValue,w
  2714  04E1  1903               	btfsc	3,2
  2715  04E2  2CE6               	goto	l677
  2716                           
  2717                           ;main.c: 119: TRISB3 = 1;
  2718  04E3  1683               	bsf	3,5	;RP0=1, select bank1
  2719  04E4  1586               	bsf	6,3
  2720  04E5  0008               	return
  2721  04E6                     l677:	
  2722                           
  2723                           ;main.c: 123: else
  2724                           ;main.c: 125: TRISB3 = 0;
  2725  04E6  1683               	bsf	3,5	;RP0=1, select bank1
  2726  04E7  1186               	bcf	6,3
  2727  04E8  0008               	return
  2728  04E9                     __end_of_initPB3:	
  2729  04E9                     __ptext1244:	
  2730 ;; =============== function _pwm_start ends ============
  2731                           
  2732                           
  2733 ;; *************** function _initPB2_AsHighResistence *****************
  2734 ;; Defined at:
  2735 ;;		line 219 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;		None
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;		None
  2740 ;; Return value:  Size  Location     Type
  2741 ;;		None               void
  2742 ;; Registers used:
  2743 ;;		None
  2744 ;; Tracked objects:
  2745 ;;		On entry : 17F/0
  2746 ;;		On exit  : 17F/60
  2747 ;;		Unchanged: FFE80/0
  2748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2749 ;;      Params:         0       0       0       0       0
  2750 ;;      Locals:         0       0       0       0       0
  2751 ;;      Temps:          0       0       0       0       0
  2752 ;;      Totals:         0       0       0       0       0
  2753 ;;Total ram usage:        0 bytes
  2754 ;; Hardware stack levels used:    1
  2755 ;; Hardware stack levels required when called:    3
  2756 ;; This function calls:
  2757 ;;		Nothing
  2758 ;; This function is called by:
  2759 ;;		_initPin
  2760 ;; This function uses a non-reentrant model
  2761 ;;
  2762  04E9                     _initPB2_AsHighResistence:	
  2763                           
  2764                           ;main.c: 221: PB2 = 1;
  2765                           
  2766                           ; Regs used in _initPB2_AsHighResistence: []
  2767  04E9  1506               	bsf	6,2
  2768                           
  2769                           ;main.c: 222: PBOD2 = 1;
  2770  04EA  1683               	bsf	3,5	;RP0=1, select bank3
  2771  04EB  1703               	bsf	3,6	;RP1=1, select bank3
  2772  04EC  1508               	bsf	8,2
  2773  04ED  0008               	return
  2774  04EE                     __end_of_initPB2_AsHighResistence:	
  2775  04EE                     __ptext1248:	
  2776 ;; =============== function _setPB4 ends ============
  2777                           
  2778                           
  2779 ;; *************** function _initPB4 *****************
  2780 ;; Defined at:
  2781 ;;		line 151 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;  bValue          1    wreg     unsigned char 
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;  bValue          1   21[BANK0 ] unsigned char 
  2786 ;; Return value:  Size  Location     Type
  2787 ;;		None               void
  2788 ;; Registers used:
  2789 ;;		wreg
  2790 ;; Tracked objects:
  2791 ;;		On entry : 17F/20
  2792 ;;		On exit  : 17F/20
  2793 ;;		Unchanged: FFE80/0
  2794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2795 ;;      Params:         0       0       0       0       0
  2796 ;;      Locals:         0       1       0       0       0
  2797 ;;      Temps:          0       0       0       0       0
  2798 ;;      Totals:         0       1       0       0       0
  2799 ;;Total ram usage:        1 bytes
  2800 ;; Hardware stack levels used:    1
  2801 ;; Hardware stack levels required when called:    3
  2802 ;; This function calls:
  2803 ;;		Nothing
  2804 ;; This function is called by:
  2805 ;;		_initPin
  2806 ;; This function uses a non-reentrant model
  2807 ;;
  2808  04EE                     _initPB4:	
  2809                           
  2810                           ; Regs used in _initPB4: [wreg]
  2811                           ;initPB4@bValue stored from wreg
  2812  04EE  1283               	bcf	3,5	;RP0=0, select bank0
  2813  04EF  00D2               	movwf	initPB4@bValue
  2814                           
  2815                           ;main.c: 152: if( bValue )
  2816  04F0  0852               	movf	initPB4@bValue,w
  2817  04F1  1903               	btfsc	3,2
  2818  04F2  2CF6               	goto	l687
  2819                           
  2820                           ;main.c: 154: TRISB4 = 1;
  2821  04F3  1683               	bsf	3,5	;RP0=1, select bank1
  2822  04F4  1606               	bsf	6,4
  2823  04F5  0008               	return
  2824  04F6                     l687:	
  2825                           
  2826                           ;main.c: 158: else
  2827                           ;main.c: 160: TRISB4= 0;
  2828  04F6  1683               	bsf	3,5	;RP0=1, select bank1
  2829  04F7  1206               	bcf	6,4
  2830  04F8  0008               	return
  2831  04F9                     __end_of_initPB4:	
  2832  04F9                     __ptext1246:	
  2833 ;; =============== function _setPB5 ends ============
  2834                           
  2835                           
  2836 ;; *************** function _initPB5 *****************
  2837 ;; Defined at:
  2838 ;;		line 185 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2839 ;; Parameters:    Size  Location     Type
  2840 ;;  bValue          1    wreg     unsigned char 
  2841 ;; Auto vars:     Size  Location     Type
  2842 ;;  bValue          1   21[BANK0 ] unsigned char 
  2843 ;; Return value:  Size  Location     Type
  2844 ;;		None               void
  2845 ;; Registers used:
  2846 ;;		wreg
  2847 ;; Tracked objects:
  2848 ;;		On entry : 17F/20
  2849 ;;		On exit  : 17F/20
  2850 ;;		Unchanged: FFE80/0
  2851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2852 ;;      Params:         0       0       0       0       0
  2853 ;;      Locals:         0       1       0       0       0
  2854 ;;      Temps:          0       0       0       0       0
  2855 ;;      Totals:         0       1       0       0       0
  2856 ;;Total ram usage:        1 bytes
  2857 ;; Hardware stack levels used:    1
  2858 ;; Hardware stack levels required when called:    3
  2859 ;; This function calls:
  2860 ;;		Nothing
  2861 ;; This function is called by:
  2862 ;;		_initPin
  2863 ;; This function uses a non-reentrant model
  2864 ;;
  2865  04F9                     _initPB5:	
  2866                           
  2867                           ; Regs used in _initPB5: [wreg]
  2868                           ;initPB5@bValue stored from wreg
  2869  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  2870  04FA  00D2               	movwf	initPB5@bValue
  2871                           
  2872                           ;main.c: 186: if( bValue )
  2873  04FB  0852               	movf	initPB5@bValue,w
  2874  04FC  1903               	btfsc	3,2
  2875  04FD  2D01               	goto	l697
  2876                           
  2877                           ;main.c: 188: TRISB5 = 1;
  2878  04FE  1683               	bsf	3,5	;RP0=1, select bank1
  2879  04FF  1686               	bsf	6,5
  2880  0500  0008               	return
  2881  0501                     l697:	
  2882                           
  2883                           ;main.c: 192: else
  2884                           ;main.c: 194: TRISB5= 0;
  2885  0501  1683               	bsf	3,5	;RP0=1, select bank1
  2886  0502  1286               	bcf	6,5
  2887  0503  0008               	return
  2888  0504                     __end_of_initPB5:	
  2889                           
  2890                           	psect	text1222
  2891  05DE                     __ptext1222:	
  2892 ;; =============== function _FilterCh13 ends ============
  2893                           
  2894                           
  2895 ;; *************** function _setWaitResetFlag *****************
  2896 ;; Defined at:
  2897 ;;		line 55 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;  bValue          1    wreg     unsigned char 
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;  bValue          1   21[BANK0 ] unsigned char 
  2902 ;; Return value:  Size  Location     Type
  2903 ;;		None               void
  2904 ;; Registers used:
  2905 ;;		wreg
  2906 ;; Tracked objects:
  2907 ;;		On entry : 60/0
  2908 ;;		On exit  : 60/0
  2909 ;;		Unchanged: FFF9F/0
  2910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2911 ;;      Params:         0       0       0       0       0
  2912 ;;      Locals:         0       1       0       0       0
  2913 ;;      Temps:          0       0       0       0       0
  2914 ;;      Totals:         0       1       0       0       0
  2915 ;;Total ram usage:        1 bytes
  2916 ;; Hardware stack levels used:    1
  2917 ;; Hardware stack levels required when called:    3
  2918 ;; This function calls:
  2919 ;;		Nothing
  2920 ;; This function is called by:
  2921 ;;		_main
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924  05DE                     _setWaitResetFlag:	
  2925                           
  2926                           ; Regs used in _setWaitResetFlag: [wreg]
  2927                           ;setWaitResetFlag@bValue stored from wreg
  2928  05DE  00D2               	movwf	setWaitResetFlag@bValue
  2929                           
  2930                           ;common.c: 56: bWaitResetFlag = bValue;
  2931  05DF  00B2               	movwf	_bWaitResetFlag
  2932  05E0  0008               	return
  2933  05E1                     __end_of_setWaitResetFlag:	
  2934                           
  2935                           	psect	text1223
  2936  0586                     __ptext1223:	
  2937 ;; =============== function _setWaitResetFlag ends ============
  2938                           
  2939                           
  2940 ;; *************** function _isFinishedOneHoursTimer *****************
  2941 ;; Defined at:
  2942 ;;		line 573 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2943 ;; Parameters:    Size  Location     Type
  2944 ;;		None
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;		None
  2947 ;; Return value:  Size  Location     Type
  2948 ;;                  1    wreg      unsigned char 
  2949 ;; Registers used:
  2950 ;;		wreg, status,2, status,0
  2951 ;; Tracked objects:
  2952 ;;		On entry : 60/20
  2953 ;;		On exit  : 60/0
  2954 ;;		Unchanged: FFF9F/0
  2955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2956 ;;      Params:         0       0       0       0       0
  2957 ;;      Locals:         0       0       0       0       0
  2958 ;;      Temps:          0       0       0       0       0
  2959 ;;      Totals:         0       0       0       0       0
  2960 ;;Total ram usage:        0 bytes
  2961 ;; Hardware stack levels used:    1
  2962 ;; Hardware stack levels required when called:    3
  2963 ;; This function calls:
  2964 ;;		Nothing
  2965 ;; This function is called by:
  2966 ;;		_main
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969  0586                     _isFinishedOneHoursTimer:	
  2970                           
  2971                           ;common.c: 574: if((uiOneHourTimer == 0) && bOneHourTimerStartFlag)
  2972                           
  2973                           ; Regs used in _isFinishedOneHoursTimer: [wreg+status,2+status,0]
  2974  0586  1283               	bcf	3,5	;RP0=0, select bank0
  2975  0587  0823               	movf	_uiOneHourTimer+1,w
  2976  0588  0422               	iorwf	_uiOneHourTimer,w
  2977  0589  1D03               	skipz
  2978  058A  3400               	retlw	0
  2979  058B  082F               	movf	_bOneHourTimerStartFlag,w
  2980  058C  1903               	btfsc	3,2
  2981  058D  3400               	retlw	0
  2982  058E  3001               	movlw	1
  2983                           
  2984                           ;common.c: 575: {
  2985                           ;common.c: 576: bOneHourTimerStartFlag = 0;
  2986  058F  01AF               	clrf	_bOneHourTimerStartFlag
  2987                           
  2988                           ;common.c: 577: return 1;
  2989  0590  0008               	return
  2990  0591                     __end_of_isFinishedOneHoursTimer:	
  2991                           ;common.c: 579: else
  2992                           ;common.c: 580: return 0;
  2993                           
  2994                           
  2995                           	psect	text1224
  2996  054E                     __ptext1224:	
  2997 ;; =============== function _isFinishedOneHoursTimer ends ============
  2998                           
  2999                           
  3000 ;; *************** function _startOneHoursTimer *****************
  3001 ;; Defined at:
  3002 ;;		line 490 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;  uiSetTime       2   21[BANK0 ] unsigned int 
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;		None
  3007 ;; Return value:  Size  Location     Type
  3008 ;;		None               void
  3009 ;; Registers used:
  3010 ;;		wreg, status,2, status,0
  3011 ;; Tracked objects:
  3012 ;;		On entry : 60/0
  3013 ;;		On exit  : 60/0
  3014 ;;		Unchanged: FFF9F/0
  3015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3016 ;;      Params:         0       2       0       0       0
  3017 ;;      Locals:         0       0       0       0       0
  3018 ;;      Temps:          0       0       0       0       0
  3019 ;;      Totals:         0       2       0       0       0
  3020 ;;Total ram usage:        2 bytes
  3021 ;; Hardware stack levels used:    1
  3022 ;; Hardware stack levels required when called:    3
  3023 ;; This function calls:
  3024 ;;		Nothing
  3025 ;; This function is called by:
  3026 ;;		_main
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029  054E                     _startOneHoursTimer:	
  3030                           
  3031                           ;common.c: 491: if(( 0 == uiOneHourTimer ) && ( 0 == bOneHourTimerStartFlag ))
  3032                           
  3033                           ; Regs used in _startOneHoursTimer: [wreg+status,2+status,0]
  3034  054E  0823               	movf	_uiOneHourTimer+1,w
  3035  054F  0422               	iorwf	_uiOneHourTimer,w
  3036  0550  1D03               	skipz
  3037  0551  0008               	return
  3038  0552  08AF               	movf	_bOneHourTimerStartFlag,f
  3039  0553  1D03               	skipz
  3040  0554  0008               	return
  3041                           
  3042                           ;common.c: 492: {
  3043                           ;common.c: 493: uiOneHourTimer = uiSetTime;
  3044  0555  0853               	movf	startOneHoursTimer@uiSetTime+1,w
  3045  0556  00A3               	movwf	_uiOneHourTimer+1
  3046  0557  0852               	movf	startOneHoursTimer@uiSetTime,w
  3047  0558  00A2               	movwf	_uiOneHourTimer
  3048                           
  3049                           ;common.c: 494: bOneHourTimerStartFlag = 1;
  3050  0559  01AF               	clrf	_bOneHourTimerStartFlag
  3051  055A  0AAF               	incf	_bOneHourTimerStartFlag,f
  3052  055B  0008               	return
  3053  055C                     __end_of_startOneHoursTimer:	
  3054                           
  3055                           	psect	text1225
  3056  05CE                     __ptext1225:	
  3057 ;; =============== function _startOneHoursTimer ends ============
  3058                           
  3059                           
  3060 ;; *************** function _clearThreeHoursTimer *****************
  3061 ;; Defined at:
  3062 ;;		line 457 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;		None
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;		None
  3067 ;; Return value:  Size  Location     Type
  3068 ;;		None               void
  3069 ;; Registers used:
  3070 ;;		status,2
  3071 ;; Tracked objects:
  3072 ;;		On entry : 60/0
  3073 ;;		On exit  : 60/0
  3074 ;;		Unchanged: FFF9F/0
  3075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3076 ;;      Params:         0       0       0       0       0
  3077 ;;      Locals:         0       0       0       0       0
  3078 ;;      Temps:          0       0       0       0       0
  3079 ;;      Totals:         0       0       0       0       0
  3080 ;;Total ram usage:        0 bytes
  3081 ;; Hardware stack levels used:    1
  3082 ;; Hardware stack levels required when called:    3
  3083 ;; This function calls:
  3084 ;;		Nothing
  3085 ;; This function is called by:
  3086 ;;		_main
  3087 ;; This function uses a non-reentrant model
  3088 ;;
  3089  05CE                     _clearThreeHoursTimer:	
  3090                           
  3091                           ;common.c: 458: uiSmallTimer = 0;
  3092                           
  3093                           ; Regs used in _clearThreeHoursTimer: [status,2]
  3094  05CE  01A4               	clrf	_uiSmallTimer
  3095  05CF  01A5               	clrf	_uiSmallTimer+1
  3096                           
  3097                           ;common.c: 459: bSmallTimerStartFlag = 0;
  3098  05D0  01B0               	clrf	_bSmallTimerStartFlag
  3099  05D1  0008               	return
  3100  05D2                     __end_of_clearThreeHoursTimer:	
  3101                           
  3102                           	psect	text1226
  3103  0591                     __ptext1226:	
  3104 ;; =============== function _clearThreeHoursTimer ends ============
  3105                           
  3106                           
  3107 ;; *************** function _isFinishedThreeHoursTimer *****************
  3108 ;; Defined at:
  3109 ;;		line 560 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;		None
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;		None
  3114 ;; Return value:  Size  Location     Type
  3115 ;;                  1    wreg      unsigned char 
  3116 ;; Registers used:
  3117 ;;		wreg, status,2, status,0
  3118 ;; Tracked objects:
  3119 ;;		On entry : 60/0
  3120 ;;		On exit  : 60/0
  3121 ;;		Unchanged: FFF9F/0
  3122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3123 ;;      Params:         0       0       0       0       0
  3124 ;;      Locals:         0       0       0       0       0
  3125 ;;      Temps:          0       0       0       0       0
  3126 ;;      Totals:         0       0       0       0       0
  3127 ;;Total ram usage:        0 bytes
  3128 ;; Hardware stack levels used:    1
  3129 ;; Hardware stack levels required when called:    3
  3130 ;; This function calls:
  3131 ;;		Nothing
  3132 ;; This function is called by:
  3133 ;;		_main
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136  0591                     _isFinishedThreeHoursTimer:	
  3137                           
  3138                           ;common.c: 561: if((uiSmallTimer == 0) && bSmallTimerStartFlag)
  3139                           
  3140                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  3141  0591  0825               	movf	_uiSmallTimer+1,w
  3142  0592  0424               	iorwf	_uiSmallTimer,w
  3143  0593  1D03               	skipz
  3144  0594  3400               	retlw	0
  3145  0595  0830               	movf	_bSmallTimerStartFlag,w
  3146  0596  1903               	btfsc	3,2
  3147  0597  3400               	retlw	0
  3148  0598  3001               	movlw	1
  3149                           
  3150                           ;common.c: 562: {
  3151                           ;common.c: 563: bSmallTimerStartFlag = 0;
  3152  0599  01B0               	clrf	_bSmallTimerStartFlag
  3153                           
  3154                           ;common.c: 564: return 1;
  3155  059A  0008               	return
  3156  059B                     __end_of_isFinishedThreeHoursTimer:	
  3157                           ;common.c: 566: else
  3158                           ;common.c: 567: return 0;
  3159                           
  3160                           
  3161                           	psect	text1227
  3162  055C                     __ptext1227:	
  3163 ;; =============== function _isFinishedThreeHoursTimer ends ============
  3164                           
  3165                           
  3166 ;; *************** function _startThreeHoursTimer *****************
  3167 ;; Defined at:
  3168 ;;		line 477 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;  uiSetTime       2   21[BANK0 ] unsigned int 
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;		None
  3173 ;; Return value:  Size  Location     Type
  3174 ;;		None               void
  3175 ;; Registers used:
  3176 ;;		wreg, status,2, status,0
  3177 ;; Tracked objects:
  3178 ;;		On entry : 60/0
  3179 ;;		On exit  : 60/0
  3180 ;;		Unchanged: FFF9F/0
  3181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3182 ;;      Params:         0       2       0       0       0
  3183 ;;      Locals:         0       0       0       0       0
  3184 ;;      Temps:          0       0       0       0       0
  3185 ;;      Totals:         0       2       0       0       0
  3186 ;;Total ram usage:        2 bytes
  3187 ;; Hardware stack levels used:    1
  3188 ;; Hardware stack levels required when called:    3
  3189 ;; This function calls:
  3190 ;;		Nothing
  3191 ;; This function is called by:
  3192 ;;		_main
  3193 ;; This function uses a non-reentrant model
  3194 ;;
  3195  055C                     _startThreeHoursTimer:	
  3196                           
  3197                           ;common.c: 478: if(( 0 == uiSmallTimer ) && ( 0 == bSmallTimerStartFlag ))
  3198                           
  3199                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  3200  055C  0825               	movf	_uiSmallTimer+1,w
  3201  055D  0424               	iorwf	_uiSmallTimer,w
  3202  055E  1D03               	skipz
  3203  055F  0008               	return
  3204  0560  08B0               	movf	_bSmallTimerStartFlag,f
  3205  0561  1D03               	skipz
  3206  0562  0008               	return
  3207                           
  3208                           ;common.c: 479: {
  3209                           ;common.c: 480: uiSmallTimer = uiSetTime;
  3210  0563  0853               	movf	startThreeHoursTimer@uiSetTime+1,w
  3211  0564  00A5               	movwf	_uiSmallTimer+1
  3212  0565  0852               	movf	startThreeHoursTimer@uiSetTime,w
  3213  0566  00A4               	movwf	_uiSmallTimer
  3214                           
  3215                           ;common.c: 481: bSmallTimerStartFlag = 1;
  3216  0567  01B0               	clrf	_bSmallTimerStartFlag
  3217  0568  0AB0               	incf	_bSmallTimerStartFlag,f
  3218  0569  0008               	return
  3219  056A                     __end_of_startThreeHoursTimer:	
  3220                           
  3221                           	psect	text1228
  3222  05D2                     __ptext1228:	
  3223 ;; =============== function _startThreeHoursTimer ends ============
  3224                           
  3225                           
  3226 ;; *************** function _clearTwelveHoursTimer *****************
  3227 ;; Defined at:
  3228 ;;		line 450 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;		None
  3231 ;; Auto vars:     Size  Location     Type
  3232 ;;		None
  3233 ;; Return value:  Size  Location     Type
  3234 ;;		None               void
  3235 ;; Registers used:
  3236 ;;		status,2
  3237 ;; Tracked objects:
  3238 ;;		On entry : 60/0
  3239 ;;		On exit  : 60/0
  3240 ;;		Unchanged: FFF9F/0
  3241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3242 ;;      Params:         0       0       0       0       0
  3243 ;;      Locals:         0       0       0       0       0
  3244 ;;      Temps:          0       0       0       0       0
  3245 ;;      Totals:         0       0       0       0       0
  3246 ;;Total ram usage:        0 bytes
  3247 ;; Hardware stack levels used:    1
  3248 ;; Hardware stack levels required when called:    3
  3249 ;; This function calls:
  3250 ;;		Nothing
  3251 ;; This function is called by:
  3252 ;;		_main
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255  05D2                     _clearTwelveHoursTimer:	
  3256                           
  3257                           ;common.c: 451: uiBigTimer = 0;
  3258                           
  3259                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  3260  05D2  01A0               	clrf	_uiBigTimer
  3261  05D3  01A1               	clrf	_uiBigTimer+1
  3262                           
  3263                           ;common.c: 452: bBigTimerStartFlag = 0;
  3264  05D4  01AE               	clrf	_bBigTimerStartFlag
  3265  05D5  0008               	return
  3266  05D6                     __end_of_clearTwelveHoursTimer:	
  3267                           
  3268                           	psect	text1229
  3269  059B                     __ptext1229:	
  3270 ;; =============== function _clearTwelveHoursTimer ends ============
  3271                           
  3272                           
  3273 ;; *************** function _isFinishedTwelveHoursTimer *****************
  3274 ;; Defined at:
  3275 ;;		line 549 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;		None
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;		None
  3280 ;; Return value:  Size  Location     Type
  3281 ;;                  1    wreg      unsigned char 
  3282 ;; Registers used:
  3283 ;;		wreg, status,2, status,0
  3284 ;; Tracked objects:
  3285 ;;		On entry : 60/0
  3286 ;;		On exit  : 60/0
  3287 ;;		Unchanged: FFF9F/0
  3288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3289 ;;      Params:         0       0       0       0       0
  3290 ;;      Locals:         0       0       0       0       0
  3291 ;;      Temps:          0       0       0       0       0
  3292 ;;      Totals:         0       0       0       0       0
  3293 ;;Total ram usage:        0 bytes
  3294 ;; Hardware stack levels used:    1
  3295 ;; Hardware stack levels required when called:    3
  3296 ;; This function calls:
  3297 ;;		Nothing
  3298 ;; This function is called by:
  3299 ;;		_main
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302  059B                     _isFinishedTwelveHoursTimer:	
  3303                           
  3304                           ;common.c: 550: if(( uiBigTimer == 0 ) && bBigTimerStartFlag )
  3305                           
  3306                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  3307  059B  0821               	movf	_uiBigTimer+1,w
  3308  059C  0420               	iorwf	_uiBigTimer,w
  3309  059D  1D03               	skipz
  3310  059E  3400               	retlw	0
  3311  059F  082E               	movf	_bBigTimerStartFlag,w
  3312  05A0  1903               	btfsc	3,2
  3313  05A1  3400               	retlw	0
  3314  05A2  3001               	movlw	1
  3315                           
  3316                           ;common.c: 551: {
  3317                           ;common.c: 552: bBigTimerStartFlag = 0;
  3318  05A3  01AE               	clrf	_bBigTimerStartFlag
  3319                           
  3320                           ;common.c: 553: return 1;
  3321  05A4  0008               	return
  3322  05A5                     __end_of_isFinishedTwelveHoursTimer:	
  3323                           ;common.c: 555: else
  3324                           ;common.c: 556: return 0;
  3325                           
  3326                           
  3327                           	psect	text1230
  3328  056A                     __ptext1230:	
  3329 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  3330                           
  3331                           
  3332 ;; *************** function _startTwelveHourTimer *****************
  3333 ;; Defined at:
  3334 ;;		line 436 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;  uiSetTime       2   21[BANK0 ] unsigned int 
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;		None
  3339 ;; Return value:  Size  Location     Type
  3340 ;;		None               void
  3341 ;; Registers used:
  3342 ;;		wreg, status,2, status,0
  3343 ;; Tracked objects:
  3344 ;;		On entry : 60/0
  3345 ;;		On exit  : 60/0
  3346 ;;		Unchanged: FFF9F/0
  3347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3348 ;;      Params:         0       2       0       0       0
  3349 ;;      Locals:         0       0       0       0       0
  3350 ;;      Temps:          0       0       0       0       0
  3351 ;;      Totals:         0       2       0       0       0
  3352 ;;Total ram usage:        2 bytes
  3353 ;; Hardware stack levels used:    1
  3354 ;; Hardware stack levels required when called:    3
  3355 ;; This function calls:
  3356 ;;		Nothing
  3357 ;; This function is called by:
  3358 ;;		_main
  3359 ;; This function uses a non-reentrant model
  3360 ;;
  3361  056A                     _startTwelveHourTimer:	
  3362                           
  3363                           ;common.c: 437: if((0 == uiBigTimer) && ( 0 == bBigTimerStartFlag))
  3364                           
  3365                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  3366  056A  0821               	movf	_uiBigTimer+1,w
  3367  056B  0420               	iorwf	_uiBigTimer,w
  3368  056C  1D03               	skipz
  3369  056D  0008               	return
  3370  056E  08AE               	movf	_bBigTimerStartFlag,f
  3371  056F  1D03               	skipz
  3372  0570  0008               	return
  3373                           
  3374                           ;common.c: 438: {
  3375                           ;common.c: 439: uiBigTimer = uiSetTime;
  3376  0571  0853               	movf	startTwelveHourTimer@uiSetTime+1,w
  3377  0572  00A1               	movwf	_uiBigTimer+1
  3378  0573  0852               	movf	startTwelveHourTimer@uiSetTime,w
  3379  0574  00A0               	movwf	_uiBigTimer
  3380                           
  3381                           ;common.c: 440: bBigTimerStartFlag = 1;
  3382  0575  01AE               	clrf	_bBigTimerStartFlag
  3383  0576  0AAE               	incf	_bBigTimerStartFlag,f
  3384  0577  0008               	return
  3385  0578                     __end_of_startTwelveHourTimer:	
  3386                           
  3387                           	psect	text1231
  3388  05D6                     __ptext1231:	
  3389 ;; =============== function _startTwelveHourTimer ends ============
  3390                           
  3391                           
  3392 ;; *************** function _clearTwentyMinTimer *****************
  3393 ;; Defined at:
  3394 ;;		line 470 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;		None
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;		None
  3399 ;; Return value:  Size  Location     Type
  3400 ;;		None               void
  3401 ;; Registers used:
  3402 ;;		status,2
  3403 ;; Tracked objects:
  3404 ;;		On entry : 60/0
  3405 ;;		On exit  : 60/0
  3406 ;;		Unchanged: FFF9F/0
  3407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3408 ;;      Params:         0       0       0       0       0
  3409 ;;      Locals:         0       0       0       0       0
  3410 ;;      Temps:          0       0       0       0       0
  3411 ;;      Totals:         0       0       0       0       0
  3412 ;;Total ram usage:        0 bytes
  3413 ;; Hardware stack levels used:    1
  3414 ;; Hardware stack levels required when called:    3
  3415 ;; This function calls:
  3416 ;;		Nothing
  3417 ;; This function is called by:
  3418 ;;		_main
  3419 ;; This function uses a non-reentrant model
  3420 ;;
  3421  05D6                     _clearTwentyMinTimer:	
  3422                           
  3423                           ;common.c: 471: uiTwentyMinTimer = 0;
  3424                           
  3425                           ; Regs used in _clearTwentyMinTimer: [status,2]
  3426  05D6  01A6               	clrf	_uiTwentyMinTimer
  3427  05D7  01A7               	clrf	_uiTwentyMinTimer+1
  3428                           
  3429                           ;common.c: 472: bTwentyMinStartFlag = 0;
  3430  05D8  01B1               	clrf	_bTwentyMinStartFlag
  3431  05D9  0008               	return
  3432  05DA                     __end_of_clearTwentyMinTimer:	
  3433                           
  3434                           	psect	text1232
  3435  05A5                     __ptext1232:	
  3436 ;; =============== function _clearTwentyMinTimer ends ============
  3437                           
  3438                           
  3439 ;; *************** function _isFinishedTwentyMinTimer *****************
  3440 ;; Defined at:
  3441 ;;		line 525 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3442 ;; Parameters:    Size  Location     Type
  3443 ;;		None
  3444 ;; Auto vars:     Size  Location     Type
  3445 ;;		None
  3446 ;; Return value:  Size  Location     Type
  3447 ;;                  1    wreg      unsigned char 
  3448 ;; Registers used:
  3449 ;;		wreg, status,2, status,0
  3450 ;; Tracked objects:
  3451 ;;		On entry : 60/0
  3452 ;;		On exit  : 60/0
  3453 ;;		Unchanged: FFF9F/0
  3454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3455 ;;      Params:         0       0       0       0       0
  3456 ;;      Locals:         0       0       0       0       0
  3457 ;;      Temps:          0       0       0       0       0
  3458 ;;      Totals:         0       0       0       0       0
  3459 ;;Total ram usage:        0 bytes
  3460 ;; Hardware stack levels used:    1
  3461 ;; Hardware stack levels required when called:    3
  3462 ;; This function calls:
  3463 ;;		Nothing
  3464 ;; This function is called by:
  3465 ;;		_main
  3466 ;; This function uses a non-reentrant model
  3467 ;;
  3468  05A5                     _isFinishedTwentyMinTimer:	
  3469                           
  3470                           ;common.c: 526: if(( 0 == uiTwentyMinTimer ) && bTwentyMinStartFlag )
  3471                           
  3472                           ; Regs used in _isFinishedTwentyMinTimer: [wreg+status,2+status,0]
  3473  05A5  0827               	movf	_uiTwentyMinTimer+1,w
  3474  05A6  0426               	iorwf	_uiTwentyMinTimer,w
  3475  05A7  1D03               	skipz
  3476  05A8  3400               	retlw	0
  3477  05A9  0831               	movf	_bTwentyMinStartFlag,w
  3478  05AA  1903               	btfsc	3,2
  3479  05AB  3400               	retlw	0
  3480  05AC  3001               	movlw	1
  3481                           
  3482                           ;common.c: 527: {
  3483                           ;common.c: 528: bTwentyMinStartFlag = 0;
  3484  05AD  01B1               	clrf	_bTwentyMinStartFlag
  3485                           
  3486                           ;common.c: 529: return 1;
  3487  05AE  0008               	return
  3488  05AF                     __end_of_isFinishedTwentyMinTimer:	
  3489                           ;common.c: 531: else
  3490                           ;common.c: 532: return 0;
  3491                           
  3492                           
  3493                           	psect	text1233
  3494  05E4                     __ptext1233:	
  3495 ;; =============== function _isFinishedTwentyMinTimer ends ============
  3496                           
  3497                           
  3498 ;; *************** function _clrSampeTime *****************
  3499 ;; Defined at:
  3500 ;;		line 595 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3501 ;; Parameters:    Size  Location     Type
  3502 ;;		None
  3503 ;; Auto vars:     Size  Location     Type
  3504 ;;		None
  3505 ;; Return value:  Size  Location     Type
  3506 ;;		None               void
  3507 ;; Registers used:
  3508 ;;		status,2
  3509 ;; Tracked objects:
  3510 ;;		On entry : 60/0
  3511 ;;		On exit  : 60/0
  3512 ;;		Unchanged: FFF9F/0
  3513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3514 ;;      Params:         0       0       0       0       0
  3515 ;;      Locals:         0       0       0       0       0
  3516 ;;      Temps:          0       0       0       0       0
  3517 ;;      Totals:         0       0       0       0       0
  3518 ;;Total ram usage:        0 bytes
  3519 ;; Hardware stack levels used:    1
  3520 ;; Hardware stack levels required when called:    3
  3521 ;; This function calls:
  3522 ;;		Nothing
  3523 ;; This function is called by:
  3524 ;;		_main
  3525 ;; This function uses a non-reentrant model
  3526 ;;
  3527  05E4                     _clrSampeTime:	
  3528                           
  3529                           ;common.c: 596: timer.timer10msStopWatch = 0;
  3530                           
  3531                           ; Regs used in _clrSampeTime: [status,2]
  3532  05E4  01B4               	clrf	_timer
  3533  05E5  0008               	return
  3534  05E6                     __end_of_clrSampeTime:	
  3535                           
  3536                           	psect	text1234
  3537  05C9                     __ptext1234:	
  3538 ;; =============== function _clrSampeTime ends ============
  3539                           
  3540                           
  3541 ;; *************** function _isPermitSampleTime *****************
  3542 ;; Defined at:
  3543 ;;		line 585 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;		None
  3546 ;; Auto vars:     Size  Location     Type
  3547 ;;		None
  3548 ;; Return value:  Size  Location     Type
  3549 ;;                  1    wreg      unsigned char 
  3550 ;; Registers used:
  3551 ;;		wreg
  3552 ;; Tracked objects:
  3553 ;;		On entry : 60/0
  3554 ;;		On exit  : 60/0
  3555 ;;		Unchanged: FFF9F/0
  3556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3557 ;;      Params:         0       0       0       0       0
  3558 ;;      Locals:         0       0       0       0       0
  3559 ;;      Temps:          0       0       0       0       0
  3560 ;;      Totals:         0       0       0       0       0
  3561 ;;Total ram usage:        0 bytes
  3562 ;; Hardware stack levels used:    1
  3563 ;; Hardware stack levels required when called:    3
  3564 ;; This function calls:
  3565 ;;		Nothing
  3566 ;; This function is called by:
  3567 ;;		_main
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570  05C9                     _isPermitSampleTime:	
  3571                           
  3572                           ;common.c: 586: if(timer.timer10msStopWatch >= 10)
  3573                           
  3574                           ; Regs used in _isPermitSampleTime: [wreg]
  3575  05C9  300A               	movlw	10
  3576  05CA  0234               	subwf	_timer,w
  3577  05CB  1803               	btfsc	3,0
  3578                           
  3579                           ;common.c: 587: {
  3580                           ;common.c: 588: return 1;
  3581  05CC  3401               	retlw	1
  3582                           
  3583                           ;common.c: 590: else
  3584                           ;common.c: 591: return 0;
  3585  05CD  3400               	retlw	0
  3586  05CE                     __end_of_isPermitSampleTime:	
  3587                           
  3588                           	psect	text1236
  3589  0578                     __ptext1236:	
  3590 ;; =============== function _adc_start ends ============
  3591                           
  3592                           
  3593 ;; *************** function _startTwentyMinTimer *****************
  3594 ;; Defined at:
  3595 ;;		line 515 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;  uiSetValue      2   21[BANK0 ] unsigned int 
  3598 ;; Auto vars:     Size  Location     Type
  3599 ;;		None
  3600 ;; Return value:  Size  Location     Type
  3601 ;;		None               void
  3602 ;; Registers used:
  3603 ;;		wreg, status,2, status,0
  3604 ;; Tracked objects:
  3605 ;;		On entry : 17F/0
  3606 ;;		On exit  : 17F/0
  3607 ;;		Unchanged: FFE80/0
  3608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3609 ;;      Params:         0       2       0       0       0
  3610 ;;      Locals:         0       0       0       0       0
  3611 ;;      Temps:          0       0       0       0       0
  3612 ;;      Totals:         0       2       0       0       0
  3613 ;;Total ram usage:        2 bytes
  3614 ;; Hardware stack levels used:    1
  3615 ;; Hardware stack levels required when called:    3
  3616 ;; This function calls:
  3617 ;;		Nothing
  3618 ;; This function is called by:
  3619 ;;		_main
  3620 ;; This function uses a non-reentrant model
  3621 ;;
  3622  0578                     _startTwentyMinTimer:	
  3623                           
  3624                           ;common.c: 516: if(( 0 == uiTwentyMinTimer) && ( 0 == bTwentyMinStartFlag))
  3625                           
  3626                           ; Regs used in _startTwentyMinTimer: [wreg+status,2+status,0]
  3627  0578  0827               	movf	_uiTwentyMinTimer+1,w
  3628  0579  0426               	iorwf	_uiTwentyMinTimer,w
  3629  057A  1D03               	skipz
  3630  057B  0008               	return
  3631  057C  08B1               	movf	_bTwentyMinStartFlag,f
  3632  057D  1D03               	skipz
  3633  057E  0008               	return
  3634                           
  3635                           ;common.c: 517: {
  3636                           ;common.c: 518: uiTwentyMinTimer = uiSetValue;
  3637  057F  0853               	movf	startTwentyMinTimer@uiSetValue+1,w
  3638  0580  00A7               	movwf	_uiTwentyMinTimer+1
  3639  0581  0852               	movf	startTwentyMinTimer@uiSetValue,w
  3640  0582  00A6               	movwf	_uiTwentyMinTimer
  3641                           
  3642                           ;common.c: 519: bTwentyMinStartFlag = 1;
  3643  0583  01B1               	clrf	_bTwentyMinStartFlag
  3644  0584  0AB1               	incf	_bTwentyMinStartFlag,f
  3645  0585  0008               	return
  3646  0586                     __end_of_startTwentyMinTimer:	
  3647                           
  3648                           	psect	text1238
  3649  05E1                     __ptext1238:	
  3650 ;; =============== function _adc_test_init ends ============
  3651                           
  3652                           
  3653 ;; *************** function _timer1_interrupt_config *****************
  3654 ;; Defined at:
  3655 ;;		line 325 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3656 ;; Parameters:    Size  Location     Type
  3657 ;;		None
  3658 ;; Auto vars:     Size  Location     Type
  3659 ;;		None
  3660 ;; Return value:  Size  Location     Type
  3661 ;;		None               void
  3662 ;; Registers used:
  3663 ;;		None
  3664 ;; Tracked objects:
  3665 ;;		On entry : 17F/20
  3666 ;;		On exit  : 17F/20
  3667 ;;		Unchanged: FFE80/0
  3668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3669 ;;      Params:         0       0       0       0       0
  3670 ;;      Locals:         0       0       0       0       0
  3671 ;;      Temps:          0       0       0       0       0
  3672 ;;      Totals:         0       0       0       0       0
  3673 ;;Total ram usage:        0 bytes
  3674 ;; Hardware stack levels used:    1
  3675 ;; Hardware stack levels required when called:    3
  3676 ;; This function calls:
  3677 ;;		Nothing
  3678 ;; This function is called by:
  3679 ;;		_main
  3680 ;; This function uses a non-reentrant model
  3681 ;;
  3682  05E1                     _timer1_interrupt_config:	
  3683                           
  3684                           ;common.c: 326: GIE = 1;
  3685                           
  3686                           ; Regs used in _timer1_interrupt_config: []
  3687  05E1  178B               	bsf	11,7
  3688                           
  3689                           ;common.c: 327: PEIE = 1;
  3690  05E2  170B               	bsf	11,6
  3691  05E3  0008               	return
  3692  05E4                     __end_of_timer1_interrupt_config:	
  3693                           
  3694                           	psect	text1239
  3695  05AF                     __ptext1239:	
  3696 ;; =============== function _timer1_interrupt_config ends ============
  3697                           
  3698                           
  3699 ;; *************** function _timer1_config *****************
  3700 ;; Defined at:
  3701 ;;		line 313 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3702 ;; Parameters:    Size  Location     Type
  3703 ;;		None
  3704 ;; Auto vars:     Size  Location     Type
  3705 ;;		None
  3706 ;; Return value:  Size  Location     Type
  3707 ;;		None               void
  3708 ;; Registers used:
  3709 ;;		wreg
  3710 ;; Tracked objects:
  3711 ;;		On entry : 17F/40
  3712 ;;		On exit  : 17F/20
  3713 ;;		Unchanged: FFE80/0
  3714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3715 ;;      Params:         0       0       0       0       0
  3716 ;;      Locals:         0       0       0       0       0
  3717 ;;      Temps:          0       0       0       0       0
  3718 ;;      Totals:         0       0       0       0       0
  3719 ;;Total ram usage:        0 bytes
  3720 ;; Hardware stack levels used:    1
  3721 ;; Hardware stack levels required when called:    3
  3722 ;; This function calls:
  3723 ;;		Nothing
  3724 ;; This function is called by:
  3725 ;;		_main
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728  05AF                     _timer1_config:	
  3729                           
  3730                           ;common.c: 315: TMR1H=0xCF;
  3731                           
  3732                           ; Regs used in _timer1_config: [wreg]
  3733  05AF  30CF               	movlw	207
  3734  05B0  1303               	bcf	3,6	;RP1=0, select bank0
  3735  05B1  008F               	movwf	15	;volatile
  3736                           
  3737                           ;common.c: 316: TMR1L=0x2C;
  3738  05B2  302C               	movlw	44
  3739  05B3  008E               	movwf	14	;volatile
  3740                           
  3741                           ;common.c: 317: T1CON=0xE1;
  3742  05B4  30E1               	movlw	225
  3743  05B5  0090               	movwf	16	;volatile
  3744                           
  3745                           ;common.c: 318: TMR1IE=1;
  3746  05B6  1683               	bsf	3,5	;RP0=1, select bank1
  3747  05B7  140C               	bsf	12,0
  3748  05B8  0008               	return
  3749  05B9                     __end_of_timer1_config:	
  3750                           
  3751                           	psect	text1240
  3752  05C1                     __ptext1240:	
  3753 ;; =============== function _timer1_config ends ============
  3754                           
  3755                           
  3756 ;; *************** function _clock_config *****************
  3757 ;; Defined at:
  3758 ;;		line 305 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;		None
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;		None
  3763 ;; Return value:  Size  Location     Type
  3764 ;;		None               void
  3765 ;; Registers used:
  3766 ;;		wreg, status,2
  3767 ;; Tracked objects:
  3768 ;;		On entry : 17F/20
  3769 ;;		On exit  : 17F/40
  3770 ;;		Unchanged: FFE80/0
  3771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3772 ;;      Params:         0       0       0       0       0
  3773 ;;      Locals:         0       0       0       0       0
  3774 ;;      Temps:          0       0       0       0       0
  3775 ;;      Totals:         0       0       0       0       0
  3776 ;;Total ram usage:        0 bytes
  3777 ;; Hardware stack levels used:    1
  3778 ;; Hardware stack levels required when called:    3
  3779 ;; This function calls:
  3780 ;;		Nothing
  3781 ;; This function is called by:
  3782 ;;		_main
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785  05C1                     _clock_config:	
  3786                           
  3787                           ;common.c: 307: CLKPR = 0x80;
  3788                           
  3789                           ; Regs used in _clock_config: [wreg+status,2]
  3790  05C1  3080               	movlw	128
  3791  05C2  1283               	bcf	3,5	;RP0=0, select bank2
  3792  05C3  1703               	bsf	3,6	;RP1=1, select bank2
  3793  05C4  0088               	movwf	8	;volatile
  3794                           
  3795                           ;common.c: 308: CLKPR = 0x00;
  3796  05C5  0188               	clrf	8	;volatile
  3797  05C6                     l1558:	
  3798                           ;common.c: 309: while(CLKPCE);
  3799                           
  3800  05C6  1F88               	btfss	8,7
  3801  05C7  0008               	return
  3802  05C8  2DC6               	goto	l1558
  3803  05C9                     __end_of_clock_config:	
  3804                           
  3805                           	psect	text1241
  3806  05E6                     __ptext1241:	
  3807 ;; =============== function _clock_config ends ============
  3808                           
  3809                           
  3810 ;; *************** function _reset *****************
  3811 ;; Defined at:
  3812 ;;		line 294 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  3813 ;; Parameters:    Size  Location     Type
  3814 ;;		None
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;		None
  3817 ;; Return value:  Size  Location     Type
  3818 ;;		None               void
  3819 ;; Registers used:
  3820 ;;		None
  3821 ;; Tracked objects:
  3822 ;;		On entry : 40/20
  3823 ;;		On exit  : 40/20
  3824 ;;		Unchanged: FFFFFFBF/0
  3825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3826 ;;      Params:         0       0       0       0       0
  3827 ;;      Locals:         0       0       0       0       0
  3828 ;;      Temps:          0       0       0       0       0
  3829 ;;      Totals:         0       0       0       0       0
  3830 ;;Total ram usage:        0 bytes
  3831 ;; Hardware stack levels used:    1
  3832 ;; Hardware stack levels required when called:    3
  3833 ;; This function calls:
  3834 ;;		Nothing
  3835 ;; This function is called by:
  3836 ;;		_main
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839  05E6                     _reset:	
  3840  05E6                     l722:	
  3841                           ; Regs used in _reset: []
  3842                           ;main.c: 296: while(1);
  3843                           
  3844  05E6  2DE6               	goto	l722
  3845                           
  3846                           	psect	text1242
  3847  05DA                     __ptext1242:	
  3848  05DA                     __end_of_reset:	
  3849                           
  3850 ;; =============== function _reset ends ============
  3851 ;; *************** function _selectAdChannel *****************
  3852 ;; Defined at:
  3853 ;;		line 283 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;		None
  3856 ;; Auto vars:     Size  Location     Type
  3857 ;;		None
  3858 ;; Return value:  Size  Location     Type
  3859 ;;		None               void
  3860 ;; Registers used:
  3861 ;;		None
  3862 ;; Tracked objects:
  3863 ;;		On entry : 17F/0
  3864 ;;		On exit  : 17F/20
  3865 ;;		Unchanged: FFE80/0
  3866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3867 ;;      Params:         0       0       0       0       0
  3868 ;;      Locals:         0       0       0       0       0
  3869 ;;      Temps:          0       0       0       0       0
  3870 ;;      Totals:         0       0       0       0       0
  3871 ;;Total ram usage:        0 bytes
  3872 ;; Hardware stack levels used:    1
  3873 ;; Hardware stack levels required when called:    3
  3874 ;; This function calls:
  3875 ;;		Nothing
  3876 ;; This function is called by:
  3877 ;;		_main
  3878 ;; This function uses a non-reentrant model
  3879 ;;
  3880  05DA                     _selectAdChannel:	
  3881                           
  3882                           ;main.c: 285: TRISB0 = 1;
  3883                           
  3884                           ; Regs used in _selectAdChannel: []
  3885  05DA  1683               	bsf	3,5	;RP0=1, select bank1
  3886  05DB  1406               	bsf	6,0
  3887                           
  3888                           ;main.c: 286: TRISB1 = 1;
  3889  05DC  1486               	bsf	6,1
  3890  05DD  0008               	return
  3891  05DE                     __end_of_selectAdChannel:	
  3892                           
  3893                           	psect	text1243
  3894  0525                     __ptext1243:	
  3895 ;; =============== function _selectAdChannel ends ============
  3896                           
  3897                           
  3898 ;; *************** function _pwm_start *****************
  3899 ;; Defined at:
  3900 ;;		line 231 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;  ucPulseWidth    1    wreg     unsigned char 
  3903 ;;  ucPulseFrequ    1   21[BANK0 ] unsigned char 
  3904 ;; Auto vars:     Size  Location     Type
  3905 ;;  ucPulseWidth    1   22[BANK0 ] unsigned char 
  3906 ;; Return value:  Size  Location     Type
  3907 ;;		None               void
  3908 ;; Registers used:
  3909 ;;		wreg, status,2, status,0
  3910 ;; Tracked objects:
  3911 ;;		On entry : 60/0
  3912 ;;		On exit  : 60/0
  3913 ;;		Unchanged: FFF9F/0
  3914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3915 ;;      Params:         0       1       0       0       0
  3916 ;;      Locals:         0       1       0       0       0
  3917 ;;      Temps:          0       0       0       0       0
  3918 ;;      Totals:         0       2       0       0       0
  3919 ;;Total ram usage:        2 bytes
  3920 ;; Hardware stack levels used:    1
  3921 ;; Hardware stack levels required when called:    3
  3922 ;; This function calls:
  3923 ;;		Nothing
  3924 ;; This function is called by:
  3925 ;;		_main
  3926 ;; This function uses a non-reentrant model
  3927 ;;
  3928  0525                     _pwm_start:	
  3929                           
  3930                           ; Regs used in _pwm_start: [wreg+status,2+status,0]
  3931                           ;pwm_start@ucPulseWidth stored from wreg
  3932  0525  00D3               	movwf	pwm_start@ucPulseWidth
  3933                           
  3934                           ;main.c: 233: CCP1CON&= 0xf0;
  3935  0526  30F0               	movlw	240
  3936  0527  0597               	andwf	23,f	;volatile
  3937                           
  3938                           ;main.c: 235: T2CON=0x04;
  3939  0528  3004               	movlw	4
  3940  0529  0092               	movwf	18	;volatile
  3941                           
  3942                           ;main.c: 236: PR2 = ucPulseFrequency;
  3943  052A  0852               	movf	pwm_start@ucPulseFrequency,w
  3944  052B  1683               	bsf	3,5	;RP0=1, select bank1
  3945  052C  0092               	movwf	18	;volatile
  3946                           
  3947                           ;main.c: 237: CCPR1L = ucPulseWidth;
  3948  052D  1283               	bcf	3,5	;RP0=0, select bank0
  3949  052E  0853               	movf	pwm_start@ucPulseWidth,w
  3950  052F  0095               	movwf	21	;volatile
  3951                           
  3952                           ;main.c: 238: CCP1CON=0x00;
  3953  0530  0197               	clrf	23	;volatile
  3954                           
  3955                           ;main.c: 240: TRISB2=0;
  3956  0531  1683               	bsf	3,5	;RP0=1, select bank1
  3957  0532  300C               	movlw	12
  3958  0533  1106               	bcf	6,2
  3959                           
  3960                           ;main.c: 241: PBOD2 = 0;
  3961  0534  1703               	bsf	3,6	;RP1=1, select bank3
  3962  0535  1108               	bcf	8,2
  3963                           
  3964                           ;main.c: 243: CCP1CON|= 0x0c;
  3965  0536  1283               	bcf	3,5	;RP0=0, select bank0
  3966  0537  1303               	bcf	3,6	;RP1=0, select bank0
  3967  0538  0497               	iorwf	23,f	;volatile
  3968  0539  0008               	return
  3969  053A                     __end_of_pwm_start:	
  3970                           
  3971                           	psect	text1251
  3972  0013                     __ptext1251:	
  3973 ;; =============== function _initPB3 ends ============
  3974                           
  3975                           
  3976 ;; *************** function _ISR *****************
  3977 ;; Defined at:
  3978 ;;		line 603 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3979 ;; Parameters:    Size  Location     Type
  3980 ;;		None
  3981 ;; Auto vars:     Size  Location     Type
  3982 ;;		None
  3983 ;; Return value:  Size  Location     Type
  3984 ;;		None               void
  3985 ;; Registers used:
  3986 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3987 ;; Tracked objects:
  3988 ;;		On entry : 0/0
  3989 ;;		On exit  : 60/0
  3990 ;;		Unchanged: FFE00/0
  3991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3992 ;;      Params:         0       0       0       0       0
  3993 ;;      Locals:         0       0       0       0       0
  3994 ;;      Temps:          4       0       0       0       0
  3995 ;;      Totals:         4       0       0       0       0
  3996 ;;Total ram usage:        4 bytes
  3997 ;; Hardware stack levels used:    1
  3998 ;; Hardware stack levels required when called:    2
  3999 ;; This function calls:
  4000 ;;		i1_setAD_ConvertFlag
  4001 ;;		_adc_get
  4002 ;;		_vPutSampleDataIntoTable
  4003 ;; This function is called by:
  4004 ;;		Interrupt level 1
  4005 ;; This function uses a non-reentrant model
  4006 ;;
  4007  0013                     _ISR:	
  4008                           
  4009                           ;common.c: 604: static unsigned char ucTimer1sCnt = 0;
  4010                           ;common.c: 607: if(TMR1IF == 1)
  4011  0013  1C0C               	btfss	12,0
  4012  0014  2851               	goto	i1l3762
  4013  0015  3064               	movlw	100
  4014                           
  4015                           ;common.c: 608: {
  4016                           ;common.c: 609: TMR1IF = 0 ;
  4017  0016  100C               	bcf	12,0
  4018                           
  4019                           ;common.c: 610: timer.timer10msStopWatch++;
  4020  0017  0AB4               	incf	_timer,f
  4021                           
  4022                           ;common.c: 611: ucTimer1sCnt++;
  4023  0018  0AAC               	incf	ISR@ucTimer1sCnt,f
  4024                           
  4025                           ;common.c: 615: if(ucTimer1sCnt >= 100)
  4026  0019  022C               	subwf	ISR@ucTimer1sCnt,w
  4027  001A  1C03               	skipc
  4028  001B  2851               	goto	i1l3762
  4029                           
  4030                           ;common.c: 616: {
  4031                           ;common.c: 617: ucTimer1sCnt = 0;
  4032  001C  01AC               	clrf	ISR@ucTimer1sCnt
  4033                           
  4034                           ;common.c: 618: if(uiBigTimer > 0)
  4035  001D  0821               	movf	_uiBigTimer+1,w
  4036  001E  0420               	iorwf	_uiBigTimer,w
  4037  001F  1903               	skipnz
  4038  0020  2827               	goto	i1l1661
  4039                           
  4040                           ;common.c: 619: uiBigTimer--;
  4041  0021  3001               	movlw	1
  4042  0022  02A0               	subwf	_uiBigTimer,f
  4043  0023  3000               	movlw	0
  4044  0024  1C03               	skipc
  4045  0025  03A1               	decf	_uiBigTimer+1,f
  4046  0026  02A1               	subwf	_uiBigTimer+1,f
  4047  0027                     i1l1661:	
  4048                           
  4049                           ;common.c: 621: if(uiSmallTimer)
  4050  0027  0825               	movf	_uiSmallTimer+1,w
  4051  0028  0424               	iorwf	_uiSmallTimer,w
  4052  0029  1903               	skipnz
  4053  002A  2831               	goto	i1l1662
  4054                           
  4055                           ;common.c: 622: uiSmallTimer--;
  4056  002B  3001               	movlw	1
  4057  002C  02A4               	subwf	_uiSmallTimer,f
  4058  002D  3000               	movlw	0
  4059  002E  1C03               	skipc
  4060  002F  03A5               	decf	_uiSmallTimer+1,f
  4061  0030  02A5               	subwf	_uiSmallTimer+1,f
  4062  0031                     i1l1662:	
  4063                           
  4064                           ;common.c: 624: if(uiTwentySecondsTimer)
  4065  0031  1683               	bsf	3,5	;RP0=1, select bank1
  4066  0032  0821               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  4067  0033  0420               	iorwf	_uiTwentySecondsTimer^(0+128),w
  4068  0034  1903               	skipnz
  4069  0035  283C               	goto	i1l1663
  4070                           
  4071                           ;common.c: 625: uiTwentySecondsTimer--;
  4072  0036  3001               	movlw	1
  4073  0037  02A0               	subwf	_uiTwentySecondsTimer^(0+128),f
  4074  0038  3000               	movlw	0
  4075  0039  1C03               	skipc
  4076  003A  03A1               	decf	(_uiTwentySecondsTimer+1)^(0+128),f
  4077  003B  02A1               	subwf	(_uiTwentySecondsTimer+1)^(0+128),f
  4078  003C                     i1l1663:	
  4079                           
  4080                           ;common.c: 627: if(uiTwentyMinTimer)
  4081  003C  1283               	bcf	3,5	;RP0=0, select bank0
  4082  003D  0827               	movf	_uiTwentyMinTimer+1,w
  4083  003E  0426               	iorwf	_uiTwentyMinTimer,w
  4084  003F  1903               	skipnz
  4085  0040  2847               	goto	i1l1664
  4086                           
  4087                           ;common.c: 628: uiTwentyMinTimer--;
  4088  0041  3001               	movlw	1
  4089  0042  02A6               	subwf	_uiTwentyMinTimer,f
  4090  0043  3000               	movlw	0
  4091  0044  1C03               	skipc
  4092  0045  03A7               	decf	_uiTwentyMinTimer+1,f
  4093  0046  02A7               	subwf	_uiTwentyMinTimer+1,f
  4094  0047                     i1l1664:	
  4095                           
  4096                           ;common.c: 630: if( uiOneHourTimer )
  4097  0047  0823               	movf	_uiOneHourTimer+1,w
  4098  0048  0422               	iorwf	_uiOneHourTimer,w
  4099  0049  1903               	skipnz
  4100  004A  2851               	goto	i1l3762
  4101                           
  4102                           ;common.c: 631: uiOneHourTimer--;
  4103  004B  3001               	movlw	1
  4104  004C  02A2               	subwf	_uiOneHourTimer,f
  4105  004D  3000               	movlw	0
  4106  004E  1C03               	skipc
  4107  004F  03A3               	decf	_uiOneHourTimer+1,f
  4108  0050  02A3               	subwf	_uiOneHourTimer+1,f
  4109  0051                     i1l3762:	
  4110                           
  4111                           ;common.c: 632: }
  4112                           ;common.c: 633: }
  4113                           ;common.c: 635: if(ADIF)
  4114  0051  1D0D               	btfss	13,2
  4115  0052  286C               	goto	i1l1669
  4116  0053  3001               	movlw	1
  4117                           
  4118                           ;common.c: 636: {
  4119                           ;common.c: 638: ADIF=0;
  4120  0054  110D               	bcf	13,2
  4121                           
  4122                           ;common.c: 639: setAD_ConvertFlag(1);
  4123  0055  2084  118A         	fcall	i1_setAD_ConvertFlag
  4124                           
  4125                           ;common.c: 641: if(sampleChannelSelect == 12)
  4126  0057  0859               	movf	_sampleChannelSelect,w
  4127  0058  3A0C               	xorlw	12
  4128  0059  1D03               	skipz
  4129  005A  2863               	goto	i1l3772
  4130                           
  4131                           ;common.c: 642: {
  4132                           ;common.c: 645: vPutSampleDataIntoTable(adc_get(),12);
  4133  005B  2079  118A         	fcall	_adc_get
  4134  005D  0871               	movf	?_adc_get+1,w
  4135  005E  00F7               	movwf	?_vPutSampleDataIntoTable+1
  4136  005F  0870               	movf	?_adc_get,w
  4137  0060  00F6               	movwf	?_vPutSampleDataIntoTable
  4138  0061  300C               	movlw	12
  4139  0062  286A               	goto	L12
  4140  0063                     i1l3772:	
  4141                           ;common.c: 649: }
  4142                           
  4143                           
  4144                           ;common.c: 650: else
  4145                           ;common.c: 651: {
  4146                           ;common.c: 655: vPutSampleDataIntoTable(adc_get(),13);
  4147  0063  2079  118A         	fcall	_adc_get
  4148  0065  0871               	movf	?_adc_get+1,w
  4149  0066  00F7               	movwf	?_vPutSampleDataIntoTable+1
  4150  0067  0870               	movf	?_adc_get,w
  4151  0068  00F6               	movwf	?_vPutSampleDataIntoTable
  4152  0069  300D               	movlw	13
  4153  006A                     L12:	
  4154  006A  00F8               	movwf	?_vPutSampleDataIntoTable+2
  4155  006B  2087               	fcall	_vPutSampleDataIntoTable
  4156  006C                     i1l1669:	
  4157  006C  087C               	movf	??_ISR+3,w
  4158  006D  1283               	bcf	3,5	;RP0=0, select bank0
  4159  006E  1303               	bcf	3,6	;RP1=0, select bank0
  4160  006F  00FF               	movwf	127
  4161  0070  087B               	movf	??_ISR+2,w
  4162  0071  008A               	movwf	10
  4163  0072  087A               	movf	??_ISR+1,w
  4164  0073  0084               	movwf	4
  4165  0074  0E79               	swapf	??_ISR^(0+-128),w
  4166  0075  0083               	movwf	3
  4167  0076  0EFE               	swapf	126,f
  4168  0077  0E7E               	swapf	126,w
  4169  0078  0009               	retfie
  4170  0079                     __end_of_ISR:	
  4171  0079                     __ptext1254:	
  4172 ;; =============== function i1_setAD_ConvertFlag ends ============
  4173                           
  4174                           
  4175 ;; *************** function _adc_get *****************
  4176 ;; Defined at:
  4177 ;;		line 106 in file "D:\develop\AK7030-good\AK7030-OTP\periph.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;		None
  4180 ;; Auto vars:     Size  Location     Type
  4181 ;;  val             2    2[COMMON] unsigned int 
  4182 ;; Return value:  Size  Location     Type
  4183 ;;                  2    0[COMMON] unsigned int 
  4184 ;; Registers used:
  4185 ;;		wreg
  4186 ;; Tracked objects:
  4187 ;;		On entry : 60/0
  4188 ;;		On exit  : 60/20
  4189 ;;		Unchanged: FFF9F/0
  4190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4191 ;;      Params:         2       0       0       0       0
  4192 ;;      Locals:         2       0       0       0       0
  4193 ;;      Temps:          0       0       0       0       0
  4194 ;;      Totals:         4       0       0       0       0
  4195 ;;Total ram usage:        4 bytes
  4196 ;; Hardware stack levels used:    1
  4197 ;; This function calls:
  4198 ;;		Nothing
  4199 ;; This function is called by:
  4200 ;;		_ISR
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203  0079                     _adc_get:	
  4204                           
  4205                           ;periph.c: 107: unsigned int val;
  4206                           ;periph.c: 108: val = (ADRESH<<8) | ADRESL;
  4207                           
  4208                           ; Regs used in _adc_get: [wreg]
  4209  0079  081E               	movf	30,w	;volatile
  4210  007A  00F3               	movwf	adc_get@val+1
  4211  007B  01F2               	clrf	adc_get@val
  4212  007C  1683               	bsf	3,5	;RP0=1, select bank1
  4213  007D  081E               	movf	30,w	;volatile
  4214  007E  04F2               	iorwf	adc_get@val,f
  4215                           
  4216                           ;periph.c: 109: return val;
  4217  007F  0873               	movf	adc_get@val+1,w
  4218  0080  00F1               	movwf	?_adc_get+1
  4219  0081  0872               	movf	adc_get@val,w
  4220  0082  00F0               	movwf	?_adc_get
  4221  0083  0008               	return
  4222  0084                     __end_of_adc_get:	
  4223  0084                     __ptext1253:	
  4224 ;; =============== function _vPutSampleDataIntoTable ends ============
  4225                           
  4226                           
  4227 ;; *************** function i1_setAD_ConvertFlag *****************
  4228 ;; Defined at:
  4229 ;;		line 339 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  4230 ;; Parameters:    Size  Location     Type
  4231 ;;  setAD_Conver    1    wreg     unsigned char 
  4232 ;; Auto vars:     Size  Location     Type
  4233 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  4234 ;; Return value:  Size  Location     Type
  4235 ;;		None               void
  4236 ;; Registers used:
  4237 ;;		wreg
  4238 ;; Tracked objects:
  4239 ;;		On entry : 60/0
  4240 ;;		On exit  : 60/0
  4241 ;;		Unchanged: FFF9F/0
  4242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4243 ;;      Params:         0       0       0       0       0
  4244 ;;      Locals:         1       0       0       0       0
  4245 ;;      Temps:          0       0       0       0       0
  4246 ;;      Totals:         1       0       0       0       0
  4247 ;;Total ram usage:        1 bytes
  4248 ;; Hardware stack levels used:    1
  4249 ;; This function calls:
  4250 ;;		Nothing
  4251 ;; This function is called by:
  4252 ;;		_ISR
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255  0084                     i1_setAD_ConvertFlag:	
  4256                           
  4257                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  4258                           ;i1setAD_ConvertFlag@flag stored from wreg
  4259  0084  00F0               	movwf	i1setAD_ConvertFlag@flag
  4260                           
  4261                           ;common.c: 340: adc_convert_flag = flag;
  4262  0085  00AD               	movwf	_adc_convert_flag
  4263  0086  0008               	return
  4264  0087                     __end_ofi1_setAD_ConvertFlag:	
  4265  0087                     __ptext1252:	
  4266 ;; =============== function _ISR ends ============
  4267                           
  4268                           
  4269 ;; *************** function _vPutSampleDataIntoTable *****************
  4270 ;; Defined at:
  4271 ;;		line 164 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  4272 ;; Parameters:    Size  Location     Type
  4273 ;;  uiSampleData    2    6[COMMON] unsigned int 
  4274 ;;  channel         1    8[COMMON] unsigned char 
  4275 ;; Auto vars:     Size  Location     Type
  4276 ;;  uiDeviationV    2   17[BANK0 ] unsigned int 
  4277 ;;  uiAbstractVa    2   15[BANK0 ] unsigned int 
  4278 ;;  i               2   19[BANK0 ] int 
  4279 ;; Return value:  Size  Location     Type
  4280 ;;		None               void
  4281 ;; Registers used:
  4282 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4283 ;; Tracked objects:
  4284 ;;		On entry : 60/20
  4285 ;;		On exit  : 0/0
  4286 ;;		Unchanged: FFE00/0
  4287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4288 ;;      Params:         3       0       0       0       0
  4289 ;;      Locals:         0       6       0       0       0
  4290 ;;      Temps:          0       0       0       0       0
  4291 ;;      Totals:         3       6       0       0       0
  4292 ;;Total ram usage:        9 bytes
  4293 ;; Hardware stack levels used:    1
  4294 ;; Hardware stack levels required when called:    1
  4295 ;; This function calls:
  4296 ;;		_Filter
  4297 ;;		_getWaitResetFlag
  4298 ;;		_setPWM_Width
  4299 ;; This function is called by:
  4300 ;;		_ISR
  4301 ;; This function uses a non-reentrant model
  4302 ;;
  4303  0087                     _vPutSampleDataIntoTable:	
  4304                           
  4305                           ;common.c: 166: static unsigned char ucCh12Length = 0;
  4306                           ;common.c: 168: static unsigned char ucCh13Length = 0;
  4307                           ;common.c: 170: static unsigned char ucChannelFourteenthLength = 0;
  4308                           ;common.c: 171: static unsigned int uiCalWidthArrayNew = 0;
  4309                           ;common.c: 172: static unsigned int uiCalWidthArrayOld = 0;
  4310                           ;common.c: 173: if(channel == 12)
  4311                           
  4312                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  4313  0087  0878               	movf	vPutSampleDataIntoTable@channel,w
  4314  0088  3A0C               	xorlw	12
  4315  0089  1D03               	skipz
  4316  008A  290A               	goto	i1l3684
  4317                           
  4318                           ;common.c: 174: {
  4319                           ;common.c: 175: if(ucCh12Length < 3)
  4320  008B  3003               	movlw	3
  4321  008C  027D               	subwf	vPutSampleDataIntoTable@ucCh12Length,w
  4322  008D  1803               	skipnc
  4323  008E  2904               	goto	i1l3680
  4324                           
  4325                           ;common.c: 176: {
  4326                           ;common.c: 177: uiSampleCh12[ucCh12Length] = uiSampleData;
  4327  008F  1003               	clrc
  4328  0090  0D7D               	rlf	vPutSampleDataIntoTable@ucCh12Length,w
  4329  0091  3EBC               	addlw	_uiSampleCh12& (0+255)
  4330  0092  21EC  118A         	fcall	PL2	;call to abstracted procedure
  4331                           
  4332                           ;common.c: 179: ucCh12Length++;
  4333  0094  0AFD               	incf	vPutSampleDataIntoTable@ucCh12Length,f
  4334                           
  4335                           ;common.c: 181: if( 3 == ucCh12Length )
  4336  0095  087D               	movf	vPutSampleDataIntoTable@ucCh12Length,w
  4337  0096  3A03               	xorlw	3
  4338  0097  1D03               	skipz
  4339  0098  0008               	return
  4340  0099  30BC               	movlw	_uiSampleCh12& (0+255)
  4341                           
  4342                           ;common.c: 182: {
  4343                           ;common.c: 183: ucCh12Length = 0;
  4344  009A  01FD               	clrf	vPutSampleDataIntoTable@ucCh12Length
  4345                           
  4346                           ;common.c: 187: static unsigned char bInitArrayFlag = 0;
  4347                           ;common.c: 189: static unsigned int uiCalWidthArray[1],uiCalWidthCnt = 0;
  4348                           ;common.c: 191: static unsigned char uiInitWidth = 75;
  4349                           ;common.c: 193: uiCalWidthArrayNew = Filter(uiSampleCh12);
  4350  009B  215D  118A         	fcall	_Filter
  4351  009D  0871               	movf	?_Filter+1,w
  4352  009E  00A9               	movwf	vPutSampleDataIntoTable@uiCalWidthArrayNew+1
  4353  009F  0870               	movf	?_Filter,w
  4354  00A0  00A8               	movwf	vPutSampleDataIntoTable@uiCalWidthArrayNew
  4355                           
  4356                           ;common.c: 197: if( uiCalWidthArrayNew >= uiCalWidthArrayOld)
  4357  00A1  082B               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld+1,w
  4358  00A2  0229               	subwf	vPutSampleDataIntoTable@uiCalWidthArrayNew+1,w
  4359  00A3  1D03               	skipz
  4360  00A4  28A7               	goto	u125_25
  4361  00A5  082A               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld,w
  4362  00A6  0228               	subwf	vPutSampleDataIntoTable@uiCalWidthArrayNew,w
  4363  00A7                     u125_25:	
  4364  00A7  1C03               	skipc
  4365  00A8  28B1               	goto	i1l3652
  4366                           
  4367                           ;common.c: 198: uiAbstractValue = uiCalWidthArrayNew - uiCalWidthArrayOld;
  4368  00A9  0829               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew+1,w
  4369  00AA  00CD               	movwf	vPutSampleDataIntoTable@uiAbstractValue+1
  4370  00AB  0828               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew,w
  4371  00AC  00CC               	movwf	vPutSampleDataIntoTable@uiAbstractValue
  4372  00AD  082A               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld,w
  4373  00AE  02CC               	subwf	vPutSampleDataIntoTable@uiAbstractValue,f
  4374  00AF  082B               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld+1,w
  4375  00B0  28B8               	goto	L13
  4376  00B1                     i1l3652:	
  4377                           
  4378                           ;common.c: 199: else
  4379                           ;common.c: 200: uiAbstractValue = uiCalWidthArrayOld - uiCalWidthArrayNew;
  4380  00B1  082B               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld+1,w
  4381  00B2  00CD               	movwf	vPutSampleDataIntoTable@uiAbstractValue+1
  4382  00B3  082A               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld,w
  4383  00B4  00CC               	movwf	vPutSampleDataIntoTable@uiAbstractValue
  4384  00B5  0828               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew,w
  4385  00B6  02CC               	subwf	vPutSampleDataIntoTable@uiAbstractValue,f
  4386  00B7  0829               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew+1,w
  4387  00B8                     L13:	
  4388  00B8  1C03               	skipc
  4389  00B9  03CD               	decf	vPutSampleDataIntoTable@uiAbstractValue+1,f
  4390  00BA  02CD               	subwf	vPutSampleDataIntoTable@uiAbstractValue+1,f
  4391                           
  4392                           ;common.c: 202: uiDeviationValue = ((uiCalWidthArrayNew+uiCalWidthArrayOld)>>1)+ uiAbstr
      +                          actValue;
  4393  00BB  0829               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew+1,w
  4394  00BC  00CF               	movwf	vPutSampleDataIntoTable@uiDeviationValue+1
  4395  00BD  0828               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew,w
  4396  00BE  00CE               	movwf	vPutSampleDataIntoTable@uiDeviationValue
  4397  00BF  082A               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld,w
  4398  00C0  07CE               	addwf	vPutSampleDataIntoTable@uiDeviationValue,f
  4399  00C1  1803               	skipnc
  4400  00C2  0ACF               	incf	vPutSampleDataIntoTable@uiDeviationValue+1,f
  4401  00C3  082B               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld+1,w
  4402  00C4  07CF               	addwf	vPutSampleDataIntoTable@uiDeviationValue+1,f
  4403  00C5  1003               	clrc
  4404  00C6  0CCF               	rrf	vPutSampleDataIntoTable@uiDeviationValue+1,f
  4405  00C7  0CCE               	rrf	vPutSampleDataIntoTable@uiDeviationValue,f
  4406  00C8  084C               	movf	vPutSampleDataIntoTable@uiAbstractValue,w
  4407  00C9  07CE               	addwf	vPutSampleDataIntoTable@uiDeviationValue,f
  4408  00CA  1803               	skipnc
  4409  00CB  0ACF               	incf	vPutSampleDataIntoTable@uiDeviationValue+1,f
  4410  00CC  084D               	movf	vPutSampleDataIntoTable@uiAbstractValue+1,w
  4411  00CD  07CF               	addwf	vPutSampleDataIntoTable@uiDeviationValue+1,f
  4412                           
  4413                           ;common.c: 204: if(uiCalWidthCnt>400)
  4414  00CE  3001               	movlw	1
  4415  00CF  1683               	bsf	3,5	;RP0=1, select bank1
  4416  00D0  022B               	subwf	(vPutSampleDataIntoTable@uiCalWidthCnt+1)^(0+128),w
  4417  00D1  3091               	movlw	145
  4418  00D2  1903               	skipnz
  4419  00D3  022A               	subwf	vPutSampleDataIntoTable@uiCalWidthCnt^(0+128),w
  4420  00D4  1C03               	skipc
  4421  00D5  28DB               	goto	i1l1534
  4422                           
  4423                           ;common.c: 205: uiDeviationValue =400;
  4424  00D6  3090               	movlw	144
  4425  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  4426  00D8  00CE               	movwf	vPutSampleDataIntoTable@uiDeviationValue
  4427  00D9  3001               	movlw	1
  4428  00DA  00CF               	movwf	vPutSampleDataIntoTable@uiDeviationValue+1
  4429  00DB                     i1l1534:	
  4430                           
  4431                           ;common.c: 208: uiCalWidthArrayOld=uiCalWidthArrayNew;
  4432  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  4433  00DC  0829               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew+1,w
  4434  00DD  00AB               	movwf	vPutSampleDataIntoTable@uiCalWidthArrayOld+1
  4435  00DE  0828               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew,w
  4436  00DF  00AA               	movwf	vPutSampleDataIntoTable@uiCalWidthArrayOld
  4437                           
  4438                           ;common.c: 213: if(uiDeviationValue > (312))
  4439  00E0  3001               	movlw	1
  4440  00E1  024F               	subwf	vPutSampleDataIntoTable@uiDeviationValue+1,w
  4441  00E2  3039               	movlw	57
  4442  00E3  1903               	skipnz
  4443  00E4  024E               	subwf	vPutSampleDataIntoTable@uiDeviationValue,w
  4444  00E5  1C03               	skipc
  4445  00E6  28E9               	goto	i1l3664
  4446                           
  4447                           ;common.c: 214: {
  4448                           ;common.c: 217: uiInitWidth++;
  4449  00E7  0ADA               	incf	vPutSampleDataIntoTable@uiInitWidth,f
  4450                           
  4451                           ;common.c: 219: }
  4452  00E8  28F0               	goto	i1l3668
  4453  00E9                     i1l3664:	
  4454                           
  4455                           ;common.c: 220: else if(uiDeviationValue < (312))
  4456  00E9  3001               	movlw	1
  4457  00EA  024F               	subwf	vPutSampleDataIntoTable@uiDeviationValue+1,w
  4458  00EB  3038               	movlw	56
  4459  00EC  1903               	skipnz
  4460  00ED  024E               	subwf	vPutSampleDataIntoTable@uiDeviationValue,w
  4461  00EE  1C03               	btfss	3,0
  4462                           
  4463                           ;common.c: 221: {
  4464                           ;common.c: 224: uiInitWidth--;
  4465  00EF  03DA               	decf	vPutSampleDataIntoTable@uiInitWidth,f
  4466  00F0                     i1l3668:	
  4467                           ;common.c: 226: }
  4468                           
  4469                           
  4470                           ;common.c: 230: if(uiInitWidth > 249)
  4471  00F0  30FA               	movlw	250
  4472  00F1  025A               	subwf	vPutSampleDataIntoTable@uiInitWidth,w
  4473  00F2  1C03               	skipc
  4474  00F3  28F6               	goto	i1l1539
  4475                           
  4476                           ;common.c: 231: uiInitWidth = 249;
  4477  00F4  30F9               	movlw	249
  4478  00F5  00DA               	movwf	vPutSampleDataIntoTable@uiInitWidth
  4479  00F6                     i1l1539:	
  4480                           
  4481                           ;common.c: 233: if(uiInitWidth < 75)
  4482  00F6  304B               	movlw	75
  4483  00F7  025A               	subwf	vPutSampleDataIntoTable@uiInitWidth,w
  4484  00F8  1803               	skipnc
  4485  00F9  28FC               	goto	i1l3674
  4486                           
  4487                           ;common.c: 234: uiInitWidth = 75;
  4488  00FA  304B               	movlw	75
  4489  00FB  00DA               	movwf	vPutSampleDataIntoTable@uiInitWidth
  4490  00FC                     i1l3674:	
  4491                           
  4492                           ;common.c: 61: return bWaitResetFlag;
  4493                           
  4494                           ; Regs used in _getWaitResetFlag: [wreg]
  4495                           
  4496                           ;common.c: 238: if( 1 == getWaitResetFlag())
  4497  00FC  0832               	movf	_bWaitResetFlag,w
  4498  00FD  3A01               	xorlw	1
  4499  00FE  1D03               	skipz
  4500  00FF  2902               	goto	i1l3678
  4501                           
  4502                           ;common.c: 239: uiInitWidth = 150;
  4503  0100  3096               	movlw	150
  4504  0101  00DA               	movwf	vPutSampleDataIntoTable@uiInitWidth
  4505  0102                     i1l3678:	
  4506                           
  4507                           ;common.c: 241: setPWM_Width(uiInitWidth);
  4508  0102  085A               	movf	vPutSampleDataIntoTable@uiInitWidth,w
  4509  0103  29E3               	ljmp	_setPWM_Width
  4510  0104                     i1l3680:	
  4511                           
  4512                           ;common.c: 246: else
  4513                           ;common.c: 247: {
  4514                           ;common.c: 248: ucCh12Length = 0;
  4515  0104  01FD               	clrf	vPutSampleDataIntoTable@ucCh12Length
  4516                           
  4517                           ;common.c: 250: uiSampleCh12[ucCh12Length] = uiSampleData;
  4518  0105  1003               	clrc
  4519  0106  0D7D               	rlf	vPutSampleDataIntoTable@ucCh12Length,w
  4520  0107  3EBC               	addlw	_uiSampleCh12& (0+255)
  4521  0108  21EC               	fcall	PL2	;call to abstracted procedure
  4522  0109  0008               	return
  4523  010A                     i1l3684:	
  4524                           
  4525                           ;common.c: 253: else if(channel == 13)
  4526  010A  0878               	movf	vPutSampleDataIntoTable@channel,w
  4527  010B  3A0D               	xorlw	13
  4528  010C  1D03               	skipz
  4529  010D  291F               	goto	i1l3696
  4530                           
  4531                           ;common.c: 254: {
  4532                           ;common.c: 255: if(ucCh13Length < 8)
  4533  010E  3008               	movlw	8
  4534  010F  1283               	bcf	3,5	;RP0=0, select bank0
  4535  0110  023B               	subwf	vPutSampleDataIntoTable@ucCh13Length,w
  4536  0111  1803               	skipnc
  4537  0112  2919               	goto	i1l3692
  4538                           
  4539                           ;common.c: 256: {
  4540                           ;common.c: 257: uiSampleCh13[ucCh13Length] = uiSampleData;
  4541  0113  1003               	clrc
  4542  0114  0D3B               	rlf	vPutSampleDataIntoTable@ucCh13Length,w
  4543  0115  3EAC               	addlw	_uiSampleCh13& (0+255)
  4544  0116  21EC               	fcall	PL2	;call to abstracted procedure
  4545                           
  4546                           ;common.c: 259: ucCh13Length++;
  4547  0117  0ABB               	incf	vPutSampleDataIntoTable@ucCh13Length,f
  4548                           
  4549                           ;common.c: 260: }
  4550  0118  0008               	return
  4551  0119                     i1l3692:	
  4552                           
  4553                           ;common.c: 261: else
  4554                           ;common.c: 262: {
  4555                           ;common.c: 263: ucCh13Length = 0;
  4556  0119  01BB               	clrf	vPutSampleDataIntoTable@ucCh13Length
  4557                           
  4558                           ;common.c: 265: uiSampleCh13[ucCh13Length] = uiSampleData;
  4559  011A  1003               	clrc
  4560  011B  0D3B               	rlf	vPutSampleDataIntoTable@ucCh13Length,w
  4561  011C  3EAC               	addlw	_uiSampleCh13& (0+255)
  4562  011D  21EC               	fcall	PL2	;call to abstracted procedure
  4563  011E  0008               	return
  4564  011F                     i1l3696:	
  4565                           
  4566                           ;common.c: 268: else if(channel == 14)
  4567  011F  0878               	movf	vPutSampleDataIntoTable@channel,w
  4568  0120  3A0E               	xorlw	14
  4569  0121  1D03               	skipz
  4570  0122  2934               	goto	i1l3708
  4571                           
  4572                           ;common.c: 269: {
  4573                           ;common.c: 270: if(ucChannelFourteenthLength < 3)
  4574  0123  3003               	movlw	3
  4575  0124  1283               	bcf	3,5	;RP0=0, select bank0
  4576  0125  023C               	subwf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4577  0126  1803               	skipnc
  4578  0127  292E               	goto	i1l3704
  4579                           
  4580                           ;common.c: 271: {
  4581                           ;common.c: 272: uiSampleChannelFourteenth[ucChannelFourteenthLength] = uiSampleData;
  4582  0128  1003               	clrc
  4583  0129  0D3C               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4584  012A  3EC2               	addlw	_uiSampleChannelFourteenth& (0+255)
  4585  012B  21EC               	fcall	PL2	;call to abstracted procedure
  4586                           
  4587                           ;common.c: 274: ucChannelFourteenthLength++;
  4588  012C  0ABC               	incf	vPutSampleDataIntoTable@ucChannelFourteenthLength,f
  4589                           
  4590                           ;common.c: 275: }
  4591  012D  0008               	return
  4592  012E                     i1l3704:	
  4593                           
  4594                           ;common.c: 276: else
  4595                           ;common.c: 277: {
  4596                           ;common.c: 278: ucChannelFourteenthLength = 0;
  4597  012E  01BC               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4598                           
  4599                           ;common.c: 280: uiSampleCh13[ucChannelFourteenthLength] = uiSampleData;
  4600  012F  1003               	clrc
  4601  0130  0D3C               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4602  0131  3EAC               	addlw	_uiSampleCh13& (0+255)
  4603  0132  21EC               	fcall	PL2	;call to abstracted procedure
  4604  0133  0008               	return
  4605  0134                     i1l3708:	
  4606                           
  4607                           ;common.c: 283: else
  4608                           ;common.c: 284: {
  4609                           ;common.c: 285: ucCh12Length = 0;
  4610  0134  01FD               	clrf	vPutSampleDataIntoTable@ucCh12Length
  4611                           
  4612                           ;common.c: 287: ucCh13Length = 0;
  4613  0135  1283               	bcf	3,5	;RP0=0, select bank0
  4614  0136  01BB               	clrf	vPutSampleDataIntoTable@ucCh13Length
  4615                           
  4616                           ;common.c: 289: ucChannelFourteenthLength = 0;
  4617  0137  01BC               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4618                           
  4619                           ;common.c: 291: for(int i = 0;i < 3; i++)
  4620  0138  01D0               	clrf	vPutSampleDataIntoTable@i
  4621  0139  01D1               	clrf	vPutSampleDataIntoTable@i+1
  4622  013A                     i1l3714:	
  4623                           
  4624                           ;common.c: 292: {
  4625                           ;common.c: 293: uiSampleCh12[i] = 0;
  4626  013A  1283               	bcf	3,5	;RP0=0, select bank0
  4627  013B  1303               	bcf	3,6	;RP1=0, select bank0
  4628  013C  1003               	clrc
  4629  013D  0D50               	rlf	vPutSampleDataIntoTable@i,w
  4630  013E  3EBC               	addlw	_uiSampleCh12& (0+255)
  4631  013F  0084               	movwf	4
  4632  0140  1383               	bcf	3,7	;select IRP bank1
  4633                           
  4634                           ;common.c: 295: uiSampleCh13[i] = 0;
  4635  0141  220A  118A         	fcall	PL10	;call to abstracted procedure
  4636  0143  3EAC               	addlw	_uiSampleCh13& (0+255)
  4637  0144  0084               	movwf	4
  4638                           
  4639                           ;common.c: 297: uiSampleChannelFourteenth[i] = 0;
  4640  0145  220A  118A         	fcall	PL10	;call to abstracted procedure
  4641  0147  3EC2               	addlw	_uiSampleChannelFourteenth& (0+255)
  4642  0148  0084               	movwf	4
  4643  0149  0180               	clrf	0
  4644  014A  0A84               	incf	4,f
  4645  014B  0180               	clrf	0
  4646  014C  0AD0               	incf	vPutSampleDataIntoTable@i,f
  4647  014D  1903               	skipnz
  4648  014E  0AD1               	incf	vPutSampleDataIntoTable@i+1,f
  4649  014F  0851               	movf	vPutSampleDataIntoTable@i+1,w
  4650  0150  3A80               	xorlw	128
  4651  0151  00FF               	movwf	127
  4652  0152  3080               	movlw	128
  4653  0153  027F               	subwf	127,w
  4654  0154  1D03               	skipz
  4655  0155  2958               	goto	u136_25
  4656  0156  3003               	movlw	3
  4657  0157  0250               	subwf	vPutSampleDataIntoTable@i,w
  4658  0158                     u136_25:	
  4659  0158  1803               	btfsc	3,0
  4660  0159  0008               	return
  4661  015A  293A               	goto	i1l3714
  4662  015B                     __end_of_vPutSampleDataIntoTable:	
  4663  015B                     __ptext1257:	
  4664 ;; =============== function _setPWM_Width ends ============
  4665                           
  4666                           
  4667 ;; *************** function _getWaitResetFlag *****************
  4668 ;; Defined at:
  4669 ;;		line 60 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  4670 ;; Parameters:    Size  Location     Type
  4671 ;;		None
  4672 ;; Auto vars:     Size  Location     Type
  4673 ;;		None
  4674 ;; Return value:  Size  Location     Type
  4675 ;;                  1    wreg      unsigned char 
  4676 ;; Registers used:
  4677 ;;		wreg
  4678 ;; Tracked objects:
  4679 ;;		On entry : 160/0
  4680 ;;		On exit  : 160/0
  4681 ;;		Unchanged: FFE9F/0
  4682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4683 ;;      Params:         0       0       0       0       0
  4684 ;;      Locals:         0       0       0       0       0
  4685 ;;      Temps:          0       0       0       0       0
  4686 ;;      Totals:         0       0       0       0       0
  4687 ;;Total ram usage:        0 bytes
  4688 ;; Hardware stack levels used:    1
  4689 ;; This function calls:
  4690 ;;		Nothing
  4691 ;; This function is called by:
  4692 ;;		_vPutSampleDataIntoTable
  4693 ;; This function uses a non-reentrant model
  4694 ;;
  4695  015B                     _getWaitResetFlag:	
  4696                           
  4697                           ;common.c: 61: return bWaitResetFlag;
  4698                           
  4699                           ; Regs used in _getWaitResetFlag: [wreg]
  4700  015B  0832               	movf	_bWaitResetFlag,w
  4701  015C  0008               	return
  4702  015D                     __end_of_getWaitResetFlag:	
  4703  015D                     __ptext1255:	
  4704 ;; =============== function _adc_get ends ============
  4705                           
  4706                           
  4707 ;; *************** function _Filter *****************
  4708 ;; Defined at:
  4709 ;;		line 116 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  4710 ;; Parameters:    Size  Location     Type
  4711 ;;  tmpValue        1    wreg     PTR int 
  4712 ;;		 -> uiSampleChannelFourteenth(6), uiSampleCh12(6), 
  4713 ;; Auto vars:     Size  Location     Type
  4714 ;;  tmpValue        1    4[BANK0 ] PTR int 
  4715 ;;		 -> uiSampleChannelFourteenth(6), uiSampleCh12(6), 
  4716 ;;  cir             2   11[BANK0 ] int 
  4717 ;;  filter_buf      6    5[BANK0 ] unsigned int [3]
  4718 ;;  filter_sum      2    2[BANK0 ] unsigned int 
  4719 ;;  filter_temp     2    0[BANK0 ] unsigned int 
  4720 ;;  i               1   14[BANK0 ] unsigned char 
  4721 ;;  j               1   13[BANK0 ] unsigned char 
  4722 ;; Return value:  Size  Location     Type
  4723 ;;                  2    0[COMMON] unsigned int 
  4724 ;; Registers used:
  4725 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4726 ;; Tracked objects:
  4727 ;;		On entry : 160/20
  4728 ;;		On exit  : 160/0
  4729 ;;		Unchanged: FFE00/0
  4730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4731 ;;      Params:         2       0       0       0       0
  4732 ;;      Locals:         0      15       0       0       0
  4733 ;;      Temps:          4       0       0       0       0
  4734 ;;      Totals:         6      15       0       0       0
  4735 ;;Total ram usage:       21 bytes
  4736 ;; Hardware stack levels used:    1
  4737 ;; This function calls:
  4738 ;;		Nothing
  4739 ;; This function is called by:
  4740 ;;		_vPutSampleDataIntoTable
  4741 ;; This function uses a non-reentrant model
  4742 ;;
  4743  015D                     _Filter:	
  4744                           
  4745                           ; Regs used in _Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  4746                           ;Filter@tmpValue stored from wreg
  4747  015D  1283               	bcf	3,5	;RP0=0, select bank0
  4748  015E  00C1               	movwf	Filter@tmpValue
  4749  015F  01CA               	clrf	Filter@j
  4750                           
  4751                           ;common.c: 120: unsigned int filter_temp = 0, filter_sum = 0;
  4752  0160  01BD               	clrf	Filter@filter_temp
  4753  0161  01BE               	clrf	Filter@filter_temp+1
  4754  0162  01BF               	clrf	Filter@filter_sum
  4755  0163  01C0               	clrf	Filter@filter_sum+1
  4756                           
  4757                           ;common.c: 122: unsigned int filter_buf[3];
  4758                           ;common.c: 124: for(int cir = 0;cir < 3; cir++)
  4759  0164  01C8               	clrf	Filter@cir
  4760  0165  01C9               	clrf	Filter@cir+1
  4761  0166                     i1l3588:	
  4762                           
  4763                           ;common.c: 125: filter_buf[cir] = *tmpValue++;
  4764  0166  1283               	bcf	3,5	;RP0=0, select bank0
  4765  0167  1303               	bcf	3,6	;RP1=0, select bank0
  4766  0168  0841               	movf	Filter@tmpValue,w
  4767  0169  21F4  118A         	fcall	PL4	;call to abstracted procedure
  4768  016B  1003               	clrc
  4769  016C  0D48               	rlf	Filter@cir,w
  4770  016D  21FC  118A         	fcall	PL6	;call to abstracted procedure
  4771  016F  0AC1               	incf	Filter@tmpValue,f
  4772  0170  0AC1               	incf	Filter@tmpValue,f
  4773  0171  0AC8               	incf	Filter@cir,f
  4774  0172  1903               	skipnz
  4775  0173  0AC9               	incf	Filter@cir+1,f
  4776  0174  0849               	movf	Filter@cir+1,w
  4777  0175  3A80               	xorlw	128
  4778  0176  00FF               	movwf	127
  4779  0177  3080               	movlw	128
  4780  0178  027F               	subwf	127,w
  4781  0179  1D03               	skipz
  4782  017A  297D               	goto	u117_25
  4783  017B  3003               	movlw	3
  4784  017C  0248               	subwf	Filter@cir,w
  4785  017D                     u117_25:	
  4786  017D  1C03               	skipc
  4787  017E  2966               	goto	i1l3588
  4788                           
  4789                           ;common.c: 129: for(j = 0; j < 3 - 1; j++)
  4790  017F  1283               	bcf	3,5	;RP0=0, select bank0
  4791  0180  1303               	bcf	3,6	;RP1=0, select bank0
  4792  0181  01CA               	clrf	Filter@j
  4793                           
  4794                           ;common.c: 130: {
  4795                           ;common.c: 131: for(i = 0; i < 3 - 1 - j; i++)
  4796  0182  01CB               	clrf	Filter@i
  4797  0183                     i1l3610:	
  4798  0183  01F3               	clrf	??_Filter+1
  4799  0184  084A               	movf	Filter@j,w
  4800  0185  3C02               	sublw	2
  4801  0186  00F2               	movwf	??_Filter
  4802  0187  1C03               	skipc
  4803  0188  03F3               	decf	??_Filter+1,f
  4804  0189  0873               	movf	??_Filter+1,w
  4805  018A  3A80               	xorlw	128
  4806  018B  3C80               	sublw	128
  4807  018C  1D03               	skipz
  4808  018D  2990               	goto	u119_25
  4809  018E  0872               	movf	??_Filter,w
  4810  018F  024B               	subwf	Filter@i,w
  4811  0190                     u119_25:	
  4812  0190  1803               	btfsc	3,0
  4813  0191  29C5               	goto	i1l3612
  4814                           
  4815                           ;common.c: 132: {
  4816                           ;common.c: 133: if(filter_buf[i] > filter_buf[i + 1])
  4817  0192  1283               	bcf	3,5	;RP0=0, select bank0
  4818  0193  1303               	bcf	3,6	;RP1=0, select bank0
  4819  0194  1003               	clrc
  4820  0195  0D4B               	rlf	Filter@i,w
  4821  0196  3E42               	addlw	Filter@filter_buf& (0+255)
  4822  0197  21F4  118A         	fcall	PL4	;call to abstracted procedure
  4823  0199  2204  118A         	fcall	PL8	;call to abstracted procedure
  4824  019B  0800               	movf	0,w
  4825  019C  00F4               	movwf	??_Filter+2
  4826  019D  0A84               	incf	4,f
  4827  019E  0800               	movf	0,w
  4828  019F  00F5               	movwf	??_Filter+3
  4829  01A0  0873               	movf	??_Filter+1,w
  4830  01A1  0275               	subwf	??_Filter+3,w
  4831  01A2  1D03               	skipz
  4832  01A3  29A6               	goto	u118_25
  4833  01A4  0872               	movf	??_Filter,w
  4834  01A5  0274               	subwf	??_Filter+2,w
  4835  01A6                     u118_25:	
  4836  01A6  1803               	skipnc
  4837  01A7  29C3               	goto	i1l3608
  4838                           
  4839                           ;common.c: 134: {
  4840                           ;common.c: 136: filter_temp = filter_buf[i];
  4841  01A8  1003               	clrc
  4842  01A9  0D4B               	rlf	Filter@i,w
  4843  01AA  3E42               	addlw	Filter@filter_buf& (0+255)
  4844  01AB  0084               	movwf	4
  4845  01AC  0800               	movf	0,w
  4846  01AD  00BD               	movwf	Filter@filter_temp
  4847  01AE  0A84               	incf	4,f
  4848  01AF  0800               	movf	0,w
  4849  01B0  00BE               	movwf	Filter@filter_temp+1
  4850                           
  4851                           ;common.c: 138: filter_buf[i] = filter_buf[i + 1];
  4852  01B1  2204  118A         	fcall	PL8	;call to abstracted procedure
  4853  01B3  0800               	movf	0,w
  4854  01B4  00F2               	movwf	??_Filter
  4855  01B5  0A84               	incf	4,f
  4856  01B6  0800               	movf	0,w
  4857  01B7  00F3               	movwf	??_Filter+1
  4858  01B8  1003               	clrc
  4859  01B9  0D4B               	rlf	Filter@i,w
  4860  01BA  21FC  118A         	fcall	PL6	;call to abstracted procedure
  4861                           
  4862                           ;common.c: 140: filter_buf[i + 1] = filter_temp;
  4863  01BC  2204  118A         	fcall	PL8	;call to abstracted procedure
  4864  01BE  083D               	movf	Filter@filter_temp,w
  4865  01BF  0080               	movwf	0
  4866  01C0  0A84               	incf	4,f
  4867  01C1  083E               	movf	Filter@filter_temp+1,w
  4868  01C2  0080               	movwf	0
  4869  01C3                     i1l3608:	
  4870  01C3  0ACB               	incf	Filter@i,f
  4871  01C4  2983               	goto	i1l3610
  4872  01C5                     i1l3612:	
  4873  01C5  1283               	bcf	3,5	;RP0=0, select bank0
  4874  01C6  3002               	movlw	2
  4875  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  4876  01C8  0ACA               	incf	Filter@j,f
  4877  01C9  024A               	subwf	Filter@j,w
  4878                           
  4879                           ;common.c: 141: }
  4880                           ;common.c: 142: }
  4881                           ;common.c: 143: }
  4882                           ;common.c: 145: for(i = 1; i < 3 - 1; i++)
  4883  01CA  01CB               	clrf	Filter@i
  4884  01CB  1C03               	skipc
  4885  01CC  2983               	goto	i1l3610
  4886  01CD  0ACB               	incf	Filter@i,f
  4887                           
  4888                           ;common.c: 146: {
  4889                           ;common.c: 147: filter_sum += filter_buf[i];
  4890  01CE  1003               	clrc
  4891  01CF                     L14:	
  4892  01CF  0D4B               	rlf	Filter@i,w
  4893  01D0  3E42               	addlw	Filter@filter_buf& (0+255)
  4894  01D1  21F4  118A         	fcall	PL4	;call to abstracted procedure
  4895  01D3  0872               	movf	??_Filter,w
  4896  01D4  07BF               	addwf	Filter@filter_sum,f
  4897  01D5  1803               	skipnc
  4898  01D6  0AC0               	incf	Filter@filter_sum+1,f
  4899  01D7  0873               	movf	??_Filter+1,w
  4900  01D8  07C0               	addwf	Filter@filter_sum+1,f
  4901  01D9  3002               	movlw	2
  4902  01DA  0ACB               	incf	Filter@i,f
  4903  01DB  024B               	subwf	Filter@i,w
  4904  01DC  1C03               	skipc
  4905  01DD  29CF               	goto	L14
  4906                           
  4907                           ;common.c: 148: }
  4908                           ;common.c: 151: return (filter_sum );
  4909  01DE  0840               	movf	Filter@filter_sum+1,w
  4910  01DF  00F1               	movwf	?_Filter+1
  4911  01E0  083F               	movf	Filter@filter_sum,w
  4912  01E1  00F0               	movwf	?_Filter
  4913  01E2  0008               	return
  4914  01E3                     __end_of_Filter:	
  4915  01E3                     __ptext1256:	
  4916 ;; =============== function _Filter ends ============
  4917                           
  4918                           
  4919 ;; *************** function _setPWM_Width *****************
  4920 ;; Defined at:
  4921 ;;		line 65 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  4922 ;; Parameters:    Size  Location     Type
  4923 ;;  ucWidth         1    wreg     unsigned char 
  4924 ;; Auto vars:     Size  Location     Type
  4925 ;;  ucWidth         1    0[COMMON] unsigned char 
  4926 ;; Return value:  Size  Location     Type
  4927 ;;		None               void
  4928 ;; Registers used:
  4929 ;;		wreg
  4930 ;; Tracked objects:
  4931 ;;		On entry : 160/0
  4932 ;;		On exit  : 160/0
  4933 ;;		Unchanged: FFE9F/0
  4934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4935 ;;      Params:         0       0       0       0       0
  4936 ;;      Locals:         1       0       0       0       0
  4937 ;;      Temps:          0       0       0       0       0
  4938 ;;      Totals:         1       0       0       0       0
  4939 ;;Total ram usage:        1 bytes
  4940 ;; Hardware stack levels used:    1
  4941 ;; This function calls:
  4942 ;;		Nothing
  4943 ;; This function is called by:
  4944 ;;		_vPutSampleDataIntoTable
  4945 ;; This function uses a non-reentrant model
  4946 ;;
  4947  01E3                     _setPWM_Width:	
  4948                           
  4949                           ; Regs used in _setPWM_Width: [wreg]
  4950                           ;setPWM_Width@ucWidth stored from wreg
  4951  01E3  00F0               	movwf	setPWM_Width@ucWidth
  4952                           
  4953                           ;common.c: 66: static unsigned char ucOldWidth = 0;
  4954                           ;common.c: 67: if( ucOldWidth != ucWidth)
  4955  01E4  063A               	xorwf	setPWM_Width@ucOldWidth,w
  4956  01E5  1903               	skipnz
  4957  01E6  0008               	return
  4958                           
  4959                           ;common.c: 68: {
  4960                           ;common.c: 69: CCPR1L = ucWidth;
  4961  01E7  0870               	movf	setPWM_Width@ucWidth,w
  4962  01E8  0095               	movwf	21	;volatile
  4963                           
  4964                           ;common.c: 70: ucOldWidth = ucWidth;
  4965  01E9  0870               	movf	setPWM_Width@ucWidth,w
  4966  01EA  00BA               	movwf	setPWM_Width@ucOldWidth
  4967  01EB  0008               	return
  4968  01EC                     __end_of_setPWM_Width:	
  4969  01EC                     PL2:	
  4970  01EC  0084               	movwf	4
  4971  01ED  0876               	movf	vPutSampleDataIntoTable@uiSampleData,w
  4972  01EE  1383               	bcf	3,7	;select IRP bank1
  4973  01EF  0080               	movwf	0
  4974  01F0  0A84               	incf	4,f
  4975  01F1  0877               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  4976  01F2  0080               	movwf	0
  4977  01F3  0008               	return
  4978  01F4                     PL4:	
  4979  01F4  0084               	movwf	4
  4980  01F5  1383               	bcf	3,7	;select IRP bank0
  4981  01F6  0800               	movf	0,w
  4982  01F7  00F2               	movwf	??_Filter
  4983  01F8  0A84               	incf	4,f
  4984  01F9  0800               	movf	0,w
  4985  01FA  00F3               	movwf	??_Filter+1
  4986  01FB  0008               	return
  4987  01FC                     PL6:	
  4988  01FC  3E42               	addlw	Filter@filter_buf& (0+255)
  4989  01FD  0084               	movwf	4
  4990  01FE  0872               	movf	??_Filter,w
  4991  01FF  0080               	movwf	0
  4992  0200  0A84               	incf	4,f
  4993  0201  0873               	movf	??_Filter+1,w
  4994  0202  0080               	movwf	0
  4995  0203  0008               	return
  4996  0204                     PL8:	
  4997  0204  1003               	clrc
  4998  0205  0D4B               	rlf	Filter@i,w
  4999  0206  3E02               	addlw	2
  5000  0207  3E42               	addlw	Filter@filter_buf& (0+255)
  5001  0208  0084               	movwf	4
  5002  0209  0008               	return
  5003  020A                     PL10:	
  5004  020A  0180               	clrf	0
  5005  020B  0A84               	incf	4,f
  5006  020C  0180               	clrf	0
  5007  020D  1003               	clrc
  5008  020E  0D50               	rlf	vPutSampleDataIntoTable@i,w
  5009  020F  0008               	return
  5010                           
  5011                           	psect	intentry
  5012  0004                     __pintentry:	
  5013                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5014                           
  5015  0004                     interrupt_function:	
  5016  007E                     saved_w	set	btemp
  5017  0004  00FE               	movwf	btemp
  5018  0005  0E03               	swapf	3,w
  5019  0006  00F9               	movwf	??_ISR
  5020  0007  0804               	movf	4,w
  5021  0008  00FA               	movwf	??_ISR+1
  5022  0009  080A               	movf	10,w
  5023  000A  00FB               	movwf	??_ISR+2
  5024  000B  1283               	bcf	3,5	;RP0=0, select bank0
  5025  000C  1303               	bcf	3,6	;RP1=0, select bank0
  5026  000D  087F               	movf	btemp+1,w
  5027  000E  00FC               	movwf	??_ISR+3
  5028  000F  118A  2813         	ljmp	_ISR
  5029                           
  5030                           	psect	text1258
  5031  0000                     __ptext1258:	
  5032 ;; =============== function _getWaitResetFlag ends ============
  5033                           
  5034  007E                     btemp	set	126	;btemp
  5035  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sun Nov 17 22:37:44 2019

                                  ??_clock_config 0052                                 ?_getWaitResetFlag 0070  
                             ?_startOneHoursTimer 0052                                                _GO 00F9  
                              ??_getWaitResetFlag 0070                                                fsr 0004  
                        ?_timer1_interrupt_config 0070                                               l702 0523  
                                             l710 0000                                               l713 0000  
                                             l722 05E6                                               l707 0000  
                                             l716 0000                                               l719 0000  
                                             l737 0268                                               l682 0513  
                                             l692 051B                                               l677 04E6  
                                             l687 04F6                                               l697 0501  
                                             _GIE 005F                                               _PB2 0032  
                                             _PB3 0033                                               _PB4 0034  
                                             _PB5 0035                                               _PR2 0092  
                                             _ISR 0013                                               fsr0 0004  
                                             indf 0000                            ??_startThreeHoursTimer 0054  
                                            ?_ISR 0070                              ??_startOneHoursTimer 0054  
                              __size_of_AD_Sample 0014                                              l4000 0000  
                                            l4002 0000                                              l4010 0000  
                                            l2322 0000                                              l4004 0000  
                                            l4020 0000                                              l4012 0000  
                                            l2316 0000                                              l4100 0000  
                                            l1605 0000                                              l4014 0000  
                                            l4006 0000                                              l4022 0000  
                                            l4030 0000                                              l1614 0000  
                                            l4110 0000                                              l4016 0000  
                                            l4008 0000                                              l4024 0000  
                                            l4032 0000                                              l4040 0000  
                                            l4112 0000                                              l4120 0000  
                                            l1608 0000                                              l1561 0000  
                                            l1473 0000                                              l4018 0000  
                                            l4026 0000                                              l4042 0000  
                                            l4034 0000                                              l4050 0000  
                                            l4210 0000                                              l4202 0449  
                                            l1570 0000                                              l1564 0000  
                                            l4028 0000                                              l4036 0000  
                                            l4044 0000                                              l4052 04CF  
                                            l4124 0000                                              l4204 0000  
                                            l4220 0000                                              l4300 0000  
                                            l1573 0000                                              l1558 05C6  
                                            l4038 0000                                              l4054 0000  
                                            l1654 0000                                              l4118 0000  
                                            l4126 0000                                              l4150 0000  
                                            l4206 0000                                              l4214 0000  
                                            l4310 028E                                              l4302 0000  
                                            l1567 0000                                              l1495 0000  
                                            l4072 0000                                              l4136 0000  
                                            l4144 0000                                              l4152 0000  
                                            l4208 0459                                              l4232 04B1  
                                            l4224 0000                                              l4240 0000  
                                            l4400 035E                                              l4320 0000  
                                            l4304 0000                                              l4066 0000  
                                            l4074 0000                                              l4138 0000  
                                            l4146 0000                                              l4162 0000  
                                            l4170 03D9                                              l4218 0000  
                                            l4234 0000                                              l4242 0000  
                                            l4410 0380                                              l4402 0362  
                                            l4322 02A4                                              l4314 029B  
                                            l4306 0286                                              l1579 0000  
                                            l4068 0000                                              l4084 0000  
                                            l4092 0000                                              l4172 0000  
                                            l4164 0000                                              l4228 0000  
                                            l4236 0000                                              l4244 0000  
                                            l4420 0396                                              l4412 0000  
                                            l4404 0000                                              l4340 0000  
                                            l4324 0000                                              l4316 029D  
                                            l4308 028C                                              l4260 0000  
                                            l4086 0000                                              l4094 0000  
                                            l4190 043E                                              l4174 0000  
                                            l4238 0000                                              l4422 0398  
                                            l4414 0385                                              l4406 0374  
                                            l4350 0000                                              l4342 02CB  
                                            l4334 02C2                                              l4326 02AF  
                                            l4270 0000                                              l4262 0000  
                                            l4192 03F9                                              l4184 03F8  
                                            l4176 0000                                              l4248 0000  
                                            l4256 0000                                              l4416 0000  
                                            l4352 0000                                              l4344 0000  
                                            l4336 02C4                                              l4280 0248  
                                            l4432 03A1                                              l4272 023A  
                                            l4264 0000                                              l4098 0000  
                                            l4194 0441                                              l4426 039F  
                                            l4370 0306                                              l4354 02E2  
                                            l4346 0000                                              l4290 025F  
                                            l4274 0000                                              l4266 0000  
                                            l4196 0000                                              l4372 0308  
                                            l4356 0000                                              l4348 0000  
                                            l4292 0261                                              l4284 0000  
                                            l4276 0000                                              l4268 0000  
                                            l4198 0000                                              l4366 0301  
                                            l4286 0252                                              l4392 0000  
                                            l4376 0000                                              l4368 0000  
                                            l4296 0000                                              l4386 0332  
                                            l4378 0000                                              l4298 0269  
                                            l4396 0355                                              l4388 0336  
                                            l4398 0357                                              l3980 0000  
                                            l3982 0000                                              l3990 0000  
                                            _ADIE 046A                                              l3984 0000  
                                            l3992 0000                                              _ADIF 006A  
                                            l3986 0000                                              l3994 0000  
                                            l3988 0000                                              l3996 0000  
                                            l3998 0000                                              _ADON 00F8  
                   startTwelveHourTimer@uiSetTime 0052                                              u2297 0232  
                                            _PEIE 005E                                              u1975 03F3  
                                            u1985 0424                                              u1995 040A  
                            FilterCh13@filter_buf 00CD                              FilterCh13@filter_sum 00CB  
                                            _main 0210                                              btemp 007E  
                                            start 0011                           ?_getAdOriginalCh13Value 00D7  
                      ??_isFinishedTwentyMinTimer 0052                                             ??_ISR 0079  
                               ??_setPinInitVaule 0053                        __end_of_isPermitSampleTime 05CE  
                             _sampleChannelSelect 0059                                             ?_main 0070  
                                           _CLKPR 0108                                             _T1CON 0010  
                                           _T2CON 0012                                   __end_of_adc_get 0084  
                                           _PBOD2 0C42                                             _TMR1H 000F  
                                           _TMR1L 000E                             setAD_ConvertFlag@flag 0052  
                               ??_selectAdChannel 0052                             FilterCh13@filter_temp 00C9  
                                      _FilterCh13 03D0                                   __end_of_initPB3 04E9  
                                 __end_of_initPB4 04F9                                   __end_of_initPB5 0504  
                         _vPutSampleDataIntoTable 0087                                   __end_of_initPin 04DD  
                                           _reset 05E6                                             _timer 0034  
                                           pclath 000A                               main@uiTimerThreeP5s 00A6  
                                           status 0003                                             wtemp0 007E  
                  __end_of_getAdOriginalCh13Value 03D0                     __size_of_startTwelveHourTimer 000E  
                            __end_of_clrSampeTime 05E6                                      __end_of_main 03C6  
                          __size_of_adc_test_init 001B                                 __end_of_AD_Sample 04B4  
                                          ??_main 0058                               setPWM_Width@ucWidth 0070  
                                   main@ucChValue 00D9                                     main@ucDelay1s 00A2  
                                          _ADCON0 001F                                            _ADCON1 009F  
                            __end_of_clock_config 05C9                                            _ADRESH 001E  
                                          _ADRESL 009E                                            _CCPR1L 0015  
                                          ?_reset 0070                                            _CLKPCE 0847  
                                          i1l1508 0000                                            i1l2325 0000  
                                          i1l1534 00DB                                            i1l1539 00F6  
                                          i1l1476 0000                                            i1l1573 0000  
                                          i1l1661 0027                                            i1l1662 0031  
                                          i1l1663 003C                                            i1l1664 0047  
                                          i1l3610 0183                                            i1l3524 0000  
                                          i1l3612 01C5                                            i1l1669 006C  
                                          i1l3622 0000                                            i1l3614 0000  
                                          i1l3702 0000                                            i1l3630 0000  
                                          i1l3528 0000                                            i1l3624 0000  
                                          i1l3608 01C3                                            i1l3704 012E  
                                          i1l3714 013A                                            i1l3706 0000  
                                          i1l3642 0000                                            i1l3716 0000  
                                          i1l3708 0134                                            i1l3652 00B1  
                                          i1l3644 0000                                            i1l3636 0000  
                                          i1l3740 0000                                            i1l3590 0000  
                                          i1l3582 0000                                            i1l3718 0000  
                                          i1l3654 0000                                            i1l3646 0000  
                                          i1l3638 0000                                            i1l3750 0000  
                                          i1l3592 0000                                            i1l3664 00E9  
                                          i1l3656 0000                                            i1l3648 0000  
                                          i1l3680 0104                                            i1l3744 0000  
                                          i1l3594 0000                                            i1l3690 0000  
                                          i1l3682 0000                                            i1l3674 00FC  
                                          i1l3658 0000                                            i1l3746 0000  
                                          i1l3762 0051                                            i1l3588 0166  
                                          i1l3692 0119                                            i1l3668 00F0  
                                          i1l3684 010A                                            i1l3772 0063  
                                          i1l3774 0000                                            i1l3694 0000  
                                          i1l3678 0102                                            i1l3766 0000  
                                          i1l3696 011F                                            i1l3768 0000  
                                          i1l3778 0000                                            u117_25 017D  
                                          u125_25 00A7                                            u118_25 01A6  
                                          u119_25 0190                                            u136_25 0158  
                                          _TMR1IE 0460                                            _TMR1IF 0060  
                               _getAD_ConvertFlag 0499                                 _setAD_ConvertFlag 049D  
                                          _TRISB0 0430                                            _TRISB1 0431  
                                          _TRISB2 0432                                            _TRISB3 0433  
                                          _TRISB4 0434                                            _TRISB5 0435  
                              ?_getAD_ConvertFlag 0070                                            _Filter 015D  
                              ?_setAD_ConvertFlag 0070                       ??_isFinishedThreeHoursTimer 0052  
                   __size_of_clearThreeHoursTimer 0004                                         ??_adc_get 0072  
                             ??_getAD_ConvertFlag 0052                            setPWM_Width@ucOldWidth 003A  
                             ??_setAD_ConvertFlag 0052                                            _setPB3 050C  
                                          _setPB4 0515                                            _setPB5 051D  
                     __end_of_clearTwentyMinTimer 05DA                                            clrloop 05BA  
                                Filter@filter_buf 0042                                         ??_initPB3 0052  
                                       ??_initPB4 0052                                         ??_initPB5 0052  
                                Filter@filter_sum 003F                                         ??_initPin 0053  
                       ??_vPutSampleDataIntoTable 0079                                            saved_w 007E  
                         ??_clearTwelveHoursTimer 0052                                       ?_FilterCh13 0052  
                        __end_of_setWaitResetFlag 05E1                       ?_process_AD_Converter_Value 0070  
                                   _adc_test_init 04B4                         __end_of_getAD_ConvertFlag 049D  
                       __end_of_setAD_ConvertFlag 04A0                                     ?_setPWM_Width 0070  
                              __size_of_adc_start 0004                          _initPB2_AsHighResistence 04E9  
                __size_of_isFinishedOneHoursTimer 000B                  __end_of_isFinishedTwentyMinTimer 05AF  
                                  __pcstackCOMMON 0070                                      __pidataBANK0 0000  
                               main@uiTimerOneP5s 00A4                                     __end_of_reset 05DA  
                               main@uiTimerTwoP5s 00A8                            setWaitResetFlag@bValue 0052  
                  vPutSampleDataIntoTable@channel 0078                         _isFinishedThreeHoursTimer 0591  
                           __end_of_timer1_config 05B9                         __size_of_getWaitResetFlag 0002  
                                  ?_adc_test_init 0052                       __end_of_startTwentyMinTimer 0586  
                                         ??_reset 0052                  __size_of_timer1_interrupt_config 0003  
                           __size_of_clrSampeTime 0002                                        __pbssBANK0 0020  
                                      __pbssBANK1 00A0                                    ??_setPWM_Width 0070  
                    __size_ofi1_setAD_ConvertFlag 0003                                   _setPinInitVaule 0504  
                                      adc_get@val 0072                                  _uiTwentyMinTimer 0026  
                 __end_of_vPutSampleDataIntoTable 015B                                           ?_Filter 0070  
                                      __pmaintext 0210               vPutSampleDataIntoTable@ucCh12Length 007D  
                             __size_of_FilterCh13 0097               vPutSampleDataIntoTable@ucCh13Length 003B  
         vPutSampleDataIntoTable@uiDeviationValue 004E                                   _selectAdChannel 05DA  
                                      __pintentry 0004                                           _CCP1CON 0017  
                                      __ptext1220 0499                                        __ptext1221 03D0  
                                      __ptext1230 056A                                        __ptext1222 05DE  
                                      __ptext1214 03C6                                        __ptext1231 05D6  
                                      __ptext1223 0586                                        __ptext1215 0483  
                                      __ptext1240 05C1                                        __ptext1232 05A5  
                                      __ptext1224 054E                                        __ptext1216 0504  
                                      __ptext1241 05E6                                        __ptext1233 05E4  
                                      __ptext1225 05CE                                        __ptext1217 04D3  
                                      __ptext1250 04DD                                        __ptext1242 05DA  
                                      __ptext1234 05C9                                        __ptext1226 0591  
                                      __ptext1218 04A0                                        __ptext1251 0013  
                                      __ptext1243 0525                                        __ptext1235 04CF  
                                      __ptext1227 055C                                        __ptext1219 049D  
                                      __ptext1252 0087                                        __ptext1244 04E9  
                                      __ptext1236 0578                                        __ptext1228 05D2  
                                      __ptext1253 0084                                        __ptext1245 051D  
                                      __ptext1237 04B4                                        __ptext1229 059B  
                                      __ptext1254 0079                                        __ptext1246 04F9  
                                      __ptext1238 05E1                                           ?_setPB3 0070  
                                      __ptext1255 015D                                        __ptext1247 0515  
                                      __ptext1239 05AF                                           ?_setPB4 0070  
                                      __ptext1256 01E3                                        __ptext1248 04EE  
                                         ?_setPB5 0070                                        __ptext1257 015B  
                                      __ptext1249 050C                                        __ptext1258 0000  
                           __size_of_clock_config 0008                                      _clrSampeTime 05E4  
                               __end_of_adc_start 04D3                              _uiTwentySecondsTimer 00A0  
                              _isPermitSampleTime 05C9                                           Filter@i 004B  
                                         Filter@j 004A                                __size_of_pwm_start 0015  
                     __size_of_startOneHoursTimer 000E                     __size_of_startThreeHoursTimer 000E  
                      __size_of_getAD_ConvertFlag 0004                        __size_of_setAD_ConvertFlag 0003  
                                  main@ucTimerP3s 0038                                    main@ucTimerP5s 0039  
                             ?_isPermitSampleTime 0070                                   __size_of_Filter 0086  
                                      _uiBigTimer 0020                                      setPB3@bValue 0052  
                                    setPB4@bValue 0052                                      _clock_config 05C1  
                                    setPB5@bValue 0052                                           _adc_get 0079  
                                 __size_of_setPB3 0009                                   __size_of_setPB4 0008  
                                 __size_of_setPB5 0008                              ??_isPermitSampleTime 0052  
                    __end_of_startTwelveHourTimer 0578                                     initPB3@bValue 0052  
                                   initPB4@bValue 0052                                         _AD_Sample 04A0  
                                         _initPB3 04DD                                           _initPB4 04EE  
                                         _initPB5 04F9                                      __size_of_ISR 0066  
                                   initPB5@bValue 0052                                           _initPin 04D3  
                            _bSmallTimerStartFlag 0030                                   ??_adc_test_init 0053  
               __size_of_isFinishedTwentyMinTimer 000A                         ?_isFinishedTwentyMinTimer 0070  
                         __end_of_setPinInitVaule 050C                              end_of_initialization 054B  
                               Filter@filter_temp 003D                             pwm_start@ucPulseWidth 0053  
                         __end_of_selectAdChannel 05DE                           _isFinishedOneHoursTimer 0586  
                               __end_of_pwm_start 053A                              __end_of_setPWM_Width 01EC  
                                      ?_AD_Sample 0070                      ??_isFinishedTwelveHoursTimer 0052  
                                       Filter@cir 0048                               _bTwentyMinStartFlag 0031  
                                _adc_convert_flag 002D                                      ??_FilterCh13 0054  
                                _getWaitResetFlag 015B                      __end_of_clearThreeHoursTimer 05D2  
                  __size_of_clearTwelveHoursTimer 0004                                 ?_setWaitResetFlag 0070  
                         _timer1_interrupt_config 05E1                     __end_of_clearTwelveHoursTimer 05D6  
                      ??_initPB2_AsHighResistence 0052                                ??_setWaitResetFlag 0052  
              __size_of_isFinishedThreeHoursTimer 000A                                        main@ucStep 0037  
                                  __end_of_Filter 01E3                     startTwentyMinTimer@uiSetValue 0052  
             __size_of_isFinishedTwelveHoursTimer 000A                                FilterCh13@tmpValue 00C8  
                              __end_of_FilterCh13 0467                          vPutSampleDataIntoTable@i 0050  
                             i1_setAD_ConvertFlag 0084                                    __end_of_setPB3 0515  
                                  __end_of_setPB4 051D                                    __end_of_setPB5 0525  
                             start_initialization 053A                                       __end_of_ISR 0079  
                                ?_setPinInitVaule 0070                          ??_getAdOriginalCh13Value 0058  
                    __size_of_clearTwentyMinTimer 0004                         ??_isFinishedOneHoursTimer 0052  
                            ?i1_setAD_ConvertFlag 0070                              _startTwelveHourTimer 056A  
               __end_of_isFinishedThreeHoursTimer 059B                                  ?_selectAdChannel 0070  
                                        ??_Filter 0072                                       __pdataBANK0 0059  
                                        ??_setPB3 0052                                          ??_setPB4 0052  
                                        ??_setPB5 0052                          ?_vPutSampleDataIntoTable 0076  
                                     ??_AD_Sample 0052                         ??_timer1_interrupt_config 0052  
                                     __pbssCOMMON 007D                                     __pcstackBANK0 003D  
                                   __pcstackBANK1 00C8                                         _adc_start 04CF  
                           ??i1_setAD_ConvertFlag 0070                                   main@uiCh13Value 00DB  
                           ?_startTwelveHourTimer 0052                      __size_of_startTwentyMinTimer 000E  
                          __size_of_timer1_config 000A                              _clearThreeHoursTimer 05CE  
                           __size_of_setPWM_Width 0009                      __end_of_startThreeHoursTimer 056A  
                               main@cTimerP5s_781 0035                                 main@cTimerP5s_787 0036  
                                        ?_adc_get 0070                   __end_of_isFinishedOneHoursTimer 0591  
              __end_of_isFinishedTwelveHoursTimer 05A5                        _isFinishedTwelveHoursTimer 059B  
                                        ?_initPB3 0070                                          ?_initPB4 0070  
                                        ?_initPB5 0070                                   ISR@ucTimer1sCnt 002C  
                                        ?_initPin 0070                        __end_of_startOneHoursTimer 055C  
                __end_of_initPB2_AsHighResistence 04EE                         _uiSampleChannelFourteenth 00C2  
                                      ?_adc_start 0070                   __size_of_getAdOriginalCh13Value 000A  
                                  __size_of_reset FFF4                                 interrupt_function 0004  
                                    _setPWM_Width 01E3                                    _bWaitResetFlag 0032  
                 __end_of_timer1_interrupt_config 05E4                         pwm_start@ucPulseFrequency 0052  
                        __end_of_getWaitResetFlag 015D                             ?_clearThreeHoursTimer 0070  
                                    _uiSampleCh12 00BC                                      _uiSampleCh13 00AC  
                            adc_test_init@channel 0054               vPutSampleDataIntoTable@uiSampleData 0076  
                     __size_of_isPermitSampleTime 0005                                         _pwm_start 0525  
       vPutSampleDataIntoTable@uiCalWidthArrayOld 002A         vPutSampleDataIntoTable@uiCalWidthArrayNew 0028  
                                    _uiSmallTimer 0024              vPutSampleDataIntoTable@uiCalWidthCnt 00AA  
                           __end_of_adc_test_init 04CF                                     _timer1_config 05AF  
                    ??_process_AD_Converter_Value 0055                            ??_startTwelveHourTimer 0054  
                       __size_of_setWaitResetFlag 0003                            _getAdOriginalCh13Value 03C6  
                             _clearTwentyMinTimer 05D6                       startOneHoursTimer@uiSetTime 0052  
                                __size_of_adc_get 000B               __size_of_process_AD_Converter_Value 0016  
                                      ?_pwm_start 0052                          _isFinishedTwentyMinTimer 05A5  
vPutSampleDataIntoTable@ucChannelFourteenthLength 003C                                  __size_of_initPB3 000C  
                                __size_of_initPB4 000B                                  __size_of_initPB5 000B  
                                __size_of_initPin 000A                                    Filter@tmpValue 0041  
                                  ?_timer1_config 0070                              ?_clearTwentyMinTimer 0070  
                                     ??_adc_start 0052                              _startThreeHoursTimer 055C  
                           _clearTwelveHoursTimer 05D2                                    _uiOneHourTimer 0022  
                                   __size_of_main 01B6                vPutSampleDataIntoTable@uiInitWidth 005A  
                                   FilterCh13@cir 00D3                                          clear_ram 05B9  
                          ??_clearThreeHoursTimer 0052                 __size_of_initPB2_AsHighResistence 0005  
                       ?_initPB2_AsHighResistence 0070                            _bOneHourTimerStartFlag 002F  
                                   ?_clrSampeTime 0070                               _startTwentyMinTimer 0578  
                                     _sampleTimes 0033                             ??_clearTwentyMinTimer 0052  
                           ?_startThreeHoursTimer 0052                  __size_of_vPutSampleDataIntoTable 00D4  
                                        intlevel1 0000                              ?_startTwentyMinTimer 0052  
                        __size_of_setPinInitVaule 0008                        ?_isFinishedThreeHoursTimer 0070  
          vPutSampleDataIntoTable@uiAbstractValue 004C                                     ?_clock_config 0070  
                        __size_of_selectAdChannel 0004                     startThreeHoursTimer@uiSetTime 0052  
                         i1setAD_ConvertFlag@flag 0070                                       ??_pwm_start 0053  
                                  ??_clrSampeTime 0052                       ?_isFinishedTwelveHoursTimer 0070  
                              _bBigTimerStartFlag 002E                                   ??_timer1_config 0052  
                                     FilterCh13@i 00D6                                       FilterCh13@j 00D5  
                     __end_ofi1_setAD_ConvertFlag 0087                __end_of_process_AD_Converter_Value 0499  
                      _process_AD_Converter_Value 0483                          ?_isFinishedOneHoursTimer 0070  
                          ?_clearTwelveHoursTimer 0070                                  adc_test_init@ref 0052  
                           ??_startTwentyMinTimer 0054                                _startOneHoursTimer 054E  
                                _setWaitResetFlag 05DE  
