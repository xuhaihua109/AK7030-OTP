

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Thu Nov 21 15:32:19 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,delta=2
    16                           	psect	text1231,local,class=CODE,delta=2
    17                           	psect	text1232,local,class=CODE,delta=2
    18                           	psect	text1233,local,class=CODE,delta=2
    19                           	psect	text1234,local,class=CODE,delta=2
    20                           	psect	text1239,local,class=CODE,delta=2
    21                           	psect	text1240,local,class=CODE,delta=2
    22                           	psect	text1241,local,class=CODE,delta=2
    23                           	psect	text1242,local,class=CODE,delta=2
    24                           	psect	text1243,local,class=CODE,delta=2
    25                           	psect	text1244,local,class=CODE,delta=2
    26                           	psect	text1245,local,class=CODE,delta=2
    27                           	psect	text1246,local,class=CODE,delta=2
    28                           	psect	text1247,local,class=CODE,delta=2
    29                           	psect	text1248,local,class=CODE,delta=2
    30                           	psect	text1249,local,class=CODE,delta=2
    31                           	psect	text1250,local,class=CODE,delta=2
    32                           	psect	text1251,local,class=CODE,delta=2
    33                           	psect	text1253,local,class=CODE,delta=2
    34                           	psect	text1255,local,class=CODE,delta=2
    35                           	psect	text1256,local,class=CODE,delta=2
    36                           	psect	text1257,local,class=CODE,delta=2
    37                           	psect	text1258,local,class=CODE,delta=2
    38                           	psect	text1259,local,class=CODE,delta=2
    39                           	psect	text1260,local,class=CODE,delta=2
    40                           	psect	text1268,local,class=CODE,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	text1275,local,class=CODE,delta=2
    43                           	psect	pa_nodes,global,class=CODE,delta=2
    44                           	dabs	1,0x7E,2
    45  000A                     	;#
    46                           
    47                           	psect	config
    48  2000  0FFF               	dw	4095	;#
    49  2001  3FDE               	dw	16350	;#
    50  2002  3FF8               	dw	16376	;#
    51                           
    52                           	psect	idataBANK0
    53  0000                     __pidataBANK0:	
    54  001F                     _ADCON0	set	31
    55  001E                     _ADRESH	set	30
    56  0017                     _CCP1CON	set	23
    57  0015                     _CCPR1L	set	21
    58  0010                     _T1CON	set	16
    59  0012                     _T2CON	set	18
    60  000F                     _TMR1H	set	15
    61  000E                     _TMR1L	set	14
    62  006A                     _ADIF	set	106
    63  00F8                     _ADON	set	248
    64  005F                     _GIE	set	95
    65  00F9                     _GO	set	249
    66  0032                     _PB2	set	50
    67  0033                     _PB3	set	51
    68  0034                     _PB4	set	52
    69  0035                     _PB5	set	53
    70  005E                     _PEIE	set	94
    71  0060                     _TMR1IF	set	96
    72  009F                     _ADCON1	set	159
    73  009E                     _ADRESL	set	158
    74  0092                     _PR2	set	146
    75  046A                     _ADIE	set	1130
    76  0460                     _TMR1IE	set	1120
    77  0430                     _TRISB0	set	1072
    78  0431                     _TRISB1	set	1073
    79  0432                     _TRISB2	set	1074
    80  0433                     _TRISB3	set	1075
    81  0434                     _TRISB4	set	1076
    82  0435                     _TRISB5	set	1077
    83  0108                     _CLKPR	set	264
    84  0847                     _CLKPCE	set	2119
    85  0C42                     _PBOD2	set	3138
    86                           
    87                           	psect	cinit
    88  0543                     start_initialization:	
    89  0543  303D               	movlw	low __pbssBANK0
    90                           
    91                           ; Clear objects allocated to COMMON
    92  0544  01FD               	clrf	__pbssCOMMON& (0+127)
    93                           
    94                           ; Clear objects allocated to BANK0
    95  0545  1383               	bcf	3,7	;select IRP bank0
    96  0546  0084               	movwf	4
    97  0547  3059               	movlw	low (__pbssBANK0+28)
    98  0548  118A  25C2  118A   	fcall	clear_ram
    99                           
   100                           ; Clear objects allocated to BANK1
   101  054B  30A0               	movlw	low __pbssBANK1
   102  054C  0084               	movwf	4
   103  054D  30BE               	movlw	low (__pbssBANK1+30)
   104  054E  118A  25C2         	fcall	clear_ram
   105                           
   106                           ;initializer for _sampleChannelSelect
   107  0550  300C               	movlw	12
   108  0551  00D9               	movwf	__pdataBANK0& (0+127)
   109                           
   110                           ;initializer for vPutSampleDataIntoTable@uiInitWidth
   111  0552  304B               	movlw	75
   112  0553  00DA               	movwf	(__pdataBANK0+1)& (0+127)
   113  0554                     end_of_initialization:	
   114                           ;End of C runtime variable initialization code
   115                           
   116  0554  0183               	clrf	3
   117  0555  118A  2A17         	ljmp	_main	;jump to C main() function
   118                           
   119                           	psect	bssCOMMON
   120  007D                     __pbssCOMMON:	
   121  007D                     vPutSampleDataIntoTable@ucCh12Length:	
   122  007D                     	ds	1
   123                           
   124                           	psect	bssBANK0
   125  003D                     __pbssBANK0:	
   126  003D                     _uiBigTimer:	
   127  003D                     	ds	2
   128  003F                     _uiOneHourTimer:	
   129  003F                     	ds	2
   130  0041                     _uiSmallTimer:	
   131  0041                     	ds	2
   132  0043                     _uiTwentyMinTimer:	
   133  0043                     	ds	2
   134  0045                     vPutSampleDataIntoTable@uiCalWidthArrayNew:	
   135  0045                     	ds	2
   136  0047                     vPutSampleDataIntoTable@uiCalWidthArrayOld:	
   137  0047                     	ds	2
   138  0049                     ISR@ucTimer1sCnt:	
   139  0049                     	ds	1
   140  004A                     _adc_convert_flag:	
   141  004A                     	ds	1
   142  004B                     _bBigTimerStartFlag:	
   143  004B                     	ds	1
   144  004C                     _bOneHourTimerStartFlag:	
   145  004C                     	ds	1
   146  004D                     _bSmallTimerStartFlag:	
   147  004D                     	ds	1
   148  004E                     _bTwentyMinStartFlag:	
   149  004E                     	ds	1
   150  004F                     _bWaitResetFlag:	
   151  004F                     	ds	1
   152  0050                     _sampleTimes:	
   153  0050                     	ds	1
   154  0051                     _timer:	
   155  0051                     	ds	1
   156  0052                     main@cTimerP5s_781:	
   157  0052                     	ds	1
   158  0053                     main@cTimerP5s_787:	
   159  0053                     	ds	1
   160  0054                     main@ucStep:	
   161  0054                     	ds	1
   162  0055                     main@ucTimerP3s:	
   163  0055                     	ds	1
   164  0056                     main@ucTimerP5s:	
   165  0056                     	ds	1
   166  0057                     vPutSampleDataIntoTable@ucCh13Length:	
   167  0057                     	ds	1
   168  0058                     vPutSampleDataIntoTable@ucChannelFourteenthLength:	
   169  0058                     	ds	1
   170                           
   171                           	psect	dataBANK0
   172  0059                     __pdataBANK0:	
   173  0059                     _sampleChannelSelect:	
   174  0059                     	ds	1
   175  005A                     vPutSampleDataIntoTable@uiInitWidth:	
   176  005A                     	ds	1
   177                           
   178                           	psect	bssBANK1
   179  00A0                     __pbssBANK1:	
   180  00A0                     _uiTwentySecondsTimer:	
   181  00A0                     	ds	2
   182  00A2                     main@ucDelay1s:	
   183  00A2                     	ds	2
   184  00A4                     main@uiTimerOneP5s:	
   185  00A4                     	ds	2
   186  00A6                     main@uiTimerThreeP5s:	
   187  00A6                     	ds	2
   188  00A8                     main@uiTimerTwoP5s:	
   189  00A8                     	ds	2
   190  00AA                     vPutSampleDataIntoTable@uiCalWidthCnt:	
   191  00AA                     	ds	2
   192  00AC                     _uiSampleCh12:	
   193  00AC                     	ds	6
   194  00B2                     _uiSampleCh13:	
   195  00B2                     	ds	6
   196  00B8                     _uiSampleChannelFourteenth:	
   197  00B8                     	ds	6
   198                           
   199                           	psect	clrtext
   200  05C2                     clear_ram:	
   201                           ;	Called with FSR containing the base address, and
   202                           ;	W with the last address+1
   203                           
   204  05C2  0064               	clrwdt	;clear the watchdog before getting into this loop
   205  05C3                     clrloop:	
   206  05C3  0180               	clrf	0	;clear RAM location pointed to by FSR
   207  05C4  0A84               	incf	4,f	;increment pointer
   208  05C5  0604               	xorwf	4,w	;XOR with final address
   209  05C6  1903               	btfsc	3,2	;have we reached the end yet?
   210  05C7  3400               	retlw	0	;all done for this memory range, return
   211  05C8  0604               	xorwf	4,w	;XOR again to restore value
   212  05C9  2DC3               	goto	clrloop	;do the next byte
   213                           
   214                           	psect	cstackBANK1
   215  00BE                     __pcstackBANK1:	
   216  00BE                     FilterCh13@tmpValue:	
   217                           
   218                           ; 1 bytes @ 0x0
   219  00BE                     	ds	1
   220  00BF                     FilterCh13@filter_temp:	
   221                           
   222                           ; 2 bytes @ 0x1
   223  00BF                     	ds	2
   224  00C1                     FilterCh13@filter_sum:	
   225                           
   226                           ; 2 bytes @ 0x3
   227  00C1                     	ds	2
   228  00C3                     FilterCh13@filter_buf:	
   229                           
   230                           ; 6 bytes @ 0x5
   231  00C3                     	ds	6
   232  00C9                     FilterCh13@cir:	
   233                           
   234                           ; 2 bytes @ 0xB
   235  00C9                     	ds	2
   236  00CB                     FilterCh13@j:	
   237                           
   238                           ; 1 bytes @ 0xD
   239  00CB                     	ds	1
   240  00CC                     FilterCh13@i:	
   241                           
   242                           ; 1 bytes @ 0xE
   243  00CC                     	ds	1
   244  00CD                     ??_main:	
   245                           
   246                           ; 0 bytes @ 0xF
   247  00CD                     	ds	1
   248  00CE                     main@ucChValue:	
   249                           
   250                           ; 2 bytes @ 0x10
   251  00CE                     	ds	2
   252  00D0                     main@uiCh13Value:	
   253                           
   254                           ; 2 bytes @ 0x12
   255  00D0                     	ds	2
   256                           
   257                           	psect	cstackCOMMON
   258  0070                     __pcstackCOMMON:	
   259  0070                     ?_clock_config:	
   260  0070                     ?_timer1_config:	
   261                           ; 0 bytes @ 0x0
   262                           
   263  0070                     ?_timer1_interrupt_config:	
   264                           ; 0 bytes @ 0x0
   265                           
   266  0070                     ?_adc_start:	
   267                           ; 0 bytes @ 0x0
   268                           
   269  0070                     ?_process_AD_Converter_Value:	
   270                           ; 0 bytes @ 0x0
   271                           
   272  0070                     ?_clrSampeTime:	
   273                           ; 0 bytes @ 0x0
   274                           
   275  0070                     ?_clearTwentyMinTimer:	
   276                           ; 0 bytes @ 0x0
   277                           
   278  0070                     ?_clearTwelveHoursTimer:	
   279                           ; 0 bytes @ 0x0
   280                           
   281  0070                     ?_clearThreeHoursTimer:	
   282                           ; 0 bytes @ 0x0
   283                           
   284  0070                     ?_setWaitResetFlag:	
   285                           ; 0 bytes @ 0x0
   286                           
   287  0070                     ?_AD_Sample:	
   288                           ; 0 bytes @ 0x0
   289                           
   290  0070                     ?_initPB3:	
   291                           ; 0 bytes @ 0x0
   292                           
   293  0070                     ?_setPB3:	
   294                           ; 0 bytes @ 0x0
   295                           
   296  0070                     ?_initPB4:	
   297                           ; 0 bytes @ 0x0
   298                           
   299  0070                     ?_setPB4:	
   300                           ; 0 bytes @ 0x0
   301                           
   302  0070                     ?_initPB5:	
   303                           ; 0 bytes @ 0x0
   304                           
   305  0070                     ?_setPB5:	
   306                           ; 0 bytes @ 0x0
   307                           
   308  0070                     ?_initPB2_AsHighResistence:	
   309                           ; 0 bytes @ 0x0
   310                           
   311  0070                     ?_initPin:	
   312                           ; 0 bytes @ 0x0
   313                           
   314  0070                     ?_setPinInitVaule:	
   315                           ; 0 bytes @ 0x0
   316                           
   317  0070                     ?_selectAdChannel:	
   318                           ; 0 bytes @ 0x0
   319                           
   320  0070                     ?_reset:	
   321                           ; 0 bytes @ 0x0
   322                           
   323  0070                     ??_getWaitResetFlag:	
   324                           ; 0 bytes @ 0x0
   325                           
   326  0070                     ?_setPWM_Width:	
   327                           ; 0 bytes @ 0x0
   328                           
   329  0070                     ??_setPWM_Width:	
   330                           ; 0 bytes @ 0x0
   331                           
   332  0070                     ?_setAD_ConvertFlag:	
   333                           ; 0 bytes @ 0x0
   334                           
   335  0070                     ?_ISR:	
   336                           ; 0 bytes @ 0x0
   337                           
   338  0070                     ?i1_setAD_ConvertFlag:	
   339                           ; 0 bytes @ 0x0
   340                           
   341  0070                     ??i1_setAD_ConvertFlag:	
   342                           ; 0 bytes @ 0x0
   343                           
   344  0070                     ?_isPermitSampleTime:	
   345                           ; 0 bytes @ 0x0
   346                           
   347  0070                     ?_isFinishedTwentyMinTimer:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ?_isFinishedTwelveHoursTimer:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ?_isFinishedThreeHoursTimer:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_isFinishedOneHoursTimer:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ?_getWaitResetFlag:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ?_getAD_ConvertFlag:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     ?_adc_get:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0070                     ?_main:	
   369                           ; 2 bytes @ 0x0
   370                           
   371  0070                     ?_Filter:	
   372                           ; 2 bytes @ 0x0
   373                           
   374  0070                     setPWM_Width@ucWidth:	
   375                           ; 2 bytes @ 0x0
   376                           
   377  0070                     i1setAD_ConvertFlag@flag:	
   378                           ; 1 bytes @ 0x0
   379                           
   380                           
   381                           ; 1 bytes @ 0x0
   382  0070                     	ds	2
   383  0072                     ??_adc_get:	
   384  0072                     ??_Filter:	
   385                           ; 0 bytes @ 0x2
   386                           
   387  0072                     adc_get@val:	
   388                           ; 0 bytes @ 0x2
   389                           
   390                           
   391                           ; 2 bytes @ 0x2
   392  0072                     	ds	4
   393  0076                     ?_vPutSampleDataIntoTable:	
   394  0076                     vPutSampleDataIntoTable@uiSampleData:	
   395                           ; 0 bytes @ 0x6
   396                           
   397                           
   398                           ; 2 bytes @ 0x6
   399  0076                     	ds	2
   400  0078                     vPutSampleDataIntoTable@channel:	
   401                           
   402                           ; 1 bytes @ 0x8
   403  0078                     	ds	1
   404  0079                     ??_vPutSampleDataIntoTable:	
   405  0079                     ??_ISR:	
   406                           ; 0 bytes @ 0x9
   407                           
   408                           
   409                           ; 0 bytes @ 0x9
   410  0079                     	ds	4
   411                           
   412                           	psect	cstackBANK0
   413  0020                     __pcstackBANK0:	
   414  0020                     Filter@filter_temp:	
   415                           
   416                           ; 2 bytes @ 0x0
   417  0020                     	ds	2
   418  0022                     Filter@filter_sum:	
   419                           
   420                           ; 2 bytes @ 0x2
   421  0022                     	ds	2
   422  0024                     Filter@tmpValue:	
   423                           
   424                           ; 1 bytes @ 0x4
   425  0024                     	ds	1
   426  0025                     Filter@filter_buf:	
   427                           
   428                           ; 6 bytes @ 0x5
   429  0025                     	ds	6
   430  002B                     Filter@cir:	
   431                           
   432                           ; 2 bytes @ 0xB
   433  002B                     	ds	2
   434  002D                     Filter@j:	
   435                           
   436                           ; 1 bytes @ 0xD
   437  002D                     	ds	1
   438  002E                     Filter@i:	
   439                           
   440                           ; 1 bytes @ 0xE
   441  002E                     	ds	1
   442  002F                     vPutSampleDataIntoTable@uiAbstractValue:	
   443                           
   444                           ; 2 bytes @ 0xF
   445  002F                     	ds	2
   446  0031                     vPutSampleDataIntoTable@uiDeviationValue:	
   447                           
   448                           ; 2 bytes @ 0x11
   449  0031                     	ds	2
   450  0033                     vPutSampleDataIntoTable@i:	
   451                           
   452                           ; 2 bytes @ 0x13
   453  0033                     	ds	2
   454  0035                     ??_clock_config:	
   455  0035                     ??_timer1_config:	
   456                           ; 0 bytes @ 0x15
   457                           
   458  0035                     ??_timer1_interrupt_config:	
   459                           ; 0 bytes @ 0x15
   460                           
   461  0035                     ?_adc_test_init:	
   462                           ; 0 bytes @ 0x15
   463                           
   464  0035                     ?_startTwentyMinTimer:	
   465                           ; 0 bytes @ 0x15
   466                           
   467  0035                     ??_adc_start:	
   468                           ; 0 bytes @ 0x15
   469                           
   470  0035                     ??_isPermitSampleTime:	
   471                           ; 0 bytes @ 0x15
   472                           
   473  0035                     ??_clrSampeTime:	
   474                           ; 0 bytes @ 0x15
   475                           
   476  0035                     ??_isFinishedTwentyMinTimer:	
   477                           ; 0 bytes @ 0x15
   478                           
   479  0035                     ??_clearTwentyMinTimer:	
   480                           ; 0 bytes @ 0x15
   481                           
   482  0035                     ?_startTwelveHourTimer:	
   483                           ; 0 bytes @ 0x15
   484                           
   485  0035                     ??_isFinishedTwelveHoursTimer:	
   486                           ; 0 bytes @ 0x15
   487                           
   488  0035                     ??_clearTwelveHoursTimer:	
   489                           ; 0 bytes @ 0x15
   490                           
   491  0035                     ?_startThreeHoursTimer:	
   492                           ; 0 bytes @ 0x15
   493                           
   494  0035                     ??_isFinishedThreeHoursTimer:	
   495                           ; 0 bytes @ 0x15
   496                           
   497  0035                     ??_clearThreeHoursTimer:	
   498                           ; 0 bytes @ 0x15
   499                           
   500  0035                     ?_startOneHoursTimer:	
   501                           ; 0 bytes @ 0x15
   502                           
   503  0035                     ??_isFinishedOneHoursTimer:	
   504                           ; 0 bytes @ 0x15
   505                           
   506  0035                     ??_setWaitResetFlag:	
   507                           ; 0 bytes @ 0x15
   508                           
   509  0035                     ??_AD_Sample:	
   510                           ; 0 bytes @ 0x15
   511                           
   512  0035                     ??_initPB3:	
   513                           ; 0 bytes @ 0x15
   514                           
   515  0035                     ??_setPB3:	
   516                           ; 0 bytes @ 0x15
   517                           
   518  0035                     ??_initPB4:	
   519                           ; 0 bytes @ 0x15
   520                           
   521  0035                     ??_setPB4:	
   522                           ; 0 bytes @ 0x15
   523                           
   524  0035                     ??_initPB5:	
   525                           ; 0 bytes @ 0x15
   526                           
   527  0035                     ??_setPB5:	
   528                           ; 0 bytes @ 0x15
   529                           
   530  0035                     ??_initPB2_AsHighResistence:	
   531                           ; 0 bytes @ 0x15
   532                           
   533  0035                     ?_pwm_start:	
   534                           ; 0 bytes @ 0x15
   535                           
   536  0035                     ??_selectAdChannel:	
   537                           ; 0 bytes @ 0x15
   538                           
   539  0035                     ??_reset:	
   540                           ; 0 bytes @ 0x15
   541                           
   542  0035                     ??_getAD_ConvertFlag:	
   543                           ; 0 bytes @ 0x15
   544                           
   545  0035                     ??_setAD_ConvertFlag:	
   546                           ; 0 bytes @ 0x15
   547                           
   548  0035                     ?_FilterCh13:	
   549                           ; 0 bytes @ 0x15
   550                           
   551  0035                     initPB3@bValue:	
   552                           ; 2 bytes @ 0x15
   553                           
   554  0035                     setPB3@bValue:	
   555                           ; 1 bytes @ 0x15
   556                           
   557  0035                     initPB4@bValue:	
   558                           ; 1 bytes @ 0x15
   559                           
   560  0035                     setPB4@bValue:	
   561                           ; 1 bytes @ 0x15
   562                           
   563  0035                     initPB5@bValue:	
   564                           ; 1 bytes @ 0x15
   565                           
   566  0035                     setPB5@bValue:	
   567                           ; 1 bytes @ 0x15
   568                           
   569  0035                     pwm_start@ucPulseFrequency:	
   570                           ; 1 bytes @ 0x15
   571                           
   572  0035                     setWaitResetFlag@bValue:	
   573                           ; 1 bytes @ 0x15
   574                           
   575  0035                     setAD_ConvertFlag@flag:	
   576                           ; 1 bytes @ 0x15
   577                           
   578  0035                     adc_test_init@ref:	
   579                           ; 1 bytes @ 0x15
   580                           
   581  0035                     startTwelveHourTimer@uiSetTime:	
   582                           ; 1 bytes @ 0x15
   583                           
   584  0035                     startThreeHoursTimer@uiSetTime:	
   585                           ; 2 bytes @ 0x15
   586                           
   587  0035                     startOneHoursTimer@uiSetTime:	
   588                           ; 2 bytes @ 0x15
   589                           
   590  0035                     startTwentyMinTimer@uiSetValue:	
   591                           ; 2 bytes @ 0x15
   592                           
   593                           
   594                           ; 2 bytes @ 0x15
   595  0035                     	ds	1
   596  0036                     ??_adc_test_init:	
   597  0036                     ??_pwm_start:	
   598                           ; 0 bytes @ 0x16
   599                           
   600  0036                     ??_initPin:	
   601                           ; 0 bytes @ 0x16
   602                           
   603  0036                     ??_setPinInitVaule:	
   604                           ; 0 bytes @ 0x16
   605                           
   606  0036                     pwm_start@ucPulseWidth:	
   607                           ; 0 bytes @ 0x16
   608                           
   609                           
   610                           ; 1 bytes @ 0x16
   611  0036                     	ds	1
   612  0037                     ??_startTwentyMinTimer:	
   613  0037                     ??_startTwelveHourTimer:	
   614                           ; 0 bytes @ 0x17
   615                           
   616  0037                     ??_startThreeHoursTimer:	
   617                           ; 0 bytes @ 0x17
   618                           
   619  0037                     ??_startOneHoursTimer:	
   620                           ; 0 bytes @ 0x17
   621                           
   622  0037                     ??_FilterCh13:	
   623                           ; 0 bytes @ 0x17
   624                           
   625  0037                     adc_test_init@channel:	
   626                           ; 0 bytes @ 0x17
   627                           
   628                           
   629                           ; 1 bytes @ 0x17
   630  0037                     	ds	1
   631  0038                     ??_process_AD_Converter_Value:	
   632                           
   633                           ; 0 bytes @ 0x18
   634  0038                     	ds	3
   635  003B                     ?_getAdOriginalCh13Value:	
   636                           
   637                           ; 2 bytes @ 0x1B
   638  003B                     	ds	2
   639  003D                     ??_getAdOriginalCh13Value:	
   640                           
   641                           	psect	maintext
   642  0217                     __pmaintext:	
   643                           ; 0 bytes @ 0x1D
   644 ;;Data sizes: Strings 0, constant 0, data 2, bss 59, persistent 0 stack 0
   645 ;;Auto spaces:   Size  Autos    Used
   646 ;; COMMON          14     13      14
   647 ;; BANK0           80     29      59
   648 ;; BANK1           80     20      50
   649 ;; BANK3           96      0       0
   650 ;; BANK2           96      0       0
   651 ;;
   652 ;; Pointer list with targets:
   653 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   654 ;;
   655 ;; ?_getAdOriginalCh13Value	unsigned int  size(1) Largest target is 0
   656 ;;
   657 ;; ?_Filter	unsigned int  size(1) Largest target is 0
   658 ;;
   659 ;; ?_FilterCh13	unsigned int  size(1) Largest target is 0
   660 ;;
   661 ;; Filter@tmpValue	PTR unsigned int  size(1) Largest target is 6
   662 ;;		 -> uiSampleChannelFourteenth(BANK1[6]), uiSampleCh12(BANK1[6]), 
   663 ;;
   664 ;; FilterCh13@tmpValue	PTR unsigned int  size(1) Largest target is 6
   665 ;;		 -> uiSampleCh13(BANK1[6]), 
   666 ;;
   667 ;;
   668 ;; Critical Paths under _main in COMMON
   669 ;;
   670 ;;   None.
   671 ;;
   672 ;; Critical Paths under _ISR in COMMON
   673 ;;
   674 ;;   _ISR->_vPutSampleDataIntoTable
   675 ;;   _vPutSampleDataIntoTable->_Filter
   676 ;;
   677 ;; Critical Paths under _main in BANK0
   678 ;;
   679 ;;   _main->_getAdOriginalCh13Value
   680 ;;   _getAdOriginalCh13Value->_FilterCh13
   681 ;;   _process_AD_Converter_Value->_adc_test_init
   682 ;;   _setPinInitVaule->_setPB3
   683 ;;   _setPinInitVaule->_setPB4
   684 ;;   _setPinInitVaule->_setPB5
   685 ;;   _initPin->_initPB3
   686 ;;   _initPin->_initPB4
   687 ;;   _initPin->_initPB5
   688 ;;
   689 ;; Critical Paths under _ISR in BANK0
   690 ;;
   691 ;;   _ISR->_vPutSampleDataIntoTable
   692 ;;   _vPutSampleDataIntoTable->_Filter
   693 ;;
   694 ;; Critical Paths under _main in BANK1
   695 ;;
   696 ;;   _getAdOriginalCh13Value->_FilterCh13
   697 ;;
   698 ;; Critical Paths under _ISR in BANK1
   699 ;;
   700 ;;   None.
   701 ;;
   702 ;; Critical Paths under _main in BANK3
   703 ;;
   704 ;;   None.
   705 ;;
   706 ;; Critical Paths under _ISR in BANK3
   707 ;;
   708 ;;   None.
   709 ;;
   710 ;; Critical Paths under _main in BANK2
   711 ;;
   712 ;;   None.
   713 ;;
   714 ;; Critical Paths under _ISR in BANK2
   715 ;;
   716 ;;   None.
   717 ;;
   718 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   719 ;;
   720 ;;
   721 ;;Call Graph Tables:
   722 ;;
   723 ;; ---------------------------------------------------------------------------------
   724 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   725 ;; ---------------------------------------------------------------------------------
   726 ;; (0) _main                                                 5     5      0    1696
   727 ;;                                             15 BANK1      5     5      0
   728 ;;                            _initPin
   729 ;;                    _setPinInitVaule
   730 ;;                    _selectAdChannel
   731 ;;                       _clock_config
   732 ;;                      _timer1_config
   733 ;;            _timer1_interrupt_config
   734 ;;                      _adc_test_init
   735 ;;                _startTwentyMinTimer
   736 ;;                          _adc_start
   737 ;;         _process_AD_Converter_Value
   738 ;;                 _isPermitSampleTime
   739 ;;                       _clrSampeTime
   740 ;;           _isFinishedTwentyMinTimer
   741 ;;             _getAdOriginalCh13Value
   742 ;;                          _pwm_start
   743 ;;                             _setPB3
   744 ;;                             _setPB4
   745 ;;                             _setPB5
   746 ;;                _clearTwentyMinTimer
   747 ;;               _startTwelveHourTimer
   748 ;;         _isFinishedTwelveHoursTimer
   749 ;;              _clearTwelveHoursTimer
   750 ;;               _startThreeHoursTimer
   751 ;;          _isFinishedThreeHoursTimer
   752 ;;               _clearThreeHoursTimer
   753 ;;                 _startOneHoursTimer
   754 ;;            _isFinishedOneHoursTimer
   755 ;;                              _reset
   756 ;;                   _setWaitResetFlag
   757 ;; ---------------------------------------------------------------------------------
   758 ;; (1) _getAdOriginalCh13Value                               2     0      2     915
   759 ;;                                             27 BANK0      2     0      2
   760 ;;                         _FilterCh13
   761 ;; ---------------------------------------------------------------------------------
   762 ;; (1) _process_AD_Converter_Value                           0     0      0      93
   763 ;;                  _getAD_ConvertFlag
   764 ;;                  _setAD_ConvertFlag
   765 ;;                          _AD_Sample
   766 ;;                      _adc_test_init
   767 ;;                          _adc_start
   768 ;; ---------------------------------------------------------------------------------
   769 ;; (1) _setPinInitVaule                                      0     0      0      93
   770 ;;                             _setPB3
   771 ;;                             _setPB4
   772 ;;                             _setPB5
   773 ;; ---------------------------------------------------------------------------------
   774 ;; (1) _initPin                                              0     0      0      93
   775 ;;           _initPB2_AsHighResistence
   776 ;;                            _initPB3
   777 ;;                            _initPB4
   778 ;;                            _initPB5
   779 ;; ---------------------------------------------------------------------------------
   780 ;; (2) _AD_Sample                                            0     0      0       0
   781 ;; ---------------------------------------------------------------------------------
   782 ;; (2) _setAD_ConvertFlag                                    1     1      0      31
   783 ;;                                             21 BANK0      1     1      0
   784 ;; ---------------------------------------------------------------------------------
   785 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   786 ;; ---------------------------------------------------------------------------------
   787 ;; (2) _FilterCh13                                          21    19      2     915
   788 ;;                                             21 BANK0      6     4      2
   789 ;;                                              0 BANK1     15    15      0
   790 ;; ---------------------------------------------------------------------------------
   791 ;; (1) _setWaitResetFlag                                     1     1      0      31
   792 ;;                                             21 BANK0      1     1      0
   793 ;; ---------------------------------------------------------------------------------
   794 ;; (1) _isFinishedOneHoursTimer                              0     0      0       0
   795 ;; ---------------------------------------------------------------------------------
   796 ;; (1) _startOneHoursTimer                                   2     0      2      31
   797 ;;                                             21 BANK0      2     0      2
   798 ;; ---------------------------------------------------------------------------------
   799 ;; (1) _clearThreeHoursTimer                                 0     0      0       0
   800 ;; ---------------------------------------------------------------------------------
   801 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   802 ;; ---------------------------------------------------------------------------------
   803 ;; (1) _startThreeHoursTimer                                 2     0      2      31
   804 ;;                                             21 BANK0      2     0      2
   805 ;; ---------------------------------------------------------------------------------
   806 ;; (1) _clearTwelveHoursTimer                                0     0      0       0
   807 ;; ---------------------------------------------------------------------------------
   808 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   809 ;; ---------------------------------------------------------------------------------
   810 ;; (1) _startTwelveHourTimer                                 2     0      2      31
   811 ;;                                             21 BANK0      2     0      2
   812 ;; ---------------------------------------------------------------------------------
   813 ;; (1) _clearTwentyMinTimer                                  0     0      0       0
   814 ;; ---------------------------------------------------------------------------------
   815 ;; (1) _isFinishedTwentyMinTimer                             0     0      0       0
   816 ;; ---------------------------------------------------------------------------------
   817 ;; (1) _clrSampeTime                                         0     0      0       0
   818 ;; ---------------------------------------------------------------------------------
   819 ;; (1) _isPermitSampleTime                                   0     0      0       0
   820 ;; ---------------------------------------------------------------------------------
   821 ;; (2) _adc_start                                            0     0      0       0
   822 ;; ---------------------------------------------------------------------------------
   823 ;; (1) _startTwentyMinTimer                                  2     0      2      31
   824 ;;                                             21 BANK0      2     0      2
   825 ;; ---------------------------------------------------------------------------------
   826 ;; (2) _adc_test_init                                        3     2      1      62
   827 ;;                                             21 BANK0      3     2      1
   828 ;; ---------------------------------------------------------------------------------
   829 ;; (1) _timer1_interrupt_config                              0     0      0       0
   830 ;; ---------------------------------------------------------------------------------
   831 ;; (1) _timer1_config                                        0     0      0       0
   832 ;; ---------------------------------------------------------------------------------
   833 ;; (1) _clock_config                                         0     0      0       0
   834 ;; ---------------------------------------------------------------------------------
   835 ;; (1) _reset                                                0     0      0       0
   836 ;; ---------------------------------------------------------------------------------
   837 ;; (1) _selectAdChannel                                      0     0      0       0
   838 ;; ---------------------------------------------------------------------------------
   839 ;; (1) _pwm_start                                            2     1      1      62
   840 ;;                                             21 BANK0      2     1      1
   841 ;; ---------------------------------------------------------------------------------
   842 ;; (2) _initPB2_AsHighResistence                             0     0      0       0
   843 ;; ---------------------------------------------------------------------------------
   844 ;; (1) _setPB5                                               1     1      0      31
   845 ;;                                             21 BANK0      1     1      0
   846 ;; ---------------------------------------------------------------------------------
   847 ;; (2) _initPB5                                              1     1      0      31
   848 ;;                                             21 BANK0      1     1      0
   849 ;; ---------------------------------------------------------------------------------
   850 ;; (1) _setPB4                                               1     1      0      31
   851 ;;                                             21 BANK0      1     1      0
   852 ;; ---------------------------------------------------------------------------------
   853 ;; (2) _initPB4                                              1     1      0      31
   854 ;;                                             21 BANK0      1     1      0
   855 ;; ---------------------------------------------------------------------------------
   856 ;; (1) _setPB3                                               1     1      0      31
   857 ;;                                             21 BANK0      1     1      0
   858 ;; ---------------------------------------------------------------------------------
   859 ;; (2) _initPB3                                              1     1      0      31
   860 ;;                                             21 BANK0      1     1      0
   861 ;; ---------------------------------------------------------------------------------
   862 ;; Estimated maximum stack depth 2
   863 ;; ---------------------------------------------------------------------------------
   864 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   865 ;; ---------------------------------------------------------------------------------
   866 ;; (3) _ISR                                                  4     4      0    1163
   867 ;;                                              9 COMMON     4     4      0
   868 ;;                i1_setAD_ConvertFlag
   869 ;;                            _adc_get
   870 ;;            _vPutSampleDataIntoTable
   871 ;; ---------------------------------------------------------------------------------
   872 ;; (4) _vPutSampleDataIntoTable                              9     6      3    1066
   873 ;;                                              6 COMMON     3     0      3
   874 ;;                                             15 BANK0      6     6      0
   875 ;;                             _Filter
   876 ;;                   _getWaitResetFlag
   877 ;;                       _setPWM_Width
   878 ;;                            _adc_get (ARG)
   879 ;; ---------------------------------------------------------------------------------
   880 ;; (4) i1_setAD_ConvertFlag                                  1     1      0      73
   881 ;;                                              0 COMMON     1     1      0
   882 ;; ---------------------------------------------------------------------------------
   883 ;; (4) _adc_get                                              4     2      2      24
   884 ;;                                              0 COMMON     4     2      2
   885 ;; ---------------------------------------------------------------------------------
   886 ;; (5) _Filter                                              21    19      2     620
   887 ;;                                              0 COMMON     6     4      2
   888 ;;                                              0 BANK0     15    15      0
   889 ;; ---------------------------------------------------------------------------------
   890 ;; (5) _setPWM_Width                                         1     1      0      33
   891 ;;                                              0 COMMON     1     1      0
   892 ;; ---------------------------------------------------------------------------------
   893 ;; (5) _getWaitResetFlag                                     0     0      0       0
   894 ;; ---------------------------------------------------------------------------------
   895 ;; Estimated maximum stack depth 5
   896 ;; ---------------------------------------------------------------------------------
   897 ;; Call Graph Graphs:
   898 ;; _main (ROOT)
   899 ;;   _initPin
   900 ;;     _initPB2_AsHighResistence
   901 ;;     _initPB3
   902 ;;     _initPB4
   903 ;;     _initPB5
   904 ;;   _setPinInitVaule
   905 ;;     _setPB3
   906 ;;     _setPB4
   907 ;;     _setPB5
   908 ;;   _selectAdChannel
   909 ;;   _clock_config
   910 ;;   _timer1_config
   911 ;;   _timer1_interrupt_config
   912 ;;   _adc_test_init
   913 ;;   _startTwentyMinTimer
   914 ;;   _adc_start
   915 ;;   _process_AD_Converter_Value
   916 ;;     _getAD_ConvertFlag
   917 ;;     _setAD_ConvertFlag
   918 ;;     _AD_Sample
   919 ;;     _adc_test_init
   920 ;;     _adc_start
   921 ;;   _isPermitSampleTime
   922 ;;   _clrSampeTime
   923 ;;   _isFinishedTwentyMinTimer
   924 ;;   _getAdOriginalCh13Value
   925 ;;     _FilterCh13
   926 ;;   _pwm_start
   927 ;;   _setPB3
   928 ;;   _setPB4
   929 ;;   _setPB5
   930 ;;   _clearTwentyMinTimer
   931 ;;   _startTwelveHourTimer
   932 ;;   _isFinishedTwelveHoursTimer
   933 ;;   _clearTwelveHoursTimer
   934 ;;   _startThreeHoursTimer
   935 ;;   _isFinishedThreeHoursTimer
   936 ;;   _clearThreeHoursTimer
   937 ;;   _startOneHoursTimer
   938 ;;   _isFinishedOneHoursTimer
   939 ;;   _reset
   940 ;;   _setWaitResetFlag
   941 ;;
   942 ;; _ISR (ROOT)
   943 ;;   i1_setAD_ConvertFlag
   944 ;;   _adc_get
   945 ;;   _vPutSampleDataIntoTable
   946 ;;     _Filter
   947 ;;     _getWaitResetFlag
   948 ;;     _setPWM_Width
   949 ;;     _adc_get (ARG)
   950 ;;
   951 ;; Address spaces:
   952 ;;Name               Size   Autos  Total    Cost      Usage
   953 ;;BANK3               60      0       0      10        0.0%
   954 ;;BITBANK3            60      0       0       9        0.0%
   955 ;;SFR3                 0      0       0       4        0.0%
   956 ;;BITSFR3              0      0       0       4        0.0%
   957 ;;BANK2               60      0       0      12        0.0%
   958 ;;BITBANK2            60      0       0      11        0.0%
   959 ;;SFR2                 0      0       0       5        0.0%
   960 ;;BITSFR2              0      0       0       5        0.0%
   961 ;;SFR1                 0      0       0       2        0.0%
   962 ;;BITSFR1              0      0       0       2        0.0%
   963 ;;BANK1               50     14      32       8       62.5%
   964 ;;BITBANK1            50      0       0       7        0.0%
   965 ;;CODE                 0      0       0       0        0.0%
   966 ;;DATA                 0      0      83       6        0.0%
   967 ;;ABS                  0      0      7B       3        0.0%
   968 ;;NULL                 0      0       0       0        0.0%
   969 ;;STACK                0      0       8       2        0.0%
   970 ;;BANK0               50     1D      3B       5       73.8%
   971 ;;BITBANK0            50      0       0       4        0.0%
   972 ;;SFR0                 0      0       0       1        0.0%
   973 ;;BITSFR0              0      0       0       1        0.0%
   974 ;;COMMON               E      D       E       1      100.0%
   975 ;;BITCOMMON            E      0       0       0        0.0%
   976                           
   977                           
   978 ;; *************** function _main *****************
   979 ;; Defined at:
   980 ;;		line 498 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
   981 ;; Parameters:    Size  Location     Type
   982 ;;		None
   983 ;; Auto vars:     Size  Location     Type
   984 ;;  ucChValue       2   16[BANK1 ] unsigned int 
   985 ;;  uiCh13Value     2   18[BANK1 ] unsigned int 
   986 ;; Return value:  Size  Location     Type
   987 ;;                  2  727[COMMON] int 
   988 ;; Registers used:
   989 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   990 ;; Tracked objects:
   991 ;;		On entry : 17F/0
   992 ;;		On exit  : 60/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   995 ;;      Params:         0       0       0       0       0
   996 ;;      Locals:         0       0       4       0       0
   997 ;;      Temps:          0       0       1       0       0
   998 ;;      Totals:         0       0       5       0       0
   999 ;;Total ram usage:        5 bytes
  1000 ;; Hardware stack levels required when called:    5
  1001 ;; This function calls:
  1002 ;;		_initPin
  1003 ;;		_setPinInitVaule
  1004 ;;		_selectAdChannel
  1005 ;;		_clock_config
  1006 ;;		_timer1_config
  1007 ;;		_timer1_interrupt_config
  1008 ;;		_adc_test_init
  1009 ;;		_startTwentyMinTimer
  1010 ;;		_adc_start
  1011 ;;		_process_AD_Converter_Value
  1012 ;;		_isPermitSampleTime
  1013 ;;		_clrSampeTime
  1014 ;;		_isFinishedTwentyMinTimer
  1015 ;;		_getAdOriginalCh13Value
  1016 ;;		_pwm_start
  1017 ;;		_setPB3
  1018 ;;		_setPB4
  1019 ;;		_setPB5
  1020 ;;		_clearTwentyMinTimer
  1021 ;;		_startTwelveHourTimer
  1022 ;;		_isFinishedTwelveHoursTimer
  1023 ;;		_clearTwelveHoursTimer
  1024 ;;		_startThreeHoursTimer
  1025 ;;		_isFinishedThreeHoursTimer
  1026 ;;		_clearThreeHoursTimer
  1027 ;;		_startOneHoursTimer
  1028 ;;		_isFinishedOneHoursTimer
  1029 ;;		_reset
  1030 ;;		_setWaitResetFlag
  1031 ;; This function is called by:
  1032 ;;		Startup code after reset
  1033 ;; This function uses a non-reentrant model
  1034 ;;
  1035  0217                     _main:	
  1036                           
  1037                           ;main.c: 499: enum systemStep {
  1038                           ;main.c: 500: INIT_STEP = 0,
  1039                           ;main.c: 501: START_UP_PWM_STEP,
  1040                           ;main.c: 502: CHECK_10_HOUR_TIMER_STEP,
  1041                           ;main.c: 503: STARTUP_3_HOUR_TIMER_STEP,
  1042                           ;main.c: 504: CHECK_3_HOUR_TIMER_STEP,
  1043                           ;main.c: 505: STARTUP_1_HOUR_TIMER_STEP,
  1044                           ;main.c: 506: CHECK_1_HOUR_TIMER_STEP,
  1045                           ;main.c: 507: READY_FOR_RESET_STEP = 99,
  1046                           ;main.c: 508: DELAY_ONE_SECOND_FOR_PWM,
  1047                           ;main.c: 509: MEET_RESET_CONDITION_STEP,
  1048                           ;main.c: 510: RESET_STEP,
  1049                           ;main.c: 511: };
  1050                           ;main.c: 513: static enum systemStep ucStep = INIT_STEP;
  1051                           
  1052                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1053  0217  118A  24DC  118A   	fcall	_initPin
  1054                           
  1055                           ;main.c: 527: setPinInitVaule();
  1056  021A  118A  250D  118A   	fcall	_setPinInitVaule
  1057                           
  1058                           ;main.c: 528: selectAdChannel();
  1059  021D  118A  25E2  118A   	fcall	_selectAdChannel
  1060                           
  1061                           ;main.c: 530: clock_config();
  1062  0220  118A  25CA  118A   	fcall	_clock_config
  1063                           
  1064                           ;main.c: 531: timer1_config();
  1065  0223  118A  25B8  118A   	fcall	_timer1_config
  1066                           
  1067                           ;main.c: 532: timer1_interrupt_config();
  1068  0226  118A  25E9  118A   	fcall	_timer1_interrupt_config
  1069                           
  1070                           ;main.c: 534: adc_test_init(12,3);
  1071  0229  3003               	movlw	3
  1072  022A  1283               	bcf	3,5	;RP0=0, select bank0
  1073  022B  00B5               	movwf	?_adc_test_init
  1074  022C  300C               	movlw	12
  1075  022D  118A  24BD  118A   	fcall	_adc_test_init
  1076                           
  1077                           ;main.c: 540: startTwentyMinTimer( 60 );
  1078  0230  303C               	movlw	60
  1079  0231  1283               	bcf	3,5	;RP0=0, select bank0
  1080  0232  00B5               	movwf	?_startTwentyMinTimer
  1081  0233  01B6               	clrf	?_startTwentyMinTimer+1
  1082  0234  118A  2581  118A   	fcall	_startTwentyMinTimer
  1083                           
  1084                           ;main.c: 541: _delay(1000);
  1085  0237  30F9               	movlw	249
  1086  0238  1683               	bsf	3,5	;RP0=1, select bank1
  1087  0239  00CD               	movwf	??_main^(0+128)
  1088  023A                     u2277:	
  1089  023A  0064               	clrwdt
  1090  023B  0BCD               	decfsz	??_main^(0+128),f
  1091  023C  2A3A               	goto	u2277
  1092  023D  2A3E               	nop2	;nop
  1093  023E  0064               	clrwdt
  1094                           
  1095                           ;main.c: 542: adc_start();
  1096  023F  118A  24D8  118A   	fcall	_adc_start
  1097  0242                     l4270:	
  1098  0242  0064               	clrwdt	;#
  1099                           
  1100                           ;main.c: 555: process_AD_Converter_Value();
  1101  0243  118A  248C  118A   	fcall	_process_AD_Converter_Value
  1102                           
  1103                           ;main.c: 557: if( isPermitSampleTime() )
  1104  0246  118A  25DE  118A   	fcall	_isPermitSampleTime
  1105  0249  3A00               	xorlw	0
  1106  024A  1903               	skipnz
  1107  024B  2A42               	goto	l4270
  1108                           
  1109                           ;main.c: 558: {
  1110                           ;main.c: 561: clrSampeTime();
  1111  024C  118A  25EC  118A   	fcall	_clrSampeTime
  1112                           
  1113                           ;main.c: 570: switch(ucStep)
  1114  024F  2BAF               	goto	l4430
  1115  0250                     l4278:	
  1116                           
  1117                           ;main.c: 574: {
  1118                           ;main.c: 579: static unsigned char ucTimerP3s = 0;
  1119                           ;main.c: 581: if( isFinishedTwentyMinTimer() )
  1120  0250  118A  25AE  118A   	fcall	_isFinishedTwentyMinTimer
  1121  0253  3A00               	xorlw	0
  1122  0254  1903               	skipnz
  1123  0255  2A5A               	goto	l4284
  1124                           
  1125                           ;main.c: 582: {
  1126                           ;main.c: 583: ucStep = READY_FOR_RESET_STEP;
  1127  0256  3063               	movlw	99
  1128  0257  00D4               	movwf	main@ucStep
  1129                           
  1130                           ;main.c: 584: ucTimerP3s = 0;
  1131  0258  01D5               	clrf	main@ucTimerP3s
  1132                           
  1133                           ;main.c: 585: }
  1134  0259  2A42               	goto	l4270
  1135  025A                     l4284:	
  1136                           
  1137                           ;main.c: 586: else
  1138                           ;main.c: 587: {
  1139                           ;main.c: 588: if( getAdOriginalCh13Value() > 90 )
  1140  025A  118A  23D4  118A   	fcall	_getAdOriginalCh13Value
  1141  025D  3000               	movlw	0
  1142  025E  023C               	subwf	?_getAdOriginalCh13Value+1,w
  1143  025F  305B               	movlw	91
  1144  0260  1903               	skipnz
  1145  0261  023B               	subwf	?_getAdOriginalCh13Value,w
  1146  0262  1C03               	skipc
  1147  0263  2A66               	goto	l4288
  1148                           
  1149                           ;main.c: 589: {
  1150                           ;main.c: 590: ucTimerP3s++;
  1151  0264  0AD5               	incf	main@ucTimerP3s,f
  1152                           
  1153                           ;main.c: 591: }
  1154  0265  2A67               	goto	l4290
  1155  0266                     l4288:	
  1156                           
  1157                           ;main.c: 592: else
  1158                           ;main.c: 593: ucTimerP3s = 0;
  1159  0266  01D5               	clrf	main@ucTimerP3s
  1160  0267                     l4290:	
  1161                           
  1162                           ;main.c: 595: if( ucTimerP3s >= 30)
  1163  0267  301E               	movlw	30
  1164  0268  0255               	subwf	main@ucTimerP3s,w
  1165  0269  1C03               	skipc
  1166  026A  2A42               	goto	l4270
  1167                           
  1168                           ;main.c: 596: {
  1169                           ;main.c: 597: ucTimerP3s = 0;
  1170  026B  01D5               	clrf	main@ucTimerP3s
  1171                           
  1172                           ;main.c: 598: ucStep = START_UP_PWM_STEP;
  1173  026C  01D4               	clrf	main@ucStep
  1174  026D  0AD4               	incf	main@ucStep,f
  1175  026E                     l737:	
  1176                           
  1177                           ;main.c: 599: }
  1178                           ;main.c: 601: }
  1179                           ;main.c: 605: break;
  1180  026E  2A42               	goto	l4270
  1181  026F                     l4296:	
  1182                           
  1183                           ;main.c: 609: {
  1184                           ;main.c: 614: pwm_start(150,249);
  1185  026F  30F9               	movlw	249
  1186  0270  00B5               	movwf	?_pwm_start
  1187  0271  3096               	movlw	150
  1188  0272  118A  252E  118A   	fcall	_pwm_start
  1189                           
  1190                           ;main.c: 616: setPB3(0);
  1191  0275  3000               	movlw	0
  1192  0276  118A  2515  118A   	fcall	_setPB3
  1193                           
  1194                           ;main.c: 617: setPB4(1);
  1195  0279  3001               	movlw	1
  1196  027A  118A  251E  118A   	fcall	_setPB4
  1197                           
  1198                           ;main.c: 618: setPB5(0);
  1199  027D  3000               	movlw	0
  1200  027E  118A  2526  118A   	fcall	_setPB5
  1201                           
  1202                           ;main.c: 619: clearTwentyMinTimer();
  1203  0281  118A  25DA  118A   	fcall	_clearTwentyMinTimer
  1204                           
  1205                           ;main.c: 620: startTwelveHourTimer( 240);
  1206  0284  30F0               	movlw	240
  1207  0285  00B5               	movwf	?_startTwelveHourTimer
  1208  0286  01B6               	clrf	?_startTwelveHourTimer+1
  1209  0287  118A  2573  118A   	fcall	_startTwelveHourTimer
  1210                           
  1211                           ;main.c: 621: ucStep = CHECK_10_HOUR_TIMER_STEP;
  1212  028A  3002               	movlw	2
  1213  028B  2BAB               	goto	L8
  1214  028C                     l4304:	
  1215                           ;main.c: 622: break;
  1216                           
  1217                           
  1218                           ;main.c: 626: {
  1219                           ;main.c: 631: static unsigned char ucTimerP5s = 0;
  1220                           ;main.c: 633: if( isFinishedTwelveHoursTimer () )
  1221  028C  118A  25A4  118A   	fcall	_isFinishedTwelveHoursTimer
  1222  028F  3A00               	xorlw	0
  1223  0290  1903               	skipnz
  1224  0291  2A94               	goto	l4308
  1225  0292                     l4306:	
  1226                           
  1227                           ;main.c: 634: ucStep = READY_FOR_RESET_STEP;
  1228  0292  3063               	movlw	99
  1229  0293  2BAB               	goto	L8
  1230  0294                     l4308:	
  1231                           
  1232                           ;main.c: 635: else
  1233                           ;main.c: 636: {
  1234                           ;main.c: 637: if( getAdOriginalCh13Value() < 200 )
  1235  0294  118A  23D4  118A   	fcall	_getAdOriginalCh13Value
  1236  0297  3000               	movlw	0
  1237  0298  023C               	subwf	?_getAdOriginalCh13Value+1,w
  1238  0299  30C8               	movlw	200
  1239  029A  1903               	skipnz
  1240  029B  023B               	subwf	?_getAdOriginalCh13Value,w
  1241  029C  1803               	skipnc
  1242  029D  2AA0               	goto	l4312
  1243                           
  1244                           ;main.c: 638: ucTimerP5s++;
  1245  029E  0AD6               	incf	main@ucTimerP5s,f
  1246  029F  2AA1               	goto	l4314
  1247  02A0                     l4312:	
  1248                           
  1249                           ;main.c: 639: else
  1250                           ;main.c: 640: ucTimerP5s = 0;
  1251  02A0  01D6               	clrf	main@ucTimerP5s
  1252  02A1                     l4314:	
  1253                           
  1254                           ;main.c: 642: if( ucTimerP5s >= 10)
  1255  02A1  300A               	movlw	10
  1256  02A2  0256               	subwf	main@ucTimerP5s,w
  1257  02A3  1C03               	skipc
  1258  02A4  2A42               	goto	l4270
  1259  02A5  3003               	movlw	3
  1260                           
  1261                           ;main.c: 643: {
  1262                           ;main.c: 644: ucTimerP5s = 0;
  1263  02A6  01D6               	clrf	main@ucTimerP5s
  1264                           
  1265                           ;main.c: 645: ucStep = STARTUP_3_HOUR_TIMER_STEP;
  1266  02A7  2BAB               	goto	L8
  1267  02A8                     l4320:	
  1268                           
  1269                           ;main.c: 653: {
  1270                           ;main.c: 654: clearTwelveHoursTimer();
  1271  02A8  118A  25D6  118A   	fcall	_clearTwelveHoursTimer
  1272                           
  1273                           ;main.c: 655: startThreeHoursTimer(180);
  1274  02AB  30B4               	movlw	180
  1275  02AC  00B5               	movwf	?_startThreeHoursTimer
  1276  02AD  01B6               	clrf	?_startThreeHoursTimer+1
  1277  02AE  118A  2565  118A   	fcall	_startThreeHoursTimer
  1278                           
  1279                           ;main.c: 656: ucStep = CHECK_3_HOUR_TIMER_STEP;
  1280  02B1  3004               	movlw	4
  1281  02B2  2BAB               	goto	L8
  1282  02B3                     l4324:	
  1283                           ;main.c: 657: break;
  1284                           
  1285                           
  1286                           ;main.c: 661: {
  1287                           ;main.c: 662: static unsigned char ucTimerP5s = 0;
  1288                           ;main.c: 664: if( isFinishedThreeHoursTimer() )
  1289  02B3  118A  259A  118A   	fcall	_isFinishedThreeHoursTimer
  1290  02B6  3A00               	xorlw	0
  1291  02B7  1D03               	btfss	3,2
  1292  02B8  2A92               	goto	l4306
  1293                           
  1294                           ;main.c: 666: else
  1295                           ;main.c: 667: {
  1296                           ;main.c: 668: if( getAdOriginalCh13Value() < 75 )
  1297  02B9  118A  23D4  118A   	fcall	_getAdOriginalCh13Value
  1298  02BC  3000               	movlw	0
  1299  02BD  023C               	subwf	?_getAdOriginalCh13Value+1,w
  1300  02BE  304B               	movlw	75
  1301  02BF  1903               	skipnz
  1302  02C0  023B               	subwf	?_getAdOriginalCh13Value,w
  1303  02C1  1803               	skipnc
  1304  02C2  2AC5               	goto	l4332
  1305                           
  1306                           ;main.c: 669: ucTimerP5s++;
  1307  02C3  0AD2               	incf	main@cTimerP5s_781,f
  1308  02C4  2AC6               	goto	l4334
  1309  02C5                     l4332:	
  1310                           
  1311                           ;main.c: 670: else
  1312                           ;main.c: 671: ucTimerP5s = 0;
  1313  02C5  01D2               	clrf	main@cTimerP5s_781
  1314  02C6                     l4334:	
  1315                           
  1316                           ;main.c: 673: if( ucTimerP5s >= 10)
  1317  02C6  300A               	movlw	10
  1318  02C7  0252               	subwf	main@cTimerP5s_781,w
  1319  02C8  1C03               	skipc
  1320  02C9  2A42               	goto	l4270
  1321  02CA  3005               	movlw	5
  1322                           
  1323                           ;main.c: 674: {
  1324                           ;main.c: 675: ucTimerP5s = 0;
  1325  02CB  01D2               	clrf	main@cTimerP5s_781
  1326                           
  1327                           ;main.c: 676: ucStep = STARTUP_1_HOUR_TIMER_STEP;
  1328  02CC  2BAB               	goto	L8
  1329  02CD                     l4340:	
  1330                           
  1331                           ;main.c: 683: {
  1332                           ;main.c: 684: clearThreeHoursTimer();
  1333  02CD  118A  25D2  118A   	fcall	_clearThreeHoursTimer
  1334                           
  1335                           ;main.c: 685: startOneHoursTimer( 120 );
  1336  02D0  3078               	movlw	120
  1337  02D1  00B5               	movwf	?_startOneHoursTimer
  1338  02D2  01B6               	clrf	?_startOneHoursTimer+1
  1339  02D3  118A  2557  118A   	fcall	_startOneHoursTimer
  1340                           
  1341                           ;main.c: 686: setPB3(1);
  1342  02D6  3001               	movlw	1
  1343  02D7  118A  2515  118A   	fcall	_setPB3
  1344                           
  1345                           ;main.c: 687: setPB4(0);
  1346  02DA  3000               	movlw	0
  1347  02DB  118A  251E  118A   	fcall	_setPB4
  1348                           
  1349                           ;main.c: 688: setPB5(1);
  1350  02DE  3001               	movlw	1
  1351  02DF  118A  2526  118A   	fcall	_setPB5
  1352                           
  1353                           ;main.c: 689: ucStep = CHECK_1_HOUR_TIMER_STEP;
  1354  02E2  3006               	movlw	6
  1355  02E3  2BAB               	goto	L8
  1356  02E4                     l4352:	
  1357                           ;main.c: 690: break;
  1358                           
  1359                           
  1360                           ;main.c: 694: {
  1361                           ;main.c: 699: static unsigned int uiTimerOneP5s = 0;
  1362                           ;main.c: 700: static unsigned int uiTimerTwoP5s = 0;
  1363                           ;main.c: 701: static unsigned int uiTimerThreeP5s = 0;
  1364                           ;main.c: 703: unsigned int uiCh13Value = getAdOriginalCh13Value();
  1365  02E4  118A  23D4  118A   	fcall	_getAdOriginalCh13Value
  1366  02E7  083C               	movf	?_getAdOriginalCh13Value+1,w
  1367  02E8  1683               	bsf	3,5	;RP0=1, select bank1
  1368  02E9  00D1               	movwf	(main@uiCh13Value+1)^(0+128)
  1369  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  1370  02EB  083B               	movf	?_getAdOriginalCh13Value,w
  1371  02EC  1683               	bsf	3,5	;RP0=1, select bank1
  1372  02ED  00D0               	movwf	main@uiCh13Value^(0+128)
  1373                           
  1374                           ;main.c: 706: if( isFinishedOneHoursTimer() )
  1375  02EE  118A  258F  118A   	fcall	_isFinishedOneHoursTimer
  1376  02F1  3A00               	xorlw	0
  1377  02F2  1D03               	btfss	3,2
  1378  02F3  2A92               	goto	l4306
  1379                           
  1380                           ;main.c: 708: else
  1381                           ;main.c: 709: {
  1382                           ;main.c: 710: if( uiCh13Value > 85 )
  1383  02F4  3000               	movlw	0
  1384  02F5  1683               	bsf	3,5	;RP0=1, select bank1
  1385  02F6  0251               	subwf	(main@uiCh13Value+1)^(0+128),w
  1386  02F7  3056               	movlw	86
  1387  02F8  1903               	skipnz
  1388  02F9  0250               	subwf	main@uiCh13Value^(0+128),w
  1389  02FA  1C03               	skipc
  1390  02FB  2B0B               	goto	l4368
  1391                           
  1392                           ;main.c: 711: {
  1393                           ;main.c: 712: if( uiTimerOneP5s <= 10 )
  1394  02FC  3000               	movlw	0
  1395  02FD  0225               	subwf	(main@uiTimerOneP5s+1)^(0+128),w
  1396  02FE  300B               	movlw	11
  1397  02FF  1903               	skipnz
  1398  0300  0224               	subwf	main@uiTimerOneP5s^(0+128),w
  1399  0301  1803               	skipnc
  1400  0302  2B06               	goto	l4364
  1401                           
  1402                           ;main.c: 713: uiTimerOneP5s++;
  1403  0303  0AA4               	incf	main@uiTimerOneP5s^(0+128),f
  1404  0304  1903               	skipnz
  1405  0305  0AA5               	incf	(main@uiTimerOneP5s+1)^(0+128),f
  1406  0306                     l4364:	
  1407                           
  1408                           ;main.c: 714: uiTimerTwoP5s = 0;
  1409  0306  01A8               	clrf	main@uiTimerTwoP5s^(0+128)
  1410  0307  01A9               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1411                           
  1412                           ;main.c: 715: uiTimerThreeP5s = 0;
  1413  0308  01A6               	clrf	main@uiTimerThreeP5s^(0+128)
  1414  0309  01A7               	clrf	(main@uiTimerThreeP5s+1)^(0+128)
  1415                           
  1416                           ;main.c: 716: }
  1417  030A  2B0D               	goto	l4370
  1418  030B                     l4368:	
  1419                           
  1420                           ;main.c: 717: else
  1421                           ;main.c: 718: {
  1422                           ;main.c: 719: uiTimerOneP5s = 0;
  1423  030B  01A4               	clrf	main@uiTimerOneP5s^(0+128)
  1424  030C  01A5               	clrf	(main@uiTimerOneP5s+1)^(0+128)
  1425  030D                     l4370:	
  1426                           
  1427                           ;main.c: 720: }
  1428                           ;main.c: 723: if(uiTimerOneP5s > 10)
  1429  030D  3000               	movlw	0
  1430  030E  0225               	subwf	(main@uiTimerOneP5s+1)^(0+128),w
  1431  030F  300B               	movlw	11
  1432  0310  1903               	skipnz
  1433  0311  0224               	subwf	main@uiTimerOneP5s^(0+128),w
  1434                           
  1435                           ;main.c: 724: {
  1436                           ;main.c: 725: setPB3(0);
  1437  0312  3000               	movlw	0
  1438  0313  1C03               	skipc
  1439  0314  2B26               	goto	L9
  1440  0315  118A  2515  118A   	fcall	_setPB3
  1441                           
  1442                           ;main.c: 726: setPB4(1);
  1443  0318  3001               	movlw	1
  1444  0319  118A  251E  118A   	fcall	_setPB4
  1445                           
  1446                           ;main.c: 727: setPB5(0);
  1447  031C  3000               	movlw	0
  1448  031D  118A  2526  118A   	fcall	_setPB5
  1449                           
  1450                           ;main.c: 729: uiTimerOneP5s = 0;
  1451  0320  1683               	bsf	3,5	;RP0=1, select bank1
  1452  0321  01A4               	clrf	main@uiTimerOneP5s^(0+128)
  1453  0322  01A5               	clrf	(main@uiTimerOneP5s+1)^(0+128)
  1454                           
  1455                           ;main.c: 730: uiTimerTwoP5s = 0;
  1456  0323  01A8               	clrf	main@uiTimerTwoP5s^(0+128)
  1457  0324  01A9               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1458                           
  1459                           ;main.c: 731: }
  1460  0325  2A42               	goto	l4270
  1461  0326                     L9:	
  1462                           ;main.c: 732: else
  1463                           ;main.c: 733: {
  1464                           ;main.c: 734: if( uiCh13Value < 75 )
  1465                           
  1466  0326  0251               	subwf	(main@uiCh13Value+1)^(0+128),w
  1467  0327  304B               	movlw	75
  1468  0328  1903               	skipnz
  1469  0329  0250               	subwf	main@uiCh13Value^(0+128),w
  1470  032A  1803               	skipnc
  1471  032B  2B37               	goto	l4384
  1472                           
  1473                           ;main.c: 735: {
  1474                           ;main.c: 736: if( uiTimerTwoP5s <= 10)
  1475  032C  3000               	movlw	0
  1476  032D  0229               	subwf	(main@uiTimerTwoP5s+1)^(0+128),w
  1477  032E  300B               	movlw	11
  1478  032F  1903               	skipnz
  1479  0330  0228               	subwf	main@uiTimerTwoP5s^(0+128),w
  1480  0331  1803               	skipnc
  1481  0332  2B3B               	goto	l4386
  1482                           
  1483                           ;main.c: 737: uiTimerTwoP5s++;
  1484  0333  0AA8               	incf	main@uiTimerTwoP5s^(0+128),f
  1485  0334  1903               	skipnz
  1486  0335  0AA9               	incf	(main@uiTimerTwoP5s+1)^(0+128),f
  1487  0336  2B3B               	goto	l4386
  1488  0337                     l4384:	
  1489                           
  1490                           ;main.c: 739: else
  1491                           ;main.c: 740: {
  1492                           ;main.c: 741: uiTimerTwoP5s = 0;
  1493  0337  01A8               	clrf	main@uiTimerTwoP5s^(0+128)
  1494  0338  01A9               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1495                           
  1496                           ;main.c: 742: uiTimerThreeP5s = 0;
  1497  0339  01A6               	clrf	main@uiTimerThreeP5s^(0+128)
  1498  033A  01A7               	clrf	(main@uiTimerThreeP5s+1)^(0+128)
  1499  033B                     l4386:	
  1500                           
  1501                           ;main.c: 743: }
  1502                           ;main.c: 745: if(uiTimerTwoP5s > 10)
  1503  033B  3000               	movlw	0
  1504  033C  0229               	subwf	(main@uiTimerTwoP5s+1)^(0+128),w
  1505  033D  300B               	movlw	11
  1506  033E  1903               	skipnz
  1507  033F  0228               	subwf	main@uiTimerTwoP5s^(0+128),w
  1508  0340  1C03               	skipc
  1509  0341  2A42               	goto	l4270
  1510                           
  1511                           ;main.c: 746: {
  1512                           ;main.c: 747: setPB3(1);
  1513  0342  3001               	movlw	1
  1514  0343  118A  2515  118A   	fcall	_setPB3
  1515                           
  1516                           ;main.c: 748: setPB4(0);
  1517  0346  3000               	movlw	0
  1518  0347  118A  251E  118A   	fcall	_setPB4
  1519                           
  1520                           ;main.c: 749: setPB5(1);
  1521  034A  3001               	movlw	1
  1522  034B  118A  2526  118A   	fcall	_setPB5
  1523                           
  1524                           ;main.c: 751: if(uiCh13Value < 25)
  1525  034E  3000               	movlw	0
  1526  034F  1683               	bsf	3,5	;RP0=1, select bank1
  1527  0350  0251               	subwf	(main@uiCh13Value+1)^(0+128),w
  1528  0351  3019               	movlw	25
  1529  0352  1903               	skipnz
  1530  0353  0250               	subwf	main@uiCh13Value^(0+128),w
  1531  0354  1803               	skipnc
  1532  0355  2B5A               	goto	l4394
  1533                           
  1534                           ;main.c: 752: uiTimerThreeP5s++;
  1535  0356  0AA6               	incf	main@uiTimerThreeP5s^(0+128),f
  1536  0357  1903               	skipnz
  1537  0358  0AA7               	incf	(main@uiTimerThreeP5s+1)^(0+128),f
  1538  0359  2B5C               	goto	l4396
  1539  035A                     l4394:	
  1540                           
  1541                           ;main.c: 753: else
  1542                           ;main.c: 754: uiTimerThreeP5s = 0;
  1543  035A  01A6               	clrf	main@uiTimerThreeP5s^(0+128)
  1544  035B  01A7               	clrf	(main@uiTimerThreeP5s+1)^(0+128)
  1545  035C                     l4396:	
  1546                           
  1547                           ;main.c: 756: if(uiTimerThreeP5s > 50)
  1548  035C  3000               	movlw	0
  1549  035D  0227               	subwf	(main@uiTimerThreeP5s+1)^(0+128),w
  1550  035E  3033               	movlw	51
  1551  035F  1903               	skipnz
  1552  0360  0226               	subwf	main@uiTimerThreeP5s^(0+128),w
  1553  0361  1C03               	skipc
  1554  0362  2A42               	goto	l4270
  1555  0363                     l4398:	
  1556                           
  1557                           ;main.c: 757: reset();
  1558  0363  118A  25EE  118A   	fcall	_reset
  1559  0366  2A42               	goto	l4270
  1560  0367                     l4400:	
  1561                           
  1562                           ;main.c: 766: {
  1563                           ;main.c: 767: setPB3(0);
  1564  0367  3000               	movlw	0
  1565  0368  118A  2515  118A   	fcall	_setPB3
  1566                           
  1567                           ;main.c: 768: setPB4(0);
  1568  036B  3000               	movlw	0
  1569  036C  118A  251E  118A   	fcall	_setPB4
  1570                           
  1571                           ;main.c: 769: setPB5(1);
  1572  036F  3001               	movlw	1
  1573  0370  118A  2526  118A   	fcall	_setPB5
  1574                           
  1575                           ;main.c: 772: setWaitResetFlag(1);
  1576  0373  3001               	movlw	1
  1577  0374  118A  25E6  118A   	fcall	_setWaitResetFlag
  1578                           
  1579                           ;main.c: 773: pwm_start(150,249);
  1580  0377  30F9               	movlw	249
  1581  0378  00B5               	movwf	?_pwm_start
  1582  0379  3096               	movlw	150
  1583  037A  118A  252E  118A   	fcall	_pwm_start
  1584                           
  1585                           ;main.c: 779: ucStep = DELAY_ONE_SECOND_FOR_PWM;
  1586  037D  3064               	movlw	100
  1587  037E  2BAB               	goto	L8
  1588  037F                     l4404:	
  1589                           ;main.c: 780: break;
  1590                           
  1591                           
  1592                           ;main.c: 784: {
  1593                           ;main.c: 785: static unsigned ucDelay1s = 0;
  1594                           ;main.c: 786: if(ucDelay1s <= 50)
  1595  037F  3000               	movlw	0
  1596  0380  1683               	bsf	3,5	;RP0=1, select bank1
  1597  0381  0223               	subwf	(main@ucDelay1s+1)^(0+128),w
  1598  0382  3033               	movlw	51
  1599  0383  1903               	skipnz
  1600  0384  0222               	subwf	main@ucDelay1s^(0+128),w
  1601  0385  1803               	skipnc
  1602  0386  2B8B               	goto	l4408
  1603                           
  1604                           ;main.c: 787: ucDelay1s++;
  1605  0387  0AA2               	incf	main@ucDelay1s^(0+128),f
  1606  0388  1903               	skipnz
  1607  0389  0AA3               	incf	(main@ucDelay1s+1)^(0+128),f
  1608  038A  2A42               	goto	l4270
  1609  038B                     l4408:	
  1610  038B  3065               	movlw	101
  1611                           
  1612                           ;main.c: 788: else
  1613                           ;main.c: 789: {
  1614                           ;main.c: 790: ucDelay1s = 0;
  1615  038C  01A2               	clrf	main@ucDelay1s^(0+128)
  1616  038D  01A3               	clrf	(main@ucDelay1s+1)^(0+128)
  1617                           
  1618                           ;main.c: 791: ucStep = MEET_RESET_CONDITION_STEP;
  1619  038E  1283               	bcf	3,5	;RP0=0, select bank0
  1620  038F  2BAB               	goto	L8
  1621  0390                     l4412:	
  1622                           
  1623                           ;main.c: 801: {
  1624                           ;main.c: 802: static unsigned char ucTimerP5s = 0;
  1625                           ;main.c: 803: unsigned int ucChValue = getAdOriginalCh13Value();
  1626  0390  118A  23D4  118A   	fcall	_getAdOriginalCh13Value
  1627  0393  083C               	movf	?_getAdOriginalCh13Value+1,w
  1628  0394  1683               	bsf	3,5	;RP0=1, select bank1
  1629  0395  00CF               	movwf	(main@ucChValue+1)^(0+128)
  1630  0396  1283               	bcf	3,5	;RP0=0, select bank0
  1631  0397  083B               	movf	?_getAdOriginalCh13Value,w
  1632  0398  1683               	bsf	3,5	;RP0=1, select bank1
  1633  0399  00CE               	movwf	main@ucChValue^(0+128)
  1634                           
  1635                           ;main.c: 805: if( ucChValue > 50 )
  1636  039A  3000               	movlw	0
  1637  039B  024F               	subwf	(main@ucChValue+1)^(0+128),w
  1638  039C  3033               	movlw	51
  1639  039D  1903               	skipnz
  1640  039E  024E               	subwf	main@ucChValue^(0+128),w
  1641  039F  1C03               	skipc
  1642  03A0  2BA4               	goto	l4418
  1643                           
  1644                           ;main.c: 806: ucTimerP5s++;
  1645  03A1  1283               	bcf	3,5	;RP0=0, select bank0
  1646  03A2  0AD3               	incf	main@cTimerP5s_787,f
  1647  03A3  2BA6               	goto	l4420
  1648  03A4                     l4418:	
  1649                           
  1650                           ;main.c: 807: else
  1651                           ;main.c: 808: ucTimerP5s = 0;
  1652  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  1653  03A5  01D3               	clrf	main@cTimerP5s_787
  1654  03A6                     l4420:	
  1655                           
  1656                           ;main.c: 810: if(ucTimerP5s >= 50)
  1657  03A6  3032               	movlw	50
  1658  03A7  0253               	subwf	main@cTimerP5s_787,w
  1659  03A8  1C03               	skipc
  1660  03A9  2A42               	goto	l4270
  1661                           
  1662                           ;main.c: 811: ucStep = RESET_STEP;
  1663  03AA  3066               	movlw	102
  1664  03AB                     L8:	
  1665  03AB  00D4               	movwf	main@ucStep
  1666  03AC  2A42               	goto	l4270
  1667  03AD                     l4424:	
  1668                           
  1669                           ;main.c: 816: {
  1670                           ;main.c: 817: ucStep = INIT_STEP;
  1671  03AD  01D4               	clrf	main@ucStep
  1672  03AE  2B63               	goto	l4398
  1673  03AF                     l4430:	
  1674  03AF  0854               	movf	main@ucStep,w
  1675                           
  1676                           ; Switch size 1, requested type "space"
  1677                           ; Number of cases is 11, Range of values is 0 to 102
  1678                           ; switch strategies available:
  1679                           ; Name         Instructions Cycles
  1680                           ; simple_byte           34    18 (average)
  1681                           ; direct_byte          213     7 (fixed)
  1682                           ; jumptable            260     6 (fixed)
  1683                           ; rangetable           107     6 (fixed)
  1684                           ; spacedrange          212     9 (fixed)
  1685                           ; locatedrange         103     3 (fixed)
  1686                           ;	Chosen strategy is simple_byte
  1687  03B0  3A00               	xorlw	0	; case 0
  1688  03B1  1903               	skipnz
  1689  03B2  2A50               	goto	l4278
  1690  03B3  3A01               	xorlw	1	; case 1
  1691  03B4  1903               	skipnz
  1692  03B5  2A6F               	goto	l4296
  1693  03B6  3A03               	xorlw	3	; case 2
  1694  03B7  1903               	skipnz
  1695  03B8  2A8C               	goto	l4304
  1696  03B9  3A01               	xorlw	1	; case 3
  1697  03BA  1903               	skipnz
  1698  03BB  2AA8               	goto	l4320
  1699  03BC  3A07               	xorlw	7	; case 4
  1700  03BD  1903               	skipnz
  1701  03BE  2AB3               	goto	l4324
  1702  03BF  3A01               	xorlw	1	; case 5
  1703  03C0  1903               	skipnz
  1704  03C1  2ACD               	goto	l4340
  1705  03C2  3A03               	xorlw	3	; case 6
  1706  03C3  1903               	skipnz
  1707  03C4  2AE4               	goto	l4352
  1708  03C5  3A65               	xorlw	101	; case 99
  1709  03C6  1903               	skipnz
  1710  03C7  2B67               	goto	l4400
  1711  03C8  3A07               	xorlw	7	; case 100
  1712  03C9  1903               	skipnz
  1713  03CA  2B7F               	goto	l4404
  1714  03CB  3A01               	xorlw	1	; case 101
  1715  03CC  1903               	skipnz
  1716  03CD  2B90               	goto	l4412
  1717  03CE  3A03               	xorlw	3	; case 102
  1718  03CF  1903               	skipnz
  1719  03D0  2BAD               	goto	l4424
  1720  03D1  2A6E               	goto	l737
  1721  03D2  118A  2811         	ljmp	start
  1722  03D4                     __end_of_main:	
  1723                           
  1724                           	psect	text1231
  1725  03D4                     __ptext1231:	
  1726 ;; =============== function _main ends ============
  1727                           
  1728                           
  1729 ;; *************** function _getAdOriginalCh13Value *****************
  1730 ;; Defined at:
  1731 ;;		line 372 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;		None
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;		None
  1736 ;; Return value:  Size  Location     Type
  1737 ;;                  2   27[BANK0 ] unsigned int 
  1738 ;; Registers used:
  1739 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1740 ;; Tracked objects:
  1741 ;;		On entry : 60/0
  1742 ;;		On exit  : 160/0
  1743 ;;		Unchanged: FFE00/0
  1744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1745 ;;      Params:         0       2       0       0       0
  1746 ;;      Locals:         0       0       0       0       0
  1747 ;;      Temps:          0       0       0       0       0
  1748 ;;      Totals:         0       2       0       0       0
  1749 ;;Total ram usage:        2 bytes
  1750 ;; Hardware stack levels used:    1
  1751 ;; Hardware stack levels required when called:    4
  1752 ;; This function calls:
  1753 ;;		_FilterCh13
  1754 ;; This function is called by:
  1755 ;;		_main
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758  03D4                     _getAdOriginalCh13Value:	
  1759                           
  1760                           ;common.c: 374: return FilterCh13(uiSampleCh13);
  1761                           
  1762                           ; Regs used in _getAdOriginalCh13Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  1763  03D4  30B2               	movlw	_uiSampleCh13& (0+255)
  1764  03D5  23DB               	fcall	_FilterCh13
  1765  03D6  0836               	movf	?_FilterCh13+1,w
  1766  03D7  00BC               	movwf	?_getAdOriginalCh13Value+1
  1767  03D8  0835               	movf	?_FilterCh13,w
  1768  03D9  00BB               	movwf	?_getAdOriginalCh13Value
  1769  03DA  0008               	return
  1770  03DB                     __end_of_getAdOriginalCh13Value:	
  1771  03DB                     __ptext1238:	
  1772 ;; =============== function _getAD_ConvertFlag ends ============
  1773                           
  1774                           
  1775 ;; *************** function _FilterCh13 *****************
  1776 ;; Defined at:
  1777 ;;		line 76 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;  tmpValue        1    wreg     PTR unsigned int 
  1780 ;;		 -> uiSampleCh13(6), 
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;  tmpValue        1    0[BANK1 ] PTR unsigned int 
  1783 ;;		 -> uiSampleCh13(6), 
  1784 ;;  cir             2   11[BANK1 ] int 
  1785 ;;  filter_buf      6    5[BANK1 ] unsigned int [3]
  1786 ;;  filter_sum      2    3[BANK1 ] unsigned int 
  1787 ;;  filter_temp     2    1[BANK1 ] unsigned int 
  1788 ;;  i               1   14[BANK1 ] unsigned char 
  1789 ;;  j               1   13[BANK1 ] unsigned char 
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  2   21[BANK0 ] unsigned int 
  1792 ;; Registers used:
  1793 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1794 ;; Tracked objects:
  1795 ;;		On entry : 60/0
  1796 ;;		On exit  : 160/0
  1797 ;;		Unchanged: FFE00/0
  1798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1799 ;;      Params:         0       2       0       0       0
  1800 ;;      Locals:         0       0      15       0       0
  1801 ;;      Temps:          0       4       0       0       0
  1802 ;;      Totals:         0       6      15       0       0
  1803 ;;Total ram usage:       21 bytes
  1804 ;; Hardware stack levels used:    1
  1805 ;; Hardware stack levels required when called:    3
  1806 ;; This function calls:
  1807 ;;		Nothing
  1808 ;; This function is called by:
  1809 ;;		_getAdOriginalCh13Value
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812  03DB                     _FilterCh13:	
  1813                           
  1814                           ; Regs used in _FilterCh13: [wreg-fsr0h+status,2+status,0+btemp+1]
  1815                           ;FilterCh13@tmpValue stored from wreg
  1816  03DB  1683               	bsf	3,5	;RP0=1, select bank1
  1817  03DC  00BE               	movwf	FilterCh13@tmpValue^(0+128)
  1818  03DD  01CB               	clrf	FilterCh13@j^(0+128)
  1819                           
  1820                           ;common.c: 79: unsigned int filter_temp = 0, filter_sum = 0;
  1821  03DE  01BF               	clrf	FilterCh13@filter_temp^(0+128)
  1822  03DF  01C0               	clrf	(FilterCh13@filter_temp+1)^(0+128)
  1823  03E0  01C1               	clrf	FilterCh13@filter_sum^(0+128)
  1824  03E1  01C2               	clrf	(FilterCh13@filter_sum+1)^(0+128)
  1825                           
  1826                           ;common.c: 81: unsigned int filter_buf[3];
  1827                           ;common.c: 83: for(int cir = 0;cir < 3; cir++)
  1828  03E2  01C9               	clrf	FilterCh13@cir^(0+128)
  1829  03E3  01CA               	clrf	(FilterCh13@cir+1)^(0+128)
  1830  03E4                     l4170:	
  1831                           
  1832                           ;common.c: 84: filter_buf[cir] = *tmpValue++;
  1833  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  1834  03E5  1303               	bcf	3,6	;RP1=0, select bank1
  1835  03E6  083E               	movf	FilterCh13@tmpValue^(0+128),w
  1836  03E7  0084               	movwf	4
  1837  03E8  1383               	bcf	3,7	;select IRP bank0
  1838  03E9  2470  118A         	fcall	PL4	;call to abstracted procedure
  1839  03EB  1683               	bsf	3,5	;RP0=1, select bank1
  1840  03EC  1003               	clrc
  1841  03ED  0D49               	rlf	FilterCh13@cir^(0+128),w
  1842  03EE  247C  118A         	fcall	PL7	;call to abstracted procedure
  1843  03F0  0ABE               	incf	FilterCh13@tmpValue^(0+128),f
  1844  03F1  0ABE               	incf	FilterCh13@tmpValue^(0+128),f
  1845  03F2  0AC9               	incf	FilterCh13@cir^(0+128),f
  1846  03F3  1903               	skipnz
  1847  03F4  0ACA               	incf	(FilterCh13@cir+1)^(0+128),f
  1848  03F5  084A               	movf	(FilterCh13@cir+1)^(0+128),w
  1849  03F6  3A80               	xorlw	128
  1850  03F7  00FF               	movwf	127
  1851  03F8  3080               	movlw	128
  1852  03F9  027F               	subwf	127,w
  1853  03FA  1D03               	skipz
  1854  03FB  2BFE               	goto	u1955
  1855  03FC  3003               	movlw	3
  1856  03FD  0249               	subwf	FilterCh13@cir^(0+128),w
  1857  03FE                     u1955:	
  1858  03FE  1C03               	skipc
  1859  03FF  2BE4               	goto	l4170
  1860                           
  1861                           ;common.c: 88: for(j = 0; j < 3 - 1; j++)
  1862  0400  1683               	bsf	3,5	;RP0=1, select bank1
  1863  0401  1303               	bcf	3,6	;RP1=0, select bank1
  1864  0402  01CB               	clrf	FilterCh13@j^(0+128)
  1865                           
  1866                           ;common.c: 89: {
  1867                           ;common.c: 90: for(i = 0; i < 3 - 1 - j; i++)
  1868  0403  01CC               	clrf	FilterCh13@i^(0+128)
  1869  0404                     l4192:	
  1870  0404  1283               	bcf	3,5	;RP0=0, select bank0
  1871  0405  01B8               	clrf	??_FilterCh13+1
  1872  0406  1683               	bsf	3,5	;RP0=1, select bank1
  1873  0407  084B               	movf	FilterCh13@j^(0+128),w
  1874  0408  3C02               	sublw	2
  1875  0409  1283               	bcf	3,5	;RP0=0, select bank0
  1876  040A  00B7               	movwf	??_FilterCh13
  1877  040B  1C03               	skipc
  1878  040C  03B8               	decf	??_FilterCh13+1,f
  1879  040D  0838               	movf	??_FilterCh13+1,w
  1880  040E  3A80               	xorlw	128
  1881  040F  3C80               	sublw	128
  1882  0410  1D03               	skipz
  1883  0411  2C15               	goto	u1975
  1884  0412  0837               	movf	??_FilterCh13,w
  1885  0413  1683               	bsf	3,5	;RP0=1, select bank1
  1886  0414  024C               	subwf	FilterCh13@i^(0+128),w
  1887  0415                     u1975:	
  1888  0415  1803               	btfsc	3,0
  1889  0416  2C4C               	goto	l4194
  1890                           
  1891                           ;common.c: 91: {
  1892                           ;common.c: 92: if(filter_buf[i] > filter_buf[i + 1])
  1893  0417  1683               	bsf	3,5	;RP0=1, select bank1
  1894  0418  1303               	bcf	3,6	;RP1=0, select bank1
  1895  0419  1003               	clrc
  1896  041A  2477  118A         	fcall	PL6	;call to abstracted procedure
  1897  041C  2470  118A         	fcall	PL4	;call to abstracted procedure
  1898  041E  1683               	bsf	3,5	;RP0=1, select bank1
  1899  041F  2486  118A         	fcall	PL9	;call to abstracted procedure
  1900  0421  0800               	movf	0,w
  1901  0422  1283               	bcf	3,5	;RP0=0, select bank0
  1902  0423  00B9               	movwf	??_FilterCh13+2
  1903  0424  0A84               	incf	4,f
  1904  0425  0800               	movf	0,w
  1905  0426  00BA               	movwf	??_FilterCh13+3
  1906  0427  0838               	movf	??_FilterCh13+1,w
  1907  0428  023A               	subwf	??_FilterCh13+3,w
  1908  0429  1D03               	skipz
  1909  042A  2C2D               	goto	u1965
  1910  042B  0837               	movf	??_FilterCh13,w
  1911  042C  0239               	subwf	??_FilterCh13+2,w
  1912  042D                     u1965:	
  1913  042D  1803               	skipnc
  1914  042E  2C49               	goto	l4190
  1915                           
  1916                           ;common.c: 93: {
  1917                           ;common.c: 95: filter_temp = filter_buf[i];
  1918  042F  1683               	bsf	3,5	;RP0=1, select bank1
  1919  0430  1003               	clrc
  1920  0431  0D4C               	rlf	FilterCh13@i^(0+128),w
  1921  0432  3EC3               	addlw	FilterCh13@filter_buf& (0+255)
  1922  0433  0084               	movwf	4
  1923  0434  0800               	movf	0,w
  1924  0435  00BF               	movwf	FilterCh13@filter_temp^(0+128)
  1925  0436  0A84               	incf	4,f
  1926  0437  0800               	movf	0,w
  1927  0438  00C0               	movwf	(FilterCh13@filter_temp+1)^(0+128)
  1928                           
  1929                           ;common.c: 97: filter_buf[i] = filter_buf[i + 1];
  1930  0439  2486  118A         	fcall	PL9	;call to abstracted procedure
  1931  043B  2470  118A         	fcall	PL4	;call to abstracted procedure
  1932  043D  1683               	bsf	3,5	;RP0=1, select bank1
  1933  043E  1003               	clrc
  1934  043F  0D4C               	rlf	FilterCh13@i^(0+128),w
  1935                           
  1936                           ;common.c: 99: filter_buf[i + 1] = filter_temp;
  1937  0440  247C  118A         	fcall	PL7	;call to abstracted procedure
  1938  0442  2486  118A         	fcall	PL9	;call to abstracted procedure
  1939  0444  083F               	movf	FilterCh13@filter_temp^(0+128),w
  1940  0445  0080               	movwf	0
  1941  0446  0A84               	incf	4,f
  1942  0447  0840               	movf	(FilterCh13@filter_temp+1)^(0+128),w
  1943  0448  0080               	movwf	0
  1944  0449                     l4190:	
  1945  0449  1683               	bsf	3,5	;RP0=1, select bank1
  1946  044A  0ACC               	incf	FilterCh13@i^(0+128),f
  1947  044B  2C04               	goto	l4192
  1948  044C                     l4194:	
  1949  044C  1683               	bsf	3,5	;RP0=1, select bank1
  1950  044D  3002               	movlw	2
  1951  044E  1303               	bcf	3,6	;RP1=0, select bank1
  1952  044F  0ACB               	incf	FilterCh13@j^(0+128),f
  1953  0450  024B               	subwf	FilterCh13@j^(0+128),w
  1954                           
  1955                           ;common.c: 100: }
  1956                           ;common.c: 101: }
  1957                           ;common.c: 102: }
  1958                           ;common.c: 104: for(i = 1; i < 3 - 1; i++)
  1959  0451  01CC               	clrf	FilterCh13@i^(0+128)
  1960  0452  1C03               	skipc
  1961  0453  2C04               	goto	l4192
  1962  0454  0ACC               	incf	FilterCh13@i^(0+128),f
  1963                           
  1964                           ;common.c: 105: {
  1965                           ;common.c: 106: filter_sum += filter_buf[i];
  1966  0455  1003               	clrc
  1967  0456                     L12:	
  1968  0456  2477  118A         	fcall	PL6	;call to abstracted procedure
  1969  0458  2470  118A         	fcall	PL4	;call to abstracted procedure
  1970  045A  0837               	movf	??_FilterCh13,w
  1971  045B  1683               	bsf	3,5	;RP0=1, select bank1
  1972  045C  07C1               	addwf	FilterCh13@filter_sum^(0+128),f
  1973  045D  1803               	skipnc
  1974  045E  0AC2               	incf	(FilterCh13@filter_sum+1)^(0+128),f
  1975  045F  1283               	bcf	3,5	;RP0=0, select bank0
  1976  0460  0838               	movf	??_FilterCh13+1,w
  1977  0461  1683               	bsf	3,5	;RP0=1, select bank1
  1978  0462  07C2               	addwf	(FilterCh13@filter_sum+1)^(0+128),f
  1979  0463  3002               	movlw	2
  1980  0464  0ACC               	incf	FilterCh13@i^(0+128),f
  1981  0465  024C               	subwf	FilterCh13@i^(0+128),w
  1982  0466  1C03               	skipc
  1983  0467  2C56               	goto	L12
  1984                           
  1985                           ;common.c: 107: }
  1986                           ;common.c: 110: return (filter_sum >> 0 );
  1987  0468  0842               	movf	(FilterCh13@filter_sum+1)^(0+128),w
  1988  0469  1283               	bcf	3,5	;RP0=0, select bank0
  1989  046A  00B6               	movwf	?_FilterCh13+1
  1990  046B  1683               	bsf	3,5	;RP0=1, select bank1
  1991  046C  0841               	movf	FilterCh13@filter_sum^(0+128),w
  1992  046D  1283               	bcf	3,5	;RP0=0, select bank0
  1993  046E  00B5               	movwf	?_FilterCh13
  1994  046F  0008               	return
  1995  0470                     __end_of_FilterCh13:	
  1996  0470                     PL4:	
  1997  0470  0800               	movf	0,w
  1998  0471  1283               	bcf	3,5	;RP0=0, select bank0
  1999  0472  00B7               	movwf	??_FilterCh13
  2000  0473  0A84               	incf	4,f
  2001  0474  0800               	movf	0,w
  2002  0475  00B8               	movwf	??_FilterCh13+1
  2003  0476  0008               	return
  2004  0477                     PL6:	
  2005  0477  0D4C               	rlf	FilterCh13@i^(0+128),w
  2006  0478  3EC3               	addlw	FilterCh13@filter_buf& (0+255)
  2007  0479  0084               	movwf	4
  2008  047A  1383               	bcf	3,7	;select IRP bank1
  2009  047B  0008               	return
  2010  047C                     PL7:	
  2011  047C  3EC3               	addlw	FilterCh13@filter_buf& (0+255)
  2012  047D  0084               	movwf	4
  2013  047E  1283               	bcf	3,5	;RP0=0, select bank0
  2014  047F  0837               	movf	??_FilterCh13,w
  2015  0480  0080               	movwf	0
  2016  0481  0A84               	incf	4,f
  2017  0482  0838               	movf	??_FilterCh13+1,w
  2018  0483  0080               	movwf	0
  2019  0484  1683               	bsf	3,5	;RP0=1, select bank1
  2020  0485  0008               	return
  2021  0486                     PL9:	
  2022  0486  1003               	clrc
  2023  0487  0D4C               	rlf	FilterCh13@i^(0+128),w
  2024  0488  3E02               	addlw	2
  2025  0489  3EC3               	addlw	FilterCh13@filter_buf& (0+255)
  2026  048A  0084               	movwf	4
  2027  048B  0008               	return
  2028                           
  2029                           	psect	text1232
  2030  048C                     __ptext1232:	
  2031 ;; =============== function _getAdOriginalCh13Value ends ============
  2032                           
  2033                           
  2034 ;; *************** function _process_AD_Converter_Value *****************
  2035 ;; Defined at:
  2036 ;;		line 394 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;		None
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;		None
  2041 ;; Return value:  Size  Location     Type
  2042 ;;		None               void
  2043 ;; Registers used:
  2044 ;;		wreg, status,2, status,0, pclath, cstack
  2045 ;; Tracked objects:
  2046 ;;		On entry : 0/0
  2047 ;;		On exit  : 60/0
  2048 ;;		Unchanged: FFF9F/0
  2049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2050 ;;      Params:         0       0       0       0       0
  2051 ;;      Locals:         0       0       0       0       0
  2052 ;;      Temps:          0       0       0       0       0
  2053 ;;      Totals:         0       0       0       0       0
  2054 ;;Total ram usage:        0 bytes
  2055 ;; Hardware stack levels used:    1
  2056 ;; Hardware stack levels required when called:    4
  2057 ;; This function calls:
  2058 ;;		_getAD_ConvertFlag
  2059 ;;		_setAD_ConvertFlag
  2060 ;;		_AD_Sample
  2061 ;;		_adc_test_init
  2062 ;;		_adc_start
  2063 ;; This function is called by:
  2064 ;;		_main
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067  048C                     _process_AD_Converter_Value:	
  2068                           
  2069                           ;common.c: 395: if(getAD_ConvertFlag())
  2070                           
  2071                           ; Regs used in _process_AD_Converter_Value: [wreg+status,2+status,0+pclath+cstack]
  2072  048C  24A2  118A         	fcall	_getAD_ConvertFlag
  2073  048E  3A00               	xorlw	0
  2074  048F  1903               	skipnz
  2075  0490  0008               	return
  2076                           
  2077                           ;common.c: 396: {
  2078                           ;common.c: 397: setAD_ConvertFlag(0);
  2079  0491  3000               	movlw	0
  2080  0492  24A6  118A         	fcall	_setAD_ConvertFlag
  2081                           
  2082                           ;common.c: 398: AD_Sample();
  2083  0494  24A9  118A         	fcall	_AD_Sample
  2084                           
  2085                           ;common.c: 399: if(12 == sampleChannelSelect)
  2086  0496  0859               	movf	_sampleChannelSelect,w
  2087  0497  3A0C               	xorlw	12
  2088                           
  2089                           ;common.c: 400: adc_test_init(12,3);
  2090  0498  3003               	movlw	3
  2091  0499  00B5               	movwf	?_adc_test_init
  2092  049A  1D03               	skipz
  2093  049B  2C9E               	goto	L11
  2094  049C  300C               	movlw	12
  2095  049D  2C9F               	goto	L10
  2096  049E                     L11:	
  2097                           ;common.c: 401: else
  2098                           ;common.c: 402: adc_test_init(13,3);
  2099                           
  2100  049E  300D               	movlw	13
  2101  049F                     L10:	
  2102  049F  24BD  118A         	fcall	_adc_test_init
  2103                           
  2104                           ;common.c: 403: adc_start();
  2105  04A1  2CD8               	ljmp	l4052
  2106  04A2                     __end_of_process_AD_Converter_Value:	
  2107  04A2                     __ptext1237:	
  2108 ;; =============== function _setAD_ConvertFlag ends ============
  2109                           
  2110                           
  2111 ;; *************** function _getAD_ConvertFlag *****************
  2112 ;; Defined at:
  2113 ;;		line 343 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;		None
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;		None
  2118 ;; Return value:  Size  Location     Type
  2119 ;;                  1    wreg      unsigned char 
  2120 ;; Registers used:
  2121 ;;		wreg
  2122 ;; Tracked objects:
  2123 ;;		On entry : 0/0
  2124 ;;		On exit  : 60/0
  2125 ;;		Unchanged: FFF9F/0
  2126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2127 ;;      Params:         0       0       0       0       0
  2128 ;;      Locals:         0       0       0       0       0
  2129 ;;      Temps:          0       0       0       0       0
  2130 ;;      Totals:         0       0       0       0       0
  2131 ;;Total ram usage:        0 bytes
  2132 ;; Hardware stack levels used:    1
  2133 ;; Hardware stack levels required when called:    3
  2134 ;; This function calls:
  2135 ;;		Nothing
  2136 ;; This function is called by:
  2137 ;;		_process_AD_Converter_Value
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140  04A2                     _getAD_ConvertFlag:	
  2141                           
  2142                           ;common.c: 344: return adc_convert_flag;
  2143                           
  2144                           ; Regs used in _getAD_ConvertFlag: [wreg]
  2145  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  2146  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  2147  04A4  084A               	movf	_adc_convert_flag,w
  2148  04A5  0008               	return
  2149  04A6                     __end_of_getAD_ConvertFlag:	
  2150  04A6                     __ptext1236:	
  2151 ;; =============== function _AD_Sample ends ============
  2152                           
  2153                           
  2154 ;; *************** function _setAD_ConvertFlag *****************
  2155 ;; Defined at:
  2156 ;;		line 349 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;  flag            1    wreg     unsigned char 
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;  flag            1   21[BANK0 ] unsigned char 
  2161 ;; Return value:  Size  Location     Type
  2162 ;;		None               void
  2163 ;; Registers used:
  2164 ;;		wreg
  2165 ;; Tracked objects:
  2166 ;;		On entry : 60/0
  2167 ;;		On exit  : 60/0
  2168 ;;		Unchanged: FFF9F/0
  2169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2170 ;;      Params:         0       0       0       0       0
  2171 ;;      Locals:         0       1       0       0       0
  2172 ;;      Temps:          0       0       0       0       0
  2173 ;;      Totals:         0       1       0       0       0
  2174 ;;Total ram usage:        1 bytes
  2175 ;; Hardware stack levels used:    1
  2176 ;; Hardware stack levels required when called:    3
  2177 ;; This function calls:
  2178 ;;		Nothing
  2179 ;; This function is called by:
  2180 ;;		_process_AD_Converter_Value
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183  04A6                     _setAD_ConvertFlag:	
  2184                           
  2185                           ; Regs used in _setAD_ConvertFlag: [wreg]
  2186                           ;setAD_ConvertFlag@flag stored from wreg
  2187  04A6  00B5               	movwf	setAD_ConvertFlag@flag
  2188                           
  2189                           ;common.c: 350: adc_convert_flag = flag;
  2190  04A7  00CA               	movwf	_adc_convert_flag
  2191  04A8  0008               	return
  2192  04A9                     __end_of_setAD_ConvertFlag:	
  2193  04A9                     __ptext1235:	
  2194 ;; =============== function _initPin ends ============
  2195                           
  2196                           
  2197 ;; *************** function _AD_Sample *****************
  2198 ;; Defined at:
  2199 ;;		line 417 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;		None
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;		None
  2204 ;; Return value:  Size  Location     Type
  2205 ;;		None               void
  2206 ;; Registers used:
  2207 ;;		wreg, status,2, status,0
  2208 ;; Tracked objects:
  2209 ;;		On entry : 60/0
  2210 ;;		On exit  : 60/0
  2211 ;;		Unchanged: FFF9F/0
  2212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2213 ;;      Params:         0       0       0       0       0
  2214 ;;      Locals:         0       0       0       0       0
  2215 ;;      Temps:          0       0       0       0       0
  2216 ;;      Totals:         0       0       0       0       0
  2217 ;;Total ram usage:        0 bytes
  2218 ;; Hardware stack levels used:    1
  2219 ;; Hardware stack levels required when called:    3
  2220 ;; This function calls:
  2221 ;;		Nothing
  2222 ;; This function is called by:
  2223 ;;		_process_AD_Converter_Value
  2224 ;; This function uses a non-reentrant model
  2225 ;;
  2226  04A9                     _AD_Sample:	
  2227                           
  2228                           ;common.c: 418: if(sampleTimes < 3)
  2229                           
  2230                           ; Regs used in _AD_Sample: [wreg+status,2+status,0]
  2231  04A9  3003               	movlw	3
  2232  04AA  0250               	subwf	_sampleTimes,w
  2233  04AB  1803               	skipnc
  2234  04AC  0008               	return
  2235  04AD  3003               	movlw	3
  2236                           
  2237                           ;common.c: 419: {
  2238                           ;common.c: 420: sampleTimes++;
  2239  04AE  0AD0               	incf	_sampleTimes,f
  2240                           
  2241                           ;common.c: 422: if(sampleTimes >= 3)
  2242  04AF  0250               	subwf	_sampleTimes,w
  2243  04B0  1C03               	skipc
  2244  04B1  0008               	return
  2245                           
  2246                           ;common.c: 423: {
  2247                           ;common.c: 424: sampleTimes = 0;
  2248  04B2  01D0               	clrf	_sampleTimes
  2249                           
  2250                           ;common.c: 426: if(sampleChannelSelect == 12)
  2251  04B3  0859               	movf	_sampleChannelSelect,w
  2252  04B4  3A0C               	xorlw	12
  2253  04B5  1D03               	skipz
  2254  04B6  2CBA               	goto	l4230
  2255                           
  2256                           ;common.c: 427: {
  2257                           ;common.c: 428: sampleChannelSelect = 13;
  2258  04B7  300D               	movlw	13
  2259  04B8  00D9               	movwf	_sampleChannelSelect
  2260                           
  2261                           ;common.c: 429: }
  2262  04B9  0008               	return
  2263  04BA                     l4230:	
  2264                           
  2265                           ;common.c: 431: else
  2266                           ;common.c: 432: {
  2267                           ;common.c: 433: sampleChannelSelect = 12;
  2268  04BA  300C               	movlw	12
  2269  04BB  00D9               	movwf	_sampleChannelSelect
  2270  04BC  0008               	return
  2271  04BD                     __end_of_AD_Sample:	
  2272  04BD                     __ptext1254:	
  2273 ;; =============== function _startTwentyMinTimer ends ============
  2274                           
  2275                           
  2276 ;; *************** function _adc_test_init *****************
  2277 ;; Defined at:
  2278 ;;		line 85 in file "D:\develop\AK7030-good\AK7030-OTP\periph.c"
  2279 ;; Parameters:    Size  Location     Type
  2280 ;;  channel         1    wreg     unsigned char 
  2281 ;;  ref             1   21[BANK0 ] unsigned char 
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;  channel         1   23[BANK0 ] unsigned char 
  2284 ;; Return value:  Size  Location     Type
  2285 ;;		None               void
  2286 ;; Registers used:
  2287 ;;		wreg, status,2, status,0
  2288 ;; Tracked objects:
  2289 ;;		On entry : 60/0
  2290 ;;		On exit  : 60/20
  2291 ;;		Unchanged: FFF9F/0
  2292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2293 ;;      Params:         0       1       0       0       0
  2294 ;;      Locals:         0       1       0       0       0
  2295 ;;      Temps:          0       1       0       0       0
  2296 ;;      Totals:         0       3       0       0       0
  2297 ;;Total ram usage:        3 bytes
  2298 ;; Hardware stack levels used:    1
  2299 ;; Hardware stack levels required when called:    3
  2300 ;; This function calls:
  2301 ;;		Nothing
  2302 ;; This function is called by:
  2303 ;;		_main
  2304 ;;		_process_AD_Converter_Value
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307  04BD                     _adc_test_init:	
  2308                           
  2309                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  2310                           ;adc_test_init@channel stored from wreg
  2311  04BD  00B7               	movwf	adc_test_init@channel
  2312                           
  2313                           ;periph.c: 86: ADCON0 = 0x40;
  2314  04BE  3040               	movlw	64
  2315  04BF  009F               	movwf	31	;volatile
  2316                           
  2317                           ;periph.c: 87: ADCON0|=channel<<2;
  2318  04C0  0837               	movf	adc_test_init@channel,w
  2319  04C1  00B6               	movwf	??_adc_test_init
  2320  04C2  1003               	clrc
  2321  04C3  0DB6               	rlf	??_adc_test_init,f
  2322  04C4  1003               	clrc
  2323  04C5  0D36               	rlf	??_adc_test_init,w
  2324  04C6  049F               	iorwf	31,f	;volatile
  2325                           
  2326                           ;periph.c: 88: ADCON1 = 0x35;
  2327  04C7  3035               	movlw	53
  2328  04C8  1683               	bsf	3,5	;RP0=1, select bank1
  2329  04C9  009F               	movwf	31	;volatile
  2330                           
  2331                           ;periph.c: 89: ADCON1|=ref<<6;
  2332  04CA  1283               	bcf	3,5	;RP0=0, select bank0
  2333  04CB  0835               	movf	adc_test_init@ref,w
  2334  04CC  00B6               	movwf	??_adc_test_init
  2335  04CD  0CB6               	rrf	??_adc_test_init,f
  2336  04CE  0CB6               	rrf	??_adc_test_init,f
  2337  04CF  0C36               	rrf	??_adc_test_init,w
  2338  04D0  39C0               	andlw	192
  2339  04D1  1683               	bsf	3,5	;RP0=1, select bank1
  2340  04D2  049F               	iorwf	31,f	;volatile
  2341                           
  2342                           ;periph.c: 90: ADON=1;
  2343  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  2344  04D4  141F               	bsf	31,0
  2345                           
  2346                           ;periph.c: 91: ADIE=1;
  2347  04D5  1683               	bsf	3,5	;RP0=1, select bank1
  2348  04D6  150D               	bsf	13,2
  2349  04D7  0008               	return
  2350  04D8                     __end_of_adc_test_init:	
  2351  04D8                     __ptext1252:	
  2352 ;; =============== function _isPermitSampleTime ends ============
  2353                           
  2354                           
  2355 ;; *************** function _adc_start *****************
  2356 ;; Defined at:
  2357 ;;		line 101 in file "D:\develop\AK7030-good\AK7030-OTP\periph.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;		None
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;		None
  2362 ;; Return value:  Size  Location     Type
  2363 ;;		None               void
  2364 ;; Registers used:
  2365 ;;		None
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 60/0
  2369 ;;		Unchanged: FFF9F/0
  2370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2371 ;;      Params:         0       0       0       0       0
  2372 ;;      Locals:         0       0       0       0       0
  2373 ;;      Temps:          0       0       0       0       0
  2374 ;;      Totals:         0       0       0       0       0
  2375 ;;Total ram usage:        0 bytes
  2376 ;; Hardware stack levels used:    1
  2377 ;; Hardware stack levels required when called:    3
  2378 ;; This function calls:
  2379 ;;		Nothing
  2380 ;; This function is called by:
  2381 ;;		_main
  2382 ;;		_process_AD_Converter_Value
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385  04D8                     _adc_start:	
  2386  04D8                     l4052:	
  2387                           ; Regs used in _adc_start: []
  2388                           
  2389                           
  2390                           ;periph.c: 102: GO=1;
  2391  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  2392  04D9  1303               	bcf	3,6	;RP1=0, select bank0
  2393  04DA  149F               	bsf	31,1
  2394  04DB  0008               	return
  2395  04DC                     __end_of_adc_start:	
  2396                           
  2397                           	psect	text1233
  2398  050D                     __ptext1233:	
  2399 ;; =============== function _process_AD_Converter_Value ends ============
  2400                           
  2401                           
  2402 ;; *************** function _setPinInitVaule *****************
  2403 ;; Defined at:
  2404 ;;		line 272 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;		None
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;		None
  2409 ;; Return value:  Size  Location     Type
  2410 ;;		None               void
  2411 ;; Registers used:
  2412 ;;		wreg, status,2, status,0, pclath, cstack
  2413 ;; Tracked objects:
  2414 ;;		On entry : 17F/20
  2415 ;;		On exit  : 17F/0
  2416 ;;		Unchanged: FFE80/0
  2417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2418 ;;      Params:         0       0       0       0       0
  2419 ;;      Locals:         0       0       0       0       0
  2420 ;;      Temps:          0       0       0       0       0
  2421 ;;      Totals:         0       0       0       0       0
  2422 ;;Total ram usage:        0 bytes
  2423 ;; Hardware stack levels used:    1
  2424 ;; Hardware stack levels required when called:    4
  2425 ;; This function calls:
  2426 ;;		_setPB3
  2427 ;;		_setPB4
  2428 ;;		_setPB5
  2429 ;; This function is called by:
  2430 ;;		_main
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433  050D                     _setPinInitVaule:	
  2434                           
  2435                           ;main.c: 274: setPB3(1);
  2436                           
  2437                           ; Regs used in _setPinInitVaule: [wreg+status,2+status,0+pclath+cstack]
  2438  050D  3001               	movlw	1
  2439  050E  2515  118A         	fcall	_setPB3
  2440                           
  2441                           ;main.c: 275: setPB4(0);
  2442  0510  3000               	movlw	0
  2443  0511  251E  118A         	fcall	_setPB4
  2444                           
  2445                           ;main.c: 276: setPB5(1);
  2446  0513  3001               	movlw	1
  2447  0514  2D26               	ljmp	_setPB5
  2448  0515                     __end_of_setPinInitVaule:	
  2449  0515                     __ptext1266:	
  2450 ;; =============== function _initPB4 ends ============
  2451                           
  2452                           
  2453 ;; *************** function _setPB3 *****************
  2454 ;; Defined at:
  2455 ;;		line 133 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  bValue          1    wreg     unsigned char 
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;  bValue          1   21[BANK0 ] unsigned char 
  2460 ;; Return value:  Size  Location     Type
  2461 ;;		None               void
  2462 ;; Registers used:
  2463 ;;		wreg
  2464 ;; Tracked objects:
  2465 ;;		On entry : 40/0
  2466 ;;		On exit  : 60/0
  2467 ;;		Unchanged: FFF9F/0
  2468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2469 ;;      Params:         0       0       0       0       0
  2470 ;;      Locals:         0       1       0       0       0
  2471 ;;      Temps:          0       0       0       0       0
  2472 ;;      Totals:         0       1       0       0       0
  2473 ;;Total ram usage:        1 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:    3
  2476 ;; This function calls:
  2477 ;;		Nothing
  2478 ;; This function is called by:
  2479 ;;		_setPinInitVaule
  2480 ;;		_main
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483  0515                     _setPB3:	
  2484                           
  2485                           ; Regs used in _setPB3: [wreg]
  2486                           ;setPB3@bValue stored from wreg
  2487  0515  1283               	bcf	3,5	;RP0=0, select bank0
  2488  0516  00B5               	movwf	setPB3@bValue
  2489                           
  2490                           ;main.c: 134: if( bValue )
  2491  0517  0835               	movf	setPB3@bValue,w
  2492  0518  1903               	btfsc	3,2
  2493  0519  2D1C               	goto	l682
  2494                           
  2495                           ;main.c: 136: PB3 = 1;
  2496  051A  1586               	bsf	6,3
  2497  051B  0008               	return
  2498  051C                     l682:	
  2499                           
  2500                           ;main.c: 140: else
  2501                           ;main.c: 142: PB3= 0;
  2502  051C  1186               	bcf	6,3
  2503  051D  0008               	return
  2504  051E                     __end_of_setPB3:	
  2505  051E                     __ptext1264:	
  2506 ;; =============== function _initPB5 ends ============
  2507                           
  2508                           
  2509 ;; *************** function _setPB4 *****************
  2510 ;; Defined at:
  2511 ;;		line 168 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;  bValue          1    wreg     unsigned char 
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;  bValue          1   21[BANK0 ] unsigned char 
  2516 ;; Return value:  Size  Location     Type
  2517 ;;		None               void
  2518 ;; Registers used:
  2519 ;;		wreg
  2520 ;; Tracked objects:
  2521 ;;		On entry : 60/0
  2522 ;;		On exit  : 60/0
  2523 ;;		Unchanged: FFF9F/0
  2524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2525 ;;      Params:         0       0       0       0       0
  2526 ;;      Locals:         0       1       0       0       0
  2527 ;;      Temps:          0       0       0       0       0
  2528 ;;      Totals:         0       1       0       0       0
  2529 ;;Total ram usage:        1 bytes
  2530 ;; Hardware stack levels used:    1
  2531 ;; Hardware stack levels required when called:    3
  2532 ;; This function calls:
  2533 ;;		Nothing
  2534 ;; This function is called by:
  2535 ;;		_setPinInitVaule
  2536 ;;		_main
  2537 ;; This function uses a non-reentrant model
  2538 ;;
  2539  051E                     _setPB4:	
  2540                           
  2541                           ; Regs used in _setPB4: [wreg]
  2542                           ;setPB4@bValue stored from wreg
  2543  051E  00B5               	movwf	setPB4@bValue
  2544                           
  2545                           ;main.c: 169: if( bValue )
  2546  051F  0835               	movf	setPB4@bValue,w
  2547  0520  1903               	btfsc	3,2
  2548  0521  2D24               	goto	l692
  2549                           
  2550                           ;main.c: 171: PB4 = 1;
  2551  0522  1606               	bsf	6,4
  2552  0523  0008               	return
  2553  0524                     l692:	
  2554                           
  2555                           ;main.c: 175: else
  2556                           ;main.c: 177: PB4= 0;
  2557  0524  1206               	bcf	6,4
  2558  0525  0008               	return
  2559  0526                     __end_of_setPB4:	
  2560  0526                     __ptext1262:	
  2561 ;; =============== function _initPB2_AsHighResistence ends ============
  2562                           
  2563                           
  2564 ;; *************** function _setPB5 *****************
  2565 ;; Defined at:
  2566 ;;		line 202 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;  bValue          1    wreg     unsigned char 
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;  bValue          1   21[BANK0 ] unsigned char 
  2571 ;; Return value:  Size  Location     Type
  2572 ;;		None               void
  2573 ;; Registers used:
  2574 ;;		wreg
  2575 ;; Tracked objects:
  2576 ;;		On entry : 60/0
  2577 ;;		On exit  : 60/0
  2578 ;;		Unchanged: FFF9F/0
  2579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2580 ;;      Params:         0       0       0       0       0
  2581 ;;      Locals:         0       1       0       0       0
  2582 ;;      Temps:          0       0       0       0       0
  2583 ;;      Totals:         0       1       0       0       0
  2584 ;;Total ram usage:        1 bytes
  2585 ;; Hardware stack levels used:    1
  2586 ;; Hardware stack levels required when called:    3
  2587 ;; This function calls:
  2588 ;;		Nothing
  2589 ;; This function is called by:
  2590 ;;		_setPinInitVaule
  2591 ;;		_main
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594  0526                     _setPB5:	
  2595                           
  2596                           ; Regs used in _setPB5: [wreg]
  2597                           ;setPB5@bValue stored from wreg
  2598  0526  00B5               	movwf	setPB5@bValue
  2599                           
  2600                           ;main.c: 203: if( bValue )
  2601  0527  0835               	movf	setPB5@bValue,w
  2602  0528  1903               	btfsc	3,2
  2603  0529  2D2C               	goto	l702
  2604                           
  2605                           ;main.c: 205: PB5 = 1;
  2606  052A  1686               	bsf	6,5
  2607  052B  0008               	return
  2608  052C                     l702:	
  2609                           
  2610                           ;main.c: 209: else
  2611                           ;main.c: 211: PB5= 0;
  2612  052C  1286               	bcf	6,5
  2613  052D  0008               	return
  2614  052E                     __end_of_setPB5:	
  2615                           
  2616                           	psect	text1234
  2617  04DC                     __ptext1234:	
  2618 ;; =============== function _setPinInitVaule ends ============
  2619                           
  2620                           
  2621 ;; *************** function _initPin *****************
  2622 ;; Defined at:
  2623 ;;		line 256 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2624 ;; Parameters:    Size  Location     Type
  2625 ;;		None
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;		None
  2628 ;; Return value:  Size  Location     Type
  2629 ;;		None               void
  2630 ;; Registers used:
  2631 ;;		wreg, status,2, status,0, pclath, cstack
  2632 ;; Tracked objects:
  2633 ;;		On entry : 17F/0
  2634 ;;		On exit  : 17F/20
  2635 ;;		Unchanged: FFE80/0
  2636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2637 ;;      Params:         0       0       0       0       0
  2638 ;;      Locals:         0       0       0       0       0
  2639 ;;      Temps:          0       0       0       0       0
  2640 ;;      Totals:         0       0       0       0       0
  2641 ;;Total ram usage:        0 bytes
  2642 ;; Hardware stack levels used:    1
  2643 ;; Hardware stack levels required when called:    4
  2644 ;; This function calls:
  2645 ;;		_initPB2_AsHighResistence
  2646 ;;		_initPB3
  2647 ;;		_initPB4
  2648 ;;		_initPB5
  2649 ;; This function is called by:
  2650 ;;		_main
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653  04DC                     _initPin:	
  2654                           
  2655                           ;main.c: 258: initPB2_AsHighResistence();
  2656                           
  2657                           ; Regs used in _initPin: [wreg+status,2+status,0+pclath+cstack]
  2658  04DC  24F2  118A         	fcall	_initPB2_AsHighResistence
  2659                           
  2660                           ;main.c: 260: initPB3(0);
  2661  04DE  3000               	movlw	0
  2662  04DF  24E6  118A         	fcall	_initPB3
  2663                           
  2664                           ;main.c: 262: initPB4(0);
  2665  04E1  3000               	movlw	0
  2666  04E2  24F7  118A         	fcall	_initPB4
  2667                           
  2668                           ;main.c: 264: initPB5(0);
  2669  04E4  3000               	movlw	0
  2670  04E5  2D02               	ljmp	_initPB5
  2671  04E6                     __end_of_initPin:	
  2672  04E6                     __ptext1267:	
  2673 ;; =============== function _setPB3 ends ============
  2674                           
  2675                           
  2676 ;; *************** function _initPB3 *****************
  2677 ;; Defined at:
  2678 ;;		line 116 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2679 ;; Parameters:    Size  Location     Type
  2680 ;;  bValue          1    wreg     unsigned char 
  2681 ;; Auto vars:     Size  Location     Type
  2682 ;;  bValue          1   21[BANK0 ] unsigned char 
  2683 ;; Return value:  Size  Location     Type
  2684 ;;		None               void
  2685 ;; Registers used:
  2686 ;;		wreg
  2687 ;; Tracked objects:
  2688 ;;		On entry : 17F/60
  2689 ;;		On exit  : 17F/20
  2690 ;;		Unchanged: FFE80/0
  2691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2692 ;;      Params:         0       0       0       0       0
  2693 ;;      Locals:         0       1       0       0       0
  2694 ;;      Temps:          0       0       0       0       0
  2695 ;;      Totals:         0       1       0       0       0
  2696 ;;Total ram usage:        1 bytes
  2697 ;; Hardware stack levels used:    1
  2698 ;; Hardware stack levels required when called:    3
  2699 ;; This function calls:
  2700 ;;		Nothing
  2701 ;; This function is called by:
  2702 ;;		_initPin
  2703 ;; This function uses a non-reentrant model
  2704 ;;
  2705  04E6                     _initPB3:	
  2706                           
  2707                           ; Regs used in _initPB3: [wreg]
  2708                           ;initPB3@bValue stored from wreg
  2709  04E6  1283               	bcf	3,5	;RP0=0, select bank0
  2710  04E7  1303               	bcf	3,6	;RP1=0, select bank0
  2711  04E8  00B5               	movwf	initPB3@bValue
  2712                           
  2713                           ;main.c: 117: if( bValue )
  2714  04E9  0835               	movf	initPB3@bValue,w
  2715  04EA  1903               	btfsc	3,2
  2716  04EB  2CEF               	goto	l677
  2717                           
  2718                           ;main.c: 119: TRISB3 = 1;
  2719  04EC  1683               	bsf	3,5	;RP0=1, select bank1
  2720  04ED  1586               	bsf	6,3
  2721  04EE  0008               	return
  2722  04EF                     l677:	
  2723                           
  2724                           ;main.c: 123: else
  2725                           ;main.c: 125: TRISB3 = 0;
  2726  04EF  1683               	bsf	3,5	;RP0=1, select bank1
  2727  04F0  1186               	bcf	6,3
  2728  04F1  0008               	return
  2729  04F2                     __end_of_initPB3:	
  2730  04F2                     __ptext1261:	
  2731 ;; =============== function _pwm_start ends ============
  2732                           
  2733                           
  2734 ;; *************** function _initPB2_AsHighResistence *****************
  2735 ;; Defined at:
  2736 ;;		line 219 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;		None
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;		None
  2741 ;; Return value:  Size  Location     Type
  2742 ;;		None               void
  2743 ;; Registers used:
  2744 ;;		None
  2745 ;; Tracked objects:
  2746 ;;		On entry : 17F/0
  2747 ;;		On exit  : 17F/60
  2748 ;;		Unchanged: FFE80/0
  2749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2750 ;;      Params:         0       0       0       0       0
  2751 ;;      Locals:         0       0       0       0       0
  2752 ;;      Temps:          0       0       0       0       0
  2753 ;;      Totals:         0       0       0       0       0
  2754 ;;Total ram usage:        0 bytes
  2755 ;; Hardware stack levels used:    1
  2756 ;; Hardware stack levels required when called:    3
  2757 ;; This function calls:
  2758 ;;		Nothing
  2759 ;; This function is called by:
  2760 ;;		_initPin
  2761 ;; This function uses a non-reentrant model
  2762 ;;
  2763  04F2                     _initPB2_AsHighResistence:	
  2764                           
  2765                           ;main.c: 221: PB2 = 1;
  2766                           
  2767                           ; Regs used in _initPB2_AsHighResistence: []
  2768  04F2  1506               	bsf	6,2
  2769                           
  2770                           ;main.c: 222: PBOD2 = 1;
  2771  04F3  1683               	bsf	3,5	;RP0=1, select bank3
  2772  04F4  1703               	bsf	3,6	;RP1=1, select bank3
  2773  04F5  1508               	bsf	8,2
  2774  04F6  0008               	return
  2775  04F7                     __end_of_initPB2_AsHighResistence:	
  2776  04F7                     __ptext1265:	
  2777 ;; =============== function _setPB4 ends ============
  2778                           
  2779                           
  2780 ;; *************** function _initPB4 *****************
  2781 ;; Defined at:
  2782 ;;		line 151 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;  bValue          1    wreg     unsigned char 
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;  bValue          1   21[BANK0 ] unsigned char 
  2787 ;; Return value:  Size  Location     Type
  2788 ;;		None               void
  2789 ;; Registers used:
  2790 ;;		wreg
  2791 ;; Tracked objects:
  2792 ;;		On entry : 17F/20
  2793 ;;		On exit  : 17F/20
  2794 ;;		Unchanged: FFE80/0
  2795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2796 ;;      Params:         0       0       0       0       0
  2797 ;;      Locals:         0       1       0       0       0
  2798 ;;      Temps:          0       0       0       0       0
  2799 ;;      Totals:         0       1       0       0       0
  2800 ;;Total ram usage:        1 bytes
  2801 ;; Hardware stack levels used:    1
  2802 ;; Hardware stack levels required when called:    3
  2803 ;; This function calls:
  2804 ;;		Nothing
  2805 ;; This function is called by:
  2806 ;;		_initPin
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809  04F7                     _initPB4:	
  2810                           
  2811                           ; Regs used in _initPB4: [wreg]
  2812                           ;initPB4@bValue stored from wreg
  2813  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  2814  04F8  00B5               	movwf	initPB4@bValue
  2815                           
  2816                           ;main.c: 152: if( bValue )
  2817  04F9  0835               	movf	initPB4@bValue,w
  2818  04FA  1903               	btfsc	3,2
  2819  04FB  2CFF               	goto	l687
  2820                           
  2821                           ;main.c: 154: TRISB4 = 1;
  2822  04FC  1683               	bsf	3,5	;RP0=1, select bank1
  2823  04FD  1606               	bsf	6,4
  2824  04FE  0008               	return
  2825  04FF                     l687:	
  2826                           
  2827                           ;main.c: 158: else
  2828                           ;main.c: 160: TRISB4= 0;
  2829  04FF  1683               	bsf	3,5	;RP0=1, select bank1
  2830  0500  1206               	bcf	6,4
  2831  0501  0008               	return
  2832  0502                     __end_of_initPB4:	
  2833  0502                     __ptext1263:	
  2834 ;; =============== function _setPB5 ends ============
  2835                           
  2836                           
  2837 ;; *************** function _initPB5 *****************
  2838 ;; Defined at:
  2839 ;;		line 185 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  2840 ;; Parameters:    Size  Location     Type
  2841 ;;  bValue          1    wreg     unsigned char 
  2842 ;; Auto vars:     Size  Location     Type
  2843 ;;  bValue          1   21[BANK0 ] unsigned char 
  2844 ;; Return value:  Size  Location     Type
  2845 ;;		None               void
  2846 ;; Registers used:
  2847 ;;		wreg
  2848 ;; Tracked objects:
  2849 ;;		On entry : 17F/20
  2850 ;;		On exit  : 17F/20
  2851 ;;		Unchanged: FFE80/0
  2852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2853 ;;      Params:         0       0       0       0       0
  2854 ;;      Locals:         0       1       0       0       0
  2855 ;;      Temps:          0       0       0       0       0
  2856 ;;      Totals:         0       1       0       0       0
  2857 ;;Total ram usage:        1 bytes
  2858 ;; Hardware stack levels used:    1
  2859 ;; Hardware stack levels required when called:    3
  2860 ;; This function calls:
  2861 ;;		Nothing
  2862 ;; This function is called by:
  2863 ;;		_initPin
  2864 ;; This function uses a non-reentrant model
  2865 ;;
  2866  0502                     _initPB5:	
  2867                           
  2868                           ; Regs used in _initPB5: [wreg]
  2869                           ;initPB5@bValue stored from wreg
  2870  0502  1283               	bcf	3,5	;RP0=0, select bank0
  2871  0503  00B5               	movwf	initPB5@bValue
  2872                           
  2873                           ;main.c: 186: if( bValue )
  2874  0504  0835               	movf	initPB5@bValue,w
  2875  0505  1903               	btfsc	3,2
  2876  0506  2D0A               	goto	l697
  2877                           
  2878                           ;main.c: 188: TRISB5 = 1;
  2879  0507  1683               	bsf	3,5	;RP0=1, select bank1
  2880  0508  1686               	bsf	6,5
  2881  0509  0008               	return
  2882  050A                     l697:	
  2883                           
  2884                           ;main.c: 192: else
  2885                           ;main.c: 194: TRISB5= 0;
  2886  050A  1683               	bsf	3,5	;RP0=1, select bank1
  2887  050B  1286               	bcf	6,5
  2888  050C  0008               	return
  2889  050D                     __end_of_initPB5:	
  2890                           
  2891                           	psect	text1239
  2892  05E6                     __ptext1239:	
  2893 ;; =============== function _FilterCh13 ends ============
  2894                           
  2895                           
  2896 ;; *************** function _setWaitResetFlag *****************
  2897 ;; Defined at:
  2898 ;;		line 55 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;  bValue          1    wreg     unsigned char 
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;  bValue          1   21[BANK0 ] unsigned char 
  2903 ;; Return value:  Size  Location     Type
  2904 ;;		None               void
  2905 ;; Registers used:
  2906 ;;		wreg
  2907 ;; Tracked objects:
  2908 ;;		On entry : 60/0
  2909 ;;		On exit  : 60/0
  2910 ;;		Unchanged: FFF9F/0
  2911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2912 ;;      Params:         0       0       0       0       0
  2913 ;;      Locals:         0       1       0       0       0
  2914 ;;      Temps:          0       0       0       0       0
  2915 ;;      Totals:         0       1       0       0       0
  2916 ;;Total ram usage:        1 bytes
  2917 ;; Hardware stack levels used:    1
  2918 ;; Hardware stack levels required when called:    3
  2919 ;; This function calls:
  2920 ;;		Nothing
  2921 ;; This function is called by:
  2922 ;;		_main
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925  05E6                     _setWaitResetFlag:	
  2926                           
  2927                           ; Regs used in _setWaitResetFlag: [wreg]
  2928                           ;setWaitResetFlag@bValue stored from wreg
  2929  05E6  00B5               	movwf	setWaitResetFlag@bValue
  2930                           
  2931                           ;common.c: 56: bWaitResetFlag = bValue;
  2932  05E7  00CF               	movwf	_bWaitResetFlag
  2933  05E8  0008               	return
  2934  05E9                     __end_of_setWaitResetFlag:	
  2935                           
  2936                           	psect	text1240
  2937  058F                     __ptext1240:	
  2938 ;; =============== function _setWaitResetFlag ends ============
  2939                           
  2940                           
  2941 ;; *************** function _isFinishedOneHoursTimer *****************
  2942 ;; Defined at:
  2943 ;;		line 583 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  2944 ;; Parameters:    Size  Location     Type
  2945 ;;		None
  2946 ;; Auto vars:     Size  Location     Type
  2947 ;;		None
  2948 ;; Return value:  Size  Location     Type
  2949 ;;                  1    wreg      unsigned char 
  2950 ;; Registers used:
  2951 ;;		wreg, status,2, status,0
  2952 ;; Tracked objects:
  2953 ;;		On entry : 160/20
  2954 ;;		On exit  : 160/0
  2955 ;;		Unchanged: FFE9F/0
  2956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2957 ;;      Params:         0       0       0       0       0
  2958 ;;      Locals:         0       0       0       0       0
  2959 ;;      Temps:          0       0       0       0       0
  2960 ;;      Totals:         0       0       0       0       0
  2961 ;;Total ram usage:        0 bytes
  2962 ;; Hardware stack levels used:    1
  2963 ;; Hardware stack levels required when called:    3
  2964 ;; This function calls:
  2965 ;;		Nothing
  2966 ;; This function is called by:
  2967 ;;		_main
  2968 ;; This function uses a non-reentrant model
  2969 ;;
  2970  058F                     _isFinishedOneHoursTimer:	
  2971                           
  2972                           ;common.c: 584: if((uiOneHourTimer == 0) && bOneHourTimerStartFlag)
  2973                           
  2974                           ; Regs used in _isFinishedOneHoursTimer: [wreg+status,2+status,0]
  2975  058F  1283               	bcf	3,5	;RP0=0, select bank0
  2976  0590  0840               	movf	_uiOneHourTimer+1,w
  2977  0591  043F               	iorwf	_uiOneHourTimer,w
  2978  0592  1D03               	skipz
  2979  0593  3400               	retlw	0
  2980  0594  084C               	movf	_bOneHourTimerStartFlag,w
  2981  0595  1903               	btfsc	3,2
  2982  0596  3400               	retlw	0
  2983  0597  3001               	movlw	1
  2984                           
  2985                           ;common.c: 585: {
  2986                           ;common.c: 586: bOneHourTimerStartFlag = 0;
  2987  0598  01CC               	clrf	_bOneHourTimerStartFlag
  2988                           
  2989                           ;common.c: 587: return 1;
  2990  0599  0008               	return
  2991  059A                     __end_of_isFinishedOneHoursTimer:	
  2992                           ;common.c: 589: else
  2993                           ;common.c: 590: return 0;
  2994                           
  2995                           
  2996                           	psect	text1241
  2997  0557                     __ptext1241:	
  2998 ;; =============== function _isFinishedOneHoursTimer ends ============
  2999                           
  3000                           
  3001 ;; *************** function _startOneHoursTimer *****************
  3002 ;; Defined at:
  3003 ;;		line 500 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;  uiSetTime       2   21[BANK0 ] unsigned int 
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;		None
  3008 ;; Return value:  Size  Location     Type
  3009 ;;		None               void
  3010 ;; Registers used:
  3011 ;;		wreg, status,2, status,0
  3012 ;; Tracked objects:
  3013 ;;		On entry : 60/0
  3014 ;;		On exit  : 60/0
  3015 ;;		Unchanged: FFF9F/0
  3016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3017 ;;      Params:         0       2       0       0       0
  3018 ;;      Locals:         0       0       0       0       0
  3019 ;;      Temps:          0       0       0       0       0
  3020 ;;      Totals:         0       2       0       0       0
  3021 ;;Total ram usage:        2 bytes
  3022 ;; Hardware stack levels used:    1
  3023 ;; Hardware stack levels required when called:    3
  3024 ;; This function calls:
  3025 ;;		Nothing
  3026 ;; This function is called by:
  3027 ;;		_main
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030  0557                     _startOneHoursTimer:	
  3031                           
  3032                           ;common.c: 501: if(( 0 == uiOneHourTimer ) && ( 0 == bOneHourTimerStartFlag ))
  3033                           
  3034                           ; Regs used in _startOneHoursTimer: [wreg+status,2+status,0]
  3035  0557  0840               	movf	_uiOneHourTimer+1,w
  3036  0558  043F               	iorwf	_uiOneHourTimer,w
  3037  0559  1D03               	skipz
  3038  055A  0008               	return
  3039  055B  08CC               	movf	_bOneHourTimerStartFlag,f
  3040  055C  1D03               	skipz
  3041  055D  0008               	return
  3042                           
  3043                           ;common.c: 502: {
  3044                           ;common.c: 503: uiOneHourTimer = uiSetTime;
  3045  055E  0836               	movf	startOneHoursTimer@uiSetTime+1,w
  3046  055F  00C0               	movwf	_uiOneHourTimer+1
  3047  0560  0835               	movf	startOneHoursTimer@uiSetTime,w
  3048  0561  00BF               	movwf	_uiOneHourTimer
  3049                           
  3050                           ;common.c: 504: bOneHourTimerStartFlag = 1;
  3051  0562  01CC               	clrf	_bOneHourTimerStartFlag
  3052  0563  0ACC               	incf	_bOneHourTimerStartFlag,f
  3053  0564  0008               	return
  3054  0565                     __end_of_startOneHoursTimer:	
  3055                           
  3056                           	psect	text1242
  3057  05D2                     __ptext1242:	
  3058 ;; =============== function _startOneHoursTimer ends ============
  3059                           
  3060                           
  3061 ;; *************** function _clearThreeHoursTimer *****************
  3062 ;; Defined at:
  3063 ;;		line 467 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3064 ;; Parameters:    Size  Location     Type
  3065 ;;		None
  3066 ;; Auto vars:     Size  Location     Type
  3067 ;;		None
  3068 ;; Return value:  Size  Location     Type
  3069 ;;		None               void
  3070 ;; Registers used:
  3071 ;;		status,2
  3072 ;; Tracked objects:
  3073 ;;		On entry : 60/0
  3074 ;;		On exit  : 60/0
  3075 ;;		Unchanged: FFF9F/0
  3076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3077 ;;      Params:         0       0       0       0       0
  3078 ;;      Locals:         0       0       0       0       0
  3079 ;;      Temps:          0       0       0       0       0
  3080 ;;      Totals:         0       0       0       0       0
  3081 ;;Total ram usage:        0 bytes
  3082 ;; Hardware stack levels used:    1
  3083 ;; Hardware stack levels required when called:    3
  3084 ;; This function calls:
  3085 ;;		Nothing
  3086 ;; This function is called by:
  3087 ;;		_main
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090  05D2                     _clearThreeHoursTimer:	
  3091                           
  3092                           ;common.c: 468: uiSmallTimer = 0;
  3093                           
  3094                           ; Regs used in _clearThreeHoursTimer: [status,2]
  3095  05D2  01C1               	clrf	_uiSmallTimer
  3096  05D3  01C2               	clrf	_uiSmallTimer+1
  3097                           
  3098                           ;common.c: 469: bSmallTimerStartFlag = 0;
  3099  05D4  01CD               	clrf	_bSmallTimerStartFlag
  3100  05D5  0008               	return
  3101  05D6                     __end_of_clearThreeHoursTimer:	
  3102                           
  3103                           	psect	text1243
  3104  059A                     __ptext1243:	
  3105 ;; =============== function _clearThreeHoursTimer ends ============
  3106                           
  3107                           
  3108 ;; *************** function _isFinishedThreeHoursTimer *****************
  3109 ;; Defined at:
  3110 ;;		line 570 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3111 ;; Parameters:    Size  Location     Type
  3112 ;;		None
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;		None
  3115 ;; Return value:  Size  Location     Type
  3116 ;;                  1    wreg      unsigned char 
  3117 ;; Registers used:
  3118 ;;		wreg, status,2, status,0
  3119 ;; Tracked objects:
  3120 ;;		On entry : 60/0
  3121 ;;		On exit  : 60/0
  3122 ;;		Unchanged: FFF9F/0
  3123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3124 ;;      Params:         0       0       0       0       0
  3125 ;;      Locals:         0       0       0       0       0
  3126 ;;      Temps:          0       0       0       0       0
  3127 ;;      Totals:         0       0       0       0       0
  3128 ;;Total ram usage:        0 bytes
  3129 ;; Hardware stack levels used:    1
  3130 ;; Hardware stack levels required when called:    3
  3131 ;; This function calls:
  3132 ;;		Nothing
  3133 ;; This function is called by:
  3134 ;;		_main
  3135 ;; This function uses a non-reentrant model
  3136 ;;
  3137  059A                     _isFinishedThreeHoursTimer:	
  3138                           
  3139                           ;common.c: 571: if((uiSmallTimer == 0) && bSmallTimerStartFlag)
  3140                           
  3141                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  3142  059A  0842               	movf	_uiSmallTimer+1,w
  3143  059B  0441               	iorwf	_uiSmallTimer,w
  3144  059C  1D03               	skipz
  3145  059D  3400               	retlw	0
  3146  059E  084D               	movf	_bSmallTimerStartFlag,w
  3147  059F  1903               	btfsc	3,2
  3148  05A0  3400               	retlw	0
  3149  05A1  3001               	movlw	1
  3150                           
  3151                           ;common.c: 572: {
  3152                           ;common.c: 573: bSmallTimerStartFlag = 0;
  3153  05A2  01CD               	clrf	_bSmallTimerStartFlag
  3154                           
  3155                           ;common.c: 574: return 1;
  3156  05A3  0008               	return
  3157  05A4                     __end_of_isFinishedThreeHoursTimer:	
  3158                           ;common.c: 576: else
  3159                           ;common.c: 577: return 0;
  3160                           
  3161                           
  3162                           	psect	text1244
  3163  0565                     __ptext1244:	
  3164 ;; =============== function _isFinishedThreeHoursTimer ends ============
  3165                           
  3166                           
  3167 ;; *************** function _startThreeHoursTimer *****************
  3168 ;; Defined at:
  3169 ;;		line 487 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;  uiSetTime       2   21[BANK0 ] unsigned int 
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;		None
  3174 ;; Return value:  Size  Location     Type
  3175 ;;		None               void
  3176 ;; Registers used:
  3177 ;;		wreg, status,2, status,0
  3178 ;; Tracked objects:
  3179 ;;		On entry : 60/0
  3180 ;;		On exit  : 60/0
  3181 ;;		Unchanged: FFF9F/0
  3182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3183 ;;      Params:         0       2       0       0       0
  3184 ;;      Locals:         0       0       0       0       0
  3185 ;;      Temps:          0       0       0       0       0
  3186 ;;      Totals:         0       2       0       0       0
  3187 ;;Total ram usage:        2 bytes
  3188 ;; Hardware stack levels used:    1
  3189 ;; Hardware stack levels required when called:    3
  3190 ;; This function calls:
  3191 ;;		Nothing
  3192 ;; This function is called by:
  3193 ;;		_main
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196  0565                     _startThreeHoursTimer:	
  3197                           
  3198                           ;common.c: 488: if(( 0 == uiSmallTimer ) && ( 0 == bSmallTimerStartFlag ))
  3199                           
  3200                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  3201  0565  0842               	movf	_uiSmallTimer+1,w
  3202  0566  0441               	iorwf	_uiSmallTimer,w
  3203  0567  1D03               	skipz
  3204  0568  0008               	return
  3205  0569  08CD               	movf	_bSmallTimerStartFlag,f
  3206  056A  1D03               	skipz
  3207  056B  0008               	return
  3208                           
  3209                           ;common.c: 489: {
  3210                           ;common.c: 490: uiSmallTimer = uiSetTime;
  3211  056C  0836               	movf	startThreeHoursTimer@uiSetTime+1,w
  3212  056D  00C2               	movwf	_uiSmallTimer+1
  3213  056E  0835               	movf	startThreeHoursTimer@uiSetTime,w
  3214  056F  00C1               	movwf	_uiSmallTimer
  3215                           
  3216                           ;common.c: 491: bSmallTimerStartFlag = 1;
  3217  0570  01CD               	clrf	_bSmallTimerStartFlag
  3218  0571  0ACD               	incf	_bSmallTimerStartFlag,f
  3219  0572  0008               	return
  3220  0573                     __end_of_startThreeHoursTimer:	
  3221                           
  3222                           	psect	text1245
  3223  05D6                     __ptext1245:	
  3224 ;; =============== function _startThreeHoursTimer ends ============
  3225                           
  3226                           
  3227 ;; *************** function _clearTwelveHoursTimer *****************
  3228 ;; Defined at:
  3229 ;;		line 460 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;		None
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;		None
  3234 ;; Return value:  Size  Location     Type
  3235 ;;		None               void
  3236 ;; Registers used:
  3237 ;;		status,2
  3238 ;; Tracked objects:
  3239 ;;		On entry : 60/0
  3240 ;;		On exit  : 60/0
  3241 ;;		Unchanged: FFF9F/0
  3242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3243 ;;      Params:         0       0       0       0       0
  3244 ;;      Locals:         0       0       0       0       0
  3245 ;;      Temps:          0       0       0       0       0
  3246 ;;      Totals:         0       0       0       0       0
  3247 ;;Total ram usage:        0 bytes
  3248 ;; Hardware stack levels used:    1
  3249 ;; Hardware stack levels required when called:    3
  3250 ;; This function calls:
  3251 ;;		Nothing
  3252 ;; This function is called by:
  3253 ;;		_main
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256  05D6                     _clearTwelveHoursTimer:	
  3257                           
  3258                           ;common.c: 461: uiBigTimer = 0;
  3259                           
  3260                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  3261  05D6  01BD               	clrf	_uiBigTimer
  3262  05D7  01BE               	clrf	_uiBigTimer+1
  3263                           
  3264                           ;common.c: 462: bBigTimerStartFlag = 0;
  3265  05D8  01CB               	clrf	_bBigTimerStartFlag
  3266  05D9  0008               	return
  3267  05DA                     __end_of_clearTwelveHoursTimer:	
  3268                           
  3269                           	psect	text1246
  3270  05A4                     __ptext1246:	
  3271 ;; =============== function _clearTwelveHoursTimer ends ============
  3272                           
  3273                           
  3274 ;; *************** function _isFinishedTwelveHoursTimer *****************
  3275 ;; Defined at:
  3276 ;;		line 559 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3277 ;; Parameters:    Size  Location     Type
  3278 ;;		None
  3279 ;; Auto vars:     Size  Location     Type
  3280 ;;		None
  3281 ;; Return value:  Size  Location     Type
  3282 ;;                  1    wreg      unsigned char 
  3283 ;; Registers used:
  3284 ;;		wreg, status,2, status,0
  3285 ;; Tracked objects:
  3286 ;;		On entry : 60/0
  3287 ;;		On exit  : 60/0
  3288 ;;		Unchanged: FFF9F/0
  3289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3290 ;;      Params:         0       0       0       0       0
  3291 ;;      Locals:         0       0       0       0       0
  3292 ;;      Temps:          0       0       0       0       0
  3293 ;;      Totals:         0       0       0       0       0
  3294 ;;Total ram usage:        0 bytes
  3295 ;; Hardware stack levels used:    1
  3296 ;; Hardware stack levels required when called:    3
  3297 ;; This function calls:
  3298 ;;		Nothing
  3299 ;; This function is called by:
  3300 ;;		_main
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303  05A4                     _isFinishedTwelveHoursTimer:	
  3304                           
  3305                           ;common.c: 560: if(( uiBigTimer == 0 ) && bBigTimerStartFlag )
  3306                           
  3307                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  3308  05A4  083E               	movf	_uiBigTimer+1,w
  3309  05A5  043D               	iorwf	_uiBigTimer,w
  3310  05A6  1D03               	skipz
  3311  05A7  3400               	retlw	0
  3312  05A8  084B               	movf	_bBigTimerStartFlag,w
  3313  05A9  1903               	btfsc	3,2
  3314  05AA  3400               	retlw	0
  3315  05AB  3001               	movlw	1
  3316                           
  3317                           ;common.c: 561: {
  3318                           ;common.c: 562: bBigTimerStartFlag = 0;
  3319  05AC  01CB               	clrf	_bBigTimerStartFlag
  3320                           
  3321                           ;common.c: 563: return 1;
  3322  05AD  0008               	return
  3323  05AE                     __end_of_isFinishedTwelveHoursTimer:	
  3324                           ;common.c: 565: else
  3325                           ;common.c: 566: return 0;
  3326                           
  3327                           
  3328                           	psect	text1247
  3329  0573                     __ptext1247:	
  3330 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  3331                           
  3332                           
  3333 ;; *************** function _startTwelveHourTimer *****************
  3334 ;; Defined at:
  3335 ;;		line 446 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3336 ;; Parameters:    Size  Location     Type
  3337 ;;  uiSetTime       2   21[BANK0 ] unsigned int 
  3338 ;; Auto vars:     Size  Location     Type
  3339 ;;		None
  3340 ;; Return value:  Size  Location     Type
  3341 ;;		None               void
  3342 ;; Registers used:
  3343 ;;		wreg, status,2, status,0
  3344 ;; Tracked objects:
  3345 ;;		On entry : 60/0
  3346 ;;		On exit  : 60/0
  3347 ;;		Unchanged: FFF9F/0
  3348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3349 ;;      Params:         0       2       0       0       0
  3350 ;;      Locals:         0       0       0       0       0
  3351 ;;      Temps:          0       0       0       0       0
  3352 ;;      Totals:         0       2       0       0       0
  3353 ;;Total ram usage:        2 bytes
  3354 ;; Hardware stack levels used:    1
  3355 ;; Hardware stack levels required when called:    3
  3356 ;; This function calls:
  3357 ;;		Nothing
  3358 ;; This function is called by:
  3359 ;;		_main
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362  0573                     _startTwelveHourTimer:	
  3363                           
  3364                           ;common.c: 447: if((0 == uiBigTimer) && ( 0 == bBigTimerStartFlag))
  3365                           
  3366                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  3367  0573  083E               	movf	_uiBigTimer+1,w
  3368  0574  043D               	iorwf	_uiBigTimer,w
  3369  0575  1D03               	skipz
  3370  0576  0008               	return
  3371  0577  08CB               	movf	_bBigTimerStartFlag,f
  3372  0578  1D03               	skipz
  3373  0579  0008               	return
  3374                           
  3375                           ;common.c: 448: {
  3376                           ;common.c: 449: uiBigTimer = uiSetTime;
  3377  057A  0836               	movf	startTwelveHourTimer@uiSetTime+1,w
  3378  057B  00BE               	movwf	_uiBigTimer+1
  3379  057C  0835               	movf	startTwelveHourTimer@uiSetTime,w
  3380  057D  00BD               	movwf	_uiBigTimer
  3381                           
  3382                           ;common.c: 450: bBigTimerStartFlag = 1;
  3383  057E  01CB               	clrf	_bBigTimerStartFlag
  3384  057F  0ACB               	incf	_bBigTimerStartFlag,f
  3385  0580  0008               	return
  3386  0581                     __end_of_startTwelveHourTimer:	
  3387                           
  3388                           	psect	text1248
  3389  05DA                     __ptext1248:	
  3390 ;; =============== function _startTwelveHourTimer ends ============
  3391                           
  3392                           
  3393 ;; *************** function _clearTwentyMinTimer *****************
  3394 ;; Defined at:
  3395 ;;		line 480 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;		None
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;		None
  3400 ;; Return value:  Size  Location     Type
  3401 ;;		None               void
  3402 ;; Registers used:
  3403 ;;		status,2
  3404 ;; Tracked objects:
  3405 ;;		On entry : 60/0
  3406 ;;		On exit  : 60/0
  3407 ;;		Unchanged: FFF9F/0
  3408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3409 ;;      Params:         0       0       0       0       0
  3410 ;;      Locals:         0       0       0       0       0
  3411 ;;      Temps:          0       0       0       0       0
  3412 ;;      Totals:         0       0       0       0       0
  3413 ;;Total ram usage:        0 bytes
  3414 ;; Hardware stack levels used:    1
  3415 ;; Hardware stack levels required when called:    3
  3416 ;; This function calls:
  3417 ;;		Nothing
  3418 ;; This function is called by:
  3419 ;;		_main
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422  05DA                     _clearTwentyMinTimer:	
  3423                           
  3424                           ;common.c: 481: uiTwentyMinTimer = 0;
  3425                           
  3426                           ; Regs used in _clearTwentyMinTimer: [status,2]
  3427  05DA  01C3               	clrf	_uiTwentyMinTimer
  3428  05DB  01C4               	clrf	_uiTwentyMinTimer+1
  3429                           
  3430                           ;common.c: 482: bTwentyMinStartFlag = 0;
  3431  05DC  01CE               	clrf	_bTwentyMinStartFlag
  3432  05DD  0008               	return
  3433  05DE                     __end_of_clearTwentyMinTimer:	
  3434                           
  3435                           	psect	text1249
  3436  05AE                     __ptext1249:	
  3437 ;; =============== function _clearTwentyMinTimer ends ============
  3438                           
  3439                           
  3440 ;; *************** function _isFinishedTwentyMinTimer *****************
  3441 ;; Defined at:
  3442 ;;		line 535 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;		None
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;		None
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  1    wreg      unsigned char 
  3449 ;; Registers used:
  3450 ;;		wreg, status,2, status,0
  3451 ;; Tracked objects:
  3452 ;;		On entry : 60/0
  3453 ;;		On exit  : 60/0
  3454 ;;		Unchanged: FFF9F/0
  3455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3456 ;;      Params:         0       0       0       0       0
  3457 ;;      Locals:         0       0       0       0       0
  3458 ;;      Temps:          0       0       0       0       0
  3459 ;;      Totals:         0       0       0       0       0
  3460 ;;Total ram usage:        0 bytes
  3461 ;; Hardware stack levels used:    1
  3462 ;; Hardware stack levels required when called:    3
  3463 ;; This function calls:
  3464 ;;		Nothing
  3465 ;; This function is called by:
  3466 ;;		_main
  3467 ;; This function uses a non-reentrant model
  3468 ;;
  3469  05AE                     _isFinishedTwentyMinTimer:	
  3470                           
  3471                           ;common.c: 536: if(( 0 == uiTwentyMinTimer ) && bTwentyMinStartFlag )
  3472                           
  3473                           ; Regs used in _isFinishedTwentyMinTimer: [wreg+status,2+status,0]
  3474  05AE  0844               	movf	_uiTwentyMinTimer+1,w
  3475  05AF  0443               	iorwf	_uiTwentyMinTimer,w
  3476  05B0  1D03               	skipz
  3477  05B1  3400               	retlw	0
  3478  05B2  084E               	movf	_bTwentyMinStartFlag,w
  3479  05B3  1903               	btfsc	3,2
  3480  05B4  3400               	retlw	0
  3481  05B5  3001               	movlw	1
  3482                           
  3483                           ;common.c: 537: {
  3484                           ;common.c: 538: bTwentyMinStartFlag = 0;
  3485  05B6  01CE               	clrf	_bTwentyMinStartFlag
  3486                           
  3487                           ;common.c: 539: return 1;
  3488  05B7  0008               	return
  3489  05B8                     __end_of_isFinishedTwentyMinTimer:	
  3490                           ;common.c: 541: else
  3491                           ;common.c: 542: return 0;
  3492                           
  3493                           
  3494                           	psect	text1250
  3495  05EC                     __ptext1250:	
  3496 ;; =============== function _isFinishedTwentyMinTimer ends ============
  3497                           
  3498                           
  3499 ;; *************** function _clrSampeTime *****************
  3500 ;; Defined at:
  3501 ;;		line 605 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3502 ;; Parameters:    Size  Location     Type
  3503 ;;		None
  3504 ;; Auto vars:     Size  Location     Type
  3505 ;;		None
  3506 ;; Return value:  Size  Location     Type
  3507 ;;		None               void
  3508 ;; Registers used:
  3509 ;;		status,2
  3510 ;; Tracked objects:
  3511 ;;		On entry : 60/0
  3512 ;;		On exit  : 60/0
  3513 ;;		Unchanged: FFF9F/0
  3514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3515 ;;      Params:         0       0       0       0       0
  3516 ;;      Locals:         0       0       0       0       0
  3517 ;;      Temps:          0       0       0       0       0
  3518 ;;      Totals:         0       0       0       0       0
  3519 ;;Total ram usage:        0 bytes
  3520 ;; Hardware stack levels used:    1
  3521 ;; Hardware stack levels required when called:    3
  3522 ;; This function calls:
  3523 ;;		Nothing
  3524 ;; This function is called by:
  3525 ;;		_main
  3526 ;; This function uses a non-reentrant model
  3527 ;;
  3528  05EC                     _clrSampeTime:	
  3529                           
  3530                           ;common.c: 606: timer.timer10msStopWatch = 0;
  3531                           
  3532                           ; Regs used in _clrSampeTime: [status,2]
  3533  05EC  01D1               	clrf	_timer
  3534  05ED  0008               	return
  3535  05EE                     __end_of_clrSampeTime:	
  3536                           
  3537                           	psect	text1251
  3538  05DE                     __ptext1251:	
  3539 ;; =============== function _clrSampeTime ends ============
  3540                           
  3541                           
  3542 ;; *************** function _isPermitSampleTime *****************
  3543 ;; Defined at:
  3544 ;;		line 595 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3545 ;; Parameters:    Size  Location     Type
  3546 ;;		None
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;		None
  3549 ;; Return value:  Size  Location     Type
  3550 ;;                  1    wreg      unsigned char 
  3551 ;; Registers used:
  3552 ;;		wreg
  3553 ;; Tracked objects:
  3554 ;;		On entry : 60/0
  3555 ;;		On exit  : 60/0
  3556 ;;		Unchanged: FFF9F/0
  3557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3558 ;;      Params:         0       0       0       0       0
  3559 ;;      Locals:         0       0       0       0       0
  3560 ;;      Temps:          0       0       0       0       0
  3561 ;;      Totals:         0       0       0       0       0
  3562 ;;Total ram usage:        0 bytes
  3563 ;; Hardware stack levels used:    1
  3564 ;; Hardware stack levels required when called:    3
  3565 ;; This function calls:
  3566 ;;		Nothing
  3567 ;; This function is called by:
  3568 ;;		_main
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571  05DE                     _isPermitSampleTime:	
  3572                           
  3573                           ;common.c: 596: if(timer.timer10msStopWatch >= 1)
  3574                           
  3575                           ; Regs used in _isPermitSampleTime: [wreg]
  3576  05DE  0851               	movf	_timer,w
  3577  05DF  1D03               	skipz
  3578                           
  3579                           ;common.c: 597: {
  3580                           ;common.c: 598: return 1;
  3581  05E0  3401               	retlw	1
  3582                           
  3583                           ;common.c: 600: else
  3584                           ;common.c: 601: return 0;
  3585  05E1  3400               	retlw	0
  3586  05E2                     __end_of_isPermitSampleTime:	
  3587                           
  3588                           	psect	text1253
  3589  0581                     __ptext1253:	
  3590 ;; =============== function _adc_start ends ============
  3591                           
  3592                           
  3593 ;; *************** function _startTwentyMinTimer *****************
  3594 ;; Defined at:
  3595 ;;		line 525 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;  uiSetValue      2   21[BANK0 ] unsigned int 
  3598 ;; Auto vars:     Size  Location     Type
  3599 ;;		None
  3600 ;; Return value:  Size  Location     Type
  3601 ;;		None               void
  3602 ;; Registers used:
  3603 ;;		wreg, status,2, status,0
  3604 ;; Tracked objects:
  3605 ;;		On entry : 17F/0
  3606 ;;		On exit  : 17F/0
  3607 ;;		Unchanged: FFE80/0
  3608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3609 ;;      Params:         0       2       0       0       0
  3610 ;;      Locals:         0       0       0       0       0
  3611 ;;      Temps:          0       0       0       0       0
  3612 ;;      Totals:         0       2       0       0       0
  3613 ;;Total ram usage:        2 bytes
  3614 ;; Hardware stack levels used:    1
  3615 ;; Hardware stack levels required when called:    3
  3616 ;; This function calls:
  3617 ;;		Nothing
  3618 ;; This function is called by:
  3619 ;;		_main
  3620 ;; This function uses a non-reentrant model
  3621 ;;
  3622  0581                     _startTwentyMinTimer:	
  3623                           
  3624                           ;common.c: 526: if(( 0 == uiTwentyMinTimer) && ( 0 == bTwentyMinStartFlag))
  3625                           
  3626                           ; Regs used in _startTwentyMinTimer: [wreg+status,2+status,0]
  3627  0581  0844               	movf	_uiTwentyMinTimer+1,w
  3628  0582  0443               	iorwf	_uiTwentyMinTimer,w
  3629  0583  1D03               	skipz
  3630  0584  0008               	return
  3631  0585  08CE               	movf	_bTwentyMinStartFlag,f
  3632  0586  1D03               	skipz
  3633  0587  0008               	return
  3634                           
  3635                           ;common.c: 527: {
  3636                           ;common.c: 528: uiTwentyMinTimer = uiSetValue;
  3637  0588  0836               	movf	startTwentyMinTimer@uiSetValue+1,w
  3638  0589  00C4               	movwf	_uiTwentyMinTimer+1
  3639  058A  0835               	movf	startTwentyMinTimer@uiSetValue,w
  3640  058B  00C3               	movwf	_uiTwentyMinTimer
  3641                           
  3642                           ;common.c: 529: bTwentyMinStartFlag = 1;
  3643  058C  01CE               	clrf	_bTwentyMinStartFlag
  3644  058D  0ACE               	incf	_bTwentyMinStartFlag,f
  3645  058E  0008               	return
  3646  058F                     __end_of_startTwentyMinTimer:	
  3647                           
  3648                           	psect	text1255
  3649  05E9                     __ptext1255:	
  3650 ;; =============== function _adc_test_init ends ============
  3651                           
  3652                           
  3653 ;; *************** function _timer1_interrupt_config *****************
  3654 ;; Defined at:
  3655 ;;		line 335 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3656 ;; Parameters:    Size  Location     Type
  3657 ;;		None
  3658 ;; Auto vars:     Size  Location     Type
  3659 ;;		None
  3660 ;; Return value:  Size  Location     Type
  3661 ;;		None               void
  3662 ;; Registers used:
  3663 ;;		None
  3664 ;; Tracked objects:
  3665 ;;		On entry : 17F/20
  3666 ;;		On exit  : 17F/20
  3667 ;;		Unchanged: FFE80/0
  3668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3669 ;;      Params:         0       0       0       0       0
  3670 ;;      Locals:         0       0       0       0       0
  3671 ;;      Temps:          0       0       0       0       0
  3672 ;;      Totals:         0       0       0       0       0
  3673 ;;Total ram usage:        0 bytes
  3674 ;; Hardware stack levels used:    1
  3675 ;; Hardware stack levels required when called:    3
  3676 ;; This function calls:
  3677 ;;		Nothing
  3678 ;; This function is called by:
  3679 ;;		_main
  3680 ;; This function uses a non-reentrant model
  3681 ;;
  3682  05E9                     _timer1_interrupt_config:	
  3683                           
  3684                           ;common.c: 336: GIE = 1;
  3685                           
  3686                           ; Regs used in _timer1_interrupt_config: []
  3687  05E9  178B               	bsf	11,7
  3688                           
  3689                           ;common.c: 337: PEIE = 1;
  3690  05EA  170B               	bsf	11,6
  3691  05EB  0008               	return
  3692  05EC                     __end_of_timer1_interrupt_config:	
  3693                           
  3694                           	psect	text1256
  3695  05B8                     __ptext1256:	
  3696 ;; =============== function _timer1_interrupt_config ends ============
  3697                           
  3698                           
  3699 ;; *************** function _timer1_config *****************
  3700 ;; Defined at:
  3701 ;;		line 323 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3702 ;; Parameters:    Size  Location     Type
  3703 ;;		None
  3704 ;; Auto vars:     Size  Location     Type
  3705 ;;		None
  3706 ;; Return value:  Size  Location     Type
  3707 ;;		None               void
  3708 ;; Registers used:
  3709 ;;		wreg
  3710 ;; Tracked objects:
  3711 ;;		On entry : 17F/40
  3712 ;;		On exit  : 17F/20
  3713 ;;		Unchanged: FFE80/0
  3714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3715 ;;      Params:         0       0       0       0       0
  3716 ;;      Locals:         0       0       0       0       0
  3717 ;;      Temps:          0       0       0       0       0
  3718 ;;      Totals:         0       0       0       0       0
  3719 ;;Total ram usage:        0 bytes
  3720 ;; Hardware stack levels used:    1
  3721 ;; Hardware stack levels required when called:    3
  3722 ;; This function calls:
  3723 ;;		Nothing
  3724 ;; This function is called by:
  3725 ;;		_main
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728  05B8                     _timer1_config:	
  3729                           
  3730                           ;common.c: 325: TMR1H=0xCF;
  3731                           
  3732                           ; Regs used in _timer1_config: [wreg]
  3733  05B8  30CF               	movlw	207
  3734  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  3735  05BA  008F               	movwf	15	;volatile
  3736                           
  3737                           ;common.c: 326: TMR1L=0x2C;
  3738  05BB  302C               	movlw	44
  3739  05BC  008E               	movwf	14	;volatile
  3740                           
  3741                           ;common.c: 327: T1CON=0xE1;
  3742  05BD  30E1               	movlw	225
  3743  05BE  0090               	movwf	16	;volatile
  3744                           
  3745                           ;common.c: 328: TMR1IE=1;
  3746  05BF  1683               	bsf	3,5	;RP0=1, select bank1
  3747  05C0  140C               	bsf	12,0
  3748  05C1  0008               	return
  3749  05C2                     __end_of_timer1_config:	
  3750                           
  3751                           	psect	text1257
  3752  05CA                     __ptext1257:	
  3753 ;; =============== function _timer1_config ends ============
  3754                           
  3755                           
  3756 ;; *************** function _clock_config *****************
  3757 ;; Defined at:
  3758 ;;		line 315 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;		None
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;		None
  3763 ;; Return value:  Size  Location     Type
  3764 ;;		None               void
  3765 ;; Registers used:
  3766 ;;		wreg, status,2
  3767 ;; Tracked objects:
  3768 ;;		On entry : 17F/20
  3769 ;;		On exit  : 17F/40
  3770 ;;		Unchanged: FFE80/0
  3771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3772 ;;      Params:         0       0       0       0       0
  3773 ;;      Locals:         0       0       0       0       0
  3774 ;;      Temps:          0       0       0       0       0
  3775 ;;      Totals:         0       0       0       0       0
  3776 ;;Total ram usage:        0 bytes
  3777 ;; Hardware stack levels used:    1
  3778 ;; Hardware stack levels required when called:    3
  3779 ;; This function calls:
  3780 ;;		Nothing
  3781 ;; This function is called by:
  3782 ;;		_main
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785  05CA                     _clock_config:	
  3786                           
  3787                           ;common.c: 317: CLKPR = 0x80;
  3788                           
  3789                           ; Regs used in _clock_config: [wreg+status,2]
  3790  05CA  3080               	movlw	128
  3791  05CB  1283               	bcf	3,5	;RP0=0, select bank2
  3792  05CC  1703               	bsf	3,6	;RP1=1, select bank2
  3793  05CD  0088               	movwf	8	;volatile
  3794                           
  3795                           ;common.c: 318: CLKPR = 0x00;
  3796  05CE  0188               	clrf	8	;volatile
  3797  05CF                     l1558:	
  3798                           ;common.c: 319: while(CLKPCE);
  3799                           
  3800  05CF  1F88               	btfss	8,7
  3801  05D0  0008               	return
  3802  05D1  2DCF               	goto	l1558
  3803  05D2                     __end_of_clock_config:	
  3804                           
  3805                           	psect	text1258
  3806  05EE                     __ptext1258:	
  3807 ;; =============== function _clock_config ends ============
  3808                           
  3809                           
  3810 ;; *************** function _reset *****************
  3811 ;; Defined at:
  3812 ;;		line 294 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  3813 ;; Parameters:    Size  Location     Type
  3814 ;;		None
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;		None
  3817 ;; Return value:  Size  Location     Type
  3818 ;;		None               void
  3819 ;; Registers used:
  3820 ;;		None
  3821 ;; Tracked objects:
  3822 ;;		On entry : 40/20
  3823 ;;		On exit  : 40/20
  3824 ;;		Unchanged: FFFFFFBF/0
  3825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3826 ;;      Params:         0       0       0       0       0
  3827 ;;      Locals:         0       0       0       0       0
  3828 ;;      Temps:          0       0       0       0       0
  3829 ;;      Totals:         0       0       0       0       0
  3830 ;;Total ram usage:        0 bytes
  3831 ;; Hardware stack levels used:    1
  3832 ;; Hardware stack levels required when called:    3
  3833 ;; This function calls:
  3834 ;;		Nothing
  3835 ;; This function is called by:
  3836 ;;		_main
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839  05EE                     _reset:	
  3840  05EE                     l722:	
  3841                           ; Regs used in _reset: []
  3842                           ;main.c: 296: while(1);
  3843                           
  3844  05EE  2DEE               	goto	l722
  3845                           
  3846                           	psect	text1259
  3847  05E2                     __ptext1259:	
  3848  05E2                     __end_of_reset:	
  3849                           
  3850 ;; =============== function _reset ends ============
  3851 ;; *************** function _selectAdChannel *****************
  3852 ;; Defined at:
  3853 ;;		line 283 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;		None
  3856 ;; Auto vars:     Size  Location     Type
  3857 ;;		None
  3858 ;; Return value:  Size  Location     Type
  3859 ;;		None               void
  3860 ;; Registers used:
  3861 ;;		None
  3862 ;; Tracked objects:
  3863 ;;		On entry : 17F/0
  3864 ;;		On exit  : 17F/20
  3865 ;;		Unchanged: FFE80/0
  3866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3867 ;;      Params:         0       0       0       0       0
  3868 ;;      Locals:         0       0       0       0       0
  3869 ;;      Temps:          0       0       0       0       0
  3870 ;;      Totals:         0       0       0       0       0
  3871 ;;Total ram usage:        0 bytes
  3872 ;; Hardware stack levels used:    1
  3873 ;; Hardware stack levels required when called:    3
  3874 ;; This function calls:
  3875 ;;		Nothing
  3876 ;; This function is called by:
  3877 ;;		_main
  3878 ;; This function uses a non-reentrant model
  3879 ;;
  3880  05E2                     _selectAdChannel:	
  3881                           
  3882                           ;main.c: 285: TRISB0 = 1;
  3883                           
  3884                           ; Regs used in _selectAdChannel: []
  3885  05E2  1683               	bsf	3,5	;RP0=1, select bank1
  3886  05E3  1406               	bsf	6,0
  3887                           
  3888                           ;main.c: 286: TRISB1 = 1;
  3889  05E4  1486               	bsf	6,1
  3890  05E5  0008               	return
  3891  05E6                     __end_of_selectAdChannel:	
  3892                           
  3893                           	psect	text1260
  3894  052E                     __ptext1260:	
  3895 ;; =============== function _selectAdChannel ends ============
  3896                           
  3897                           
  3898 ;; *************** function _pwm_start *****************
  3899 ;; Defined at:
  3900 ;;		line 231 in file "D:\develop\AK7030-good\AK7030-OTP\main.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;  ucPulseWidth    1    wreg     unsigned char 
  3903 ;;  ucPulseFrequ    1   21[BANK0 ] unsigned char 
  3904 ;; Auto vars:     Size  Location     Type
  3905 ;;  ucPulseWidth    1   22[BANK0 ] unsigned char 
  3906 ;; Return value:  Size  Location     Type
  3907 ;;		None               void
  3908 ;; Registers used:
  3909 ;;		wreg, status,2, status,0
  3910 ;; Tracked objects:
  3911 ;;		On entry : 60/0
  3912 ;;		On exit  : 60/0
  3913 ;;		Unchanged: FFF9F/0
  3914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3915 ;;      Params:         0       1       0       0       0
  3916 ;;      Locals:         0       1       0       0       0
  3917 ;;      Temps:          0       0       0       0       0
  3918 ;;      Totals:         0       2       0       0       0
  3919 ;;Total ram usage:        2 bytes
  3920 ;; Hardware stack levels used:    1
  3921 ;; Hardware stack levels required when called:    3
  3922 ;; This function calls:
  3923 ;;		Nothing
  3924 ;; This function is called by:
  3925 ;;		_main
  3926 ;; This function uses a non-reentrant model
  3927 ;;
  3928  052E                     _pwm_start:	
  3929                           
  3930                           ; Regs used in _pwm_start: [wreg+status,2+status,0]
  3931                           ;pwm_start@ucPulseWidth stored from wreg
  3932  052E  00B6               	movwf	pwm_start@ucPulseWidth
  3933                           
  3934                           ;main.c: 233: CCP1CON&= 0xf0;
  3935  052F  30F0               	movlw	240
  3936  0530  0597               	andwf	23,f	;volatile
  3937                           
  3938                           ;main.c: 235: T2CON=0x04;
  3939  0531  3004               	movlw	4
  3940  0532  0092               	movwf	18	;volatile
  3941                           
  3942                           ;main.c: 236: PR2 = ucPulseFrequency;
  3943  0533  0835               	movf	pwm_start@ucPulseFrequency,w
  3944  0534  1683               	bsf	3,5	;RP0=1, select bank1
  3945  0535  0092               	movwf	18	;volatile
  3946                           
  3947                           ;main.c: 237: CCPR1L = ucPulseWidth;
  3948  0536  1283               	bcf	3,5	;RP0=0, select bank0
  3949  0537  0836               	movf	pwm_start@ucPulseWidth,w
  3950  0538  0095               	movwf	21	;volatile
  3951                           
  3952                           ;main.c: 238: CCP1CON=0x00;
  3953  0539  0197               	clrf	23	;volatile
  3954                           
  3955                           ;main.c: 240: TRISB2=0;
  3956  053A  1683               	bsf	3,5	;RP0=1, select bank1
  3957  053B  300C               	movlw	12
  3958  053C  1106               	bcf	6,2
  3959                           
  3960                           ;main.c: 241: PBOD2 = 0;
  3961  053D  1703               	bsf	3,6	;RP1=1, select bank3
  3962  053E  1108               	bcf	8,2
  3963                           
  3964                           ;main.c: 243: CCP1CON|= 0x0c;
  3965  053F  1283               	bcf	3,5	;RP0=0, select bank0
  3966  0540  1303               	bcf	3,6	;RP1=0, select bank0
  3967  0541  0497               	iorwf	23,f	;volatile
  3968  0542  0008               	return
  3969  0543                     __end_of_pwm_start:	
  3970                           
  3971                           	psect	text1268
  3972  0013                     __ptext1268:	
  3973 ;; =============== function _initPB3 ends ============
  3974                           
  3975                           
  3976 ;; *************** function _ISR *****************
  3977 ;; Defined at:
  3978 ;;		line 613 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  3979 ;; Parameters:    Size  Location     Type
  3980 ;;		None
  3981 ;; Auto vars:     Size  Location     Type
  3982 ;;		None
  3983 ;; Return value:  Size  Location     Type
  3984 ;;		None               void
  3985 ;; Registers used:
  3986 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3987 ;; Tracked objects:
  3988 ;;		On entry : 0/0
  3989 ;;		On exit  : 60/0
  3990 ;;		Unchanged: FFE00/0
  3991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3992 ;;      Params:         0       0       0       0       0
  3993 ;;      Locals:         0       0       0       0       0
  3994 ;;      Temps:          4       0       0       0       0
  3995 ;;      Totals:         4       0       0       0       0
  3996 ;;Total ram usage:        4 bytes
  3997 ;; Hardware stack levels used:    1
  3998 ;; Hardware stack levels required when called:    2
  3999 ;; This function calls:
  4000 ;;		i1_setAD_ConvertFlag
  4001 ;;		_adc_get
  4002 ;;		_vPutSampleDataIntoTable
  4003 ;; This function is called by:
  4004 ;;		Interrupt level 1
  4005 ;; This function uses a non-reentrant model
  4006 ;;
  4007  0013                     _ISR:	
  4008                           
  4009                           ;common.c: 614: static unsigned char ucTimer1sCnt = 0;
  4010                           ;common.c: 617: if(TMR1IF == 1)
  4011  0013  1C0C               	btfss	12,0
  4012  0014  2851               	goto	i1l3762
  4013  0015  3064               	movlw	100
  4014                           
  4015                           ;common.c: 618: {
  4016                           ;common.c: 619: TMR1IF = 0 ;
  4017  0016  100C               	bcf	12,0
  4018                           
  4019                           ;common.c: 620: timer.timer10msStopWatch++;
  4020  0017  0AD1               	incf	_timer,f
  4021                           
  4022                           ;common.c: 621: ucTimer1sCnt++;
  4023  0018  0AC9               	incf	ISR@ucTimer1sCnt,f
  4024                           
  4025                           ;common.c: 625: if(ucTimer1sCnt >= 100)
  4026  0019  0249               	subwf	ISR@ucTimer1sCnt,w
  4027  001A  1C03               	skipc
  4028  001B  2851               	goto	i1l3762
  4029                           
  4030                           ;common.c: 626: {
  4031                           ;common.c: 627: ucTimer1sCnt = 0;
  4032  001C  01C9               	clrf	ISR@ucTimer1sCnt
  4033                           
  4034                           ;common.c: 628: if(uiBigTimer > 0)
  4035  001D  083E               	movf	_uiBigTimer+1,w
  4036  001E  043D               	iorwf	_uiBigTimer,w
  4037  001F  1903               	skipnz
  4038  0020  2827               	goto	i1l1661
  4039                           
  4040                           ;common.c: 629: uiBigTimer--;
  4041  0021  3001               	movlw	1
  4042  0022  02BD               	subwf	_uiBigTimer,f
  4043  0023  3000               	movlw	0
  4044  0024  1C03               	skipc
  4045  0025  03BE               	decf	_uiBigTimer+1,f
  4046  0026  02BE               	subwf	_uiBigTimer+1,f
  4047  0027                     i1l1661:	
  4048                           
  4049                           ;common.c: 631: if(uiSmallTimer)
  4050  0027  0842               	movf	_uiSmallTimer+1,w
  4051  0028  0441               	iorwf	_uiSmallTimer,w
  4052  0029  1903               	skipnz
  4053  002A  2831               	goto	i1l1662
  4054                           
  4055                           ;common.c: 632: uiSmallTimer--;
  4056  002B  3001               	movlw	1
  4057  002C  02C1               	subwf	_uiSmallTimer,f
  4058  002D  3000               	movlw	0
  4059  002E  1C03               	skipc
  4060  002F  03C2               	decf	_uiSmallTimer+1,f
  4061  0030  02C2               	subwf	_uiSmallTimer+1,f
  4062  0031                     i1l1662:	
  4063                           
  4064                           ;common.c: 634: if(uiTwentySecondsTimer)
  4065  0031  1683               	bsf	3,5	;RP0=1, select bank1
  4066  0032  0821               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  4067  0033  0420               	iorwf	_uiTwentySecondsTimer^(0+128),w
  4068  0034  1903               	skipnz
  4069  0035  283C               	goto	i1l1663
  4070                           
  4071                           ;common.c: 635: uiTwentySecondsTimer--;
  4072  0036  3001               	movlw	1
  4073  0037  02A0               	subwf	_uiTwentySecondsTimer^(0+128),f
  4074  0038  3000               	movlw	0
  4075  0039  1C03               	skipc
  4076  003A  03A1               	decf	(_uiTwentySecondsTimer+1)^(0+128),f
  4077  003B  02A1               	subwf	(_uiTwentySecondsTimer+1)^(0+128),f
  4078  003C                     i1l1663:	
  4079                           
  4080                           ;common.c: 637: if(uiTwentyMinTimer)
  4081  003C  1283               	bcf	3,5	;RP0=0, select bank0
  4082  003D  0844               	movf	_uiTwentyMinTimer+1,w
  4083  003E  0443               	iorwf	_uiTwentyMinTimer,w
  4084  003F  1903               	skipnz
  4085  0040  2847               	goto	i1l1664
  4086                           
  4087                           ;common.c: 638: uiTwentyMinTimer--;
  4088  0041  3001               	movlw	1
  4089  0042  02C3               	subwf	_uiTwentyMinTimer,f
  4090  0043  3000               	movlw	0
  4091  0044  1C03               	skipc
  4092  0045  03C4               	decf	_uiTwentyMinTimer+1,f
  4093  0046  02C4               	subwf	_uiTwentyMinTimer+1,f
  4094  0047                     i1l1664:	
  4095                           
  4096                           ;common.c: 640: if( uiOneHourTimer )
  4097  0047  0840               	movf	_uiOneHourTimer+1,w
  4098  0048  043F               	iorwf	_uiOneHourTimer,w
  4099  0049  1903               	skipnz
  4100  004A  2851               	goto	i1l3762
  4101                           
  4102                           ;common.c: 641: uiOneHourTimer--;
  4103  004B  3001               	movlw	1
  4104  004C  02BF               	subwf	_uiOneHourTimer,f
  4105  004D  3000               	movlw	0
  4106  004E  1C03               	skipc
  4107  004F  03C0               	decf	_uiOneHourTimer+1,f
  4108  0050  02C0               	subwf	_uiOneHourTimer+1,f
  4109  0051                     i1l3762:	
  4110                           
  4111                           ;common.c: 642: }
  4112                           ;common.c: 643: }
  4113                           ;common.c: 645: if(ADIF)
  4114  0051  1D0D               	btfss	13,2
  4115  0052  286C               	goto	i1l1669
  4116  0053  3001               	movlw	1
  4117                           
  4118                           ;common.c: 646: {
  4119                           ;common.c: 648: ADIF=0;
  4120  0054  110D               	bcf	13,2
  4121                           
  4122                           ;common.c: 649: setAD_ConvertFlag(1);
  4123  0055  2084  118A         	fcall	i1_setAD_ConvertFlag
  4124                           
  4125                           ;common.c: 651: if(sampleChannelSelect == 12)
  4126  0057  0859               	movf	_sampleChannelSelect,w
  4127  0058  3A0C               	xorlw	12
  4128  0059  1D03               	skipz
  4129  005A  2863               	goto	i1l3772
  4130                           
  4131                           ;common.c: 652: {
  4132                           ;common.c: 655: vPutSampleDataIntoTable(adc_get(),12);
  4133  005B  2079  118A         	fcall	_adc_get
  4134  005D  0871               	movf	?_adc_get+1,w
  4135  005E  00F7               	movwf	?_vPutSampleDataIntoTable+1
  4136  005F  0870               	movf	?_adc_get,w
  4137  0060  00F6               	movwf	?_vPutSampleDataIntoTable
  4138  0061  300C               	movlw	12
  4139  0062  286A               	goto	L13
  4140  0063                     i1l3772:	
  4141                           ;common.c: 659: }
  4142                           
  4143                           
  4144                           ;common.c: 660: else
  4145                           ;common.c: 661: {
  4146                           ;common.c: 665: vPutSampleDataIntoTable(adc_get(),13);
  4147  0063  2079  118A         	fcall	_adc_get
  4148  0065  0871               	movf	?_adc_get+1,w
  4149  0066  00F7               	movwf	?_vPutSampleDataIntoTable+1
  4150  0067  0870               	movf	?_adc_get,w
  4151  0068  00F6               	movwf	?_vPutSampleDataIntoTable
  4152  0069  300D               	movlw	13
  4153  006A                     L13:	
  4154  006A  00F8               	movwf	?_vPutSampleDataIntoTable+2
  4155  006B  2087               	fcall	_vPutSampleDataIntoTable
  4156  006C                     i1l1669:	
  4157  006C  087C               	movf	??_ISR+3,w
  4158  006D  1283               	bcf	3,5	;RP0=0, select bank0
  4159  006E  1303               	bcf	3,6	;RP1=0, select bank0
  4160  006F  00FF               	movwf	127
  4161  0070  087B               	movf	??_ISR+2,w
  4162  0071  008A               	movwf	10
  4163  0072  087A               	movf	??_ISR+1,w
  4164  0073  0084               	movwf	4
  4165  0074  0E79               	swapf	??_ISR^(0+-128),w
  4166  0075  0083               	movwf	3
  4167  0076  0EFE               	swapf	126,f
  4168  0077  0E7E               	swapf	126,w
  4169  0078  0009               	retfie
  4170  0079                     __end_of_ISR:	
  4171  0079                     __ptext1271:	
  4172 ;; =============== function i1_setAD_ConvertFlag ends ============
  4173                           
  4174                           
  4175 ;; *************** function _adc_get *****************
  4176 ;; Defined at:
  4177 ;;		line 106 in file "D:\develop\AK7030-good\AK7030-OTP\periph.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;		None
  4180 ;; Auto vars:     Size  Location     Type
  4181 ;;  val             2    2[COMMON] unsigned int 
  4182 ;; Return value:  Size  Location     Type
  4183 ;;                  2    0[COMMON] unsigned int 
  4184 ;; Registers used:
  4185 ;;		wreg
  4186 ;; Tracked objects:
  4187 ;;		On entry : 60/0
  4188 ;;		On exit  : 60/20
  4189 ;;		Unchanged: FFF9F/0
  4190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4191 ;;      Params:         2       0       0       0       0
  4192 ;;      Locals:         2       0       0       0       0
  4193 ;;      Temps:          0       0       0       0       0
  4194 ;;      Totals:         4       0       0       0       0
  4195 ;;Total ram usage:        4 bytes
  4196 ;; Hardware stack levels used:    1
  4197 ;; This function calls:
  4198 ;;		Nothing
  4199 ;; This function is called by:
  4200 ;;		_ISR
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203  0079                     _adc_get:	
  4204                           
  4205                           ;periph.c: 107: unsigned int val;
  4206                           ;periph.c: 108: val = (ADRESH<<8) | ADRESL;
  4207                           
  4208                           ; Regs used in _adc_get: [wreg]
  4209  0079  081E               	movf	30,w	;volatile
  4210  007A  00F3               	movwf	adc_get@val+1
  4211  007B  01F2               	clrf	adc_get@val
  4212  007C  1683               	bsf	3,5	;RP0=1, select bank1
  4213  007D  081E               	movf	30,w	;volatile
  4214  007E  04F2               	iorwf	adc_get@val,f
  4215                           
  4216                           ;periph.c: 109: return val;
  4217  007F  0873               	movf	adc_get@val+1,w
  4218  0080  00F1               	movwf	?_adc_get+1
  4219  0081  0872               	movf	adc_get@val,w
  4220  0082  00F0               	movwf	?_adc_get
  4221  0083  0008               	return
  4222  0084                     __end_of_adc_get:	
  4223  0084                     __ptext1270:	
  4224 ;; =============== function _vPutSampleDataIntoTable ends ============
  4225                           
  4226                           
  4227 ;; *************** function i1_setAD_ConvertFlag *****************
  4228 ;; Defined at:
  4229 ;;		line 349 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  4230 ;; Parameters:    Size  Location     Type
  4231 ;;  setAD_Conver    1    wreg     unsigned char 
  4232 ;; Auto vars:     Size  Location     Type
  4233 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  4234 ;; Return value:  Size  Location     Type
  4235 ;;		None               void
  4236 ;; Registers used:
  4237 ;;		wreg
  4238 ;; Tracked objects:
  4239 ;;		On entry : 60/0
  4240 ;;		On exit  : 60/0
  4241 ;;		Unchanged: FFF9F/0
  4242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4243 ;;      Params:         0       0       0       0       0
  4244 ;;      Locals:         1       0       0       0       0
  4245 ;;      Temps:          0       0       0       0       0
  4246 ;;      Totals:         1       0       0       0       0
  4247 ;;Total ram usage:        1 bytes
  4248 ;; Hardware stack levels used:    1
  4249 ;; This function calls:
  4250 ;;		Nothing
  4251 ;; This function is called by:
  4252 ;;		_ISR
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255  0084                     i1_setAD_ConvertFlag:	
  4256                           
  4257                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  4258                           ;i1setAD_ConvertFlag@flag stored from wreg
  4259  0084  00F0               	movwf	i1setAD_ConvertFlag@flag
  4260                           
  4261                           ;common.c: 350: adc_convert_flag = flag;
  4262  0085  00CA               	movwf	_adc_convert_flag
  4263  0086  0008               	return
  4264  0087                     __end_ofi1_setAD_ConvertFlag:	
  4265  0087                     __ptext1269:	
  4266 ;; =============== function _ISR ends ============
  4267                           
  4268                           
  4269 ;; *************** function _vPutSampleDataIntoTable *****************
  4270 ;; Defined at:
  4271 ;;		line 165 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  4272 ;; Parameters:    Size  Location     Type
  4273 ;;  uiSampleData    2    6[COMMON] unsigned int 
  4274 ;;  channel         1    8[COMMON] unsigned char 
  4275 ;; Auto vars:     Size  Location     Type
  4276 ;;  uiDeviationV    2   17[BANK0 ] unsigned int 
  4277 ;;  uiAbstractVa    2   15[BANK0 ] unsigned int 
  4278 ;;  i               2   19[BANK0 ] int 
  4279 ;; Return value:  Size  Location     Type
  4280 ;;		None               void
  4281 ;; Registers used:
  4282 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4283 ;; Tracked objects:
  4284 ;;		On entry : 60/20
  4285 ;;		On exit  : 0/0
  4286 ;;		Unchanged: FFE00/0
  4287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4288 ;;      Params:         3       0       0       0       0
  4289 ;;      Locals:         0       6       0       0       0
  4290 ;;      Temps:          0       0       0       0       0
  4291 ;;      Totals:         3       6       0       0       0
  4292 ;;Total ram usage:        9 bytes
  4293 ;; Hardware stack levels used:    1
  4294 ;; Hardware stack levels required when called:    1
  4295 ;; This function calls:
  4296 ;;		_Filter
  4297 ;;		_getWaitResetFlag
  4298 ;;		_setPWM_Width
  4299 ;; This function is called by:
  4300 ;;		_ISR
  4301 ;; This function uses a non-reentrant model
  4302 ;;
  4303  0087                     _vPutSampleDataIntoTable:	
  4304                           
  4305                           ;common.c: 167: static unsigned char ucCh12Length = 0;
  4306                           ;common.c: 169: static unsigned char ucCh13Length = 0;
  4307                           ;common.c: 171: static unsigned char ucChannelFourteenthLength = 0;
  4308                           ;common.c: 172: static unsigned int uiCalWidthArrayNew = 0;
  4309                           ;common.c: 173: static unsigned int uiCalWidthArrayOld = 0;
  4310                           ;common.c: 174: if(channel == 12)
  4311                           
  4312                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  4313  0087  0878               	movf	vPutSampleDataIntoTable@channel,w
  4314  0088  3A0C               	xorlw	12
  4315  0089  1D03               	skipz
  4316  008A  2909               	goto	i1l3684
  4317                           
  4318                           ;common.c: 175: {
  4319                           ;common.c: 176: if(ucCh12Length < 3)
  4320  008B  3003               	movlw	3
  4321  008C  027D               	subwf	vPutSampleDataIntoTable@ucCh12Length,w
  4322  008D  1803               	skipnc
  4323  008E  2903               	goto	i1l3680
  4324                           
  4325                           ;common.c: 177: {
  4326                           ;common.c: 178: uiSampleCh12[ucCh12Length] = uiSampleData;
  4327  008F  1003               	clrc
  4328  0090  0D7D               	rlf	vPutSampleDataIntoTable@ucCh12Length,w
  4329  0091  3EAC               	addlw	_uiSampleCh12& (0+255)
  4330  0092  21E5  118A         	fcall	PL2	;call to abstracted procedure
  4331                           
  4332                           ;common.c: 180: ucCh12Length++;
  4333  0094  0AFD               	incf	vPutSampleDataIntoTable@ucCh12Length,f
  4334                           
  4335                           ;common.c: 182: if( 3 == ucCh12Length )
  4336  0095  087D               	movf	vPutSampleDataIntoTable@ucCh12Length,w
  4337  0096  3A03               	xorlw	3
  4338  0097  1D03               	skipz
  4339  0098  0008               	return
  4340  0099  30AC               	movlw	_uiSampleCh12& (0+255)
  4341                           
  4342                           ;common.c: 183: {
  4343                           ;common.c: 184: ucCh12Length = 0;
  4344  009A  01FD               	clrf	vPutSampleDataIntoTable@ucCh12Length
  4345                           
  4346                           ;common.c: 188: static unsigned char bInitArrayFlag = 0;
  4347                           ;common.c: 190: static unsigned int uiCalWidthArray[1],uiCalWidthCnt = 0;
  4348                           ;common.c: 192: static unsigned char uiInitWidth = 75;
  4349                           ;common.c: 194: uiCalWidthArrayNew = Filter(uiSampleCh12);
  4350  009B  215C  118A         	fcall	_Filter
  4351  009D  0871               	movf	?_Filter+1,w
  4352  009E  00C6               	movwf	vPutSampleDataIntoTable@uiCalWidthArrayNew+1
  4353  009F  0870               	movf	?_Filter,w
  4354  00A0  00C5               	movwf	vPutSampleDataIntoTable@uiCalWidthArrayNew
  4355                           
  4356                           ;common.c: 198: if( uiCalWidthArrayNew >= uiCalWidthArrayOld)
  4357  00A1  0848               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld+1,w
  4358  00A2  0246               	subwf	vPutSampleDataIntoTable@uiCalWidthArrayNew+1,w
  4359  00A3  1D03               	skipz
  4360  00A4  28A7               	goto	u123_25
  4361  00A5  0847               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld,w
  4362  00A6  0245               	subwf	vPutSampleDataIntoTable@uiCalWidthArrayNew,w
  4363  00A7                     u123_25:	
  4364  00A7  1C03               	skipc
  4365  00A8  28BC               	goto	i1l3652
  4366                           
  4367                           ;common.c: 199: {
  4368                           ;common.c: 200: uiAbstractValue = uiCalWidthArrayNew - uiCalWidthArrayOld;
  4369  00A9  0846               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew+1,w
  4370  00AA  00B0               	movwf	vPutSampleDataIntoTable@uiAbstractValue+1
  4371  00AB  0845               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew,w
  4372  00AC  00AF               	movwf	vPutSampleDataIntoTable@uiAbstractValue
  4373  00AD  0847               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld,w
  4374  00AE  02AF               	subwf	vPutSampleDataIntoTable@uiAbstractValue,f
  4375  00AF  0848               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld+1,w
  4376  00B0  1C03               	skipc
  4377  00B1  03B0               	decf	vPutSampleDataIntoTable@uiAbstractValue+1,f
  4378  00B2  02B0               	subwf	vPutSampleDataIntoTable@uiAbstractValue+1,f
  4379                           
  4380                           ;common.c: 201: uiDeviationValue = ((uiCalWidthArrayNew+uiCalWidthArrayOld)>>1) + uiAbst
      +                          ractValue;
  4381  00B3  0846               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew+1,w
  4382  00B4  21ED  118A         	fcall	PL3	;call to abstracted procedure
  4383  00B6  07B1               	addwf	vPutSampleDataIntoTable@uiDeviationValue,f
  4384  00B7  1803               	skipnc
  4385  00B8  0AB2               	incf	vPutSampleDataIntoTable@uiDeviationValue+1,f
  4386  00B9  0830               	movf	vPutSampleDataIntoTable@uiAbstractValue+1,w
  4387  00BA  07B2               	addwf	vPutSampleDataIntoTable@uiDeviationValue+1,f
  4388                           
  4389                           ;common.c: 202: }
  4390  00BB  28CD               	goto	i1l3658
  4391  00BC                     i1l3652:	
  4392                           
  4393                           ;common.c: 203: else
  4394                           ;common.c: 204: {
  4395                           ;common.c: 205: uiAbstractValue = uiCalWidthArrayOld - uiCalWidthArrayNew;
  4396  00BC  0848               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld+1,w
  4397  00BD  00B0               	movwf	vPutSampleDataIntoTable@uiAbstractValue+1
  4398  00BE  0847               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld,w
  4399  00BF  00AF               	movwf	vPutSampleDataIntoTable@uiAbstractValue
  4400  00C0  0845               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew,w
  4401  00C1  02AF               	subwf	vPutSampleDataIntoTable@uiAbstractValue,f
  4402  00C2  0846               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew+1,w
  4403  00C3  1C03               	skipc
  4404  00C4  03B0               	decf	vPutSampleDataIntoTable@uiAbstractValue+1,f
  4405  00C5  02B0               	subwf	vPutSampleDataIntoTable@uiAbstractValue+1,f
  4406                           
  4407                           ;common.c: 206: uiDeviationValue = ((uiCalWidthArrayNew+uiCalWidthArrayOld)>>1) - uiAbst
      +                          ractValue;
  4408  00C6  21ED  118A         	fcall	PL3	;call to abstracted procedure
  4409  00C8  02B1               	subwf	vPutSampleDataIntoTable@uiDeviationValue,f
  4410  00C9  0830               	movf	vPutSampleDataIntoTable@uiAbstractValue+1,w
  4411  00CA  1C03               	skipc
  4412  00CB  03B2               	decf	vPutSampleDataIntoTable@uiDeviationValue+1,f
  4413  00CC  02B2               	subwf	vPutSampleDataIntoTable@uiDeviationValue+1,f
  4414  00CD                     i1l3658:	
  4415                           
  4416                           ;common.c: 208: }
  4417                           ;common.c: 212: if(uiCalWidthCnt>400)
  4418  00CD  3001               	movlw	1
  4419  00CE  1683               	bsf	3,5	;RP0=1, select bank1
  4420  00CF  022B               	subwf	(vPutSampleDataIntoTable@uiCalWidthCnt+1)^(0+128),w
  4421  00D0  3091               	movlw	145
  4422  00D1  1903               	skipnz
  4423  00D2  022A               	subwf	vPutSampleDataIntoTable@uiCalWidthCnt^(0+128),w
  4424  00D3  1C03               	skipc
  4425  00D4  28DA               	goto	i1l1534
  4426                           
  4427                           ;common.c: 213: uiDeviationValue =400;
  4428  00D5  3090               	movlw	144
  4429  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  4430  00D7  00B1               	movwf	vPutSampleDataIntoTable@uiDeviationValue
  4431  00D8  3001               	movlw	1
  4432  00D9  00B2               	movwf	vPutSampleDataIntoTable@uiDeviationValue+1
  4433  00DA                     i1l1534:	
  4434                           
  4435                           ;common.c: 216: uiCalWidthArrayOld=uiCalWidthArrayNew;
  4436  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  4437  00DB  0846               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew+1,w
  4438  00DC  00C8               	movwf	vPutSampleDataIntoTable@uiCalWidthArrayOld+1
  4439  00DD  0845               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew,w
  4440  00DE  00C7               	movwf	vPutSampleDataIntoTable@uiCalWidthArrayOld
  4441                           
  4442                           ;common.c: 221: if(uiDeviationValue > (312))
  4443  00DF  3001               	movlw	1
  4444  00E0  0232               	subwf	vPutSampleDataIntoTable@uiDeviationValue+1,w
  4445  00E1  3039               	movlw	57
  4446  00E2  1903               	skipnz
  4447  00E3  0231               	subwf	vPutSampleDataIntoTable@uiDeviationValue,w
  4448  00E4  1C03               	skipc
  4449  00E5  28E8               	goto	i1l3664
  4450                           
  4451                           ;common.c: 222: {
  4452                           ;common.c: 225: uiInitWidth++;
  4453  00E6  0ADA               	incf	vPutSampleDataIntoTable@uiInitWidth,f
  4454                           
  4455                           ;common.c: 227: }
  4456  00E7  28EF               	goto	i1l3668
  4457  00E8                     i1l3664:	
  4458                           
  4459                           ;common.c: 228: else if(uiDeviationValue < (312))
  4460  00E8  3001               	movlw	1
  4461  00E9  0232               	subwf	vPutSampleDataIntoTable@uiDeviationValue+1,w
  4462  00EA  3038               	movlw	56
  4463  00EB  1903               	skipnz
  4464  00EC  0231               	subwf	vPutSampleDataIntoTable@uiDeviationValue,w
  4465  00ED  1C03               	btfss	3,0
  4466                           
  4467                           ;common.c: 229: {
  4468                           ;common.c: 232: uiInitWidth--;
  4469  00EE  03DA               	decf	vPutSampleDataIntoTable@uiInitWidth,f
  4470  00EF                     i1l3668:	
  4471                           ;common.c: 234: }
  4472                           
  4473                           
  4474                           ;common.c: 238: if(uiInitWidth > 249)
  4475  00EF  30FA               	movlw	250
  4476  00F0  025A               	subwf	vPutSampleDataIntoTable@uiInitWidth,w
  4477  00F1  1C03               	skipc
  4478  00F2  28F5               	goto	i1l1539
  4479                           
  4480                           ;common.c: 239: uiInitWidth = 249;
  4481  00F3  30F9               	movlw	249
  4482  00F4  00DA               	movwf	vPutSampleDataIntoTable@uiInitWidth
  4483  00F5                     i1l1539:	
  4484                           
  4485                           ;common.c: 241: if(uiInitWidth < 75)
  4486  00F5  304B               	movlw	75
  4487  00F6  025A               	subwf	vPutSampleDataIntoTable@uiInitWidth,w
  4488  00F7  1803               	skipnc
  4489  00F8  28FB               	goto	i1l3674
  4490                           
  4491                           ;common.c: 242: uiInitWidth = 75;
  4492  00F9  304B               	movlw	75
  4493  00FA  00DA               	movwf	vPutSampleDataIntoTable@uiInitWidth
  4494  00FB                     i1l3674:	
  4495                           
  4496                           ;common.c: 61: return bWaitResetFlag;
  4497                           
  4498                           ; Regs used in _getWaitResetFlag: [wreg]
  4499                           
  4500                           ;common.c: 246: if( 1 == getWaitResetFlag())
  4501  00FB  084F               	movf	_bWaitResetFlag,w
  4502  00FC  3A01               	xorlw	1
  4503  00FD  1D03               	skipz
  4504  00FE  2901               	goto	i1l3678
  4505                           
  4506                           ;common.c: 247: {
  4507                           ;common.c: 249: uiInitWidth = 150;
  4508  00FF  3096               	movlw	150
  4509  0100  00DA               	movwf	vPutSampleDataIntoTable@uiInitWidth
  4510  0101                     i1l3678:	
  4511                           
  4512                           ;common.c: 250: }
  4513                           ;common.c: 251: setPWM_Width(uiInitWidth);
  4514  0101  085A               	movf	vPutSampleDataIntoTable@uiInitWidth,w
  4515  0102  29E2               	ljmp	_setPWM_Width
  4516  0103                     i1l3680:	
  4517                           
  4518                           ;common.c: 256: else
  4519                           ;common.c: 257: {
  4520                           ;common.c: 258: ucCh12Length = 0;
  4521  0103  01FD               	clrf	vPutSampleDataIntoTable@ucCh12Length
  4522                           
  4523                           ;common.c: 260: uiSampleCh12[ucCh12Length] = uiSampleData;
  4524  0104  1003               	clrc
  4525  0105  0D7D               	rlf	vPutSampleDataIntoTable@ucCh12Length,w
  4526  0106  3EAC               	addlw	_uiSampleCh12& (0+255)
  4527  0107  21E5               	fcall	PL2	;call to abstracted procedure
  4528  0108  0008               	return
  4529  0109                     i1l3684:	
  4530                           
  4531                           ;common.c: 263: else if(channel == 13)
  4532  0109  0878               	movf	vPutSampleDataIntoTable@channel,w
  4533  010A  3A0D               	xorlw	13
  4534  010B  1D03               	skipz
  4535  010C  291E               	goto	i1l3696
  4536                           
  4537                           ;common.c: 264: {
  4538                           ;common.c: 265: if(ucCh13Length < 3)
  4539  010D  3003               	movlw	3
  4540  010E  1283               	bcf	3,5	;RP0=0, select bank0
  4541  010F  0257               	subwf	vPutSampleDataIntoTable@ucCh13Length,w
  4542  0110  1803               	skipnc
  4543  0111  2918               	goto	i1l3692
  4544                           
  4545                           ;common.c: 266: {
  4546                           ;common.c: 267: uiSampleCh13[ucCh13Length] = uiSampleData;
  4547  0112  1003               	clrc
  4548  0113  0D57               	rlf	vPutSampleDataIntoTable@ucCh13Length,w
  4549  0114  3EB2               	addlw	_uiSampleCh13& (0+255)
  4550  0115  21E5               	fcall	PL2	;call to abstracted procedure
  4551                           
  4552                           ;common.c: 269: ucCh13Length++;
  4553  0116  0AD7               	incf	vPutSampleDataIntoTable@ucCh13Length,f
  4554                           
  4555                           ;common.c: 270: }
  4556  0117  0008               	return
  4557  0118                     i1l3692:	
  4558                           
  4559                           ;common.c: 271: else
  4560                           ;common.c: 272: {
  4561                           ;common.c: 273: ucCh13Length = 0;
  4562  0118  01D7               	clrf	vPutSampleDataIntoTable@ucCh13Length
  4563                           
  4564                           ;common.c: 275: uiSampleCh13[ucCh13Length] = uiSampleData;
  4565  0119  1003               	clrc
  4566  011A  0D57               	rlf	vPutSampleDataIntoTable@ucCh13Length,w
  4567  011B  3EB2               	addlw	_uiSampleCh13& (0+255)
  4568  011C  21E5               	fcall	PL2	;call to abstracted procedure
  4569  011D  0008               	return
  4570  011E                     i1l3696:	
  4571                           
  4572                           ;common.c: 278: else if(channel == 14)
  4573  011E  0878               	movf	vPutSampleDataIntoTable@channel,w
  4574  011F  3A0E               	xorlw	14
  4575  0120  1D03               	skipz
  4576  0121  2933               	goto	i1l3708
  4577                           
  4578                           ;common.c: 279: {
  4579                           ;common.c: 280: if(ucChannelFourteenthLength < 3)
  4580  0122  3003               	movlw	3
  4581  0123  1283               	bcf	3,5	;RP0=0, select bank0
  4582  0124  0258               	subwf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4583  0125  1803               	skipnc
  4584  0126  292D               	goto	i1l3704
  4585                           
  4586                           ;common.c: 281: {
  4587                           ;common.c: 282: uiSampleChannelFourteenth[ucChannelFourteenthLength] = uiSampleData;
  4588  0127  1003               	clrc
  4589  0128  0D58               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4590  0129  3EB8               	addlw	_uiSampleChannelFourteenth& (0+255)
  4591  012A  21E5               	fcall	PL2	;call to abstracted procedure
  4592                           
  4593                           ;common.c: 284: ucChannelFourteenthLength++;
  4594  012B  0AD8               	incf	vPutSampleDataIntoTable@ucChannelFourteenthLength,f
  4595                           
  4596                           ;common.c: 285: }
  4597  012C  0008               	return
  4598  012D                     i1l3704:	
  4599                           
  4600                           ;common.c: 286: else
  4601                           ;common.c: 287: {
  4602                           ;common.c: 288: ucChannelFourteenthLength = 0;
  4603  012D  01D8               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4604                           
  4605                           ;common.c: 290: uiSampleCh13[ucChannelFourteenthLength] = uiSampleData;
  4606  012E  1003               	clrc
  4607  012F  0D58               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4608  0130  3EB2               	addlw	_uiSampleCh13& (0+255)
  4609  0131  21E5               	fcall	PL2	;call to abstracted procedure
  4610  0132  0008               	return
  4611  0133                     i1l3708:	
  4612                           
  4613                           ;common.c: 293: else
  4614                           ;common.c: 294: {
  4615                           ;common.c: 295: ucCh12Length = 0;
  4616  0133  01FD               	clrf	vPutSampleDataIntoTable@ucCh12Length
  4617                           
  4618                           ;common.c: 297: ucCh13Length = 0;
  4619  0134  1283               	bcf	3,5	;RP0=0, select bank0
  4620  0135  01D7               	clrf	vPutSampleDataIntoTable@ucCh13Length
  4621                           
  4622                           ;common.c: 299: ucChannelFourteenthLength = 0;
  4623  0136  01D8               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4624                           
  4625                           ;common.c: 301: for(int i = 0;i < 3; i++)
  4626  0137  01B3               	clrf	vPutSampleDataIntoTable@i
  4627  0138  01B4               	clrf	vPutSampleDataIntoTable@i+1
  4628  0139                     i1l3714:	
  4629                           
  4630                           ;common.c: 302: {
  4631                           ;common.c: 303: uiSampleCh12[i] = 0;
  4632  0139  1283               	bcf	3,5	;RP0=0, select bank0
  4633  013A  1303               	bcf	3,6	;RP1=0, select bank0
  4634  013B  1003               	clrc
  4635  013C  0D33               	rlf	vPutSampleDataIntoTable@i,w
  4636  013D  3EAC               	addlw	_uiSampleCh12& (0+255)
  4637  013E  0084               	movwf	4
  4638  013F  1383               	bcf	3,7	;select IRP bank1
  4639                           
  4640                           ;common.c: 305: uiSampleCh13[i] = 0;
  4641  0140  2211  118A         	fcall	PL11	;call to abstracted procedure
  4642  0142  3EB2               	addlw	_uiSampleCh13& (0+255)
  4643  0143  0084               	movwf	4
  4644                           
  4645                           ;common.c: 307: uiSampleChannelFourteenth[i] = 0;
  4646  0144  2211  118A         	fcall	PL11	;call to abstracted procedure
  4647  0146  3EB8               	addlw	_uiSampleChannelFourteenth& (0+255)
  4648  0147  0084               	movwf	4
  4649  0148  0180               	clrf	0
  4650  0149  0A84               	incf	4,f
  4651  014A  0180               	clrf	0
  4652  014B  0AB3               	incf	vPutSampleDataIntoTable@i,f
  4653  014C  1903               	skipnz
  4654  014D  0AB4               	incf	vPutSampleDataIntoTable@i+1,f
  4655  014E  0834               	movf	vPutSampleDataIntoTable@i+1,w
  4656  014F  3A80               	xorlw	128
  4657  0150  00FF               	movwf	127
  4658  0151  3080               	movlw	128
  4659  0152  027F               	subwf	127,w
  4660  0153  1D03               	skipz
  4661  0154  2957               	goto	u134_25
  4662  0155  3003               	movlw	3
  4663  0156  0233               	subwf	vPutSampleDataIntoTable@i,w
  4664  0157                     u134_25:	
  4665  0157  1803               	btfsc	3,0
  4666  0158  0008               	return
  4667  0159  2939               	goto	i1l3714
  4668  015A                     __end_of_vPutSampleDataIntoTable:	
  4669  015A                     __ptext1274:	
  4670 ;; =============== function _setPWM_Width ends ============
  4671                           
  4672                           
  4673 ;; *************** function _getWaitResetFlag *****************
  4674 ;; Defined at:
  4675 ;;		line 60 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;		None
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;		None
  4680 ;; Return value:  Size  Location     Type
  4681 ;;                  1    wreg      unsigned char 
  4682 ;; Registers used:
  4683 ;;		wreg
  4684 ;; Tracked objects:
  4685 ;;		On entry : 160/0
  4686 ;;		On exit  : 160/0
  4687 ;;		Unchanged: FFE9F/0
  4688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4689 ;;      Params:         0       0       0       0       0
  4690 ;;      Locals:         0       0       0       0       0
  4691 ;;      Temps:          0       0       0       0       0
  4692 ;;      Totals:         0       0       0       0       0
  4693 ;;Total ram usage:        0 bytes
  4694 ;; Hardware stack levels used:    1
  4695 ;; This function calls:
  4696 ;;		Nothing
  4697 ;; This function is called by:
  4698 ;;		_vPutSampleDataIntoTable
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701  015A                     _getWaitResetFlag:	
  4702                           
  4703                           ;common.c: 61: return bWaitResetFlag;
  4704                           
  4705                           ; Regs used in _getWaitResetFlag: [wreg]
  4706  015A  084F               	movf	_bWaitResetFlag,w
  4707  015B  0008               	return
  4708  015C                     __end_of_getWaitResetFlag:	
  4709  015C                     __ptext1272:	
  4710 ;; =============== function _adc_get ends ============
  4711                           
  4712                           
  4713 ;; *************** function _Filter *****************
  4714 ;; Defined at:
  4715 ;;		line 117 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  4716 ;; Parameters:    Size  Location     Type
  4717 ;;  tmpValue        1    wreg     PTR unsigned int 
  4718 ;;		 -> uiSampleChannelFourteenth(6), uiSampleCh12(6), 
  4719 ;; Auto vars:     Size  Location     Type
  4720 ;;  tmpValue        1    4[BANK0 ] PTR unsigned int 
  4721 ;;		 -> uiSampleChannelFourteenth(6), uiSampleCh12(6), 
  4722 ;;  cir             2   11[BANK0 ] int 
  4723 ;;  filter_buf      6    5[BANK0 ] unsigned int [3]
  4724 ;;  filter_sum      2    2[BANK0 ] unsigned int 
  4725 ;;  filter_temp     2    0[BANK0 ] unsigned int 
  4726 ;;  i               1   14[BANK0 ] unsigned char 
  4727 ;;  j               1   13[BANK0 ] unsigned char 
  4728 ;; Return value:  Size  Location     Type
  4729 ;;                  2    0[COMMON] unsigned int 
  4730 ;; Registers used:
  4731 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4732 ;; Tracked objects:
  4733 ;;		On entry : 160/20
  4734 ;;		On exit  : 160/0
  4735 ;;		Unchanged: FFE00/0
  4736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4737 ;;      Params:         2       0       0       0       0
  4738 ;;      Locals:         0      15       0       0       0
  4739 ;;      Temps:          4       0       0       0       0
  4740 ;;      Totals:         6      15       0       0       0
  4741 ;;Total ram usage:       21 bytes
  4742 ;; Hardware stack levels used:    1
  4743 ;; This function calls:
  4744 ;;		Nothing
  4745 ;; This function is called by:
  4746 ;;		_vPutSampleDataIntoTable
  4747 ;; This function uses a non-reentrant model
  4748 ;;
  4749  015C                     _Filter:	
  4750                           
  4751                           ; Regs used in _Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  4752                           ;Filter@tmpValue stored from wreg
  4753  015C  1283               	bcf	3,5	;RP0=0, select bank0
  4754  015D  00A4               	movwf	Filter@tmpValue
  4755  015E  01AD               	clrf	Filter@j
  4756                           
  4757                           ;common.c: 121: unsigned int filter_temp = 0, filter_sum = 0;
  4758  015F  01A0               	clrf	Filter@filter_temp
  4759  0160  01A1               	clrf	Filter@filter_temp+1
  4760  0161  01A2               	clrf	Filter@filter_sum
  4761  0162  01A3               	clrf	Filter@filter_sum+1
  4762                           
  4763                           ;common.c: 123: unsigned int filter_buf[3];
  4764                           ;common.c: 125: for(int cir = 0;cir < 3; cir++)
  4765  0163  01AB               	clrf	Filter@cir
  4766  0164  01AC               	clrf	Filter@cir+1
  4767  0165                     i1l3584:	
  4768                           
  4769                           ;common.c: 126: filter_buf[cir] = *tmpValue++;
  4770  0165  1283               	bcf	3,5	;RP0=0, select bank0
  4771  0166  1303               	bcf	3,6	;RP1=0, select bank0
  4772  0167  0824               	movf	Filter@tmpValue,w
  4773  0168  21FB  118A         	fcall	PL5	;call to abstracted procedure
  4774  016A  1003               	clrc
  4775  016B  0D2B               	rlf	Filter@cir,w
  4776  016C  2203  118A         	fcall	PL8	;call to abstracted procedure
  4777  016E  0AA4               	incf	Filter@tmpValue,f
  4778  016F  0AA4               	incf	Filter@tmpValue,f
  4779  0170  0AAB               	incf	Filter@cir,f
  4780  0171  1903               	skipnz
  4781  0172  0AAC               	incf	Filter@cir+1,f
  4782  0173  082C               	movf	Filter@cir+1,w
  4783  0174  3A80               	xorlw	128
  4784  0175  00FF               	movwf	127
  4785  0176  3080               	movlw	128
  4786  0177  027F               	subwf	127,w
  4787  0178  1D03               	skipz
  4788  0179  297C               	goto	u115_25
  4789  017A  3003               	movlw	3
  4790  017B  022B               	subwf	Filter@cir,w
  4791  017C                     u115_25:	
  4792  017C  1C03               	skipc
  4793  017D  2965               	goto	i1l3584
  4794                           
  4795                           ;common.c: 130: for(j = 0; j < 3 - 1; j++)
  4796  017E  1283               	bcf	3,5	;RP0=0, select bank0
  4797  017F  1303               	bcf	3,6	;RP1=0, select bank0
  4798  0180  01AD               	clrf	Filter@j
  4799                           
  4800                           ;common.c: 131: {
  4801                           ;common.c: 132: for(i = 0; i < 3 - 1 - j; i++)
  4802  0181  01AE               	clrf	Filter@i
  4803  0182                     i1l3606:	
  4804  0182  01F3               	clrf	??_Filter+1
  4805  0183  082D               	movf	Filter@j,w
  4806  0184  3C02               	sublw	2
  4807  0185  00F2               	movwf	??_Filter
  4808  0186  1C03               	skipc
  4809  0187  03F3               	decf	??_Filter+1,f
  4810  0188  0873               	movf	??_Filter+1,w
  4811  0189  3A80               	xorlw	128
  4812  018A  3C80               	sublw	128
  4813  018B  1D03               	skipz
  4814  018C  298F               	goto	u117_25
  4815  018D  0872               	movf	??_Filter,w
  4816  018E  022E               	subwf	Filter@i,w
  4817  018F                     u117_25:	
  4818  018F  1803               	btfsc	3,0
  4819  0190  29C4               	goto	i1l3608
  4820                           
  4821                           ;common.c: 133: {
  4822                           ;common.c: 134: if(filter_buf[i] > filter_buf[i + 1])
  4823  0191  1283               	bcf	3,5	;RP0=0, select bank0
  4824  0192  1303               	bcf	3,6	;RP1=0, select bank0
  4825  0193  1003               	clrc
  4826  0194  0D2E               	rlf	Filter@i,w
  4827  0195  3E25               	addlw	Filter@filter_buf& (0+255)
  4828  0196  21FB  118A         	fcall	PL5	;call to abstracted procedure
  4829  0198  220B  118A         	fcall	PL10	;call to abstracted procedure
  4830  019A  0800               	movf	0,w
  4831  019B  00F4               	movwf	??_Filter+2
  4832  019C  0A84               	incf	4,f
  4833  019D  0800               	movf	0,w
  4834  019E  00F5               	movwf	??_Filter+3
  4835  019F  0873               	movf	??_Filter+1,w
  4836  01A0  0275               	subwf	??_Filter+3,w
  4837  01A1  1D03               	skipz
  4838  01A2  29A5               	goto	u116_25
  4839  01A3  0872               	movf	??_Filter,w
  4840  01A4  0274               	subwf	??_Filter+2,w
  4841  01A5                     u116_25:	
  4842  01A5  1803               	skipnc
  4843  01A6  29C2               	goto	i1l3604
  4844                           
  4845                           ;common.c: 135: {
  4846                           ;common.c: 137: filter_temp = filter_buf[i];
  4847  01A7  1003               	clrc
  4848  01A8  0D2E               	rlf	Filter@i,w
  4849  01A9  3E25               	addlw	Filter@filter_buf& (0+255)
  4850  01AA  0084               	movwf	4
  4851  01AB  0800               	movf	0,w
  4852  01AC  00A0               	movwf	Filter@filter_temp
  4853  01AD  0A84               	incf	4,f
  4854  01AE  0800               	movf	0,w
  4855  01AF  00A1               	movwf	Filter@filter_temp+1
  4856                           
  4857                           ;common.c: 139: filter_buf[i] = filter_buf[i + 1];
  4858  01B0  220B  118A         	fcall	PL10	;call to abstracted procedure
  4859  01B2  0800               	movf	0,w
  4860  01B3  00F2               	movwf	??_Filter
  4861  01B4  0A84               	incf	4,f
  4862  01B5  0800               	movf	0,w
  4863  01B6  00F3               	movwf	??_Filter+1
  4864  01B7  1003               	clrc
  4865  01B8  0D2E               	rlf	Filter@i,w
  4866  01B9  2203  118A         	fcall	PL8	;call to abstracted procedure
  4867                           
  4868                           ;common.c: 141: filter_buf[i + 1] = filter_temp;
  4869  01BB  220B  118A         	fcall	PL10	;call to abstracted procedure
  4870  01BD  0820               	movf	Filter@filter_temp,w
  4871  01BE  0080               	movwf	0
  4872  01BF  0A84               	incf	4,f
  4873  01C0  0821               	movf	Filter@filter_temp+1,w
  4874  01C1  0080               	movwf	0
  4875  01C2                     i1l3604:	
  4876  01C2  0AAE               	incf	Filter@i,f
  4877  01C3  2982               	goto	i1l3606
  4878  01C4                     i1l3608:	
  4879  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  4880  01C5  3002               	movlw	2
  4881  01C6  1303               	bcf	3,6	;RP1=0, select bank0
  4882  01C7  0AAD               	incf	Filter@j,f
  4883  01C8  022D               	subwf	Filter@j,w
  4884                           
  4885                           ;common.c: 142: }
  4886                           ;common.c: 143: }
  4887                           ;common.c: 144: }
  4888                           ;common.c: 146: for(i = 1; i < 3 - 1; i++)
  4889  01C9  01AE               	clrf	Filter@i
  4890  01CA  1C03               	skipc
  4891  01CB  2982               	goto	i1l3606
  4892  01CC  0AAE               	incf	Filter@i,f
  4893                           
  4894                           ;common.c: 147: {
  4895                           ;common.c: 148: filter_sum += filter_buf[i];
  4896  01CD  1003               	clrc
  4897  01CE                     L14:	
  4898  01CE  0D2E               	rlf	Filter@i,w
  4899  01CF  3E25               	addlw	Filter@filter_buf& (0+255)
  4900  01D0  21FB  118A         	fcall	PL5	;call to abstracted procedure
  4901  01D2  0872               	movf	??_Filter,w
  4902  01D3  07A2               	addwf	Filter@filter_sum,f
  4903  01D4  1803               	skipnc
  4904  01D5  0AA3               	incf	Filter@filter_sum+1,f
  4905  01D6  0873               	movf	??_Filter+1,w
  4906  01D7  07A3               	addwf	Filter@filter_sum+1,f
  4907  01D8  3002               	movlw	2
  4908  01D9  0AAE               	incf	Filter@i,f
  4909  01DA  022E               	subwf	Filter@i,w
  4910  01DB  1C03               	skipc
  4911  01DC  29CE               	goto	L14
  4912                           
  4913                           ;common.c: 149: }
  4914                           ;common.c: 152: return (filter_sum );
  4915  01DD  0823               	movf	Filter@filter_sum+1,w
  4916  01DE  00F1               	movwf	?_Filter+1
  4917  01DF  0822               	movf	Filter@filter_sum,w
  4918  01E0  00F0               	movwf	?_Filter
  4919  01E1  0008               	return
  4920  01E2                     __end_of_Filter:	
  4921  01E2                     __ptext1273:	
  4922 ;; =============== function _Filter ends ============
  4923                           
  4924                           
  4925 ;; *************** function _setPWM_Width *****************
  4926 ;; Defined at:
  4927 ;;		line 65 in file "D:\develop\AK7030-good\AK7030-OTP\common.c"
  4928 ;; Parameters:    Size  Location     Type
  4929 ;;  ucWidth         1    wreg     unsigned char 
  4930 ;; Auto vars:     Size  Location     Type
  4931 ;;  ucWidth         1    0[COMMON] unsigned char 
  4932 ;; Return value:  Size  Location     Type
  4933 ;;		None               void
  4934 ;; Registers used:
  4935 ;;		wreg
  4936 ;; Tracked objects:
  4937 ;;		On entry : 160/0
  4938 ;;		On exit  : 160/0
  4939 ;;		Unchanged: FFE9F/0
  4940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4941 ;;      Params:         0       0       0       0       0
  4942 ;;      Locals:         1       0       0       0       0
  4943 ;;      Temps:          0       0       0       0       0
  4944 ;;      Totals:         1       0       0       0       0
  4945 ;;Total ram usage:        1 bytes
  4946 ;; Hardware stack levels used:    1
  4947 ;; This function calls:
  4948 ;;		Nothing
  4949 ;; This function is called by:
  4950 ;;		_vPutSampleDataIntoTable
  4951 ;; This function uses a non-reentrant model
  4952 ;;
  4953  01E2                     _setPWM_Width:	
  4954                           
  4955                           ; Regs used in _setPWM_Width: [wreg]
  4956                           ;setPWM_Width@ucWidth stored from wreg
  4957  01E2  00F0               	movwf	setPWM_Width@ucWidth
  4958                           
  4959                           ;common.c: 71: ucOldWidth = ucWidth;
  4960  01E3  0095               	movwf	21	;volatile
  4961  01E4  0008               	return
  4962  01E5                     __end_of_setPWM_Width:	
  4963  01E5                     PL2:	
  4964  01E5  0084               	movwf	4
  4965  01E6  0876               	movf	vPutSampleDataIntoTable@uiSampleData,w
  4966  01E7  1383               	bcf	3,7	;select IRP bank1
  4967  01E8  0080               	movwf	0
  4968  01E9  0A84               	incf	4,f
  4969  01EA  0877               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  4970  01EB  0080               	movwf	0
  4971  01EC  0008               	return
  4972  01ED                     PL3:	
  4973  01ED  00B2               	movwf	vPutSampleDataIntoTable@uiDeviationValue+1
  4974  01EE  0845               	movf	vPutSampleDataIntoTable@uiCalWidthArrayNew,w
  4975  01EF  00B1               	movwf	vPutSampleDataIntoTable@uiDeviationValue
  4976  01F0  0847               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld,w
  4977  01F1  07B1               	addwf	vPutSampleDataIntoTable@uiDeviationValue,f
  4978  01F2  1803               	skipnc
  4979  01F3  0AB2               	incf	vPutSampleDataIntoTable@uiDeviationValue+1,f
  4980  01F4  0848               	movf	vPutSampleDataIntoTable@uiCalWidthArrayOld+1,w
  4981  01F5  07B2               	addwf	vPutSampleDataIntoTable@uiDeviationValue+1,f
  4982  01F6  1003               	clrc
  4983  01F7  0CB2               	rrf	vPutSampleDataIntoTable@uiDeviationValue+1,f
  4984  01F8  0CB1               	rrf	vPutSampleDataIntoTable@uiDeviationValue,f
  4985  01F9  082F               	movf	vPutSampleDataIntoTable@uiAbstractValue,w
  4986  01FA  0008               	return
  4987  01FB                     PL5:	
  4988  01FB  0084               	movwf	4
  4989  01FC  1383               	bcf	3,7	;select IRP bank0
  4990  01FD  0800               	movf	0,w
  4991  01FE  00F2               	movwf	??_Filter
  4992  01FF  0A84               	incf	4,f
  4993  0200  0800               	movf	0,w
  4994  0201  00F3               	movwf	??_Filter+1
  4995  0202  0008               	return
  4996  0203                     PL8:	
  4997  0203  3E25               	addlw	Filter@filter_buf& (0+255)
  4998  0204  0084               	movwf	4
  4999  0205  0872               	movf	??_Filter,w
  5000  0206  0080               	movwf	0
  5001  0207  0A84               	incf	4,f
  5002  0208  0873               	movf	??_Filter+1,w
  5003  0209  0080               	movwf	0
  5004  020A  0008               	return
  5005  020B                     PL10:	
  5006  020B  1003               	clrc
  5007  020C  0D2E               	rlf	Filter@i,w
  5008  020D  3E02               	addlw	2
  5009  020E  3E25               	addlw	Filter@filter_buf& (0+255)
  5010  020F  0084               	movwf	4
  5011  0210  0008               	return
  5012  0211                     PL11:	
  5013  0211  0180               	clrf	0
  5014  0212  0A84               	incf	4,f
  5015  0213  0180               	clrf	0
  5016  0214  1003               	clrc
  5017  0215  0D33               	rlf	vPutSampleDataIntoTable@i,w
  5018  0216  0008               	return
  5019                           
  5020                           	psect	intentry
  5021  0004                     __pintentry:	
  5022                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5023                           
  5024  0004                     interrupt_function:	
  5025  007E                     saved_w	set	btemp
  5026  0004  00FE               	movwf	btemp
  5027  0005  0E03               	swapf	3,w
  5028  0006  00F9               	movwf	??_ISR
  5029  0007  0804               	movf	4,w
  5030  0008  00FA               	movwf	??_ISR+1
  5031  0009  080A               	movf	10,w
  5032  000A  00FB               	movwf	??_ISR+2
  5033  000B  1283               	bcf	3,5	;RP0=0, select bank0
  5034  000C  1303               	bcf	3,6	;RP1=0, select bank0
  5035  000D  087F               	movf	btemp+1,w
  5036  000E  00FC               	movwf	??_ISR+3
  5037  000F  118A  2813         	ljmp	_ISR
  5038                           
  5039                           	psect	text1275
  5040  0000                     __ptext1275:	
  5041 ;; =============== function _getWaitResetFlag ends ============
  5042                           
  5043  007E                     btemp	set	126	;btemp
  5044  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Thu Nov 21 15:32:19 2019

                                  ??_clock_config 0035                                 ?_getWaitResetFlag 0070  
                             ?_startOneHoursTimer 0035                                                _GO 00F9  
                              ??_getWaitResetFlag 0070                                                fsr 0004  
                        ?_timer1_interrupt_config 0070                                               l702 052C  
                                             l710 0000                                               l713 0000  
                                             l722 05EE                                               l707 0000  
                                             l716 0000                                               l719 0000  
                                             l737 026E                                               l682 051C  
                                             l692 0524                                               l677 04EF  
                                             l687 04FF                                               l697 050A  
                                             _GIE 005F                                               _PB2 0032  
                                             _PB3 0033                                               _PB4 0034  
                                             _PB5 0035                                               _PR2 0092  
                                             _ISR 0013                                               fsr0 0004  
                                             indf 0000                            ??_startThreeHoursTimer 0037  
                                            ?_ISR 0070                              ??_startOneHoursTimer 0037  
                              __size_of_AD_Sample 0014                                              l4000 0000  
                                            l4002 0000                                              l4010 0000  
                                            l2322 0000                                              l4004 0000  
                                            l4020 0000                                              l4012 0000  
                                            l2316 0000                                              l4100 0000  
                                            l1605 0000                                              l4014 0000  
                                            l4006 0000                                              l4022 0000  
                                            l4030 0000                                              l1614 0000  
                                            l4110 0000                                              l4016 0000  
                                            l4008 0000                                              l4024 0000  
                                            l4032 0000                                              l4040 0000  
                                            l4112 0000                                              l4120 0000  
                                            l1608 0000                                              l1561 0000  
                                            l1473 0000                                              l4018 0000  
                                            l4026 0000                                              l4042 0000  
                                            l4034 0000                                              l4050 0000  
                                            l1570 0000                                              l1564 0000  
                                            l4028 0000                                              l4036 0000  
                                            l4044 0000                                              l4052 04D8  
                                            l4124 0000                                              l4204 0000  
                                            l4212 0000                                              l4300 0000  
                                            l1573 0000                                              l1558 05CF  
                                            l4038 0000                                              l4054 0000  
                                            l1654 0000                                              l4118 0000  
                                            l4126 0000                                              l4150 0000  
                                            l4206 0000                                              l4230 04BA  
                                            l4222 0000                                              l4302 0000  
                                            l1567 0000                                              l1495 0000  
                                            l4056 0000                                              l4072 0000  
                                            l4136 0000                                              l4144 0000  
                                            l4152 0000                                              l4216 0000  
                                            l4232 0000                                              l4240 0000  
                                            l4400 0367                                              l4320 02A8  
                                            l4312 02A0                                              l4304 028C  
                                            l4066 0000                                              l4074 0000  
                                            l4138 0000                                              l4146 0000  
                                            l4162 0000                                              l4170 03E4  
                                            l4226 0000                                              l4218 0000  
                                            l4234 0000                                              l4242 0000  
                                            l4410 0000                                              l4402 0000  
                                            l4322 0000                                              l4314 02A1  
                                            l4306 0292                                              l1579 0000  
                                            l4068 0000                                              l4084 0000  
                                            l4092 0000                                              l4172 0000  
                                            l4164 0000                                              l4236 0000  
                                            l4420 03A6                                              l4412 0390  
                                            l4404 037F                                              l4340 02CD  
                                            l4332 02C5                                              l4324 02B3  
                                            l4308 0294                                              l4260 0000  
                                            l4086 0000                                              l4094 0000  
                                            l4190 0449                                              l4174 0000  
                                            l4238 0000                                              l4246 0000  
                                            l4254 0000                                              l4414 0000  
                                            l4350 0000                                              l4342 0000  
                                            l4334 02C6                                              l4318 0000  
                                            l4430 03AF                                              l4270 0242  
                                            l4262 0000                                              l4192 0404  
                                            l4176 0000                                              l4424 03AD  
                                            l4408 038B                                              l4352 02E4  
                                            l4344 0000                                              l4272 0000  
                                            l4264 0000                                              l4098 0000  
                                            l4194 044C                                              l4418 03A4  
                                            l4370 030D                                              l4354 0000  
                                            l4346 0000                                              l4338 0000  
                                            l4290 0267                                              l4282 0000  
                                            l4274 0000                                              l4266 0000  
                                            l4258 0000                                              l4196 0000  
                                            l4364 0306                                              l4348 0000  
                                            l4284 025A                                              l4268 0000  
                                            l4390 0000                                              l4374 0000  
                                            l4366 0000                                              l4294 0000  
                                            l4278 0250                                              l4384 0337  
                                            l4376 0000                                              l4368 030B  
                                            l4296 026F                                              l4288 0266  
                                            l4394 035A                                              l4386 033B  
                                            l4298 0000                                              l4396 035C  
                                            l4398 0363                                              l3980 0000  
                                            l3982 0000                                              l3990 0000  
                                            _ADIE 046A                                              l3984 0000  
                                            l3992 0000                                              _ADIF 006A  
                                            l3986 0000                                              l3994 0000  
                                            l3988 0000                                              l3996 0000  
                                            l3998 0000                                              _ADON 00F8  
                   startTwelveHourTimer@uiSetTime 0035                                              u2277 023A  
                                            u1955 03FE                                              _PEIE 005E  
                                            u1965 042D                                              u1975 0415  
                            FilterCh13@filter_buf 00C3                              FilterCh13@filter_sum 00C1  
                                            _main 0217                                              btemp 007E  
                                            start 0011                           ?_getAdOriginalCh13Value 003B  
                      ??_isFinishedTwentyMinTimer 0035                                             ??_ISR 0079  
                               ??_setPinInitVaule 0036                        __end_of_isPermitSampleTime 05E2  
                             _sampleChannelSelect 0059                                             ?_main 0070  
                                           _CLKPR 0108                                             _T1CON 0010  
                                           _T2CON 0012                                   __end_of_adc_get 0084  
                                           _PBOD2 0C42                                             _TMR1H 000F  
                                           _TMR1L 000E                             setAD_ConvertFlag@flag 0035  
                               ??_selectAdChannel 0035                             FilterCh13@filter_temp 00BF  
                                      _FilterCh13 03DB                                   __end_of_initPB3 04F2  
                                 __end_of_initPB4 0502                                   __end_of_initPB5 050D  
                         _vPutSampleDataIntoTable 0087                                   __end_of_initPin 04E6  
                                           _reset 05EE                                             _timer 0051  
                                           pclath 000A                               main@uiTimerThreeP5s 00A6  
                                           status 0003                                             wtemp0 007E  
                  __end_of_getAdOriginalCh13Value 03DB                     __size_of_startTwelveHourTimer 000E  
                            __end_of_clrSampeTime 05EE                                      __end_of_main 03D4  
                          __size_of_adc_test_init 001B                                 __end_of_AD_Sample 04BD  
                                          ??_main 00CD                               setPWM_Width@ucWidth 0070  
                                   main@ucChValue 00CE                                     main@ucDelay1s 00A2  
                                          _ADCON0 001F                                            _ADCON1 009F  
                            __end_of_clock_config 05D2                                            _ADRESH 001E  
                                          _ADRESL 009E                                            _CCPR1L 0015  
                                          ?_reset 0070                                            _CLKPCE 0847  
                                          i1l1508 0000                                            i1l2325 0000  
                                          i1l1534 00DA                                            i1l1482 0000  
                                          i1l1539 00F5                                            i1l1476 0000  
                                          i1l1573 0000                                            i1l1661 0027  
                                          i1l1662 0031                                            i1l1663 003C  
                                          i1l1664 0047                                            i1l3610 0000  
                                          i1l3524 0000                                            i1l3620 0000  
                                          i1l3604 01C2                                            i1l1669 006C  
                                          i1l3606 0182                                            i1l3702 0000  
                                          i1l3528 0000                                            i1l3608 01C4  
                                          i1l3704 012D                                            i1l3640 0000  
                                          i1l3632 0000                                            i1l3618 0000  
                                          i1l3714 0139                                            i1l3706 0000  
                                          i1l3650 0000                                            i1l3642 0000  
                                          i1l3634 0000                                            i1l3626 0000  
                                          i1l3716 0000                                            i1l3708 0133  
                                          i1l3652 00BC                                            i1l3644 0000  
                                          i1l3740 0000                                            u115_25 017C  
                                          u123_25 00A7                                            i1l3590 0000  
                                          i1l3718 0000                                            i1l3654 0000  
                                          i1l3638 0000                                            i1l3750 0000  
                                          i1l3584 0165                                            i1l3664 00E8  
                                          i1l3656 0000                                            i1l3648 0000  
                                          i1l3680 0103                                            i1l3744 0000  
                                          i1l3586 0000                                            i1l3578 0000  
                                          i1l3690 0000                                            i1l3682 0000  
                                          i1l3674 00FB                                            i1l3658 00CD  
                                          i1l3746 0000                                            i1l3762 0051  
                                          i1l3588 0000                                            i1l3692 0118  
                                          i1l3668 00EF                                            i1l3684 0109  
                                          i1l3772 0063                                            u116_25 01A5  
                                          i1l3774 0000                                            i1l3694 0000  
                                          i1l3678 0101                                            i1l3766 0000  
                                          i1l3696 011E                                            i1l3768 0000  
                                          i1l3778 0000                                            u117_25 018F  
                                          u134_25 0157                                            _TMR1IE 0460  
                                          _TMR1IF 0060                                 _getAD_ConvertFlag 04A2  
                               _setAD_ConvertFlag 04A6                                            _TRISB0 0430  
                                          _TRISB1 0431                                            _TRISB2 0432  
                                          _TRISB3 0433                                            _TRISB4 0434  
                                          _TRISB5 0435                                ?_getAD_ConvertFlag 0070  
                                          _Filter 015C                                ?_setAD_ConvertFlag 0070  
                     ??_isFinishedThreeHoursTimer 0035                     __size_of_clearThreeHoursTimer 0004  
                                       ??_adc_get 0072                               ??_getAD_ConvertFlag 0035  
                             ??_setAD_ConvertFlag 0035                                            _setPB3 0515  
                                          _setPB4 051E                                            _setPB5 0526  
                     __end_of_clearTwentyMinTimer 05DE                                            clrloop 05C3  
                                Filter@filter_buf 0025                                         ??_initPB3 0035  
                                       ??_initPB4 0035                                         ??_initPB5 0035  
                                Filter@filter_sum 0022                                         ??_initPin 0036  
                       ??_vPutSampleDataIntoTable 0079                                            saved_w 007E  
                         ??_clearTwelveHoursTimer 0035                                       ?_FilterCh13 0035  
                        __end_of_setWaitResetFlag 05E9                       ?_process_AD_Converter_Value 0070  
                                   _adc_test_init 04BD                         __end_of_getAD_ConvertFlag 04A6  
                       __end_of_setAD_ConvertFlag 04A9                                     ?_setPWM_Width 0070  
                              __size_of_adc_start 0004                          _initPB2_AsHighResistence 04F2  
                __size_of_isFinishedOneHoursTimer 000B                  __end_of_isFinishedTwentyMinTimer 05B8  
                                  __pcstackCOMMON 0070                                      __pidataBANK0 0000  
                               main@uiTimerOneP5s 00A4                                     __end_of_reset 05E2  
                               main@uiTimerTwoP5s 00A8                            setWaitResetFlag@bValue 0035  
                  vPutSampleDataIntoTable@channel 0078                         _isFinishedThreeHoursTimer 059A  
                           __end_of_timer1_config 05C2                         __size_of_getWaitResetFlag 0002  
                                  ?_adc_test_init 0035                       __end_of_startTwentyMinTimer 058F  
                                         ??_reset 0035                  __size_of_timer1_interrupt_config 0003  
                           __size_of_clrSampeTime 0002                                        __pbssBANK0 003D  
                                      __pbssBANK1 00A0                                    ??_setPWM_Width 0070  
                    __size_ofi1_setAD_ConvertFlag 0003                                   _setPinInitVaule 050D  
                                      adc_get@val 0072                                  _uiTwentyMinTimer 0043  
                 __end_of_vPutSampleDataIntoTable 015A                                           ?_Filter 0070  
                                      __pmaintext 0217               vPutSampleDataIntoTable@ucCh12Length 007D  
                             __size_of_FilterCh13 0095               vPutSampleDataIntoTable@ucCh13Length 0057  
         vPutSampleDataIntoTable@uiDeviationValue 0031                                   _selectAdChannel 05E2  
                                      __pintentry 0004                                           _CCP1CON 0017  
                                      __ptext1231 03D4                                        __ptext1240 058F  
                                      __ptext1232 048C                                        __ptext1241 0557  
                                      __ptext1233 050D                                        __ptext1250 05EC  
                                      __ptext1242 05D2                                        __ptext1234 04DC  
                                      __ptext1251 05DE                                        __ptext1243 059A  
                                      __ptext1235 04A9                                        __ptext1260 052E  
                                      __ptext1252 04D8                                        __ptext1244 0565  
                                      __ptext1236 04A6                                        __ptext1261 04F2  
                                      __ptext1253 0581                                        __ptext1245 05D6  
                                      __ptext1237 04A2                                        __ptext1270 0084  
                                      __ptext1262 0526                                        __ptext1254 04BD  
                                      __ptext1246 05A4                                        __ptext1238 03DB  
                                         ?_setPB3 0070                                        __ptext1271 0079  
                                      __ptext1263 0502                                        __ptext1255 05E9  
                                      __ptext1247 0573                                        __ptext1239 05E6  
                                         ?_setPB4 0070                                        __ptext1272 015C  
                                      __ptext1264 051E                                        __ptext1256 05B8  
                                      __ptext1248 05DA                                           ?_setPB5 0070  
                                      __ptext1273 01E2                                        __ptext1265 04F7  
                                      __ptext1257 05CA                                        __ptext1249 05AE  
                                      __ptext1274 015A                                        __ptext1266 0515  
                                      __ptext1258 05EE                                        __ptext1275 0000  
                                      __ptext1267 04E6                                        __ptext1259 05E2  
                                      __ptext1268 0013                                        __ptext1269 0087  
                           __size_of_clock_config 0008                                      _clrSampeTime 05EC  
                               __end_of_adc_start 04DC                              _uiTwentySecondsTimer 00A0  
                              _isPermitSampleTime 05DE                                           Filter@i 002E  
                                         Filter@j 002D                                __size_of_pwm_start 0015  
                     __size_of_startOneHoursTimer 000E                     __size_of_startThreeHoursTimer 000E  
                      __size_of_getAD_ConvertFlag 0004                        __size_of_setAD_ConvertFlag 0003  
                                  main@ucTimerP3s 0055                                    main@ucTimerP5s 0056  
                             ?_isPermitSampleTime 0070                                   __size_of_Filter 0086  
                                      _uiBigTimer 003D                                      setPB3@bValue 0035  
                                    setPB4@bValue 0035                                      _clock_config 05CA  
                                    setPB5@bValue 0035                                           _adc_get 0079  
                                 __size_of_setPB3 0009                                   __size_of_setPB4 0008  
                                 __size_of_setPB5 0008                              ??_isPermitSampleTime 0035  
                    __end_of_startTwelveHourTimer 0581                                     initPB3@bValue 0035  
                                   initPB4@bValue 0035                                         _AD_Sample 04A9  
                                         _initPB3 04E6                                           _initPB4 04F7  
                                         _initPB5 0502                                      __size_of_ISR 0066  
                                   initPB5@bValue 0035                                           _initPin 04DC  
                            _bSmallTimerStartFlag 004D                                   ??_adc_test_init 0036  
               __size_of_isFinishedTwentyMinTimer 000A                         ?_isFinishedTwentyMinTimer 0070  
                         __end_of_setPinInitVaule 0515                              end_of_initialization 0554  
                               Filter@filter_temp 0020                             pwm_start@ucPulseWidth 0036  
                         __end_of_selectAdChannel 05E6                           _isFinishedOneHoursTimer 058F  
                               __end_of_pwm_start 0543                              __end_of_setPWM_Width 01E5  
                                      ?_AD_Sample 0070                      ??_isFinishedTwelveHoursTimer 0035  
                                       Filter@cir 002B                               _bTwentyMinStartFlag 004E  
                                _adc_convert_flag 004A                                      ??_FilterCh13 0037  
                                _getWaitResetFlag 015A                      __end_of_clearThreeHoursTimer 05D6  
                  __size_of_clearTwelveHoursTimer 0004                                 ?_setWaitResetFlag 0070  
                         _timer1_interrupt_config 05E9                     __end_of_clearTwelveHoursTimer 05DA  
                      ??_initPB2_AsHighResistence 0035                                ??_setWaitResetFlag 0035  
              __size_of_isFinishedThreeHoursTimer 000A                                        main@ucStep 0054  
                                  __end_of_Filter 01E2                     startTwentyMinTimer@uiSetValue 0035  
             __size_of_isFinishedTwelveHoursTimer 000A                                FilterCh13@tmpValue 00BE  
                              __end_of_FilterCh13 0470                          vPutSampleDataIntoTable@i 0033  
                             i1_setAD_ConvertFlag 0084                                    __end_of_setPB3 051E  
                                  __end_of_setPB4 0526                                    __end_of_setPB5 052E  
                             start_initialization 0543                                       __end_of_ISR 0079  
                                ?_setPinInitVaule 0070                          ??_getAdOriginalCh13Value 003D  
                    __size_of_clearTwentyMinTimer 0004                         ??_isFinishedOneHoursTimer 0035  
                            ?i1_setAD_ConvertFlag 0070                              _startTwelveHourTimer 0573  
               __end_of_isFinishedThreeHoursTimer 05A4                                  ?_selectAdChannel 0070  
                                        ??_Filter 0072                                       __pdataBANK0 0059  
                                        ??_setPB3 0035                                          ??_setPB4 0035  
                                        ??_setPB5 0035                          ?_vPutSampleDataIntoTable 0076  
                                     ??_AD_Sample 0035                         ??_timer1_interrupt_config 0035  
                                     __pbssCOMMON 007D                                     __pcstackBANK0 0020  
                                   __pcstackBANK1 00BE                                         _adc_start 04D8  
                           ??i1_setAD_ConvertFlag 0070                                   main@uiCh13Value 00D0  
                           ?_startTwelveHourTimer 0035                      __size_of_startTwentyMinTimer 000E  
                          __size_of_timer1_config 000A                              _clearThreeHoursTimer 05D2  
                           __size_of_setPWM_Width 0003                      __end_of_startThreeHoursTimer 0573  
                               main@cTimerP5s_781 0052                                 main@cTimerP5s_787 0053  
                                        ?_adc_get 0070                   __end_of_isFinishedOneHoursTimer 059A  
              __end_of_isFinishedTwelveHoursTimer 05AE                        _isFinishedTwelveHoursTimer 05A4  
                                        ?_initPB3 0070                                          ?_initPB4 0070  
                                        ?_initPB5 0070                                   ISR@ucTimer1sCnt 0049  
                                        ?_initPin 0070                        __end_of_startOneHoursTimer 0565  
                __end_of_initPB2_AsHighResistence 04F7                         _uiSampleChannelFourteenth 00B8  
                                      ?_adc_start 0070                   __size_of_getAdOriginalCh13Value 0007  
                                  __size_of_reset FFF4                                 interrupt_function 0004  
                                    _setPWM_Width 01E2                                    _bWaitResetFlag 004F  
                 __end_of_timer1_interrupt_config 05EC                         pwm_start@ucPulseFrequency 0035  
                        __end_of_getWaitResetFlag 015C                             ?_clearThreeHoursTimer 0070  
                                    _uiSampleCh12 00AC                                      _uiSampleCh13 00B2  
                            adc_test_init@channel 0037               vPutSampleDataIntoTable@uiSampleData 0076  
                     __size_of_isPermitSampleTime 0004                                         _pwm_start 052E  
       vPutSampleDataIntoTable@uiCalWidthArrayOld 0047         vPutSampleDataIntoTable@uiCalWidthArrayNew 0045  
                                    _uiSmallTimer 0041              vPutSampleDataIntoTable@uiCalWidthCnt 00AA  
                           __end_of_adc_test_init 04D8                                     _timer1_config 05B8  
                    ??_process_AD_Converter_Value 0038                            ??_startTwelveHourTimer 0037  
                       __size_of_setWaitResetFlag 0003                            _getAdOriginalCh13Value 03D4  
                             _clearTwentyMinTimer 05DA                       startOneHoursTimer@uiSetTime 0035  
                                __size_of_adc_get 000B               __size_of_process_AD_Converter_Value 0016  
                                      ?_pwm_start 0035                          _isFinishedTwentyMinTimer 05AE  
vPutSampleDataIntoTable@ucChannelFourteenthLength 0058                                  __size_of_initPB3 000C  
                                __size_of_initPB4 000B                                  __size_of_initPB5 000B  
                                __size_of_initPin 000A                                    Filter@tmpValue 0024  
                                  ?_timer1_config 0070                              ?_clearTwentyMinTimer 0070  
                                     ??_adc_start 0035                              _startThreeHoursTimer 0565  
                           _clearTwelveHoursTimer 05D6                                    _uiOneHourTimer 003F  
                                   __size_of_main 01BD                vPutSampleDataIntoTable@uiInitWidth 005A  
                                   FilterCh13@cir 00C9                                          clear_ram 05C2  
                          ??_clearThreeHoursTimer 0035                 __size_of_initPB2_AsHighResistence 0005  
                       ?_initPB2_AsHighResistence 0070                            _bOneHourTimerStartFlag 004C  
                                   ?_clrSampeTime 0070                               _startTwentyMinTimer 0581  
                                     _sampleTimes 0050                             ??_clearTwentyMinTimer 0035  
                           ?_startThreeHoursTimer 0035                  __size_of_vPutSampleDataIntoTable 00D3  
                                        intlevel1 0000                              ?_startTwentyMinTimer 0035  
                        __size_of_setPinInitVaule 0008                        ?_isFinishedThreeHoursTimer 0070  
          vPutSampleDataIntoTable@uiAbstractValue 002F                                     ?_clock_config 0070  
                        __size_of_selectAdChannel 0004                     startThreeHoursTimer@uiSetTime 0035  
                         i1setAD_ConvertFlag@flag 0070                                       ??_pwm_start 0036  
                                  ??_clrSampeTime 0035                       ?_isFinishedTwelveHoursTimer 0070  
                              _bBigTimerStartFlag 004B                                   ??_timer1_config 0035  
                                     FilterCh13@i 00CC                                       FilterCh13@j 00CB  
                     __end_ofi1_setAD_ConvertFlag 0087                __end_of_process_AD_Converter_Value 04A2  
                      _process_AD_Converter_Value 048C                          ?_isFinishedOneHoursTimer 0070  
                          ?_clearTwelveHoursTimer 0070                                  adc_test_init@ref 0035  
                           ??_startTwentyMinTimer 0037                                _startOneHoursTimer 0557  
                                _setWaitResetFlag 05E6  
