

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Tue Dec 11 16:01:01 2018

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,delta=2
    14                           	psect	swtext1,local,class=CONST,delta=2
    15                           	psect	text493,local,class=CODE,delta=2
    16                           	psect	text498,local,class=CODE,delta=2
    17                           	psect	text499,local,class=CODE,delta=2
    18                           	psect	text500,local,class=CODE,delta=2
    19                           	psect	text501,local,class=CODE,delta=2
    20                           	psect	text502,local,class=CODE,delta=2
    21                           	psect	text503,local,class=CODE,delta=2
    22                           	psect	text504,local,class=CODE,delta=2
    23                           	psect	text505,local,class=CODE,delta=2
    24                           	psect	text506,local,class=CODE,delta=2
    25                           	psect	text507,local,class=CODE,delta=2
    26                           	psect	text509,local,class=CODE,delta=2
    27                           	psect	text510,local,class=CODE,delta=2
    28                           	psect	text511,local,class=CODE,delta=2
    29                           	psect	text512,local,class=CODE,delta=2
    30                           	psect	text513,local,class=CODE,delta=2
    31                           	psect	text514,local,class=CODE,delta=2
    32                           	psect	text515,local,class=CODE,delta=2
    33                           	psect	text516,local,class=CODE,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text519,local,class=CODE,delta=2
    36                           	psect	pa_nodes,global,class=CODE,delta=2
    37                           	dabs	1,0x7E,2
    38  000A                     	;#
    39                           
    40                           	psect	config
    41  2000  2FFF               	dw	12287	;#
    42  2001  3FDE               	dw	16350	;#
    43  2002  3FF8               	dw	16376	;#
    44                           
    45                           	psect	idataBANK0
    46  0000                     __pidataBANK0:	
    47  001F                     _ADCON0	set	31
    48  001E                     _ADRESH	set	30
    49  001B                     _OP1CON0	set	27
    50  001C                     _OP1CON1	set	28
    51  001D                     _OP1CON2	set	29
    52  0010                     _T1CON	set	16
    53  000F                     _TMR1H	set	15
    54  000E                     _TMR1L	set	14
    55  006A                     _ADIF	set	106
    56  00F8                     _ADON	set	248
    57  005F                     _GIE	set	95
    58  00F9                     _GO	set	249
    59  0028                     _PA0	set	40
    60  0029                     _PA1	set	41
    61  002A                     _PA2	set	42
    62  002B                     _PA3	set	43
    63  0032                     _PB2	set	50
    64  005E                     _PEIE	set	94
    65  0060                     _TMR1IF	set	96
    66  009F                     _ADCON1	set	159
    67  009E                     _ADRESL	set	158
    68  0087                     _DACCON	set	135
    69  0088                     _DACR0	set	136
    70  009B                     _OP2CON0	set	155
    71  009C                     _OP2CON1	set	156
    72  009D                     _OP2CON2	set	157
    73  046A                     _ADIE	set	1130
    74  0460                     _TMR1IE	set	1120
    75  0428                     _TRISA0	set	1064
    76  0429                     _TRISA1	set	1065
    77  042A                     _TRISA2	set	1066
    78  042B                     _TRISA3	set	1067
    79  042F                     _TRISA7	set	1071
    80  0430                     _TRISB0	set	1072
    81  0431                     _TRISB1	set	1073
    82  0432                     _TRISB2	set	1074
    83  0433                     _TRISB3	set	1075
    84  0434                     _TRISB4	set	1076
    85  0435                     _TRISB5	set	1077
    86  0436                     _TRISB6	set	1078
    87  0437                     _TRISB7	set	1079
    88  0108                     _CLKPR	set	264
    89  0847                     _CLKPCE	set	2119
    90                           
    91                           	psect	cinit
    92  01ED                     start_initialization:	
    93  01ED  3020               	movlw	low __pbssBANK0
    94                           
    95                           ; Clear objects allocated to COMMON
    96  01EE  01F6               	clrf	__pbssCOMMON& (0+127)
    97  01EF  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
    98  01F0  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
    99  01F1  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   100  01F2  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   101                           
   102                           ; Clear objects allocated to BANK0
   103  01F3  1383               	bcf	3,7	;select IRP bank0
   104  01F4  0084               	movwf	4
   105  01F5  303F               	movlw	low (__pbssBANK0+31)
   106  01F6  118A  221C         	fcall	clear_ram
   107                           
   108                           ;initializer for _sampleChannelSelect
   109  01F8  300D               	movlw	13
   110  01F9  00C4               	movwf	__pdataBANK0& (0+127)
   111  01FA                     end_of_initialization:	
   112                           ;End of C runtime variable initialization code
   113                           
   114  01FA  0183               	clrf	3
   115  01FB  118A  280D         	ljmp	_main	;jump to C main() function
   116                           
   117                           	psect	bssCOMMON
   118  0076                     __pbssCOMMON:	
   119  0076                     _uiBigTimer:	
   120  0076                     	ds	2
   121  0078                     ISR@ucTimer1sCnt:	
   122  0078                     	ds	1
   123  0079                     _adc_convert_flag:	
   124  0079                     	ds	1
   125  007A                     _timer:	
   126  007A                     	ds	1
   127                           
   128                           	psect	bssBANK0
   129  0020                     __pbssBANK0:	
   130  0020                     _buffer_Sample_AD_Value:	
   131  0020                     	ds	12
   132  002C                     _adc_original_CH13_value:	
   133  002C                     	ds	2
   134  002E                     _adc_original_value:	
   135  002E                     	ds	2
   136  0030                     _multiFilterMaxValue:	
   137  0030                     	ds	2
   138  0032                     _multiFilterMinValue:	
   139  0032                     	ds	2
   140  0034                     _uiSmallTimer:	
   141  0034                     	ds	2
   142  0036                     _sampleTimes:	
   143  0036                     	ds	1
   144  0037                     main@ampStep:	
   145  0037                     	ds	1
   146  0038                     main@tDA_timer:	
   147  0038                     	ds	1
   148  0039                     main@ucBigTimerActionFlag:	
   149  0039                     	ds	1
   150  003A                     main@ucCheckBatteryCnt:	
   151  003A                     	ds	1
   152  003B                     main@ucConfirmTimer1S:	
   153  003B                     	ds	1
   154  003C                     main@ucConfirmTimerZptS:	
   155  003C                     	ds	1
   156  003D                     main@ucInit:	
   157  003D                     	ds	1
   158  003E                     main@ucInstalledBatteryCnt:	
   159  003E                     	ds	1
   160                           
   161                           	psect	dataBANK0
   162  0044                     __pdataBANK0:	
   163  0044                     _sampleChannelSelect:	
   164  0044                     	ds	1
   165                           
   166                           	psect	clrtext
   167  021C                     clear_ram:	
   168                           ;	Called with FSR containing the base address, and
   169                           ;	W with the last address+1
   170                           
   171  021C  0064               	clrwdt	;clear the watchdog before getting into this loop
   172  021D                     clrloop:	
   173  021D  0180               	clrf	0	;clear RAM location pointed to by FSR
   174  021E  0A84               	incf	4,f	;increment pointer
   175  021F  0604               	xorwf	4,w	;XOR with final address
   176  0220  1903               	btfsc	3,2	;have we reached the end yet?
   177  0221  3400               	retlw	0	;all done for this memory range, return
   178  0222  0604               	xorwf	4,w	;XOR again to restore value
   179  0223  2A1D               	goto	clrloop	;do the next byte
   180                           
   181                           	psect	cstackCOMMON
   182  0070                     __pcstackCOMMON:	
   183  0070                     ?_clock_config:	
   184  0070                     ?_timer1_config:	
   185                           ; 0 bytes @ 0x0
   186                           
   187  0070                     ?_timer1_interrupt_config:	
   188                           ; 0 bytes @ 0x0
   189                           
   190  0070                     ?_dac_init:	
   191                           ; 0 bytes @ 0x0
   192                           
   193  0070                     ?_op1_init:	
   194                           ; 0 bytes @ 0x0
   195                           
   196  0070                     ?_op2_init:	
   197                           ; 0 bytes @ 0x0
   198                           
   199  0070                     ?_adc_start:	
   200                           ; 0 bytes @ 0x0
   201                           
   202  0070                     ?_clrSampeTime:	
   203                           ; 0 bytes @ 0x0
   204                           
   205  0070                     ?_process_AD_Converter_Value:	
   206                           ; 0 bytes @ 0x0
   207                           
   208  0070                     ?_clearBigTimer:	
   209                           ; 0 bytes @ 0x0
   210                           
   211  0070                     ?_clearSmallTimer:	
   212                           ; 0 bytes @ 0x0
   213                           
   214  0070                     ?_setDAC0_ChannelValue:	
   215                           ; 0 bytes @ 0x0
   216                           
   217  0070                     ?_startBigTimer:	
   218                           ; 0 bytes @ 0x0
   219                           
   220  0070                     ?_startSmallTimer:	
   221                           ; 0 bytes @ 0x0
   222                           
   223  0070                     ?_AD_Sample:	
   224                           ; 0 bytes @ 0x0
   225                           
   226  0070                     ?_main:	
   227                           ; 0 bytes @ 0x0
   228                           
   229  0070                     ?_setAD_ConvertFlag:	
   230                           ; 0 bytes @ 0x0
   231                           
   232  0070                     ?_ISR:	
   233                           ; 0 bytes @ 0x0
   234                           
   235  0070                     ?i1_setAD_ConvertFlag:	
   236                           ; 0 bytes @ 0x0
   237                           
   238  0070                     ??i1_setAD_ConvertFlag:	
   239                           ; 0 bytes @ 0x0
   240                           
   241  0070                     ?_isPermitSampleTime:	
   242                           ; 0 bytes @ 0x0
   243                           
   244  0070                     ?_isFinishedBigTimer:	
   245                           ; 1 bytes @ 0x0
   246                           
   247  0070                     ?_isFinishedSmallTimer:	
   248                           ; 1 bytes @ 0x0
   249                           
   250  0070                     ?_getAD_ConvertFlag:	
   251                           ; 1 bytes @ 0x0
   252                           
   253  0070                     ?_adc_get:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  0070                     i1setAD_ConvertFlag@flag:	
   257                           ; 2 bytes @ 0x0
   258                           
   259                           
   260                           ; 1 bytes @ 0x0
   261  0070                     	ds	2
   262  0072                     ??_adc_get:	
   263  0072                     adc_get@val:	
   264                           ; 0 bytes @ 0x2
   265                           
   266                           
   267                           ; 2 bytes @ 0x2
   268  0072                     	ds	2
   269  0074                     ??_ISR:	
   270                           
   271                           ; 0 bytes @ 0x4
   272  0074                     	ds	2
   273                           
   274                           	psect	cstackBANK0
   275  003F                     __pcstackBANK0:	
   276  003F                     ??_clock_config:	
   277  003F                     ??_timer1_config:	
   278                           ; 0 bytes @ 0x0
   279                           
   280  003F                     ??_timer1_interrupt_config:	
   281                           ; 0 bytes @ 0x0
   282                           
   283  003F                     ?_adc_test_init:	
   284                           ; 0 bytes @ 0x0
   285                           
   286  003F                     ??_dac_init:	
   287                           ; 0 bytes @ 0x0
   288                           
   289  003F                     ??_op1_init:	
   290                           ; 0 bytes @ 0x0
   291                           
   292  003F                     ??_op2_init:	
   293                           ; 0 bytes @ 0x0
   294                           
   295  003F                     ??_adc_start:	
   296                           ; 0 bytes @ 0x0
   297                           
   298  003F                     ??_isPermitSampleTime:	
   299                           ; 0 bytes @ 0x0
   300                           
   301  003F                     ??_clrSampeTime:	
   302                           ; 0 bytes @ 0x0
   303                           
   304  003F                     ??_clearBigTimer:	
   305                           ; 0 bytes @ 0x0
   306                           
   307  003F                     ??_clearSmallTimer:	
   308                           ; 0 bytes @ 0x0
   309                           
   310  003F                     ??_setDAC0_ChannelValue:	
   311                           ; 0 bytes @ 0x0
   312                           
   313  003F                     ??_startBigTimer:	
   314                           ; 0 bytes @ 0x0
   315                           
   316  003F                     ??_startSmallTimer:	
   317                           ; 0 bytes @ 0x0
   318                           
   319  003F                     ??_isFinishedBigTimer:	
   320                           ; 0 bytes @ 0x0
   321                           
   322  003F                     ??_isFinishedSmallTimer:	
   323                           ; 0 bytes @ 0x0
   324                           
   325  003F                     ??_getAD_ConvertFlag:	
   326                           ; 0 bytes @ 0x0
   327                           
   328  003F                     ??_setAD_ConvertFlag:	
   329                           ; 0 bytes @ 0x0
   330                           
   331  003F                     ?_getAdOriginalCh13Value:	
   332                           ; 0 bytes @ 0x0
   333                           
   334  003F                     ?_getAdOriginalValue:	
   335                           ; 2 bytes @ 0x0
   336                           
   337  003F                     setAD_ConvertFlag@flag:	
   338                           ; 2 bytes @ 0x0
   339                           
   340  003F                     setDAC0_ChannelValue@ucValue:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  003F                     adc_test_init@ref:	
   344                           ; 1 bytes @ 0x0
   345                           
   346                           
   347                           ; 1 bytes @ 0x0
   348  003F                     	ds	1
   349  0040                     ??_adc_test_init:	
   350                           
   351                           ; 0 bytes @ 0x1
   352  0040                     	ds	1
   353  0041                     ??_getAdOriginalCh13Value:	
   354  0041                     ??_AD_Sample:	
   355                           ; 0 bytes @ 0x2
   356                           
   357  0041                     ??_getAdOriginalValue:	
   358                           ; 0 bytes @ 0x2
   359                           
   360  0041                     adc_test_init@channel:	
   361                           ; 0 bytes @ 0x2
   362                           
   363                           
   364                           ; 1 bytes @ 0x2
   365  0041                     	ds	2
   366  0043                     AD_Sample@index:	
   367                           
   368                           ; 1 bytes @ 0x4
   369  0043                     	ds	1
   370  0044                     ??_process_AD_Converter_Value:	
   371  0044                     ??_main:	
   372                           ; 0 bytes @ 0x5
   373                           
   374                           
   375                           	psect	maintext
   376  000D                     __pmaintext:	
   377                           ; 0 bytes @ 0x5
   378 ;;Data sizes: Strings 0, constant 0, data 1, bss 36, persistent 0 stack 0
   379 ;;Auto spaces:   Size  Autos    Used
   380 ;; COMMON          14      6      11
   381 ;; BANK0           80      5      37
   382 ;; BANK1           80      0       0
   383 ;; BANK3           96      0       0
   384 ;; BANK2           96      0       0
   385 ;;
   386 ;; Pointer list with targets:
   387 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   388 ;;
   389 ;; ?_getAdOriginalCh13Value	unsigned int  size(1) Largest target is 0
   390 ;;
   391 ;; ?_getAdOriginalValue	unsigned int  size(1) Largest target is 0
   392 ;;
   393 ;;
   394 ;; Critical Paths under _main in COMMON
   395 ;;
   396 ;;   None.
   397 ;;
   398 ;; Critical Paths under _ISR in COMMON
   399 ;;
   400 ;;   _ISR->_adc_get
   401 ;;
   402 ;; Critical Paths under _main in BANK0
   403 ;;
   404 ;;   _process_AD_Converter_Value->_AD_Sample
   405 ;;   _AD_Sample->_getAdOriginalValue
   406 ;;
   407 ;; Critical Paths under _ISR in BANK0
   408 ;;
   409 ;;   None.
   410 ;;
   411 ;; Critical Paths under _main in BANK1
   412 ;;
   413 ;;   None.
   414 ;;
   415 ;; Critical Paths under _ISR in BANK1
   416 ;;
   417 ;;   None.
   418 ;;
   419 ;; Critical Paths under _main in BANK3
   420 ;;
   421 ;;   None.
   422 ;;
   423 ;; Critical Paths under _ISR in BANK3
   424 ;;
   425 ;;   None.
   426 ;;
   427 ;; Critical Paths under _main in BANK2
   428 ;;
   429 ;;   None.
   430 ;;
   431 ;; Critical Paths under _ISR in BANK2
   432 ;;
   433 ;;   None.
   434 ;;
   435 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   436 ;;
   437 ;;
   438 ;;Call Graph Tables:
   439 ;;
   440 ;; ---------------------------------------------------------------------------------
   441 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   442 ;; ---------------------------------------------------------------------------------
   443 ;; (0) _main                                                 0     0      0     156
   444 ;;                       _clock_config
   445 ;;                      _timer1_config
   446 ;;            _timer1_interrupt_config
   447 ;;                      _adc_test_init
   448 ;;                           _dac_init
   449 ;;                           _op1_init
   450 ;;                           _op2_init
   451 ;;                          _adc_start
   452 ;;                 _isPermitSampleTime
   453 ;;                       _clrSampeTime
   454 ;;         _process_AD_Converter_Value
   455 ;;                      _clearBigTimer
   456 ;;                    _clearSmallTimer
   457 ;;             _getAdOriginalCh13Value
   458 ;;               _setDAC0_ChannelValue
   459 ;;                      _startBigTimer
   460 ;;                    _startSmallTimer
   461 ;;                 _isFinishedBigTimer
   462 ;;               _isFinishedSmallTimer
   463 ;; ---------------------------------------------------------------------------------
   464 ;; (1) _process_AD_Converter_Value                           0     0      0      90
   465 ;;                  _getAD_ConvertFlag
   466 ;;                  _setAD_ConvertFlag
   467 ;;                          _AD_Sample
   468 ;;                          _adc_start
   469 ;; ---------------------------------------------------------------------------------
   470 ;; (2) _AD_Sample                                            3     3      0      68
   471 ;;                                              2 BANK0      3     3      0
   472 ;;                 _getAdOriginalValue
   473 ;; ---------------------------------------------------------------------------------
   474 ;; (3) _getAdOriginalValue                                   2     0      2       0
   475 ;;                                              0 BANK0      2     0      2
   476 ;; ---------------------------------------------------------------------------------
   477 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   478 ;;                                              0 BANK0      1     1      0
   479 ;; ---------------------------------------------------------------------------------
   480 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   481 ;; ---------------------------------------------------------------------------------
   482 ;; (1) _isFinishedSmallTimer                                 0     0      0       0
   483 ;; ---------------------------------------------------------------------------------
   484 ;; (1) _isFinishedBigTimer                                   0     0      0       0
   485 ;; ---------------------------------------------------------------------------------
   486 ;; (1) _startSmallTimer                                      0     0      0       0
   487 ;; ---------------------------------------------------------------------------------
   488 ;; (1) _startBigTimer                                        0     0      0       0
   489 ;; ---------------------------------------------------------------------------------
   490 ;; (1) _setDAC0_ChannelValue                                 1     1      0      22
   491 ;;                                              0 BANK0      1     1      0
   492 ;; ---------------------------------------------------------------------------------
   493 ;; (1) _getAdOriginalCh13Value                               2     0      2       0
   494 ;;                                              0 BANK0      2     0      2
   495 ;; ---------------------------------------------------------------------------------
   496 ;; (1) _clearSmallTimer                                      0     0      0       0
   497 ;; ---------------------------------------------------------------------------------
   498 ;; (1) _clearBigTimer                                        0     0      0       0
   499 ;; ---------------------------------------------------------------------------------
   500 ;; (1) _clrSampeTime                                         0     0      0       0
   501 ;; ---------------------------------------------------------------------------------
   502 ;; (1) _isPermitSampleTime                                   0     0      0       0
   503 ;; ---------------------------------------------------------------------------------
   504 ;; (2) _adc_start                                            0     0      0       0
   505 ;; ---------------------------------------------------------------------------------
   506 ;; (1) _op2_init                                             0     0      0       0
   507 ;; ---------------------------------------------------------------------------------
   508 ;; (1) _op1_init                                             0     0      0       0
   509 ;; ---------------------------------------------------------------------------------
   510 ;; (1) _dac_init                                             0     0      0       0
   511 ;; ---------------------------------------------------------------------------------
   512 ;; (1) _adc_test_init                                        3     2      1      44
   513 ;;                                              0 BANK0      3     2      1
   514 ;; ---------------------------------------------------------------------------------
   515 ;; (1) _timer1_interrupt_config                              0     0      0       0
   516 ;; ---------------------------------------------------------------------------------
   517 ;; (1) _timer1_config                                        0     0      0       0
   518 ;; ---------------------------------------------------------------------------------
   519 ;; (1) _clock_config                                         0     0      0       0
   520 ;; ---------------------------------------------------------------------------------
   521 ;; Estimated maximum stack depth 3
   522 ;; ---------------------------------------------------------------------------------
   523 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   524 ;; ---------------------------------------------------------------------------------
   525 ;; (4) _ISR                                                  2     2      0      97
   526 ;;                                              4 COMMON     2     2      0
   527 ;;                i1_setAD_ConvertFlag
   528 ;;                            _adc_get
   529 ;; ---------------------------------------------------------------------------------
   530 ;; (5) i1_setAD_ConvertFlag                                  1     1      0      73
   531 ;;                                              0 COMMON     1     1      0
   532 ;; ---------------------------------------------------------------------------------
   533 ;; (5) _adc_get                                              4     2      2      24
   534 ;;                                              0 COMMON     4     2      2
   535 ;; ---------------------------------------------------------------------------------
   536 ;; Estimated maximum stack depth 5
   537 ;; ---------------------------------------------------------------------------------
   538 ;; Call Graph Graphs:
   539 ;; _main (ROOT)
   540 ;;   _clock_config
   541 ;;   _timer1_config
   542 ;;   _timer1_interrupt_config
   543 ;;   _adc_test_init
   544 ;;   _dac_init
   545 ;;   _op1_init
   546 ;;   _op2_init
   547 ;;   _adc_start
   548 ;;   _isPermitSampleTime
   549 ;;   _clrSampeTime
   550 ;;   _process_AD_Converter_Value
   551 ;;     _getAD_ConvertFlag
   552 ;;     _setAD_ConvertFlag
   553 ;;     _AD_Sample
   554 ;;       _getAdOriginalValue
   555 ;;     _adc_start
   556 ;;   _clearBigTimer
   557 ;;   _clearSmallTimer
   558 ;;   _getAdOriginalCh13Value
   559 ;;   _setDAC0_ChannelValue
   560 ;;   _startBigTimer
   561 ;;   _startSmallTimer
   562 ;;   _isFinishedBigTimer
   563 ;;   _isFinishedSmallTimer
   564 ;;
   565 ;; _ISR (ROOT)
   566 ;;   i1_setAD_ConvertFlag
   567 ;;   _adc_get
   568 ;;
   569 ;; Address spaces:
   570 ;;Name               Size   Autos  Total    Cost      Usage
   571 ;;BANK3               60      0       0      10        0.0%
   572 ;;BITBANK3            60      0       0       9        0.0%
   573 ;;SFR3                 0      0       0       4        0.0%
   574 ;;BITSFR3              0      0       0       4        0.0%
   575 ;;BANK2               60      0       0      12        0.0%
   576 ;;BITBANK2            60      0       0      11        0.0%
   577 ;;SFR2                 0      0       0       5        0.0%
   578 ;;BITSFR2              0      0       0       5        0.0%
   579 ;;SFR1                 0      0       0       2        0.0%
   580 ;;BITSFR1              0      0       0       2        0.0%
   581 ;;BANK1               50      0       0       8        0.0%
   582 ;;BITBANK1            50      0       0       7        0.0%
   583 ;;CODE                 0      0       0       0        0.0%
   584 ;;DATA                 0      0      37       6        0.0%
   585 ;;ABS                  0      0      30       3        0.0%
   586 ;;NULL                 0      0       0       0        0.0%
   587 ;;STACK                0      0       7       2        0.0%
   588 ;;BANK0               50      5      25       5       46.3%
   589 ;;BITBANK0            50      0       0       4        0.0%
   590 ;;SFR0                 0      0       0       1        0.0%
   591 ;;BITSFR0              0      0       0       1        0.0%
   592 ;;COMMON               E      6       B       1       78.6%
   593 ;;BITCOMMON            E      0       0       0        0.0%
   594                           
   595                           
   596 ;; *************** function _main *****************
   597 ;; Defined at:
   598 ;;		line 84 in file "C:\sw_dev\AK7030-OTP\main.c"
   599 ;; Parameters:    Size  Location     Type
   600 ;;		None
   601 ;; Auto vars:     Size  Location     Type
   602 ;;		None
   603 ;; Return value:  Size  Location     Type
   604 ;;		None               void
   605 ;; Registers used:
   606 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   607 ;; Tracked objects:
   608 ;;		On entry : 17F/0
   609 ;;		On exit  : 60/0
   610 ;;		Unchanged: FFE00/0
   611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   612 ;;      Params:         0       0       0       0       0
   613 ;;      Locals:         0       0       0       0       0
   614 ;;      Temps:          0       0       0       0       0
   615 ;;      Totals:         0       0       0       0       0
   616 ;;Total ram usage:        0 bytes
   617 ;; Hardware stack levels required when called:    5
   618 ;; This function calls:
   619 ;;		_clock_config
   620 ;;		_timer1_config
   621 ;;		_timer1_interrupt_config
   622 ;;		_adc_test_init
   623 ;;		_dac_init
   624 ;;		_op1_init
   625 ;;		_op2_init
   626 ;;		_adc_start
   627 ;;		_isPermitSampleTime
   628 ;;		_clrSampeTime
   629 ;;		_process_AD_Converter_Value
   630 ;;		_clearBigTimer
   631 ;;		_clearSmallTimer
   632 ;;		_getAdOriginalCh13Value
   633 ;;		_setDAC0_ChannelValue
   634 ;;		_startBigTimer
   635 ;;		_startSmallTimer
   636 ;;		_isFinishedBigTimer
   637 ;;		_isFinishedSmallTimer
   638 ;; This function is called by:
   639 ;;		Startup code after reset
   640 ;; This function uses a non-reentrant model
   641 ;;
   642  000D                     _main:	
   643                           
   644                           ;main.c: 85: enum step
   645                           ;main.c: 86: {
   646                           ;main.c: 87: SENSE_PB2_INPUT_VOLTAGE = 0,
   647                           ;main.c: 88: SENSE_PB2_DURATION_ONE_SECOND,
   648                           ;main.c: 89: SENSE_PB2_INPUT_VOLTAGE__AGAIN,
   649                           ;main.c: 90: SENSE_PB2_DURATION__SECOND,
   650                           ;main.c: 91: SET_PA2_VALUE,
   651                           ;main.c: 92: PROCESS_AD_VALUE,
   652                           ;main.c: 93: WAIT_SET_TIME_FINISHED,
   653                           ;main.c: 94: SET_TIME_BE_FINISHED,
   654                           ;main.c: 95: CHECKING_PULL_OUT_BATTERY,
   655                           ;main.c: 96: CHECKING_INSTALLED_BATTERY,
   656                           ;main.c: 97: };
   657                           ;main.c: 99: enum workTimerType
   658                           ;main.c: 100: {
   659                           ;main.c: 101: BIG_TIMER_WORK = 0,
   660                           
   661                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   662  000D  1683               	bsf	3,5	;RP0=1, select bank1
   663  000E  1005               	bcf	5,0
   664                           
   665                           ;main.c: 110: TRISA1 = 0;
   666  000F  1085               	bcf	5,1
   667                           
   668                           ;main.c: 111: TRISA3 = 0;
   669  0010  1185               	bcf	5,3
   670                           
   671                           ;main.c: 112: TRISA2 = 0;
   672  0011  1105               	bcf	5,2
   673                           
   674                           ;main.c: 113: PA2 = 1;
   675  0012  1283               	bcf	3,5	;RP0=0, select bank0
   676  0013  1505               	bsf	5,2
   677                           
   678                           ;main.c: 114: PA0 = 1;
   679  0014  1405               	bsf	5,0
   680                           
   681                           ;main.c: 116: TRISB2 = 1;
   682  0015  1683               	bsf	3,5	;RP0=1, select bank1
   683  0016  1506               	bsf	6,2
   684                           
   685                           ;main.c: 118: TRISB1 = 1;
   686  0017  1486               	bsf	6,1
   687                           
   688                           ;main.c: 119: TRISB0 = 1;
   689  0018  1406               	bsf	6,0
   690                           
   691                           ;main.c: 121: clock_config();
   692  0019  118A  2224  118A   	fcall	_clock_config
   693                           
   694                           ;main.c: 122: timer1_config();
   695  001C  118A  2209  118A   	fcall	_timer1_config
   696                           
   697                           ;main.c: 123: timer1_interrupt_config();
   698  001F  118A  225A  118A   	fcall	_timer1_interrupt_config
   699                           
   700                           ;main.c: 125: adc_test_init(13,3);
   701  0022  3003               	movlw	3
   702  0023  1283               	bcf	3,5	;RP0=0, select bank0
   703  0024  00BF               	movwf	?_adc_test_init
   704  0025  300D               	movlw	13
   705  0026  118A  21D9  118A   	fcall	_adc_test_init
   706                           
   707                           ;main.c: 127: dac_init();
   708  0029  118A  224B  118A   	fcall	_dac_init
   709                           
   710                           ;main.c: 128: op1_init();
   711  002C  118A  21FD  118A   	fcall	_op1_init
   712                           
   713                           ;main.c: 129: op2_init();
   714  002F  118A  2213  118A   	fcall	_op2_init
   715                           
   716                           ;main.c: 132: adc_start();
   717  0032  118A  210C  118A   	fcall	_adc_start
   718                           
   719                           ;main.c: 145: switch(ampStep)
   720  0035  28DF               	goto	l3094
   721  0036                     l3102:	
   722                           
   723                           ;main.c: 148: {
   724                           ;main.c: 149: ucBigTimerActionFlag = 0;
   725  0036  01B9               	clrf	main@ucBigTimerActionFlag
   726                           
   727                           ;main.c: 150: clearBigTimer();
   728  0037  118A  2257  118A   	fcall	_clearBigTimer
   729                           
   730                           ;main.c: 151: clearSmallTimer();
   731  003A  118A  2254  118A   	fcall	_clearSmallTimer
   732  003D                     L1:	
   733                           
   734                           ;main.c: 152: if(!PB2)
   735  003D  1906               	btfsc	6,2
   736  003E  28DF               	goto	l3094
   737  003F                     l3110:	
   738                           
   739                           ;main.c: 153: ampStep++;
   740  003F  1283               	bcf	3,5	;RP0=0, select bank0
   741  0040  0AB7               	incf	main@ampStep,f
   742  0041  28DF               	goto	l3094
   743  0042                     l677:	
   744                           ;main.c: 155: }
   745                           ;main.c: 157: case SENSE_PB2_DURATION_ONE_SECOND:
   746                           
   747                           
   748                           ;main.c: 158: {
   749                           ;main.c: 159: static unsigned char ucConfirmTimer1S = 0;
   750                           ;main.c: 160: if(!PB2)
   751  0042  1906               	btfsc	6,2
   752  0043  2846               	goto	l3114
   753                           
   754                           ;main.c: 161: {
   755                           ;main.c: 162: ucConfirmTimer1S++;
   756  0044  0ABB               	incf	main@ucConfirmTimer1S,f
   757                           
   758                           ;main.c: 163: }
   759  0045  2847               	goto	l3116
   760  0046                     l3114:	
   761                           
   762                           ;main.c: 164: else
   763                           ;main.c: 165: {
   764                           ;main.c: 166: ucConfirmTimer1S = 0;
   765  0046  01BB               	clrf	main@ucConfirmTimer1S
   766  0047                     l3116:	
   767                           
   768                           ;main.c: 167: }
   769                           ;main.c: 169: if(ucConfirmTimer1S >= 10)
   770  0047  300A               	movlw	10
   771  0048  023B               	subwf	main@ucConfirmTimer1S,w
   772  0049  1C03               	skipc
   773  004A  28DF               	goto	l3094
   774                           
   775                           ;main.c: 170: {
   776                           ;main.c: 171: ucConfirmTimer1S = 0;
   777  004B  01BB               	clrf	main@ucConfirmTimer1S
   778  004C  283F               	goto	l3110
   779  004D                     l683:	
   780                           ;main.c: 176: }
   781                           ;main.c: 178: case SENSE_PB2_INPUT_VOLTAGE__AGAIN:
   782                           
   783                           
   784                           ;main.c: 179: {
   785                           ;main.c: 180: if(!PB2)
   786  004D  283D               	goto	L1
   787  004E                     l685:	
   788                           ;main.c: 183: }
   789                           ;main.c: 185: case SENSE_PB2_DURATION__SECOND:
   790                           
   791                           
   792                           ;main.c: 186: {
   793                           ;main.c: 187: static unsigned char ucConfirmTimerZptS = 0;
   794                           ;main.c: 188: if(!PB2)
   795  004E  1906               	btfsc	6,2
   796  004F  2852               	goto	l3126
   797                           
   798                           ;main.c: 189: {
   799                           ;main.c: 190: ucConfirmTimerZptS++;
   800  0050  0ABC               	incf	main@ucConfirmTimerZptS,f
   801                           
   802                           ;main.c: 191: }
   803  0051  2853               	goto	l3128
   804  0052                     l3126:	
   805                           
   806                           ;main.c: 192: else
   807                           ;main.c: 193: {
   808                           ;main.c: 194: ucConfirmTimerZptS = 0;
   809  0052  01BC               	clrf	main@ucConfirmTimerZptS
   810  0053                     l3128:	
   811                           
   812                           ;main.c: 195: }
   813                           ;main.c: 197: if(ucConfirmTimerZptS >= 3)
   814  0053  3003               	movlw	3
   815  0054  023C               	subwf	main@ucConfirmTimerZptS,w
   816  0055  1C03               	skipc
   817  0056  28DF               	goto	l3094
   818                           
   819                           ;main.c: 198: {
   820                           ;main.c: 199: ucConfirmTimerZptS = 0;
   821  0057  01BC               	clrf	main@ucConfirmTimerZptS
   822  0058  283F               	goto	l3110
   823  0059                     l691:	
   824                           ;main.c: 204: }
   825                           ;main.c: 206: case SET_PA2_VALUE:
   826                           
   827                           
   828                           ;main.c: 207: {
   829                           ;main.c: 208: PA2 = 0;
   830  0059  1105               	bcf	5,2
   831  005A  283F               	goto	l3110
   832  005B                     l3136:	
   833                           
   834                           ;main.c: 214: {
   835                           ;main.c: 215: static unsigned char ucInit = 0;
   836                           ;main.c: 216: if(getAdOriginalCh13Value() > 40)
   837  005B  118A  2241  118A   	fcall	_getAdOriginalCh13Value
   838  005E  3000               	movlw	0
   839  005F  0240               	subwf	?_getAdOriginalCh13Value+1,w
   840  0060  3029               	movlw	41
   841  0061  1903               	skipnz
   842  0062  023F               	subwf	?_getAdOriginalCh13Value,w
   843  0063  1C03               	skipc
   844  0064  2879               	goto	l3150
   845  0065                     L3:	
   846  0065  301B               	movlw	27
   847                           
   848                           ;main.c: 217: {
   849                           ;main.c: 218: ucInit = 1;
   850  0066  01BD               	clrf	main@ucInit
   851  0067  0ABD               	incf	main@ucInit,f
   852                           
   853                           ;main.c: 219: PA0 = 0;
   854  0068  1005               	bcf	5,0
   855                           
   856                           ;main.c: 220: PA1 = 1;
   857  0069  1485               	bsf	5,1
   858                           
   859                           ;main.c: 221: PA3 = 1;
   860  006A  1585               	bsf	5,3
   861                           
   862                           ;main.c: 222: tDA_timer = BIG_TIMER_WORK;
   863  006B  01B8               	clrf	main@tDA_timer
   864                           
   865                           ;main.c: 223: setDAC0_ChannelValue(27);
   866  006C  118A  2250  118A   	fcall	_setDAC0_ChannelValue
   867                           
   868                           ;main.c: 224: if(!ucBigTimerActionFlag)
   869  006F  1283               	bcf	3,5	;RP0=0, select bank0
   870  0070  08B9               	movf	main@ucBigTimerActionFlag,f
   871  0071  1D03               	skipz
   872  0072  283F               	goto	l3110
   873                           
   874                           ;main.c: 225: {
   875                           ;main.c: 226: startBigTimer();
   876  0073  118A  223C  118A   	fcall	_startBigTimer
   877                           
   878                           ;main.c: 227: ucBigTimerActionFlag = 1;
   879  0076  01B9               	clrf	main@ucBigTimerActionFlag
   880  0077  0AB9               	incf	main@ucBigTimerActionFlag,f
   881  0078  283F               	goto	l3110
   882  0079                     l3150:	
   883                           
   884                           ;main.c: 230: else if(getAdOriginalCh13Value() <35)
   885  0079  118A  2241  118A   	fcall	_getAdOriginalCh13Value
   886  007C  3000               	movlw	0
   887  007D  0240               	subwf	?_getAdOriginalCh13Value+1,w
   888  007E  3023               	movlw	35
   889  007F  1903               	skipnz
   890  0080  023F               	subwf	?_getAdOriginalCh13Value,w
   891  0081  1803               	skipnc
   892  0082  2892               	goto	l3156
   893  0083  3019               	movlw	25
   894                           
   895                           ;main.c: 231: {
   896                           ;main.c: 232: ucInit = 1;
   897  0084  01BD               	clrf	main@ucInit
   898  0085  0ABD               	incf	main@ucInit,f
   899                           
   900                           ;main.c: 233: PA0 = 1;
   901  0086  1405               	bsf	5,0
   902                           
   903                           ;main.c: 234: PA1 = 0;
   904  0087  1085               	bcf	5,1
   905                           
   906                           ;main.c: 235: PA3 = 0;
   907  0088  1185               	bcf	5,3
   908                           
   909                           ;main.c: 236: tDA_timer = SMALL_TIMER_WORK;
   910  0089  01B8               	clrf	main@tDA_timer
   911  008A  0AB8               	incf	main@tDA_timer,f
   912                           
   913                           ;main.c: 237: setDAC0_ChannelValue(25);
   914  008B  118A  2250  118A   	fcall	_setDAC0_ChannelValue
   915                           
   916                           ;main.c: 238: startSmallTimer();
   917  008E  118A  222C  118A   	fcall	_startSmallTimer
   918                           
   919                           ;main.c: 239: }
   920  0091  283F               	goto	l3110
   921  0092                     l3156:	
   922                           
   923                           ;main.c: 240: else
   924                           ;main.c: 241: {
   925                           ;main.c: 242: if(!ucInit)
   926  0092  08BD               	movf	main@ucInit,f
   927  0093  1D03               	skipz
   928  0094  283F               	goto	l3110
   929  0095  2865               	goto	L3
   930  0096                     l3172:	
   931                           ;main.c: 250: if(!ucBigTimerActionFlag)
   932                           
   933                           ;main.c: 249: setDAC0_ChannelValue(27);
   934                           
   935                           ;main.c: 248: tDA_timer = BIG_TIMER_WORK;
   936                           
   937                           ;main.c: 247: PA3 = 1;
   938                           
   939                           ;main.c: 246: PA1 = 1;
   940                           
   941                           ;main.c: 245: PA0 = 0;
   942                           
   943                           ;main.c: 243: {
   944                           ;main.c: 244: ucInit = 1;
   945                           
   946                           
   947                           ;main.c: 267: {
   948                           ;main.c: 268: if(!isFinishedBigTimer())
   949  0096  118A  2237  118A   	fcall	_isFinishedBigTimer
   950  0099  3800               	iorlw	0
   951  009A  1D03               	skipz
   952  009B  283F               	goto	l3110
   953  009C                     l3174:	
   954                           
   955                           ;main.c: 269: {
   956                           ;main.c: 270: ampStep = PROCESS_AD_VALUE;
   957  009C  3005               	movlw	5
   958  009D  00B7               	movwf	main@ampStep
   959                           
   960                           ;main.c: 271: }
   961  009E  28DF               	goto	l3094
   962  009F                     l3178:	
   963                           
   964                           ;main.c: 280: {
   965                           ;main.c: 281: if((ucBigTimerActionFlag == 1) && isFinishedBigTimer())
   966  009F  0B39               	decfsz	main@ucBigTimerActionFlag,w
   967  00A0  28A7               	goto	l3184
   968  00A1  118A  2237  118A   	fcall	_isFinishedBigTimer
   969  00A4  3A00               	xorlw	0
   970  00A5  1D03               	btfss	3,2
   971  00A6  283F               	goto	l3110
   972  00A7                     l3184:	
   973                           
   974                           ;main.c: 285: else if(!isFinishedSmallTimer())
   975  00A7  118A  2232  118A   	fcall	_isFinishedSmallTimer
   976  00AA  3800               	iorlw	0
   977  00AB  1D03               	skipz
   978  00AC  283F               	goto	l3110
   979                           
   980                           ;main.c: 286: {
   981                           ;main.c: 287: if(getAdOriginalCh13Value() > 40)
   982  00AD  118A  2241  118A   	fcall	_getAdOriginalCh13Value
   983  00B0  3000               	movlw	0
   984  00B1  0240               	subwf	?_getAdOriginalCh13Value+1,w
   985  00B2  3029               	movlw	41
   986  00B3  1903               	skipnz
   987  00B4  023F               	subwf	?_getAdOriginalCh13Value,w
   988  00B5  1803               	btfsc	3,0
   989  00B6  289C               	goto	l3174
   990  00B7  28DF               	goto	l3094
   991  00B8                     l3194:	
   992  00B8  0838               	movf	main@tDA_timer,w
   993                           
   994                           ; Switch size 1, requested type "space"
   995                           ; Number of cases is 2, Range of values is 0 to 1
   996                           ; switch strategies available:
   997                           ; Name         Instructions Cycles
   998                           ; simple_byte            7     4 (average)
   999                           ; direct_byte           11     7 (fixed)
  1000                           ; jumptable            260     6 (fixed)
  1001                           ; rangetable             6     6 (fixed)
  1002                           ; spacedrange           10     9 (fixed)
  1003                           ; locatedrange           2     3 (fixed)
  1004                           ;	Chosen strategy is simple_byte
  1005  00B9  3A00               	xorlw	0	; case 0
  1006  00BA  1903               	skipnz
  1007  00BB  2896               	goto	l3172
  1008  00BC  3A01               	xorlw	1	; case 1
  1009  00BD  1903               	skipnz
  1010  00BE  289F               	goto	l3178
  1011  00BF  28FA               	goto	l672
  1012  00C0                     l715:	
  1013                           ;main.c: 302: }
  1014                           ;main.c: 304: case SET_TIME_BE_FINISHED:
  1015                           
  1016  00C0  3019               	movlw	25
  1017                           
  1018                           ;main.c: 305: {
  1019                           ;main.c: 306: PA2 = 1;
  1020  00C1  1505               	bsf	5,2
  1021                           
  1022                           ;main.c: 307: PA0 = 0;
  1023  00C2  1005               	bcf	5,0
  1024                           
  1025                           ;main.c: 308: PA1 = 0;
  1026  00C3  1085               	bcf	5,1
  1027                           
  1028                           ;main.c: 309: PA3 = 0;
  1029  00C4  1185               	bcf	5,3
  1030                           
  1031                           ;main.c: 310: setDAC0_ChannelValue(25);
  1032  00C5  118A  2250  118A   	fcall	_setDAC0_ChannelValue
  1033  00C8  283F               	goto	l3110
  1034  00C9                     l716:	
  1035                           ;main.c: 313: }
  1036                           ;main.c: 315: case CHECKING_PULL_OUT_BATTERY:
  1037                           
  1038                           
  1039                           ;main.c: 316: {
  1040                           ;main.c: 317: static unsigned char ucCheckBatteryCnt = 0;
  1041                           ;main.c: 318: if(PB2)
  1042  00C9  1D06               	btfss	6,2
  1043  00CA  28CD               	goto	l3202
  1044                           
  1045                           ;main.c: 319: ucCheckBatteryCnt++;
  1046  00CB  0ABA               	incf	main@ucCheckBatteryCnt,f
  1047  00CC  28CE               	goto	l3204
  1048  00CD                     l3202:	
  1049                           
  1050                           ;main.c: 320: else
  1051                           ;main.c: 321: ucCheckBatteryCnt = 0;
  1052  00CD  01BA               	clrf	main@ucCheckBatteryCnt
  1053  00CE                     l3204:	
  1054                           
  1055                           ;main.c: 323: if(ucCheckBatteryCnt > 2)
  1056  00CE  3003               	movlw	3
  1057  00CF  023A               	subwf	main@ucCheckBatteryCnt,w
  1058  00D0  1C03               	skipc
  1059  00D1  28DF               	goto	l3094
  1060                           
  1061                           ;main.c: 324: {
  1062                           ;main.c: 325: ucCheckBatteryCnt = 0;
  1063  00D2  01BA               	clrf	main@ucCheckBatteryCnt
  1064  00D3  283F               	goto	l3110
  1065  00D4                     l722:	
  1066                           ;main.c: 329: }
  1067                           ;main.c: 331: case CHECKING_INSTALLED_BATTERY:
  1068                           
  1069                           
  1070                           ;main.c: 332: {
  1071                           ;main.c: 333: static unsigned char ucInstalledBatteryCnt = 0;
  1072                           ;main.c: 334: if(!PB2)
  1073  00D4  1906               	btfsc	6,2
  1074  00D5  28D8               	goto	l3212
  1075                           
  1076                           ;main.c: 335: ucInstalledBatteryCnt++;
  1077  00D6  0ABE               	incf	main@ucInstalledBatteryCnt,f
  1078  00D7  28D9               	goto	l3214
  1079  00D8                     l3212:	
  1080                           
  1081                           ;main.c: 336: else
  1082                           ;main.c: 337: ucInstalledBatteryCnt = 0;
  1083  00D8  01BE               	clrf	main@ucInstalledBatteryCnt
  1084  00D9                     l3214:	
  1085                           
  1086                           ;main.c: 339: if(ucInstalledBatteryCnt > 10)
  1087  00D9  300B               	movlw	11
  1088  00DA  023E               	subwf	main@ucInstalledBatteryCnt,w
  1089  00DB  1C03               	skipc
  1090  00DC  28DF               	goto	l3094
  1091                           
  1092                           ;main.c: 340: {
  1093                           ;main.c: 341: ucInstalledBatteryCnt = 0;
  1094  00DD  01BE               	clrf	main@ucInstalledBatteryCnt
  1095                           
  1096                           ;main.c: 342: ampStep = SENSE_PB2_INPUT_VOLTAGE;
  1097  00DE  01B7               	clrf	main@ampStep
  1098  00DF                     l3094:	
  1099  00DF  0064               	clrwdt	;#
  1100                           
  1101                           ;main.c: 140: if(isPermitSampleTime())
  1102  00E0  118A  2246  118A   	fcall	_isPermitSampleTime
  1103  00E3  3A00               	xorlw	0
  1104  00E4  1903               	skipnz
  1105  00E5  28DF               	goto	l3094
  1106                           
  1107                           ;main.c: 141: {
  1108                           ;main.c: 142: clrSampeTime();
  1109  00E6  118A  225D  118A   	fcall	_clrSampeTime
  1110                           
  1111                           ;main.c: 143: process_AD_Converter_Value();
  1112  00E9  118A  20FB  118A   	fcall	_process_AD_Converter_Value
  1113  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  1114  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  1115  00EE  0837               	movf	main@ampStep,w
  1116                           
  1117                           ; Switch size 1, requested type "space"
  1118                           ; Number of cases is 10, Range of values is 0 to 9
  1119                           ; switch strategies available:
  1120                           ; Name         Instructions Cycles
  1121                           ; direct_byte           27     7 (fixed)
  1122                           ; simple_byte           31    16 (average)
  1123                           ; jumptable            260     6 (fixed)
  1124                           ; rangetable            14     6 (fixed)
  1125                           ; spacedrange           26     9 (fixed)
  1126                           ; locatedrange          10     3 (fixed)
  1127                           ;	Chosen strategy is direct_byte
  1128  00EF  0084               	movwf	4
  1129  00F0  300A               	movlw	10
  1130  00F1  0204               	subwf	4,w
  1131  00F2  1803               	skipnc
  1132  00F3  28DF               	goto	l3094
  1133  00F4  3001               	movlw	high S3270
  1134  00F5  008A               	movwf	10
  1135  00F6  1003               	clrc
  1136  00F7  0D04               	rlf	4,w
  1137  00F8  3EC5               	addlw	low S3270
  1138  00F9  0082               	movwf	2
  1139  00FA                     l672:	
  1140  00FA  28DF               	goto	l3094
  1141  00FB                     __end_of_main:	
  1142                           
  1143                           	psect	swtext1
  1144  01C5                     __pswtext1:	
  1145  01C5                     S3270:	
  1146  01C5  118A  2836         	ljmp	l3102
  1147  01C7  118A  2842         	ljmp	l677
  1148  01C9  118A  284D         	ljmp	l683
  1149  01CB  118A  284E         	ljmp	l685
  1150  01CD  118A  2859         	ljmp	l691
  1151  01CF  118A  285B         	ljmp	l3136
  1152  01D1  118A  28B8         	ljmp	l3194
  1153  01D3  118A  28C0         	ljmp	l715
  1154  01D5  118A  28C9         	ljmp	l716
  1155  01D7  118A  28D4         	ljmp	l722
  1156                           
  1157                           	psect	text493
  1158  00FB                     __ptext493:	
  1159 ;; =============== function _main ends ============
  1160                           
  1161                           
  1162 ;; *************** function _process_AD_Converter_Value *****************
  1163 ;; Defined at:
  1164 ;;		line 94 in file "C:\sw_dev\AK7030-OTP\common.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;		None
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;		None
  1169 ;; Return value:  Size  Location     Type
  1170 ;;		None               void
  1171 ;; Registers used:
  1172 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1173 ;; Tracked objects:
  1174 ;;		On entry : 0/0
  1175 ;;		On exit  : 0/0
  1176 ;;		Unchanged: FFE9F/0
  1177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1178 ;;      Params:         0       0       0       0       0
  1179 ;;      Locals:         0       0       0       0       0
  1180 ;;      Temps:          0       0       0       0       0
  1181 ;;      Totals:         0       0       0       0       0
  1182 ;;Total ram usage:        0 bytes
  1183 ;; Hardware stack levels used:    1
  1184 ;; Hardware stack levels required when called:    4
  1185 ;; This function calls:
  1186 ;;		_getAD_ConvertFlag
  1187 ;;		_setAD_ConvertFlag
  1188 ;;		_AD_Sample
  1189 ;;		_adc_start
  1190 ;; This function is called by:
  1191 ;;		_main
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194  00FB                     _process_AD_Converter_Value:	
  1195                           
  1196                           ;common.c: 65: return adc_convert_flag;
  1197                           
  1198                           ; Regs used in _getAD_ConvertFlag: [wreg]
  1199                           
  1200                           ;common.c: 95: if(getAD_ConvertFlag())
  1201                           
  1202                           ; Regs used in _process_AD_Converter_Value: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1203  00FB  0879               	movf	_adc_convert_flag,w
  1204  00FC  3A00               	xorlw	0
  1205  00FD  1903               	skipnz
  1206  00FE  0008               	return
  1207                           
  1208                           ;common.c: 96: {
  1209                           ;common.c: 97: setAD_ConvertFlag(0);
  1210  00FF  3000               	movlw	0
  1211  0100  2107  118A         	fcall	_setAD_ConvertFlag
  1212                           
  1213                           ;common.c: 98: AD_Sample();
  1214  0102  210F  118A         	fcall	_AD_Sample
  1215                           
  1216                           ;common.c: 100: adc_start();
  1217  0104  290C               	ljmp	l2928
  1218  0105                     __end_of_process_AD_Converter_Value:	
  1219  0105                     __ptext497:	
  1220 ;; =============== function _setAD_ConvertFlag ends ============
  1221                           
  1222                           
  1223 ;; *************** function _getAD_ConvertFlag *****************
  1224 ;; Defined at:
  1225 ;;		line 64 in file "C:\sw_dev\AK7030-OTP\common.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;		None
  1228 ;; Auto vars:     Size  Location     Type
  1229 ;;		None
  1230 ;; Return value:  Size  Location     Type
  1231 ;;                  1    wreg      unsigned char 
  1232 ;; Registers used:
  1233 ;;		wreg
  1234 ;; Tracked objects:
  1235 ;;		On entry : 0/0
  1236 ;;		On exit  : 0/0
  1237 ;;		Unchanged: FFFFF/0
  1238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1239 ;;      Params:         0       0       0       0       0
  1240 ;;      Locals:         0       0       0       0       0
  1241 ;;      Temps:          0       0       0       0       0
  1242 ;;      Totals:         0       0       0       0       0
  1243 ;;Total ram usage:        0 bytes
  1244 ;; Hardware stack levels used:    1
  1245 ;; Hardware stack levels required when called:    2
  1246 ;; This function calls:
  1247 ;;		Nothing
  1248 ;; This function is called by:
  1249 ;;		_process_AD_Converter_Value
  1250 ;; This function uses a non-reentrant model
  1251 ;;
  1252  0105                     _getAD_ConvertFlag:	
  1253                           
  1254                           ;common.c: 65: return adc_convert_flag;
  1255                           
  1256                           ; Regs used in _getAD_ConvertFlag: [wreg]
  1257  0105  0879               	movf	_adc_convert_flag,w
  1258  0106  0008               	return
  1259  0107                     __end_of_getAD_ConvertFlag:	
  1260  0107                     __ptext496:	
  1261 ;; =============== function _getAdOriginalValue ends ============
  1262                           
  1263                           
  1264 ;; *************** function _setAD_ConvertFlag *****************
  1265 ;; Defined at:
  1266 ;;		line 70 in file "C:\sw_dev\AK7030-OTP\common.c"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;  flag            1    wreg     unsigned char 
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;  flag            1    0[BANK0 ] unsigned char 
  1271 ;; Return value:  Size  Location     Type
  1272 ;;		None               void
  1273 ;; Registers used:
  1274 ;;		wreg
  1275 ;; Tracked objects:
  1276 ;;		On entry : 0/0
  1277 ;;		On exit  : 60/0
  1278 ;;		Unchanged: FFF9F/0
  1279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1280 ;;      Params:         0       0       0       0       0
  1281 ;;      Locals:         0       1       0       0       0
  1282 ;;      Temps:          0       0       0       0       0
  1283 ;;      Totals:         0       1       0       0       0
  1284 ;;Total ram usage:        1 bytes
  1285 ;; Hardware stack levels used:    1
  1286 ;; Hardware stack levels required when called:    2
  1287 ;; This function calls:
  1288 ;;		Nothing
  1289 ;; This function is called by:
  1290 ;;		_process_AD_Converter_Value
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293  0107                     _setAD_ConvertFlag:	
  1294                           
  1295                           ; Regs used in _setAD_ConvertFlag: [wreg]
  1296                           ;setAD_ConvertFlag@flag stored from wreg
  1297  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1298  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1299  0109  00BF               	movwf	setAD_ConvertFlag@flag
  1300                           
  1301                           ;common.c: 71: adc_convert_flag = flag;
  1302  010A  00F9               	movwf	_adc_convert_flag
  1303  010B  0008               	return
  1304  010C                     __end_of_setAD_ConvertFlag:	
  1305  010C                     __ptext508:	
  1306 ;; =============== function _isPermitSampleTime ends ============
  1307                           
  1308                           
  1309 ;; *************** function _adc_start *****************
  1310 ;; Defined at:
  1311 ;;		line 99 in file "C:\sw_dev\AK7030-OTP\periph.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;		None
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;		None
  1316 ;; Return value:  Size  Location     Type
  1317 ;;		None               void
  1318 ;; Registers used:
  1319 ;;		None
  1320 ;; Tracked objects:
  1321 ;;		On entry : 40/20
  1322 ;;		On exit  : 60/0
  1323 ;;		Unchanged: FFF9F/0
  1324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1325 ;;      Params:         0       0       0       0       0
  1326 ;;      Locals:         0       0       0       0       0
  1327 ;;      Temps:          0       0       0       0       0
  1328 ;;      Totals:         0       0       0       0       0
  1329 ;;Total ram usage:        0 bytes
  1330 ;; Hardware stack levels used:    1
  1331 ;; Hardware stack levels required when called:    2
  1332 ;; This function calls:
  1333 ;;		Nothing
  1334 ;; This function is called by:
  1335 ;;		_main
  1336 ;;		_process_AD_Converter_Value
  1337 ;; This function uses a non-reentrant model
  1338 ;;
  1339  010C                     _adc_start:	
  1340  010C                     l2928:	
  1341                           ; Regs used in _adc_start: []
  1342                           
  1343                           
  1344                           ;periph.c: 100: GO=1;
  1345  010C  1283               	bcf	3,5	;RP0=0, select bank0
  1346  010D  149F               	bsf	31,1
  1347  010E  0008               	return
  1348  010F                     __end_of_adc_start:	
  1349  010F                     __ptext494:	
  1350 ;; =============== function _process_AD_Converter_Value ends ============
  1351                           
  1352                           
  1353 ;; *************** function _AD_Sample *****************
  1354 ;; Defined at:
  1355 ;;		line 114 in file "C:\sw_dev\AK7030-OTP\common.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;		None
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;  index           1    4[BANK0 ] unsigned char 
  1360 ;; Return value:  Size  Location     Type
  1361 ;;		None               void
  1362 ;; Registers used:
  1363 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1364 ;; Tracked objects:
  1365 ;;		On entry : 60/0
  1366 ;;		On exit  : 60/0
  1367 ;;		Unchanged: FFE9F/0
  1368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1369 ;;      Params:         0       0       0       0       0
  1370 ;;      Locals:         0       1       0       0       0
  1371 ;;      Temps:          0       2       0       0       0
  1372 ;;      Totals:         0       3       0       0       0
  1373 ;;Total ram usage:        3 bytes
  1374 ;; Hardware stack levels used:    1
  1375 ;; Hardware stack levels required when called:    3
  1376 ;; This function calls:
  1377 ;;		_getAdOriginalValue
  1378 ;; This function is called by:
  1379 ;;		_process_AD_Converter_Value
  1380 ;; This function uses a non-reentrant model
  1381 ;;
  1382  010F                     _AD_Sample:	
  1383                           
  1384                           ;common.c: 115: if(sampleTimes < 6)
  1385                           
  1386                           ; Regs used in _AD_Sample: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1387  010F  3006               	movlw	6
  1388  0110  0236               	subwf	_sampleTimes,w
  1389  0111  1803               	skipnc
  1390  0112  0008               	return
  1391                           
  1392                           ;common.c: 116: {
  1393                           ;common.c: 118: buffer_Sample_AD_Value[sampleTimes] = getAdOriginalValue();
  1394  0113  2167  118A         	fcall	_getAdOriginalValue
  1395  0115  1003               	clrc
  1396  0116  0D36               	rlf	_sampleTimes,w
  1397  0117  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  1398  0118  0084               	movwf	4
  1399  0119  083F               	movf	?_getAdOriginalValue,w
  1400  011A  1383               	bcf	3,7	;select IRP bank0
  1401  011B  0080               	movwf	0
  1402  011C  0A84               	incf	4,f
  1403  011D  0840               	movf	?_getAdOriginalValue+1,w
  1404  011E  0080               	movwf	0
  1405                           
  1406                           ;common.c: 120: if(sampleTimes == 0)
  1407  011F  08B6               	movf	_sampleTimes,f
  1408  0120  1D03               	skipz
  1409  0121  292A               	goto	l3036
  1410                           
  1411                           ;common.c: 121: {
  1412                           ;common.c: 122: multiFilterMaxValue = buffer_Sample_AD_Value[0];
  1413  0122  0821               	movf	_buffer_Sample_AD_Value+1,w
  1414  0123  00B1               	movwf	_multiFilterMaxValue+1
  1415  0124  0820               	movf	_buffer_Sample_AD_Value,w
  1416  0125  00B0               	movwf	_multiFilterMaxValue
  1417                           
  1418                           ;common.c: 123: multiFilterMinValue = buffer_Sample_AD_Value[0];
  1419  0126  0821               	movf	_buffer_Sample_AD_Value+1,w
  1420  0127  00B3               	movwf	_multiFilterMinValue+1
  1421  0128  0820               	movf	_buffer_Sample_AD_Value,w
  1422  0129  00B2               	movwf	_multiFilterMinValue
  1423  012A                     l3036:	
  1424                           
  1425                           ;common.c: 124: }
  1426                           ;common.c: 126: if(multiFilterMaxValue < buffer_Sample_AD_Value[sampleTimes])
  1427  012A  216C  118A         	fcall	PL2	;call to abstracted procedure
  1428  012C  0231               	subwf	_multiFilterMaxValue+1,w
  1429  012D  1D03               	skipz
  1430  012E  2931               	goto	u525
  1431  012F  0841               	movf	??_AD_Sample,w
  1432  0130  0230               	subwf	_multiFilterMaxValue,w
  1433  0131                     u525:	
  1434  0131  1803               	skipnc
  1435  0132  293C               	goto	l1425
  1436                           
  1437                           ;common.c: 127: {
  1438                           ;common.c: 128: multiFilterMaxValue = buffer_Sample_AD_Value[sampleTimes];
  1439  0133  1003               	clrc
  1440  0134  0D36               	rlf	_sampleTimes,w
  1441  0135  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  1442  0136  0084               	movwf	4
  1443  0137  0800               	movf	0,w
  1444  0138  00B0               	movwf	_multiFilterMaxValue
  1445  0139  0A84               	incf	4,f
  1446  013A  0800               	movf	0,w
  1447  013B  00B1               	movwf	_multiFilterMaxValue+1
  1448  013C                     l1425:	
  1449                           
  1450                           ;common.c: 129: }
  1451                           ;common.c: 130: if(multiFilterMinValue > buffer_Sample_AD_Value[sampleTimes])
  1452  013C  216C  118A         	fcall	PL2	;call to abstracted procedure
  1453  013E  0833               	movf	_multiFilterMinValue+1,w
  1454  013F  0242               	subwf	??_AD_Sample+1,w
  1455  0140  1D03               	skipz
  1456  0141  2944               	goto	u535
  1457  0142  0832               	movf	_multiFilterMinValue,w
  1458  0143  0241               	subwf	??_AD_Sample,w
  1459  0144                     u535:	
  1460  0144  1803               	skipnc
  1461  0145  294F               	goto	l3042
  1462                           
  1463                           ;common.c: 131: {
  1464                           ;common.c: 132: multiFilterMinValue = buffer_Sample_AD_Value[sampleTimes];
  1465  0146  1003               	clrc
  1466  0147  0D36               	rlf	_sampleTimes,w
  1467  0148  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  1468  0149  0084               	movwf	4
  1469  014A  0800               	movf	0,w
  1470  014B  00B2               	movwf	_multiFilterMinValue
  1471  014C  0A84               	incf	4,f
  1472  014D  0800               	movf	0,w
  1473  014E  00B3               	movwf	_multiFilterMinValue+1
  1474  014F                     l3042:	
  1475  014F  3006               	movlw	6
  1476                           
  1477                           ;common.c: 137: sampleTimes++;
  1478  0150  0AB6               	incf	_sampleTimes,f
  1479                           
  1480                           ;common.c: 139: if(sampleTimes >= 6)
  1481  0151  0236               	subwf	_sampleTimes,w
  1482  0152  1C03               	skipc
  1483  0153  0008               	return
  1484                           
  1485                           ;common.c: 140: {
  1486                           ;common.c: 141: sampleTimes = 0;
  1487  0154  01B6               	clrf	_sampleTimes
  1488                           
  1489                           ;common.c: 144: {
  1490                           ;common.c: 146: sampleCH13Value = ((multiFilterSumValue - multiFilterMaxValue - multiFil
      +                          terMinValue))>> 2;
  1491  0155  0844               	movf	_sampleChannelSelect,w
  1492  0156  3A0D               	xorlw	13
  1493                           
  1494                           ;common.c: 147: sampleChannelSelect = 13;
  1495  0157  300D               	movlw	13
  1496  0158  00C4               	movwf	_sampleChannelSelect
  1497                           
  1498                           ;common.c: 158: }
  1499                           ;common.c: 160: for(unsigned char index = 0; index < 6;index++)
  1500                           
  1501                           ;common.c: 148: }
  1502  0159  01C3               	clrf	AD_Sample@index
  1503  015A                     l3064:	
  1504                           
  1505                           ;common.c: 161: buffer_Sample_AD_Value[index] = 0;
  1506  015A  1003               	clrc
  1507  015B  0D43               	rlf	AD_Sample@index,w
  1508  015C  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  1509  015D  0084               	movwf	4
  1510  015E  3006               	movlw	6
  1511  015F  0180               	clrf	0
  1512  0160  0A84               	incf	4,f
  1513  0161  0180               	clrf	0
  1514  0162  0AC3               	incf	AD_Sample@index,f
  1515  0163  0243               	subwf	AD_Sample@index,w
  1516  0164  1803               	btfsc	3,0
  1517  0165  0008               	return
  1518  0166  295A               	goto	l3064
  1519  0167                     __end_of_AD_Sample:	
  1520  0167                     __ptext495:	
  1521 ;; =============== function _AD_Sample ends ============
  1522                           
  1523                           
  1524 ;; *************** function _getAdOriginalValue *****************
  1525 ;; Defined at:
  1526 ;;		line 76 in file "C:\sw_dev\AK7030-OTP\common.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;		None
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;		None
  1531 ;; Return value:  Size  Location     Type
  1532 ;;                  2    0[BANK0 ] unsigned int 
  1533 ;; Registers used:
  1534 ;;		wreg
  1535 ;; Tracked objects:
  1536 ;;		On entry : 60/0
  1537 ;;		On exit  : 60/0
  1538 ;;		Unchanged: FFF9F/0
  1539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1540 ;;      Params:         0       2       0       0       0
  1541 ;;      Locals:         0       0       0       0       0
  1542 ;;      Temps:          0       0       0       0       0
  1543 ;;      Totals:         0       2       0       0       0
  1544 ;;Total ram usage:        2 bytes
  1545 ;; Hardware stack levels used:    1
  1546 ;; Hardware stack levels required when called:    2
  1547 ;; This function calls:
  1548 ;;		Nothing
  1549 ;; This function is called by:
  1550 ;;		_AD_Sample
  1551 ;; This function uses a non-reentrant model
  1552 ;;
  1553  0167                     _getAdOriginalValue:	
  1554                           
  1555                           ;common.c: 77: return adc_original_value;
  1556                           
  1557                           ; Regs used in _getAdOriginalValue: [wreg]
  1558  0167  082F               	movf	_adc_original_value+1,w
  1559  0168  00C0               	movwf	?_getAdOriginalValue+1
  1560  0169  082E               	movf	_adc_original_value,w
  1561  016A  00BF               	movwf	?_getAdOriginalValue
  1562  016B  0008               	return
  1563  016C                     __end_of_getAdOriginalValue:	
  1564  016C                     PL2:	
  1565  016C  1003               	clrc
  1566  016D  0D36               	rlf	_sampleTimes,w
  1567  016E  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  1568  016F  0084               	movwf	4
  1569  0170  0800               	movf	0,w
  1570  0171  00C1               	movwf	??_AD_Sample
  1571  0172  0A84               	incf	4,f
  1572  0173  0800               	movf	0,w
  1573  0174  00C2               	movwf	??_AD_Sample+1
  1574  0175  0008               	return
  1575                           
  1576                           	psect	text498
  1577  0232                     __ptext498:	
  1578 ;; =============== function _getAD_ConvertFlag ends ============
  1579                           
  1580                           
  1581 ;; *************** function _isFinishedSmallTimer *****************
  1582 ;; Defined at:
  1583 ;;		line 226 in file "C:\sw_dev\AK7030-OTP\common.c"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;		None
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;		None
  1588 ;; Return value:  Size  Location     Type
  1589 ;;                  1    wreg      unsigned char 
  1590 ;; Registers used:
  1591 ;;		wreg, status,2, status,0
  1592 ;; Tracked objects:
  1593 ;;		On entry : 60/0
  1594 ;;		On exit  : 60/0
  1595 ;;		Unchanged: FFF9F/0
  1596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1597 ;;      Params:         0       0       0       0       0
  1598 ;;      Locals:         0       0       0       0       0
  1599 ;;      Temps:          0       0       0       0       0
  1600 ;;      Totals:         0       0       0       0       0
  1601 ;;Total ram usage:        0 bytes
  1602 ;; Hardware stack levels used:    1
  1603 ;; Hardware stack levels required when called:    2
  1604 ;; This function calls:
  1605 ;;		Nothing
  1606 ;; This function is called by:
  1607 ;;		_main
  1608 ;; This function uses a non-reentrant model
  1609 ;;
  1610  0232                     _isFinishedSmallTimer:	
  1611                           
  1612                           ;common.c: 227: if(uiSmallTimer == 0)
  1613                           
  1614                           ; Regs used in _isFinishedSmallTimer: [wreg+status,2+status,0]
  1615  0232  0835               	movf	_uiSmallTimer+1,w
  1616  0233  0434               	iorwf	_uiSmallTimer,w
  1617  0234  1903               	btfsc	3,2
  1618                           
  1619                           ;common.c: 228: return 1;
  1620  0235  3401               	retlw	1
  1621                           
  1622                           ;common.c: 229: else
  1623                           ;common.c: 230: return 0;
  1624  0236  3400               	retlw	0
  1625  0237                     __end_of_isFinishedSmallTimer:	
  1626                           
  1627                           	psect	text499
  1628  0237                     __ptext499:	
  1629 ;; =============== function _isFinishedSmallTimer ends ============
  1630                           
  1631                           
  1632 ;; *************** function _isFinishedBigTimer *****************
  1633 ;; Defined at:
  1634 ;;		line 218 in file "C:\sw_dev\AK7030-OTP\common.c"
  1635 ;; Parameters:    Size  Location     Type
  1636 ;;		None
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;		None
  1639 ;; Return value:  Size  Location     Type
  1640 ;;                  1    wreg      unsigned char 
  1641 ;; Registers used:
  1642 ;;		wreg, status,2, status,0
  1643 ;; Tracked objects:
  1644 ;;		On entry : 60/0
  1645 ;;		On exit  : 60/0
  1646 ;;		Unchanged: FFF9F/0
  1647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1648 ;;      Params:         0       0       0       0       0
  1649 ;;      Locals:         0       0       0       0       0
  1650 ;;      Temps:          0       0       0       0       0
  1651 ;;      Totals:         0       0       0       0       0
  1652 ;;Total ram usage:        0 bytes
  1653 ;; Hardware stack levels used:    1
  1654 ;; Hardware stack levels required when called:    2
  1655 ;; This function calls:
  1656 ;;		Nothing
  1657 ;; This function is called by:
  1658 ;;		_main
  1659 ;; This function uses a non-reentrant model
  1660 ;;
  1661  0237                     _isFinishedBigTimer:	
  1662                           
  1663                           ;common.c: 219: if(uiBigTimer == 0)
  1664                           
  1665                           ; Regs used in _isFinishedBigTimer: [wreg+status,2+status,0]
  1666  0237  0877               	movf	_uiBigTimer+1,w
  1667  0238  0476               	iorwf	_uiBigTimer,w
  1668  0239  1903               	btfsc	3,2
  1669                           
  1670                           ;common.c: 220: return 1;
  1671  023A  3401               	retlw	1
  1672                           
  1673                           ;common.c: 221: else
  1674                           ;common.c: 222: return 0;
  1675  023B  3400               	retlw	0
  1676  023C                     __end_of_isFinishedBigTimer:	
  1677                           
  1678                           	psect	text500
  1679  022C                     __ptext500:	
  1680 ;; =============== function _isFinishedBigTimer ends ============
  1681                           
  1682                           
  1683 ;; *************** function _startSmallTimer *****************
  1684 ;; Defined at:
  1685 ;;		line 208 in file "C:\sw_dev\AK7030-OTP\common.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;		None
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;		None
  1690 ;; Return value:  Size  Location     Type
  1691 ;;		None               void
  1692 ;; Registers used:
  1693 ;;		wreg
  1694 ;; Tracked objects:
  1695 ;;		On entry : 60/20
  1696 ;;		On exit  : 60/0
  1697 ;;		Unchanged: FFF9F/0
  1698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1699 ;;      Params:         0       0       0       0       0
  1700 ;;      Locals:         0       0       0       0       0
  1701 ;;      Temps:          0       0       0       0       0
  1702 ;;      Totals:         0       0       0       0       0
  1703 ;;Total ram usage:        0 bytes
  1704 ;; Hardware stack levels used:    1
  1705 ;; Hardware stack levels required when called:    2
  1706 ;; This function calls:
  1707 ;;		Nothing
  1708 ;; This function is called by:
  1709 ;;		_main
  1710 ;; This function uses a non-reentrant model
  1711 ;;
  1712  022C                     _startSmallTimer:	
  1713                           
  1714                           ;common.c: 209: uiSmallTimer = 10800;
  1715                           
  1716                           ; Regs used in _startSmallTimer: [wreg]
  1717  022C  3030               	movlw	48
  1718  022D  1283               	bcf	3,5	;RP0=0, select bank0
  1719  022E  00B4               	movwf	_uiSmallTimer
  1720  022F  302A               	movlw	42
  1721  0230  00B5               	movwf	_uiSmallTimer+1
  1722  0231  0008               	return
  1723  0232                     __end_of_startSmallTimer:	
  1724                           
  1725                           	psect	text501
  1726  023C                     __ptext501:	
  1727 ;; =============== function _startSmallTimer ends ============
  1728                           
  1729                           
  1730 ;; *************** function _startBigTimer *****************
  1731 ;; Defined at:
  1732 ;;		line 186 in file "C:\sw_dev\AK7030-OTP\common.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;		None
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;		None
  1737 ;; Return value:  Size  Location     Type
  1738 ;;		None               void
  1739 ;; Registers used:
  1740 ;;		wreg
  1741 ;; Tracked objects:
  1742 ;;		On entry : 60/0
  1743 ;;		On exit  : 60/0
  1744 ;;		Unchanged: FFF9F/0
  1745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1746 ;;      Params:         0       0       0       0       0
  1747 ;;      Locals:         0       0       0       0       0
  1748 ;;      Temps:          0       0       0       0       0
  1749 ;;      Totals:         0       0       0       0       0
  1750 ;;Total ram usage:        0 bytes
  1751 ;; Hardware stack levels used:    1
  1752 ;; Hardware stack levels required when called:    2
  1753 ;; This function calls:
  1754 ;;		Nothing
  1755 ;; This function is called by:
  1756 ;;		_main
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759  023C                     _startBigTimer:	
  1760                           
  1761                           ;common.c: 187: uiBigTimer = 34200;
  1762                           
  1763                           ; Regs used in _startBigTimer: [wreg]
  1764  023C  3098               	movlw	152
  1765  023D  00F6               	movwf	_uiBigTimer
  1766  023E  3085               	movlw	133
  1767  023F  00F7               	movwf	_uiBigTimer+1
  1768  0240  0008               	return
  1769  0241                     __end_of_startBigTimer:	
  1770                           
  1771                           	psect	text502
  1772  0250                     __ptext502:	
  1773 ;; =============== function _startBigTimer ends ============
  1774                           
  1775                           
  1776 ;; *************** function _setDAC0_ChannelValue *****************
  1777 ;; Defined at:
  1778 ;;		line 181 in file "C:\sw_dev\AK7030-OTP\common.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;  ucValue         1    wreg     unsigned char 
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;  ucValue         1    0[BANK0 ] unsigned char 
  1783 ;; Return value:  Size  Location     Type
  1784 ;;		None               void
  1785 ;; Registers used:
  1786 ;;		wreg
  1787 ;; Tracked objects:
  1788 ;;		On entry : 60/0
  1789 ;;		On exit  : 60/20
  1790 ;;		Unchanged: FFF9F/0
  1791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1792 ;;      Params:         0       0       0       0       0
  1793 ;;      Locals:         0       1       0       0       0
  1794 ;;      Temps:          0       0       0       0       0
  1795 ;;      Totals:         0       1       0       0       0
  1796 ;;Total ram usage:        1 bytes
  1797 ;; Hardware stack levels used:    1
  1798 ;; Hardware stack levels required when called:    2
  1799 ;; This function calls:
  1800 ;;		Nothing
  1801 ;; This function is called by:
  1802 ;;		_main
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805  0250                     _setDAC0_ChannelValue:	
  1806                           
  1807                           ; Regs used in _setDAC0_ChannelValue: [wreg]
  1808                           ;setDAC0_ChannelValue@ucValue stored from wreg
  1809  0250  00BF               	movwf	setDAC0_ChannelValue@ucValue
  1810                           
  1811                           ;common.c: 182: DACR0=ucValue;
  1812  0251  1683               	bsf	3,5	;RP0=1, select bank1
  1813  0252  0088               	movwf	8	;volatile
  1814  0253  0008               	return
  1815  0254                     __end_of_setDAC0_ChannelValue:	
  1816                           
  1817                           	psect	text503
  1818  0241                     __ptext503:	
  1819 ;; =============== function _setDAC0_ChannelValue ends ============
  1820                           
  1821                           
  1822 ;; *************** function _getAdOriginalCh13Value *****************
  1823 ;; Defined at:
  1824 ;;		line 87 in file "C:\sw_dev\AK7030-OTP\common.c"
  1825 ;; Parameters:    Size  Location     Type
  1826 ;;		None
  1827 ;; Auto vars:     Size  Location     Type
  1828 ;;		None
  1829 ;; Return value:  Size  Location     Type
  1830 ;;                  2    0[BANK0 ] unsigned int 
  1831 ;; Registers used:
  1832 ;;		wreg
  1833 ;; Tracked objects:
  1834 ;;		On entry : 60/0
  1835 ;;		On exit  : 60/0
  1836 ;;		Unchanged: FFF9F/0
  1837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1838 ;;      Params:         0       2       0       0       0
  1839 ;;      Locals:         0       0       0       0       0
  1840 ;;      Temps:          0       0       0       0       0
  1841 ;;      Totals:         0       2       0       0       0
  1842 ;;Total ram usage:        2 bytes
  1843 ;; Hardware stack levels used:    1
  1844 ;; Hardware stack levels required when called:    2
  1845 ;; This function calls:
  1846 ;;		Nothing
  1847 ;; This function is called by:
  1848 ;;		_main
  1849 ;; This function uses a non-reentrant model
  1850 ;;
  1851  0241                     _getAdOriginalCh13Value:	
  1852                           
  1853                           ;common.c: 88: return adc_original_CH13_value;
  1854                           
  1855                           ; Regs used in _getAdOriginalCh13Value: [wreg]
  1856  0241  082D               	movf	_adc_original_CH13_value+1,w
  1857  0242  00C0               	movwf	?_getAdOriginalCh13Value+1
  1858  0243  082C               	movf	_adc_original_CH13_value,w
  1859  0244  00BF               	movwf	?_getAdOriginalCh13Value
  1860  0245  0008               	return
  1861  0246                     __end_of_getAdOriginalCh13Value:	
  1862                           
  1863                           	psect	text504
  1864  0254                     __ptext504:	
  1865 ;; =============== function _getAdOriginalCh13Value ends ============
  1866                           
  1867                           
  1868 ;; *************** function _clearSmallTimer *****************
  1869 ;; Defined at:
  1870 ;;		line 202 in file "C:\sw_dev\AK7030-OTP\common.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;		None
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;		None
  1875 ;; Return value:  Size  Location     Type
  1876 ;;		None               void
  1877 ;; Registers used:
  1878 ;;		status,2
  1879 ;; Tracked objects:
  1880 ;;		On entry : 60/0
  1881 ;;		On exit  : 60/0
  1882 ;;		Unchanged: FFF9F/0
  1883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1884 ;;      Params:         0       0       0       0       0
  1885 ;;      Locals:         0       0       0       0       0
  1886 ;;      Temps:          0       0       0       0       0
  1887 ;;      Totals:         0       0       0       0       0
  1888 ;;Total ram usage:        0 bytes
  1889 ;; Hardware stack levels used:    1
  1890 ;; Hardware stack levels required when called:    2
  1891 ;; This function calls:
  1892 ;;		Nothing
  1893 ;; This function is called by:
  1894 ;;		_main
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897  0254                     _clearSmallTimer:	
  1898                           
  1899                           ;common.c: 203: uiSmallTimer = 0;
  1900                           
  1901                           ; Regs used in _clearSmallTimer: [status,2]
  1902  0254  01B4               	clrf	_uiSmallTimer
  1903  0255  01B5               	clrf	_uiSmallTimer+1
  1904  0256  0008               	return
  1905  0257                     __end_of_clearSmallTimer:	
  1906                           
  1907                           	psect	text505
  1908  0257                     __ptext505:	
  1909 ;; =============== function _clearSmallTimer ends ============
  1910                           
  1911                           
  1912 ;; *************** function _clearBigTimer *****************
  1913 ;; Defined at:
  1914 ;;		line 196 in file "C:\sw_dev\AK7030-OTP\common.c"
  1915 ;; Parameters:    Size  Location     Type
  1916 ;;		None
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;		None
  1919 ;; Return value:  Size  Location     Type
  1920 ;;		None               void
  1921 ;; Registers used:
  1922 ;;		status,2
  1923 ;; Tracked objects:
  1924 ;;		On entry : 60/0
  1925 ;;		On exit  : 60/0
  1926 ;;		Unchanged: FFF9F/0
  1927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1928 ;;      Params:         0       0       0       0       0
  1929 ;;      Locals:         0       0       0       0       0
  1930 ;;      Temps:          0       0       0       0       0
  1931 ;;      Totals:         0       0       0       0       0
  1932 ;;Total ram usage:        0 bytes
  1933 ;; Hardware stack levels used:    1
  1934 ;; Hardware stack levels required when called:    2
  1935 ;; This function calls:
  1936 ;;		Nothing
  1937 ;; This function is called by:
  1938 ;;		_main
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941  0257                     _clearBigTimer:	
  1942                           
  1943                           ;common.c: 197: uiBigTimer = 0;
  1944                           
  1945                           ; Regs used in _clearBigTimer: [status,2]
  1946  0257  01F6               	clrf	_uiBigTimer
  1947  0258  01F7               	clrf	_uiBigTimer+1
  1948  0259  0008               	return
  1949  025A                     __end_of_clearBigTimer:	
  1950                           
  1951                           	psect	text506
  1952  025D                     __ptext506:	
  1953 ;; =============== function _clearBigTimer ends ============
  1954                           
  1955                           
  1956 ;; *************** function _clrSampeTime *****************
  1957 ;; Defined at:
  1958 ;;		line 244 in file "C:\sw_dev\AK7030-OTP\common.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;		None
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;		None
  1963 ;; Return value:  Size  Location     Type
  1964 ;;		None               void
  1965 ;; Registers used:
  1966 ;;		status,2
  1967 ;; Tracked objects:
  1968 ;;		On entry : 0/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: FFFFF/0
  1971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1972 ;;      Params:         0       0       0       0       0
  1973 ;;      Locals:         0       0       0       0       0
  1974 ;;      Temps:          0       0       0       0       0
  1975 ;;      Totals:         0       0       0       0       0
  1976 ;;Total ram usage:        0 bytes
  1977 ;; Hardware stack levels used:    1
  1978 ;; Hardware stack levels required when called:    2
  1979 ;; This function calls:
  1980 ;;		Nothing
  1981 ;; This function is called by:
  1982 ;;		_main
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985  025D                     _clrSampeTime:	
  1986                           
  1987                           ;common.c: 245: timer.timer10msStopWatch = 0;
  1988                           
  1989                           ; Regs used in _clrSampeTime: [status,2]
  1990  025D  01FA               	clrf	_timer
  1991  025E  0008               	return
  1992  025F                     __end_of_clrSampeTime:	
  1993                           
  1994                           	psect	text507
  1995  0246                     __ptext507:	
  1996 ;; =============== function _clrSampeTime ends ============
  1997                           
  1998                           
  1999 ;; *************** function _isPermitSampleTime *****************
  2000 ;; Defined at:
  2001 ;;		line 234 in file "C:\sw_dev\AK7030-OTP\common.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;		None
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;		None
  2006 ;; Return value:  Size  Location     Type
  2007 ;;                  1    wreg      unsigned char 
  2008 ;; Registers used:
  2009 ;;		wreg
  2010 ;; Tracked objects:
  2011 ;;		On entry : 0/0
  2012 ;;		On exit  : 0/0
  2013 ;;		Unchanged: FFFFF/0
  2014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2015 ;;      Params:         0       0       0       0       0
  2016 ;;      Locals:         0       0       0       0       0
  2017 ;;      Temps:          0       0       0       0       0
  2018 ;;      Totals:         0       0       0       0       0
  2019 ;;Total ram usage:        0 bytes
  2020 ;; Hardware stack levels used:    1
  2021 ;; Hardware stack levels required when called:    2
  2022 ;; This function calls:
  2023 ;;		Nothing
  2024 ;; This function is called by:
  2025 ;;		_main
  2026 ;; This function uses a non-reentrant model
  2027 ;;
  2028  0246                     _isPermitSampleTime:	
  2029                           
  2030                           ;common.c: 235: if(timer.timer10msStopWatch > 10)
  2031                           
  2032                           ; Regs used in _isPermitSampleTime: [wreg]
  2033  0246  300B               	movlw	11
  2034  0247  027A               	subwf	_timer,w
  2035  0248  1803               	btfsc	3,0
  2036                           
  2037                           ;common.c: 236: {
  2038                           ;common.c: 237: return 1;
  2039  0249  3401               	retlw	1
  2040                           
  2041                           ;common.c: 239: else
  2042                           ;common.c: 240: return 0;
  2043  024A  3400               	retlw	0
  2044  024B                     __end_of_isPermitSampleTime:	
  2045                           
  2046                           	psect	text509
  2047  0213                     __ptext509:	
  2048 ;; =============== function _adc_start ends ============
  2049                           
  2050                           
  2051 ;; *************** function _op2_init *****************
  2052 ;; Defined at:
  2053 ;;		line 45 in file "C:\sw_dev\AK7030-OTP\periph.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;		None
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;		None
  2058 ;; Return value:  Size  Location     Type
  2059 ;;		None               void
  2060 ;; Registers used:
  2061 ;;		wreg, status,2
  2062 ;; Tracked objects:
  2063 ;;		On entry : 17F/20
  2064 ;;		On exit  : 17F/20
  2065 ;;		Unchanged: FFE80/0
  2066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2067 ;;      Params:         0       0       0       0       0
  2068 ;;      Locals:         0       0       0       0       0
  2069 ;;      Temps:          0       0       0       0       0
  2070 ;;      Totals:         0       0       0       0       0
  2071 ;;Total ram usage:        0 bytes
  2072 ;; Hardware stack levels used:    1
  2073 ;; Hardware stack levels required when called:    2
  2074 ;; This function calls:
  2075 ;;		Nothing
  2076 ;; This function is called by:
  2077 ;;		_main
  2078 ;; This function uses a non-reentrant model
  2079 ;;
  2080  0213                     _op2_init:	
  2081                           
  2082                           ;periph.c: 52: OP2CON1=0x00;
  2083                           
  2084                           ; Regs used in _op2_init: [wreg+status,2]
  2085  0213  019C               	clrf	28	;volatile
  2086                           
  2087                           ;periph.c: 54: OP2CON2=0xA0;
  2088  0214  30A0               	movlw	160
  2089  0215  009D               	movwf	29	;volatile
  2090                           
  2091                           ;periph.c: 55: OP2CON0=0x80;
  2092  0216  3080               	movlw	128
  2093  0217  009B               	movwf	27	;volatile
  2094                           
  2095                           ;periph.c: 58: TRISA7=0;
  2096  0218  1385               	bcf	5,7
  2097                           
  2098                           ;periph.c: 59: TRISB6=1;
  2099  0219  1706               	bsf	6,6
  2100                           
  2101                           ;periph.c: 60: TRISB7 = 1;
  2102  021A  1786               	bsf	6,7
  2103  021B  0008               	return
  2104  021C                     __end_of_op2_init:	
  2105                           
  2106                           	psect	text510
  2107  01FD                     __ptext510:	
  2108 ;; =============== function _op2_init ends ============
  2109                           
  2110                           
  2111 ;; *************** function _op1_init *****************
  2112 ;; Defined at:
  2113 ;;		line 26 in file "C:\sw_dev\AK7030-OTP\periph.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;		None
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;		None
  2118 ;; Return value:  Size  Location     Type
  2119 ;;		None               void
  2120 ;; Registers used:
  2121 ;;		wreg
  2122 ;; Tracked objects:
  2123 ;;		On entry : 17F/20
  2124 ;;		On exit  : 17F/20
  2125 ;;		Unchanged: FFE80/0
  2126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2127 ;;      Params:         0       0       0       0       0
  2128 ;;      Locals:         0       0       0       0       0
  2129 ;;      Temps:          0       0       0       0       0
  2130 ;;      Totals:         0       0       0       0       0
  2131 ;;Total ram usage:        0 bytes
  2132 ;; Hardware stack levels used:    1
  2133 ;; Hardware stack levels required when called:    2
  2134 ;; This function calls:
  2135 ;;		Nothing
  2136 ;; This function is called by:
  2137 ;;		_main
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140  01FD                     _op1_init:	
  2141                           
  2142                           ;periph.c: 33: OP1CON1=0x02;
  2143                           
  2144                           ; Regs used in _op1_init: [wreg]
  2145  01FD  3002               	movlw	2
  2146  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  2147  01FF  009C               	movwf	28	;volatile
  2148                           
  2149                           ;periph.c: 34: OP1CON2=0xA0;
  2150  0200  30A0               	movlw	160
  2151  0201  009D               	movwf	29	;volatile
  2152                           
  2153                           ;periph.c: 35: OP1CON0=0x80;
  2154  0202  3080               	movlw	128
  2155  0203  009B               	movwf	27	;volatile
  2156                           
  2157                           ;periph.c: 38: TRISB3=1;
  2158  0204  1683               	bsf	3,5	;RP0=1, select bank1
  2159  0205  1586               	bsf	6,3
  2160                           
  2161                           ;periph.c: 39: TRISB4=1;
  2162  0206  1606               	bsf	6,4
  2163                           
  2164                           ;periph.c: 40: TRISB5=0;
  2165  0207  1286               	bcf	6,5
  2166  0208  0008               	return
  2167  0209                     __end_of_op1_init:	
  2168                           
  2169                           	psect	text511
  2170  024B                     __ptext511:	
  2171 ;; =============== function _op1_init ends ============
  2172                           
  2173                           
  2174 ;; *************** function _dac_init *****************
  2175 ;; Defined at:
  2176 ;;		line 14 in file "C:\sw_dev\AK7030-OTP\periph.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;		None
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;		None
  2181 ;; Return value:  Size  Location     Type
  2182 ;;		None               void
  2183 ;; Registers used:
  2184 ;;		wreg
  2185 ;; Tracked objects:
  2186 ;;		On entry : 17F/20
  2187 ;;		On exit  : 17F/20
  2188 ;;		Unchanged: FFE80/0
  2189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2190 ;;      Params:         0       0       0       0       0
  2191 ;;      Locals:         0       0       0       0       0
  2192 ;;      Temps:          0       0       0       0       0
  2193 ;;      Totals:         0       0       0       0       0
  2194 ;;Total ram usage:        0 bytes
  2195 ;; Hardware stack levels used:    1
  2196 ;; Hardware stack levels required when called:    2
  2197 ;; This function calls:
  2198 ;;		Nothing
  2199 ;; This function is called by:
  2200 ;;		_main
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203  024B                     _dac_init:	
  2204                           
  2205                           ;periph.c: 15: DACCON|=2;
  2206                           
  2207                           ; Regs used in _dac_init: [wreg]
  2208  024B  1487               	bsf	7,1	;volatile
  2209                           
  2210                           ;periph.c: 17: DACR0=0x19;
  2211  024C  3019               	movlw	25
  2212  024D  0088               	movwf	8	;volatile
  2213                           
  2214                           ;periph.c: 18: DACCON|=(1)<<2;
  2215  024E  1507               	bsf	7,2	;volatile
  2216  024F  0008               	return
  2217  0250                     __end_of_dac_init:	
  2218                           
  2219                           	psect	text512
  2220  01D9                     __ptext512:	
  2221 ;; =============== function _dac_init ends ============
  2222                           
  2223                           
  2224 ;; *************** function _adc_test_init *****************
  2225 ;; Defined at:
  2226 ;;		line 85 in file "C:\sw_dev\AK7030-OTP\periph.c"
  2227 ;; Parameters:    Size  Location     Type
  2228 ;;  channel         1    wreg     unsigned char 
  2229 ;;  ref             1    0[BANK0 ] unsigned char 
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;  channel         1    2[BANK0 ] unsigned char 
  2232 ;; Return value:  Size  Location     Type
  2233 ;;		None               void
  2234 ;; Registers used:
  2235 ;;		wreg, status,2, status,0
  2236 ;; Tracked objects:
  2237 ;;		On entry : 17F/0
  2238 ;;		On exit  : 17F/20
  2239 ;;		Unchanged: FFE80/0
  2240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2241 ;;      Params:         0       1       0       0       0
  2242 ;;      Locals:         0       1       0       0       0
  2243 ;;      Temps:          0       1       0       0       0
  2244 ;;      Totals:         0       3       0       0       0
  2245 ;;Total ram usage:        3 bytes
  2246 ;; Hardware stack levels used:    1
  2247 ;; Hardware stack levels required when called:    2
  2248 ;; This function calls:
  2249 ;;		Nothing
  2250 ;; This function is called by:
  2251 ;;		_main
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254  01D9                     _adc_test_init:	
  2255                           
  2256                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  2257                           ;adc_test_init@channel stored from wreg
  2258  01D9  00C1               	movwf	adc_test_init@channel
  2259                           
  2260                           ;periph.c: 86: ADCON0|=channel<<2;
  2261  01DA  00C0               	movwf	??_adc_test_init
  2262  01DB  1003               	clrc
  2263  01DC  0DC0               	rlf	??_adc_test_init,f
  2264  01DD  1003               	clrc
  2265  01DE  0D40               	rlf	??_adc_test_init,w
  2266  01DF  049F               	iorwf	31,f	;volatile
  2267                           
  2268                           ;periph.c: 87: ADCON1|=ref<<6;
  2269  01E0  083F               	movf	adc_test_init@ref,w
  2270  01E1  00C0               	movwf	??_adc_test_init
  2271  01E2  0CC0               	rrf	??_adc_test_init,f
  2272  01E3  0CC0               	rrf	??_adc_test_init,f
  2273  01E4  0C40               	rrf	??_adc_test_init,w
  2274  01E5  39C0               	andlw	192
  2275  01E6  1683               	bsf	3,5	;RP0=1, select bank1
  2276  01E7  049F               	iorwf	31,f	;volatile
  2277                           
  2278                           ;periph.c: 88: ADON=1;
  2279  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  2280  01E9  141F               	bsf	31,0
  2281                           
  2282                           ;periph.c: 89: ADIE=1;
  2283  01EA  1683               	bsf	3,5	;RP0=1, select bank1
  2284  01EB  150D               	bsf	13,2
  2285  01EC  0008               	return
  2286  01ED                     __end_of_adc_test_init:	
  2287                           
  2288                           	psect	text513
  2289  025A                     __ptext513:	
  2290 ;; =============== function _adc_test_init ends ============
  2291                           
  2292                           
  2293 ;; *************** function _timer1_interrupt_config *****************
  2294 ;; Defined at:
  2295 ;;		line 56 in file "C:\sw_dev\AK7030-OTP\common.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;		None
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;		None
  2300 ;; Return value:  Size  Location     Type
  2301 ;;		None               void
  2302 ;; Registers used:
  2303 ;;		None
  2304 ;; Tracked objects:
  2305 ;;		On entry : 17F/20
  2306 ;;		On exit  : 17F/20
  2307 ;;		Unchanged: FFE80/0
  2308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2309 ;;      Params:         0       0       0       0       0
  2310 ;;      Locals:         0       0       0       0       0
  2311 ;;      Temps:          0       0       0       0       0
  2312 ;;      Totals:         0       0       0       0       0
  2313 ;;Total ram usage:        0 bytes
  2314 ;; Hardware stack levels used:    1
  2315 ;; Hardware stack levels required when called:    2
  2316 ;; This function calls:
  2317 ;;		Nothing
  2318 ;; This function is called by:
  2319 ;;		_main
  2320 ;; This function uses a non-reentrant model
  2321 ;;
  2322  025A                     _timer1_interrupt_config:	
  2323                           
  2324                           ;common.c: 57: GIE = 1;
  2325                           
  2326                           ; Regs used in _timer1_interrupt_config: []
  2327  025A  178B               	bsf	11,7
  2328                           
  2329                           ;common.c: 58: PEIE = 1;
  2330  025B  170B               	bsf	11,6
  2331  025C  0008               	return
  2332  025D                     __end_of_timer1_interrupt_config:	
  2333                           
  2334                           	psect	text514
  2335  0209                     __ptext514:	
  2336 ;; =============== function _timer1_interrupt_config ends ============
  2337                           
  2338                           
  2339 ;; *************** function _timer1_config *****************
  2340 ;; Defined at:
  2341 ;;		line 44 in file "C:\sw_dev\AK7030-OTP\common.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;		None
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;		None
  2346 ;; Return value:  Size  Location     Type
  2347 ;;		None               void
  2348 ;; Registers used:
  2349 ;;		wreg
  2350 ;; Tracked objects:
  2351 ;;		On entry : 17F/40
  2352 ;;		On exit  : 17F/20
  2353 ;;		Unchanged: FFE80/0
  2354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2355 ;;      Params:         0       0       0       0       0
  2356 ;;      Locals:         0       0       0       0       0
  2357 ;;      Temps:          0       0       0       0       0
  2358 ;;      Totals:         0       0       0       0       0
  2359 ;;Total ram usage:        0 bytes
  2360 ;; Hardware stack levels used:    1
  2361 ;; Hardware stack levels required when called:    2
  2362 ;; This function calls:
  2363 ;;		Nothing
  2364 ;; This function is called by:
  2365 ;;		_main
  2366 ;; This function uses a non-reentrant model
  2367 ;;
  2368  0209                     _timer1_config:	
  2369                           
  2370                           ;common.c: 46: TMR1H=0xCF;
  2371                           
  2372                           ; Regs used in _timer1_config: [wreg]
  2373  0209  30CF               	movlw	207
  2374  020A  1303               	bcf	3,6	;RP1=0, select bank0
  2375  020B  008F               	movwf	15	;volatile
  2376                           
  2377                           ;common.c: 47: TMR1L=0x2C;
  2378  020C  302C               	movlw	44
  2379  020D  008E               	movwf	14	;volatile
  2380                           
  2381                           ;common.c: 48: T1CON=0xE1;
  2382  020E  30E1               	movlw	225
  2383  020F  0090               	movwf	16	;volatile
  2384                           
  2385                           ;common.c: 49: TMR1IE=1;
  2386  0210  1683               	bsf	3,5	;RP0=1, select bank1
  2387  0211  140C               	bsf	12,0
  2388  0212  0008               	return
  2389  0213                     __end_of_timer1_config:	
  2390                           
  2391                           	psect	text515
  2392  0224                     __ptext515:	
  2393 ;; =============== function _timer1_config ends ============
  2394                           
  2395                           
  2396 ;; *************** function _clock_config *****************
  2397 ;; Defined at:
  2398 ;;		line 36 in file "C:\sw_dev\AK7030-OTP\common.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;		None
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;		None
  2403 ;; Return value:  Size  Location     Type
  2404 ;;		None               void
  2405 ;; Registers used:
  2406 ;;		wreg, status,2
  2407 ;; Tracked objects:
  2408 ;;		On entry : 17F/20
  2409 ;;		On exit  : 17F/40
  2410 ;;		Unchanged: FFE80/0
  2411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2412 ;;      Params:         0       0       0       0       0
  2413 ;;      Locals:         0       0       0       0       0
  2414 ;;      Temps:          0       0       0       0       0
  2415 ;;      Totals:         0       0       0       0       0
  2416 ;;Total ram usage:        0 bytes
  2417 ;; Hardware stack levels used:    1
  2418 ;; Hardware stack levels required when called:    2
  2419 ;; This function calls:
  2420 ;;		Nothing
  2421 ;; This function is called by:
  2422 ;;		_main
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425  0224                     _clock_config:	
  2426                           
  2427                           ;common.c: 38: CLKPR = 0x80;
  2428                           
  2429                           ; Regs used in _clock_config: [wreg+status,2]
  2430  0224  3080               	movlw	128
  2431  0225  1283               	bcf	3,5	;RP0=0, select bank2
  2432  0226  1703               	bsf	3,6	;RP1=1, select bank2
  2433  0227  0088               	movwf	8	;volatile
  2434                           
  2435                           ;common.c: 39: CLKPR = 0x00;
  2436  0228  0188               	clrf	8	;volatile
  2437  0229                     l1392:	
  2438                           ;common.c: 40: while(CLKPCE);
  2439                           
  2440  0229  1F88               	btfss	8,7
  2441  022A  0008               	return
  2442  022B  2A29               	goto	l1392
  2443  022C                     __end_of_clock_config:	
  2444                           
  2445                           	psect	text516
  2446  0176                     __ptext516:	
  2447 ;; =============== function _clock_config ends ============
  2448                           
  2449                           
  2450 ;; *************** function _ISR *****************
  2451 ;; Defined at:
  2452 ;;		line 249 in file "C:\sw_dev\AK7030-OTP\common.c"
  2453 ;; Parameters:    Size  Location     Type
  2454 ;;		None
  2455 ;; Auto vars:     Size  Location     Type
  2456 ;;		None
  2457 ;; Return value:  Size  Location     Type
  2458 ;;		None               void
  2459 ;; Registers used:
  2460 ;;		wreg, status,2, status,0, pclath, cstack
  2461 ;; Tracked objects:
  2462 ;;		On entry : 0/0
  2463 ;;		On exit  : 40/0
  2464 ;;		Unchanged: FFF9F/0
  2465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2466 ;;      Params:         0       0       0       0       0
  2467 ;;      Locals:         0       0       0       0       0
  2468 ;;      Temps:          2       0       0       0       0
  2469 ;;      Totals:         2       0       0       0       0
  2470 ;;Total ram usage:        2 bytes
  2471 ;; Hardware stack levels used:    1
  2472 ;; Hardware stack levels required when called:    1
  2473 ;; This function calls:
  2474 ;;		i1_setAD_ConvertFlag
  2475 ;;		_adc_get
  2476 ;; This function is called by:
  2477 ;;		Interrupt level 1
  2478 ;; This function uses a non-reentrant model
  2479 ;;
  2480  0176                     _ISR:	
  2481                           
  2482                           ;common.c: 250: static unsigned char ucTimer1sCnt = 0;
  2483                           ;common.c: 252: if(TMR1IF == 1)
  2484  0176  1283               	bcf	3,5	;RP0=0, select bank0
  2485  0177  1303               	bcf	3,6	;RP1=0, select bank0
  2486  0178  1C0C               	btfss	12,0
  2487  0179  2996               	goto	i1l3008
  2488  017A  3064               	movlw	100
  2489                           
  2490                           ;common.c: 253: {
  2491                           ;common.c: 254: TMR1IF = 0 ;
  2492  017B  100C               	bcf	12,0
  2493                           
  2494                           ;common.c: 255: timer.timer10msStopWatch++;
  2495  017C  0AFA               	incf	_timer,f
  2496                           
  2497                           ;common.c: 256: ucTimer1sCnt++;
  2498  017D  0AF8               	incf	ISR@ucTimer1sCnt,f
  2499                           
  2500                           ;common.c: 258: if(ucTimer1sCnt >= 100)
  2501  017E  0278               	subwf	ISR@ucTimer1sCnt,w
  2502  017F  1C03               	skipc
  2503  0180  2996               	goto	i1l3008
  2504                           
  2505                           ;common.c: 259: {
  2506                           ;common.c: 260: ucTimer1sCnt = 0;
  2507  0181  01F8               	clrf	ISR@ucTimer1sCnt
  2508                           
  2509                           ;common.c: 261: if(uiBigTimer > 0)
  2510  0182  0877               	movf	_uiBigTimer+1,w
  2511  0183  0476               	iorwf	_uiBigTimer,w
  2512  0184  1903               	skipnz
  2513  0185  298C               	goto	i1l1480
  2514                           
  2515                           ;common.c: 262: uiBigTimer--;
  2516  0186  3001               	movlw	1
  2517  0187  02F6               	subwf	_uiBigTimer,f
  2518  0188  3000               	movlw	0
  2519  0189  1C03               	skipc
  2520  018A  03F7               	decf	_uiBigTimer+1,f
  2521  018B  02F7               	subwf	_uiBigTimer+1,f
  2522  018C                     i1l1480:	
  2523                           
  2524                           ;common.c: 264: if(uiSmallTimer)
  2525  018C  0835               	movf	_uiSmallTimer+1,w
  2526  018D  0434               	iorwf	_uiSmallTimer,w
  2527  018E  1903               	skipnz
  2528  018F  2996               	goto	i1l3008
  2529                           
  2530                           ;common.c: 265: uiSmallTimer--;
  2531  0190  3001               	movlw	1
  2532  0191  02B4               	subwf	_uiSmallTimer,f
  2533  0192  3000               	movlw	0
  2534  0193  1C03               	skipc
  2535  0194  03B5               	decf	_uiSmallTimer+1,f
  2536  0195  02B5               	subwf	_uiSmallTimer+1,f
  2537  0196                     i1l3008:	
  2538                           
  2539                           ;common.c: 266: }
  2540                           ;common.c: 267: }
  2541                           ;common.c: 269: if(ADIF)
  2542  0196  1D0D               	btfss	13,2
  2543  0197  29B0               	goto	i1l1485
  2544  0198  3001               	movlw	1
  2545                           
  2546                           ;common.c: 270: {
  2547                           ;common.c: 271: ADIF=0;
  2548  0199  110D               	bcf	13,2
  2549                           
  2550                           ;common.c: 272: setAD_ConvertFlag(1);
  2551  019A  21C2  118A         	fcall	i1_setAD_ConvertFlag
  2552                           
  2553                           ;common.c: 273: adc_original_value = adc_get();
  2554  019C  21B7  118A         	fcall	_adc_get
  2555  019E  0871               	movf	?_adc_get+1,w
  2556  019F  1283               	bcf	3,5	;RP0=0, select bank0
  2557  01A0  00AF               	movwf	_adc_original_value+1
  2558  01A1  0870               	movf	?_adc_get,w
  2559  01A2  00AE               	movwf	_adc_original_value
  2560                           
  2561                           ;common.c: 274: if(sampleChannelSelect == 12)
  2562  01A3  0844               	movf	_sampleChannelSelect,w
  2563  01A4  3A0C               	xorlw	12
  2564  01A5  1D03               	skipz
  2565  01A6  29AA               	goto	i1l3020
  2566                           
  2567                           ;common.c: 275: adc_original_CH12_value = adc_get();
  2568  01A7  21B7  118A         	fcall	_adc_get
  2569  01A9  29B0               	goto	i1l1485
  2570  01AA                     i1l3020:	
  2571                           
  2572                           ;common.c: 276: else
  2573                           ;common.c: 277: adc_original_CH13_value = adc_get();
  2574  01AA  21B7               	fcall	_adc_get
  2575  01AB  0871               	movf	?_adc_get+1,w
  2576  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  2577  01AD  00AD               	movwf	_adc_original_CH13_value+1
  2578  01AE  0870               	movf	?_adc_get,w
  2579  01AF  00AC               	movwf	_adc_original_CH13_value
  2580  01B0                     i1l1485:	
  2581  01B0  0875               	movf	??_ISR+1,w
  2582  01B1  008A               	movwf	10
  2583  01B2  0E74               	swapf	??_ISR^(0+-128),w
  2584  01B3  0083               	movwf	3
  2585  01B4  0EFE               	swapf	126,f
  2586  01B5  0E7E               	swapf	126,w
  2587  01B6  0009               	retfie
  2588  01B7                     __end_of_ISR:	
  2589  01B7                     __ptext518:	
  2590 ;; =============== function i1_setAD_ConvertFlag ends ============
  2591                           
  2592                           
  2593 ;; *************** function _adc_get *****************
  2594 ;; Defined at:
  2595 ;;		line 104 in file "C:\sw_dev\AK7030-OTP\periph.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;		None
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;  val             2    2[COMMON] unsigned int 
  2600 ;; Return value:  Size  Location     Type
  2601 ;;                  2    0[COMMON] unsigned int 
  2602 ;; Registers used:
  2603 ;;		wreg
  2604 ;; Tracked objects:
  2605 ;;		On entry : 60/0
  2606 ;;		On exit  : 60/20
  2607 ;;		Unchanged: FFF9F/0
  2608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2609 ;;      Params:         2       0       0       0       0
  2610 ;;      Locals:         2       0       0       0       0
  2611 ;;      Temps:          0       0       0       0       0
  2612 ;;      Totals:         4       0       0       0       0
  2613 ;;Total ram usage:        4 bytes
  2614 ;; Hardware stack levels used:    1
  2615 ;; This function calls:
  2616 ;;		Nothing
  2617 ;; This function is called by:
  2618 ;;		_ISR
  2619 ;; This function uses a non-reentrant model
  2620 ;;
  2621  01B7                     _adc_get:	
  2622                           
  2623                           ;periph.c: 105: unsigned int val;
  2624                           ;periph.c: 106: val = (ADRESH<<8) | ADRESL;
  2625                           
  2626                           ; Regs used in _adc_get: [wreg]
  2627  01B7  081E               	movf	30,w	;volatile
  2628  01B8  00F3               	movwf	adc_get@val+1
  2629  01B9  01F2               	clrf	adc_get@val
  2630  01BA  1683               	bsf	3,5	;RP0=1, select bank1
  2631  01BB  081E               	movf	30,w	;volatile
  2632  01BC  04F2               	iorwf	adc_get@val,f
  2633                           
  2634                           ;periph.c: 107: return val;
  2635  01BD  0873               	movf	adc_get@val+1,w
  2636  01BE  00F1               	movwf	?_adc_get+1
  2637  01BF  0872               	movf	adc_get@val,w
  2638  01C0  00F0               	movwf	?_adc_get
  2639  01C1  0008               	return
  2640  01C2                     __end_of_adc_get:	
  2641  01C2                     __ptext517:	
  2642 ;; =============== function _ISR ends ============
  2643                           
  2644                           
  2645 ;; *************** function i1_setAD_ConvertFlag *****************
  2646 ;; Defined at:
  2647 ;;		line 70 in file "C:\sw_dev\AK7030-OTP\common.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;  setAD_Conver    1    wreg     unsigned char 
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  2652 ;; Return value:  Size  Location     Type
  2653 ;;		None               void
  2654 ;; Registers used:
  2655 ;;		wreg
  2656 ;; Tracked objects:
  2657 ;;		On entry : 60/0
  2658 ;;		On exit  : 60/0
  2659 ;;		Unchanged: FFF9F/0
  2660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2661 ;;      Params:         0       0       0       0       0
  2662 ;;      Locals:         1       0       0       0       0
  2663 ;;      Temps:          0       0       0       0       0
  2664 ;;      Totals:         1       0       0       0       0
  2665 ;;Total ram usage:        1 bytes
  2666 ;; Hardware stack levels used:    1
  2667 ;; This function calls:
  2668 ;;		Nothing
  2669 ;; This function is called by:
  2670 ;;		_ISR
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673  01C2                     i1_setAD_ConvertFlag:	
  2674                           
  2675                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  2676                           ;i1setAD_ConvertFlag@flag stored from wreg
  2677  01C2  00F0               	movwf	i1setAD_ConvertFlag@flag
  2678                           
  2679                           ;common.c: 71: adc_convert_flag = flag;
  2680  01C3  00F9               	movwf	_adc_convert_flag
  2681  01C4  0008               	return
  2682  01C5                     __end_ofi1_setAD_ConvertFlag:	
  2683                           
  2684                           	psect	intentry
  2685  0004                     __pintentry:	
  2686                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  2687                           
  2688  0004                     interrupt_function:	
  2689  007E                     saved_w	set	btemp
  2690  0004  00FE               	movwf	btemp
  2691  0005  0E03               	swapf	3,w
  2692  0006  00F4               	movwf	??_ISR
  2693  0007  080A               	movf	10,w
  2694  0008  00F5               	movwf	??_ISR+1
  2695  0009  118A  2976         	ljmp	_ISR
  2696                           
  2697                           	psect	text519
  2698  0000                     __ptext519:	
  2699 ;; =============== function _adc_get ends ============
  2700                           
  2701  007E                     btemp	set	126	;btemp
  2702  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Tue Dec 11 16:01:01 2018

                     ??_clock_config 003F                                    pc 0002  
                                 _GO 00F9                                   fsr 0004  
                ?_getAdOriginalValue 003F             ?_timer1_interrupt_config 0070  
                                l722 00D4                                  l715 00C0  
                                l716 00C9                                  l672 00FA  
                                l691 0059                                  l683 004D  
                                l685 004E                                  l677 0042  
                                _PA0 0028                                  _PA1 0029  
                                _GIE 005F                                  _PA2 002A  
                                _PA3 002B                                  _PB2 0032  
                                _ISR 0176                                  u525 0131  
                                u535 0144                                  fsr0 0004  
                                indf 0000             main@ucBigTimerActionFlag 0039  
                      _startBigTimer 023C                                 S3270 01C5  
                        main@ampStep 0037                                 ?_ISR 0070  
                 __size_of_AD_Sample 0058                                 l2110 0000  
                               l1401 0000                                 l2113 0000  
                               l2130 0000                                 l1410 0000  
                               l2124 0000                                 l2116 0000  
                               l1404 0000                                 l3100 0000  
                               l3110 003F                                 l3102 0036  
                               l1407 0000                                 l1416 0000  
                               l3032 0000                                 l3104 0000  
                               l1425 013C                                 l3042 014F  
                               l3202 00CD                                 l3114 0046  
                               l3106 0000                                 l1443 0000  
                               l1452 0000                                 l3044 0000  
                               l3036 012A                                 l3028 0000  
                               l3212 00D8                                 l3204 00CE  
                               l3140 0000                                 l3116 0047  
                               l3108 0000                                 l1446 0000  
                               l3070 0000                                 l3214 00D9  
                               l3142 0000                                 l3150 0079  
                               l3126 0052                                 l1455 0000  
                               l1392 0229                                 l3064 015A  
                               l3048 0000                                 l3160 0000  
                               l3144 0000                                 l3136 005B  
                               l3128 0053                                 l3080 0000  
                               l1473 0000                                 l1449 0000  
                               l3066 0000                                 l3074 0000  
                               l3162 0000                                 l3154 0000  
                               l3090 0000                                 l3082 0000  
                               l1395 0000                                 l3068 0000  
                               l3076 0000                                 l3180 0000  
                               l3172 0096                                 l3164 0000  
                               l3156 0092                                 l3148 0000  
                               l3092 0000                                 l3084 0000  
                               l1398 0000                                 l3174 009C  
                               l3094 00DF                                 l3086 0000  
                               l3078 0000                                 l3184 00A7  
                               l3096 0000                                 l3088 0000  
                               l3194 00B8                                 l3178 009F  
                               l2900 0000                                 l3196 0000  
                               l2902 0000                                 l2910 0000  
                               l2904 0000                                 l2912 0000  
                               l2920 0000                                 l2906 0000  
                               l2914 0000                                 l2922 0000  
                               l2930 0000                                 l2908 0000  
                               l2924 0000                                 l2916 0000  
                               l2926 0000                                 l2918 0000  
                               l2942 0000                                 l2928 010C  
                               l2944 0000                                 l2952 0000  
                               l2890 0000                                 l2946 0000  
                               l2954 0000                                 l2970 0000  
                               l2892 0000                                 l2948 0000  
                               l2956 0000                                 l2886 0000  
                               l2894 0000                                 l2958 0000  
                               l2982 0000                                 l2888 0000  
                               l2896 0000                                 l2898 0000  
                               l2986 0000                                 l2988 0000  
                               _ADIE 046A                                 _ADIF 006A  
                               _ADON 00F8                                 _PEIE 005E  
               ??_getAdOriginalValue 0041               ??_isFinishedSmallTimer 003F  
                               _main 000D                    ??_startSmallTimer 003F  
                               btemp 007E                                 start 000B  
            ?_getAdOriginalCh13Value 003F                                ??_ISR 0074  
         __end_of_isPermitSampleTime 024B                  _sampleChannelSelect 0044  
                              ?_main 0070                                _DACR0 0088  
                              _CLKPR 0108                                _T1CON 0010  
                    __end_of_adc_get 01C2                                _TMR1H 000F  
                              _TMR1L 000E                       ?_startBigTimer 0070  
              setAD_ConvertFlag@flag 003F                        main@tDA_timer 0038  
                              _timer 007A                                pclath 000A  
                              status 0003                                wtemp0 007E  
     __end_of_getAdOriginalCh13Value 0246                __end_of_clearBigTimer 025A  
               __end_of_clrSampeTime 025F           __end_of_isFinishedBigTimer 023C  
                       __end_of_main 00FB               __size_of_adc_test_init 0014  
                  __end_of_AD_Sample 0167             __size_of_clearSmallTimer 0003  
               _setDAC0_ChannelValue 0250            main@ucInstalledBatteryCnt 003E  
                             ??_main 0044                               _ADCON0 001F  
                             _ADCON1 009F                 __end_of_clock_config 022C  
                             _DACCON 0087                               _ADRESH 001E  
                             _ADRESL 009E                               _CLKPCE 0847  
                             i1l3002 0000                               i1l3020 01AA  
                             i1l3012 0000                               i1l2133 0000  
                             i1l3022 0000                               i1l3014 0000  
                             i1l1407 0000                               i1l3016 0000  
                             i1l3008 0196                               i1l3026 0000  
                             i1l1480 018C                               i1l1485 01B0  
                             i1l2992 0000                               i1l2996 0000  
                             i1l2998 0000                     __end_of_dac_init 0250  
                             _TMR1IE 0460                               _TMR1IF 0060  
                  _getAD_ConvertFlag 0105                    _setAD_ConvertFlag 0107  
                             _TRISA0 0428                               _TRISA1 0429  
                             _TRISB0 0430                               _TRISA2 042A  
                             _TRISB1 0431                               _TRISA3 042B  
                             _TRISB2 0432                               _TRISB3 0433  
                             _TRISB4 0434                               _TRISB5 0435  
                             _TRISA7 042F                               _TRISB6 0436  
                             _TRISB7 0437                   ?_getAD_ConvertFlag 0070  
                 ?_setAD_ConvertFlag 0070                     __end_of_op1_init 0209  
                   __end_of_op2_init 021C               main@ucConfirmTimerZptS 003C  
                          ??_adc_get 0072                  ??_getAD_ConvertFlag 003F  
                ??_setAD_ConvertFlag 003F                ?_setDAC0_ChannelValue 0070  
                             clrloop 021D                      ??_startBigTimer 003F  
                             saved_w 007E          ?_process_AD_Converter_Value 0070  
                      _adc_test_init 01D9            __end_of_getAD_ConvertFlag 0107  
          __end_of_setAD_ConvertFlag 010C                   __size_of_adc_start 0003  
                     __pcstackCOMMON 0070                         __pidataBANK0 0000  
                    _startSmallTimer 022C              _adc_original_CH13_value 002C  
                  ??_clearSmallTimer 003F                __end_of_timer1_config 0213  
                     ?_adc_test_init 003F     __size_of_timer1_interrupt_config 0003  
              __size_of_clrSampeTime 0002                           __pbssBANK0 0020  
       __size_ofi1_setAD_ConvertFlag 0003                           adc_get@val 0072  
                         __pmaintext 000D               ??_setDAC0_ChannelValue 003F  
                         __pintentry 0004                            ?_dac_init 0070  
              __size_of_clock_config 0008                              _OP1CON0 001B  
                            _OP1CON1 001C                              _OP1CON2 001D  
                            _OP2CON0 009B                              _OP2CON1 009C  
                            _OP2CON2 009D                         _clrSampeTime 025D  
                  __end_of_adc_start 010F                            ?_op1_init 0070  
                          ?_op2_init 0070                   _isPermitSampleTime 0246  
             _buffer_Sample_AD_Value 0020                   _adc_original_value 002E  
         __size_of_getAD_ConvertFlag 0002           __size_of_setAD_ConvertFlag 0005  
        __size_of_getAdOriginalValue 0005                  ?_isPermitSampleTime 0070  
      __size_of_isFinishedSmallTimer 0005                           _uiBigTimer 0076  
                       _clock_config 0224                              _adc_get 01B7  
            __end_of_startSmallTimer 0232                  _multiFilterMaxValue 0030  
                _multiFilterMinValue 0032                 ??_isPermitSampleTime 003F  
                 _isFinishedBigTimer 0237                           ??_dac_init 003F  
                          _AD_Sample 010F                         __size_of_ISR 0041  
                    ??_adc_test_init 0040                           ??_op1_init 003F  
                         ??_op2_init 003F                  ?_isFinishedBigTimer 0070  
               end_of_initialization 01FA                 ??_isFinishedBigTimer 003F  
                         ?_AD_Sample 0070               __size_of_clearBigTimer 0003  
                   _adc_convert_flag 0079              _timer1_interrupt_config 025A  
                     AD_Sample@index 0043                           main@ucInit 003D  
                    _clearSmallTimer 0254                     ?_startSmallTimer 0070  
                i1_setAD_ConvertFlag 01C2                __end_of_startBigTimer 0241  
                start_initialization 01ED                          __end_of_ISR 01B7  
           ??_getAdOriginalCh13Value 0041                 ?i1_setAD_ConvertFlag 0070  
                      _clearBigTimer 0257                main@ucCheckBatteryCnt 003A  
                        __pdataBANK0 0044                          ??_AD_Sample 0041  
          ??_timer1_interrupt_config 003F                          __pbssCOMMON 0076  
                  __size_of_dac_init 0005                        __pcstackBANK0 003F  
                          _adc_start 010C                    __size_of_op1_init 000C  
                  __size_of_op2_init 0009                ??i1_setAD_ConvertFlag 0070  
                     ?_clearBigTimer 0070              __end_of_clearSmallTimer 0257  
             __size_of_timer1_config 000A                            __ptext500 022C  
                          __ptext501 023C                            __ptext510 01FD  
                          __ptext502 0250                            __ptext511 024B  
                          __ptext503 0241                            __ptext512 01D9  
                          __ptext504 0254                            __ptext513 025A  
                          __ptext505 0257                            __ptext514 0209  
                          __ptext506 025D                            __ptext515 0224  
                          __ptext507 0246                            __ptext516 0176  
                          __ptext508 010C                            __ptext517 01C2  
                          __ptext509 0213                            __ptext518 01B7  
                          __ptext519 0000                            __ptext493 00FB  
                          __ptext494 010F                            __ptext495 0167  
                          __ptext496 0107                            __ptext497 0105  
                          __ptext498 0232                            __ptext499 0237  
                           ?_adc_get 0070        __size_of_setDAC0_ChannelValue 0004  
       __end_of_isFinishedSmallTimer 0237                            __pswtext1 01C5  
                    ISR@ucTimer1sCnt 0078           __end_of_getAdOriginalValue 016C  
                         ?_adc_start 0070      __size_of_getAdOriginalCh13Value 0005  
                  interrupt_function 0004      __end_of_timer1_interrupt_config 025D  
               adc_test_init@channel 0041          __size_of_isPermitSampleTime 0005  
                       _uiSmallTimer 0034                __end_of_adc_test_init 01ED  
                      _timer1_config 0209         ??_process_AD_Converter_Value 0044  
                    ??_clearBigTimer 003F                     ?_clearSmallTimer 0070  
               main@ucConfirmTimer1S 003B          __size_of_isFinishedBigTimer 0005  
             _getAdOriginalCh13Value 0241                     __size_of_adc_get 000B  
__size_of_process_AD_Converter_Value 000A                             _dac_init 024B  
                     ?_timer1_config 0070                             _op1_init 01FD  
                           _op2_init 0213                          ??_adc_start 003F  
                      __size_of_main 00EE                 _isFinishedSmallTimer 0232  
                           clear_ram 021C          setDAC0_ChannelValue@ucValue 003F  
                      ?_clrSampeTime 0070                          _sampleTimes 0036  
           __size_of_startSmallTimer 0006                             intlevel1 0000  
              ?_isFinishedSmallTimer 0070               __size_of_startBigTimer 0005  
                      ?_clock_config 0070              i1setAD_ConvertFlag@flag 0070  
                     ??_clrSampeTime 003F                      ??_timer1_config 003F  
        __end_ofi1_setAD_ConvertFlag 01C5   __end_of_process_AD_Converter_Value 0105  
         _process_AD_Converter_Value 00FB         __end_of_setDAC0_ChannelValue 0254  
                   adc_test_init@ref 003F                   _getAdOriginalValue 0167  
