

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Sat Nov 02 09:04:50 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,delta=2
    15                           	psect	text835,local,class=CODE,delta=2
    16                           	psect	text836,local,class=CODE,delta=2
    17                           	psect	text838,local,class=CODE,delta=2
    18                           	psect	text839,local,class=CODE,delta=2
    19                           	psect	text844,local,class=CODE,delta=2
    20                           	psect	text845,local,class=CODE,delta=2
    21                           	psect	text846,local,class=CODE,delta=2
    22                           	psect	text847,local,class=CODE,delta=2
    23                           	psect	text848,local,class=CODE,delta=2
    24                           	psect	text849,local,class=CODE,delta=2
    25                           	psect	text850,local,class=CODE,delta=2
    26                           	psect	text851,local,class=CODE,delta=2
    27                           	psect	text852,local,class=CODE,delta=2
    28                           	psect	text853,local,class=CODE,delta=2
    29                           	psect	text854,local,class=CODE,delta=2
    30                           	psect	text857,local,class=CODE,delta=2
    31                           	psect	text858,local,class=CODE,delta=2
    32                           	psect	text859,local,class=CODE,delta=2
    33                           	psect	text860,local,class=CODE,delta=2
    34                           	psect	text861,local,class=CODE,delta=2
    35                           	psect	text862,local,class=CODE,delta=2
    36                           	psect	text870,local,class=CODE,delta=2
    37                           	psect	text871,local,class=CODE,delta=2
    38                           	psect	text872,local,class=CODE,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	text876,local,class=CODE,delta=2
    41                           	psect	pa_nodes,global,class=CODE,delta=2
    42                           	dabs	1,0x7E,2
    43  000A                     	;#
    44                           
    45                           	psect	config
    46  2000  0FFF               	dw	4095	;#
    47  2001  3FDE               	dw	16350	;#
    48  2002  3FF8               	dw	16376	;#
    49                           
    50                           	psect	idataBANK0
    51  0000                     __pidataBANK0:	
    52  001F                     _ADCON0	set	31
    53  001E                     _ADRESH	set	30
    54  0017                     _CCP1CON	set	23
    55  0015                     _CCPR1L	set	21
    56  0010                     _T1CON	set	16
    57  0012                     _T2CON	set	18
    58  000F                     _TMR1H	set	15
    59  000E                     _TMR1L	set	14
    60  006A                     _ADIF	set	106
    61  00F8                     _ADON	set	248
    62  005F                     _GIE	set	95
    63  00F9                     _GO	set	249
    64  0032                     _PB2	set	50
    65  0033                     _PB3	set	51
    66  0034                     _PB4	set	52
    67  0035                     _PB5	set	53
    68  005E                     _PEIE	set	94
    69  0060                     _TMR1IF	set	96
    70  009F                     _ADCON1	set	159
    71  009E                     _ADRESL	set	158
    72  0092                     _PR2	set	146
    73  046A                     _ADIE	set	1130
    74  0460                     _TMR1IE	set	1120
    75  0430                     _TRISB0	set	1072
    76  0431                     _TRISB1	set	1073
    77  0432                     _TRISB2	set	1074
    78  0433                     _TRISB3	set	1075
    79  0434                     _TRISB4	set	1076
    80  0435                     _TRISB5	set	1077
    81  0108                     _CLKPR	set	264
    82  0847                     _CLKPCE	set	2119
    83  0C42                     _PBOD2	set	3138
    84                           
    85                           	psect	cinit
    86  0449                     start_initialization:	
    87  0449  3056               	movlw	low __pbssBANK0
    88                           
    89                           ; Clear objects allocated to COMMON
    90  044A  01FD               	clrf	__pbssCOMMON& (0+127)
    91                           
    92                           ; Clear objects allocated to BANK0
    93  044B  1383               	bcf	3,7	;select IRP bank0
    94  044C  0084               	movwf	4
    95  044D  306F               	movlw	low (__pbssBANK0+25)
    96  044E  118A  24C5  118A   	fcall	clear_ram
    97                           
    98                           ; Clear objects allocated to BANK1
    99  0451  30A0               	movlw	low __pbssBANK1
   100  0452  0084               	movwf	4
   101  0453  30F0               	movlw	low (__pbssBANK1+80)
   102  0454  118A  24C5         	fcall	clear_ram
   103                           
   104                           ;initializer for _sampleChannelSelect
   105  0456  300C               	movlw	12
   106  0457  00EF               	movwf	__pdataBANK0& (0+127)
   107  0458                     end_of_initialization:	
   108                           ;End of C runtime variable initialization code
   109                           
   110  0458  0183               	clrf	3
   111  0459  118A  2813         	ljmp	_main	;jump to C main() function
   112                           
   113                           	psect	bssCOMMON
   114  007D                     __pbssCOMMON:	
   115  007D                     vPutSampleDataIntoTable@ucChannelFirstLength:	
   116  007D                     	ds	1
   117                           
   118                           	psect	bssBANK0
   119  0056                     __pbssBANK0:	
   120  0056                     _uiBigTimer:	
   121  0056                     	ds	2
   122  0058                     _uiOneHourTimer:	
   123  0058                     	ds	2
   124  005A                     _uiSmallTimer:	
   125  005A                     	ds	2
   126  005C                     _uiTwentyMinTimer:	
   127  005C                     	ds	2
   128  005E                     main@uiTimerOneP5s:	
   129  005E                     	ds	2
   130  0060                     ISR@ucTimer1sCnt:	
   131  0060                     	ds	1
   132  0061                     _adc_convert_flag:	
   133  0061                     	ds	1
   134  0062                     _bBigTimerStartFlag:	
   135  0062                     	ds	1
   136  0063                     _bOneHourTimerStartFlag:	
   137  0063                     	ds	1
   138  0064                     _bSmallTimerStartFlag:	
   139  0064                     	ds	1
   140  0065                     _bTwentyMinStartFlag:	
   141  0065                     	ds	1
   142  0066                     _sampleTimes:	
   143  0066                     	ds	1
   144  0067                     _timer:	
   145  0067                     	ds	1
   146  0068                     main@cTimerP5s_787:	
   147  0068                     	ds	1
   148  0069                     main@cTimerP5s_793:	
   149  0069                     	ds	1
   150  006A                     main@ucStep:	
   151  006A                     	ds	1
   152  006B                     main@ucTimerP3s:	
   153  006B                     	ds	1
   154  006C                     main@ucTimerP5s:	
   155  006C                     	ds	1
   156  006D                     vPutSampleDataIntoTable@ucChannelFourteenthLength:	
   157  006D                     	ds	1
   158  006E                     vPutSampleDataIntoTable@ucChannelFourthLength:	
   159  006E                     	ds	1
   160                           
   161                           	psect	dataBANK0
   162  006F                     __pdataBANK0:	
   163  006F                     _sampleChannelSelect:	
   164  006F                     	ds	1
   165                           
   166                           	psect	bssBANK1
   167  00A0                     __pbssBANK1:	
   168  00A0                     _uiTwentySecondsTimer:	
   169  00A0                     	ds	2
   170  00A2                     main@ucDelay1s:	
   171  00A2                     	ds	2
   172  00A4                     main@uiTimerThreeP5s:	
   173  00A4                     	ds	2
   174  00A6                     main@uiTimerTwoP5s:	
   175  00A6                     	ds	2
   176  00A8                     _uiSampleChannelFirst:	
   177  00A8                     	ds	24
   178  00C0                     _uiSampleChannelFourteenth:	
   179  00C0                     	ds	24
   180  00D8                     _uiSampleChannelFourth:	
   181  00D8                     	ds	24
   182                           
   183                           	psect	clrtext
   184  04C5                     clear_ram:	
   185                           ;	Called with FSR containing the base address, and
   186                           ;	W with the last address+1
   187                           
   188  04C5  0064               	clrwdt	;clear the watchdog before getting into this loop
   189  04C6                     clrloop:	
   190  04C6  0180               	clrf	0	;clear RAM location pointed to by FSR
   191  04C7  0A84               	incf	4,f	;increment pointer
   192  04C8  0604               	xorwf	4,w	;XOR with final address
   193  04C9  1903               	btfsc	3,2	;have we reached the end yet?
   194  04CA  3400               	retlw	0	;all done for this memory range, return
   195  04CB  0604               	xorwf	4,w	;XOR again to restore value
   196  04CC  2CC6               	goto	clrloop	;do the next byte
   197                           
   198                           	psect	cstackCOMMON
   199  0070                     __pcstackCOMMON:	
   200  0070                     ?_clearTwelveHoursTimer:	
   201  0070                     ?_clearThreeHoursTimer:	
   202                           ; 0 bytes @ 0x0
   203                           
   204  0070                     ?_clock_config:	
   205                           ; 0 bytes @ 0x0
   206                           
   207  0070                     ?_timer1_config:	
   208                           ; 0 bytes @ 0x0
   209                           
   210  0070                     ?_timer1_interrupt_config:	
   211                           ; 0 bytes @ 0x0
   212                           
   213  0070                     ?_adc_start:	
   214                           ; 0 bytes @ 0x0
   215                           
   216  0070                     ?_process_AD_Converter_Value:	
   217                           ; 0 bytes @ 0x0
   218                           
   219  0070                     ?_clrSampeTime:	
   220                           ; 0 bytes @ 0x0
   221                           
   222  0070                     ?_clearTwentyMinTimer:	
   223                           ; 0 bytes @ 0x0
   224                           
   225  0070                     ?_AD_Sample:	
   226                           ; 0 bytes @ 0x0
   227                           
   228  0070                     ?_initPB3:	
   229                           ; 0 bytes @ 0x0
   230                           
   231  0070                     ?_setPB3:	
   232                           ; 0 bytes @ 0x0
   233                           
   234  0070                     ?_initPB4:	
   235                           ; 0 bytes @ 0x0
   236                           
   237  0070                     ?_setPB4:	
   238                           ; 0 bytes @ 0x0
   239                           
   240  0070                     ?_initPB5:	
   241                           ; 0 bytes @ 0x0
   242                           
   243  0070                     ?_setPB5:	
   244                           ; 0 bytes @ 0x0
   245                           
   246  0070                     ?_initPB2_AsHighResistence:	
   247                           ; 0 bytes @ 0x0
   248                           
   249  0070                     ?_pwm_start:	
   250                           ; 0 bytes @ 0x0
   251                           
   252  0070                     ?_initPin:	
   253                           ; 0 bytes @ 0x0
   254                           
   255  0070                     ?_setPinInitVaule:	
   256                           ; 0 bytes @ 0x0
   257                           
   258  0070                     ?_selectAdChannel:	
   259                           ; 0 bytes @ 0x0
   260                           
   261  0070                     ?_reset:	
   262                           ; 0 bytes @ 0x0
   263                           
   264  0070                     ?_setAD_ConvertFlag:	
   265                           ; 0 bytes @ 0x0
   266                           
   267  0070                     ?_ISR:	
   268                           ; 0 bytes @ 0x0
   269                           
   270  0070                     ?i1_setAD_ConvertFlag:	
   271                           ; 0 bytes @ 0x0
   272                           
   273  0070                     ??i1_setAD_ConvertFlag:	
   274                           ; 0 bytes @ 0x0
   275                           
   276  0070                     ?_isPermitSampleTime:	
   277                           ; 0 bytes @ 0x0
   278                           
   279  0070                     ?_isFinishedTwentyMinTimer:	
   280                           ; 1 bytes @ 0x0
   281                           
   282  0070                     ?_isFinishedTwelveHoursTimer:	
   283                           ; 1 bytes @ 0x0
   284                           
   285  0070                     ?_isFinishedThreeHoursTimer:	
   286                           ; 1 bytes @ 0x0
   287                           
   288  0070                     ?_isFinishedOneHoursTimer:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0070                     ?_calPulseWidth:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0070                     ?_getAD_ConvertFlag:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0070                     ?_adc_get:	
   298                           ; 1 bytes @ 0x0
   299                           
   300  0070                     ?_main:	
   301                           ; 2 bytes @ 0x0
   302                           
   303  0070                     i1setAD_ConvertFlag@flag:	
   304                           ; 2 bytes @ 0x0
   305                           
   306                           
   307                           ; 1 bytes @ 0x0
   308  0070                     	ds	2
   309  0072                     ??_adc_get:	
   310  0072                     adc_get@val:	
   311                           ; 0 bytes @ 0x2
   312                           
   313                           
   314                           ; 2 bytes @ 0x2
   315  0072                     	ds	2
   316  0074                     ?_vPutSampleDataIntoTable:	
   317  0074                     vPutSampleDataIntoTable@uiSampleData:	
   318                           ; 0 bytes @ 0x4
   319                           
   320                           
   321                           ; 2 bytes @ 0x4
   322  0074                     	ds	2
   323  0076                     vPutSampleDataIntoTable@channel:	
   324                           
   325                           ; 1 bytes @ 0x6
   326  0076                     	ds	1
   327  0077                     ??_vPutSampleDataIntoTable:	
   328  0077                     vPutSampleDataIntoTable@i:	
   329                           ; 0 bytes @ 0x7
   330                           
   331                           
   332                           ; 2 bytes @ 0x7
   333  0077                     	ds	2
   334  0079                     ??_ISR:	
   335                           
   336                           ; 0 bytes @ 0x9
   337  0079                     	ds	4
   338                           
   339                           	psect	cstackBANK0
   340  0020                     __pcstackBANK0:	
   341  0020                     ??_clearTwelveHoursTimer:	
   342  0020                     ??_clearThreeHoursTimer:	
   343                           ; 0 bytes @ 0x0
   344                           
   345  0020                     ??_clock_config:	
   346                           ; 0 bytes @ 0x0
   347                           
   348  0020                     ??_timer1_config:	
   349                           ; 0 bytes @ 0x0
   350                           
   351  0020                     ??_timer1_interrupt_config:	
   352                           ; 0 bytes @ 0x0
   353                           
   354  0020                     ?_adc_test_init:	
   355                           ; 0 bytes @ 0x0
   356                           
   357  0020                     ??_adc_start:	
   358                           ; 0 bytes @ 0x0
   359                           
   360  0020                     ?_startTwentyMinTimer:	
   361                           ; 0 bytes @ 0x0
   362                           
   363  0020                     ??_isPermitSampleTime:	
   364                           ; 0 bytes @ 0x0
   365                           
   366  0020                     ??_clrSampeTime:	
   367                           ; 0 bytes @ 0x0
   368                           
   369  0020                     ??_isFinishedTwentyMinTimer:	
   370                           ; 0 bytes @ 0x0
   371                           
   372  0020                     ??_clearTwentyMinTimer:	
   373                           ; 0 bytes @ 0x0
   374                           
   375  0020                     ?_startTwelveHourTimer:	
   376                           ; 0 bytes @ 0x0
   377                           
   378  0020                     ??_isFinishedTwelveHoursTimer:	
   379                           ; 0 bytes @ 0x0
   380                           
   381  0020                     ?_startThreeHoursTimer:	
   382                           ; 0 bytes @ 0x0
   383                           
   384  0020                     ??_isFinishedThreeHoursTimer:	
   385                           ; 0 bytes @ 0x0
   386                           
   387  0020                     ?_startOneHoursTimer:	
   388                           ; 0 bytes @ 0x0
   389                           
   390  0020                     ??_isFinishedOneHoursTimer:	
   391                           ; 0 bytes @ 0x0
   392                           
   393  0020                     ??_AD_Sample:	
   394                           ; 0 bytes @ 0x0
   395                           
   396  0020                     ??_initPB3:	
   397                           ; 0 bytes @ 0x0
   398                           
   399  0020                     ??_setPB3:	
   400                           ; 0 bytes @ 0x0
   401                           
   402  0020                     ??_initPB4:	
   403                           ; 0 bytes @ 0x0
   404                           
   405  0020                     ??_setPB4:	
   406                           ; 0 bytes @ 0x0
   407                           
   408  0020                     ??_initPB5:	
   409                           ; 0 bytes @ 0x0
   410                           
   411  0020                     ??_setPB5:	
   412                           ; 0 bytes @ 0x0
   413                           
   414  0020                     ??_initPB2_AsHighResistence:	
   415                           ; 0 bytes @ 0x0
   416                           
   417  0020                     ??_pwm_start:	
   418                           ; 0 bytes @ 0x0
   419                           
   420  0020                     ??_selectAdChannel:	
   421                           ; 0 bytes @ 0x0
   422                           
   423  0020                     ??_reset:	
   424                           ; 0 bytes @ 0x0
   425                           
   426  0020                     ??_getAD_ConvertFlag:	
   427                           ; 0 bytes @ 0x0
   428                           
   429  0020                     ??_setAD_ConvertFlag:	
   430                           ; 0 bytes @ 0x0
   431                           
   432  0020                     ?_Filter:	
   433                           ; 0 bytes @ 0x0
   434                           
   435  0020                     initPB3@bValue:	
   436                           ; 2 bytes @ 0x0
   437                           
   438  0020                     setPB3@bValue:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0020                     initPB4@bValue:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0020                     setPB4@bValue:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0020                     initPB5@bValue:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0020                     setPB5@bValue:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0020                     pwm_start@ucPulseWidth:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0020                     setAD_ConvertFlag@flag:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0020                     adc_test_init@ref:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  0020                     startTwelveHourTimer@uiSetTime:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0020                     startThreeHoursTimer@uiSetTime:	
   466                           ; 2 bytes @ 0x0
   467                           
   468  0020                     startOneHoursTimer@uiSetTime:	
   469                           ; 2 bytes @ 0x0
   470                           
   471  0020                     startTwentyMinTimer@uiSetValue:	
   472                           ; 2 bytes @ 0x0
   473                           
   474                           
   475                           ; 2 bytes @ 0x0
   476  0020                     	ds	1
   477  0021                     ??_adc_test_init:	
   478  0021                     ??_initPin:	
   479                           ; 0 bytes @ 0x1
   480                           
   481  0021                     ??_setPinInitVaule:	
   482                           ; 0 bytes @ 0x1
   483                           
   484                           
   485                           ; 0 bytes @ 0x1
   486  0021                     	ds	1
   487  0022                     ??_startTwentyMinTimer:	
   488  0022                     ??_startTwelveHourTimer:	
   489                           ; 0 bytes @ 0x2
   490                           
   491  0022                     ??_startThreeHoursTimer:	
   492                           ; 0 bytes @ 0x2
   493                           
   494  0022                     ??_startOneHoursTimer:	
   495                           ; 0 bytes @ 0x2
   496                           
   497  0022                     ??_Filter:	
   498                           ; 0 bytes @ 0x2
   499                           
   500  0022                     adc_test_init@channel:	
   501                           ; 0 bytes @ 0x2
   502                           
   503                           
   504                           ; 1 bytes @ 0x2
   505  0022                     	ds	1
   506  0023                     ??_process_AD_Converter_Value:	
   507                           
   508                           ; 0 bytes @ 0x3
   509  0023                     	ds	3
   510  0026                     Filter@filter_buf:	
   511                           
   512                           ; 24 bytes @ 0x6
   513  0026                     	ds	24
   514  003E                     Filter@filter_temp:	
   515                           
   516                           ; 2 bytes @ 0x1E
   517  003E                     	ds	2
   518  0040                     Filter@filter_sum:	
   519                           
   520                           ; 2 bytes @ 0x20
   521  0040                     	ds	2
   522  0042                     Filter@tmpValue:	
   523                           
   524                           ; 1 bytes @ 0x22
   525  0042                     	ds	1
   526  0043                     Filter@cir:	
   527                           
   528                           ; 2 bytes @ 0x23
   529  0043                     	ds	2
   530  0045                     Filter@j:	
   531                           
   532                           ; 1 bytes @ 0x25
   533  0045                     	ds	1
   534  0046                     Filter@i:	
   535                           
   536                           ; 1 bytes @ 0x26
   537  0046                     	ds	1
   538  0047                     ?_getAdOriginalCh12Value:	
   539  0047                     ?_getAdOriginalCh13Value:	
   540                           ; 2 bytes @ 0x27
   541                           
   542                           
   543                           ; 2 bytes @ 0x27
   544  0047                     	ds	2
   545  0049                     ??_getAdOriginalCh12Value:	
   546  0049                     ??_getAdOriginalCh13Value:	
   547                           ; 0 bytes @ 0x29
   548                           
   549  0049                     ??_calPulseWidth:	
   550                           ; 0 bytes @ 0x29
   551                           
   552  0049                     calPulseWidth@uiGapValue:	
   553                           ; 0 bytes @ 0x29
   554                           
   555                           
   556                           ; 2 bytes @ 0x29
   557  0049                     	ds	2
   558  004B                     calPulseWidth@ucThreeTimesValue:	
   559                           
   560                           ; 1 bytes @ 0x2B
   561  004B                     	ds	1
   562  004C                     calPulseWidth@ucHalfValue:	
   563                           
   564                           ; 1 bytes @ 0x2C
   565  004C                     	ds	1
   566  004D                     calPulseWidth@ucGapValue:	
   567                           
   568                           ; 1 bytes @ 0x2D
   569  004D                     	ds	1
   570  004E                     calPulseWidth@uiChannel2Value:	
   571                           
   572                           ; 2 bytes @ 0x2E
   573  004E                     	ds	2
   574  0050                     calPulseWidth@ucPulseWidth:	
   575                           
   576                           ; 1 bytes @ 0x30
   577  0050                     	ds	1
   578  0051                     ??_main:	
   579  0051                     main@ucChValue:	
   580                           ; 0 bytes @ 0x31
   581                           
   582                           
   583                           ; 2 bytes @ 0x31
   584  0051                     	ds	2
   585  0053                     main@ucPulseWidth:	
   586                           
   587                           ; 1 bytes @ 0x33
   588  0053                     	ds	1
   589  0054                     main@uiCh13Value:	
   590                           
   591                           ; 2 bytes @ 0x34
   592  0054                     	ds	2
   593                           
   594                           	psect	maintext
   595  0013                     __pmaintext:	
   596 ;;Data sizes: Strings 0, constant 0, data 1, bss 106, persistent 0 stack 0
   597 ;;Auto spaces:   Size  Autos    Used
   598 ;; COMMON          14     13      14
   599 ;; BANK0           80     54      80
   600 ;; BANK1           80      0      80
   601 ;; BANK3           96      0       0
   602 ;; BANK2           96      0       0
   603 ;;
   604 ;; Pointer list with targets:
   605 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   606 ;;
   607 ;; ?_getAdOriginalCh13Value	unsigned int  size(1) Largest target is 0
   608 ;;
   609 ;; ?_getAdOriginalCh12Value	unsigned int  size(1) Largest target is 0
   610 ;;
   611 ;; ?_Filter	unsigned int  size(1) Largest target is 0
   612 ;;
   613 ;; Filter@tmpValue	PTR int  size(1) Largest target is 24
   614 ;;		 -> uiSampleChannelFourteenth(BANK1[24]), uiSampleChannelFourth(BANK1[24]), uiSampleChannelFirst(BANK1[24]), 
   615 ;;
   616 ;;
   617 ;; Critical Paths under _main in COMMON
   618 ;;
   619 ;;   None.
   620 ;;
   621 ;; Critical Paths under _ISR in COMMON
   622 ;;
   623 ;;   _ISR->_vPutSampleDataIntoTable
   624 ;;   _vPutSampleDataIntoTable->_adc_get
   625 ;;
   626 ;; Critical Paths under _main in BANK0
   627 ;;
   628 ;;   _main->_calPulseWidth
   629 ;;   _calPulseWidth->_getAdOriginalCh12Value
   630 ;;   _getAdOriginalCh13Value->_Filter
   631 ;;   _process_AD_Converter_Value->_adc_test_init
   632 ;;   _getAdOriginalCh12Value->_Filter
   633 ;;   _setPinInitVaule->_setPB3
   634 ;;   _setPinInitVaule->_setPB4
   635 ;;   _setPinInitVaule->_setPB5
   636 ;;   _initPin->_initPB3
   637 ;;   _initPin->_initPB4
   638 ;;   _initPin->_initPB5
   639 ;;
   640 ;; Critical Paths under _ISR in BANK0
   641 ;;
   642 ;;   None.
   643 ;;
   644 ;; Critical Paths under _main in BANK1
   645 ;;
   646 ;;   None.
   647 ;;
   648 ;; Critical Paths under _ISR in BANK1
   649 ;;
   650 ;;   None.
   651 ;;
   652 ;; Critical Paths under _main in BANK3
   653 ;;
   654 ;;   None.
   655 ;;
   656 ;; Critical Paths under _ISR in BANK3
   657 ;;
   658 ;;   None.
   659 ;;
   660 ;; Critical Paths under _main in BANK2
   661 ;;
   662 ;;   None.
   663 ;;
   664 ;; Critical Paths under _ISR in BANK2
   665 ;;
   666 ;;   None.
   667 ;;
   668 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   669 ;;
   670 ;;
   671 ;;Call Graph Tables:
   672 ;;
   673 ;; ---------------------------------------------------------------------------------
   674 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   675 ;; ---------------------------------------------------------------------------------
   676 ;; (0) _main                                                 5     5      0    2007
   677 ;;                                             49 BANK0      5     5      0
   678 ;;                            _initPin
   679 ;;                    _setPinInitVaule
   680 ;;                    _selectAdChannel
   681 ;;                       _clock_config
   682 ;;                      _timer1_config
   683 ;;            _timer1_interrupt_config
   684 ;;                      _adc_test_init
   685 ;;                          _adc_start
   686 ;;                _startTwentyMinTimer
   687 ;;         _process_AD_Converter_Value
   688 ;;                 _isPermitSampleTime
   689 ;;                       _clrSampeTime
   690 ;;                      _calPulseWidth
   691 ;;                          _pwm_start
   692 ;;           _isFinishedTwentyMinTimer
   693 ;;             _getAdOriginalCh13Value
   694 ;;                             _setPB3
   695 ;;                             _setPB4
   696 ;;                             _setPB5
   697 ;;                _clearTwentyMinTimer
   698 ;;               _startTwelveHourTimer
   699 ;;         _isFinishedTwelveHoursTimer
   700 ;;              _clearTwelveHoursTimer
   701 ;;               _startThreeHoursTimer
   702 ;;          _isFinishedThreeHoursTimer
   703 ;;               _clearThreeHoursTimer
   704 ;;                 _startOneHoursTimer
   705 ;;            _isFinishedOneHoursTimer
   706 ;;                              _reset
   707 ;; ---------------------------------------------------------------------------------
   708 ;; (1) _calPulseWidth                                        8     8      0     855
   709 ;;                                             41 BANK0      8     8      0
   710 ;;             _getAdOriginalCh12Value
   711 ;; ---------------------------------------------------------------------------------
   712 ;; (1) _getAdOriginalCh13Value                               2     0      2     620
   713 ;;                                             39 BANK0      2     0      2
   714 ;;                             _Filter
   715 ;; ---------------------------------------------------------------------------------
   716 ;; (1) _process_AD_Converter_Value                           0     0      0      66
   717 ;;                  _getAD_ConvertFlag
   718 ;;                  _setAD_ConvertFlag
   719 ;;                          _AD_Sample
   720 ;;                      _adc_test_init
   721 ;;                          _adc_start
   722 ;; ---------------------------------------------------------------------------------
   723 ;; (2) _getAdOriginalCh12Value                               2     0      2     620
   724 ;;                                             39 BANK0      2     0      2
   725 ;;                             _Filter
   726 ;; ---------------------------------------------------------------------------------
   727 ;; (1) _setPinInitVaule                                      0     0      0      66
   728 ;;                             _setPB3
   729 ;;                             _setPB4
   730 ;;                             _setPB5
   731 ;; ---------------------------------------------------------------------------------
   732 ;; (1) _initPin                                              0     0      0      66
   733 ;;           _initPB2_AsHighResistence
   734 ;;                            _initPB3
   735 ;;                            _initPB4
   736 ;;                            _initPB5
   737 ;; ---------------------------------------------------------------------------------
   738 ;; (2) _AD_Sample                                            0     0      0       0
   739 ;; ---------------------------------------------------------------------------------
   740 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   741 ;;                                              0 BANK0      1     1      0
   742 ;; ---------------------------------------------------------------------------------
   743 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   744 ;; ---------------------------------------------------------------------------------
   745 ;; (2) _Filter                                              39    37      2     620
   746 ;;                                              0 BANK0     39    37      2
   747 ;; ---------------------------------------------------------------------------------
   748 ;; (1) _isFinishedOneHoursTimer                              0     0      0       0
   749 ;; ---------------------------------------------------------------------------------
   750 ;; (1) _startOneHoursTimer                                   2     0      2      22
   751 ;;                                              0 BANK0      2     0      2
   752 ;; ---------------------------------------------------------------------------------
   753 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   754 ;; ---------------------------------------------------------------------------------
   755 ;; (1) _startThreeHoursTimer                                 2     0      2      22
   756 ;;                                              0 BANK0      2     0      2
   757 ;; ---------------------------------------------------------------------------------
   758 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   759 ;; ---------------------------------------------------------------------------------
   760 ;; (1) _startTwelveHourTimer                                 2     0      2      22
   761 ;;                                              0 BANK0      2     0      2
   762 ;; ---------------------------------------------------------------------------------
   763 ;; (1) _clearTwentyMinTimer                                  0     0      0       0
   764 ;; ---------------------------------------------------------------------------------
   765 ;; (1) _isFinishedTwentyMinTimer                             0     0      0       0
   766 ;; ---------------------------------------------------------------------------------
   767 ;; (1) _clrSampeTime                                         0     0      0       0
   768 ;; ---------------------------------------------------------------------------------
   769 ;; (1) _isPermitSampleTime                                   0     0      0       0
   770 ;; ---------------------------------------------------------------------------------
   771 ;; (1) _startTwentyMinTimer                                  2     0      2      22
   772 ;;                                              0 BANK0      2     0      2
   773 ;; ---------------------------------------------------------------------------------
   774 ;; (2) _adc_start                                            0     0      0       0
   775 ;; ---------------------------------------------------------------------------------
   776 ;; (2) _adc_test_init                                        3     2      1      44
   777 ;;                                              0 BANK0      3     2      1
   778 ;; ---------------------------------------------------------------------------------
   779 ;; (1) _timer1_interrupt_config                              0     0      0       0
   780 ;; ---------------------------------------------------------------------------------
   781 ;; (1) _timer1_config                                        0     0      0       0
   782 ;; ---------------------------------------------------------------------------------
   783 ;; (1) _clock_config                                         0     0      0       0
   784 ;; ---------------------------------------------------------------------------------
   785 ;; (1) _reset                                                0     0      0       0
   786 ;; ---------------------------------------------------------------------------------
   787 ;; (1) _selectAdChannel                                      0     0      0       0
   788 ;; ---------------------------------------------------------------------------------
   789 ;; (1) _pwm_start                                            1     1      0      22
   790 ;;                                              0 BANK0      1     1      0
   791 ;; ---------------------------------------------------------------------------------
   792 ;; (2) _initPB2_AsHighResistence                             0     0      0       0
   793 ;; ---------------------------------------------------------------------------------
   794 ;; (1) _setPB5                                               1     1      0      22
   795 ;;                                              0 BANK0      1     1      0
   796 ;; ---------------------------------------------------------------------------------
   797 ;; (2) _initPB5                                              1     1      0      22
   798 ;;                                              0 BANK0      1     1      0
   799 ;; ---------------------------------------------------------------------------------
   800 ;; (1) _setPB4                                               1     1      0      22
   801 ;;                                              0 BANK0      1     1      0
   802 ;; ---------------------------------------------------------------------------------
   803 ;; (2) _initPB4                                              1     1      0      22
   804 ;;                                              0 BANK0      1     1      0
   805 ;; ---------------------------------------------------------------------------------
   806 ;; (1) _setPB3                                               1     1      0      22
   807 ;;                                              0 BANK0      1     1      0
   808 ;; ---------------------------------------------------------------------------------
   809 ;; (2) _initPB3                                              1     1      0      22
   810 ;;                                              0 BANK0      1     1      0
   811 ;; ---------------------------------------------------------------------------------
   812 ;; (1) _clearThreeHoursTimer                                 0     0      0       0
   813 ;; ---------------------------------------------------------------------------------
   814 ;; (1) _clearTwelveHoursTimer                                0     0      0       0
   815 ;; ---------------------------------------------------------------------------------
   816 ;; Estimated maximum stack depth 2
   817 ;; ---------------------------------------------------------------------------------
   818 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   819 ;; ---------------------------------------------------------------------------------
   820 ;; (4) _ISR                                                  4     4      0     407
   821 ;;                                              9 COMMON     4     4      0
   822 ;;                i1_setAD_ConvertFlag
   823 ;;                            _adc_get
   824 ;;            _vPutSampleDataIntoTable
   825 ;; ---------------------------------------------------------------------------------
   826 ;; (5) i1_setAD_ConvertFlag                                  1     1      0      73
   827 ;;                                              0 COMMON     1     1      0
   828 ;; ---------------------------------------------------------------------------------
   829 ;; (5) _adc_get                                              4     2      2      24
   830 ;;                                              0 COMMON     4     2      2
   831 ;; ---------------------------------------------------------------------------------
   832 ;; (5) _vPutSampleDataIntoTable                              5     2      3     310
   833 ;;                                              4 COMMON     5     2      3
   834 ;;                            _adc_get (ARG)
   835 ;; ---------------------------------------------------------------------------------
   836 ;; Estimated maximum stack depth 5
   837 ;; ---------------------------------------------------------------------------------
   838 ;; Call Graph Graphs:
   839 ;; _main (ROOT)
   840 ;;   _initPin
   841 ;;     _initPB2_AsHighResistence
   842 ;;     _initPB3
   843 ;;     _initPB4
   844 ;;     _initPB5
   845 ;;   _setPinInitVaule
   846 ;;     _setPB3
   847 ;;     _setPB4
   848 ;;     _setPB5
   849 ;;   _selectAdChannel
   850 ;;   _clock_config
   851 ;;   _timer1_config
   852 ;;   _timer1_interrupt_config
   853 ;;   _adc_test_init
   854 ;;   _adc_start
   855 ;;   _startTwentyMinTimer
   856 ;;   _process_AD_Converter_Value
   857 ;;     _getAD_ConvertFlag
   858 ;;     _setAD_ConvertFlag
   859 ;;     _AD_Sample
   860 ;;     _adc_test_init
   861 ;;     _adc_start
   862 ;;   _isPermitSampleTime
   863 ;;   _clrSampeTime
   864 ;;   _calPulseWidth
   865 ;;     _getAdOriginalCh12Value
   866 ;;       _Filter
   867 ;;   _pwm_start
   868 ;;   _isFinishedTwentyMinTimer
   869 ;;   _getAdOriginalCh13Value
   870 ;;     _Filter
   871 ;;   _setPB3
   872 ;;   _setPB4
   873 ;;   _setPB5
   874 ;;   _clearTwentyMinTimer
   875 ;;   _startTwelveHourTimer
   876 ;;   _isFinishedTwelveHoursTimer
   877 ;;   _clearTwelveHoursTimer
   878 ;;   _startThreeHoursTimer
   879 ;;   _isFinishedThreeHoursTimer
   880 ;;   _clearThreeHoursTimer
   881 ;;   _startOneHoursTimer
   882 ;;   _isFinishedOneHoursTimer
   883 ;;   _reset
   884 ;;
   885 ;; _ISR (ROOT)
   886 ;;   i1_setAD_ConvertFlag
   887 ;;   _adc_get
   888 ;;   _vPutSampleDataIntoTable
   889 ;;     _adc_get (ARG)
   890 ;;
   891 ;; Address spaces:
   892 ;;Name               Size   Autos  Total    Cost      Usage
   893 ;;BANK3               60      0       0      10        0.0%
   894 ;;BITBANK3            60      0       0       9        0.0%
   895 ;;SFR3                 0      0       0       4        0.0%
   896 ;;BITSFR3              0      0       0       4        0.0%
   897 ;;BANK2               60      0       0      12        0.0%
   898 ;;BITBANK2            60      0       0      11        0.0%
   899 ;;SFR2                 0      0       0       5        0.0%
   900 ;;BITSFR2              0      0       0       5        0.0%
   901 ;;SFR1                 0      0       0       2        0.0%
   902 ;;BITSFR1              0      0       0       2        0.0%
   903 ;;BANK1               50      0      50       8      100.0%
   904 ;;BITBANK1            50      0       0       7        0.0%
   905 ;;CODE                 0      0       0       0        0.0%
   906 ;;DATA                 0      0      B5       6        0.0%
   907 ;;ABS                  0      0      AE       3        0.0%
   908 ;;NULL                 0      0       0       0        0.0%
   909 ;;STACK                0      0       7       2        0.0%
   910 ;;BANK0               50     36      50       5      100.0%
   911 ;;BITBANK0            50      0       0       4        0.0%
   912 ;;SFR0                 0      0       0       1        0.0%
   913 ;;BITSFR0              0      0       0       1        0.0%
   914 ;;COMMON               E      D       E       1      100.0%
   915 ;;BITCOMMON            E      0       0       0        0.0%
   916                           
   917                           
   918 ;; *************** function _main *****************
   919 ;; Defined at:
   920 ;;		line 544 in file "D:\develop\190625\AK7030-OTP\main.c"
   921 ;; Parameters:    Size  Location     Type
   922 ;;		None
   923 ;; Auto vars:     Size  Location     Type
   924 ;;  ucChValue       2   49[BANK0 ] unsigned int 
   925 ;;  uiCh13Value     2   52[BANK0 ] unsigned int 
   926 ;;  ucPulseWidth    1   51[BANK0 ] unsigned char 
   927 ;; Return value:  Size  Location     Type
   928 ;;                  2  738[COMMON] int 
   929 ;; Registers used:
   930 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   931 ;; Tracked objects:
   932 ;;		On entry : 17F/0
   933 ;;		On exit  : 60/0
   934 ;;		Unchanged: FFE00/0
   935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   936 ;;      Params:         0       0       0       0       0
   937 ;;      Locals:         0       5       0       0       0
   938 ;;      Temps:          0       0       0       0       0
   939 ;;      Totals:         0       5       0       0       0
   940 ;;Total ram usage:        5 bytes
   941 ;; Hardware stack levels required when called:    5
   942 ;; This function calls:
   943 ;;		_initPin
   944 ;;		_setPinInitVaule
   945 ;;		_selectAdChannel
   946 ;;		_clock_config
   947 ;;		_timer1_config
   948 ;;		_timer1_interrupt_config
   949 ;;		_adc_test_init
   950 ;;		_adc_start
   951 ;;		_startTwentyMinTimer
   952 ;;		_process_AD_Converter_Value
   953 ;;		_isPermitSampleTime
   954 ;;		_clrSampeTime
   955 ;;		_calPulseWidth
   956 ;;		_pwm_start
   957 ;;		_isFinishedTwentyMinTimer
   958 ;;		_getAdOriginalCh13Value
   959 ;;		_setPB3
   960 ;;		_setPB4
   961 ;;		_setPB5
   962 ;;		_clearTwentyMinTimer
   963 ;;		_startTwelveHourTimer
   964 ;;		_isFinishedTwelveHoursTimer
   965 ;;		_clearTwelveHoursTimer
   966 ;;		_startThreeHoursTimer
   967 ;;		_isFinishedThreeHoursTimer
   968 ;;		_clearThreeHoursTimer
   969 ;;		_startOneHoursTimer
   970 ;;		_isFinishedOneHoursTimer
   971 ;;		_reset
   972 ;; This function is called by:
   973 ;;		Startup code after reset
   974 ;; This function uses a non-reentrant model
   975 ;;
   976  0013                     _main:	
   977                           
   978                           ;main.c: 555: initPin();
   979                           
   980                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   981  0013  118A  23E2  118A   	fcall	_initPin
   982                           
   983                           ;main.c: 556: setPinInitVaule();
   984  0016  118A  2413  118A   	fcall	_setPinInitVaule
   985                           
   986                           ;main.c: 557: selectAdChannel();
   987  0019  118A  24DE  118A   	fcall	_selectAdChannel
   988                           
   989                           ;main.c: 559: clock_config();
   990  001C  118A  24CD  118A   	fcall	_clock_config
   991                           
   992                           ;main.c: 560: timer1_config();
   993  001F  118A  24BB  118A   	fcall	_timer1_config
   994                           
   995                           ;main.c: 561: timer1_interrupt_config();
   996  0022  118A  24EA  118A   	fcall	_timer1_interrupt_config
   997                           
   998                           ;main.c: 563: adc_test_init(12,3);
   999  0025  3003               	movlw	3
  1000  0026  1283               	bcf	3,5	;RP0=0, select bank0
  1001  0027  00A0               	movwf	?_adc_test_init
  1002  0028  300C               	movlw	12
  1003  0029  118A  23CA  118A   	fcall	_adc_test_init
  1004                           
  1005                           ;main.c: 570: adc_start();
  1006  002C  118A  23DF  118A   	fcall	_adc_start
  1007                           
  1008                           ;main.c: 577: startTwentyMinTimer( 60 );
  1009  002F  303C               	movlw	60
  1010  0030  00A0               	movwf	?_startTwentyMinTimer
  1011  0031  01A1               	clrf	?_startTwentyMinTimer+1
  1012  0032  118A  2485  118A   	fcall	_startTwentyMinTimer
  1013  0035                     l3685:	
  1014  0035  0064               	clrwdt	;#
  1015                           
  1016                           ;main.c: 584: process_AD_Converter_Value();
  1017  0036  118A  2399  118A   	fcall	_process_AD_Converter_Value
  1018                           
  1019                           ;main.c: 586: if( isPermitSampleTime() )
  1020  0039  118A  24D5  118A   	fcall	_isPermitSampleTime
  1021  003C  3A00               	xorlw	0
  1022  003D  1903               	skipnz
  1023  003E  2835               	goto	l3685
  1024                           
  1025                           ;main.c: 587: {
  1026                           ;main.c: 590: clrSampeTime();
  1027  003F  118A  24ED  118A   	fcall	_clrSampeTime
  1028                           
  1029                           ;main.c: 598: enum systemStep {
  1030                           ;main.c: 599: INIT_STEP = 0,
  1031                           ;main.c: 600: START_UP_PWM_STEP,
  1032                           ;main.c: 601: CHECK_10_HOUR_TIMER_STEP,
  1033                           ;main.c: 602: STARTUP_3_HOUR_TIMER_STEP,
  1034                           ;main.c: 603: CHECK_3_HOUR_TIMER_STEP,
  1035                           ;main.c: 604: STARTUP_1_HOUR_TIMER_STEP,
  1036                           ;main.c: 605: CHECK_1_HOUR_TIMER_STEP,
  1037                           ;main.c: 606: READY_FOR_RESET_STEP = 99,
  1038                           ;main.c: 607: DELAY_ONE_SECOND_FOR_PWM,
  1039                           ;main.c: 608: MEET_RESET_CONDITION_STEP,
  1040                           ;main.c: 609: RESET_STEP,
  1041                           ;main.c: 610: };
  1042                           ;main.c: 612: static enum systemStep ucStep = INIT_STEP;
  1043  0042  3002               	movlw	2
  1044  0043  026A               	subwf	main@ucStep,w
  1045  0044  1C03               	skipc
  1046  0045  29A8               	goto	l3861
  1047  0046  3063               	movlw	99
  1048  0047  026A               	subwf	main@ucStep,w
  1049  0048  1803               	skipnc
  1050  0049  29A8               	goto	l3861
  1051                           
  1052                           ;main.c: 615: pwm_start( calPulseWidth() );
  1053  004A  118A  21D4  118A   	fcall	_calPulseWidth
  1054  004D  118A  2434  118A   	fcall	_pwm_start
  1055  0050  29A8               	goto	l3861
  1056  0051                     l3699:	
  1057                           
  1058                           ;main.c: 621: {
  1059                           ;main.c: 626: static unsigned char ucTimerP3s = 0;
  1060                           ;main.c: 628: if( isFinishedTwentyMinTimer() )
  1061  0051  118A  24B1  118A   	fcall	_isFinishedTwentyMinTimer
  1062  0054  3A00               	xorlw	0
  1063  0055  1903               	skipnz
  1064  0056  285B               	goto	l3705
  1065                           
  1066                           ;main.c: 629: {
  1067                           ;main.c: 630: ucStep = READY_FOR_RESET_STEP;
  1068  0057  3063               	movlw	99
  1069  0058  00EA               	movwf	main@ucStep
  1070                           
  1071                           ;main.c: 631: ucTimerP3s = 0;
  1072  0059  01EB               	clrf	main@ucTimerP3s
  1073                           
  1074                           ;main.c: 632: }
  1075  005A  2835               	goto	l3685
  1076  005B                     l3705:	
  1077                           
  1078                           ;main.c: 633: else
  1079                           ;main.c: 634: {
  1080                           ;main.c: 635: if( getAdOriginalCh13Value() > 90 )
  1081  005B  118A  21CD  118A   	fcall	_getAdOriginalCh13Value
  1082  005E  3000               	movlw	0
  1083  005F  0248               	subwf	?_getAdOriginalCh13Value+1,w
  1084  0060  305B               	movlw	91
  1085  0061  1903               	skipnz
  1086  0062  0247               	subwf	?_getAdOriginalCh13Value,w
  1087  0063  1C03               	skipc
  1088  0064  2867               	goto	l3709
  1089                           
  1090                           ;main.c: 636: {
  1091                           ;main.c: 637: ucTimerP3s++;
  1092  0065  0AEB               	incf	main@ucTimerP3s,f
  1093                           
  1094                           ;main.c: 638: }
  1095  0066  2868               	goto	l3711
  1096  0067                     l3709:	
  1097                           
  1098                           ;main.c: 639: else
  1099                           ;main.c: 640: ucTimerP3s = 0;
  1100  0067  01EB               	clrf	main@ucTimerP3s
  1101  0068                     l3711:	
  1102                           
  1103                           ;main.c: 642: if( ucTimerP3s >= 3)
  1104  0068  3003               	movlw	3
  1105  0069  026B               	subwf	main@ucTimerP3s,w
  1106  006A  1C03               	skipc
  1107  006B  2835               	goto	l3685
  1108                           
  1109                           ;main.c: 643: {
  1110                           ;main.c: 644: ucTimerP3s = 0;
  1111  006C  01EB               	clrf	main@ucTimerP3s
  1112                           
  1113                           ;main.c: 645: ucStep = START_UP_PWM_STEP;
  1114  006D  01EA               	clrf	main@ucStep
  1115  006E  0AEA               	incf	main@ucStep,f
  1116  006F                     l749:	
  1117                           
  1118                           ;main.c: 646: }
  1119                           ;main.c: 648: }
  1120                           ;main.c: 652: break;
  1121  006F  2835               	goto	l3685
  1122  0070                     l3717:	
  1123                           
  1124                           ;main.c: 662: ucPulseWidth = calPulseWidth();
  1125  0070  118A  21D4  118A   	fcall	_calPulseWidth
  1126  0073  00D3               	movwf	main@ucPulseWidth
  1127                           
  1128                           ;main.c: 664: pwm_start( ucPulseWidth );
  1129  0074  0853               	movf	main@ucPulseWidth,w
  1130  0075  118A  2434  118A   	fcall	_pwm_start
  1131                           
  1132                           ;main.c: 666: setPB3(0);
  1133  0078  3000               	movlw	0
  1134  0079  118A  241B  118A   	fcall	_setPB3
  1135                           
  1136                           ;main.c: 667: setPB4(1);
  1137  007C  3001               	movlw	1
  1138  007D  118A  2424  118A   	fcall	_setPB4
  1139                           
  1140                           ;main.c: 668: setPB5(0);
  1141  0080  3000               	movlw	0
  1142  0081  118A  242C  118A   	fcall	_setPB5
  1143                           
  1144                           ;main.c: 669: clearTwentyMinTimer();
  1145  0084  118A  24DA  118A   	fcall	_clearTwentyMinTimer
  1146                           
  1147                           ;main.c: 670: startTwelveHourTimer( 240);
  1148  0087  30F0               	movlw	240
  1149  0088  00A0               	movwf	?_startTwelveHourTimer
  1150  0089  01A1               	clrf	?_startTwelveHourTimer+1
  1151  008A  118A  2477  118A   	fcall	_startTwelveHourTimer
  1152                           
  1153                           ;main.c: 671: ucStep = CHECK_10_HOUR_TIMER_STEP;
  1154  008D  3002               	movlw	2
  1155  008E  29A4               	goto	L8
  1156  008F                     l3735:	
  1157                           ;main.c: 672: break;
  1158                           
  1159                           
  1160                           ;main.c: 676: {
  1161                           ;main.c: 681: static unsigned char ucTimerP5s = 0;
  1162                           ;main.c: 683: if( isFinishedTwelveHoursTimer () )
  1163  008F  118A  24A7  118A   	fcall	_isFinishedTwelveHoursTimer
  1164  0092  3A00               	xorlw	0
  1165  0093  1903               	skipnz
  1166  0094  2897               	goto	l3739
  1167  0095                     l3737:	
  1168                           
  1169                           ;main.c: 684: ucStep = READY_FOR_RESET_STEP;
  1170  0095  3063               	movlw	99
  1171  0096  29A4               	goto	L8
  1172  0097                     l3739:	
  1173                           
  1174                           ;main.c: 685: else
  1175                           ;main.c: 686: {
  1176                           ;main.c: 687: if( getAdOriginalCh13Value() < 200 )
  1177  0097  118A  21CD  118A   	fcall	_getAdOriginalCh13Value
  1178  009A  3000               	movlw	0
  1179  009B  0248               	subwf	?_getAdOriginalCh13Value+1,w
  1180  009C  30C8               	movlw	200
  1181  009D  1903               	skipnz
  1182  009E  0247               	subwf	?_getAdOriginalCh13Value,w
  1183  009F  1803               	skipnc
  1184  00A0  28A3               	goto	l3743
  1185                           
  1186                           ;main.c: 688: ucTimerP5s++;
  1187  00A1  0AEC               	incf	main@ucTimerP5s,f
  1188  00A2  28A4               	goto	l3745
  1189  00A3                     l3743:	
  1190                           
  1191                           ;main.c: 689: else
  1192                           ;main.c: 690: ucTimerP5s = 0;
  1193  00A3  01EC               	clrf	main@ucTimerP5s
  1194  00A4                     l3745:	
  1195                           
  1196                           ;main.c: 692: if( ucTimerP5s > 5)
  1197  00A4  3006               	movlw	6
  1198  00A5  026C               	subwf	main@ucTimerP5s,w
  1199  00A6  1C03               	skipc
  1200  00A7  2835               	goto	l3685
  1201  00A8  3003               	movlw	3
  1202                           
  1203                           ;main.c: 693: {
  1204                           ;main.c: 694: ucTimerP5s = 0;
  1205  00A9  01EC               	clrf	main@ucTimerP5s
  1206                           
  1207                           ;main.c: 695: ucStep = STARTUP_3_HOUR_TIMER_STEP;
  1208  00AA  29A4               	goto	L8
  1209  00AB                     l3751:	
  1210                           
  1211                           ;main.c: 703: {
  1212                           ;main.c: 704: clearTwelveHoursTimer();
  1213  00AB  118A  24E6  118A   	fcall	_clearTwelveHoursTimer
  1214                           
  1215                           ;main.c: 705: startThreeHoursTimer(180);
  1216  00AE  30B4               	movlw	180
  1217  00AF  00A0               	movwf	?_startThreeHoursTimer
  1218  00B0  01A1               	clrf	?_startThreeHoursTimer+1
  1219  00B1  118A  2469  118A   	fcall	_startThreeHoursTimer
  1220                           
  1221                           ;main.c: 706: ucStep = CHECK_3_HOUR_TIMER_STEP;
  1222  00B4  3004               	movlw	4
  1223  00B5  29A4               	goto	L8
  1224  00B6                     l3755:	
  1225                           ;main.c: 707: break;
  1226                           
  1227                           
  1228                           ;main.c: 711: {
  1229                           ;main.c: 712: static unsigned char ucTimerP5s = 0;
  1230                           ;main.c: 714: if( isFinishedThreeHoursTimer() )
  1231  00B6  118A  249D  118A   	fcall	_isFinishedThreeHoursTimer
  1232  00B9  3A00               	xorlw	0
  1233  00BA  1D03               	btfss	3,2
  1234  00BB  2895               	goto	l3737
  1235                           
  1236                           ;main.c: 716: else
  1237                           ;main.c: 717: {
  1238                           ;main.c: 718: if( getAdOriginalCh13Value() < 85 )
  1239  00BC  118A  21CD  118A   	fcall	_getAdOriginalCh13Value
  1240  00BF  3000               	movlw	0
  1241  00C0  0248               	subwf	?_getAdOriginalCh13Value+1,w
  1242  00C1  3055               	movlw	85
  1243  00C2  1903               	skipnz
  1244  00C3  0247               	subwf	?_getAdOriginalCh13Value,w
  1245  00C4  1803               	skipnc
  1246  00C5  28C8               	goto	l3763
  1247                           
  1248                           ;main.c: 719: ucTimerP5s++;
  1249  00C6  0AE8               	incf	main@cTimerP5s_787,f
  1250  00C7  28C9               	goto	l3765
  1251  00C8                     l3763:	
  1252                           
  1253                           ;main.c: 720: else
  1254                           ;main.c: 721: ucTimerP5s = 0;
  1255  00C8  01E8               	clrf	main@cTimerP5s_787
  1256  00C9                     l3765:	
  1257                           
  1258                           ;main.c: 723: if( ucTimerP5s > 5)
  1259  00C9  3006               	movlw	6
  1260  00CA  0268               	subwf	main@cTimerP5s_787,w
  1261  00CB  1C03               	skipc
  1262  00CC  2835               	goto	l3685
  1263  00CD  3005               	movlw	5
  1264                           
  1265                           ;main.c: 724: {
  1266                           ;main.c: 725: ucTimerP5s = 0;
  1267  00CE  01E8               	clrf	main@cTimerP5s_787
  1268                           
  1269                           ;main.c: 726: ucStep = STARTUP_1_HOUR_TIMER_STEP;
  1270  00CF  29A4               	goto	L8
  1271  00D0                     l3771:	
  1272                           
  1273                           ;main.c: 733: {
  1274                           ;main.c: 734: clearThreeHoursTimer();
  1275  00D0  118A  24E2  118A   	fcall	_clearThreeHoursTimer
  1276                           
  1277                           ;main.c: 735: startOneHoursTimer( 120 );
  1278  00D3  3078               	movlw	120
  1279  00D4  00A0               	movwf	?_startOneHoursTimer
  1280  00D5  01A1               	clrf	?_startOneHoursTimer+1
  1281  00D6  118A  245B  118A   	fcall	_startOneHoursTimer
  1282                           
  1283                           ;main.c: 736: setPB3(1);
  1284  00D9  3001               	movlw	1
  1285  00DA  118A  241B  118A   	fcall	_setPB3
  1286                           
  1287                           ;main.c: 737: setPB4(0);
  1288  00DD  3000               	movlw	0
  1289  00DE  118A  2424  118A   	fcall	_setPB4
  1290                           
  1291                           ;main.c: 738: setPB5(1);
  1292  00E1  3001               	movlw	1
  1293  00E2  118A  242C  118A   	fcall	_setPB5
  1294                           
  1295                           ;main.c: 739: ucStep = CHECK_1_HOUR_TIMER_STEP;
  1296  00E5  3006               	movlw	6
  1297  00E6  29A4               	goto	L8
  1298  00E7                     l3783:	
  1299                           ;main.c: 740: break;
  1300                           
  1301                           
  1302                           ;main.c: 744: {
  1303                           ;main.c: 749: static unsigned int uiTimerOneP5s = 0;
  1304                           ;main.c: 750: static unsigned int uiTimerTwoP5s = 0;
  1305                           ;main.c: 751: static unsigned int uiTimerThreeP5s = 0;
  1306                           ;main.c: 753: unsigned int uiCh13Value = getAdOriginalCh13Value();
  1307  00E7  118A  21CD  118A   	fcall	_getAdOriginalCh13Value
  1308  00EA  0848               	movf	?_getAdOriginalCh13Value+1,w
  1309  00EB  00D5               	movwf	main@uiCh13Value+1
  1310  00EC  0847               	movf	?_getAdOriginalCh13Value,w
  1311  00ED  00D4               	movwf	main@uiCh13Value
  1312                           
  1313                           ;main.c: 756: if( isFinishedOneHoursTimer() )
  1314  00EE  118A  2493  118A   	fcall	_isFinishedOneHoursTimer
  1315  00F1  3A00               	xorlw	0
  1316  00F2  1D03               	btfss	3,2
  1317  00F3  2895               	goto	l3737
  1318                           
  1319                           ;main.c: 758: else
  1320                           ;main.c: 759: {
  1321                           ;main.c: 760: if( uiCh13Value > 100 )
  1322  00F4  3000               	movlw	0
  1323  00F5  0255               	subwf	main@uiCh13Value+1,w
  1324  00F6  3065               	movlw	101
  1325  00F7  1903               	skipnz
  1326  00F8  0254               	subwf	main@uiCh13Value,w
  1327  00F9  1C03               	skipc
  1328  00FA  290B               	goto	l3799
  1329                           
  1330                           ;main.c: 761: {
  1331                           ;main.c: 762: if( uiTimerOneP5s <= 5 )
  1332  00FB  3000               	movlw	0
  1333  00FC  025F               	subwf	main@uiTimerOneP5s+1,w
  1334  00FD  3006               	movlw	6
  1335  00FE  1903               	skipnz
  1336  00FF  025E               	subwf	main@uiTimerOneP5s,w
  1337  0100  1803               	skipnc
  1338  0101  2905               	goto	l3795
  1339                           
  1340                           ;main.c: 763: uiTimerOneP5s++;
  1341  0102  0ADE               	incf	main@uiTimerOneP5s,f
  1342  0103  1903               	skipnz
  1343  0104  0ADF               	incf	main@uiTimerOneP5s+1,f
  1344  0105                     l3795:	
  1345                           
  1346                           ;main.c: 764: uiTimerTwoP5s = 0;
  1347  0105  1683               	bsf	3,5	;RP0=1, select bank1
  1348  0106  01A6               	clrf	main@uiTimerTwoP5s^(0+128)
  1349  0107  01A7               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1350                           
  1351                           ;main.c: 765: uiTimerThreeP5s = 0;
  1352  0108  01A4               	clrf	main@uiTimerThreeP5s^(0+128)
  1353  0109  01A5               	clrf	(main@uiTimerThreeP5s+1)^(0+128)
  1354                           
  1355                           ;main.c: 766: }
  1356  010A  290D               	goto	l3801
  1357  010B                     l3799:	
  1358                           
  1359                           ;main.c: 767: else
  1360                           ;main.c: 768: {
  1361                           ;main.c: 769: uiTimerOneP5s = 0;
  1362  010B  01DE               	clrf	main@uiTimerOneP5s
  1363  010C  01DF               	clrf	main@uiTimerOneP5s+1
  1364  010D                     l3801:	
  1365                           
  1366                           ;main.c: 770: }
  1367                           ;main.c: 773: if(uiTimerOneP5s > 5)
  1368  010D  3000               	movlw	0
  1369  010E  1283               	bcf	3,5	;RP0=0, select bank0
  1370  010F  025F               	subwf	main@uiTimerOneP5s+1,w
  1371  0110  3006               	movlw	6
  1372  0111  1903               	skipnz
  1373  0112  025E               	subwf	main@uiTimerOneP5s,w
  1374                           
  1375                           ;main.c: 774: {
  1376                           ;main.c: 775: setPB3(0);
  1377  0113  3000               	movlw	0
  1378  0114  1C03               	skipc
  1379  0115  2927               	goto	L9
  1380  0116  118A  241B  118A   	fcall	_setPB3
  1381                           
  1382                           ;main.c: 776: setPB4(1);
  1383  0119  3001               	movlw	1
  1384  011A  118A  2424  118A   	fcall	_setPB4
  1385                           
  1386                           ;main.c: 777: setPB5(0);
  1387  011D  3000               	movlw	0
  1388  011E  118A  242C  118A   	fcall	_setPB5
  1389                           
  1390                           ;main.c: 779: uiTimerOneP5s = 0;
  1391  0121  01DE               	clrf	main@uiTimerOneP5s
  1392  0122  01DF               	clrf	main@uiTimerOneP5s+1
  1393                           
  1394                           ;main.c: 780: uiTimerTwoP5s = 0;
  1395  0123  1683               	bsf	3,5	;RP0=1, select bank1
  1396  0124  01A6               	clrf	main@uiTimerTwoP5s^(0+128)
  1397  0125  01A7               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1398                           
  1399                           ;main.c: 781: }
  1400  0126  2835               	goto	l3685
  1401  0127                     L9:	
  1402                           ;main.c: 782: else
  1403                           ;main.c: 783: {
  1404                           ;main.c: 784: if( uiCh13Value < 90 )
  1405                           
  1406  0127  0255               	subwf	main@uiCh13Value+1,w
  1407  0128  305A               	movlw	90
  1408  0129  1903               	skipnz
  1409  012A  0254               	subwf	main@uiCh13Value,w
  1410  012B  1803               	skipnc
  1411  012C  2939               	goto	l3815
  1412                           
  1413                           ;main.c: 785: {
  1414                           ;main.c: 786: if( uiTimerTwoP5s <= 5)
  1415  012D  3000               	movlw	0
  1416  012E  1683               	bsf	3,5	;RP0=1, select bank1
  1417  012F  0227               	subwf	(main@uiTimerTwoP5s+1)^(0+128),w
  1418  0130  3006               	movlw	6
  1419  0131  1903               	skipnz
  1420  0132  0226               	subwf	main@uiTimerTwoP5s^(0+128),w
  1421  0133  1803               	skipnc
  1422  0134  293E               	goto	l3817
  1423                           
  1424                           ;main.c: 787: uiTimerTwoP5s++;
  1425  0135  0AA6               	incf	main@uiTimerTwoP5s^(0+128),f
  1426  0136  1903               	skipnz
  1427  0137  0AA7               	incf	(main@uiTimerTwoP5s+1)^(0+128),f
  1428  0138  293E               	goto	l3817
  1429  0139                     l3815:	
  1430                           
  1431                           ;main.c: 789: else
  1432                           ;main.c: 790: {
  1433                           ;main.c: 791: uiTimerTwoP5s = 0;
  1434  0139  1683               	bsf	3,5	;RP0=1, select bank1
  1435  013A  01A6               	clrf	main@uiTimerTwoP5s^(0+128)
  1436  013B  01A7               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1437                           
  1438                           ;main.c: 792: uiTimerThreeP5s = 0;
  1439  013C  01A4               	clrf	main@uiTimerThreeP5s^(0+128)
  1440  013D  01A5               	clrf	(main@uiTimerThreeP5s+1)^(0+128)
  1441  013E                     l3817:	
  1442                           
  1443                           ;main.c: 793: }
  1444                           ;main.c: 795: if(uiTimerTwoP5s > 5)
  1445  013E  3000               	movlw	0
  1446  013F  0227               	subwf	(main@uiTimerTwoP5s+1)^(0+128),w
  1447  0140  3006               	movlw	6
  1448  0141  1903               	skipnz
  1449  0142  0226               	subwf	main@uiTimerTwoP5s^(0+128),w
  1450  0143  1C03               	skipc
  1451  0144  2835               	goto	l3685
  1452                           
  1453                           ;main.c: 796: {
  1454                           ;main.c: 797: setPB3(1);
  1455  0145  3001               	movlw	1
  1456  0146  118A  241B  118A   	fcall	_setPB3
  1457                           
  1458                           ;main.c: 798: setPB4(0);
  1459  0149  3000               	movlw	0
  1460  014A  118A  2424  118A   	fcall	_setPB4
  1461                           
  1462                           ;main.c: 799: setPB5(1);
  1463  014D  3001               	movlw	1
  1464  014E  118A  242C  118A   	fcall	_setPB5
  1465                           
  1466                           ;main.c: 801: if(uiCh13Value < 25)
  1467  0151  3000               	movlw	0
  1468  0152  0255               	subwf	main@uiCh13Value+1,w
  1469  0153  3019               	movlw	25
  1470  0154  1903               	skipnz
  1471  0155  0254               	subwf	main@uiCh13Value,w
  1472  0156  1803               	skipnc
  1473  0157  295D               	goto	l3825
  1474                           
  1475                           ;main.c: 802: uiTimerThreeP5s++;
  1476  0158  1683               	bsf	3,5	;RP0=1, select bank1
  1477  0159  0AA4               	incf	main@uiTimerThreeP5s^(0+128),f
  1478  015A  1903               	skipnz
  1479  015B  0AA5               	incf	(main@uiTimerThreeP5s+1)^(0+128),f
  1480  015C  2960               	goto	l3827
  1481  015D                     l3825:	
  1482                           
  1483                           ;main.c: 803: else
  1484                           ;main.c: 804: uiTimerThreeP5s = 0;
  1485  015D  1683               	bsf	3,5	;RP0=1, select bank1
  1486  015E  01A4               	clrf	main@uiTimerThreeP5s^(0+128)
  1487  015F  01A5               	clrf	(main@uiTimerThreeP5s+1)^(0+128)
  1488  0160                     l3827:	
  1489                           
  1490                           ;main.c: 806: if(uiTimerThreeP5s > 5)
  1491  0160  3000               	movlw	0
  1492  0161  0225               	subwf	(main@uiTimerThreeP5s+1)^(0+128),w
  1493  0162  3006               	movlw	6
  1494  0163  1903               	skipnz
  1495  0164  0224               	subwf	main@uiTimerThreeP5s^(0+128),w
  1496  0165  1C03               	skipc
  1497  0166  2835               	goto	l3685
  1498  0167                     l3829:	
  1499                           
  1500                           ;main.c: 807: reset();
  1501  0167  118A  24EF  118A   	fcall	_reset
  1502  016A  2835               	goto	l3685
  1503  016B                     l3831:	
  1504                           
  1505                           ;main.c: 816: {
  1506                           ;main.c: 817: setPB3(0);
  1507  016B  3000               	movlw	0
  1508  016C  118A  241B  118A   	fcall	_setPB3
  1509                           
  1510                           ;main.c: 818: setPB4(0);
  1511  016F  3000               	movlw	0
  1512  0170  118A  2424  118A   	fcall	_setPB4
  1513                           
  1514                           ;main.c: 819: setPB5(1);
  1515  0173  3001               	movlw	1
  1516  0174  118A  242C  118A   	fcall	_setPB5
  1517                           
  1518                           ;main.c: 821: pwm_start(60);
  1519  0177  303C               	movlw	60
  1520  0178  118A  2434  118A   	fcall	_pwm_start
  1521                           
  1522                           ;main.c: 823: ucStep = DELAY_ONE_SECOND_FOR_PWM;
  1523  017B  3064               	movlw	100
  1524  017C  29A4               	goto	L8
  1525  017D                     l3835:	
  1526                           ;main.c: 824: break;
  1527                           
  1528                           
  1529                           ;main.c: 828: {
  1530                           ;main.c: 829: static unsigned ucDelay1s = 0;
  1531                           ;main.c: 830: if(ucDelay1s < 10)
  1532  017D  3000               	movlw	0
  1533  017E  1683               	bsf	3,5	;RP0=1, select bank1
  1534  017F  0223               	subwf	(main@ucDelay1s+1)^(0+128),w
  1535  0180  300A               	movlw	10
  1536  0181  1903               	skipnz
  1537  0182  0222               	subwf	main@ucDelay1s^(0+128),w
  1538  0183  1803               	skipnc
  1539  0184  2989               	goto	l3839
  1540                           
  1541                           ;main.c: 831: ucDelay1s++;
  1542  0185  0AA2               	incf	main@ucDelay1s^(0+128),f
  1543  0186  1903               	skipnz
  1544  0187  0AA3               	incf	(main@ucDelay1s+1)^(0+128),f
  1545  0188  2835               	goto	l3685
  1546  0189                     l3839:	
  1547  0189  3065               	movlw	101
  1548                           
  1549                           ;main.c: 832: else
  1550                           ;main.c: 833: {
  1551                           ;main.c: 834: ucDelay1s = 0;
  1552  018A  01A2               	clrf	main@ucDelay1s^(0+128)
  1553  018B  01A3               	clrf	(main@ucDelay1s+1)^(0+128)
  1554                           
  1555                           ;main.c: 835: ucStep = MEET_RESET_CONDITION_STEP;
  1556  018C  1283               	bcf	3,5	;RP0=0, select bank0
  1557  018D  29A4               	goto	L8
  1558  018E                     l3843:	
  1559                           
  1560                           ;main.c: 845: {
  1561                           ;main.c: 846: static unsigned char ucTimerP5s = 0;
  1562                           ;main.c: 847: unsigned int ucChValue = getAdOriginalCh13Value();
  1563  018E  118A  21CD  118A   	fcall	_getAdOriginalCh13Value
  1564  0191  0848               	movf	?_getAdOriginalCh13Value+1,w
  1565  0192  00D2               	movwf	main@ucChValue+1
  1566  0193  0847               	movf	?_getAdOriginalCh13Value,w
  1567  0194  00D1               	movwf	main@ucChValue
  1568                           
  1569                           ;main.c: 849: if( ucChValue > 50 )
  1570  0195  3000               	movlw	0
  1571  0196  0252               	subwf	main@ucChValue+1,w
  1572  0197  3033               	movlw	51
  1573  0198  1903               	skipnz
  1574  0199  0251               	subwf	main@ucChValue,w
  1575  019A  1C03               	skipc
  1576  019B  299E               	goto	l3849
  1577                           
  1578                           ;main.c: 850: ucTimerP5s++;
  1579  019C  0AE9               	incf	main@cTimerP5s_793,f
  1580  019D  299F               	goto	l3851
  1581  019E                     l3849:	
  1582                           
  1583                           ;main.c: 851: else
  1584                           ;main.c: 852: ucTimerP5s = 0;
  1585  019E  01E9               	clrf	main@cTimerP5s_793
  1586  019F                     l3851:	
  1587                           
  1588                           ;main.c: 854: if(ucTimerP5s > 5)
  1589  019F  3006               	movlw	6
  1590  01A0  0269               	subwf	main@cTimerP5s_793,w
  1591  01A1  1C03               	skipc
  1592  01A2  2835               	goto	l3685
  1593                           
  1594                           ;main.c: 855: ucStep = RESET_STEP;
  1595  01A3  3066               	movlw	102
  1596  01A4                     L8:	
  1597  01A4  00EA               	movwf	main@ucStep
  1598  01A5  2835               	goto	l3685
  1599  01A6                     l3855:	
  1600                           
  1601                           ;main.c: 860: {
  1602                           ;main.c: 861: ucStep = INIT_STEP;
  1603  01A6  01EA               	clrf	main@ucStep
  1604  01A7  2967               	goto	l3829
  1605  01A8                     l3861:	
  1606  01A8  086A               	movf	main@ucStep,w
  1607                           
  1608                           ; Switch size 1, requested type "space"
  1609                           ; Number of cases is 11, Range of values is 0 to 102
  1610                           ; switch strategies available:
  1611                           ; Name         Instructions Cycles
  1612                           ; simple_byte           34    18 (average)
  1613                           ; direct_byte          213     7 (fixed)
  1614                           ; jumptable            260     6 (fixed)
  1615                           ; rangetable           107     6 (fixed)
  1616                           ; spacedrange          212     9 (fixed)
  1617                           ; locatedrange         103     3 (fixed)
  1618                           ;	Chosen strategy is simple_byte
  1619  01A9  3A00               	xorlw	0	; case 0
  1620  01AA  1903               	skipnz
  1621  01AB  2851               	goto	l3699
  1622  01AC  3A01               	xorlw	1	; case 1
  1623  01AD  1903               	skipnz
  1624  01AE  2870               	goto	l3717
  1625  01AF  3A03               	xorlw	3	; case 2
  1626  01B0  1903               	skipnz
  1627  01B1  288F               	goto	l3735
  1628  01B2  3A01               	xorlw	1	; case 3
  1629  01B3  1903               	skipnz
  1630  01B4  28AB               	goto	l3751
  1631  01B5  3A07               	xorlw	7	; case 4
  1632  01B6  1903               	skipnz
  1633  01B7  28B6               	goto	l3755
  1634  01B8  3A01               	xorlw	1	; case 5
  1635  01B9  1903               	skipnz
  1636  01BA  28D0               	goto	l3771
  1637  01BB  3A03               	xorlw	3	; case 6
  1638  01BC  1903               	skipnz
  1639  01BD  28E7               	goto	l3783
  1640  01BE  3A65               	xorlw	101	; case 99
  1641  01BF  1903               	skipnz
  1642  01C0  296B               	goto	l3831
  1643  01C1  3A07               	xorlw	7	; case 100
  1644  01C2  1903               	skipnz
  1645  01C3  297D               	goto	l3835
  1646  01C4  3A01               	xorlw	1	; case 101
  1647  01C5  1903               	skipnz
  1648  01C6  298E               	goto	l3843
  1649  01C7  3A03               	xorlw	3	; case 102
  1650  01C8  1903               	skipnz
  1651  01C9  29A6               	goto	l3855
  1652  01CA  286F               	goto	l749
  1653  01CB  118A  2811         	ljmp	start
  1654  01CD                     __end_of_main:	
  1655                           
  1656                           	psect	text835
  1657  01CD                     __ptext835:	
  1658 ;; =============== function _calPulseWidth ends ============
  1659                           
  1660                           
  1661 ;; *************** function _getAdOriginalCh13Value *****************
  1662 ;; Defined at:
  1663 ;;		line 238 in file "D:\develop\190625\AK7030-OTP\common.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;		None
  1666 ;; Auto vars:     Size  Location     Type
  1667 ;;		None
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  2   39[BANK0 ] unsigned int 
  1670 ;; Registers used:
  1671 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1672 ;; Tracked objects:
  1673 ;;		On entry : 60/0
  1674 ;;		On exit  : 160/0
  1675 ;;		Unchanged: FFE00/0
  1676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1677 ;;      Params:         0       2       0       0       0
  1678 ;;      Locals:         0       0       0       0       0
  1679 ;;      Temps:          0       0       0       0       0
  1680 ;;      Totals:         0       2       0       0       0
  1681 ;;Total ram usage:        2 bytes
  1682 ;; Hardware stack levels used:    1
  1683 ;; Hardware stack levels required when called:    3
  1684 ;; This function calls:
  1685 ;;		_Filter
  1686 ;; This function is called by:
  1687 ;;		_main
  1688 ;; This function uses a non-reentrant model
  1689 ;;
  1690  01CD                     _getAdOriginalCh13Value:	
  1691                           
  1692                           ;common.c: 240: return Filter(uiSampleChannelFourth);
  1693                           
  1694                           ; Regs used in _getAdOriginalCh13Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  1695  01CD  30D8               	movlw	_uiSampleChannelFourth& (0+255)
  1696  01CE  2212               	fcall	_Filter
  1697  01CF  0821               	movf	?_Filter+1,w
  1698  01D0  00C8               	movwf	?_getAdOriginalCh13Value+1
  1699  01D1  0820               	movf	?_Filter,w
  1700  01D2  00C7               	movwf	?_getAdOriginalCh13Value
  1701  01D3  0008               	return
  1702  01D4                     __end_of_getAdOriginalCh13Value:	
  1703  01D4                     __ptext834:	
  1704 ;; =============== function _main ends ============
  1705                           
  1706                           
  1707 ;; *************** function _calPulseWidth *****************
  1708 ;; Defined at:
  1709 ;;		line 472 in file "D:\develop\190625\AK7030-OTP\main.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;		None
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;  uiGapValue      2   41[BANK0 ] unsigned int 
  1714 ;;  ucGapValue      1   45[BANK0 ] unsigned char 
  1715 ;;  ucHalfValue     1   44[BANK0 ] unsigned char 
  1716 ;;  ucThreeTimes    1   43[BANK0 ] unsigned char 
  1717 ;;  uiChannel2Va    2   46[BANK0 ] unsigned int 
  1718 ;;  ucPulseWidth    1   48[BANK0 ] unsigned char 
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  1    wreg      unsigned char 
  1721 ;; Registers used:
  1722 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1723 ;; Tracked objects:
  1724 ;;		On entry : 60/0
  1725 ;;		On exit  : 160/0
  1726 ;;		Unchanged: FFE00/0
  1727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1728 ;;      Params:         0       0       0       0       0
  1729 ;;      Locals:         0       8       0       0       0
  1730 ;;      Temps:          0       0       0       0       0
  1731 ;;      Totals:         0       8       0       0       0
  1732 ;;Total ram usage:        8 bytes
  1733 ;; Hardware stack levels used:    1
  1734 ;; Hardware stack levels required when called:    4
  1735 ;; This function calls:
  1736 ;;		_getAdOriginalCh12Value
  1737 ;; This function is called by:
  1738 ;;		_main
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741  01D4                     _calPulseWidth:	
  1742                           
  1743                           ;main.c: 477: unsigned int uiChannel2Value = getAdOriginalCh12Value();
  1744                           
  1745                           ; Regs used in _calPulseWidth: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1746  01D4  220B  118A         	fcall	_getAdOriginalCh12Value
  1747  01D6  0848               	movf	?_getAdOriginalCh12Value+1,w
  1748  01D7  00CF               	movwf	calPulseWidth@uiChannel2Value+1
  1749  01D8  0847               	movf	?_getAdOriginalCh12Value,w
  1750  01D9  00CE               	movwf	calPulseWidth@uiChannel2Value
  1751                           
  1752                           ;main.c: 479: if( uiChannel2Value >= 332 )
  1753  01DA  3001               	movlw	1
  1754  01DB  024F               	subwf	calPulseWidth@uiChannel2Value+1,w
  1755  01DC  304C               	movlw	76
  1756  01DD  1903               	skipnz
  1757  01DE  024E               	subwf	calPulseWidth@uiChannel2Value,w
  1758  01DF  1C03               	skipc
  1759  01E0  29E3               	goto	l3647
  1760  01E1                     l3645:	
  1761                           
  1762                           ;main.c: 480: ucPulseWidth = 99;
  1763  01E1  3063               	movlw	99
  1764  01E2  29EB               	goto	L10
  1765  01E3                     l3647:	
  1766                           
  1767                           ;main.c: 481: else if( uiChannel2Value <= 312)
  1768  01E3  3001               	movlw	1
  1769  01E4  024F               	subwf	calPulseWidth@uiChannel2Value+1,w
  1770  01E5  3039               	movlw	57
  1771  01E6  1903               	skipnz
  1772  01E7  024E               	subwf	calPulseWidth@uiChannel2Value,w
  1773  01E8  1803               	skipnc
  1774  01E9  29ED               	goto	l3651
  1775                           
  1776                           ;main.c: 482: ucPulseWidth = 30;
  1777  01EA  301E               	movlw	30
  1778  01EB                     L10:	
  1779  01EB  00D0               	movwf	calPulseWidth@ucPulseWidth
  1780  01EC  2A09               	goto	l732
  1781  01ED                     l3651:	
  1782                           
  1783                           ;main.c: 487: unsigned char ucGapValue = 0;
  1784  01ED  01CD               	clrf	calPulseWidth@ucGapValue
  1785                           
  1786                           ;main.c: 489: unsigned char ucThreeTimesValue = 0;
  1787  01EE  01CB               	clrf	calPulseWidth@ucThreeTimesValue
  1788                           
  1789                           ;main.c: 490: unsigned char ucHalfValue = 0;
  1790  01EF  01CC               	clrf	calPulseWidth@ucHalfValue
  1791                           
  1792                           ;main.c: 492: uiGapValue = uiChannel2Value - 312;
  1793  01F0  084F               	movf	calPulseWidth@uiChannel2Value+1,w
  1794  01F1  00CA               	movwf	calPulseWidth@uiGapValue+1
  1795  01F2  084E               	movf	calPulseWidth@uiChannel2Value,w
  1796  01F3  00C9               	movwf	calPulseWidth@uiGapValue
  1797  01F4  30C8               	movlw	200
  1798  01F5  07C9               	addwf	calPulseWidth@uiGapValue,f
  1799  01F6  1803               	skipnc
  1800  01F7  0ACA               	incf	calPulseWidth@uiGapValue+1,f
  1801  01F8  30FE               	movlw	254
  1802  01F9  07CA               	addwf	calPulseWidth@uiGapValue+1,f
  1803                           
  1804                           ;main.c: 494: ucGapValue = uiGapValue;
  1805  01FA  0849               	movf	calPulseWidth@uiGapValue,w
  1806  01FB  00CD               	movwf	calPulseWidth@ucGapValue
  1807                           
  1808                           ;main.c: 496: ucThreeTimesValue = ucGapValue*3;
  1809  01FC  074D               	addwf	calPulseWidth@ucGapValue,w
  1810  01FD  074D               	addwf	calPulseWidth@ucGapValue,w
  1811  01FE  00CB               	movwf	calPulseWidth@ucThreeTimesValue
  1812                           
  1813                           ;main.c: 498: ucHalfValue = ucGapValue >> 1;
  1814  01FF  1003               	clrc
  1815  0200  0C4D               	rrf	calPulseWidth@ucGapValue,w
  1816  0201  00CC               	movwf	calPulseWidth@ucHalfValue
  1817                           
  1818                           ;main.c: 500: ucPulseWidth = 30 + ucThreeTimesValue + ucHalfValue;
  1819  0202  074B               	addwf	calPulseWidth@ucThreeTimesValue,w
  1820  0203  3E1E               	addlw	30
  1821  0204  00D0               	movwf	calPulseWidth@ucPulseWidth
  1822                           
  1823                           ;main.c: 502: if(ucPulseWidth > 99)
  1824  0205  3064               	movlw	100
  1825  0206  0250               	subwf	calPulseWidth@ucPulseWidth,w
  1826  0207  1803               	btfsc	3,0
  1827  0208  29E1               	goto	l3645
  1828  0209                     l732:	
  1829                           
  1830                           ;main.c: 505: }
  1831                           ;main.c: 509: return ucPulseWidth;
  1832  0209  0850               	movf	calPulseWidth@ucPulseWidth,w
  1833  020A  0008               	return
  1834  020B                     __end_of_calPulseWidth:	
  1835  020B                     __ptext837:	
  1836 ;; =============== function _process_AD_Converter_Value ends ============
  1837                           
  1838                           
  1839 ;; *************** function _getAdOriginalCh12Value *****************
  1840 ;; Defined at:
  1841 ;;		line 226 in file "D:\develop\190625\AK7030-OTP\common.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;		None
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;		None
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  2   39[BANK0 ] unsigned int 
  1848 ;; Registers used:
  1849 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1850 ;; Tracked objects:
  1851 ;;		On entry : 60/0
  1852 ;;		On exit  : 160/0
  1853 ;;		Unchanged: FFE00/0
  1854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1855 ;;      Params:         0       2       0       0       0
  1856 ;;      Locals:         0       0       0       0       0
  1857 ;;      Temps:          0       0       0       0       0
  1858 ;;      Totals:         0       2       0       0       0
  1859 ;;Total ram usage:        2 bytes
  1860 ;; Hardware stack levels used:    1
  1861 ;; Hardware stack levels required when called:    3
  1862 ;; This function calls:
  1863 ;;		_Filter
  1864 ;; This function is called by:
  1865 ;;		_calPulseWidth
  1866 ;; This function uses a non-reentrant model
  1867 ;;
  1868  020B                     _getAdOriginalCh12Value:	
  1869                           
  1870                           ;common.c: 229: return Filter(uiSampleChannelFirst);
  1871                           
  1872                           ; Regs used in _getAdOriginalCh12Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  1873  020B  30A8               	movlw	_uiSampleChannelFirst& (0+255)
  1874  020C  2212               	fcall	_Filter
  1875  020D  0821               	movf	?_Filter+1,w
  1876  020E  00C8               	movwf	?_getAdOriginalCh12Value+1
  1877  020F  0820               	movf	?_Filter,w
  1878  0210  00C7               	movwf	?_getAdOriginalCh12Value
  1879  0211  0008               	return
  1880  0212                     __end_of_getAdOriginalCh12Value:	
  1881  0212                     __ptext843:	
  1882 ;; =============== function _getAD_ConvertFlag ends ============
  1883                           
  1884                           
  1885 ;; *************** function _Filter *****************
  1886 ;; Defined at:
  1887 ;;		line 60 in file "D:\develop\190625\AK7030-OTP\common.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;  tmpValue        1    wreg     PTR int 
  1890 ;;		 -> uiSampleChannelFourteenth(24), uiSampleChannelFourth(24), uiSampleChannelFirst(24), 
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;  tmpValue        1   34[BANK0 ] PTR int 
  1893 ;;		 -> uiSampleChannelFourteenth(24), uiSampleChannelFourth(24), uiSampleChannelFirst(24), 
  1894 ;;  cir             2   35[BANK0 ] int 
  1895 ;;  filter_buf     24    6[BANK0 ] unsigned int [12]
  1896 ;;  filter_sum      2   32[BANK0 ] unsigned int 
  1897 ;;  filter_temp     2   30[BANK0 ] unsigned int 
  1898 ;;  i               1   38[BANK0 ] unsigned char 
  1899 ;;  j               1   37[BANK0 ] unsigned char 
  1900 ;; Return value:  Size  Location     Type
  1901 ;;                  2    0[BANK0 ] unsigned int 
  1902 ;; Registers used:
  1903 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1904 ;; Tracked objects:
  1905 ;;		On entry : 60/0
  1906 ;;		On exit  : 160/0
  1907 ;;		Unchanged: FFE00/0
  1908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1909 ;;      Params:         0       2       0       0       0
  1910 ;;      Locals:         0      33       0       0       0
  1911 ;;      Temps:          0       4       0       0       0
  1912 ;;      Totals:         0      39       0       0       0
  1913 ;;Total ram usage:       39 bytes
  1914 ;; Hardware stack levels used:    1
  1915 ;; Hardware stack levels required when called:    2
  1916 ;; This function calls:
  1917 ;;		Nothing
  1918 ;; This function is called by:
  1919 ;;		_getAdOriginalCh12Value
  1920 ;;		_getAdOriginalCh13Value
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923  0212                     _Filter:	
  1924                           
  1925                           ; Regs used in _Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  1926                           ;Filter@tmpValue stored from wreg
  1927  0212  00C2               	movwf	Filter@tmpValue
  1928  0213  01C5               	clrf	Filter@j
  1929                           
  1930                           ;common.c: 64: unsigned int filter_temp = 0, filter_sum = 0;
  1931  0214  01BE               	clrf	Filter@filter_temp
  1932  0215  01BF               	clrf	Filter@filter_temp+1
  1933  0216  01C0               	clrf	Filter@filter_sum
  1934  0217  01C1               	clrf	Filter@filter_sum+1
  1935                           
  1936                           ;common.c: 66: unsigned int filter_buf[12];
  1937                           ;common.c: 68: for(int cir = 0;cir < 12; cir++)
  1938  0218  01C3               	clrf	Filter@cir
  1939  0219  01C4               	clrf	Filter@cir+1
  1940  021A                     l3457:	
  1941                           
  1942                           ;common.c: 69: filter_buf[cir] = *tmpValue++;
  1943  021A  1283               	bcf	3,5	;RP0=0, select bank0
  1944  021B  1303               	bcf	3,6	;RP1=0, select bank0
  1945  021C  0842               	movf	Filter@tmpValue,w
  1946  021D  22A0  118A         	fcall	PL3	;call to abstracted procedure
  1947  021F  1003               	clrc
  1948  0220  0D43               	rlf	Filter@cir,w
  1949  0221  22A8  118A         	fcall	PL4	;call to abstracted procedure
  1950  0223  0AC2               	incf	Filter@tmpValue,f
  1951  0224  0AC2               	incf	Filter@tmpValue,f
  1952  0225  0AC3               	incf	Filter@cir,f
  1953  0226  1903               	skipnz
  1954  0227  0AC4               	incf	Filter@cir+1,f
  1955  0228  0844               	movf	Filter@cir+1,w
  1956  0229  3A80               	xorlw	128
  1957  022A  00FF               	movwf	127
  1958  022B  3080               	movlw	128
  1959  022C  027F               	subwf	127,w
  1960  022D  1D03               	skipz
  1961  022E  2A31               	goto	u1025
  1962  022F  300C               	movlw	12
  1963  0230  0243               	subwf	Filter@cir,w
  1964  0231                     u1025:	
  1965  0231  1C03               	skipc
  1966  0232  2A1A               	goto	l3457
  1967                           
  1968                           ;common.c: 72: for(j = 0; j < 12 - 1; j++)
  1969  0233  1283               	bcf	3,5	;RP0=0, select bank0
  1970  0234  1303               	bcf	3,6	;RP1=0, select bank0
  1971  0235  01C5               	clrf	Filter@j
  1972  0236                     l3471:	
  1973                           
  1974                           ;common.c: 73: {
  1975                           ;common.c: 74: for(i = 0; i < 12 - 1 - j; i++)
  1976  0236  01C6               	clrf	Filter@i
  1977  0237                     l3479:	
  1978  0237  01A3               	clrf	??_Filter+1
  1979  0238  0845               	movf	Filter@j,w
  1980  0239  3C0B               	sublw	11
  1981  023A  00A2               	movwf	??_Filter
  1982  023B  1C03               	skipc
  1983  023C  03A3               	decf	??_Filter+1,f
  1984  023D  0823               	movf	??_Filter+1,w
  1985  023E  3A80               	xorlw	128
  1986  023F  3C80               	sublw	128
  1987  0240  1D03               	skipz
  1988  0241  2A44               	goto	u1045
  1989  0242  0822               	movf	??_Filter,w
  1990  0243  0246               	subwf	Filter@i,w
  1991  0244                     u1045:	
  1992  0244  1803               	btfsc	3,0
  1993  0245  2A79               	goto	l3481
  1994                           
  1995                           ;common.c: 75: {
  1996                           ;common.c: 76: if(filter_buf[i] > filter_buf[i + 1])
  1997  0246  1283               	bcf	3,5	;RP0=0, select bank0
  1998  0247  1303               	bcf	3,6	;RP1=0, select bank0
  1999  0248  1003               	clrc
  2000  0249  0D46               	rlf	Filter@i,w
  2001  024A  3E26               	addlw	Filter@filter_buf& (0+255)
  2002  024B  22A0  118A         	fcall	PL3	;call to abstracted procedure
  2003  024D  22B0  118A         	fcall	PL6	;call to abstracted procedure
  2004  024F  0800               	movf	0,w
  2005  0250  00A4               	movwf	??_Filter+2
  2006  0251  0A84               	incf	4,f
  2007  0252  0800               	movf	0,w
  2008  0253  00A5               	movwf	??_Filter+3
  2009  0254  0823               	movf	??_Filter+1,w
  2010  0255  0225               	subwf	??_Filter+3,w
  2011  0256  1D03               	skipz
  2012  0257  2A5A               	goto	u1035
  2013  0258  0822               	movf	??_Filter,w
  2014  0259  0224               	subwf	??_Filter+2,w
  2015  025A                     u1035:	
  2016  025A  1803               	skipnc
  2017  025B  2A77               	goto	l3477
  2018                           
  2019                           ;common.c: 77: {
  2020                           ;common.c: 79: filter_temp = filter_buf[i];
  2021  025C  1003               	clrc
  2022  025D  0D46               	rlf	Filter@i,w
  2023  025E  3E26               	addlw	Filter@filter_buf& (0+255)
  2024  025F  0084               	movwf	4
  2025  0260  0800               	movf	0,w
  2026  0261  00BE               	movwf	Filter@filter_temp
  2027  0262  0A84               	incf	4,f
  2028  0263  0800               	movf	0,w
  2029  0264  00BF               	movwf	Filter@filter_temp+1
  2030                           
  2031                           ;common.c: 81: filter_buf[i] = filter_buf[i + 1];
  2032  0265  22B0  118A         	fcall	PL6	;call to abstracted procedure
  2033  0267  0800               	movf	0,w
  2034  0268  00A2               	movwf	??_Filter
  2035  0269  0A84               	incf	4,f
  2036  026A  0800               	movf	0,w
  2037  026B  00A3               	movwf	??_Filter+1
  2038  026C  1003               	clrc
  2039  026D  0D46               	rlf	Filter@i,w
  2040  026E  22A8  118A         	fcall	PL4	;call to abstracted procedure
  2041                           
  2042                           ;common.c: 83: filter_buf[i + 1] = filter_temp;
  2043  0270  22B0  118A         	fcall	PL6	;call to abstracted procedure
  2044  0272  083E               	movf	Filter@filter_temp,w
  2045  0273  0080               	movwf	0
  2046  0274  0A84               	incf	4,f
  2047  0275  083F               	movf	Filter@filter_temp+1,w
  2048  0276  0080               	movwf	0
  2049  0277                     l3477:	
  2050  0277  0AC6               	incf	Filter@i,f
  2051  0278  2A37               	goto	l3479
  2052  0279                     l3481:	
  2053  0279  1283               	bcf	3,5	;RP0=0, select bank0
  2054  027A  300B               	movlw	11
  2055  027B  1303               	bcf	3,6	;RP1=0, select bank0
  2056  027C  0AC5               	incf	Filter@j,f
  2057  027D  0245               	subwf	Filter@j,w
  2058  027E  1C03               	skipc
  2059  027F  2A36               	goto	l3471
  2060                           
  2061                           ;common.c: 84: }
  2062                           ;common.c: 85: }
  2063                           ;common.c: 86: }
  2064                           ;common.c: 88: for(i = 2; i < 12 - 2; i++)
  2065  0280  3002               	movlw	2
  2066  0281  00C6               	movwf	Filter@i
  2067                           
  2068                           ;common.c: 89: {
  2069                           ;common.c: 90: filter_sum += filter_buf[i];
  2070  0282  1003               	clrc
  2071  0283                     L13:	
  2072  0283  0D46               	rlf	Filter@i,w
  2073  0284  3E26               	addlw	Filter@filter_buf& (0+255)
  2074  0285  22A0  118A         	fcall	PL3	;call to abstracted procedure
  2075  0287  0822               	movf	??_Filter,w
  2076  0288  07C0               	addwf	Filter@filter_sum,f
  2077  0289  1803               	skipnc
  2078  028A  0AC1               	incf	Filter@filter_sum+1,f
  2079  028B  0823               	movf	??_Filter+1,w
  2080  028C  07C1               	addwf	Filter@filter_sum+1,f
  2081  028D  300A               	movlw	10
  2082  028E  0AC6               	incf	Filter@i,f
  2083  028F  0246               	subwf	Filter@i,w
  2084  0290  1C03               	skipc
  2085  0291  2A83               	goto	L13
  2086                           
  2087                           ;common.c: 91: }
  2088                           ;common.c: 93: return (filter_sum >> 3);
  2089  0292  0841               	movf	Filter@filter_sum+1,w
  2090  0293  00A1               	movwf	?_Filter+1
  2091  0294  0840               	movf	Filter@filter_sum,w
  2092  0295  00A0               	movwf	?_Filter
  2093  0296  1003               	clrc
  2094  0297  0CA1               	rrf	?_Filter+1,f
  2095  0298  0CA0               	rrf	?_Filter,f
  2096  0299  1003               	clrc
  2097  029A  0CA1               	rrf	?_Filter+1,f
  2098  029B  0CA0               	rrf	?_Filter,f
  2099  029C  1003               	clrc
  2100  029D  0CA1               	rrf	?_Filter+1,f
  2101  029E  0CA0               	rrf	?_Filter,f
  2102  029F  0008               	return
  2103  02A0                     __end_of_Filter:	
  2104  02A0                     PL3:	
  2105  02A0  0084               	movwf	4
  2106  02A1  1383               	bcf	3,7	;select IRP bank0
  2107  02A2  0800               	movf	0,w
  2108  02A3  00A2               	movwf	??_Filter
  2109  02A4  0A84               	incf	4,f
  2110  02A5  0800               	movf	0,w
  2111  02A6  00A3               	movwf	??_Filter+1
  2112  02A7  0008               	return
  2113  02A8                     PL4:	
  2114  02A8  3E26               	addlw	Filter@filter_buf& (0+255)
  2115  02A9  0084               	movwf	4
  2116  02AA  0822               	movf	??_Filter,w
  2117  02AB  0080               	movwf	0
  2118  02AC  0A84               	incf	4,f
  2119  02AD  0823               	movf	??_Filter+1,w
  2120  02AE  0080               	movwf	0
  2121  02AF  0008               	return
  2122  02B0                     PL6:	
  2123  02B0  1003               	clrc
  2124  02B1  0D46               	rlf	Filter@i,w
  2125  02B2  3E02               	addlw	2
  2126  02B3  3E26               	addlw	Filter@filter_buf& (0+255)
  2127  02B4  0084               	movwf	4
  2128  02B5  0008               	return
  2129                           
  2130                           	psect	text836
  2131  0399                     __ptext836:	
  2132 ;; =============== function _getAdOriginalCh13Value ends ============
  2133                           
  2134                           
  2135 ;; *************** function _process_AD_Converter_Value *****************
  2136 ;; Defined at:
  2137 ;;		line 260 in file "D:\develop\190625\AK7030-OTP\common.c"
  2138 ;; Parameters:    Size  Location     Type
  2139 ;;		None
  2140 ;; Auto vars:     Size  Location     Type
  2141 ;;		None
  2142 ;; Return value:  Size  Location     Type
  2143 ;;		None               void
  2144 ;; Registers used:
  2145 ;;		wreg, status,2, status,0, pclath, cstack
  2146 ;; Tracked objects:
  2147 ;;		On entry : 0/0
  2148 ;;		On exit  : 60/0
  2149 ;;		Unchanged: FFF9F/0
  2150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2151 ;;      Params:         0       0       0       0       0
  2152 ;;      Locals:         0       0       0       0       0
  2153 ;;      Temps:          0       0       0       0       0
  2154 ;;      Totals:         0       0       0       0       0
  2155 ;;Total ram usage:        0 bytes
  2156 ;; Hardware stack levels used:    1
  2157 ;; Hardware stack levels required when called:    3
  2158 ;; This function calls:
  2159 ;;		_getAD_ConvertFlag
  2160 ;;		_setAD_ConvertFlag
  2161 ;;		_AD_Sample
  2162 ;;		_adc_test_init
  2163 ;;		_adc_start
  2164 ;; This function is called by:
  2165 ;;		_main
  2166 ;; This function uses a non-reentrant model
  2167 ;;
  2168  0399                     _process_AD_Converter_Value:	
  2169                           
  2170                           ;common.c: 261: if(getAD_ConvertFlag())
  2171                           
  2172                           ; Regs used in _process_AD_Converter_Value: [wreg+status,2+status,0+pclath+cstack]
  2173  0399  23AF  118A         	fcall	_getAD_ConvertFlag
  2174  039B  3A00               	xorlw	0
  2175  039C  1903               	skipnz
  2176  039D  0008               	return
  2177                           
  2178                           ;common.c: 262: {
  2179                           ;common.c: 263: setAD_ConvertFlag(0);
  2180  039E  3000               	movlw	0
  2181  039F  23B3  118A         	fcall	_setAD_ConvertFlag
  2182                           
  2183                           ;common.c: 264: AD_Sample();
  2184  03A1  23B6  118A         	fcall	_AD_Sample
  2185                           
  2186                           ;common.c: 265: if(12 == sampleChannelSelect)
  2187  03A3  086F               	movf	_sampleChannelSelect,w
  2188  03A4  3A0C               	xorlw	12
  2189                           
  2190                           ;common.c: 266: adc_test_init(12,3);
  2191  03A5  3003               	movlw	3
  2192  03A6  00A0               	movwf	?_adc_test_init
  2193  03A7  1D03               	skipz
  2194  03A8  2BAB               	goto	L12
  2195  03A9  300C               	movlw	12
  2196  03AA  2BAC               	goto	L11
  2197  03AB                     L12:	
  2198                           ;common.c: 269: else
  2199                           ;common.c: 270: adc_test_init(13,3);
  2200                           
  2201  03AB  300D               	movlw	13
  2202  03AC                     L11:	
  2203  03AC  23CA  118A         	fcall	_adc_test_init
  2204                           
  2205                           ;common.c: 272: adc_start();
  2206  03AE  2BDF               	ljmp	l3337
  2207  03AF                     __end_of_process_AD_Converter_Value:	
  2208  03AF                     __ptext842:	
  2209 ;; =============== function _setAD_ConvertFlag ends ============
  2210                           
  2211                           
  2212 ;; *************** function _getAD_ConvertFlag *****************
  2213 ;; Defined at:
  2214 ;;		line 209 in file "D:\develop\190625\AK7030-OTP\common.c"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;		None
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;		None
  2219 ;; Return value:  Size  Location     Type
  2220 ;;                  1    wreg      unsigned char 
  2221 ;; Registers used:
  2222 ;;		wreg
  2223 ;; Tracked objects:
  2224 ;;		On entry : 0/0
  2225 ;;		On exit  : 60/0
  2226 ;;		Unchanged: FFF9F/0
  2227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2228 ;;      Params:         0       0       0       0       0
  2229 ;;      Locals:         0       0       0       0       0
  2230 ;;      Temps:          0       0       0       0       0
  2231 ;;      Totals:         0       0       0       0       0
  2232 ;;Total ram usage:        0 bytes
  2233 ;; Hardware stack levels used:    1
  2234 ;; Hardware stack levels required when called:    2
  2235 ;; This function calls:
  2236 ;;		Nothing
  2237 ;; This function is called by:
  2238 ;;		_process_AD_Converter_Value
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241  03AF                     _getAD_ConvertFlag:	
  2242                           
  2243                           ;common.c: 210: return adc_convert_flag;
  2244                           
  2245                           ; Regs used in _getAD_ConvertFlag: [wreg]
  2246  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  2247  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  2248  03B1  0861               	movf	_adc_convert_flag,w
  2249  03B2  0008               	return
  2250  03B3                     __end_of_getAD_ConvertFlag:	
  2251  03B3                     __ptext841:	
  2252 ;; =============== function _AD_Sample ends ============
  2253                           
  2254                           
  2255 ;; *************** function _setAD_ConvertFlag *****************
  2256 ;; Defined at:
  2257 ;;		line 215 in file "D:\develop\190625\AK7030-OTP\common.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;  flag            1    wreg     unsigned char 
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;  flag            1    0[BANK0 ] unsigned char 
  2262 ;; Return value:  Size  Location     Type
  2263 ;;		None               void
  2264 ;; Registers used:
  2265 ;;		wreg
  2266 ;; Tracked objects:
  2267 ;;		On entry : 60/0
  2268 ;;		On exit  : 60/0
  2269 ;;		Unchanged: FFF9F/0
  2270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2271 ;;      Params:         0       0       0       0       0
  2272 ;;      Locals:         0       1       0       0       0
  2273 ;;      Temps:          0       0       0       0       0
  2274 ;;      Totals:         0       1       0       0       0
  2275 ;;Total ram usage:        1 bytes
  2276 ;; Hardware stack levels used:    1
  2277 ;; Hardware stack levels required when called:    2
  2278 ;; This function calls:
  2279 ;;		Nothing
  2280 ;; This function is called by:
  2281 ;;		_process_AD_Converter_Value
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284  03B3                     _setAD_ConvertFlag:	
  2285                           
  2286                           ; Regs used in _setAD_ConvertFlag: [wreg]
  2287                           ;setAD_ConvertFlag@flag stored from wreg
  2288  03B3  00A0               	movwf	setAD_ConvertFlag@flag
  2289                           
  2290                           ;common.c: 216: adc_convert_flag = flag;
  2291  03B4  00E1               	movwf	_adc_convert_flag
  2292  03B5  0008               	return
  2293  03B6                     __end_of_setAD_ConvertFlag:	
  2294  03B6                     __ptext840:	
  2295 ;; =============== function _initPin ends ============
  2296                           
  2297                           
  2298 ;; *************** function _AD_Sample *****************
  2299 ;; Defined at:
  2300 ;;		line 286 in file "D:\develop\190625\AK7030-OTP\common.c"
  2301 ;; Parameters:    Size  Location     Type
  2302 ;;		None
  2303 ;; Auto vars:     Size  Location     Type
  2304 ;;		None
  2305 ;; Return value:  Size  Location     Type
  2306 ;;		None               void
  2307 ;; Registers used:
  2308 ;;		wreg, status,2, status,0
  2309 ;; Tracked objects:
  2310 ;;		On entry : 60/0
  2311 ;;		On exit  : 60/0
  2312 ;;		Unchanged: FFF9F/0
  2313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2314 ;;      Params:         0       0       0       0       0
  2315 ;;      Locals:         0       0       0       0       0
  2316 ;;      Temps:          0       0       0       0       0
  2317 ;;      Totals:         0       0       0       0       0
  2318 ;;Total ram usage:        0 bytes
  2319 ;; Hardware stack levels used:    1
  2320 ;; Hardware stack levels required when called:    2
  2321 ;; This function calls:
  2322 ;;		Nothing
  2323 ;; This function is called by:
  2324 ;;		_process_AD_Converter_Value
  2325 ;; This function uses a non-reentrant model
  2326 ;;
  2327  03B6                     _AD_Sample:	
  2328                           
  2329                           ;common.c: 287: if(sampleTimes < 12)
  2330                           
  2331                           ; Regs used in _AD_Sample: [wreg+status,2+status,0]
  2332  03B6  300C               	movlw	12
  2333  03B7  0266               	subwf	_sampleTimes,w
  2334  03B8  1803               	skipnc
  2335  03B9  0008               	return
  2336  03BA  300C               	movlw	12
  2337                           
  2338                           ;common.c: 288: {
  2339                           ;common.c: 309: sampleTimes++;
  2340  03BB  0AE6               	incf	_sampleTimes,f
  2341                           
  2342                           ;common.c: 311: if(sampleTimes >= 12)
  2343  03BC  0266               	subwf	_sampleTimes,w
  2344  03BD  1C03               	skipc
  2345  03BE  0008               	return
  2346                           
  2347                           ;common.c: 312: {
  2348                           ;common.c: 313: sampleTimes = 0;
  2349  03BF  01E6               	clrf	_sampleTimes
  2350                           
  2351                           ;common.c: 315: if(sampleChannelSelect == 12)
  2352  03C0  086F               	movf	_sampleChannelSelect,w
  2353  03C1  3A0C               	xorlw	12
  2354  03C2  1D03               	skipz
  2355  03C3  2BC7               	goto	l3567
  2356                           
  2357                           ;common.c: 316: {
  2358                           ;common.c: 319: sampleChannelSelect = 13;
  2359  03C4  300D               	movlw	13
  2360  03C5  00EF               	movwf	_sampleChannelSelect
  2361                           
  2362                           ;common.c: 320: }
  2363  03C6  0008               	return
  2364  03C7                     l3567:	
  2365                           
  2366                           ;common.c: 331: else
  2367                           ;common.c: 332: {
  2368                           ;common.c: 334: sampleChannelSelect = 12;
  2369  03C7  300C               	movlw	12
  2370  03C8  00EF               	movwf	_sampleChannelSelect
  2371  03C9  0008               	return
  2372  03CA                     __end_of_AD_Sample:	
  2373  03CA                     __ptext856:	
  2374 ;; =============== function _adc_start ends ============
  2375                           
  2376                           
  2377 ;; *************** function _adc_test_init *****************
  2378 ;; Defined at:
  2379 ;;		line 85 in file "D:\develop\190625\AK7030-OTP\periph.c"
  2380 ;; Parameters:    Size  Location     Type
  2381 ;;  channel         1    wreg     unsigned char 
  2382 ;;  ref             1    0[BANK0 ] unsigned char 
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;  channel         1    2[BANK0 ] unsigned char 
  2385 ;; Return value:  Size  Location     Type
  2386 ;;		None               void
  2387 ;; Registers used:
  2388 ;;		wreg, status,2, status,0
  2389 ;; Tracked objects:
  2390 ;;		On entry : 60/0
  2391 ;;		On exit  : 60/20
  2392 ;;		Unchanged: FFF9F/0
  2393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2394 ;;      Params:         0       1       0       0       0
  2395 ;;      Locals:         0       1       0       0       0
  2396 ;;      Temps:          0       1       0       0       0
  2397 ;;      Totals:         0       3       0       0       0
  2398 ;;Total ram usage:        3 bytes
  2399 ;; Hardware stack levels used:    1
  2400 ;; Hardware stack levels required when called:    2
  2401 ;; This function calls:
  2402 ;;		Nothing
  2403 ;; This function is called by:
  2404 ;;		_main
  2405 ;;		_process_AD_Converter_Value
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408  03CA                     _adc_test_init:	
  2409                           
  2410                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  2411                           ;adc_test_init@channel stored from wreg
  2412  03CA  00A2               	movwf	adc_test_init@channel
  2413                           
  2414                           ;periph.c: 86: ADCON0 = 0x00;
  2415  03CB  019F               	clrf	31	;volatile
  2416                           
  2417                           ;periph.c: 87: ADCON0|=channel<<2;
  2418  03CC  00A1               	movwf	??_adc_test_init
  2419  03CD  1003               	clrc
  2420  03CE  0DA1               	rlf	??_adc_test_init,f
  2421  03CF  1003               	clrc
  2422  03D0  0D21               	rlf	??_adc_test_init,w
  2423  03D1  049F               	iorwf	31,f	;volatile
  2424                           
  2425                           ;periph.c: 88: ADCON1|=ref<<6;
  2426  03D2  0820               	movf	adc_test_init@ref,w
  2427  03D3  00A1               	movwf	??_adc_test_init
  2428  03D4  0CA1               	rrf	??_adc_test_init,f
  2429  03D5  0CA1               	rrf	??_adc_test_init,f
  2430  03D6  0C21               	rrf	??_adc_test_init,w
  2431  03D7  39C0               	andlw	192
  2432  03D8  1683               	bsf	3,5	;RP0=1, select bank1
  2433  03D9  049F               	iorwf	31,f	;volatile
  2434                           
  2435                           ;periph.c: 89: ADON=1;
  2436  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  2437  03DB  141F               	bsf	31,0
  2438                           
  2439                           ;periph.c: 90: ADIE=1;
  2440  03DC  1683               	bsf	3,5	;RP0=1, select bank1
  2441  03DD  150D               	bsf	13,2
  2442  03DE  0008               	return
  2443  03DF                     __end_of_adc_test_init:	
  2444  03DF                     __ptext855:	
  2445 ;; =============== function _startTwentyMinTimer ends ============
  2446                           
  2447                           
  2448 ;; *************** function _adc_start *****************
  2449 ;; Defined at:
  2450 ;;		line 100 in file "D:\develop\190625\AK7030-OTP\periph.c"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;		None
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;		None
  2455 ;; Return value:  Size  Location     Type
  2456 ;;		None               void
  2457 ;; Registers used:
  2458 ;;		None
  2459 ;; Tracked objects:
  2460 ;;		On entry : 60/20
  2461 ;;		On exit  : 60/0
  2462 ;;		Unchanged: FFF9F/0
  2463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2464 ;;      Params:         0       0       0       0       0
  2465 ;;      Locals:         0       0       0       0       0
  2466 ;;      Temps:          0       0       0       0       0
  2467 ;;      Totals:         0       0       0       0       0
  2468 ;;Total ram usage:        0 bytes
  2469 ;; Hardware stack levels used:    1
  2470 ;; Hardware stack levels required when called:    2
  2471 ;; This function calls:
  2472 ;;		Nothing
  2473 ;; This function is called by:
  2474 ;;		_main
  2475 ;;		_process_AD_Converter_Value
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478  03DF                     _adc_start:	
  2479  03DF                     l3337:	
  2480                           ; Regs used in _adc_start: []
  2481                           
  2482                           
  2483                           ;periph.c: 101: GO=1;
  2484  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  2485  03E0  149F               	bsf	31,1
  2486  03E1  0008               	return
  2487  03E2                     __end_of_adc_start:	
  2488                           
  2489                           	psect	text838
  2490  0413                     __ptext838:	
  2491 ;; =============== function _getAdOriginalCh12Value ends ============
  2492                           
  2493                           
  2494 ;; *************** function _setPinInitVaule *****************
  2495 ;; Defined at:
  2496 ;;		line 284 in file "D:\develop\190625\AK7030-OTP\main.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;		None
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;		None
  2501 ;; Return value:  Size  Location     Type
  2502 ;;		None               void
  2503 ;; Registers used:
  2504 ;;		wreg, status,2, status,0, pclath, cstack
  2505 ;; Tracked objects:
  2506 ;;		On entry : 17F/20
  2507 ;;		On exit  : 17F/0
  2508 ;;		Unchanged: FFE80/0
  2509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2510 ;;      Params:         0       0       0       0       0
  2511 ;;      Locals:         0       0       0       0       0
  2512 ;;      Temps:          0       0       0       0       0
  2513 ;;      Totals:         0       0       0       0       0
  2514 ;;Total ram usage:        0 bytes
  2515 ;; Hardware stack levels used:    1
  2516 ;; Hardware stack levels required when called:    3
  2517 ;; This function calls:
  2518 ;;		_setPB3
  2519 ;;		_setPB4
  2520 ;;		_setPB5
  2521 ;; This function is called by:
  2522 ;;		_main
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525  0413                     _setPinInitVaule:	
  2526                           
  2527                           ;main.c: 286: setPB3(1);
  2528                           
  2529                           ; Regs used in _setPinInitVaule: [wreg+status,2+status,0+pclath+cstack]
  2530  0413  3001               	movlw	1
  2531  0414  241B  118A         	fcall	_setPB3
  2532                           
  2533                           ;main.c: 287: setPB4(0);
  2534  0416  3000               	movlw	0
  2535  0417  2424  118A         	fcall	_setPB4
  2536                           
  2537                           ;main.c: 288: setPB5(1);
  2538  0419  3001               	movlw	1
  2539  041A  2C2C               	ljmp	_setPB5
  2540  041B                     __end_of_setPinInitVaule:	
  2541  041B                     __ptext868:	
  2542 ;; =============== function _initPB4 ends ============
  2543                           
  2544                           
  2545 ;; *************** function _setPB3 *****************
  2546 ;; Defined at:
  2547 ;;		line 145 in file "D:\develop\190625\AK7030-OTP\main.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;  bValue          1    wreg     unsigned char 
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;  bValue          1    0[BANK0 ] unsigned char 
  2552 ;; Return value:  Size  Location     Type
  2553 ;;		None               void
  2554 ;; Registers used:
  2555 ;;		wreg
  2556 ;; Tracked objects:
  2557 ;;		On entry : 40/0
  2558 ;;		On exit  : 60/0
  2559 ;;		Unchanged: FFF9F/0
  2560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2561 ;;      Params:         0       0       0       0       0
  2562 ;;      Locals:         0       1       0       0       0
  2563 ;;      Temps:          0       0       0       0       0
  2564 ;;      Totals:         0       1       0       0       0
  2565 ;;Total ram usage:        1 bytes
  2566 ;; Hardware stack levels used:    1
  2567 ;; Hardware stack levels required when called:    2
  2568 ;; This function calls:
  2569 ;;		Nothing
  2570 ;; This function is called by:
  2571 ;;		_setPinInitVaule
  2572 ;;		_main
  2573 ;; This function uses a non-reentrant model
  2574 ;;
  2575  041B                     _setPB3:	
  2576                           
  2577                           ; Regs used in _setPB3: [wreg]
  2578                           ;setPB3@bValue stored from wreg
  2579  041B  1283               	bcf	3,5	;RP0=0, select bank0
  2580  041C  00A0               	movwf	setPB3@bValue
  2581                           
  2582                           ;main.c: 146: if( bValue )
  2583  041D  0820               	movf	setPB3@bValue,w
  2584  041E  1903               	btfsc	3,2
  2585  041F  2C22               	goto	l685
  2586                           
  2587                           ;main.c: 148: PB3 = 1;
  2588  0420  1586               	bsf	6,3
  2589  0421  0008               	return
  2590  0422                     l685:	
  2591                           
  2592                           ;main.c: 152: else
  2593                           ;main.c: 154: PB3= 0;
  2594  0422  1186               	bcf	6,3
  2595  0423  0008               	return
  2596  0424                     __end_of_setPB3:	
  2597  0424                     __ptext866:	
  2598 ;; =============== function _initPB5 ends ============
  2599                           
  2600                           
  2601 ;; *************** function _setPB4 *****************
  2602 ;; Defined at:
  2603 ;;		line 180 in file "D:\develop\190625\AK7030-OTP\main.c"
  2604 ;; Parameters:    Size  Location     Type
  2605 ;;  bValue          1    wreg     unsigned char 
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;  bValue          1    0[BANK0 ] unsigned char 
  2608 ;; Return value:  Size  Location     Type
  2609 ;;		None               void
  2610 ;; Registers used:
  2611 ;;		wreg
  2612 ;; Tracked objects:
  2613 ;;		On entry : 60/0
  2614 ;;		On exit  : 60/0
  2615 ;;		Unchanged: FFF9F/0
  2616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2617 ;;      Params:         0       0       0       0       0
  2618 ;;      Locals:         0       1       0       0       0
  2619 ;;      Temps:          0       0       0       0       0
  2620 ;;      Totals:         0       1       0       0       0
  2621 ;;Total ram usage:        1 bytes
  2622 ;; Hardware stack levels used:    1
  2623 ;; Hardware stack levels required when called:    2
  2624 ;; This function calls:
  2625 ;;		Nothing
  2626 ;; This function is called by:
  2627 ;;		_setPinInitVaule
  2628 ;;		_main
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631  0424                     _setPB4:	
  2632                           
  2633                           ; Regs used in _setPB4: [wreg]
  2634                           ;setPB4@bValue stored from wreg
  2635  0424  00A0               	movwf	setPB4@bValue
  2636                           
  2637                           ;main.c: 181: if( bValue )
  2638  0425  0820               	movf	setPB4@bValue,w
  2639  0426  1903               	btfsc	3,2
  2640  0427  2C2A               	goto	l695
  2641                           
  2642                           ;main.c: 183: PB4 = 1;
  2643  0428  1606               	bsf	6,4
  2644  0429  0008               	return
  2645  042A                     l695:	
  2646                           
  2647                           ;main.c: 187: else
  2648                           ;main.c: 189: PB4= 0;
  2649  042A  1206               	bcf	6,4
  2650  042B  0008               	return
  2651  042C                     __end_of_setPB4:	
  2652  042C                     __ptext864:	
  2653 ;; =============== function _initPB2_AsHighResistence ends ============
  2654                           
  2655                           
  2656 ;; *************** function _setPB5 *****************
  2657 ;; Defined at:
  2658 ;;		line 214 in file "D:\develop\190625\AK7030-OTP\main.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;  bValue          1    wreg     unsigned char 
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;  bValue          1    0[BANK0 ] unsigned char 
  2663 ;; Return value:  Size  Location     Type
  2664 ;;		None               void
  2665 ;; Registers used:
  2666 ;;		wreg
  2667 ;; Tracked objects:
  2668 ;;		On entry : 60/0
  2669 ;;		On exit  : 60/0
  2670 ;;		Unchanged: FFF9F/0
  2671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2672 ;;      Params:         0       0       0       0       0
  2673 ;;      Locals:         0       1       0       0       0
  2674 ;;      Temps:          0       0       0       0       0
  2675 ;;      Totals:         0       1       0       0       0
  2676 ;;Total ram usage:        1 bytes
  2677 ;; Hardware stack levels used:    1
  2678 ;; Hardware stack levels required when called:    2
  2679 ;; This function calls:
  2680 ;;		Nothing
  2681 ;; This function is called by:
  2682 ;;		_setPinInitVaule
  2683 ;;		_main
  2684 ;; This function uses a non-reentrant model
  2685 ;;
  2686  042C                     _setPB5:	
  2687                           
  2688                           ; Regs used in _setPB5: [wreg]
  2689                           ;setPB5@bValue stored from wreg
  2690  042C  00A0               	movwf	setPB5@bValue
  2691                           
  2692                           ;main.c: 215: if( bValue )
  2693  042D  0820               	movf	setPB5@bValue,w
  2694  042E  1903               	btfsc	3,2
  2695  042F  2C32               	goto	l705
  2696                           
  2697                           ;main.c: 217: PB5 = 1;
  2698  0430  1686               	bsf	6,5
  2699  0431  0008               	return
  2700  0432                     l705:	
  2701                           
  2702                           ;main.c: 221: else
  2703                           ;main.c: 223: PB5= 0;
  2704  0432  1286               	bcf	6,5
  2705  0433  0008               	return
  2706  0434                     __end_of_setPB5:	
  2707                           
  2708                           	psect	text839
  2709  03E2                     __ptext839:	
  2710 ;; =============== function _setPinInitVaule ends ============
  2711                           
  2712                           
  2713 ;; *************** function _initPin *****************
  2714 ;; Defined at:
  2715 ;;		line 268 in file "D:\develop\190625\AK7030-OTP\main.c"
  2716 ;; Parameters:    Size  Location     Type
  2717 ;;		None
  2718 ;; Auto vars:     Size  Location     Type
  2719 ;;		None
  2720 ;; Return value:  Size  Location     Type
  2721 ;;		None               void
  2722 ;; Registers used:
  2723 ;;		wreg, status,2, status,0, pclath, cstack
  2724 ;; Tracked objects:
  2725 ;;		On entry : 17F/0
  2726 ;;		On exit  : 17F/20
  2727 ;;		Unchanged: FFE80/0
  2728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2729 ;;      Params:         0       0       0       0       0
  2730 ;;      Locals:         0       0       0       0       0
  2731 ;;      Temps:          0       0       0       0       0
  2732 ;;      Totals:         0       0       0       0       0
  2733 ;;Total ram usage:        0 bytes
  2734 ;; Hardware stack levels used:    1
  2735 ;; Hardware stack levels required when called:    3
  2736 ;; This function calls:
  2737 ;;		_initPB2_AsHighResistence
  2738 ;;		_initPB3
  2739 ;;		_initPB4
  2740 ;;		_initPB5
  2741 ;; This function is called by:
  2742 ;;		_main
  2743 ;; This function uses a non-reentrant model
  2744 ;;
  2745  03E2                     _initPin:	
  2746                           
  2747                           ;main.c: 270: initPB2_AsHighResistence();
  2748                           
  2749                           ; Regs used in _initPin: [wreg+status,2+status,0+pclath+cstack]
  2750  03E2  23F8  118A         	fcall	_initPB2_AsHighResistence
  2751                           
  2752                           ;main.c: 272: initPB3(0);
  2753  03E4  3000               	movlw	0
  2754  03E5  23EC  118A         	fcall	_initPB3
  2755                           
  2756                           ;main.c: 274: initPB4(0);
  2757  03E7  3000               	movlw	0
  2758  03E8  23FD  118A         	fcall	_initPB4
  2759                           
  2760                           ;main.c: 276: initPB5(0);
  2761  03EA  3000               	movlw	0
  2762  03EB  2C08               	ljmp	_initPB5
  2763  03EC                     __end_of_initPin:	
  2764  03EC                     __ptext869:	
  2765 ;; =============== function _setPB3 ends ============
  2766                           
  2767                           
  2768 ;; *************** function _initPB3 *****************
  2769 ;; Defined at:
  2770 ;;		line 128 in file "D:\develop\190625\AK7030-OTP\main.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;  bValue          1    wreg     unsigned char 
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;  bValue          1    0[BANK0 ] unsigned char 
  2775 ;; Return value:  Size  Location     Type
  2776 ;;		None               void
  2777 ;; Registers used:
  2778 ;;		wreg
  2779 ;; Tracked objects:
  2780 ;;		On entry : 17F/60
  2781 ;;		On exit  : 17F/20
  2782 ;;		Unchanged: FFE80/0
  2783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2784 ;;      Params:         0       0       0       0       0
  2785 ;;      Locals:         0       1       0       0       0
  2786 ;;      Temps:          0       0       0       0       0
  2787 ;;      Totals:         0       1       0       0       0
  2788 ;;Total ram usage:        1 bytes
  2789 ;; Hardware stack levels used:    1
  2790 ;; Hardware stack levels required when called:    2
  2791 ;; This function calls:
  2792 ;;		Nothing
  2793 ;; This function is called by:
  2794 ;;		_initPin
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797  03EC                     _initPB3:	
  2798                           
  2799                           ; Regs used in _initPB3: [wreg]
  2800                           ;initPB3@bValue stored from wreg
  2801  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  2802  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  2803  03EE  00A0               	movwf	initPB3@bValue
  2804                           
  2805                           ;main.c: 129: if( bValue )
  2806  03EF  0820               	movf	initPB3@bValue,w
  2807  03F0  1903               	btfsc	3,2
  2808  03F1  2BF5               	goto	l680
  2809                           
  2810                           ;main.c: 131: TRISB3 = 1;
  2811  03F2  1683               	bsf	3,5	;RP0=1, select bank1
  2812  03F3  1586               	bsf	6,3
  2813  03F4  0008               	return
  2814  03F5                     l680:	
  2815                           
  2816                           ;main.c: 135: else
  2817                           ;main.c: 137: TRISB3 = 0;
  2818  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  2819  03F6  1186               	bcf	6,3
  2820  03F7  0008               	return
  2821  03F8                     __end_of_initPB3:	
  2822  03F8                     __ptext863:	
  2823 ;; =============== function _pwm_start ends ============
  2824                           
  2825                           
  2826 ;; *************** function _initPB2_AsHighResistence *****************
  2827 ;; Defined at:
  2828 ;;		line 231 in file "D:\develop\190625\AK7030-OTP\main.c"
  2829 ;; Parameters:    Size  Location     Type
  2830 ;;		None
  2831 ;; Auto vars:     Size  Location     Type
  2832 ;;		None
  2833 ;; Return value:  Size  Location     Type
  2834 ;;		None               void
  2835 ;; Registers used:
  2836 ;;		None
  2837 ;; Tracked objects:
  2838 ;;		On entry : 17F/0
  2839 ;;		On exit  : 17F/60
  2840 ;;		Unchanged: FFE80/0
  2841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2842 ;;      Params:         0       0       0       0       0
  2843 ;;      Locals:         0       0       0       0       0
  2844 ;;      Temps:          0       0       0       0       0
  2845 ;;      Totals:         0       0       0       0       0
  2846 ;;Total ram usage:        0 bytes
  2847 ;; Hardware stack levels used:    1
  2848 ;; Hardware stack levels required when called:    2
  2849 ;; This function calls:
  2850 ;;		Nothing
  2851 ;; This function is called by:
  2852 ;;		_initPin
  2853 ;; This function uses a non-reentrant model
  2854 ;;
  2855  03F8                     _initPB2_AsHighResistence:	
  2856                           
  2857                           ;main.c: 233: PB2 = 1;
  2858                           
  2859                           ; Regs used in _initPB2_AsHighResistence: []
  2860  03F8  1506               	bsf	6,2
  2861                           
  2862                           ;main.c: 234: PBOD2 = 1;
  2863  03F9  1683               	bsf	3,5	;RP0=1, select bank3
  2864  03FA  1703               	bsf	3,6	;RP1=1, select bank3
  2865  03FB  1508               	bsf	8,2
  2866  03FC  0008               	return
  2867  03FD                     __end_of_initPB2_AsHighResistence:	
  2868  03FD                     __ptext867:	
  2869 ;; =============== function _setPB4 ends ============
  2870                           
  2871                           
  2872 ;; *************** function _initPB4 *****************
  2873 ;; Defined at:
  2874 ;;		line 163 in file "D:\develop\190625\AK7030-OTP\main.c"
  2875 ;; Parameters:    Size  Location     Type
  2876 ;;  bValue          1    wreg     unsigned char 
  2877 ;; Auto vars:     Size  Location     Type
  2878 ;;  bValue          1    0[BANK0 ] unsigned char 
  2879 ;; Return value:  Size  Location     Type
  2880 ;;		None               void
  2881 ;; Registers used:
  2882 ;;		wreg
  2883 ;; Tracked objects:
  2884 ;;		On entry : 17F/20
  2885 ;;		On exit  : 17F/20
  2886 ;;		Unchanged: FFE80/0
  2887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2888 ;;      Params:         0       0       0       0       0
  2889 ;;      Locals:         0       1       0       0       0
  2890 ;;      Temps:          0       0       0       0       0
  2891 ;;      Totals:         0       1       0       0       0
  2892 ;;Total ram usage:        1 bytes
  2893 ;; Hardware stack levels used:    1
  2894 ;; Hardware stack levels required when called:    2
  2895 ;; This function calls:
  2896 ;;		Nothing
  2897 ;; This function is called by:
  2898 ;;		_initPin
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901  03FD                     _initPB4:	
  2902                           
  2903                           ; Regs used in _initPB4: [wreg]
  2904                           ;initPB4@bValue stored from wreg
  2905  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  2906  03FE  00A0               	movwf	initPB4@bValue
  2907                           
  2908                           ;main.c: 164: if( bValue )
  2909  03FF  0820               	movf	initPB4@bValue,w
  2910  0400  1903               	btfsc	3,2
  2911  0401  2C05               	goto	l690
  2912                           
  2913                           ;main.c: 166: TRISB4 = 1;
  2914  0402  1683               	bsf	3,5	;RP0=1, select bank1
  2915  0403  1606               	bsf	6,4
  2916  0404  0008               	return
  2917  0405                     l690:	
  2918                           
  2919                           ;main.c: 170: else
  2920                           ;main.c: 172: TRISB4= 0;
  2921  0405  1683               	bsf	3,5	;RP0=1, select bank1
  2922  0406  1206               	bcf	6,4
  2923  0407  0008               	return
  2924  0408                     __end_of_initPB4:	
  2925  0408                     __ptext865:	
  2926 ;; =============== function _setPB5 ends ============
  2927                           
  2928                           
  2929 ;; *************** function _initPB5 *****************
  2930 ;; Defined at:
  2931 ;;		line 197 in file "D:\develop\190625\AK7030-OTP\main.c"
  2932 ;; Parameters:    Size  Location     Type
  2933 ;;  bValue          1    wreg     unsigned char 
  2934 ;; Auto vars:     Size  Location     Type
  2935 ;;  bValue          1    0[BANK0 ] unsigned char 
  2936 ;; Return value:  Size  Location     Type
  2937 ;;		None               void
  2938 ;; Registers used:
  2939 ;;		wreg
  2940 ;; Tracked objects:
  2941 ;;		On entry : 17F/20
  2942 ;;		On exit  : 17F/20
  2943 ;;		Unchanged: FFE80/0
  2944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2945 ;;      Params:         0       0       0       0       0
  2946 ;;      Locals:         0       1       0       0       0
  2947 ;;      Temps:          0       0       0       0       0
  2948 ;;      Totals:         0       1       0       0       0
  2949 ;;Total ram usage:        1 bytes
  2950 ;; Hardware stack levels used:    1
  2951 ;; Hardware stack levels required when called:    2
  2952 ;; This function calls:
  2953 ;;		Nothing
  2954 ;; This function is called by:
  2955 ;;		_initPin
  2956 ;; This function uses a non-reentrant model
  2957 ;;
  2958  0408                     _initPB5:	
  2959                           
  2960                           ; Regs used in _initPB5: [wreg]
  2961                           ;initPB5@bValue stored from wreg
  2962  0408  1283               	bcf	3,5	;RP0=0, select bank0
  2963  0409  00A0               	movwf	initPB5@bValue
  2964                           
  2965                           ;main.c: 198: if( bValue )
  2966  040A  0820               	movf	initPB5@bValue,w
  2967  040B  1903               	btfsc	3,2
  2968  040C  2C10               	goto	l700
  2969                           
  2970                           ;main.c: 200: TRISB5 = 1;
  2971  040D  1683               	bsf	3,5	;RP0=1, select bank1
  2972  040E  1686               	bsf	6,5
  2973  040F  0008               	return
  2974  0410                     l700:	
  2975                           
  2976                           ;main.c: 204: else
  2977                           ;main.c: 206: TRISB5= 0;
  2978  0410  1683               	bsf	3,5	;RP0=1, select bank1
  2979  0411  1286               	bcf	6,5
  2980  0412  0008               	return
  2981  0413                     __end_of_initPB5:	
  2982                           
  2983                           	psect	text844
  2984  0493                     __ptext844:	
  2985 ;; =============== function _Filter ends ============
  2986                           
  2987                           
  2988 ;; *************** function _isFinishedOneHoursTimer *****************
  2989 ;; Defined at:
  2990 ;;		line 507 in file "D:\develop\190625\AK7030-OTP\common.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;		None
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;		None
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  1    wreg      unsigned char 
  2997 ;; Registers used:
  2998 ;;		wreg, status,2, status,0
  2999 ;; Tracked objects:
  3000 ;;		On entry : 160/0
  3001 ;;		On exit  : 160/0
  3002 ;;		Unchanged: FFE9F/0
  3003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3004 ;;      Params:         0       0       0       0       0
  3005 ;;      Locals:         0       0       0       0       0
  3006 ;;      Temps:          0       0       0       0       0
  3007 ;;      Totals:         0       0       0       0       0
  3008 ;;Total ram usage:        0 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; Hardware stack levels required when called:    2
  3011 ;; This function calls:
  3012 ;;		Nothing
  3013 ;; This function is called by:
  3014 ;;		_main
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017  0493                     _isFinishedOneHoursTimer:	
  3018                           
  3019                           ;common.c: 508: if((uiOneHourTimer == 0) && bOneHourTimerStartFlag)
  3020                           
  3021                           ; Regs used in _isFinishedOneHoursTimer: [wreg+status,2+status,0]
  3022  0493  0859               	movf	_uiOneHourTimer+1,w
  3023  0494  0458               	iorwf	_uiOneHourTimer,w
  3024  0495  1D03               	skipz
  3025  0496  3400               	retlw	0
  3026  0497  0863               	movf	_bOneHourTimerStartFlag,w
  3027  0498  1903               	btfsc	3,2
  3028  0499  3400               	retlw	0
  3029  049A  3001               	movlw	1
  3030                           
  3031                           ;common.c: 509: {
  3032                           ;common.c: 510: bOneHourTimerStartFlag = 0;
  3033  049B  01E3               	clrf	_bOneHourTimerStartFlag
  3034                           
  3035                           ;common.c: 511: return 1;
  3036  049C  0008               	return
  3037  049D                     __end_of_isFinishedOneHoursTimer:	
  3038                           ;common.c: 513: else
  3039                           ;common.c: 514: return 0;
  3040                           
  3041                           
  3042                           	psect	text845
  3043  045B                     __ptext845:	
  3044 ;; =============== function _isFinishedOneHoursTimer ends ============
  3045                           
  3046                           
  3047 ;; *************** function _startOneHoursTimer *****************
  3048 ;; Defined at:
  3049 ;;		line 424 in file "D:\develop\190625\AK7030-OTP\common.c"
  3050 ;; Parameters:    Size  Location     Type
  3051 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  3052 ;; Auto vars:     Size  Location     Type
  3053 ;;		None
  3054 ;; Return value:  Size  Location     Type
  3055 ;;		None               void
  3056 ;; Registers used:
  3057 ;;		wreg, status,2, status,0
  3058 ;; Tracked objects:
  3059 ;;		On entry : 60/0
  3060 ;;		On exit  : 60/0
  3061 ;;		Unchanged: FFF9F/0
  3062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3063 ;;      Params:         0       2       0       0       0
  3064 ;;      Locals:         0       0       0       0       0
  3065 ;;      Temps:          0       0       0       0       0
  3066 ;;      Totals:         0       2       0       0       0
  3067 ;;Total ram usage:        2 bytes
  3068 ;; Hardware stack levels used:    1
  3069 ;; Hardware stack levels required when called:    2
  3070 ;; This function calls:
  3071 ;;		Nothing
  3072 ;; This function is called by:
  3073 ;;		_main
  3074 ;; This function uses a non-reentrant model
  3075 ;;
  3076  045B                     _startOneHoursTimer:	
  3077                           
  3078                           ;common.c: 425: if(( 0 == uiOneHourTimer ) && ( 0 == bOneHourTimerStartFlag ))
  3079                           
  3080                           ; Regs used in _startOneHoursTimer: [wreg+status,2+status,0]
  3081  045B  0859               	movf	_uiOneHourTimer+1,w
  3082  045C  0458               	iorwf	_uiOneHourTimer,w
  3083  045D  1D03               	skipz
  3084  045E  0008               	return
  3085  045F  08E3               	movf	_bOneHourTimerStartFlag,f
  3086  0460  1D03               	skipz
  3087  0461  0008               	return
  3088                           
  3089                           ;common.c: 426: {
  3090                           ;common.c: 427: uiOneHourTimer = uiSetTime;
  3091  0462  0821               	movf	startOneHoursTimer@uiSetTime+1,w
  3092  0463  00D9               	movwf	_uiOneHourTimer+1
  3093  0464  0820               	movf	startOneHoursTimer@uiSetTime,w
  3094  0465  00D8               	movwf	_uiOneHourTimer
  3095                           
  3096                           ;common.c: 428: bOneHourTimerStartFlag = 1;
  3097  0466  01E3               	clrf	_bOneHourTimerStartFlag
  3098  0467  0AE3               	incf	_bOneHourTimerStartFlag,f
  3099  0468  0008               	return
  3100  0469                     __end_of_startOneHoursTimer:	
  3101                           
  3102                           	psect	text846
  3103  049D                     __ptext846:	
  3104 ;; =============== function _startOneHoursTimer ends ============
  3105                           
  3106                           
  3107 ;; *************** function _isFinishedThreeHoursTimer *****************
  3108 ;; Defined at:
  3109 ;;		line 494 in file "D:\develop\190625\AK7030-OTP\common.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;		None
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;		None
  3114 ;; Return value:  Size  Location     Type
  3115 ;;                  1    wreg      unsigned char 
  3116 ;; Registers used:
  3117 ;;		wreg, status,2, status,0
  3118 ;; Tracked objects:
  3119 ;;		On entry : 60/0
  3120 ;;		On exit  : 60/0
  3121 ;;		Unchanged: FFF9F/0
  3122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3123 ;;      Params:         0       0       0       0       0
  3124 ;;      Locals:         0       0       0       0       0
  3125 ;;      Temps:          0       0       0       0       0
  3126 ;;      Totals:         0       0       0       0       0
  3127 ;;Total ram usage:        0 bytes
  3128 ;; Hardware stack levels used:    1
  3129 ;; Hardware stack levels required when called:    2
  3130 ;; This function calls:
  3131 ;;		Nothing
  3132 ;; This function is called by:
  3133 ;;		_main
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136  049D                     _isFinishedThreeHoursTimer:	
  3137                           
  3138                           ;common.c: 495: if((uiSmallTimer == 0) && bSmallTimerStartFlag)
  3139                           
  3140                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  3141  049D  085B               	movf	_uiSmallTimer+1,w
  3142  049E  045A               	iorwf	_uiSmallTimer,w
  3143  049F  1D03               	skipz
  3144  04A0  3400               	retlw	0
  3145  04A1  0864               	movf	_bSmallTimerStartFlag,w
  3146  04A2  1903               	btfsc	3,2
  3147  04A3  3400               	retlw	0
  3148  04A4  3001               	movlw	1
  3149                           
  3150                           ;common.c: 496: {
  3151                           ;common.c: 497: bSmallTimerStartFlag = 0;
  3152  04A5  01E4               	clrf	_bSmallTimerStartFlag
  3153                           
  3154                           ;common.c: 498: return 1;
  3155  04A6  0008               	return
  3156  04A7                     __end_of_isFinishedThreeHoursTimer:	
  3157                           ;common.c: 500: else
  3158                           ;common.c: 501: return 0;
  3159                           
  3160                           
  3161                           	psect	text847
  3162  0469                     __ptext847:	
  3163 ;; =============== function _isFinishedThreeHoursTimer ends ============
  3164                           
  3165                           
  3166 ;; *************** function _startThreeHoursTimer *****************
  3167 ;; Defined at:
  3168 ;;		line 411 in file "D:\develop\190625\AK7030-OTP\common.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;		None
  3173 ;; Return value:  Size  Location     Type
  3174 ;;		None               void
  3175 ;; Registers used:
  3176 ;;		wreg, status,2, status,0
  3177 ;; Tracked objects:
  3178 ;;		On entry : 60/0
  3179 ;;		On exit  : 60/0
  3180 ;;		Unchanged: FFF9F/0
  3181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3182 ;;      Params:         0       2       0       0       0
  3183 ;;      Locals:         0       0       0       0       0
  3184 ;;      Temps:          0       0       0       0       0
  3185 ;;      Totals:         0       2       0       0       0
  3186 ;;Total ram usage:        2 bytes
  3187 ;; Hardware stack levels used:    1
  3188 ;; Hardware stack levels required when called:    2
  3189 ;; This function calls:
  3190 ;;		Nothing
  3191 ;; This function is called by:
  3192 ;;		_main
  3193 ;; This function uses a non-reentrant model
  3194 ;;
  3195  0469                     _startThreeHoursTimer:	
  3196                           
  3197                           ;common.c: 412: if(( 0 == uiSmallTimer ) && ( 0 == bSmallTimerStartFlag ))
  3198                           
  3199                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  3200  0469  085B               	movf	_uiSmallTimer+1,w
  3201  046A  045A               	iorwf	_uiSmallTimer,w
  3202  046B  1D03               	skipz
  3203  046C  0008               	return
  3204  046D  08E4               	movf	_bSmallTimerStartFlag,f
  3205  046E  1D03               	skipz
  3206  046F  0008               	return
  3207                           
  3208                           ;common.c: 413: {
  3209                           ;common.c: 414: uiSmallTimer = uiSetTime;
  3210  0470  0821               	movf	startThreeHoursTimer@uiSetTime+1,w
  3211  0471  00DB               	movwf	_uiSmallTimer+1
  3212  0472  0820               	movf	startThreeHoursTimer@uiSetTime,w
  3213  0473  00DA               	movwf	_uiSmallTimer
  3214                           
  3215                           ;common.c: 415: bSmallTimerStartFlag = 1;
  3216  0474  01E4               	clrf	_bSmallTimerStartFlag
  3217  0475  0AE4               	incf	_bSmallTimerStartFlag,f
  3218  0476  0008               	return
  3219  0477                     __end_of_startThreeHoursTimer:	
  3220                           
  3221                           	psect	text848
  3222  04A7                     __ptext848:	
  3223 ;; =============== function _startThreeHoursTimer ends ============
  3224                           
  3225                           
  3226 ;; *************** function _isFinishedTwelveHoursTimer *****************
  3227 ;; Defined at:
  3228 ;;		line 483 in file "D:\develop\190625\AK7030-OTP\common.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;		None
  3231 ;; Auto vars:     Size  Location     Type
  3232 ;;		None
  3233 ;; Return value:  Size  Location     Type
  3234 ;;                  1    wreg      unsigned char 
  3235 ;; Registers used:
  3236 ;;		wreg, status,2, status,0
  3237 ;; Tracked objects:
  3238 ;;		On entry : 60/0
  3239 ;;		On exit  : 60/0
  3240 ;;		Unchanged: FFF9F/0
  3241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3242 ;;      Params:         0       0       0       0       0
  3243 ;;      Locals:         0       0       0       0       0
  3244 ;;      Temps:          0       0       0       0       0
  3245 ;;      Totals:         0       0       0       0       0
  3246 ;;Total ram usage:        0 bytes
  3247 ;; Hardware stack levels used:    1
  3248 ;; Hardware stack levels required when called:    2
  3249 ;; This function calls:
  3250 ;;		Nothing
  3251 ;; This function is called by:
  3252 ;;		_main
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255  04A7                     _isFinishedTwelveHoursTimer:	
  3256                           
  3257                           ;common.c: 484: if(( uiBigTimer == 0 ) && bBigTimerStartFlag )
  3258                           
  3259                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  3260  04A7  0857               	movf	_uiBigTimer+1,w
  3261  04A8  0456               	iorwf	_uiBigTimer,w
  3262  04A9  1D03               	skipz
  3263  04AA  3400               	retlw	0
  3264  04AB  0862               	movf	_bBigTimerStartFlag,w
  3265  04AC  1903               	btfsc	3,2
  3266  04AD  3400               	retlw	0
  3267  04AE  3001               	movlw	1
  3268                           
  3269                           ;common.c: 485: {
  3270                           ;common.c: 486: bBigTimerStartFlag = 0;
  3271  04AF  01E2               	clrf	_bBigTimerStartFlag
  3272                           
  3273                           ;common.c: 487: return 1;
  3274  04B0  0008               	return
  3275  04B1                     __end_of_isFinishedTwelveHoursTimer:	
  3276                           ;common.c: 489: else
  3277                           ;common.c: 490: return 0;
  3278                           
  3279                           
  3280                           	psect	text849
  3281  0477                     __ptext849:	
  3282 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  3283                           
  3284                           
  3285 ;; *************** function _startTwelveHourTimer *****************
  3286 ;; Defined at:
  3287 ;;		line 363 in file "D:\develop\190625\AK7030-OTP\common.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;		None
  3292 ;; Return value:  Size  Location     Type
  3293 ;;		None               void
  3294 ;; Registers used:
  3295 ;;		wreg, status,2, status,0
  3296 ;; Tracked objects:
  3297 ;;		On entry : 160/0
  3298 ;;		On exit  : 160/0
  3299 ;;		Unchanged: FFE9F/0
  3300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3301 ;;      Params:         0       2       0       0       0
  3302 ;;      Locals:         0       0       0       0       0
  3303 ;;      Temps:          0       0       0       0       0
  3304 ;;      Totals:         0       2       0       0       0
  3305 ;;Total ram usage:        2 bytes
  3306 ;; Hardware stack levels used:    1
  3307 ;; Hardware stack levels required when called:    2
  3308 ;; This function calls:
  3309 ;;		Nothing
  3310 ;; This function is called by:
  3311 ;;		_main
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314  0477                     _startTwelveHourTimer:	
  3315                           
  3316                           ;common.c: 364: if((0 == uiBigTimer) && ( 0 == bBigTimerStartFlag))
  3317                           
  3318                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  3319  0477  0857               	movf	_uiBigTimer+1,w
  3320  0478  0456               	iorwf	_uiBigTimer,w
  3321  0479  1D03               	skipz
  3322  047A  0008               	return
  3323  047B  08E2               	movf	_bBigTimerStartFlag,f
  3324  047C  1D03               	skipz
  3325  047D  0008               	return
  3326                           
  3327                           ;common.c: 365: {
  3328                           ;common.c: 366: uiBigTimer = uiSetTime;
  3329  047E  0821               	movf	startTwelveHourTimer@uiSetTime+1,w
  3330  047F  00D7               	movwf	_uiBigTimer+1
  3331  0480  0820               	movf	startTwelveHourTimer@uiSetTime,w
  3332  0481  00D6               	movwf	_uiBigTimer
  3333                           
  3334                           ;common.c: 367: bBigTimerStartFlag = 1;
  3335  0482  01E2               	clrf	_bBigTimerStartFlag
  3336  0483  0AE2               	incf	_bBigTimerStartFlag,f
  3337  0484  0008               	return
  3338  0485                     __end_of_startTwelveHourTimer:	
  3339                           
  3340                           	psect	text850
  3341  04DA                     __ptext850:	
  3342 ;; =============== function _startTwelveHourTimer ends ============
  3343                           
  3344                           
  3345 ;; *************** function _clearTwentyMinTimer *****************
  3346 ;; Defined at:
  3347 ;;		line 404 in file "D:\develop\190625\AK7030-OTP\common.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;		None
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;		None
  3352 ;; Return value:  Size  Location     Type
  3353 ;;		None               void
  3354 ;; Registers used:
  3355 ;;		status,2
  3356 ;; Tracked objects:
  3357 ;;		On entry : 160/0
  3358 ;;		On exit  : 160/0
  3359 ;;		Unchanged: FFE9F/0
  3360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3361 ;;      Params:         0       0       0       0       0
  3362 ;;      Locals:         0       0       0       0       0
  3363 ;;      Temps:          0       0       0       0       0
  3364 ;;      Totals:         0       0       0       0       0
  3365 ;;Total ram usage:        0 bytes
  3366 ;; Hardware stack levels used:    1
  3367 ;; Hardware stack levels required when called:    2
  3368 ;; This function calls:
  3369 ;;		Nothing
  3370 ;; This function is called by:
  3371 ;;		_main
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374  04DA                     _clearTwentyMinTimer:	
  3375                           
  3376                           ;common.c: 405: uiTwentyMinTimer = 0;
  3377                           
  3378                           ; Regs used in _clearTwentyMinTimer: [status,2]
  3379  04DA  01DC               	clrf	_uiTwentyMinTimer
  3380  04DB  01DD               	clrf	_uiTwentyMinTimer+1
  3381                           
  3382                           ;common.c: 406: bTwentyMinStartFlag = 0;
  3383  04DC  01E5               	clrf	_bTwentyMinStartFlag
  3384  04DD  0008               	return
  3385  04DE                     __end_of_clearTwentyMinTimer:	
  3386                           
  3387                           	psect	text851
  3388  04B1                     __ptext851:	
  3389 ;; =============== function _clearTwentyMinTimer ends ============
  3390                           
  3391                           
  3392 ;; *************** function _isFinishedTwentyMinTimer *****************
  3393 ;; Defined at:
  3394 ;;		line 459 in file "D:\develop\190625\AK7030-OTP\common.c"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;		None
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;		None
  3399 ;; Return value:  Size  Location     Type
  3400 ;;                  1    wreg      unsigned char 
  3401 ;; Registers used:
  3402 ;;		wreg, status,2, status,0
  3403 ;; Tracked objects:
  3404 ;;		On entry : 60/0
  3405 ;;		On exit  : 60/0
  3406 ;;		Unchanged: FFF9F/0
  3407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3408 ;;      Params:         0       0       0       0       0
  3409 ;;      Locals:         0       0       0       0       0
  3410 ;;      Temps:          0       0       0       0       0
  3411 ;;      Totals:         0       0       0       0       0
  3412 ;;Total ram usage:        0 bytes
  3413 ;; Hardware stack levels used:    1
  3414 ;; Hardware stack levels required when called:    2
  3415 ;; This function calls:
  3416 ;;		Nothing
  3417 ;; This function is called by:
  3418 ;;		_main
  3419 ;; This function uses a non-reentrant model
  3420 ;;
  3421  04B1                     _isFinishedTwentyMinTimer:	
  3422                           
  3423                           ;common.c: 460: if(( 0 == uiTwentyMinTimer ) && bTwentyMinStartFlag )
  3424                           
  3425                           ; Regs used in _isFinishedTwentyMinTimer: [wreg+status,2+status,0]
  3426  04B1  085D               	movf	_uiTwentyMinTimer+1,w
  3427  04B2  045C               	iorwf	_uiTwentyMinTimer,w
  3428  04B3  1D03               	skipz
  3429  04B4  3400               	retlw	0
  3430  04B5  0865               	movf	_bTwentyMinStartFlag,w
  3431  04B6  1903               	btfsc	3,2
  3432  04B7  3400               	retlw	0
  3433  04B8  3001               	movlw	1
  3434                           
  3435                           ;common.c: 461: {
  3436                           ;common.c: 462: bTwentyMinStartFlag = 0;
  3437  04B9  01E5               	clrf	_bTwentyMinStartFlag
  3438                           
  3439                           ;common.c: 463: return 1;
  3440  04BA  0008               	return
  3441  04BB                     __end_of_isFinishedTwentyMinTimer:	
  3442                           ;common.c: 465: else
  3443                           ;common.c: 466: return 0;
  3444                           
  3445                           
  3446                           	psect	text852
  3447  04ED                     __ptext852:	
  3448 ;; =============== function _isFinishedTwentyMinTimer ends ============
  3449                           
  3450                           
  3451 ;; *************** function _clrSampeTime *****************
  3452 ;; Defined at:
  3453 ;;		line 529 in file "D:\develop\190625\AK7030-OTP\common.c"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;		None
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;		None
  3458 ;; Return value:  Size  Location     Type
  3459 ;;		None               void
  3460 ;; Registers used:
  3461 ;;		status,2
  3462 ;; Tracked objects:
  3463 ;;		On entry : 60/0
  3464 ;;		On exit  : 60/0
  3465 ;;		Unchanged: FFF9F/0
  3466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3467 ;;      Params:         0       0       0       0       0
  3468 ;;      Locals:         0       0       0       0       0
  3469 ;;      Temps:          0       0       0       0       0
  3470 ;;      Totals:         0       0       0       0       0
  3471 ;;Total ram usage:        0 bytes
  3472 ;; Hardware stack levels used:    1
  3473 ;; Hardware stack levels required when called:    2
  3474 ;; This function calls:
  3475 ;;		Nothing
  3476 ;; This function is called by:
  3477 ;;		_main
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480  04ED                     _clrSampeTime:	
  3481                           
  3482                           ;common.c: 530: timer.timer10msStopWatch = 0;
  3483                           
  3484                           ; Regs used in _clrSampeTime: [status,2]
  3485  04ED  01E7               	clrf	_timer
  3486  04EE  0008               	return
  3487  04EF                     __end_of_clrSampeTime:	
  3488                           
  3489                           	psect	text853
  3490  04D5                     __ptext853:	
  3491 ;; =============== function _clrSampeTime ends ============
  3492                           
  3493                           
  3494 ;; *************** function _isPermitSampleTime *****************
  3495 ;; Defined at:
  3496 ;;		line 519 in file "D:\develop\190625\AK7030-OTP\common.c"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;		None
  3499 ;; Auto vars:     Size  Location     Type
  3500 ;;		None
  3501 ;; Return value:  Size  Location     Type
  3502 ;;                  1    wreg      unsigned char 
  3503 ;; Registers used:
  3504 ;;		wreg
  3505 ;; Tracked objects:
  3506 ;;		On entry : 60/0
  3507 ;;		On exit  : 60/0
  3508 ;;		Unchanged: FFF9F/0
  3509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3510 ;;      Params:         0       0       0       0       0
  3511 ;;      Locals:         0       0       0       0       0
  3512 ;;      Temps:          0       0       0       0       0
  3513 ;;      Totals:         0       0       0       0       0
  3514 ;;Total ram usage:        0 bytes
  3515 ;; Hardware stack levels used:    1
  3516 ;; Hardware stack levels required when called:    2
  3517 ;; This function calls:
  3518 ;;		Nothing
  3519 ;; This function is called by:
  3520 ;;		_main
  3521 ;; This function uses a non-reentrant model
  3522 ;;
  3523  04D5                     _isPermitSampleTime:	
  3524                           
  3525                           ;common.c: 520: if(timer.timer10msStopWatch >= 10)
  3526                           
  3527                           ; Regs used in _isPermitSampleTime: [wreg]
  3528  04D5  300A               	movlw	10
  3529  04D6  0267               	subwf	_timer,w
  3530  04D7  1803               	btfsc	3,0
  3531                           
  3532                           ;common.c: 521: {
  3533                           ;common.c: 522: return 1;
  3534  04D8  3401               	retlw	1
  3535                           
  3536                           ;common.c: 524: else
  3537                           ;common.c: 525: return 0;
  3538  04D9  3400               	retlw	0
  3539  04DA                     __end_of_isPermitSampleTime:	
  3540                           
  3541                           	psect	text854
  3542  0485                     __ptext854:	
  3543 ;; =============== function _isPermitSampleTime ends ============
  3544                           
  3545                           
  3546 ;; *************** function _startTwentyMinTimer *****************
  3547 ;; Defined at:
  3548 ;;		line 449 in file "D:\develop\190625\AK7030-OTP\common.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;  uiSetValue      2    0[BANK0 ] unsigned int 
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;		None
  3553 ;; Return value:  Size  Location     Type
  3554 ;;		None               void
  3555 ;; Registers used:
  3556 ;;		wreg, status,2, status,0
  3557 ;; Tracked objects:
  3558 ;;		On entry : 17F/0
  3559 ;;		On exit  : 17F/0
  3560 ;;		Unchanged: FFE80/0
  3561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3562 ;;      Params:         0       2       0       0       0
  3563 ;;      Locals:         0       0       0       0       0
  3564 ;;      Temps:          0       0       0       0       0
  3565 ;;      Totals:         0       2       0       0       0
  3566 ;;Total ram usage:        2 bytes
  3567 ;; Hardware stack levels used:    1
  3568 ;; Hardware stack levels required when called:    2
  3569 ;; This function calls:
  3570 ;;		Nothing
  3571 ;; This function is called by:
  3572 ;;		_main
  3573 ;; This function uses a non-reentrant model
  3574 ;;
  3575  0485                     _startTwentyMinTimer:	
  3576                           
  3577                           ;common.c: 450: if(( 0 == uiTwentyMinTimer) && ( 0 == bTwentyMinStartFlag))
  3578                           
  3579                           ; Regs used in _startTwentyMinTimer: [wreg+status,2+status,0]
  3580  0485  085D               	movf	_uiTwentyMinTimer+1,w
  3581  0486  045C               	iorwf	_uiTwentyMinTimer,w
  3582  0487  1D03               	skipz
  3583  0488  0008               	return
  3584  0489  08E5               	movf	_bTwentyMinStartFlag,f
  3585  048A  1D03               	skipz
  3586  048B  0008               	return
  3587                           
  3588                           ;common.c: 451: {
  3589                           ;common.c: 452: uiTwentyMinTimer = uiSetValue;
  3590  048C  0821               	movf	startTwentyMinTimer@uiSetValue+1,w
  3591  048D  00DD               	movwf	_uiTwentyMinTimer+1
  3592  048E  0820               	movf	startTwentyMinTimer@uiSetValue,w
  3593  048F  00DC               	movwf	_uiTwentyMinTimer
  3594                           
  3595                           ;common.c: 453: bTwentyMinStartFlag = 1;
  3596  0490  01E5               	clrf	_bTwentyMinStartFlag
  3597  0491  0AE5               	incf	_bTwentyMinStartFlag,f
  3598  0492  0008               	return
  3599  0493                     __end_of_startTwentyMinTimer:	
  3600                           
  3601                           	psect	text857
  3602  04EA                     __ptext857:	
  3603 ;; =============== function _adc_test_init ends ============
  3604                           
  3605                           
  3606 ;; *************** function _timer1_interrupt_config *****************
  3607 ;; Defined at:
  3608 ;;		line 201 in file "D:\develop\190625\AK7030-OTP\common.c"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;		None
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;		None
  3613 ;; Return value:  Size  Location     Type
  3614 ;;		None               void
  3615 ;; Registers used:
  3616 ;;		None
  3617 ;; Tracked objects:
  3618 ;;		On entry : 17F/20
  3619 ;;		On exit  : 17F/20
  3620 ;;		Unchanged: FFE80/0
  3621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3622 ;;      Params:         0       0       0       0       0
  3623 ;;      Locals:         0       0       0       0       0
  3624 ;;      Temps:          0       0       0       0       0
  3625 ;;      Totals:         0       0       0       0       0
  3626 ;;Total ram usage:        0 bytes
  3627 ;; Hardware stack levels used:    1
  3628 ;; Hardware stack levels required when called:    2
  3629 ;; This function calls:
  3630 ;;		Nothing
  3631 ;; This function is called by:
  3632 ;;		_main
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635  04EA                     _timer1_interrupt_config:	
  3636                           
  3637                           ;common.c: 202: GIE = 1;
  3638                           
  3639                           ; Regs used in _timer1_interrupt_config: []
  3640  04EA  178B               	bsf	11,7
  3641                           
  3642                           ;common.c: 203: PEIE = 1;
  3643  04EB  170B               	bsf	11,6
  3644  04EC  0008               	return
  3645  04ED                     __end_of_timer1_interrupt_config:	
  3646                           
  3647                           	psect	text858
  3648  04BB                     __ptext858:	
  3649 ;; =============== function _timer1_interrupt_config ends ============
  3650                           
  3651                           
  3652 ;; *************** function _timer1_config *****************
  3653 ;; Defined at:
  3654 ;;		line 189 in file "D:\develop\190625\AK7030-OTP\common.c"
  3655 ;; Parameters:    Size  Location     Type
  3656 ;;		None
  3657 ;; Auto vars:     Size  Location     Type
  3658 ;;		None
  3659 ;; Return value:  Size  Location     Type
  3660 ;;		None               void
  3661 ;; Registers used:
  3662 ;;		wreg
  3663 ;; Tracked objects:
  3664 ;;		On entry : 17F/40
  3665 ;;		On exit  : 17F/20
  3666 ;;		Unchanged: FFE80/0
  3667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3668 ;;      Params:         0       0       0       0       0
  3669 ;;      Locals:         0       0       0       0       0
  3670 ;;      Temps:          0       0       0       0       0
  3671 ;;      Totals:         0       0       0       0       0
  3672 ;;Total ram usage:        0 bytes
  3673 ;; Hardware stack levels used:    1
  3674 ;; Hardware stack levels required when called:    2
  3675 ;; This function calls:
  3676 ;;		Nothing
  3677 ;; This function is called by:
  3678 ;;		_main
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681  04BB                     _timer1_config:	
  3682                           
  3683                           ;common.c: 191: TMR1H=0xCF;
  3684                           
  3685                           ; Regs used in _timer1_config: [wreg]
  3686  04BB  30CF               	movlw	207
  3687  04BC  1303               	bcf	3,6	;RP1=0, select bank0
  3688  04BD  008F               	movwf	15	;volatile
  3689                           
  3690                           ;common.c: 192: TMR1L=0x2C;
  3691  04BE  302C               	movlw	44
  3692  04BF  008E               	movwf	14	;volatile
  3693                           
  3694                           ;common.c: 193: T1CON=0xE1;
  3695  04C0  30E1               	movlw	225
  3696  04C1  0090               	movwf	16	;volatile
  3697                           
  3698                           ;common.c: 194: TMR1IE=1;
  3699  04C2  1683               	bsf	3,5	;RP0=1, select bank1
  3700  04C3  140C               	bsf	12,0
  3701  04C4  0008               	return
  3702  04C5                     __end_of_timer1_config:	
  3703                           
  3704                           	psect	text859
  3705  04CD                     __ptext859:	
  3706 ;; =============== function _timer1_config ends ============
  3707                           
  3708                           
  3709 ;; *************** function _clock_config *****************
  3710 ;; Defined at:
  3711 ;;		line 181 in file "D:\develop\190625\AK7030-OTP\common.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;		None
  3714 ;; Auto vars:     Size  Location     Type
  3715 ;;		None
  3716 ;; Return value:  Size  Location     Type
  3717 ;;		None               void
  3718 ;; Registers used:
  3719 ;;		wreg, status,2
  3720 ;; Tracked objects:
  3721 ;;		On entry : 17F/20
  3722 ;;		On exit  : 17F/40
  3723 ;;		Unchanged: FFE80/0
  3724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3725 ;;      Params:         0       0       0       0       0
  3726 ;;      Locals:         0       0       0       0       0
  3727 ;;      Temps:          0       0       0       0       0
  3728 ;;      Totals:         0       0       0       0       0
  3729 ;;Total ram usage:        0 bytes
  3730 ;; Hardware stack levels used:    1
  3731 ;; Hardware stack levels required when called:    2
  3732 ;; This function calls:
  3733 ;;		Nothing
  3734 ;; This function is called by:
  3735 ;;		_main
  3736 ;; This function uses a non-reentrant model
  3737 ;;
  3738  04CD                     _clock_config:	
  3739                           
  3740                           ;common.c: 183: CLKPR = 0x80;
  3741                           
  3742                           ; Regs used in _clock_config: [wreg+status,2]
  3743  04CD  3080               	movlw	128
  3744  04CE  1283               	bcf	3,5	;RP0=0, select bank2
  3745  04CF  1703               	bsf	3,6	;RP1=1, select bank2
  3746  04D0  0088               	movwf	8	;volatile
  3747                           
  3748                           ;common.c: 184: CLKPR = 0x00;
  3749  04D1  0188               	clrf	8	;volatile
  3750  04D2                     l1521:	
  3751                           ;common.c: 185: while(CLKPCE);
  3752                           
  3753  04D2  1F88               	btfss	8,7
  3754  04D3  0008               	return
  3755  04D4  2CD2               	goto	l1521
  3756  04D5                     __end_of_clock_config:	
  3757                           
  3758                           	psect	text860
  3759  04EF                     __ptext860:	
  3760 ;; =============== function _clock_config ends ============
  3761                           
  3762                           
  3763 ;; *************** function _reset *****************
  3764 ;; Defined at:
  3765 ;;		line 306 in file "D:\develop\190625\AK7030-OTP\main.c"
  3766 ;; Parameters:    Size  Location     Type
  3767 ;;		None
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;		None
  3770 ;; Return value:  Size  Location     Type
  3771 ;;		None               void
  3772 ;; Registers used:
  3773 ;;		None
  3774 ;; Tracked objects:
  3775 ;;		On entry : 40/20
  3776 ;;		On exit  : 40/20
  3777 ;;		Unchanged: FFFFFFBF/0
  3778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3779 ;;      Params:         0       0       0       0       0
  3780 ;;      Locals:         0       0       0       0       0
  3781 ;;      Temps:          0       0       0       0       0
  3782 ;;      Totals:         0       0       0       0       0
  3783 ;;Total ram usage:        0 bytes
  3784 ;; Hardware stack levels used:    1
  3785 ;; Hardware stack levels required when called:    2
  3786 ;; This function calls:
  3787 ;;		Nothing
  3788 ;; This function is called by:
  3789 ;;		_main
  3790 ;; This function uses a non-reentrant model
  3791 ;;
  3792  04EF                     _reset:	
  3793  04EF                     l725:	
  3794                           ; Regs used in _reset: []
  3795                           ;main.c: 308: while(1);
  3796                           
  3797  04EF  2CEF               	goto	l725
  3798                           
  3799                           	psect	text861
  3800  04DE                     __ptext861:	
  3801  04DE                     __end_of_reset:	
  3802                           
  3803 ;; =============== function _reset ends ============
  3804 ;; *************** function _selectAdChannel *****************
  3805 ;; Defined at:
  3806 ;;		line 295 in file "D:\develop\190625\AK7030-OTP\main.c"
  3807 ;; Parameters:    Size  Location     Type
  3808 ;;		None
  3809 ;; Auto vars:     Size  Location     Type
  3810 ;;		None
  3811 ;; Return value:  Size  Location     Type
  3812 ;;		None               void
  3813 ;; Registers used:
  3814 ;;		None
  3815 ;; Tracked objects:
  3816 ;;		On entry : 17F/0
  3817 ;;		On exit  : 17F/20
  3818 ;;		Unchanged: FFE80/0
  3819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3820 ;;      Params:         0       0       0       0       0
  3821 ;;      Locals:         0       0       0       0       0
  3822 ;;      Temps:          0       0       0       0       0
  3823 ;;      Totals:         0       0       0       0       0
  3824 ;;Total ram usage:        0 bytes
  3825 ;; Hardware stack levels used:    1
  3826 ;; Hardware stack levels required when called:    2
  3827 ;; This function calls:
  3828 ;;		Nothing
  3829 ;; This function is called by:
  3830 ;;		_main
  3831 ;; This function uses a non-reentrant model
  3832 ;;
  3833  04DE                     _selectAdChannel:	
  3834                           
  3835                           ;main.c: 297: TRISB0 = 1;
  3836                           
  3837                           ; Regs used in _selectAdChannel: []
  3838  04DE  1683               	bsf	3,5	;RP0=1, select bank1
  3839  04DF  1406               	bsf	6,0
  3840                           
  3841                           ;main.c: 298: TRISB1 = 1;
  3842  04E0  1486               	bsf	6,1
  3843  04E1  0008               	return
  3844  04E2                     __end_of_selectAdChannel:	
  3845                           
  3846                           	psect	text862
  3847  0434                     __ptext862:	
  3848 ;; =============== function _selectAdChannel ends ============
  3849                           
  3850                           
  3851 ;; *************** function _pwm_start *****************
  3852 ;; Defined at:
  3853 ;;		line 243 in file "D:\develop\190625\AK7030-OTP\main.c"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;  ucPulseWidth    1    wreg     unsigned char 
  3856 ;; Auto vars:     Size  Location     Type
  3857 ;;  ucPulseWidth    1    0[BANK0 ] unsigned char 
  3858 ;; Return value:  Size  Location     Type
  3859 ;;		None               void
  3860 ;; Registers used:
  3861 ;;		wreg, status,2, status,0
  3862 ;; Tracked objects:
  3863 ;;		On entry : 60/0
  3864 ;;		On exit  : 60/0
  3865 ;;		Unchanged: FFF9F/0
  3866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3867 ;;      Params:         0       0       0       0       0
  3868 ;;      Locals:         0       1       0       0       0
  3869 ;;      Temps:          0       0       0       0       0
  3870 ;;      Totals:         0       1       0       0       0
  3871 ;;Total ram usage:        1 bytes
  3872 ;; Hardware stack levels used:    1
  3873 ;; Hardware stack levels required when called:    2
  3874 ;; This function calls:
  3875 ;;		Nothing
  3876 ;; This function is called by:
  3877 ;;		_main
  3878 ;; This function uses a non-reentrant model
  3879 ;;
  3880  0434                     _pwm_start:	
  3881                           
  3882                           ; Regs used in _pwm_start: [wreg+status,2+status,0]
  3883                           ;pwm_start@ucPulseWidth stored from wreg
  3884  0434  00A0               	movwf	pwm_start@ucPulseWidth
  3885                           
  3886                           ;main.c: 245: CCP1CON&= 0xf0;
  3887  0435  30F0               	movlw	240
  3888  0436  0597               	andwf	23,f	;volatile
  3889                           
  3890                           ;main.c: 247: T2CON=0x04;
  3891  0437  3004               	movlw	4
  3892  0438  0092               	movwf	18	;volatile
  3893                           
  3894                           ;main.c: 248: PR2 = 99;
  3895  0439  3063               	movlw	99
  3896  043A  1683               	bsf	3,5	;RP0=1, select bank1
  3897  043B  0092               	movwf	18	;volatile
  3898                           
  3899                           ;main.c: 249: CCPR1L = ucPulseWidth;
  3900  043C  1283               	bcf	3,5	;RP0=0, select bank0
  3901  043D  0820               	movf	pwm_start@ucPulseWidth,w
  3902  043E  0095               	movwf	21	;volatile
  3903                           
  3904                           ;main.c: 250: CCP1CON=0x00;
  3905  043F  0197               	clrf	23	;volatile
  3906                           
  3907                           ;main.c: 252: TRISB2=0;
  3908  0440  1683               	bsf	3,5	;RP0=1, select bank1
  3909  0441  300C               	movlw	12
  3910  0442  1106               	bcf	6,2
  3911                           
  3912                           ;main.c: 253: PBOD2 = 0;
  3913  0443  1703               	bsf	3,6	;RP1=1, select bank3
  3914  0444  1108               	bcf	8,2
  3915                           
  3916                           ;main.c: 255: CCP1CON|= 0x0c;
  3917  0445  1283               	bcf	3,5	;RP0=0, select bank0
  3918  0446  1303               	bcf	3,6	;RP1=0, select bank0
  3919  0447  0497               	iorwf	23,f	;volatile
  3920  0448  0008               	return
  3921  0449                     __end_of_pwm_start:	
  3922                           
  3923                           	psect	text870
  3924  04E2                     __ptext870:	
  3925 ;; =============== function _initPB3 ends ============
  3926                           
  3927                           
  3928 ;; *************** function _clearThreeHoursTimer *****************
  3929 ;; Defined at:
  3930 ;;		line 384 in file "D:\develop\190625\AK7030-OTP\common.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;		None
  3933 ;; Auto vars:     Size  Location     Type
  3934 ;;		None
  3935 ;; Return value:  Size  Location     Type
  3936 ;;		None               void
  3937 ;; Registers used:
  3938 ;;		status,2
  3939 ;; Tracked objects:
  3940 ;;		On entry : 60/0
  3941 ;;		On exit  : 60/0
  3942 ;;		Unchanged: FFF9F/0
  3943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3944 ;;      Params:         0       0       0       0       0
  3945 ;;      Locals:         0       0       0       0       0
  3946 ;;      Temps:          0       0       0       0       0
  3947 ;;      Totals:         0       0       0       0       0
  3948 ;;Total ram usage:        0 bytes
  3949 ;; Hardware stack levels used:    1
  3950 ;; Hardware stack levels required when called:    2
  3951 ;; This function calls:
  3952 ;;		Nothing
  3953 ;; This function is called by:
  3954 ;;		_main
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957  04E2                     _clearThreeHoursTimer:	
  3958                           
  3959                           ;common.c: 385: uiSmallTimer = 0;
  3960                           
  3961                           ; Regs used in _clearThreeHoursTimer: [status,2]
  3962  04E2  01DA               	clrf	_uiSmallTimer
  3963  04E3  01DB               	clrf	_uiSmallTimer+1
  3964                           
  3965                           ;common.c: 386: bSmallTimerStartFlag = 0;
  3966  04E4  01E4               	clrf	_bSmallTimerStartFlag
  3967  04E5  0008               	return
  3968  04E6                     __end_of_clearThreeHoursTimer:	
  3969                           
  3970                           	psect	text871
  3971  04E6                     __ptext871:	
  3972 ;; =============== function _clearThreeHoursTimer ends ============
  3973                           
  3974                           
  3975 ;; *************** function _clearTwelveHoursTimer *****************
  3976 ;; Defined at:
  3977 ;;		line 377 in file "D:\develop\190625\AK7030-OTP\common.c"
  3978 ;; Parameters:    Size  Location     Type
  3979 ;;		None
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;		None
  3982 ;; Return value:  Size  Location     Type
  3983 ;;		None               void
  3984 ;; Registers used:
  3985 ;;		status,2
  3986 ;; Tracked objects:
  3987 ;;		On entry : 60/0
  3988 ;;		On exit  : 60/0
  3989 ;;		Unchanged: FFF9F/0
  3990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3991 ;;      Params:         0       0       0       0       0
  3992 ;;      Locals:         0       0       0       0       0
  3993 ;;      Temps:          0       0       0       0       0
  3994 ;;      Totals:         0       0       0       0       0
  3995 ;;Total ram usage:        0 bytes
  3996 ;; Hardware stack levels used:    1
  3997 ;; Hardware stack levels required when called:    2
  3998 ;; This function calls:
  3999 ;;		Nothing
  4000 ;; This function is called by:
  4001 ;;		_main
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004  04E6                     _clearTwelveHoursTimer:	
  4005                           
  4006                           ;common.c: 378: uiBigTimer = 0;
  4007                           
  4008                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  4009  04E6  01D6               	clrf	_uiBigTimer
  4010  04E7  01D7               	clrf	_uiBigTimer+1
  4011                           
  4012                           ;common.c: 379: bBigTimerStartFlag = 0;
  4013  04E8  01E2               	clrf	_bBigTimerStartFlag
  4014  04E9  0008               	return
  4015  04EA                     __end_of_clearTwelveHoursTimer:	
  4016                           
  4017                           	psect	text872
  4018  02B6                     __ptext872:	
  4019 ;; =============== function _clearTwelveHoursTimer ends ============
  4020                           
  4021                           
  4022 ;; *************** function _ISR *****************
  4023 ;; Defined at:
  4024 ;;		line 534 in file "D:\develop\190625\AK7030-OTP\common.c"
  4025 ;; Parameters:    Size  Location     Type
  4026 ;;		None
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;		None
  4029 ;; Return value:  Size  Location     Type
  4030 ;;		None               void
  4031 ;; Registers used:
  4032 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4033 ;; Tracked objects:
  4034 ;;		On entry : 0/0
  4035 ;;		On exit  : 60/0
  4036 ;;		Unchanged: FFE00/0
  4037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4038 ;;      Params:         0       0       0       0       0
  4039 ;;      Locals:         0       0       0       0       0
  4040 ;;      Temps:          4       0       0       0       0
  4041 ;;      Totals:         4       0       0       0       0
  4042 ;;Total ram usage:        4 bytes
  4043 ;; Hardware stack levels used:    1
  4044 ;; Hardware stack levels required when called:    1
  4045 ;; This function calls:
  4046 ;;		i1_setAD_ConvertFlag
  4047 ;;		_adc_get
  4048 ;;		_vPutSampleDataIntoTable
  4049 ;; This function is called by:
  4050 ;;		Interrupt level 1
  4051 ;; This function uses a non-reentrant model
  4052 ;;
  4053  02B6                     _ISR:	
  4054                           
  4055                           ;common.c: 535: static unsigned char ucTimer1sCnt = 0;
  4056                           ;common.c: 537: if(TMR1IF == 1)
  4057  02B6  1C0C               	btfss	12,0
  4058  02B7  2AF4               	goto	i1l3591
  4059  02B8  3064               	movlw	100
  4060                           
  4061                           ;common.c: 538: {
  4062                           ;common.c: 539: TMR1IF = 0 ;
  4063  02B9  100C               	bcf	12,0
  4064                           
  4065                           ;common.c: 540: timer.timer10msStopWatch++;
  4066  02BA  0AE7               	incf	_timer,f
  4067                           
  4068                           ;common.c: 541: ucTimer1sCnt++;
  4069  02BB  0AE0               	incf	ISR@ucTimer1sCnt,f
  4070                           
  4071                           ;common.c: 543: if(ucTimer1sCnt >= 100)
  4072  02BC  0260               	subwf	ISR@ucTimer1sCnt,w
  4073  02BD  1C03               	skipc
  4074  02BE  2AF4               	goto	i1l3591
  4075                           
  4076                           ;common.c: 544: {
  4077                           ;common.c: 545: ucTimer1sCnt = 0;
  4078  02BF  01E0               	clrf	ISR@ucTimer1sCnt
  4079                           
  4080                           ;common.c: 546: if(uiBigTimer > 0)
  4081  02C0  0857               	movf	_uiBigTimer+1,w
  4082  02C1  0456               	iorwf	_uiBigTimer,w
  4083  02C2  1903               	skipnz
  4084  02C3  2ACA               	goto	i1l1636
  4085                           
  4086                           ;common.c: 547: uiBigTimer--;
  4087  02C4  3001               	movlw	1
  4088  02C5  02D6               	subwf	_uiBigTimer,f
  4089  02C6  3000               	movlw	0
  4090  02C7  1C03               	skipc
  4091  02C8  03D7               	decf	_uiBigTimer+1,f
  4092  02C9  02D7               	subwf	_uiBigTimer+1,f
  4093  02CA                     i1l1636:	
  4094                           
  4095                           ;common.c: 549: if(uiSmallTimer)
  4096  02CA  085B               	movf	_uiSmallTimer+1,w
  4097  02CB  045A               	iorwf	_uiSmallTimer,w
  4098  02CC  1903               	skipnz
  4099  02CD  2AD4               	goto	i1l1637
  4100                           
  4101                           ;common.c: 550: uiSmallTimer--;
  4102  02CE  3001               	movlw	1
  4103  02CF  02DA               	subwf	_uiSmallTimer,f
  4104  02D0  3000               	movlw	0
  4105  02D1  1C03               	skipc
  4106  02D2  03DB               	decf	_uiSmallTimer+1,f
  4107  02D3  02DB               	subwf	_uiSmallTimer+1,f
  4108  02D4                     i1l1637:	
  4109                           
  4110                           ;common.c: 552: if(uiTwentySecondsTimer)
  4111  02D4  1683               	bsf	3,5	;RP0=1, select bank1
  4112  02D5  0821               	movf	(_uiTwentySecondsTimer+1)^(0+128),w
  4113  02D6  0420               	iorwf	_uiTwentySecondsTimer^(0+128),w
  4114  02D7  1903               	skipnz
  4115  02D8  2ADF               	goto	i1l1638
  4116                           
  4117                           ;common.c: 553: uiTwentySecondsTimer--;
  4118  02D9  3001               	movlw	1
  4119  02DA  02A0               	subwf	_uiTwentySecondsTimer^(0+128),f
  4120  02DB  3000               	movlw	0
  4121  02DC  1C03               	skipc
  4122  02DD  03A1               	decf	(_uiTwentySecondsTimer+1)^(0+128),f
  4123  02DE  02A1               	subwf	(_uiTwentySecondsTimer+1)^(0+128),f
  4124  02DF                     i1l1638:	
  4125                           
  4126                           ;common.c: 555: if(uiTwentyMinTimer)
  4127  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  4128  02E0  085D               	movf	_uiTwentyMinTimer+1,w
  4129  02E1  045C               	iorwf	_uiTwentyMinTimer,w
  4130  02E2  1903               	skipnz
  4131  02E3  2AEA               	goto	i1l1639
  4132                           
  4133                           ;common.c: 556: uiTwentyMinTimer--;
  4134  02E4  3001               	movlw	1
  4135  02E5  02DC               	subwf	_uiTwentyMinTimer,f
  4136  02E6  3000               	movlw	0
  4137  02E7  1C03               	skipc
  4138  02E8  03DD               	decf	_uiTwentyMinTimer+1,f
  4139  02E9  02DD               	subwf	_uiTwentyMinTimer+1,f
  4140  02EA                     i1l1639:	
  4141                           
  4142                           ;common.c: 558: if( uiOneHourTimer )
  4143  02EA  0859               	movf	_uiOneHourTimer+1,w
  4144  02EB  0458               	iorwf	_uiOneHourTimer,w
  4145  02EC  1903               	skipnz
  4146  02ED  2AF4               	goto	i1l3591
  4147                           
  4148                           ;common.c: 559: uiOneHourTimer--;
  4149  02EE  3001               	movlw	1
  4150  02EF  02D8               	subwf	_uiOneHourTimer,f
  4151  02F0  3000               	movlw	0
  4152  02F1  1C03               	skipc
  4153  02F2  03D9               	decf	_uiOneHourTimer+1,f
  4154  02F3  02D9               	subwf	_uiOneHourTimer+1,f
  4155  02F4                     i1l3591:	
  4156                           
  4157                           ;common.c: 560: }
  4158                           ;common.c: 561: }
  4159                           ;common.c: 563: if(ADIF)
  4160  02F4  1D0D               	btfss	13,2
  4161  02F5  2B0F               	goto	i1l1644
  4162  02F6  3001               	movlw	1
  4163                           
  4164                           ;common.c: 564: {
  4165                           ;common.c: 566: ADIF=0;
  4166  02F7  110D               	bcf	13,2
  4167                           
  4168                           ;common.c: 567: setAD_ConvertFlag(1);
  4169  02F8  2386  118A         	fcall	i1_setAD_ConvertFlag
  4170                           
  4171                           ;common.c: 569: if(sampleChannelSelect == 12)
  4172  02FA  086F               	movf	_sampleChannelSelect,w
  4173  02FB  3A0C               	xorlw	12
  4174  02FC  1D03               	skipz
  4175  02FD  2B06               	goto	i1l3601
  4176                           
  4177                           ;common.c: 570: {
  4178                           ;common.c: 573: vPutSampleDataIntoTable(adc_get(),12);
  4179  02FE  231C  118A         	fcall	_adc_get
  4180  0300  0871               	movf	?_adc_get+1,w
  4181  0301  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4182  0302  0870               	movf	?_adc_get,w
  4183  0303  00F4               	movwf	?_vPutSampleDataIntoTable
  4184  0304  300C               	movlw	12
  4185  0305  2B0D               	goto	L14
  4186  0306                     i1l3601:	
  4187                           ;common.c: 577: }
  4188                           
  4189                           
  4190                           ;common.c: 578: else
  4191                           ;common.c: 579: {
  4192                           ;common.c: 583: vPutSampleDataIntoTable(adc_get(),13);
  4193  0306  231C  118A         	fcall	_adc_get
  4194  0308  0871               	movf	?_adc_get+1,w
  4195  0309  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4196  030A  0870               	movf	?_adc_get,w
  4197  030B  00F4               	movwf	?_vPutSampleDataIntoTable
  4198  030C  300D               	movlw	13
  4199  030D                     L14:	
  4200  030D  00F6               	movwf	?_vPutSampleDataIntoTable+2
  4201  030E  2327               	fcall	_vPutSampleDataIntoTable
  4202  030F                     i1l1644:	
  4203  030F  087C               	movf	??_ISR+3,w
  4204  0310  1283               	bcf	3,5	;RP0=0, select bank0
  4205  0311  1303               	bcf	3,6	;RP1=0, select bank0
  4206  0312  00FF               	movwf	127
  4207  0313  087B               	movf	??_ISR+2,w
  4208  0314  008A               	movwf	10
  4209  0315  087A               	movf	??_ISR+1,w
  4210  0316  0084               	movwf	4
  4211  0317  0E79               	swapf	??_ISR^(0+-128),w
  4212  0318  0083               	movwf	3
  4213  0319  0EFE               	swapf	126,f
  4214  031A  0E7E               	swapf	126,w
  4215  031B  0009               	retfie
  4216  031C                     __end_of_ISR:	
  4217  031C                     __ptext874:	
  4218 ;; =============== function i1_setAD_ConvertFlag ends ============
  4219                           
  4220                           
  4221 ;; *************** function _adc_get *****************
  4222 ;; Defined at:
  4223 ;;		line 105 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4224 ;; Parameters:    Size  Location     Type
  4225 ;;		None
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;  val             2    2[COMMON] unsigned int 
  4228 ;; Return value:  Size  Location     Type
  4229 ;;                  2    0[COMMON] unsigned int 
  4230 ;; Registers used:
  4231 ;;		wreg
  4232 ;; Tracked objects:
  4233 ;;		On entry : 60/0
  4234 ;;		On exit  : 60/20
  4235 ;;		Unchanged: FFF9F/0
  4236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4237 ;;      Params:         2       0       0       0       0
  4238 ;;      Locals:         2       0       0       0       0
  4239 ;;      Temps:          0       0       0       0       0
  4240 ;;      Totals:         4       0       0       0       0
  4241 ;;Total ram usage:        4 bytes
  4242 ;; Hardware stack levels used:    1
  4243 ;; This function calls:
  4244 ;;		Nothing
  4245 ;; This function is called by:
  4246 ;;		_ISR
  4247 ;; This function uses a non-reentrant model
  4248 ;;
  4249  031C                     _adc_get:	
  4250                           
  4251                           ;periph.c: 106: unsigned int val;
  4252                           ;periph.c: 107: val = (ADRESH<<8) | ADRESL;
  4253                           
  4254                           ; Regs used in _adc_get: [wreg]
  4255  031C  081E               	movf	30,w	;volatile
  4256  031D  00F3               	movwf	adc_get@val+1
  4257  031E  01F2               	clrf	adc_get@val
  4258  031F  1683               	bsf	3,5	;RP0=1, select bank1
  4259  0320  081E               	movf	30,w	;volatile
  4260  0321  04F2               	iorwf	adc_get@val,f
  4261                           
  4262                           ;periph.c: 108: return val;
  4263  0322  0873               	movf	adc_get@val+1,w
  4264  0323  00F1               	movwf	?_adc_get+1
  4265  0324  0872               	movf	adc_get@val,w
  4266  0325  00F0               	movwf	?_adc_get
  4267  0326  0008               	return
  4268  0327                     __end_of_adc_get:	
  4269  0327                     __ptext875:	
  4270 ;; =============== function _adc_get ends ============
  4271                           
  4272                           
  4273 ;; *************** function _vPutSampleDataIntoTable *****************
  4274 ;; Defined at:
  4275 ;;		line 106 in file "D:\develop\190625\AK7030-OTP\common.c"
  4276 ;; Parameters:    Size  Location     Type
  4277 ;;  uiSampleData    2    4[COMMON] unsigned int 
  4278 ;;  channel         1    6[COMMON] unsigned char 
  4279 ;; Auto vars:     Size  Location     Type
  4280 ;;  i               2    7[COMMON] int 
  4281 ;; Return value:  Size  Location     Type
  4282 ;;		None               void
  4283 ;; Registers used:
  4284 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4285 ;; Tracked objects:
  4286 ;;		On entry : 60/20
  4287 ;;		On exit  : 0/0
  4288 ;;		Unchanged: FFE00/0
  4289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4290 ;;      Params:         3       0       0       0       0
  4291 ;;      Locals:         2       0       0       0       0
  4292 ;;      Temps:          0       0       0       0       0
  4293 ;;      Totals:         5       0       0       0       0
  4294 ;;Total ram usage:        5 bytes
  4295 ;; Hardware stack levels used:    1
  4296 ;; This function calls:
  4297 ;;		Nothing
  4298 ;; This function is called by:
  4299 ;;		_ISR
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302  0327                     _vPutSampleDataIntoTable:	
  4303                           
  4304                           ;common.c: 108: static unsigned char ucChannelFirstLength = 0;
  4305                           ;common.c: 110: static unsigned char ucChannelFourthLength = 0;
  4306                           ;common.c: 112: static unsigned char ucChannelFourteenthLength = 0;
  4307                           ;common.c: 114: if(channel == 12)
  4308                           
  4309                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1]
  4310  0327  0876               	movf	vPutSampleDataIntoTable@channel,w
  4311  0328  3A0C               	xorlw	12
  4312  0329  1D03               	skipz
  4313  032A  2B3B               	goto	i1l3513
  4314                           
  4315                           ;common.c: 115: {
  4316                           ;common.c: 116: if(ucChannelFirstLength < 12)
  4317  032B  300C               	movlw	12
  4318  032C  027D               	subwf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4319  032D  1803               	skipnc
  4320  032E  2B35               	goto	i1l3509
  4321                           
  4322                           ;common.c: 117: {
  4323                           ;common.c: 118: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  4324  032F  1003               	clrc
  4325  0330  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4326  0331  3EA8               	addlw	_uiSampleChannelFirst& (0+255)
  4327  0332  2389               	fcall	PL2	;call to abstracted procedure
  4328                           
  4329                           ;common.c: 120: ucChannelFirstLength++;
  4330  0333  0AFD               	incf	vPutSampleDataIntoTable@ucChannelFirstLength,f
  4331                           
  4332                           ;common.c: 121: }
  4333  0334  0008               	return
  4334  0335                     i1l3509:	
  4335                           
  4336                           ;common.c: 122: else
  4337                           ;common.c: 123: {
  4338                           ;common.c: 124: ucChannelFirstLength = 0;
  4339  0335  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  4340                           
  4341                           ;common.c: 126: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  4342  0336  1003               	clrc
  4343  0337  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4344  0338  3EA8               	addlw	_uiSampleChannelFirst& (0+255)
  4345  0339  2389               	fcall	PL2	;call to abstracted procedure
  4346  033A  0008               	return
  4347  033B                     i1l3513:	
  4348                           
  4349                           ;common.c: 129: else if(channel == 13)
  4350  033B  0876               	movf	vPutSampleDataIntoTable@channel,w
  4351  033C  3A0D               	xorlw	13
  4352  033D  1D03               	skipz
  4353  033E  2B50               	goto	i1l3525
  4354                           
  4355                           ;common.c: 130: {
  4356                           ;common.c: 131: if(ucChannelFourthLength < 12)
  4357  033F  300C               	movlw	12
  4358  0340  1283               	bcf	3,5	;RP0=0, select bank0
  4359  0341  026E               	subwf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4360  0342  1803               	skipnc
  4361  0343  2B4A               	goto	i1l3521
  4362                           
  4363                           ;common.c: 132: {
  4364                           ;common.c: 133: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  4365  0344  1003               	clrc
  4366  0345  0D6E               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4367  0346  3ED8               	addlw	_uiSampleChannelFourth& (0+255)
  4368  0347  2389               	fcall	PL2	;call to abstracted procedure
  4369                           
  4370                           ;common.c: 135: ucChannelFourthLength++;
  4371  0348  0AEE               	incf	vPutSampleDataIntoTable@ucChannelFourthLength,f
  4372                           
  4373                           ;common.c: 136: }
  4374  0349  0008               	return
  4375  034A                     i1l3521:	
  4376                           
  4377                           ;common.c: 137: else
  4378                           ;common.c: 138: {
  4379                           ;common.c: 139: ucChannelFourthLength = 0;
  4380  034A  01EE               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  4381                           
  4382                           ;common.c: 141: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  4383  034B  1003               	clrc
  4384  034C  0D6E               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4385  034D  3ED8               	addlw	_uiSampleChannelFourth& (0+255)
  4386  034E  2389               	fcall	PL2	;call to abstracted procedure
  4387  034F  0008               	return
  4388  0350                     i1l3525:	
  4389                           
  4390                           ;common.c: 144: else if(channel == 14)
  4391  0350  0876               	movf	vPutSampleDataIntoTable@channel,w
  4392  0351  3A0E               	xorlw	14
  4393  0352  1D03               	skipz
  4394  0353  2B65               	goto	i1l3537
  4395                           
  4396                           ;common.c: 145: {
  4397                           ;common.c: 146: if(ucChannelFourteenthLength < 12)
  4398  0354  300C               	movlw	12
  4399  0355  1283               	bcf	3,5	;RP0=0, select bank0
  4400  0356  026D               	subwf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4401  0357  1803               	skipnc
  4402  0358  2B5F               	goto	i1l3533
  4403                           
  4404                           ;common.c: 147: {
  4405                           ;common.c: 148: uiSampleChannelFourteenth[ucChannelFourteenthLength] = uiSampleData;
  4406  0359  1003               	clrc
  4407  035A  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4408  035B  3EC0               	addlw	_uiSampleChannelFourteenth& (0+255)
  4409  035C  2389               	fcall	PL2	;call to abstracted procedure
  4410                           
  4411                           ;common.c: 150: ucChannelFourteenthLength++;
  4412  035D  0AED               	incf	vPutSampleDataIntoTable@ucChannelFourteenthLength,f
  4413                           
  4414                           ;common.c: 151: }
  4415  035E  0008               	return
  4416  035F                     i1l3533:	
  4417                           
  4418                           ;common.c: 152: else
  4419                           ;common.c: 153: {
  4420                           ;common.c: 154: ucChannelFourteenthLength = 0;
  4421  035F  01ED               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4422                           
  4423                           ;common.c: 156: uiSampleChannelFourth[ucChannelFourteenthLength] = uiSampleData;
  4424  0360  1003               	clrc
  4425  0361  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4426  0362  3ED8               	addlw	_uiSampleChannelFourth& (0+255)
  4427  0363  2389               	fcall	PL2	;call to abstracted procedure
  4428  0364  0008               	return
  4429  0365                     i1l3537:	
  4430                           
  4431                           ;common.c: 159: else
  4432                           ;common.c: 160: {
  4433                           ;common.c: 161: ucChannelFirstLength = 0;
  4434  0365  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  4435                           
  4436                           ;common.c: 163: ucChannelFourthLength = 0;
  4437  0366  1283               	bcf	3,5	;RP0=0, select bank0
  4438  0367  01EE               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  4439                           
  4440                           ;common.c: 165: ucChannelFourteenthLength = 0;
  4441  0368  01ED               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4442                           
  4443                           ;common.c: 167: for(int i = 0;i < 12; i++)
  4444  0369  01F7               	clrf	vPutSampleDataIntoTable@i
  4445  036A  01F8               	clrf	vPutSampleDataIntoTable@i+1
  4446  036B                     i1l3543:	
  4447                           
  4448                           ;common.c: 168: {
  4449                           ;common.c: 169: uiSampleChannelFirst[i] = 0;
  4450  036B  1003               	clrc
  4451  036C  0D77               	rlf	vPutSampleDataIntoTable@i,w
  4452  036D  3EA8               	addlw	_uiSampleChannelFirst& (0+255)
  4453  036E  0084               	movwf	4
  4454  036F  1383               	bcf	3,7	;select IRP bank1
  4455  0370  0180               	clrf	0
  4456                           
  4457                           ;common.c: 171: uiSampleChannelFourth[i] = 0;
  4458  0371  2391  118A         	fcall	PL5	;call to abstracted procedure
  4459                           
  4460                           ;common.c: 173: uiSampleChannelFourth[i] = 0;
  4461  0373  2391  118A         	fcall	PL5	;call to abstracted procedure
  4462  0375  0A84               	incf	4,f
  4463  0376  0180               	clrf	0
  4464  0377  0AF7               	incf	vPutSampleDataIntoTable@i,f
  4465  0378  1903               	skipnz
  4466  0379  0AF8               	incf	vPutSampleDataIntoTable@i+1,f
  4467  037A  0878               	movf	vPutSampleDataIntoTable@i+1,w
  4468  037B  3A80               	xorlw	128
  4469  037C  00FF               	movwf	127
  4470  037D  3080               	movlw	128
  4471  037E  027F               	subwf	127,w
  4472  037F  1D03               	skipz
  4473  0380  2B83               	goto	u113_25
  4474  0381  300C               	movlw	12
  4475  0382  0277               	subwf	vPutSampleDataIntoTable@i,w
  4476  0383                     u113_25:	
  4477  0383  1803               	btfsc	3,0
  4478  0384  0008               	return
  4479  0385  2B6B               	goto	i1l3543
  4480  0386                     __end_of_vPutSampleDataIntoTable:	
  4481  0386                     __ptext873:	
  4482 ;; =============== function _ISR ends ============
  4483                           
  4484                           
  4485 ;; *************** function i1_setAD_ConvertFlag *****************
  4486 ;; Defined at:
  4487 ;;		line 215 in file "D:\develop\190625\AK7030-OTP\common.c"
  4488 ;; Parameters:    Size  Location     Type
  4489 ;;  setAD_Conver    1    wreg     unsigned char 
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  4492 ;; Return value:  Size  Location     Type
  4493 ;;		None               void
  4494 ;; Registers used:
  4495 ;;		wreg
  4496 ;; Tracked objects:
  4497 ;;		On entry : 60/0
  4498 ;;		On exit  : 60/0
  4499 ;;		Unchanged: FFF9F/0
  4500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4501 ;;      Params:         0       0       0       0       0
  4502 ;;      Locals:         1       0       0       0       0
  4503 ;;      Temps:          0       0       0       0       0
  4504 ;;      Totals:         1       0       0       0       0
  4505 ;;Total ram usage:        1 bytes
  4506 ;; Hardware stack levels used:    1
  4507 ;; This function calls:
  4508 ;;		Nothing
  4509 ;; This function is called by:
  4510 ;;		_ISR
  4511 ;; This function uses a non-reentrant model
  4512 ;;
  4513  0386                     i1_setAD_ConvertFlag:	
  4514                           
  4515                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  4516                           ;i1setAD_ConvertFlag@flag stored from wreg
  4517  0386  00F0               	movwf	i1setAD_ConvertFlag@flag
  4518                           
  4519                           ;common.c: 216: adc_convert_flag = flag;
  4520  0387  00E1               	movwf	_adc_convert_flag
  4521  0388  0008               	return
  4522  0389                     __end_ofi1_setAD_ConvertFlag:	
  4523  0389                     PL2:	
  4524  0389  0084               	movwf	4
  4525  038A  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  4526  038B  1383               	bcf	3,7	;select IRP bank1
  4527  038C  0080               	movwf	0
  4528  038D  0A84               	incf	4,f
  4529  038E  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  4530  038F  0080               	movwf	0
  4531  0390  0008               	return
  4532  0391                     PL5:	
  4533  0391  0A84               	incf	4,f
  4534  0392  0180               	clrf	0
  4535  0393  1003               	clrc
  4536  0394  0D77               	rlf	vPutSampleDataIntoTable@i,w
  4537  0395  3ED8               	addlw	_uiSampleChannelFourth& (0+255)
  4538  0396  0084               	movwf	4
  4539  0397  0180               	clrf	0
  4540  0398  0008               	return
  4541                           
  4542                           	psect	intentry
  4543  0004                     __pintentry:	
  4544                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4545                           
  4546  0004                     interrupt_function:	
  4547  007E                     saved_w	set	btemp
  4548  0004  00FE               	movwf	btemp
  4549  0005  0E03               	swapf	3,w
  4550  0006  00F9               	movwf	??_ISR
  4551  0007  0804               	movf	4,w
  4552  0008  00FA               	movwf	??_ISR+1
  4553  0009  080A               	movf	10,w
  4554  000A  00FB               	movwf	??_ISR+2
  4555  000B  1283               	bcf	3,5	;RP0=0, select bank0
  4556  000C  1303               	bcf	3,6	;RP1=0, select bank0
  4557  000D  087F               	movf	btemp+1,w
  4558  000E  00FC               	movwf	??_ISR+3
  4559  000F  118A  2AB6         	ljmp	_ISR
  4560                           
  4561                           	psect	text876
  4562  0000                     __ptext876:	
  4563 ;; =============== function _vPutSampleDataIntoTable ends ============
  4564                           
  4565  007E                     btemp	set	126	;btemp
  4566  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sat Nov 02 09:04:50 2019

                                  ??_clock_config 0020                               ?_startOneHoursTimer 0020  
                                              _GO 00F9                                                fsr 0004  
                        ?_timer1_interrupt_config 0070                                               l700 0410  
                                             l710 0000                                               l705 0432  
                                             l713 0000                                               l722 0000  
                                             l716 0000                                               l732 0209  
                                             l725 04EF                                               l719 0000  
                                             l680 03F5                                               l736 0000  
                                             l690 0405                                               l685 0422  
                                             l749 006F                                               l695 042A  
                                             _GIE 005F                                               _PB2 0032  
                                             _PB3 0033                                               _PB4 0034  
                                             _PB5 0035                                               _PR2 0092  
                                             _ISR 02B6                                               fsr0 0004  
                                             indf 0000                            ??_startThreeHoursTimer 0022  
                                            ?_ISR 0070                              ??_startOneHoursTimer 0022  
                              __size_of_AD_Sample 0014                                              l1521 04D2  
                                            l1530 0000                                              l1524 0000  
                                            l3301 0000                                              l1533 0000  
                                            l1542 0000                                              l3311 0000  
                                            l3303 0000                                              l1527 0000  
                                            l1536 0000                                              l3313 0000  
                                            l3305 0000                                              l3321 0000  
                                            l1571 0000                                              l3307 0000  
                                            l3315 0000                                              l3323 0000  
                                            l2291 0000                                              l3331 0000  
                                            l3403 0000                                              l3411 0000  
                                            l1539 0000                                              l1580 0000  
                                            l3309 0000                                              l3317 0000  
                                            l3325 0000                                              l3333 0000  
                                            l1629 0000                                              l3271 0000  
                                            l3319 0000                                              l3335 0000  
                                            l3327 0000                                              l3415 0000  
                                            l1495 0000                                              l1568 0000  
                                            l3273 0000                                              l3281 0000  
                                            l3329 0000                                              l2297 0000  
                                            l3337 03DF                                              l3345 0000  
                                            l3361 0000                                              l3409 0000  
                                            l3417 0000                                              l3433 0000  
                                            l3441 0000                                              l3275 0000  
                                            l3283 0000                                              l3291 0000  
                                            l3339 0000                                              l3347 0000  
                                            l3427 0000                                              l3435 0000  
                                            l3451 0000                                              l3611 0000  
                                            l3269 0000                                              l3277 0000  
                                            l3285 0000                                              l3293 0000  
                                            l3365 0000                                              l3461 0000  
                                            l3613 0000                                              l3279 0000  
                                            l3287 0000                                              l3295 0000  
                                            l3359 0000                                              l3367 0000  
                                            l3391 0000                                              l3439 0000  
                                            l3471 0236                                              l3463 0000  
                                            l3615 0000                                              l3623 0000  
                                            l3711 0068                                              l3703 0000  
                                            l3289 0000                                              l3297 0000  
                                            l3377 0000                                              l3385 0000  
                                            l3393 0000                                              l3481 0279  
                                            l3457 021A                                              l3553 0000  
                                            l3609 0000                                              l3617 0000  
                                            l3641 0000                                              l3801 010D  
                                            l3721 0000                                              l3705 005B  
                                            l3299 0000                                              l3379 0000  
                                            l3387 0000                                              l3491 0000  
                                            l3483 0000                                              l3459 0000  
                                            l3563 0000                                              l3555 0000  
                                            l3619 0000                                              l3627 0000  
                                            l3635 0000                                              l3651 01ED  
                                            l3643 0000                                              l3731 0000  
                                            l3723 0000                                              l3715 0000  
                                            l3493 0000                                              l3477 0277  
                                            l3549 0000                                              l3661 0000  
                                            l3653 0000                                              l3645 01E1  
                                            l3821 0000                                              l3805 0000  
                                            l3733 0000                                              l3725 0000  
                                            l3717 0070                                              l3709 0067  
                                            l3479 0237                                              l3567 03C7  
                                            l3559 0000                                              l3663 0000  
                                            l3655 0000                                              l3647 01E3  
                                            l3639 0000                                              l3831 016B  
                                            l3815 0139                                              l3807 0000  
                                            l3751 00AB                                              l3743 00A3  
                                            l3735 008F                                              l3727 0000  
                                            l3719 0000                                              l3671 0000  
                                            l3497 0000                                              l3665 0000  
                                            l3657 0000                                              l3841 0000  
                                            l3833 0000                                              l3825 015D  
                                            l3817 013E                                              l3753 0000  
                                            l3745 00A4                                              l3737 0095  
                                            l3729 0000                                              l3681 0000  
                                            l3673 0000                                              l3659 0000  
                                            l3851 019F                                              l3843 018E  
                                            l3835 017D                                              l3827 0160  
                                            l3771 00D0                                              l3763 00C8  
                                            l3755 00B6                                              l3739 0097  
                                            l3683 0000                                              l3675 0000  
                                            l3845 0000                                              l3829 0167  
                                            l3781 0000                                              l3773 0000  
                                            l3765 00C9                                              l3749 0000  
                                            l3861 01A8                                              l3693 0000  
                                            l3685 0035                                              l3677 0000  
                                            l3855 01A6                                              l3839 0189  
                                            l3783 00E7                                              l3775 0000  
                                            l3687 0000                                              l3679 0000  
                                            l3849 019E                                              l3785 0000  
                                            l3777 0000                                              l3769 0000  
                                            l3689 0000                                              l3795 0105  
                                            l3779 0000                                              l3699 0051  
                                            l3797 0000                                              l3799 010B  
                                            _ADIE 046A                                              _ADIF 006A  
                                            _ADON 00F8                     startTwelveHourTimer@uiSetTime 0020  
                                            u1025 0231                                              u1035 025A  
                                            u1045 0244                                              _PEIE 005E  
                                            _main 0013                                              btemp 007E  
                                            start 0011                           ?_getAdOriginalCh12Value 0047  
                         ?_getAdOriginalCh13Value 0047                        ??_isFinishedTwentyMinTimer 0020  
                                           ??_ISR 0079                                 ??_setPinInitVaule 0021  
                      __end_of_isPermitSampleTime 04DA                               _sampleChannelSelect 006F  
                                           ?_main 0070                                             _CLKPR 0108  
                                           _T1CON 0010                                             _T2CON 0012  
                                 __end_of_adc_get 0327                                             _PBOD2 0C42  
                                           _TMR1H 000F                                             _TMR1L 000E  
                           setAD_ConvertFlag@flag 0020                                 ??_selectAdChannel 0020  
                                 __end_of_initPB3 03F8                                   __end_of_initPB4 0408  
                                 __end_of_initPB5 0413                           _vPutSampleDataIntoTable 0327  
                                 __end_of_initPin 03EC                                             _reset 04EF  
                                           _timer 0067                                             pclath 000A  
                             main@uiTimerThreeP5s 00A4                                             status 0003  
                  __end_of_getAdOriginalCh12Value 0212                                             wtemp0 007E  
                  __end_of_getAdOriginalCh13Value 01D4                     __size_of_startTwelveHourTimer 000E  
                            __end_of_clrSampeTime 04EF                                      __end_of_main 01CD  
                          __size_of_adc_test_init 0015                                 __end_of_AD_Sample 03CA  
                                          ??_main 0051                                     main@ucChValue 0051  
                                   main@ucDelay1s 00A2                                            _ADCON0 001F  
                                          _ADCON1 009F                              __end_of_clock_config 04D5  
                                          _ADRESH 001E                                            _ADRESL 009E  
                                          _CCPR1L 0015                                            ?_reset 0070  
                                          _CLKPCE 0847                                            i1l2300 0000  
                                          i1l1536 0000                                            i1l1644 030F  
                                          i1l1636 02CA                                            u113_25 0383  
                                          i1l3501 0000                                            i1l1637 02D4  
                                          i1l1638 02DF                                            i1l3511 0000  
                                          i1l1639 02EA                                            i1l3521 034A  
                                          i1l3513 033B                                            i1l3601 0306  
                                          i1l3531 0000                                            i1l3523 0000  
                                          i1l3507 0000                                            i1l3603 0000  
                                          i1l3533 035F                                            i1l3525 0350  
                                          i1l3509 0335                                            i1l3543 036B  
                                          i1l3535 0000                                            i1l3519 0000  
                                          i1l3607 0000                                            i1l3545 0000  
                                          i1l3537 0365                                            i1l3547 0000  
                                          i1l3573 0000                                            i1l3575 0000  
                                          i1l3591 02F4                                            i1l3569 0000  
                                          i1l3595 0000                                            i1l3579 0000  
                                          i1l3597 0000                                            _TMR1IE 0460  
                                          _TMR1IF 0060                                 _getAD_ConvertFlag 03AF  
                               _setAD_ConvertFlag 03B3                                            _TRISB0 0430  
                                          _TRISB1 0431                                            _TRISB2 0432  
                                          _TRISB3 0433                                            _TRISB4 0434  
                                          _TRISB5 0435                                ?_getAD_ConvertFlag 0070  
                                          _Filter 0212                                ?_setAD_ConvertFlag 0070  
                     ??_isFinishedThreeHoursTimer 0020                     __size_of_clearThreeHoursTimer 0004  
                          __size_of_calPulseWidth 0037                                         ??_adc_get 0072  
                             ??_getAD_ConvertFlag 0020                               ??_setAD_ConvertFlag 0020  
                                          _setPB3 041B                                            _setPB4 0424  
                                          _setPB5 042C                       __end_of_clearTwentyMinTimer 04DE  
                                          clrloop 04C6                                  Filter@filter_buf 0026  
                                       ??_initPB3 0020                                         ??_initPB4 0020  
                                       ??_initPB5 0020                                  Filter@filter_sum 0040  
                                       ??_initPin 0021                         ??_vPutSampleDataIntoTable 0077  
                                          saved_w 007E                           ??_clearTwelveHoursTimer 0020  
                     ?_process_AD_Converter_Value 0070                                     _adc_test_init 03CA  
                       __end_of_getAD_ConvertFlag 03B3                         __end_of_setAD_ConvertFlag 03B6  
                              __size_of_adc_start 0003                          _initPB2_AsHighResistence 03F8  
                __size_of_isFinishedOneHoursTimer 000A                  __end_of_isFinishedTwentyMinTimer 04BB  
                                  __pcstackCOMMON 0070                                      __pidataBANK0 0000  
                               main@uiTimerOneP5s 005E                                     __end_of_reset 04DE  
                               main@uiTimerTwoP5s 00A6                              _uiSampleChannelFirst 00A8  
                  vPutSampleDataIntoTable@channel 0076                         _isFinishedThreeHoursTimer 049D  
                           __end_of_timer1_config 04C5                    calPulseWidth@ucThreeTimesValue 004B  
                                  ?_adc_test_init 0020                       __end_of_startTwentyMinTimer 0493  
                                   _calPulseWidth 01D4       vPutSampleDataIntoTable@ucChannelFirstLength 007D  
                                         ??_reset 0020                  __size_of_timer1_interrupt_config 0003  
                           __size_of_clrSampeTime 0002                                        __pbssBANK0 0056  
                                      __pbssBANK1 00A0                      __size_ofi1_setAD_ConvertFlag 0003  
                                 _setPinInitVaule 0413                                        adc_get@val 0072  
                                _uiTwentyMinTimer 005C                   __end_of_vPutSampleDataIntoTable 0386  
                                         ?_Filter 0020                                        __pmaintext 0013  
                                 _selectAdChannel 04DE                                        __pintentry 0004  
                                         _CCP1CON 0017                                           ?_setPB3 0070  
                                         ?_setPB4 0070                                           ?_setPB5 0070  
                           __size_of_clock_config 0008                                      _clrSampeTime 04ED  
                               __end_of_adc_start 03E2                              _uiTwentySecondsTimer 00A0  
                              _isPermitSampleTime 04D5                                    ?_calPulseWidth 0070  
                                         Filter@i 0046                                           Filter@j 0045  
                              __size_of_pwm_start 0015                       __size_of_startOneHoursTimer 000E  
                   __size_of_startThreeHoursTimer 000E                        __size_of_getAD_ConvertFlag 0004  
                      __size_of_setAD_ConvertFlag 0003                                    main@ucTimerP3s 006B  
                                  main@ucTimerP5s 006C                               ?_isPermitSampleTime 0070  
                                 __size_of_Filter 008E                                        _uiBigTimer 0056  
                                    setPB3@bValue 0020                                      setPB4@bValue 0020  
                                    _clock_config 04CD                                      setPB5@bValue 0020  
                                         _adc_get 031C                                   __size_of_setPB3 0009  
                                 __size_of_setPB4 0008                                   __size_of_setPB5 0008  
                            ??_isPermitSampleTime 0020                      __end_of_startTwelveHourTimer 0485  
                                   initPB3@bValue 0020                                     initPB4@bValue 0020  
                                       _AD_Sample 03B6                                           _initPB3 03EC  
                                         _initPB4 03FD                                           _initPB5 0408  
                                    __size_of_ISR 0066                                     initPB5@bValue 0020  
                                         _initPin 03E2                              _bSmallTimerStartFlag 0064  
                                 ??_adc_test_init 0021                 __size_of_isFinishedTwentyMinTimer 000A  
                       ?_isFinishedTwentyMinTimer 0070                           __end_of_setPinInitVaule 041B  
                            end_of_initialization 0458                                 Filter@filter_temp 003E  
                        calPulseWidth@ucHalfValue 004C                             pwm_start@ucPulseWidth 0020  
                         __end_of_selectAdChannel 04E2                           _isFinishedOneHoursTimer 0493  
                               __end_of_pwm_start 0449                                        ?_AD_Sample 0070  
                    ??_isFinishedTwelveHoursTimer 0020                                         Filter@cir 0043  
                             _bTwentyMinStartFlag 0065                                  _adc_convert_flag 0061  
                                 ??_calPulseWidth 0049                      __end_of_clearThreeHoursTimer 04E6  
                  __size_of_clearTwelveHoursTimer 0004                           _timer1_interrupt_config 04EA  
                   __end_of_clearTwelveHoursTimer 04EA                        ??_initPB2_AsHighResistence 0020  
              __size_of_isFinishedThreeHoursTimer 000A                                        main@ucStep 006A  
                                  __end_of_Filter 02A0                     startTwentyMinTimer@uiSetValue 0020  
             __size_of_isFinishedTwelveHoursTimer 000A                          vPutSampleDataIntoTable@i 0077  
                             i1_setAD_ConvertFlag 0386                                    __end_of_setPB3 0424  
                                  __end_of_setPB4 042C                                    __end_of_setPB5 0434  
                                main@ucPulseWidth 0053                               start_initialization 0449  
                                     __end_of_ISR 031C                             _uiSampleChannelFourth 00D8  
                        ??_getAdOriginalCh12Value 0049                                  ?_setPinInitVaule 0070  
                        ??_getAdOriginalCh13Value 0049                      __size_of_clearTwentyMinTimer 0004  
                       ??_isFinishedOneHoursTimer 0020                              ?i1_setAD_ConvertFlag 0070  
                            _startTwelveHourTimer 0477                 __end_of_isFinishedThreeHoursTimer 04A7  
                                ?_selectAdChannel 0070                                          ??_Filter 0022  
                                     __pdataBANK0 006F                                          ??_setPB3 0020  
                                        ??_setPB4 0020                                          ??_setPB5 0020  
                        ?_vPutSampleDataIntoTable 0074                                       ??_AD_Sample 0020  
                       ??_timer1_interrupt_config 0020                                       __pbssCOMMON 007D  
                                   __pcstackBANK0 0020                                         _adc_start 03DF  
                           ??i1_setAD_ConvertFlag 0070                                   main@uiCh13Value 0054  
                           ?_startTwelveHourTimer 0020                         calPulseWidth@ucPulseWidth 0050  
                    __size_of_startTwentyMinTimer 000E                            __size_of_timer1_config 000A  
                            _clearThreeHoursTimer 04E2                      __end_of_startThreeHoursTimer 0477  
                                       __ptext840 03B6                                         __ptext841 03B3  
                                       __ptext850 04DA                                         __ptext842 03AF  
                                       __ptext834 01D4                                         __ptext851 04B1  
                                       __ptext843 0212                                         __ptext835 01CD  
                                       __ptext860 04EF                                         __ptext852 04ED  
                                       __ptext844 0493                                         __ptext836 0399  
                                       __ptext861 04DE                                         __ptext853 04D5  
                                       __ptext845 045B                                         __ptext837 020B  
                                       __ptext870 04E2                                         __ptext862 0434  
                                       __ptext854 0485                                         __ptext846 049D  
                                       __ptext838 0413                                         __ptext871 04E6  
                                       __ptext863 03F8                                         __ptext855 03DF  
                                       __ptext847 0469                                         __ptext839 03E2  
                                       __ptext872 02B6                                         __ptext864 042C  
                                       __ptext856 03CA                                         __ptext848 04A7  
                                       __ptext873 0386                                         __ptext865 0408  
                                       __ptext857 04EA                                         __ptext849 0477  
                                       __ptext874 031C                                         __ptext866 0424  
                                       __ptext858 04BB                                         __ptext875 0327  
                                       __ptext867 03FD                                         __ptext859 04CD  
                                       __ptext876 0000                                         __ptext868 041B  
                                       __ptext869 03EC                                 main@cTimerP5s_793 0069  
                               main@cTimerP5s_787 0068                                          ?_adc_get 0070  
                 __end_of_isFinishedOneHoursTimer 049D                __end_of_isFinishedTwelveHoursTimer 04B1  
                      _isFinishedTwelveHoursTimer 04A7                                          ?_initPB3 0070  
                                        ?_initPB4 0070                                          ?_initPB5 0070  
                                 ISR@ucTimer1sCnt 0060                                          ?_initPin 0070  
                      __end_of_startOneHoursTimer 0469                  __end_of_initPB2_AsHighResistence 03FD  
                       _uiSampleChannelFourteenth 00C0                                        ?_adc_start 0070  
                 __size_of_getAdOriginalCh12Value 0007                   __size_of_getAdOriginalCh13Value 0007  
                                  __size_of_reset FFEF                                 interrupt_function 0004  
                         calPulseWidth@ucGapValue 004D                   __end_of_timer1_interrupt_config 04ED  
                           ?_clearThreeHoursTimer 0070                              adc_test_init@channel 0022  
             vPutSampleDataIntoTable@uiSampleData 0074                           calPulseWidth@uiGapValue 0049  
    vPutSampleDataIntoTable@ucChannelFourthLength 006E                       __size_of_isPermitSampleTime 0005  
                                       _pwm_start 0434                                      _uiSmallTimer 005A  
                           __end_of_adc_test_init 03DF                                     _timer1_config 04BB  
                    ??_process_AD_Converter_Value 0023                            ??_startTwelveHourTimer 0022  
                          _getAdOriginalCh12Value 020B                            _getAdOriginalCh13Value 01CD  
                             _clearTwentyMinTimer 04DA                       startOneHoursTimer@uiSetTime 0020  
                                __size_of_adc_get 000B               __size_of_process_AD_Converter_Value 0016  
                                      ?_pwm_start 0070                          _isFinishedTwentyMinTimer 04B1  
vPutSampleDataIntoTable@ucChannelFourteenthLength 006D                                  __size_of_initPB3 000C  
                                __size_of_initPB4 000B                                  __size_of_initPB5 000B  
                                __size_of_initPin 000A                                    Filter@tmpValue 0042  
                                  ?_timer1_config 0070                             __end_of_calPulseWidth 020B  
                            ?_clearTwentyMinTimer 0070                                       ??_adc_start 0020  
                            _startThreeHoursTimer 0469                             _clearTwelveHoursTimer 04E6  
                                  _uiOneHourTimer 0058                                     __size_of_main 01BA  
                                        clear_ram 04C5                            ??_clearThreeHoursTimer 0020  
               __size_of_initPB2_AsHighResistence 0005                         ?_initPB2_AsHighResistence 0070  
                          _bOneHourTimerStartFlag 0063                                     ?_clrSampeTime 0070  
                             _startTwentyMinTimer 0485                                       _sampleTimes 0066  
                           ??_clearTwentyMinTimer 0020                             ?_startThreeHoursTimer 0020  
                __size_of_vPutSampleDataIntoTable 005F                                          intlevel1 0000  
                    calPulseWidth@uiChannel2Value 004E                              ?_startTwentyMinTimer 0020  
                        __size_of_setPinInitVaule 0008                        ?_isFinishedThreeHoursTimer 0070  
                                   ?_clock_config 0070                          __size_of_selectAdChannel 0004  
                   startThreeHoursTimer@uiSetTime 0020                           i1setAD_ConvertFlag@flag 0070  
                                     ??_pwm_start 0020                                    ??_clrSampeTime 0020  
                     ?_isFinishedTwelveHoursTimer 0070                                _bBigTimerStartFlag 0062  
                                 ??_timer1_config 0020                       __end_ofi1_setAD_ConvertFlag 0389  
              __end_of_process_AD_Converter_Value 03AF                        _process_AD_Converter_Value 0399  
                        ?_isFinishedOneHoursTimer 0070                            ?_clearTwelveHoursTimer 0070  
                                adc_test_init@ref 0020                             ??_startTwentyMinTimer 0022  
                              _startOneHoursTimer 045B  
