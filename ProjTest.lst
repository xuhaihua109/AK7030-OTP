

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Mon Jun 17 09:35:08 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,delta=2
    14                           	psect	swtext1,local,class=CONST,delta=2
    15                           	psect	swtext2,local,class=CONST,delta=2
    16                           	psect	swtext3,local,class=CONST,delta=2
    17                           	psect	text583,local,class=CODE,delta=2
    18                           	psect	text584,local,class=CODE,delta=2
    19                           	psect	text590,local,class=CODE,delta=2
    20                           	psect	text591,local,class=CODE,delta=2
    21                           	psect	text592,local,class=CODE,delta=2
    22                           	psect	text593,local,class=CODE,delta=2
    23                           	psect	text594,local,class=CODE,delta=2
    24                           	psect	text595,local,class=CODE,delta=2
    25                           	psect	text596,local,class=CODE,delta=2
    26                           	psect	text597,local,class=CODE,delta=2
    27                           	psect	text598,local,class=CODE,delta=2
    28                           	psect	text599,local,class=CODE,delta=2
    29                           	psect	text600,local,class=CODE,delta=2
    30                           	psect	text602,local,class=CODE,delta=2
    31                           	psect	text603,local,class=CODE,delta=2
    32                           	psect	text604,local,class=CODE,delta=2
    33                           	psect	text606,local,class=CODE,delta=2
    34                           	psect	text607,local,class=CODE,delta=2
    35                           	psect	text608,local,class=CODE,delta=2
    36                           	psect	text612,local,class=CODE,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text615,local,class=CODE,delta=2
    39                           	psect	pa_nodes,global,class=CODE,delta=2
    40                           	dabs	1,0x7E,2
    41  000A                     	;#
    42                           
    43                           	psect	config
    44  2000  2FFF               	dw	12287	;#
    45  2001  3FDE               	dw	16350	;#
    46  2002  3FF8               	dw	16376	;#
    47                           
    48                           	psect	idataBANK0
    49  0000                     __pidataBANK0:	
    50  001F                     _ADCON0	set	31
    51  001E                     _ADRESH	set	30
    52  001B                     _OP1CON0	set	27
    53  001C                     _OP1CON1	set	28
    54  001D                     _OP1CON2	set	29
    55  0010                     _T1CON	set	16
    56  000F                     _TMR1H	set	15
    57  000E                     _TMR1L	set	14
    58  006A                     _ADIF	set	106
    59  00F8                     _ADON	set	248
    60  005F                     _GIE	set	95
    61  00F9                     _GO	set	249
    62  0028                     _PA0	set	40
    63  0029                     _PA1	set	41
    64  002A                     _PA2	set	42
    65  002B                     _PA3	set	43
    66  002E                     _PA6	set	46
    67  002F                     _PA7	set	47
    68  0030                     _PB0	set	48
    69  0031                     _PB1	set	49
    70  0032                     _PB2	set	50
    71  0036                     _PB6	set	54
    72  005E                     _PEIE	set	94
    73  0060                     _TMR1IF	set	96
    74  009F                     _ADCON1	set	159
    75  009E                     _ADRESL	set	158
    76  0087                     _DACCON	set	135
    77  0088                     _DACR0	set	136
    78  009B                     _OP2CON0	set	155
    79  009C                     _OP2CON1	set	156
    80  009D                     _OP2CON2	set	157
    81  046A                     _ADIE	set	1130
    82  0460                     _TMR1IE	set	1120
    83  0428                     _TRISA0	set	1064
    84  0429                     _TRISA1	set	1065
    85  042A                     _TRISA2	set	1066
    86  042B                     _TRISA3	set	1067
    87  042E                     _TRISA6	set	1070
    88  042F                     _TRISA7	set	1071
    89  0430                     _TRISB0	set	1072
    90  0431                     _TRISB1	set	1073
    91  0432                     _TRISB2	set	1074
    92  0433                     _TRISB3	set	1075
    93  0434                     _TRISB4	set	1076
    94  0435                     _TRISB5	set	1077
    95  0437                     _TRISB7	set	1079
    96  0108                     _CLKPR	set	264
    97  0847                     _CLKPCE	set	2119
    98  0C3F                     _PAOD7	set	3135
    99  0C46                     _PBOD6	set	3142
   100                           
   101                           	psect	cinit
   102  0436                     start_initialization:	
   103  0436  3020               	movlw	low __pbssBANK0
   104                           
   105                           ; Clear objects allocated to COMMON
   106  0437  01F6               	clrf	__pbssCOMMON& (0+127)
   107  0438  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   108  0439  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   109  043A  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   110  043B  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   111                           
   112                           ; Clear objects allocated to BANK0
   113  043C  1383               	bcf	3,7	;select IRP bank0
   114  043D  0084               	movwf	4
   115  043E  3056               	movlw	low (__pbssBANK0+54)
   116  043F  118A  2483         	fcall	clear_ram
   117                           
   118                           ;initializer for _sampleChannelSelect
   119  0441  300E               	movlw	14
   120  0442  00DB               	movwf	__pdataBANK0& (0+127)
   121  0443                     end_of_initialization:	
   122                           ;End of C runtime variable initialization code
   123                           
   124  0443  0183               	clrf	3
   125  0444  118A  280D         	ljmp	_main	;jump to C main() function
   126                           
   127                           	psect	bssCOMMON
   128  0076                     __pbssCOMMON:	
   129  0076                     _uiBigTimer:	
   130  0076                     	ds	2
   131  0078                     ISR@ucTimer1sCnt:	
   132  0078                     	ds	1
   133  0079                     _adc_convert_flag:	
   134  0079                     	ds	1
   135  007A                     _timer:	
   136  007A                     	ds	1
   137                           
   138                           	psect	bssBANK0
   139  0020                     __pbssBANK0:	
   140  0020                     _buffer_Sample_AD_Value:	
   141  0020                     	ds	12
   142  002C                     _adc_original_CH14_value:	
   143  002C                     	ds	2
   144  002E                     _adc_original_CH1_value:	
   145  002E                     	ds	2
   146  0030                     _adc_original_CH4_value:	
   147  0030                     	ds	2
   148  0032                     _adc_original_value:	
   149  0032                     	ds	2
   150  0034                     _multiFilterMaxValue:	
   151  0034                     	ds	2
   152  0036                     _multiFilterMinValue:	
   153  0036                     	ds	2
   154  0038                     _uiSmallTimer:	
   155  0038                     	ds	2
   156  003A                     _uiTwentySecondsTimer:	
   157  003A                     	ds	2
   158  003C                     _sampleTimes:	
   159  003C                     	ds	1
   160  003D                     main@cTimer1s_806:	
   161  003D                     	ds	1
   162  003E                     main@enumBranchStep:	
   163  003E                     	ds	1
   164  003F                     main@enumInteralStep:	
   165  003F                     	ds	1
   166  0040                     main@enumMainLoopStep:	
   167  0040                     	ds	1
   168  0041                     main@ucADC4_Step:	
   169  0041                     	ds	1
   170  0042                     main@ucChannel4Type:	
   171  0042                     	ds	1
   172  0043                     main@ucLoaderStep:	
   173  0043                     	ds	1
   174  0044                     main@ucLoaderStep1:	
   175  0044                     	ds	1
   176  0045                     main@ucLoaderStep2:	
   177  0045                     	ds	1
   178  0046                     main@ucLoaderStep3:	
   179  0046                     	ds	1
   180  0047                     main@ucLoaderStep4:	
   181  0047                     	ds	1
   182  0048                     main@ucTimer1s:	
   183  0048                     	ds	1
   184  0049                     main@ucTimer20s:	
   185  0049                     	ds	1
   186  004A                     main@ucTimerADC1ZeroP5s:	
   187  004A                     	ds	1
   188  004B                     main@ucTimerDelay:	
   189  004B                     	ds	1
   190  004C                     main@ucTimerDelay1:	
   191  004C                     	ds	1
   192  004D                     main@ucTimerDelay2:	
   193  004D                     	ds	1
   194  004E                     main@ucTimerDelay3:	
   195  004E                     	ds	1
   196  004F                     main@ucTimerDelay4:	
   197  004F                     	ds	1
   198  0050                     main@ucTimerP3s:	
   199  0050                     	ds	1
   200  0051                     main@ucTimerRightP5s:	
   201  0051                     	ds	1
   202  0052                     main@ucTimerX1P5s:	
   203  0052                     	ds	1
   204  0053                     main@ucTimerX2P5s:	
   205  0053                     	ds	1
   206  0054                     main@ucTimerZeroPoint3s:	
   207  0054                     	ds	1
   208  0055                     main@ucTimerZeroPoint5s:	
   209  0055                     	ds	1
   210                           
   211                           	psect	dataBANK0
   212  005B                     __pdataBANK0:	
   213  005B                     _sampleChannelSelect:	
   214  005B                     	ds	1
   215                           
   216                           	psect	clrtext
   217  0483                     clear_ram:	
   218                           ;	Called with FSR containing the base address, and
   219                           ;	W with the last address+1
   220                           
   221  0483  0064               	clrwdt	;clear the watchdog before getting into this loop
   222  0484                     clrloop:	
   223  0484  0180               	clrf	0	;clear RAM location pointed to by FSR
   224  0485  0A84               	incf	4,f	;increment pointer
   225  0486  0604               	xorwf	4,w	;XOR with final address
   226  0487  1903               	btfsc	3,2	;have we reached the end yet?
   227  0488  3400               	retlw	0	;all done for this memory range, return
   228  0489  0604               	xorwf	4,w	;XOR again to restore value
   229  048A  2C84               	goto	clrloop	;do the next byte
   230                           
   231                           	psect	cstackCOMMON
   232  0070                     __pcstackCOMMON:	
   233  0070                     ?_clearTwelveHoursTimer:	
   234  0070                     ?_clearThreeHoursTimer:	
   235                           ; 0 bytes @ 0x0
   236                           
   237  0070                     ?_clearTwentySecondsTimer:	
   238                           ; 0 bytes @ 0x0
   239                           
   240  0070                     ?_clock_config:	
   241                           ; 0 bytes @ 0x0
   242                           
   243  0070                     ?_timer1_config:	
   244                           ; 0 bytes @ 0x0
   245                           
   246  0070                     ?_timer1_interrupt_config:	
   247                           ; 0 bytes @ 0x0
   248                           
   249  0070                     ?_dac_init:	
   250                           ; 0 bytes @ 0x0
   251                           
   252  0070                     ?_op1_init:	
   253                           ; 0 bytes @ 0x0
   254                           
   255  0070                     ?_op2_init:	
   256                           ; 0 bytes @ 0x0
   257                           
   258  0070                     ?_adc_start:	
   259                           ; 0 bytes @ 0x0
   260                           
   261  0070                     ?_clrSampeTime:	
   262                           ; 0 bytes @ 0x0
   263                           
   264  0070                     ?_process_AD_Converter_Value:	
   265                           ; 0 bytes @ 0x0
   266                           
   267  0070                     ?_startTwelveHourTimer:	
   268                           ; 0 bytes @ 0x0
   269                           
   270  0070                     ?_startTwentySecondsTimer:	
   271                           ; 0 bytes @ 0x0
   272                           
   273  0070                     ?_startThreeHoursTimer:	
   274                           ; 0 bytes @ 0x0
   275                           
   276  0070                     ?_AD_Sample:	
   277                           ; 0 bytes @ 0x0
   278                           
   279  0070                     ?_clearAllTimer:	
   280                           ; 0 bytes @ 0x0
   281                           
   282  0070                     ?_clearPinPortAndTimer:	
   283                           ; 0 bytes @ 0x0
   284                           
   285  0070                     ?_main:	
   286                           ; 0 bytes @ 0x0
   287                           
   288  0070                     ?_setAD_ConvertFlag:	
   289                           ; 0 bytes @ 0x0
   290                           
   291  0070                     ?_ISR:	
   292                           ; 0 bytes @ 0x0
   293                           
   294  0070                     ?i1_setAD_ConvertFlag:	
   295                           ; 0 bytes @ 0x0
   296                           
   297  0070                     ??i1_setAD_ConvertFlag:	
   298                           ; 0 bytes @ 0x0
   299                           
   300  0070                     ?_isPermitSampleTime:	
   301                           ; 0 bytes @ 0x0
   302                           
   303  0070                     ?_isFinishedTwelveHoursTimer:	
   304                           ; 1 bytes @ 0x0
   305                           
   306  0070                     ?_isFinishedTwentySecondsTimer:	
   307                           ; 1 bytes @ 0x0
   308                           
   309  0070                     ?_isFinishedThreeHoursTimer:	
   310                           ; 1 bytes @ 0x0
   311                           
   312  0070                     ?_getAD_ConvertFlag:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0070                     ?_adc_get:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0070                     i1setAD_ConvertFlag@flag:	
   319                           ; 2 bytes @ 0x0
   320                           
   321                           
   322                           ; 1 bytes @ 0x0
   323  0070                     	ds	2
   324  0072                     ??_adc_get:	
   325  0072                     adc_get@val:	
   326                           ; 0 bytes @ 0x2
   327                           
   328                           
   329                           ; 2 bytes @ 0x2
   330  0072                     	ds	2
   331  0074                     ??_ISR:	
   332                           
   333                           ; 0 bytes @ 0x4
   334  0074                     	ds	2
   335                           
   336                           	psect	cstackBANK0
   337  0056                     __pcstackBANK0:	
   338  0056                     ??_clearTwelveHoursTimer:	
   339  0056                     ??_clearThreeHoursTimer:	
   340                           ; 0 bytes @ 0x0
   341                           
   342  0056                     ??_clearTwentySecondsTimer:	
   343                           ; 0 bytes @ 0x0
   344                           
   345  0056                     ??_clock_config:	
   346                           ; 0 bytes @ 0x0
   347                           
   348  0056                     ??_timer1_config:	
   349                           ; 0 bytes @ 0x0
   350                           
   351  0056                     ??_timer1_interrupt_config:	
   352                           ; 0 bytes @ 0x0
   353                           
   354  0056                     ?_adc_test_init:	
   355                           ; 0 bytes @ 0x0
   356                           
   357  0056                     ??_dac_init:	
   358                           ; 0 bytes @ 0x0
   359                           
   360  0056                     ??_op1_init:	
   361                           ; 0 bytes @ 0x0
   362                           
   363  0056                     ??_op2_init:	
   364                           ; 0 bytes @ 0x0
   365                           
   366  0056                     ??_adc_start:	
   367                           ; 0 bytes @ 0x0
   368                           
   369  0056                     ??_isPermitSampleTime:	
   370                           ; 0 bytes @ 0x0
   371                           
   372  0056                     ??_clrSampeTime:	
   373                           ; 0 bytes @ 0x0
   374                           
   375  0056                     ??_startTwelveHourTimer:	
   376                           ; 0 bytes @ 0x0
   377                           
   378  0056                     ??_isFinishedTwelveHoursTimer:	
   379                           ; 0 bytes @ 0x0
   380                           
   381  0056                     ??_startTwentySecondsTimer:	
   382                           ; 0 bytes @ 0x0
   383                           
   384  0056                     ??_isFinishedTwentySecondsTimer:	
   385                           ; 0 bytes @ 0x0
   386                           
   387  0056                     ??_startThreeHoursTimer:	
   388                           ; 0 bytes @ 0x0
   389                           
   390  0056                     ??_isFinishedThreeHoursTimer:	
   391                           ; 0 bytes @ 0x0
   392                           
   393  0056                     ??_clearAllTimer:	
   394                           ; 0 bytes @ 0x0
   395                           
   396  0056                     ??_clearPinPortAndTimer:	
   397                           ; 0 bytes @ 0x0
   398                           
   399  0056                     ??_getAD_ConvertFlag:	
   400                           ; 0 bytes @ 0x0
   401                           
   402  0056                     ??_setAD_ConvertFlag:	
   403                           ; 0 bytes @ 0x0
   404                           
   405  0056                     ?_getAdOriginalCh14Value:	
   406                           ; 0 bytes @ 0x0
   407                           
   408  0056                     ?_getAdOriginalCh1Value:	
   409                           ; 2 bytes @ 0x0
   410                           
   411  0056                     ?_getAdOriginaCh4Value:	
   412                           ; 2 bytes @ 0x0
   413                           
   414  0056                     ?_getAdOriginalValue:	
   415                           ; 2 bytes @ 0x0
   416                           
   417  0056                     setAD_ConvertFlag@flag:	
   418                           ; 2 bytes @ 0x0
   419                           
   420  0056                     adc_test_init@ref:	
   421                           ; 1 bytes @ 0x0
   422                           
   423                           
   424                           ; 1 bytes @ 0x0
   425  0056                     	ds	1
   426  0057                     ??_adc_test_init:	
   427                           
   428                           ; 0 bytes @ 0x1
   429  0057                     	ds	1
   430  0058                     ??_getAdOriginalCh14Value:	
   431  0058                     ??_getAdOriginalCh1Value:	
   432                           ; 0 bytes @ 0x2
   433                           
   434  0058                     ??_getAdOriginaCh4Value:	
   435                           ; 0 bytes @ 0x2
   436                           
   437  0058                     ??_AD_Sample:	
   438                           ; 0 bytes @ 0x2
   439                           
   440  0058                     ??_getAdOriginalValue:	
   441                           ; 0 bytes @ 0x2
   442                           
   443  0058                     adc_test_init@channel:	
   444                           ; 0 bytes @ 0x2
   445                           
   446                           
   447                           ; 1 bytes @ 0x2
   448  0058                     	ds	2
   449  005A                     AD_Sample@index:	
   450                           
   451                           ; 1 bytes @ 0x4
   452  005A                     	ds	1
   453  005B                     ??_process_AD_Converter_Value:	
   454  005B                     ??_main:	
   455                           ; 0 bytes @ 0x5
   456                           
   457                           
   458                           	psect	maintext
   459  000D                     __pmaintext:	
   460                           ; 0 bytes @ 0x5
   461 ;;Data sizes: Strings 0, constant 0, data 1, bss 59, persistent 0 stack 0
   462 ;;Auto spaces:   Size  Autos    Used
   463 ;; COMMON          14      6      11
   464 ;; BANK0           80      5      60
   465 ;; BANK1           80      0       0
   466 ;; BANK3           96      0       0
   467 ;; BANK2           96      0       0
   468 ;;
   469 ;; Pointer list with targets:
   470 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   471 ;;
   472 ;; ?_getAdOriginalCh14Value	unsigned int  size(1) Largest target is 0
   473 ;;
   474 ;; ?_getAdOriginaCh4Value	unsigned int  size(1) Largest target is 0
   475 ;;
   476 ;; ?_getAdOriginalCh1Value	unsigned int  size(1) Largest target is 0
   477 ;;
   478 ;; ?_getAdOriginalValue	unsigned int  size(1) Largest target is 0
   479 ;;
   480 ;;
   481 ;; Critical Paths under _main in COMMON
   482 ;;
   483 ;;   None.
   484 ;;
   485 ;; Critical Paths under _ISR in COMMON
   486 ;;
   487 ;;   _ISR->_adc_get
   488 ;;
   489 ;; Critical Paths under _main in BANK0
   490 ;;
   491 ;;   _process_AD_Converter_Value->_AD_Sample
   492 ;;   _AD_Sample->_getAdOriginalValue
   493 ;;
   494 ;; Critical Paths under _ISR in BANK0
   495 ;;
   496 ;;   None.
   497 ;;
   498 ;; Critical Paths under _main in BANK1
   499 ;;
   500 ;;   None.
   501 ;;
   502 ;; Critical Paths under _ISR in BANK1
   503 ;;
   504 ;;   None.
   505 ;;
   506 ;; Critical Paths under _main in BANK3
   507 ;;
   508 ;;   None.
   509 ;;
   510 ;; Critical Paths under _ISR in BANK3
   511 ;;
   512 ;;   None.
   513 ;;
   514 ;; Critical Paths under _main in BANK2
   515 ;;
   516 ;;   None.
   517 ;;
   518 ;; Critical Paths under _ISR in BANK2
   519 ;;
   520 ;;   None.
   521 ;;
   522 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   523 ;;
   524 ;;
   525 ;;Call Graph Tables:
   526 ;;
   527 ;; ---------------------------------------------------------------------------------
   528 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   529 ;; ---------------------------------------------------------------------------------
   530 ;; (0) _main                                                 0     0      0     178
   531 ;;                       _clock_config
   532 ;;                      _timer1_config
   533 ;;            _timer1_interrupt_config
   534 ;;                      _adc_test_init
   535 ;;                           _dac_init
   536 ;;                           _op1_init
   537 ;;                           _op2_init
   538 ;;                          _adc_start
   539 ;;                 _isPermitSampleTime
   540 ;;                       _clrSampeTime
   541 ;;         _process_AD_Converter_Value
   542 ;;             _getAdOriginalCh14Value
   543 ;;               _clearPinPortAndTimer
   544 ;;              _getAdOriginalCh1Value
   545 ;;               _startTwelveHourTimer
   546 ;;         _isFinishedTwelveHoursTimer
   547 ;;            _startTwentySecondsTimer
   548 ;;               _getAdOriginaCh4Value
   549 ;;       _isFinishedTwentySecondsTimer
   550 ;;               _startThreeHoursTimer
   551 ;;          _isFinishedThreeHoursTimer
   552 ;;               _clearThreeHoursTimer
   553 ;;                      _clearAllTimer
   554 ;; ---------------------------------------------------------------------------------
   555 ;; (1) _process_AD_Converter_Value                           0     0      0     134
   556 ;;                  _getAD_ConvertFlag
   557 ;;                  _setAD_ConvertFlag
   558 ;;                          _AD_Sample
   559 ;;                      _adc_test_init
   560 ;;                          _adc_start
   561 ;; ---------------------------------------------------------------------------------
   562 ;; (1) _clearPinPortAndTimer                                 0     0      0       0
   563 ;;                      _clearAllTimer
   564 ;; ---------------------------------------------------------------------------------
   565 ;; (2) _AD_Sample                                            3     3      0      68
   566 ;;                                              2 BANK0      3     3      0
   567 ;;                 _getAdOriginalValue
   568 ;; ---------------------------------------------------------------------------------
   569 ;; (1) _clearAllTimer                                        0     0      0       0
   570 ;;              _clearTwelveHoursTimer
   571 ;;               _clearThreeHoursTimer
   572 ;;            _clearTwentySecondsTimer
   573 ;; ---------------------------------------------------------------------------------
   574 ;; (3) _getAdOriginalValue                                   2     0      2       0
   575 ;;                                              0 BANK0      2     0      2
   576 ;; ---------------------------------------------------------------------------------
   577 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   578 ;;                                              0 BANK0      1     1      0
   579 ;; ---------------------------------------------------------------------------------
   580 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   581 ;; ---------------------------------------------------------------------------------
   582 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   583 ;; ---------------------------------------------------------------------------------
   584 ;; (1) _startThreeHoursTimer                                 0     0      0       0
   585 ;; ---------------------------------------------------------------------------------
   586 ;; (1) _isFinishedTwentySecondsTimer                         0     0      0       0
   587 ;; ---------------------------------------------------------------------------------
   588 ;; (1) _getAdOriginaCh4Value                                 2     0      2       0
   589 ;;                                              0 BANK0      2     0      2
   590 ;; ---------------------------------------------------------------------------------
   591 ;; (1) _startTwentySecondsTimer                              0     0      0       0
   592 ;; ---------------------------------------------------------------------------------
   593 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   594 ;; ---------------------------------------------------------------------------------
   595 ;; (1) _startTwelveHourTimer                                 0     0      0       0
   596 ;; ---------------------------------------------------------------------------------
   597 ;; (1) _getAdOriginalCh1Value                                2     0      2       0
   598 ;;                                              0 BANK0      2     0      2
   599 ;; ---------------------------------------------------------------------------------
   600 ;; (1) _getAdOriginalCh14Value                               2     0      2       0
   601 ;;                                              0 BANK0      2     0      2
   602 ;; ---------------------------------------------------------------------------------
   603 ;; (1) _clrSampeTime                                         0     0      0       0
   604 ;; ---------------------------------------------------------------------------------
   605 ;; (1) _isPermitSampleTime                                   0     0      0       0
   606 ;; ---------------------------------------------------------------------------------
   607 ;; (2) _adc_start                                            0     0      0       0
   608 ;; ---------------------------------------------------------------------------------
   609 ;; (1) _op2_init                                             0     0      0       0
   610 ;; ---------------------------------------------------------------------------------
   611 ;; (1) _op1_init                                             0     0      0       0
   612 ;; ---------------------------------------------------------------------------------
   613 ;; (1) _dac_init                                             0     0      0       0
   614 ;; ---------------------------------------------------------------------------------
   615 ;; (2) _adc_test_init                                        3     2      1      44
   616 ;;                                              0 BANK0      3     2      1
   617 ;; ---------------------------------------------------------------------------------
   618 ;; (1) _timer1_interrupt_config                              0     0      0       0
   619 ;; ---------------------------------------------------------------------------------
   620 ;; (1) _timer1_config                                        0     0      0       0
   621 ;; ---------------------------------------------------------------------------------
   622 ;; (1) _clock_config                                         0     0      0       0
   623 ;; ---------------------------------------------------------------------------------
   624 ;; (2) _clearTwentySecondsTimer                              0     0      0       0
   625 ;; ---------------------------------------------------------------------------------
   626 ;; (2) _clearThreeHoursTimer                                 0     0      0       0
   627 ;; ---------------------------------------------------------------------------------
   628 ;; (2) _clearTwelveHoursTimer                                0     0      0       0
   629 ;; ---------------------------------------------------------------------------------
   630 ;; Estimated maximum stack depth 3
   631 ;; ---------------------------------------------------------------------------------
   632 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   633 ;; ---------------------------------------------------------------------------------
   634 ;; (4) _ISR                                                  2     2      0      97
   635 ;;                                              4 COMMON     2     2      0
   636 ;;                i1_setAD_ConvertFlag
   637 ;;                            _adc_get
   638 ;; ---------------------------------------------------------------------------------
   639 ;; (5) i1_setAD_ConvertFlag                                  1     1      0      73
   640 ;;                                              0 COMMON     1     1      0
   641 ;; ---------------------------------------------------------------------------------
   642 ;; (5) _adc_get                                              4     2      2      24
   643 ;;                                              0 COMMON     4     2      2
   644 ;; ---------------------------------------------------------------------------------
   645 ;; Estimated maximum stack depth 5
   646 ;; ---------------------------------------------------------------------------------
   647 ;; Call Graph Graphs:
   648 ;; _main (ROOT)
   649 ;;   _clock_config
   650 ;;   _timer1_config
   651 ;;   _timer1_interrupt_config
   652 ;;   _adc_test_init
   653 ;;   _dac_init
   654 ;;   _op1_init
   655 ;;   _op2_init
   656 ;;   _adc_start
   657 ;;   _isPermitSampleTime
   658 ;;   _clrSampeTime
   659 ;;   _process_AD_Converter_Value
   660 ;;     _getAD_ConvertFlag
   661 ;;     _setAD_ConvertFlag
   662 ;;     _AD_Sample
   663 ;;       _getAdOriginalValue
   664 ;;     _adc_test_init
   665 ;;     _adc_start
   666 ;;   _getAdOriginalCh14Value
   667 ;;   _clearPinPortAndTimer
   668 ;;     _clearAllTimer
   669 ;;       _clearTwelveHoursTimer
   670 ;;       _clearThreeHoursTimer
   671 ;;       _clearTwentySecondsTimer
   672 ;;   _getAdOriginalCh1Value
   673 ;;   _startTwelveHourTimer
   674 ;;   _isFinishedTwelveHoursTimer
   675 ;;   _startTwentySecondsTimer
   676 ;;   _getAdOriginaCh4Value
   677 ;;   _isFinishedTwentySecondsTimer
   678 ;;   _startThreeHoursTimer
   679 ;;   _isFinishedThreeHoursTimer
   680 ;;   _clearThreeHoursTimer
   681 ;;   _clearAllTimer
   682 ;;     _clearTwelveHoursTimer
   683 ;;     _clearThreeHoursTimer
   684 ;;     _clearTwentySecondsTimer
   685 ;;
   686 ;; _ISR (ROOT)
   687 ;;   i1_setAD_ConvertFlag
   688 ;;   _adc_get
   689 ;;
   690 ;; Address spaces:
   691 ;;Name               Size   Autos  Total    Cost      Usage
   692 ;;BANK3               60      0       0      10        0.0%
   693 ;;BITBANK3            60      0       0       9        0.0%
   694 ;;SFR3                 0      0       0       4        0.0%
   695 ;;BITSFR3              0      0       0       4        0.0%
   696 ;;BANK2               60      0       0      12        0.0%
   697 ;;BITBANK2            60      0       0      11        0.0%
   698 ;;SFR2                 0      0       0       5        0.0%
   699 ;;BITSFR2              0      0       0       5        0.0%
   700 ;;SFR1                 0      0       0       2        0.0%
   701 ;;BITSFR1              0      0       0       2        0.0%
   702 ;;BANK1               50      0       0       8        0.0%
   703 ;;BITBANK1            50      0       0       7        0.0%
   704 ;;CODE                 0      0       0       0        0.0%
   705 ;;DATA                 0      0      4E       6        0.0%
   706 ;;ABS                  0      0      47       3        0.0%
   707 ;;NULL                 0      0       0       0        0.0%
   708 ;;STACK                0      0       7       2        0.0%
   709 ;;BANK0               50      5      3C       5       75.0%
   710 ;;BITBANK0            50      0       0       4        0.0%
   711 ;;SFR0                 0      0       0       1        0.0%
   712 ;;BITSFR0              0      0       0       1        0.0%
   713 ;;COMMON               E      6       B       1       78.6%
   714 ;;BITCOMMON            E      0       0       0        0.0%
   715                           
   716                           
   717 ;; *************** function _main *****************
   718 ;; Defined at:
   719 ;;		line 105 in file "C:\190604\AK7030-OTP\main.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;		None
   722 ;; Auto vars:     Size  Location     Type
   723 ;;		None
   724 ;; Return value:  Size  Location     Type
   725 ;;		None               void
   726 ;; Registers used:
   727 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   728 ;; Tracked objects:
   729 ;;		On entry : 17F/0
   730 ;;		On exit  : 60/0
   731 ;;		Unchanged: FFE00/0
   732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   733 ;;      Params:         0       0       0       0       0
   734 ;;      Locals:         0       0       0       0       0
   735 ;;      Temps:          0       0       0       0       0
   736 ;;      Totals:         0       0       0       0       0
   737 ;;Total ram usage:        0 bytes
   738 ;; Hardware stack levels required when called:    5
   739 ;; This function calls:
   740 ;;		_clock_config
   741 ;;		_timer1_config
   742 ;;		_timer1_interrupt_config
   743 ;;		_adc_test_init
   744 ;;		_dac_init
   745 ;;		_op1_init
   746 ;;		_op2_init
   747 ;;		_adc_start
   748 ;;		_isPermitSampleTime
   749 ;;		_clrSampeTime
   750 ;;		_process_AD_Converter_Value
   751 ;;		_getAdOriginalCh14Value
   752 ;;		_clearPinPortAndTimer
   753 ;;		_getAdOriginalCh1Value
   754 ;;		_startTwelveHourTimer
   755 ;;		_isFinishedTwelveHoursTimer
   756 ;;		_startTwentySecondsTimer
   757 ;;		_getAdOriginaCh4Value
   758 ;;		_isFinishedTwentySecondsTimer
   759 ;;		_startThreeHoursTimer
   760 ;;		_isFinishedThreeHoursTimer
   761 ;;		_clearThreeHoursTimer
   762 ;;		_clearAllTimer
   763 ;; This function is called by:
   764 ;;		Startup code after reset
   765 ;; This function uses a non-reentrant model
   766 ;;
   767  000D                     _main:	
   768                           
   769                           ;main.c: 106: enum setp_Adc4
   770                           ;main.c: 107: {
   771                           ;main.c: 108: ADC4_STEP_INIT = 0,
   772                           ;main.c: 109: ADC4_STEP_FIRST,
   773                           ;main.c: 110: ADC4_STEP_SECOND,
   774                           ;main.c: 111: ADC4_STEP_THIRD,
   775                           ;main.c: 112: ADC4_STEP_FOURTH,
   776                           ;main.c: 113: ADC4_STEP_FIFTH,
   777                           ;main.c: 114: ADC4_STEP_SIXTH,
   778                           ;main.c: 115: };
   779                           ;main.c: 118: static unsigned char ucWaitTime1S = 0;
   780                           ;main.c: 120: static unsigned char ucWaitTimeO3s = 0;
   781                           ;main.c: 122: static unsigned char ucSmallTimerActionFlag = 0;
   782                           ;main.c: 124: static unsigned char ucSetSmallActionFlag = 0;
   783                           
   784                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   785  000D  1683               	bsf	3,5	;RP0=1, select bank1
   786  000E  1005               	bcf	5,0
   787                           
   788                           ;main.c: 127: TRISA1 = 0;
   789  000F  1085               	bcf	5,1
   790                           
   791                           ;main.c: 128: TRISA2 = 0;
   792  0010  1105               	bcf	5,2
   793                           
   794                           ;main.c: 129: TRISA3 = 0;
   795  0011  1185               	bcf	5,3
   796                           
   797                           ;main.c: 130: TRISB0 = 0;
   798  0012  1006               	bcf	6,0
   799                           
   800                           ;main.c: 131: TRISB1 = 0;
   801  0013  1086               	bcf	6,1
   802                           
   803                           ;main.c: 132: TRISA6 = 0;
   804  0014  1305               	bcf	5,6
   805                           
   806                           ;main.c: 133: TRISA7 = 0;
   807  0015  1385               	bcf	5,7
   808                           
   809                           ;main.c: 135: PBOD6 = 1;
   810  0016  1703               	bsf	3,6	;RP1=1, select bank3
   811  0017  1708               	bsf	8,6
   812                           
   813                           ;main.c: 137: PA0 = 0;
   814  0018  1283               	bcf	3,5	;RP0=0, select bank0
   815  0019  1303               	bcf	3,6	;RP1=0, select bank0
   816  001A  1005               	bcf	5,0
   817                           
   818                           ;main.c: 138: PA1 = 0;
   819  001B  1085               	bcf	5,1
   820                           
   821                           ;main.c: 139: PA2 = 0;
   822  001C  1105               	bcf	5,2
   823                           
   824                           ;main.c: 140: PA3 = 0;
   825  001D  1185               	bcf	5,3
   826                           
   827                           ;main.c: 141: PB0 = 0;
   828  001E  1006               	bcf	6,0
   829                           
   830                           ;main.c: 142: PB1 = 1;
   831  001F  1486               	bsf	6,1
   832                           
   833                           ;main.c: 143: PA6 = 0;
   834  0020  1305               	bcf	5,6
   835                           
   836                           ;main.c: 144: PA7 = 0;
   837  0021  1385               	bcf	5,7
   838                           
   839                           ;main.c: 146: TRISB2 = 1;
   840  0022  1683               	bsf	3,5	;RP0=1, select bank1
   841  0023  1506               	bsf	6,2
   842                           
   843                           ;main.c: 148: TRISB7 = 1;
   844  0024  1786               	bsf	6,7
   845                           
   846                           ;main.c: 149: TRISB4 = 1;
   847  0025  1606               	bsf	6,4
   848                           
   849                           ;main.c: 151: clock_config();
   850  0026  118A  2493  118A   	fcall	_clock_config
   851                           
   852                           ;main.c: 152: timer1_config();
   853  0029  118A  2479  118A   	fcall	_timer1_config
   854                           
   855                           ;main.c: 153: timer1_interrupt_config();
   856  002C  118A  24D3  118A   	fcall	_timer1_interrupt_config
   857                           
   858                           ;main.c: 155: adc_test_init(14,3);
   859  002F  3003               	movlw	3
   860  0030  1283               	bcf	3,5	;RP0=0, select bank0
   861  0031  00D6               	movwf	?_adc_test_init
   862  0032  300E               	movlw	14
   863  0033  118A  2397  118A   	fcall	_adc_test_init
   864                           
   865                           ;main.c: 157: dac_init();
   866  0036  118A  24CA  118A   	fcall	_dac_init
   867                           
   868                           ;main.c: 158: op1_init();
   869  0039  118A  246E  118A   	fcall	_op1_init
   870                           
   871                           ;main.c: 159: op2_init();
   872  003C  118A  248B  118A   	fcall	_op2_init
   873                           
   874                           ;main.c: 162: adc_start();
   875  003F  118A  23AC  118A   	fcall	_adc_start
   876  0042                     l3947:	
   877  0042  0064               	clrwdt	;#
   878                           
   879                           ;main.c: 197: if(isPermitSampleTime())
   880  0043  118A  24C5  118A   	fcall	_isPermitSampleTime
   881  0046  3A00               	xorlw	0
   882  0047  1903               	skipnz
   883  0048  2842               	goto	l3947
   884                           
   885                           ;main.c: 198: {
   886                           ;main.c: 199: clrSampeTime();
   887  0049  118A  24D6  118A   	fcall	_clrSampeTime
   888                           
   889                           ;main.c: 200: process_AD_Converter_Value();
   890  004C  118A  230B  118A   	fcall	_process_AD_Converter_Value
   891                           
   892                           ;main.c: 202: switch(enumMainLoopStep)
   893  004F  2AED               	goto	l4443
   894  0050                     l3955:	
   895                           
   896                           ;main.c: 205: {
   897                           ;main.c: 206: static unsigned char ucTimerZeroPoint5s = 0;
   898                           ;main.c: 207: if(getAdOriginalCh14Value() > 1950)
   899  0050  118A  24C0  118A   	fcall	_getAdOriginalCh14Value
   900  0053  3007               	movlw	7
   901  0054  0257               	subwf	?_getAdOriginalCh14Value+1,w
   902  0055  309F               	movlw	159
   903  0056  1903               	skipnz
   904  0057  0256               	subwf	?_getAdOriginalCh14Value,w
   905  0058  1C03               	skipc
   906  0059  285C               	goto	l3959
   907                           
   908                           ;main.c: 208: {
   909                           ;main.c: 209: ucTimerZeroPoint5s++;
   910  005A  0AD5               	incf	main@ucTimerZeroPoint5s,f
   911                           
   912                           ;main.c: 210: }
   913  005B  285D               	goto	l3961
   914  005C                     l3959:	
   915                           
   916                           ;main.c: 211: else
   917                           ;main.c: 212: ucTimerZeroPoint5s = 0;
   918  005C  01D5               	clrf	main@ucTimerZeroPoint5s
   919  005D                     l3961:	
   920                           
   921                           ;main.c: 214: if(ucTimerZeroPoint5s >= 5)
   922  005D  3005               	movlw	5
   923  005E  0255               	subwf	main@ucTimerZeroPoint5s,w
   924  005F  1C03               	skipc
   925  0060  2842               	goto	l3947
   926                           
   927                           ;main.c: 215: {
   928                           ;main.c: 216: ucTimerZeroPoint5s = 0;
   929  0061  01D5               	clrf	main@ucTimerZeroPoint5s
   930  0062                     l3965:	
   931                           
   932                           ;main.c: 217: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
   933  0062  01C0               	clrf	main@enumMainLoopStep
   934  0063  0AC0               	incf	main@enumMainLoopStep,f
   935  0064                     l703:	
   936                           
   937                           ;main.c: 218: }
   938                           ;main.c: 219: break;
   939  0064  2842               	goto	l3947
   940  0065                     l3967:	
   941                           
   942                           ;main.c: 223: {
   943                           ;main.c: 224: static unsigned char ucTimerZeroPoint3s = 0;
   944                           ;main.c: 225: if(getAdOriginalCh14Value() > 1950)
   945  0065  118A  24C0  118A   	fcall	_getAdOriginalCh14Value
   946  0068  3007               	movlw	7
   947  0069  0257               	subwf	?_getAdOriginalCh14Value+1,w
   948  006A  309F               	movlw	159
   949  006B  1903               	skipnz
   950  006C  0256               	subwf	?_getAdOriginalCh14Value,w
   951  006D  1C03               	skipc
   952  006E  2871               	goto	l3971
   953                           
   954                           ;main.c: 226: {
   955                           ;main.c: 227: ucTimerZeroPoint3s++;
   956  006F  0AD4               	incf	main@ucTimerZeroPoint3s,f
   957                           
   958                           ;main.c: 228: }
   959  0070  2872               	goto	l3973
   960  0071                     l3971:	
   961                           
   962                           ;main.c: 229: else
   963                           ;main.c: 230: ucTimerZeroPoint3s = 0;
   964  0071  01D4               	clrf	main@ucTimerZeroPoint3s
   965  0072                     l3973:	
   966                           
   967                           ;main.c: 232: if(ucTimerZeroPoint3s >= 3)
   968  0072  3003               	movlw	3
   969  0073  0254               	subwf	main@ucTimerZeroPoint3s,w
   970  0074  1C03               	skipc
   971  0075  2879               	goto	l3979
   972                           
   973                           ;main.c: 233: {
   974                           ;main.c: 234: ucTimerZeroPoint3s = 0;
   975  0076  01D4               	clrf	main@ucTimerZeroPoint3s
   976  0077                     l3977:	
   977                           
   978                           ;main.c: 235: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
   979  0077  3002               	movlw	2
   980  0078  28B2               	goto	L5
   981  0079                     l3979:	
   982                           ;main.c: 236: }
   983                           
   984                           
   985                           ;main.c: 237: else
   986                           ;main.c: 238: {
   987                           ;main.c: 239: clearPinPortAndTimer();
   988  0079  118A  2421  118A   	fcall	_clearPinPortAndTimer
   989  007C  2842               	goto	l3947
   990  007D                     l712:	
   991                           ;main.c: 242: }
   992                           ;main.c: 244: case MAIN_LOOP_STEP_SECOND:
   993                           
   994  007D  3003               	movlw	3
   995                           
   996                           ;main.c: 245: {
   997                           ;main.c: 247: PA6 = 1;
   998  007E  1705               	bsf	5,6
   999                           
  1000                           ;main.c: 248: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  1001  007F  28B2               	goto	L5
  1002  0080                     l3983:	
  1003                           ;main.c: 250: break;
  1004                           
  1005                           
  1006                           ;main.c: 254: {
  1007                           ;main.c: 255: static unsigned char ucTimerADC1ZeroP5s = 0;
  1008                           ;main.c: 257: if(getAdOriginalCh1Value() < 130)
  1009  0080  118A  24BB  118A   	fcall	_getAdOriginalCh1Value
  1010  0083  3000               	movlw	0
  1011  0084  0257               	subwf	?_getAdOriginalCh1Value+1,w
  1012  0085  3082               	movlw	130
  1013  0086  1903               	skipnz
  1014  0087  0256               	subwf	?_getAdOriginalCh1Value,w
  1015  0088  1803               	skipnc
  1016  0089  288C               	goto	l3987
  1017                           
  1018                           ;main.c: 258: {
  1019                           ;main.c: 259: ucTimerADC1ZeroP5s = 0;
  1020  008A  01CA               	clrf	main@ucTimerADC1ZeroP5s
  1021                           
  1022                           ;main.c: 261: }
  1023  008B  288D               	goto	l3989
  1024  008C                     l3987:	
  1025                           
  1026                           ;main.c: 262: else
  1027                           ;main.c: 263: {
  1028                           ;main.c: 264: ucTimerADC1ZeroP5s++;
  1029  008C  0ACA               	incf	main@ucTimerADC1ZeroP5s,f
  1030  008D                     l3989:	
  1031                           
  1032                           ;main.c: 265: }
  1033                           ;main.c: 267: if(ucTimerADC1ZeroP5s >= 1)
  1034  008D  084A               	movf	main@ucTimerADC1ZeroP5s,w
  1035  008E  1903               	btfsc	3,2
  1036  008F  2893               	goto	l3995
  1037  0090  3004               	movlw	4
  1038                           
  1039                           ;main.c: 268: {
  1040                           ;main.c: 269: ucTimerADC1ZeroP5s = 0;
  1041  0091  01CA               	clrf	main@ucTimerADC1ZeroP5s
  1042                           
  1043                           ;main.c: 270: enumMainLoopStep = MAIN_LOOP_STEP_FOURTH;
  1044  0092  28B2               	goto	L5
  1045  0093                     l3995:	
  1046                           ;main.c: 271: }
  1047                           
  1048                           
  1049                           ;main.c: 272: else
  1050                           ;main.c: 273: {
  1051                           ;main.c: 274: static unsigned char ucTimerRightP5s = 0;
  1052                           ;main.c: 276: if(getAdOriginalCh1Value() < 117)
  1053  0093  118A  24BB  118A   	fcall	_getAdOriginalCh1Value
  1054  0096  3000               	movlw	0
  1055  0097  0257               	subwf	?_getAdOriginalCh1Value+1,w
  1056  0098  3075               	movlw	117
  1057  0099  1903               	skipnz
  1058  009A  0256               	subwf	?_getAdOriginalCh1Value,w
  1059  009B  1803               	skipnc
  1060  009C  289F               	goto	l3999
  1061                           
  1062                           ;main.c: 277: {
  1063                           ;main.c: 278: ucTimerRightP5s++;
  1064  009D  0AD1               	incf	main@ucTimerRightP5s,f
  1065                           
  1066                           ;main.c: 279: }
  1067  009E  28A0               	goto	l4001
  1068  009F                     l3999:	
  1069                           
  1070                           ;main.c: 280: else
  1071                           ;main.c: 281: {
  1072                           ;main.c: 282: ucTimerRightP5s = 0;
  1073  009F  01D1               	clrf	main@ucTimerRightP5s
  1074  00A0                     l4001:	
  1075                           
  1076                           ;main.c: 283: }
  1077                           ;main.c: 285: if(ucTimerRightP5s >= 1)
  1078  00A0  0851               	movf	main@ucTimerRightP5s,w
  1079  00A1  1903               	btfsc	3,2
  1080  00A2  2842               	goto	l3947
  1081  00A3  3008               	movlw	8
  1082                           
  1083                           ;main.c: 286: {
  1084                           ;main.c: 287: ucTimerRightP5s = 0;
  1085  00A4  01D1               	clrf	main@ucTimerRightP5s
  1086                           
  1087                           ;main.c: 288: enumMainLoopStep = MAIN_LOOP_STEP_3_HOUR_BRANCH;
  1088  00A5  28B2               	goto	L5
  1089  00A6                     l4007:	
  1090                           ;main.c: 289: }
  1091                           
  1092                           
  1093                           ;main.c: 300: {
  1094                           ;main.c: 302: startTwelveHourTimer();
  1095  00A6  118A  24B6  118A   	fcall	_startTwelveHourTimer
  1096                           
  1097                           ;main.c: 303: enumMainLoopStep = MAIN_LOOP_STEP_FIFTH;
  1098  00A9  3005               	movlw	5
  1099  00AA  28B2               	goto	L5
  1100  00AB                     l4011:	
  1101                           ;main.c: 305: break;
  1102                           
  1103                           
  1104                           ;main.c: 309: {
  1105                           ;main.c: 311: if(isFinishedTwelveHoursTimer())
  1106  00AB  118A  24B1  118A   	fcall	_isFinishedTwelveHoursTimer
  1107  00AE  3A00               	xorlw	0
  1108  00AF  1903               	skipnz
  1109  00B0  2A32               	goto	l4323
  1110  00B1                     l4013:	
  1111                           
  1112                           ;main.c: 312: {
  1113                           ;main.c: 313: enumMainLoopStep = MAIN_LOOP_STEP_12_HOUR_END;
  1114  00B1  3009               	movlw	9
  1115  00B2                     L5:	
  1116  00B2  00C0               	movwf	main@enumMainLoopStep
  1117                           
  1118                           ;main.c: 314: }
  1119  00B3  2842               	goto	l3947
  1120  00B4                     l4015:	
  1121                           
  1122                           ;main.c: 322: {
  1123                           ;main.c: 323: startTwentySecondsTimer();
  1124  00B4  118A  24CF  118A   	fcall	_startTwentySecondsTimer
  1125  00B7                     l4017:	
  1126                           
  1127                           ;main.c: 324: ucADC4_Step = ADC4_STEP_FIRST;
  1128  00B7  01C1               	clrf	main@ucADC4_Step
  1129  00B8  0AC1               	incf	main@ucADC4_Step,f
  1130                           
  1131                           ;main.c: 325: break;
  1132  00B9  2842               	goto	l3947
  1133  00BA                     l4019:	
  1134                           
  1135                           ;main.c: 329: {
  1136                           ;main.c: 330: if(getAdOriginaCh4Value() < 1911)
  1137  00BA  118A  24AC  118A   	fcall	_getAdOriginaCh4Value
  1138  00BD  3007               	movlw	7
  1139  00BE  0257               	subwf	?_getAdOriginaCh4Value+1,w
  1140  00BF  3077               	movlw	119
  1141  00C0  1903               	skipnz
  1142  00C1  0256               	subwf	?_getAdOriginaCh4Value,w
  1143  00C2  1803               	skipnc
  1144  00C3  28C6               	goto	l4023
  1145                           
  1146                           ;main.c: 331: ucChannel4Type = LESS_THAN_1911;
  1147  00C4  01C2               	clrf	main@ucChannel4Type
  1148  00C5  28ED               	goto	l737
  1149  00C6                     l4023:	
  1150                           
  1151                           ;main.c: 332: else if(getAdOriginaCh4Value() < 2067)
  1152  00C6  118A  24AC  118A   	fcall	_getAdOriginaCh4Value
  1153  00C9  3008               	movlw	8
  1154  00CA  0257               	subwf	?_getAdOriginaCh4Value+1,w
  1155  00CB  3013               	movlw	19
  1156  00CC  1903               	skipnz
  1157  00CD  0256               	subwf	?_getAdOriginaCh4Value,w
  1158  00CE  1803               	skipnc
  1159  00CF  28D3               	goto	l4027
  1160                           
  1161                           ;main.c: 333: ucChannel4Type = BETWEEN_1911_AND_2067;
  1162  00D0  01C2               	clrf	main@ucChannel4Type
  1163  00D1  0AC2               	incf	main@ucChannel4Type,f
  1164  00D2  28ED               	goto	l737
  1165  00D3                     l4027:	
  1166                           
  1167                           ;main.c: 334: else if(getAdOriginaCh4Value() < 2204)
  1168  00D3  118A  24AC  118A   	fcall	_getAdOriginaCh4Value
  1169  00D6  3008               	movlw	8
  1170  00D7  0257               	subwf	?_getAdOriginaCh4Value+1,w
  1171  00D8  309C               	movlw	156
  1172  00D9  1903               	skipnz
  1173  00DA  0256               	subwf	?_getAdOriginaCh4Value,w
  1174  00DB  1803               	skipnc
  1175  00DC  28DF               	goto	l4031
  1176                           
  1177                           ;main.c: 335: ucChannel4Type = BETWEEN_2067_AND_2204;
  1178  00DD  3002               	movlw	2
  1179  00DE  28EC               	goto	L6
  1180  00DF                     l4031:	
  1181                           
  1182                           ;main.c: 336: else if(getAdOriginaCh4Value() < 2340)
  1183  00DF  118A  24AC  118A   	fcall	_getAdOriginaCh4Value
  1184  00E2  3009               	movlw	9
  1185  00E3  0257               	subwf	?_getAdOriginaCh4Value+1,w
  1186  00E4  3024               	movlw	36
  1187  00E5  1903               	skipnz
  1188  00E6  0256               	subwf	?_getAdOriginaCh4Value,w
  1189  00E7  1803               	skipnc
  1190  00E8  28EB               	goto	l4035
  1191                           
  1192                           ;main.c: 337: ucChannel4Type = BETWEEN_2204_AND_2340;
  1193  00E9  3003               	movlw	3
  1194  00EA  28EC               	goto	L6
  1195  00EB                     l4035:	
  1196                           
  1197                           ;main.c: 338: else
  1198                           ;main.c: 339: ucChannel4Type = MORE_THAN_2340;
  1199  00EB  3004               	movlw	4
  1200  00EC                     L6:	
  1201  00EC  00C2               	movwf	main@ucChannel4Type
  1202  00ED                     l737:	
  1203                           
  1204                           ;main.c: 341: ucADC4_Step = ADC4_STEP_SECOND;
  1205  00ED  3002               	movlw	2
  1206  00EE  2A20               	goto	L8
  1207  00EF                     l752:	
  1208                           ;main.c: 356: {
  1209                           ;main.c: 357: case 0:
  1210                           
  1211                           ;main.c: 342: break;
  1212                           
  1213                           
  1214                           ;main.c: 358: {
  1215                           ;main.c: 359: PB0 = 1;
  1216  00EF  1406               	bsf	6,0
  1217  00F0                     l4037:	
  1218                           
  1219                           ;main.c: 360: ucLoaderStep++;
  1220  00F0  0AC3               	incf	main@ucLoaderStep,f
  1221                           
  1222                           ;main.c: 361: break;
  1223  00F1  2842               	goto	l3947
  1224  00F2                     l4039:	
  1225                           
  1226                           ;main.c: 365: {
  1227                           ;main.c: 366: if(ucTimerDelay >= 5)
  1228  00F2  3005               	movlw	5
  1229  00F3  024B               	subwf	main@ucTimerDelay,w
  1230  00F4  1C03               	skipc
  1231  00F5  28F9               	goto	l4047
  1232                           
  1233                           ;main.c: 367: {
  1234                           ;main.c: 368: PA0 = 1;
  1235  00F6  1405               	bsf	5,0
  1236  00F7                     l4043:	
  1237                           
  1238                           ;main.c: 369: ucTimerDelay = 0;
  1239  00F7  01CB               	clrf	main@ucTimerDelay
  1240  00F8  28F0               	goto	l4037
  1241  00F9                     l4047:	
  1242                           
  1243                           ;main.c: 372: else
  1244                           ;main.c: 373: ucTimerDelay++;
  1245  00F9  0ACB               	incf	main@ucTimerDelay,f
  1246  00FA  2842               	goto	l3947
  1247  00FB                     l4049:	
  1248                           
  1249                           ;main.c: 378: {
  1250                           ;main.c: 379: if(ucTimerDelay >= 5)
  1251  00FB  3005               	movlw	5
  1252  00FC  024B               	subwf	main@ucTimerDelay,w
  1253  00FD  1C03               	skipc
  1254  00FE  28F9               	goto	l4047
  1255                           
  1256                           ;main.c: 380: {
  1257                           ;main.c: 381: PA1= 1;
  1258  00FF  1485               	bsf	5,1
  1259  0100  28F7               	goto	l4043
  1260  0101                     l4059:	
  1261                           
  1262                           ;main.c: 392: {
  1263                           ;main.c: 393: if(ucTimerDelay >= 5)
  1264  0101  3005               	movlw	5
  1265  0102  024B               	subwf	main@ucTimerDelay,w
  1266  0103  1C03               	skipc
  1267  0104  28F9               	goto	l4047
  1268                           
  1269                           ;main.c: 394: {
  1270                           ;main.c: 395: PA2= 1;
  1271  0105  1505               	bsf	5,2
  1272  0106  28F7               	goto	l4043
  1273  0107                     l4069:	
  1274                           
  1275                           ;main.c: 405: {
  1276                           ;main.c: 406: if(ucTimerDelay >= 5)
  1277  0107  3005               	movlw	5
  1278  0108  024B               	subwf	main@ucTimerDelay,w
  1279  0109  1C03               	skipc
  1280  010A  28F9               	goto	l4047
  1281                           
  1282                           ;main.c: 407: {
  1283                           ;main.c: 408: PA3 = 1;
  1284  010B  1585               	bsf	5,3
  1285  010C  28F7               	goto	l4043
  1286  010D                     l4079:	
  1287                           
  1288                           ;main.c: 418: {
  1289                           ;main.c: 419: if(ucTimerDelay >= 5)
  1290  010D  3005               	movlw	5
  1291  010E  024B               	subwf	main@ucTimerDelay,w
  1292  010F  1C03               	skipc
  1293  0110  28F9               	goto	l4047
  1294                           
  1295                           ;main.c: 420: {
  1296                           ;main.c: 421: PB2 = 0;
  1297  0111  1106               	bcf	6,2
  1298                           
  1299                           ;main.c: 422: PA0 = 0;
  1300  0112  1005               	bcf	5,0
  1301                           
  1302                           ;main.c: 423: PA1 = 0;
  1303  0113  1085               	bcf	5,1
  1304                           
  1305                           ;main.c: 424: PA2 = 0;
  1306  0114  1105               	bcf	5,2
  1307                           
  1308                           ;main.c: 425: PA3 = 0;
  1309  0115  1185               	bcf	5,3
  1310  0116  28F7               	goto	l4043
  1311  0117                     l4089:	
  1312                           
  1313                           ;main.c: 435: {
  1314                           ;main.c: 436: if(ucTimerDelay >= 2)
  1315  0117  3002               	movlw	2
  1316  0118  024B               	subwf	main@ucTimerDelay,w
  1317  0119  1C03               	skipc
  1318  011A  28F9               	goto	l4047
  1319                           
  1320                           ;main.c: 437: {
  1321                           ;main.c: 438: ucTimerDelay = 0;
  1322  011B  01CB               	clrf	main@ucTimerDelay
  1323                           
  1324                           ;main.c: 440: ucLoaderStep = 0;
  1325  011C  01C3               	clrf	main@ucLoaderStep
  1326  011D                     l4093:	
  1327                           
  1328                           ;main.c: 441: ucADC4_Step = ADC4_STEP_THIRD;
  1329  011D  3003               	movlw	3
  1330  011E  2A20               	goto	L8
  1331  011F                     l4099:	
  1332                           ;main.c: 442: }
  1333                           
  1334  011F  0843               	movf	main@ucLoaderStep,w
  1335                           
  1336                           ; Switch size 1, requested type "space"
  1337                           ; Number of cases is 7, Range of values is 0 to 6
  1338                           ; switch strategies available:
  1339                           ; Name         Instructions Cycles
  1340                           ; direct_byte           21     7 (fixed)
  1341                           ; simple_byte           22    12 (average)
  1342                           ; jumptable            260     6 (fixed)
  1343                           ; rangetable            11     6 (fixed)
  1344                           ; spacedrange           20     9 (fixed)
  1345                           ; locatedrange           7     3 (fixed)
  1346                           ;	Chosen strategy is direct_byte
  1347  0120  0084               	movwf	4
  1348  0121  3007               	movlw	7
  1349  0122  0204               	subwf	4,w
  1350  0123  1803               	skipnc
  1351  0124  2842               	goto	l3947
  1352  0125  3004               	movlw	high S4661
  1353  0126  008A               	movwf	10
  1354  0127  1003               	clrc
  1355  0128  0D04               	rlf	4,w
  1356  0129  3E46               	addlw	low S4661
  1357  012A  0082               	movwf	2
  1358  012B                     l780:	
  1359                           ;main.c: 461: {
  1360                           ;main.c: 462: case 0:
  1361                           
  1362                           
  1363                           ;main.c: 463: {
  1364                           ;main.c: 464: PB0 = 1;
  1365  012B  1406               	bsf	6,0
  1366  012C                     l4101:	
  1367                           
  1368                           ;main.c: 465: ucLoaderStep1++;
  1369  012C  0AC4               	incf	main@ucLoaderStep1,f
  1370                           
  1371                           ;main.c: 466: break;
  1372  012D  2842               	goto	l3947
  1373  012E                     l4103:	
  1374                           
  1375                           ;main.c: 470: {
  1376                           ;main.c: 471: if(ucTimerDelay1 >= 5)
  1377  012E  3005               	movlw	5
  1378  012F  024C               	subwf	main@ucTimerDelay1,w
  1379  0130  1C03               	skipc
  1380  0131  2935               	goto	l4111
  1381                           
  1382                           ;main.c: 472: {
  1383                           ;main.c: 473: PA0 = 1;
  1384  0132  1405               	bsf	5,0
  1385  0133                     l4107:	
  1386                           
  1387                           ;main.c: 474: ucTimerDelay1 = 0;
  1388  0133  01CC               	clrf	main@ucTimerDelay1
  1389  0134  292C               	goto	l4101
  1390  0135                     l4111:	
  1391                           
  1392                           ;main.c: 477: else
  1393                           ;main.c: 478: ucTimerDelay1++;
  1394  0135  0ACC               	incf	main@ucTimerDelay1,f
  1395  0136  2842               	goto	l3947
  1396  0137                     l4113:	
  1397                           
  1398                           ;main.c: 483: {
  1399                           ;main.c: 484: if(ucTimerDelay1 >= 5)
  1400  0137  3005               	movlw	5
  1401  0138  024C               	subwf	main@ucTimerDelay1,w
  1402  0139  1C03               	skipc
  1403  013A  2935               	goto	l4111
  1404                           
  1405                           ;main.c: 485: {
  1406                           ;main.c: 486: PA1= 1;
  1407  013B  1485               	bsf	5,1
  1408  013C  2933               	goto	l4107
  1409  013D                     l4123:	
  1410                           
  1411                           ;main.c: 496: {
  1412                           ;main.c: 497: if(ucTimerDelay1 >= 5)
  1413  013D  3005               	movlw	5
  1414  013E  024C               	subwf	main@ucTimerDelay1,w
  1415  013F  1C03               	skipc
  1416  0140  2935               	goto	l4111
  1417                           
  1418                           ;main.c: 498: {
  1419                           ;main.c: 499: PA2 = 1;
  1420  0141  1505               	bsf	5,2
  1421  0142  2933               	goto	l4107
  1422  0143                     l4133:	
  1423                           
  1424                           ;main.c: 509: {
  1425                           ;main.c: 510: if(ucTimerDelay1 >= 5)
  1426  0143  3005               	movlw	5
  1427  0144  024C               	subwf	main@ucTimerDelay1,w
  1428  0145  1C03               	skipc
  1429  0146  2935               	goto	l4111
  1430                           
  1431                           ;main.c: 511: {
  1432                           ;main.c: 512: PA3 = 1;
  1433  0147  1585               	bsf	5,3
  1434  0148  2933               	goto	l4107
  1435  0149                     l4143:	
  1436                           
  1437                           ;main.c: 522: {
  1438                           ;main.c: 523: if(ucTimerDelay1 >= 5)
  1439  0149  3005               	movlw	5
  1440  014A  024C               	subwf	main@ucTimerDelay1,w
  1441  014B  1C03               	skipc
  1442  014C  2935               	goto	l4111
  1443                           
  1444                           ;main.c: 524: {
  1445                           ;main.c: 525: PA0 = 0;
  1446  014D  1005               	bcf	5,0
  1447                           
  1448                           ;main.c: 526: PA1 = 0;
  1449  014E  1085               	bcf	5,1
  1450                           
  1451                           ;main.c: 527: PA2 = 0;
  1452  014F  1105               	bcf	5,2
  1453                           
  1454                           ;main.c: 528: PA3 = 0;
  1455  0150  1185               	bcf	5,3
  1456  0151  2933               	goto	l4107
  1457  0152                     l4153:	
  1458                           
  1459                           ;main.c: 538: {
  1460                           ;main.c: 539: if(ucTimerDelay1 >= 2)
  1461  0152  3002               	movlw	2
  1462  0153  024C               	subwf	main@ucTimerDelay1,w
  1463  0154  1C03               	skipc
  1464  0155  2935               	goto	l4111
  1465                           
  1466                           ;main.c: 540: {
  1467                           ;main.c: 541: ucTimerDelay1 = 0;
  1468  0156  01CC               	clrf	main@ucTimerDelay1
  1469                           
  1470                           ;main.c: 543: ucLoaderStep1 = 0;
  1471  0157  01C4               	clrf	main@ucLoaderStep1
  1472  0158  291D               	goto	l4093
  1473  0159                     l4163:	
  1474  0159  0844               	movf	main@ucLoaderStep1,w
  1475                           
  1476                           ; Switch size 1, requested type "space"
  1477                           ; Number of cases is 7, Range of values is 0 to 6
  1478                           ; switch strategies available:
  1479                           ; Name         Instructions Cycles
  1480                           ; direct_byte           21     7 (fixed)
  1481                           ; simple_byte           22    12 (average)
  1482                           ; jumptable            260     6 (fixed)
  1483                           ; rangetable            11     6 (fixed)
  1484                           ; spacedrange           20     9 (fixed)
  1485                           ; locatedrange           7     3 (fixed)
  1486                           ;	Chosen strategy is direct_byte
  1487  015A  0084               	movwf	4
  1488  015B  3007               	movlw	7
  1489  015C  0204               	subwf	4,w
  1490  015D  1803               	skipnc
  1491  015E  2842               	goto	l3947
  1492  015F  3004               	movlw	high S4663
  1493  0160  008A               	movwf	10
  1494  0161  1003               	clrc
  1495  0162  0D04               	rlf	4,w
  1496  0163  3E54               	addlw	low S4663
  1497  0164  0082               	movwf	2
  1498  0165                     l807:	
  1499                           ;main.c: 565: {
  1500                           ;main.c: 566: case 0:
  1501                           
  1502                           
  1503                           ;main.c: 567: {
  1504                           ;main.c: 568: PB0 = 1;
  1505  0165  1406               	bsf	6,0
  1506                           
  1507                           ;main.c: 569: PA0 = 1;
  1508  0166  1405               	bsf	5,0
  1509  0167                     l4165:	
  1510                           
  1511                           ;main.c: 570: ucLoaderStep2++;
  1512  0167  0AC5               	incf	main@ucLoaderStep2,f
  1513                           
  1514                           ;main.c: 571: break;
  1515  0168  2842               	goto	l3947
  1516  0169                     l4167:	
  1517                           
  1518                           ;main.c: 575: {
  1519                           ;main.c: 576: if(ucTimerDelay2 >= 5)
  1520  0169  3005               	movlw	5
  1521  016A  024D               	subwf	main@ucTimerDelay2,w
  1522  016B  1C03               	skipc
  1523  016C  2970               	goto	l4175
  1524                           
  1525                           ;main.c: 577: {
  1526                           ;main.c: 578: PA1 = 1;
  1527  016D  1485               	bsf	5,1
  1528  016E                     l4171:	
  1529                           
  1530                           ;main.c: 579: ucTimerDelay2 = 0;
  1531  016E  01CD               	clrf	main@ucTimerDelay2
  1532  016F  2967               	goto	l4165
  1533  0170                     l4175:	
  1534                           
  1535                           ;main.c: 582: else
  1536                           ;main.c: 583: ucTimerDelay2++;
  1537  0170  0ACD               	incf	main@ucTimerDelay2,f
  1538  0171  2842               	goto	l3947
  1539  0172                     l4177:	
  1540                           
  1541                           ;main.c: 588: {
  1542                           ;main.c: 589: if(ucTimerDelay2 >= 5)
  1543  0172  3005               	movlw	5
  1544  0173  024D               	subwf	main@ucTimerDelay2,w
  1545  0174  1C03               	skipc
  1546  0175  2970               	goto	l4175
  1547                           
  1548                           ;main.c: 590: {
  1549                           ;main.c: 591: PA2 = 1;
  1550  0176  1505               	bsf	5,2
  1551  0177  296E               	goto	l4171
  1552  0178                     l4187:	
  1553                           
  1554                           ;main.c: 601: {
  1555                           ;main.c: 602: if(ucTimerDelay2 >= 5)
  1556  0178  3005               	movlw	5
  1557  0179  024D               	subwf	main@ucTimerDelay2,w
  1558  017A  1C03               	skipc
  1559  017B  2970               	goto	l4175
  1560                           
  1561                           ;main.c: 603: {
  1562                           ;main.c: 604: PA3 = 1;
  1563  017C  1585               	bsf	5,3
  1564  017D  296E               	goto	l4171
  1565  017E                     l4197:	
  1566                           
  1567                           ;main.c: 614: {
  1568                           ;main.c: 615: if(ucTimerDelay2 >= 5)
  1569  017E  3005               	movlw	5
  1570  017F  024D               	subwf	main@ucTimerDelay2,w
  1571  0180  1C03               	skipc
  1572  0181  2970               	goto	l4175
  1573                           
  1574                           ;main.c: 616: {
  1575                           ;main.c: 618: PA1 = 0;
  1576  0182  1085               	bcf	5,1
  1577                           
  1578                           ;main.c: 619: PA2 = 0;
  1579  0183  1105               	bcf	5,2
  1580                           
  1581                           ;main.c: 620: PA3 = 0;
  1582  0184  1185               	bcf	5,3
  1583  0185  296E               	goto	l4171
  1584  0186                     l4207:	
  1585                           
  1586                           ;main.c: 630: {
  1587                           ;main.c: 631: if(ucTimerDelay2 >= 2)
  1588  0186  3002               	movlw	2
  1589  0187  024D               	subwf	main@ucTimerDelay2,w
  1590  0188  1C03               	skipc
  1591  0189  2970               	goto	l4175
  1592                           
  1593                           ;main.c: 632: {
  1594                           ;main.c: 633: ucTimerDelay2 = 0;
  1595  018A  01CD               	clrf	main@ucTimerDelay2
  1596                           
  1597                           ;main.c: 635: ucLoaderStep2 = 0;
  1598  018B  01C5               	clrf	main@ucLoaderStep2
  1599  018C  291D               	goto	l4093
  1600  018D                     l4217:	
  1601  018D  0845               	movf	main@ucLoaderStep2,w
  1602                           
  1603                           ; Switch size 1, requested type "space"
  1604                           ; Number of cases is 6, Range of values is 0 to 5
  1605                           ; switch strategies available:
  1606                           ; Name         Instructions Cycles
  1607                           ; direct_byte           19     7 (fixed)
  1608                           ; simple_byte           19    10 (average)
  1609                           ; jumptable            260     6 (fixed)
  1610                           ; rangetable            10     6 (fixed)
  1611                           ; spacedrange           18     9 (fixed)
  1612                           ; locatedrange           6     3 (fixed)
  1613                           ;	Chosen strategy is direct_byte
  1614  018E  0084               	movwf	4
  1615  018F  3006               	movlw	6
  1616  0190  0204               	subwf	4,w
  1617  0191  1803               	skipnc
  1618  0192  2842               	goto	l3947
  1619  0193  3004               	movlw	high S4665
  1620  0194  008A               	movwf	10
  1621  0195  1003               	clrc
  1622  0196  0D04               	rlf	4,w
  1623  0197  3E62               	addlw	low S4665
  1624  0198  0082               	movwf	2
  1625  0199                     l831:	
  1626                           ;main.c: 657: {
  1627                           ;main.c: 658: case 0:
  1628                           
  1629                           
  1630                           ;main.c: 659: {
  1631                           ;main.c: 660: PB0 = 1;
  1632  0199  1406               	bsf	6,0
  1633                           
  1634                           ;main.c: 661: PA0 = 1;
  1635  019A  1405               	bsf	5,0
  1636                           
  1637                           ;main.c: 662: PA1 = 1;
  1638  019B  1485               	bsf	5,1
  1639  019C                     l4219:	
  1640                           
  1641                           ;main.c: 663: ucLoaderStep3++;
  1642  019C  0AC6               	incf	main@ucLoaderStep3,f
  1643                           
  1644                           ;main.c: 664: break;
  1645  019D  2842               	goto	l3947
  1646  019E                     l4221:	
  1647                           
  1648                           ;main.c: 668: {
  1649                           ;main.c: 669: if(ucTimerDelay3 >= 5)
  1650  019E  3005               	movlw	5
  1651  019F  024E               	subwf	main@ucTimerDelay3,w
  1652  01A0  1C03               	skipc
  1653  01A1  29A5               	goto	l4229
  1654                           
  1655                           ;main.c: 670: {
  1656                           ;main.c: 671: PA2 = 1;
  1657  01A2  1505               	bsf	5,2
  1658  01A3                     l4225:	
  1659                           
  1660                           ;main.c: 672: ucTimerDelay3 = 0;
  1661  01A3  01CE               	clrf	main@ucTimerDelay3
  1662  01A4  299C               	goto	l4219
  1663  01A5                     l4229:	
  1664                           
  1665                           ;main.c: 675: else
  1666                           ;main.c: 676: ucTimerDelay3++;
  1667  01A5  0ACE               	incf	main@ucTimerDelay3,f
  1668  01A6  2842               	goto	l3947
  1669  01A7                     l4231:	
  1670                           
  1671                           ;main.c: 681: {
  1672                           ;main.c: 682: if(ucTimerDelay3 >= 5)
  1673  01A7  3005               	movlw	5
  1674  01A8  024E               	subwf	main@ucTimerDelay3,w
  1675  01A9  1C03               	skipc
  1676  01AA  29A5               	goto	l4229
  1677                           
  1678                           ;main.c: 683: {
  1679                           ;main.c: 684: PA3 = 1;
  1680  01AB  1585               	bsf	5,3
  1681  01AC  29A3               	goto	l4225
  1682  01AD                     l4241:	
  1683                           
  1684                           ;main.c: 695: {
  1685                           ;main.c: 696: if(ucTimerDelay3 >= 5)
  1686  01AD  3005               	movlw	5
  1687  01AE  024E               	subwf	main@ucTimerDelay3,w
  1688  01AF  1C03               	skipc
  1689  01B0  29A5               	goto	l4229
  1690                           
  1691                           ;main.c: 697: {
  1692                           ;main.c: 699: PA2 = 0;
  1693  01B1  1105               	bcf	5,2
  1694                           
  1695                           ;main.c: 700: PA3 = 0;
  1696  01B2  1185               	bcf	5,3
  1697  01B3  29A3               	goto	l4225
  1698  01B4                     l4251:	
  1699                           
  1700                           ;main.c: 710: {
  1701                           ;main.c: 711: if(ucTimerDelay3 >= 2)
  1702  01B4  3002               	movlw	2
  1703  01B5  024E               	subwf	main@ucTimerDelay3,w
  1704  01B6  1C03               	skipc
  1705  01B7  29A5               	goto	l4229
  1706                           
  1707                           ;main.c: 712: {
  1708                           ;main.c: 713: ucTimerDelay3 = 0;
  1709  01B8  01CE               	clrf	main@ucTimerDelay3
  1710                           
  1711                           ;main.c: 715: ucLoaderStep3 = 0;
  1712  01B9  01C6               	clrf	main@ucLoaderStep3
  1713  01BA  291D               	goto	l4093
  1714  01BB                     l4261:	
  1715  01BB  0846               	movf	main@ucLoaderStep3,w
  1716                           
  1717                           ; Switch size 1, requested type "space"
  1718                           ; Number of cases is 5, Range of values is 0 to 4
  1719                           ; switch strategies available:
  1720                           ; Name         Instructions Cycles
  1721                           ; simple_byte           16     9 (average)
  1722                           ; direct_byte           17     7 (fixed)
  1723                           ; jumptable            260     6 (fixed)
  1724                           ; rangetable             9     6 (fixed)
  1725                           ; spacedrange           16     9 (fixed)
  1726                           ; locatedrange           5     3 (fixed)
  1727                           ;	Chosen strategy is simple_byte
  1728  01BC  3A00               	xorlw	0	; case 0
  1729  01BD  1903               	skipnz
  1730  01BE  2999               	goto	l831
  1731  01BF  3A01               	xorlw	1	; case 1
  1732  01C0  1903               	skipnz
  1733  01C1  299E               	goto	l4221
  1734  01C2  3A03               	xorlw	3	; case 2
  1735  01C3  1903               	skipnz
  1736  01C4  29A7               	goto	l4231
  1737  01C5  3A01               	xorlw	1	; case 3
  1738  01C6  1903               	skipnz
  1739  01C7  29AD               	goto	l4241
  1740  01C8  3A07               	xorlw	7	; case 4
  1741  01C9  1903               	skipnz
  1742  01CA  29B4               	goto	l4251
  1743  01CB  2864               	goto	l703
  1744  01CC                     l852:	
  1745                           ;main.c: 737: {
  1746                           ;main.c: 738: case 0:
  1747                           
  1748                           
  1749                           ;main.c: 739: {
  1750                           ;main.c: 740: PB0 = 1;
  1751  01CC  1406               	bsf	6,0
  1752                           
  1753                           ;main.c: 741: PA0 = 1;
  1754  01CD  1405               	bsf	5,0
  1755                           
  1756                           ;main.c: 742: PA1 = 1;
  1757  01CE  1485               	bsf	5,1
  1758                           
  1759                           ;main.c: 743: PA2 = 1;
  1760  01CF  1505               	bsf	5,2
  1761  01D0                     l4263:	
  1762                           
  1763                           ;main.c: 744: ucLoaderStep4++;
  1764  01D0  0AC7               	incf	main@ucLoaderStep4,f
  1765                           
  1766                           ;main.c: 745: break;
  1767  01D1  2842               	goto	l3947
  1768  01D2                     l4265:	
  1769                           
  1770                           ;main.c: 749: {
  1771                           ;main.c: 750: if(ucTimerDelay4 >= 5)
  1772  01D2  3005               	movlw	5
  1773  01D3  024F               	subwf	main@ucTimerDelay4,w
  1774  01D4  1C03               	skipc
  1775  01D5  29D9               	goto	l4273
  1776                           
  1777                           ;main.c: 751: {
  1778                           ;main.c: 752: PA3 = 1;
  1779  01D6  1585               	bsf	5,3
  1780  01D7                     l4269:	
  1781                           
  1782                           ;main.c: 753: ucTimerDelay4 = 0;
  1783  01D7  01CF               	clrf	main@ucTimerDelay4
  1784  01D8  29D0               	goto	l4263
  1785  01D9                     l4273:	
  1786                           
  1787                           ;main.c: 756: else
  1788                           ;main.c: 757: ucTimerDelay4++;
  1789  01D9  0ACF               	incf	main@ucTimerDelay4,f
  1790  01DA  2842               	goto	l3947
  1791  01DB                     l4275:	
  1792                           
  1793                           ;main.c: 762: {
  1794                           ;main.c: 763: if(ucTimerDelay4 >= 5)
  1795  01DB  3005               	movlw	5
  1796  01DC  024F               	subwf	main@ucTimerDelay4,w
  1797  01DD  1C03               	skipc
  1798  01DE  29D9               	goto	l4273
  1799                           
  1800                           ;main.c: 764: {
  1801                           ;main.c: 765: PA3 = 0;
  1802  01DF  1185               	bcf	5,3
  1803  01E0  29D7               	goto	l4269
  1804  01E1                     l4285:	
  1805                           
  1806                           ;main.c: 775: {
  1807                           ;main.c: 776: if(ucTimerDelay4 >= 2)
  1808  01E1  3002               	movlw	2
  1809  01E2  024F               	subwf	main@ucTimerDelay4,w
  1810  01E3  1C03               	skipc
  1811  01E4  29D9               	goto	l4273
  1812                           
  1813                           ;main.c: 777: {
  1814                           ;main.c: 778: ucTimerDelay4 = 0;
  1815  01E5  01CF               	clrf	main@ucTimerDelay4
  1816                           
  1817                           ;main.c: 780: ucLoaderStep4 = 0;
  1818  01E6  01C7               	clrf	main@ucLoaderStep4
  1819  01E7  291D               	goto	l4093
  1820  01E8                     l4295:	
  1821  01E8  0847               	movf	main@ucLoaderStep4,w
  1822                           
  1823                           ; Switch size 1, requested type "space"
  1824                           ; Number of cases is 4, Range of values is 0 to 3
  1825                           ; switch strategies available:
  1826                           ; Name         Instructions Cycles
  1827                           ; simple_byte           13     7 (average)
  1828                           ; direct_byte           15     7 (fixed)
  1829                           ; jumptable            260     6 (fixed)
  1830                           ; rangetable             8     6 (fixed)
  1831                           ; spacedrange           14     9 (fixed)
  1832                           ; locatedrange           4     3 (fixed)
  1833                           ;	Chosen strategy is simple_byte
  1834  01E9  3A00               	xorlw	0	; case 0
  1835  01EA  1903               	skipnz
  1836  01EB  29CC               	goto	l852
  1837  01EC  3A01               	xorlw	1	; case 1
  1838  01ED  1903               	skipnz
  1839  01EE  29D2               	goto	l4265
  1840  01EF  3A03               	xorlw	3	; case 2
  1841  01F0  1903               	skipnz
  1842  01F1  29DB               	goto	l4275
  1843  01F2  3A01               	xorlw	1	; case 3
  1844  01F3  1903               	skipnz
  1845  01F4  29E1               	goto	l4285
  1846  01F5  2864               	goto	l703
  1847  01F6                     l4299:	
  1848  01F6  0842               	movf	main@ucChannel4Type,w
  1849                           
  1850                           ; Switch size 1, requested type "space"
  1851                           ; Number of cases is 5, Range of values is 0 to 4
  1852                           ; switch strategies available:
  1853                           ; Name         Instructions Cycles
  1854                           ; simple_byte           16     9 (average)
  1855                           ; direct_byte           17     7 (fixed)
  1856                           ; jumptable            260     6 (fixed)
  1857                           ; rangetable             9     6 (fixed)
  1858                           ; spacedrange           16     9 (fixed)
  1859                           ; locatedrange           5     3 (fixed)
  1860                           ;	Chosen strategy is simple_byte
  1861  01F7  3A00               	xorlw	0	; case 0
  1862  01F8  1903               	skipnz
  1863  01F9  291F               	goto	l4099
  1864  01FA  3A01               	xorlw	1	; case 1
  1865  01FB  1903               	skipnz
  1866  01FC  2959               	goto	l4163
  1867  01FD  3A03               	xorlw	3	; case 2
  1868  01FE  1903               	skipnz
  1869  01FF  298D               	goto	l4217
  1870  0200  3A01               	xorlw	1	; case 3
  1871  0201  1903               	skipnz
  1872  0202  29BB               	goto	l4261
  1873  0203  3A07               	xorlw	7	; case 4
  1874  0204  1903               	skipnz
  1875  0205  29E8               	goto	l4295
  1876  0206  2864               	goto	l703
  1877  0207                     l4301:	
  1878                           
  1879                           ;main.c: 804: {
  1880                           ;main.c: 805: if(isFinishedTwentySecondsTimer())
  1881  0207  118A  24A7  118A   	fcall	_isFinishedTwentySecondsTimer
  1882  020A  3A00               	xorlw	0
  1883  020B  1903               	skipnz
  1884  020C  28B7               	goto	l4017
  1885                           
  1886                           ;main.c: 806: {
  1887                           ;main.c: 807: PB6 = 1;
  1888  020D  1706               	bsf	6,6
  1889                           
  1890                           ;main.c: 808: PA6 = 0;
  1891  020E  1305               	bcf	5,6
  1892                           
  1893                           ;main.c: 815: if((getAdOriginalCh14Value() > 3900))
  1894  020F  118A  24C0  118A   	fcall	_getAdOriginalCh14Value
  1895  0212  300F               	movlw	15
  1896  0213  0257               	subwf	?_getAdOriginalCh14Value+1,w
  1897  0214  303D               	movlw	61
  1898  0215  1903               	skipnz
  1899  0216  0256               	subwf	?_getAdOriginalCh14Value,w
  1900  0217  1C03               	skipc
  1901  0218  2A1B               	goto	l4309
  1902                           
  1903                           ;main.c: 816: DACR0=0x0F;
  1904  0219  300F               	movlw	15
  1905  021A  2A1C               	goto	L9
  1906  021B                     l4309:	
  1907                           
  1908                           ;main.c: 817: else
  1909                           ;main.c: 818: DACR0=0x07;
  1910  021B  3007               	movlw	7
  1911  021C                     L9:	
  1912  021C  1683               	bsf	3,5	;RP0=1, select bank1
  1913  021D  0088               	movwf	8	;volatile
  1914                           
  1915                           ;main.c: 820: ucADC4_Step = ADC4_STEP_FOURTH;
  1916  021E  3004               	movlw	4
  1917  021F  1283               	bcf	3,5	;RP0=0, select bank0
  1918  0220                     L8:	
  1919  0220  00C1               	movwf	main@ucADC4_Step
  1920                           
  1921                           ;main.c: 821: }
  1922  0221  2842               	goto	l3947
  1923  0222                     l4311:	
  1924                           
  1925                           ;main.c: 829: {
  1926                           ;main.c: 830: static unsigned char ucTimer1s = 0;
  1927                           ;main.c: 831: if(ucTimer1s < 10)
  1928  0222  300A               	movlw	10
  1929  0223  0248               	subwf	main@ucTimer1s,w
  1930  0224  1803               	skipnc
  1931  0225  2A28               	goto	l4315
  1932                           
  1933                           ;main.c: 832: ucTimer1s++;
  1934  0226  0AC8               	incf	main@ucTimer1s,f
  1935  0227  2842               	goto	l3947
  1936  0228                     l4315:	
  1937                           
  1938                           ;main.c: 833: else
  1939                           ;main.c: 834: {
  1940                           ;main.c: 835: ucTimer1s = 0;
  1941  0228  01C8               	clrf	main@ucTimer1s
  1942                           
  1943                           ;main.c: 836: PBOD6 = 1;
  1944  0229  1683               	bsf	3,5	;RP0=1, select bank3
  1945  022A  1703               	bsf	3,6	;RP1=1, select bank3
  1946  022B  1708               	bsf	8,6
  1947                           
  1948                           ;main.c: 837: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  1949  022C  1283               	bcf	3,5	;RP0=0, select bank0
  1950  022D  1303               	bcf	3,6	;RP1=0, select bank0
  1951  022E  01C0               	clrf	main@enumMainLoopStep
  1952  022F  0AC0               	incf	main@enumMainLoopStep,f
  1953                           
  1954                           ;main.c: 838: ucADC4_Step = ADC4_STEP_INIT;
  1955  0230  01C1               	clrf	main@ucADC4_Step
  1956  0231  2842               	goto	l3947
  1957  0232                     l4323:	
  1958  0232  0841               	movf	main@ucADC4_Step,w
  1959                           
  1960                           ; Switch size 1, requested type "space"
  1961                           ; Number of cases is 5, Range of values is 0 to 4
  1962                           ; switch strategies available:
  1963                           ; Name         Instructions Cycles
  1964                           ; simple_byte           16     9 (average)
  1965                           ; direct_byte           17     7 (fixed)
  1966                           ; jumptable            260     6 (fixed)
  1967                           ; rangetable             9     6 (fixed)
  1968                           ; spacedrange           16     9 (fixed)
  1969                           ; locatedrange           5     3 (fixed)
  1970                           ;	Chosen strategy is simple_byte
  1971  0233  3A00               	xorlw	0	; case 0
  1972  0234  1903               	skipnz
  1973  0235  28B4               	goto	l4015
  1974  0236  3A01               	xorlw	1	; case 1
  1975  0237  1903               	skipnz
  1976  0238  28BA               	goto	l4019
  1977  0239  3A03               	xorlw	3	; case 2
  1978  023A  1903               	skipnz
  1979  023B  29F6               	goto	l4299
  1980  023C  3A01               	xorlw	1	; case 3
  1981  023D  1903               	skipnz
  1982  023E  2A07               	goto	l4301
  1983  023F  3A07               	xorlw	7	; case 4
  1984  0240  1903               	skipnz
  1985  0241  2A22               	goto	l4311
  1986  0242  2864               	goto	l703
  1987  0243                     l880:	
  1988                           ;main.c: 864: {
  1989                           ;main.c: 865: case HOUR_3_BRANCH_STEP_FIRST:
  1990                           
  1991                           
  1992                           ;main.c: 866: {
  1993                           ;main.c: 867: PAOD7 = 1;
  1994  0243  1683               	bsf	3,5	;RP0=1, select bank3
  1995  0244  1703               	bsf	3,6	;RP1=1, select bank3
  1996  0245  1787               	bsf	7,7
  1997                           
  1998                           ;main.c: 868: startThreeHoursTimer();
  1999  0246  118A  249B  118A   	fcall	_startThreeHoursTimer
  2000                           
  2001                           ;main.c: 870: enumBranchStep = HOUR_3_BRANCH_STEP_SECOND;
  2002  0249  01BE               	clrf	main@enumBranchStep
  2003  024A  0ABE               	incf	main@enumBranchStep,f
  2004                           
  2005                           ;main.c: 871: break;
  2006  024B  2842               	goto	l3947
  2007  024C                     l4329:	
  2008                           
  2009                           ;main.c: 875: {
  2010                           ;main.c: 876: static unsigned char ucTimer20s = 0;
  2011                           ;main.c: 878: if(ucTimer20s < 20)
  2012  024C  3014               	movlw	20
  2013  024D  0249               	subwf	main@ucTimer20s,w
  2014  024E  1803               	skipnc
  2015  024F  2A52               	goto	l4333
  2016                           
  2017                           ;main.c: 879: ucTimer20s++;
  2018  0250  0AC9               	incf	main@ucTimer20s,f
  2019  0251  2A5B               	goto	l4349
  2020  0252                     l4333:	
  2021  0252  3002               	movlw	2
  2022                           
  2023                           ;main.c: 880: else
  2024                           ;main.c: 881: {
  2025                           ;main.c: 882: ucTimer20s = 0;
  2026  0253  01C9               	clrf	main@ucTimer20s
  2027                           
  2028                           ;main.c: 883: PB0 = 1;
  2029  0254  1406               	bsf	6,0
  2030                           
  2031                           ;main.c: 884: PA0 = 1;
  2032  0255  1405               	bsf	5,0
  2033                           
  2034                           ;main.c: 885: PA1 = 1;
  2035  0256  1485               	bsf	5,1
  2036                           
  2037                           ;main.c: 886: PA2 = 1;
  2038  0257  1505               	bsf	5,2
  2039                           
  2040                           ;main.c: 887: PA3 = 1;
  2041  0258  1585               	bsf	5,3
  2042                           
  2043                           ;main.c: 888: PA6 = 0;
  2044  0259  1305               	bcf	5,6
  2045                           
  2046                           ;main.c: 890: enumBranchStep = HOUR_3_BRANCH_STEP_THIRD;
  2047  025A  00BE               	movwf	main@enumBranchStep
  2048  025B                     l4349:	
  2049                           
  2050                           ;main.c: 895: {
  2051                           ;main.c: 896: if(isFinishedThreeHoursTimer())
  2052  025B  118A  24A2  118A   	fcall	_isFinishedThreeHoursTimer
  2053  025E  3A00               	xorlw	0
  2054  025F  1903               	skipnz
  2055  0260  2A63               	goto	l4355
  2056                           
  2057                           ;main.c: 897: {
  2058                           ;main.c: 898: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2059  0261  01BE               	clrf	main@enumBranchStep
  2060  0262  28B1               	goto	l4013
  2061  0263                     l4355:	
  2062                           
  2063                           ;main.c: 901: else
  2064                           ;main.c: 902: {
  2065                           ;main.c: 903: static unsigned char ucTimerX1P5s = 0;
  2066                           ;main.c: 905: if(getAdOriginalCh1Value() < 0x0082)
  2067  0263  118A  24BB  118A   	fcall	_getAdOriginalCh1Value
  2068  0266  3000               	movlw	0
  2069  0267  0257               	subwf	?_getAdOriginalCh1Value+1,w
  2070  0268  3082               	movlw	130
  2071  0269  1903               	skipnz
  2072  026A  0256               	subwf	?_getAdOriginalCh1Value,w
  2073  026B  1803               	skipnc
  2074  026C  2A6F               	goto	l4359
  2075                           
  2076                           ;main.c: 906: {
  2077                           ;main.c: 907: ucTimerX1P5s = 0;
  2078  026D  01D2               	clrf	main@ucTimerX1P5s
  2079                           
  2080                           ;main.c: 908: }
  2081  026E  2A70               	goto	l4361
  2082  026F                     l4359:	
  2083                           
  2084                           ;main.c: 909: else
  2085                           ;main.c: 910: {
  2086                           ;main.c: 911: ucTimerX1P5s++;
  2087  026F  0AD2               	incf	main@ucTimerX1P5s,f
  2088  0270                     l4361:	
  2089                           
  2090                           ;main.c: 912: }
  2091                           ;main.c: 914: if(ucTimerX1P5s >= 1)
  2092  0270  0852               	movf	main@ucTimerX1P5s,w
  2093  0271  1903               	btfsc	3,2
  2094  0272  2A7A               	goto	l4373
  2095                           
  2096                           ;main.c: 915: {
  2097                           ;main.c: 916: ucTimerX1P5s = 0;
  2098  0273  01D2               	clrf	main@ucTimerX1P5s
  2099                           
  2100                           ;main.c: 917: PA7 = 0;
  2101  0274  1385               	bcf	5,7
  2102                           
  2103                           ;main.c: 918: clearThreeHoursTimer();
  2104  0275  118A  2430  118A   	fcall	_clearThreeHoursTimer
  2105                           
  2106                           ;main.c: 920: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2107  0278  01BE               	clrf	main@enumBranchStep
  2108  0279  2877               	goto	l3977
  2109  027A                     l4373:	
  2110                           
  2111                           ;main.c: 924: else
  2112                           ;main.c: 925: {
  2113                           ;main.c: 926: static unsigned char ucTimerX2P5s = 0;
  2114                           ;main.c: 928: if(getAdOriginalCh14Value() >= 1950)
  2115  027A  118A  24C0  118A   	fcall	_getAdOriginalCh14Value
  2116  027D  3007               	movlw	7
  2117  027E  0257               	subwf	?_getAdOriginalCh14Value+1,w
  2118  027F  309E               	movlw	158
  2119  0280  1903               	skipnz
  2120  0281  0256               	subwf	?_getAdOriginalCh14Value,w
  2121  0282  1C03               	skipc
  2122  0283  2A86               	goto	l4377
  2123                           
  2124                           ;main.c: 929: {
  2125                           ;main.c: 930: ucTimerX2P5s++;
  2126  0284  0AD3               	incf	main@ucTimerX2P5s,f
  2127                           
  2128                           ;main.c: 931: }
  2129  0285  2A87               	goto	l4379
  2130  0286                     l4377:	
  2131                           
  2132                           ;main.c: 932: else
  2133                           ;main.c: 933: {
  2134                           ;main.c: 934: ucTimerX2P5s = 0;
  2135  0286  01D3               	clrf	main@ucTimerX2P5s
  2136  0287                     l4379:	
  2137                           
  2138                           ;main.c: 935: }
  2139                           ;main.c: 937: if(ucTimerX2P5s >= 1)
  2140  0287  0853               	movf	main@ucTimerX2P5s,w
  2141  0288  1903               	btfsc	3,2
  2142  0289  2A8C               	goto	l4383
  2143                           
  2144                           ;main.c: 938: {
  2145                           ;main.c: 939: ucTimerX2P5s = 0;
  2146  028A  01D3               	clrf	main@ucTimerX2P5s
  2147                           
  2148                           ;main.c: 940: }
  2149  028B  2842               	goto	l3947
  2150  028C                     l4383:	
  2151                           
  2152                           ;main.c: 941: else
  2153                           ;main.c: 942: {
  2154                           ;main.c: 943: clearPinPortAndTimer();
  2155  028C  118A  2421  118A   	fcall	_clearPinPortAndTimer
  2156  028F  2862               	goto	l3965
  2157  0290                     l4389:	
  2158  0290  083E               	movf	main@enumBranchStep,w
  2159                           
  2160                           ; Switch size 1, requested type "space"
  2161                           ; Number of cases is 3, Range of values is 0 to 2
  2162                           ; switch strategies available:
  2163                           ; Name         Instructions Cycles
  2164                           ; simple_byte           10     6 (average)
  2165                           ; direct_byte           13     7 (fixed)
  2166                           ; jumptable            260     6 (fixed)
  2167                           ; rangetable             7     6 (fixed)
  2168                           ; spacedrange           12     9 (fixed)
  2169                           ; locatedrange           3     3 (fixed)
  2170                           ;	Chosen strategy is simple_byte
  2171  0291  3A00               	xorlw	0	; case 0
  2172  0292  1903               	skipnz
  2173  0293  2A43               	goto	l880
  2174  0294  3A01               	xorlw	1	; case 1
  2175  0295  1903               	skipnz
  2176  0296  2A4C               	goto	l4329
  2177  0297  3A03               	xorlw	3	; case 2
  2178  0298  1903               	skipnz
  2179  0299  2A5B               	goto	l4349
  2180  029A  2864               	goto	l703
  2181  029B                     l907:	
  2182                           ;main.c: 973: {
  2183                           ;main.c: 974: case INTERNAL_FIRST_STEP:
  2184                           
  2185                           
  2186                           ;main.c: 975: {
  2187                           ;main.c: 976: PB0 = 0;
  2188  029B  1006               	bcf	6,0
  2189                           
  2190                           ;main.c: 977: PB1 = 0;
  2191  029C  1086               	bcf	6,1
  2192                           
  2193                           ;main.c: 978: PA0 = 0;
  2194  029D  1005               	bcf	5,0
  2195                           
  2196                           ;main.c: 979: PA1 = 0;
  2197  029E  1085               	bcf	5,1
  2198                           
  2199                           ;main.c: 980: PA2 = 0;
  2200  029F  1105               	bcf	5,2
  2201                           
  2202                           ;main.c: 981: PA3 = 0;
  2203  02A0  1185               	bcf	5,3
  2204                           
  2205                           ;main.c: 982: PB6 = 1;
  2206  02A1  1706               	bsf	6,6
  2207                           
  2208                           ;main.c: 983: PA6 =0;
  2209  02A2  1305               	bcf	5,6
  2210                           
  2211                           ;main.c: 985: enumInteralStep = INTERNAL_SECOND_STEP;
  2212  02A3  01BF               	clrf	main@enumInteralStep
  2213  02A4  0ABF               	incf	main@enumInteralStep,f
  2214                           
  2215                           ;main.c: 986: break;
  2216  02A5  2842               	goto	l3947
  2217  02A6                     l4391:	
  2218                           
  2219                           ;main.c: 990: {
  2220                           ;main.c: 991: static unsigned char ucTimer1s = 0;
  2221                           ;main.c: 993: if(getAdOriginalCh14Value() <= 1000)
  2222  02A6  118A  24C0  118A   	fcall	_getAdOriginalCh14Value
  2223  02A9  3003               	movlw	3
  2224  02AA  0257               	subwf	?_getAdOriginalCh14Value+1,w
  2225  02AB  30E9               	movlw	233
  2226  02AC  1903               	skipnz
  2227  02AD  0256               	subwf	?_getAdOriginalCh14Value,w
  2228  02AE  1803               	skipnc
  2229  02AF  2AB2               	goto	l4395
  2230                           
  2231                           ;main.c: 994: {
  2232                           ;main.c: 995: ucTimer1s++;
  2233  02B0  0ABD               	incf	main@cTimer1s_806,f
  2234                           
  2235                           ;main.c: 996: }
  2236  02B1  2AB3               	goto	l4397
  2237  02B2                     l4395:	
  2238                           
  2239                           ;main.c: 997: else
  2240                           ;main.c: 998: ucTimer1s = 0;
  2241  02B2  01BD               	clrf	main@cTimer1s_806
  2242  02B3                     l4397:	
  2243                           
  2244                           ;main.c: 1000: if(ucTimer1s >= 10)
  2245  02B3  300A               	movlw	10
  2246  02B4  023D               	subwf	main@cTimer1s_806,w
  2247  02B5  1C03               	skipc
  2248  02B6  2842               	goto	l3947
  2249                           
  2250                           ;main.c: 1001: {
  2251                           ;main.c: 1002: enumInteralStep = INTERNAL_THIRD_STEP;
  2252  02B7  3002               	movlw	2
  2253  02B8  00BF               	movwf	main@enumInteralStep
  2254                           
  2255                           ;main.c: 1003: ucTimer1s = 0;
  2256  02B9  01BD               	clrf	main@cTimer1s_806
  2257  02BA  2842               	goto	l3947
  2258  02BB                     l4403:	
  2259                           
  2260                           ;main.c: 1009: {
  2261                           ;main.c: 1010: static unsigned char ucTimerP3s = 0;
  2262                           ;main.c: 1012: if(getAdOriginalCh14Value() >= 1950)
  2263  02BB  118A  24C0  118A   	fcall	_getAdOriginalCh14Value
  2264  02BE  3007               	movlw	7
  2265  02BF  0257               	subwf	?_getAdOriginalCh14Value+1,w
  2266  02C0  309E               	movlw	158
  2267  02C1  1903               	skipnz
  2268  02C2  0256               	subwf	?_getAdOriginalCh14Value,w
  2269  02C3  1C03               	skipc
  2270  02C4  2AC7               	goto	l4407
  2271                           
  2272                           ;main.c: 1013: {
  2273                           ;main.c: 1014: ucTimerP3s++;
  2274  02C5  0AD0               	incf	main@ucTimerP3s,f
  2275                           
  2276                           ;main.c: 1015: }
  2277  02C6  2AC8               	goto	l4409
  2278  02C7                     l4407:	
  2279                           
  2280                           ;main.c: 1016: else
  2281                           ;main.c: 1017: ucTimerP3s = 0;
  2282  02C7  01D0               	clrf	main@ucTimerP3s
  2283  02C8                     l4409:	
  2284                           
  2285                           ;main.c: 1019: if(ucTimerP3s >= 3)
  2286  02C8  3003               	movlw	3
  2287  02C9  0250               	subwf	main@ucTimerP3s,w
  2288  02CA  1C03               	skipc
  2289  02CB  2842               	goto	l3947
  2290                           
  2291                           ;main.c: 1020: {
  2292                           ;main.c: 1021: enumInteralStep = INTERNAL_FIRST_STEP;
  2293  02CC  01BF               	clrf	main@enumInteralStep
  2294                           
  2295                           ;main.c: 1022: ucTimerP3s = 0;
  2296  02CD  01D0               	clrf	main@ucTimerP3s
  2297                           
  2298                           ;main.c: 1023: clearAllTimer();
  2299  02CE  118A  2428  118A   	fcall	_clearAllTimer
  2300                           
  2301                           ;main.c: 1025: DACR0=0x0F;
  2302  02D1  300F               	movlw	15
  2303  02D2  1683               	bsf	3,5	;RP0=1, select bank1
  2304  02D3  0088               	movwf	8	;volatile
  2305                           
  2306                           ;main.c: 1026: PBOD6 = 1;
  2307  02D4  1703               	bsf	3,6	;RP1=1, select bank3
  2308  02D5  1708               	bsf	8,6
  2309                           
  2310                           ;main.c: 1028: PA0 = 0;
  2311  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  2312  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  2313  02D8  1005               	bcf	5,0
  2314                           
  2315                           ;main.c: 1029: PA1 = 0;
  2316  02D9  1085               	bcf	5,1
  2317                           
  2318                           ;main.c: 1030: PA2 = 0;
  2319  02DA  1105               	bcf	5,2
  2320                           
  2321                           ;main.c: 1031: PA3 = 1;
  2322  02DB  1585               	bsf	5,3
  2323                           
  2324                           ;main.c: 1032: PB0 = 0;
  2325  02DC  1006               	bcf	6,0
  2326                           
  2327                           ;main.c: 1033: PB1 = 0;
  2328  02DD  1086               	bcf	6,1
  2329                           
  2330                           ;main.c: 1034: PA6 = 0;
  2331  02DE  1305               	bcf	5,6
  2332                           
  2333                           ;main.c: 1035: PA7 = 0;
  2334  02DF  1385               	bcf	5,7
  2335                           
  2336                           ;main.c: 1038: enumMainLoopStep = MAIN_LOOP_STEP_INIT;
  2337  02E0  01C0               	clrf	main@enumMainLoopStep
  2338  02E1  2842               	goto	l3947
  2339  02E2                     l4439:	
  2340  02E2  083F               	movf	main@enumInteralStep,w
  2341                           
  2342                           ; Switch size 1, requested type "space"
  2343                           ; Number of cases is 3, Range of values is 0 to 2
  2344                           ; switch strategies available:
  2345                           ; Name         Instructions Cycles
  2346                           ; simple_byte           10     6 (average)
  2347                           ; direct_byte           13     7 (fixed)
  2348                           ; jumptable            260     6 (fixed)
  2349                           ; rangetable             7     6 (fixed)
  2350                           ; spacedrange           12     9 (fixed)
  2351                           ; locatedrange           3     3 (fixed)
  2352                           ;	Chosen strategy is simple_byte
  2353  02E3  3A00               	xorlw	0	; case 0
  2354  02E4  1903               	skipnz
  2355  02E5  2A9B               	goto	l907
  2356  02E6  3A01               	xorlw	1	; case 1
  2357  02E7  1903               	skipnz
  2358  02E8  2AA6               	goto	l4391
  2359  02E9  3A03               	xorlw	3	; case 2
  2360  02EA  1903               	skipnz
  2361  02EB  2ABB               	goto	l4403
  2362  02EC  2864               	goto	l703
  2363  02ED                     l4443:	
  2364  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  2365  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  2366  02EF  0840               	movf	main@enumMainLoopStep,w
  2367                           
  2368                           ; Switch size 1, requested type "space"
  2369                           ; Number of cases is 8, Range of values is 0 to 9
  2370                           ; switch strategies available:
  2371                           ; Name         Instructions Cycles
  2372                           ; simple_byte           25    13 (average)
  2373                           ; direct_byte           27     7 (fixed)
  2374                           ; jumptable            260     6 (fixed)
  2375                           ; rangetable            14     6 (fixed)
  2376                           ; spacedrange           26     9 (fixed)
  2377                           ; locatedrange          10     3 (fixed)
  2378                           ;	Chosen strategy is simple_byte
  2379  02F0  3A00               	xorlw	0	; case 0
  2380  02F1  1903               	skipnz
  2381  02F2  2850               	goto	l3955
  2382  02F3  3A01               	xorlw	1	; case 1
  2383  02F4  1903               	skipnz
  2384  02F5  2865               	goto	l3967
  2385  02F6  3A03               	xorlw	3	; case 2
  2386  02F7  1903               	skipnz
  2387  02F8  287D               	goto	l712
  2388  02F9  3A01               	xorlw	1	; case 3
  2389  02FA  1903               	skipnz
  2390  02FB  2880               	goto	l3983
  2391  02FC  3A07               	xorlw	7	; case 4
  2392  02FD  1903               	skipnz
  2393  02FE  28A6               	goto	l4007
  2394  02FF  3A01               	xorlw	1	; case 5
  2395  0300  1903               	skipnz
  2396  0301  28AB               	goto	l4011
  2397  0302  3A0D               	xorlw	13	; case 8
  2398  0303  1903               	skipnz
  2399  0304  2A90               	goto	l4389
  2400  0305  3A01               	xorlw	1	; case 9
  2401  0306  1903               	skipnz
  2402  0307  2AE2               	goto	l4439
  2403  0308  2864               	goto	l703
  2404  0309  118A  280B         	ljmp	start
  2405  030B                     __end_of_main:	
  2406                           
  2407                           	psect	swtext1
  2408  0446                     __pswtext1:	
  2409  0446                     S4661:	
  2410  0446  118A  28EF         	ljmp	l752
  2411  0448  118A  28F2         	ljmp	l4039
  2412  044A  118A  28FB         	ljmp	l4049
  2413  044C  118A  2901         	ljmp	l4059
  2414  044E  118A  2907         	ljmp	l4069
  2415  0450  118A  290D         	ljmp	l4079
  2416  0452  118A  2917         	ljmp	l4089
  2417                           
  2418                           	psect	swtext2
  2419  0454                     __pswtext2:	
  2420  0454                     S4663:	
  2421  0454  118A  292B         	ljmp	l780
  2422  0456  118A  292E         	ljmp	l4103
  2423  0458  118A  2937         	ljmp	l4113
  2424  045A  118A  293D         	ljmp	l4123
  2425  045C  118A  2943         	ljmp	l4133
  2426  045E  118A  2949         	ljmp	l4143
  2427  0460  118A  2952         	ljmp	l4153
  2428                           
  2429                           	psect	swtext3
  2430  0462                     __pswtext3:	
  2431  0462                     S4665:	
  2432  0462  118A  2965         	ljmp	l807
  2433  0464  118A  2969         	ljmp	l4167
  2434  0466  118A  2972         	ljmp	l4177
  2435  0468  118A  2978         	ljmp	l4187
  2436  046A  118A  297E         	ljmp	l4197
  2437  046C  118A  2986         	ljmp	l4207
  2438                           
  2439                           	psect	text583
  2440  030B                     __ptext583:	
  2441 ;; =============== function _main ends ============
  2442                           
  2443                           
  2444 ;; *************** function _process_AD_Converter_Value *****************
  2445 ;; Defined at:
  2446 ;;		line 102 in file "C:\190604\AK7030-OTP\common.c"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;		None
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;		None
  2451 ;; Return value:  Size  Location     Type
  2452 ;;		None               void
  2453 ;; Registers used:
  2454 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: FFE9F/0
  2459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2460 ;;      Params:         0       0       0       0       0
  2461 ;;      Locals:         0       0       0       0       0
  2462 ;;      Temps:          0       0       0       0       0
  2463 ;;      Totals:         0       0       0       0       0
  2464 ;;Total ram usage:        0 bytes
  2465 ;; Hardware stack levels used:    1
  2466 ;; Hardware stack levels required when called:    4
  2467 ;; This function calls:
  2468 ;;		_getAD_ConvertFlag
  2469 ;;		_setAD_ConvertFlag
  2470 ;;		_AD_Sample
  2471 ;;		_adc_test_init
  2472 ;;		_adc_start
  2473 ;; This function is called by:
  2474 ;;		_main
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477  030B                     _process_AD_Converter_Value:	
  2478                           
  2479                           ;common.c: 67: return adc_convert_flag;
  2480                           
  2481                           ; Regs used in _getAD_ConvertFlag: [wreg]
  2482                           
  2483                           ;common.c: 103: if(getAD_ConvertFlag())
  2484                           
  2485                           ; Regs used in _process_AD_Converter_Value: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2486  030B  0879               	movf	_adc_convert_flag,w
  2487  030C  3A00               	xorlw	0
  2488  030D  1903               	skipnz
  2489  030E  0008               	return
  2490                           
  2491                           ;common.c: 104: {
  2492                           ;common.c: 105: setAD_ConvertFlag(0);
  2493  030F  3000               	movlw	0
  2494  0310  232A  118A         	fcall	_setAD_ConvertFlag
  2495                           
  2496                           ;common.c: 106: AD_Sample();
  2497  0312  232F  118A         	fcall	_AD_Sample
  2498                           
  2499                           ;common.c: 107: if(4 == sampleChannelSelect)
  2500  0314  085B               	movf	_sampleChannelSelect,w
  2501  0315  3A04               	xorlw	4
  2502  0316  1D03               	skipz
  2503  0317  2B1C               	goto	l3923
  2504                           
  2505                           ;common.c: 108: adc_test_init(4,3);
  2506  0318  3003               	movlw	3
  2507  0319  00D6               	movwf	?_adc_test_init
  2508  031A  3004               	movlw	4
  2509  031B  2B25               	goto	L10
  2510  031C                     l3923:	
  2511                           
  2512                           ;common.c: 109: else if(1 == sampleChannelSelect)
  2513  031C  0B5B               	decfsz	_sampleChannelSelect,w
  2514  031D  2B22               	goto	l3927
  2515                           
  2516                           ;common.c: 110: adc_test_init(1,3);
  2517  031E  3003               	movlw	3
  2518  031F  00D6               	movwf	?_adc_test_init
  2519  0320  3001               	movlw	1
  2520  0321  2B25               	goto	L10
  2521  0322                     l3927:	
  2522                           
  2523                           ;common.c: 111: else
  2524                           ;common.c: 112: adc_test_init(14,3);
  2525  0322  3003               	movlw	3
  2526  0323  00D6               	movwf	?_adc_test_init
  2527  0324  300E               	movlw	14
  2528  0325                     L10:	
  2529  0325  2397  118A         	fcall	_adc_test_init
  2530                           
  2531                           ;common.c: 114: adc_start();
  2532  0327  2BAC               	ljmp	l3739
  2533  0328                     __end_of_process_AD_Converter_Value:	
  2534  0328                     __ptext589:	
  2535 ;; =============== function _setAD_ConvertFlag ends ============
  2536                           
  2537                           
  2538 ;; *************** function _getAD_ConvertFlag *****************
  2539 ;; Defined at:
  2540 ;;		line 66 in file "C:\190604\AK7030-OTP\common.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;		None
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;		None
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  1    wreg      unsigned char 
  2547 ;; Registers used:
  2548 ;;		wreg
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: FFFFF/0
  2553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2554 ;;      Params:         0       0       0       0       0
  2555 ;;      Locals:         0       0       0       0       0
  2556 ;;      Temps:          0       0       0       0       0
  2557 ;;      Totals:         0       0       0       0       0
  2558 ;;Total ram usage:        0 bytes
  2559 ;; Hardware stack levels used:    1
  2560 ;; Hardware stack levels required when called:    2
  2561 ;; This function calls:
  2562 ;;		Nothing
  2563 ;; This function is called by:
  2564 ;;		_process_AD_Converter_Value
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567  0328                     _getAD_ConvertFlag:	
  2568                           
  2569                           ;common.c: 67: return adc_convert_flag;
  2570                           
  2571                           ; Regs used in _getAD_ConvertFlag: [wreg]
  2572  0328  0879               	movf	_adc_convert_flag,w
  2573  0329  0008               	return
  2574  032A                     __end_of_getAD_ConvertFlag:	
  2575  032A                     __ptext588:	
  2576 ;; =============== function _getAdOriginalValue ends ============
  2577                           
  2578                           
  2579 ;; *************** function _setAD_ConvertFlag *****************
  2580 ;; Defined at:
  2581 ;;		line 72 in file "C:\190604\AK7030-OTP\common.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;  flag            1    wreg     unsigned char 
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;  flag            1    0[BANK0 ] unsigned char 
  2586 ;; Return value:  Size  Location     Type
  2587 ;;		None               void
  2588 ;; Registers used:
  2589 ;;		wreg
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 60/0
  2593 ;;		Unchanged: FFF9F/0
  2594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2595 ;;      Params:         0       0       0       0       0
  2596 ;;      Locals:         0       1       0       0       0
  2597 ;;      Temps:          0       0       0       0       0
  2598 ;;      Totals:         0       1       0       0       0
  2599 ;;Total ram usage:        1 bytes
  2600 ;; Hardware stack levels used:    1
  2601 ;; Hardware stack levels required when called:    2
  2602 ;; This function calls:
  2603 ;;		Nothing
  2604 ;; This function is called by:
  2605 ;;		_process_AD_Converter_Value
  2606 ;; This function uses a non-reentrant model
  2607 ;;
  2608  032A                     _setAD_ConvertFlag:	
  2609                           
  2610                           ; Regs used in _setAD_ConvertFlag: [wreg]
  2611                           ;setAD_ConvertFlag@flag stored from wreg
  2612  032A  1283               	bcf	3,5	;RP0=0, select bank0
  2613  032B  1303               	bcf	3,6	;RP1=0, select bank0
  2614  032C  00D6               	movwf	setAD_ConvertFlag@flag
  2615                           
  2616                           ;common.c: 73: adc_convert_flag = flag;
  2617  032D  00F9               	movwf	_adc_convert_flag
  2618  032E  0008               	return
  2619  032F                     __end_of_setAD_ConvertFlag:	
  2620  032F                     __ptext585:	
  2621 ;; =============== function _clearPinPortAndTimer ends ============
  2622                           
  2623                           
  2624 ;; *************** function _AD_Sample *****************
  2625 ;; Defined at:
  2626 ;;		line 128 in file "C:\190604\AK7030-OTP\common.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;		None
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;  index           1    4[BANK0 ] unsigned char 
  2631 ;; Return value:  Size  Location     Type
  2632 ;;		None               void
  2633 ;; Registers used:
  2634 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2635 ;; Tracked objects:
  2636 ;;		On entry : 60/0
  2637 ;;		On exit  : 60/0
  2638 ;;		Unchanged: FFE9F/0
  2639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2640 ;;      Params:         0       0       0       0       0
  2641 ;;      Locals:         0       1       0       0       0
  2642 ;;      Temps:          0       2       0       0       0
  2643 ;;      Totals:         0       3       0       0       0
  2644 ;;Total ram usage:        3 bytes
  2645 ;; Hardware stack levels used:    1
  2646 ;; Hardware stack levels required when called:    3
  2647 ;; This function calls:
  2648 ;;		_getAdOriginalValue
  2649 ;; This function is called by:
  2650 ;;		_process_AD_Converter_Value
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653  032F                     _AD_Sample:	
  2654                           
  2655                           ;common.c: 129: if(sampleTimes < 6)
  2656                           
  2657                           ; Regs used in _AD_Sample: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2658  032F  3006               	movlw	6
  2659  0330  023C               	subwf	_sampleTimes,w
  2660  0331  1803               	skipnc
  2661  0332  0008               	return
  2662                           
  2663                           ;common.c: 130: {
  2664                           ;common.c: 132: buffer_Sample_AD_Value[sampleTimes] = getAdOriginalValue();
  2665  0333  2392  118A         	fcall	_getAdOriginalValue
  2666  0335  1003               	clrc
  2667  0336  0D3C               	rlf	_sampleTimes,w
  2668  0337  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  2669  0338  0084               	movwf	4
  2670  0339  0856               	movf	?_getAdOriginalValue,w
  2671  033A  1383               	bcf	3,7	;select IRP bank0
  2672  033B  0080               	movwf	0
  2673  033C  0A84               	incf	4,f
  2674  033D  0857               	movf	?_getAdOriginalValue+1,w
  2675  033E  0080               	movwf	0
  2676                           
  2677                           ;common.c: 134: if(sampleTimes == 0)
  2678  033F  08BC               	movf	_sampleTimes,f
  2679  0340  1D03               	skipz
  2680  0341  2B4A               	goto	l3871
  2681                           
  2682                           ;common.c: 135: {
  2683                           ;common.c: 136: multiFilterMaxValue = buffer_Sample_AD_Value[0];
  2684  0342  0821               	movf	_buffer_Sample_AD_Value+1,w
  2685  0343  00B5               	movwf	_multiFilterMaxValue+1
  2686  0344  0820               	movf	_buffer_Sample_AD_Value,w
  2687  0345  00B4               	movwf	_multiFilterMaxValue
  2688                           
  2689                           ;common.c: 137: multiFilterMinValue = buffer_Sample_AD_Value[0];
  2690  0346  0821               	movf	_buffer_Sample_AD_Value+1,w
  2691  0347  00B7               	movwf	_multiFilterMinValue+1
  2692  0348  0820               	movf	_buffer_Sample_AD_Value,w
  2693  0349  00B6               	movwf	_multiFilterMinValue
  2694  034A                     l3871:	
  2695                           
  2696                           ;common.c: 138: }
  2697                           ;common.c: 140: if(multiFilterMaxValue < buffer_Sample_AD_Value[sampleTimes])
  2698  034A  23AF  118A         	fcall	PL2	;call to abstracted procedure
  2699  034C  0235               	subwf	_multiFilterMaxValue+1,w
  2700  034D  1D03               	skipz
  2701  034E  2B51               	goto	u915
  2702  034F  0858               	movf	??_AD_Sample,w
  2703  0350  0234               	subwf	_multiFilterMaxValue,w
  2704  0351                     u915:	
  2705  0351  1803               	skipnc
  2706  0352  2B5C               	goto	l1640
  2707                           
  2708                           ;common.c: 141: {
  2709                           ;common.c: 142: multiFilterMaxValue = buffer_Sample_AD_Value[sampleTimes];
  2710  0353  1003               	clrc
  2711  0354  0D3C               	rlf	_sampleTimes,w
  2712  0355  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  2713  0356  0084               	movwf	4
  2714  0357  0800               	movf	0,w
  2715  0358  00B4               	movwf	_multiFilterMaxValue
  2716  0359  0A84               	incf	4,f
  2717  035A  0800               	movf	0,w
  2718  035B  00B5               	movwf	_multiFilterMaxValue+1
  2719  035C                     l1640:	
  2720                           
  2721                           ;common.c: 143: }
  2722                           ;common.c: 144: if(multiFilterMinValue > buffer_Sample_AD_Value[sampleTimes])
  2723  035C  23AF  118A         	fcall	PL2	;call to abstracted procedure
  2724  035E  0837               	movf	_multiFilterMinValue+1,w
  2725  035F  0259               	subwf	??_AD_Sample+1,w
  2726  0360  1D03               	skipz
  2727  0361  2B64               	goto	u925
  2728  0362  0836               	movf	_multiFilterMinValue,w
  2729  0363  0258               	subwf	??_AD_Sample,w
  2730  0364                     u925:	
  2731  0364  1803               	skipnc
  2732  0365  2B6F               	goto	l3877
  2733                           
  2734                           ;common.c: 145: {
  2735                           ;common.c: 146: multiFilterMinValue = buffer_Sample_AD_Value[sampleTimes];
  2736  0366  1003               	clrc
  2737  0367  0D3C               	rlf	_sampleTimes,w
  2738  0368  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  2739  0369  0084               	movwf	4
  2740  036A  0800               	movf	0,w
  2741  036B  00B6               	movwf	_multiFilterMinValue
  2742  036C  0A84               	incf	4,f
  2743  036D  0800               	movf	0,w
  2744  036E  00B7               	movwf	_multiFilterMinValue+1
  2745  036F                     l3877:	
  2746  036F  3006               	movlw	6
  2747                           
  2748                           ;common.c: 151: sampleTimes++;
  2749  0370  0ABC               	incf	_sampleTimes,f
  2750                           
  2751                           ;common.c: 153: if(sampleTimes >= 6)
  2752  0371  023C               	subwf	_sampleTimes,w
  2753  0372  1C03               	skipc
  2754  0373  0008               	return
  2755                           
  2756                           ;common.c: 154: {
  2757                           ;common.c: 155: sampleTimes = 0;
  2758  0374  01BC               	clrf	_sampleTimes
  2759                           
  2760                           ;common.c: 158: {
  2761                           ;common.c: 160: sampleCH14Value = ((multiFilterSumValue - multiFilterMaxValue - multiFil
      +                          terMinValue))>> 2;
  2762  0375  085B               	movf	_sampleChannelSelect,w
  2763  0376  3A0E               	xorlw	14
  2764  0377  1D03               	skipz
  2765  0378  2B7B               	goto	l3887
  2766                           
  2767                           ;common.c: 161: sampleChannelSelect = 4;
  2768  0379  3004               	movlw	4
  2769  037A  2B83               	goto	L11
  2770  037B                     l3887:	
  2771                           ;common.c: 162: }
  2772                           
  2773                           
  2774                           ;common.c: 164: {
  2775                           ;common.c: 165: sampleCH4Value = ((multiFilterSumValue - multiFilterMaxValue - multiFilt
      +                          erMinValue))>> 2;
  2776  037B  085B               	movf	_sampleChannelSelect,w
  2777  037C  3A04               	xorlw	4
  2778  037D  1D03               	skipz
  2779  037E  2B82               	goto	l3893
  2780                           
  2781                           ;common.c: 166: sampleChannelSelect = 1;
  2782  037F  01DB               	clrf	_sampleChannelSelect
  2783  0380  0ADB               	incf	_sampleChannelSelect,f
  2784                           
  2785                           ;common.c: 167: }
  2786  0381  2B84               	goto	l3897
  2787  0382                     l3893:	
  2788                           
  2789                           ;common.c: 171: sampleChannelSelect = 14;
  2790  0382  300E               	movlw	14
  2791  0383                     L11:	
  2792  0383  00DB               	movwf	_sampleChannelSelect
  2793  0384                     l3897:	
  2794                           ;common.c: 172: }
  2795                           
  2796                           
  2797                           ;common.c: 177: }
  2798                           ;common.c: 179: for(unsigned char index = 0; index < 6;index++)
  2799  0384  01DA               	clrf	AD_Sample@index
  2800  0385                     l3903:	
  2801                           
  2802                           ;common.c: 180: buffer_Sample_AD_Value[index] = 0;
  2803  0385  1003               	clrc
  2804  0386  0D5A               	rlf	AD_Sample@index,w
  2805  0387  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  2806  0388  0084               	movwf	4
  2807  0389  3006               	movlw	6
  2808  038A  0180               	clrf	0
  2809  038B  0A84               	incf	4,f
  2810  038C  0180               	clrf	0
  2811  038D  0ADA               	incf	AD_Sample@index,f
  2812  038E  025A               	subwf	AD_Sample@index,w
  2813  038F  1803               	btfsc	3,0
  2814  0390  0008               	return
  2815  0391  2B85               	goto	l3903
  2816  0392                     __end_of_AD_Sample:	
  2817  0392                     __ptext587:	
  2818 ;; =============== function _clearAllTimer ends ============
  2819                           
  2820                           
  2821 ;; *************** function _getAdOriginalValue *****************
  2822 ;; Defined at:
  2823 ;;		line 78 in file "C:\190604\AK7030-OTP\common.c"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;		None
  2826 ;; Auto vars:     Size  Location     Type
  2827 ;;		None
  2828 ;; Return value:  Size  Location     Type
  2829 ;;                  2    0[BANK0 ] unsigned int 
  2830 ;; Registers used:
  2831 ;;		wreg
  2832 ;; Tracked objects:
  2833 ;;		On entry : 60/0
  2834 ;;		On exit  : 60/0
  2835 ;;		Unchanged: FFF9F/0
  2836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2837 ;;      Params:         0       2       0       0       0
  2838 ;;      Locals:         0       0       0       0       0
  2839 ;;      Temps:          0       0       0       0       0
  2840 ;;      Totals:         0       2       0       0       0
  2841 ;;Total ram usage:        2 bytes
  2842 ;; Hardware stack levels used:    1
  2843 ;; Hardware stack levels required when called:    2
  2844 ;; This function calls:
  2845 ;;		Nothing
  2846 ;; This function is called by:
  2847 ;;		_AD_Sample
  2848 ;; This function uses a non-reentrant model
  2849 ;;
  2850  0392                     _getAdOriginalValue:	
  2851                           
  2852                           ;common.c: 79: return adc_original_value;
  2853                           
  2854                           ; Regs used in _getAdOriginalValue: [wreg]
  2855  0392  0833               	movf	_adc_original_value+1,w
  2856  0393  00D7               	movwf	?_getAdOriginalValue+1
  2857  0394  0832               	movf	_adc_original_value,w
  2858  0395  00D6               	movwf	?_getAdOriginalValue
  2859  0396  0008               	return
  2860  0397                     __end_of_getAdOriginalValue:	
  2861  0397                     __ptext605:	
  2862 ;; =============== function _dac_init ends ============
  2863                           
  2864                           
  2865 ;; *************** function _adc_test_init *****************
  2866 ;; Defined at:
  2867 ;;		line 85 in file "C:\190604\AK7030-OTP\periph.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;  channel         1    wreg     unsigned char 
  2870 ;;  ref             1    0[BANK0 ] unsigned char 
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;  channel         1    2[BANK0 ] unsigned char 
  2873 ;; Return value:  Size  Location     Type
  2874 ;;		None               void
  2875 ;; Registers used:
  2876 ;;		wreg, status,2, status,0
  2877 ;; Tracked objects:
  2878 ;;		On entry : 60/0
  2879 ;;		On exit  : 60/20
  2880 ;;		Unchanged: FFF9F/0
  2881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2882 ;;      Params:         0       1       0       0       0
  2883 ;;      Locals:         0       1       0       0       0
  2884 ;;      Temps:          0       1       0       0       0
  2885 ;;      Totals:         0       3       0       0       0
  2886 ;;Total ram usage:        3 bytes
  2887 ;; Hardware stack levels used:    1
  2888 ;; Hardware stack levels required when called:    2
  2889 ;; This function calls:
  2890 ;;		Nothing
  2891 ;; This function is called by:
  2892 ;;		_main
  2893 ;;		_process_AD_Converter_Value
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896  0397                     _adc_test_init:	
  2897                           
  2898                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  2899                           ;adc_test_init@channel stored from wreg
  2900  0397  00D8               	movwf	adc_test_init@channel
  2901                           
  2902                           ;periph.c: 86: ADCON0 = 0x00;
  2903  0398  019F               	clrf	31	;volatile
  2904                           
  2905                           ;periph.c: 87: ADCON0|=channel<<2;
  2906  0399  00D7               	movwf	??_adc_test_init
  2907  039A  1003               	clrc
  2908  039B  0DD7               	rlf	??_adc_test_init,f
  2909  039C  1003               	clrc
  2910  039D  0D57               	rlf	??_adc_test_init,w
  2911  039E  049F               	iorwf	31,f	;volatile
  2912                           
  2913                           ;periph.c: 88: ADCON1|=ref<<6;
  2914  039F  0856               	movf	adc_test_init@ref,w
  2915  03A0  00D7               	movwf	??_adc_test_init
  2916  03A1  0CD7               	rrf	??_adc_test_init,f
  2917  03A2  0CD7               	rrf	??_adc_test_init,f
  2918  03A3  0C57               	rrf	??_adc_test_init,w
  2919  03A4  39C0               	andlw	192
  2920  03A5  1683               	bsf	3,5	;RP0=1, select bank1
  2921  03A6  049F               	iorwf	31,f	;volatile
  2922                           
  2923                           ;periph.c: 89: ADON=1;
  2924  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  2925  03A8  141F               	bsf	31,0
  2926                           
  2927                           ;periph.c: 90: ADIE=1;
  2928  03A9  1683               	bsf	3,5	;RP0=1, select bank1
  2929  03AA  150D               	bsf	13,2
  2930  03AB  0008               	return
  2931  03AC                     __end_of_adc_test_init:	
  2932  03AC                     __ptext601:	
  2933 ;; =============== function _isPermitSampleTime ends ============
  2934                           
  2935                           
  2936 ;; *************** function _adc_start *****************
  2937 ;; Defined at:
  2938 ;;		line 100 in file "C:\190604\AK7030-OTP\periph.c"
  2939 ;; Parameters:    Size  Location     Type
  2940 ;;		None
  2941 ;; Auto vars:     Size  Location     Type
  2942 ;;		None
  2943 ;; Return value:  Size  Location     Type
  2944 ;;		None               void
  2945 ;; Registers used:
  2946 ;;		None
  2947 ;; Tracked objects:
  2948 ;;		On entry : 60/20
  2949 ;;		On exit  : 60/0
  2950 ;;		Unchanged: FFF9F/0
  2951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2952 ;;      Params:         0       0       0       0       0
  2953 ;;      Locals:         0       0       0       0       0
  2954 ;;      Temps:          0       0       0       0       0
  2955 ;;      Totals:         0       0       0       0       0
  2956 ;;Total ram usage:        0 bytes
  2957 ;; Hardware stack levels used:    1
  2958 ;; Hardware stack levels required when called:    2
  2959 ;; This function calls:
  2960 ;;		Nothing
  2961 ;; This function is called by:
  2962 ;;		_main
  2963 ;;		_process_AD_Converter_Value
  2964 ;; This function uses a non-reentrant model
  2965 ;;
  2966  03AC                     _adc_start:	
  2967  03AC                     l3739:	
  2968                           ; Regs used in _adc_start: []
  2969                           
  2970                           
  2971                           ;periph.c: 101: GO=1;
  2972  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  2973  03AD  149F               	bsf	31,1
  2974  03AE  0008               	return
  2975  03AF                     __end_of_adc_start:	
  2976  03AF                     PL2:	
  2977  03AF  1003               	clrc
  2978  03B0  0D3C               	rlf	_sampleTimes,w
  2979  03B1  3E20               	addlw	_buffer_Sample_AD_Value& (0+255)
  2980  03B2  0084               	movwf	4
  2981  03B3  0800               	movf	0,w
  2982  03B4  00D8               	movwf	??_AD_Sample
  2983  03B5  0A84               	incf	4,f
  2984  03B6  0800               	movf	0,w
  2985  03B7  00D9               	movwf	??_AD_Sample+1
  2986  03B8  0008               	return
  2987                           
  2988                           	psect	text584
  2989  0421                     __ptext584:	
  2990 ;; =============== function _process_AD_Converter_Value ends ============
  2991                           
  2992                           
  2993 ;; *************** function _clearPinPortAndTimer *****************
  2994 ;; Defined at:
  2995 ;;		line 92 in file "C:\190604\AK7030-OTP\main.c"
  2996 ;; Parameters:    Size  Location     Type
  2997 ;;		None
  2998 ;; Auto vars:     Size  Location     Type
  2999 ;;		None
  3000 ;; Return value:  Size  Location     Type
  3001 ;;		None               void
  3002 ;; Registers used:
  3003 ;;		status,2, status,0, pclath, cstack
  3004 ;; Tracked objects:
  3005 ;;		On entry : 60/0
  3006 ;;		On exit  : 60/0
  3007 ;;		Unchanged: FFF9F/0
  3008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3009 ;;      Params:         0       0       0       0       0
  3010 ;;      Locals:         0       0       0       0       0
  3011 ;;      Temps:          0       0       0       0       0
  3012 ;;      Totals:         0       0       0       0       0
  3013 ;;Total ram usage:        0 bytes
  3014 ;; Hardware stack levels used:    1
  3015 ;; Hardware stack levels required when called:    4
  3016 ;; This function calls:
  3017 ;;		_clearAllTimer
  3018 ;; This function is called by:
  3019 ;;		_main
  3020 ;; This function uses a non-reentrant model
  3021 ;;
  3022  0421                     _clearPinPortAndTimer:	
  3023                           
  3024                           ;main.c: 93: PB0 = 0;
  3025                           
  3026                           ; Regs used in _clearPinPortAndTimer: [status,2+status,0+pclath+cstack]
  3027  0421  1006               	bcf	6,0
  3028                           
  3029                           ;main.c: 94: PA0 = 0;
  3030  0422  1005               	bcf	5,0
  3031                           
  3032                           ;main.c: 95: PA1 = 0;
  3033  0423  1085               	bcf	5,1
  3034                           
  3035                           ;main.c: 96: PA2 = 0;
  3036  0424  1105               	bcf	5,2
  3037                           
  3038                           ;main.c: 97: PA3 = 0;
  3039  0425  1185               	bcf	5,3
  3040                           
  3041                           ;main.c: 98: PA7 = 0;
  3042  0426  1385               	bcf	5,7
  3043                           
  3044                           ;main.c: 99: clearAllTimer();
  3045  0427  2C28               	ljmp	l3861
  3046  0428                     __end_of_clearPinPortAndTimer:	
  3047  0428                     __ptext586:	
  3048 ;; =============== function _AD_Sample ends ============
  3049                           
  3050                           
  3051 ;; *************** function _clearAllTimer *****************
  3052 ;; Defined at:
  3053 ;;		line 83 in file "C:\190604\AK7030-OTP\main.c"
  3054 ;; Parameters:    Size  Location     Type
  3055 ;;		None
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;		None
  3058 ;; Return value:  Size  Location     Type
  3059 ;;		None               void
  3060 ;; Registers used:
  3061 ;;		status,2, status,0, pclath, cstack
  3062 ;; Tracked objects:
  3063 ;;		On entry : 60/0
  3064 ;;		On exit  : 60/0
  3065 ;;		Unchanged: FFF9F/0
  3066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3067 ;;      Params:         0       0       0       0       0
  3068 ;;      Locals:         0       0       0       0       0
  3069 ;;      Temps:          0       0       0       0       0
  3070 ;;      Totals:         0       0       0       0       0
  3071 ;;Total ram usage:        0 bytes
  3072 ;; Hardware stack levels used:    1
  3073 ;; Hardware stack levels required when called:    3
  3074 ;; This function calls:
  3075 ;;		_clearTwelveHoursTimer
  3076 ;;		_clearThreeHoursTimer
  3077 ;;		_clearTwentySecondsTimer
  3078 ;; This function is called by:
  3079 ;;		_clearPinPortAndTimer
  3080 ;;		_main
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083  0428                     _clearAllTimer:	
  3084  0428                     l3861:	
  3085                           ; Regs used in _clearAllTimer: [status,2+status,0+pclath+cstack]
  3086                           
  3087                           
  3088                           ;main.c: 84: clearTwelveHoursTimer();
  3089  0428  242D  118A         	fcall	_clearTwelveHoursTimer
  3090                           
  3091                           ;main.c: 85: clearThreeHoursTimer();
  3092  042A  2430  118A         	fcall	_clearThreeHoursTimer
  3093                           
  3094                           ;main.c: 86: clearTwentySecondsTimer();
  3095  042C  2C33               	ljmp	l3699
  3096  042D                     __end_of_clearAllTimer:	
  3097  042D                     __ptext611:	
  3098 ;; =============== function _clearThreeHoursTimer ends ============
  3099                           
  3100                           
  3101 ;; *************** function _clearTwelveHoursTimer *****************
  3102 ;; Defined at:
  3103 ;;		line 215 in file "C:\190604\AK7030-OTP\common.c"
  3104 ;; Parameters:    Size  Location     Type
  3105 ;;		None
  3106 ;; Auto vars:     Size  Location     Type
  3107 ;;		None
  3108 ;; Return value:  Size  Location     Type
  3109 ;;		None               void
  3110 ;; Registers used:
  3111 ;;		status,2
  3112 ;; Tracked objects:
  3113 ;;		On entry : 60/0
  3114 ;;		On exit  : 60/0
  3115 ;;		Unchanged: FFF9F/0
  3116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3117 ;;      Params:         0       0       0       0       0
  3118 ;;      Locals:         0       0       0       0       0
  3119 ;;      Temps:          0       0       0       0       0
  3120 ;;      Totals:         0       0       0       0       0
  3121 ;;Total ram usage:        0 bytes
  3122 ;; Hardware stack levels used:    1
  3123 ;; Hardware stack levels required when called:    2
  3124 ;; This function calls:
  3125 ;;		Nothing
  3126 ;; This function is called by:
  3127 ;;		_clearAllTimer
  3128 ;; This function uses a non-reentrant model
  3129 ;;
  3130  042D                     _clearTwelveHoursTimer:	
  3131                           
  3132                           ;common.c: 216: uiBigTimer = 0;
  3133                           
  3134                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  3135  042D  01F6               	clrf	_uiBigTimer
  3136  042E  01F7               	clrf	_uiBigTimer+1
  3137  042F  0008               	return
  3138  0430                     __end_of_clearTwelveHoursTimer:	
  3139  0430                     __ptext610:	
  3140 ;; =============== function _clearTwentySecondsTimer ends ============
  3141                           
  3142                           
  3143 ;; *************** function _clearThreeHoursTimer *****************
  3144 ;; Defined at:
  3145 ;;		line 221 in file "C:\190604\AK7030-OTP\common.c"
  3146 ;; Parameters:    Size  Location     Type
  3147 ;;		None
  3148 ;; Auto vars:     Size  Location     Type
  3149 ;;		None
  3150 ;; Return value:  Size  Location     Type
  3151 ;;		None               void
  3152 ;; Registers used:
  3153 ;;		status,2
  3154 ;; Tracked objects:
  3155 ;;		On entry : 60/0
  3156 ;;		On exit  : 60/0
  3157 ;;		Unchanged: FFF9F/0
  3158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3159 ;;      Params:         0       0       0       0       0
  3160 ;;      Locals:         0       0       0       0       0
  3161 ;;      Temps:          0       0       0       0       0
  3162 ;;      Totals:         0       0       0       0       0
  3163 ;;Total ram usage:        0 bytes
  3164 ;; Hardware stack levels used:    1
  3165 ;; Hardware stack levels required when called:    2
  3166 ;; This function calls:
  3167 ;;		Nothing
  3168 ;; This function is called by:
  3169 ;;		_clearAllTimer
  3170 ;;		_main
  3171 ;; This function uses a non-reentrant model
  3172 ;;
  3173  0430                     _clearThreeHoursTimer:	
  3174                           
  3175                           ;common.c: 222: uiSmallTimer = 0;
  3176                           
  3177                           ; Regs used in _clearThreeHoursTimer: [status,2]
  3178  0430  01B8               	clrf	_uiSmallTimer
  3179  0431  01B9               	clrf	_uiSmallTimer+1
  3180  0432  0008               	return
  3181  0433                     __end_of_clearThreeHoursTimer:	
  3182  0433                     __ptext609:	
  3183 ;; =============== function _clock_config ends ============
  3184                           
  3185                           
  3186 ;; *************** function _clearTwentySecondsTimer *****************
  3187 ;; Defined at:
  3188 ;;		line 226 in file "C:\190604\AK7030-OTP\common.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;		None
  3191 ;; Auto vars:     Size  Location     Type
  3192 ;;		None
  3193 ;; Return value:  Size  Location     Type
  3194 ;;		None               void
  3195 ;; Registers used:
  3196 ;;		status,2
  3197 ;; Tracked objects:
  3198 ;;		On entry : 60/0
  3199 ;;		On exit  : 60/0
  3200 ;;		Unchanged: FFF9F/0
  3201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3202 ;;      Params:         0       0       0       0       0
  3203 ;;      Locals:         0       0       0       0       0
  3204 ;;      Temps:          0       0       0       0       0
  3205 ;;      Totals:         0       0       0       0       0
  3206 ;;Total ram usage:        0 bytes
  3207 ;; Hardware stack levels used:    1
  3208 ;; Hardware stack levels required when called:    2
  3209 ;; This function calls:
  3210 ;;		Nothing
  3211 ;; This function is called by:
  3212 ;;		_clearAllTimer
  3213 ;; This function uses a non-reentrant model
  3214 ;;
  3215  0433                     _clearTwentySecondsTimer:	
  3216  0433                     l3699:	
  3217                           ; Regs used in _clearTwentySecondsTimer: [status,2]
  3218                           
  3219                           
  3220                           ;common.c: 227: uiTwentySecondsTimer = 0;
  3221  0433  01BA               	clrf	_uiTwentySecondsTimer
  3222  0434  01BB               	clrf	_uiTwentySecondsTimer+1
  3223  0435  0008               	return
  3224  0436                     __end_of_clearTwentySecondsTimer:	
  3225                           
  3226                           	psect	text590
  3227  04A2                     __ptext590:	
  3228 ;; =============== function _getAD_ConvertFlag ends ============
  3229                           
  3230                           
  3231 ;; *************** function _isFinishedThreeHoursTimer *****************
  3232 ;; Defined at:
  3233 ;;		line 265 in file "C:\190604\AK7030-OTP\common.c"
  3234 ;; Parameters:    Size  Location     Type
  3235 ;;		None
  3236 ;; Auto vars:     Size  Location     Type
  3237 ;;		None
  3238 ;; Return value:  Size  Location     Type
  3239 ;;                  1    wreg      unsigned char 
  3240 ;; Registers used:
  3241 ;;		wreg, status,2, status,0
  3242 ;; Tracked objects:
  3243 ;;		On entry : 60/0
  3244 ;;		On exit  : 60/0
  3245 ;;		Unchanged: FFF9F/0
  3246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3247 ;;      Params:         0       0       0       0       0
  3248 ;;      Locals:         0       0       0       0       0
  3249 ;;      Temps:          0       0       0       0       0
  3250 ;;      Totals:         0       0       0       0       0
  3251 ;;Total ram usage:        0 bytes
  3252 ;; Hardware stack levels used:    1
  3253 ;; Hardware stack levels required when called:    2
  3254 ;; This function calls:
  3255 ;;		Nothing
  3256 ;; This function is called by:
  3257 ;;		_main
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260  04A2                     _isFinishedThreeHoursTimer:	
  3261                           
  3262                           ;common.c: 266: if(uiSmallTimer == 0)
  3263                           
  3264                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  3265  04A2  0839               	movf	_uiSmallTimer+1,w
  3266  04A3  0438               	iorwf	_uiSmallTimer,w
  3267  04A4  1903               	btfsc	3,2
  3268                           
  3269                           ;common.c: 267: return 1;
  3270  04A5  3401               	retlw	1
  3271                           
  3272                           ;common.c: 268: else
  3273                           ;common.c: 269: return 0;
  3274  04A6  3400               	retlw	0
  3275  04A7                     __end_of_isFinishedThreeHoursTimer:	
  3276                           
  3277                           	psect	text591
  3278  049B                     __ptext591:	
  3279 ;; =============== function _isFinishedThreeHoursTimer ends ============
  3280                           
  3281                           
  3282 ;; *************** function _startThreeHoursTimer *****************
  3283 ;; Defined at:
  3284 ;;		line 232 in file "C:\190604\AK7030-OTP\common.c"
  3285 ;; Parameters:    Size  Location     Type
  3286 ;;		None
  3287 ;; Auto vars:     Size  Location     Type
  3288 ;;		None
  3289 ;; Return value:  Size  Location     Type
  3290 ;;		None               void
  3291 ;; Registers used:
  3292 ;;		wreg
  3293 ;; Tracked objects:
  3294 ;;		On entry : 60/60
  3295 ;;		On exit  : 60/0
  3296 ;;		Unchanged: FFF9F/0
  3297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3298 ;;      Params:         0       0       0       0       0
  3299 ;;      Locals:         0       0       0       0       0
  3300 ;;      Temps:          0       0       0       0       0
  3301 ;;      Totals:         0       0       0       0       0
  3302 ;;Total ram usage:        0 bytes
  3303 ;; Hardware stack levels used:    1
  3304 ;; Hardware stack levels required when called:    2
  3305 ;; This function calls:
  3306 ;;		Nothing
  3307 ;; This function is called by:
  3308 ;;		_main
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311  049B                     _startThreeHoursTimer:	
  3312                           
  3313                           ;common.c: 233: uiSmallTimer = 10800;
  3314                           
  3315                           ; Regs used in _startThreeHoursTimer: [wreg]
  3316  049B  3030               	movlw	48
  3317  049C  1283               	bcf	3,5	;RP0=0, select bank0
  3318  049D  1303               	bcf	3,6	;RP1=0, select bank0
  3319  049E  00B8               	movwf	_uiSmallTimer
  3320  049F  302A               	movlw	42
  3321  04A0  00B9               	movwf	_uiSmallTimer+1
  3322  04A1  0008               	return
  3323  04A2                     __end_of_startThreeHoursTimer:	
  3324                           
  3325                           	psect	text592
  3326  04A7                     __ptext592:	
  3327 ;; =============== function _startThreeHoursTimer ends ============
  3328                           
  3329                           
  3330 ;; *************** function _isFinishedTwentySecondsTimer *****************
  3331 ;; Defined at:
  3332 ;;		line 248 in file "C:\190604\AK7030-OTP\common.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;		None
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;		None
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  1    wreg      unsigned char 
  3339 ;; Registers used:
  3340 ;;		wreg, status,2, status,0
  3341 ;; Tracked objects:
  3342 ;;		On entry : 60/0
  3343 ;;		On exit  : 60/0
  3344 ;;		Unchanged: FFF9F/0
  3345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3346 ;;      Params:         0       0       0       0       0
  3347 ;;      Locals:         0       0       0       0       0
  3348 ;;      Temps:          0       0       0       0       0
  3349 ;;      Totals:         0       0       0       0       0
  3350 ;;Total ram usage:        0 bytes
  3351 ;; Hardware stack levels used:    1
  3352 ;; Hardware stack levels required when called:    2
  3353 ;; This function calls:
  3354 ;;		Nothing
  3355 ;; This function is called by:
  3356 ;;		_main
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359  04A7                     _isFinishedTwentySecondsTimer:	
  3360                           
  3361                           ;common.c: 249: if(0 == uiTwentySecondsTimer)
  3362                           
  3363                           ; Regs used in _isFinishedTwentySecondsTimer: [wreg+status,2+status,0]
  3364  04A7  083B               	movf	_uiTwentySecondsTimer+1,w
  3365  04A8  043A               	iorwf	_uiTwentySecondsTimer,w
  3366  04A9  1903               	btfsc	3,2
  3367                           
  3368                           ;common.c: 250: return 1;
  3369  04AA  3401               	retlw	1
  3370                           
  3371                           ;common.c: 251: else
  3372                           ;common.c: 252: return 0;
  3373  04AB  3400               	retlw	0
  3374  04AC                     __end_of_isFinishedTwentySecondsTimer:	
  3375                           
  3376                           	psect	text593
  3377  04AC                     __ptext593:	
  3378 ;; =============== function _isFinishedTwentySecondsTimer ends ============
  3379                           
  3380                           
  3381 ;; *************** function _getAdOriginaCh4Value *****************
  3382 ;; Defined at:
  3383 ;;		line 89 in file "C:\190604\AK7030-OTP\common.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;		None
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;		None
  3388 ;; Return value:  Size  Location     Type
  3389 ;;                  2    0[BANK0 ] unsigned int 
  3390 ;; Registers used:
  3391 ;;		wreg
  3392 ;; Tracked objects:
  3393 ;;		On entry : 60/0
  3394 ;;		On exit  : 60/0
  3395 ;;		Unchanged: FFF9F/0
  3396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3397 ;;      Params:         0       2       0       0       0
  3398 ;;      Locals:         0       0       0       0       0
  3399 ;;      Temps:          0       0       0       0       0
  3400 ;;      Totals:         0       2       0       0       0
  3401 ;;Total ram usage:        2 bytes
  3402 ;; Hardware stack levels used:    1
  3403 ;; Hardware stack levels required when called:    2
  3404 ;; This function calls:
  3405 ;;		Nothing
  3406 ;; This function is called by:
  3407 ;;		_main
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410  04AC                     _getAdOriginaCh4Value:	
  3411                           
  3412                           ;common.c: 90: return adc_original_CH4_value;
  3413                           
  3414                           ; Regs used in _getAdOriginaCh4Value: [wreg]
  3415  04AC  0831               	movf	_adc_original_CH4_value+1,w
  3416  04AD  00D7               	movwf	?_getAdOriginaCh4Value+1
  3417  04AE  0830               	movf	_adc_original_CH4_value,w
  3418  04AF  00D6               	movwf	?_getAdOriginaCh4Value
  3419  04B0  0008               	return
  3420  04B1                     __end_of_getAdOriginaCh4Value:	
  3421                           
  3422                           	psect	text594
  3423  04CF                     __ptext594:	
  3424 ;; =============== function _getAdOriginaCh4Value ends ============
  3425                           
  3426                           
  3427 ;; *************** function _startTwentySecondsTimer *****************
  3428 ;; Defined at:
  3429 ;;		line 242 in file "C:\190604\AK7030-OTP\common.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;		None
  3432 ;; Auto vars:     Size  Location     Type
  3433 ;;		None
  3434 ;; Return value:  Size  Location     Type
  3435 ;;		None               void
  3436 ;; Registers used:
  3437 ;;		wreg
  3438 ;; Tracked objects:
  3439 ;;		On entry : 60/0
  3440 ;;		On exit  : 60/0
  3441 ;;		Unchanged: FFF9F/0
  3442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3443 ;;      Params:         0       0       0       0       0
  3444 ;;      Locals:         0       0       0       0       0
  3445 ;;      Temps:          0       0       0       0       0
  3446 ;;      Totals:         0       0       0       0       0
  3447 ;;Total ram usage:        0 bytes
  3448 ;; Hardware stack levels used:    1
  3449 ;; Hardware stack levels required when called:    2
  3450 ;; This function calls:
  3451 ;;		Nothing
  3452 ;; This function is called by:
  3453 ;;		_main
  3454 ;; This function uses a non-reentrant model
  3455 ;;
  3456  04CF                     _startTwentySecondsTimer:	
  3457                           
  3458                           ;common.c: 243: uiTwentySecondsTimer = 20;
  3459                           
  3460                           ; Regs used in _startTwentySecondsTimer: [wreg]
  3461  04CF  3014               	movlw	20
  3462  04D0  00BA               	movwf	_uiTwentySecondsTimer
  3463  04D1  01BB               	clrf	_uiTwentySecondsTimer+1
  3464  04D2  0008               	return
  3465  04D3                     __end_of_startTwentySecondsTimer:	
  3466                           
  3467                           	psect	text595
  3468  04B1                     __ptext595:	
  3469 ;; =============== function _startTwentySecondsTimer ends ============
  3470                           
  3471                           
  3472 ;; *************** function _isFinishedTwelveHoursTimer *****************
  3473 ;; Defined at:
  3474 ;;		line 257 in file "C:\190604\AK7030-OTP\common.c"
  3475 ;; Parameters:    Size  Location     Type
  3476 ;;		None
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;		None
  3479 ;; Return value:  Size  Location     Type
  3480 ;;                  1    wreg      unsigned char 
  3481 ;; Registers used:
  3482 ;;		wreg, status,2, status,0
  3483 ;; Tracked objects:
  3484 ;;		On entry : 60/0
  3485 ;;		On exit  : 60/0
  3486 ;;		Unchanged: FFF9F/0
  3487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3488 ;;      Params:         0       0       0       0       0
  3489 ;;      Locals:         0       0       0       0       0
  3490 ;;      Temps:          0       0       0       0       0
  3491 ;;      Totals:         0       0       0       0       0
  3492 ;;Total ram usage:        0 bytes
  3493 ;; Hardware stack levels used:    1
  3494 ;; Hardware stack levels required when called:    2
  3495 ;; This function calls:
  3496 ;;		Nothing
  3497 ;; This function is called by:
  3498 ;;		_main
  3499 ;; This function uses a non-reentrant model
  3500 ;;
  3501  04B1                     _isFinishedTwelveHoursTimer:	
  3502                           
  3503                           ;common.c: 258: if(uiBigTimer == 0)
  3504                           
  3505                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  3506  04B1  0877               	movf	_uiBigTimer+1,w
  3507  04B2  0476               	iorwf	_uiBigTimer,w
  3508  04B3  1903               	btfsc	3,2
  3509                           
  3510                           ;common.c: 259: return 1;
  3511  04B4  3401               	retlw	1
  3512                           
  3513                           ;common.c: 260: else
  3514                           ;common.c: 261: return 0;
  3515  04B5  3400               	retlw	0
  3516  04B6                     __end_of_isFinishedTwelveHoursTimer:	
  3517                           
  3518                           	psect	text596
  3519  04B6                     __ptext596:	
  3520 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  3521                           
  3522                           
  3523 ;; *************** function _startTwelveHourTimer *****************
  3524 ;; Defined at:
  3525 ;;		line 205 in file "C:\190604\AK7030-OTP\common.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;		None
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;		None
  3530 ;; Return value:  Size  Location     Type
  3531 ;;		None               void
  3532 ;; Registers used:
  3533 ;;		wreg
  3534 ;; Tracked objects:
  3535 ;;		On entry : 60/0
  3536 ;;		On exit  : 60/0
  3537 ;;		Unchanged: FFF9F/0
  3538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3539 ;;      Params:         0       0       0       0       0
  3540 ;;      Locals:         0       0       0       0       0
  3541 ;;      Temps:          0       0       0       0       0
  3542 ;;      Totals:         0       0       0       0       0
  3543 ;;Total ram usage:        0 bytes
  3544 ;; Hardware stack levels used:    1
  3545 ;; Hardware stack levels required when called:    2
  3546 ;; This function calls:
  3547 ;;		Nothing
  3548 ;; This function is called by:
  3549 ;;		_main
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552  04B6                     _startTwelveHourTimer:	
  3553                           
  3554                           ;common.c: 206: uiBigTimer = 43200;
  3555                           
  3556                           ; Regs used in _startTwelveHourTimer: [wreg]
  3557  04B6  30C0               	movlw	192
  3558  04B7  00F6               	movwf	_uiBigTimer
  3559  04B8  30A8               	movlw	168
  3560  04B9  00F7               	movwf	_uiBigTimer+1
  3561  04BA  0008               	return
  3562  04BB                     __end_of_startTwelveHourTimer:	
  3563                           
  3564                           	psect	text597
  3565  04BB                     __ptext597:	
  3566 ;; =============== function _startTwelveHourTimer ends ============
  3567                           
  3568                           
  3569 ;; *************** function _getAdOriginalCh1Value *****************
  3570 ;; Defined at:
  3571 ;;		line 83 in file "C:\190604\AK7030-OTP\common.c"
  3572 ;; Parameters:    Size  Location     Type
  3573 ;;		None
  3574 ;; Auto vars:     Size  Location     Type
  3575 ;;		None
  3576 ;; Return value:  Size  Location     Type
  3577 ;;                  2    0[BANK0 ] unsigned int 
  3578 ;; Registers used:
  3579 ;;		wreg
  3580 ;; Tracked objects:
  3581 ;;		On entry : 60/0
  3582 ;;		On exit  : 60/0
  3583 ;;		Unchanged: FFF9F/0
  3584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3585 ;;      Params:         0       2       0       0       0
  3586 ;;      Locals:         0       0       0       0       0
  3587 ;;      Temps:          0       0       0       0       0
  3588 ;;      Totals:         0       2       0       0       0
  3589 ;;Total ram usage:        2 bytes
  3590 ;; Hardware stack levels used:    1
  3591 ;; Hardware stack levels required when called:    2
  3592 ;; This function calls:
  3593 ;;		Nothing
  3594 ;; This function is called by:
  3595 ;;		_main
  3596 ;; This function uses a non-reentrant model
  3597 ;;
  3598  04BB                     _getAdOriginalCh1Value:	
  3599                           
  3600                           ;common.c: 84: return adc_original_CH1_value;
  3601                           
  3602                           ; Regs used in _getAdOriginalCh1Value: [wreg]
  3603  04BB  082F               	movf	_adc_original_CH1_value+1,w
  3604  04BC  00D7               	movwf	?_getAdOriginalCh1Value+1
  3605  04BD  082E               	movf	_adc_original_CH1_value,w
  3606  04BE  00D6               	movwf	?_getAdOriginalCh1Value
  3607  04BF  0008               	return
  3608  04C0                     __end_of_getAdOriginalCh1Value:	
  3609                           
  3610                           	psect	text598
  3611  04C0                     __ptext598:	
  3612 ;; =============== function _getAdOriginalCh1Value ends ============
  3613                           
  3614                           
  3615 ;; *************** function _getAdOriginalCh14Value *****************
  3616 ;; Defined at:
  3617 ;;		line 95 in file "C:\190604\AK7030-OTP\common.c"
  3618 ;; Parameters:    Size  Location     Type
  3619 ;;		None
  3620 ;; Auto vars:     Size  Location     Type
  3621 ;;		None
  3622 ;; Return value:  Size  Location     Type
  3623 ;;                  2    0[BANK0 ] unsigned int 
  3624 ;; Registers used:
  3625 ;;		wreg
  3626 ;; Tracked objects:
  3627 ;;		On entry : 60/0
  3628 ;;		On exit  : 60/0
  3629 ;;		Unchanged: FFF9F/0
  3630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3631 ;;      Params:         0       2       0       0       0
  3632 ;;      Locals:         0       0       0       0       0
  3633 ;;      Temps:          0       0       0       0       0
  3634 ;;      Totals:         0       2       0       0       0
  3635 ;;Total ram usage:        2 bytes
  3636 ;; Hardware stack levels used:    1
  3637 ;; Hardware stack levels required when called:    2
  3638 ;; This function calls:
  3639 ;;		Nothing
  3640 ;; This function is called by:
  3641 ;;		_main
  3642 ;; This function uses a non-reentrant model
  3643 ;;
  3644  04C0                     _getAdOriginalCh14Value:	
  3645                           
  3646                           ;common.c: 96: return adc_original_CH14_value;
  3647                           
  3648                           ; Regs used in _getAdOriginalCh14Value: [wreg]
  3649  04C0  082D               	movf	_adc_original_CH14_value+1,w
  3650  04C1  00D7               	movwf	?_getAdOriginalCh14Value+1
  3651  04C2  082C               	movf	_adc_original_CH14_value,w
  3652  04C3  00D6               	movwf	?_getAdOriginalCh14Value
  3653  04C4  0008               	return
  3654  04C5                     __end_of_getAdOriginalCh14Value:	
  3655                           
  3656                           	psect	text599
  3657  04D6                     __ptext599:	
  3658 ;; =============== function _getAdOriginalCh14Value ends ============
  3659                           
  3660                           
  3661 ;; *************** function _clrSampeTime *****************
  3662 ;; Defined at:
  3663 ;;		line 283 in file "C:\190604\AK7030-OTP\common.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;		None
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;		None
  3668 ;; Return value:  Size  Location     Type
  3669 ;;		None               void
  3670 ;; Registers used:
  3671 ;;		status,2
  3672 ;; Tracked objects:
  3673 ;;		On entry : 0/0
  3674 ;;		On exit  : 0/0
  3675 ;;		Unchanged: FFFFF/0
  3676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3677 ;;      Params:         0       0       0       0       0
  3678 ;;      Locals:         0       0       0       0       0
  3679 ;;      Temps:          0       0       0       0       0
  3680 ;;      Totals:         0       0       0       0       0
  3681 ;;Total ram usage:        0 bytes
  3682 ;; Hardware stack levels used:    1
  3683 ;; Hardware stack levels required when called:    2
  3684 ;; This function calls:
  3685 ;;		Nothing
  3686 ;; This function is called by:
  3687 ;;		_main
  3688 ;; This function uses a non-reentrant model
  3689 ;;
  3690  04D6                     _clrSampeTime:	
  3691                           
  3692                           ;common.c: 284: timer.timer10msStopWatch = 0;
  3693                           
  3694                           ; Regs used in _clrSampeTime: [status,2]
  3695  04D6  01FA               	clrf	_timer
  3696  04D7  0008               	return
  3697  04D8                     __end_of_clrSampeTime:	
  3698                           
  3699                           	psect	text600
  3700  04C5                     __ptext600:	
  3701 ;; =============== function _clrSampeTime ends ============
  3702                           
  3703                           
  3704 ;; *************** function _isPermitSampleTime *****************
  3705 ;; Defined at:
  3706 ;;		line 273 in file "C:\190604\AK7030-OTP\common.c"
  3707 ;; Parameters:    Size  Location     Type
  3708 ;;		None
  3709 ;; Auto vars:     Size  Location     Type
  3710 ;;		None
  3711 ;; Return value:  Size  Location     Type
  3712 ;;                  1    wreg      unsigned char 
  3713 ;; Registers used:
  3714 ;;		wreg
  3715 ;; Tracked objects:
  3716 ;;		On entry : 0/0
  3717 ;;		On exit  : 0/0
  3718 ;;		Unchanged: FFFFF/0
  3719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3720 ;;      Params:         0       0       0       0       0
  3721 ;;      Locals:         0       0       0       0       0
  3722 ;;      Temps:          0       0       0       0       0
  3723 ;;      Totals:         0       0       0       0       0
  3724 ;;Total ram usage:        0 bytes
  3725 ;; Hardware stack levels used:    1
  3726 ;; Hardware stack levels required when called:    2
  3727 ;; This function calls:
  3728 ;;		Nothing
  3729 ;; This function is called by:
  3730 ;;		_main
  3731 ;; This function uses a non-reentrant model
  3732 ;;
  3733  04C5                     _isPermitSampleTime:	
  3734                           
  3735                           ;common.c: 274: if(timer.timer10msStopWatch >= 10)
  3736                           
  3737                           ; Regs used in _isPermitSampleTime: [wreg]
  3738  04C5  300A               	movlw	10
  3739  04C6  027A               	subwf	_timer,w
  3740  04C7  1803               	btfsc	3,0
  3741                           
  3742                           ;common.c: 275: {
  3743                           ;common.c: 276: return 1;
  3744  04C8  3401               	retlw	1
  3745                           
  3746                           ;common.c: 278: else
  3747                           ;common.c: 279: return 0;
  3748  04C9  3400               	retlw	0
  3749  04CA                     __end_of_isPermitSampleTime:	
  3750                           
  3751                           	psect	text602
  3752  048B                     __ptext602:	
  3753 ;; =============== function _adc_start ends ============
  3754                           
  3755                           
  3756 ;; *************** function _op2_init *****************
  3757 ;; Defined at:
  3758 ;;		line 45 in file "C:\190604\AK7030-OTP\periph.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;		None
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;		None
  3763 ;; Return value:  Size  Location     Type
  3764 ;;		None               void
  3765 ;; Registers used:
  3766 ;;		wreg
  3767 ;; Tracked objects:
  3768 ;;		On entry : 17F/20
  3769 ;;		On exit  : 17F/20
  3770 ;;		Unchanged: FFE80/0
  3771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3772 ;;      Params:         0       0       0       0       0
  3773 ;;      Locals:         0       0       0       0       0
  3774 ;;      Temps:          0       0       0       0       0
  3775 ;;      Totals:         0       0       0       0       0
  3776 ;;Total ram usage:        0 bytes
  3777 ;; Hardware stack levels used:    1
  3778 ;; Hardware stack levels required when called:    2
  3779 ;; This function calls:
  3780 ;;		Nothing
  3781 ;; This function is called by:
  3782 ;;		_main
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785  048B                     _op2_init:	
  3786                           
  3787                           ;periph.c: 52: OP2CON1=0x10;
  3788                           
  3789                           ; Regs used in _op2_init: [wreg]
  3790  048B  3010               	movlw	16
  3791  048C  009C               	movwf	28	;volatile
  3792                           
  3793                           ;periph.c: 54: OP2CON2=0x10;
  3794  048D  009D               	movwf	29	;volatile
  3795                           
  3796                           ;periph.c: 55: OP2CON0=0x80;
  3797  048E  3080               	movlw	128
  3798  048F  009B               	movwf	27	;volatile
  3799                           
  3800                           ;periph.c: 58: TRISA7=0;
  3801  0490  1385               	bcf	5,7
  3802                           
  3803                           ;periph.c: 60: TRISB7 = 1;
  3804  0491  1786               	bsf	6,7
  3805  0492  0008               	return
  3806  0493                     __end_of_op2_init:	
  3807                           
  3808                           	psect	text603
  3809  046E                     __ptext603:	
  3810 ;; =============== function _op2_init ends ============
  3811                           
  3812                           
  3813 ;; *************** function _op1_init *****************
  3814 ;; Defined at:
  3815 ;;		line 26 in file "C:\190604\AK7030-OTP\periph.c"
  3816 ;; Parameters:    Size  Location     Type
  3817 ;;		None
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;		None
  3820 ;; Return value:  Size  Location     Type
  3821 ;;		None               void
  3822 ;; Registers used:
  3823 ;;		wreg
  3824 ;; Tracked objects:
  3825 ;;		On entry : 17F/20
  3826 ;;		On exit  : 17F/20
  3827 ;;		Unchanged: FFE80/0
  3828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3829 ;;      Params:         0       0       0       0       0
  3830 ;;      Locals:         0       0       0       0       0
  3831 ;;      Temps:          0       0       0       0       0
  3832 ;;      Totals:         0       0       0       0       0
  3833 ;;Total ram usage:        0 bytes
  3834 ;; Hardware stack levels used:    1
  3835 ;; Hardware stack levels required when called:    2
  3836 ;; This function calls:
  3837 ;;		Nothing
  3838 ;; This function is called by:
  3839 ;;		_main
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842  046E                     _op1_init:	
  3843                           
  3844                           ;periph.c: 33: OP1CON1=0x02;
  3845                           
  3846                           ; Regs used in _op1_init: [wreg]
  3847  046E  3002               	movlw	2
  3848  046F  1283               	bcf	3,5	;RP0=0, select bank0
  3849  0470  009C               	movwf	28	;volatile
  3850                           
  3851                           ;periph.c: 34: OP1CON2=0xA0;
  3852  0471  30A0               	movlw	160
  3853  0472  009D               	movwf	29	;volatile
  3854                           
  3855                           ;periph.c: 35: OP1CON0=0x80;
  3856  0473  3080               	movlw	128
  3857  0474  009B               	movwf	27	;volatile
  3858                           
  3859                           ;periph.c: 38: TRISB3=1;
  3860  0475  1683               	bsf	3,5	;RP0=1, select bank1
  3861  0476  1586               	bsf	6,3
  3862                           
  3863                           ;periph.c: 40: TRISB5=0;
  3864  0477  1286               	bcf	6,5
  3865  0478  0008               	return
  3866  0479                     __end_of_op1_init:	
  3867                           
  3868                           	psect	text604
  3869  04CA                     __ptext604:	
  3870 ;; =============== function _op1_init ends ============
  3871                           
  3872                           
  3873 ;; *************** function _dac_init *****************
  3874 ;; Defined at:
  3875 ;;		line 14 in file "C:\190604\AK7030-OTP\periph.c"
  3876 ;; Parameters:    Size  Location     Type
  3877 ;;		None
  3878 ;; Auto vars:     Size  Location     Type
  3879 ;;		None
  3880 ;; Return value:  Size  Location     Type
  3881 ;;		None               void
  3882 ;; Registers used:
  3883 ;;		wreg
  3884 ;; Tracked objects:
  3885 ;;		On entry : 17F/20
  3886 ;;		On exit  : 17F/20
  3887 ;;		Unchanged: FFE80/0
  3888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3889 ;;      Params:         0       0       0       0       0
  3890 ;;      Locals:         0       0       0       0       0
  3891 ;;      Temps:          0       0       0       0       0
  3892 ;;      Totals:         0       0       0       0       0
  3893 ;;Total ram usage:        0 bytes
  3894 ;; Hardware stack levels used:    1
  3895 ;; Hardware stack levels required when called:    2
  3896 ;; This function calls:
  3897 ;;		Nothing
  3898 ;; This function is called by:
  3899 ;;		_main
  3900 ;; This function uses a non-reentrant model
  3901 ;;
  3902  04CA                     _dac_init:	
  3903                           
  3904                           ;periph.c: 15: DACCON|=1;
  3905                           
  3906                           ; Regs used in _dac_init: [wreg]
  3907  04CA  1407               	bsf	7,0	;volatile
  3908                           
  3909                           ;periph.c: 17: DACR0=0x0F;
  3910  04CB  300F               	movlw	15
  3911  04CC  0088               	movwf	8	;volatile
  3912                           
  3913                           ;periph.c: 18: DACCON|=(1)<<2;
  3914  04CD  1507               	bsf	7,2	;volatile
  3915  04CE  0008               	return
  3916  04CF                     __end_of_dac_init:	
  3917                           
  3918                           	psect	text606
  3919  04D3                     __ptext606:	
  3920 ;; =============== function _adc_test_init ends ============
  3921                           
  3922                           
  3923 ;; *************** function _timer1_interrupt_config *****************
  3924 ;; Defined at:
  3925 ;;		line 58 in file "C:\190604\AK7030-OTP\common.c"
  3926 ;; Parameters:    Size  Location     Type
  3927 ;;		None
  3928 ;; Auto vars:     Size  Location     Type
  3929 ;;		None
  3930 ;; Return value:  Size  Location     Type
  3931 ;;		None               void
  3932 ;; Registers used:
  3933 ;;		None
  3934 ;; Tracked objects:
  3935 ;;		On entry : 17F/20
  3936 ;;		On exit  : 17F/20
  3937 ;;		Unchanged: FFE80/0
  3938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3939 ;;      Params:         0       0       0       0       0
  3940 ;;      Locals:         0       0       0       0       0
  3941 ;;      Temps:          0       0       0       0       0
  3942 ;;      Totals:         0       0       0       0       0
  3943 ;;Total ram usage:        0 bytes
  3944 ;; Hardware stack levels used:    1
  3945 ;; Hardware stack levels required when called:    2
  3946 ;; This function calls:
  3947 ;;		Nothing
  3948 ;; This function is called by:
  3949 ;;		_main
  3950 ;; This function uses a non-reentrant model
  3951 ;;
  3952  04D3                     _timer1_interrupt_config:	
  3953                           
  3954                           ;common.c: 59: GIE = 1;
  3955                           
  3956                           ; Regs used in _timer1_interrupt_config: []
  3957  04D3  178B               	bsf	11,7
  3958                           
  3959                           ;common.c: 60: PEIE = 1;
  3960  04D4  170B               	bsf	11,6
  3961  04D5  0008               	return
  3962  04D6                     __end_of_timer1_interrupt_config:	
  3963                           
  3964                           	psect	text607
  3965  0479                     __ptext607:	
  3966 ;; =============== function _timer1_interrupt_config ends ============
  3967                           
  3968                           
  3969 ;; *************** function _timer1_config *****************
  3970 ;; Defined at:
  3971 ;;		line 46 in file "C:\190604\AK7030-OTP\common.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;		None
  3974 ;; Auto vars:     Size  Location     Type
  3975 ;;		None
  3976 ;; Return value:  Size  Location     Type
  3977 ;;		None               void
  3978 ;; Registers used:
  3979 ;;		wreg
  3980 ;; Tracked objects:
  3981 ;;		On entry : 17F/40
  3982 ;;		On exit  : 17F/20
  3983 ;;		Unchanged: FFE80/0
  3984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3985 ;;      Params:         0       0       0       0       0
  3986 ;;      Locals:         0       0       0       0       0
  3987 ;;      Temps:          0       0       0       0       0
  3988 ;;      Totals:         0       0       0       0       0
  3989 ;;Total ram usage:        0 bytes
  3990 ;; Hardware stack levels used:    1
  3991 ;; Hardware stack levels required when called:    2
  3992 ;; This function calls:
  3993 ;;		Nothing
  3994 ;; This function is called by:
  3995 ;;		_main
  3996 ;; This function uses a non-reentrant model
  3997 ;;
  3998  0479                     _timer1_config:	
  3999                           
  4000                           ;common.c: 48: TMR1H=0xCF;
  4001                           
  4002                           ; Regs used in _timer1_config: [wreg]
  4003  0479  30CF               	movlw	207
  4004  047A  1303               	bcf	3,6	;RP1=0, select bank0
  4005  047B  008F               	movwf	15	;volatile
  4006                           
  4007                           ;common.c: 49: TMR1L=0x2C;
  4008  047C  302C               	movlw	44
  4009  047D  008E               	movwf	14	;volatile
  4010                           
  4011                           ;common.c: 50: T1CON=0xE1;
  4012  047E  30E1               	movlw	225
  4013  047F  0090               	movwf	16	;volatile
  4014                           
  4015                           ;common.c: 51: TMR1IE=1;
  4016  0480  1683               	bsf	3,5	;RP0=1, select bank1
  4017  0481  140C               	bsf	12,0
  4018  0482  0008               	return
  4019  0483                     __end_of_timer1_config:	
  4020                           
  4021                           	psect	text608
  4022  0493                     __ptext608:	
  4023 ;; =============== function _timer1_config ends ============
  4024                           
  4025                           
  4026 ;; *************** function _clock_config *****************
  4027 ;; Defined at:
  4028 ;;		line 38 in file "C:\190604\AK7030-OTP\common.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;		None
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;		None
  4033 ;; Return value:  Size  Location     Type
  4034 ;;		None               void
  4035 ;; Registers used:
  4036 ;;		wreg, status,2
  4037 ;; Tracked objects:
  4038 ;;		On entry : 17F/20
  4039 ;;		On exit  : 17F/40
  4040 ;;		Unchanged: FFE80/0
  4041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4042 ;;      Params:         0       0       0       0       0
  4043 ;;      Locals:         0       0       0       0       0
  4044 ;;      Temps:          0       0       0       0       0
  4045 ;;      Totals:         0       0       0       0       0
  4046 ;;Total ram usage:        0 bytes
  4047 ;; Hardware stack levels used:    1
  4048 ;; Hardware stack levels required when called:    2
  4049 ;; This function calls:
  4050 ;;		Nothing
  4051 ;; This function is called by:
  4052 ;;		_main
  4053 ;; This function uses a non-reentrant model
  4054 ;;
  4055  0493                     _clock_config:	
  4056                           
  4057                           ;common.c: 40: CLKPR = 0x80;
  4058                           
  4059                           ; Regs used in _clock_config: [wreg+status,2]
  4060  0493  3080               	movlw	128
  4061  0494  1283               	bcf	3,5	;RP0=0, select bank2
  4062  0495  1703               	bsf	3,6	;RP1=1, select bank2
  4063  0496  0088               	movwf	8	;volatile
  4064                           
  4065                           ;common.c: 41: CLKPR = 0x00;
  4066  0497  0188               	clrf	8	;volatile
  4067  0498                     l1600:	
  4068                           ;common.c: 42: while(CLKPCE);
  4069                           
  4070  0498  1F88               	btfss	8,7
  4071  0499  0008               	return
  4072  049A  2C98               	goto	l1600
  4073  049B                     __end_of_clock_config:	
  4074                           
  4075                           	psect	text612
  4076  03B9                     __ptext612:	
  4077 ;; =============== function _clearTwelveHoursTimer ends ============
  4078                           
  4079                           
  4080 ;; *************** function _ISR *****************
  4081 ;; Defined at:
  4082 ;;		line 288 in file "C:\190604\AK7030-OTP\common.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;		None
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;		None
  4087 ;; Return value:  Size  Location     Type
  4088 ;;		None               void
  4089 ;; Registers used:
  4090 ;;		wreg, status,2, status,0, pclath, cstack
  4091 ;; Tracked objects:
  4092 ;;		On entry : 0/0
  4093 ;;		On exit  : 60/0
  4094 ;;		Unchanged: FFF9F/0
  4095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4096 ;;      Params:         0       0       0       0       0
  4097 ;;      Locals:         0       0       0       0       0
  4098 ;;      Temps:          2       0       0       0       0
  4099 ;;      Totals:         2       0       0       0       0
  4100 ;;Total ram usage:        2 bytes
  4101 ;; Hardware stack levels used:    1
  4102 ;; Hardware stack levels required when called:    1
  4103 ;; This function calls:
  4104 ;;		i1_setAD_ConvertFlag
  4105 ;;		_adc_get
  4106 ;; This function is called by:
  4107 ;;		Interrupt level 1
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110  03B9                     _ISR:	
  4111                           
  4112                           ;common.c: 289: static unsigned char ucTimer1sCnt = 0;
  4113                           ;common.c: 291: if(TMR1IF == 1)
  4114  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  4115  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  4116  03BB  1C0C               	btfss	12,0
  4117  03BC  2BE3               	goto	i1l3837
  4118  03BD  3064               	movlw	100
  4119                           
  4120                           ;common.c: 292: {
  4121                           ;common.c: 293: TMR1IF = 0 ;
  4122  03BE  100C               	bcf	12,0
  4123                           
  4124                           ;common.c: 294: timer.timer10msStopWatch++;
  4125  03BF  0AFA               	incf	_timer,f
  4126                           
  4127                           ;common.c: 295: ucTimer1sCnt++;
  4128  03C0  0AF8               	incf	ISR@ucTimer1sCnt,f
  4129                           
  4130                           ;common.c: 297: if(ucTimer1sCnt >= 100)
  4131  03C1  0278               	subwf	ISR@ucTimer1sCnt,w
  4132  03C2  1C03               	skipc
  4133  03C3  2BE3               	goto	i1l3837
  4134                           
  4135                           ;common.c: 298: {
  4136                           ;common.c: 299: ucTimer1sCnt = 0;
  4137  03C4  01F8               	clrf	ISR@ucTimer1sCnt
  4138                           
  4139                           ;common.c: 300: if(uiBigTimer > 0)
  4140  03C5  0877               	movf	_uiBigTimer+1,w
  4141  03C6  0476               	iorwf	_uiBigTimer,w
  4142  03C7  1903               	skipnz
  4143  03C8  2BCF               	goto	i1l1708
  4144                           
  4145                           ;common.c: 301: uiBigTimer--;
  4146  03C9  3001               	movlw	1
  4147  03CA  02F6               	subwf	_uiBigTimer,f
  4148  03CB  3000               	movlw	0
  4149  03CC  1C03               	skipc
  4150  03CD  03F7               	decf	_uiBigTimer+1,f
  4151  03CE  02F7               	subwf	_uiBigTimer+1,f
  4152  03CF                     i1l1708:	
  4153                           
  4154                           ;common.c: 303: if(uiSmallTimer)
  4155  03CF  0839               	movf	_uiSmallTimer+1,w
  4156  03D0  0438               	iorwf	_uiSmallTimer,w
  4157  03D1  1903               	skipnz
  4158  03D2  2BD9               	goto	i1l1709
  4159                           
  4160                           ;common.c: 304: uiSmallTimer--;
  4161  03D3  3001               	movlw	1
  4162  03D4  02B8               	subwf	_uiSmallTimer,f
  4163  03D5  3000               	movlw	0
  4164  03D6  1C03               	skipc
  4165  03D7  03B9               	decf	_uiSmallTimer+1,f
  4166  03D8  02B9               	subwf	_uiSmallTimer+1,f
  4167  03D9                     i1l1709:	
  4168                           
  4169                           ;common.c: 306: if(uiTwentySecondsTimer)
  4170  03D9  083B               	movf	_uiTwentySecondsTimer+1,w
  4171  03DA  043A               	iorwf	_uiTwentySecondsTimer,w
  4172  03DB  1903               	skipnz
  4173  03DC  2BE3               	goto	i1l3837
  4174                           
  4175                           ;common.c: 307: uiTwentySecondsTimer--;
  4176  03DD  3001               	movlw	1
  4177  03DE  02BA               	subwf	_uiTwentySecondsTimer,f
  4178  03DF  3000               	movlw	0
  4179  03E0  1C03               	skipc
  4180  03E1  03BB               	decf	_uiTwentySecondsTimer+1,f
  4181  03E2  02BB               	subwf	_uiTwentySecondsTimer+1,f
  4182  03E3                     i1l3837:	
  4183                           
  4184                           ;common.c: 308: }
  4185                           ;common.c: 309: }
  4186                           ;common.c: 311: if(ADIF)
  4187  03E3  1D0D               	btfss	13,2
  4188  03E4  2C0C               	goto	i1l1716
  4189  03E5  3001               	movlw	1
  4190                           
  4191                           ;common.c: 312: {
  4192                           ;common.c: 313: ADIF=0;
  4193  03E6  110D               	bcf	13,2
  4194                           
  4195                           ;common.c: 314: setAD_ConvertFlag(1);
  4196  03E7  241E  118A         	fcall	i1_setAD_ConvertFlag
  4197                           
  4198                           ;common.c: 315: adc_original_value = adc_get();
  4199  03E9  2413  118A         	fcall	_adc_get
  4200  03EB  0871               	movf	?_adc_get+1,w
  4201  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  4202  03ED  00B3               	movwf	_adc_original_value+1
  4203  03EE  0870               	movf	?_adc_get,w
  4204  03EF  00B2               	movwf	_adc_original_value
  4205                           
  4206                           ;common.c: 316: if(sampleChannelSelect == 4)
  4207  03F0  085B               	movf	_sampleChannelSelect,w
  4208  03F1  3A04               	xorlw	4
  4209  03F2  1D03               	skipz
  4210  03F3  2BFC               	goto	i1l3849
  4211                           
  4212                           ;common.c: 317: adc_original_CH4_value = adc_get();
  4213  03F4  2413  118A         	fcall	_adc_get
  4214  03F6  0871               	movf	?_adc_get+1,w
  4215  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  4216  03F8  00B1               	movwf	_adc_original_CH4_value+1
  4217  03F9  0870               	movf	?_adc_get,w
  4218  03FA  00B0               	movwf	_adc_original_CH4_value
  4219  03FB  2C0C               	goto	i1l1716
  4220  03FC                     i1l3849:	
  4221                           
  4222                           ;common.c: 318: else if(sampleChannelSelect == 1)
  4223  03FC  0B5B               	decfsz	_sampleChannelSelect,w
  4224  03FD  2C06               	goto	i1l3853
  4225                           
  4226                           ;common.c: 319: adc_original_CH1_value = adc_get();
  4227  03FE  2413  118A         	fcall	_adc_get
  4228  0400  0871               	movf	?_adc_get+1,w
  4229  0401  1283               	bcf	3,5	;RP0=0, select bank0
  4230  0402  00AF               	movwf	_adc_original_CH1_value+1
  4231  0403  0870               	movf	?_adc_get,w
  4232  0404  00AE               	movwf	_adc_original_CH1_value
  4233  0405  2C0C               	goto	i1l1716
  4234  0406                     i1l3853:	
  4235                           
  4236                           ;common.c: 320: else
  4237                           ;common.c: 321: adc_original_CH14_value = adc_get();
  4238  0406  2413               	fcall	_adc_get
  4239  0407  0871               	movf	?_adc_get+1,w
  4240  0408  1283               	bcf	3,5	;RP0=0, select bank0
  4241  0409  00AD               	movwf	_adc_original_CH14_value+1
  4242  040A  0870               	movf	?_adc_get,w
  4243  040B  00AC               	movwf	_adc_original_CH14_value
  4244  040C                     i1l1716:	
  4245  040C  0875               	movf	??_ISR+1,w
  4246  040D  008A               	movwf	10
  4247  040E  0E74               	swapf	??_ISR^(0+-128),w
  4248  040F  0083               	movwf	3
  4249  0410  0EFE               	swapf	126,f
  4250  0411  0E7E               	swapf	126,w
  4251  0412  0009               	retfie
  4252  0413                     __end_of_ISR:	
  4253  0413                     __ptext614:	
  4254 ;; =============== function i1_setAD_ConvertFlag ends ============
  4255                           
  4256                           
  4257 ;; *************** function _adc_get *****************
  4258 ;; Defined at:
  4259 ;;		line 105 in file "C:\190604\AK7030-OTP\periph.c"
  4260 ;; Parameters:    Size  Location     Type
  4261 ;;		None
  4262 ;; Auto vars:     Size  Location     Type
  4263 ;;  val             2    2[COMMON] unsigned int 
  4264 ;; Return value:  Size  Location     Type
  4265 ;;                  2    0[COMMON] unsigned int 
  4266 ;; Registers used:
  4267 ;;		wreg
  4268 ;; Tracked objects:
  4269 ;;		On entry : 60/0
  4270 ;;		On exit  : 60/20
  4271 ;;		Unchanged: FFF9F/0
  4272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4273 ;;      Params:         2       0       0       0       0
  4274 ;;      Locals:         2       0       0       0       0
  4275 ;;      Temps:          0       0       0       0       0
  4276 ;;      Totals:         4       0       0       0       0
  4277 ;;Total ram usage:        4 bytes
  4278 ;; Hardware stack levels used:    1
  4279 ;; This function calls:
  4280 ;;		Nothing
  4281 ;; This function is called by:
  4282 ;;		_ISR
  4283 ;; This function uses a non-reentrant model
  4284 ;;
  4285  0413                     _adc_get:	
  4286                           
  4287                           ;periph.c: 106: unsigned int val;
  4288                           ;periph.c: 107: val = (ADRESH<<8) | ADRESL;
  4289                           
  4290                           ; Regs used in _adc_get: [wreg]
  4291  0413  081E               	movf	30,w	;volatile
  4292  0414  00F3               	movwf	adc_get@val+1
  4293  0415  01F2               	clrf	adc_get@val
  4294  0416  1683               	bsf	3,5	;RP0=1, select bank1
  4295  0417  081E               	movf	30,w	;volatile
  4296  0418  04F2               	iorwf	adc_get@val,f
  4297                           
  4298                           ;periph.c: 108: return val;
  4299  0419  0873               	movf	adc_get@val+1,w
  4300  041A  00F1               	movwf	?_adc_get+1
  4301  041B  0872               	movf	adc_get@val,w
  4302  041C  00F0               	movwf	?_adc_get
  4303  041D  0008               	return
  4304  041E                     __end_of_adc_get:	
  4305  041E                     __ptext613:	
  4306 ;; =============== function _ISR ends ============
  4307                           
  4308                           
  4309 ;; *************** function i1_setAD_ConvertFlag *****************
  4310 ;; Defined at:
  4311 ;;		line 72 in file "C:\190604\AK7030-OTP\common.c"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;  setAD_Conver    1    wreg     unsigned char 
  4314 ;; Auto vars:     Size  Location     Type
  4315 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  4316 ;; Return value:  Size  Location     Type
  4317 ;;		None               void
  4318 ;; Registers used:
  4319 ;;		wreg
  4320 ;; Tracked objects:
  4321 ;;		On entry : 60/0
  4322 ;;		On exit  : 60/0
  4323 ;;		Unchanged: FFF9F/0
  4324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4325 ;;      Params:         0       0       0       0       0
  4326 ;;      Locals:         1       0       0       0       0
  4327 ;;      Temps:          0       0       0       0       0
  4328 ;;      Totals:         1       0       0       0       0
  4329 ;;Total ram usage:        1 bytes
  4330 ;; Hardware stack levels used:    1
  4331 ;; This function calls:
  4332 ;;		Nothing
  4333 ;; This function is called by:
  4334 ;;		_ISR
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337  041E                     i1_setAD_ConvertFlag:	
  4338                           
  4339                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  4340                           ;i1setAD_ConvertFlag@flag stored from wreg
  4341  041E  00F0               	movwf	i1setAD_ConvertFlag@flag
  4342                           
  4343                           ;common.c: 73: adc_convert_flag = flag;
  4344  041F  00F9               	movwf	_adc_convert_flag
  4345  0420  0008               	return
  4346  0421                     __end_ofi1_setAD_ConvertFlag:	
  4347                           
  4348                           	psect	intentry
  4349  0004                     __pintentry:	
  4350                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  4351                           
  4352  0004                     interrupt_function:	
  4353  007E                     saved_w	set	btemp
  4354  0004  00FE               	movwf	btemp
  4355  0005  0E03               	swapf	3,w
  4356  0006  00F4               	movwf	??_ISR
  4357  0007  080A               	movf	10,w
  4358  0008  00F5               	movwf	??_ISR+1
  4359  0009  118A  2BB9         	ljmp	_ISR
  4360                           
  4361                           	psect	text615
  4362  0000                     __ptext615:	
  4363 ;; =============== function _adc_get ends ============
  4364                           
  4365  007E                     btemp	set	126	;btemp
  4366  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon Jun 17 09:35:08 2019

                       ??_clock_config 0056                                      pc 0002  
                                   _GO 00F9                                     fsr 0004  
                  ?_getAdOriginalValue 0056               ?_timer1_interrupt_config 0070  
                                  l703 0064                                    l712 007D  
                                  l831 0199                                    l807 0165  
                                  l680 0000                                    l752 00EF  
                                  l737 00ED                                    l907 029B  
                                  l852 01CC                                    l780 012B  
                                  l677 0000                                    l880 0243  
                                  _PA0 0028                                    _PA1 0029  
                                  _GIE 005F                                    _PB0 0030  
                                  _PA2 002A                                    _PB1 0031  
                                  _PA3 002B                                    _PB2 0032  
                                  _PA6 002E                                    _PA7 002F  
                                  _PB6 0036                                    _ISR 03B9  
                                  u915 0351                                    u925 0364  
                                  fsr0 0004                                    indf 0000  
               ??_startThreeHoursTimer 0056                                   S4661 0446  
                                 S4663 0454                                   S4665 0462  
                                 ?_ISR 0070                     __size_of_AD_Sample 0063  
               ?_getAdOriginalCh1Value 0056                                   l1600 0498  
                                 l4001 00A0                                   l1603 0000  
                                 l4011 00AB                                   l4003 0000  
                                 l1612 0000                                   l1701 0000  
                                 l1621 0000                                   l4101 012C  
                                 l4013 00B1                                   l4005 0000  
                                 l1606 0000                                   l2350 0000  
                                 l1615 0000                                   l4111 0135  
                                 l4103 012E                                   l4031 00DF  
                                 l4023 00C6                                   l4015 00B4  
                                 l4007 00A6                                   l1624 0000  
                                 l1640 035C                                   l1609 0000  
                                 l2361 0000                                   l2353 0000  
                                 l4113 0137                                   l4017 00B7  
                                 l4009 0000                                   l1618 0000  
                                 l2347 0000                                   l1627 0000  
                                 l4123 013D                                   l4107 0133  
                                 l4043 00F7                                   l4035 00EB  
                                 l4027 00D3                                   l4019 00BA  
                                 l4301 0207                                   l4221 019E  
                                 l4133 0143                                   l4037 00F0  
                                 l2367 0000                                   l1663 0000  
                                 l4311 0222                                   l4231 01A7  
                                 l4207 0186                                   l4143 0149  
                                 l4047 00F9                                   l4039 00F2  
                                 l1672 0000                                   l4401 0000  
                                 l4305 0000                                   l4241 01AD  
                                 l4225 01A3                                   l4217 018D  
                                 l4153 0152                                   l4049 00FB  
                                 l1666 0000                                   l1675 0000  
                                 l4403 02BB                                   l4315 0228  
                                 l4251 01B4                                   l4219 019C  
                                 l4171 016E                                   l4163 0159  
                                 l4059 0101                                   l4323 0232  
                                 l1669 0000                                   l3701 0000  
                                 l4421 0000                                   l4413 0000  
                                 l4341 0000                                   l4333 0252  
                                 l4325 0000                                   l4317 0000  
                                 l4309 021B                                   l4261 01BB  
                                 l4229 01A5                                   l4165 0167  
                                 l4093 011D                                   l4069 0107  
                                 l1678 0000                                   l3703 0000  
                                 l3711 0000                                   l4431 0000  
                                 l4423 0000                                   l4415 0000  
                                 l4407 02C7                                   l4343 0000  
                                 l4335 0000                                   l4327 0000  
                                 l4319 0000                                   l4263 01D0  
                                 l4175 0170                                   l4167 0169  
                                 l4079 010D                                   l3705 0000  
                                 l3713 0000                                   l3721 0000  
                                 l4433 0000                                   l4425 0000  
                                 l4417 0000                                   l4409 02C8  
                                 l4361 0270                                   l4345 0000  
                                 l4337 0000                                   l4329 024C  
                                 l4273 01D9                                   l4265 01D2  
                                 l4177 0172                                   l4089 0117  
                                 l3707 0000                                   l3715 0000  
                                 l3723 0000                                   l3731 0000  
                                 l4435 0000                                   l4427 0000  
                                 l4419 0000                                   l4363 0000  
                                 l4355 0263                                   l4347 0000  
                                 l4339 0000                                   l4275 01DB  
                                 l4187 0178                                   l4099 011F  
                                 l4443 02ED                                   l3709 0000  
                                 l3717 0000                                   l3725 0000  
                                 l3733 0000                                   l3741 0000  
                                 l3813 0000                                   l4429 0000  
                                 l4381 0000                                   l4365 0000  
                                 l4373 027A                                   l4349 025B  
                                 l4285 01E1                                   l4269 01D7  
                                 l4197 017E                                   l3719 0000  
                                 l3727 0000                                   l3735 0000  
                                 l3815 0000                                   l3903 0385  
                                 l3911 0000                                   l4439 02E2  
                                 l4391 02A6                                   l4383 028C  
                                 l4367 0000                                   l4359 026F  
                                 l4295 01E8                                   l3729 0000  
                                 l3737 0000                                   l3753 0000  
                                 l3809 0000                                   l3905 0000  
                                 l3913 0000                                   l4377 0286  
                                 l4369 0000                                   l3739 03AC  
                                 l3755 0000                                   l3763 0000  
                                 l3907 0000                                   l3923 031C  
                                 l4395 02B2                                   l4379 0287  
                                 l4299 01F6                                   l3931 0000  
                                 l3765 0000                                   l3861 0428  
                                 l3909 0000                                   l3925 0000  
                                 l3917 0000                                   l4397 02B3  
                                 l4389 0290                                   l3941 0000  
                                 l3933 0000                                   l3695 0000  
                                 l3759 0000                                   l3783 0000  
                                 l3871 034A                                   l3863 0000  
                                 l3927 0322                                   l3919 0000  
                                 l3943 0000                                   l3935 0000  
                                 l3697 0000                                   l3777 0000  
                                 l3961 005D                                   l3953 0000  
                                 l3945 0000                                   l3937 0000  
                                 l3699 0433                                   l3779 0000  
                                 l3795 0000                                   l3883 0000  
                                 l3867 0000                                   l3971 0071  
                                 l3955 0050                                   l3947 0042  
                                 l3939 0000                                   l3797 0000  
                                 l3893 0382                                   l3877 036F  
                                 l3981 0000                                   l3973 0072  
                                 l3965 0062                                   l3949 0000  
                                 l3887 037B                                   l3879 0000  
                                 l3991 0000                                   l3983 0080  
                                 l3967 0065                                   l3959 005C  
                                 _ADIE 046A                                   _ADIF 006A  
                                 l3897 0384                                   l3993 0000  
                                 l3977 0077                                   l3995 0093  
                                 l3987 008C                                   l3979 0079  
                                 l3989 008D                                   l3999 009F  
                                 _ADON 00F8                                   _PEIE 005E  
                 ??_getAdOriginalValue 0058                                   _main 000D  
                                 btemp 007E                _clearTwentySecondsTimer 0433  
                                 start 000B                ?_getAdOriginalCh14Value 0056  
                    main@ucTimerDelay1 004C                      main@ucTimerDelay2 004D  
                    main@ucTimerDelay3 004E                      main@ucTimerDelay4 004F  
                                ??_ISR 0074             __end_of_isPermitSampleTime 04CA  
                  _sampleChannelSelect 005B                 ??_getAdOriginaCh4Value 0058  
                                ?_main 0070                                  _DACR0 0088  
                                _CLKPR 0108                                  _T1CON 0010  
                      __end_of_adc_get 041E                                  _PAOD7 0C3F  
                                _PBOD6 0C46                                  _TMR1H 000F  
                                _TMR1L 000E                  setAD_ConvertFlag@flag 0056  
                                _timer 007A                                  pclath 000A  
                                status 0003                                  wtemp0 007E  
       __end_of_getAdOriginalCh14Value 04C5          __size_of_startTwelveHourTimer 0005  
                 __end_of_clrSampeTime 04D8                  __end_of_clearAllTimer 042D  
                         __end_of_main 030B                 __size_of_adc_test_init 0015  
                    __end_of_AD_Sample 0392                                 ??_main 005B  
                 _clearPinPortAndTimer 0421                                 _ADCON0 001F  
                               _ADCON1 009F                   __end_of_clock_config 049B  
                               _DACCON 0087                                 _ADRESH 001E  
                               _ADRESL 009E                                 _CLKPCE 0847  
                               i1l1615 0000                                 i1l2370 0000  
                               i1l1716 040C                                 i1l1708 03CF  
                               i1l1709 03D9                                 i1l3823 0000  
                               i1l3841 0000                                 i1l3825 0000  
                               i1l3851 0000                                 i1l3843 0000  
                               i1l3819 0000                                 i1l3853 0406  
                               i1l3845 0000                                 i1l3829 0000  
                               i1l3837 03E3                                 i1l3855 0000  
                               i1l3849 03FC                                 i1l3859 0000  
                     __end_of_dac_init 04CF              ??_clearTwentySecondsTimer 0056  
                               _TMR1IE 0460                                 _TMR1IF 0060  
                    _getAD_ConvertFlag 0328                      _setAD_ConvertFlag 032A  
                               _TRISA0 0428                                 _TRISA1 0429  
                               _TRISB0 0430                                 _TRISA2 042A  
                               _TRISB1 0431                                 _TRISA3 042B  
                               _TRISB2 0432                                 _TRISB3 0433  
                               _TRISB4 0434                                 _TRISA6 042E  
                               _TRISB5 0435                                 _TRISA7 042F  
                               _TRISB7 0437                          main@ucTimer1s 0048  
                   ?_getAD_ConvertFlag 0070                     ?_setAD_ConvertFlag 0070  
                     __end_of_op1_init 0479                       __end_of_op2_init 0493  
          ??_isFinishedThreeHoursTimer 0056          __size_of_clearThreeHoursTimer 0003  
                            ??_adc_get 0072                    ??_getAD_ConvertFlag 0056  
                  ??_setAD_ConvertFlag 0056                                 clrloop 0484  
                ?_clearPinPortAndTimer 0070                                 saved_w 007E  
              ??_clearTwelveHoursTimer 0056            ?_process_AD_Converter_Value 0070  
                        _adc_test_init 0397       __size_of_startTwentySecondsTimer 0004  
            __end_of_getAD_ConvertFlag 032A              __end_of_setAD_ConvertFlag 032F  
                   __size_of_adc_start 0003                         __pcstackCOMMON 0070  
                         __pidataBANK0 0000        __end_of_clearTwentySecondsTimer 0436  
                  main@ucTimerRightP5s 0051              _isFinishedThreeHoursTimer 04A2  
              ??_getAdOriginalCh1Value 0058                _adc_original_CH14_value 002C  
                __end_of_timer1_config 0483                         ?_adc_test_init 0056  
     __size_of_timer1_interrupt_config 0003                  __size_of_clrSampeTime 0002  
                           __pbssBANK0 0020           __size_ofi1_setAD_ConvertFlag 0003  
                           adc_get@val 0072                             __pmaintext 000D  
                           __pintentry 0004                    main@enumInteralStep 003F  
                            ?_dac_init 0070                 ??_clearPinPortAndTimer 0056  
                __size_of_clock_config 0008                                _OP1CON0 001B  
                              _OP1CON1 001C                                _OP1CON2 001D  
                              _OP2CON0 009B                                _OP2CON1 009C  
                              _OP2CON2 009D                           _clrSampeTime 04D6  
                    __end_of_adc_start 03AF                   _uiTwentySecondsTimer 003A  
                            ?_op1_init 0070                              ?_op2_init 0070  
                   _isPermitSampleTime 04C5                 _buffer_Sample_AD_Value 0020  
                   _adc_original_value 0032          __size_of_startThreeHoursTimer 0007  
           __size_of_getAD_ConvertFlag 0002             __size_of_setAD_ConvertFlag 0005  
                       main@ucTimer20s 0049            __size_of_getAdOriginalValue 0005  
                       main@ucTimerP3s 0050                    ?_isPermitSampleTime 0070  
                           _uiBigTimer 0076                           _clock_config 0493  
                              _adc_get 0413                    _multiFilterMaxValue 0034  
 __end_of_isFinishedTwentySecondsTimer 04AC  __size_of_isFinishedTwentySecondsTimer 0005  
         _isFinishedTwentySecondsTimer 04A7                    _multiFilterMinValue 0036  
                 ??_isPermitSampleTime 0056           __end_of_startTwelveHourTimer 04BB  
                           ??_dac_init 0056                              _AD_Sample 032F  
                         __size_of_ISR 005A          __size_of_getAdOriginaCh4Value 0005  
                      ??_adc_test_init 0057                             ??_op1_init 0056  
                           ??_op2_init 0056                _startTwentySecondsTimer 04CF  
                 end_of_initialization 0443                       main@ucLoaderStep 0043  
                           ?_AD_Sample 0070          ?_isFinishedTwentySecondsTimer 0070  
                 main@enumMainLoopStep 0040                     main@ucChannel4Type 0042  
         ??_isFinishedTwelveHoursTimer 0056                       _adc_convert_flag 0079  
               __size_of_clearAllTimer 0005           __end_of_clearThreeHoursTimer 0433  
               main@ucTimerADC1ZeroP5s 004A         __size_of_clearTwelveHoursTimer 0003  
              _timer1_interrupt_config 04D3          __end_of_clearTwelveHoursTimer 0430  
   __size_of_isFinishedThreeHoursTimer 0005                         AD_Sample@index 005A  
                     main@ucTimerX1P5s 0052                       main@ucTimerX2P5s 0053  
               main@ucTimerZeroPoint3s 0054                 main@ucTimerZeroPoint5s 0055  
                     main@ucTimerDelay 004B                        main@ucADC4_Step 0041  
  __size_of_isFinishedTwelveHoursTimer 0005                    i1_setAD_ConvertFlag 041E  
            ??_startTwentySecondsTimer 0056                    start_initialization 0436  
                          __end_of_ISR 0413               ?_clearTwentySecondsTimer 0070  
       __size_of_getAdOriginalCh1Value 0005          __end_of_getAdOriginalCh1Value 04C0  
             ??_getAdOriginalCh14Value 0058                   ?i1_setAD_ConvertFlag 0070  
                 _startTwelveHourTimer 04B6      __end_of_isFinishedThreeHoursTimer 04A7  
                   main@enumBranchStep 003E                          _clearAllTimer 0428  
                          __pdataBANK0 005B                            ??_AD_Sample 0058  
            ??_timer1_interrupt_config 0056                            __pbssCOMMON 0076  
                    __size_of_dac_init 0005                          __pcstackBANK0 0056  
       ??_isFinishedTwentySecondsTimer 0056                              _adc_start 03AC  
                    __size_of_op1_init 000B                      __size_of_op2_init 0008  
                ??i1_setAD_ConvertFlag 0070                  ?_startTwelveHourTimer 0070  
      __end_of_startTwentySecondsTimer 04D3                         ?_clearAllTimer 0070  
               __size_of_timer1_config 000A                   _clearThreeHoursTimer 0430  
         __end_of_startThreeHoursTimer 04A2                              __ptext600 04C5  
                            __ptext601 03AC                              __ptext610 0430  
                            __ptext602 048B                              __ptext611 042D  
                            __ptext603 046E                              __ptext612 03B9  
                            __ptext604 04CA                              __ptext613 041E  
                            __ptext605 0397                              __ptext614 0413  
                            __ptext606 04D3                              __ptext615 0000  
                            __ptext607 0479                              __ptext608 0493  
                            __ptext609 0433                              __ptext590 04A2  
                            __ptext591 049B                              __ptext583 030B  
                            __ptext592 04A7                              __ptext584 0421  
                            __ptext593 04AC                              __ptext585 032F  
                            __ptext594 04CF                              __ptext586 0428  
                            __ptext595 04B1                              __ptext587 0392  
                            __ptext596 04B6                              __ptext588 032A  
                            __ptext597 04BB                              __ptext589 0328  
                            __ptext598 04C0                              __ptext599 04D6  
                             ?_adc_get 0070                 _adc_original_CH1_value 002E  
               _adc_original_CH4_value 0030                              __pswtext1 0446  
                            __pswtext2 0454                              __pswtext3 0462  
   __end_of_isFinishedTwelveHoursTimer 04B6             _isFinishedTwelveHoursTimer 04B1  
                      ISR@ucTimer1sCnt 0078          __size_of_clearPinPortAndTimer 0007  
           __end_of_getAdOriginalValue 0397                             ?_adc_start 0070  
      __size_of_getAdOriginalCh14Value 0005                      interrupt_function 0004  
         __end_of_getAdOriginaCh4Value 04B1        __end_of_timer1_interrupt_config 04D6  
                ?_clearThreeHoursTimer 0070                   adc_test_init@channel 0058  
          __size_of_isPermitSampleTime 0005                           _uiSmallTimer 0038  
                __end_of_adc_test_init 03AC                          _timer1_config 0479  
         ??_process_AD_Converter_Value 005B                 ??_startTwelveHourTimer 0056  
                      ??_clearAllTimer 0056                 _getAdOriginalCh14Value 04C0  
                     __size_of_adc_get 000B    __size_of_process_AD_Converter_Value 001D  
                             _dac_init 04CA                       main@cTimer1s_806 003D  
                       ?_timer1_config 0070                               _op1_init 046E  
                             _op2_init 048B                            ??_adc_start 0056  
                 _startThreeHoursTimer 049B                  _clearTwelveHoursTimer 042D  
                        __size_of_main 02FE                               clear_ram 0483  
               ??_clearThreeHoursTimer 0056       __size_of_clearTwentySecondsTimer 0003  
                        ?_clrSampeTime 0070                   _getAdOriginaCh4Value 04AC  
                          _sampleTimes 003C                  ?_startThreeHoursTimer 0070  
                             intlevel1 0000                  _getAdOriginalCh1Value 04BB  
           ?_isFinishedThreeHoursTimer 0070                      main@ucLoaderStep1 0044  
                    main@ucLoaderStep2 0045                      main@ucLoaderStep3 0046  
                    main@ucLoaderStep4 0047                          ?_clock_config 0070  
             ?_startTwentySecondsTimer 0070                i1setAD_ConvertFlag@flag 0070  
                       ??_clrSampeTime 0056            ?_isFinishedTwelveHoursTimer 0070  
                ?_getAdOriginaCh4Value 0056                        ??_timer1_config 0056  
          __end_ofi1_setAD_ConvertFlag 0421     __end_of_process_AD_Converter_Value 0328  
           _process_AD_Converter_Value 030B                 ?_clearTwelveHoursTimer 0070  
                     adc_test_init@ref 0056           __end_of_clearPinPortAndTimer 0428  
                   _getAdOriginalValue 0392  
