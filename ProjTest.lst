

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Mon Nov 11 21:44:40 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	cinit,global,class=CODE,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,delta=2
    19                           	psect	text1231,local,class=CODE,delta=2
    20                           	psect	text1232,local,class=CODE,delta=2
    21                           	psect	text1233,local,class=CODE,delta=2
    22                           	psect	text1234,local,class=CODE,delta=2
    23                           	psect	text1239,local,class=CODE,delta=2
    24                           	psect	text1240,local,class=CODE,delta=2
    25                           	psect	text1241,local,class=CODE,delta=2
    26                           	psect	text1242,local,class=CODE,delta=2
    27                           	psect	text1243,local,class=CODE,delta=2
    28                           	psect	text1244,local,class=CODE,delta=2
    29                           	psect	text1245,local,class=CODE,delta=2
    30                           	psect	text1246,local,class=CODE,delta=2
    31                           	psect	text1247,local,class=CODE,delta=2
    32                           	psect	text1248,local,class=CODE,delta=2
    33                           	psect	text1250,local,class=CODE,delta=2
    34                           	psect	text1252,local,class=CODE,delta=2
    35                           	psect	text1253,local,class=CODE,delta=2
    36                           	psect	text1254,local,class=CODE,delta=2
    37                           	psect	text1255,local,class=CODE,delta=2
    38                           	psect	text1256,local,class=CODE,delta=2
    39                           	psect	text1257,local,class=CODE,delta=2
    40                           	psect	text1265,local,class=CODE,delta=2
    41                           	psect	text1266,local,class=CODE,delta=2
    42                           	psect	text1267,local,class=CODE,delta=2
    43                           	psect	intentry,global,class=CODE,delta=2
    44                           	psect	text1273,local,class=CODE,delta=2
    45                           	psect	pa_nodes,global,class=CODE,delta=2
    46                           	dabs	1,0x7E,2
    47  000A                     	;#
    48                           
    49                           	psect	config
    50  2000  0FFF               	dw	4095	;#
    51  2001  3FDE               	dw	16350	;#
    52  2002  3FF8               	dw	16376	;#
    53                           
    54                           	psect	idataBANK0
    55  0000                     __pidataBANK0:	
    56                           
    57                           	psect	idataBANK1
    58  0000                     __pidataBANK1:	
    59  001F                     _ADCON0	set	31
    60  001E                     _ADRESH	set	30
    61  0017                     _CCP1CON	set	23
    62  0015                     _CCPR1L	set	21
    63  0010                     _T1CON	set	16
    64  0012                     _T2CON	set	18
    65  000F                     _TMR1H	set	15
    66  000E                     _TMR1L	set	14
    67  006A                     _ADIF	set	106
    68  00F8                     _ADON	set	248
    69  005F                     _GIE	set	95
    70  00F9                     _GO	set	249
    71  0032                     _PB2	set	50
    72  0033                     _PB3	set	51
    73  0034                     _PB4	set	52
    74  0035                     _PB5	set	53
    75  005E                     _PEIE	set	94
    76  0060                     _TMR1IF	set	96
    77  009F                     _ADCON1	set	159
    78  009E                     _ADRESL	set	158
    79  0092                     _PR2	set	146
    80  046A                     _ADIE	set	1130
    81  0460                     _TMR1IE	set	1120
    82  0430                     _TRISB0	set	1072
    83  0431                     _TRISB1	set	1073
    84  0432                     _TRISB2	set	1074
    85  0433                     _TRISB3	set	1075
    86  0434                     _TRISB4	set	1076
    87  0435                     _TRISB5	set	1077
    88  0108                     _CLKPR	set	264
    89  0847                     _CLKPCE	set	2119
    90  0C42                     _PBOD2	set	3138
    91                           
    92                           	psect	cinit
    93  051D                     start_initialization:	
    94  051D  3048               	movlw	low __pbssBANK0
    95                           
    96                           ; Clear objects allocated to COMMON
    97  051E  01FB               	clrf	__pbssCOMMON& (0+127)
    98  051F  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
    99  0520  01FD               	clrf	(__pbssCOMMON+2)& (0+127)
   100                           
   101                           ; Clear objects allocated to BANK0
   102  0521  1383               	bcf	3,7	;select IRP bank0
   103  0522  0084               	movwf	4
   104  0523  306D               	movlw	low (__pbssBANK0+37)
   105  0524  118A  25BF  118A   	fcall	clear_ram
   106                           
   107                           ; Clear objects allocated to BANK1
   108  0527  30C9               	movlw	low __pbssBANK1
   109  0528  0084               	movwf	4
   110  0529  30E2               	movlw	low (__pbssBANK1+25)
   111  052A  118A  25BF  118A   	fcall	clear_ram
   112  052D  3090               	movlw	low __pbssBANK3
   113                           
   114                           ; Clear objects allocated to BANK3
   115  052E  1783               	bsf	3,7	;select IRP bank2
   116  052F  0084               	movwf	4
   117  0530  30B8               	movlw	low (__pbssBANK3+40)
   118  0531  118A  25BF         	fcall	clear_ram
   119                           
   120                           ; Initialize objects allocated to BANK1
   121  0533  1683               	bsf	3,5	;RP0=1, select bank1
   122                           
   123                           ;initializer for _sampleChannelSelect
   124  0534  300C               	movlw	12
   125  0535  00E2               	movwf	__pdataBANK1& (0+127)
   126                           
   127                           ; Initialize objects allocated to BANK0
   128  0536  1283               	bcf	3,5	;RP0=0, select bank0
   129                           
   130                           ;initializer for vPutSampleDataIntoTable@uiInitWidth
   131  0537  304B               	movlw	75
   132  0538  00ED               	movwf	__pdataBANK0& (0+127)
   133  0539                     end_of_initialization:	
   134                           ;End of C runtime variable initialization code
   135                           
   136  0539  0183               	clrf	3
   137  053A  118A  2A19         	ljmp	_main	;jump to C main() function
   138                           
   139                           	psect	bssCOMMON
   140  007B                     __pbssCOMMON:	
   141  007B                     vPutSampleDataIntoTable@ucChannelFirstLength:	
   142  007B                     	ds	1
   143  007C                     vPutSampleDataIntoTable@ucChannelFourteenthLength:	
   144  007C                     	ds	1
   145  007D                     vPutSampleDataIntoTable@ucChannelFourthLength:	
   146  007D                     	ds	1
   147                           
   148                           	psect	bssBANK0
   149  0048                     __pbssBANK0:	
   150  0048                     vPutSampleDataIntoTable@uiCalWidthArray:	
   151  0048                     	ds	8
   152  0050                     _uiTwentySecondsTimer:	
   153  0050                     	ds	2
   154  0052                     vPutSampleDataIntoTable@uiCalWidthCnt:	
   155  0052                     	ds	2
   156  0054                     ISR@ucTimer1sCnt:	
   157  0054                     	ds	1
   158  0055                     _adc_convert_flag:	
   159  0055                     	ds	1
   160  0056                     _sampleTimes:	
   161  0056                     	ds	1
   162  0057                     _timer:	
   163  0057                     	ds	1
   164  0058                     setPWM_Width@ucOldWidth:	
   165  0058                     	ds	1
   166  0059                     _uiSampleChannelFourth:	
   167  0059                     	ds	20
   168                           
   169                           	psect	dataBANK0
   170  006D                     __pdataBANK0:	
   171  006D                     vPutSampleDataIntoTable@uiInitWidth:	
   172  006D                     	ds	1
   173                           
   174                           	psect	bssBANK1
   175  00C9                     __pbssBANK1:	
   176  00C9                     _uiBigTimer:	
   177  00C9                     	ds	2
   178  00CB                     _uiOneHourTimer:	
   179  00CB                     	ds	2
   180  00CD                     _uiSmallTimer:	
   181  00CD                     	ds	2
   182  00CF                     _uiTwentyMinTimer:	
   183  00CF                     	ds	2
   184  00D1                     main@ucDelay1s:	
   185  00D1                     	ds	2
   186  00D3                     main@uiTimerOneP5s:	
   187  00D3                     	ds	2
   188  00D5                     main@uiTimerThreeP5s:	
   189  00D5                     	ds	2
   190  00D7                     main@uiTimerTwoP5s:	
   191  00D7                     	ds	2
   192  00D9                     _bBigTimerStartFlag:	
   193  00D9                     	ds	1
   194  00DA                     _bOneHourTimerStartFlag:	
   195  00DA                     	ds	1
   196  00DB                     _bSmallTimerStartFlag:	
   197  00DB                     	ds	1
   198  00DC                     _bTwentyMinStartFlag:	
   199  00DC                     	ds	1
   200  00DD                     main@cTimerP5s_791:	
   201  00DD                     	ds	1
   202  00DE                     main@cTimerP5s_797:	
   203  00DE                     	ds	1
   204  00DF                     main@ucStep:	
   205  00DF                     	ds	1
   206  00E0                     main@ucTimerP3s:	
   207  00E0                     	ds	1
   208  00E1                     main@ucTimerP5s:	
   209  00E1                     	ds	1
   210                           
   211                           	psect	dataBANK1
   212  00E2                     __pdataBANK1:	
   213  00E2                     _sampleChannelSelect:	
   214  00E2                     	ds	1
   215                           
   216                           	psect	bssBANK3
   217  0190                     __pbssBANK3:	
   218  0190                     _uiSampleChannelFirst:	
   219  0190                     	ds	20
   220  01A4                     _uiSampleChannelFourteenth:	
   221  01A4                     	ds	20
   222                           
   223                           	psect	clrtext
   224  05BF                     clear_ram:	
   225                           ;	Called with FSR containing the base address, and
   226                           ;	W with the last address+1
   227                           
   228  05BF  0064               	clrwdt	;clear the watchdog before getting into this loop
   229  05C0                     clrloop:	
   230  05C0  0180               	clrf	0	;clear RAM location pointed to by FSR
   231  05C1  0A84               	incf	4,f	;increment pointer
   232  05C2  0604               	xorwf	4,w	;XOR with final address
   233  05C3  1903               	btfsc	3,2	;have we reached the end yet?
   234  05C4  3400               	retlw	0	;all done for this memory range, return
   235  05C5  0604               	xorwf	4,w	;XOR again to restore value
   236  05C6  2DC0               	goto	clrloop	;do the next byte
   237                           
   238                           	psect	cstackBANK1
   239  00A0                     __pcstackBANK1:	
   240  00A0                     ??_clearTwelveHoursTimer:	
   241  00A0                     ??_clearThreeHoursTimer:	
   242                           ; 0 bytes @ 0x0
   243                           
   244  00A0                     ??_clock_config:	
   245                           ; 0 bytes @ 0x0
   246                           
   247  00A0                     ??_timer1_config:	
   248                           ; 0 bytes @ 0x0
   249                           
   250  00A0                     ??_timer1_interrupt_config:	
   251                           ; 0 bytes @ 0x0
   252                           
   253  00A0                     ?_adc_test_init:	
   254                           ; 0 bytes @ 0x0
   255                           
   256  00A0                     ?_startTwentyMinTimer:	
   257                           ; 0 bytes @ 0x0
   258                           
   259  00A0                     ??_adc_start:	
   260                           ; 0 bytes @ 0x0
   261                           
   262  00A0                     ??_isPermitSampleTime:	
   263                           ; 0 bytes @ 0x0
   264                           
   265  00A0                     ??_clrSampeTime:	
   266                           ; 0 bytes @ 0x0
   267                           
   268  00A0                     ??_isFinishedTwentyMinTimer:	
   269                           ; 0 bytes @ 0x0
   270                           
   271  00A0                     ??_clearTwentyMinTimer:	
   272                           ; 0 bytes @ 0x0
   273                           
   274  00A0                     ?_startTwelveHourTimer:	
   275                           ; 0 bytes @ 0x0
   276                           
   277  00A0                     ??_isFinishedTwelveHoursTimer:	
   278                           ; 0 bytes @ 0x0
   279                           
   280  00A0                     ?_startThreeHoursTimer:	
   281                           ; 0 bytes @ 0x0
   282                           
   283  00A0                     ??_isFinishedThreeHoursTimer:	
   284                           ; 0 bytes @ 0x0
   285                           
   286  00A0                     ?_startOneHoursTimer:	
   287                           ; 0 bytes @ 0x0
   288                           
   289  00A0                     ??_isFinishedOneHoursTimer:	
   290                           ; 0 bytes @ 0x0
   291                           
   292  00A0                     ??_AD_Sample:	
   293                           ; 0 bytes @ 0x0
   294                           
   295  00A0                     ??_initPB3:	
   296                           ; 0 bytes @ 0x0
   297                           
   298  00A0                     ??_setPB3:	
   299                           ; 0 bytes @ 0x0
   300                           
   301  00A0                     ??_initPB4:	
   302                           ; 0 bytes @ 0x0
   303                           
   304  00A0                     ??_setPB4:	
   305                           ; 0 bytes @ 0x0
   306                           
   307  00A0                     ??_initPB5:	
   308                           ; 0 bytes @ 0x0
   309                           
   310  00A0                     ??_setPB5:	
   311                           ; 0 bytes @ 0x0
   312                           
   313  00A0                     ??_initPB2_AsHighResistence:	
   314                           ; 0 bytes @ 0x0
   315                           
   316  00A0                     ?_pwm_start:	
   317                           ; 0 bytes @ 0x0
   318                           
   319  00A0                     ??_selectAdChannel:	
   320                           ; 0 bytes @ 0x0
   321                           
   322  00A0                     ??_reset:	
   323                           ; 0 bytes @ 0x0
   324                           
   325  00A0                     ??_getAD_ConvertFlag:	
   326                           ; 0 bytes @ 0x0
   327                           
   328  00A0                     ??_setAD_ConvertFlag:	
   329                           ; 0 bytes @ 0x0
   330                           
   331  00A0                     ?_Filter:	
   332                           ; 0 bytes @ 0x0
   333                           
   334  00A0                     initPB3@bValue:	
   335                           ; 2 bytes @ 0x0
   336                           
   337  00A0                     setPB3@bValue:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  00A0                     initPB4@bValue:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  00A0                     setPB4@bValue:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  00A0                     initPB5@bValue:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  00A0                     setPB5@bValue:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  00A0                     pwm_start@ucPulseFrequency:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  00A0                     setAD_ConvertFlag@flag:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  00A0                     adc_test_init@ref:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  00A0                     Filter@tmpValue:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  00A0                     startTwelveHourTimer@uiSetTime:	
   365                           ; 2 bytes @ 0x0
   366                           
   367  00A0                     startThreeHoursTimer@uiSetTime:	
   368                           ; 2 bytes @ 0x0
   369                           
   370  00A0                     startOneHoursTimer@uiSetTime:	
   371                           ; 2 bytes @ 0x0
   372                           
   373  00A0                     startTwentyMinTimer@uiSetValue:	
   374                           ; 2 bytes @ 0x0
   375                           
   376                           
   377                           ; 2 bytes @ 0x0
   378  00A0                     	ds	1
   379  00A1                     ??_adc_test_init:	
   380  00A1                     ??_pwm_start:	
   381                           ; 0 bytes @ 0x1
   382                           
   383  00A1                     ??_initPin:	
   384                           ; 0 bytes @ 0x1
   385                           
   386  00A1                     ??_setPinInitVaule:	
   387                           ; 0 bytes @ 0x1
   388                           
   389  00A1                     pwm_start@ucPulseWidth:	
   390                           ; 0 bytes @ 0x1
   391                           
   392                           
   393                           ; 1 bytes @ 0x1
   394  00A1                     	ds	1
   395  00A2                     ??_startTwentyMinTimer:	
   396  00A2                     ??_startTwelveHourTimer:	
   397                           ; 0 bytes @ 0x2
   398                           
   399  00A2                     ??_startThreeHoursTimer:	
   400                           ; 0 bytes @ 0x2
   401                           
   402  00A2                     ??_startOneHoursTimer:	
   403                           ; 0 bytes @ 0x2
   404                           
   405  00A2                     ??_Filter:	
   406                           ; 0 bytes @ 0x2
   407                           
   408  00A2                     adc_test_init@channel:	
   409                           ; 0 bytes @ 0x2
   410                           
   411                           
   412                           ; 1 bytes @ 0x2
   413  00A2                     	ds	1
   414  00A3                     ??_process_AD_Converter_Value:	
   415                           
   416                           ; 0 bytes @ 0x3
   417  00A3                     	ds	3
   418  00A6                     Filter@filter_buf:	
   419                           
   420                           ; 20 bytes @ 0x6
   421  00A6                     	ds	20
   422  00BA                     Filter@filter_temp:	
   423                           
   424                           ; 2 bytes @ 0x1A
   425  00BA                     	ds	2
   426  00BC                     Filter@filter_sum:	
   427                           
   428                           ; 2 bytes @ 0x1C
   429  00BC                     	ds	2
   430  00BE                     Filter@cir:	
   431                           
   432                           ; 2 bytes @ 0x1E
   433  00BE                     	ds	2
   434  00C0                     Filter@j:	
   435                           
   436                           ; 1 bytes @ 0x20
   437  00C0                     	ds	1
   438  00C1                     Filter@i:	
   439                           
   440                           ; 1 bytes @ 0x21
   441  00C1                     	ds	1
   442  00C2                     ?_getAdOriginalCh13Value:	
   443                           
   444                           ; 2 bytes @ 0x22
   445  00C2                     	ds	2
   446  00C4                     ??_getAdOriginalCh13Value:	
   447  00C4                     ??_main:	
   448                           ; 0 bytes @ 0x24
   449                           
   450                           
   451                           ; 0 bytes @ 0x24
   452  00C4                     	ds	1
   453  00C5                     main@ucChValue:	
   454                           
   455                           ; 2 bytes @ 0x25
   456  00C5                     	ds	2
   457  00C7                     main@uiCh13Value:	
   458                           
   459                           ; 2 bytes @ 0x27
   460  00C7                     	ds	2
   461                           
   462                           	psect	cstackCOMMON
   463  0070                     __pcstackCOMMON:	
   464  0070                     ?_clearTwelveHoursTimer:	
   465  0070                     ?_clearThreeHoursTimer:	
   466                           ; 0 bytes @ 0x0
   467                           
   468  0070                     ?_clock_config:	
   469                           ; 0 bytes @ 0x0
   470                           
   471  0070                     ?_timer1_config:	
   472                           ; 0 bytes @ 0x0
   473                           
   474  0070                     ?_timer1_interrupt_config:	
   475                           ; 0 bytes @ 0x0
   476                           
   477  0070                     ?_adc_start:	
   478                           ; 0 bytes @ 0x0
   479                           
   480  0070                     ?_process_AD_Converter_Value:	
   481                           ; 0 bytes @ 0x0
   482                           
   483  0070                     ?_clrSampeTime:	
   484                           ; 0 bytes @ 0x0
   485                           
   486  0070                     ?_clearTwentyMinTimer:	
   487                           ; 0 bytes @ 0x0
   488                           
   489  0070                     ?_AD_Sample:	
   490                           ; 0 bytes @ 0x0
   491                           
   492  0070                     ?_initPB3:	
   493                           ; 0 bytes @ 0x0
   494                           
   495  0070                     ?_setPB3:	
   496                           ; 0 bytes @ 0x0
   497                           
   498  0070                     ?_initPB4:	
   499                           ; 0 bytes @ 0x0
   500                           
   501  0070                     ?_setPB4:	
   502                           ; 0 bytes @ 0x0
   503                           
   504  0070                     ?_initPB5:	
   505                           ; 0 bytes @ 0x0
   506                           
   507  0070                     ?_setPB5:	
   508                           ; 0 bytes @ 0x0
   509                           
   510  0070                     ?_initPB2_AsHighResistence:	
   511                           ; 0 bytes @ 0x0
   512                           
   513  0070                     ?_initPin:	
   514                           ; 0 bytes @ 0x0
   515                           
   516  0070                     ?_setPinInitVaule:	
   517                           ; 0 bytes @ 0x0
   518                           
   519  0070                     ?_selectAdChannel:	
   520                           ; 0 bytes @ 0x0
   521                           
   522  0070                     ?_reset:	
   523                           ; 0 bytes @ 0x0
   524                           
   525  0070                     ?_setPWM_Width:	
   526                           ; 0 bytes @ 0x0
   527                           
   528  0070                     ??_setPWM_Width:	
   529                           ; 0 bytes @ 0x0
   530                           
   531  0070                     ?_setAD_ConvertFlag:	
   532                           ; 0 bytes @ 0x0
   533                           
   534  0070                     ?_ISR:	
   535                           ; 0 bytes @ 0x0
   536                           
   537  0070                     ?i1_setAD_ConvertFlag:	
   538                           ; 0 bytes @ 0x0
   539                           
   540  0070                     ??i1_setAD_ConvertFlag:	
   541                           ; 0 bytes @ 0x0
   542                           
   543  0070                     ?_isPermitSampleTime:	
   544                           ; 0 bytes @ 0x0
   545                           
   546  0070                     ?_isFinishedTwentyMinTimer:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ?_isFinishedTwelveHoursTimer:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ?_isFinishedThreeHoursTimer:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ?_isFinishedOneHoursTimer:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     ?_getAD_ConvertFlag:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ?_adc_get:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ?_main:	
   565                           ; 2 bytes @ 0x0
   566                           
   567  0070                     ?i1_Filter:	
   568                           ; 2 bytes @ 0x0
   569                           
   570  0070                     setPWM_Width@ucWidth:	
   571                           ; 2 bytes @ 0x0
   572                           
   573  0070                     i1setAD_ConvertFlag@flag:	
   574                           ; 1 bytes @ 0x0
   575                           
   576                           
   577                           ; 1 bytes @ 0x0
   578  0070                     	ds	2
   579  0072                     ??_adc_get:	
   580  0072                     ??i1_Filter:	
   581                           ; 0 bytes @ 0x2
   582                           
   583  0072                     adc_get@val:	
   584                           ; 0 bytes @ 0x2
   585                           
   586                           
   587                           ; 2 bytes @ 0x2
   588  0072                     	ds	4
   589  0076                     ?_vPutSampleDataIntoTable:	
   590  0076                     vPutSampleDataIntoTable@uiSampleData:	
   591                           ; 0 bytes @ 0x6
   592                           
   593                           
   594                           ; 2 bytes @ 0x6
   595  0076                     	ds	2
   596  0078                     vPutSampleDataIntoTable@channel:	
   597                           
   598                           ; 1 bytes @ 0x8
   599  0078                     	ds	1
   600  0079                     ??_vPutSampleDataIntoTable:	
   601                           
   602                           ; 0 bytes @ 0x9
   603  0079                     	ds	2
   604                           
   605                           	psect	cstackBANK0
   606  0020                     __pcstackBANK0:	
   607  0020                     i1Filter@filter_buf:	
   608                           
   609                           ; 20 bytes @ 0x0
   610  0020                     	ds	20
   611  0034                     i1Filter@tmpValue:	
   612                           
   613                           ; 1 bytes @ 0x14
   614  0034                     	ds	1
   615  0035                     i1Filter@filter_temp:	
   616                           
   617                           ; 2 bytes @ 0x15
   618  0035                     	ds	2
   619  0037                     i1Filter@filter_sum:	
   620                           
   621                           ; 2 bytes @ 0x17
   622  0037                     	ds	2
   623  0039                     i1Filter@cir:	
   624                           
   625                           ; 2 bytes @ 0x19
   626  0039                     	ds	2
   627  003B                     i1Filter@j:	
   628                           
   629                           ; 1 bytes @ 0x1B
   630  003B                     	ds	1
   631  003C                     i1Filter@i:	
   632                           
   633                           ; 1 bytes @ 0x1C
   634  003C                     	ds	1
   635  003D                     vPutSampleDataIntoTable@uiSum:	
   636                           
   637                           ; 2 bytes @ 0x1D
   638  003D                     	ds	2
   639  003F                     vPutSampleDataIntoTable@uiCalWidth:	
   640                           
   641                           ; 2 bytes @ 0x1F
   642  003F                     	ds	2
   643  0041                     vPutSampleDataIntoTable@ucIndex:	
   644                           
   645                           ; 1 bytes @ 0x21
   646  0041                     	ds	1
   647  0042                     vPutSampleDataIntoTable@i:	
   648                           
   649                           ; 2 bytes @ 0x22
   650  0042                     	ds	2
   651  0044                     ??_ISR:	
   652                           
   653                           ; 0 bytes @ 0x24
   654  0044                     	ds	4
   655                           
   656                           	psect	maintext
   657  0219                     __pmaintext:	
   658 ;;Data sizes: Strings 0, constant 0, data 2, bss 105, persistent 0 stack 0
   659 ;;Auto spaces:   Size  Autos    Used
   660 ;; COMMON          14     11      14
   661 ;; BANK0           80     40      78
   662 ;; BANK1           80     41      67
   663 ;; BANK3           96      0      40
   664 ;; BANK2           96      0       0
   665 ;;
   666 ;; Pointer list with targets:
   667 ;; ?i1_Filter	unsigned int  size(1) Largest target is 0
   668 ;;
   669 ;; i1Filter@tmpValue	PTR int  size(1) Largest target is 20
   670 ;;		 -> uiSampleChannelFirst(BANK3[20]), 
   671 ;;
   672 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   673 ;;
   674 ;; ?_getAdOriginalCh13Value	unsigned int  size(1) Largest target is 0
   675 ;;
   676 ;; ?_Filter	unsigned int  size(1) Largest target is 0
   677 ;;
   678 ;; Filter@tmpValue	PTR int  size(2) Largest target is 20
   679 ;;		 -> uiSampleChannelFourteenth(BANK3[20]), uiSampleChannelFourth(BANK0[20]), uiSampleChannelFirst(BANK3[20]), 
   680 ;;
   681 ;;
   682 ;; Critical Paths under _main in COMMON
   683 ;;
   684 ;;   None.
   685 ;;
   686 ;; Critical Paths under _ISR in COMMON
   687 ;;
   688 ;;   _ISR->_vPutSampleDataIntoTable
   689 ;;   _vPutSampleDataIntoTable->i1_Filter
   690 ;;
   691 ;; Critical Paths under _main in BANK0
   692 ;;
   693 ;;   None.
   694 ;;
   695 ;; Critical Paths under _ISR in BANK0
   696 ;;
   697 ;;   _ISR->_vPutSampleDataIntoTable
   698 ;;   _vPutSampleDataIntoTable->i1_Filter
   699 ;;
   700 ;; Critical Paths under _main in BANK1
   701 ;;
   702 ;;   _main->_getAdOriginalCh13Value
   703 ;;   _getAdOriginalCh13Value->_Filter
   704 ;;   _process_AD_Converter_Value->_adc_test_init
   705 ;;   _setPinInitVaule->_setPB3
   706 ;;   _setPinInitVaule->_setPB4
   707 ;;   _setPinInitVaule->_setPB5
   708 ;;   _initPin->_initPB3
   709 ;;   _initPin->_initPB4
   710 ;;   _initPin->_initPB5
   711 ;;
   712 ;; Critical Paths under _ISR in BANK1
   713 ;;
   714 ;;   None.
   715 ;;
   716 ;; Critical Paths under _main in BANK3
   717 ;;
   718 ;;   None.
   719 ;;
   720 ;; Critical Paths under _ISR in BANK3
   721 ;;
   722 ;;   None.
   723 ;;
   724 ;; Critical Paths under _main in BANK2
   725 ;;
   726 ;;   None.
   727 ;;
   728 ;; Critical Paths under _ISR in BANK2
   729 ;;
   730 ;;   None.
   731 ;;
   732 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   733 ;;
   734 ;;
   735 ;;Call Graph Tables:
   736 ;;
   737 ;; ---------------------------------------------------------------------------------
   738 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   739 ;; ---------------------------------------------------------------------------------
   740 ;; (0) _main                                                 5     5      0    1334
   741 ;;                                             36 BANK1      5     5      0
   742 ;;                            _initPin
   743 ;;                    _setPinInitVaule
   744 ;;                    _selectAdChannel
   745 ;;                       _clock_config
   746 ;;                      _timer1_config
   747 ;;            _timer1_interrupt_config
   748 ;;                      _adc_test_init
   749 ;;                _startTwentyMinTimer
   750 ;;                          _pwm_start
   751 ;;                          _adc_start
   752 ;;         _process_AD_Converter_Value
   753 ;;                 _isPermitSampleTime
   754 ;;                       _clrSampeTime
   755 ;;           _isFinishedTwentyMinTimer
   756 ;;             _getAdOriginalCh13Value
   757 ;;                             _setPB3
   758 ;;                             _setPB4
   759 ;;                             _setPB5
   760 ;;                _clearTwentyMinTimer
   761 ;;               _startTwelveHourTimer
   762 ;;         _isFinishedTwelveHoursTimer
   763 ;;              _clearTwelveHoursTimer
   764 ;;               _startThreeHoursTimer
   765 ;;          _isFinishedThreeHoursTimer
   766 ;;               _clearThreeHoursTimer
   767 ;;                 _startOneHoursTimer
   768 ;;            _isFinishedOneHoursTimer
   769 ;;                              _reset
   770 ;; ---------------------------------------------------------------------------------
   771 ;; (1) _getAdOriginalCh13Value                               2     0      2     620
   772 ;;                                             34 BANK1      2     0      2
   773 ;;                             _Filter
   774 ;; ---------------------------------------------------------------------------------
   775 ;; (1) _process_AD_Converter_Value                           0     0      0      75
   776 ;;                  _getAD_ConvertFlag
   777 ;;                  _setAD_ConvertFlag
   778 ;;                          _AD_Sample
   779 ;;                      _adc_test_init
   780 ;;                          _adc_start
   781 ;; ---------------------------------------------------------------------------------
   782 ;; (1) _setPinInitVaule                                      0     0      0      93
   783 ;;                             _setPB3
   784 ;;                             _setPB4
   785 ;;                             _setPB5
   786 ;; ---------------------------------------------------------------------------------
   787 ;; (1) _initPin                                              0     0      0      93
   788 ;;           _initPB2_AsHighResistence
   789 ;;                            _initPB3
   790 ;;                            _initPB4
   791 ;;                            _initPB5
   792 ;; ---------------------------------------------------------------------------------
   793 ;; (2) _AD_Sample                                            0     0      0       0
   794 ;; ---------------------------------------------------------------------------------
   795 ;; (2) _setAD_ConvertFlag                                    1     1      0      31
   796 ;;                                              0 BANK1      1     1      0
   797 ;; ---------------------------------------------------------------------------------
   798 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   799 ;; ---------------------------------------------------------------------------------
   800 ;; (2) _Filter                                              34    32      2     620
   801 ;;                                              0 BANK1     34    32      2
   802 ;; ---------------------------------------------------------------------------------
   803 ;; (1) _isFinishedOneHoursTimer                              0     0      0       0
   804 ;; ---------------------------------------------------------------------------------
   805 ;; (1) _startOneHoursTimer                                   2     0      2      31
   806 ;;                                              0 BANK1      2     0      2
   807 ;; ---------------------------------------------------------------------------------
   808 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   809 ;; ---------------------------------------------------------------------------------
   810 ;; (1) _startThreeHoursTimer                                 2     0      2      31
   811 ;;                                              0 BANK1      2     0      2
   812 ;; ---------------------------------------------------------------------------------
   813 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   814 ;; ---------------------------------------------------------------------------------
   815 ;; (1) _startTwelveHourTimer                                 2     0      2      31
   816 ;;                                              0 BANK1      2     0      2
   817 ;; ---------------------------------------------------------------------------------
   818 ;; (1) _clearTwentyMinTimer                                  0     0      0       0
   819 ;; ---------------------------------------------------------------------------------
   820 ;; (1) _isFinishedTwentyMinTimer                             0     0      0       0
   821 ;; ---------------------------------------------------------------------------------
   822 ;; (1) _clrSampeTime                                         0     0      0       0
   823 ;; ---------------------------------------------------------------------------------
   824 ;; (1) _isPermitSampleTime                                   0     0      0       0
   825 ;; ---------------------------------------------------------------------------------
   826 ;; (2) _adc_start                                            0     0      0       0
   827 ;; ---------------------------------------------------------------------------------
   828 ;; (1) _startTwentyMinTimer                                  2     0      2      31
   829 ;;                                              0 BANK1      2     0      2
   830 ;; ---------------------------------------------------------------------------------
   831 ;; (2) _adc_test_init                                        3     2      1      44
   832 ;;                                              0 BANK1      3     2      1
   833 ;; ---------------------------------------------------------------------------------
   834 ;; (1) _timer1_interrupt_config                              0     0      0       0
   835 ;; ---------------------------------------------------------------------------------
   836 ;; (1) _timer1_config                                        0     0      0       0
   837 ;; ---------------------------------------------------------------------------------
   838 ;; (1) _clock_config                                         0     0      0       0
   839 ;; ---------------------------------------------------------------------------------
   840 ;; (1) _reset                                                0     0      0       0
   841 ;; ---------------------------------------------------------------------------------
   842 ;; (1) _selectAdChannel                                      0     0      0       0
   843 ;; ---------------------------------------------------------------------------------
   844 ;; (1) _pwm_start                                            2     1      1      62
   845 ;;                                              0 BANK1      2     1      1
   846 ;; ---------------------------------------------------------------------------------
   847 ;; (2) _initPB2_AsHighResistence                             0     0      0       0
   848 ;; ---------------------------------------------------------------------------------
   849 ;; (1) _setPB5                                               1     1      0      31
   850 ;;                                              0 BANK1      1     1      0
   851 ;; ---------------------------------------------------------------------------------
   852 ;; (2) _initPB5                                              1     1      0      31
   853 ;;                                              0 BANK1      1     1      0
   854 ;; ---------------------------------------------------------------------------------
   855 ;; (1) _setPB4                                               1     1      0      31
   856 ;;                                              0 BANK1      1     1      0
   857 ;; ---------------------------------------------------------------------------------
   858 ;; (2) _initPB4                                              1     1      0      31
   859 ;;                                              0 BANK1      1     1      0
   860 ;; ---------------------------------------------------------------------------------
   861 ;; (1) _setPB3                                               1     1      0      31
   862 ;;                                              0 BANK1      1     1      0
   863 ;; ---------------------------------------------------------------------------------
   864 ;; (2) _initPB3                                              1     1      0      31
   865 ;;                                              0 BANK1      1     1      0
   866 ;; ---------------------------------------------------------------------------------
   867 ;; (1) _clearThreeHoursTimer                                 0     0      0       0
   868 ;; ---------------------------------------------------------------------------------
   869 ;; (1) _clearTwelveHoursTimer                                0     0      0       0
   870 ;; ---------------------------------------------------------------------------------
   871 ;; Estimated maximum stack depth 2
   872 ;; ---------------------------------------------------------------------------------
   873 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   874 ;; ---------------------------------------------------------------------------------
   875 ;; (3) _ISR                                                  4     4      0    2657
   876 ;;                                             36 BANK0      4     4      0
   877 ;;                i1_setAD_ConvertFlag
   878 ;;                            _adc_get
   879 ;;            _vPutSampleDataIntoTable
   880 ;; ---------------------------------------------------------------------------------
   881 ;; (4) _vPutSampleDataIntoTable                             12     9      3    2560
   882 ;;                                              6 COMMON     5     2      3
   883 ;;                                             29 BANK0      7     7      0
   884 ;;                           i1_Filter
   885 ;;                       _setPWM_Width
   886 ;;                            _adc_get (ARG)
   887 ;; ---------------------------------------------------------------------------------
   888 ;; (4) i1_setAD_ConvertFlag                                  1     1      0      73
   889 ;;                                              0 COMMON     1     1      0
   890 ;; ---------------------------------------------------------------------------------
   891 ;; (5) i1_Filter                                            35    33      2    2023
   892 ;;                                              0 COMMON     6     4      2
   893 ;;                                              0 BANK0     29    29      0
   894 ;; ---------------------------------------------------------------------------------
   895 ;; (4) _adc_get                                              4     2      2      24
   896 ;;                                              0 COMMON     4     2      2
   897 ;; ---------------------------------------------------------------------------------
   898 ;; (5) _setPWM_Width                                         1     1      0      66
   899 ;;                                              0 COMMON     1     1      0
   900 ;; ---------------------------------------------------------------------------------
   901 ;; Estimated maximum stack depth 5
   902 ;; ---------------------------------------------------------------------------------
   903 ;; Call Graph Graphs:
   904 ;; _main (ROOT)
   905 ;;   _initPin
   906 ;;     _initPB2_AsHighResistence
   907 ;;     _initPB3
   908 ;;     _initPB4
   909 ;;     _initPB5
   910 ;;   _setPinInitVaule
   911 ;;     _setPB3
   912 ;;     _setPB4
   913 ;;     _setPB5
   914 ;;   _selectAdChannel
   915 ;;   _clock_config
   916 ;;   _timer1_config
   917 ;;   _timer1_interrupt_config
   918 ;;   _adc_test_init
   919 ;;   _startTwentyMinTimer
   920 ;;   _pwm_start
   921 ;;   _adc_start
   922 ;;   _process_AD_Converter_Value
   923 ;;     _getAD_ConvertFlag
   924 ;;     _setAD_ConvertFlag
   925 ;;     _AD_Sample
   926 ;;     _adc_test_init
   927 ;;     _adc_start
   928 ;;   _isPermitSampleTime
   929 ;;   _clrSampeTime
   930 ;;   _isFinishedTwentyMinTimer
   931 ;;   _getAdOriginalCh13Value
   932 ;;     _Filter
   933 ;;   _setPB3
   934 ;;   _setPB4
   935 ;;   _setPB5
   936 ;;   _clearTwentyMinTimer
   937 ;;   _startTwelveHourTimer
   938 ;;   _isFinishedTwelveHoursTimer
   939 ;;   _clearTwelveHoursTimer
   940 ;;   _startThreeHoursTimer
   941 ;;   _isFinishedThreeHoursTimer
   942 ;;   _clearThreeHoursTimer
   943 ;;   _startOneHoursTimer
   944 ;;   _isFinishedOneHoursTimer
   945 ;;   _reset
   946 ;;
   947 ;; _ISR (ROOT)
   948 ;;   i1_setAD_ConvertFlag
   949 ;;   _adc_get
   950 ;;   _vPutSampleDataIntoTable
   951 ;;     i1_Filter
   952 ;;     _setPWM_Width
   953 ;;     _adc_get (ARG)
   954 ;;
   955 ;; Address spaces:
   956 ;;Name               Size   Autos  Total    Cost      Usage
   957 ;;BANK3               60      0      28      10       41.7%
   958 ;;BITBANK3            60      0       0       9        0.0%
   959 ;;SFR3                 0      0       0       4        0.0%
   960 ;;BITSFR3              0      0       0       4        0.0%
   961 ;;BANK2               60      0       0      12        0.0%
   962 ;;BITBANK2            60      0       0      11        0.0%
   963 ;;SFR2                 0      0       0       5        0.0%
   964 ;;BITSFR2              0      0       0       5        0.0%
   965 ;;SFR1                 0      0       0       2        0.0%
   966 ;;BITSFR1              0      0       0       2        0.0%
   967 ;;BANK1               50     29      43       8       83.8%
   968 ;;BITBANK1            50      0       0       7        0.0%
   969 ;;CODE                 0      0       0       0        0.0%
   970 ;;DATA                 0      0      CF       6        0.0%
   971 ;;ABS                  0      0      C7       3        0.0%
   972 ;;NULL                 0      0       0       0        0.0%
   973 ;;STACK                0      0       8       2        0.0%
   974 ;;BANK0               50     28      4E       5       97.5%
   975 ;;BITBANK0            50      0       0       4        0.0%
   976 ;;SFR0                 0      0       0       1        0.0%
   977 ;;BITSFR0              0      0       0       1        0.0%
   978 ;;COMMON               E      B       E       1      100.0%
   979 ;;BITCOMMON            E      0       0       0        0.0%
   980                           
   981                           
   982 ;; *************** function _main *****************
   983 ;; Defined at:
   984 ;;		line 593 in file "D:\develop\190625\AK7030-OTP\main.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;		None
   987 ;; Auto vars:     Size  Location     Type
   988 ;;  ucChValue       2   37[BANK1 ] unsigned int 
   989 ;;  uiCh13Value     2   39[BANK1 ] unsigned int 
   990 ;; Return value:  Size  Location     Type
   991 ;;                  2  748[COMMON] int 
   992 ;; Registers used:
   993 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   994 ;; Tracked objects:
   995 ;;		On entry : 17F/0
   996 ;;		On exit  : 60/20
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   999 ;;      Params:         0       0       0       0       0
  1000 ;;      Locals:         0       0       4       0       0
  1001 ;;      Temps:          0       0       1       0       0
  1002 ;;      Totals:         0       0       5       0       0
  1003 ;;Total ram usage:        5 bytes
  1004 ;; Hardware stack levels required when called:    5
  1005 ;; This function calls:
  1006 ;;		_initPin
  1007 ;;		_setPinInitVaule
  1008 ;;		_selectAdChannel
  1009 ;;		_clock_config
  1010 ;;		_timer1_config
  1011 ;;		_timer1_interrupt_config
  1012 ;;		_adc_test_init
  1013 ;;		_startTwentyMinTimer
  1014 ;;		_pwm_start
  1015 ;;		_adc_start
  1016 ;;		_process_AD_Converter_Value
  1017 ;;		_isPermitSampleTime
  1018 ;;		_clrSampeTime
  1019 ;;		_isFinishedTwentyMinTimer
  1020 ;;		_getAdOriginalCh13Value
  1021 ;;		_setPB3
  1022 ;;		_setPB4
  1023 ;;		_setPB5
  1024 ;;		_clearTwentyMinTimer
  1025 ;;		_startTwelveHourTimer
  1026 ;;		_isFinishedTwelveHoursTimer
  1027 ;;		_clearTwelveHoursTimer
  1028 ;;		_startThreeHoursTimer
  1029 ;;		_isFinishedThreeHoursTimer
  1030 ;;		_clearThreeHoursTimer
  1031 ;;		_startOneHoursTimer
  1032 ;;		_isFinishedOneHoursTimer
  1033 ;;		_reset
  1034 ;; This function is called by:
  1035 ;;		Startup code after reset
  1036 ;; This function uses a non-reentrant model
  1037 ;;
  1038  0219                     _main:	
  1039                           
  1040                           ;main.c: 594: enum systemStep {
  1041                           ;main.c: 595: INIT_STEP = 0,
  1042                           ;main.c: 596: START_UP_PWM_STEP,
  1043                           ;main.c: 597: CHECK_10_HOUR_TIMER_STEP,
  1044                           ;main.c: 598: STARTUP_3_HOUR_TIMER_STEP,
  1045                           ;main.c: 599: CHECK_3_HOUR_TIMER_STEP,
  1046                           ;main.c: 600: STARTUP_1_HOUR_TIMER_STEP,
  1047                           ;main.c: 601: CHECK_1_HOUR_TIMER_STEP,
  1048                           ;main.c: 602: READY_FOR_RESET_STEP = 99,
  1049                           ;main.c: 603: DELAY_ONE_SECOND_FOR_PWM,
  1050                           ;main.c: 604: MEET_RESET_CONDITION_STEP,
  1051                           ;main.c: 605: RESET_STEP,
  1052                           ;main.c: 606: };
  1053                           ;main.c: 608: static enum systemStep ucStep = INIT_STEP;
  1054                           
  1055                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1056  0219  118A  24F5  118A   	fcall	_initPin
  1057                           
  1058                           ;main.c: 622: setPinInitVaule();
  1059  021C  118A  24CC  118A   	fcall	_setPinInitVaule
  1060                           
  1061                           ;main.c: 623: selectAdChannel();
  1062  021F  118A  25E3  118A   	fcall	_selectAdChannel
  1063                           
  1064                           ;main.c: 625: clock_config();
  1065  0222  118A  25C7  118A   	fcall	_clock_config
  1066                           
  1067                           ;main.c: 626: timer1_config();
  1068  0225  118A  25B5  118A   	fcall	_timer1_config
  1069                           
  1070                           ;main.c: 627: timer1_interrupt_config();
  1071  0228  118A  25E7  118A   	fcall	_timer1_interrupt_config
  1072                           
  1073                           ;main.c: 629: adc_test_init(12,3);
  1074  022B  3003               	movlw	3
  1075  022C  00A0               	movwf	?_adc_test_init^(0+128)
  1076  022D  300C               	movlw	12
  1077  022E  118A  24AD  118A   	fcall	_adc_test_init
  1078                           
  1079                           ;main.c: 641: startTwentyMinTimer( 60 );
  1080  0231  303C               	movlw	60
  1081  0232  00A0               	movwf	?_startTwentyMinTimer^(0+128)
  1082  0233  01A1               	clrf	(?_startTwentyMinTimer+1)^(0+128)
  1083  0234  118A  257C  118A   	fcall	_startTwentyMinTimer
  1084                           
  1085                           ;main.c: 642: pwm_start(75,249);
  1086  0237  30F9               	movlw	249
  1087  0238  00A0               	movwf	?_pwm_start^(0+128)
  1088  0239  304B               	movlw	75
  1089  023A  118A  253C  118A   	fcall	_pwm_start
  1090                           
  1091                           ;main.c: 643: _delay(1000);
  1092  023D  30F9               	movlw	249
  1093  023E  1683               	bsf	3,5	;RP0=1, select bank1
  1094  023F  00C4               	movwf	??_main^(0+128)
  1095  0240                     u2277:	
  1096  0240  0064               	clrwdt
  1097  0241  0BC4               	decfsz	??_main^(0+128),f
  1098  0242  2A40               	goto	u2277
  1099  0243  2A44               	nop2	;nop
  1100  0244  0064               	clrwdt
  1101                           
  1102                           ;main.c: 644: adc_start();
  1103  0245  118A  24C8  118A   	fcall	_adc_start
  1104  0248                     l4291:	
  1105  0248  0064               	clrwdt	;#
  1106                           
  1107                           ;main.c: 650: process_AD_Converter_Value();
  1108  0249  118A  2478  118A   	fcall	_process_AD_Converter_Value
  1109                           
  1110                           ;main.c: 655: if( isPermitSampleTime() )
  1111  024C  118A  25D4  118A   	fcall	_isPermitSampleTime
  1112  024F  3A00               	xorlw	0
  1113  0250  1903               	skipnz
  1114  0251  2A48               	goto	l4291
  1115                           
  1116                           ;main.c: 656: {
  1117                           ;main.c: 659: clrSampeTime();
  1118  0252  118A  25EA  118A   	fcall	_clrSampeTime
  1119                           
  1120                           ;main.c: 668: switch(ucStep)
  1121  0255  2B9B               	goto	l4451
  1122  0256                     l4299:	
  1123                           
  1124                           ;main.c: 672: {
  1125                           ;main.c: 677: static unsigned char ucTimerP3s = 0;
  1126                           ;main.c: 679: if( isFinishedTwentyMinTimer() )
  1127  0256  118A  25A0  118A   	fcall	_isFinishedTwentyMinTimer
  1128  0259  3A00               	xorlw	0
  1129  025A  1903               	skipnz
  1130  025B  2A60               	goto	l4305
  1131                           
  1132                           ;main.c: 680: {
  1133                           ;main.c: 681: ucStep = READY_FOR_RESET_STEP;
  1134  025C  3063               	movlw	99
  1135  025D  00DF               	movwf	main@ucStep^(0+128)
  1136                           
  1137                           ;main.c: 682: ucTimerP3s = 0;
  1138  025E  01E0               	clrf	main@ucTimerP3s^(0+128)
  1139                           
  1140                           ;main.c: 683: }
  1141  025F  2A48               	goto	l4291
  1142  0260                     l4305:	
  1143                           
  1144                           ;main.c: 684: else
  1145                           ;main.c: 685: {
  1146                           ;main.c: 686: if( getAdOriginalCh13Value() > 90 )
  1147  0260  118A  23C1  118A   	fcall	_getAdOriginalCh13Value
  1148  0263  3000               	movlw	0
  1149  0264  0243               	subwf	(?_getAdOriginalCh13Value+1)^(0+128),w
  1150  0265  305B               	movlw	91
  1151  0266  1903               	skipnz
  1152  0267  0242               	subwf	?_getAdOriginalCh13Value^(0+128),w
  1153  0268  1C03               	skipc
  1154  0269  2A6C               	goto	l4309
  1155                           
  1156                           ;main.c: 687: {
  1157                           ;main.c: 688: ucTimerP3s++;
  1158  026A  0AE0               	incf	main@ucTimerP3s^(0+128),f
  1159                           
  1160                           ;main.c: 689: }
  1161  026B  2A6D               	goto	l4311
  1162  026C                     l4309:	
  1163                           
  1164                           ;main.c: 690: else
  1165                           ;main.c: 691: ucTimerP3s = 0;
  1166  026C  01E0               	clrf	main@ucTimerP3s^(0+128)
  1167  026D                     l4311:	
  1168                           
  1169                           ;main.c: 693: if( ucTimerP3s >= 3)
  1170  026D  3003               	movlw	3
  1171  026E  0260               	subwf	main@ucTimerP3s^(0+128),w
  1172  026F  1C03               	skipc
  1173  0270  2A48               	goto	l4291
  1174                           
  1175                           ;main.c: 694: {
  1176                           ;main.c: 695: ucTimerP3s = 0;
  1177  0271  01E0               	clrf	main@ucTimerP3s^(0+128)
  1178                           
  1179                           ;main.c: 696: ucStep = START_UP_PWM_STEP;
  1180  0272  01DF               	clrf	main@ucStep^(0+128)
  1181  0273  0ADF               	incf	main@ucStep^(0+128),f
  1182  0274                     l758:	
  1183                           
  1184                           ;main.c: 697: }
  1185                           ;main.c: 699: }
  1186                           ;main.c: 703: break;
  1187  0274  2A48               	goto	l4291
  1188  0275                     l4317:	
  1189                           
  1190                           ;main.c: 707: {
  1191                           ;main.c: 717: setPB3(0);
  1192  0275  3000               	movlw	0
  1193  0276  118A  24D4  118A   	fcall	_setPB3
  1194                           
  1195                           ;main.c: 718: setPB4(1);
  1196  0279  3001               	movlw	1
  1197  027A  118A  24DF  118A   	fcall	_setPB4
  1198                           
  1199                           ;main.c: 719: setPB5(0);
  1200  027D  3000               	movlw	0
  1201  027E  118A  24EA  118A   	fcall	_setPB5
  1202                           
  1203                           ;main.c: 720: clearTwentyMinTimer();
  1204  0281  118A  25CF  118A   	fcall	_clearTwentyMinTimer
  1205                           
  1206                           ;main.c: 721: startTwelveHourTimer( 240);
  1207  0284  30F0               	movlw	240
  1208  0285  00A0               	movwf	?_startTwelveHourTimer^(0+128)
  1209  0286  01A1               	clrf	(?_startTwelveHourTimer+1)^(0+128)
  1210  0287  118A  256E  118A   	fcall	_startTwelveHourTimer
  1211                           
  1212                           ;main.c: 722: ucStep = CHECK_10_HOUR_TIMER_STEP;
  1213  028A  3002               	movlw	2
  1214  028B  2B97               	goto	L8
  1215  028C                     l4325:	
  1216                           ;main.c: 723: break;
  1217                           
  1218                           
  1219                           ;main.c: 727: {
  1220                           ;main.c: 732: static unsigned char ucTimerP5s = 0;
  1221                           ;main.c: 734: if( isFinishedTwelveHoursTimer () )
  1222  028C  118A  2595  118A   	fcall	_isFinishedTwelveHoursTimer
  1223  028F  3A00               	xorlw	0
  1224  0290  1903               	skipnz
  1225  0291  2A94               	goto	l4329
  1226  0292                     l4327:	
  1227                           
  1228                           ;main.c: 735: ucStep = READY_FOR_RESET_STEP;
  1229  0292  3063               	movlw	99
  1230  0293  2B97               	goto	L8
  1231  0294                     l4329:	
  1232                           
  1233                           ;main.c: 736: else
  1234                           ;main.c: 737: {
  1235                           ;main.c: 738: if( getAdOriginalCh13Value() < 200 )
  1236  0294  118A  23C1  118A   	fcall	_getAdOriginalCh13Value
  1237  0297  3000               	movlw	0
  1238  0298  0243               	subwf	(?_getAdOriginalCh13Value+1)^(0+128),w
  1239  0299  30C8               	movlw	200
  1240  029A  1903               	skipnz
  1241  029B  0242               	subwf	?_getAdOriginalCh13Value^(0+128),w
  1242  029C  1803               	skipnc
  1243  029D  2AA0               	goto	l4333
  1244                           
  1245                           ;main.c: 739: ucTimerP5s++;
  1246  029E  0AE1               	incf	main@ucTimerP5s^(0+128),f
  1247  029F  2AA1               	goto	l4335
  1248  02A0                     l4333:	
  1249                           
  1250                           ;main.c: 740: else
  1251                           ;main.c: 741: ucTimerP5s = 0;
  1252  02A0  01E1               	clrf	main@ucTimerP5s^(0+128)
  1253  02A1                     l4335:	
  1254                           
  1255                           ;main.c: 743: if( ucTimerP5s > 5)
  1256  02A1  3006               	movlw	6
  1257  02A2  0261               	subwf	main@ucTimerP5s^(0+128),w
  1258  02A3  1C03               	skipc
  1259  02A4  2A48               	goto	l4291
  1260  02A5  3003               	movlw	3
  1261                           
  1262                           ;main.c: 744: {
  1263                           ;main.c: 745: ucTimerP5s = 0;
  1264  02A6  01E1               	clrf	main@ucTimerP5s^(0+128)
  1265                           
  1266                           ;main.c: 746: ucStep = STARTUP_3_HOUR_TIMER_STEP;
  1267  02A7  2B97               	goto	L8
  1268  02A8                     l4341:	
  1269                           
  1270                           ;main.c: 754: {
  1271                           ;main.c: 755: clearTwelveHoursTimer();
  1272  02A8  118A  25DE  118A   	fcall	_clearTwelveHoursTimer
  1273                           
  1274                           ;main.c: 756: startThreeHoursTimer(180);
  1275  02AB  30B4               	movlw	180
  1276  02AC  00A0               	movwf	?_startThreeHoursTimer^(0+128)
  1277  02AD  01A1               	clrf	(?_startThreeHoursTimer+1)^(0+128)
  1278  02AE  118A  2560  118A   	fcall	_startThreeHoursTimer
  1279                           
  1280                           ;main.c: 757: ucStep = CHECK_3_HOUR_TIMER_STEP;
  1281  02B1  3004               	movlw	4
  1282  02B2  2B97               	goto	L8
  1283  02B3                     l4345:	
  1284                           ;main.c: 758: break;
  1285                           
  1286                           
  1287                           ;main.c: 762: {
  1288                           ;main.c: 763: static unsigned char ucTimerP5s = 0;
  1289                           ;main.c: 765: if( isFinishedThreeHoursTimer() )
  1290  02B3  118A  258A  118A   	fcall	_isFinishedThreeHoursTimer
  1291  02B6  3A00               	xorlw	0
  1292  02B7  1D03               	btfss	3,2
  1293  02B8  2A92               	goto	l4327
  1294                           
  1295                           ;main.c: 767: else
  1296                           ;main.c: 768: {
  1297                           ;main.c: 769: if( getAdOriginalCh13Value() < 85 )
  1298  02B9  118A  23C1  118A   	fcall	_getAdOriginalCh13Value
  1299  02BC  3000               	movlw	0
  1300  02BD  0243               	subwf	(?_getAdOriginalCh13Value+1)^(0+128),w
  1301  02BE  3055               	movlw	85
  1302  02BF  1903               	skipnz
  1303  02C0  0242               	subwf	?_getAdOriginalCh13Value^(0+128),w
  1304  02C1  1803               	skipnc
  1305  02C2  2AC5               	goto	l4353
  1306                           
  1307                           ;main.c: 770: ucTimerP5s++;
  1308  02C3  0ADD               	incf	main@cTimerP5s_791^(0+128),f
  1309  02C4  2AC6               	goto	l4355
  1310  02C5                     l4353:	
  1311                           
  1312                           ;main.c: 771: else
  1313                           ;main.c: 772: ucTimerP5s = 0;
  1314  02C5  01DD               	clrf	main@cTimerP5s_791^(0+128)
  1315  02C6                     l4355:	
  1316                           
  1317                           ;main.c: 774: if( ucTimerP5s > 5)
  1318  02C6  3006               	movlw	6
  1319  02C7  025D               	subwf	main@cTimerP5s_791^(0+128),w
  1320  02C8  1C03               	skipc
  1321  02C9  2A48               	goto	l4291
  1322  02CA  3005               	movlw	5
  1323                           
  1324                           ;main.c: 775: {
  1325                           ;main.c: 776: ucTimerP5s = 0;
  1326  02CB  01DD               	clrf	main@cTimerP5s_791^(0+128)
  1327                           
  1328                           ;main.c: 777: ucStep = STARTUP_1_HOUR_TIMER_STEP;
  1329  02CC  2B97               	goto	L8
  1330  02CD                     l4361:	
  1331                           
  1332                           ;main.c: 784: {
  1333                           ;main.c: 785: clearThreeHoursTimer();
  1334  02CD  118A  25D9  118A   	fcall	_clearThreeHoursTimer
  1335                           
  1336                           ;main.c: 786: startOneHoursTimer( 120 );
  1337  02D0  3078               	movlw	120
  1338  02D1  00A0               	movwf	?_startOneHoursTimer^(0+128)
  1339  02D2  01A1               	clrf	(?_startOneHoursTimer+1)^(0+128)
  1340  02D3  118A  2552  118A   	fcall	_startOneHoursTimer
  1341                           
  1342                           ;main.c: 787: setPB3(1);
  1343  02D6  3001               	movlw	1
  1344  02D7  118A  24D4  118A   	fcall	_setPB3
  1345                           
  1346                           ;main.c: 788: setPB4(0);
  1347  02DA  3000               	movlw	0
  1348  02DB  118A  24DF  118A   	fcall	_setPB4
  1349                           
  1350                           ;main.c: 789: setPB5(1);
  1351  02DE  3001               	movlw	1
  1352  02DF  118A  24EA  118A   	fcall	_setPB5
  1353                           
  1354                           ;main.c: 790: ucStep = CHECK_1_HOUR_TIMER_STEP;
  1355  02E2  3006               	movlw	6
  1356  02E3  2B70               	goto	L9
  1357  02E4                     l4373:	
  1358                           ;main.c: 791: break;
  1359                           
  1360                           
  1361                           ;main.c: 795: {
  1362                           ;main.c: 800: static unsigned int uiTimerOneP5s = 0;
  1363                           ;main.c: 801: static unsigned int uiTimerTwoP5s = 0;
  1364                           ;main.c: 802: static unsigned int uiTimerThreeP5s = 0;
  1365                           ;main.c: 804: unsigned int uiCh13Value = getAdOriginalCh13Value();
  1366  02E4  118A  23C1  118A   	fcall	_getAdOriginalCh13Value
  1367  02E7  0843               	movf	(?_getAdOriginalCh13Value+1)^(0+128),w
  1368  02E8  00C8               	movwf	(main@uiCh13Value+1)^(0+128)
  1369  02E9  0842               	movf	?_getAdOriginalCh13Value^(0+128),w
  1370  02EA  00C7               	movwf	main@uiCh13Value^(0+128)
  1371                           
  1372                           ;main.c: 807: if( isFinishedOneHoursTimer() )
  1373  02EB  118A  25AB  118A   	fcall	_isFinishedOneHoursTimer
  1374  02EE  3A00               	xorlw	0
  1375  02EF  1D03               	btfss	3,2
  1376  02F0  2A92               	goto	l4327
  1377                           
  1378                           ;main.c: 809: else
  1379                           ;main.c: 810: {
  1380                           ;main.c: 811: if( uiCh13Value > 100 )
  1381  02F1  3000               	movlw	0
  1382  02F2  0248               	subwf	(main@uiCh13Value+1)^(0+128),w
  1383  02F3  3065               	movlw	101
  1384  02F4  1903               	skipnz
  1385  02F5  0247               	subwf	main@uiCh13Value^(0+128),w
  1386  02F6  1C03               	skipc
  1387  02F7  2B07               	goto	l4389
  1388                           
  1389                           ;main.c: 812: {
  1390                           ;main.c: 813: if( uiTimerOneP5s <= 5 )
  1391  02F8  3000               	movlw	0
  1392  02F9  0254               	subwf	(main@uiTimerOneP5s+1)^(0+128),w
  1393  02FA  3006               	movlw	6
  1394  02FB  1903               	skipnz
  1395  02FC  0253               	subwf	main@uiTimerOneP5s^(0+128),w
  1396  02FD  1803               	skipnc
  1397  02FE  2B02               	goto	l4385
  1398                           
  1399                           ;main.c: 814: uiTimerOneP5s++;
  1400  02FF  0AD3               	incf	main@uiTimerOneP5s^(0+128),f
  1401  0300  1903               	skipnz
  1402  0301  0AD4               	incf	(main@uiTimerOneP5s+1)^(0+128),f
  1403  0302                     l4385:	
  1404                           
  1405                           ;main.c: 815: uiTimerTwoP5s = 0;
  1406  0302  01D7               	clrf	main@uiTimerTwoP5s^(0+128)
  1407  0303  01D8               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1408                           
  1409                           ;main.c: 816: uiTimerThreeP5s = 0;
  1410  0304  01D5               	clrf	main@uiTimerThreeP5s^(0+128)
  1411  0305  01D6               	clrf	(main@uiTimerThreeP5s+1)^(0+128)
  1412                           
  1413                           ;main.c: 817: }
  1414  0306  2B09               	goto	l4391
  1415  0307                     l4389:	
  1416                           
  1417                           ;main.c: 818: else
  1418                           ;main.c: 819: {
  1419                           ;main.c: 820: uiTimerOneP5s = 0;
  1420  0307  01D3               	clrf	main@uiTimerOneP5s^(0+128)
  1421  0308  01D4               	clrf	(main@uiTimerOneP5s+1)^(0+128)
  1422  0309                     l4391:	
  1423                           
  1424                           ;main.c: 821: }
  1425                           ;main.c: 824: if(uiTimerOneP5s > 5)
  1426  0309  3000               	movlw	0
  1427  030A  0254               	subwf	(main@uiTimerOneP5s+1)^(0+128),w
  1428  030B  3006               	movlw	6
  1429  030C  1903               	skipnz
  1430  030D  0253               	subwf	main@uiTimerOneP5s^(0+128),w
  1431                           
  1432                           ;main.c: 825: {
  1433                           ;main.c: 826: setPB3(0);
  1434  030E  3000               	movlw	0
  1435  030F  1C03               	skipc
  1436  0310  2B22               	goto	L10
  1437  0311  118A  24D4  118A   	fcall	_setPB3
  1438                           
  1439                           ;main.c: 827: setPB4(1);
  1440  0314  3001               	movlw	1
  1441  0315  118A  24DF  118A   	fcall	_setPB4
  1442                           
  1443                           ;main.c: 828: setPB5(0);
  1444  0318  3000               	movlw	0
  1445  0319  118A  24EA  118A   	fcall	_setPB5
  1446                           
  1447                           ;main.c: 830: uiTimerOneP5s = 0;
  1448  031C  1683               	bsf	3,5	;RP0=1, select bank1
  1449  031D  01D3               	clrf	main@uiTimerOneP5s^(0+128)
  1450  031E  01D4               	clrf	(main@uiTimerOneP5s+1)^(0+128)
  1451                           
  1452                           ;main.c: 831: uiTimerTwoP5s = 0;
  1453  031F  01D7               	clrf	main@uiTimerTwoP5s^(0+128)
  1454  0320  01D8               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1455                           
  1456                           ;main.c: 832: }
  1457  0321  2A48               	goto	l4291
  1458  0322                     L10:	
  1459                           ;main.c: 833: else
  1460                           ;main.c: 834: {
  1461                           ;main.c: 835: if( uiCh13Value < 90 )
  1462                           
  1463  0322  0248               	subwf	(main@uiCh13Value+1)^(0+128),w
  1464  0323  305A               	movlw	90
  1465  0324  1903               	skipnz
  1466  0325  0247               	subwf	main@uiCh13Value^(0+128),w
  1467  0326  1803               	skipnc
  1468  0327  2B33               	goto	l4405
  1469                           
  1470                           ;main.c: 836: {
  1471                           ;main.c: 837: if( uiTimerTwoP5s <= 5)
  1472  0328  3000               	movlw	0
  1473  0329  0258               	subwf	(main@uiTimerTwoP5s+1)^(0+128),w
  1474  032A  3006               	movlw	6
  1475  032B  1903               	skipnz
  1476  032C  0257               	subwf	main@uiTimerTwoP5s^(0+128),w
  1477  032D  1803               	skipnc
  1478  032E  2B37               	goto	l4407
  1479                           
  1480                           ;main.c: 838: uiTimerTwoP5s++;
  1481  032F  0AD7               	incf	main@uiTimerTwoP5s^(0+128),f
  1482  0330  1903               	skipnz
  1483  0331  0AD8               	incf	(main@uiTimerTwoP5s+1)^(0+128),f
  1484  0332  2B37               	goto	l4407
  1485  0333                     l4405:	
  1486                           
  1487                           ;main.c: 840: else
  1488                           ;main.c: 841: {
  1489                           ;main.c: 842: uiTimerTwoP5s = 0;
  1490  0333  01D7               	clrf	main@uiTimerTwoP5s^(0+128)
  1491  0334  01D8               	clrf	(main@uiTimerTwoP5s+1)^(0+128)
  1492                           
  1493                           ;main.c: 843: uiTimerThreeP5s = 0;
  1494  0335  01D5               	clrf	main@uiTimerThreeP5s^(0+128)
  1495  0336  01D6               	clrf	(main@uiTimerThreeP5s+1)^(0+128)
  1496  0337                     l4407:	
  1497                           
  1498                           ;main.c: 844: }
  1499                           ;main.c: 846: if(uiTimerTwoP5s > 5)
  1500  0337  3000               	movlw	0
  1501  0338  0258               	subwf	(main@uiTimerTwoP5s+1)^(0+128),w
  1502  0339  3006               	movlw	6
  1503  033A  1903               	skipnz
  1504  033B  0257               	subwf	main@uiTimerTwoP5s^(0+128),w
  1505  033C  1C03               	skipc
  1506  033D  2A48               	goto	l4291
  1507                           
  1508                           ;main.c: 847: {
  1509                           ;main.c: 848: setPB3(1);
  1510  033E  3001               	movlw	1
  1511  033F  118A  24D4  118A   	fcall	_setPB3
  1512                           
  1513                           ;main.c: 849: setPB4(0);
  1514  0342  3000               	movlw	0
  1515  0343  118A  24DF  118A   	fcall	_setPB4
  1516                           
  1517                           ;main.c: 850: setPB5(1);
  1518  0346  3001               	movlw	1
  1519  0347  118A  24EA  118A   	fcall	_setPB5
  1520                           
  1521                           ;main.c: 852: if(uiCh13Value < 25)
  1522  034A  3000               	movlw	0
  1523  034B  1683               	bsf	3,5	;RP0=1, select bank1
  1524  034C  0248               	subwf	(main@uiCh13Value+1)^(0+128),w
  1525  034D  3019               	movlw	25
  1526  034E  1903               	skipnz
  1527  034F  0247               	subwf	main@uiCh13Value^(0+128),w
  1528  0350  1803               	skipnc
  1529  0351  2B56               	goto	l4415
  1530                           
  1531                           ;main.c: 853: uiTimerThreeP5s++;
  1532  0352  0AD5               	incf	main@uiTimerThreeP5s^(0+128),f
  1533  0353  1903               	skipnz
  1534  0354  0AD6               	incf	(main@uiTimerThreeP5s+1)^(0+128),f
  1535  0355  2B58               	goto	l4417
  1536  0356                     l4415:	
  1537                           
  1538                           ;main.c: 854: else
  1539                           ;main.c: 855: uiTimerThreeP5s = 0;
  1540  0356  01D5               	clrf	main@uiTimerThreeP5s^(0+128)
  1541  0357  01D6               	clrf	(main@uiTimerThreeP5s+1)^(0+128)
  1542  0358                     l4417:	
  1543                           
  1544                           ;main.c: 857: if(uiTimerThreeP5s > 5)
  1545  0358  3000               	movlw	0
  1546  0359  0256               	subwf	(main@uiTimerThreeP5s+1)^(0+128),w
  1547  035A  3006               	movlw	6
  1548  035B  1903               	skipnz
  1549  035C  0255               	subwf	main@uiTimerThreeP5s^(0+128),w
  1550  035D  1C03               	skipc
  1551  035E  2A48               	goto	l4291
  1552  035F                     l4419:	
  1553                           
  1554                           ;main.c: 858: reset();
  1555  035F  118A  25EC  118A   	fcall	_reset
  1556  0362  2A48               	goto	l4291
  1557  0363                     l4421:	
  1558                           
  1559                           ;main.c: 867: {
  1560                           ;main.c: 868: setPB3(0);
  1561  0363  3000               	movlw	0
  1562  0364  118A  24D4  118A   	fcall	_setPB3
  1563                           
  1564                           ;main.c: 869: setPB4(0);
  1565  0367  3000               	movlw	0
  1566  0368  118A  24DF  118A   	fcall	_setPB4
  1567                           
  1568                           ;main.c: 870: setPB5(1);
  1569  036B  3001               	movlw	1
  1570  036C  118A  24EA  118A   	fcall	_setPB5
  1571                           
  1572                           ;main.c: 874: ucStep = DELAY_ONE_SECOND_FOR_PWM;
  1573  036F  3064               	movlw	100
  1574  0370                     L9:	
  1575  0370  1683               	bsf	3,5	;RP0=1, select bank1
  1576  0371  2B97               	goto	L8
  1577  0372                     l4425:	
  1578                           ;main.c: 875: break;
  1579                           
  1580                           
  1581                           ;main.c: 879: {
  1582                           ;main.c: 880: static unsigned ucDelay1s = 0;
  1583                           ;main.c: 881: if(ucDelay1s < 10)
  1584  0372  3000               	movlw	0
  1585  0373  0252               	subwf	(main@ucDelay1s+1)^(0+128),w
  1586  0374  300A               	movlw	10
  1587  0375  1903               	skipnz
  1588  0376  0251               	subwf	main@ucDelay1s^(0+128),w
  1589  0377  1803               	skipnc
  1590  0378  2B7D               	goto	l4429
  1591                           
  1592                           ;main.c: 882: ucDelay1s++;
  1593  0379  0AD1               	incf	main@ucDelay1s^(0+128),f
  1594  037A  1903               	skipnz
  1595  037B  0AD2               	incf	(main@ucDelay1s+1)^(0+128),f
  1596  037C  2A48               	goto	l4291
  1597  037D                     l4429:	
  1598  037D  3065               	movlw	101
  1599                           
  1600                           ;main.c: 883: else
  1601                           ;main.c: 884: {
  1602                           ;main.c: 885: ucDelay1s = 0;
  1603  037E  01D1               	clrf	main@ucDelay1s^(0+128)
  1604  037F  01D2               	clrf	(main@ucDelay1s+1)^(0+128)
  1605                           
  1606                           ;main.c: 886: ucStep = MEET_RESET_CONDITION_STEP;
  1607  0380  2B97               	goto	L8
  1608  0381                     l4433:	
  1609                           
  1610                           ;main.c: 896: {
  1611                           ;main.c: 897: static unsigned char ucTimerP5s = 0;
  1612                           ;main.c: 898: unsigned int ucChValue = getAdOriginalCh13Value();
  1613  0381  118A  23C1  118A   	fcall	_getAdOriginalCh13Value
  1614  0384  0843               	movf	(?_getAdOriginalCh13Value+1)^(0+128),w
  1615  0385  00C6               	movwf	(main@ucChValue+1)^(0+128)
  1616  0386  0842               	movf	?_getAdOriginalCh13Value^(0+128),w
  1617  0387  00C5               	movwf	main@ucChValue^(0+128)
  1618                           
  1619                           ;main.c: 900: if( ucChValue > 50 )
  1620  0388  3000               	movlw	0
  1621  0389  0246               	subwf	(main@ucChValue+1)^(0+128),w
  1622  038A  3033               	movlw	51
  1623  038B  1903               	skipnz
  1624  038C  0245               	subwf	main@ucChValue^(0+128),w
  1625  038D  1C03               	skipc
  1626  038E  2B91               	goto	l4439
  1627                           
  1628                           ;main.c: 901: ucTimerP5s++;
  1629  038F  0ADE               	incf	main@cTimerP5s_797^(0+128),f
  1630  0390  2B92               	goto	l4441
  1631  0391                     l4439:	
  1632                           
  1633                           ;main.c: 902: else
  1634                           ;main.c: 903: ucTimerP5s = 0;
  1635  0391  01DE               	clrf	main@cTimerP5s_797^(0+128)
  1636  0392                     l4441:	
  1637                           
  1638                           ;main.c: 905: if(ucTimerP5s > 5)
  1639  0392  3006               	movlw	6
  1640  0393  025E               	subwf	main@cTimerP5s_797^(0+128),w
  1641  0394  1C03               	skipc
  1642  0395  2A48               	goto	l4291
  1643                           
  1644                           ;main.c: 906: ucStep = RESET_STEP;
  1645  0396  3066               	movlw	102
  1646  0397                     L8:	
  1647  0397  00DF               	movwf	main@ucStep^(0+128)
  1648  0398  2A48               	goto	l4291
  1649  0399                     l4445:	
  1650                           
  1651                           ;main.c: 911: {
  1652                           ;main.c: 912: ucStep = INIT_STEP;
  1653  0399  01DF               	clrf	main@ucStep^(0+128)
  1654  039A  2B5F               	goto	l4419
  1655  039B                     l4451:	
  1656  039B  1683               	bsf	3,5	;RP0=1, select bank1
  1657  039C  085F               	movf	main@ucStep^(0+128),w
  1658                           
  1659                           ; Switch size 1, requested type "space"
  1660                           ; Number of cases is 11, Range of values is 0 to 102
  1661                           ; switch strategies available:
  1662                           ; Name         Instructions Cycles
  1663                           ; simple_byte           34    18 (average)
  1664                           ; direct_byte          213     7 (fixed)
  1665                           ; jumptable            260     6 (fixed)
  1666                           ; rangetable           107     6 (fixed)
  1667                           ; spacedrange          212     9 (fixed)
  1668                           ; locatedrange         103     3 (fixed)
  1669                           ;	Chosen strategy is simple_byte
  1670  039D  3A00               	xorlw	0	; case 0
  1671  039E  1903               	skipnz
  1672  039F  2A56               	goto	l4299
  1673  03A0  3A01               	xorlw	1	; case 1
  1674  03A1  1903               	skipnz
  1675  03A2  2A75               	goto	l4317
  1676  03A3  3A03               	xorlw	3	; case 2
  1677  03A4  1903               	skipnz
  1678  03A5  2A8C               	goto	l4325
  1679  03A6  3A01               	xorlw	1	; case 3
  1680  03A7  1903               	skipnz
  1681  03A8  2AA8               	goto	l4341
  1682  03A9  3A07               	xorlw	7	; case 4
  1683  03AA  1903               	skipnz
  1684  03AB  2AB3               	goto	l4345
  1685  03AC  3A01               	xorlw	1	; case 5
  1686  03AD  1903               	skipnz
  1687  03AE  2ACD               	goto	l4361
  1688  03AF  3A03               	xorlw	3	; case 6
  1689  03B0  1903               	skipnz
  1690  03B1  2AE4               	goto	l4373
  1691  03B2  3A65               	xorlw	101	; case 99
  1692  03B3  1903               	skipnz
  1693  03B4  2B63               	goto	l4421
  1694  03B5  3A07               	xorlw	7	; case 100
  1695  03B6  1903               	skipnz
  1696  03B7  2B72               	goto	l4425
  1697  03B8  3A01               	xorlw	1	; case 101
  1698  03B9  1903               	skipnz
  1699  03BA  2B81               	goto	l4433
  1700  03BB  3A03               	xorlw	3	; case 102
  1701  03BC  1903               	skipnz
  1702  03BD  2B99               	goto	l4445
  1703  03BE  2A74               	goto	l758
  1704  03BF  118A  2811         	ljmp	start
  1705  03C1                     __end_of_main:	
  1706                           
  1707                           	psect	text1231
  1708  03C1                     __ptext1231:	
  1709 ;; =============== function _main ends ============
  1710                           
  1711                           
  1712 ;; *************** function _getAdOriginalCh13Value *****************
  1713 ;; Defined at:
  1714 ;;		line 319 in file "D:\develop\190625\AK7030-OTP\common.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;		None
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;		None
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  2   34[BANK1 ] unsigned int 
  1721 ;; Registers used:
  1722 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1723 ;; Tracked objects:
  1724 ;;		On entry : 40/20
  1725 ;;		On exit  : 160/20
  1726 ;;		Unchanged: FFE00/0
  1727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1728 ;;      Params:         0       0       2       0       0
  1729 ;;      Locals:         0       0       0       0       0
  1730 ;;      Temps:          0       0       0       0       0
  1731 ;;      Totals:         0       0       2       0       0
  1732 ;;Total ram usage:        2 bytes
  1733 ;; Hardware stack levels used:    1
  1734 ;; Hardware stack levels required when called:    4
  1735 ;; This function calls:
  1736 ;;		_Filter
  1737 ;; This function is called by:
  1738 ;;		_main
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741  03C1                     _getAdOriginalCh13Value:	
  1742                           
  1743                           ;common.c: 321: return Filter(uiSampleChannelFourth);
  1744                           
  1745                           ; Regs used in _getAdOriginalCh13Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  1746  03C1  3059               	movlw	_uiSampleChannelFourth& (0+255)
  1747  03C2  1683               	bsf	3,5	;RP0=1, select bank1
  1748  03C3  00A0               	movwf	?_Filter^(0+128)
  1749  03C4  01A1               	clrf	(?_Filter+1)^(0+128)
  1750  03C5  23CB               	fcall	_Filter
  1751  03C6  0821               	movf	(?_Filter+1)^(0+128),w
  1752  03C7  00C3               	movwf	(?_getAdOriginalCh13Value+1)^(0+128)
  1753  03C8  0820               	movf	?_Filter^(0+128),w
  1754  03C9  00C2               	movwf	?_getAdOriginalCh13Value^(0+128)
  1755  03CA  0008               	return
  1756  03CB                     __end_of_getAdOriginalCh13Value:	
  1757  03CB                     __ptext1238:	
  1758 ;; =============== function _getAD_ConvertFlag ends ============
  1759                           
  1760                           
  1761 ;; *************** function _Filter *****************
  1762 ;; Defined at:
  1763 ;;		line 64 in file "D:\develop\190625\AK7030-OTP\common.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;  tmpValue        2    0[BANK1 ] PTR int 
  1766 ;;		 -> uiSampleChannelFourteenth(20), uiSampleChannelFourth(20), uiSampleChannelFirst(20), 
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;  cir             2   30[BANK1 ] int 
  1769 ;;  filter_buf     20    6[BANK1 ] unsigned int [10]
  1770 ;;  filter_sum      2   28[BANK1 ] unsigned int 
  1771 ;;  filter_temp     2   26[BANK1 ] unsigned int 
  1772 ;;  i               1   33[BANK1 ] unsigned char 
  1773 ;;  j               1   32[BANK1 ] unsigned char 
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  2    0[BANK1 ] unsigned int 
  1776 ;; Registers used:
  1777 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1778 ;; Tracked objects:
  1779 ;;		On entry : 60/20
  1780 ;;		On exit  : 160/20
  1781 ;;		Unchanged: FFE00/0
  1782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1783 ;;      Params:         0       0       2       0       0
  1784 ;;      Locals:         0       0      28       0       0
  1785 ;;      Temps:          0       0       4       0       0
  1786 ;;      Totals:         0       0      34       0       0
  1787 ;;Total ram usage:       34 bytes
  1788 ;; Hardware stack levels used:    1
  1789 ;; Hardware stack levels required when called:    3
  1790 ;; This function calls:
  1791 ;;		Nothing
  1792 ;; This function is called by:
  1793 ;;		_getAdOriginalCh13Value
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796  03CB                     _Filter:	
  1797                           
  1798                           ; Regs used in _Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  1799  03CB  01C0               	clrf	Filter@j^(0+128)
  1800                           
  1801                           ;common.c: 68: unsigned int filter_temp = 0, filter_sum = 0;
  1802  03CC  01BA               	clrf	Filter@filter_temp^(0+128)
  1803  03CD  01BB               	clrf	(Filter@filter_temp+1)^(0+128)
  1804  03CE  01BC               	clrf	Filter@filter_sum^(0+128)
  1805  03CF  01BD               	clrf	(Filter@filter_sum+1)^(0+128)
  1806                           
  1807                           ;common.c: 70: unsigned int filter_buf[10];
  1808                           ;common.c: 72: for(int cir = 0;cir < 10; cir++)
  1809  03D0  01BE               	clrf	Filter@cir^(0+128)
  1810  03D1  01BF               	clrf	(Filter@cir+1)^(0+128)
  1811  03D2                     l3619:	
  1812                           
  1813                           ;common.c: 73: filter_buf[cir] = *tmpValue++;
  1814  03D2  1683               	bsf	3,5	;RP0=1, select bank1
  1815  03D3  1303               	bcf	3,6	;RP1=0, select bank1
  1816  03D4  0820               	movf	Filter@tmpValue^(0+128),w
  1817  03D5  0084               	movwf	4
  1818  03D6  1783               	bsf	3,7
  1819  03D7  1C21               	btfss	(Filter@tmpValue+1)^(0+128),0
  1820  03D8  1383               	bcf	3,7
  1821  03D9  0800               	movf	0,w
  1822  03DA  2472  118A         	fcall	PL10	;call to abstracted procedure
  1823  03DC  0D3E               	rlf	Filter@cir^(0+128),w
  1824  03DD  3EA6               	addlw	Filter@filter_buf& (0+255)
  1825  03DE  0084               	movwf	4
  1826  03DF  0822               	movf	??_Filter^(0+128),w
  1827  03E0  1383               	bcf	3,7	;select IRP bank1
  1828  03E1  0080               	movwf	0
  1829  03E2  0A84               	incf	4,f
  1830  03E3  0823               	movf	(??_Filter+1)^(0+128),w
  1831  03E4  0080               	movwf	0
  1832  03E5  3002               	movlw	2
  1833  03E6  07A0               	addwf	Filter@tmpValue^(0+128),f
  1834  03E7  1803               	skipnc
  1835  03E8  0AA1               	incf	(Filter@tmpValue+1)^(0+128),f
  1836  03E9  0ABE               	incf	Filter@cir^(0+128),f
  1837  03EA  1903               	skipnz
  1838  03EB  0ABF               	incf	(Filter@cir+1)^(0+128),f
  1839  03EC  083F               	movf	(Filter@cir+1)^(0+128),w
  1840  03ED  3A80               	xorlw	128
  1841  03EE  00FF               	movwf	127
  1842  03EF  3080               	movlw	128
  1843  03F0  027F               	subwf	127,w
  1844  03F1  1D03               	skipz
  1845  03F2  2BF5               	goto	u1165
  1846  03F3  300A               	movlw	10
  1847  03F4  023E               	subwf	Filter@cir^(0+128),w
  1848  03F5                     u1165:	
  1849  03F5  1C03               	skipc
  1850  03F6  2BD2               	goto	l3619
  1851                           
  1852                           ;common.c: 77: for(j = 0; j < 10 - 1; j++)
  1853  03F7  1683               	bsf	3,5	;RP0=1, select bank1
  1854  03F8  1303               	bcf	3,6	;RP1=0, select bank1
  1855  03F9  01C0               	clrf	Filter@j^(0+128)
  1856                           
  1857                           ;common.c: 78: {
  1858                           ;common.c: 79: for(i = 0; i < 10 - 1 - j; i++)
  1859  03FA  01C1               	clrf	Filter@i^(0+128)
  1860  03FB                     l3641:	
  1861  03FB  01A3               	clrf	(??_Filter^(0+128)+1)
  1862  03FC  0840               	movf	Filter@j^(0+128),w
  1863  03FD  3C09               	sublw	9
  1864  03FE  00A2               	movwf	??_Filter^(0+128)
  1865  03FF  1C03               	skipc
  1866  0400  03A3               	decf	(??_Filter^(0+128)+1),f
  1867  0401  0823               	movf	(??_Filter+1)^(0+128),w
  1868  0402  3A80               	xorlw	128
  1869  0403  3C80               	sublw	128
  1870  0404  1D03               	skipz
  1871  0405  2C08               	goto	u1185
  1872  0406  0822               	movf	??_Filter^(0+128),w
  1873  0407  0241               	subwf	Filter@i^(0+128),w
  1874  0408                     u1185:	
  1875  0408  1803               	btfsc	3,0
  1876  0409  2C3D               	goto	l3643
  1877                           
  1878                           ;common.c: 80: {
  1879                           ;common.c: 81: if(filter_buf[i] > filter_buf[i + 1])
  1880  040A  1683               	bsf	3,5	;RP0=1, select bank1
  1881  040B  1303               	bcf	3,6	;RP1=0, select bank1
  1882  040C  1003               	clrc
  1883  040D  2462  118A         	fcall	PL5	;call to abstracted procedure
  1884  040F  246C  118A         	fcall	PL8	;call to abstracted procedure
  1885  0411  0800               	movf	0,w
  1886  0412  00A4               	movwf	(??_Filter+2)^(0+128)
  1887  0413  0A84               	incf	4,f
  1888  0414  0800               	movf	0,w
  1889  0415  00A5               	movwf	((??_Filter+2)^(0+128)+1)
  1890  0416  0823               	movf	(??_Filter+1)^(0+128),w
  1891  0417  0225               	subwf	(??_Filter+3)^(0+128),w
  1892  0418  1D03               	skipz
  1893  0419  2C1C               	goto	u1175
  1894  041A  0822               	movf	??_Filter^(0+128),w
  1895  041B  0224               	subwf	(??_Filter+2)^(0+128),w
  1896  041C                     u1175:	
  1897  041C  1803               	skipnc
  1898  041D  2C3B               	goto	l3639
  1899                           
  1900                           ;common.c: 82: {
  1901                           ;common.c: 84: filter_temp = filter_buf[i];
  1902  041E  1003               	clrc
  1903  041F  0D41               	rlf	Filter@i^(0+128),w
  1904  0420  3EA6               	addlw	Filter@filter_buf& (0+255)
  1905  0421  0084               	movwf	4
  1906  0422  0800               	movf	0,w
  1907  0423  00BA               	movwf	Filter@filter_temp^(0+128)
  1908  0424  0A84               	incf	4,f
  1909  0425  0800               	movf	0,w
  1910  0426  00BB               	movwf	(Filter@filter_temp+1)^(0+128)
  1911                           
  1912                           ;common.c: 86: filter_buf[i] = filter_buf[i + 1];
  1913  0427  246C  118A         	fcall	PL8	;call to abstracted procedure
  1914  0429  0800               	movf	0,w
  1915  042A  2472  118A         	fcall	PL10	;call to abstracted procedure
  1916  042C  0D41               	rlf	Filter@i^(0+128),w
  1917  042D  3EA6               	addlw	Filter@filter_buf& (0+255)
  1918  042E  0084               	movwf	4
  1919  042F  0822               	movf	??_Filter^(0+128),w
  1920  0430  0080               	movwf	0
  1921  0431  0A84               	incf	4,f
  1922  0432  0823               	movf	(??_Filter+1)^(0+128),w
  1923  0433  0080               	movwf	0
  1924                           
  1925                           ;common.c: 88: filter_buf[i + 1] = filter_temp;
  1926  0434  246C  118A         	fcall	PL8	;call to abstracted procedure
  1927  0436  083A               	movf	Filter@filter_temp^(0+128),w
  1928  0437  0080               	movwf	0
  1929  0438  0A84               	incf	4,f
  1930  0439  083B               	movf	(Filter@filter_temp+1)^(0+128),w
  1931  043A  0080               	movwf	0
  1932  043B                     l3639:	
  1933  043B  0AC1               	incf	Filter@i^(0+128),f
  1934  043C  2BFB               	goto	l3641
  1935  043D                     l3643:	
  1936  043D  1683               	bsf	3,5	;RP0=1, select bank1
  1937  043E  3009               	movlw	9
  1938  043F  1303               	bcf	3,6	;RP1=0, select bank1
  1939  0440  0AC0               	incf	Filter@j^(0+128),f
  1940  0441  0240               	subwf	Filter@j^(0+128),w
  1941                           
  1942                           ;common.c: 89: }
  1943                           ;common.c: 90: }
  1944                           ;common.c: 91: }
  1945                           ;common.c: 93: for(i = 1; i < 10 - 1; i++)
  1946  0442  01C1               	clrf	Filter@i^(0+128)
  1947  0443  1C03               	skipc
  1948  0444  2BFB               	goto	l3641
  1949  0445  0AC1               	incf	Filter@i^(0+128),f
  1950                           
  1951                           ;common.c: 94: {
  1952                           ;common.c: 95: filter_sum += filter_buf[i];
  1953  0446  1003               	clrc
  1954  0447                     L13:	
  1955  0447  2462  118A         	fcall	PL5	;call to abstracted procedure
  1956  0449  0822               	movf	??_Filter^(0+128),w
  1957  044A  07BC               	addwf	Filter@filter_sum^(0+128),f
  1958  044B  1803               	skipnc
  1959  044C  0ABD               	incf	(Filter@filter_sum+1)^(0+128),f
  1960  044D  0823               	movf	(??_Filter+1)^(0+128),w
  1961  044E  07BD               	addwf	(Filter@filter_sum+1)^(0+128),f
  1962  044F  3009               	movlw	9
  1963  0450  0AC1               	incf	Filter@i^(0+128),f
  1964  0451  0241               	subwf	Filter@i^(0+128),w
  1965  0452  1C03               	skipc
  1966  0453  2C47               	goto	L13
  1967                           
  1968                           ;common.c: 96: }
  1969                           ;common.c: 98: return (filter_sum >> 3);
  1970  0454  083D               	movf	(Filter@filter_sum+1)^(0+128),w
  1971  0455  00A1               	movwf	(?_Filter+1)^(0+128)
  1972  0456  083C               	movf	Filter@filter_sum^(0+128),w
  1973  0457  00A0               	movwf	?_Filter^(0+128)
  1974  0458  1003               	clrc
  1975  0459  0CA1               	rrf	(?_Filter+1)^(0+128),f
  1976  045A  0CA0               	rrf	?_Filter^(0+128),f
  1977  045B  1003               	clrc
  1978  045C  0CA1               	rrf	(?_Filter+1)^(0+128),f
  1979  045D  0CA0               	rrf	?_Filter^(0+128),f
  1980  045E  1003               	clrc
  1981  045F  0CA1               	rrf	(?_Filter+1)^(0+128),f
  1982  0460  0CA0               	rrf	?_Filter^(0+128),f
  1983  0461  0008               	return
  1984  0462                     __end_of_Filter:	
  1985  0462                     PL5:	
  1986  0462  0D41               	rlf	Filter@i^(0+128),w
  1987  0463  3EA6               	addlw	Filter@filter_buf& (0+255)
  1988  0464  0084               	movwf	4
  1989  0465  1383               	bcf	3,7	;select IRP bank1
  1990  0466  0800               	movf	0,w
  1991  0467  00A2               	movwf	??_Filter^(0+128)
  1992  0468  0A84               	incf	4,f
  1993  0469  0800               	movf	0,w
  1994  046A  00A3               	movwf	(??_Filter^(0+128)+1)
  1995  046B  0008               	return
  1996  046C                     PL8:	
  1997  046C  1003               	clrc
  1998  046D  0D41               	rlf	Filter@i^(0+128),w
  1999  046E  3E02               	addlw	2
  2000  046F  3EA6               	addlw	Filter@filter_buf& (0+255)
  2001  0470  0084               	movwf	4
  2002  0471  0008               	return
  2003  0472                     PL10:	
  2004  0472  00A2               	movwf	??_Filter^(0+128)
  2005  0473  0A84               	incf	4,f
  2006  0474  0800               	movf	0,w
  2007  0475  00A3               	movwf	(??_Filter^(0+128)+1)
  2008  0476  1003               	clrc
  2009  0477  0008               	return
  2010                           
  2011                           	psect	text1232
  2012  0478                     __ptext1232:	
  2013 ;; =============== function _getAdOriginalCh13Value ends ============
  2014                           
  2015                           
  2016 ;; *************** function _process_AD_Converter_Value *****************
  2017 ;; Defined at:
  2018 ;;		line 341 in file "D:\develop\190625\AK7030-OTP\common.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;		None
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;		None
  2023 ;; Return value:  Size  Location     Type
  2024 ;;		None               void
  2025 ;; Registers used:
  2026 ;;		wreg, status,2, status,0, pclath, cstack
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 60/0
  2030 ;;		Unchanged: FFF9F/0
  2031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2032 ;;      Params:         0       0       0       0       0
  2033 ;;      Locals:         0       0       0       0       0
  2034 ;;      Temps:          0       0       0       0       0
  2035 ;;      Totals:         0       0       0       0       0
  2036 ;;Total ram usage:        0 bytes
  2037 ;; Hardware stack levels used:    1
  2038 ;; Hardware stack levels required when called:    4
  2039 ;; This function calls:
  2040 ;;		_getAD_ConvertFlag
  2041 ;;		_setAD_ConvertFlag
  2042 ;;		_AD_Sample
  2043 ;;		_adc_test_init
  2044 ;;		_adc_start
  2045 ;; This function is called by:
  2046 ;;		_main
  2047 ;; This function uses a non-reentrant model
  2048 ;;
  2049  0478                     _process_AD_Converter_Value:	
  2050                           
  2051                           ;common.c: 342: if(getAD_ConvertFlag())
  2052                           
  2053                           ; Regs used in _process_AD_Converter_Value: [wreg+status,2+status,0+pclath+cstack]
  2054  0478  248F  118A         	fcall	_getAD_ConvertFlag
  2055  047A  3A00               	xorlw	0
  2056  047B  1903               	skipnz
  2057  047C  0008               	return
  2058                           
  2059                           ;common.c: 343: {
  2060                           ;common.c: 344: setAD_ConvertFlag(0);
  2061  047D  3000               	movlw	0
  2062  047E  2493  118A         	fcall	_setAD_ConvertFlag
  2063                           
  2064                           ;common.c: 345: AD_Sample();
  2065  0480  2498  118A         	fcall	_AD_Sample
  2066                           
  2067                           ;common.c: 346: if(12 == sampleChannelSelect)
  2068  0482  1683               	bsf	3,5	;RP0=1, select bank1
  2069  0483  0862               	movf	_sampleChannelSelect^(0+128),w
  2070  0484  3A0C               	xorlw	12
  2071                           
  2072                           ;common.c: 347: adc_test_init(12,3);
  2073  0485  3003               	movlw	3
  2074  0486  00A0               	movwf	?_adc_test_init^(0+128)
  2075  0487  1D03               	skipz
  2076  0488  2C8B               	goto	L12
  2077  0489  300C               	movlw	12
  2078  048A  2C8C               	goto	L11
  2079  048B                     L12:	
  2080                           ;common.c: 348: else
  2081                           ;common.c: 349: adc_test_init(13,3);
  2082                           
  2083  048B  300D               	movlw	13
  2084  048C                     L11:	
  2085  048C  24AD  118A         	fcall	_adc_test_init
  2086                           
  2087                           ;common.c: 350: adc_start();
  2088  048E  2CC8               	ljmp	l4127
  2089  048F                     __end_of_process_AD_Converter_Value:	
  2090  048F                     __ptext1237:	
  2091 ;; =============== function _setAD_ConvertFlag ends ============
  2092                           
  2093                           
  2094 ;; *************** function _getAD_ConvertFlag *****************
  2095 ;; Defined at:
  2096 ;;		line 290 in file "D:\develop\190625\AK7030-OTP\common.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;		None
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;		None
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  1    wreg      unsigned char 
  2103 ;; Registers used:
  2104 ;;		wreg
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 60/0
  2108 ;;		Unchanged: FFF9F/0
  2109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2110 ;;      Params:         0       0       0       0       0
  2111 ;;      Locals:         0       0       0       0       0
  2112 ;;      Temps:          0       0       0       0       0
  2113 ;;      Totals:         0       0       0       0       0
  2114 ;;Total ram usage:        0 bytes
  2115 ;; Hardware stack levels used:    1
  2116 ;; Hardware stack levels required when called:    3
  2117 ;; This function calls:
  2118 ;;		Nothing
  2119 ;; This function is called by:
  2120 ;;		_process_AD_Converter_Value
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123  048F                     _getAD_ConvertFlag:	
  2124                           
  2125                           ;common.c: 291: return adc_convert_flag;
  2126                           
  2127                           ; Regs used in _getAD_ConvertFlag: [wreg]
  2128  048F  1283               	bcf	3,5	;RP0=0, select bank0
  2129  0490  1303               	bcf	3,6	;RP1=0, select bank0
  2130  0491  0855               	movf	_adc_convert_flag,w
  2131  0492  0008               	return
  2132  0493                     __end_of_getAD_ConvertFlag:	
  2133  0493                     __ptext1236:	
  2134 ;; =============== function _AD_Sample ends ============
  2135                           
  2136                           
  2137 ;; *************** function _setAD_ConvertFlag *****************
  2138 ;; Defined at:
  2139 ;;		line 296 in file "D:\develop\190625\AK7030-OTP\common.c"
  2140 ;; Parameters:    Size  Location     Type
  2141 ;;  flag            1    wreg     unsigned char 
  2142 ;; Auto vars:     Size  Location     Type
  2143 ;;  flag            1    0[BANK1 ] unsigned char 
  2144 ;; Return value:  Size  Location     Type
  2145 ;;		None               void
  2146 ;; Registers used:
  2147 ;;		wreg
  2148 ;; Tracked objects:
  2149 ;;		On entry : 60/0
  2150 ;;		On exit  : 60/0
  2151 ;;		Unchanged: FFF9F/0
  2152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2153 ;;      Params:         0       0       0       0       0
  2154 ;;      Locals:         0       0       1       0       0
  2155 ;;      Temps:          0       0       0       0       0
  2156 ;;      Totals:         0       0       1       0       0
  2157 ;;Total ram usage:        1 bytes
  2158 ;; Hardware stack levels used:    1
  2159 ;; Hardware stack levels required when called:    3
  2160 ;; This function calls:
  2161 ;;		Nothing
  2162 ;; This function is called by:
  2163 ;;		_process_AD_Converter_Value
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166  0493                     _setAD_ConvertFlag:	
  2167                           
  2168                           ; Regs used in _setAD_ConvertFlag: [wreg]
  2169                           ;setAD_ConvertFlag@flag stored from wreg
  2170  0493  1683               	bsf	3,5	;RP0=1, select bank1
  2171  0494  00A0               	movwf	setAD_ConvertFlag@flag^(0+128)
  2172                           
  2173                           ;common.c: 297: adc_convert_flag = flag;
  2174  0495  1283               	bcf	3,5	;RP0=0, select bank0
  2175  0496  00D5               	movwf	_adc_convert_flag
  2176  0497  0008               	return
  2177  0498                     __end_of_setAD_ConvertFlag:	
  2178  0498                     __ptext1235:	
  2179 ;; =============== function _initPin ends ============
  2180                           
  2181                           
  2182 ;; *************** function _AD_Sample *****************
  2183 ;; Defined at:
  2184 ;;		line 364 in file "D:\develop\190625\AK7030-OTP\common.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;		None
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;		None
  2189 ;; Return value:  Size  Location     Type
  2190 ;;		None               void
  2191 ;; Registers used:
  2192 ;;		wreg, status,2, status,0
  2193 ;; Tracked objects:
  2194 ;;		On entry : 60/0
  2195 ;;		On exit  : 40/0
  2196 ;;		Unchanged: FFF9F/0
  2197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2198 ;;      Params:         0       0       0       0       0
  2199 ;;      Locals:         0       0       0       0       0
  2200 ;;      Temps:          0       0       0       0       0
  2201 ;;      Totals:         0       0       0       0       0
  2202 ;;Total ram usage:        0 bytes
  2203 ;; Hardware stack levels used:    1
  2204 ;; Hardware stack levels required when called:    3
  2205 ;; This function calls:
  2206 ;;		Nothing
  2207 ;; This function is called by:
  2208 ;;		_process_AD_Converter_Value
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211  0498                     _AD_Sample:	
  2212                           
  2213                           ;common.c: 365: if(sampleTimes < 10)
  2214                           
  2215                           ; Regs used in _AD_Sample: [wreg+status,2+status,0]
  2216  0498  300A               	movlw	10
  2217  0499  0256               	subwf	_sampleTimes,w
  2218  049A  1803               	skipnc
  2219  049B  0008               	return
  2220  049C  300A               	movlw	10
  2221                           
  2222                           ;common.c: 366: {
  2223                           ;common.c: 367: sampleTimes++;
  2224  049D  0AD6               	incf	_sampleTimes,f
  2225                           
  2226                           ;common.c: 369: if(sampleTimes >= 10)
  2227  049E  0256               	subwf	_sampleTimes,w
  2228  049F  1C03               	skipc
  2229  04A0  0008               	return
  2230                           
  2231                           ;common.c: 370: {
  2232                           ;common.c: 371: sampleTimes = 0;
  2233  04A1  01D6               	clrf	_sampleTimes
  2234                           
  2235                           ;common.c: 373: if(sampleChannelSelect == 12)
  2236  04A2  1683               	bsf	3,5	;RP0=1, select bank1
  2237  04A3  0862               	movf	_sampleChannelSelect^(0+128),w
  2238  04A4  3A0C               	xorlw	12
  2239  04A5  1D03               	skipz
  2240  04A6  2CAA               	goto	l4251
  2241                           
  2242                           ;common.c: 374: {
  2243                           ;common.c: 375: sampleChannelSelect = 13;
  2244  04A7  300D               	movlw	13
  2245  04A8  00E2               	movwf	_sampleChannelSelect^(0+128)
  2246                           
  2247                           ;common.c: 376: }
  2248  04A9  0008               	return
  2249  04AA                     l4251:	
  2250                           
  2251                           ;common.c: 378: else
  2252                           ;common.c: 379: {
  2253                           ;common.c: 380: sampleChannelSelect = 12;
  2254  04AA  300C               	movlw	12
  2255  04AB  00E2               	movwf	_sampleChannelSelect^(0+128)
  2256  04AC  0008               	return
  2257  04AD                     __end_of_AD_Sample:	
  2258  04AD                     __ptext1251:	
  2259 ;; =============== function _startTwentyMinTimer ends ============
  2260                           
  2261                           
  2262 ;; *************** function _adc_test_init *****************
  2263 ;; Defined at:
  2264 ;;		line 85 in file "D:\develop\190625\AK7030-OTP\periph.c"
  2265 ;; Parameters:    Size  Location     Type
  2266 ;;  channel         1    wreg     unsigned char 
  2267 ;;  ref             1    0[BANK1 ] unsigned char 
  2268 ;; Auto vars:     Size  Location     Type
  2269 ;;  channel         1    2[BANK1 ] unsigned char 
  2270 ;; Return value:  Size  Location     Type
  2271 ;;		None               void
  2272 ;; Registers used:
  2273 ;;		wreg, status,2, status,0
  2274 ;; Tracked objects:
  2275 ;;		On entry : 60/20
  2276 ;;		On exit  : 60/20
  2277 ;;		Unchanged: FFF9F/0
  2278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2279 ;;      Params:         0       0       1       0       0
  2280 ;;      Locals:         0       0       1       0       0
  2281 ;;      Temps:          0       0       1       0       0
  2282 ;;      Totals:         0       0       3       0       0
  2283 ;;Total ram usage:        3 bytes
  2284 ;; Hardware stack levels used:    1
  2285 ;; Hardware stack levels required when called:    3
  2286 ;; This function calls:
  2287 ;;		Nothing
  2288 ;; This function is called by:
  2289 ;;		_main
  2290 ;;		_process_AD_Converter_Value
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293  04AD                     _adc_test_init:	
  2294                           
  2295                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  2296                           ;adc_test_init@channel stored from wreg
  2297  04AD  00A2               	movwf	adc_test_init@channel^(0+128)
  2298                           
  2299                           ;periph.c: 86: ADCON0 = 0x00;
  2300  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  2301  04AF  019F               	clrf	31	;volatile
  2302                           
  2303                           ;periph.c: 87: ADCON0|=channel<<2;
  2304  04B0  1683               	bsf	3,5	;RP0=1, select bank1
  2305  04B1  0822               	movf	adc_test_init@channel^(0+128),w
  2306  04B2  00A1               	movwf	??_adc_test_init^(0+128)
  2307  04B3  1003               	clrc
  2308  04B4  0DA1               	rlf	??_adc_test_init^(0+128),f
  2309  04B5  1003               	clrc
  2310  04B6  0D21               	rlf	??_adc_test_init^(0+128),w
  2311  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  2312  04B8  049F               	iorwf	31,f	;volatile
  2313                           
  2314                           ;periph.c: 88: ADCON1 = 0x35;
  2315  04B9  3035               	movlw	53
  2316  04BA  1683               	bsf	3,5	;RP0=1, select bank1
  2317  04BB  009F               	movwf	31	;volatile
  2318                           
  2319                           ;periph.c: 89: ADCON1|=ref<<6;
  2320  04BC  0820               	movf	adc_test_init@ref^(0+128),w
  2321  04BD  00A1               	movwf	??_adc_test_init^(0+128)
  2322  04BE  0CA1               	rrf	??_adc_test_init^(0+128),f
  2323  04BF  0CA1               	rrf	??_adc_test_init^(0+128),f
  2324  04C0  0C21               	rrf	??_adc_test_init^(0+128),w
  2325  04C1  39C0               	andlw	192
  2326  04C2  049F               	iorwf	31,f	;volatile
  2327                           
  2328                           ;periph.c: 90: ADON=1;
  2329  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  2330  04C4  141F               	bsf	31,0
  2331                           
  2332                           ;periph.c: 91: ADIE=1;
  2333  04C5  1683               	bsf	3,5	;RP0=1, select bank1
  2334  04C6  150D               	bsf	13,2
  2335  04C7  0008               	return
  2336  04C8                     __end_of_adc_test_init:	
  2337  04C8                     __ptext1249:	
  2338 ;; =============== function _isPermitSampleTime ends ============
  2339                           
  2340                           
  2341 ;; *************** function _adc_start *****************
  2342 ;; Defined at:
  2343 ;;		line 101 in file "D:\develop\190625\AK7030-OTP\periph.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;		None
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;		None
  2348 ;; Return value:  Size  Location     Type
  2349 ;;		None               void
  2350 ;; Registers used:
  2351 ;;		None
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 60/0
  2355 ;;		Unchanged: FFF9F/0
  2356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2357 ;;      Params:         0       0       0       0       0
  2358 ;;      Locals:         0       0       0       0       0
  2359 ;;      Temps:          0       0       0       0       0
  2360 ;;      Totals:         0       0       0       0       0
  2361 ;;Total ram usage:        0 bytes
  2362 ;; Hardware stack levels used:    1
  2363 ;; Hardware stack levels required when called:    3
  2364 ;; This function calls:
  2365 ;;		Nothing
  2366 ;; This function is called by:
  2367 ;;		_main
  2368 ;;		_process_AD_Converter_Value
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371  04C8                     _adc_start:	
  2372  04C8                     l4127:	
  2373                           ; Regs used in _adc_start: []
  2374                           
  2375                           
  2376                           ;periph.c: 102: GO=1;
  2377  04C8  1283               	bcf	3,5	;RP0=0, select bank0
  2378  04C9  1303               	bcf	3,6	;RP1=0, select bank0
  2379  04CA  149F               	bsf	31,1
  2380  04CB  0008               	return
  2381  04CC                     __end_of_adc_start:	
  2382                           
  2383                           	psect	text1233
  2384  04CC                     __ptext1233:	
  2385 ;; =============== function _process_AD_Converter_Value ends ============
  2386                           
  2387                           
  2388 ;; *************** function _setPinInitVaule *****************
  2389 ;; Defined at:
  2390 ;;		line 287 in file "D:\develop\190625\AK7030-OTP\main.c"
  2391 ;; Parameters:    Size  Location     Type
  2392 ;;		None
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;		None
  2395 ;; Return value:  Size  Location     Type
  2396 ;;		None               void
  2397 ;; Registers used:
  2398 ;;		wreg, status,2, status,0, pclath, cstack
  2399 ;; Tracked objects:
  2400 ;;		On entry : 17F/20
  2401 ;;		On exit  : 17F/0
  2402 ;;		Unchanged: FFE80/0
  2403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2404 ;;      Params:         0       0       0       0       0
  2405 ;;      Locals:         0       0       0       0       0
  2406 ;;      Temps:          0       0       0       0       0
  2407 ;;      Totals:         0       0       0       0       0
  2408 ;;Total ram usage:        0 bytes
  2409 ;; Hardware stack levels used:    1
  2410 ;; Hardware stack levels required when called:    4
  2411 ;; This function calls:
  2412 ;;		_setPB3
  2413 ;;		_setPB4
  2414 ;;		_setPB5
  2415 ;; This function is called by:
  2416 ;;		_main
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419  04CC                     _setPinInitVaule:	
  2420                           
  2421                           ;main.c: 289: setPB3(1);
  2422                           
  2423                           ; Regs used in _setPinInitVaule: [wreg+status,2+status,0+pclath+cstack]
  2424  04CC  3001               	movlw	1
  2425  04CD  24D4  118A         	fcall	_setPB3
  2426                           
  2427                           ;main.c: 290: setPB4(0);
  2428  04CF  3000               	movlw	0
  2429  04D0  24DF  118A         	fcall	_setPB4
  2430                           
  2431                           ;main.c: 291: setPB5(1);
  2432  04D2  3001               	movlw	1
  2433  04D3  2CEA               	ljmp	_setPB5
  2434  04D4                     __end_of_setPinInitVaule:	
  2435  04D4                     __ptext1263:	
  2436 ;; =============== function _initPB4 ends ============
  2437                           
  2438                           
  2439 ;; *************** function _setPB3 *****************
  2440 ;; Defined at:
  2441 ;;		line 148 in file "D:\develop\190625\AK7030-OTP\main.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;  bValue          1    wreg     unsigned char 
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;  bValue          1    0[BANK1 ] unsigned char 
  2446 ;; Return value:  Size  Location     Type
  2447 ;;		None               void
  2448 ;; Registers used:
  2449 ;;		wreg
  2450 ;; Tracked objects:
  2451 ;;		On entry : 40/20
  2452 ;;		On exit  : 60/0
  2453 ;;		Unchanged: FFF9F/0
  2454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2455 ;;      Params:         0       0       0       0       0
  2456 ;;      Locals:         0       0       1       0       0
  2457 ;;      Temps:          0       0       0       0       0
  2458 ;;      Totals:         0       0       1       0       0
  2459 ;;Total ram usage:        1 bytes
  2460 ;; Hardware stack levels used:    1
  2461 ;; Hardware stack levels required when called:    3
  2462 ;; This function calls:
  2463 ;;		Nothing
  2464 ;; This function is called by:
  2465 ;;		_setPinInitVaule
  2466 ;;		_main
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469  04D4                     _setPB3:	
  2470                           
  2471                           ; Regs used in _setPB3: [wreg]
  2472                           ;setPB3@bValue stored from wreg
  2473  04D4  1683               	bsf	3,5	;RP0=1, select bank1
  2474  04D5  00A0               	movwf	setPB3@bValue^(0+128)
  2475                           
  2476                           ;main.c: 149: if( bValue )
  2477  04D6  0820               	movf	setPB3@bValue^(0+128),w
  2478  04D7  1903               	btfsc	3,2
  2479  04D8  2CDC               	goto	l687
  2480                           
  2481                           ;main.c: 151: PB3 = 1;
  2482  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  2483  04DA  1586               	bsf	6,3
  2484  04DB  0008               	return
  2485  04DC                     l687:	
  2486                           
  2487                           ;main.c: 155: else
  2488                           ;main.c: 157: PB3= 0;
  2489  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  2490  04DD  1186               	bcf	6,3
  2491  04DE  0008               	return
  2492  04DF                     __end_of_setPB3:	
  2493  04DF                     __ptext1261:	
  2494 ;; =============== function _initPB5 ends ============
  2495                           
  2496                           
  2497 ;; *************** function _setPB4 *****************
  2498 ;; Defined at:
  2499 ;;		line 183 in file "D:\develop\190625\AK7030-OTP\main.c"
  2500 ;; Parameters:    Size  Location     Type
  2501 ;;  bValue          1    wreg     unsigned char 
  2502 ;; Auto vars:     Size  Location     Type
  2503 ;;  bValue          1    0[BANK1 ] unsigned char 
  2504 ;; Return value:  Size  Location     Type
  2505 ;;		None               void
  2506 ;; Registers used:
  2507 ;;		wreg
  2508 ;; Tracked objects:
  2509 ;;		On entry : 60/0
  2510 ;;		On exit  : 60/0
  2511 ;;		Unchanged: FFF9F/0
  2512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2513 ;;      Params:         0       0       0       0       0
  2514 ;;      Locals:         0       0       1       0       0
  2515 ;;      Temps:          0       0       0       0       0
  2516 ;;      Totals:         0       0       1       0       0
  2517 ;;Total ram usage:        1 bytes
  2518 ;; Hardware stack levels used:    1
  2519 ;; Hardware stack levels required when called:    3
  2520 ;; This function calls:
  2521 ;;		Nothing
  2522 ;; This function is called by:
  2523 ;;		_setPinInitVaule
  2524 ;;		_main
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527  04DF                     _setPB4:	
  2528                           
  2529                           ; Regs used in _setPB4: [wreg]
  2530                           ;setPB4@bValue stored from wreg
  2531  04DF  1683               	bsf	3,5	;RP0=1, select bank1
  2532  04E0  00A0               	movwf	setPB4@bValue^(0+128)
  2533                           
  2534                           ;main.c: 184: if( bValue )
  2535  04E1  0820               	movf	setPB4@bValue^(0+128),w
  2536  04E2  1903               	btfsc	3,2
  2537  04E3  2CE7               	goto	l697
  2538                           
  2539                           ;main.c: 186: PB4 = 1;
  2540  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  2541  04E5  1606               	bsf	6,4
  2542  04E6  0008               	return
  2543  04E7                     l697:	
  2544                           
  2545                           ;main.c: 190: else
  2546                           ;main.c: 192: PB4= 0;
  2547  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  2548  04E8  1206               	bcf	6,4
  2549  04E9  0008               	return
  2550  04EA                     __end_of_setPB4:	
  2551  04EA                     __ptext1259:	
  2552 ;; =============== function _initPB2_AsHighResistence ends ============
  2553                           
  2554                           
  2555 ;; *************** function _setPB5 *****************
  2556 ;; Defined at:
  2557 ;;		line 217 in file "D:\develop\190625\AK7030-OTP\main.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;  bValue          1    wreg     unsigned char 
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;  bValue          1    0[BANK1 ] unsigned char 
  2562 ;; Return value:  Size  Location     Type
  2563 ;;		None               void
  2564 ;; Registers used:
  2565 ;;		wreg
  2566 ;; Tracked objects:
  2567 ;;		On entry : 60/0
  2568 ;;		On exit  : 60/0
  2569 ;;		Unchanged: FFF9F/0
  2570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2571 ;;      Params:         0       0       0       0       0
  2572 ;;      Locals:         0       0       1       0       0
  2573 ;;      Temps:          0       0       0       0       0
  2574 ;;      Totals:         0       0       1       0       0
  2575 ;;Total ram usage:        1 bytes
  2576 ;; Hardware stack levels used:    1
  2577 ;; Hardware stack levels required when called:    3
  2578 ;; This function calls:
  2579 ;;		Nothing
  2580 ;; This function is called by:
  2581 ;;		_setPinInitVaule
  2582 ;;		_main
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585  04EA                     _setPB5:	
  2586                           
  2587                           ; Regs used in _setPB5: [wreg]
  2588                           ;setPB5@bValue stored from wreg
  2589  04EA  1683               	bsf	3,5	;RP0=1, select bank1
  2590  04EB  00A0               	movwf	setPB5@bValue^(0+128)
  2591                           
  2592                           ;main.c: 218: if( bValue )
  2593  04EC  0820               	movf	setPB5@bValue^(0+128),w
  2594  04ED  1903               	btfsc	3,2
  2595  04EE  2CF2               	goto	l707
  2596                           
  2597                           ;main.c: 220: PB5 = 1;
  2598  04EF  1283               	bcf	3,5	;RP0=0, select bank0
  2599  04F0  1686               	bsf	6,5
  2600  04F1  0008               	return
  2601  04F2                     l707:	
  2602                           
  2603                           ;main.c: 224: else
  2604                           ;main.c: 226: PB5= 0;
  2605  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  2606  04F3  1286               	bcf	6,5
  2607  04F4  0008               	return
  2608  04F5                     __end_of_setPB5:	
  2609                           
  2610                           	psect	text1234
  2611  04F5                     __ptext1234:	
  2612 ;; =============== function _setPinInitVaule ends ============
  2613                           
  2614                           
  2615 ;; *************** function _initPin *****************
  2616 ;; Defined at:
  2617 ;;		line 271 in file "D:\develop\190625\AK7030-OTP\main.c"
  2618 ;; Parameters:    Size  Location     Type
  2619 ;;		None
  2620 ;; Auto vars:     Size  Location     Type
  2621 ;;		None
  2622 ;; Return value:  Size  Location     Type
  2623 ;;		None               void
  2624 ;; Registers used:
  2625 ;;		wreg, status,2, status,0, pclath, cstack
  2626 ;; Tracked objects:
  2627 ;;		On entry : 17F/0
  2628 ;;		On exit  : 17F/20
  2629 ;;		Unchanged: FFE80/0
  2630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2631 ;;      Params:         0       0       0       0       0
  2632 ;;      Locals:         0       0       0       0       0
  2633 ;;      Temps:          0       0       0       0       0
  2634 ;;      Totals:         0       0       0       0       0
  2635 ;;Total ram usage:        0 bytes
  2636 ;; Hardware stack levels used:    1
  2637 ;; Hardware stack levels required when called:    4
  2638 ;; This function calls:
  2639 ;;		_initPB2_AsHighResistence
  2640 ;;		_initPB3
  2641 ;;		_initPB4
  2642 ;;		_initPB5
  2643 ;; This function is called by:
  2644 ;;		_main
  2645 ;; This function uses a non-reentrant model
  2646 ;;
  2647  04F5                     _initPin:	
  2648                           
  2649                           ;main.c: 273: initPB2_AsHighResistence();
  2650                           
  2651                           ; Regs used in _initPin: [wreg+status,2+status,0+pclath+cstack]
  2652  04F5  2508  118A         	fcall	_initPB2_AsHighResistence
  2653                           
  2654                           ;main.c: 275: initPB3(0);
  2655  04F7  3000               	movlw	0
  2656  04F8  24FF  118A         	fcall	_initPB3
  2657                           
  2658                           ;main.c: 277: initPB4(0);
  2659  04FA  3000               	movlw	0
  2660  04FB  250D  118A         	fcall	_initPB4
  2661                           
  2662                           ;main.c: 279: initPB5(0);
  2663  04FD  3000               	movlw	0
  2664  04FE  2D15               	ljmp	_initPB5
  2665  04FF                     __end_of_initPin:	
  2666  04FF                     __ptext1264:	
  2667 ;; =============== function _setPB3 ends ============
  2668                           
  2669                           
  2670 ;; *************** function _initPB3 *****************
  2671 ;; Defined at:
  2672 ;;		line 131 in file "D:\develop\190625\AK7030-OTP\main.c"
  2673 ;; Parameters:    Size  Location     Type
  2674 ;;  bValue          1    wreg     unsigned char 
  2675 ;; Auto vars:     Size  Location     Type
  2676 ;;  bValue          1    0[BANK1 ] unsigned char 
  2677 ;; Return value:  Size  Location     Type
  2678 ;;		None               void
  2679 ;; Registers used:
  2680 ;;		wreg
  2681 ;; Tracked objects:
  2682 ;;		On entry : 17F/60
  2683 ;;		On exit  : 17F/20
  2684 ;;		Unchanged: FFE80/0
  2685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2686 ;;      Params:         0       0       0       0       0
  2687 ;;      Locals:         0       0       1       0       0
  2688 ;;      Temps:          0       0       0       0       0
  2689 ;;      Totals:         0       0       1       0       0
  2690 ;;Total ram usage:        1 bytes
  2691 ;; Hardware stack levels used:    1
  2692 ;; Hardware stack levels required when called:    3
  2693 ;; This function calls:
  2694 ;;		Nothing
  2695 ;; This function is called by:
  2696 ;;		_initPin
  2697 ;; This function uses a non-reentrant model
  2698 ;;
  2699  04FF                     _initPB3:	
  2700                           
  2701                           ; Regs used in _initPB3: [wreg]
  2702                           ;initPB3@bValue stored from wreg
  2703  04FF  1303               	bcf	3,6	;RP1=0, select bank1
  2704  0500  00A0               	movwf	initPB3@bValue^(0+128)
  2705                           
  2706                           ;main.c: 132: if( bValue )
  2707  0501  0820               	movf	initPB3@bValue^(0+128),w
  2708  0502  1903               	btfsc	3,2
  2709  0503  2D06               	goto	l682
  2710                           
  2711                           ;main.c: 134: TRISB3 = 1;
  2712  0504  1586               	bsf	6,3
  2713  0505  0008               	return
  2714  0506                     l682:	
  2715                           
  2716                           ;main.c: 138: else
  2717                           ;main.c: 140: TRISB3 = 0;
  2718  0506  1186               	bcf	6,3
  2719  0507  0008               	return
  2720  0508                     __end_of_initPB3:	
  2721  0508                     __ptext1258:	
  2722 ;; =============== function _pwm_start ends ============
  2723                           
  2724                           
  2725 ;; *************** function _initPB2_AsHighResistence *****************
  2726 ;; Defined at:
  2727 ;;		line 234 in file "D:\develop\190625\AK7030-OTP\main.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;		None
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;		None
  2732 ;; Return value:  Size  Location     Type
  2733 ;;		None               void
  2734 ;; Registers used:
  2735 ;;		None
  2736 ;; Tracked objects:
  2737 ;;		On entry : 17F/0
  2738 ;;		On exit  : 17F/60
  2739 ;;		Unchanged: FFE80/0
  2740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2741 ;;      Params:         0       0       0       0       0
  2742 ;;      Locals:         0       0       0       0       0
  2743 ;;      Temps:          0       0       0       0       0
  2744 ;;      Totals:         0       0       0       0       0
  2745 ;;Total ram usage:        0 bytes
  2746 ;; Hardware stack levels used:    1
  2747 ;; Hardware stack levels required when called:    3
  2748 ;; This function calls:
  2749 ;;		Nothing
  2750 ;; This function is called by:
  2751 ;;		_initPin
  2752 ;; This function uses a non-reentrant model
  2753 ;;
  2754  0508                     _initPB2_AsHighResistence:	
  2755                           
  2756                           ;main.c: 236: PB2 = 1;
  2757                           
  2758                           ; Regs used in _initPB2_AsHighResistence: []
  2759  0508  1506               	bsf	6,2
  2760                           
  2761                           ;main.c: 237: PBOD2 = 1;
  2762  0509  1683               	bsf	3,5	;RP0=1, select bank3
  2763  050A  1703               	bsf	3,6	;RP1=1, select bank3
  2764  050B  1508               	bsf	8,2
  2765  050C  0008               	return
  2766  050D                     __end_of_initPB2_AsHighResistence:	
  2767  050D                     __ptext1262:	
  2768 ;; =============== function _setPB4 ends ============
  2769                           
  2770                           
  2771 ;; *************** function _initPB4 *****************
  2772 ;; Defined at:
  2773 ;;		line 166 in file "D:\develop\190625\AK7030-OTP\main.c"
  2774 ;; Parameters:    Size  Location     Type
  2775 ;;  bValue          1    wreg     unsigned char 
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;  bValue          1    0[BANK1 ] unsigned char 
  2778 ;; Return value:  Size  Location     Type
  2779 ;;		None               void
  2780 ;; Registers used:
  2781 ;;		wreg
  2782 ;; Tracked objects:
  2783 ;;		On entry : 17F/20
  2784 ;;		On exit  : 17F/20
  2785 ;;		Unchanged: FFE80/0
  2786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2787 ;;      Params:         0       0       0       0       0
  2788 ;;      Locals:         0       0       1       0       0
  2789 ;;      Temps:          0       0       0       0       0
  2790 ;;      Totals:         0       0       1       0       0
  2791 ;;Total ram usage:        1 bytes
  2792 ;; Hardware stack levels used:    1
  2793 ;; Hardware stack levels required when called:    3
  2794 ;; This function calls:
  2795 ;;		Nothing
  2796 ;; This function is called by:
  2797 ;;		_initPin
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800  050D                     _initPB4:	
  2801                           
  2802                           ; Regs used in _initPB4: [wreg]
  2803                           ;initPB4@bValue stored from wreg
  2804  050D  00A0               	movwf	initPB4@bValue^(0+128)
  2805                           
  2806                           ;main.c: 167: if( bValue )
  2807  050E  0820               	movf	initPB4@bValue^(0+128),w
  2808  050F  1903               	btfsc	3,2
  2809  0510  2D13               	goto	l692
  2810                           
  2811                           ;main.c: 169: TRISB4 = 1;
  2812  0511  1606               	bsf	6,4
  2813  0512  0008               	return
  2814  0513                     l692:	
  2815                           
  2816                           ;main.c: 173: else
  2817                           ;main.c: 175: TRISB4= 0;
  2818  0513  1206               	bcf	6,4
  2819  0514  0008               	return
  2820  0515                     __end_of_initPB4:	
  2821  0515                     __ptext1260:	
  2822 ;; =============== function _setPB5 ends ============
  2823                           
  2824                           
  2825 ;; *************** function _initPB5 *****************
  2826 ;; Defined at:
  2827 ;;		line 200 in file "D:\develop\190625\AK7030-OTP\main.c"
  2828 ;; Parameters:    Size  Location     Type
  2829 ;;  bValue          1    wreg     unsigned char 
  2830 ;; Auto vars:     Size  Location     Type
  2831 ;;  bValue          1    0[BANK1 ] unsigned char 
  2832 ;; Return value:  Size  Location     Type
  2833 ;;		None               void
  2834 ;; Registers used:
  2835 ;;		wreg
  2836 ;; Tracked objects:
  2837 ;;		On entry : 17F/20
  2838 ;;		On exit  : 17F/20
  2839 ;;		Unchanged: FFE80/0
  2840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2841 ;;      Params:         0       0       0       0       0
  2842 ;;      Locals:         0       0       1       0       0
  2843 ;;      Temps:          0       0       0       0       0
  2844 ;;      Totals:         0       0       1       0       0
  2845 ;;Total ram usage:        1 bytes
  2846 ;; Hardware stack levels used:    1
  2847 ;; Hardware stack levels required when called:    3
  2848 ;; This function calls:
  2849 ;;		Nothing
  2850 ;; This function is called by:
  2851 ;;		_initPin
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854  0515                     _initPB5:	
  2855                           
  2856                           ; Regs used in _initPB5: [wreg]
  2857                           ;initPB5@bValue stored from wreg
  2858  0515  00A0               	movwf	initPB5@bValue^(0+128)
  2859                           
  2860                           ;main.c: 201: if( bValue )
  2861  0516  0820               	movf	initPB5@bValue^(0+128),w
  2862  0517  1903               	btfsc	3,2
  2863  0518  2D1B               	goto	l702
  2864                           
  2865                           ;main.c: 203: TRISB5 = 1;
  2866  0519  1686               	bsf	6,5
  2867  051A  0008               	return
  2868  051B                     l702:	
  2869                           
  2870                           ;main.c: 207: else
  2871                           ;main.c: 209: TRISB5= 0;
  2872  051B  1286               	bcf	6,5
  2873  051C  0008               	return
  2874  051D                     __end_of_initPB5:	
  2875                           
  2876                           	psect	text1239
  2877  05AB                     __ptext1239:	
  2878 ;; =============== function _Filter ends ============
  2879                           
  2880                           
  2881 ;; *************** function _isFinishedOneHoursTimer *****************
  2882 ;; Defined at:
  2883 ;;		line 537 in file "D:\develop\190625\AK7030-OTP\common.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;		None
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;		None
  2888 ;; Return value:  Size  Location     Type
  2889 ;;                  1    wreg      unsigned char 
  2890 ;; Registers used:
  2891 ;;		wreg, status,2, status,0
  2892 ;; Tracked objects:
  2893 ;;		On entry : 160/20
  2894 ;;		On exit  : 160/20
  2895 ;;		Unchanged: FFE9F/0
  2896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2897 ;;      Params:         0       0       0       0       0
  2898 ;;      Locals:         0       0       0       0       0
  2899 ;;      Temps:          0       0       0       0       0
  2900 ;;      Totals:         0       0       0       0       0
  2901 ;;Total ram usage:        0 bytes
  2902 ;; Hardware stack levels used:    1
  2903 ;; Hardware stack levels required when called:    3
  2904 ;; This function calls:
  2905 ;;		Nothing
  2906 ;; This function is called by:
  2907 ;;		_main
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910  05AB                     _isFinishedOneHoursTimer:	
  2911                           
  2912                           ;common.c: 538: if((uiOneHourTimer == 0) && bOneHourTimerStartFlag)
  2913                           
  2914                           ; Regs used in _isFinishedOneHoursTimer: [wreg+status,2+status,0]
  2915  05AB  084C               	movf	(_uiOneHourTimer+1)^(0+128),w
  2916  05AC  044B               	iorwf	_uiOneHourTimer^(0+128),w
  2917  05AD  1D03               	skipz
  2918  05AE  3400               	retlw	0
  2919  05AF  085A               	movf	_bOneHourTimerStartFlag^(0+128),w
  2920  05B0  1903               	btfsc	3,2
  2921  05B1  3400               	retlw	0
  2922  05B2  3001               	movlw	1
  2923                           
  2924                           ;common.c: 539: {
  2925                           ;common.c: 540: bOneHourTimerStartFlag = 0;
  2926  05B3  01DA               	clrf	_bOneHourTimerStartFlag^(0+128)
  2927                           
  2928                           ;common.c: 541: return 1;
  2929  05B4  0008               	return
  2930  05B5                     __end_of_isFinishedOneHoursTimer:	
  2931                           ;common.c: 543: else
  2932                           ;common.c: 544: return 0;
  2933                           
  2934                           
  2935                           	psect	text1240
  2936  0552                     __ptext1240:	
  2937 ;; =============== function _isFinishedOneHoursTimer ends ============
  2938                           
  2939                           
  2940 ;; *************** function _startOneHoursTimer *****************
  2941 ;; Defined at:
  2942 ;;		line 454 in file "D:\develop\190625\AK7030-OTP\common.c"
  2943 ;; Parameters:    Size  Location     Type
  2944 ;;  uiSetTime       2    0[BANK1 ] unsigned int 
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;		None
  2947 ;; Return value:  Size  Location     Type
  2948 ;;		None               void
  2949 ;; Registers used:
  2950 ;;		wreg, status,2, status,0
  2951 ;; Tracked objects:
  2952 ;;		On entry : 60/20
  2953 ;;		On exit  : 60/20
  2954 ;;		Unchanged: FFF9F/0
  2955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2956 ;;      Params:         0       0       2       0       0
  2957 ;;      Locals:         0       0       0       0       0
  2958 ;;      Temps:          0       0       0       0       0
  2959 ;;      Totals:         0       0       2       0       0
  2960 ;;Total ram usage:        2 bytes
  2961 ;; Hardware stack levels used:    1
  2962 ;; Hardware stack levels required when called:    3
  2963 ;; This function calls:
  2964 ;;		Nothing
  2965 ;; This function is called by:
  2966 ;;		_main
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969  0552                     _startOneHoursTimer:	
  2970                           
  2971                           ;common.c: 455: if(( 0 == uiOneHourTimer ) && ( 0 == bOneHourTimerStartFlag ))
  2972                           
  2973                           ; Regs used in _startOneHoursTimer: [wreg+status,2+status,0]
  2974  0552  084C               	movf	(_uiOneHourTimer+1)^(0+128),w
  2975  0553  044B               	iorwf	_uiOneHourTimer^(0+128),w
  2976  0554  1D03               	skipz
  2977  0555  0008               	return
  2978  0556  08DA               	movf	_bOneHourTimerStartFlag^(0+128),f
  2979  0557  1D03               	skipz
  2980  0558  0008               	return
  2981                           
  2982                           ;common.c: 456: {
  2983                           ;common.c: 457: uiOneHourTimer = uiSetTime;
  2984  0559  0821               	movf	(startOneHoursTimer@uiSetTime+1)^(0+128),w
  2985  055A  00CC               	movwf	(_uiOneHourTimer+1)^(0+128)
  2986  055B  0820               	movf	startOneHoursTimer@uiSetTime^(0+128),w
  2987  055C  00CB               	movwf	_uiOneHourTimer^(0+128)
  2988                           
  2989                           ;common.c: 458: bOneHourTimerStartFlag = 1;
  2990  055D  01DA               	clrf	_bOneHourTimerStartFlag^(0+128)
  2991  055E  0ADA               	incf	_bOneHourTimerStartFlag^(0+128),f
  2992  055F  0008               	return
  2993  0560                     __end_of_startOneHoursTimer:	
  2994                           
  2995                           	psect	text1241
  2996  058A                     __ptext1241:	
  2997 ;; =============== function _startOneHoursTimer ends ============
  2998                           
  2999                           
  3000 ;; *************** function _isFinishedThreeHoursTimer *****************
  3001 ;; Defined at:
  3002 ;;		line 524 in file "D:\develop\190625\AK7030-OTP\common.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;		None
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;		None
  3007 ;; Return value:  Size  Location     Type
  3008 ;;                  1    wreg      unsigned char 
  3009 ;; Registers used:
  3010 ;;		wreg, status,2, status,0
  3011 ;; Tracked objects:
  3012 ;;		On entry : 40/20
  3013 ;;		On exit  : 60/20
  3014 ;;		Unchanged: FFF9F/0
  3015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3016 ;;      Params:         0       0       0       0       0
  3017 ;;      Locals:         0       0       0       0       0
  3018 ;;      Temps:          0       0       0       0       0
  3019 ;;      Totals:         0       0       0       0       0
  3020 ;;Total ram usage:        0 bytes
  3021 ;; Hardware stack levels used:    1
  3022 ;; Hardware stack levels required when called:    3
  3023 ;; This function calls:
  3024 ;;		Nothing
  3025 ;; This function is called by:
  3026 ;;		_main
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029  058A                     _isFinishedThreeHoursTimer:	
  3030                           
  3031                           ;common.c: 525: if((uiSmallTimer == 0) && bSmallTimerStartFlag)
  3032                           
  3033                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  3034  058A  1683               	bsf	3,5	;RP0=1, select bank1
  3035  058B  084E               	movf	(_uiSmallTimer+1)^(0+128),w
  3036  058C  044D               	iorwf	_uiSmallTimer^(0+128),w
  3037  058D  1D03               	skipz
  3038  058E  3400               	retlw	0
  3039  058F  085B               	movf	_bSmallTimerStartFlag^(0+128),w
  3040  0590  1903               	btfsc	3,2
  3041  0591  3400               	retlw	0
  3042  0592  3001               	movlw	1
  3043                           
  3044                           ;common.c: 526: {
  3045                           ;common.c: 527: bSmallTimerStartFlag = 0;
  3046  0593  01DB               	clrf	_bSmallTimerStartFlag^(0+128)
  3047                           
  3048                           ;common.c: 528: return 1;
  3049  0594  0008               	return
  3050  0595                     __end_of_isFinishedThreeHoursTimer:	
  3051                           ;common.c: 530: else
  3052                           ;common.c: 531: return 0;
  3053                           
  3054                           
  3055                           	psect	text1242
  3056  0560                     __ptext1242:	
  3057 ;; =============== function _isFinishedThreeHoursTimer ends ============
  3058                           
  3059                           
  3060 ;; *************** function _startThreeHoursTimer *****************
  3061 ;; Defined at:
  3062 ;;		line 441 in file "D:\develop\190625\AK7030-OTP\common.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;  uiSetTime       2    0[BANK1 ] unsigned int 
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;		None
  3067 ;; Return value:  Size  Location     Type
  3068 ;;		None               void
  3069 ;; Registers used:
  3070 ;;		wreg, status,2, status,0
  3071 ;; Tracked objects:
  3072 ;;		On entry : 60/20
  3073 ;;		On exit  : 60/20
  3074 ;;		Unchanged: FFF9F/0
  3075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3076 ;;      Params:         0       0       2       0       0
  3077 ;;      Locals:         0       0       0       0       0
  3078 ;;      Temps:          0       0       0       0       0
  3079 ;;      Totals:         0       0       2       0       0
  3080 ;;Total ram usage:        2 bytes
  3081 ;; Hardware stack levels used:    1
  3082 ;; Hardware stack levels required when called:    3
  3083 ;; This function calls:
  3084 ;;		Nothing
  3085 ;; This function is called by:
  3086 ;;		_main
  3087 ;; This function uses a non-reentrant model
  3088 ;;
  3089  0560                     _startThreeHoursTimer:	
  3090                           
  3091                           ;common.c: 442: if(( 0 == uiSmallTimer ) && ( 0 == bSmallTimerStartFlag ))
  3092                           
  3093                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  3094  0560  084E               	movf	(_uiSmallTimer+1)^(0+128),w
  3095  0561  044D               	iorwf	_uiSmallTimer^(0+128),w
  3096  0562  1D03               	skipz
  3097  0563  0008               	return
  3098  0564  08DB               	movf	_bSmallTimerStartFlag^(0+128),f
  3099  0565  1D03               	skipz
  3100  0566  0008               	return
  3101                           
  3102                           ;common.c: 443: {
  3103                           ;common.c: 444: uiSmallTimer = uiSetTime;
  3104  0567  0821               	movf	(startThreeHoursTimer@uiSetTime+1)^(0+128),w
  3105  0568  00CE               	movwf	(_uiSmallTimer+1)^(0+128)
  3106  0569  0820               	movf	startThreeHoursTimer@uiSetTime^(0+128),w
  3107  056A  00CD               	movwf	_uiSmallTimer^(0+128)
  3108                           
  3109                           ;common.c: 445: bSmallTimerStartFlag = 1;
  3110  056B  01DB               	clrf	_bSmallTimerStartFlag^(0+128)
  3111  056C  0ADB               	incf	_bSmallTimerStartFlag^(0+128),f
  3112  056D  0008               	return
  3113  056E                     __end_of_startThreeHoursTimer:	
  3114                           
  3115                           	psect	text1243
  3116  0595                     __ptext1243:	
  3117 ;; =============== function _startThreeHoursTimer ends ============
  3118                           
  3119                           
  3120 ;; *************** function _isFinishedTwelveHoursTimer *****************
  3121 ;; Defined at:
  3122 ;;		line 513 in file "D:\develop\190625\AK7030-OTP\common.c"
  3123 ;; Parameters:    Size  Location     Type
  3124 ;;		None
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;		None
  3127 ;; Return value:  Size  Location     Type
  3128 ;;                  1    wreg      unsigned char 
  3129 ;; Registers used:
  3130 ;;		wreg, status,2, status,0
  3131 ;; Tracked objects:
  3132 ;;		On entry : 40/20
  3133 ;;		On exit  : 60/20
  3134 ;;		Unchanged: FFF9F/0
  3135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3136 ;;      Params:         0       0       0       0       0
  3137 ;;      Locals:         0       0       0       0       0
  3138 ;;      Temps:          0       0       0       0       0
  3139 ;;      Totals:         0       0       0       0       0
  3140 ;;Total ram usage:        0 bytes
  3141 ;; Hardware stack levels used:    1
  3142 ;; Hardware stack levels required when called:    3
  3143 ;; This function calls:
  3144 ;;		Nothing
  3145 ;; This function is called by:
  3146 ;;		_main
  3147 ;; This function uses a non-reentrant model
  3148 ;;
  3149  0595                     _isFinishedTwelveHoursTimer:	
  3150                           
  3151                           ;common.c: 514: if(( uiBigTimer == 0 ) && bBigTimerStartFlag )
  3152                           
  3153                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  3154  0595  1683               	bsf	3,5	;RP0=1, select bank1
  3155  0596  084A               	movf	(_uiBigTimer+1)^(0+128),w
  3156  0597  0449               	iorwf	_uiBigTimer^(0+128),w
  3157  0598  1D03               	skipz
  3158  0599  3400               	retlw	0
  3159  059A  0859               	movf	_bBigTimerStartFlag^(0+128),w
  3160  059B  1903               	btfsc	3,2
  3161  059C  3400               	retlw	0
  3162  059D  3001               	movlw	1
  3163                           
  3164                           ;common.c: 515: {
  3165                           ;common.c: 516: bBigTimerStartFlag = 0;
  3166  059E  01D9               	clrf	_bBigTimerStartFlag^(0+128)
  3167                           
  3168                           ;common.c: 517: return 1;
  3169  059F  0008               	return
  3170  05A0                     __end_of_isFinishedTwelveHoursTimer:	
  3171                           ;common.c: 519: else
  3172                           ;common.c: 520: return 0;
  3173                           
  3174                           
  3175                           	psect	text1244
  3176  056E                     __ptext1244:	
  3177 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  3178                           
  3179                           
  3180 ;; *************** function _startTwelveHourTimer *****************
  3181 ;; Defined at:
  3182 ;;		line 393 in file "D:\develop\190625\AK7030-OTP\common.c"
  3183 ;; Parameters:    Size  Location     Type
  3184 ;;  uiSetTime       2    0[BANK1 ] unsigned int 
  3185 ;; Auto vars:     Size  Location     Type
  3186 ;;		None
  3187 ;; Return value:  Size  Location     Type
  3188 ;;		None               void
  3189 ;; Registers used:
  3190 ;;		wreg, status,2, status,0
  3191 ;; Tracked objects:
  3192 ;;		On entry : 60/20
  3193 ;;		On exit  : 60/20
  3194 ;;		Unchanged: FFF9F/0
  3195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3196 ;;      Params:         0       0       2       0       0
  3197 ;;      Locals:         0       0       0       0       0
  3198 ;;      Temps:          0       0       0       0       0
  3199 ;;      Totals:         0       0       2       0       0
  3200 ;;Total ram usage:        2 bytes
  3201 ;; Hardware stack levels used:    1
  3202 ;; Hardware stack levels required when called:    3
  3203 ;; This function calls:
  3204 ;;		Nothing
  3205 ;; This function is called by:
  3206 ;;		_main
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209  056E                     _startTwelveHourTimer:	
  3210                           
  3211                           ;common.c: 394: if((0 == uiBigTimer) && ( 0 == bBigTimerStartFlag))
  3212                           
  3213                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  3214  056E  084A               	movf	(_uiBigTimer+1)^(0+128),w
  3215  056F  0449               	iorwf	_uiBigTimer^(0+128),w
  3216  0570  1D03               	skipz
  3217  0571  0008               	return
  3218  0572  08D9               	movf	_bBigTimerStartFlag^(0+128),f
  3219  0573  1D03               	skipz
  3220  0574  0008               	return
  3221                           
  3222                           ;common.c: 395: {
  3223                           ;common.c: 396: uiBigTimer = uiSetTime;
  3224  0575  0821               	movf	(startTwelveHourTimer@uiSetTime+1)^(0+128),w
  3225  0576  00CA               	movwf	(_uiBigTimer+1)^(0+128)
  3226  0577  0820               	movf	startTwelveHourTimer@uiSetTime^(0+128),w
  3227  0578  00C9               	movwf	_uiBigTimer^(0+128)
  3228                           
  3229                           ;common.c: 397: bBigTimerStartFlag = 1;
  3230  0579  01D9               	clrf	_bBigTimerStartFlag^(0+128)
  3231  057A  0AD9               	incf	_bBigTimerStartFlag^(0+128),f
  3232  057B  0008               	return
  3233  057C                     __end_of_startTwelveHourTimer:	
  3234                           
  3235                           	psect	text1245
  3236  05CF                     __ptext1245:	
  3237 ;; =============== function _startTwelveHourTimer ends ============
  3238                           
  3239                           
  3240 ;; *************** function _clearTwentyMinTimer *****************
  3241 ;; Defined at:
  3242 ;;		line 434 in file "D:\develop\190625\AK7030-OTP\common.c"
  3243 ;; Parameters:    Size  Location     Type
  3244 ;;		None
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;		None
  3247 ;; Return value:  Size  Location     Type
  3248 ;;		None               void
  3249 ;; Registers used:
  3250 ;;		status,2
  3251 ;; Tracked objects:
  3252 ;;		On entry : 60/0
  3253 ;;		On exit  : 60/20
  3254 ;;		Unchanged: FFF9F/0
  3255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3256 ;;      Params:         0       0       0       0       0
  3257 ;;      Locals:         0       0       0       0       0
  3258 ;;      Temps:          0       0       0       0       0
  3259 ;;      Totals:         0       0       0       0       0
  3260 ;;Total ram usage:        0 bytes
  3261 ;; Hardware stack levels used:    1
  3262 ;; Hardware stack levels required when called:    3
  3263 ;; This function calls:
  3264 ;;		Nothing
  3265 ;; This function is called by:
  3266 ;;		_main
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269  05CF                     _clearTwentyMinTimer:	
  3270                           
  3271                           ;common.c: 435: uiTwentyMinTimer = 0;
  3272                           
  3273                           ; Regs used in _clearTwentyMinTimer: [status,2]
  3274  05CF  1683               	bsf	3,5	;RP0=1, select bank1
  3275  05D0  01CF               	clrf	_uiTwentyMinTimer^(0+128)
  3276  05D1  01D0               	clrf	(_uiTwentyMinTimer+1)^(0+128)
  3277                           
  3278                           ;common.c: 436: bTwentyMinStartFlag = 0;
  3279  05D2  01DC               	clrf	_bTwentyMinStartFlag^(0+128)
  3280  05D3  0008               	return
  3281  05D4                     __end_of_clearTwentyMinTimer:	
  3282                           
  3283                           	psect	text1246
  3284  05A0                     __ptext1246:	
  3285 ;; =============== function _clearTwentyMinTimer ends ============
  3286                           
  3287                           
  3288 ;; *************** function _isFinishedTwentyMinTimer *****************
  3289 ;; Defined at:
  3290 ;;		line 489 in file "D:\develop\190625\AK7030-OTP\common.c"
  3291 ;; Parameters:    Size  Location     Type
  3292 ;;		None
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;		None
  3295 ;; Return value:  Size  Location     Type
  3296 ;;                  1    wreg      unsigned char 
  3297 ;; Registers used:
  3298 ;;		wreg, status,2, status,0
  3299 ;; Tracked objects:
  3300 ;;		On entry : 40/20
  3301 ;;		On exit  : 60/20
  3302 ;;		Unchanged: FFF9F/0
  3303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3304 ;;      Params:         0       0       0       0       0
  3305 ;;      Locals:         0       0       0       0       0
  3306 ;;      Temps:          0       0       0       0       0
  3307 ;;      Totals:         0       0       0       0       0
  3308 ;;Total ram usage:        0 bytes
  3309 ;; Hardware stack levels used:    1
  3310 ;; Hardware stack levels required when called:    3
  3311 ;; This function calls:
  3312 ;;		Nothing
  3313 ;; This function is called by:
  3314 ;;		_main
  3315 ;; This function uses a non-reentrant model
  3316 ;;
  3317  05A0                     _isFinishedTwentyMinTimer:	
  3318                           
  3319                           ;common.c: 490: if(( 0 == uiTwentyMinTimer ) && bTwentyMinStartFlag )
  3320                           
  3321                           ; Regs used in _isFinishedTwentyMinTimer: [wreg+status,2+status,0]
  3322  05A0  1683               	bsf	3,5	;RP0=1, select bank1
  3323  05A1  0850               	movf	(_uiTwentyMinTimer+1)^(0+128),w
  3324  05A2  044F               	iorwf	_uiTwentyMinTimer^(0+128),w
  3325  05A3  1D03               	skipz
  3326  05A4  3400               	retlw	0
  3327  05A5  085C               	movf	_bTwentyMinStartFlag^(0+128),w
  3328  05A6  1903               	btfsc	3,2
  3329  05A7  3400               	retlw	0
  3330  05A8  3001               	movlw	1
  3331                           
  3332                           ;common.c: 491: {
  3333                           ;common.c: 492: bTwentyMinStartFlag = 0;
  3334  05A9  01DC               	clrf	_bTwentyMinStartFlag^(0+128)
  3335                           
  3336                           ;common.c: 493: return 1;
  3337  05AA  0008               	return
  3338  05AB                     __end_of_isFinishedTwentyMinTimer:	
  3339                           ;common.c: 495: else
  3340                           ;common.c: 496: return 0;
  3341                           
  3342                           
  3343                           	psect	text1247
  3344  05EA                     __ptext1247:	
  3345 ;; =============== function _isFinishedTwentyMinTimer ends ============
  3346                           
  3347                           
  3348 ;; *************** function _clrSampeTime *****************
  3349 ;; Defined at:
  3350 ;;		line 559 in file "D:\develop\190625\AK7030-OTP\common.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;		None
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;		None
  3355 ;; Return value:  Size  Location     Type
  3356 ;;		None               void
  3357 ;; Registers used:
  3358 ;;		status,2
  3359 ;; Tracked objects:
  3360 ;;		On entry : 60/0
  3361 ;;		On exit  : 60/0
  3362 ;;		Unchanged: FFF9F/0
  3363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3364 ;;      Params:         0       0       0       0       0
  3365 ;;      Locals:         0       0       0       0       0
  3366 ;;      Temps:          0       0       0       0       0
  3367 ;;      Totals:         0       0       0       0       0
  3368 ;;Total ram usage:        0 bytes
  3369 ;; Hardware stack levels used:    1
  3370 ;; Hardware stack levels required when called:    3
  3371 ;; This function calls:
  3372 ;;		Nothing
  3373 ;; This function is called by:
  3374 ;;		_main
  3375 ;; This function uses a non-reentrant model
  3376 ;;
  3377  05EA                     _clrSampeTime:	
  3378                           
  3379                           ;common.c: 560: timer.timer10msStopWatch = 0;
  3380                           
  3381                           ; Regs used in _clrSampeTime: [status,2]
  3382  05EA  01D7               	clrf	_timer
  3383  05EB  0008               	return
  3384  05EC                     __end_of_clrSampeTime:	
  3385                           
  3386                           	psect	text1248
  3387  05D4                     __ptext1248:	
  3388 ;; =============== function _clrSampeTime ends ============
  3389                           
  3390                           
  3391 ;; *************** function _isPermitSampleTime *****************
  3392 ;; Defined at:
  3393 ;;		line 549 in file "D:\develop\190625\AK7030-OTP\common.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;		None
  3396 ;; Auto vars:     Size  Location     Type
  3397 ;;		None
  3398 ;; Return value:  Size  Location     Type
  3399 ;;                  1    wreg      unsigned char 
  3400 ;; Registers used:
  3401 ;;		wreg
  3402 ;; Tracked objects:
  3403 ;;		On entry : 60/0
  3404 ;;		On exit  : 60/0
  3405 ;;		Unchanged: FFF9F/0
  3406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3407 ;;      Params:         0       0       0       0       0
  3408 ;;      Locals:         0       0       0       0       0
  3409 ;;      Temps:          0       0       0       0       0
  3410 ;;      Totals:         0       0       0       0       0
  3411 ;;Total ram usage:        0 bytes
  3412 ;; Hardware stack levels used:    1
  3413 ;; Hardware stack levels required when called:    3
  3414 ;; This function calls:
  3415 ;;		Nothing
  3416 ;; This function is called by:
  3417 ;;		_main
  3418 ;; This function uses a non-reentrant model
  3419 ;;
  3420  05D4                     _isPermitSampleTime:	
  3421                           
  3422                           ;common.c: 550: if(timer.timer10msStopWatch >= 10)
  3423                           
  3424                           ; Regs used in _isPermitSampleTime: [wreg]
  3425  05D4  300A               	movlw	10
  3426  05D5  0257               	subwf	_timer,w
  3427  05D6  1803               	btfsc	3,0
  3428                           
  3429                           ;common.c: 551: {
  3430                           ;common.c: 552: return 1;
  3431  05D7  3401               	retlw	1
  3432                           
  3433                           ;common.c: 554: else
  3434                           ;common.c: 555: return 0;
  3435  05D8  3400               	retlw	0
  3436  05D9                     __end_of_isPermitSampleTime:	
  3437                           
  3438                           	psect	text1250
  3439  057C                     __ptext1250:	
  3440 ;; =============== function _adc_start ends ============
  3441                           
  3442                           
  3443 ;; *************** function _startTwentyMinTimer *****************
  3444 ;; Defined at:
  3445 ;;		line 479 in file "D:\develop\190625\AK7030-OTP\common.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;  uiSetValue      2    0[BANK1 ] unsigned int 
  3448 ;; Auto vars:     Size  Location     Type
  3449 ;;		None
  3450 ;; Return value:  Size  Location     Type
  3451 ;;		None               void
  3452 ;; Registers used:
  3453 ;;		wreg, status,2, status,0
  3454 ;; Tracked objects:
  3455 ;;		On entry : 17F/20
  3456 ;;		On exit  : 17F/20
  3457 ;;		Unchanged: FFE80/0
  3458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3459 ;;      Params:         0       0       2       0       0
  3460 ;;      Locals:         0       0       0       0       0
  3461 ;;      Temps:          0       0       0       0       0
  3462 ;;      Totals:         0       0       2       0       0
  3463 ;;Total ram usage:        2 bytes
  3464 ;; Hardware stack levels used:    1
  3465 ;; Hardware stack levels required when called:    3
  3466 ;; This function calls:
  3467 ;;		Nothing
  3468 ;; This function is called by:
  3469 ;;		_main
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472  057C                     _startTwentyMinTimer:	
  3473                           
  3474                           ;common.c: 480: if(( 0 == uiTwentyMinTimer) && ( 0 == bTwentyMinStartFlag))
  3475                           
  3476                           ; Regs used in _startTwentyMinTimer: [wreg+status,2+status,0]
  3477  057C  0850               	movf	(_uiTwentyMinTimer+1)^(0+128),w
  3478  057D  044F               	iorwf	_uiTwentyMinTimer^(0+128),w
  3479  057E  1D03               	skipz
  3480  057F  0008               	return
  3481  0580  08DC               	movf	_bTwentyMinStartFlag^(0+128),f
  3482  0581  1D03               	skipz
  3483  0582  0008               	return
  3484                           
  3485                           ;common.c: 481: {
  3486                           ;common.c: 482: uiTwentyMinTimer = uiSetValue;
  3487  0583  0821               	movf	(startTwentyMinTimer@uiSetValue+1)^(0+128),w
  3488  0584  00D0               	movwf	(_uiTwentyMinTimer+1)^(0+128)
  3489  0585  0820               	movf	startTwentyMinTimer@uiSetValue^(0+128),w
  3490  0586  00CF               	movwf	_uiTwentyMinTimer^(0+128)
  3491                           
  3492                           ;common.c: 483: bTwentyMinStartFlag = 1;
  3493  0587  01DC               	clrf	_bTwentyMinStartFlag^(0+128)
  3494  0588  0ADC               	incf	_bTwentyMinStartFlag^(0+128),f
  3495  0589  0008               	return
  3496  058A                     __end_of_startTwentyMinTimer:	
  3497                           
  3498                           	psect	text1252
  3499  05E7                     __ptext1252:	
  3500 ;; =============== function _adc_test_init ends ============
  3501                           
  3502                           
  3503 ;; *************** function _timer1_interrupt_config *****************
  3504 ;; Defined at:
  3505 ;;		line 282 in file "D:\develop\190625\AK7030-OTP\common.c"
  3506 ;; Parameters:    Size  Location     Type
  3507 ;;		None
  3508 ;; Auto vars:     Size  Location     Type
  3509 ;;		None
  3510 ;; Return value:  Size  Location     Type
  3511 ;;		None               void
  3512 ;; Registers used:
  3513 ;;		None
  3514 ;; Tracked objects:
  3515 ;;		On entry : 17F/20
  3516 ;;		On exit  : 17F/20
  3517 ;;		Unchanged: FFE80/0
  3518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3519 ;;      Params:         0       0       0       0       0
  3520 ;;      Locals:         0       0       0       0       0
  3521 ;;      Temps:          0       0       0       0       0
  3522 ;;      Totals:         0       0       0       0       0
  3523 ;;Total ram usage:        0 bytes
  3524 ;; Hardware stack levels used:    1
  3525 ;; Hardware stack levels required when called:    3
  3526 ;; This function calls:
  3527 ;;		Nothing
  3528 ;; This function is called by:
  3529 ;;		_main
  3530 ;; This function uses a non-reentrant model
  3531 ;;
  3532  05E7                     _timer1_interrupt_config:	
  3533                           
  3534                           ;common.c: 283: GIE = 1;
  3535                           
  3536                           ; Regs used in _timer1_interrupt_config: []
  3537  05E7  178B               	bsf	11,7
  3538                           
  3539                           ;common.c: 284: PEIE = 1;
  3540  05E8  170B               	bsf	11,6
  3541  05E9  0008               	return
  3542  05EA                     __end_of_timer1_interrupt_config:	
  3543                           
  3544                           	psect	text1253
  3545  05B5                     __ptext1253:	
  3546 ;; =============== function _timer1_interrupt_config ends ============
  3547                           
  3548                           
  3549 ;; *************** function _timer1_config *****************
  3550 ;; Defined at:
  3551 ;;		line 270 in file "D:\develop\190625\AK7030-OTP\common.c"
  3552 ;; Parameters:    Size  Location     Type
  3553 ;;		None
  3554 ;; Auto vars:     Size  Location     Type
  3555 ;;		None
  3556 ;; Return value:  Size  Location     Type
  3557 ;;		None               void
  3558 ;; Registers used:
  3559 ;;		wreg
  3560 ;; Tracked objects:
  3561 ;;		On entry : 17F/40
  3562 ;;		On exit  : 17F/20
  3563 ;;		Unchanged: FFE80/0
  3564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3565 ;;      Params:         0       0       0       0       0
  3566 ;;      Locals:         0       0       0       0       0
  3567 ;;      Temps:          0       0       0       0       0
  3568 ;;      Totals:         0       0       0       0       0
  3569 ;;Total ram usage:        0 bytes
  3570 ;; Hardware stack levels used:    1
  3571 ;; Hardware stack levels required when called:    3
  3572 ;; This function calls:
  3573 ;;		Nothing
  3574 ;; This function is called by:
  3575 ;;		_main
  3576 ;; This function uses a non-reentrant model
  3577 ;;
  3578  05B5                     _timer1_config:	
  3579                           
  3580                           ;common.c: 272: TMR1H=0xCF;
  3581                           
  3582                           ; Regs used in _timer1_config: [wreg]
  3583  05B5  30CF               	movlw	207
  3584  05B6  1303               	bcf	3,6	;RP1=0, select bank0
  3585  05B7  008F               	movwf	15	;volatile
  3586                           
  3587                           ;common.c: 273: TMR1L=0x2C;
  3588  05B8  302C               	movlw	44
  3589  05B9  008E               	movwf	14	;volatile
  3590                           
  3591                           ;common.c: 274: T1CON=0xE1;
  3592  05BA  30E1               	movlw	225
  3593  05BB  0090               	movwf	16	;volatile
  3594                           
  3595                           ;common.c: 275: TMR1IE=1;
  3596  05BC  1683               	bsf	3,5	;RP0=1, select bank1
  3597  05BD  140C               	bsf	12,0
  3598  05BE  0008               	return
  3599  05BF                     __end_of_timer1_config:	
  3600                           
  3601                           	psect	text1254
  3602  05C7                     __ptext1254:	
  3603 ;; =============== function _timer1_config ends ============
  3604                           
  3605                           
  3606 ;; *************** function _clock_config *****************
  3607 ;; Defined at:
  3608 ;;		line 262 in file "D:\develop\190625\AK7030-OTP\common.c"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;		None
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;		None
  3613 ;; Return value:  Size  Location     Type
  3614 ;;		None               void
  3615 ;; Registers used:
  3616 ;;		wreg, status,2
  3617 ;; Tracked objects:
  3618 ;;		On entry : 17F/20
  3619 ;;		On exit  : 17F/40
  3620 ;;		Unchanged: FFE80/0
  3621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3622 ;;      Params:         0       0       0       0       0
  3623 ;;      Locals:         0       0       0       0       0
  3624 ;;      Temps:          0       0       0       0       0
  3625 ;;      Totals:         0       0       0       0       0
  3626 ;;Total ram usage:        0 bytes
  3627 ;; Hardware stack levels used:    1
  3628 ;; Hardware stack levels required when called:    3
  3629 ;; This function calls:
  3630 ;;		Nothing
  3631 ;; This function is called by:
  3632 ;;		_main
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635  05C7                     _clock_config:	
  3636                           
  3637                           ;common.c: 264: CLKPR = 0x80;
  3638                           
  3639                           ; Regs used in _clock_config: [wreg+status,2]
  3640  05C7  3080               	movlw	128
  3641  05C8  1283               	bcf	3,5	;RP0=0, select bank2
  3642  05C9  1703               	bsf	3,6	;RP1=1, select bank2
  3643  05CA  0088               	movwf	8	;volatile
  3644                           
  3645                           ;common.c: 265: CLKPR = 0x00;
  3646  05CB  0188               	clrf	8	;volatile
  3647  05CC                     l1553:	
  3648                           ;common.c: 266: while(CLKPCE);
  3649                           
  3650  05CC  1F88               	btfss	8,7
  3651  05CD  0008               	return
  3652  05CE  2DCC               	goto	l1553
  3653  05CF                     __end_of_clock_config:	
  3654                           
  3655                           	psect	text1255
  3656  05EC                     __ptext1255:	
  3657 ;; =============== function _clock_config ends ============
  3658                           
  3659                           
  3660 ;; *************** function _reset *****************
  3661 ;; Defined at:
  3662 ;;		line 309 in file "D:\develop\190625\AK7030-OTP\main.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;		None
  3665 ;; Auto vars:     Size  Location     Type
  3666 ;;		None
  3667 ;; Return value:  Size  Location     Type
  3668 ;;		None               void
  3669 ;; Registers used:
  3670 ;;		None
  3671 ;; Tracked objects:
  3672 ;;		On entry : 40/20
  3673 ;;		On exit  : 60/20
  3674 ;;		Unchanged: FFFFFF9F/0
  3675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3676 ;;      Params:         0       0       0       0       0
  3677 ;;      Locals:         0       0       0       0       0
  3678 ;;      Temps:          0       0       0       0       0
  3679 ;;      Totals:         0       0       0       0       0
  3680 ;;Total ram usage:        0 bytes
  3681 ;; Hardware stack levels used:    1
  3682 ;; Hardware stack levels required when called:    3
  3683 ;; This function calls:
  3684 ;;		Nothing
  3685 ;; This function is called by:
  3686 ;;		_main
  3687 ;; This function uses a non-reentrant model
  3688 ;;
  3689  05EC                     _reset:	
  3690  05EC                     l727:	
  3691                           ; Regs used in _reset: []
  3692                           ;main.c: 311: while(1);
  3693                           
  3694  05EC  2DEC               	goto	l727
  3695                           
  3696                           	psect	text1256
  3697  05E3                     __ptext1256:	
  3698  05E3                     __end_of_reset:	
  3699                           
  3700 ;; =============== function _reset ends ============
  3701 ;; *************** function _selectAdChannel *****************
  3702 ;; Defined at:
  3703 ;;		line 298 in file "D:\develop\190625\AK7030-OTP\main.c"
  3704 ;; Parameters:    Size  Location     Type
  3705 ;;		None
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;		None
  3708 ;; Return value:  Size  Location     Type
  3709 ;;		None               void
  3710 ;; Registers used:
  3711 ;;		None
  3712 ;; Tracked objects:
  3713 ;;		On entry : 17F/0
  3714 ;;		On exit  : 17F/20
  3715 ;;		Unchanged: FFE80/0
  3716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3717 ;;      Params:         0       0       0       0       0
  3718 ;;      Locals:         0       0       0       0       0
  3719 ;;      Temps:          0       0       0       0       0
  3720 ;;      Totals:         0       0       0       0       0
  3721 ;;Total ram usage:        0 bytes
  3722 ;; Hardware stack levels used:    1
  3723 ;; Hardware stack levels required when called:    3
  3724 ;; This function calls:
  3725 ;;		Nothing
  3726 ;; This function is called by:
  3727 ;;		_main
  3728 ;; This function uses a non-reentrant model
  3729 ;;
  3730  05E3                     _selectAdChannel:	
  3731                           
  3732                           ;main.c: 300: TRISB0 = 1;
  3733                           
  3734                           ; Regs used in _selectAdChannel: []
  3735  05E3  1683               	bsf	3,5	;RP0=1, select bank1
  3736  05E4  1406               	bsf	6,0
  3737                           
  3738                           ;main.c: 301: TRISB1 = 1;
  3739  05E5  1486               	bsf	6,1
  3740  05E6  0008               	return
  3741  05E7                     __end_of_selectAdChannel:	
  3742                           
  3743                           	psect	text1257
  3744  053C                     __ptext1257:	
  3745 ;; =============== function _selectAdChannel ends ============
  3746                           
  3747                           
  3748 ;; *************** function _pwm_start *****************
  3749 ;; Defined at:
  3750 ;;		line 246 in file "D:\develop\190625\AK7030-OTP\main.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;  ucPulseWidth    1    wreg     unsigned char 
  3753 ;;  ucPulseFrequ    1    0[BANK1 ] unsigned char 
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;  ucPulseWidth    1    1[BANK1 ] unsigned char 
  3756 ;; Return value:  Size  Location     Type
  3757 ;;		None               void
  3758 ;; Registers used:
  3759 ;;		wreg, status,2, status,0
  3760 ;; Tracked objects:
  3761 ;;		On entry : 17F/20
  3762 ;;		On exit  : 17F/0
  3763 ;;		Unchanged: FFE80/0
  3764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3765 ;;      Params:         0       0       1       0       0
  3766 ;;      Locals:         0       0       1       0       0
  3767 ;;      Temps:          0       0       0       0       0
  3768 ;;      Totals:         0       0       2       0       0
  3769 ;;Total ram usage:        2 bytes
  3770 ;; Hardware stack levels used:    1
  3771 ;; Hardware stack levels required when called:    3
  3772 ;; This function calls:
  3773 ;;		Nothing
  3774 ;; This function is called by:
  3775 ;;		_main
  3776 ;; This function uses a non-reentrant model
  3777 ;;
  3778  053C                     _pwm_start:	
  3779                           
  3780                           ; Regs used in _pwm_start: [wreg+status,2+status,0]
  3781                           ;pwm_start@ucPulseWidth stored from wreg
  3782  053C  00A1               	movwf	pwm_start@ucPulseWidth^(0+128)
  3783                           
  3784                           ;main.c: 248: CCP1CON&= 0xf0;
  3785  053D  30F0               	movlw	240
  3786  053E  1283               	bcf	3,5	;RP0=0, select bank0
  3787  053F  0597               	andwf	23,f	;volatile
  3788                           
  3789                           ;main.c: 250: T2CON=0x04;
  3790  0540  3004               	movlw	4
  3791  0541  0092               	movwf	18	;volatile
  3792                           
  3793                           ;main.c: 251: PR2 = ucPulseFrequency;
  3794  0542  1683               	bsf	3,5	;RP0=1, select bank1
  3795  0543  0820               	movf	pwm_start@ucPulseFrequency^(0+128),w
  3796  0544  0092               	movwf	18	;volatile
  3797                           
  3798                           ;main.c: 252: CCPR1L = ucPulseWidth;
  3799  0545  0821               	movf	pwm_start@ucPulseWidth^(0+128),w
  3800  0546  1283               	bcf	3,5	;RP0=0, select bank0
  3801  0547  0095               	movwf	21	;volatile
  3802                           
  3803                           ;main.c: 253: CCP1CON=0x00;
  3804  0548  0197               	clrf	23	;volatile
  3805                           
  3806                           ;main.c: 255: TRISB2=0;
  3807  0549  1683               	bsf	3,5	;RP0=1, select bank1
  3808  054A  300C               	movlw	12
  3809  054B  1106               	bcf	6,2
  3810                           
  3811                           ;main.c: 256: PBOD2 = 0;
  3812  054C  1703               	bsf	3,6	;RP1=1, select bank3
  3813  054D  1108               	bcf	8,2
  3814                           
  3815                           ;main.c: 258: CCP1CON|= 0x0c;
  3816  054E  1283               	bcf	3,5	;RP0=0, select bank0
  3817  054F  1303               	bcf	3,6	;RP1=0, select bank0
  3818  0550  0497               	iorwf	23,f	;volatile
  3819  0551  0008               	return
  3820  0552                     __end_of_pwm_start:	
  3821                           
  3822                           	psect	text1265
  3823  05D9                     __ptext1265:	
  3824 ;; =============== function _initPB3 ends ============
  3825                           
  3826                           
  3827 ;; *************** function _clearThreeHoursTimer *****************
  3828 ;; Defined at:
  3829 ;;		line 414 in file "D:\develop\190625\AK7030-OTP\common.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;		None
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;		None
  3834 ;; Return value:  Size  Location     Type
  3835 ;;		None               void
  3836 ;; Registers used:
  3837 ;;		status,2
  3838 ;; Tracked objects:
  3839 ;;		On entry : 40/20
  3840 ;;		On exit  : 60/20
  3841 ;;		Unchanged: FFF9F/0
  3842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3843 ;;      Params:         0       0       0       0       0
  3844 ;;      Locals:         0       0       0       0       0
  3845 ;;      Temps:          0       0       0       0       0
  3846 ;;      Totals:         0       0       0       0       0
  3847 ;;Total ram usage:        0 bytes
  3848 ;; Hardware stack levels used:    1
  3849 ;; Hardware stack levels required when called:    3
  3850 ;; This function calls:
  3851 ;;		Nothing
  3852 ;; This function is called by:
  3853 ;;		_main
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856  05D9                     _clearThreeHoursTimer:	
  3857                           
  3858                           ;common.c: 415: uiSmallTimer = 0;
  3859                           
  3860                           ; Regs used in _clearThreeHoursTimer: [status,2]
  3861  05D9  1683               	bsf	3,5	;RP0=1, select bank1
  3862  05DA  01CD               	clrf	_uiSmallTimer^(0+128)
  3863  05DB  01CE               	clrf	(_uiSmallTimer+1)^(0+128)
  3864                           
  3865                           ;common.c: 416: bSmallTimerStartFlag = 0;
  3866  05DC  01DB               	clrf	_bSmallTimerStartFlag^(0+128)
  3867  05DD  0008               	return
  3868  05DE                     __end_of_clearThreeHoursTimer:	
  3869                           
  3870                           	psect	text1266
  3871  05DE                     __ptext1266:	
  3872 ;; =============== function _clearThreeHoursTimer ends ============
  3873                           
  3874                           
  3875 ;; *************** function _clearTwelveHoursTimer *****************
  3876 ;; Defined at:
  3877 ;;		line 407 in file "D:\develop\190625\AK7030-OTP\common.c"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;		None
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;		None
  3882 ;; Return value:  Size  Location     Type
  3883 ;;		None               void
  3884 ;; Registers used:
  3885 ;;		status,2
  3886 ;; Tracked objects:
  3887 ;;		On entry : 40/20
  3888 ;;		On exit  : 60/20
  3889 ;;		Unchanged: FFF9F/0
  3890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3891 ;;      Params:         0       0       0       0       0
  3892 ;;      Locals:         0       0       0       0       0
  3893 ;;      Temps:          0       0       0       0       0
  3894 ;;      Totals:         0       0       0       0       0
  3895 ;;Total ram usage:        0 bytes
  3896 ;; Hardware stack levels used:    1
  3897 ;; Hardware stack levels required when called:    3
  3898 ;; This function calls:
  3899 ;;		Nothing
  3900 ;; This function is called by:
  3901 ;;		_main
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904  05DE                     _clearTwelveHoursTimer:	
  3905                           
  3906                           ;common.c: 408: uiBigTimer = 0;
  3907                           
  3908                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  3909  05DE  1683               	bsf	3,5	;RP0=1, select bank1
  3910  05DF  01C9               	clrf	_uiBigTimer^(0+128)
  3911  05E0  01CA               	clrf	(_uiBigTimer+1)^(0+128)
  3912                           
  3913                           ;common.c: 409: bBigTimerStartFlag = 0;
  3914  05E1  01D9               	clrf	_bBigTimerStartFlag^(0+128)
  3915  05E2  0008               	return
  3916  05E3                     __end_of_clearTwelveHoursTimer:	
  3917                           
  3918                           	psect	text1267
  3919  0013                     __ptext1267:	
  3920 ;; =============== function _clearTwelveHoursTimer ends ============
  3921                           
  3922                           
  3923 ;; *************** function _ISR *****************
  3924 ;; Defined at:
  3925 ;;		line 608 in file "D:\develop\190625\AK7030-OTP\common.c"
  3926 ;; Parameters:    Size  Location     Type
  3927 ;;		None
  3928 ;; Auto vars:     Size  Location     Type
  3929 ;;		None
  3930 ;; Return value:  Size  Location     Type
  3931 ;;		None               void
  3932 ;; Registers used:
  3933 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3934 ;; Tracked objects:
  3935 ;;		On entry : 0/0
  3936 ;;		On exit  : 60/0
  3937 ;;		Unchanged: FFE00/0
  3938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3939 ;;      Params:         0       0       0       0       0
  3940 ;;      Locals:         0       0       0       0       0
  3941 ;;      Temps:          0       4       0       0       0
  3942 ;;      Totals:         0       4       0       0       0
  3943 ;;Total ram usage:        4 bytes
  3944 ;; Hardware stack levels used:    1
  3945 ;; Hardware stack levels required when called:    2
  3946 ;; This function calls:
  3947 ;;		i1_setAD_ConvertFlag
  3948 ;;		_adc_get
  3949 ;;		_vPutSampleDataIntoTable
  3950 ;; This function is called by:
  3951 ;;		Interrupt level 1
  3952 ;; This function uses a non-reentrant model
  3953 ;;
  3954  0013                     _ISR:	
  3955                           
  3956                           ;common.c: 609: static unsigned char ucTimer1sCnt = 0;
  3957                           ;common.c: 612: if(TMR1IF == 1)
  3958  0013  1C0C               	btfss	12,0
  3959  0014  2852               	goto	i1l3793
  3960  0015  3064               	movlw	100
  3961                           
  3962                           ;common.c: 613: {
  3963                           ;common.c: 614: TMR1IF = 0 ;
  3964  0016  100C               	bcf	12,0
  3965                           
  3966                           ;common.c: 615: timer.timer10msStopWatch++;
  3967  0017  0AD7               	incf	_timer,f
  3968                           
  3969                           ;common.c: 616: ucTimer1sCnt++;
  3970  0018  0AD4               	incf	ISR@ucTimer1sCnt,f
  3971                           
  3972                           ;common.c: 620: if(ucTimer1sCnt >= 100)
  3973  0019  0254               	subwf	ISR@ucTimer1sCnt,w
  3974  001A  1C03               	skipc
  3975  001B  2852               	goto	i1l3793
  3976                           
  3977                           ;common.c: 621: {
  3978                           ;common.c: 622: ucTimer1sCnt = 0;
  3979  001C  01D4               	clrf	ISR@ucTimer1sCnt
  3980                           
  3981                           ;common.c: 623: if(uiBigTimer > 0)
  3982  001D  1683               	bsf	3,5	;RP0=1, select bank1
  3983  001E  084A               	movf	(_uiBigTimer+1)^(0+128),w
  3984  001F  0449               	iorwf	_uiBigTimer^(0+128),w
  3985  0020  1903               	skipnz
  3986  0021  2828               	goto	i1l1684
  3987                           
  3988                           ;common.c: 624: uiBigTimer--;
  3989  0022  3001               	movlw	1
  3990  0023  02C9               	subwf	_uiBigTimer^(0+128),f
  3991  0024  3000               	movlw	0
  3992  0025  1C03               	skipc
  3993  0026  03CA               	decf	(_uiBigTimer+1)^(0+128),f
  3994  0027  02CA               	subwf	(_uiBigTimer+1)^(0+128),f
  3995  0028                     i1l1684:	
  3996                           
  3997                           ;common.c: 626: if(uiSmallTimer)
  3998  0028  084E               	movf	(_uiSmallTimer+1)^(0+128),w
  3999  0029  044D               	iorwf	_uiSmallTimer^(0+128),w
  4000  002A  1903               	skipnz
  4001  002B  2832               	goto	i1l1685
  4002                           
  4003                           ;common.c: 627: uiSmallTimer--;
  4004  002C  3001               	movlw	1
  4005  002D  02CD               	subwf	_uiSmallTimer^(0+128),f
  4006  002E  3000               	movlw	0
  4007  002F  1C03               	skipc
  4008  0030  03CE               	decf	(_uiSmallTimer+1)^(0+128),f
  4009  0031  02CE               	subwf	(_uiSmallTimer+1)^(0+128),f
  4010  0032                     i1l1685:	
  4011                           
  4012                           ;common.c: 629: if(uiTwentySecondsTimer)
  4013  0032  1283               	bcf	3,5	;RP0=0, select bank0
  4014  0033  0851               	movf	_uiTwentySecondsTimer+1,w
  4015  0034  0450               	iorwf	_uiTwentySecondsTimer,w
  4016  0035  1903               	skipnz
  4017  0036  283D               	goto	i1l1686
  4018                           
  4019                           ;common.c: 630: uiTwentySecondsTimer--;
  4020  0037  3001               	movlw	1
  4021  0038  02D0               	subwf	_uiTwentySecondsTimer,f
  4022  0039  3000               	movlw	0
  4023  003A  1C03               	skipc
  4024  003B  03D1               	decf	_uiTwentySecondsTimer+1,f
  4025  003C  02D1               	subwf	_uiTwentySecondsTimer+1,f
  4026  003D                     i1l1686:	
  4027                           
  4028                           ;common.c: 632: if(uiTwentyMinTimer)
  4029  003D  1683               	bsf	3,5	;RP0=1, select bank1
  4030  003E  0850               	movf	(_uiTwentyMinTimer+1)^(0+128),w
  4031  003F  044F               	iorwf	_uiTwentyMinTimer^(0+128),w
  4032  0040  1903               	skipnz
  4033  0041  2848               	goto	i1l1687
  4034                           
  4035                           ;common.c: 633: uiTwentyMinTimer--;
  4036  0042  3001               	movlw	1
  4037  0043  02CF               	subwf	_uiTwentyMinTimer^(0+128),f
  4038  0044  3000               	movlw	0
  4039  0045  1C03               	skipc
  4040  0046  03D0               	decf	(_uiTwentyMinTimer+1)^(0+128),f
  4041  0047  02D0               	subwf	(_uiTwentyMinTimer+1)^(0+128),f
  4042  0048                     i1l1687:	
  4043                           
  4044                           ;common.c: 635: if( uiOneHourTimer )
  4045  0048  084C               	movf	(_uiOneHourTimer+1)^(0+128),w
  4046  0049  044B               	iorwf	_uiOneHourTimer^(0+128),w
  4047  004A  1903               	skipnz
  4048  004B  2852               	goto	i1l3793
  4049                           
  4050                           ;common.c: 636: uiOneHourTimer--;
  4051  004C  3001               	movlw	1
  4052  004D  02CB               	subwf	_uiOneHourTimer^(0+128),f
  4053  004E  3000               	movlw	0
  4054  004F  1C03               	skipc
  4055  0050  03CC               	decf	(_uiOneHourTimer+1)^(0+128),f
  4056  0051  02CC               	subwf	(_uiOneHourTimer+1)^(0+128),f
  4057  0052                     i1l3793:	
  4058                           
  4059                           ;common.c: 637: }
  4060                           ;common.c: 638: }
  4061                           ;common.c: 640: if(ADIF)
  4062  0052  1283               	bcf	3,5	;RP0=0, select bank0
  4063  0053  1D0D               	btfss	13,2
  4064  0054  286F               	goto	i1l1692
  4065  0055  3001               	movlw	1
  4066                           
  4067                           ;common.c: 641: {
  4068                           ;common.c: 643: ADIF=0;
  4069  0056  110D               	bcf	13,2
  4070                           
  4071                           ;common.c: 644: setAD_ConvertFlag(1);
  4072  0057  2088  118A         	fcall	i1_setAD_ConvertFlag
  4073                           
  4074                           ;common.c: 646: if(sampleChannelSelect == 12)
  4075  0059  1683               	bsf	3,5	;RP0=1, select bank1
  4076  005A  0862               	movf	_sampleChannelSelect^(0+128),w
  4077  005B  3A0C               	xorlw	12
  4078  005C  1D03               	skipz
  4079  005D  2866               	goto	i1l3803
  4080                           
  4081                           ;common.c: 647: {
  4082                           ;common.c: 650: vPutSampleDataIntoTable(adc_get(),12);
  4083  005E  207C  118A         	fcall	_adc_get
  4084  0060  0871               	movf	?_adc_get+1,w
  4085  0061  00F7               	movwf	?_vPutSampleDataIntoTable+1
  4086  0062  0870               	movf	?_adc_get,w
  4087  0063  00F6               	movwf	?_vPutSampleDataIntoTable
  4088  0064  300C               	movlw	12
  4089  0065  286D               	goto	L14
  4090  0066                     i1l3803:	
  4091                           ;common.c: 654: }
  4092                           
  4093                           
  4094                           ;common.c: 655: else
  4095                           ;common.c: 656: {
  4096                           ;common.c: 660: vPutSampleDataIntoTable(adc_get(),13);
  4097  0066  207C  118A         	fcall	_adc_get
  4098  0068  0871               	movf	?_adc_get+1,w
  4099  0069  00F7               	movwf	?_vPutSampleDataIntoTable+1
  4100  006A  0870               	movf	?_adc_get,w
  4101  006B  00F6               	movwf	?_vPutSampleDataIntoTable
  4102  006C  300D               	movlw	13
  4103  006D                     L14:	
  4104  006D  00F8               	movwf	?_vPutSampleDataIntoTable+2
  4105  006E  208B               	fcall	_vPutSampleDataIntoTable
  4106  006F                     i1l1692:	
  4107  006F  1283               	bcf	3,5	;RP0=0, select bank0
  4108  0070  1303               	bcf	3,6	;RP1=0, select bank0
  4109  0071  0847               	movf	??_ISR+3,w
  4110  0072  00FF               	movwf	127
  4111  0073  0846               	movf	??_ISR+2,w
  4112  0074  008A               	movwf	10
  4113  0075  0845               	movf	??_ISR+1,w
  4114  0076  0084               	movwf	4
  4115  0077  0E44               	swapf	??_ISR^0,w
  4116  0078  0083               	movwf	3
  4117  0079  0EFE               	swapf	126,f
  4118  007A  0E7E               	swapf	126,w
  4119  007B  0009               	retfie
  4120  007C                     __end_of_ISR:	
  4121  007C                     __ptext1271:	
  4122 ;; =============== function i1_Filter ends ============
  4123                           
  4124                           
  4125 ;; *************** function _adc_get *****************
  4126 ;; Defined at:
  4127 ;;		line 106 in file "D:\develop\190625\AK7030-OTP\periph.c"
  4128 ;; Parameters:    Size  Location     Type
  4129 ;;		None
  4130 ;; Auto vars:     Size  Location     Type
  4131 ;;  val             2    2[COMMON] unsigned int 
  4132 ;; Return value:  Size  Location     Type
  4133 ;;                  2    0[COMMON] unsigned int 
  4134 ;; Registers used:
  4135 ;;		wreg
  4136 ;; Tracked objects:
  4137 ;;		On entry : 60/20
  4138 ;;		On exit  : 60/20
  4139 ;;		Unchanged: FFF9F/0
  4140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4141 ;;      Params:         2       0       0       0       0
  4142 ;;      Locals:         2       0       0       0       0
  4143 ;;      Temps:          0       0       0       0       0
  4144 ;;      Totals:         4       0       0       0       0
  4145 ;;Total ram usage:        4 bytes
  4146 ;; Hardware stack levels used:    1
  4147 ;; This function calls:
  4148 ;;		Nothing
  4149 ;; This function is called by:
  4150 ;;		_ISR
  4151 ;; This function uses a non-reentrant model
  4152 ;;
  4153  007C                     _adc_get:	
  4154                           
  4155                           ;periph.c: 107: unsigned int val;
  4156                           ;periph.c: 108: val = (ADRESH<<8) | ADRESL;
  4157                           
  4158                           ; Regs used in _adc_get: [wreg]
  4159  007C  1283               	bcf	3,5	;RP0=0, select bank0
  4160  007D  081E               	movf	30,w	;volatile
  4161  007E  00F3               	movwf	adc_get@val+1
  4162  007F  01F2               	clrf	adc_get@val
  4163  0080  1683               	bsf	3,5	;RP0=1, select bank1
  4164  0081  081E               	movf	30,w	;volatile
  4165  0082  04F2               	iorwf	adc_get@val,f
  4166                           
  4167                           ;periph.c: 109: return val;
  4168  0083  0873               	movf	adc_get@val+1,w
  4169  0084  00F1               	movwf	?_adc_get+1
  4170  0085  0872               	movf	adc_get@val,w
  4171  0086  00F0               	movwf	?_adc_get
  4172  0087  0008               	return
  4173  0088                     __end_of_adc_get:	
  4174  0088                     __ptext1269:	
  4175 ;; =============== function _vPutSampleDataIntoTable ends ============
  4176                           
  4177                           
  4178 ;; *************** function i1_setAD_ConvertFlag *****************
  4179 ;; Defined at:
  4180 ;;		line 296 in file "D:\develop\190625\AK7030-OTP\common.c"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;  setAD_Conver    1    wreg     unsigned char 
  4183 ;; Auto vars:     Size  Location     Type
  4184 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  4185 ;; Return value:  Size  Location     Type
  4186 ;;		None               void
  4187 ;; Registers used:
  4188 ;;		wreg
  4189 ;; Tracked objects:
  4190 ;;		On entry : 60/0
  4191 ;;		On exit  : 60/0
  4192 ;;		Unchanged: FFF9F/0
  4193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4194 ;;      Params:         0       0       0       0       0
  4195 ;;      Locals:         1       0       0       0       0
  4196 ;;      Temps:          0       0       0       0       0
  4197 ;;      Totals:         1       0       0       0       0
  4198 ;;Total ram usage:        1 bytes
  4199 ;; Hardware stack levels used:    1
  4200 ;; This function calls:
  4201 ;;		Nothing
  4202 ;; This function is called by:
  4203 ;;		_ISR
  4204 ;; This function uses a non-reentrant model
  4205 ;;
  4206  0088                     i1_setAD_ConvertFlag:	
  4207                           
  4208                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  4209                           ;i1setAD_ConvertFlag@flag stored from wreg
  4210  0088  00F0               	movwf	i1setAD_ConvertFlag@flag
  4211                           
  4212                           ;common.c: 297: adc_convert_flag = flag;
  4213  0089  00D5               	movwf	_adc_convert_flag
  4214  008A  0008               	return
  4215  008B                     __end_ofi1_setAD_ConvertFlag:	
  4216  008B                     __ptext1268:	
  4217 ;; =============== function _ISR ends ============
  4218                           
  4219                           
  4220 ;; *************** function _vPutSampleDataIntoTable *****************
  4221 ;; Defined at:
  4222 ;;		line 111 in file "D:\develop\190625\AK7030-OTP\common.c"
  4223 ;; Parameters:    Size  Location     Type
  4224 ;;  uiSampleData    2    6[COMMON] unsigned int 
  4225 ;;  channel         1    8[COMMON] unsigned char 
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;  ucIndex         1   33[BANK0 ] unsigned char 
  4228 ;;  uiCalWidth      2   31[BANK0 ] unsigned int 
  4229 ;;  uiSum           2   29[BANK0 ] unsigned int 
  4230 ;;  i               2   34[BANK0 ] int 
  4231 ;; Return value:  Size  Location     Type
  4232 ;;		None               void
  4233 ;; Registers used:
  4234 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4235 ;; Tracked objects:
  4236 ;;		On entry : 60/20
  4237 ;;		On exit  : 0/0
  4238 ;;		Unchanged: FFE00/0
  4239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4240 ;;      Params:         3       0       0       0       0
  4241 ;;      Locals:         0       7       0       0       0
  4242 ;;      Temps:          2       0       0       0       0
  4243 ;;      Totals:         5       7       0       0       0
  4244 ;;Total ram usage:       12 bytes
  4245 ;; Hardware stack levels used:    1
  4246 ;; Hardware stack levels required when called:    1
  4247 ;; This function calls:
  4248 ;;		i1_Filter
  4249 ;;		_setPWM_Width
  4250 ;; This function is called by:
  4251 ;;		_ISR
  4252 ;; This function uses a non-reentrant model
  4253 ;;
  4254  008B                     _vPutSampleDataIntoTable:	
  4255                           
  4256                           ;common.c: 113: static unsigned char ucChannelFirstLength = 0;
  4257                           ;common.c: 115: static unsigned char ucChannelFourthLength = 0;
  4258                           ;common.c: 117: static unsigned char ucChannelFourteenthLength = 0;
  4259                           ;common.c: 119: if(channel == 12)
  4260                           
  4261                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  4262  008B  0878               	movf	vPutSampleDataIntoTable@channel,w
  4263  008C  3A0C               	xorlw	12
  4264  008D  1D03               	skipz
  4265  008E  28FF               	goto	i1l3715
  4266                           
  4267                           ;common.c: 120: {
  4268                           ;common.c: 121: if(ucChannelFirstLength < 10)
  4269  008F  300A               	movlw	10
  4270  0090  027B               	subwf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4271  0091  1803               	skipnc
  4272  0092  28F9               	goto	i1l3711
  4273                           
  4274                           ;common.c: 122: {
  4275                           ;common.c: 123: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  4276  0093  1003               	clrc
  4277  0094  0D7B               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4278  0095  3E90               	addlw	_uiSampleChannelFirst& (0+255)
  4279  0096  21F3  118A         	fcall	PL3	;call to abstracted procedure
  4280                           
  4281                           ;common.c: 125: ucChannelFirstLength++;
  4282  0098  0AFB               	incf	vPutSampleDataIntoTable@ucChannelFirstLength,f
  4283                           
  4284                           ;common.c: 127: if( 10 == ucChannelFirstLength )
  4285  0099  087B               	movf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4286  009A  3A0A               	xorlw	10
  4287  009B  1D03               	skipz
  4288  009C  0008               	return
  4289                           
  4290                           ;common.c: 128: {
  4291                           ;common.c: 131: static unsigned int uiCalWidthArray[4],uiCalWidthCnt = 0;
  4292                           ;common.c: 133: static unsigned char uiInitWidth = 75;
  4293                           ;common.c: 135: uiCalWidthArray[uiCalWidthCnt++] = Filter(uiSampleChannelFirst);
  4294  009D  3090               	movlw	_uiSampleChannelFirst& (0+255)
  4295  009E  2148  118A         	fcall	i1_Filter
  4296  00A0  1003               	clrc
  4297  00A1  0D52               	rlf	vPutSampleDataIntoTable@uiCalWidthCnt,w
  4298  00A2  3E48               	addlw	vPutSampleDataIntoTable@uiCalWidthArray& (0+255)
  4299  00A3  0084               	movwf	4
  4300  00A4  0870               	movf	?i1_Filter,w
  4301  00A5  0080               	movwf	0
  4302  00A6  0A84               	incf	4,f
  4303  00A7  0871               	movf	?i1_Filter+1,w
  4304  00A8  0080               	movwf	0
  4305  00A9  0AD2               	incf	vPutSampleDataIntoTable@uiCalWidthCnt,f
  4306  00AA  1903               	skipnz
  4307  00AB  0AD3               	incf	vPutSampleDataIntoTable@uiCalWidthCnt+1,f
  4308                           
  4309                           ;common.c: 137: if( 4 == uiCalWidthCnt )
  4310  00AC  0852               	movf	vPutSampleDataIntoTable@uiCalWidthCnt,w
  4311  00AD  3A04               	xorlw	4
  4312  00AE  0453               	iorwf	vPutSampleDataIntoTable@uiCalWidthCnt+1,w
  4313  00AF  1D03               	skipz
  4314  00B0  0008               	return
  4315                           
  4316                           ;common.c: 138: {
  4317                           ;common.c: 139: uiCalWidthCnt = 0;
  4318  00B1  01D2               	clrf	vPutSampleDataIntoTable@uiCalWidthCnt
  4319  00B2  01D3               	clrf	vPutSampleDataIntoTable@uiCalWidthCnt+1
  4320  00B3  01BD               	clrf	vPutSampleDataIntoTable@uiSum
  4321  00B4  01BE               	clrf	vPutSampleDataIntoTable@uiSum+1
  4322                           
  4323                           ;common.c: 143: for(unsigned char ucIndex = 0; ucIndex < 4;ucIndex++)
  4324  00B5  01C1               	clrf	vPutSampleDataIntoTable@ucIndex
  4325                           
  4326                           ;common.c: 144: {
  4327                           ;common.c: 145: uiSum += uiCalWidthArray[ucIndex];
  4328  00B6  1003               	clrc
  4329  00B7                     L15:	
  4330  00B7  0D41               	rlf	vPutSampleDataIntoTable@ucIndex,w
  4331  00B8  3E48               	addlw	vPutSampleDataIntoTable@uiCalWidthArray& (0+255)
  4332  00B9  0084               	movwf	4
  4333  00BA  0800               	movf	0,w
  4334  00BB  00F9               	movwf	??_vPutSampleDataIntoTable
  4335  00BC  0A84               	incf	4,f
  4336  00BD  0800               	movf	0,w
  4337  00BE  00FA               	movwf	??_vPutSampleDataIntoTable+1
  4338  00BF  0879               	movf	??_vPutSampleDataIntoTable,w
  4339  00C0  07BD               	addwf	vPutSampleDataIntoTable@uiSum,f
  4340  00C1  1803               	skipnc
  4341  00C2  0ABE               	incf	vPutSampleDataIntoTable@uiSum+1,f
  4342  00C3  087A               	movf	??_vPutSampleDataIntoTable+1,w
  4343  00C4  07BE               	addwf	vPutSampleDataIntoTable@uiSum+1,f
  4344                           
  4345                           ;common.c: 146: uiCalWidthArray[ucIndex] = 0;
  4346  00C5  1003               	clrc
  4347  00C6  0D41               	rlf	vPutSampleDataIntoTable@ucIndex,w
  4348  00C7  3E48               	addlw	vPutSampleDataIntoTable@uiCalWidthArray& (0+255)
  4349  00C8  0084               	movwf	4
  4350  00C9  3004               	movlw	4
  4351  00CA  0180               	clrf	0
  4352  00CB  0A84               	incf	4,f
  4353  00CC  0180               	clrf	0
  4354  00CD  0AC1               	incf	vPutSampleDataIntoTable@ucIndex,f
  4355  00CE  0241               	subwf	vPutSampleDataIntoTable@ucIndex,w
  4356  00CF  1C03               	skipc
  4357  00D0  28B7               	goto	L15
  4358                           
  4359                           ;common.c: 147: }
  4360                           ;common.c: 149: uiCalWidth = uiSum >> 2;
  4361  00D1  083E               	movf	vPutSampleDataIntoTable@uiSum+1,w
  4362  00D2  00C0               	movwf	vPutSampleDataIntoTable@uiCalWidth+1
  4363  00D3  083D               	movf	vPutSampleDataIntoTable@uiSum,w
  4364  00D4  00BF               	movwf	vPutSampleDataIntoTable@uiCalWidth
  4365  00D5  3001               	movlw	1
  4366  00D6  1003               	clrc
  4367  00D7  0CC0               	rrf	vPutSampleDataIntoTable@uiCalWidth+1,f
  4368  00D8  0CBF               	rrf	vPutSampleDataIntoTable@uiCalWidth,f
  4369  00D9  1003               	clrc
  4370  00DA  0CC0               	rrf	vPutSampleDataIntoTable@uiCalWidth+1,f
  4371  00DB  0CBF               	rrf	vPutSampleDataIntoTable@uiCalWidth,f
  4372                           
  4373                           ;common.c: 151: if(uiCalWidth > (312))
  4374  00DC  0240               	subwf	vPutSampleDataIntoTable@uiCalWidth+1,w
  4375  00DD  3039               	movlw	57
  4376  00DE  1903               	skipnz
  4377  00DF  023F               	subwf	vPutSampleDataIntoTable@uiCalWidth,w
  4378  00E0  1C03               	skipc
  4379  00E1  28E4               	goto	i1l3699
  4380                           
  4381                           ;common.c: 152: {
  4382                           ;common.c: 155: uiInitWidth++;
  4383  00E2  0AED               	incf	vPutSampleDataIntoTable@uiInitWidth,f
  4384                           
  4385                           ;common.c: 156: }
  4386  00E3  28EB               	goto	i1l3703
  4387  00E4                     i1l3699:	
  4388                           
  4389                           ;common.c: 157: else if(uiCalWidth < (312))
  4390  00E4  3001               	movlw	1
  4391  00E5  0240               	subwf	vPutSampleDataIntoTable@uiCalWidth+1,w
  4392  00E6  3038               	movlw	56
  4393  00E7  1903               	skipnz
  4394  00E8  023F               	subwf	vPutSampleDataIntoTable@uiCalWidth,w
  4395  00E9  1C03               	btfss	3,0
  4396                           
  4397                           ;common.c: 158: {
  4398                           ;common.c: 161: uiInitWidth--;
  4399  00EA  03ED               	decf	vPutSampleDataIntoTable@uiInitWidth,f
  4400  00EB                     i1l3703:	
  4401                           ;common.c: 162: }
  4402                           
  4403                           
  4404                           ;common.c: 166: if(uiInitWidth > 249)
  4405  00EB  30FA               	movlw	250
  4406  00EC  026D               	subwf	vPutSampleDataIntoTable@uiInitWidth,w
  4407  00ED  1C03               	skipc
  4408  00EE  28F1               	goto	i1l1535
  4409                           
  4410                           ;common.c: 167: uiInitWidth = 249;
  4411  00EF  30F9               	movlw	249
  4412  00F0  00ED               	movwf	vPutSampleDataIntoTable@uiInitWidth
  4413  00F1                     i1l1535:	
  4414                           
  4415                           ;common.c: 169: if(uiInitWidth < 75)
  4416  00F1  304B               	movlw	75
  4417  00F2  026D               	subwf	vPutSampleDataIntoTable@uiInitWidth,w
  4418  00F3  1803               	skipnc
  4419  00F4  28F7               	goto	i1l3709
  4420                           
  4421                           ;common.c: 170: uiInitWidth = 75;
  4422  00F5  304B               	movlw	75
  4423  00F6  00ED               	movwf	vPutSampleDataIntoTable@uiInitWidth
  4424  00F7                     i1l3709:	
  4425                           
  4426                           ;common.c: 174: setPWM_Width(uiInitWidth);
  4427  00F7  086D               	movf	vPutSampleDataIntoTable@uiInitWidth,w
  4428  00F8  29E1               	ljmp	_setPWM_Width
  4429  00F9                     i1l3711:	
  4430                           
  4431                           ;common.c: 203: else
  4432                           ;common.c: 204: {
  4433                           ;common.c: 205: ucChannelFirstLength = 0;
  4434  00F9  01FB               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  4435                           
  4436                           ;common.c: 207: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  4437  00FA  1003               	clrc
  4438  00FB  0D7B               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4439  00FC  3E90               	addlw	_uiSampleChannelFirst& (0+255)
  4440  00FD  21F3               	fcall	PL3	;call to abstracted procedure
  4441  00FE  0008               	return
  4442  00FF                     i1l3715:	
  4443                           ;common.c: 208: }
  4444                           ;common.c: 209: }
  4445                           
  4446                           
  4447                           ;common.c: 210: else if(channel == 13)
  4448  00FF  0878               	movf	vPutSampleDataIntoTable@channel,w
  4449  0100  3A0D               	xorlw	13
  4450  0101  1D03               	skipz
  4451  0102  2911               	goto	i1l3727
  4452                           
  4453                           ;common.c: 211: {
  4454                           ;common.c: 212: if(ucChannelFourthLength < 10)
  4455  0103  300A               	movlw	10
  4456  0104  027D               	subwf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4457  0105  1803               	skipnc
  4458  0106  290C               	goto	i1l3723
  4459                           
  4460                           ;common.c: 213: {
  4461                           ;common.c: 214: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  4462  0107  1003               	clrc
  4463  0108  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4464  0109  21EA               	fcall	PL2	;call to abstracted procedure
  4465                           
  4466                           ;common.c: 216: ucChannelFourthLength++;
  4467  010A  0AFD               	incf	vPutSampleDataIntoTable@ucChannelFourthLength,f
  4468                           
  4469                           ;common.c: 217: }
  4470  010B  0008               	return
  4471  010C                     i1l3723:	
  4472                           
  4473                           ;common.c: 218: else
  4474                           ;common.c: 219: {
  4475                           ;common.c: 220: ucChannelFourthLength = 0;
  4476  010C  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  4477                           
  4478                           ;common.c: 222: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  4479  010D  1003               	clrc
  4480  010E  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4481  010F  21EA               	fcall	PL2	;call to abstracted procedure
  4482  0110  0008               	return
  4483  0111                     i1l3727:	
  4484                           
  4485                           ;common.c: 225: else if(channel == 14)
  4486  0111  0878               	movf	vPutSampleDataIntoTable@channel,w
  4487  0112  3A0E               	xorlw	14
  4488  0113  1D03               	skipz
  4489  0114  2924               	goto	i1l3739
  4490                           
  4491                           ;common.c: 226: {
  4492                           ;common.c: 227: if(ucChannelFourteenthLength < 10)
  4493  0115  300A               	movlw	10
  4494  0116  027C               	subwf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4495  0117  1803               	skipnc
  4496  0118  291F               	goto	i1l3735
  4497                           
  4498                           ;common.c: 228: {
  4499                           ;common.c: 229: uiSampleChannelFourteenth[ucChannelFourteenthLength] = uiSampleData;
  4500  0119  1003               	clrc
  4501  011A  0D7C               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4502  011B  3EA4               	addlw	_uiSampleChannelFourteenth& (0+255)
  4503  011C  21F3               	fcall	PL3	;call to abstracted procedure
  4504                           
  4505                           ;common.c: 231: ucChannelFourteenthLength++;
  4506  011D  0AFC               	incf	vPutSampleDataIntoTable@ucChannelFourteenthLength,f
  4507                           
  4508                           ;common.c: 232: }
  4509  011E  0008               	return
  4510  011F                     i1l3735:	
  4511                           
  4512                           ;common.c: 233: else
  4513                           ;common.c: 234: {
  4514                           ;common.c: 235: ucChannelFourteenthLength = 0;
  4515  011F  01FC               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4516                           
  4517                           ;common.c: 237: uiSampleChannelFourth[ucChannelFourteenthLength] = uiSampleData;
  4518  0120  1003               	clrc
  4519  0121  0D7C               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4520  0122  21EA               	fcall	PL2	;call to abstracted procedure
  4521  0123  0008               	return
  4522  0124                     i1l3739:	
  4523                           
  4524                           ;common.c: 240: else
  4525                           ;common.c: 241: {
  4526                           ;common.c: 242: ucChannelFirstLength = 0;
  4527  0124  01FB               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  4528                           
  4529                           ;common.c: 244: ucChannelFourthLength = 0;
  4530  0125  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  4531                           
  4532                           ;common.c: 246: ucChannelFourteenthLength = 0;
  4533  0126  01FC               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4534                           
  4535                           ;common.c: 248: for(int i = 0;i < 10; i++)
  4536  0127  1283               	bcf	3,5	;RP0=0, select bank0
  4537  0128  01C2               	clrf	vPutSampleDataIntoTable@i
  4538  0129  01C3               	clrf	vPutSampleDataIntoTable@i+1
  4539  012A                     i1l3745:	
  4540                           
  4541                           ;common.c: 249: {
  4542                           ;common.c: 250: uiSampleChannelFirst[i] = 0;
  4543  012A  1283               	bcf	3,5	;RP0=0, select bank0
  4544  012B  1303               	bcf	3,6	;RP1=0, select bank0
  4545  012C  1003               	clrc
  4546  012D  0D42               	rlf	vPutSampleDataIntoTable@i,w
  4547  012E  3E90               	addlw	_uiSampleChannelFirst& (0+255)
  4548  012F  0084               	movwf	4
  4549  0130  1783               	bsf	3,7	;select IRP bank3
  4550                           
  4551                           ;common.c: 252: uiSampleChannelFourth[i] = 0;
  4552  0131  2205  118A         	fcall	PL6	;call to abstracted procedure
  4553  0133  1383               	bcf	3,7	;select IRP bank0
  4554                           
  4555                           ;common.c: 254: uiSampleChannelFourth[i] = 0;
  4556  0134  2205  118A         	fcall	PL6	;call to abstracted procedure
  4557  0136  0180               	clrf	0
  4558  0137  0A84               	incf	4,f
  4559  0138  0180               	clrf	0
  4560  0139  0AC2               	incf	vPutSampleDataIntoTable@i,f
  4561  013A  1903               	skipnz
  4562  013B  0AC3               	incf	vPutSampleDataIntoTable@i+1,f
  4563  013C  0843               	movf	vPutSampleDataIntoTable@i+1,w
  4564  013D  3A80               	xorlw	128
  4565  013E  00FF               	movwf	127
  4566  013F  3080               	movlw	128
  4567  0140  027F               	subwf	127,w
  4568  0141  1D03               	skipz
  4569  0142  2945               	goto	u134_25
  4570  0143  300A               	movlw	10
  4571  0144  0242               	subwf	vPutSampleDataIntoTable@i,w
  4572  0145                     u134_25:	
  4573  0145  1803               	btfsc	3,0
  4574  0146  0008               	return
  4575  0147  292A               	goto	i1l3745
  4576  0148                     __end_of_vPutSampleDataIntoTable:	
  4577  0148                     __ptext1270:	
  4578 ;; =============== function i1_setAD_ConvertFlag ends ============
  4579                           
  4580                           
  4581 ;; *************** function i1_Filter *****************
  4582 ;; Defined at:
  4583 ;;		line 64 in file "D:\develop\190625\AK7030-OTP\common.c"
  4584 ;; Parameters:    Size  Location     Type
  4585 ;;  Filter          1    wreg     PTR int 
  4586 ;;		 -> uiSampleChannelFirst(20), 
  4587 ;; Auto vars:     Size  Location     Type
  4588 ;;  Filter          1   20[BANK0 ] PTR int 
  4589 ;;		 -> uiSampleChannelFirst(20), 
  4590 ;;  Filter         20    0[BANK0 ] unsigned int [10]
  4591 ;;  Filter          2   25[BANK0 ] int 
  4592 ;;  Filter          2   23[BANK0 ] unsigned int 
  4593 ;;  Filter          2   21[BANK0 ] unsigned int 
  4594 ;;  Filter          1   28[BANK0 ] unsigned char 
  4595 ;;  Filter          1   27[BANK0 ] unsigned char 
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  2    0[COMMON] unsigned int 
  4598 ;; Registers used:
  4599 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4600 ;; Tracked objects:
  4601 ;;		On entry : 160/120
  4602 ;;		On exit  : 160/0
  4603 ;;		Unchanged: FFE00/0
  4604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4605 ;;      Params:         2       0       0       0       0
  4606 ;;      Locals:         0      29       0       0       0
  4607 ;;      Temps:          4       0       0       0       0
  4608 ;;      Totals:         6      29       0       0       0
  4609 ;;Total ram usage:       35 bytes
  4610 ;; Hardware stack levels used:    1
  4611 ;; This function calls:
  4612 ;;		Nothing
  4613 ;; This function is called by:
  4614 ;;		_vPutSampleDataIntoTable
  4615 ;; This function uses a non-reentrant model
  4616 ;;
  4617  0148                     i1_Filter:	
  4618                           
  4619                           ; Regs used in i1_Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  4620                           ;i1Filter@tmpValue stored from wreg
  4621  0148  1283               	bcf	3,5	;RP0=0, select bank0
  4622  0149  00B4               	movwf	i1Filter@tmpValue
  4623  014A  01BB               	clrf	i1Filter@j
  4624                           
  4625                           ;common.c: 68: unsigned int filter_temp = 0, filter_sum = 0;
  4626  014B  01B5               	clrf	i1Filter@filter_temp
  4627  014C  01B6               	clrf	i1Filter@filter_temp+1
  4628  014D  01B7               	clrf	i1Filter@filter_sum
  4629  014E  01B8               	clrf	i1Filter@filter_sum+1
  4630                           
  4631                           ;common.c: 70: unsigned int filter_buf[10];
  4632                           ;common.c: 72: for(int cir = 0;cir < 10; cir++)
  4633  014F  01B9               	clrf	i1Filter@cir
  4634  0150  01BA               	clrf	i1Filter@cir+1
  4635  0151                     i1l3815:	
  4636                           
  4637                           ;common.c: 73: filter_buf[cir] = *tmpValue++;
  4638  0151  1283               	bcf	3,5	;RP0=0, select bank0
  4639  0152  1303               	bcf	3,6	;RP1=0, select bank0
  4640  0153  0834               	movf	i1Filter@tmpValue,w
  4641  0154  0084               	movwf	4
  4642  0155  1783               	bsf	3,7
  4643  0156  1C35               	btfss	i1Filter@tmpValue+1,0
  4644  0157  1383               	bcf	3,7
  4645  0158  0800               	movf	0,w
  4646  0159  2213  118A         	fcall	PL9	;call to abstracted procedure
  4647  015B  0D39               	rlf	i1Filter@cir,w
  4648  015C  3E20               	addlw	i1Filter@filter_buf& (0+255)
  4649  015D  0084               	movwf	4
  4650  015E  0872               	movf	??i1_Filter,w
  4651  015F  1383               	bcf	3,7	;select IRP bank0
  4652  0160  0080               	movwf	0
  4653  0161  0A84               	incf	4,f
  4654  0162  0873               	movf	??i1_Filter+1,w
  4655  0163  0080               	movwf	0
  4656  0164  3002               	movlw	2
  4657  0165  07B4               	addwf	i1Filter@tmpValue,f
  4658  0166  1803               	skipnc
  4659  0167  0AB5               	incf	i1Filter@tmpValue+1,f
  4660  0168  0AB9               	incf	i1Filter@cir,f
  4661  0169  1903               	skipnz
  4662  016A  0ABA               	incf	i1Filter@cir+1,f
  4663  016B  083A               	movf	i1Filter@cir+1,w
  4664  016C  3A80               	xorlw	128
  4665  016D  00FF               	movwf	127
  4666  016E  3080               	movlw	128
  4667  016F  027F               	subwf	127,w
  4668  0170  1D03               	skipz
  4669  0171  2974               	goto	u147_25
  4670  0172  300A               	movlw	10
  4671  0173  0239               	subwf	i1Filter@cir,w
  4672  0174                     u147_25:	
  4673  0174  1C03               	skipc
  4674  0175  2951               	goto	i1l3815
  4675                           
  4676                           ;common.c: 77: for(j = 0; j < 10 - 1; j++)
  4677  0176  1283               	bcf	3,5	;RP0=0, select bank0
  4678  0177  1303               	bcf	3,6	;RP1=0, select bank0
  4679  0178  01BB               	clrf	i1Filter@j
  4680                           
  4681                           ;common.c: 78: {
  4682                           ;common.c: 79: for(i = 0; i < 10 - 1 - j; i++)
  4683  0179  01BC               	clrf	i1Filter@i
  4684  017A                     i1l3837:	
  4685  017A  01F3               	clrf	??i1_Filter+1
  4686  017B  083B               	movf	i1Filter@j,w
  4687  017C  3C09               	sublw	9
  4688  017D  00F2               	movwf	??i1_Filter
  4689  017E  1C03               	skipc
  4690  017F  03F3               	decf	??i1_Filter+1,f
  4691  0180  0873               	movf	??i1_Filter+1,w
  4692  0181  3A80               	xorlw	128
  4693  0182  3C80               	sublw	128
  4694  0183  1D03               	skipz
  4695  0184  2987               	goto	u149_25
  4696  0185  0872               	movf	??i1_Filter,w
  4697  0186  023C               	subwf	i1Filter@i,w
  4698  0187                     u149_25:	
  4699  0187  1803               	btfsc	3,0
  4700  0188  29BC               	goto	i1l3839
  4701                           
  4702                           ;common.c: 80: {
  4703                           ;common.c: 81: if(filter_buf[i] > filter_buf[i + 1])
  4704  0189  1283               	bcf	3,5	;RP0=0, select bank0
  4705  018A  1303               	bcf	3,6	;RP1=0, select bank0
  4706  018B  1003               	clrc
  4707  018C  21FB  118A         	fcall	PL4	;call to abstracted procedure
  4708  018E  220D  118A         	fcall	PL7	;call to abstracted procedure
  4709  0190  0800               	movf	0,w
  4710  0191  00F4               	movwf	??i1_Filter+2
  4711  0192  0A84               	incf	4,f
  4712  0193  0800               	movf	0,w
  4713  0194  00F5               	movwf	??i1_Filter+3
  4714  0195  0873               	movf	??i1_Filter+1,w
  4715  0196  0275               	subwf	??i1_Filter+3,w
  4716  0197  1D03               	skipz
  4717  0198  299B               	goto	u148_25
  4718  0199  0872               	movf	??i1_Filter,w
  4719  019A  0274               	subwf	??i1_Filter+2,w
  4720  019B                     u148_25:	
  4721  019B  1803               	skipnc
  4722  019C  29BA               	goto	i1l3835
  4723                           
  4724                           ;common.c: 82: {
  4725                           ;common.c: 84: filter_temp = filter_buf[i];
  4726  019D  1003               	clrc
  4727  019E  0D3C               	rlf	i1Filter@i,w
  4728  019F  3E20               	addlw	i1Filter@filter_buf& (0+255)
  4729  01A0  0084               	movwf	4
  4730  01A1  0800               	movf	0,w
  4731  01A2  00B5               	movwf	i1Filter@filter_temp
  4732  01A3  0A84               	incf	4,f
  4733  01A4  0800               	movf	0,w
  4734  01A5  00B6               	movwf	i1Filter@filter_temp+1
  4735                           
  4736                           ;common.c: 86: filter_buf[i] = filter_buf[i + 1];
  4737  01A6  220D  118A         	fcall	PL7	;call to abstracted procedure
  4738  01A8  0800               	movf	0,w
  4739  01A9  2213  118A         	fcall	PL9	;call to abstracted procedure
  4740  01AB  0D3C               	rlf	i1Filter@i,w
  4741  01AC  3E20               	addlw	i1Filter@filter_buf& (0+255)
  4742  01AD  0084               	movwf	4
  4743  01AE  0872               	movf	??i1_Filter,w
  4744  01AF  0080               	movwf	0
  4745  01B0  0A84               	incf	4,f
  4746  01B1  0873               	movf	??i1_Filter+1,w
  4747  01B2  0080               	movwf	0
  4748                           
  4749                           ;common.c: 88: filter_buf[i + 1] = filter_temp;
  4750  01B3  220D  118A         	fcall	PL7	;call to abstracted procedure
  4751  01B5  0835               	movf	i1Filter@filter_temp,w
  4752  01B6  0080               	movwf	0
  4753  01B7  0A84               	incf	4,f
  4754  01B8  0836               	movf	i1Filter@filter_temp+1,w
  4755  01B9  0080               	movwf	0
  4756  01BA                     i1l3835:	
  4757  01BA  0ABC               	incf	i1Filter@i,f
  4758  01BB  297A               	goto	i1l3837
  4759  01BC                     i1l3839:	
  4760  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  4761  01BD  3009               	movlw	9
  4762  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  4763  01BF  0ABB               	incf	i1Filter@j,f
  4764  01C0  023B               	subwf	i1Filter@j,w
  4765                           
  4766                           ;common.c: 89: }
  4767                           ;common.c: 90: }
  4768                           ;common.c: 91: }
  4769                           ;common.c: 93: for(i = 1; i < 10 - 1; i++)
  4770  01C1  01BC               	clrf	i1Filter@i
  4771  01C2  1C03               	skipc
  4772  01C3  297A               	goto	i1l3837
  4773  01C4  0ABC               	incf	i1Filter@i,f
  4774                           
  4775                           ;common.c: 94: {
  4776                           ;common.c: 95: filter_sum += filter_buf[i];
  4777  01C5  1003               	clrc
  4778  01C6                     L16:	
  4779  01C6  21FB  118A         	fcall	PL4	;call to abstracted procedure
  4780  01C8  0872               	movf	??i1_Filter,w
  4781  01C9  07B7               	addwf	i1Filter@filter_sum,f
  4782  01CA  1803               	skipnc
  4783  01CB  0AB8               	incf	i1Filter@filter_sum+1,f
  4784  01CC  0873               	movf	??i1_Filter+1,w
  4785  01CD  07B8               	addwf	i1Filter@filter_sum+1,f
  4786  01CE  3009               	movlw	9
  4787  01CF  0ABC               	incf	i1Filter@i,f
  4788  01D0  023C               	subwf	i1Filter@i,w
  4789  01D1  1C03               	skipc
  4790  01D2  29C6               	goto	L16
  4791                           
  4792                           ;common.c: 96: }
  4793                           ;common.c: 98: return (filter_sum >> 3);
  4794  01D3  0838               	movf	i1Filter@filter_sum+1,w
  4795  01D4  00F1               	movwf	?i1_Filter+1
  4796  01D5  0837               	movf	i1Filter@filter_sum,w
  4797  01D6  00F0               	movwf	?i1_Filter
  4798  01D7  1003               	clrc
  4799  01D8  0CF1               	rrf	?i1_Filter+1,f
  4800  01D9  0CF0               	rrf	?i1_Filter,f
  4801  01DA  1003               	clrc
  4802  01DB  0CF1               	rrf	?i1_Filter+1,f
  4803  01DC  0CF0               	rrf	?i1_Filter,f
  4804  01DD  1003               	clrc
  4805  01DE  0CF1               	rrf	?i1_Filter+1,f
  4806  01DF  0CF0               	rrf	?i1_Filter,f
  4807  01E0  0008               	return
  4808  01E1                     __end_ofi1_Filter:	
  4809  01E1                     __ptext1272:	
  4810 ;; =============== function _adc_get ends ============
  4811                           
  4812                           
  4813 ;; *************** function _setPWM_Width *****************
  4814 ;; Defined at:
  4815 ;;		line 54 in file "D:\develop\190625\AK7030-OTP\common.c"
  4816 ;; Parameters:    Size  Location     Type
  4817 ;;  ucWidth         1    wreg     unsigned char 
  4818 ;; Auto vars:     Size  Location     Type
  4819 ;;  ucWidth         1    0[COMMON] unsigned char 
  4820 ;; Return value:  Size  Location     Type
  4821 ;;		None               void
  4822 ;; Registers used:
  4823 ;;		wreg
  4824 ;; Tracked objects:
  4825 ;;		On entry : 160/0
  4826 ;;		On exit  : 160/0
  4827 ;;		Unchanged: FFE9F/0
  4828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4829 ;;      Params:         0       0       0       0       0
  4830 ;;      Locals:         1       0       0       0       0
  4831 ;;      Temps:          0       0       0       0       0
  4832 ;;      Totals:         1       0       0       0       0
  4833 ;;Total ram usage:        1 bytes
  4834 ;; Hardware stack levels used:    1
  4835 ;; This function calls:
  4836 ;;		Nothing
  4837 ;; This function is called by:
  4838 ;;		_vPutSampleDataIntoTable
  4839 ;; This function uses a non-reentrant model
  4840 ;;
  4841  01E1                     _setPWM_Width:	
  4842                           
  4843                           ; Regs used in _setPWM_Width: [wreg]
  4844                           ;setPWM_Width@ucWidth stored from wreg
  4845  01E1  00F0               	movwf	setPWM_Width@ucWidth
  4846                           
  4847                           ;common.c: 55: static unsigned char ucOldWidth = 0;
  4848                           ;common.c: 56: if( ucOldWidth != ucWidth)
  4849  01E2  0658               	xorwf	setPWM_Width@ucOldWidth,w
  4850  01E3  1903               	skipnz
  4851  01E4  0008               	return
  4852                           
  4853                           ;common.c: 57: {
  4854                           ;common.c: 58: CCPR1L = ucWidth;
  4855  01E5  0870               	movf	setPWM_Width@ucWidth,w
  4856  01E6  0095               	movwf	21	;volatile
  4857                           
  4858                           ;common.c: 59: ucOldWidth = ucWidth;
  4859  01E7  0870               	movf	setPWM_Width@ucWidth,w
  4860  01E8  00D8               	movwf	setPWM_Width@ucOldWidth
  4861  01E9  0008               	return
  4862  01EA                     __end_of_setPWM_Width:	
  4863  01EA                     PL2:	
  4864  01EA  3E59               	addlw	_uiSampleChannelFourth& (0+255)
  4865  01EB  0084               	movwf	4
  4866  01EC  0876               	movf	vPutSampleDataIntoTable@uiSampleData,w
  4867  01ED  1383               	bcf	3,7	;select IRP bank0
  4868  01EE  0080               	movwf	0
  4869  01EF  0A84               	incf	4,f
  4870  01F0  0877               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  4871  01F1  0080               	movwf	0
  4872  01F2  0008               	return
  4873  01F3                     PL3:	
  4874  01F3  0084               	movwf	4
  4875  01F4  0876               	movf	vPutSampleDataIntoTable@uiSampleData,w
  4876  01F5  1783               	bsf	3,7	;select IRP bank3
  4877  01F6  0080               	movwf	0
  4878  01F7  0A84               	incf	4,f
  4879  01F8  0877               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  4880  01F9  0080               	movwf	0
  4881  01FA  0008               	return
  4882  01FB                     PL4:	
  4883  01FB  0D3C               	rlf	i1Filter@i,w
  4884  01FC  3E20               	addlw	i1Filter@filter_buf& (0+255)
  4885  01FD  0084               	movwf	4
  4886  01FE  1383               	bcf	3,7	;select IRP bank0
  4887  01FF  0800               	movf	0,w
  4888  0200  00F2               	movwf	??i1_Filter
  4889  0201  0A84               	incf	4,f
  4890  0202  0800               	movf	0,w
  4891  0203  00F3               	movwf	??i1_Filter+1
  4892  0204  0008               	return
  4893  0205                     PL6:	
  4894  0205  0180               	clrf	0
  4895  0206  0A84               	incf	4,f
  4896  0207  0180               	clrf	0
  4897  0208  1003               	clrc
  4898  0209  0D42               	rlf	vPutSampleDataIntoTable@i,w
  4899  020A  3E59               	addlw	_uiSampleChannelFourth& (0+255)
  4900  020B  0084               	movwf	4
  4901  020C  0008               	return
  4902  020D                     PL7:	
  4903  020D  1003               	clrc
  4904  020E  0D3C               	rlf	i1Filter@i,w
  4905  020F  3E02               	addlw	2
  4906  0210  3E20               	addlw	i1Filter@filter_buf& (0+255)
  4907  0211  0084               	movwf	4
  4908  0212  0008               	return
  4909  0213                     PL9:	
  4910  0213  00F2               	movwf	??i1_Filter
  4911  0214  0A84               	incf	4,f
  4912  0215  0800               	movf	0,w
  4913  0216  00F3               	movwf	??i1_Filter+1
  4914  0217  1003               	clrc
  4915  0218  0008               	return
  4916                           
  4917                           	psect	intentry
  4918  0004                     __pintentry:	
  4919                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4920                           
  4921  0004                     interrupt_function:	
  4922  007E                     saved_w	set	btemp
  4923  0004  00FE               	movwf	btemp
  4924  0005  0E03               	swapf	3,w
  4925  0006  1283               	bcf	3,5	;RP0=0, select bank0
  4926  0007  1303               	bcf	3,6	;RP1=0, select bank0
  4927  0008  00C4               	movwf	??_ISR
  4928  0009  0804               	movf	4,w
  4929  000A  00C5               	movwf	??_ISR+1
  4930  000B  080A               	movf	10,w
  4931  000C  00C6               	movwf	??_ISR+2
  4932  000D  087F               	movf	btemp+1,w
  4933  000E  00C7               	movwf	??_ISR+3
  4934  000F  118A  2813         	ljmp	_ISR
  4935                           
  4936                           	psect	text1273
  4937  0000                     __ptext1273:	
  4938 ;; =============== function _setPWM_Width ends ============
  4939                           
  4940  007E                     btemp	set	126	;btemp
  4941  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon Nov 11 21:44:40 2019

                                  ??_clock_config 00A0                               ?_startOneHoursTimer 00A0  
                                              _GO 00F9                                                fsr 0004  
                        ?_timer1_interrupt_config 0070                                               l702 051B  
                                             l712 0000                                               l721 0000  
                                             l707 04F2                                               l715 0000  
                                             l724 0000                                               l718 0000  
                                             l727 05EC                                               l682 0506  
                                             l692 0513                                               l758 0274  
                                             l687 04DC                                               l697 04E7  
                                             _GIE 005F                                               _PB2 0032  
                                             _PB3 0033                                               _PB4 0034  
                                             _PB5 0035                                               _PR2 0092  
                                             _ISR 0013                                               fsr0 0004  
                                             indf 0000                            ??_startThreeHoursTimer 00A2  
                                            ?_ISR 0070                              ??_startOneHoursTimer 00A2  
                              __size_of_AD_Sample 0015                                              l1510 0000  
                                            l1600 0000                                              l1603 0000  
                                            l1612 0000                                              l4101 0000  
                                            l4103 0000                                              l4111 0000  
                                            l4105 0000                                              l1553 05CC  
                                            l4113 0000                                              l2345 0000  
                                            l1562 0000                                              l4107 0000  
                                            l4115 0000                                              l2339 0000  
                                            l1556 0000                                              l4061 0000  
                                            l4109 0000                                              l4117 0000  
                                            l4125 0000                                              l1661 0000  
                                            l4141 0000                                              l4221 0000  
                                            l1565 0000                                              l1574 0000  
                                            l4063 0000                                              l4071 0000  
                                            l1559 0000                                              l4119 0000  
                                            l4127 04C8                                              l4143 0000  
                                            l4215 0000                                              l4223 0000  
                                            l4311 026D                                              l4303 0000  
                                            l1568 0000                                              l4065 0000  
                                            l4073 0000                                              l4081 0000  
                                            l4129 0000                                              l4161 0000  
                                            l4209 0000                                              l4217 0000  
                                            l4233 0000                                              l4321 0000  
                                            l4305 0260                                              l4067 0000  
                                            l4075 0000                                              l4083 0000  
                                            l4091 0000                                              l4147 0000  
                                            l4251 04AA                                              l4243 0000  
                                            l4411 0000                                              l4323 0000  
                                            l4315 0000                                              l4069 0000  
                                            l4077 0000                                              l4085 0000  
                                            l4093 0000                                              l4149 0000  
                                            l4173 0000                                              l3621 0000  
                                            l3613 0000                                              l4237 0000  
                                            l4253 0000                                              l4261 0000  
                                            l4421 0363                                              l4405 0333  
                                            l4341 02A8                                              l4333 02A0  
                                            l4325 028C                                              l4317 0275  
                                            l4309 026C                                              l4079 0000  
                                            l4087 0000                                              l4095 0000  
                                            l4159 0000                                              l4167 0000  
                                            l4175 0000                                              l4191 0000  
                                            l3623 0000                                              l4247 0000  
                                            l4239 0000                                              l4255 0000  
                                            l4263 0000                                              l4431 0000  
                                            l4423 0000                                              l4415 0356  
                                            l4407 0337                                              l4343 0000  
                                            l4335 02A1                                              l4327 0292  
                                            l4319 0000                                              l4089 0000  
                                            l4097 0000                                              l4169 0000  
                                            l4185 0000                                              l4193 0000  
                                            l3641 03FB                                              l3625 0000  
                                            l4257 0000                                              l4441 0392  
                                            l4433 0381                                              l4425 0372  
                                            l4417 0358                                              l4361 02CD  
                                            l4353 02C5                                              l4345 02B3  
                                            l4329 0294                                              l4281 0000  
                                            l4099 0000                                              l3491 0000  
                                            l3483 0000                                              l3643 043D  
                                            l3619 03D2                                              l4259 0000  
                                            l4267 0000                                              l4275 0000  
                                            l4435 0000                                              l4419 035F  
                                            l4371 0000                                              l4363 0000  
                                            l4355 02C6                                              l4339 0000  
                                            l4451 039B                                              l4291 0248  
                                            l4283 0000                                              l3493 0000  
                                            l3485 0000                                              l4197 0000  
                                            l3653 0000                                              l3645 0000  
                                            l4445 0399                                              l4429 037D  
                                            l4373 02E4                                              l4365 0000  
                                            l4293 0000                                              l4285 0000  
                                            l3487 0000                                              l4199 0000  
                                            l3655 0000                                              l3639 043B  
                                            l4439 0391                                              l4391 0309  
                                            l4375 0000                                              l4367 0000  
                                            l4359 0000                                              l4295 0000  
                                            l4287 0000                                              l4279 0000  
                                            l3489 0000                                              l4385 0302  
                                            l4369 0000                                              l4289 0000  
                                            l3659 0000                                              l4395 0000  
                                            l4387 0000                                              l4299 0256  
                                            l4397 0000                                              l4389 0307  
                                            _ADIE 046A                                              _ADIF 006A  
                                            _ADON 00F8                     startTwelveHourTimer@uiSetTime 00A0  
                                            u1165 03F5                                              u1175 041C  
                                            u1185 0408                                              u2277 0240  
                                            _PEIE 005E                                              _main 0219  
                                            btemp 007E                                              start 0011  
                         ?_getAdOriginalCh13Value 00C2                        ??_isFinishedTwentyMinTimer 00A0  
                                           ??_ISR 0044                                 ??_setPinInitVaule 00A1  
                      __end_of_isPermitSampleTime 05D9                               _sampleChannelSelect 00E2  
                                           ?_main 0070                                             _CLKPR 0108  
                                           _T1CON 0010                                             _T2CON 0012  
                                 __end_of_adc_get 0088                                             _PBOD2 0C42  
                                           _TMR1H 000F                                             _TMR1L 000E  
                           setAD_ConvertFlag@flag 00A0                                 ??_selectAdChannel 00A0  
                                __end_ofi1_Filter 01E1                                   __end_of_initPB3 0508  
                                 __end_of_initPB4 0515                                   __end_of_initPB5 051D  
                         _vPutSampleDataIntoTable 008B                                   __end_of_initPin 04FF  
                                           _reset 05EC                                             _timer 0057  
                                           pclath 000A                               main@uiTimerThreeP5s 00D5  
                                           status 0003                                             wtemp0 007E  
                  __end_of_getAdOriginalCh13Value 03CB                     __size_of_startTwelveHourTimer 000E  
                            __end_of_clrSampeTime 05EC                                  i1Filter@tmpValue 0034  
                                    __end_of_main 03C1                            __size_of_adc_test_init 001B  
                               __end_of_AD_Sample 04AD                                            ??_main 00C4  
                             setPWM_Width@ucWidth 0070                                     main@ucChValue 00C5  
                                   main@ucDelay1s 00D1                                            _ADCON0 001F  
                                          _ADCON1 009F                              __end_of_clock_config 05CF  
                                          _ADRESH 001E                                            _ADRESL 009E  
                                          _CCPR1L 0015                                            ?_reset 0070  
                                          _CLKPCE 0847                                            i1l1510 0000  
                                          i1l1535 00F1                                            i1l2348 0000  
                                          i1l1568 0000                                            i1l1692 006F  
                                          i1l1684 0028                                            i1l1685 0032  
                                          i1l1686 003D                                            i1l3703 00EB  
                                          i1l3711 00F9                                            i1l1687 0048  
                                          i1l3609 0000                                            i1l3721 0000  
                                          i1l3713 0000                                            i1l3723 010C  
                                          i1l3715 00FF                                            i1l3803 0066  
                                          i1l3805 0000                                            i1l3821 0000  
                                          i1l3733 0000                                            i1l3725 0000  
                                          i1l3709 00F7                                            i1l3815 0151  
                                          i1l3735 011F                                            i1l3727 0111  
                                          i1l3671 0000                                            i1l3663 0000  
                                          i1l3841 0000                                            i1l3817 0000  
                                          i1l3809 0000                                            i1l3745 012A  
                                          i1l3737 0000                                            i1l3851 0000  
                                          i1l3835 01BA                                            i1l3819 0000  
                                          i1l3747 0000                                            i1l3739 0124  
                                          i1l3675 0000                                            i1l3771 0000  
                                          i1l3837 017A                                            i1l3749 0000  
                                          i1l3693 0000                                            i1l3677 0000  
                                          i1l3669 0000                                            i1l3781 0000  
                                          i1l3855 0000                                            i1l3839 01BC  
                                          i1l3695 0000                                            i1l3687 0000  
                                          i1l3775 0000                                            i1l3849 0000  
                                          i1l3689 0000                                            i1l3777 0000  
                                          i1l3793 0052                                            i1l3859 0000  
                                          i1l3699 00E4                                            i1l3797 0000  
                                          i1l3799 0000                                            u134_25 0145  
                                          u147_25 0174                                            u148_25 019B  
                                          u149_25 0187                                            _TMR1IE 0460  
                                          _TMR1IF 0060                                 _getAD_ConvertFlag 048F  
                               _setAD_ConvertFlag 0493                                            _TRISB0 0430  
                                          _TRISB1 0431                                            _TRISB2 0432  
                                          _TRISB3 0433                                            _TRISB4 0434  
                                          _TRISB5 0435                                ?_getAD_ConvertFlag 0070  
                                          _Filter 03CB                                ?_setAD_ConvertFlag 0070  
                     ??_isFinishedThreeHoursTimer 00A0                     __size_of_clearThreeHoursTimer 0005  
                                       ??_adc_get 0072                               ??_getAD_ConvertFlag 00A0  
                          setPWM_Width@ucOldWidth 0058                               ??_setAD_ConvertFlag 00A0  
                                          _setPB3 04D4                                            _setPB4 04DF  
                                          _setPB5 04EA                       __end_of_clearTwentyMinTimer 05D4  
                                          clrloop 05C0                                  Filter@filter_buf 00A6  
                                       ??_initPB3 00A0                                         ??_initPB4 00A0  
                                       ??_initPB5 00A0                                  Filter@filter_sum 00BC  
                                       ??_initPin 00A1                         ??_vPutSampleDataIntoTable 0079  
                                          saved_w 007E                           ??_clearTwelveHoursTimer 00A0  
                     ?_process_AD_Converter_Value 0070                                     _adc_test_init 04AD  
                       __end_of_getAD_ConvertFlag 0493                         __end_of_setAD_ConvertFlag 0498  
                                   ?_setPWM_Width 0070                                __size_of_adc_start 0004  
                        _initPB2_AsHighResistence 0508                  __size_of_isFinishedOneHoursTimer 000A  
                __end_of_isFinishedTwentyMinTimer 05AB                                    __pcstackCOMMON 0070  
                                    __pidataBANK0 0000                                      __pidataBANK1 0000  
                               main@uiTimerOneP5s 00D3                                         ?i1_Filter 0070  
                                   __end_of_reset 05E3                                 main@uiTimerTwoP5s 00D7  
                            _uiSampleChannelFirst 0190                    vPutSampleDataIntoTable@channel 0078  
                       _isFinishedThreeHoursTimer 058A                             __end_of_timer1_config 05BF  
                                  ?_adc_test_init 00A0                    vPutSampleDataIntoTable@ucIndex 0041  
                     __end_of_startTwentyMinTimer 058A       vPutSampleDataIntoTable@ucChannelFirstLength 007B  
                                         ??_reset 00A0                  __size_of_timer1_interrupt_config 0003  
                           __size_of_clrSampeTime 0002                                        __pbssBANK0 0048  
                                      __pbssBANK1 00C9                                        __pbssBANK3 0190  
                                  ??_setPWM_Width 0070                      __size_ofi1_setAD_ConvertFlag 0003  
                                 _setPinInitVaule 04CC                                        adc_get@val 0072  
                                _uiTwentyMinTimer 00CF                   __end_of_vPutSampleDataIntoTable 0148  
                                         ?_Filter 00A0                                        __pmaintext 0219  
                                 _selectAdChannel 05E3                                        ??i1_Filter 0072  
                                      __pintentry 0004                                           _CCP1CON 0017  
                                      __ptext1231 03C1                                        __ptext1240 0552  
                                      __ptext1232 0478                                        __ptext1241 058A  
                                      __ptext1233 04CC                                        __ptext1250 057C  
                                      __ptext1242 0560                                        __ptext1234 04F5  
                                      __ptext1251 04AD                                        __ptext1243 0595  
                                      __ptext1235 0498                                        __ptext1260 0515  
                                      __ptext1252 05E7                                        __ptext1244 056E  
                                      __ptext1236 0493                                        __ptext1261 04DF  
                                      __ptext1253 05B5                                        __ptext1245 05CF  
                                      __ptext1237 048F                                        __ptext1270 0148  
                                      __ptext1262 050D                                        __ptext1254 05C7  
                                      __ptext1246 05A0                                        __ptext1238 03CB  
                                         ?_setPB3 0070                                        __ptext1271 007C  
                                      __ptext1263 04D4                                        __ptext1255 05EC  
                                      __ptext1247 05EA                                        __ptext1239 05AB  
                                         ?_setPB4 0070                                        __ptext1272 01E1  
                                      __ptext1264 04FF                                        __ptext1256 05E3  
                                      __ptext1248 05D4                                           ?_setPB5 0070  
                                      __ptext1273 0000                                        __ptext1265 05D9  
                                      __ptext1257 053C                                        __ptext1249 04C8  
                                      __ptext1266 05DE                                        __ptext1258 0508  
                                      __ptext1267 0013                                        __ptext1259 04EA  
                                      __ptext1268 008B                                        __ptext1269 0088  
                           __size_of_clock_config 0008                                      _clrSampeTime 05EA  
                               __end_of_adc_start 04CC                              _uiTwentySecondsTimer 0050  
                              _isPermitSampleTime 05D4                                           Filter@i 00C1  
                                         Filter@j 00C0                                __size_of_pwm_start 0016  
                     __size_of_startOneHoursTimer 000E                     __size_of_startThreeHoursTimer 000E  
                      __size_of_getAD_ConvertFlag 0004                        __size_of_setAD_ConvertFlag 0005  
                                  main@ucTimerP3s 00E0                                    main@ucTimerP5s 00E1  
                             ?_isPermitSampleTime 0070                                   __size_of_Filter 0097  
                                      _uiBigTimer 00C9                                      setPB3@bValue 00A0  
                              i1Filter@filter_buf 0020                                      setPB4@bValue 00A0  
                              i1Filter@filter_sum 0037                                      _clock_config 05C7  
                                    setPB5@bValue 00A0                                           _adc_get 007C  
                                 __size_of_setPB3 000B                                   __size_of_setPB4 000B  
                                 __size_of_setPB5 000B                              ??_isPermitSampleTime 00A0  
                    __end_of_startTwelveHourTimer 057C                                     initPB3@bValue 00A0  
                                   initPB4@bValue 00A0                                         _AD_Sample 0498  
                                         _initPB3 04FF                                           _initPB4 050D  
                                         _initPB5 0515                                      __size_of_ISR 0069  
                                   initPB5@bValue 00A0                                           _initPin 04F5  
                            _bSmallTimerStartFlag 00DB                                   ??_adc_test_init 00A1  
                    vPutSampleDataIntoTable@uiSum 003D                 __size_of_isFinishedTwentyMinTimer 000B  
                       ?_isFinishedTwentyMinTimer 0070                           __end_of_setPinInitVaule 04D4  
                            end_of_initialization 0539                                 Filter@filter_temp 00BA  
                           pwm_start@ucPulseWidth 00A1                           __end_of_selectAdChannel 05E7  
                         _isFinishedOneHoursTimer 05AB                                         i1Filter@i 003C  
                                       i1Filter@j 003B                                 __end_of_pwm_start 0552  
                            __end_of_setPWM_Width 01EA                                        ?_AD_Sample 0070  
                    ??_isFinishedTwelveHoursTimer 00A0                                         Filter@cir 00BE  
                             _bTwentyMinStartFlag 00DC                                  _adc_convert_flag 0055  
                    __end_of_clearThreeHoursTimer 05DE                    __size_of_clearTwelveHoursTimer 0005  
                         _timer1_interrupt_config 05E7                     __end_of_clearTwelveHoursTimer 05E3  
                      ??_initPB2_AsHighResistence 00A0                __size_of_isFinishedThreeHoursTimer 000B  
                                      main@ucStep 00DF                                    __end_of_Filter 0462  
                   startTwentyMinTimer@uiSetValue 00A0               __size_of_isFinishedTwelveHoursTimer 000B  
                        vPutSampleDataIntoTable@i 0042                                 __size_ofi1_Filter 0099  
                             i1_setAD_ConvertFlag 0088                                    __end_of_setPB3 04DF  
                                  __end_of_setPB4 04EA                                    __end_of_setPB5 04F5  
                             start_initialization 051D                                       __end_of_ISR 007C  
                           _uiSampleChannelFourth 0059                                  ?_setPinInitVaule 0070  
                        ??_getAdOriginalCh13Value 00C4                      __size_of_clearTwentyMinTimer 0005  
                       ??_isFinishedOneHoursTimer 00A0                              ?i1_setAD_ConvertFlag 0070  
                            _startTwelveHourTimer 056E                 __end_of_isFinishedThreeHoursTimer 0595  
                                ?_selectAdChannel 0070                                          ??_Filter 00A2  
               vPutSampleDataIntoTable@uiCalWidth 003F                                       __pdataBANK0 006D  
                                     __pdataBANK1 00E2                                          ??_setPB3 00A0  
                                        ??_setPB4 00A0                                          ??_setPB5 00A0  
                        ?_vPutSampleDataIntoTable 0076                                       ??_AD_Sample 00A0  
                       ??_timer1_interrupt_config 00A0                                       __pbssCOMMON 007B  
                                   __pcstackBANK0 0020                                     __pcstackBANK1 00A0  
                                       _adc_start 04C8            vPutSampleDataIntoTable@uiCalWidthArray 0048  
                           ??i1_setAD_ConvertFlag 0070                                   main@uiCh13Value 00C7  
                           ?_startTwelveHourTimer 00A0                      __size_of_startTwentyMinTimer 000E  
                          __size_of_timer1_config 000A                              _clearThreeHoursTimer 05D9  
                           __size_of_setPWM_Width 0009                      __end_of_startThreeHoursTimer 056E  
                               main@cTimerP5s_791 00DD                                 main@cTimerP5s_797 00DE  
                                        ?_adc_get 0070                   __end_of_isFinishedOneHoursTimer 05B5  
              __end_of_isFinishedTwelveHoursTimer 05A0                        _isFinishedTwelveHoursTimer 0595  
                                        ?_initPB3 0070                                          ?_initPB4 0070  
                                        ?_initPB5 0070                                   ISR@ucTimer1sCnt 0054  
                                        ?_initPin 0070                        __end_of_startOneHoursTimer 0560  
                __end_of_initPB2_AsHighResistence 050D                         _uiSampleChannelFourteenth 01A4  
                                      ?_adc_start 0070                   __size_of_getAdOriginalCh13Value 000A  
                                  __size_of_reset FFF7                                 interrupt_function 0004  
                                    _setPWM_Width 01E1                   __end_of_timer1_interrupt_config 05EA  
                       pwm_start@ucPulseFrequency 00A0                             ?_clearThreeHoursTimer 0070  
                            adc_test_init@channel 00A2                                          i1_Filter 0148  
             vPutSampleDataIntoTable@uiSampleData 0076      vPutSampleDataIntoTable@ucChannelFourthLength 007D  
                     __size_of_isPermitSampleTime 0005                                         _pwm_start 053C  
                                    _uiSmallTimer 00CD              vPutSampleDataIntoTable@uiCalWidthCnt 0052  
                           __end_of_adc_test_init 04C8                                     _timer1_config 05B5  
                    ??_process_AD_Converter_Value 00A3                            ??_startTwelveHourTimer 00A2  
                          _getAdOriginalCh13Value 03C1                               _clearTwentyMinTimer 05CF  
                     startOneHoursTimer@uiSetTime 00A0                               i1Filter@filter_temp 0035  
                                __size_of_adc_get 000C               __size_of_process_AD_Converter_Value 0017  
                                      ?_pwm_start 00A0                          _isFinishedTwentyMinTimer 05A0  
vPutSampleDataIntoTable@ucChannelFourteenthLength 007C                                  __size_of_initPB3 0009  
                                __size_of_initPB4 0008                                  __size_of_initPB5 0008  
                                __size_of_initPin 000A                                    Filter@tmpValue 00A0  
                                  ?_timer1_config 0070                              ?_clearTwentyMinTimer 0070  
                                     ??_adc_start 00A0                              _startThreeHoursTimer 0560  
                           _clearTwelveHoursTimer 05DE                                    _uiOneHourTimer 00CB  
                                   __size_of_main 01A8                vPutSampleDataIntoTable@uiInitWidth 006D  
                                        clear_ram 05BF                            ??_clearThreeHoursTimer 00A0  
               __size_of_initPB2_AsHighResistence 0005                         ?_initPB2_AsHighResistence 0070  
                                     i1Filter@cir 0039                            _bOneHourTimerStartFlag 00DA  
                                   ?_clrSampeTime 0070                               _startTwentyMinTimer 057C  
                                     _sampleTimes 0056                             ??_clearTwentyMinTimer 00A0  
                           ?_startThreeHoursTimer 00A0                  __size_of_vPutSampleDataIntoTable 00BD  
                                        intlevel1 0000                              ?_startTwentyMinTimer 00A0  
                        __size_of_setPinInitVaule 0008                        ?_isFinishedThreeHoursTimer 0070  
                                   ?_clock_config 0070                          __size_of_selectAdChannel 0004  
                   startThreeHoursTimer@uiSetTime 00A0                           i1setAD_ConvertFlag@flag 0070  
                                     ??_pwm_start 00A1                                    ??_clrSampeTime 00A0  
                     ?_isFinishedTwelveHoursTimer 0070                                _bBigTimerStartFlag 00D9  
                                 ??_timer1_config 00A0                       __end_ofi1_setAD_ConvertFlag 008B  
              __end_of_process_AD_Converter_Value 048F                        _process_AD_Converter_Value 0478  
                        ?_isFinishedOneHoursTimer 0070                            ?_clearTwelveHoursTimer 0070  
                                adc_test_init@ref 00A0                             ??_startTwentyMinTimer 00A2  
                              _startOneHoursTimer 0552  
