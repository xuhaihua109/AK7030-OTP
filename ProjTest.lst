

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Sun Jun 23 14:28:31 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16C77
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,delta=2
    15                           	psect	swtext1,local,class=CONST,delta=2
    16                           	psect	swtext2,local,class=CONST,delta=2
    17                           	psect	swtext3,local,class=CONST,delta=2
    18                           	psect	text676,local,class=CODE,delta=2
    19                           	psect	text677,local,class=CODE,delta=2
    20                           	psect	text680,local,class=CODE,delta=2
    21                           	psect	text686,local,class=CODE,delta=2
    22                           	psect	text687,local,class=CODE,delta=2
    23                           	psect	text688,local,class=CODE,delta=2
    24                           	psect	text689,local,class=CODE,delta=2
    25                           	psect	text690,local,class=CODE,delta=2
    26                           	psect	text691,local,class=CODE,delta=2
    27                           	psect	text692,local,class=CODE,delta=2
    28                           	psect	text693,local,class=CODE,delta=2
    29                           	psect	text695,local,class=CODE,delta=2
    30                           	psect	text696,local,class=CODE,delta=2
    31                           	psect	text697,local,class=CODE,delta=2
    32                           	psect	text699,local,class=CODE,delta=2
    33                           	psect	text700,local,class=CODE,delta=2
    34                           	psect	text701,local,class=CODE,delta=2
    35                           	psect	text702,local,class=CODE,delta=2
    36                           	psect	text706,local,class=CODE,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text710,local,class=CODE,delta=2
    39                           	psect	pa_nodes,global,class=CODE,delta=2
    40                           	dabs	1,0x7E,2
    41  000A                     	;#
    42                           
    43                           	psect	config
    44  2000  2FFF               	dw	12287	;#
    45  2001  3FDE               	dw	16350	;#
    46  2002  3FF8               	dw	16376	;#
    47                           
    48                           	psect	idataBANK0
    49  0000                     __pidataBANK0:	
    50  001F                     _ADCON0	set	31
    51  001E                     _ADRESH	set	30
    52  001B                     _OP1CON0	set	27
    53  001C                     _OP1CON1	set	28
    54  001D                     _OP1CON2	set	29
    55  0010                     _T1CON	set	16
    56  000F                     _TMR1H	set	15
    57  000E                     _TMR1L	set	14
    58  006A                     _ADIF	set	106
    59  00F8                     _ADON	set	248
    60  005F                     _GIE	set	95
    61  00F9                     _GO	set	249
    62  0028                     _PA0	set	40
    63  0029                     _PA1	set	41
    64  002A                     _PA2	set	42
    65  002B                     _PA3	set	43
    66  002E                     _PA6	set	46
    67  002F                     _PA7	set	47
    68  0030                     _PB0	set	48
    69  0031                     _PB1	set	49
    70  0036                     _PB6	set	54
    71  005E                     _PEIE	set	94
    72  0060                     _TMR1IF	set	96
    73  009F                     _ADCON1	set	159
    74  009E                     _ADRESL	set	158
    75  0087                     _DACCON	set	135
    76  0088                     _DACR0	set	136
    77  009B                     _OP2CON0	set	155
    78  009C                     _OP2CON1	set	156
    79  009D                     _OP2CON2	set	157
    80  046A                     _ADIE	set	1130
    81  0460                     _TMR1IE	set	1120
    82  0428                     _TRISA0	set	1064
    83  0429                     _TRISA1	set	1065
    84  042A                     _TRISA2	set	1066
    85  042B                     _TRISA3	set	1067
    86  042E                     _TRISA6	set	1070
    87  042F                     _TRISA7	set	1071
    88  0430                     _TRISB0	set	1072
    89  0431                     _TRISB1	set	1073
    90  0432                     _TRISB2	set	1074
    91  0433                     _TRISB3	set	1075
    92  0434                     _TRISB4	set	1076
    93  0435                     _TRISB5	set	1077
    94  0436                     _TRISB6	set	1078
    95  0437                     _TRISB7	set	1079
    96  0108                     _CLKPR	set	264
    97  0847                     _CLKPCE	set	2119
    98  0C3F                     _PAOD7	set	3135
    99  0C46                     _PBOD6	set	3142
   100                           
   101                           	psect	cinit
   102  0534                     start_initialization:	
   103  0534  3049               	movlw	low __pbssBANK0
   104                           
   105                           ; Clear objects allocated to COMMON
   106  0535  01FD               	clrf	__pbssCOMMON& (0+127)
   107                           
   108                           ; Clear objects allocated to BANK0
   109  0536  1383               	bcf	3,7	;select IRP bank0
   110  0537  0084               	movwf	4
   111  0538  306F               	movlw	low (__pbssBANK0+38)
   112  0539  118A  2595  118A   	fcall	clear_ram
   113                           
   114                           ; Clear objects allocated to BANK1
   115  053C  30A0               	movlw	low __pbssBANK1
   116  053D  0084               	movwf	4
   117  053E  30E8               	movlw	low (__pbssBANK1+72)
   118  053F  118A  2595         	fcall	clear_ram
   119                           
   120                           ;initializer for _sampleChannelSelect
   121  0541  300E               	movlw	14
   122  0542  00EF               	movwf	__pdataBANK0& (0+127)
   123  0543                     end_of_initialization:	
   124                           ;End of C runtime variable initialization code
   125                           
   126  0543  0183               	clrf	3
   127  0544  118A  2813         	ljmp	_main	;jump to C main() function
   128                           
   129                           	psect	bssCOMMON
   130  007D                     __pbssCOMMON:	
   131  007D                     vPutSampleDataIntoTable@ucChannelFirstLength:	
   132  007D                     	ds	1
   133                           
   134                           	psect	bssBANK0
   135  0049                     __pbssBANK0:	
   136  0049                     _uiBigTimer:	
   137  0049                     	ds	2
   138  004B                     _uiSmallTimer:	
   139  004B                     	ds	2
   140  004D                     _uiTwentySecondsTimer:	
   141  004D                     	ds	2
   142  004F                     ISR@ucTimer1sCnt:	
   143  004F                     	ds	1
   144  0050                     _adc_convert_flag:	
   145  0050                     	ds	1
   146  0051                     _sampleTimes:	
   147  0051                     	ds	1
   148  0052                     _timer:	
   149  0052                     	ds	1
   150  0053                     main@cTimer1s_810:	
   151  0053                     	ds	1
   152  0054                     main@enumBranchStep:	
   153  0054                     	ds	1
   154  0055                     main@enumInteralStep:	
   155  0055                     	ds	1
   156  0056                     main@enumMainLoopStep:	
   157  0056                     	ds	1
   158  0057                     main@ucADC4_Step:	
   159  0057                     	ds	1
   160  0058                     main@ucChannel4Type:	
   161  0058                     	ds	1
   162  0059                     main@ucLoaderStep:	
   163  0059                     	ds	1
   164  005A                     main@ucLoaderStep1:	
   165  005A                     	ds	1
   166  005B                     main@ucLoaderStep2:	
   167  005B                     	ds	1
   168  005C                     main@ucLoaderStep3:	
   169  005C                     	ds	1
   170  005D                     main@ucLoaderStep4:	
   171  005D                     	ds	1
   172  005E                     main@ucTimer1s:	
   173  005E                     	ds	1
   174  005F                     main@ucTimer20s:	
   175  005F                     	ds	1
   176  0060                     main@ucTimerADC1ZeroP5s:	
   177  0060                     	ds	1
   178  0061                     main@ucTimerDelay:	
   179  0061                     	ds	1
   180  0062                     main@ucTimerDelay1:	
   181  0062                     	ds	1
   182  0063                     main@ucTimerDelay2:	
   183  0063                     	ds	1
   184  0064                     main@ucTimerDelay3:	
   185  0064                     	ds	1
   186  0065                     main@ucTimerDelay4:	
   187  0065                     	ds	1
   188  0066                     main@ucTimerP3s:	
   189  0066                     	ds	1
   190  0067                     main@ucTimerP5s:	
   191  0067                     	ds	1
   192  0068                     main@ucTimerRightP5s:	
   193  0068                     	ds	1
   194  0069                     main@ucTimerX1P5s:	
   195  0069                     	ds	1
   196  006A                     main@ucTimerX2P5s:	
   197  006A                     	ds	1
   198  006B                     main@ucTimerZeroPoint3s:	
   199  006B                     	ds	1
   200  006C                     main@ucTimerZeroPoint5s:	
   201  006C                     	ds	1
   202  006D                     vPutSampleDataIntoTable@ucChannelFourteenthLength:	
   203  006D                     	ds	1
   204  006E                     vPutSampleDataIntoTable@ucChannelFourthLength:	
   205  006E                     	ds	1
   206                           
   207                           	psect	dataBANK0
   208  006F                     __pdataBANK0:	
   209  006F                     _sampleChannelSelect:	
   210  006F                     	ds	1
   211                           
   212                           	psect	bssBANK1
   213  00A0                     __pbssBANK1:	
   214  00A0                     _uiSampleChannelFirst:	
   215  00A0                     	ds	24
   216  00B8                     _uiSampleChannelFourteenth:	
   217  00B8                     	ds	24
   218  00D0                     _uiSampleChannelFourth:	
   219  00D0                     	ds	24
   220                           
   221                           	psect	clrtext
   222  0595                     clear_ram:	
   223                           ;	Called with FSR containing the base address, and
   224                           ;	W with the last address+1
   225                           
   226  0595  0064               	clrwdt	;clear the watchdog before getting into this loop
   227  0596                     clrloop:	
   228  0596  0180               	clrf	0	;clear RAM location pointed to by FSR
   229  0597  0A84               	incf	4,f	;increment pointer
   230  0598  0604               	xorwf	4,w	;XOR with final address
   231  0599  1903               	btfsc	3,2	;have we reached the end yet?
   232  059A  3400               	retlw	0	;all done for this memory range, return
   233  059B  0604               	xorwf	4,w	;XOR again to restore value
   234  059C  2D96               	goto	clrloop	;do the next byte
   235                           
   236                           	psect	cstackCOMMON
   237  0070                     __pcstackCOMMON:	
   238  0070                     ?_clearTwelveHoursTimer:	
   239  0070                     ?_clearThreeHoursTimer:	
   240                           ; 0 bytes @ 0x0
   241                           
   242  0070                     ?_clearTwentySecondsTimer:	
   243                           ; 0 bytes @ 0x0
   244                           
   245  0070                     ?_clock_config:	
   246                           ; 0 bytes @ 0x0
   247                           
   248  0070                     ?_timer1_config:	
   249                           ; 0 bytes @ 0x0
   250                           
   251  0070                     ?_timer1_interrupt_config:	
   252                           ; 0 bytes @ 0x0
   253                           
   254  0070                     ?_dac_init:	
   255                           ; 0 bytes @ 0x0
   256                           
   257  0070                     ?_op1_init:	
   258                           ; 0 bytes @ 0x0
   259                           
   260  0070                     ?_op2_init:	
   261                           ; 0 bytes @ 0x0
   262                           
   263  0070                     ?_adc_start:	
   264                           ; 0 bytes @ 0x0
   265                           
   266  0070                     ?_process_AD_Converter_Value:	
   267                           ; 0 bytes @ 0x0
   268                           
   269  0070                     ?_clrSampeTime:	
   270                           ; 0 bytes @ 0x0
   271                           
   272  0070                     ?_startTwentySecondsTimer:	
   273                           ; 0 bytes @ 0x0
   274                           
   275  0070                     ?_AD_Sample:	
   276                           ; 0 bytes @ 0x0
   277                           
   278  0070                     ?_clearAllTimer:	
   279                           ; 0 bytes @ 0x0
   280                           
   281  0070                     ?_clearPinPortAndTimer:	
   282                           ; 0 bytes @ 0x0
   283                           
   284  0070                     ?_initPin:	
   285                           ; 0 bytes @ 0x0
   286                           
   287  0070                     ?_main:	
   288                           ; 0 bytes @ 0x0
   289                           
   290  0070                     ?_setAD_ConvertFlag:	
   291                           ; 0 bytes @ 0x0
   292                           
   293  0070                     ?_ISR:	
   294                           ; 0 bytes @ 0x0
   295                           
   296  0070                     ?i1_setAD_ConvertFlag:	
   297                           ; 0 bytes @ 0x0
   298                           
   299  0070                     ??i1_setAD_ConvertFlag:	
   300                           ; 0 bytes @ 0x0
   301                           
   302  0070                     ?_isPermitSampleTime:	
   303                           ; 0 bytes @ 0x0
   304                           
   305  0070                     ?_isFinishedTwelveHoursTimer:	
   306                           ; 1 bytes @ 0x0
   307                           
   308  0070                     ?_isFinishedTwentySecondsTimer:	
   309                           ; 1 bytes @ 0x0
   310                           
   311  0070                     ?_isFinishedThreeHoursTimer:	
   312                           ; 1 bytes @ 0x0
   313                           
   314  0070                     ?_getAD_ConvertFlag:	
   315                           ; 1 bytes @ 0x0
   316                           
   317  0070                     ?_adc_get:	
   318                           ; 1 bytes @ 0x0
   319                           
   320  0070                     i1setAD_ConvertFlag@flag:	
   321                           ; 2 bytes @ 0x0
   322                           
   323                           
   324                           ; 1 bytes @ 0x0
   325  0070                     	ds	2
   326  0072                     ??_adc_get:	
   327  0072                     adc_get@val:	
   328                           ; 0 bytes @ 0x2
   329                           
   330                           
   331                           ; 2 bytes @ 0x2
   332  0072                     	ds	2
   333  0074                     ?_vPutSampleDataIntoTable:	
   334  0074                     vPutSampleDataIntoTable@uiSampleData:	
   335                           ; 0 bytes @ 0x4
   336                           
   337                           
   338                           ; 2 bytes @ 0x4
   339  0074                     	ds	2
   340  0076                     vPutSampleDataIntoTable@channel:	
   341                           
   342                           ; 1 bytes @ 0x6
   343  0076                     	ds	1
   344  0077                     ??_vPutSampleDataIntoTable:	
   345  0077                     vPutSampleDataIntoTable@i:	
   346                           ; 0 bytes @ 0x7
   347                           
   348                           
   349                           ; 2 bytes @ 0x7
   350  0077                     	ds	2
   351  0079                     ??_ISR:	
   352                           
   353                           ; 0 bytes @ 0x9
   354  0079                     	ds	4
   355                           
   356                           	psect	cstackBANK0
   357  0020                     __pcstackBANK0:	
   358  0020                     ??_clearTwelveHoursTimer:	
   359  0020                     ??_clearThreeHoursTimer:	
   360                           ; 0 bytes @ 0x0
   361                           
   362  0020                     ??_clearTwentySecondsTimer:	
   363                           ; 0 bytes @ 0x0
   364                           
   365  0020                     ??_clock_config:	
   366                           ; 0 bytes @ 0x0
   367                           
   368  0020                     ??_timer1_config:	
   369                           ; 0 bytes @ 0x0
   370                           
   371  0020                     ??_timer1_interrupt_config:	
   372                           ; 0 bytes @ 0x0
   373                           
   374  0020                     ?_adc_test_init:	
   375                           ; 0 bytes @ 0x0
   376                           
   377  0020                     ??_dac_init:	
   378                           ; 0 bytes @ 0x0
   379                           
   380  0020                     ??_op1_init:	
   381                           ; 0 bytes @ 0x0
   382                           
   383  0020                     ??_op2_init:	
   384                           ; 0 bytes @ 0x0
   385                           
   386  0020                     ??_adc_start:	
   387                           ; 0 bytes @ 0x0
   388                           
   389  0020                     ??_isPermitSampleTime:	
   390                           ; 0 bytes @ 0x0
   391                           
   392  0020                     ??_clrSampeTime:	
   393                           ; 0 bytes @ 0x0
   394                           
   395  0020                     ?_startTwelveHourTimer:	
   396                           ; 0 bytes @ 0x0
   397                           
   398  0020                     ??_isFinishedTwelveHoursTimer:	
   399                           ; 0 bytes @ 0x0
   400                           
   401  0020                     ??_startTwentySecondsTimer:	
   402                           ; 0 bytes @ 0x0
   403                           
   404  0020                     ??_isFinishedTwentySecondsTimer:	
   405                           ; 0 bytes @ 0x0
   406                           
   407  0020                     ?_startThreeHoursTimer:	
   408                           ; 0 bytes @ 0x0
   409                           
   410  0020                     ??_isFinishedThreeHoursTimer:	
   411                           ; 0 bytes @ 0x0
   412                           
   413  0020                     ??_AD_Sample:	
   414                           ; 0 bytes @ 0x0
   415                           
   416  0020                     ??_clearAllTimer:	
   417                           ; 0 bytes @ 0x0
   418                           
   419  0020                     ??_clearPinPortAndTimer:	
   420                           ; 0 bytes @ 0x0
   421                           
   422  0020                     ??_initPin:	
   423                           ; 0 bytes @ 0x0
   424                           
   425  0020                     ??_getAD_ConvertFlag:	
   426                           ; 0 bytes @ 0x0
   427                           
   428  0020                     ??_setAD_ConvertFlag:	
   429                           ; 0 bytes @ 0x0
   430                           
   431  0020                     ?_Filter:	
   432                           ; 0 bytes @ 0x0
   433                           
   434  0020                     setAD_ConvertFlag@flag:	
   435                           ; 2 bytes @ 0x0
   436                           
   437  0020                     adc_test_init@ref:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0020                     startTwelveHourTimer@uiSetTime:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0020                     startThreeHoursTimer@uiSetTime:	
   444                           ; 2 bytes @ 0x0
   445                           
   446                           
   447                           ; 2 bytes @ 0x0
   448  0020                     	ds	1
   449  0021                     ??_adc_test_init:	
   450                           
   451                           ; 0 bytes @ 0x1
   452  0021                     	ds	1
   453  0022                     ??_startTwelveHourTimer:	
   454  0022                     ??_startThreeHoursTimer:	
   455                           ; 0 bytes @ 0x2
   456                           
   457  0022                     ??_Filter:	
   458                           ; 0 bytes @ 0x2
   459                           
   460  0022                     adc_test_init@channel:	
   461                           ; 0 bytes @ 0x2
   462                           
   463                           
   464                           ; 1 bytes @ 0x2
   465  0022                     	ds	1
   466  0023                     ??_process_AD_Converter_Value:	
   467                           
   468                           ; 0 bytes @ 0x3
   469  0023                     	ds	3
   470  0026                     Filter@filter_buf:	
   471                           
   472                           ; 24 bytes @ 0x6
   473  0026                     	ds	24
   474  003E                     Filter@filter_temp:	
   475                           
   476                           ; 2 bytes @ 0x1E
   477  003E                     	ds	2
   478  0040                     Filter@filter_sum:	
   479                           
   480                           ; 2 bytes @ 0x20
   481  0040                     	ds	2
   482  0042                     Filter@tmpValue:	
   483                           
   484                           ; 1 bytes @ 0x22
   485  0042                     	ds	1
   486  0043                     Filter@cir:	
   487                           
   488                           ; 2 bytes @ 0x23
   489  0043                     	ds	2
   490  0045                     Filter@j:	
   491                           
   492                           ; 1 bytes @ 0x25
   493  0045                     	ds	1
   494  0046                     Filter@i:	
   495                           
   496                           ; 1 bytes @ 0x26
   497  0046                     	ds	1
   498  0047                     ?_getAdOriginalCh14Value:	
   499  0047                     ?_getAdOriginalCh1Value:	
   500                           ; 2 bytes @ 0x27
   501                           
   502  0047                     ?_getAdOriginaCh4Value:	
   503                           ; 2 bytes @ 0x27
   504                           
   505                           
   506                           ; 2 bytes @ 0x27
   507  0047                     	ds	2
   508  0049                     ??_getAdOriginalCh14Value:	
   509  0049                     ??_getAdOriginalCh1Value:	
   510                           ; 0 bytes @ 0x29
   511                           
   512  0049                     ??_getAdOriginaCh4Value:	
   513                           ; 0 bytes @ 0x29
   514                           
   515  0049                     ??_main:	
   516                           ; 0 bytes @ 0x29
   517                           
   518                           
   519                           	psect	maintext
   520  0013                     __pmaintext:	
   521                           ; 0 bytes @ 0x29
   522 ;;Data sizes: Strings 0, constant 0, data 1, bss 111, persistent 0 stack 0
   523 ;;Auto spaces:   Size  Autos    Used
   524 ;; COMMON          14     13      14
   525 ;; BANK0           80     41      80
   526 ;; BANK1           80      0      72
   527 ;; BANK3           96      0       0
   528 ;; BANK2           96      0       0
   529 ;;
   530 ;; Pointer list with targets:
   531 ;; ?_adc_get	unsigned int  size(1) Largest target is 0
   532 ;;
   533 ;; ?_getAdOriginalCh14Value	unsigned int  size(1) Largest target is 0
   534 ;;
   535 ;; ?_getAdOriginaCh4Value	unsigned int  size(1) Largest target is 0
   536 ;;
   537 ;; ?_getAdOriginalCh1Value	unsigned int  size(1) Largest target is 0
   538 ;;
   539 ;; ?_Filter	unsigned int  size(1) Largest target is 0
   540 ;;
   541 ;; Filter@tmpValue	PTR int  size(1) Largest target is 24
   542 ;;		 -> uiSampleChannelFourteenth(BANK1[24]), uiSampleChannelFourth(BANK1[24]), uiSampleChannelFirst(BANK1[24]), 
   543 ;;
   544 ;;
   545 ;; Critical Paths under _main in COMMON
   546 ;;
   547 ;;   None.
   548 ;;
   549 ;; Critical Paths under _ISR in COMMON
   550 ;;
   551 ;;   _ISR->_vPutSampleDataIntoTable
   552 ;;   _vPutSampleDataIntoTable->_adc_get
   553 ;;
   554 ;; Critical Paths under _main in BANK0
   555 ;;
   556 ;;   _main->_getAdOriginalCh14Value
   557 ;;   _main->_getAdOriginalCh1Value
   558 ;;   _main->_getAdOriginaCh4Value
   559 ;;   _getAdOriginaCh4Value->_Filter
   560 ;;   _getAdOriginalCh1Value->_Filter
   561 ;;   _getAdOriginalCh14Value->_Filter
   562 ;;   _process_AD_Converter_Value->_adc_test_init
   563 ;;
   564 ;; Critical Paths under _ISR in BANK0
   565 ;;
   566 ;;   None.
   567 ;;
   568 ;; Critical Paths under _main in BANK1
   569 ;;
   570 ;;   None.
   571 ;;
   572 ;; Critical Paths under _ISR in BANK1
   573 ;;
   574 ;;   None.
   575 ;;
   576 ;; Critical Paths under _main in BANK3
   577 ;;
   578 ;;   None.
   579 ;;
   580 ;; Critical Paths under _ISR in BANK3
   581 ;;
   582 ;;   None.
   583 ;;
   584 ;; Critical Paths under _main in BANK2
   585 ;;
   586 ;;   None.
   587 ;;
   588 ;; Critical Paths under _ISR in BANK2
   589 ;;
   590 ;;   None.
   591 ;;
   592 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   593 ;;
   594 ;;
   595 ;;Call Graph Tables:
   596 ;;
   597 ;; ---------------------------------------------------------------------------------
   598 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   599 ;; ---------------------------------------------------------------------------------
   600 ;; (0) _main                                                 0     0      0    2014
   601 ;;                            _initPin
   602 ;;                       _clock_config
   603 ;;                      _timer1_config
   604 ;;            _timer1_interrupt_config
   605 ;;                      _adc_test_init
   606 ;;                           _dac_init
   607 ;;                           _op1_init
   608 ;;                           _op2_init
   609 ;;                          _adc_start
   610 ;;         _process_AD_Converter_Value
   611 ;;                 _isPermitSampleTime
   612 ;;                       _clrSampeTime
   613 ;;             _getAdOriginalCh14Value
   614 ;;               _clearPinPortAndTimer
   615 ;;              _getAdOriginalCh1Value
   616 ;;               _startTwelveHourTimer
   617 ;;         _isFinishedTwelveHoursTimer
   618 ;;            _startTwentySecondsTimer
   619 ;;               _getAdOriginaCh4Value
   620 ;;       _isFinishedTwentySecondsTimer
   621 ;;               _startThreeHoursTimer
   622 ;;          _isFinishedThreeHoursTimer
   623 ;;               _clearThreeHoursTimer
   624 ;;                      _clearAllTimer
   625 ;; ---------------------------------------------------------------------------------
   626 ;; (1) _clearPinPortAndTimer                                 0     0      0       0
   627 ;;                      _clearAllTimer
   628 ;; ---------------------------------------------------------------------------------
   629 ;; (1) _getAdOriginaCh4Value                                 2     0      2     620
   630 ;;                                             39 BANK0      2     0      2
   631 ;;                             _Filter
   632 ;; ---------------------------------------------------------------------------------
   633 ;; (1) _getAdOriginalCh1Value                                2     0      2     620
   634 ;;                                             39 BANK0      2     0      2
   635 ;;                             _Filter
   636 ;; ---------------------------------------------------------------------------------
   637 ;; (1) _getAdOriginalCh14Value                               2     0      2     620
   638 ;;                                             39 BANK0      2     0      2
   639 ;;                             _Filter
   640 ;; ---------------------------------------------------------------------------------
   641 ;; (1) _process_AD_Converter_Value                           0     0      0      66
   642 ;;                  _getAD_ConvertFlag
   643 ;;                  _setAD_ConvertFlag
   644 ;;                          _AD_Sample
   645 ;;                      _adc_test_init
   646 ;;                          _adc_start
   647 ;; ---------------------------------------------------------------------------------
   648 ;; (1) _clearAllTimer                                        0     0      0       0
   649 ;;              _clearTwelveHoursTimer
   650 ;;               _clearThreeHoursTimer
   651 ;;            _clearTwentySecondsTimer
   652 ;; ---------------------------------------------------------------------------------
   653 ;; (2) _AD_Sample                                            0     0      0       0
   654 ;; ---------------------------------------------------------------------------------
   655 ;; (2) _setAD_ConvertFlag                                    1     1      0      22
   656 ;;                                              0 BANK0      1     1      0
   657 ;; ---------------------------------------------------------------------------------
   658 ;; (2) _getAD_ConvertFlag                                    0     0      0       0
   659 ;; ---------------------------------------------------------------------------------
   660 ;; (2) _Filter                                              39    37      2     620
   661 ;;                                              0 BANK0     39    37      2
   662 ;; ---------------------------------------------------------------------------------
   663 ;; (1) _isFinishedThreeHoursTimer                            0     0      0       0
   664 ;; ---------------------------------------------------------------------------------
   665 ;; (1) _startThreeHoursTimer                                 2     0      2      22
   666 ;;                                              0 BANK0      2     0      2
   667 ;; ---------------------------------------------------------------------------------
   668 ;; (1) _isFinishedTwentySecondsTimer                         0     0      0       0
   669 ;; ---------------------------------------------------------------------------------
   670 ;; (1) _startTwentySecondsTimer                              0     0      0       0
   671 ;; ---------------------------------------------------------------------------------
   672 ;; (1) _isFinishedTwelveHoursTimer                           0     0      0       0
   673 ;; ---------------------------------------------------------------------------------
   674 ;; (1) _startTwelveHourTimer                                 2     0      2      22
   675 ;;                                              0 BANK0      2     0      2
   676 ;; ---------------------------------------------------------------------------------
   677 ;; (1) _clrSampeTime                                         0     0      0       0
   678 ;; ---------------------------------------------------------------------------------
   679 ;; (1) _isPermitSampleTime                                   0     0      0       0
   680 ;; ---------------------------------------------------------------------------------
   681 ;; (2) _adc_start                                            0     0      0       0
   682 ;; ---------------------------------------------------------------------------------
   683 ;; (1) _op2_init                                             0     0      0       0
   684 ;; ---------------------------------------------------------------------------------
   685 ;; (1) _op1_init                                             0     0      0       0
   686 ;; ---------------------------------------------------------------------------------
   687 ;; (1) _dac_init                                             0     0      0       0
   688 ;; ---------------------------------------------------------------------------------
   689 ;; (2) _adc_test_init                                        3     2      1      44
   690 ;;                                              0 BANK0      3     2      1
   691 ;; ---------------------------------------------------------------------------------
   692 ;; (1) _timer1_interrupt_config                              0     0      0       0
   693 ;; ---------------------------------------------------------------------------------
   694 ;; (1) _timer1_config                                        0     0      0       0
   695 ;; ---------------------------------------------------------------------------------
   696 ;; (1) _clock_config                                         0     0      0       0
   697 ;; ---------------------------------------------------------------------------------
   698 ;; (1) _initPin                                              0     0      0       0
   699 ;; ---------------------------------------------------------------------------------
   700 ;; (2) _clearTwentySecondsTimer                              0     0      0       0
   701 ;; ---------------------------------------------------------------------------------
   702 ;; (2) _clearThreeHoursTimer                                 0     0      0       0
   703 ;; ---------------------------------------------------------------------------------
   704 ;; (2) _clearTwelveHoursTimer                                0     0      0       0
   705 ;; ---------------------------------------------------------------------------------
   706 ;; Estimated maximum stack depth 2
   707 ;; ---------------------------------------------------------------------------------
   708 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   709 ;; ---------------------------------------------------------------------------------
   710 ;; (4) _ISR                                                  4     4      0     407
   711 ;;                                              9 COMMON     4     4      0
   712 ;;                i1_setAD_ConvertFlag
   713 ;;                            _adc_get
   714 ;;            _vPutSampleDataIntoTable
   715 ;; ---------------------------------------------------------------------------------
   716 ;; (5) i1_setAD_ConvertFlag                                  1     1      0      73
   717 ;;                                              0 COMMON     1     1      0
   718 ;; ---------------------------------------------------------------------------------
   719 ;; (5) _adc_get                                              4     2      2      24
   720 ;;                                              0 COMMON     4     2      2
   721 ;; ---------------------------------------------------------------------------------
   722 ;; (5) _vPutSampleDataIntoTable                              5     2      3     310
   723 ;;                                              4 COMMON     5     2      3
   724 ;;                            _adc_get (ARG)
   725 ;; ---------------------------------------------------------------------------------
   726 ;; Estimated maximum stack depth 5
   727 ;; ---------------------------------------------------------------------------------
   728 ;; Call Graph Graphs:
   729 ;; _main (ROOT)
   730 ;;   _initPin
   731 ;;   _clock_config
   732 ;;   _timer1_config
   733 ;;   _timer1_interrupt_config
   734 ;;   _adc_test_init
   735 ;;   _dac_init
   736 ;;   _op1_init
   737 ;;   _op2_init
   738 ;;   _adc_start
   739 ;;   _process_AD_Converter_Value
   740 ;;     _getAD_ConvertFlag
   741 ;;     _setAD_ConvertFlag
   742 ;;     _AD_Sample
   743 ;;     _adc_test_init
   744 ;;     _adc_start
   745 ;;   _isPermitSampleTime
   746 ;;   _clrSampeTime
   747 ;;   _getAdOriginalCh14Value
   748 ;;     _Filter
   749 ;;   _clearPinPortAndTimer
   750 ;;     _clearAllTimer
   751 ;;       _clearTwelveHoursTimer
   752 ;;       _clearThreeHoursTimer
   753 ;;       _clearTwentySecondsTimer
   754 ;;   _getAdOriginalCh1Value
   755 ;;     _Filter
   756 ;;   _startTwelveHourTimer
   757 ;;   _isFinishedTwelveHoursTimer
   758 ;;   _startTwentySecondsTimer
   759 ;;   _getAdOriginaCh4Value
   760 ;;     _Filter
   761 ;;   _isFinishedTwentySecondsTimer
   762 ;;   _startThreeHoursTimer
   763 ;;   _isFinishedThreeHoursTimer
   764 ;;   _clearThreeHoursTimer
   765 ;;   _clearAllTimer
   766 ;;     _clearTwelveHoursTimer
   767 ;;     _clearThreeHoursTimer
   768 ;;     _clearTwentySecondsTimer
   769 ;;
   770 ;; _ISR (ROOT)
   771 ;;   i1_setAD_ConvertFlag
   772 ;;   _adc_get
   773 ;;   _vPutSampleDataIntoTable
   774 ;;     _adc_get (ARG)
   775 ;;
   776 ;; Address spaces:
   777 ;;Name               Size   Autos  Total    Cost      Usage
   778 ;;BANK3               60      0       0      10        0.0%
   779 ;;BITBANK3            60      0       0       9        0.0%
   780 ;;SFR3                 0      0       0       4        0.0%
   781 ;;BITSFR3              0      0       0       4        0.0%
   782 ;;BANK2               60      0       0      12        0.0%
   783 ;;BITBANK2            60      0       0      11        0.0%
   784 ;;SFR2                 0      0       0       5        0.0%
   785 ;;BITSFR2              0      0       0       5        0.0%
   786 ;;SFR1                 0      0       0       2        0.0%
   787 ;;BITSFR1              0      0       0       2        0.0%
   788 ;;BANK1               50      0      48       8       90.0%
   789 ;;BITBANK1            50      0       0       7        0.0%
   790 ;;CODE                 0      0       0       0        0.0%
   791 ;;DATA                 0      0      AD       6        0.0%
   792 ;;ABS                  0      0      A6       3        0.0%
   793 ;;NULL                 0      0       0       0        0.0%
   794 ;;STACK                0      0       7       2        0.0%
   795 ;;BANK0               50     29      50       5      100.0%
   796 ;;BITBANK0            50      0       0       4        0.0%
   797 ;;SFR0                 0      0       0       1        0.0%
   798 ;;BITSFR0              0      0       0       1        0.0%
   799 ;;COMMON               E      D       E       1      100.0%
   800 ;;BITCOMMON            E      0       0       0        0.0%
   801                           
   802                           
   803 ;; *************** function _main *****************
   804 ;; Defined at:
   805 ;;		line 129 in file "D:\develop\ATK\AK7030-OTP\main.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;		None
   808 ;; Auto vars:     Size  Location     Type
   809 ;;		None
   810 ;; Return value:  Size  Location     Type
   811 ;;		None               void
   812 ;; Registers used:
   813 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   814 ;; Tracked objects:
   815 ;;		On entry : 17F/0
   816 ;;		On exit  : 60/0
   817 ;;		Unchanged: FFE00/0
   818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   819 ;;      Params:         0       0       0       0       0
   820 ;;      Locals:         0       0       0       0       0
   821 ;;      Temps:          0       0       0       0       0
   822 ;;      Totals:         0       0       0       0       0
   823 ;;Total ram usage:        0 bytes
   824 ;; Hardware stack levels required when called:    5
   825 ;; This function calls:
   826 ;;		_initPin
   827 ;;		_clock_config
   828 ;;		_timer1_config
   829 ;;		_timer1_interrupt_config
   830 ;;		_adc_test_init
   831 ;;		_dac_init
   832 ;;		_op1_init
   833 ;;		_op2_init
   834 ;;		_adc_start
   835 ;;		_process_AD_Converter_Value
   836 ;;		_isPermitSampleTime
   837 ;;		_clrSampeTime
   838 ;;		_getAdOriginalCh14Value
   839 ;;		_clearPinPortAndTimer
   840 ;;		_getAdOriginalCh1Value
   841 ;;		_startTwelveHourTimer
   842 ;;		_isFinishedTwelveHoursTimer
   843 ;;		_startTwentySecondsTimer
   844 ;;		_getAdOriginaCh4Value
   845 ;;		_isFinishedTwentySecondsTimer
   846 ;;		_startThreeHoursTimer
   847 ;;		_isFinishedThreeHoursTimer
   848 ;;		_clearThreeHoursTimer
   849 ;;		_clearAllTimer
   850 ;; This function is called by:
   851 ;;		Startup code after reset
   852 ;; This function uses a non-reentrant model
   853 ;;
   854  0013                     _main:	
   855                           
   856                           ;main.c: 130: enum setp_Adc4
   857                           ;main.c: 131: {
   858                           ;main.c: 132: ADC4_STEP_INIT = 0,
   859                           ;main.c: 133: ADC4_STEP_FIRST,
   860                           ;main.c: 134: ADC4_STEP_SECOND,
   861                           ;main.c: 135: ADC4_STEP_THIRD,
   862                           ;main.c: 136: ADC4_STEP_FOURTH,
   863                           ;main.c: 137: ADC4_STEP_FIFTH,
   864                           ;main.c: 138: ADC4_STEP_SIXTH,
   865                           ;main.c: 139: };
   866                           ;main.c: 142: static unsigned char ucWaitTime1S = 0;
   867                           ;main.c: 144: static unsigned char ucWaitTimeO3s = 0;
   868                           ;main.c: 146: static unsigned char ucSmallTimerActionFlag = 0;
   869                           ;main.c: 148: static unsigned char ucSetSmallActionFlag = 0;
   870                           
   871                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   872  0013  1683               	bsf	3,5	;RP0=1, select bank1
   873  0014  1005               	bcf	5,0
   874                           
   875                           ;main.c: 151: TRISA1 = 0;
   876  0015  1085               	bcf	5,1
   877                           
   878                           ;main.c: 152: TRISA2 = 0;
   879  0016  1105               	bcf	5,2
   880                           
   881                           ;main.c: 153: TRISA3 = 0;
   882  0017  1185               	bcf	5,3
   883                           
   884                           ;main.c: 154: TRISB0 = 0;
   885  0018  1006               	bcf	6,0
   886                           
   887                           ;main.c: 155: TRISB1 = 0;
   888  0019  1086               	bcf	6,1
   889                           
   890                           ;main.c: 156: TRISA6 = 0;
   891  001A  1305               	bcf	5,6
   892                           
   893                           ;main.c: 157: TRISA7 = 0;
   894  001B  1385               	bcf	5,7
   895                           
   896                           ;main.c: 158: TRISB6 = 0;
   897  001C  1306               	bcf	6,6
   898                           
   899                           ;main.c: 161: initPin();
   900  001D  118A  2521  118A   	fcall	_initPin
   901                           
   902                           ;main.c: 164: TRISB2 = 1;
   903  0020  1303               	bcf	3,6	;RP1=0, select bank1
   904  0021  1506               	bsf	6,2
   905                           
   906                           ;main.c: 166: TRISB7 = 1;
   907  0022  1786               	bsf	6,7
   908                           
   909                           ;main.c: 167: TRISB4 = 1;
   910  0023  1606               	bsf	6,4
   911                           
   912                           ;main.c: 169: clock_config();
   913  0024  118A  25A5  118A   	fcall	_clock_config
   914                           
   915                           ;main.c: 170: timer1_config();
   916  0027  118A  2579  118A   	fcall	_timer1_config
   917                           
   918                           ;main.c: 171: timer1_interrupt_config();
   919  002A  118A  25CA  118A   	fcall	_timer1_interrupt_config
   920                           
   921                           ;main.c: 173: adc_test_init(14,3);
   922  002D  3003               	movlw	3
   923  002E  1283               	bcf	3,5	;RP0=0, select bank0
   924  002F  00A0               	movwf	?_adc_test_init
   925  0030  300E               	movlw	14
   926  0031  118A  24EF  118A   	fcall	_adc_test_init
   927                           
   928                           ;main.c: 175: dac_init();
   929  0034  118A  25C1  118A   	fcall	_dac_init
   930                           
   931                           ;main.c: 176: op1_init();
   932  0037  118A  256E  118A   	fcall	_op1_init
   933                           
   934                           ;main.c: 177: op2_init();
   935  003A  118A  259D  118A   	fcall	_op2_init
   936                           
   937                           ;main.c: 180: adc_start();
   938  003D  118A  2504  118A   	fcall	_adc_start
   939  0040                     l4112:	
   940  0040  0064               	clrwdt	;#
   941                           
   942                           ;main.c: 215: process_AD_Converter_Value();
   943  0041  118A  24AD  118A   	fcall	_process_AD_Converter_Value
   944                           
   945                           ;main.c: 217: if(isPermitSampleTime())
   946  0044  118A  25BC  118A   	fcall	_isPermitSampleTime
   947  0047  3A00               	xorlw	0
   948  0048  1903               	skipnz
   949  0049  2840               	goto	l4112
   950                           
   951                           ;main.c: 218: {
   952                           ;main.c: 219: clrSampeTime();
   953  004A  118A  25CD  118A   	fcall	_clrSampeTime
   954                           
   955                           ;main.c: 221: switch(enumMainLoopStep)
   956  004D  2B02               	goto	l4598
   957  004E                     l4120:	
   958                           
   959                           ;main.c: 224: {
   960                           ;main.c: 225: static unsigned char ucTimerZeroPoint5s = 0;
   961                           ;main.c: 226: if(getAdOriginalCh14Value() > 1950)
   962  004E  118A  2402  118A   	fcall	_getAdOriginalCh14Value
   963  0051  3007               	movlw	7
   964  0052  0248               	subwf	?_getAdOriginalCh14Value+1,w
   965  0053  309F               	movlw	159
   966  0054  1903               	skipnz
   967  0055  0247               	subwf	?_getAdOriginalCh14Value,w
   968  0056  1C03               	skipc
   969  0057  285A               	goto	l4124
   970                           
   971                           ;main.c: 227: {
   972                           ;main.c: 228: ucTimerZeroPoint5s++;
   973  0058  0AEC               	incf	main@ucTimerZeroPoint5s,f
   974                           
   975                           ;main.c: 229: }
   976  0059  285B               	goto	l4126
   977  005A                     l4124:	
   978                           
   979                           ;main.c: 230: else
   980                           ;main.c: 231: ucTimerZeroPoint5s = 0;
   981  005A  01EC               	clrf	main@ucTimerZeroPoint5s
   982  005B                     l4126:	
   983                           
   984                           ;main.c: 233: if(ucTimerZeroPoint5s >= 1)
   985  005B  086C               	movf	main@ucTimerZeroPoint5s,w
   986  005C  1903               	btfsc	3,2
   987  005D  2840               	goto	l4112
   988                           
   989                           ;main.c: 234: {
   990                           ;main.c: 235: ucTimerZeroPoint5s = 0;
   991  005E  01EC               	clrf	main@ucTimerZeroPoint5s
   992  005F                     l4130:	
   993                           
   994                           ;main.c: 236: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
   995  005F  01D6               	clrf	main@enumMainLoopStep
   996  0060  0AD6               	incf	main@enumMainLoopStep,f
   997  0061                     l706:	
   998                           
   999                           ;main.c: 237: }
  1000                           ;main.c: 238: break;
  1001  0061  2840               	goto	l4112
  1002  0062                     l4132:	
  1003                           
  1004                           ;main.c: 242: {
  1005                           ;main.c: 243: static unsigned char ucTimerZeroPoint3s = 0;
  1006                           ;main.c: 245: if(ucTimerZeroPoint3s < 1)
  1007  0062  08EB               	movf	main@ucTimerZeroPoint3s,f
  1008  0063  1D03               	skipz
  1009  0064  2867               	goto	l4136
  1010                           
  1011                           ;main.c: 246: {
  1012                           ;main.c: 247: ucTimerZeroPoint3s++;
  1013  0065  0AEB               	incf	main@ucTimerZeroPoint3s,f
  1014                           
  1015                           ;main.c: 248: }
  1016  0066  2840               	goto	l4112
  1017  0067                     l4136:	
  1018                           
  1019                           ;main.c: 249: else
  1020                           ;main.c: 250: {
  1021                           ;main.c: 251: ucTimerZeroPoint3s = 0;
  1022  0067  01EB               	clrf	main@ucTimerZeroPoint3s
  1023                           
  1024                           ;main.c: 253: if(getAdOriginalCh14Value() > 1950)
  1025  0068  118A  2402  118A   	fcall	_getAdOriginalCh14Value
  1026  006B  3007               	movlw	7
  1027  006C  0248               	subwf	?_getAdOriginalCh14Value+1,w
  1028  006D  309F               	movlw	159
  1029  006E  1903               	skipnz
  1030  006F  0247               	subwf	?_getAdOriginalCh14Value,w
  1031  0070  1C03               	skipc
  1032  0071  2874               	goto	l4142
  1033  0072                     l4140:	
  1034                           
  1035                           ;main.c: 254: {
  1036                           ;main.c: 256: enumMainLoopStep = MAIN_LOOP_STEP_SECOND;
  1037  0072  3002               	movlw	2
  1038  0073  28B7               	goto	L5
  1039  0074                     l4142:	
  1040                           ;main.c: 257: }
  1041                           
  1042                           
  1043                           ;main.c: 258: else
  1044                           ;main.c: 259: {
  1045                           ;main.c: 260: clearPinPortAndTimer();
  1046  0074  118A  2507  118A   	fcall	_clearPinPortAndTimer
  1047  0077  2840               	goto	l4112
  1048  0078                     l715:	
  1049                           ;main.c: 264: }
  1050                           ;main.c: 266: case MAIN_LOOP_STEP_SECOND:
  1051                           
  1052  0078  3005               	movlw	5
  1053                           
  1054                           ;main.c: 267: {
  1055                           ;main.c: 268: static unsigned char ucTimerP5s = 0;
  1056                           ;main.c: 270: PA6 = 1;
  1057  0079  1705               	bsf	5,6
  1058                           
  1059                           ;main.c: 272: if(ucTimerP5s < 5)
  1060  007A  0267               	subwf	main@ucTimerP5s,w
  1061  007B  1803               	skipnc
  1062  007C  287F               	goto	l4148
  1063                           
  1064                           ;main.c: 273: ucTimerP5s++;
  1065  007D  0AE7               	incf	main@ucTimerP5s,f
  1066  007E  2840               	goto	l4112
  1067  007F                     l4148:	
  1068  007F  3003               	movlw	3
  1069                           
  1070                           ;main.c: 274: else
  1071                           ;main.c: 275: {
  1072                           ;main.c: 276: ucTimerP5s = 0;
  1073  0080  01E7               	clrf	main@ucTimerP5s
  1074                           
  1075                           ;main.c: 278: enumMainLoopStep = MAIN_LOOP_STEP_THIRD;
  1076  0081  28B7               	goto	L5
  1077  0082                     l4152:	
  1078                           
  1079                           ;main.c: 285: {
  1080                           ;main.c: 286: static unsigned char ucTimerADC1ZeroP5s = 0;
  1081                           ;main.c: 288: if(getAdOriginalCh1Value() < 130)
  1082  0082  118A  23FB  118A   	fcall	_getAdOriginalCh1Value
  1083  0085  3000               	movlw	0
  1084  0086  0248               	subwf	?_getAdOriginalCh1Value+1,w
  1085  0087  3082               	movlw	130
  1086  0088  1903               	skipnz
  1087  0089  0247               	subwf	?_getAdOriginalCh1Value,w
  1088  008A  1803               	skipnc
  1089  008B  288E               	goto	l4156
  1090                           
  1091                           ;main.c: 289: {
  1092                           ;main.c: 290: ucTimerADC1ZeroP5s = 0;
  1093  008C  01E0               	clrf	main@ucTimerADC1ZeroP5s
  1094                           
  1095                           ;main.c: 292: }
  1096  008D  288F               	goto	l4158
  1097  008E                     l4156:	
  1098                           
  1099                           ;main.c: 293: else
  1100                           ;main.c: 294: {
  1101                           ;main.c: 295: ucTimerADC1ZeroP5s++;
  1102  008E  0AE0               	incf	main@ucTimerADC1ZeroP5s,f
  1103  008F                     l4158:	
  1104                           
  1105                           ;main.c: 296: }
  1106                           ;main.c: 298: if(ucTimerADC1ZeroP5s >= 1)
  1107  008F  0860               	movf	main@ucTimerADC1ZeroP5s,w
  1108  0090  1903               	btfsc	3,2
  1109  0091  2895               	goto	l4164
  1110  0092  3004               	movlw	4
  1111                           
  1112                           ;main.c: 299: {
  1113                           ;main.c: 300: ucTimerADC1ZeroP5s = 0;
  1114  0093  01E0               	clrf	main@ucTimerADC1ZeroP5s
  1115                           
  1116                           ;main.c: 301: enumMainLoopStep = MAIN_LOOP_STEP_FOURTH;
  1117  0094  28B7               	goto	L5
  1118  0095                     l4164:	
  1119                           ;main.c: 302: }
  1120                           
  1121                           
  1122                           ;main.c: 303: else
  1123                           ;main.c: 304: {
  1124                           ;main.c: 305: static unsigned char ucTimerRightP5s = 0;
  1125                           ;main.c: 307: if(getAdOriginalCh1Value() < 117)
  1126  0095  118A  23FB  118A   	fcall	_getAdOriginalCh1Value
  1127  0098  3000               	movlw	0
  1128  0099  0248               	subwf	?_getAdOriginalCh1Value+1,w
  1129  009A  3075               	movlw	117
  1130  009B  1903               	skipnz
  1131  009C  0247               	subwf	?_getAdOriginalCh1Value,w
  1132  009D  1803               	skipnc
  1133  009E  28A1               	goto	l4168
  1134                           
  1135                           ;main.c: 308: {
  1136                           ;main.c: 309: ucTimerRightP5s++;
  1137  009F  0AE8               	incf	main@ucTimerRightP5s,f
  1138                           
  1139                           ;main.c: 310: }
  1140  00A0  28A2               	goto	l4170
  1141  00A1                     l4168:	
  1142                           
  1143                           ;main.c: 311: else
  1144                           ;main.c: 312: {
  1145                           ;main.c: 313: ucTimerRightP5s = 0;
  1146  00A1  01E8               	clrf	main@ucTimerRightP5s
  1147  00A2                     l4170:	
  1148                           
  1149                           ;main.c: 314: }
  1150                           ;main.c: 316: if(ucTimerRightP5s >= 1)
  1151  00A2  0868               	movf	main@ucTimerRightP5s,w
  1152  00A3  1903               	btfsc	3,2
  1153  00A4  2840               	goto	l4112
  1154  00A5  3008               	movlw	8
  1155                           
  1156                           ;main.c: 317: {
  1157                           ;main.c: 318: ucTimerRightP5s = 0;
  1158  00A6  01E8               	clrf	main@ucTimerRightP5s
  1159                           
  1160                           ;main.c: 319: enumMainLoopStep = MAIN_LOOP_STEP_3_HOUR_BRANCH;
  1161  00A7  28B7               	goto	L5
  1162  00A8                     l4176:	
  1163                           ;main.c: 320: }
  1164                           
  1165                           
  1166                           ;main.c: 331: {
  1167                           ;main.c: 333: startTwelveHourTimer(180);
  1168  00A8  30B4               	movlw	180
  1169  00A9  00A0               	movwf	?_startTwelveHourTimer
  1170  00AA  01A1               	clrf	?_startTwelveHourTimer+1
  1171  00AB  118A  258C  118A   	fcall	_startTwelveHourTimer
  1172                           
  1173                           ;main.c: 334: enumMainLoopStep = MAIN_LOOP_STEP_FIFTH;
  1174  00AE  3005               	movlw	5
  1175  00AF  28B7               	goto	L5
  1176  00B0                     l4180:	
  1177                           ;main.c: 336: break;
  1178                           
  1179                           
  1180                           ;main.c: 340: {
  1181                           ;main.c: 342: if(isFinishedTwelveHoursTimer())
  1182  00B0  118A  25B7  118A   	fcall	_isFinishedTwelveHoursTimer
  1183  00B3  3A00               	xorlw	0
  1184  00B4  1903               	skipnz
  1185  00B5  2A3D               	goto	l4494
  1186  00B6                     l4182:	
  1187                           
  1188                           ;main.c: 343: {
  1189                           ;main.c: 344: enumMainLoopStep = MAIN_LOOP_STEP_12_HOUR_END;
  1190  00B6  3009               	movlw	9
  1191  00B7                     L5:	
  1192  00B7  00D6               	movwf	main@enumMainLoopStep
  1193                           
  1194                           ;main.c: 345: }
  1195  00B8  2840               	goto	l4112
  1196  00B9                     l4184:	
  1197                           
  1198                           ;main.c: 353: {
  1199                           ;main.c: 354: startTwentySecondsTimer();
  1200  00B9  118A  25C6  118A   	fcall	_startTwentySecondsTimer
  1201  00BC                     l4186:	
  1202                           
  1203                           ;main.c: 355: ucADC4_Step = ADC4_STEP_FIRST;
  1204  00BC  01D7               	clrf	main@ucADC4_Step
  1205  00BD  0AD7               	incf	main@ucADC4_Step,f
  1206                           
  1207                           ;main.c: 356: break;
  1208  00BE  2840               	goto	l4112
  1209  00BF                     l4188:	
  1210                           
  1211                           ;main.c: 360: {
  1212                           ;main.c: 361: if(getAdOriginaCh4Value() < 1911)
  1213  00BF  118A  23F4  118A   	fcall	_getAdOriginaCh4Value
  1214  00C2  3007               	movlw	7
  1215  00C3  0248               	subwf	?_getAdOriginaCh4Value+1,w
  1216  00C4  3077               	movlw	119
  1217  00C5  1903               	skipnz
  1218  00C6  0247               	subwf	?_getAdOriginaCh4Value,w
  1219  00C7  1803               	skipnc
  1220  00C8  28CB               	goto	l4192
  1221                           
  1222                           ;main.c: 362: ucChannel4Type = LESS_THAN_1911;
  1223  00C9  01D8               	clrf	main@ucChannel4Type
  1224  00CA  28F2               	goto	l744
  1225  00CB                     l4192:	
  1226                           
  1227                           ;main.c: 363: else if(getAdOriginaCh4Value() < 2067)
  1228  00CB  118A  23F4  118A   	fcall	_getAdOriginaCh4Value
  1229  00CE  3008               	movlw	8
  1230  00CF  0248               	subwf	?_getAdOriginaCh4Value+1,w
  1231  00D0  3013               	movlw	19
  1232  00D1  1903               	skipnz
  1233  00D2  0247               	subwf	?_getAdOriginaCh4Value,w
  1234  00D3  1803               	skipnc
  1235  00D4  28D8               	goto	l4196
  1236                           
  1237                           ;main.c: 364: ucChannel4Type = BETWEEN_1911_AND_2067;
  1238  00D5  01D8               	clrf	main@ucChannel4Type
  1239  00D6  0AD8               	incf	main@ucChannel4Type,f
  1240  00D7  28F2               	goto	l744
  1241  00D8                     l4196:	
  1242                           
  1243                           ;main.c: 365: else if(getAdOriginaCh4Value() < 2204)
  1244  00D8  118A  23F4  118A   	fcall	_getAdOriginaCh4Value
  1245  00DB  3008               	movlw	8
  1246  00DC  0248               	subwf	?_getAdOriginaCh4Value+1,w
  1247  00DD  309C               	movlw	156
  1248  00DE  1903               	skipnz
  1249  00DF  0247               	subwf	?_getAdOriginaCh4Value,w
  1250  00E0  1803               	skipnc
  1251  00E1  28E4               	goto	l4200
  1252                           
  1253                           ;main.c: 366: ucChannel4Type = BETWEEN_2067_AND_2204;
  1254  00E2  3002               	movlw	2
  1255  00E3  28F1               	goto	L6
  1256  00E4                     l4200:	
  1257                           
  1258                           ;main.c: 367: else if(getAdOriginaCh4Value() < 2340)
  1259  00E4  118A  23F4  118A   	fcall	_getAdOriginaCh4Value
  1260  00E7  3009               	movlw	9
  1261  00E8  0248               	subwf	?_getAdOriginaCh4Value+1,w
  1262  00E9  3024               	movlw	36
  1263  00EA  1903               	skipnz
  1264  00EB  0247               	subwf	?_getAdOriginaCh4Value,w
  1265  00EC  1803               	skipnc
  1266  00ED  28F0               	goto	l4204
  1267                           
  1268                           ;main.c: 368: ucChannel4Type = BETWEEN_2204_AND_2340;
  1269  00EE  3003               	movlw	3
  1270  00EF  28F1               	goto	L6
  1271  00F0                     l4204:	
  1272                           
  1273                           ;main.c: 369: else
  1274                           ;main.c: 370: ucChannel4Type = MORE_THAN_2340;
  1275  00F0  3004               	movlw	4
  1276  00F1                     L6:	
  1277  00F1  00D8               	movwf	main@ucChannel4Type
  1278  00F2                     l744:	
  1279                           
  1280                           ;main.c: 372: ucADC4_Step = ADC4_STEP_SECOND;
  1281  00F2  3002               	movlw	2
  1282  00F3  2A2A               	goto	L8
  1283  00F4                     l759:	
  1284                           ;main.c: 387: {
  1285                           ;main.c: 388: case 0:
  1286                           
  1287                           ;main.c: 373: break;
  1288                           
  1289                           
  1290                           ;main.c: 389: {
  1291                           ;main.c: 390: PB0 = 1;
  1292  00F4  1406               	bsf	6,0
  1293  00F5                     l4206:	
  1294                           
  1295                           ;main.c: 391: ucLoaderStep++;
  1296  00F5  0AD9               	incf	main@ucLoaderStep,f
  1297                           
  1298                           ;main.c: 392: break;
  1299  00F6  2840               	goto	l4112
  1300  00F7                     l4208:	
  1301                           
  1302                           ;main.c: 396: {
  1303                           ;main.c: 397: if(ucTimerDelay >= 5)
  1304  00F7  3005               	movlw	5
  1305  00F8  0261               	subwf	main@ucTimerDelay,w
  1306  00F9  1C03               	skipc
  1307  00FA  28FE               	goto	l4216
  1308                           
  1309                           ;main.c: 398: {
  1310                           ;main.c: 399: PA0 = 1;
  1311  00FB  1405               	bsf	5,0
  1312  00FC                     l4212:	
  1313                           
  1314                           ;main.c: 400: ucTimerDelay = 0;
  1315  00FC  01E1               	clrf	main@ucTimerDelay
  1316  00FD  28F5               	goto	l4206
  1317  00FE                     l4216:	
  1318                           
  1319                           ;main.c: 403: else
  1320                           ;main.c: 404: ucTimerDelay++;
  1321  00FE  0AE1               	incf	main@ucTimerDelay,f
  1322  00FF  2840               	goto	l4112
  1323  0100                     l4218:	
  1324                           
  1325                           ;main.c: 409: {
  1326                           ;main.c: 410: if(ucTimerDelay >= 5)
  1327  0100  3005               	movlw	5
  1328  0101  0261               	subwf	main@ucTimerDelay,w
  1329  0102  1C03               	skipc
  1330  0103  28FE               	goto	l4216
  1331                           
  1332                           ;main.c: 411: {
  1333                           ;main.c: 412: PA1= 1;
  1334  0104  1485               	bsf	5,1
  1335  0105  28FC               	goto	l4212
  1336  0106                     l4228:	
  1337                           
  1338                           ;main.c: 423: {
  1339                           ;main.c: 424: if(ucTimerDelay >= 5)
  1340  0106  3005               	movlw	5
  1341  0107  0261               	subwf	main@ucTimerDelay,w
  1342  0108  1C03               	skipc
  1343  0109  28FE               	goto	l4216
  1344                           
  1345                           ;main.c: 425: {
  1346                           ;main.c: 426: PA2= 1;
  1347  010A  1505               	bsf	5,2
  1348  010B  28FC               	goto	l4212
  1349  010C                     l4238:	
  1350                           
  1351                           ;main.c: 436: {
  1352                           ;main.c: 437: if(ucTimerDelay >= 5)
  1353  010C  3005               	movlw	5
  1354  010D  0261               	subwf	main@ucTimerDelay,w
  1355  010E  1C03               	skipc
  1356  010F  28FE               	goto	l4216
  1357                           
  1358                           ;main.c: 438: {
  1359                           ;main.c: 439: PA3 = 1;
  1360  0110  1585               	bsf	5,3
  1361  0111  28FC               	goto	l4212
  1362  0112                     l4248:	
  1363                           
  1364                           ;main.c: 449: {
  1365                           ;main.c: 450: if(ucTimerDelay >= 5)
  1366  0112  3005               	movlw	5
  1367  0113  0261               	subwf	main@ucTimerDelay,w
  1368  0114  1C03               	skipc
  1369  0115  28FE               	goto	l4216
  1370                           
  1371                           ;main.c: 451: {
  1372                           ;main.c: 452: PB0 = 0;
  1373  0116  1006               	bcf	6,0
  1374                           
  1375                           ;main.c: 453: PA0 = 0;
  1376  0117  1005               	bcf	5,0
  1377                           
  1378                           ;main.c: 454: PA1 = 0;
  1379  0118  1085               	bcf	5,1
  1380                           
  1381                           ;main.c: 455: PA2 = 0;
  1382  0119  1105               	bcf	5,2
  1383                           
  1384                           ;main.c: 456: PA3 = 0;
  1385  011A  1185               	bcf	5,3
  1386  011B  28FC               	goto	l4212
  1387  011C                     l4258:	
  1388                           
  1389                           ;main.c: 466: {
  1390                           ;main.c: 467: if(ucTimerDelay >= 2)
  1391  011C  3002               	movlw	2
  1392  011D  0261               	subwf	main@ucTimerDelay,w
  1393  011E  1C03               	skipc
  1394  011F  28FE               	goto	l4216
  1395                           
  1396                           ;main.c: 468: {
  1397                           ;main.c: 469: ucTimerDelay = 0;
  1398  0120  01E1               	clrf	main@ucTimerDelay
  1399                           
  1400                           ;main.c: 471: ucLoaderStep = 0;
  1401  0121  01D9               	clrf	main@ucLoaderStep
  1402  0122                     l4262:	
  1403                           
  1404                           ;main.c: 472: ucADC4_Step = ADC4_STEP_THIRD;
  1405  0122  3003               	movlw	3
  1406  0123  2A2A               	goto	L8
  1407  0124                     l4268:	
  1408                           ;main.c: 473: }
  1409                           
  1410  0124  0859               	movf	main@ucLoaderStep,w
  1411                           
  1412                           ; Switch size 1, requested type "space"
  1413                           ; Number of cases is 7, Range of values is 0 to 6
  1414                           ; switch strategies available:
  1415                           ; Name         Instructions Cycles
  1416                           ; direct_byte           21     7 (fixed)
  1417                           ; simple_byte           22    12 (average)
  1418                           ; jumptable            260     6 (fixed)
  1419                           ; rangetable            11     6 (fixed)
  1420                           ; spacedrange           20     9 (fixed)
  1421                           ; locatedrange           7     3 (fixed)
  1422                           ;	Chosen strategy is direct_byte
  1423  0125  0084               	movwf	4
  1424  0126  3007               	movlw	7
  1425  0127  0204               	subwf	4,w
  1426  0128  1803               	skipnc
  1427  0129  2840               	goto	l4112
  1428  012A  3005               	movlw	high S4816
  1429  012B  008A               	movwf	10
  1430  012C  1003               	clrc
  1431  012D  0D04               	rlf	4,w
  1432  012E  3E46               	addlw	low S4816
  1433  012F  0082               	movwf	2
  1434  0130                     l787:	
  1435                           ;main.c: 492: {
  1436                           ;main.c: 493: case 0:
  1437                           
  1438                           
  1439                           ;main.c: 494: {
  1440                           ;main.c: 495: PB0 = 1;
  1441  0130  1406               	bsf	6,0
  1442  0131                     l4270:	
  1443                           
  1444                           ;main.c: 496: ucLoaderStep1++;
  1445  0131  0ADA               	incf	main@ucLoaderStep1,f
  1446                           
  1447                           ;main.c: 497: break;
  1448  0132  2840               	goto	l4112
  1449  0133                     l4272:	
  1450                           
  1451                           ;main.c: 501: {
  1452                           ;main.c: 502: if(ucTimerDelay1 >= 5)
  1453  0133  3005               	movlw	5
  1454  0134  0262               	subwf	main@ucTimerDelay1,w
  1455  0135  1C03               	skipc
  1456  0136  293A               	goto	l4280
  1457                           
  1458                           ;main.c: 503: {
  1459                           ;main.c: 504: PA0 = 1;
  1460  0137  1405               	bsf	5,0
  1461  0138                     l4276:	
  1462                           
  1463                           ;main.c: 505: ucTimerDelay1 = 0;
  1464  0138  01E2               	clrf	main@ucTimerDelay1
  1465  0139  2931               	goto	l4270
  1466  013A                     l4280:	
  1467                           
  1468                           ;main.c: 508: else
  1469                           ;main.c: 509: ucTimerDelay1++;
  1470  013A  0AE2               	incf	main@ucTimerDelay1,f
  1471  013B  2840               	goto	l4112
  1472  013C                     l4282:	
  1473                           
  1474                           ;main.c: 514: {
  1475                           ;main.c: 515: if(ucTimerDelay1 >= 5)
  1476  013C  3005               	movlw	5
  1477  013D  0262               	subwf	main@ucTimerDelay1,w
  1478  013E  1C03               	skipc
  1479  013F  293A               	goto	l4280
  1480                           
  1481                           ;main.c: 516: {
  1482                           ;main.c: 517: PA1= 1;
  1483  0140  1485               	bsf	5,1
  1484  0141  2938               	goto	l4276
  1485  0142                     l4292:	
  1486                           
  1487                           ;main.c: 527: {
  1488                           ;main.c: 528: if(ucTimerDelay1 >= 5)
  1489  0142  3005               	movlw	5
  1490  0143  0262               	subwf	main@ucTimerDelay1,w
  1491  0144  1C03               	skipc
  1492  0145  293A               	goto	l4280
  1493                           
  1494                           ;main.c: 529: {
  1495                           ;main.c: 530: PA2 = 1;
  1496  0146  1505               	bsf	5,2
  1497  0147  2938               	goto	l4276
  1498  0148                     l4302:	
  1499                           
  1500                           ;main.c: 540: {
  1501                           ;main.c: 541: if(ucTimerDelay1 >= 5)
  1502  0148  3005               	movlw	5
  1503  0149  0262               	subwf	main@ucTimerDelay1,w
  1504  014A  1C03               	skipc
  1505  014B  293A               	goto	l4280
  1506                           
  1507                           ;main.c: 542: {
  1508                           ;main.c: 543: PA3 = 1;
  1509  014C  1585               	bsf	5,3
  1510  014D  2938               	goto	l4276
  1511  014E                     l4312:	
  1512                           
  1513                           ;main.c: 553: {
  1514                           ;main.c: 554: if(ucTimerDelay1 >= 5)
  1515  014E  3005               	movlw	5
  1516  014F  0262               	subwf	main@ucTimerDelay1,w
  1517  0150  1C03               	skipc
  1518  0151  293A               	goto	l4280
  1519                           
  1520                           ;main.c: 555: {
  1521                           ;main.c: 556: PA0 = 0;
  1522  0152  1005               	bcf	5,0
  1523                           
  1524                           ;main.c: 557: PA1 = 0;
  1525  0153  1085               	bcf	5,1
  1526                           
  1527                           ;main.c: 558: PA2 = 0;
  1528  0154  1105               	bcf	5,2
  1529                           
  1530                           ;main.c: 559: PA3 = 0;
  1531  0155  1185               	bcf	5,3
  1532  0156  2938               	goto	l4276
  1533  0157                     l4322:	
  1534                           
  1535                           ;main.c: 569: {
  1536                           ;main.c: 570: if(ucTimerDelay1 >= 2)
  1537  0157  3002               	movlw	2
  1538  0158  0262               	subwf	main@ucTimerDelay1,w
  1539  0159  1C03               	skipc
  1540  015A  293A               	goto	l4280
  1541                           
  1542                           ;main.c: 571: {
  1543                           ;main.c: 572: ucTimerDelay1 = 0;
  1544  015B  01E2               	clrf	main@ucTimerDelay1
  1545                           
  1546                           ;main.c: 574: ucLoaderStep1 = 0;
  1547  015C  01DA               	clrf	main@ucLoaderStep1
  1548  015D  2922               	goto	l4262
  1549  015E                     l4332:	
  1550  015E  085A               	movf	main@ucLoaderStep1,w
  1551                           
  1552                           ; Switch size 1, requested type "space"
  1553                           ; Number of cases is 7, Range of values is 0 to 6
  1554                           ; switch strategies available:
  1555                           ; Name         Instructions Cycles
  1556                           ; direct_byte           21     7 (fixed)
  1557                           ; simple_byte           22    12 (average)
  1558                           ; jumptable            260     6 (fixed)
  1559                           ; rangetable            11     6 (fixed)
  1560                           ; spacedrange           20     9 (fixed)
  1561                           ; locatedrange           7     3 (fixed)
  1562                           ;	Chosen strategy is direct_byte
  1563  015F  0084               	movwf	4
  1564  0160  3007               	movlw	7
  1565  0161  0204               	subwf	4,w
  1566  0162  1803               	skipnc
  1567  0163  2840               	goto	l4112
  1568  0164  3005               	movlw	high S4818
  1569  0165  008A               	movwf	10
  1570  0166  1003               	clrc
  1571  0167  0D04               	rlf	4,w
  1572  0168  3E54               	addlw	low S4818
  1573  0169  0082               	movwf	2
  1574  016A                     l814:	
  1575                           ;main.c: 596: {
  1576                           ;main.c: 597: case 0:
  1577                           
  1578                           
  1579                           ;main.c: 598: {
  1580                           ;main.c: 599: PB0 = 1;
  1581  016A  1406               	bsf	6,0
  1582                           
  1583                           ;main.c: 600: PA0 = 1;
  1584  016B  1405               	bsf	5,0
  1585  016C                     l4334:	
  1586                           
  1587                           ;main.c: 601: ucLoaderStep2++;
  1588  016C  0ADB               	incf	main@ucLoaderStep2,f
  1589                           
  1590                           ;main.c: 602: break;
  1591  016D  2840               	goto	l4112
  1592  016E                     l4336:	
  1593                           
  1594                           ;main.c: 606: {
  1595                           ;main.c: 607: if(ucTimerDelay2 >= 5)
  1596  016E  3005               	movlw	5
  1597  016F  0263               	subwf	main@ucTimerDelay2,w
  1598  0170  1C03               	skipc
  1599  0171  2975               	goto	l4344
  1600                           
  1601                           ;main.c: 608: {
  1602                           ;main.c: 609: PA1 = 1;
  1603  0172  1485               	bsf	5,1
  1604  0173                     l4340:	
  1605                           
  1606                           ;main.c: 610: ucTimerDelay2 = 0;
  1607  0173  01E3               	clrf	main@ucTimerDelay2
  1608  0174  296C               	goto	l4334
  1609  0175                     l4344:	
  1610                           
  1611                           ;main.c: 613: else
  1612                           ;main.c: 614: ucTimerDelay2++;
  1613  0175  0AE3               	incf	main@ucTimerDelay2,f
  1614  0176  2840               	goto	l4112
  1615  0177                     l4346:	
  1616                           
  1617                           ;main.c: 619: {
  1618                           ;main.c: 620: if(ucTimerDelay2 >= 5)
  1619  0177  3005               	movlw	5
  1620  0178  0263               	subwf	main@ucTimerDelay2,w
  1621  0179  1C03               	skipc
  1622  017A  2975               	goto	l4344
  1623                           
  1624                           ;main.c: 621: {
  1625                           ;main.c: 622: PA2 = 1;
  1626  017B  1505               	bsf	5,2
  1627  017C  2973               	goto	l4340
  1628  017D                     l4356:	
  1629                           
  1630                           ;main.c: 632: {
  1631                           ;main.c: 633: if(ucTimerDelay2 >= 5)
  1632  017D  3005               	movlw	5
  1633  017E  0263               	subwf	main@ucTimerDelay2,w
  1634  017F  1C03               	skipc
  1635  0180  2975               	goto	l4344
  1636                           
  1637                           ;main.c: 634: {
  1638                           ;main.c: 635: PA3 = 1;
  1639  0181  1585               	bsf	5,3
  1640  0182  2973               	goto	l4340
  1641  0183                     l4366:	
  1642                           
  1643                           ;main.c: 645: {
  1644                           ;main.c: 646: if(ucTimerDelay2 >= 5)
  1645  0183  3005               	movlw	5
  1646  0184  0263               	subwf	main@ucTimerDelay2,w
  1647  0185  1C03               	skipc
  1648  0186  2975               	goto	l4344
  1649                           
  1650                           ;main.c: 647: {
  1651                           ;main.c: 649: PA1 = 0;
  1652  0187  1085               	bcf	5,1
  1653                           
  1654                           ;main.c: 650: PA2 = 0;
  1655  0188  1105               	bcf	5,2
  1656                           
  1657                           ;main.c: 651: PA3 = 0;
  1658  0189  1185               	bcf	5,3
  1659  018A  2973               	goto	l4340
  1660  018B                     l4376:	
  1661                           
  1662                           ;main.c: 661: {
  1663                           ;main.c: 662: if(ucTimerDelay2 >= 2)
  1664  018B  3002               	movlw	2
  1665  018C  0263               	subwf	main@ucTimerDelay2,w
  1666  018D  1C03               	skipc
  1667  018E  2975               	goto	l4344
  1668                           
  1669                           ;main.c: 663: {
  1670                           ;main.c: 664: ucTimerDelay2 = 0;
  1671  018F  01E3               	clrf	main@ucTimerDelay2
  1672                           
  1673                           ;main.c: 666: ucLoaderStep2 = 0;
  1674  0190  01DB               	clrf	main@ucLoaderStep2
  1675  0191  2922               	goto	l4262
  1676  0192                     l4386:	
  1677  0192  085B               	movf	main@ucLoaderStep2,w
  1678                           
  1679                           ; Switch size 1, requested type "space"
  1680                           ; Number of cases is 6, Range of values is 0 to 5
  1681                           ; switch strategies available:
  1682                           ; Name         Instructions Cycles
  1683                           ; direct_byte           19     7 (fixed)
  1684                           ; simple_byte           19    10 (average)
  1685                           ; jumptable            260     6 (fixed)
  1686                           ; rangetable            10     6 (fixed)
  1687                           ; spacedrange           18     9 (fixed)
  1688                           ; locatedrange           6     3 (fixed)
  1689                           ;	Chosen strategy is direct_byte
  1690  0193  0084               	movwf	4
  1691  0194  3006               	movlw	6
  1692  0195  0204               	subwf	4,w
  1693  0196  1803               	skipnc
  1694  0197  2840               	goto	l4112
  1695  0198  3005               	movlw	high S4820
  1696  0199  008A               	movwf	10
  1697  019A  1003               	clrc
  1698  019B  0D04               	rlf	4,w
  1699  019C  3E62               	addlw	low S4820
  1700  019D  0082               	movwf	2
  1701  019E                     l838:	
  1702                           ;main.c: 688: {
  1703                           ;main.c: 689: case 0:
  1704                           
  1705                           
  1706                           ;main.c: 690: {
  1707                           ;main.c: 691: PB0 = 1;
  1708  019E  1406               	bsf	6,0
  1709                           
  1710                           ;main.c: 692: PA0 = 1;
  1711  019F  1405               	bsf	5,0
  1712                           
  1713                           ;main.c: 693: PA1 = 1;
  1714  01A0  1485               	bsf	5,1
  1715  01A1                     l4388:	
  1716                           
  1717                           ;main.c: 694: ucLoaderStep3++;
  1718  01A1  0ADC               	incf	main@ucLoaderStep3,f
  1719                           
  1720                           ;main.c: 695: break;
  1721  01A2  2840               	goto	l4112
  1722  01A3                     l4390:	
  1723                           
  1724                           ;main.c: 699: {
  1725                           ;main.c: 700: if(ucTimerDelay3 >= 5)
  1726  01A3  3005               	movlw	5
  1727  01A4  0264               	subwf	main@ucTimerDelay3,w
  1728  01A5  1C03               	skipc
  1729  01A6  29AA               	goto	l4398
  1730                           
  1731                           ;main.c: 701: {
  1732                           ;main.c: 702: PA2 = 1;
  1733  01A7  1505               	bsf	5,2
  1734  01A8                     l4394:	
  1735                           
  1736                           ;main.c: 703: ucTimerDelay3 = 0;
  1737  01A8  01E4               	clrf	main@ucTimerDelay3
  1738  01A9  29A1               	goto	l4388
  1739  01AA                     l4398:	
  1740                           
  1741                           ;main.c: 706: else
  1742                           ;main.c: 707: ucTimerDelay3++;
  1743  01AA  0AE4               	incf	main@ucTimerDelay3,f
  1744  01AB  2840               	goto	l4112
  1745  01AC                     l4400:	
  1746                           
  1747                           ;main.c: 712: {
  1748                           ;main.c: 713: if(ucTimerDelay3 >= 5)
  1749  01AC  3005               	movlw	5
  1750  01AD  0264               	subwf	main@ucTimerDelay3,w
  1751  01AE  1C03               	skipc
  1752  01AF  29AA               	goto	l4398
  1753                           
  1754                           ;main.c: 714: {
  1755                           ;main.c: 715: PA3 = 1;
  1756  01B0  1585               	bsf	5,3
  1757  01B1  29A8               	goto	l4394
  1758  01B2                     l4410:	
  1759                           
  1760                           ;main.c: 726: {
  1761                           ;main.c: 727: if(ucTimerDelay3 >= 5)
  1762  01B2  3005               	movlw	5
  1763  01B3  0264               	subwf	main@ucTimerDelay3,w
  1764  01B4  1C03               	skipc
  1765  01B5  29AA               	goto	l4398
  1766                           
  1767                           ;main.c: 728: {
  1768                           ;main.c: 730: PA2 = 0;
  1769  01B6  1105               	bcf	5,2
  1770                           
  1771                           ;main.c: 731: PA3 = 0;
  1772  01B7  1185               	bcf	5,3
  1773  01B8  29A8               	goto	l4394
  1774  01B9                     l4420:	
  1775                           
  1776                           ;main.c: 741: {
  1777                           ;main.c: 742: if(ucTimerDelay3 >= 2)
  1778  01B9  3002               	movlw	2
  1779  01BA  0264               	subwf	main@ucTimerDelay3,w
  1780  01BB  1C03               	skipc
  1781  01BC  29AA               	goto	l4398
  1782                           
  1783                           ;main.c: 743: {
  1784                           ;main.c: 744: ucTimerDelay3 = 0;
  1785  01BD  01E4               	clrf	main@ucTimerDelay3
  1786                           
  1787                           ;main.c: 746: ucLoaderStep3 = 0;
  1788  01BE  01DC               	clrf	main@ucLoaderStep3
  1789  01BF  2922               	goto	l4262
  1790  01C0                     l4430:	
  1791  01C0  085C               	movf	main@ucLoaderStep3,w
  1792                           
  1793                           ; Switch size 1, requested type "space"
  1794                           ; Number of cases is 5, Range of values is 0 to 4
  1795                           ; switch strategies available:
  1796                           ; Name         Instructions Cycles
  1797                           ; simple_byte           16     9 (average)
  1798                           ; direct_byte           17     7 (fixed)
  1799                           ; jumptable            260     6 (fixed)
  1800                           ; rangetable             9     6 (fixed)
  1801                           ; spacedrange           16     9 (fixed)
  1802                           ; locatedrange           5     3 (fixed)
  1803                           ;	Chosen strategy is simple_byte
  1804  01C1  3A00               	xorlw	0	; case 0
  1805  01C2  1903               	skipnz
  1806  01C3  299E               	goto	l838
  1807  01C4  3A01               	xorlw	1	; case 1
  1808  01C5  1903               	skipnz
  1809  01C6  29A3               	goto	l4390
  1810  01C7  3A03               	xorlw	3	; case 2
  1811  01C8  1903               	skipnz
  1812  01C9  29AC               	goto	l4400
  1813  01CA  3A01               	xorlw	1	; case 3
  1814  01CB  1903               	skipnz
  1815  01CC  29B2               	goto	l4410
  1816  01CD  3A07               	xorlw	7	; case 4
  1817  01CE  1903               	skipnz
  1818  01CF  29B9               	goto	l4420
  1819  01D0  2861               	goto	l706
  1820  01D1                     l859:	
  1821                           ;main.c: 768: {
  1822                           ;main.c: 769: case 0:
  1823                           
  1824                           
  1825                           ;main.c: 770: {
  1826                           ;main.c: 771: PB0 = 1;
  1827  01D1  1406               	bsf	6,0
  1828                           
  1829                           ;main.c: 772: PA0 = 1;
  1830  01D2  1405               	bsf	5,0
  1831                           
  1832                           ;main.c: 773: PA1 = 1;
  1833  01D3  1485               	bsf	5,1
  1834                           
  1835                           ;main.c: 774: PA2 = 1;
  1836  01D4  1505               	bsf	5,2
  1837  01D5                     l4432:	
  1838                           
  1839                           ;main.c: 775: ucLoaderStep4++;
  1840  01D5  0ADD               	incf	main@ucLoaderStep4,f
  1841                           
  1842                           ;main.c: 776: break;
  1843  01D6  2840               	goto	l4112
  1844  01D7                     l4434:	
  1845                           
  1846                           ;main.c: 780: {
  1847                           ;main.c: 781: if(ucTimerDelay4 >= 5)
  1848  01D7  3005               	movlw	5
  1849  01D8  0265               	subwf	main@ucTimerDelay4,w
  1850  01D9  1C03               	skipc
  1851  01DA  29DE               	goto	l4442
  1852                           
  1853                           ;main.c: 782: {
  1854                           ;main.c: 783: PA3 = 1;
  1855  01DB  1585               	bsf	5,3
  1856  01DC                     l4438:	
  1857                           
  1858                           ;main.c: 784: ucTimerDelay4 = 0;
  1859  01DC  01E5               	clrf	main@ucTimerDelay4
  1860  01DD  29D5               	goto	l4432
  1861  01DE                     l4442:	
  1862                           
  1863                           ;main.c: 787: else
  1864                           ;main.c: 788: ucTimerDelay4++;
  1865  01DE  0AE5               	incf	main@ucTimerDelay4,f
  1866  01DF  2840               	goto	l4112
  1867  01E0                     l4444:	
  1868                           
  1869                           ;main.c: 793: {
  1870                           ;main.c: 794: if(ucTimerDelay4 >= 5)
  1871  01E0  3005               	movlw	5
  1872  01E1  0265               	subwf	main@ucTimerDelay4,w
  1873  01E2  1C03               	skipc
  1874  01E3  29DE               	goto	l4442
  1875                           
  1876                           ;main.c: 795: {
  1877                           ;main.c: 796: PA3 = 0;
  1878  01E4  1185               	bcf	5,3
  1879  01E5  29DC               	goto	l4438
  1880  01E6                     l4454:	
  1881                           
  1882                           ;main.c: 806: {
  1883                           ;main.c: 807: if(ucTimerDelay4 >= 2)
  1884  01E6  3002               	movlw	2
  1885  01E7  0265               	subwf	main@ucTimerDelay4,w
  1886  01E8  1C03               	skipc
  1887  01E9  29DE               	goto	l4442
  1888                           
  1889                           ;main.c: 808: {
  1890                           ;main.c: 809: ucTimerDelay4 = 0;
  1891  01EA  01E5               	clrf	main@ucTimerDelay4
  1892                           
  1893                           ;main.c: 811: ucLoaderStep4 = 0;
  1894  01EB  01DD               	clrf	main@ucLoaderStep4
  1895  01EC  2922               	goto	l4262
  1896  01ED                     l4464:	
  1897  01ED  085D               	movf	main@ucLoaderStep4,w
  1898                           
  1899                           ; Switch size 1, requested type "space"
  1900                           ; Number of cases is 4, Range of values is 0 to 3
  1901                           ; switch strategies available:
  1902                           ; Name         Instructions Cycles
  1903                           ; simple_byte           13     7 (average)
  1904                           ; direct_byte           15     7 (fixed)
  1905                           ; jumptable            260     6 (fixed)
  1906                           ; rangetable             8     6 (fixed)
  1907                           ; spacedrange           14     9 (fixed)
  1908                           ; locatedrange           4     3 (fixed)
  1909                           ;	Chosen strategy is simple_byte
  1910  01EE  3A00               	xorlw	0	; case 0
  1911  01EF  1903               	skipnz
  1912  01F0  29D1               	goto	l859
  1913  01F1  3A01               	xorlw	1	; case 1
  1914  01F2  1903               	skipnz
  1915  01F3  29D7               	goto	l4434
  1916  01F4  3A03               	xorlw	3	; case 2
  1917  01F5  1903               	skipnz
  1918  01F6  29E0               	goto	l4444
  1919  01F7  3A01               	xorlw	1	; case 3
  1920  01F8  1903               	skipnz
  1921  01F9  29E6               	goto	l4454
  1922  01FA  2861               	goto	l706
  1923  01FB                     l4468:	
  1924  01FB  0858               	movf	main@ucChannel4Type,w
  1925                           
  1926                           ; Switch size 1, requested type "space"
  1927                           ; Number of cases is 5, Range of values is 0 to 4
  1928                           ; switch strategies available:
  1929                           ; Name         Instructions Cycles
  1930                           ; simple_byte           16     9 (average)
  1931                           ; direct_byte           17     7 (fixed)
  1932                           ; jumptable            260     6 (fixed)
  1933                           ; rangetable             9     6 (fixed)
  1934                           ; spacedrange           16     9 (fixed)
  1935                           ; locatedrange           5     3 (fixed)
  1936                           ;	Chosen strategy is simple_byte
  1937  01FC  3A00               	xorlw	0	; case 0
  1938  01FD  1903               	skipnz
  1939  01FE  2924               	goto	l4268
  1940  01FF  3A01               	xorlw	1	; case 1
  1941  0200  1903               	skipnz
  1942  0201  295E               	goto	l4332
  1943  0202  3A03               	xorlw	3	; case 2
  1944  0203  1903               	skipnz
  1945  0204  2992               	goto	l4386
  1946  0205  3A01               	xorlw	1	; case 3
  1947  0206  1903               	skipnz
  1948  0207  29C0               	goto	l4430
  1949  0208  3A07               	xorlw	7	; case 4
  1950  0209  1903               	skipnz
  1951  020A  29ED               	goto	l4464
  1952  020B  2861               	goto	l706
  1953  020C                     l4470:	
  1954                           
  1955                           ;main.c: 835: {
  1956                           ;main.c: 836: if(isFinishedTwentySecondsTimer())
  1957  020C  118A  25B2  118A   	fcall	_isFinishedTwentySecondsTimer
  1958  020F  3A00               	xorlw	0
  1959  0210  1903               	skipnz
  1960  0211  28BC               	goto	l4186
  1961                           
  1962                           ;main.c: 837: {
  1963                           ;main.c: 838: PBOD6 =0;
  1964  0212  1683               	bsf	3,5	;RP0=1, select bank3
  1965  0213  1703               	bsf	3,6	;RP1=1, select bank3
  1966  0214  1308               	bcf	8,6
  1967                           
  1968                           ;main.c: 839: PB6 = 1;
  1969  0215  1283               	bcf	3,5	;RP0=0, select bank0
  1970  0216  1303               	bcf	3,6	;RP1=0, select bank0
  1971  0217  1706               	bsf	6,6
  1972                           
  1973                           ;main.c: 840: PA6 = 0;
  1974  0218  1305               	bcf	5,6
  1975                           
  1976                           ;main.c: 847: if((getAdOriginalCh14Value() > 2800))
  1977  0219  118A  2402  118A   	fcall	_getAdOriginalCh14Value
  1978  021C  300A               	movlw	10
  1979  021D  0248               	subwf	?_getAdOriginalCh14Value+1,w
  1980  021E  30F1               	movlw	241
  1981  021F  1903               	skipnz
  1982  0220  0247               	subwf	?_getAdOriginalCh14Value,w
  1983  0221  1C03               	skipc
  1984  0222  2A25               	goto	l4478
  1985                           
  1986                           ;main.c: 848: DACR0=0x0F;
  1987  0223  300F               	movlw	15
  1988  0224  2A26               	goto	L9
  1989  0225                     l4478:	
  1990                           
  1991                           ;main.c: 849: else
  1992                           ;main.c: 850: DACR0=0x07;
  1993  0225  3007               	movlw	7
  1994  0226                     L9:	
  1995  0226  1683               	bsf	3,5	;RP0=1, select bank1
  1996  0227  0088               	movwf	8	;volatile
  1997                           
  1998                           ;main.c: 852: ucADC4_Step = ADC4_STEP_FOURTH;
  1999  0228  3004               	movlw	4
  2000  0229  1283               	bcf	3,5	;RP0=0, select bank0
  2001  022A                     L8:	
  2002  022A  00D7               	movwf	main@ucADC4_Step
  2003                           
  2004                           ;main.c: 853: }
  2005  022B  2840               	goto	l4112
  2006  022C                     l4480:	
  2007                           
  2008                           ;main.c: 861: {
  2009                           ;main.c: 862: static unsigned char ucTimer1s = 0;
  2010                           ;main.c: 863: if(ucTimer1s < 5)
  2011  022C  3005               	movlw	5
  2012  022D  025E               	subwf	main@ucTimer1s,w
  2013  022E  1803               	skipnc
  2014  022F  2A32               	goto	l4484
  2015                           
  2016                           ;main.c: 864: {
  2017                           ;main.c: 865: ucTimer1s++;
  2018  0230  0ADE               	incf	main@ucTimer1s,f
  2019                           
  2020                           ;main.c: 866: }
  2021  0231  2840               	goto	l4112
  2022  0232                     l4484:	
  2023                           
  2024                           ;main.c: 867: else
  2025                           ;main.c: 868: {
  2026                           ;main.c: 869: ucTimer1s = 0;
  2027  0232  01DE               	clrf	main@ucTimer1s
  2028                           
  2029                           ;main.c: 870: PB6 = 1;
  2030  0233  1706               	bsf	6,6
  2031                           
  2032                           ;main.c: 871: PBOD6 = 1;
  2033  0234  1683               	bsf	3,5	;RP0=1, select bank3
  2034  0235  1703               	bsf	3,6	;RP1=1, select bank3
  2035  0236  1708               	bsf	8,6
  2036                           
  2037                           ;main.c: 872: enumMainLoopStep = MAIN_LOOP_STEP_FIRST;
  2038  0237  1283               	bcf	3,5	;RP0=0, select bank0
  2039  0238  1303               	bcf	3,6	;RP1=0, select bank0
  2040  0239  01D6               	clrf	main@enumMainLoopStep
  2041  023A  0AD6               	incf	main@enumMainLoopStep,f
  2042                           
  2043                           ;main.c: 873: ucADC4_Step = ADC4_STEP_INIT;
  2044  023B  01D7               	clrf	main@ucADC4_Step
  2045  023C  2840               	goto	l4112
  2046  023D                     l4494:	
  2047  023D  0857               	movf	main@ucADC4_Step,w
  2048                           
  2049                           ; Switch size 1, requested type "space"
  2050                           ; Number of cases is 5, Range of values is 0 to 4
  2051                           ; switch strategies available:
  2052                           ; Name         Instructions Cycles
  2053                           ; simple_byte           16     9 (average)
  2054                           ; direct_byte           17     7 (fixed)
  2055                           ; jumptable            260     6 (fixed)
  2056                           ; rangetable             9     6 (fixed)
  2057                           ; spacedrange           16     9 (fixed)
  2058                           ; locatedrange           5     3 (fixed)
  2059                           ;	Chosen strategy is simple_byte
  2060  023E  3A00               	xorlw	0	; case 0
  2061  023F  1903               	skipnz
  2062  0240  28B9               	goto	l4184
  2063  0241  3A01               	xorlw	1	; case 1
  2064  0242  1903               	skipnz
  2065  0243  28BF               	goto	l4188
  2066  0244  3A03               	xorlw	3	; case 2
  2067  0245  1903               	skipnz
  2068  0246  29FB               	goto	l4468
  2069  0247  3A01               	xorlw	1	; case 3
  2070  0248  1903               	skipnz
  2071  0249  2A0C               	goto	l4470
  2072  024A  3A07               	xorlw	7	; case 4
  2073  024B  1903               	skipnz
  2074  024C  2A2C               	goto	l4480
  2075  024D  2861               	goto	l706
  2076  024E                     l887:	
  2077                           ;main.c: 899: {
  2078                           ;main.c: 900: case HOUR_3_BRANCH_STEP_FIRST:
  2079                           
  2080                           
  2081                           ;main.c: 901: {
  2082                           ;main.c: 902: PA7 = 1;
  2083  024E  1785               	bsf	5,7
  2084                           
  2085                           ;main.c: 903: PAOD7 = 1;
  2086  024F  1683               	bsf	3,5	;RP0=1, select bank3
  2087  0250  303C               	movlw	60
  2088  0251  1703               	bsf	3,6	;RP1=1, select bank3
  2089  0252  1787               	bsf	7,7
  2090                           
  2091                           ;main.c: 904: startThreeHoursTimer(60);
  2092  0253  1283               	bcf	3,5	;RP0=0, select bank0
  2093  0254  1303               	bcf	3,6	;RP1=0, select bank0
  2094  0255  00A0               	movwf	?_startThreeHoursTimer
  2095  0256  01A1               	clrf	?_startThreeHoursTimer+1
  2096  0257  118A  2583  118A   	fcall	_startThreeHoursTimer
  2097                           
  2098                           ;main.c: 906: enumBranchStep = HOUR_3_BRANCH_STEP_SECOND;
  2099  025A  01D4               	clrf	main@enumBranchStep
  2100  025B  0AD4               	incf	main@enumBranchStep,f
  2101                           
  2102                           ;main.c: 907: break;
  2103  025C  2840               	goto	l4112
  2104  025D                     l4500:	
  2105                           
  2106                           ;main.c: 911: {
  2107                           ;main.c: 912: static unsigned char ucTimer20s = 0;
  2108                           ;main.c: 914: if(ucTimer20s < 200)
  2109  025D  30C8               	movlw	200
  2110  025E  025F               	subwf	main@ucTimer20s,w
  2111  025F  1803               	skipnc
  2112  0260  2A68               	goto	l4514
  2113                           
  2114                           ;main.c: 915: {
  2115                           ;main.c: 916: ucTimer20s++;
  2116  0261  0ADF               	incf	main@ucTimer20s,f
  2117                           
  2118                           ;main.c: 917: PB0 = 1;
  2119  0262  1406               	bsf	6,0
  2120                           
  2121                           ;main.c: 918: PA0 = 1;
  2122  0263  1405               	bsf	5,0
  2123                           
  2124                           ;main.c: 919: PA1 = 1;
  2125  0264  1485               	bsf	5,1
  2126                           
  2127                           ;main.c: 920: PA2 = 1;
  2128  0265  1505               	bsf	5,2
  2129                           
  2130                           ;main.c: 921: PA3 = 1;
  2131  0266  1585               	bsf	5,3
  2132                           
  2133                           ;main.c: 922: }
  2134  0267  2840               	goto	l4112
  2135  0268                     l4514:	
  2136  0268  3002               	movlw	2
  2137                           
  2138                           ;main.c: 923: else
  2139                           ;main.c: 924: {
  2140                           ;main.c: 926: ucTimer20s = 0;
  2141  0269  01DF               	clrf	main@ucTimer20s
  2142                           
  2143                           ;main.c: 929: enumBranchStep = HOUR_3_BRANCH_STEP_THIRD;
  2144  026A  00D4               	movwf	main@enumBranchStep
  2145  026B  2840               	goto	l4112
  2146  026C                     l894:	
  2147                           ;main.c: 932: }
  2148                           ;main.c: 934: case HOUR_3_BRANCH_STEP_THIRD:
  2149                           
  2150                           
  2151                           ;main.c: 935: {
  2152                           ;main.c: 936: PA6 = 0;
  2153  026C  1305               	bcf	5,6
  2154                           
  2155                           ;main.c: 938: if(isFinishedThreeHoursTimer())
  2156  026D  118A  25AD  118A   	fcall	_isFinishedThreeHoursTimer
  2157  0270  3A00               	xorlw	0
  2158  0271  1903               	skipnz
  2159  0272  2A75               	goto	l4524
  2160                           
  2161                           ;main.c: 939: {
  2162                           ;main.c: 940: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2163  0273  01D4               	clrf	main@enumBranchStep
  2164  0274  28B6               	goto	l4182
  2165  0275                     l4524:	
  2166                           
  2167                           ;main.c: 943: else
  2168                           ;main.c: 944: {
  2169                           ;main.c: 945: static unsigned char ucTimerX1P5s = 0;
  2170                           ;main.c: 947: if(getAdOriginalCh1Value() < 130)
  2171  0275  118A  23FB  118A   	fcall	_getAdOriginalCh1Value
  2172  0278  3000               	movlw	0
  2173  0279  0248               	subwf	?_getAdOriginalCh1Value+1,w
  2174  027A  3082               	movlw	130
  2175  027B  1903               	skipnz
  2176  027C  0247               	subwf	?_getAdOriginalCh1Value,w
  2177  027D  1803               	skipnc
  2178  027E  2A81               	goto	l4528
  2179                           
  2180                           ;main.c: 948: {
  2181                           ;main.c: 949: ucTimerX1P5s = 0;
  2182  027F  01E9               	clrf	main@ucTimerX1P5s
  2183                           
  2184                           ;main.c: 950: }
  2185  0280  2A82               	goto	l4530
  2186  0281                     l4528:	
  2187                           
  2188                           ;main.c: 951: else
  2189                           ;main.c: 952: {
  2190                           ;main.c: 953: ucTimerX1P5s++;
  2191  0281  0AE9               	incf	main@ucTimerX1P5s,f
  2192  0282                     l4530:	
  2193                           
  2194                           ;main.c: 954: }
  2195                           ;main.c: 956: if(ucTimerX1P5s >= 1)
  2196  0282  0869               	movf	main@ucTimerX1P5s,w
  2197  0283  1903               	btfsc	3,2
  2198  0284  2A91               	goto	l4544
  2199                           
  2200                           ;main.c: 957: {
  2201                           ;main.c: 958: ucTimerX1P5s = 0;
  2202  0285  01E9               	clrf	main@ucTimerX1P5s
  2203                           
  2204                           ;main.c: 959: PAOD7 = 0;
  2205  0286  1683               	bsf	3,5	;RP0=1, select bank3
  2206  0287  1703               	bsf	3,6	;RP1=1, select bank3
  2207  0288  1387               	bcf	7,7
  2208                           
  2209                           ;main.c: 960: PA7 = 0;
  2210  0289  1283               	bcf	3,5	;RP0=0, select bank0
  2211  028A  1303               	bcf	3,6	;RP1=0, select bank0
  2212  028B  1385               	bcf	5,7
  2213                           
  2214                           ;main.c: 961: clearThreeHoursTimer();
  2215  028C  118A  251B  118A   	fcall	_clearThreeHoursTimer
  2216                           
  2217                           ;main.c: 963: enumBranchStep = HOUR_3_BRANCH_STEP_FIRST;
  2218  028F  01D4               	clrf	main@enumBranchStep
  2219  0290  2872               	goto	l4140
  2220  0291                     l4544:	
  2221                           
  2222                           ;main.c: 967: else
  2223                           ;main.c: 968: {
  2224                           ;main.c: 969: static unsigned char ucTimerX2P5s = 0;
  2225                           ;main.c: 971: if(getAdOriginalCh14Value() >= 1950)
  2226  0291  118A  2402  118A   	fcall	_getAdOriginalCh14Value
  2227  0294  3007               	movlw	7
  2228  0295  0248               	subwf	?_getAdOriginalCh14Value+1,w
  2229  0296  309E               	movlw	158
  2230  0297  1903               	skipnz
  2231  0298  0247               	subwf	?_getAdOriginalCh14Value,w
  2232  0299  1C03               	skipc
  2233  029A  2A9D               	goto	l4548
  2234                           
  2235                           ;main.c: 972: {
  2236                           ;main.c: 973: ucTimerX2P5s++;
  2237  029B  0AEA               	incf	main@ucTimerX2P5s,f
  2238                           
  2239                           ;main.c: 974: }
  2240  029C  2A9E               	goto	l4550
  2241  029D                     l4548:	
  2242                           
  2243                           ;main.c: 975: else
  2244                           ;main.c: 976: {
  2245                           ;main.c: 977: ucTimerX2P5s = 0;
  2246  029D  01EA               	clrf	main@ucTimerX2P5s
  2247  029E                     l4550:	
  2248                           
  2249                           ;main.c: 978: }
  2250                           ;main.c: 980: if(ucTimerX2P5s >= 1)
  2251  029E  086A               	movf	main@ucTimerX2P5s,w
  2252  029F  1903               	btfsc	3,2
  2253  02A0  2AA3               	goto	l4554
  2254                           
  2255                           ;main.c: 981: {
  2256                           ;main.c: 982: ucTimerX2P5s = 0;
  2257  02A1  01EA               	clrf	main@ucTimerX2P5s
  2258                           
  2259                           ;main.c: 983: }
  2260  02A2  2840               	goto	l4112
  2261  02A3                     l4554:	
  2262                           
  2263                           ;main.c: 984: else
  2264                           ;main.c: 985: {
  2265                           ;main.c: 986: clearPinPortAndTimer();
  2266  02A3  118A  2507  118A   	fcall	_clearPinPortAndTimer
  2267  02A6  285F               	goto	l4130
  2268  02A7                     l4560:	
  2269  02A7  0854               	movf	main@enumBranchStep,w
  2270                           
  2271                           ; Switch size 1, requested type "space"
  2272                           ; Number of cases is 3, Range of values is 0 to 2
  2273                           ; switch strategies available:
  2274                           ; Name         Instructions Cycles
  2275                           ; simple_byte           10     6 (average)
  2276                           ; direct_byte           13     7 (fixed)
  2277                           ; jumptable            260     6 (fixed)
  2278                           ; rangetable             7     6 (fixed)
  2279                           ; spacedrange           12     9 (fixed)
  2280                           ; locatedrange           3     3 (fixed)
  2281                           ;	Chosen strategy is simple_byte
  2282  02A8  3A00               	xorlw	0	; case 0
  2283  02A9  1903               	skipnz
  2284  02AA  2A4E               	goto	l887
  2285  02AB  3A01               	xorlw	1	; case 1
  2286  02AC  1903               	skipnz
  2287  02AD  2A5D               	goto	l4500
  2288  02AE  3A03               	xorlw	3	; case 2
  2289  02AF  1903               	skipnz
  2290  02B0  2A6C               	goto	l894
  2291  02B1  2861               	goto	l706
  2292  02B2                     l914:	
  2293                           ;main.c: 1016: {
  2294                           ;main.c: 1017: case INTERNAL_FIRST_STEP:
  2295                           
  2296                           
  2297                           ;main.c: 1018: {
  2298                           ;main.c: 1019: PB0 = 0;
  2299  02B2  1006               	bcf	6,0
  2300                           
  2301                           ;main.c: 1020: PB1 = 0;
  2302  02B3  1086               	bcf	6,1
  2303                           
  2304                           ;main.c: 1021: PA0 = 0;
  2305  02B4  1005               	bcf	5,0
  2306                           
  2307                           ;main.c: 1022: PA1 = 0;
  2308  02B5  1085               	bcf	5,1
  2309                           
  2310                           ;main.c: 1023: PA2 = 0;
  2311  02B6  1105               	bcf	5,2
  2312                           
  2313                           ;main.c: 1024: PA3 = 0;
  2314  02B7  1185               	bcf	5,3
  2315                           
  2316                           ;main.c: 1025: PBOD6 = 0;
  2317  02B8  1683               	bsf	3,5	;RP0=1, select bank3
  2318  02B9  1703               	bsf	3,6	;RP1=1, select bank3
  2319  02BA  1308               	bcf	8,6
  2320                           
  2321                           ;main.c: 1026: PB6 = 1;
  2322  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  2323  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  2324  02BD  1706               	bsf	6,6
  2325                           
  2326                           ;main.c: 1027: PA6 =0;
  2327  02BE  1305               	bcf	5,6
  2328                           
  2329                           ;main.c: 1029: enumInteralStep = INTERNAL_SECOND_STEP;
  2330  02BF  01D5               	clrf	main@enumInteralStep
  2331  02C0  0AD5               	incf	main@enumInteralStep,f
  2332                           
  2333                           ;main.c: 1030: break;
  2334  02C1  2840               	goto	l4112
  2335  02C2                     l4562:	
  2336                           
  2337                           ;main.c: 1034: {
  2338                           ;main.c: 1035: static unsigned char ucTimer1s = 0;
  2339                           ;main.c: 1037: if(getAdOriginalCh14Value() <= 1000)
  2340  02C2  118A  2402  118A   	fcall	_getAdOriginalCh14Value
  2341  02C5  3003               	movlw	3
  2342  02C6  0248               	subwf	?_getAdOriginalCh14Value+1,w
  2343  02C7  30E9               	movlw	233
  2344  02C8  1903               	skipnz
  2345  02C9  0247               	subwf	?_getAdOriginalCh14Value,w
  2346  02CA  1803               	skipnc
  2347  02CB  2ACE               	goto	l4566
  2348                           
  2349                           ;main.c: 1038: {
  2350                           ;main.c: 1039: ucTimer1s++;
  2351  02CC  0AD3               	incf	main@cTimer1s_810,f
  2352                           
  2353                           ;main.c: 1040: }
  2354  02CD  2ACF               	goto	l4568
  2355  02CE                     l4566:	
  2356                           
  2357                           ;main.c: 1041: else
  2358                           ;main.c: 1042: ucTimer1s = 0;
  2359  02CE  01D3               	clrf	main@cTimer1s_810
  2360  02CF                     l4568:	
  2361                           
  2362                           ;main.c: 1044: if(ucTimer1s >= 10)
  2363  02CF  300A               	movlw	10
  2364  02D0  0253               	subwf	main@cTimer1s_810,w
  2365  02D1  1C03               	skipc
  2366  02D2  2840               	goto	l4112
  2367                           
  2368                           ;main.c: 1045: {
  2369                           ;main.c: 1046: enumInteralStep = INTERNAL_THIRD_STEP;
  2370  02D3  3002               	movlw	2
  2371  02D4  00D5               	movwf	main@enumInteralStep
  2372                           
  2373                           ;main.c: 1047: ucTimer1s = 0;
  2374  02D5  01D3               	clrf	main@cTimer1s_810
  2375  02D6  2840               	goto	l4112
  2376  02D7                     l4574:	
  2377                           
  2378                           ;main.c: 1053: {
  2379                           ;main.c: 1054: static unsigned char ucTimerP3s = 0;
  2380                           ;main.c: 1056: if(getAdOriginalCh14Value() >= 1950)
  2381  02D7  118A  2402  118A   	fcall	_getAdOriginalCh14Value
  2382  02DA  3007               	movlw	7
  2383  02DB  0248               	subwf	?_getAdOriginalCh14Value+1,w
  2384  02DC  309E               	movlw	158
  2385  02DD  1903               	skipnz
  2386  02DE  0247               	subwf	?_getAdOriginalCh14Value,w
  2387  02DF  1C03               	skipc
  2388  02E0  2AE3               	goto	l4578
  2389                           
  2390                           ;main.c: 1057: {
  2391                           ;main.c: 1058: ucTimerP3s++;
  2392  02E1  0AE6               	incf	main@ucTimerP3s,f
  2393                           
  2394                           ;main.c: 1059: }
  2395  02E2  2AE4               	goto	l4580
  2396  02E3                     l4578:	
  2397                           
  2398                           ;main.c: 1060: else
  2399                           ;main.c: 1061: ucTimerP3s = 0;
  2400  02E3  01E6               	clrf	main@ucTimerP3s
  2401  02E4                     l4580:	
  2402                           
  2403                           ;main.c: 1063: if(ucTimerP3s >= 3)
  2404  02E4  3003               	movlw	3
  2405  02E5  0266               	subwf	main@ucTimerP3s,w
  2406  02E6  1C03               	skipc
  2407  02E7  2840               	goto	l4112
  2408                           
  2409                           ;main.c: 1064: {
  2410                           ;main.c: 1065: enumInteralStep = INTERNAL_FIRST_STEP;
  2411  02E8  01D5               	clrf	main@enumInteralStep
  2412                           
  2413                           ;main.c: 1066: ucTimerP3s = 0;
  2414  02E9  01E6               	clrf	main@ucTimerP3s
  2415                           
  2416                           ;main.c: 1067: clearAllTimer();
  2417  02EA  118A  2513  118A   	fcall	_clearAllTimer
  2418                           
  2419                           ;main.c: 1069: DACR0=0x0F;
  2420  02ED  300F               	movlw	15
  2421  02EE  1683               	bsf	3,5	;RP0=1, select bank1
  2422  02EF  0088               	movwf	8	;volatile
  2423                           
  2424                           ;main.c: 1070: initPin();
  2425  02F0  118A  2521  118A   	fcall	_initPin
  2426                           
  2427                           ;main.c: 1073: enumMainLoopStep = MAIN_LOOP_STEP_INIT;
  2428  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  2429  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  2430  02F5  01D6               	clrf	main@enumMainLoopStep
  2431  02F6  2840               	goto	l4112
  2432  02F7                     l4594:	
  2433  02F7  0855               	movf	main@enumInteralStep,w
  2434                           
  2435                           ; Switch size 1, requested type "space"
  2436                           ; Number of cases is 3, Range of values is 0 to 2
  2437                           ; switch strategies available:
  2438                           ; Name         Instructions Cycles
  2439                           ; simple_byte           10     6 (average)
  2440                           ; direct_byte           13     7 (fixed)
  2441                           ; jumptable            260     6 (fixed)
  2442                           ; rangetable             7     6 (fixed)
  2443                           ; spacedrange           12     9 (fixed)
  2444                           ; locatedrange           3     3 (fixed)
  2445                           ;	Chosen strategy is simple_byte
  2446  02F8  3A00               	xorlw	0	; case 0
  2447  02F9  1903               	skipnz
  2448  02FA  2AB2               	goto	l914
  2449  02FB  3A01               	xorlw	1	; case 1
  2450  02FC  1903               	skipnz
  2451  02FD  2AC2               	goto	l4562
  2452  02FE  3A03               	xorlw	3	; case 2
  2453  02FF  1903               	skipnz
  2454  0300  2AD7               	goto	l4574
  2455  0301  2861               	goto	l706
  2456  0302                     l4598:	
  2457  0302  0856               	movf	main@enumMainLoopStep,w
  2458                           
  2459                           ; Switch size 1, requested type "space"
  2460                           ; Number of cases is 8, Range of values is 0 to 9
  2461                           ; switch strategies available:
  2462                           ; Name         Instructions Cycles
  2463                           ; simple_byte           25    13 (average)
  2464                           ; direct_byte           27     7 (fixed)
  2465                           ; jumptable            260     6 (fixed)
  2466                           ; rangetable            14     6 (fixed)
  2467                           ; spacedrange           26     9 (fixed)
  2468                           ; locatedrange          10     3 (fixed)
  2469                           ;	Chosen strategy is simple_byte
  2470  0303  3A00               	xorlw	0	; case 0
  2471  0304  1903               	skipnz
  2472  0305  284E               	goto	l4120
  2473  0306  3A01               	xorlw	1	; case 1
  2474  0307  1903               	skipnz
  2475  0308  2862               	goto	l4132
  2476  0309  3A03               	xorlw	3	; case 2
  2477  030A  1903               	skipnz
  2478  030B  2878               	goto	l715
  2479  030C  3A01               	xorlw	1	; case 3
  2480  030D  1903               	skipnz
  2481  030E  2882               	goto	l4152
  2482  030F  3A07               	xorlw	7	; case 4
  2483  0310  1903               	skipnz
  2484  0311  28A8               	goto	l4176
  2485  0312  3A01               	xorlw	1	; case 5
  2486  0313  1903               	skipnz
  2487  0314  28B0               	goto	l4180
  2488  0315  3A0D               	xorlw	13	; case 8
  2489  0316  1903               	skipnz
  2490  0317  2AA7               	goto	l4560
  2491  0318  3A01               	xorlw	1	; case 9
  2492  0319  1903               	skipnz
  2493  031A  2AF7               	goto	l4594
  2494  031B  2861               	goto	l706
  2495  031C  118A  2811         	ljmp	start
  2496  031E                     __end_of_main:	
  2497                           
  2498                           	psect	swtext1
  2499  0546                     __pswtext1:	
  2500  0546                     S4816:	
  2501  0546  118A  28F4         	ljmp	l759
  2502  0548  118A  28F7         	ljmp	l4208
  2503  054A  118A  2900         	ljmp	l4218
  2504  054C  118A  2906         	ljmp	l4228
  2505  054E  118A  290C         	ljmp	l4238
  2506  0550  118A  2912         	ljmp	l4248
  2507  0552  118A  291C         	ljmp	l4258
  2508                           
  2509                           	psect	swtext2
  2510  0554                     __pswtext2:	
  2511  0554                     S4818:	
  2512  0554  118A  2930         	ljmp	l787
  2513  0556  118A  2933         	ljmp	l4272
  2514  0558  118A  293C         	ljmp	l4282
  2515  055A  118A  2942         	ljmp	l4292
  2516  055C  118A  2948         	ljmp	l4302
  2517  055E  118A  294E         	ljmp	l4312
  2518  0560  118A  2957         	ljmp	l4322
  2519                           
  2520                           	psect	swtext3
  2521  0562                     __pswtext3:	
  2522  0562                     S4820:	
  2523  0562  118A  296A         	ljmp	l814
  2524  0564  118A  296E         	ljmp	l4336
  2525  0566  118A  2977         	ljmp	l4346
  2526  0568  118A  297D         	ljmp	l4356
  2527  056A  118A  2983         	ljmp	l4366
  2528  056C  118A  298B         	ljmp	l4376
  2529                           
  2530                           	psect	text676
  2531  0507                     __ptext676:	
  2532 ;; =============== function _main ends ============
  2533                           
  2534                           
  2535 ;; *************** function _clearPinPortAndTimer *****************
  2536 ;; Defined at:
  2537 ;;		line 92 in file "D:\develop\ATK\AK7030-OTP\main.c"
  2538 ;; Parameters:    Size  Location     Type
  2539 ;;		None
  2540 ;; Auto vars:     Size  Location     Type
  2541 ;;		None
  2542 ;; Return value:  Size  Location     Type
  2543 ;;		None               void
  2544 ;; Registers used:
  2545 ;;		status,2, status,0, pclath, cstack
  2546 ;; Tracked objects:
  2547 ;;		On entry : 160/0
  2548 ;;		On exit  : 160/0
  2549 ;;		Unchanged: FFE9F/0
  2550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2551 ;;      Params:         0       0       0       0       0
  2552 ;;      Locals:         0       0       0       0       0
  2553 ;;      Temps:          0       0       0       0       0
  2554 ;;      Totals:         0       0       0       0       0
  2555 ;;Total ram usage:        0 bytes
  2556 ;; Hardware stack levels used:    1
  2557 ;; Hardware stack levels required when called:    4
  2558 ;; This function calls:
  2559 ;;		_clearAllTimer
  2560 ;; This function is called by:
  2561 ;;		_main
  2562 ;; This function uses a non-reentrant model
  2563 ;;
  2564  0507                     _clearPinPortAndTimer:	
  2565                           
  2566                           ;main.c: 93: PB0 = 0;
  2567                           
  2568                           ; Regs used in _clearPinPortAndTimer: [status,2+status,0+pclath+cstack]
  2569  0507  1006               	bcf	6,0
  2570                           
  2571                           ;main.c: 94: PA0 = 0;
  2572  0508  1005               	bcf	5,0
  2573                           
  2574                           ;main.c: 95: PA1 = 0;
  2575  0509  1085               	bcf	5,1
  2576                           
  2577                           ;main.c: 96: PA2 = 0;
  2578  050A  1105               	bcf	5,2
  2579                           
  2580                           ;main.c: 97: PA3 = 0;
  2581  050B  1185               	bcf	5,3
  2582                           
  2583                           ;main.c: 98: PAOD7 = 0;
  2584  050C  1683               	bsf	3,5	;RP0=1, select bank3
  2585  050D  1703               	bsf	3,6	;RP1=1, select bank3
  2586  050E  1387               	bcf	7,7
  2587                           
  2588                           ;main.c: 99: PA7 = 0;
  2589  050F  1283               	bcf	3,5	;RP0=0, select bank0
  2590  0510  1303               	bcf	3,6	;RP1=0, select bank0
  2591  0511  1385               	bcf	5,7
  2592                           
  2593                           ;main.c: 100: clearAllTimer();
  2594  0512  2D13               	ljmp	l4056
  2595  0513                     __end_of_clearPinPortAndTimer:	
  2596  0513                     __ptext681:	
  2597 ;; =============== function _process_AD_Converter_Value ends ============
  2598                           
  2599                           
  2600 ;; *************** function _clearAllTimer *****************
  2601 ;; Defined at:
  2602 ;;		line 83 in file "D:\develop\ATK\AK7030-OTP\main.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;		None
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;		None
  2607 ;; Return value:  Size  Location     Type
  2608 ;;		None               void
  2609 ;; Registers used:
  2610 ;;		status,2, status,0, pclath, cstack
  2611 ;; Tracked objects:
  2612 ;;		On entry : 160/0
  2613 ;;		On exit  : 160/0
  2614 ;;		Unchanged: FFE9F/0
  2615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2616 ;;      Params:         0       0       0       0       0
  2617 ;;      Locals:         0       0       0       0       0
  2618 ;;      Temps:          0       0       0       0       0
  2619 ;;      Totals:         0       0       0       0       0
  2620 ;;Total ram usage:        0 bytes
  2621 ;; Hardware stack levels used:    1
  2622 ;; Hardware stack levels required when called:    3
  2623 ;; This function calls:
  2624 ;;		_clearTwelveHoursTimer
  2625 ;;		_clearThreeHoursTimer
  2626 ;;		_clearTwentySecondsTimer
  2627 ;; This function is called by:
  2628 ;;		_clearPinPortAndTimer
  2629 ;;		_main
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632  0513                     _clearAllTimer:	
  2633  0513                     l4056:	
  2634                           ; Regs used in _clearAllTimer: [status,2+status,0+pclath+cstack]
  2635                           
  2636                           
  2637                           ;main.c: 84: clearTwelveHoursTimer();
  2638  0513  2518  118A         	fcall	_clearTwelveHoursTimer
  2639                           
  2640                           ;main.c: 85: clearThreeHoursTimer();
  2641  0515  251B  118A         	fcall	_clearThreeHoursTimer
  2642                           
  2643                           ;main.c: 86: clearTwentySecondsTimer();
  2644  0517  2D1E               	ljmp	l3786
  2645  0518                     __end_of_clearAllTimer:	
  2646  0518                     __ptext705:	
  2647 ;; =============== function _clearThreeHoursTimer ends ============
  2648                           
  2649                           
  2650 ;; *************** function _clearTwelveHoursTimer *****************
  2651 ;; Defined at:
  2652 ;;		line 365 in file "D:\develop\ATK\AK7030-OTP\common.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;		None
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;		None
  2657 ;; Return value:  Size  Location     Type
  2658 ;;		None               void
  2659 ;; Registers used:
  2660 ;;		status,2
  2661 ;; Tracked objects:
  2662 ;;		On entry : 160/0
  2663 ;;		On exit  : 160/0
  2664 ;;		Unchanged: FFE9F/0
  2665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2666 ;;      Params:         0       0       0       0       0
  2667 ;;      Locals:         0       0       0       0       0
  2668 ;;      Temps:          0       0       0       0       0
  2669 ;;      Totals:         0       0       0       0       0
  2670 ;;Total ram usage:        0 bytes
  2671 ;; Hardware stack levels used:    1
  2672 ;; Hardware stack levels required when called:    2
  2673 ;; This function calls:
  2674 ;;		Nothing
  2675 ;; This function is called by:
  2676 ;;		_clearAllTimer
  2677 ;; This function uses a non-reentrant model
  2678 ;;
  2679  0518                     _clearTwelveHoursTimer:	
  2680                           
  2681                           ;common.c: 366: uiBigTimer = 0;
  2682                           
  2683                           ; Regs used in _clearTwelveHoursTimer: [status,2]
  2684  0518  01C9               	clrf	_uiBigTimer
  2685  0519  01CA               	clrf	_uiBigTimer+1
  2686  051A  0008               	return
  2687  051B                     __end_of_clearTwelveHoursTimer:	
  2688  051B                     __ptext704:	
  2689 ;; =============== function _clearTwentySecondsTimer ends ============
  2690                           
  2691                           
  2692 ;; *************** function _clearThreeHoursTimer *****************
  2693 ;; Defined at:
  2694 ;;		line 371 in file "D:\develop\ATK\AK7030-OTP\common.c"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;		None
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;		None
  2699 ;; Return value:  Size  Location     Type
  2700 ;;		None               void
  2701 ;; Registers used:
  2702 ;;		status,2
  2703 ;; Tracked objects:
  2704 ;;		On entry : 160/0
  2705 ;;		On exit  : 160/0
  2706 ;;		Unchanged: FFE9F/0
  2707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2708 ;;      Params:         0       0       0       0       0
  2709 ;;      Locals:         0       0       0       0       0
  2710 ;;      Temps:          0       0       0       0       0
  2711 ;;      Totals:         0       0       0       0       0
  2712 ;;Total ram usage:        0 bytes
  2713 ;; Hardware stack levels used:    1
  2714 ;; Hardware stack levels required when called:    2
  2715 ;; This function calls:
  2716 ;;		Nothing
  2717 ;; This function is called by:
  2718 ;;		_clearAllTimer
  2719 ;;		_main
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722  051B                     _clearThreeHoursTimer:	
  2723                           
  2724                           ;common.c: 372: uiSmallTimer = 0;
  2725                           
  2726                           ; Regs used in _clearThreeHoursTimer: [status,2]
  2727  051B  01CB               	clrf	_uiSmallTimer
  2728  051C  01CC               	clrf	_uiSmallTimer+1
  2729  051D  0008               	return
  2730  051E                     __end_of_clearThreeHoursTimer:	
  2731  051E                     __ptext703:	
  2732 ;; =============== function _initPin ends ============
  2733                           
  2734                           
  2735 ;; *************** function _clearTwentySecondsTimer *****************
  2736 ;; Defined at:
  2737 ;;		line 376 in file "D:\develop\ATK\AK7030-OTP\common.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;		None
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;		None
  2742 ;; Return value:  Size  Location     Type
  2743 ;;		None               void
  2744 ;; Registers used:
  2745 ;;		status,2
  2746 ;; Tracked objects:
  2747 ;;		On entry : 160/0
  2748 ;;		On exit  : 160/0
  2749 ;;		Unchanged: FFE9F/0
  2750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2751 ;;      Params:         0       0       0       0       0
  2752 ;;      Locals:         0       0       0       0       0
  2753 ;;      Temps:          0       0       0       0       0
  2754 ;;      Totals:         0       0       0       0       0
  2755 ;;Total ram usage:        0 bytes
  2756 ;; Hardware stack levels used:    1
  2757 ;; Hardware stack levels required when called:    2
  2758 ;; This function calls:
  2759 ;;		Nothing
  2760 ;; This function is called by:
  2761 ;;		_clearAllTimer
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764  051E                     _clearTwentySecondsTimer:	
  2765  051E                     l3786:	
  2766                           ; Regs used in _clearTwentySecondsTimer: [status,2]
  2767                           
  2768                           
  2769                           ;common.c: 377: uiTwentySecondsTimer = 0;
  2770  051E  01CD               	clrf	_uiTwentySecondsTimer
  2771  051F  01CE               	clrf	_uiTwentySecondsTimer+1
  2772  0520  0008               	return
  2773  0521                     __end_of_clearTwentySecondsTimer:	
  2774                           
  2775                           	psect	text677
  2776  03F4                     __ptext677:	
  2777 ;; =============== function _clearPinPortAndTimer ends ============
  2778                           
  2779                           
  2780 ;; *************** function _getAdOriginaCh4Value *****************
  2781 ;; Defined at:
  2782 ;;		line 229 in file "D:\develop\ATK\AK7030-OTP\common.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;		None
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;		None
  2787 ;; Return value:  Size  Location     Type
  2788 ;;                  2   39[BANK0 ] unsigned int 
  2789 ;; Registers used:
  2790 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2791 ;; Tracked objects:
  2792 ;;		On entry : 60/0
  2793 ;;		On exit  : 160/0
  2794 ;;		Unchanged: FFE00/0
  2795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2796 ;;      Params:         0       2       0       0       0
  2797 ;;      Locals:         0       0       0       0       0
  2798 ;;      Temps:          0       0       0       0       0
  2799 ;;      Totals:         0       2       0       0       0
  2800 ;;Total ram usage:        2 bytes
  2801 ;; Hardware stack levels used:    1
  2802 ;; Hardware stack levels required when called:    3
  2803 ;; This function calls:
  2804 ;;		_Filter
  2805 ;; This function is called by:
  2806 ;;		_main
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809  03F4                     _getAdOriginaCh4Value:	
  2810                           
  2811                           ;common.c: 231: return Filter(uiSampleChannelFourth);
  2812                           
  2813                           ; Regs used in _getAdOriginaCh4Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  2814  03F4  30D0               	movlw	_uiSampleChannelFourth& (0+255)
  2815  03F5  2409               	fcall	_Filter
  2816  03F6  0821               	movf	?_Filter+1,w
  2817  03F7  00C8               	movwf	?_getAdOriginaCh4Value+1
  2818  03F8  0820               	movf	?_Filter,w
  2819  03F9  00C7               	movwf	?_getAdOriginaCh4Value
  2820  03FA  0008               	return
  2821  03FB                     __end_of_getAdOriginaCh4Value:	
  2822  03FB                     __ptext678:	
  2823 ;; =============== function _getAdOriginaCh4Value ends ============
  2824                           
  2825                           
  2826 ;; *************** function _getAdOriginalCh1Value *****************
  2827 ;; Defined at:
  2828 ;;		line 217 in file "D:\develop\ATK\AK7030-OTP\common.c"
  2829 ;; Parameters:    Size  Location     Type
  2830 ;;		None
  2831 ;; Auto vars:     Size  Location     Type
  2832 ;;		None
  2833 ;; Return value:  Size  Location     Type
  2834 ;;                  2   39[BANK0 ] unsigned int 
  2835 ;; Registers used:
  2836 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2837 ;; Tracked objects:
  2838 ;;		On entry : 60/0
  2839 ;;		On exit  : 160/0
  2840 ;;		Unchanged: FFE00/0
  2841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2842 ;;      Params:         0       2       0       0       0
  2843 ;;      Locals:         0       0       0       0       0
  2844 ;;      Temps:          0       0       0       0       0
  2845 ;;      Totals:         0       2       0       0       0
  2846 ;;Total ram usage:        2 bytes
  2847 ;; Hardware stack levels used:    1
  2848 ;; Hardware stack levels required when called:    3
  2849 ;; This function calls:
  2850 ;;		_Filter
  2851 ;; This function is called by:
  2852 ;;		_main
  2853 ;; This function uses a non-reentrant model
  2854 ;;
  2855  03FB                     _getAdOriginalCh1Value:	
  2856                           
  2857                           ;common.c: 220: return Filter(uiSampleChannelFirst);
  2858                           
  2859                           ; Regs used in _getAdOriginalCh1Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  2860  03FB  30A0               	movlw	_uiSampleChannelFirst& (0+255)
  2861  03FC  2409               	fcall	_Filter
  2862  03FD  0821               	movf	?_Filter+1,w
  2863  03FE  00C8               	movwf	?_getAdOriginalCh1Value+1
  2864  03FF  0820               	movf	?_Filter,w
  2865  0400  00C7               	movwf	?_getAdOriginalCh1Value
  2866  0401  0008               	return
  2867  0402                     __end_of_getAdOriginalCh1Value:	
  2868  0402                     __ptext679:	
  2869 ;; =============== function _getAdOriginalCh1Value ends ============
  2870                           
  2871                           
  2872 ;; *************** function _getAdOriginalCh14Value *****************
  2873 ;; Defined at:
  2874 ;;		line 240 in file "D:\develop\ATK\AK7030-OTP\common.c"
  2875 ;; Parameters:    Size  Location     Type
  2876 ;;		None
  2877 ;; Auto vars:     Size  Location     Type
  2878 ;;		None
  2879 ;; Return value:  Size  Location     Type
  2880 ;;                  2   39[BANK0 ] unsigned int 
  2881 ;; Registers used:
  2882 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2883 ;; Tracked objects:
  2884 ;;		On entry : 60/0
  2885 ;;		On exit  : 160/0
  2886 ;;		Unchanged: FFE00/0
  2887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2888 ;;      Params:         0       2       0       0       0
  2889 ;;      Locals:         0       0       0       0       0
  2890 ;;      Temps:          0       0       0       0       0
  2891 ;;      Totals:         0       2       0       0       0
  2892 ;;Total ram usage:        2 bytes
  2893 ;; Hardware stack levels used:    1
  2894 ;; Hardware stack levels required when called:    3
  2895 ;; This function calls:
  2896 ;;		_Filter
  2897 ;; This function is called by:
  2898 ;;		_main
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901  0402                     _getAdOriginalCh14Value:	
  2902                           
  2903                           ;common.c: 242: return Filter(uiSampleChannelFourteenth);
  2904                           
  2905                           ; Regs used in _getAdOriginalCh14Value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  2906  0402  30B8               	movlw	_uiSampleChannelFourteenth& (0+255)
  2907  0403  2409               	fcall	_Filter
  2908  0404  0821               	movf	?_Filter+1,w
  2909  0405  00C8               	movwf	?_getAdOriginalCh14Value+1
  2910  0406  0820               	movf	?_Filter,w
  2911  0407  00C7               	movwf	?_getAdOriginalCh14Value
  2912  0408  0008               	return
  2913  0409                     __end_of_getAdOriginalCh14Value:	
  2914  0409                     __ptext685:	
  2915 ;; =============== function _getAD_ConvertFlag ends ============
  2916                           
  2917                           
  2918 ;; *************** function _Filter *****************
  2919 ;; Defined at:
  2920 ;;		line 51 in file "D:\develop\ATK\AK7030-OTP\common.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;  tmpValue        1    wreg     PTR int 
  2923 ;;		 -> uiSampleChannelFourteenth(24), uiSampleChannelFourth(24), uiSampleChannelFirst(24), 
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;  tmpValue        1   34[BANK0 ] PTR int 
  2926 ;;		 -> uiSampleChannelFourteenth(24), uiSampleChannelFourth(24), uiSampleChannelFirst(24), 
  2927 ;;  cir             2   35[BANK0 ] int 
  2928 ;;  filter_buf     24    6[BANK0 ] unsigned int [12]
  2929 ;;  filter_sum      2   32[BANK0 ] unsigned int 
  2930 ;;  filter_temp     2   30[BANK0 ] unsigned int 
  2931 ;;  i               1   38[BANK0 ] unsigned char 
  2932 ;;  j               1   37[BANK0 ] unsigned char 
  2933 ;; Return value:  Size  Location     Type
  2934 ;;                  2    0[BANK0 ] unsigned int 
  2935 ;; Registers used:
  2936 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2937 ;; Tracked objects:
  2938 ;;		On entry : 60/0
  2939 ;;		On exit  : 160/0
  2940 ;;		Unchanged: FFE00/0
  2941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2942 ;;      Params:         0       2       0       0       0
  2943 ;;      Locals:         0      33       0       0       0
  2944 ;;      Temps:          0       4       0       0       0
  2945 ;;      Totals:         0      39       0       0       0
  2946 ;;Total ram usage:       39 bytes
  2947 ;; Hardware stack levels used:    1
  2948 ;; Hardware stack levels required when called:    2
  2949 ;; This function calls:
  2950 ;;		Nothing
  2951 ;; This function is called by:
  2952 ;;		_getAdOriginalCh1Value
  2953 ;;		_getAdOriginaCh4Value
  2954 ;;		_getAdOriginalCh14Value
  2955 ;; This function uses a non-reentrant model
  2956 ;;
  2957  0409                     _Filter:	
  2958                           
  2959                           ; Regs used in _Filter: [wreg-fsr0h+status,2+status,0+btemp+1]
  2960                           ;Filter@tmpValue stored from wreg
  2961  0409  00C2               	movwf	Filter@tmpValue
  2962  040A  01C5               	clrf	Filter@j
  2963                           
  2964                           ;common.c: 55: unsigned int filter_temp = 0, filter_sum = 0;
  2965  040B  01BE               	clrf	Filter@filter_temp
  2966  040C  01BF               	clrf	Filter@filter_temp+1
  2967  040D  01C0               	clrf	Filter@filter_sum
  2968  040E  01C1               	clrf	Filter@filter_sum+1
  2969                           
  2970                           ;common.c: 57: unsigned int filter_buf[12];
  2971                           ;common.c: 59: for(int cir = 0;cir < 12; cir++)
  2972  040F  01C3               	clrf	Filter@cir
  2973  0410  01C4               	clrf	Filter@cir+1
  2974  0411                     l3896:	
  2975                           
  2976                           ;common.c: 60: filter_buf[cir] = *tmpValue++;
  2977  0411  1283               	bcf	3,5	;RP0=0, select bank0
  2978  0412  1303               	bcf	3,6	;RP1=0, select bank0
  2979  0413  0842               	movf	Filter@tmpValue,w
  2980  0414  2497  118A         	fcall	PL3	;call to abstracted procedure
  2981  0416  1003               	clrc
  2982  0417  0D43               	rlf	Filter@cir,w
  2983  0418  249F  118A         	fcall	PL5	;call to abstracted procedure
  2984  041A  0AC2               	incf	Filter@tmpValue,f
  2985  041B  0AC2               	incf	Filter@tmpValue,f
  2986  041C  0AC3               	incf	Filter@cir,f
  2987  041D  1903               	skipnz
  2988  041E  0AC4               	incf	Filter@cir+1,f
  2989  041F  0844               	movf	Filter@cir+1,w
  2990  0420  3A80               	xorlw	128
  2991  0421  00FF               	movwf	127
  2992  0422  3080               	movlw	128
  2993  0423  027F               	subwf	127,w
  2994  0424  1D03               	skipz
  2995  0425  2C28               	goto	u955
  2996  0426  300C               	movlw	12
  2997  0427  0243               	subwf	Filter@cir,w
  2998  0428                     u955:	
  2999  0428  1C03               	skipc
  3000  0429  2C11               	goto	l3896
  3001                           
  3002                           ;common.c: 63: for(j = 0; j < 12 - 1; j++)
  3003  042A  1283               	bcf	3,5	;RP0=0, select bank0
  3004  042B  1303               	bcf	3,6	;RP1=0, select bank0
  3005  042C  01C5               	clrf	Filter@j
  3006  042D                     l3910:	
  3007                           
  3008                           ;common.c: 64: {
  3009                           ;common.c: 65: for(i = 0; i < 12 - 1 - j; i++)
  3010  042D  01C6               	clrf	Filter@i
  3011  042E                     l3918:	
  3012  042E  01A3               	clrf	??_Filter+1
  3013  042F  0845               	movf	Filter@j,w
  3014  0430  3C0B               	sublw	11
  3015  0431  00A2               	movwf	??_Filter
  3016  0432  1C03               	skipc
  3017  0433  03A3               	decf	??_Filter+1,f
  3018  0434  0823               	movf	??_Filter+1,w
  3019  0435  3A80               	xorlw	128
  3020  0436  3C80               	sublw	128
  3021  0437  1D03               	skipz
  3022  0438  2C3B               	goto	u975
  3023  0439  0822               	movf	??_Filter,w
  3024  043A  0246               	subwf	Filter@i,w
  3025  043B                     u975:	
  3026  043B  1803               	btfsc	3,0
  3027  043C  2C70               	goto	l3920
  3028                           
  3029                           ;common.c: 66: {
  3030                           ;common.c: 67: if(filter_buf[i] > filter_buf[i + 1])
  3031  043D  1283               	bcf	3,5	;RP0=0, select bank0
  3032  043E  1303               	bcf	3,6	;RP1=0, select bank0
  3033  043F  1003               	clrc
  3034  0440  0D46               	rlf	Filter@i,w
  3035  0441  3E26               	addlw	Filter@filter_buf& (0+255)
  3036  0442  2497  118A         	fcall	PL3	;call to abstracted procedure
  3037  0444  24A7  118A         	fcall	PL6	;call to abstracted procedure
  3038  0446  0800               	movf	0,w
  3039  0447  00A4               	movwf	??_Filter+2
  3040  0448  0A84               	incf	4,f
  3041  0449  0800               	movf	0,w
  3042  044A  00A5               	movwf	??_Filter+3
  3043  044B  0823               	movf	??_Filter+1,w
  3044  044C  0225               	subwf	??_Filter+3,w
  3045  044D  1D03               	skipz
  3046  044E  2C51               	goto	u965
  3047  044F  0822               	movf	??_Filter,w
  3048  0450  0224               	subwf	??_Filter+2,w
  3049  0451                     u965:	
  3050  0451  1803               	skipnc
  3051  0452  2C6E               	goto	l3916
  3052                           
  3053                           ;common.c: 68: {
  3054                           ;common.c: 70: filter_temp = filter_buf[i];
  3055  0453  1003               	clrc
  3056  0454  0D46               	rlf	Filter@i,w
  3057  0455  3E26               	addlw	Filter@filter_buf& (0+255)
  3058  0456  0084               	movwf	4
  3059  0457  0800               	movf	0,w
  3060  0458  00BE               	movwf	Filter@filter_temp
  3061  0459  0A84               	incf	4,f
  3062  045A  0800               	movf	0,w
  3063  045B  00BF               	movwf	Filter@filter_temp+1
  3064                           
  3065                           ;common.c: 72: filter_buf[i] = filter_buf[i + 1];
  3066  045C  24A7  118A         	fcall	PL6	;call to abstracted procedure
  3067  045E  0800               	movf	0,w
  3068  045F  00A2               	movwf	??_Filter
  3069  0460  0A84               	incf	4,f
  3070  0461  0800               	movf	0,w
  3071  0462  00A3               	movwf	??_Filter+1
  3072  0463  1003               	clrc
  3073  0464  0D46               	rlf	Filter@i,w
  3074  0465  249F  118A         	fcall	PL5	;call to abstracted procedure
  3075                           
  3076                           ;common.c: 74: filter_buf[i + 1] = filter_temp;
  3077  0467  24A7  118A         	fcall	PL6	;call to abstracted procedure
  3078  0469  083E               	movf	Filter@filter_temp,w
  3079  046A  0080               	movwf	0
  3080  046B  0A84               	incf	4,f
  3081  046C  083F               	movf	Filter@filter_temp+1,w
  3082  046D  0080               	movwf	0
  3083  046E                     l3916:	
  3084  046E  0AC6               	incf	Filter@i,f
  3085  046F  2C2E               	goto	l3918
  3086  0470                     l3920:	
  3087  0470  1283               	bcf	3,5	;RP0=0, select bank0
  3088  0471  300B               	movlw	11
  3089  0472  1303               	bcf	3,6	;RP1=0, select bank0
  3090  0473  0AC5               	incf	Filter@j,f
  3091  0474  0245               	subwf	Filter@j,w
  3092  0475  1C03               	skipc
  3093  0476  2C2D               	goto	l3910
  3094                           
  3095                           ;common.c: 75: }
  3096                           ;common.c: 76: }
  3097                           ;common.c: 77: }
  3098                           ;common.c: 79: for(i = 2; i < 12 - 2; i++)
  3099  0477  3002               	movlw	2
  3100  0478  00C6               	movwf	Filter@i
  3101                           
  3102                           ;common.c: 80: {
  3103                           ;common.c: 81: filter_sum += filter_buf[i];
  3104  0479  1003               	clrc
  3105  047A                     L11:	
  3106  047A  0D46               	rlf	Filter@i,w
  3107  047B  3E26               	addlw	Filter@filter_buf& (0+255)
  3108  047C  2497  118A         	fcall	PL3	;call to abstracted procedure
  3109  047E  0822               	movf	??_Filter,w
  3110  047F  07C0               	addwf	Filter@filter_sum,f
  3111  0480  1803               	skipnc
  3112  0481  0AC1               	incf	Filter@filter_sum+1,f
  3113  0482  0823               	movf	??_Filter+1,w
  3114  0483  07C1               	addwf	Filter@filter_sum+1,f
  3115  0484  300A               	movlw	10
  3116  0485  0AC6               	incf	Filter@i,f
  3117  0486  0246               	subwf	Filter@i,w
  3118  0487  1C03               	skipc
  3119  0488  2C7A               	goto	L11
  3120                           
  3121                           ;common.c: 82: }
  3122                           ;common.c: 84: return (filter_sum >> 3);
  3123  0489  0841               	movf	Filter@filter_sum+1,w
  3124  048A  00A1               	movwf	?_Filter+1
  3125  048B  0840               	movf	Filter@filter_sum,w
  3126  048C  00A0               	movwf	?_Filter
  3127  048D  1003               	clrc
  3128  048E  0CA1               	rrf	?_Filter+1,f
  3129  048F  0CA0               	rrf	?_Filter,f
  3130  0490  1003               	clrc
  3131  0491  0CA1               	rrf	?_Filter+1,f
  3132  0492  0CA0               	rrf	?_Filter,f
  3133  0493  1003               	clrc
  3134  0494  0CA1               	rrf	?_Filter+1,f
  3135  0495  0CA0               	rrf	?_Filter,f
  3136  0496  0008               	return
  3137  0497                     __end_of_Filter:	
  3138  0497                     PL3:	
  3139  0497  0084               	movwf	4
  3140  0498  1383               	bcf	3,7	;select IRP bank0
  3141  0499  0800               	movf	0,w
  3142  049A  00A2               	movwf	??_Filter
  3143  049B  0A84               	incf	4,f
  3144  049C  0800               	movf	0,w
  3145  049D  00A3               	movwf	??_Filter+1
  3146  049E  0008               	return
  3147  049F                     PL5:	
  3148  049F  3E26               	addlw	Filter@filter_buf& (0+255)
  3149  04A0  0084               	movwf	4
  3150  04A1  0822               	movf	??_Filter,w
  3151  04A2  0080               	movwf	0
  3152  04A3  0A84               	incf	4,f
  3153  04A4  0823               	movf	??_Filter+1,w
  3154  04A5  0080               	movwf	0
  3155  04A6  0008               	return
  3156  04A7                     PL6:	
  3157  04A7  1003               	clrc
  3158  04A8  0D46               	rlf	Filter@i,w
  3159  04A9  3E02               	addlw	2
  3160  04AA  3E26               	addlw	Filter@filter_buf& (0+255)
  3161  04AB  0084               	movwf	4
  3162  04AC  0008               	return
  3163                           
  3164                           	psect	text680
  3165  04AD                     __ptext680:	
  3166 ;; =============== function _getAdOriginalCh14Value ends ============
  3167                           
  3168                           
  3169 ;; *************** function _process_AD_Converter_Value *****************
  3170 ;; Defined at:
  3171 ;;		line 251 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;		None
  3174 ;; Auto vars:     Size  Location     Type
  3175 ;;		None
  3176 ;; Return value:  Size  Location     Type
  3177 ;;		None               void
  3178 ;; Registers used:
  3179 ;;		wreg, status,2, status,0, pclath, cstack
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 60/0
  3183 ;;		Unchanged: FFF9F/0
  3184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3185 ;;      Params:         0       0       0       0       0
  3186 ;;      Locals:         0       0       0       0       0
  3187 ;;      Temps:          0       0       0       0       0
  3188 ;;      Totals:         0       0       0       0       0
  3189 ;;Total ram usage:        0 bytes
  3190 ;; Hardware stack levels used:    1
  3191 ;; Hardware stack levels required when called:    3
  3192 ;; This function calls:
  3193 ;;		_getAD_ConvertFlag
  3194 ;;		_setAD_ConvertFlag
  3195 ;;		_AD_Sample
  3196 ;;		_adc_test_init
  3197 ;;		_adc_start
  3198 ;; This function is called by:
  3199 ;;		_main
  3200 ;; This function uses a non-reentrant model
  3201 ;;
  3202  04AD                     _process_AD_Converter_Value:	
  3203                           
  3204                           ;common.c: 252: if(getAD_ConvertFlag())
  3205                           
  3206                           ; Regs used in _process_AD_Converter_Value: [wreg+status,2+status,0+pclath+cstack]
  3207  04AD  24CB  118A         	fcall	_getAD_ConvertFlag
  3208  04AF  3A00               	xorlw	0
  3209  04B0  1903               	skipnz
  3210  04B1  0008               	return
  3211                           
  3212                           ;common.c: 253: {
  3213                           ;common.c: 254: setAD_ConvertFlag(0);
  3214  04B2  3000               	movlw	0
  3215  04B3  24CF  118A         	fcall	_setAD_ConvertFlag
  3216                           
  3217                           ;common.c: 255: AD_Sample();
  3218  04B5  24D2  118A         	fcall	_AD_Sample
  3219                           
  3220                           ;common.c: 256: if(4 == sampleChannelSelect)
  3221  04B7  086F               	movf	_sampleChannelSelect,w
  3222  04B8  3A04               	xorlw	4
  3223  04B9  1D03               	skipz
  3224  04BA  2CBF               	goto	l4066
  3225                           
  3226                           ;common.c: 257: adc_test_init(4,3);
  3227  04BB  3003               	movlw	3
  3228  04BC  00A0               	movwf	?_adc_test_init
  3229  04BD  3004               	movlw	4
  3230  04BE  2CC8               	goto	L10
  3231  04BF                     l4066:	
  3232                           
  3233                           ;common.c: 258: else if(1 == sampleChannelSelect)
  3234  04BF  0B6F               	decfsz	_sampleChannelSelect,w
  3235  04C0  2CC5               	goto	l4070
  3236                           
  3237                           ;common.c: 259: adc_test_init(1,3);
  3238  04C1  3003               	movlw	3
  3239  04C2  00A0               	movwf	?_adc_test_init
  3240  04C3  3001               	movlw	1
  3241  04C4  2CC8               	goto	L10
  3242  04C5                     l4070:	
  3243                           
  3244                           ;common.c: 260: else
  3245                           ;common.c: 261: adc_test_init(14,3);
  3246  04C5  3003               	movlw	3
  3247  04C6  00A0               	movwf	?_adc_test_init
  3248  04C7  300E               	movlw	14
  3249  04C8                     L10:	
  3250  04C8  24EF  118A         	fcall	_adc_test_init
  3251                           
  3252                           ;common.c: 263: adc_start();
  3253  04CA  2D04               	ljmp	l3828
  3254  04CB                     __end_of_process_AD_Converter_Value:	
  3255  04CB                     __ptext684:	
  3256 ;; =============== function _setAD_ConvertFlag ends ============
  3257                           
  3258                           
  3259 ;; *************** function _getAD_ConvertFlag *****************
  3260 ;; Defined at:
  3261 ;;		line 200 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;		None
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;		None
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  1    wreg      unsigned char 
  3268 ;; Registers used:
  3269 ;;		wreg
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 60/0
  3273 ;;		Unchanged: FFF9F/0
  3274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3275 ;;      Params:         0       0       0       0       0
  3276 ;;      Locals:         0       0       0       0       0
  3277 ;;      Temps:          0       0       0       0       0
  3278 ;;      Totals:         0       0       0       0       0
  3279 ;;Total ram usage:        0 bytes
  3280 ;; Hardware stack levels used:    1
  3281 ;; Hardware stack levels required when called:    2
  3282 ;; This function calls:
  3283 ;;		Nothing
  3284 ;; This function is called by:
  3285 ;;		_process_AD_Converter_Value
  3286 ;; This function uses a non-reentrant model
  3287 ;;
  3288  04CB                     _getAD_ConvertFlag:	
  3289                           
  3290                           ;common.c: 201: return adc_convert_flag;
  3291                           
  3292                           ; Regs used in _getAD_ConvertFlag: [wreg]
  3293  04CB  1283               	bcf	3,5	;RP0=0, select bank0
  3294  04CC  1303               	bcf	3,6	;RP1=0, select bank0
  3295  04CD  0850               	movf	_adc_convert_flag,w
  3296  04CE  0008               	return
  3297  04CF                     __end_of_getAD_ConvertFlag:	
  3298  04CF                     __ptext683:	
  3299 ;; =============== function _AD_Sample ends ============
  3300                           
  3301                           
  3302 ;; *************** function _setAD_ConvertFlag *****************
  3303 ;; Defined at:
  3304 ;;		line 206 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3305 ;; Parameters:    Size  Location     Type
  3306 ;;  flag            1    wreg     unsigned char 
  3307 ;; Auto vars:     Size  Location     Type
  3308 ;;  flag            1    0[BANK0 ] unsigned char 
  3309 ;; Return value:  Size  Location     Type
  3310 ;;		None               void
  3311 ;; Registers used:
  3312 ;;		wreg
  3313 ;; Tracked objects:
  3314 ;;		On entry : 60/0
  3315 ;;		On exit  : 60/0
  3316 ;;		Unchanged: FFF9F/0
  3317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3318 ;;      Params:         0       0       0       0       0
  3319 ;;      Locals:         0       1       0       0       0
  3320 ;;      Temps:          0       0       0       0       0
  3321 ;;      Totals:         0       1       0       0       0
  3322 ;;Total ram usage:        1 bytes
  3323 ;; Hardware stack levels used:    1
  3324 ;; Hardware stack levels required when called:    2
  3325 ;; This function calls:
  3326 ;;		Nothing
  3327 ;; This function is called by:
  3328 ;;		_process_AD_Converter_Value
  3329 ;; This function uses a non-reentrant model
  3330 ;;
  3331  04CF                     _setAD_ConvertFlag:	
  3332                           
  3333                           ; Regs used in _setAD_ConvertFlag: [wreg]
  3334                           ;setAD_ConvertFlag@flag stored from wreg
  3335  04CF  00A0               	movwf	setAD_ConvertFlag@flag
  3336                           
  3337                           ;common.c: 207: adc_convert_flag = flag;
  3338  04D0  00D0               	movwf	_adc_convert_flag
  3339  04D1  0008               	return
  3340  04D2                     __end_of_setAD_ConvertFlag:	
  3341  04D2                     __ptext682:	
  3342 ;; =============== function _clearAllTimer ends ============
  3343                           
  3344                           
  3345 ;; *************** function _AD_Sample *****************
  3346 ;; Defined at:
  3347 ;;		line 277 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;		None
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;		None
  3352 ;; Return value:  Size  Location     Type
  3353 ;;		None               void
  3354 ;; Registers used:
  3355 ;;		wreg, status,2, status,0
  3356 ;; Tracked objects:
  3357 ;;		On entry : 60/0
  3358 ;;		On exit  : 60/0
  3359 ;;		Unchanged: FFF9F/0
  3360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3361 ;;      Params:         0       0       0       0       0
  3362 ;;      Locals:         0       0       0       0       0
  3363 ;;      Temps:          0       0       0       0       0
  3364 ;;      Totals:         0       0       0       0       0
  3365 ;;Total ram usage:        0 bytes
  3366 ;; Hardware stack levels used:    1
  3367 ;; Hardware stack levels required when called:    2
  3368 ;; This function calls:
  3369 ;;		Nothing
  3370 ;; This function is called by:
  3371 ;;		_process_AD_Converter_Value
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374  04D2                     _AD_Sample:	
  3375                           
  3376                           ;common.c: 278: if(sampleTimes < 12)
  3377                           
  3378                           ; Regs used in _AD_Sample: [wreg+status,2+status,0]
  3379  04D2  300C               	movlw	12
  3380  04D3  0251               	subwf	_sampleTimes,w
  3381  04D4  1803               	skipnc
  3382  04D5  0008               	return
  3383  04D6  300C               	movlw	12
  3384                           
  3385                           ;common.c: 279: {
  3386                           ;common.c: 300: sampleTimes++;
  3387  04D7  0AD1               	incf	_sampleTimes,f
  3388                           
  3389                           ;common.c: 302: if(sampleTimes >= 12)
  3390  04D8  0251               	subwf	_sampleTimes,w
  3391  04D9  1C03               	skipc
  3392  04DA  0008               	return
  3393                           
  3394                           ;common.c: 303: {
  3395                           ;common.c: 304: sampleTimes = 0;
  3396  04DB  01D1               	clrf	_sampleTimes
  3397                           
  3398                           ;common.c: 306: if(sampleChannelSelect == 14)
  3399  04DC  086F               	movf	_sampleChannelSelect,w
  3400  04DD  3A0E               	xorlw	14
  3401  04DE  1D03               	skipz
  3402  04DF  2CE3               	goto	l4006
  3403                           
  3404                           ;common.c: 307: {
  3405                           ;common.c: 310: sampleChannelSelect = 1;
  3406  04E0  01EF               	clrf	_sampleChannelSelect
  3407  04E1  0AEF               	incf	_sampleChannelSelect,f
  3408                           
  3409                           ;common.c: 311: }
  3410  04E2  0008               	return
  3411  04E3                     l4006:	
  3412                           
  3413                           ;common.c: 312: else if(sampleChannelSelect == 4)
  3414  04E3  086F               	movf	_sampleChannelSelect,w
  3415  04E4  3A04               	xorlw	4
  3416  04E5  1D03               	skipz
  3417  04E6  2CEA               	goto	l4010
  3418  04E7                     l4008:	
  3419                           
  3420                           ;common.c: 313: {
  3421                           ;common.c: 315: sampleChannelSelect = 14;
  3422  04E7  300E               	movlw	14
  3423  04E8  00EF               	movwf	_sampleChannelSelect
  3424                           
  3425                           ;common.c: 316: }
  3426  04E9  0008               	return
  3427  04EA                     l4010:	
  3428                           
  3429                           ;common.c: 317: else if(sampleChannelSelect == 1)
  3430  04EA  0B6F               	decfsz	_sampleChannelSelect,w
  3431  04EB  2CE7               	goto	l4008
  3432                           
  3433                           ;common.c: 318: {
  3434                           ;common.c: 320: sampleChannelSelect = 4;
  3435  04EC  3004               	movlw	4
  3436  04ED  00EF               	movwf	_sampleChannelSelect
  3437                           
  3438                           ;common.c: 321: }
  3439  04EE  0008               	return
  3440  04EF                     __end_of_AD_Sample:	
  3441  04EF                     __ptext698:	
  3442 ;; =============== function _dac_init ends ============
  3443                           
  3444                           
  3445 ;; *************** function _adc_test_init *****************
  3446 ;; Defined at:
  3447 ;;		line 85 in file "D:\develop\ATK\AK7030-OTP\periph.c"
  3448 ;; Parameters:    Size  Location     Type
  3449 ;;  channel         1    wreg     unsigned char 
  3450 ;;  ref             1    0[BANK0 ] unsigned char 
  3451 ;; Auto vars:     Size  Location     Type
  3452 ;;  channel         1    2[BANK0 ] unsigned char 
  3453 ;; Return value:  Size  Location     Type
  3454 ;;		None               void
  3455 ;; Registers used:
  3456 ;;		wreg, status,2, status,0
  3457 ;; Tracked objects:
  3458 ;;		On entry : 60/0
  3459 ;;		On exit  : 60/20
  3460 ;;		Unchanged: FFF9F/0
  3461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3462 ;;      Params:         0       1       0       0       0
  3463 ;;      Locals:         0       1       0       0       0
  3464 ;;      Temps:          0       1       0       0       0
  3465 ;;      Totals:         0       3       0       0       0
  3466 ;;Total ram usage:        3 bytes
  3467 ;; Hardware stack levels used:    1
  3468 ;; Hardware stack levels required when called:    2
  3469 ;; This function calls:
  3470 ;;		Nothing
  3471 ;; This function is called by:
  3472 ;;		_main
  3473 ;;		_process_AD_Converter_Value
  3474 ;; This function uses a non-reentrant model
  3475 ;;
  3476  04EF                     _adc_test_init:	
  3477                           
  3478                           ; Regs used in _adc_test_init: [wreg+status,2+status,0]
  3479                           ;adc_test_init@channel stored from wreg
  3480  04EF  00A2               	movwf	adc_test_init@channel
  3481                           
  3482                           ;periph.c: 86: ADCON0 = 0x00;
  3483  04F0  019F               	clrf	31	;volatile
  3484                           
  3485                           ;periph.c: 87: ADCON0|=channel<<2;
  3486  04F1  00A1               	movwf	??_adc_test_init
  3487  04F2  1003               	clrc
  3488  04F3  0DA1               	rlf	??_adc_test_init,f
  3489  04F4  1003               	clrc
  3490  04F5  0D21               	rlf	??_adc_test_init,w
  3491  04F6  049F               	iorwf	31,f	;volatile
  3492                           
  3493                           ;periph.c: 88: ADCON1|=ref<<6;
  3494  04F7  0820               	movf	adc_test_init@ref,w
  3495  04F8  00A1               	movwf	??_adc_test_init
  3496  04F9  0CA1               	rrf	??_adc_test_init,f
  3497  04FA  0CA1               	rrf	??_adc_test_init,f
  3498  04FB  0C21               	rrf	??_adc_test_init,w
  3499  04FC  39C0               	andlw	192
  3500  04FD  1683               	bsf	3,5	;RP0=1, select bank1
  3501  04FE  049F               	iorwf	31,f	;volatile
  3502                           
  3503                           ;periph.c: 89: ADON=1;
  3504  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  3505  0500  141F               	bsf	31,0
  3506                           
  3507                           ;periph.c: 90: ADIE=1;
  3508  0501  1683               	bsf	3,5	;RP0=1, select bank1
  3509  0502  150D               	bsf	13,2
  3510  0503  0008               	return
  3511  0504                     __end_of_adc_test_init:	
  3512  0504                     __ptext694:	
  3513 ;; =============== function _isPermitSampleTime ends ============
  3514                           
  3515                           
  3516 ;; *************** function _adc_start *****************
  3517 ;; Defined at:
  3518 ;;		line 100 in file "D:\develop\ATK\AK7030-OTP\periph.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;		None
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;		None
  3523 ;; Return value:  Size  Location     Type
  3524 ;;		None               void
  3525 ;; Registers used:
  3526 ;;		None
  3527 ;; Tracked objects:
  3528 ;;		On entry : 60/20
  3529 ;;		On exit  : 60/0
  3530 ;;		Unchanged: FFF9F/0
  3531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3532 ;;      Params:         0       0       0       0       0
  3533 ;;      Locals:         0       0       0       0       0
  3534 ;;      Temps:          0       0       0       0       0
  3535 ;;      Totals:         0       0       0       0       0
  3536 ;;Total ram usage:        0 bytes
  3537 ;; Hardware stack levels used:    1
  3538 ;; Hardware stack levels required when called:    2
  3539 ;; This function calls:
  3540 ;;		Nothing
  3541 ;; This function is called by:
  3542 ;;		_main
  3543 ;;		_process_AD_Converter_Value
  3544 ;; This function uses a non-reentrant model
  3545 ;;
  3546  0504                     _adc_start:	
  3547  0504                     l3828:	
  3548                           ; Regs used in _adc_start: []
  3549                           
  3550                           
  3551                           ;periph.c: 101: GO=1;
  3552  0504  1283               	bcf	3,5	;RP0=0, select bank0
  3553  0505  149F               	bsf	31,1
  3554  0506  0008               	return
  3555  0507                     __end_of_adc_start:	
  3556                           
  3557                           	psect	text686
  3558  05AD                     __ptext686:	
  3559 ;; =============== function _Filter ends ============
  3560                           
  3561                           
  3562 ;; *************** function _isFinishedThreeHoursTimer *****************
  3563 ;; Defined at:
  3564 ;;		line 416 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;		None
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;		None
  3569 ;; Return value:  Size  Location     Type
  3570 ;;                  1    wreg      unsigned char 
  3571 ;; Registers used:
  3572 ;;		wreg, status,2, status,0
  3573 ;; Tracked objects:
  3574 ;;		On entry : 60/0
  3575 ;;		On exit  : 60/0
  3576 ;;		Unchanged: FFF9F/0
  3577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3578 ;;      Params:         0       0       0       0       0
  3579 ;;      Locals:         0       0       0       0       0
  3580 ;;      Temps:          0       0       0       0       0
  3581 ;;      Totals:         0       0       0       0       0
  3582 ;;Total ram usage:        0 bytes
  3583 ;; Hardware stack levels used:    1
  3584 ;; Hardware stack levels required when called:    2
  3585 ;; This function calls:
  3586 ;;		Nothing
  3587 ;; This function is called by:
  3588 ;;		_main
  3589 ;; This function uses a non-reentrant model
  3590 ;;
  3591  05AD                     _isFinishedThreeHoursTimer:	
  3592                           
  3593                           ;common.c: 417: if(uiSmallTimer == 0)
  3594                           
  3595                           ; Regs used in _isFinishedThreeHoursTimer: [wreg+status,2+status,0]
  3596  05AD  084C               	movf	_uiSmallTimer+1,w
  3597  05AE  044B               	iorwf	_uiSmallTimer,w
  3598  05AF  1903               	btfsc	3,2
  3599                           
  3600                           ;common.c: 418: return 1;
  3601  05B0  3401               	retlw	1
  3602                           
  3603                           ;common.c: 419: else
  3604                           ;common.c: 420: return 0;
  3605  05B1  3400               	retlw	0
  3606  05B2                     __end_of_isFinishedThreeHoursTimer:	
  3607                           
  3608                           	psect	text687
  3609  0583                     __ptext687:	
  3610 ;; =============== function _isFinishedThreeHoursTimer ends ============
  3611                           
  3612                           
  3613 ;; *************** function _startThreeHoursTimer *****************
  3614 ;; Defined at:
  3615 ;;		line 382 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  3618 ;; Auto vars:     Size  Location     Type
  3619 ;;		None
  3620 ;; Return value:  Size  Location     Type
  3621 ;;		None               void
  3622 ;; Registers used:
  3623 ;;		wreg, status,2, status,0
  3624 ;; Tracked objects:
  3625 ;;		On entry : 60/0
  3626 ;;		On exit  : 60/0
  3627 ;;		Unchanged: FFF9F/0
  3628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3629 ;;      Params:         0       2       0       0       0
  3630 ;;      Locals:         0       0       0       0       0
  3631 ;;      Temps:          0       0       0       0       0
  3632 ;;      Totals:         0       2       0       0       0
  3633 ;;Total ram usage:        2 bytes
  3634 ;; Hardware stack levels used:    1
  3635 ;; Hardware stack levels required when called:    2
  3636 ;; This function calls:
  3637 ;;		Nothing
  3638 ;; This function is called by:
  3639 ;;		_main
  3640 ;; This function uses a non-reentrant model
  3641 ;;
  3642  0583                     _startThreeHoursTimer:	
  3643                           
  3644                           ;common.c: 383: if(0 == uiSmallTimer)
  3645                           
  3646                           ; Regs used in _startThreeHoursTimer: [wreg+status,2+status,0]
  3647  0583  084C               	movf	_uiSmallTimer+1,w
  3648  0584  044B               	iorwf	_uiSmallTimer,w
  3649  0585  1D03               	skipz
  3650  0586  0008               	return
  3651                           
  3652                           ;common.c: 384: uiSmallTimer = uiSetTime;
  3653  0587  0821               	movf	startThreeHoursTimer@uiSetTime+1,w
  3654  0588  00CC               	movwf	_uiSmallTimer+1
  3655  0589  0820               	movf	startThreeHoursTimer@uiSetTime,w
  3656  058A  00CB               	movwf	_uiSmallTimer
  3657  058B  0008               	return
  3658  058C                     __end_of_startThreeHoursTimer:	
  3659                           
  3660                           	psect	text688
  3661  05B2                     __ptext688:	
  3662 ;; =============== function _startThreeHoursTimer ends ============
  3663                           
  3664                           
  3665 ;; *************** function _isFinishedTwentySecondsTimer *****************
  3666 ;; Defined at:
  3667 ;;		line 399 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3668 ;; Parameters:    Size  Location     Type
  3669 ;;		None
  3670 ;; Auto vars:     Size  Location     Type
  3671 ;;		None
  3672 ;; Return value:  Size  Location     Type
  3673 ;;                  1    wreg      unsigned char 
  3674 ;; Registers used:
  3675 ;;		wreg, status,2, status,0
  3676 ;; Tracked objects:
  3677 ;;		On entry : 60/0
  3678 ;;		On exit  : 60/0
  3679 ;;		Unchanged: FFF9F/0
  3680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3681 ;;      Params:         0       0       0       0       0
  3682 ;;      Locals:         0       0       0       0       0
  3683 ;;      Temps:          0       0       0       0       0
  3684 ;;      Totals:         0       0       0       0       0
  3685 ;;Total ram usage:        0 bytes
  3686 ;; Hardware stack levels used:    1
  3687 ;; Hardware stack levels required when called:    2
  3688 ;; This function calls:
  3689 ;;		Nothing
  3690 ;; This function is called by:
  3691 ;;		_main
  3692 ;; This function uses a non-reentrant model
  3693 ;;
  3694  05B2                     _isFinishedTwentySecondsTimer:	
  3695                           
  3696                           ;common.c: 400: if(0 == uiTwentySecondsTimer)
  3697                           
  3698                           ; Regs used in _isFinishedTwentySecondsTimer: [wreg+status,2+status,0]
  3699  05B2  084E               	movf	_uiTwentySecondsTimer+1,w
  3700  05B3  044D               	iorwf	_uiTwentySecondsTimer,w
  3701  05B4  1903               	btfsc	3,2
  3702                           
  3703                           ;common.c: 401: return 1;
  3704  05B5  3401               	retlw	1
  3705                           
  3706                           ;common.c: 402: else
  3707                           ;common.c: 403: return 0;
  3708  05B6  3400               	retlw	0
  3709  05B7                     __end_of_isFinishedTwentySecondsTimer:	
  3710                           
  3711                           	psect	text689
  3712  05C6                     __ptext689:	
  3713 ;; =============== function _isFinishedTwentySecondsTimer ends ============
  3714                           
  3715                           
  3716 ;; *************** function _startTwentySecondsTimer *****************
  3717 ;; Defined at:
  3718 ;;		line 393 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3719 ;; Parameters:    Size  Location     Type
  3720 ;;		None
  3721 ;; Auto vars:     Size  Location     Type
  3722 ;;		None
  3723 ;; Return value:  Size  Location     Type
  3724 ;;		None               void
  3725 ;; Registers used:
  3726 ;;		wreg
  3727 ;; Tracked objects:
  3728 ;;		On entry : 60/0
  3729 ;;		On exit  : 60/0
  3730 ;;		Unchanged: FFF9F/0
  3731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3732 ;;      Params:         0       0       0       0       0
  3733 ;;      Locals:         0       0       0       0       0
  3734 ;;      Temps:          0       0       0       0       0
  3735 ;;      Totals:         0       0       0       0       0
  3736 ;;Total ram usage:        0 bytes
  3737 ;; Hardware stack levels used:    1
  3738 ;; Hardware stack levels required when called:    2
  3739 ;; This function calls:
  3740 ;;		Nothing
  3741 ;; This function is called by:
  3742 ;;		_main
  3743 ;; This function uses a non-reentrant model
  3744 ;;
  3745  05C6                     _startTwentySecondsTimer:	
  3746                           
  3747                           ;common.c: 394: uiTwentySecondsTimer = 20;
  3748                           
  3749                           ; Regs used in _startTwentySecondsTimer: [wreg]
  3750  05C6  3014               	movlw	20
  3751  05C7  00CD               	movwf	_uiTwentySecondsTimer
  3752  05C8  01CE               	clrf	_uiTwentySecondsTimer+1
  3753  05C9  0008               	return
  3754  05CA                     __end_of_startTwentySecondsTimer:	
  3755                           
  3756                           	psect	text690
  3757  05B7                     __ptext690:	
  3758 ;; =============== function _startTwentySecondsTimer ends ============
  3759                           
  3760                           
  3761 ;; *************** function _isFinishedTwelveHoursTimer *****************
  3762 ;; Defined at:
  3763 ;;		line 408 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3764 ;; Parameters:    Size  Location     Type
  3765 ;;		None
  3766 ;; Auto vars:     Size  Location     Type
  3767 ;;		None
  3768 ;; Return value:  Size  Location     Type
  3769 ;;                  1    wreg      unsigned char 
  3770 ;; Registers used:
  3771 ;;		wreg, status,2, status,0
  3772 ;; Tracked objects:
  3773 ;;		On entry : 60/0
  3774 ;;		On exit  : 60/0
  3775 ;;		Unchanged: FFF9F/0
  3776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3777 ;;      Params:         0       0       0       0       0
  3778 ;;      Locals:         0       0       0       0       0
  3779 ;;      Temps:          0       0       0       0       0
  3780 ;;      Totals:         0       0       0       0       0
  3781 ;;Total ram usage:        0 bytes
  3782 ;; Hardware stack levels used:    1
  3783 ;; Hardware stack levels required when called:    2
  3784 ;; This function calls:
  3785 ;;		Nothing
  3786 ;; This function is called by:
  3787 ;;		_main
  3788 ;; This function uses a non-reentrant model
  3789 ;;
  3790  05B7                     _isFinishedTwelveHoursTimer:	
  3791                           
  3792                           ;common.c: 409: if(uiBigTimer == 0)
  3793                           
  3794                           ; Regs used in _isFinishedTwelveHoursTimer: [wreg+status,2+status,0]
  3795  05B7  084A               	movf	_uiBigTimer+1,w
  3796  05B8  0449               	iorwf	_uiBigTimer,w
  3797  05B9  1903               	btfsc	3,2
  3798                           
  3799                           ;common.c: 410: return 1;
  3800  05BA  3401               	retlw	1
  3801                           
  3802                           ;common.c: 411: else
  3803                           ;common.c: 412: return 0;
  3804  05BB  3400               	retlw	0
  3805  05BC                     __end_of_isFinishedTwelveHoursTimer:	
  3806                           
  3807                           	psect	text691
  3808  058C                     __ptext691:	
  3809 ;; =============== function _isFinishedTwelveHoursTimer ends ============
  3810                           
  3811                           
  3812 ;; *************** function _startTwelveHourTimer *****************
  3813 ;; Defined at:
  3814 ;;		line 354 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3815 ;; Parameters:    Size  Location     Type
  3816 ;;  uiSetTime       2    0[BANK0 ] unsigned int 
  3817 ;; Auto vars:     Size  Location     Type
  3818 ;;		None
  3819 ;; Return value:  Size  Location     Type
  3820 ;;		None               void
  3821 ;; Registers used:
  3822 ;;		wreg, status,2, status,0
  3823 ;; Tracked objects:
  3824 ;;		On entry : 60/0
  3825 ;;		On exit  : 60/0
  3826 ;;		Unchanged: FFF9F/0
  3827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3828 ;;      Params:         0       2       0       0       0
  3829 ;;      Locals:         0       0       0       0       0
  3830 ;;      Temps:          0       0       0       0       0
  3831 ;;      Totals:         0       2       0       0       0
  3832 ;;Total ram usage:        2 bytes
  3833 ;; Hardware stack levels used:    1
  3834 ;; Hardware stack levels required when called:    2
  3835 ;; This function calls:
  3836 ;;		Nothing
  3837 ;; This function is called by:
  3838 ;;		_main
  3839 ;; This function uses a non-reentrant model
  3840 ;;
  3841  058C                     _startTwelveHourTimer:	
  3842                           
  3843                           ;common.c: 355: if(0 == uiBigTimer)
  3844                           
  3845                           ; Regs used in _startTwelveHourTimer: [wreg+status,2+status,0]
  3846  058C  084A               	movf	_uiBigTimer+1,w
  3847  058D  0449               	iorwf	_uiBigTimer,w
  3848  058E  1D03               	skipz
  3849  058F  0008               	return
  3850                           
  3851                           ;common.c: 356: uiBigTimer = uiSetTime;
  3852  0590  0821               	movf	startTwelveHourTimer@uiSetTime+1,w
  3853  0591  00CA               	movwf	_uiBigTimer+1
  3854  0592  0820               	movf	startTwelveHourTimer@uiSetTime,w
  3855  0593  00C9               	movwf	_uiBigTimer
  3856  0594  0008               	return
  3857  0595                     __end_of_startTwelveHourTimer:	
  3858                           
  3859                           	psect	text692
  3860  05CD                     __ptext692:	
  3861 ;; =============== function _startTwelveHourTimer ends ============
  3862                           
  3863                           
  3864 ;; *************** function _clrSampeTime *****************
  3865 ;; Defined at:
  3866 ;;		line 434 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3867 ;; Parameters:    Size  Location     Type
  3868 ;;		None
  3869 ;; Auto vars:     Size  Location     Type
  3870 ;;		None
  3871 ;; Return value:  Size  Location     Type
  3872 ;;		None               void
  3873 ;; Registers used:
  3874 ;;		status,2
  3875 ;; Tracked objects:
  3876 ;;		On entry : 60/0
  3877 ;;		On exit  : 60/0
  3878 ;;		Unchanged: FFF9F/0
  3879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3880 ;;      Params:         0       0       0       0       0
  3881 ;;      Locals:         0       0       0       0       0
  3882 ;;      Temps:          0       0       0       0       0
  3883 ;;      Totals:         0       0       0       0       0
  3884 ;;Total ram usage:        0 bytes
  3885 ;; Hardware stack levels used:    1
  3886 ;; Hardware stack levels required when called:    2
  3887 ;; This function calls:
  3888 ;;		Nothing
  3889 ;; This function is called by:
  3890 ;;		_main
  3891 ;; This function uses a non-reentrant model
  3892 ;;
  3893  05CD                     _clrSampeTime:	
  3894                           
  3895                           ;common.c: 435: timer.timer10msStopWatch = 0;
  3896                           
  3897                           ; Regs used in _clrSampeTime: [status,2]
  3898  05CD  01D2               	clrf	_timer
  3899  05CE  0008               	return
  3900  05CF                     __end_of_clrSampeTime:	
  3901                           
  3902                           	psect	text693
  3903  05BC                     __ptext693:	
  3904 ;; =============== function _clrSampeTime ends ============
  3905                           
  3906                           
  3907 ;; *************** function _isPermitSampleTime *****************
  3908 ;; Defined at:
  3909 ;;		line 424 in file "D:\develop\ATK\AK7030-OTP\common.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;		None
  3912 ;; Auto vars:     Size  Location     Type
  3913 ;;		None
  3914 ;; Return value:  Size  Location     Type
  3915 ;;                  1    wreg      unsigned char 
  3916 ;; Registers used:
  3917 ;;		wreg
  3918 ;; Tracked objects:
  3919 ;;		On entry : 60/0
  3920 ;;		On exit  : 60/0
  3921 ;;		Unchanged: FFF9F/0
  3922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3923 ;;      Params:         0       0       0       0       0
  3924 ;;      Locals:         0       0       0       0       0
  3925 ;;      Temps:          0       0       0       0       0
  3926 ;;      Totals:         0       0       0       0       0
  3927 ;;Total ram usage:        0 bytes
  3928 ;; Hardware stack levels used:    1
  3929 ;; Hardware stack levels required when called:    2
  3930 ;; This function calls:
  3931 ;;		Nothing
  3932 ;; This function is called by:
  3933 ;;		_main
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936  05BC                     _isPermitSampleTime:	
  3937                           
  3938                           ;common.c: 425: if(timer.timer10msStopWatch >= 10)
  3939                           
  3940                           ; Regs used in _isPermitSampleTime: [wreg]
  3941  05BC  300A               	movlw	10
  3942  05BD  0252               	subwf	_timer,w
  3943  05BE  1803               	btfsc	3,0
  3944                           
  3945                           ;common.c: 426: {
  3946                           ;common.c: 427: return 1;
  3947  05BF  3401               	retlw	1
  3948                           
  3949                           ;common.c: 429: else
  3950                           ;common.c: 430: return 0;
  3951  05C0  3400               	retlw	0
  3952  05C1                     __end_of_isPermitSampleTime:	
  3953                           
  3954                           	psect	text695
  3955  059D                     __ptext695:	
  3956 ;; =============== function _adc_start ends ============
  3957                           
  3958                           
  3959 ;; *************** function _op2_init *****************
  3960 ;; Defined at:
  3961 ;;		line 45 in file "D:\develop\ATK\AK7030-OTP\periph.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;		None
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;		None
  3966 ;; Return value:  Size  Location     Type
  3967 ;;		None               void
  3968 ;; Registers used:
  3969 ;;		wreg
  3970 ;; Tracked objects:
  3971 ;;		On entry : 17F/20
  3972 ;;		On exit  : 17F/20
  3973 ;;		Unchanged: FFE80/0
  3974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3975 ;;      Params:         0       0       0       0       0
  3976 ;;      Locals:         0       0       0       0       0
  3977 ;;      Temps:          0       0       0       0       0
  3978 ;;      Totals:         0       0       0       0       0
  3979 ;;Total ram usage:        0 bytes
  3980 ;; Hardware stack levels used:    1
  3981 ;; Hardware stack levels required when called:    2
  3982 ;; This function calls:
  3983 ;;		Nothing
  3984 ;; This function is called by:
  3985 ;;		_main
  3986 ;; This function uses a non-reentrant model
  3987 ;;
  3988  059D                     _op2_init:	
  3989                           
  3990                           ;periph.c: 52: OP2CON1=0x10;
  3991                           
  3992                           ; Regs used in _op2_init: [wreg]
  3993  059D  3010               	movlw	16
  3994  059E  009C               	movwf	28	;volatile
  3995                           
  3996                           ;periph.c: 54: OP2CON2=0x10;
  3997  059F  009D               	movwf	29	;volatile
  3998                           
  3999                           ;periph.c: 55: OP2CON0=0x80;
  4000  05A0  3080               	movlw	128
  4001  05A1  009B               	movwf	27	;volatile
  4002                           
  4003                           ;periph.c: 58: TRISA7=0;
  4004  05A2  1385               	bcf	5,7
  4005                           
  4006                           ;periph.c: 60: TRISB7 = 1;
  4007  05A3  1786               	bsf	6,7
  4008  05A4  0008               	return
  4009  05A5                     __end_of_op2_init:	
  4010                           
  4011                           	psect	text696
  4012  056E                     __ptext696:	
  4013 ;; =============== function _op2_init ends ============
  4014                           
  4015                           
  4016 ;; *************** function _op1_init *****************
  4017 ;; Defined at:
  4018 ;;		line 26 in file "D:\develop\ATK\AK7030-OTP\periph.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;		None
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;		None
  4023 ;; Return value:  Size  Location     Type
  4024 ;;		None               void
  4025 ;; Registers used:
  4026 ;;		wreg
  4027 ;; Tracked objects:
  4028 ;;		On entry : 17F/20
  4029 ;;		On exit  : 17F/20
  4030 ;;		Unchanged: FFE80/0
  4031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4032 ;;      Params:         0       0       0       0       0
  4033 ;;      Locals:         0       0       0       0       0
  4034 ;;      Temps:          0       0       0       0       0
  4035 ;;      Totals:         0       0       0       0       0
  4036 ;;Total ram usage:        0 bytes
  4037 ;; Hardware stack levels used:    1
  4038 ;; Hardware stack levels required when called:    2
  4039 ;; This function calls:
  4040 ;;		Nothing
  4041 ;; This function is called by:
  4042 ;;		_main
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045  056E                     _op1_init:	
  4046                           
  4047                           ;periph.c: 33: OP1CON1=0x02;
  4048                           
  4049                           ; Regs used in _op1_init: [wreg]
  4050  056E  3002               	movlw	2
  4051  056F  1283               	bcf	3,5	;RP0=0, select bank0
  4052  0570  009C               	movwf	28	;volatile
  4053                           
  4054                           ;periph.c: 34: OP1CON2=0xA0;
  4055  0571  30A0               	movlw	160
  4056  0572  009D               	movwf	29	;volatile
  4057                           
  4058                           ;periph.c: 35: OP1CON0=0x80;
  4059  0573  3080               	movlw	128
  4060  0574  009B               	movwf	27	;volatile
  4061                           
  4062                           ;periph.c: 38: TRISB3=1;
  4063  0575  1683               	bsf	3,5	;RP0=1, select bank1
  4064  0576  1586               	bsf	6,3
  4065                           
  4066                           ;periph.c: 40: TRISB5=0;
  4067  0577  1286               	bcf	6,5
  4068  0578  0008               	return
  4069  0579                     __end_of_op1_init:	
  4070                           
  4071                           	psect	text697
  4072  05C1                     __ptext697:	
  4073 ;; =============== function _op1_init ends ============
  4074                           
  4075                           
  4076 ;; *************** function _dac_init *****************
  4077 ;; Defined at:
  4078 ;;		line 14 in file "D:\develop\ATK\AK7030-OTP\periph.c"
  4079 ;; Parameters:    Size  Location     Type
  4080 ;;		None
  4081 ;; Auto vars:     Size  Location     Type
  4082 ;;		None
  4083 ;; Return value:  Size  Location     Type
  4084 ;;		None               void
  4085 ;; Registers used:
  4086 ;;		wreg
  4087 ;; Tracked objects:
  4088 ;;		On entry : 17F/20
  4089 ;;		On exit  : 17F/20
  4090 ;;		Unchanged: FFE80/0
  4091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4092 ;;      Params:         0       0       0       0       0
  4093 ;;      Locals:         0       0       0       0       0
  4094 ;;      Temps:          0       0       0       0       0
  4095 ;;      Totals:         0       0       0       0       0
  4096 ;;Total ram usage:        0 bytes
  4097 ;; Hardware stack levels used:    1
  4098 ;; Hardware stack levels required when called:    2
  4099 ;; This function calls:
  4100 ;;		Nothing
  4101 ;; This function is called by:
  4102 ;;		_main
  4103 ;; This function uses a non-reentrant model
  4104 ;;
  4105  05C1                     _dac_init:	
  4106                           
  4107                           ;periph.c: 15: DACCON|=1;
  4108                           
  4109                           ; Regs used in _dac_init: [wreg]
  4110  05C1  1407               	bsf	7,0	;volatile
  4111                           
  4112                           ;periph.c: 17: DACR0=0x0F;
  4113  05C2  300F               	movlw	15
  4114  05C3  0088               	movwf	8	;volatile
  4115                           
  4116                           ;periph.c: 18: DACCON|=(1)<<2;
  4117  05C4  1507               	bsf	7,2	;volatile
  4118  05C5  0008               	return
  4119  05C6                     __end_of_dac_init:	
  4120                           
  4121                           	psect	text699
  4122  05CA                     __ptext699:	
  4123 ;; =============== function _adc_test_init ends ============
  4124                           
  4125                           
  4126 ;; *************** function _timer1_interrupt_config *****************
  4127 ;; Defined at:
  4128 ;;		line 192 in file "D:\develop\ATK\AK7030-OTP\common.c"
  4129 ;; Parameters:    Size  Location     Type
  4130 ;;		None
  4131 ;; Auto vars:     Size  Location     Type
  4132 ;;		None
  4133 ;; Return value:  Size  Location     Type
  4134 ;;		None               void
  4135 ;; Registers used:
  4136 ;;		None
  4137 ;; Tracked objects:
  4138 ;;		On entry : 17F/20
  4139 ;;		On exit  : 17F/20
  4140 ;;		Unchanged: FFE80/0
  4141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4142 ;;      Params:         0       0       0       0       0
  4143 ;;      Locals:         0       0       0       0       0
  4144 ;;      Temps:          0       0       0       0       0
  4145 ;;      Totals:         0       0       0       0       0
  4146 ;;Total ram usage:        0 bytes
  4147 ;; Hardware stack levels used:    1
  4148 ;; Hardware stack levels required when called:    2
  4149 ;; This function calls:
  4150 ;;		Nothing
  4151 ;; This function is called by:
  4152 ;;		_main
  4153 ;; This function uses a non-reentrant model
  4154 ;;
  4155  05CA                     _timer1_interrupt_config:	
  4156                           
  4157                           ;common.c: 193: GIE = 1;
  4158                           
  4159                           ; Regs used in _timer1_interrupt_config: []
  4160  05CA  178B               	bsf	11,7
  4161                           
  4162                           ;common.c: 194: PEIE = 1;
  4163  05CB  170B               	bsf	11,6
  4164  05CC  0008               	return
  4165  05CD                     __end_of_timer1_interrupt_config:	
  4166                           
  4167                           	psect	text700
  4168  0579                     __ptext700:	
  4169 ;; =============== function _timer1_interrupt_config ends ============
  4170                           
  4171                           
  4172 ;; *************** function _timer1_config *****************
  4173 ;; Defined at:
  4174 ;;		line 180 in file "D:\develop\ATK\AK7030-OTP\common.c"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;		None
  4177 ;; Auto vars:     Size  Location     Type
  4178 ;;		None
  4179 ;; Return value:  Size  Location     Type
  4180 ;;		None               void
  4181 ;; Registers used:
  4182 ;;		wreg
  4183 ;; Tracked objects:
  4184 ;;		On entry : 17F/40
  4185 ;;		On exit  : 17F/20
  4186 ;;		Unchanged: FFE80/0
  4187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4188 ;;      Params:         0       0       0       0       0
  4189 ;;      Locals:         0       0       0       0       0
  4190 ;;      Temps:          0       0       0       0       0
  4191 ;;      Totals:         0       0       0       0       0
  4192 ;;Total ram usage:        0 bytes
  4193 ;; Hardware stack levels used:    1
  4194 ;; Hardware stack levels required when called:    2
  4195 ;; This function calls:
  4196 ;;		Nothing
  4197 ;; This function is called by:
  4198 ;;		_main
  4199 ;; This function uses a non-reentrant model
  4200 ;;
  4201  0579                     _timer1_config:	
  4202                           
  4203                           ;common.c: 182: TMR1H=0xCF;
  4204                           
  4205                           ; Regs used in _timer1_config: [wreg]
  4206  0579  30CF               	movlw	207
  4207  057A  1303               	bcf	3,6	;RP1=0, select bank0
  4208  057B  008F               	movwf	15	;volatile
  4209                           
  4210                           ;common.c: 183: TMR1L=0x2C;
  4211  057C  302C               	movlw	44
  4212  057D  008E               	movwf	14	;volatile
  4213                           
  4214                           ;common.c: 184: T1CON=0xE1;
  4215  057E  30E1               	movlw	225
  4216  057F  0090               	movwf	16	;volatile
  4217                           
  4218                           ;common.c: 185: TMR1IE=1;
  4219  0580  1683               	bsf	3,5	;RP0=1, select bank1
  4220  0581  140C               	bsf	12,0
  4221  0582  0008               	return
  4222  0583                     __end_of_timer1_config:	
  4223                           
  4224                           	psect	text701
  4225  05A5                     __ptext701:	
  4226 ;; =============== function _timer1_config ends ============
  4227                           
  4228                           
  4229 ;; *************** function _clock_config *****************
  4230 ;; Defined at:
  4231 ;;		line 172 in file "D:\develop\ATK\AK7030-OTP\common.c"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;		None
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;		None
  4236 ;; Return value:  Size  Location     Type
  4237 ;;		None               void
  4238 ;; Registers used:
  4239 ;;		wreg, status,2
  4240 ;; Tracked objects:
  4241 ;;		On entry : 17F/20
  4242 ;;		On exit  : 17F/40
  4243 ;;		Unchanged: FFE80/0
  4244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4245 ;;      Params:         0       0       0       0       0
  4246 ;;      Locals:         0       0       0       0       0
  4247 ;;      Temps:          0       0       0       0       0
  4248 ;;      Totals:         0       0       0       0       0
  4249 ;;Total ram usage:        0 bytes
  4250 ;; Hardware stack levels used:    1
  4251 ;; Hardware stack levels required when called:    2
  4252 ;; This function calls:
  4253 ;;		Nothing
  4254 ;; This function is called by:
  4255 ;;		_main
  4256 ;; This function uses a non-reentrant model
  4257 ;;
  4258  05A5                     _clock_config:	
  4259                           
  4260                           ;common.c: 174: CLKPR = 0x80;
  4261                           
  4262                           ; Regs used in _clock_config: [wreg+status,2]
  4263  05A5  3080               	movlw	128
  4264  05A6  1283               	bcf	3,5	;RP0=0, select bank2
  4265  05A7  1703               	bsf	3,6	;RP1=1, select bank2
  4266  05A8  0088               	movwf	8	;volatile
  4267                           
  4268                           ;common.c: 175: CLKPR = 0x00;
  4269  05A9  0188               	clrf	8	;volatile
  4270  05AA                     l1627:	
  4271                           ;common.c: 176: while(CLKPCE);
  4272                           
  4273  05AA  1F88               	btfss	8,7
  4274  05AB  0008               	return
  4275  05AC  2DAA               	goto	l1627
  4276  05AD                     __end_of_clock_config:	
  4277                           
  4278                           	psect	text702
  4279  0521                     __ptext702:	
  4280 ;; =============== function _clock_config ends ============
  4281                           
  4282                           
  4283 ;; *************** function _initPin *****************
  4284 ;; Defined at:
  4285 ;;		line 105 in file "D:\develop\ATK\AK7030-OTP\main.c"
  4286 ;; Parameters:    Size  Location     Type
  4287 ;;		None
  4288 ;; Auto vars:     Size  Location     Type
  4289 ;;		None
  4290 ;; Return value:  Size  Location     Type
  4291 ;;		None               void
  4292 ;; Registers used:
  4293 ;;		None
  4294 ;; Tracked objects:
  4295 ;;		On entry : 160/20
  4296 ;;		On exit  : 160/60
  4297 ;;		Unchanged: FFE9F/0
  4298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4299 ;;      Params:         0       0       0       0       0
  4300 ;;      Locals:         0       0       0       0       0
  4301 ;;      Temps:          0       0       0       0       0
  4302 ;;      Totals:         0       0       0       0       0
  4303 ;;Total ram usage:        0 bytes
  4304 ;; Hardware stack levels used:    1
  4305 ;; Hardware stack levels required when called:    2
  4306 ;; This function calls:
  4307 ;;		Nothing
  4308 ;; This function is called by:
  4309 ;;		_main
  4310 ;; This function uses a non-reentrant model
  4311 ;;
  4312  0521                     _initPin:	
  4313                           
  4314                           ;main.c: 106: PB6 = 1;
  4315                           
  4316                           ; Regs used in _initPin: []
  4317  0521  1283               	bcf	3,5	;RP0=0, select bank0
  4318  0522  1706               	bsf	6,6
  4319                           
  4320                           ;main.c: 107: PBOD6 = 1;
  4321  0523  1683               	bsf	3,5	;RP0=1, select bank3
  4322  0524  1703               	bsf	3,6	;RP1=1, select bank3
  4323  0525  1708               	bsf	8,6
  4324                           
  4325                           ;main.c: 111: PA0 = 0;
  4326  0526  1283               	bcf	3,5	;RP0=0, select bank0
  4327  0527  1303               	bcf	3,6	;RP1=0, select bank0
  4328  0528  1005               	bcf	5,0
  4329                           
  4330                           ;main.c: 112: PA1 = 0;
  4331  0529  1085               	bcf	5,1
  4332                           
  4333                           ;main.c: 113: PA2 = 0;
  4334  052A  1105               	bcf	5,2
  4335                           
  4336                           ;main.c: 114: PA3 = 0;
  4337  052B  1185               	bcf	5,3
  4338                           
  4339                           ;main.c: 115: PB0 = 0;
  4340  052C  1006               	bcf	6,0
  4341                           
  4342                           ;main.c: 116: PB1 = 1;
  4343  052D  1486               	bsf	6,1
  4344                           
  4345                           ;main.c: 117: PA6 = 0;
  4346  052E  1305               	bcf	5,6
  4347                           
  4348                           ;main.c: 118: PA7 = 0;
  4349  052F  1385               	bcf	5,7
  4350                           
  4351                           ;main.c: 119: PAOD7 = 0;
  4352  0530  1683               	bsf	3,5	;RP0=1, select bank3
  4353  0531  1703               	bsf	3,6	;RP1=1, select bank3
  4354  0532  1387               	bcf	7,7
  4355  0533  0008               	return
  4356  0534                     __end_of_initPin:	
  4357                           
  4358                           	psect	text706
  4359  031E                     __ptext706:	
  4360 ;; =============== function _clearTwelveHoursTimer ends ============
  4361                           
  4362                           
  4363 ;; *************** function _ISR *****************
  4364 ;; Defined at:
  4365 ;;		line 439 in file "D:\develop\ATK\AK7030-OTP\common.c"
  4366 ;; Parameters:    Size  Location     Type
  4367 ;;		None
  4368 ;; Auto vars:     Size  Location     Type
  4369 ;;		None
  4370 ;; Return value:  Size  Location     Type
  4371 ;;		None               void
  4372 ;; Registers used:
  4373 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4374 ;; Tracked objects:
  4375 ;;		On entry : 0/0
  4376 ;;		On exit  : 60/0
  4377 ;;		Unchanged: FFE00/0
  4378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4379 ;;      Params:         0       0       0       0       0
  4380 ;;      Locals:         0       0       0       0       0
  4381 ;;      Temps:          4       0       0       0       0
  4382 ;;      Totals:         4       0       0       0       0
  4383 ;;Total ram usage:        4 bytes
  4384 ;; Hardware stack levels used:    1
  4385 ;; Hardware stack levels required when called:    1
  4386 ;; This function calls:
  4387 ;;		i1_setAD_ConvertFlag
  4388 ;;		_adc_get
  4389 ;;		_vPutSampleDataIntoTable
  4390 ;; This function is called by:
  4391 ;;		Interrupt level 1
  4392 ;; This function uses a non-reentrant model
  4393 ;;
  4394  031E                     _ISR:	
  4395                           
  4396                           ;common.c: 440: static unsigned char ucTimer1sCnt = 0;
  4397                           ;common.c: 442: if(TMR1IF == 1)
  4398  031E  1C0C               	btfss	12,0
  4399  031F  2B46               	goto	i1l4034
  4400  0320  3064               	movlw	100
  4401                           
  4402                           ;common.c: 443: {
  4403                           ;common.c: 444: TMR1IF = 0 ;
  4404  0321  100C               	bcf	12,0
  4405                           
  4406                           ;common.c: 445: timer.timer10msStopWatch++;
  4407  0322  0AD2               	incf	_timer,f
  4408                           
  4409                           ;common.c: 446: ucTimer1sCnt++;
  4410  0323  0ACF               	incf	ISR@ucTimer1sCnt,f
  4411                           
  4412                           ;common.c: 448: if(ucTimer1sCnt >= 100)
  4413  0324  024F               	subwf	ISR@ucTimer1sCnt,w
  4414  0325  1C03               	skipc
  4415  0326  2B46               	goto	i1l4034
  4416                           
  4417                           ;common.c: 449: {
  4418                           ;common.c: 450: ucTimer1sCnt = 0;
  4419  0327  01CF               	clrf	ISR@ucTimer1sCnt
  4420                           
  4421                           ;common.c: 451: if(uiBigTimer > 0)
  4422  0328  084A               	movf	_uiBigTimer+1,w
  4423  0329  0449               	iorwf	_uiBigTimer,w
  4424  032A  1903               	skipnz
  4425  032B  2B32               	goto	i1l1723
  4426                           
  4427                           ;common.c: 452: uiBigTimer--;
  4428  032C  3001               	movlw	1
  4429  032D  02C9               	subwf	_uiBigTimer,f
  4430  032E  3000               	movlw	0
  4431  032F  1C03               	skipc
  4432  0330  03CA               	decf	_uiBigTimer+1,f
  4433  0331  02CA               	subwf	_uiBigTimer+1,f
  4434  0332                     i1l1723:	
  4435                           
  4436                           ;common.c: 454: if(uiSmallTimer)
  4437  0332  084C               	movf	_uiSmallTimer+1,w
  4438  0333  044B               	iorwf	_uiSmallTimer,w
  4439  0334  1903               	skipnz
  4440  0335  2B3C               	goto	i1l1724
  4441                           
  4442                           ;common.c: 455: uiSmallTimer--;
  4443  0336  3001               	movlw	1
  4444  0337  02CB               	subwf	_uiSmallTimer,f
  4445  0338  3000               	movlw	0
  4446  0339  1C03               	skipc
  4447  033A  03CC               	decf	_uiSmallTimer+1,f
  4448  033B  02CC               	subwf	_uiSmallTimer+1,f
  4449  033C                     i1l1724:	
  4450                           
  4451                           ;common.c: 457: if(uiTwentySecondsTimer)
  4452  033C  084E               	movf	_uiTwentySecondsTimer+1,w
  4453  033D  044D               	iorwf	_uiTwentySecondsTimer,w
  4454  033E  1903               	skipnz
  4455  033F  2B46               	goto	i1l4034
  4456                           
  4457                           ;common.c: 458: uiTwentySecondsTimer--;
  4458  0340  3001               	movlw	1
  4459  0341  02CD               	subwf	_uiTwentySecondsTimer,f
  4460  0342  3000               	movlw	0
  4461  0343  1C03               	skipc
  4462  0344  03CE               	decf	_uiTwentySecondsTimer+1,f
  4463  0345  02CE               	subwf	_uiTwentySecondsTimer+1,f
  4464  0346                     i1l4034:	
  4465                           
  4466                           ;common.c: 459: }
  4467                           ;common.c: 460: }
  4468                           ;common.c: 462: if(ADIF)
  4469  0346  1D0D               	btfss	13,2
  4470  0347  2B6C               	goto	i1l1731
  4471  0348  3001               	movlw	1
  4472                           
  4473                           ;common.c: 463: {
  4474                           ;common.c: 464: ADIF=0;
  4475  0349  110D               	bcf	13,2
  4476                           
  4477                           ;common.c: 465: setAD_ConvertFlag(1);
  4478  034A  23E1  118A         	fcall	i1_setAD_ConvertFlag
  4479                           
  4480                           ;common.c: 467: if(sampleChannelSelect == 4)
  4481  034C  086F               	movf	_sampleChannelSelect,w
  4482  034D  3A04               	xorlw	4
  4483  034E  1D03               	skipz
  4484  034F  2B58               	goto	i1l4044
  4485                           
  4486                           ;common.c: 468: {
  4487                           ;common.c: 471: vPutSampleDataIntoTable(adc_get(),4);
  4488  0350  2379  118A         	fcall	_adc_get
  4489  0352  0871               	movf	?_adc_get+1,w
  4490  0353  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4491  0354  0870               	movf	?_adc_get,w
  4492  0355  00F4               	movwf	?_vPutSampleDataIntoTable
  4493  0356  3004               	movlw	4
  4494  0357  2B6A               	goto	L12
  4495  0358                     i1l4044:	
  4496                           ;common.c: 475: }
  4497                           
  4498                           
  4499                           ;common.c: 476: else if(sampleChannelSelect == 1)
  4500  0358  0B6F               	decfsz	_sampleChannelSelect,w
  4501  0359  2B63               	goto	i1l4048
  4502                           
  4503                           ;common.c: 477: {
  4504                           ;common.c: 479: vPutSampleDataIntoTable(adc_get(),1);
  4505  035A  2379  118A         	fcall	_adc_get
  4506  035C  0871               	movf	?_adc_get+1,w
  4507  035D  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4508  035E  0870               	movf	?_adc_get,w
  4509  035F  00F4               	movwf	?_vPutSampleDataIntoTable
  4510  0360  01F6               	clrf	?_vPutSampleDataIntoTable+2
  4511  0361  0AF6               	incf	?_vPutSampleDataIntoTable+2,f
  4512  0362  2B6B               	goto	L13
  4513  0363                     i1l4048:	
  4514                           ;common.c: 484: }
  4515                           
  4516                           
  4517                           ;common.c: 485: else
  4518                           ;common.c: 486: {
  4519                           ;common.c: 490: vPutSampleDataIntoTable(adc_get(),14);
  4520  0363  2379  118A         	fcall	_adc_get
  4521  0365  0871               	movf	?_adc_get+1,w
  4522  0366  00F5               	movwf	?_vPutSampleDataIntoTable+1
  4523  0367  0870               	movf	?_adc_get,w
  4524  0368  00F4               	movwf	?_vPutSampleDataIntoTable
  4525  0369  300E               	movlw	14
  4526  036A                     L12:	
  4527  036A  00F6               	movwf	?_vPutSampleDataIntoTable+2
  4528  036B                     L13:	
  4529  036B  2384               	fcall	_vPutSampleDataIntoTable
  4530  036C                     i1l1731:	
  4531  036C  087C               	movf	??_ISR+3,w
  4532  036D  1283               	bcf	3,5	;RP0=0, select bank0
  4533  036E  1303               	bcf	3,6	;RP1=0, select bank0
  4534  036F  00FF               	movwf	127
  4535  0370  087B               	movf	??_ISR+2,w
  4536  0371  008A               	movwf	10
  4537  0372  087A               	movf	??_ISR+1,w
  4538  0373  0084               	movwf	4
  4539  0374  0E79               	swapf	??_ISR^(0+-128),w
  4540  0375  0083               	movwf	3
  4541  0376  0EFE               	swapf	126,f
  4542  0377  0E7E               	swapf	126,w
  4543  0378  0009               	retfie
  4544  0379                     __end_of_ISR:	
  4545  0379                     __ptext708:	
  4546 ;; =============== function i1_setAD_ConvertFlag ends ============
  4547                           
  4548                           
  4549 ;; *************** function _adc_get *****************
  4550 ;; Defined at:
  4551 ;;		line 105 in file "D:\develop\ATK\AK7030-OTP\periph.c"
  4552 ;; Parameters:    Size  Location     Type
  4553 ;;		None
  4554 ;; Auto vars:     Size  Location     Type
  4555 ;;  val             2    2[COMMON] unsigned int 
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  2    0[COMMON] unsigned int 
  4558 ;; Registers used:
  4559 ;;		wreg
  4560 ;; Tracked objects:
  4561 ;;		On entry : 60/0
  4562 ;;		On exit  : 60/20
  4563 ;;		Unchanged: FFF9F/0
  4564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4565 ;;      Params:         2       0       0       0       0
  4566 ;;      Locals:         2       0       0       0       0
  4567 ;;      Temps:          0       0       0       0       0
  4568 ;;      Totals:         4       0       0       0       0
  4569 ;;Total ram usage:        4 bytes
  4570 ;; Hardware stack levels used:    1
  4571 ;; This function calls:
  4572 ;;		Nothing
  4573 ;; This function is called by:
  4574 ;;		_ISR
  4575 ;; This function uses a non-reentrant model
  4576 ;;
  4577  0379                     _adc_get:	
  4578                           
  4579                           ;periph.c: 106: unsigned int val;
  4580                           ;periph.c: 107: val = (ADRESH<<8) | ADRESL;
  4581                           
  4582                           ; Regs used in _adc_get: [wreg]
  4583  0379  081E               	movf	30,w	;volatile
  4584  037A  00F3               	movwf	adc_get@val+1
  4585  037B  01F2               	clrf	adc_get@val
  4586  037C  1683               	bsf	3,5	;RP0=1, select bank1
  4587  037D  081E               	movf	30,w	;volatile
  4588  037E  04F2               	iorwf	adc_get@val,f
  4589                           
  4590                           ;periph.c: 108: return val;
  4591  037F  0873               	movf	adc_get@val+1,w
  4592  0380  00F1               	movwf	?_adc_get+1
  4593  0381  0872               	movf	adc_get@val,w
  4594  0382  00F0               	movwf	?_adc_get
  4595  0383  0008               	return
  4596  0384                     __end_of_adc_get:	
  4597  0384                     __ptext709:	
  4598 ;; =============== function _adc_get ends ============
  4599                           
  4600                           
  4601 ;; *************** function _vPutSampleDataIntoTable *****************
  4602 ;; Defined at:
  4603 ;;		line 97 in file "D:\develop\ATK\AK7030-OTP\common.c"
  4604 ;; Parameters:    Size  Location     Type
  4605 ;;  uiSampleData    2    4[COMMON] unsigned int 
  4606 ;;  channel         1    6[COMMON] unsigned char 
  4607 ;; Auto vars:     Size  Location     Type
  4608 ;;  i               2    7[COMMON] int 
  4609 ;; Return value:  Size  Location     Type
  4610 ;;		None               void
  4611 ;; Registers used:
  4612 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4613 ;; Tracked objects:
  4614 ;;		On entry : 60/20
  4615 ;;		On exit  : 0/0
  4616 ;;		Unchanged: FFE00/0
  4617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4618 ;;      Params:         3       0       0       0       0
  4619 ;;      Locals:         2       0       0       0       0
  4620 ;;      Temps:          0       0       0       0       0
  4621 ;;      Totals:         5       0       0       0       0
  4622 ;;Total ram usage:        5 bytes
  4623 ;; Hardware stack levels used:    1
  4624 ;; This function calls:
  4625 ;;		Nothing
  4626 ;; This function is called by:
  4627 ;;		_ISR
  4628 ;; This function uses a non-reentrant model
  4629 ;;
  4630  0384                     _vPutSampleDataIntoTable:	
  4631                           
  4632                           ;common.c: 99: static unsigned char ucChannelFirstLength = 0;
  4633                           ;common.c: 101: static unsigned char ucChannelFourthLength = 0;
  4634                           ;common.c: 103: static unsigned char ucChannelFourteenthLength = 0;
  4635                           ;common.c: 105: if(channel == 1)
  4636                           
  4637                           ; Regs used in _vPutSampleDataIntoTable: [wreg-fsr0h+status,2+status,0+btemp+1]
  4638  0384  0B76               	decfsz	vPutSampleDataIntoTable@channel,w
  4639  0385  2B96               	goto	i1l3952
  4640                           
  4641                           ;common.c: 106: {
  4642                           ;common.c: 107: if(ucChannelFirstLength < 12)
  4643  0386  300C               	movlw	12
  4644  0387  027D               	subwf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4645  0388  1803               	skipnc
  4646  0389  2B90               	goto	i1l3948
  4647                           
  4648                           ;common.c: 108: {
  4649                           ;common.c: 109: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  4650  038A  1003               	clrc
  4651  038B  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4652  038C  3EA0               	addlw	_uiSampleChannelFirst& (0+255)
  4653  038D  23E4               	fcall	PL2	;call to abstracted procedure
  4654                           
  4655                           ;common.c: 111: ucChannelFirstLength++;
  4656  038E  0AFD               	incf	vPutSampleDataIntoTable@ucChannelFirstLength,f
  4657                           
  4658                           ;common.c: 112: }
  4659  038F  0008               	return
  4660  0390                     i1l3948:	
  4661                           
  4662                           ;common.c: 113: else
  4663                           ;common.c: 114: {
  4664                           ;common.c: 115: ucChannelFirstLength = 0;
  4665  0390  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  4666                           
  4667                           ;common.c: 117: uiSampleChannelFirst[ucChannelFirstLength] = uiSampleData;
  4668  0391  1003               	clrc
  4669  0392  0D7D               	rlf	vPutSampleDataIntoTable@ucChannelFirstLength,w
  4670  0393  3EA0               	addlw	_uiSampleChannelFirst& (0+255)
  4671  0394  23E4               	fcall	PL2	;call to abstracted procedure
  4672  0395  0008               	return
  4673  0396                     i1l3952:	
  4674                           
  4675                           ;common.c: 120: else if(channel == 4)
  4676  0396  0876               	movf	vPutSampleDataIntoTable@channel,w
  4677  0397  3A04               	xorlw	4
  4678  0398  1D03               	skipz
  4679  0399  2BAB               	goto	i1l3964
  4680                           
  4681                           ;common.c: 121: {
  4682                           ;common.c: 122: if(ucChannelFourthLength < 12)
  4683  039A  300C               	movlw	12
  4684  039B  1283               	bcf	3,5	;RP0=0, select bank0
  4685  039C  026E               	subwf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4686  039D  1803               	skipnc
  4687  039E  2BA5               	goto	i1l3960
  4688                           
  4689                           ;common.c: 123: {
  4690                           ;common.c: 124: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  4691  039F  1003               	clrc
  4692  03A0  0D6E               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4693  03A1  3ED0               	addlw	_uiSampleChannelFourth& (0+255)
  4694  03A2  23E4               	fcall	PL2	;call to abstracted procedure
  4695                           
  4696                           ;common.c: 126: ucChannelFourthLength++;
  4697  03A3  0AEE               	incf	vPutSampleDataIntoTable@ucChannelFourthLength,f
  4698                           
  4699                           ;common.c: 127: }
  4700  03A4  0008               	return
  4701  03A5                     i1l3960:	
  4702                           
  4703                           ;common.c: 128: else
  4704                           ;common.c: 129: {
  4705                           ;common.c: 130: ucChannelFourthLength = 0;
  4706  03A5  01EE               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  4707                           
  4708                           ;common.c: 132: uiSampleChannelFourth[ucChannelFourthLength] = uiSampleData;
  4709  03A6  1003               	clrc
  4710  03A7  0D6E               	rlf	vPutSampleDataIntoTable@ucChannelFourthLength,w
  4711  03A8  3ED0               	addlw	_uiSampleChannelFourth& (0+255)
  4712  03A9  23E4               	fcall	PL2	;call to abstracted procedure
  4713  03AA  0008               	return
  4714  03AB                     i1l3964:	
  4715                           
  4716                           ;common.c: 135: else if(channel == 14)
  4717  03AB  0876               	movf	vPutSampleDataIntoTable@channel,w
  4718  03AC  3A0E               	xorlw	14
  4719  03AD  1D03               	skipz
  4720  03AE  2BC0               	goto	i1l3976
  4721                           
  4722                           ;common.c: 136: {
  4723                           ;common.c: 137: if(ucChannelFourteenthLength < 12)
  4724  03AF  300C               	movlw	12
  4725  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  4726  03B1  026D               	subwf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4727  03B2  1803               	skipnc
  4728  03B3  2BBA               	goto	i1l3972
  4729                           
  4730                           ;common.c: 138: {
  4731                           ;common.c: 139: uiSampleChannelFourteenth[ucChannelFourteenthLength] = uiSampleData;
  4732  03B4  1003               	clrc
  4733  03B5  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4734  03B6  3EB8               	addlw	_uiSampleChannelFourteenth& (0+255)
  4735  03B7  23E4               	fcall	PL2	;call to abstracted procedure
  4736                           
  4737                           ;common.c: 141: ucChannelFourteenthLength++;
  4738  03B8  0AED               	incf	vPutSampleDataIntoTable@ucChannelFourteenthLength,f
  4739                           
  4740                           ;common.c: 142: }
  4741  03B9  0008               	return
  4742  03BA                     i1l3972:	
  4743                           
  4744                           ;common.c: 143: else
  4745                           ;common.c: 144: {
  4746                           ;common.c: 145: ucChannelFourteenthLength = 0;
  4747  03BA  01ED               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4748                           
  4749                           ;common.c: 147: uiSampleChannelFourth[ucChannelFourteenthLength] = uiSampleData;
  4750  03BB  1003               	clrc
  4751  03BC  0D6D               	rlf	vPutSampleDataIntoTable@ucChannelFourteenthLength,w
  4752  03BD  3ED0               	addlw	_uiSampleChannelFourth& (0+255)
  4753  03BE  23E4               	fcall	PL2	;call to abstracted procedure
  4754  03BF  0008               	return
  4755  03C0                     i1l3976:	
  4756                           
  4757                           ;common.c: 150: else
  4758                           ;common.c: 151: {
  4759                           ;common.c: 152: ucChannelFirstLength = 0;
  4760  03C0  01FD               	clrf	vPutSampleDataIntoTable@ucChannelFirstLength
  4761                           
  4762                           ;common.c: 154: ucChannelFourthLength = 0;
  4763  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  4764  03C2  01EE               	clrf	vPutSampleDataIntoTable@ucChannelFourthLength
  4765                           
  4766                           ;common.c: 156: ucChannelFourteenthLength = 0;
  4767  03C3  01ED               	clrf	vPutSampleDataIntoTable@ucChannelFourteenthLength
  4768                           
  4769                           ;common.c: 158: for(int i = 0;i < 12; i++)
  4770  03C4  01F7               	clrf	vPutSampleDataIntoTable@i
  4771  03C5  01F8               	clrf	vPutSampleDataIntoTable@i+1
  4772  03C6                     i1l3982:	
  4773                           
  4774                           ;common.c: 159: {
  4775                           ;common.c: 160: uiSampleChannelFirst[i] = 0;
  4776  03C6  1003               	clrc
  4777  03C7  0D77               	rlf	vPutSampleDataIntoTable@i,w
  4778  03C8  3EA0               	addlw	_uiSampleChannelFirst& (0+255)
  4779  03C9  0084               	movwf	4
  4780  03CA  1383               	bcf	3,7	;select IRP bank1
  4781                           
  4782                           ;common.c: 162: uiSampleChannelFourth[i] = 0;
  4783  03CB  23EC  118A         	fcall	PL4	;call to abstracted procedure
  4784                           
  4785                           ;common.c: 164: uiSampleChannelFourth[i] = 0;
  4786  03CD  23EC  118A         	fcall	PL4	;call to abstracted procedure
  4787  03CF  0180               	clrf	0
  4788  03D0  0A84               	incf	4,f
  4789  03D1  0180               	clrf	0
  4790  03D2  0AF7               	incf	vPutSampleDataIntoTable@i,f
  4791  03D3  1903               	skipnz
  4792  03D4  0AF8               	incf	vPutSampleDataIntoTable@i+1,f
  4793  03D5  0878               	movf	vPutSampleDataIntoTable@i+1,w
  4794  03D6  3A80               	xorlw	128
  4795  03D7  00FF               	movwf	127
  4796  03D8  3080               	movlw	128
  4797  03D9  027F               	subwf	127,w
  4798  03DA  1D03               	skipz
  4799  03DB  2BDE               	goto	u106_25
  4800  03DC  300C               	movlw	12
  4801  03DD  0277               	subwf	vPutSampleDataIntoTable@i,w
  4802  03DE                     u106_25:	
  4803  03DE  1803               	btfsc	3,0
  4804  03DF  0008               	return
  4805  03E0  2BC6               	goto	i1l3982
  4806  03E1                     __end_of_vPutSampleDataIntoTable:	
  4807  03E1                     __ptext707:	
  4808 ;; =============== function _ISR ends ============
  4809                           
  4810                           
  4811 ;; *************** function i1_setAD_ConvertFlag *****************
  4812 ;; Defined at:
  4813 ;;		line 206 in file "D:\develop\ATK\AK7030-OTP\common.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;  setAD_Conver    1    wreg     unsigned char 
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;  setAD_Conver    1    0[COMMON] unsigned char 
  4818 ;; Return value:  Size  Location     Type
  4819 ;;		None               void
  4820 ;; Registers used:
  4821 ;;		wreg
  4822 ;; Tracked objects:
  4823 ;;		On entry : 60/0
  4824 ;;		On exit  : 60/0
  4825 ;;		Unchanged: FFF9F/0
  4826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4827 ;;      Params:         0       0       0       0       0
  4828 ;;      Locals:         1       0       0       0       0
  4829 ;;      Temps:          0       0       0       0       0
  4830 ;;      Totals:         1       0       0       0       0
  4831 ;;Total ram usage:        1 bytes
  4832 ;; Hardware stack levels used:    1
  4833 ;; This function calls:
  4834 ;;		Nothing
  4835 ;; This function is called by:
  4836 ;;		_ISR
  4837 ;; This function uses a non-reentrant model
  4838 ;;
  4839  03E1                     i1_setAD_ConvertFlag:	
  4840                           
  4841                           ; Regs used in i1_setAD_ConvertFlag: [wreg]
  4842                           ;i1setAD_ConvertFlag@flag stored from wreg
  4843  03E1  00F0               	movwf	i1setAD_ConvertFlag@flag
  4844                           
  4845                           ;common.c: 207: adc_convert_flag = flag;
  4846  03E2  00D0               	movwf	_adc_convert_flag
  4847  03E3  0008               	return
  4848  03E4                     __end_ofi1_setAD_ConvertFlag:	
  4849  03E4                     PL2:	
  4850  03E4  0084               	movwf	4
  4851  03E5  0874               	movf	vPutSampleDataIntoTable@uiSampleData,w
  4852  03E6  1383               	bcf	3,7	;select IRP bank1
  4853  03E7  0080               	movwf	0
  4854  03E8  0A84               	incf	4,f
  4855  03E9  0875               	movf	vPutSampleDataIntoTable@uiSampleData+1,w
  4856  03EA  0080               	movwf	0
  4857  03EB  0008               	return
  4858  03EC                     PL4:	
  4859  03EC  0180               	clrf	0
  4860  03ED  0A84               	incf	4,f
  4861  03EE  0180               	clrf	0
  4862  03EF  1003               	clrc
  4863  03F0  0D77               	rlf	vPutSampleDataIntoTable@i,w
  4864  03F1  3ED0               	addlw	_uiSampleChannelFourth& (0+255)
  4865  03F2  0084               	movwf	4
  4866  03F3  0008               	return
  4867                           
  4868                           	psect	intentry
  4869  0004                     __pintentry:	
  4870                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4871                           
  4872  0004                     interrupt_function:	
  4873  007E                     saved_w	set	btemp
  4874  0004  00FE               	movwf	btemp
  4875  0005  0E03               	swapf	3,w
  4876  0006  00F9               	movwf	??_ISR
  4877  0007  0804               	movf	4,w
  4878  0008  00FA               	movwf	??_ISR+1
  4879  0009  080A               	movf	10,w
  4880  000A  00FB               	movwf	??_ISR+2
  4881  000B  1283               	bcf	3,5	;RP0=0, select bank0
  4882  000C  1303               	bcf	3,6	;RP1=0, select bank0
  4883  000D  087F               	movf	btemp+1,w
  4884  000E  00FC               	movwf	??_ISR+3
  4885  000F  118A  2B1E         	ljmp	_ISR
  4886                           
  4887                           	psect	text710
  4888  0000                     __ptext710:	
  4889 ;; =============== function _vPutSampleDataIntoTable ends ============
  4890                           
  4891  007E                     btemp	set	126	;btemp
  4892  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sun Jun 23 14:28:31 2019

                                  ??_clock_config 0020                                                 pc 0002  
                                              _GO 00F9                                                fsr 0004  
                        ?_timer1_interrupt_config 0070                                               l706 0061  
                                             l715 0078                                               l814 016A  
                                             l680 0000                                               l744 00F2  
                                             l914 02B2                                               l683 0000  
                                             l677 0000                                               l838 019E  
                                             l759 00F4                                               l859 01D1  
                                             l787 0130                                               l894 026C  
                                             l887 024E                                               _PA0 0028  
                                             _PA1 0029                                               _GIE 005F  
                                             _PB0 0030                                               _PA2 002A  
                                             _PB1 0031                                               _PA3 002B  
                                             _PA6 002E                                               _PA7 002F  
                                             _PB6 0036                                               _ISR 031E  
                                             u955 0428                                               u965 0451  
                                             u975 043B                                               fsr0 0004  
                                             indf 0000                            ??_startThreeHoursTimer 0022  
                                            S4820 0562                                              S4816 0546  
                                            S4818 0554                                              ?_ISR 0070  
                              __size_of_AD_Sample 001D                            ?_getAdOriginalCh1Value 0047  
                                            l1601 0000                                              l4010 04EA  
                                            l4002 0000                                              l4012 0000  
                                            l4100 0000                                              l1630 0000  
                                            l4006 04E3                                              l4110 0000  
                                            l4102 0000                                              l4008 04E7  
                                            l4200 00E4                                              l4120 004E  
                                            l4112 0040                                              l4104 0000  
                                            l1633 0000                                              l2362 0000  
                                            l1642 0000                                              l4130 005F  
                                            l4114 0000                                              l4106 0000  
                                            l1627 05AA                                              l1651 0000  
                                            l1636 0000                                              l1716 0000  
                                            l4212 00FC                                              l4204 00F0  
                                            l4140 0072                                              l4132 0062  
                                            l4124 005A                                              l4116 0000  
                                            l4108 0000                                              l2365 0000  
                                            l1645 0000                                              l2382 0000  
                                            l4070 04C5                                              l4062 0000  
                                            l4302 0148                                              l4206 00F5  
                                            l4150 0000                                              l4142 0074  
                                            l4126 005B                                              l1639 0000  
                                            l1680 0000                                              l2376 0000  
                                            l2368 0000                                              l4056 0513  
                                            l1648 0000                                              l4400 01AC  
                                            l4312 014E                                              l4216 00FE  
                                            l4208 00F7                                              l4160 0000  
                                            l4152 0082                                              l4144 0000  
                                            l4136 0067                                              l4128 0000  
                                            l4066 04BF                                              l4058 0000  
                                            l4074 0000                                              l4082 0000  
                                            l4410 01B2                                              l4322 0157  
                                            l4218 0100                                              l4170 00A2  
                                            l4162 0000                                              l4138 0000  
                                            l4090 0000                                              l1683 0000  
                                            l4068 0000                                              l4500 025D  
                                            l4420 01B9                                              l4340 0173  
                                            l4332 015E                                              l4228 0106  
                                            l4180 00B0                                              l4172 0000  
                                            l4164 0095                                              l4156 008E  
                                            l4148 007F                                              l4092 0000  
                                            l1693 0000                                              l1686 0000  
                                            l4078 0000                                              l4086 0000  
                                            l4510 0000                                              l4430 01C0  
                                            l4334 016C                                              l4270 0131  
                                            l4262 0122                                              l4238 010C  
                                            l4182 00B6                                              l4174 0000  
                                            l4158 008F                                              l4094 0000  
                                            l3800 0000                                              l4088 0000  
                                            l4512 0000                                              l4504 0000  
                                            l4432 01D5                                              l4344 0175  
                                            l4336 016E                                              l4280 013A  
                                            l4272 0133                                              l4248 0112  
                                            l4192 00CB                                              l4184 00B9  
                                            l4176 00A8                                              l4168 00A1  
                                            l4096 0000                                              l3802 0000  
                                            l3810 0000                                              l4530 0282  
                                            l4506 0000                                              l4514 0268  
                                            l4442 01DE                                              l4434 01D7  
                                            l4346 0177                                              l4282 013C  
                                            l4258 011C                                              l4186 00BC  
                                            l4178 0000                                              l4098 0000  
                                            l3804 0000                                              l3812 0000  
                                            l3820 0000                                              l3900 0000  
                                            l4540 0000                                              l4532 0000  
                                            l4524 0275                                              l4516 0000  
                                            l4508 0000                                              l4444 01E0  
                                            l4356 017D                                              l4292 0142  
                                            l4276 0138                                              l4268 0124  
                                            l4196 00D8                                              l4188 00BF  
                                            l3806 0000                                              l3814 0000  
                                            l3822 0000                                              l3830 0000  
                                            l3910 042D                                              l3902 0000  
                                            l4550 029E                                              l4534 0000  
                                            l4518 0000                                              l4470 020C  
                                            l4454 01E6                                              l4438 01DC  
                                            l4390 01A3                                              l4366 0183  
                                            l3808 0000                                              l3816 0000  
                                            l3824 0000                                              l3920 0470  
                                            l4560 02A7                                              l4552 0000  
                                            l4536 0000                                              l4544 0291  
                                            l4528 0281                                              l4480 022C  
                                            l4464 01ED                                              l4376 018B  
                                            l3818 0000                                              l3826 0000  
                                            l3842 0000                                              l3930 0000  
                                            l3922 0000                                              l4562 02C2  
                                            l4554 02A3                                              l4538 0000  
                                            l4490 0000                                              l4474 0000  
                                            l4394 01A8                                              l4386 0192  
                                            l3828 0504                                              l3844 0000  
                                            l3860 0000                                              l3932 0000  
                                            l3916 046E                                              l4580 02E4  
                                            l4572 0000                                              l4548 029D  
                                            l4484 0232                                              l4468 01FB  
                                            l4388 01A1                                              l3782 0000  
                                            l3790 0000                                              l3862 0000  
                                            l3918 042E                                              l4590 0000  
                                            l4574 02D7                                              l4566 02CE  
                                            l4486 0000                                              l4478 0225  
                                            l4398 01AA                                              l4494 023D  
                                            l3784 0000                                              l3792 0000  
                                            l3848 0000                                              l3936 0000  
                                            l4584 0000                                              l4568 02CF  
                                            l4496 0000                                              l4488 0000  
                                            l3786 051E                                              l3794 0000  
                                            l3874 0000                                              l3890 0000  
                                            l4594 02F7                                              l4586 0000  
                                            l4578 02E3                                              l4498 0000  
                                            l3788 0000                                              l3796 0000  
                                            l4588 0000                                              l3798 0000  
                                            l3878 0000                                              l4598 0302  
                                            _ADIE 046A                                              l3896 0411  
                                            l3992 0000                                              _ADIF 006A  
                                            l3898 0000                                              l3994 0000  
                                            l3988 0000                                              l3998 0000  
                                            _ADON 00F8                     startTwelveHourTimer@uiSetTime 0020  
                                            _PEIE 005E                                              _main 0013  
                                            btemp 007E                           _clearTwentySecondsTimer 051E  
                                            start 0011                           ?_getAdOriginalCh14Value 0047  
                               main@ucTimerDelay1 0062                                 main@ucTimerDelay2 0063  
                               main@ucTimerDelay3 0064                                 main@ucTimerDelay4 0065  
                                           ??_ISR 0079                        __end_of_isPermitSampleTime 05C1  
                             _sampleChannelSelect 006F                            ??_getAdOriginaCh4Value 0049  
                                           ?_main 0070                                             _DACR0 0088  
                                           _CLKPR 0108                                             _T1CON 0010  
                                 __end_of_adc_get 0384                                             _PAOD7 0C3F  
                                           _PBOD6 0C46                                             _TMR1H 000F  
                                           _TMR1L 000E                             setAD_ConvertFlag@flag 0020  
                         _vPutSampleDataIntoTable 0384                                   __end_of_initPin 0534  
                                           _timer 0052                                             pclath 000A  
                                           status 0003                                             wtemp0 007E  
                  __end_of_getAdOriginalCh14Value 0409                     __size_of_startTwelveHourTimer 0009  
                            __end_of_clrSampeTime 05CF                             __end_of_clearAllTimer 0518  
                                    __end_of_main 031E                            __size_of_adc_test_init 0015  
                               __end_of_AD_Sample 04EF                                            ??_main 0049  
                            _clearPinPortAndTimer 0507                                            _ADCON0 001F  
                                          _ADCON1 009F                              __end_of_clock_config 05AD  
                                          _DACCON 0087                                            _ADRESH 001E  
                                          _ADRESL 009E                                            _CLKPCE 0847  
                                          i1l4020 0000                                            i1l4022 0000  
                                          i1l4040 0000                                            i1l4016 0000  
                                          i1l4050 0000                                            i1l1642 0000  
                                          i1l4026 0000                                            i1l4034 0346  
                                          i1l1731 036C                                            i1l1723 0332  
                                          i1l4044 0358                                            i1l1724 033C  
                                          i1l4054 0000                                            i1l4046 0000  
                                          i1l4038 0000                                            i1l4048 0363  
                                          i1l2385 0000                                            u106_25 03DE  
                                          i1l3940 0000                                            i1l3950 0000  
                                          i1l3942 0000                                            i1l3960 03A5  
                                          i1l3952 0396                                            i1l3970 0000  
                                          i1l3962 0000                                            i1l3946 0000  
                                          i1l3972 03BA                                            i1l3964 03AB  
                                          i1l3948 0390                                            i1l3982 03C6  
                                          i1l3974 0000                                            i1l3958 0000  
                                          i1l3984 0000                                            i1l3976 03C0  
                                          i1l3986 0000                                  __end_of_dac_init 05C6  
                       ??_clearTwentySecondsTimer 0020                                            _TMR1IE 0460  
                                          _TMR1IF 0060                                 _getAD_ConvertFlag 04CB  
                               _setAD_ConvertFlag 04CF                                            _TRISA0 0428  
                                          _TRISA1 0429                                            _TRISB0 0430  
                                          _TRISA2 042A                                            _TRISB1 0431  
                                          _TRISA3 042B                                            _TRISB2 0432  
                                          _TRISB3 0433                                            _TRISB4 0434  
                                          _TRISA6 042E                                            _TRISB5 0435  
                                          _TRISA7 042F                                            _TRISB6 0436  
                                          _TRISB7 0437                                     main@ucTimer1s 005E  
                              ?_getAD_ConvertFlag 0070                                            _Filter 0409  
                              ?_setAD_ConvertFlag 0070                                  __end_of_op1_init 0579  
                                __end_of_op2_init 05A5                       ??_isFinishedThreeHoursTimer 0020  
                   __size_of_clearThreeHoursTimer 0003                                         ??_adc_get 0072  
                             ??_getAD_ConvertFlag 0020                               ??_setAD_ConvertFlag 0020  
                                          clrloop 0596                                  Filter@filter_buf 0026  
                                Filter@filter_sum 0040                                         ??_initPin 0020  
                       ??_vPutSampleDataIntoTable 0077                             ?_clearPinPortAndTimer 0070  
                                          saved_w 007E                           ??_clearTwelveHoursTimer 0020  
                     ?_process_AD_Converter_Value 0070                                     _adc_test_init 04EF  
                __size_of_startTwentySecondsTimer 0004                         __end_of_getAD_ConvertFlag 04CF  
                       __end_of_setAD_ConvertFlag 04D2                                __size_of_adc_start 0003  
                                  __pcstackCOMMON 0070                                      __pidataBANK0 0000  
                 __end_of_clearTwentySecondsTimer 0521                              _uiSampleChannelFirst 00A0  
                  vPutSampleDataIntoTable@channel 0076                               main@ucTimerRightP5s 0068  
                       _isFinishedThreeHoursTimer 05AD                           ??_getAdOriginalCh1Value 0049  
                           __end_of_timer1_config 0583                                    ?_adc_test_init 0020  
     vPutSampleDataIntoTable@ucChannelFirstLength 007D                  __size_of_timer1_interrupt_config 0003  
                           __size_of_clrSampeTime 0002                                        __pbssBANK0 0049  
                                      __pbssBANK1 00A0                      __size_ofi1_setAD_ConvertFlag 0003  
                                      adc_get@val 0072                   __end_of_vPutSampleDataIntoTable 03E1  
                                         ?_Filter 0020                                        __pmaintext 0013  
                                      __pintentry 0004                               main@enumInteralStep 0055  
                                       ?_dac_init 0070                            ??_clearPinPortAndTimer 0020  
                           __size_of_clock_config 0008                                           _OP1CON0 001B  
                                         _OP1CON1 001C                                           _OP1CON2 001D  
                                         _OP2CON0 009B                                           _OP2CON1 009C  
                                         _OP2CON2 009D                                      _clrSampeTime 05CD  
                               __end_of_adc_start 0507                              _uiTwentySecondsTimer 004D  
                                       ?_op1_init 0070                                         ?_op2_init 0070  
                              _isPermitSampleTime 05BC                                           Filter@i 0046  
                                         Filter@j 0045                     __size_of_startThreeHoursTimer 0009  
                      __size_of_getAD_ConvertFlag 0004                        __size_of_setAD_ConvertFlag 0003  
                                  main@ucTimer20s 005F                                    main@ucTimerP3s 0066  
                                  main@ucTimerP5s 0067                               ?_isPermitSampleTime 0070  
                                 __size_of_Filter 008E                                        _uiBigTimer 0049  
                                    _clock_config 05A5                                           _adc_get 0379  
            __end_of_isFinishedTwentySecondsTimer 05B7             __size_of_isFinishedTwentySecondsTimer 0005  
                    _isFinishedTwentySecondsTimer 05B2                              ??_isPermitSampleTime 0020  
                    __end_of_startTwelveHourTimer 0595                                        ??_dac_init 0020  
                                       _AD_Sample 04D2                                      __size_of_ISR 005B  
                                         _initPin 0521                     __size_of_getAdOriginaCh4Value 0007  
                                 ??_adc_test_init 0021                                        ??_op1_init 0020  
                                      ??_op2_init 0020                           _startTwentySecondsTimer 05C6  
                            end_of_initialization 0543                                 Filter@filter_temp 003E  
                                main@ucLoaderStep 0059                                        ?_AD_Sample 0070  
                   ?_isFinishedTwentySecondsTimer 0070                              main@enumMainLoopStep 0056  
                              main@ucChannel4Type 0058                      ??_isFinishedTwelveHoursTimer 0020  
                                       Filter@cir 0043                                  _adc_convert_flag 0050  
                          __size_of_clearAllTimer 0005                      __end_of_clearThreeHoursTimer 051E  
                          main@ucTimerADC1ZeroP5s 0060                    __size_of_clearTwelveHoursTimer 0003  
                         _timer1_interrupt_config 05CA                     __end_of_clearTwelveHoursTimer 051B  
              __size_of_isFinishedThreeHoursTimer 0005                                  main@ucTimerX1P5s 0069  
                                main@ucTimerX2P5s 006A                            main@ucTimerZeroPoint3s 006B  
                          main@ucTimerZeroPoint5s 006C                                  main@ucTimerDelay 0061  
                                  __end_of_Filter 0497                                   main@ucADC4_Step 0057  
             __size_of_isFinishedTwelveHoursTimer 0005                          vPutSampleDataIntoTable@i 0077  
                             i1_setAD_ConvertFlag 03E1                         ??_startTwentySecondsTimer 0020  
                             start_initialization 0534                                       __end_of_ISR 0379  
                           _uiSampleChannelFourth 00D0                          ?_clearTwentySecondsTimer 0070  
                  __size_of_getAdOriginalCh1Value 0007                     __end_of_getAdOriginalCh1Value 0402  
                        ??_getAdOriginalCh14Value 0049                              ?i1_setAD_ConvertFlag 0070  
                            _startTwelveHourTimer 058C                 __end_of_isFinishedThreeHoursTimer 05B2  
                              main@enumBranchStep 0054                                          ??_Filter 0022  
                                   _clearAllTimer 0513                                       __pdataBANK0 006F  
                        ?_vPutSampleDataIntoTable 0074                                       ??_AD_Sample 0020  
                       ??_timer1_interrupt_config 0020                                       __pbssCOMMON 007D  
                               __size_of_dac_init 0005                                     __pcstackBANK0 0020  
                  ??_isFinishedTwentySecondsTimer 0020                                         _adc_start 0504  
                               __size_of_op1_init 000B                                 __size_of_op2_init 0008  
                           ??i1_setAD_ConvertFlag 0070                             ?_startTwelveHourTimer 0020  
                 __end_of_startTwentySecondsTimer 05CA                                    ?_clearAllTimer 0070  
                          __size_of_timer1_config 000A                              _clearThreeHoursTimer 051B  
                    __end_of_startThreeHoursTimer 058C                                         __ptext700 0579  
                                       __ptext701 05A5                                         __ptext710 0000  
                                       __ptext702 0521                                         __ptext703 051E  
                                       __ptext704 051B                                         __ptext705 0518  
                                       __ptext706 031E                                         __ptext707 03E1  
                                       __ptext708 0379                                         __ptext709 0384  
                                       __ptext680 04AD                                         __ptext681 0513  
                                       __ptext690 05B7                                         __ptext682 04D2  
                                       __ptext691 058C                                         __ptext683 04CF  
                                       __ptext692 05CD                                         __ptext684 04CB  
                                       __ptext676 0507                                         __ptext693 05BC  
                                       __ptext685 0409                                         __ptext677 03F4  
                                       __ptext694 0504                                         __ptext686 05AD  
                                       __ptext678 03FB                                         __ptext695 059D  
                                       __ptext687 0583                                         __ptext679 0402  
                                       __ptext696 056E                                         __ptext688 05B2  
                                       __ptext697 05C1                                         __ptext689 05C6  
                                       __ptext698 04EF                                         __ptext699 05CA  
                                        ?_adc_get 0070                                         __pswtext1 0546  
                                       __pswtext2 0554                                         __pswtext3 0562  
              __end_of_isFinishedTwelveHoursTimer 05BC                        _isFinishedTwelveHoursTimer 05B7  
                                 ISR@ucTimer1sCnt 004F                                          ?_initPin 0070  
                   __size_of_clearPinPortAndTimer 000C                         _uiSampleChannelFourteenth 00B8  
                                      ?_adc_start 0070                   __size_of_getAdOriginalCh14Value 0007  
                               interrupt_function 0004                      __end_of_getAdOriginaCh4Value 03FB  
                 __end_of_timer1_interrupt_config 05CD                             ?_clearThreeHoursTimer 0070  
                            adc_test_init@channel 0022               vPutSampleDataIntoTable@uiSampleData 0074  
    vPutSampleDataIntoTable@ucChannelFourthLength 006E                       __size_of_isPermitSampleTime 0005  
                                    _uiSmallTimer 004B                             __end_of_adc_test_init 0504  
                                   _timer1_config 0579                      ??_process_AD_Converter_Value 0023  
                          ??_startTwelveHourTimer 0022                                   ??_clearAllTimer 0020  
                          _getAdOriginalCh14Value 0402                                  __size_of_adc_get 000B  
             __size_of_process_AD_Converter_Value 001E                                          _dac_init 05C1  
vPutSampleDataIntoTable@ucChannelFourteenthLength 006D                                  __size_of_initPin 0013  
                                main@cTimer1s_810 0053                                    Filter@tmpValue 0042  
                                  ?_timer1_config 0070                                          _op1_init 056E  
                                        _op2_init 059D                                       ??_adc_start 0020  
                            _startThreeHoursTimer 0583                             _clearTwelveHoursTimer 0518  
                                   __size_of_main 030B                                          clear_ram 0595  
                          ??_clearThreeHoursTimer 0020                  __size_of_clearTwentySecondsTimer 0003  
                                   ?_clrSampeTime 0070                              _getAdOriginaCh4Value 03F4  
                                     _sampleTimes 0051                             ?_startThreeHoursTimer 0020  
                __size_of_vPutSampleDataIntoTable 005D                                          intlevel1 0000  
                           _getAdOriginalCh1Value 03FB                        ?_isFinishedThreeHoursTimer 0070  
                               main@ucLoaderStep1 005A                                 main@ucLoaderStep2 005B  
                               main@ucLoaderStep3 005C                                 main@ucLoaderStep4 005D  
                                   ?_clock_config 0070                          ?_startTwentySecondsTimer 0070  
                   startThreeHoursTimer@uiSetTime 0020                           i1setAD_ConvertFlag@flag 0070  
                                  ??_clrSampeTime 0020                       ?_isFinishedTwelveHoursTimer 0070  
                           ?_getAdOriginaCh4Value 0047                                   ??_timer1_config 0020  
                     __end_ofi1_setAD_ConvertFlag 03E4                __end_of_process_AD_Converter_Value 04CB  
                      _process_AD_Converter_Value 04AD                            ?_clearTwelveHoursTimer 0070  
                                adc_test_init@ref 0020                      __end_of_clearPinPortAndTimer 0513  
